<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="vue">
    <body>
      <group id="vue">
        <trans-unit id="b8c7172f3cf1bf1a761d18229b15fde2a6261fa9" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2013&amp;ndash;present Yuxi Evan You</source>
          <target state="translated">&amp;copy; 2013 &amp;ndash; presente Yuxi Evan You</target>
        </trans-unit>
        <trans-unit id="b97356a77b6ffc38caada93b6cf0fe295416cc9e" translate="yes" xml:space="preserve">
          <source>&amp;hellip;as well as many smaller official &lt;a href=&quot;https://github.com/vuejs&quot;&gt;companion libraries&lt;/a&gt;.</source>
          <target state="translated">&amp;hellip; As&amp;iacute; como muchas &lt;a href=&quot;https://github.com/vuejs&quot;&gt;bibliotecas complementarias&lt;/a&gt; oficiales m&amp;aacute;s peque&amp;ntilde;as .</target>
        </trans-unit>
        <trans-unit id="eff4192dcc0805d6591a6a6cdb165cce361f146d" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Why would we force component names to use less natural language?&amp;rdquo;</source>
          <target state="translated">&quot;&amp;iquest;Por qu&amp;eacute; obligar&amp;iacute;amos a los nombres de los componentes a utilizar un lenguaje menos natural?&quot;</target>
        </trans-unit>
        <trans-unit id="3dbca386b3bf4c0c03ea3c64d065f726c26a64b7" translate="yes" xml:space="preserve">
          <source>1. Installation</source>
          <target state="translated">1.Instalación</target>
        </trans-unit>
        <trans-unit id="8964b933d266bc6ea7e3027896361049cfab4b4e" translate="yes" xml:space="preserve">
          <source>10. Form Input Bindings</source>
          <target state="translated">10.10.Encuadernación de los formularios de entrada</target>
        </trans-unit>
        <trans-unit id="b9a5886c311c7b0401052d6d6412c3df9478138b" translate="yes" xml:space="preserve">
          <source>11. Components Basics</source>
          <target state="translated">11.Componentes Básicos</target>
        </trans-unit>
        <trans-unit id="9e1218c8ec0a4684d8527f3b30752b2ccdda1718" translate="yes" xml:space="preserve">
          <source>12. Component Registration</source>
          <target state="translated">12.Registro de componentes</target>
        </trans-unit>
        <trans-unit id="e2f8aadf9a91551c04909b2a7ed9615524cd115b" translate="yes" xml:space="preserve">
          <source>13. Props</source>
          <target state="translated">13º puntal</target>
        </trans-unit>
        <trans-unit id="b82ef3573be9cc2fe18ab976bec8e18e03412fab" translate="yes" xml:space="preserve">
          <source>14. Custom Events</source>
          <target state="translated">14.Eventos personalizados</target>
        </trans-unit>
        <trans-unit id="d910a71e7ae47d83952f1d3e1b63e02b0402ccee" translate="yes" xml:space="preserve">
          <source>15. Slots</source>
          <target state="translated">15º puesto...</target>
        </trans-unit>
        <trans-unit id="6c967d0c8304615157e96973d0292b620e53f664" translate="yes" xml:space="preserve">
          <source>16. Dynamic &amp;amp; Async Components</source>
          <target state="translated">16. Componentes din&amp;aacute;micos y asincr&amp;oacute;nicos</target>
        </trans-unit>
        <trans-unit id="9c275abba821c6e0588340a5e0e40376f2e406cd" translate="yes" xml:space="preserve">
          <source>17. Handling Edge Cases</source>
          <target state="translated">17.Manejo de los casos de borde</target>
        </trans-unit>
        <trans-unit id="faa2211daf731c093bbdc5d6f04ee1e61cdaab78" translate="yes" xml:space="preserve">
          <source>18. Enter/Leave &amp;amp; List Transitions</source>
          <target state="translated">18. Transiciones de entrada / salida y lista</target>
        </trans-unit>
        <trans-unit id="2a2419fca4136af3c93e0857966a07747966e4b8" translate="yes" xml:space="preserve">
          <source>19. State Transitions</source>
          <target state="translated">19.Transiciones de Estado</target>
        </trans-unit>
        <trans-unit id="73f25bae7e053e89231ddc30bff222edbd0e367f" translate="yes" xml:space="preserve">
          <source>20. Mixins</source>
          <target state="translated">20.Mixins</target>
        </trans-unit>
        <trans-unit id="699f909d8d594e7ff956530e16ace7b55a03358f" translate="yes" xml:space="preserve">
          <source>21. Custom Directives</source>
          <target state="translated">21.Directivas aduaneras</target>
        </trans-unit>
        <trans-unit id="60d6452e1a1924d83cd5596509761e79f3863ac8" translate="yes" xml:space="preserve">
          <source>22. Render Functions &amp;amp; JSX</source>
          <target state="translated">22. Funciones de renderizado y JSX</target>
        </trans-unit>
        <trans-unit id="bec6f50c2ff413780baaa0915d1254fdd7fb847c" translate="yes" xml:space="preserve">
          <source>23. Plugins</source>
          <target state="translated">23.Plugins</target>
        </trans-unit>
        <trans-unit id="b728064106e62a6376b6b3ca966a5ec1cb7785fc" translate="yes" xml:space="preserve">
          <source>24. Filters</source>
          <target state="translated">24.filtros</target>
        </trans-unit>
        <trans-unit id="67a8b968f2a3387e367b56c7a54b238e7ca0866d" translate="yes" xml:space="preserve">
          <source>25. Single File Components</source>
          <target state="translated">25.Componentes de un solo archivo</target>
        </trans-unit>
        <trans-unit id="42078e213f52263ef4d08a363fbd525c2fcece33" translate="yes" xml:space="preserve">
          <source>26. Unit Testing</source>
          <target state="translated">26.Prueba de la unidad</target>
        </trans-unit>
        <trans-unit id="580a6d9842694c98cbe2ab49416f18bb1e659070" translate="yes" xml:space="preserve">
          <source>27. TypeScript Support</source>
          <target state="translated">27.Soporte de TypeScript</target>
        </trans-unit>
        <trans-unit id="6faa6b6ac924fea93632b44cbd364f9cd7e712f3" translate="yes" xml:space="preserve">
          <source>28. Production Deployment</source>
          <target state="translated">28.Despliegue de la producción</target>
        </trans-unit>
        <trans-unit id="84abccad514ba03d3e5079c5c4d1d55a32bf53a9" translate="yes" xml:space="preserve">
          <source>29. Routing</source>
          <target state="translated">29.Enrutamiento</target>
        </trans-unit>
        <trans-unit id="cc829e856a51b840c7cc2a5cdfd95d3491ff0ba1" translate="yes" xml:space="preserve">
          <source>3. The Vue Instance</source>
          <target state="translated">3.La instancia de Vue</target>
        </trans-unit>
        <trans-unit id="d00b5152c73d6d149b0981c2f8243352bc147acf" translate="yes" xml:space="preserve">
          <source>30. State Management</source>
          <target state="translated">30.Gestión del Estado</target>
        </trans-unit>
        <trans-unit id="b6429ebb7b452c14364705bceb98a6993124fa08" translate="yes" xml:space="preserve">
          <source>31. Server-Side Rendering</source>
          <target state="translated">31ª representación del lado del servidor</target>
        </trans-unit>
        <trans-unit id="05c5743ac40d4671baf7c74ddec425f43cc60c5c" translate="yes" xml:space="preserve">
          <source>32. Reactivity in Depth</source>
          <target state="translated">32.Reactividad en profundidad</target>
        </trans-unit>
        <trans-unit id="1d2180d5f0cfee1568a6c1ea885be149c73b2c9b" translate="yes" xml:space="preserve">
          <source>33. Migration from Vue 1.x</source>
          <target state="translated">33.Migración desde el Vue 1.x</target>
        </trans-unit>
        <trans-unit id="5390b18d7effc1031fdb531adf7031ed76936054" translate="yes" xml:space="preserve">
          <source>34. Migration from Vue Router 0.7.x</source>
          <target state="translated">34.Migración desde el Vue Router 0.7.x</target>
        </trans-unit>
        <trans-unit id="76884682b4af0e44f1ffd32c984cf3cd73c5c306" translate="yes" xml:space="preserve">
          <source>35. Migration from Vuex 0.6.x to 1.0</source>
          <target state="translated">35.Migración de Vuex 0.6.x a 1.0</target>
        </trans-unit>
        <trans-unit id="4b1b3e3b6224147e7f5d89f67ee3ae82e8c71180" translate="yes" xml:space="preserve">
          <source>36. Comparison with Other Frameworks</source>
          <target state="translated">36.Comparación con otros marcos</target>
        </trans-unit>
        <trans-unit id="36f6e824946359fdef7a63d5046de288f4c01ea2" translate="yes" xml:space="preserve">
          <source>37. Join the Vue.js Community!</source>
          <target state="translated">37.¡Únete a la comunidad Vue.js!</target>
        </trans-unit>
        <trans-unit id="c0ac8db35605bf4fc8e68109c9e46fadaff9f8d6" translate="yes" xml:space="preserve">
          <source>3rd-party UI components.</source>
          <target state="translated">Componentes de UI de terceros.</target>
        </trans-unit>
        <trans-unit id="a9c179dae7db7b392dd9a6049dfad4a7634acb24" translate="yes" xml:space="preserve">
          <source>4. Template Syntax</source>
          <target state="translated">4.sintaxis de la plantilla</target>
        </trans-unit>
        <trans-unit id="27f7ce4b8acce3d493a977c09473e336fd2af2e3" translate="yes" xml:space="preserve">
          <source>5. Computed Properties and Watchers</source>
          <target state="translated">5.Propiedades computarizadas y observadores</target>
        </trans-unit>
        <trans-unit id="adc7977c2ddba6d92894c433ab24ceb3e9573c1d" translate="yes" xml:space="preserve">
          <source>6. Class and Style Bindings</source>
          <target state="translated">6.Clase y estilo de encuadernación</target>
        </trans-unit>
        <trans-unit id="d5b9c86d96711a24d3868259412d32ec0a2f74f4" translate="yes" xml:space="preserve">
          <source>7. Conditional Rendering</source>
          <target state="translated">7.Rendición condicional</target>
        </trans-unit>
        <trans-unit id="ef2a0e262fc4215ab0bfa1c909d4d2e29df6e47c" translate="yes" xml:space="preserve">
          <source>8. List Rendering</source>
          <target state="translated">8.Renderización de la lista</target>
        </trans-unit>
        <trans-unit id="41ef0a9157fa7065ed58edc6614faa2eb0f0008f" translate="yes" xml:space="preserve">
          <source>9. Event Handling</source>
          <target state="translated">9.Manejo de eventos</target>
        </trans-unit>
        <trans-unit id="887554d77a246d3737dd86e656072601c935f967" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#Transition-Modes&quot;&gt;Transition modes&lt;/a&gt; are not available, because we are no longer alternating between mutually exclusive elements.</source>
          <target state="translated">&lt;a href=&quot;#Transition-Modes&quot;&gt;Los modos de transici&amp;oacute;n&lt;/a&gt; no est&amp;aacute;n disponibles porque ya no estamos alternando entre elementos mutuamente excluyentes.</target>
        </trans-unit>
        <trans-unit id="8946b6378480cdcb83f37bafcdb51528405184b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../guide/components-slots#Abbreviated-Syntax-for-Lone-Default-Slots&quot;&gt;components&lt;/a&gt; (for a lone default slot with props)</source>
          <target state="translated">&lt;a href=&quot;../guide/components-slots#Abbreviated-Syntax-for-Lone-Default-Slots&quot;&gt;componentes&lt;/a&gt; (para una &amp;uacute;nica ranura predeterminada con accesorios)</target>
        </trans-unit>
        <trans-unit id="5ea416a3156c7da0f6ead07af8d4bead22fed303" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../guide/forms#lazy&quot;&gt;&lt;code&gt;.lazy&lt;/code&gt;&lt;/a&gt; - listen to &lt;code&gt;change&lt;/code&gt; events instead of &lt;code&gt;input&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../guide/forms#lazy&quot;&gt; &lt;code&gt;.lazy&lt;/code&gt; &lt;/a&gt; : escucha loseventos de &lt;code&gt;change&lt;/code&gt; lugar de la &lt;code&gt;input&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c200fcd86955d47b04f4c437e92ab0c7d16a07d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../guide/forms#number&quot;&gt;&lt;code&gt;.number&lt;/code&gt;&lt;/a&gt; - cast valid input string to numbers</source>
          <target state="translated">&lt;a href=&quot;../guide/forms#number&quot;&gt; &lt;code&gt;.number&lt;/code&gt; &lt;/a&gt; : convierte una cadena de entrada v&amp;aacute;lida en n&amp;uacute;meros</target>
        </trans-unit>
        <trans-unit id="023e9430bafd9961c9b01baf8909eff9ec8e9416" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../guide/forms#trim&quot;&gt;&lt;code&gt;.trim&lt;/code&gt;&lt;/a&gt; - trim input</source>
          <target state="translated">&lt;a href=&quot;../guide/forms#trim&quot;&gt; &lt;code&gt;.trim&lt;/code&gt; &lt;/a&gt; - entrada de recorte</target>
        </trans-unit>
        <trans-unit id="38cbf480746340dd9a2787f3854345127a766612" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;components#Form-Input-Components-using-Custom-Events&quot;&gt;Custom input components&lt;/a&gt; (using component events)</source>
          <target state="translated">&lt;a href=&quot;components#Form-Input-Components-using-Custom-Events&quot;&gt;Componentes de entrada personalizados&lt;/a&gt; (usando eventos de componentes)</target>
        </trans-unit>
        <trans-unit id="a1007e9c3919c707510c9682a8e8008286b6d951" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://chat.vuejs.org/&quot;&gt;Chat&lt;/a&gt;: A place for Vue devs to meet and chat in real time.</source>
          <target state="translated">&lt;a href=&quot;https://chat.vuejs.org/&quot;&gt;Chat&lt;/a&gt; : un lugar para que los desarrolladores de Vue se re&amp;uacute;nan y conversen en tiempo real.</target>
        </trans-unit>
        <trans-unit id="b81d139f6b2fd0485b15a6de8e676f9a6ad01aa8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://cli.vuejs.org&quot;&gt;Vue CLI&lt;/a&gt; provides built-in TypeScript tooling support.</source>
          <target state="translated">&lt;a href=&quot;https://cli.vuejs.org&quot;&gt;Vue CLI&lt;/a&gt; proporciona compatibilidad con herramientas TypeScript incorporadas.</target>
        </trans-unit>
        <trans-unit id="64cdcc93f712af397e60ea4aa0e435155a0b6061" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://cli.vuejs.org/&quot;&gt;Vue CLI&lt;/a&gt; has built-in options for unit testing with &lt;a href=&quot;https://github.com/facebook/jest&quot;&gt;Jest&lt;/a&gt; or &lt;a href=&quot;https://mochajs.org/&quot;&gt;Mocha&lt;/a&gt; that works out of the box. We also have the official &lt;a href=&quot;https://vue-test-utils.vuejs.org/&quot;&gt;Vue Test Utils&lt;/a&gt; which provides more detailed guidance for custom setups.</source>
          <target state="translated">&lt;a href=&quot;https://cli.vuejs.org/&quot;&gt;Vue CLI&lt;/a&gt; tiene opciones integradas para pruebas unitarias con &lt;a href=&quot;https://github.com/facebook/jest&quot;&gt;Jest&lt;/a&gt; o &lt;a href=&quot;https://mochajs.org/&quot;&gt;Mocha&lt;/a&gt; que funcionan desde el primer momento. Tambi&amp;eacute;n contamos con &lt;a href=&quot;https://vue-test-utils.vuejs.org/&quot;&gt;Vue Test Utils,&lt;/a&gt; que proporciona una gu&amp;iacute;a m&amp;aacute;s detallada para configuraciones personalizadas.</target>
        </trans-unit>
        <trans-unit id="0be741d1b1ffd6bc7f49eb600d14f94b06b2f400" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://events.vuejs.org/meetups&quot;&gt;Meetups&lt;/a&gt;: Want to find local Vue.js enthusiasts like yourself? Interested in becoming a community leader? We have the help and support you need right here!</source>
          <target state="translated">&lt;a href=&quot;https://events.vuejs.org/meetups&quot;&gt;Meetups&lt;/a&gt; : &amp;iquest;Quieres encontrar entusiastas locales de Vue.js como t&amp;uacute;? &amp;iquest;Interesado en convertirse en un l&amp;iacute;der comunitario? &amp;iexcl;Tenemos la ayuda y el apoyo que necesita aqu&amp;iacute; mismo!</target>
        </trans-unit>
        <trans-unit id="5e414217ab56b454e3a38cc1e8d16f3eba5f33e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://forum.vuejs.org/&quot;&gt;Forum&lt;/a&gt;: The best place to ask questions and get answers about Vue and its ecosystem.</source>
          <target state="translated">&lt;a href=&quot;https://forum.vuejs.org/&quot;&gt;Foro&lt;/a&gt; : el mejor lugar para hacer preguntas y obtener respuestas sobre Vue y su ecosistema.</target>
        </trans-unit>
        <trans-unit id="c96b36e4b4daac6ceb112f942cf30b81b67655e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://forum.vuejs.org/c/show-and-tell&quot;&gt;The &amp;ldquo;Show and Tell&amp;rdquo; Subforum&lt;/a&gt;: Another great place to check out what others have built with and for the growing Vue ecosystem.</source>
          <target state="translated">&lt;a href=&quot;https://forum.vuejs.org/c/show-and-tell&quot;&gt;El subforo &quot;Show and Tell&quot;&lt;/a&gt; : otro gran lugar para ver lo que otros han construido con y para el creciente ecosistema de Vue.</target>
        </trans-unit>
        <trans-unit id="5c9416e3d56f054156a5b07bec2cb3af739416db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/vuejs&quot;&gt;GitHub&lt;/a&gt;: If you have a bug to report or feature to request, that&amp;rsquo;s what the GitHub issues are for. We also welcome pull requests!</source>
          <target state="translated">&lt;a href=&quot;https://github.com/vuejs&quot;&gt;GitHub&lt;/a&gt; : si tiene un error que informar o una funci&amp;oacute;n que solicitar, para eso est&amp;aacute;n los problemas de GitHub. &amp;iexcl;Tambi&amp;eacute;n aceptamos solicitudes de extracci&amp;oacute;n!</target>
        </trans-unit>
        <trans-unit id="abb3c60b38a18d98149dafcd5aa19f6e72eb6052" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/vuejs/awesome-vue&quot;&gt;The Awesome Vue Page&lt;/a&gt;: See what other awesome resources have been published by other awesome people.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/vuejs/awesome-vue&quot;&gt;La p&amp;aacute;gina Awesome Vue&lt;/a&gt; : vea qu&amp;eacute; otros recursos incre&amp;iacute;bles han sido publicados por otras personas incre&amp;iacute;bles.</target>
        </trans-unit>
        <trans-unit id="80b87ee67a7a910f0b54aaf316865d862fd01c83" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/vuejs/vue&quot;&gt;vue&lt;/a&gt;: the core library</source>
          <target state="translated">&lt;a href=&quot;https://github.com/vuejs/vue&quot;&gt;vue&lt;/a&gt; : la biblioteca central</target>
        </trans-unit>
        <trans-unit id="300fc9a9c559ca1e6d722017a96838529709653b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/vuejs/vue-cli&quot;&gt;Vue CLI 3&lt;/a&gt; can generate new projects that use TypeScript. To get started:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/vuejs/vue-cli&quot;&gt;Vue CLI 3&lt;/a&gt; puede generar nuevos proyectos que usan TypeScript. Para empezar:</target>
        </trans-unit>
        <trans-unit id="751e6e361e84ac596e6497fe8b6af4793ea2ed5c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/vuejs/vue-router&quot;&gt;vue-router&lt;/a&gt;: a routing system for SPAs</source>
          <target state="translated">&lt;a href=&quot;https://github.com/vuejs/vue-router&quot;&gt;vue-router&lt;/a&gt; : un sistema de enrutamiento para SPA</target>
        </trans-unit>
        <trans-unit id="1c040bcb32d8345e9b906fa42b87e6d805594532" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/vuejs/vuex&quot;&gt;vuex&lt;/a&gt;: Flux-inspired state management</source>
          <target state="translated">&lt;a href=&quot;https://github.com/vuejs/vuex&quot;&gt;vuex&lt;/a&gt; : gesti&amp;oacute;n de estados inspirada en Flux</target>
        </trans-unit>
        <trans-unit id="3512a9d95784d66e813e4d16e5ebb712f869e615" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://quasar.dev&quot;&gt;Quasar Framework&lt;/a&gt; will generate an SSR app (with optional PWA handoff) that leverages its best-in-class build system, sensible configuration and developer extensibility to make designing and building your idea a breeze. With over one hundred specific &amp;ldquo;Material Design 2.0&amp;rdquo;-compliant components, you can decide which ones to execute on the server, which are available in the browser - and even manage the &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tags of your site. Quasar is a node.js and webpack based development environment that supercharges and streamlines rapid development of SPA, PWA, SSR, Electron and Cordova apps - all from one codebase.</source>
          <target state="translated">&lt;a href=&quot;https://quasar.dev&quot;&gt;Quasar Framework&lt;/a&gt; generar&amp;aacute; una aplicaci&amp;oacute;n SSR (con transferencia de PWA opcional) que aprovecha su sistema de compilaci&amp;oacute;n, el mejor en su clase, la configuraci&amp;oacute;n sensible y la extensibilidad del desarrollador para facilitar el dise&amp;ntilde;o y la construcci&amp;oacute;n de su idea. Con m&amp;aacute;s de cien componentes espec&amp;iacute;ficos compatibles con &amp;ldquo;Material Design 2.0&amp;rdquo;, puede decidir cu&amp;aacute;les ejecutar en el servidor, cu&amp;aacute;les est&amp;aacute;n disponibles en el navegador, e incluso administrar las etiquetas &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; de su sitio. Quasar es un entorno de desarrollo basado en node.js y webpack que potencia y agiliza el r&amp;aacute;pido desarrollo de las aplicaciones SPA, PWA, SSR, Electron y Cordova, todo desde una base de c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="01ff36f1a4078703622b4159aba4fe89d233aa39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://router.vuejs.org/en/essentials/nested-routes.html&quot;&gt;Renamed to &lt;code&gt;children&lt;/code&gt;&lt;/a&gt; for consistency within Vue and with other routing libraries.</source>
          <target state="translated">&lt;a href=&quot;https://router.vuejs.org/en/essentials/nested-routes.html&quot;&gt;Renombrado a &lt;code&gt;children&lt;/code&gt; &lt;/a&gt; para mayor coherencia dentro de Vue y con otras bibliotecas de enrutamiento.</target>
        </trans-unit>
        <trans-unit id="e4851d6df302005b75be1afa213e677baac7da98" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://vue-loader.vuejs.org/en/configurations/extract-css.html&quot;&gt;Webpack + vue-loader&lt;/a&gt; (the &lt;code&gt;vue-cli&lt;/code&gt; webpack template has this pre-configured)</source>
          <target state="translated">&lt;a href=&quot;https://vue-loader.vuejs.org/en/configurations/extract-css.html&quot;&gt;Webpack + vue-loader&lt;/a&gt; (la plantilla de paquete web &lt;code&gt;vue-cli&lt;/code&gt; tiene esto preconfigurado)</target>
        </trans-unit>
        <trans-unit id="29e0a9da24e832469f04f345d462ff4a580fd3dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://vuejs.org/js/vue.js&quot;&gt;Development Version&lt;/a&gt;With full warnings and debug mode</source>
          <target state="translated">&lt;a href=&quot;https://vuejs.org/js/vue.js&quot;&gt;Versi&amp;oacute;n de desarrollo&lt;/a&gt; con advertencias completas y modo de depuraci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="c5535548f8b3427b8379f5165f127b54b02c7ab9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://vuejs.org/js/vue.min.js&quot;&gt;Production Version&lt;/a&gt;Warnings stripped, 33.30KB min+gzip</source>
          <target state="translated">&lt;a href=&quot;https://vuejs.org/js/vue.min.js&quot;&gt;&lt;/a&gt;Eliminaci&amp;oacute;n de las advertencias de la versi&amp;oacute;n de producci&amp;oacute;n , 33,30 KB min + gzip</target>
        </trans-unit>
        <trans-unit id="337e7a73326212a8fb1169c963d8c533ca85517e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.jetbrains.com/webstorm/&quot;&gt;WebStorm&lt;/a&gt; also provides out-of-the-box support for both TypeScript and Vue.</source>
          <target state="translated">&lt;a href=&quot;https://www.jetbrains.com/webstorm/&quot;&gt;WebStorm&lt;/a&gt; tambi&amp;eacute;n proporciona soporte listo para usar tanto para TypeScript como para Vue.</target>
        </trans-unit>
        <trans-unit id="67e14888fa6900e7c0f6f9d94307057f36ccec73" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;single-file-components&quot;&gt;Single-file components&lt;/a&gt; give you full access to CSS in the same file as the rest of your component code.</source>
          <target state="translated">&lt;a href=&quot;single-file-components&quot;&gt;Los componentes de un solo archivo le&lt;/a&gt; brindan acceso completo a CSS en el mismo archivo que el resto del c&amp;oacute;digo de su componente.</target>
        </trans-unit>
        <trans-unit id="f26d35f481df6103bff19f2ad4d7131ce1e33f29" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syntax#Dynamic-Arguments&quot;&gt;Dynamic directive arguments&lt;/a&gt; also work on &lt;code&gt;v-slot&lt;/code&gt;, allowing the definition of dynamic slot names:</source>
          <target state="translated">&lt;a href=&quot;syntax#Dynamic-Arguments&quot;&gt;Los argumentos de la directiva din&amp;aacute;mica&lt;/a&gt; tambi&amp;eacute;n funcionan en &lt;code&gt;v-slot&lt;/code&gt; , lo que permite la definici&amp;oacute;n de nombres de slots din&amp;aacute;micos:</target>
        </trans-unit>
        <trans-unit id="b4596cc5b9345e4e289feda6ade9a9fb167d3329" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$dispatch&lt;/code&gt; and &lt;code&gt;$broadcast&lt;/code&gt; have been removed in favor of more explicitly cross-component communication and more maintainable state management solutions, such as &lt;a href=&quot;https://github.com/vuejs/vuex&quot;&gt;Vuex&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;$dispatch&lt;/code&gt; y &lt;code&gt;$broadcast&lt;/code&gt; se han eliminado a favor de una comunicaci&amp;oacute;n entre componentes m&amp;aacute;s expl&amp;iacute;cita y soluciones de gesti&amp;oacute;n de estado m&amp;aacute;s &lt;a href=&quot;https://github.com/vuejs/vuex&quot;&gt;f&amp;aacute;ciles de&lt;/a&gt; mantener, como Vuex .</target>
        </trans-unit>
        <trans-unit id="b9df513f27287d2cbd9f8eeee5d59a0830e2c785" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$dispatch&lt;/code&gt; and &lt;code&gt;$broadcast&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;$dispatch&lt;/code&gt; y &lt;code&gt;$broadcast&lt;/code&gt; &lt;sup&gt;reemplazados&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="a02a3e7f3affe28368061200607ab7b786ff99fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$index&lt;/code&gt; and &lt;code&gt;$key&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;$index&lt;/code&gt; y &lt;code&gt;$key&lt;/code&gt; &lt;sup&gt;eliminados&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="1b8adbcd7512814d9fbda4acfcab046b0389a588" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$loadingRouteData&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;$loadingRouteData&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="1a490a2f98a9e5f3ab213674b7298ee7ab9650fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$refs&lt;/code&gt; are only populated after the component has been rendered, and they are not reactive. It is only meant as an escape hatch for direct child manipulation - you should avoid accessing &lt;code&gt;$refs&lt;/code&gt; from within templates or computed properties.</source>
          <target state="translated">&lt;code&gt;$refs&lt;/code&gt; solo se completan despu&amp;eacute;s de que se haya renderizado el componente y no son reactivos. Solo est&amp;aacute; pensado como una trampilla de escape para la manipulaci&amp;oacute;n directa de ni&amp;ntilde;os; debe evitar acceder a &lt;code&gt;$refs&lt;/code&gt; desde plantillas o propiedades calculadas.</target>
        </trans-unit>
        <trans-unit id="17360df2a21784e7baa79c00ee25d94dc3e5e1db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;MyComponent&amp;gt;&lt;/code&gt; is more visually distinct from a single-word HTML element than &lt;code&gt;&amp;lt;my-component&amp;gt;&lt;/code&gt;, because there are two character differences (the two capitals), rather than just one (a hyphen).</source>
          <target state="translated">&lt;code&gt;&amp;lt;MyComponent&amp;gt;&lt;/code&gt; es m&amp;aacute;s distinto visualmente de un elemento HTML de una sola palabra que &lt;code&gt;&amp;lt;my-component&amp;gt;&lt;/code&gt; , porque hay dos diferencias de caracteres (las dos may&amp;uacute;sculas), en lugar de solo una (un gui&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="5ad5a72f9bad4c883a1756da31bc27b2bf763afd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;keep-alive&amp;gt;&lt;/code&gt; does not work with functional components because they do not have instances to be cached.</source>
          <target state="translated">&lt;code&gt;&amp;lt;keep-alive&amp;gt;&lt;/code&gt; no funciona con componentes funcionales porque no tienen instancias para almacenar en cach&amp;eacute;.</target>
        </trans-unit>
        <trans-unit id="fb5ff78ead8103430d48c91d11828664d4eb8529" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; Component</source>
          <target state="translated">&lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; Componente</target>
        </trans-unit>
        <trans-unit id="754a5514704ba7d95c72e60de080ff4cbfe9b03c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; serve as content distribution outlets in component templates. &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; itself will be replaced.</source>
          <target state="translated">&lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; sirven como salidas de distribuci&amp;oacute;n de contenido en plantillas de componentes. &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; en s&amp;iacute; mismo ser&amp;aacute; reemplazado.</target>
        </trans-unit>
        <trans-unit id="fd3460ee10fda9968704c874e028ee9c9d85eb87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;transition&amp;gt;&lt;/code&gt; serve as transition effects for &lt;strong&gt;single&lt;/strong&gt; element/component. The &lt;code&gt;&amp;lt;transition&amp;gt;&lt;/code&gt; only applies the transition behavior to the wrapped content inside; it doesn&amp;rsquo;t render an extra DOM element, or show up in the inspected component hierarchy.</source>
          <target state="translated">&lt;code&gt;&amp;lt;transition&amp;gt;&lt;/code&gt; sirven como efectos de transici&amp;oacute;n para un &lt;strong&gt;solo&lt;/strong&gt; elemento / componente. La &lt;code&gt;&amp;lt;transition&amp;gt;&lt;/code&gt; solo aplica el comportamiento de transici&amp;oacute;n al contenido envuelto dentro; no representa un elemento DOM adicional ni aparece en la jerarqu&amp;iacute;a de componentes inspeccionados.</target>
        </trans-unit>
        <trans-unit id="601c0bdee882413efd2e4cb3b22d4d10cbefc8e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;transition-group&amp;gt;&lt;/code&gt; serve as transition effects for &lt;strong&gt;multiple&lt;/strong&gt; elements/components. The &lt;code&gt;&amp;lt;transition-group&amp;gt;&lt;/code&gt; renders a real DOM element. By default it renders a &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;, and you can configure what element it should render via the &lt;code&gt;tag&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;code&gt;&amp;lt;transition-group&amp;gt;&lt;/code&gt; sirven como efectos de transici&amp;oacute;n para &lt;strong&gt;m&amp;uacute;ltiples&lt;/strong&gt; elementos / componentes. El &lt;code&gt;&amp;lt;transition-group&amp;gt;&lt;/code&gt; representa un elemento DOM real. De forma predeterminada, representa un &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; , y puede configurar qu&amp;eacute; elemento debe representar a trav&amp;eacute;s del atributo de &lt;code&gt;tag&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="314e94a40fc34e60d66778b7574c27f73dcda8c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;transition-group&amp;gt;&lt;/code&gt; supports moving transitions via CSS transform. When a child&amp;rsquo;s position on screen has changed after an update, it will get applied a moving CSS class (auto generated from the &lt;code&gt;name&lt;/code&gt; attribute or configured with the &lt;code&gt;move-class&lt;/code&gt; attribute). If the CSS &lt;code&gt;transform&lt;/code&gt; property is &amp;ldquo;transition-able&amp;rdquo; when the moving class is applied, the element will be smoothly animated to its destination using the &lt;a href=&quot;https://aerotwist.com/blog/flip-your-animations/&quot;&gt;FLIP technique&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;transition-group&amp;gt;&lt;/code&gt; admite transiciones en movimiento a trav&amp;eacute;s de la transformaci&amp;oacute;n CSS. Cuando la posici&amp;oacute;n de un ni&amp;ntilde;o en la pantalla ha cambiado despu&amp;eacute;s de una actualizaci&amp;oacute;n, se le aplicar&amp;aacute; una clase CSS m&amp;oacute;vil (generada autom&amp;aacute;ticamente a partir del atributo de &lt;code&gt;name&lt;/code&gt; o configurada con el atributo &lt;code&gt;move-class&lt;/code&gt; ). Si la propiedad de &lt;code&gt;transform&lt;/code&gt; aci&amp;oacute;n CSS es &quot;transitable&quot; cuando se aplica la clase m&amp;oacute;vil, el elemento se animar&amp;aacute; suavemente a su destino utilizando la &lt;a href=&quot;https://aerotwist.com/blog/flip-your-animations/&quot;&gt;t&amp;eacute;cnica FLIP&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6c00a8b928abe34d7a7f1b9f5e2b25ebd1086026" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.camel&lt;/code&gt; - (2.1.0+) transform the kebab-case attribute name into camelCase.</source>
          <target state="translated">&lt;code&gt;.camel&lt;/code&gt; - (2.1.0+) transforma el nombre del atributo kebab-case en camelCase.</target>
        </trans-unit>
        <trans-unit id="9dceac4770a7de5ffea14046254eba930256fbed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.camel&lt;/code&gt; is not needed if you are using string templates, or compiling with &lt;code&gt;vue-loader&lt;/code&gt;/&lt;code&gt;vueify&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.camel&lt;/code&gt; no es necesario si est&amp;aacute; utilizando plantillas de cadenas o compilando con &lt;code&gt;vue-loader&lt;/code&gt; / &lt;code&gt;vueify&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ca6853c74e60fbdfd6bc9cfbeaa937afdb3c355f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.capture.once&lt;/code&gt; or</source>
          <target state="translated">&lt;code&gt;.capture.once&lt;/code&gt; o</target>
        </trans-unit>
        <trans-unit id="50ccbc62c0da3fc09eaf7e9a40f41bfbf617291a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.capture&lt;/code&gt; - add event listener in capture mode.</source>
          <target state="translated">&lt;code&gt;.capture&lt;/code&gt; : agrega un detector de eventos en el modo de captura.</target>
        </trans-unit>
        <trans-unit id="14178abc5893d92cb0150e7efd2653cb3de2b369" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.ctrl&lt;/code&gt;, &lt;code&gt;.alt&lt;/code&gt;, &lt;code&gt;.shift&lt;/code&gt;, &lt;code&gt;.meta&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.ctrl&lt;/code&gt; , &lt;code&gt;.alt&lt;/code&gt; , &lt;code&gt;.shift&lt;/code&gt; , &lt;code&gt;.meta&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ad2e539407e865c551fc08fb1120b4cc3c1408a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.delete&lt;/code&gt; (captures both &amp;ldquo;Delete&amp;rdquo; and &amp;ldquo;Backspace&amp;rdquo; keys)</source>
          <target state="translated">&lt;code&gt;.delete&lt;/code&gt; (captura las teclas &quot;Eliminar&quot; y &quot;Retroceso&quot;)</target>
        </trans-unit>
        <trans-unit id="c2c32812bb18df5be26d1998fa20e93efbc28dc7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.enter&lt;/code&gt;, &lt;code&gt;.13&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.enter&lt;/code&gt; , &lt;code&gt;.13&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="39c78d428aebd9ca45da6a48799135386ab75ff3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.exact&lt;/code&gt; Modifier</source>
          <target state="translated">&lt;code&gt;.exact&lt;/code&gt; Modificador</target>
        </trans-unit>
        <trans-unit id="2f8db93b6f8bd287a3008cc77dc22bb0cd89e4cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.left&lt;/code&gt; - (2.2.0+) only trigger handler for left button mouse events.</source>
          <target state="translated">&lt;code&gt;.left&lt;/code&gt; : (2.2.0+) solo controlador de activaci&amp;oacute;n para eventos del bot&amp;oacute;n izquierdo del mouse.</target>
        </trans-unit>
        <trans-unit id="ec4498628ec652b00ecac6d8f0f5f9bd6d26b7d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.middle&lt;/code&gt; - (2.2.0+) only trigger handler for middle button mouse events.</source>
          <target state="translated">&lt;code&gt;.middle&lt;/code&gt; : (2.2.0+) solo controlador de activaci&amp;oacute;n para eventos de mouse del bot&amp;oacute;n central.</target>
        </trans-unit>
        <trans-unit id="db1226f01245c27d4eb416fe9fb23bced9953329" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.native&lt;/code&gt; - listen for a native event on the root element of component.</source>
          <target state="translated">&lt;code&gt;.native&lt;/code&gt; : escucha un evento nativo en el elemento ra&amp;iacute;z del componente.</target>
        </trans-unit>
        <trans-unit id="5444ff6608a4532818767370445cce9c528f237f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.once&lt;/code&gt; - trigger handler at most once.</source>
          <target state="translated">&lt;code&gt;.once&lt;/code&gt; - manejador de disparo como m&amp;aacute;ximo una vez.</target>
        </trans-unit>
        <trans-unit id="06ef9f33ba675a27c3e0f487cebb64cd4f94c56b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.once&lt;/code&gt; and &lt;code&gt;.sync&lt;/code&gt; Modifiers on &lt;code&gt;v-bind&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;.once&lt;/code&gt; y &lt;code&gt;.sync&lt;/code&gt; Modificadores en &lt;code&gt;v-bind&lt;/code&gt; &lt;sup&gt;eliminado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="a5978339e4048288072f1d0aca34a3ca07e4c168" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.passive&lt;/code&gt; - (2.3.0+) attaches a DOM event with &lt;code&gt;{ passive: true }&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.passive&lt;/code&gt; : (2.3.0+) adjunta un evento DOM con &lt;code&gt;{ passive: true }&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2d9af57a38e90eed214bc6ac99ab1c3f101e7a5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prevent&lt;/code&gt; - call &lt;code&gt;event.preventDefault()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.prevent&lt;/code&gt; : llama a &lt;code&gt;event.preventDefault()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8f61b4325c58d2e34c18dfabfd675caebc0656ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prop&lt;/code&gt; - Bind as a DOM property instead of an attribute (&lt;a href=&quot;https://stackoverflow.com/questions/6003819/properties-and-attributes-in-html#answer-6004028&quot;&gt;what&amp;rsquo;s the difference?&lt;/a&gt;). If the tag is a component then &lt;code&gt;.prop&lt;/code&gt; will set the property on the component&amp;rsquo;s &lt;code&gt;$el&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.prop&lt;/code&gt; : enlaza como una propiedad DOM en lugar de un atributo ( &lt;a href=&quot;https://stackoverflow.com/questions/6003819/properties-and-attributes-in-html#answer-6004028&quot;&gt;&amp;iquest;cu&amp;aacute;l es la diferencia?&lt;/a&gt; ). Si la etiqueta es un componente, &lt;code&gt;.prop&lt;/code&gt; establecer&amp;aacute; la propiedad en el &lt;code&gt;$el&lt;/code&gt; del componente .</target>
        </trans-unit>
        <trans-unit id="895b09e6c4555b18d75a7c14e3e183955ff63654" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.right&lt;/code&gt; - (2.2.0+) only trigger handler for right button mouse events.</source>
          <target state="translated">&lt;code&gt;.right&lt;/code&gt; - (2.2.0+) solo manejador de activaci&amp;oacute;n para eventos de mouse con bot&amp;oacute;n derecho.</target>
        </trans-unit>
        <trans-unit id="ba0fe2c15caf97ea9da6b13ee823d6ccb749d120" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.self&lt;/code&gt; - only trigger handler if event was dispatched from this element.</source>
          <target state="translated">&lt;code&gt;.self&lt;/code&gt; : solo controlador de activaci&amp;oacute;n si el evento se envi&amp;oacute; desde este elemento.</target>
        </trans-unit>
        <trans-unit id="f53d8c5cb4af66234cce5f3ffa99cc141cd09ca9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.stop&lt;/code&gt; - call &lt;code&gt;event.stopPropagation()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.stop&lt;/code&gt; : llama a &lt;code&gt;event.stopPropagation()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e6eda6204756e264c87b331ff62c085257503aae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.sync&lt;/code&gt; - (2.3.0+) a syntax sugar that expands into a &lt;code&gt;v-on&lt;/code&gt; handler for updating the bound value.</source>
          <target state="translated">&lt;code&gt;.sync&lt;/code&gt; - (2.3.0+) un az&amp;uacute;car de sintaxis que se expande en un controlador &lt;code&gt;v-on&lt;/code&gt; para actualizar el valor enlazado.</target>
        </trans-unit>
        <trans-unit id="fa8d81d79d3b0900d2de0449677837305ba5854c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.sync&lt;/code&gt; Modifier</source>
          <target state="translated">&lt;code&gt;.sync&lt;/code&gt; Modificador</target>
        </trans-unit>
        <trans-unit id="393c8b0954e8841037040a5ce6851747c34da83c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.{keyCode | keyAlias}&lt;/code&gt; - only trigger handler on certain keys.</source>
          <target state="translated">&lt;code&gt;.{keyCode | keyAlias}&lt;/code&gt; - solo maneja el disparador en ciertas claves.</target>
        </trans-unit>
        <trans-unit id="ef14d0b6c47e41f12f81e9093c63d0f155eed82b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Array.prototype.$remove&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;Array.prototype.$remove&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="8d6c3ac6fce97244448ab08d877353880763d90d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Array.prototype.$set&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;Array.prototype.$set&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="00e5c56b548dee8fecff1a99b415e2557c853f1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vue.config.async&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;Vue.config.async&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="cddfd77c01930a08842b2b44c0067a0a4ba383e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vue.config.debug&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;Vue.config.debug&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="e3e7301429950b1b372ff2d70b13c55c1496e6ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vue.config.delimiters&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;Vue.config.delimiters&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="dc52da7b4b148f66c13ff494f9774d615804a832" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vue.config.unsafeDelimiters&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;Vue.config.unsafeDelimiters&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="0c0ce0ad0a368fbf8ed4276be6a05458a2e1a9a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vue.config&lt;/code&gt; is an object containing Vue&amp;rsquo;s global configurations. You can modify its properties listed below before bootstrapping your application:</source>
          <target state="translated">&lt;code&gt;Vue.config&lt;/code&gt; es un objeto que contiene las configuraciones globales de Vue. Puede modificar las propiedades que se enumeran a continuaci&amp;oacute;n antes de iniciar su aplicaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="07f11fcb23f34f2463a434db700e4f8aefcdf802" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vue.directive('on').keyCodes&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;Vue.directive('on').keyCodes&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="a64359c7a37d98c62d1cfa4403f6f568fc974462" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vue.elementDirective&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;Vue.elementDirective&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9a9d19d34e374be0fff06f9ef5c933e541f5740a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vue.extend&lt;/code&gt; with &lt;code&gt;el&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;Vue.extend&lt;/code&gt; con &lt;code&gt;el&lt;/code&gt; &lt;sup&gt;eliminado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9347aaae5841defc8036cfbe9c0a51b59793973e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vue.partial&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;Vue.partial&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="8fa42e33eecd7d3589ecdd915ea5ec04e0089a04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vue.set&lt;/code&gt; and &lt;code&gt;Vue.delete&lt;/code&gt; can no longer work on Vue instances. It is now mandatory to properly declare all top-level reactive properties in the data option. If you&amp;rsquo;d like to delete properties on a Vue instance or its &lt;code&gt;$data&lt;/code&gt;, set it to null.</source>
          <target state="translated">&lt;code&gt;Vue.set&lt;/code&gt; y &lt;code&gt;Vue.delete&lt;/code&gt; ya no pueden funcionar en instancias de Vue. Ahora es obligatorio declarar correctamente todas las propiedades reactivas de nivel superior en la opci&amp;oacute;n de datos. Si desea eliminar propiedades en una instancia de Vue o sus &lt;code&gt;$data&lt;/code&gt; , config&amp;uacute;relo en nulo.</target>
        </trans-unit>
        <trans-unit id="d0bc792b1bdce623e788a3b0a931a8d56e2f86fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vue.set&lt;/code&gt; and &lt;code&gt;Vue.delete&lt;/code&gt; on Vue instances &lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;Vue.set&lt;/code&gt; y &lt;code&gt;Vue.delete&lt;/code&gt; en instancias Vue &lt;sup&gt;eliminan&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9177cefead6808fa2384289dba24fe47c2a29686" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vue.transition&lt;/code&gt; for Reusable Transitions &lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;Vue.transition&lt;/code&gt; &lt;sup&gt;reemplaz&amp;oacute; &lt;/sup&gt;Vue.transition para transiciones reutilizables&lt;sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="e8b9e1203cc30ac563c65b2680f85decc64fd16e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vue.use&lt;/code&gt; automatically prevents you from using the same plugin more than once, so calling it multiple times on the same plugin will install the plugin only once.</source>
          <target state="translated">&lt;code&gt;Vue.use&lt;/code&gt; evita autom&amp;aacute;ticamente que uses el mismo complemento m&amp;aacute;s de una vez, por lo que llamarlo varias veces en el mismo complemento instalar&amp;aacute; el complemento solo una vez.</target>
        </trans-unit>
        <trans-unit id="5a1032069bad58ff3a8bfeabc735a7f14f8fb81b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;abstract: true&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;abstract: true&lt;/code&gt; &lt;sup&gt;reemplazado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="3e864d626249e6a85e3a388e1e4092437d723a4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;activate&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;activate&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="4353dc5efdbe32b0149e3ac06c906fd0adc3c000" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;appear-active-class&lt;/code&gt; - string</source>
          <target state="translated">&lt;code&gt;appear-active-class&lt;/code&gt; - cadena</target>
        </trans-unit>
        <trans-unit id="7895d0b325b6952354c3d80ff32b2906f749b1a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;appear-class&lt;/code&gt; - string</source>
          <target state="translated">&lt;code&gt;appear-class&lt;/code&gt; - cadena</target>
        </trans-unit>
        <trans-unit id="02785a57c2402cdc6a9517e5924d16e0c5e2f070" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;appear-to-class&lt;/code&gt; - string</source>
          <target state="translated">&lt;code&gt;appear-to-class&lt;/code&gt; - cadena</target>
        </trans-unit>
        <trans-unit id="14d327cfb71296ec021255dd505f627b7de54f5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;appear&lt;/code&gt; - boolean, Whether to apply transition on initial render. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;appear&lt;/code&gt; - booleano, ya sea para aplicar la transici&amp;oacute;n en el renderizado inicial. El valor predeterminado es &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="46804fe9875d20d005ed78771beb5c6a188a75a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arg&lt;/code&gt;: The argument passed to the directive, if any. For example in &lt;code&gt;v-my-directive:foo&lt;/code&gt;, the arg would be &lt;code&gt;&quot;foo&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;arg&lt;/code&gt; : El argumento pasado a la directiva, si existe. Por ejemplo, en &lt;code&gt;v-my-directive:foo&lt;/code&gt; , el argumento ser&amp;iacute;a &lt;code&gt;&quot;foo&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1464bf4612a32d3a83d54a4a15912d0ecabb841a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attached&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;attached&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="10f160f7a822ce8c91d2a586223dc6cfce1febfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beforeCompile&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;beforeCompile&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="ccea54c373dac3c8d65a16ba2eb5a6995bac65ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bind&lt;/code&gt;: called only once, when the directive is first bound to the element. This is where you can do one-time setup work.</source>
          <target state="translated">&lt;code&gt;bind&lt;/code&gt; : se llama solo una vez, cuando la directiva se vincula por primera vez al elemento. Aqu&amp;iacute; es donde puede realizar un trabajo de configuraci&amp;oacute;n &amp;uacute;nico.</target>
        </trans-unit>
        <trans-unit id="7e88a24ffc7a21f2f0293cb73bfa23c709cb7740" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;binding&lt;/code&gt;: An object containing the following properties.</source>
          <target state="translated">&lt;code&gt;binding&lt;/code&gt; : un objeto que contiene las siguientes propiedades.</target>
        </trans-unit>
        <trans-unit id="2eefaf469dca46fa8e77402d0578a1833851ed6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cache: false&lt;/code&gt;&lt;sup&gt;deprecated&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;cache: false&lt;/code&gt; &lt;sup&gt;desuso&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="2534c8cf9582b9fe7c73b01ac1a113b292958972" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;canActivate&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;canActivate&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="e00c12e8367fa5db098ecd62bbd6e739bd306eb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;canDeactivate&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;canDeactivate&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="7368829e248fb8305aef1caa7fc1f941b53d5ab5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;canReuse: false&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;canReuse: false&lt;/code&gt; &lt;sup&gt;eliminado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="0b5db01f7e694b3c7034ea658220d7a267201469" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;children&lt;/code&gt;: An array of the VNode children</source>
          <target state="translated">&lt;code&gt;children&lt;/code&gt; : una matriz de los hijos de VNode</target>
        </trans-unit>
        <trans-unit id="7f6a168486b4017071daba0d8264dfa7517f5ac5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;coerce&lt;/code&gt; Prop Option &lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;coerce&lt;/code&gt; Opci&amp;oacute;n de Prop &lt;sup&gt;eliminada&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="06022586ddff6fc75ec4eaa9fdec461f4b526ace" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compiled&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;compiled&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9b67b778ee3bb191090ddb18de675204c33e35db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;componentUpdated&lt;/code&gt;: called after the containing component&amp;rsquo;s VNode &lt;strong&gt;and the VNodes of its children&lt;/strong&gt; have updated.</source>
          <target state="translated">&lt;code&gt;componentUpdated&lt;/code&gt; : llamado despu&amp;eacute;s de que el VNode del componente contenedor &lt;strong&gt;y los VNodes de sus hijos se&lt;/strong&gt; hayan actualizado.</target>
        </trans-unit>
        <trans-unit id="3fd4fd368812de65cda9f52eb474c7783ac16cbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;createElement&lt;/code&gt; Arguments</source>
          <target state="translated">&lt;code&gt;createElement&lt;/code&gt; Argumentos</target>
        </trans-unit>
        <trans-unit id="86f37cb1da70d29575985958d1590d6cc38a37e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;css&lt;/code&gt; - boolean, Whether to apply CSS transition classes. Defaults to &lt;code&gt;true&lt;/code&gt;. If set to &lt;code&gt;false&lt;/code&gt;, will only trigger JavaScript hooks registered via component events.</source>
          <target state="translated">&lt;code&gt;css&lt;/code&gt; - booleano, ya sea para aplicar clases de transici&amp;oacute;n CSS. Por defecto es &lt;code&gt;true&lt;/code&gt; . Si se establece en &lt;code&gt;false&lt;/code&gt; , solo activar&amp;aacute; los enlaces de JavaScript registrados a trav&amp;eacute;s de eventos de componentes.</target>
        </trans-unit>
        <trans-unit id="c99391aaef8b4eb7b33a18369d20a188c326cb1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt; Must Be a Function</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; deben ser una funci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="f87871b905171e6e00e93284f1c1351d56a20b8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt;: The entire &lt;a href=&quot;#The-Data-Object-In-Depth&quot;&gt;data object&lt;/a&gt;, passed to the component as the 2nd argument of &lt;code&gt;createElement&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; : el &lt;a href=&quot;#The-Data-Object-In-Depth&quot;&gt;objeto de datos&lt;/a&gt; completo , pasado al componente como el segundo argumento de &lt;code&gt;createElement&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c43148c317b9b95cddc6e5fb8584871aa53ba5d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="a9783409e8781e3f918704e678aeebc5904c50b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;date-picker-theme-dark&lt;/code&gt;, which is passed to the component by its parent</source>
          <target state="translated">&lt;code&gt;date-picker-theme-dark&lt;/code&gt; , que su padre pasa al componente</target>
        </trans-unit>
        <trans-unit id="51c14f1e7de5dab0832d7ae5de38632a715093f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deactivate&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;deactivate&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="0feac897a7fa29dcc9c832b60d7e4ae4fcae1b90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;debounce&lt;/code&gt; Param Attribute for &lt;code&gt;v-model&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;debounce&lt;/code&gt; Atributo de par&amp;aacute;metro de rebote para &lt;code&gt;v-model&lt;/code&gt; &lt;sup&gt;eliminado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="24a257730da0bcafdb571f6e77fa872f0d64b69d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default&lt;/code&gt;: &lt;code&gt;any&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt; : &lt;code&gt;any&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b52d6dfe3b445b1f21f432877a0ed67e969a1366" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;detached&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;detached&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="df580a053cc28d6a12839c5e6e9fc11d7119a5b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;duration&lt;/code&gt; - number | { &lt;code&gt;enter&lt;/code&gt;: number, &lt;code&gt;leave&lt;/code&gt;: number }, Specifies the duration of transition. By default, Vue waits for the first &lt;code&gt;transitionend&lt;/code&gt; or &lt;code&gt;animationend&lt;/code&gt; event on the root transition element.</source>
          <target state="translated">&lt;code&gt;duration&lt;/code&gt; - n&amp;uacute;mero | { &lt;code&gt;enter&lt;/code&gt; : n&amp;uacute;mero, &lt;code&gt;leave&lt;/code&gt; : n&amp;uacute;mero}, especifica la duraci&amp;oacute;n de la transici&amp;oacute;n. De forma predeterminada, Vue espera el primer evento de &lt;code&gt;animationend&lt;/code&gt; &lt;code&gt;transitionend&lt;/code&gt; o final de animaci&amp;oacute;n en el elemento de transici&amp;oacute;n ra&amp;iacute;z.</target>
        </trans-unit>
        <trans-unit id="f1a07dc084e595c52507333c1ccf9550cec7d475" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;el&lt;/code&gt;: The element the directive is bound to. This can be used to directly manipulate the DOM.</source>
          <target state="translated">&lt;code&gt;el&lt;/code&gt; : El elemento al que est&amp;aacute; vinculada la directiva. Esto se puede utilizar para manipular directamente el DOM.</target>
        </trans-unit>
        <trans-unit id="6aadc3c277ea3136167618177c35bca3c6b3e905" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enter-active-class&lt;/code&gt; - string</source>
          <target state="translated">&lt;code&gt;enter-active-class&lt;/code&gt; - cadena</target>
        </trans-unit>
        <trans-unit id="aae4cbe2475670612d8c6e238d4fe9b528214780" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enter-class&lt;/code&gt; - string</source>
          <target state="translated">&lt;code&gt;enter-class&lt;/code&gt; - cadena</target>
        </trans-unit>
        <trans-unit id="6a42cecdae4174e68ab837507d8736a5caabe99a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enter-to-class&lt;/code&gt; (2.1.8+)</source>
          <target state="translated">&lt;code&gt;enter-to-class&lt;/code&gt; (2.1.8+)</target>
        </trans-unit>
        <trans-unit id="cfa3b9618c3eb38fc8c3d068dbf52245da33b3c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enter-to-class&lt;/code&gt; - string</source>
          <target state="translated">&lt;code&gt;enter-to-class&lt;/code&gt; - cadena</target>
        </trans-unit>
        <trans-unit id="48878af0ad5ee8fade69a293c7b2ff9dc7eb88c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;events&lt;/code&gt; option &lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;events&lt;/code&gt; opci&amp;oacute;n de eventos &lt;sup&gt;eliminada&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="88d2831139e6c482a4da52fbfae35dd6789a45c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exclude&lt;/code&gt; - string or RegExp or Array. Any component with a matching name will not be cached.</source>
          <target state="translated">&lt;code&gt;exclude&lt;/code&gt; - cadena o RegExp o Array. Cualquier componente con un nombre coincidente no se almacenar&amp;aacute; en cach&amp;eacute;.</target>
        </trans-unit>
        <trans-unit id="d36c674257bd2993699527235d1ec8f66a3860f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expression&lt;/code&gt;: The expression of the binding as a string. For example in &lt;code&gt;v-my-directive=&quot;1 + 1&quot;&lt;/code&gt;, the expression would be &lt;code&gt;&quot;1 + 1&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;expression&lt;/code&gt; : la expresi&amp;oacute;n del enlace como una cadena. Por ejemplo, en &lt;code&gt;v-my-directive=&quot;1 + 1&quot;&lt;/code&gt; , la expresi&amp;oacute;n ser&amp;iacute;a &lt;code&gt;&quot;1 + 1&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="32dd6704f5f56e629366952448845a8eee0ffd0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;form-control&lt;/code&gt;, which is set by the component in its template</source>
          <target state="translated">&lt;code&gt;form-control&lt;/code&gt; , que es establecido por el componente en su plantilla</target>
        </trans-unit>
        <trans-unit id="345435234d551f6232989f72712cdb12c3799d46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hashbang: false&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;hashbang: false&lt;/code&gt; &lt;sup&gt;eliminado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="b5004a7448e17e92babd341da4c2e07da8788603" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;history: true&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;history: true&lt;/code&gt; &lt;sup&gt;reemplazado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="275bf3f39884c9feae68d0b7eb7dfcc411e30694" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;if (!event.ctrlKey) return&lt;/code&gt; (change &lt;code&gt;ctrlKey&lt;/code&gt; to &lt;code&gt;altKey&lt;/code&gt;, &lt;code&gt;shiftKey&lt;/code&gt;, or &lt;code&gt;metaKey&lt;/code&gt;, respectively)</source>
          <target state="translated">&lt;code&gt;if (!event.ctrlKey) return&lt;/code&gt; (cambia &lt;code&gt;ctrlKey&lt;/code&gt; a &lt;code&gt;altKey&lt;/code&gt; , &lt;code&gt;shiftKey&lt;/code&gt; o &lt;code&gt;metaKey&lt;/code&gt; , respectivamente)</target>
        </trans-unit>
        <trans-unit id="af34f415bbdb707f5b1f254aee52e736a7815db6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;if (event.keyCode !== 13) return&lt;/code&gt; (change &lt;code&gt;13&lt;/code&gt; to &lt;a href=&quot;http://keycode.info/&quot;&gt;another key code&lt;/a&gt; for other key modifiers)</source>
          <target state="translated">&lt;code&gt;if (event.keyCode !== 13) return&lt;/code&gt; (cambie &lt;code&gt;13&lt;/code&gt; a &lt;a href=&quot;http://keycode.info/&quot;&gt;otro c&amp;oacute;digo de tecla&lt;/a&gt; para otros modificadores de tecla)</target>
        </trans-unit>
        <trans-unit id="fd24625cc358b8c97231cf9efb8cc4c42fe53758" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;in-out&lt;/code&gt;: New element transitions in first, then when complete, the current element transitions out.</source>
          <target state="translated">&lt;code&gt;in-out&lt;/code&gt; : el elemento nuevo entra primero, luego, cuando se completa, el elemento actual sale.</target>
        </trans-unit>
        <trans-unit id="2d95db78b7d76e655444fc48bf5b446562121a29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;include&lt;/code&gt; - string or RegExp or Array. Only components with matching names will be cached.</source>
          <target state="translated">&lt;code&gt;include&lt;/code&gt; - cadena o RegExp o Array. Solo se almacenar&amp;aacute;n en cach&amp;eacute; los componentes con nombres coincidentes.</target>
        </trans-unit>
        <trans-unit id="eb9847f3fc5d57ad0cd8e8fb60e09369887d9595" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&lt;/code&gt;&lt;sup&gt;renamed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;init&lt;/code&gt;&lt;sup&gt;renamed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="de12f8229689753835cb0e39f11901f7dafb5ccc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;injections&lt;/code&gt;: (2.3.0+) if using the &lt;a href=&quot;../api/index#provide-inject&quot;&gt;&lt;code&gt;inject&lt;/code&gt;&lt;/a&gt; option, this will contain resolved injections.</source>
          <target state="translated">&lt;code&gt;injections&lt;/code&gt; : (2.3.0+) si usa la opci&amp;oacute;n &lt;a href=&quot;../api/index#provide-inject&quot;&gt; &lt;code&gt;inject&lt;/code&gt; &lt;/a&gt; , contendr&amp;aacute; inyecciones resueltas.</target>
        </trans-unit>
        <trans-unit id="4fcbd949291318e0541a1f4d6af2ab68a294fd67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inline-template&lt;/code&gt; - boolean</source>
          <target state="translated">&lt;code&gt;inline-template&lt;/code&gt; - booleano</target>
        </trans-unit>
        <trans-unit id="9f931b5aba074b0ec94889239e1100bda9938fd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inserted&lt;/code&gt;: called when the bound element has been inserted into its parent node (this only guarantees parent node presence, not necessarily in-document).</source>
          <target state="translated">&lt;code&gt;inserted&lt;/code&gt; : se llama cuando el elemento vinculado se ha insertado en su nodo principal (esto solo garantiza la presencia del nodo principal, no necesariamente en el documento).</target>
        </trans-unit>
        <trans-unit id="0bc62b24563568e7e1a3f4f59f212ecd11162f27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is&lt;/code&gt; - string | ComponentDefinition | ComponentConstructor</source>
          <target state="translated">&lt;code&gt;is&lt;/code&gt; - cadena | ComponentDefinition | ComponenteConstructor</target>
        </trans-unit>
        <trans-unit id="b8d7b4a4e2a4fb6925bad906c32ff01806bda36f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keep-alive&lt;/code&gt; Attribute &lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;keep-alive&lt;/code&gt; Atributo de mantener vivo &lt;sup&gt;reemplazado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="2e13ca54f1e69775d6673c6926ff9ff26b63a12c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keep-alive&lt;/code&gt; is no longer a special attribute, but rather a wrapper component, similar to &lt;code&gt;&amp;lt;transition&amp;gt;&lt;/code&gt;. For example:</source>
          <target state="translated">&lt;code&gt;keep-alive&lt;/code&gt; ya no es un atributo especial, sino m&amp;aacute;s bien un componente contenedor, similar a &lt;code&gt;&amp;lt;transition&amp;gt;&lt;/code&gt; . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="2a10978fd450f53d2160919497a919648bbf31a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keep-alive&lt;/code&gt; with Dynamic Components</source>
          <target state="translated">&lt;code&gt;keep-alive&lt;/code&gt; con componentes din&amp;aacute;micos</target>
        </trans-unit>
        <trans-unit id="2afa358b105e354a24538073fe5c5587daec5b28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt; with &lt;code&gt;v-for&lt;/code&gt; is &lt;em&gt;always&lt;/em&gt; required on components, in order to maintain internal component state down the subtree. Even for elements though, it&amp;rsquo;s a good practice to maintain predictable behavior, such as &lt;a href=&quot;https://bost.ocks.org/mike/constancy/&quot;&gt;object constancy&lt;/a&gt; in animations.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; con &lt;code&gt;v-for&lt;/code&gt; est&amp;aacute; &lt;em&gt;siempre&lt;/em&gt; requiere de componentes, con el fin de mantener el estado de los componentes internos por el sub-&amp;aacute;rbol. Sin embargo, incluso para los elementos, es una buena pr&amp;aacute;ctica mantener un comportamiento predecible, como la &lt;a href=&quot;https://bost.ocks.org/mike/constancy/&quot;&gt;constancia del objeto&lt;/a&gt; en las animaciones.</target>
        </trans-unit>
        <trans-unit id="d78993508cf715b15147df7bca21d80246c2b53b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lazy&lt;/code&gt; or &lt;code&gt;number&lt;/code&gt; Param Attributes for &lt;code&gt;v-model&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;lazy&lt;/code&gt; Atributos de par&amp;aacute;metros perezosos o &lt;code&gt;number&lt;/code&gt; para &lt;code&gt;v-model&lt;/code&gt; &lt;sup&gt;reemplazado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="a08b6df28cae76117c4ab8fe07cc45242b3f8a4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;leave-active-class&lt;/code&gt; - string</source>
          <target state="translated">&lt;code&gt;leave-active-class&lt;/code&gt; - cadena</target>
        </trans-unit>
        <trans-unit id="7a5afe9af6aac5227721f835c3b142948d056010" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;leave-cancelled&lt;/code&gt; (&lt;code&gt;v-show&lt;/code&gt; only)</source>
          <target state="translated">&lt;code&gt;leave-cancelled&lt;/code&gt; (solo &lt;code&gt;v-show&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="8ca3b0a8c59e4c007244434f8050569c9d027687" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;leave-class&lt;/code&gt; - string</source>
          <target state="translated">&lt;code&gt;leave-class&lt;/code&gt; - cadena</target>
        </trans-unit>
        <trans-unit id="8828250425898a434e6926fbea4927a417797d47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;leave-to-class&lt;/code&gt; (2.1.8+)</source>
          <target state="translated">&lt;code&gt;leave-to-class&lt;/code&gt; (2.1.8+)</target>
        </trans-unit>
        <trans-unit id="c88360cb7fd1652355b7eed49afba9cb42438b92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;leave-to-class&lt;/code&gt; - string</source>
          <target state="translated">&lt;code&gt;leave-to-class&lt;/code&gt; - cadena</target>
        </trans-unit>
        <trans-unit id="c0bebbe0666d8906fd1a0501b28c019e728cad6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;listeners&lt;/code&gt;: (2.3.0+) An object containing parent-registered event listeners. This is an alias to &lt;code&gt;data.on&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;listeners&lt;/code&gt; : (2.3.0+) Un objeto que contiene oyentes de eventos registrados por los padres. Este es un alias para &lt;code&gt;data.on&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="43fbba728dab31fb9af02fa9033f9162d11c962c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max&lt;/code&gt; - number. The maximum number of component instances to cache.</source>
          <target state="translated">&lt;code&gt;max&lt;/code&gt; - numero. El n&amp;uacute;mero m&amp;aacute;ximo de instancias de componentes para almacenar en cach&amp;eacute;.</target>
        </trans-unit>
        <trans-unit id="f8598085076815efa8425e2063bee8efc6ee0291" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mode&lt;/code&gt; - string, Controls the timing sequence of leaving/entering transitions. Available modes are &lt;code&gt;&quot;out-in&quot;&lt;/code&gt; and &lt;code&gt;&quot;in-out&quot;&lt;/code&gt;; defaults to simultaneous.</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; - cadena, controla la secuencia de tiempo de las transiciones de entrada / salida. Los modos disponibles son &lt;code&gt;&quot;out-in&quot;&lt;/code&gt; y &lt;code&gt;&quot;in-out&quot;&lt;/code&gt; ; por defecto es simult&amp;aacute;neo.</target>
        </trans-unit>
        <trans-unit id="14b72a65d245fe3636b70a741bd17ce5ccadb4a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;modifiers&lt;/code&gt;: An object containing modifiers, if any. For example in &lt;code&gt;v-my-directive.foo.bar&lt;/code&gt;, the modifiers object would be &lt;code&gt;{ foo: true, bar: true }&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;modifiers&lt;/code&gt; : un objeto que contiene modificadores, si los hay. Por ejemplo, en &lt;code&gt;v-my-directive.foo.bar&lt;/code&gt; , el objeto de modificadores ser&amp;iacute;a &lt;code&gt;{ foo: true, bar: true }&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="72588d259ffe17b0a4386f312a5bafa07db4ce52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;move-class&lt;/code&gt; - overwrite CSS class applied during moving transition.</source>
          <target state="translated">&lt;code&gt;move-class&lt;/code&gt; : sobrescribe la clase CSS aplicada durante la transici&amp;oacute;n de movimiento.</target>
        </trans-unit>
        <trans-unit id="baeb9a2898aff240dde6e5bae7adeb5b87671da4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; - string, Used for named slot.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; - cadena, utilizado para la ranura con nombre.</target>
        </trans-unit>
        <trans-unit id="abea443462ccde387a337989730c363b2970b95e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; - string, Used to automatically generate transition CSS class names. e.g. &lt;code&gt;name: 'fade'&lt;/code&gt; will auto expand to &lt;code&gt;.fade-enter&lt;/code&gt;, &lt;code&gt;.fade-enter-active&lt;/code&gt;, etc. Defaults to &lt;code&gt;&quot;v&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; - string, se utiliza para generar autom&amp;aacute;ticamente nombres de clases CSS de transici&amp;oacute;n. por ejemplo, &lt;code&gt;name: 'fade'&lt;/code&gt; se expandir&amp;aacute; autom&amp;aacute;ticamente a &lt;code&gt;.fade-enter&lt;/code&gt; , &lt;code&gt;.fade-enter-active&lt;/code&gt; , etc. El valor predeterminado es &lt;code&gt;&quot;v&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="706a2107f46e7eb9c04b46a76e5af2dc0f595d30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;: The name of the directive, without the &lt;code&gt;v-&lt;/code&gt; prefix.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; : El nombre de la directiva, sin el prefijo &lt;code&gt;v-&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="db6699c1d3862b1dc3909a2907c95717f793dd3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;oldValue&lt;/code&gt;: The previous value, only available in &lt;code&gt;update&lt;/code&gt; and &lt;code&gt;componentUpdated&lt;/code&gt;. It is available whether or not the value has changed.</source>
          <target state="translated">&lt;code&gt;oldValue&lt;/code&gt; : el valor anterior, solo disponible en &lt;code&gt;update&lt;/code&gt; y &lt;code&gt;componentUpdated&lt;/code&gt; . Est&amp;aacute; disponible tanto si el valor ha cambiado como si no.</target>
        </trans-unit>
        <trans-unit id="d109ab71ebfdcfca36ddf6d28cd07b4dd835bd1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;oldVnode&lt;/code&gt;: The previous virtual node, only available in the &lt;code&gt;update&lt;/code&gt; and &lt;code&gt;componentUpdated&lt;/code&gt; hooks.</source>
          <target state="translated">&lt;code&gt;oldVnode&lt;/code&gt; : El nodo virtual anterior, solo disponible en los hooks &lt;code&gt;update&lt;/code&gt; y &lt;code&gt;componentUpdated&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1ffd5fe16641bf7b288f66a3d1c90b239a88a734" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;out-in&lt;/code&gt;: Current element transitions out first, then when complete, the new element transitions in.</source>
          <target state="translated">&lt;code&gt;out-in&lt;/code&gt; : el elemento actual sale primero, luego, cuando se completa, el nuevo elemento entra.</target>
        </trans-unit>
        <trans-unit id="b69fce8e543f67997ddc8e156d2a0eb8f26820f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parent&lt;/code&gt;: A reference to the parent component</source>
          <target state="translated">&lt;code&gt;parent&lt;/code&gt; : una referencia al componente padre</target>
        </trans-unit>
        <trans-unit id="3e52c3446f7c5f4a54de58d2abc4226875f84288" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;props&lt;/code&gt;/&lt;code&gt;propsData&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;props&lt;/code&gt;/&lt;code&gt;propsData&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dfd018d4a105b96b50db1a14fe39c60c3b6f379d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;props&lt;/code&gt;: An object of the provided props</source>
          <target state="translated">&lt;code&gt;props&lt;/code&gt; : un objeto de los props proporcionados</target>
        </trans-unit>
        <trans-unit id="510f3f4dc2c62c4e956d7258a263c4c20918d28a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;provide&lt;/code&gt; and &lt;code&gt;inject&lt;/code&gt; are primarily provided for advanced plugin / component library use cases. It is NOT recommended to use them in generic application code.</source>
          <target state="translated">&lt;code&gt;provide&lt;/code&gt; e &lt;code&gt;inject&lt;/code&gt; se proporcionan principalmente para casos de uso de bibliotecas de complementos / componentes avanzados. NO se recomienda utilizarlos en un c&amp;oacute;digo de aplicaci&amp;oacute;n gen&amp;eacute;rico.</target>
        </trans-unit>
        <trans-unit id="ecadb55ebd7d5d9984625f8b695103168946d769" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ready&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;ready&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="05c7db69753c6068f522a1fa2042ebbe18aee583" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ref&lt;/code&gt; is used to register a reference to an element or a child component. The reference will be registered under the parent component&amp;rsquo;s &lt;code&gt;$refs&lt;/code&gt; object. If used on a plain DOM element, the reference will be that element; if used on a child component, the reference will be component instance:</source>
          <target state="translated">&lt;code&gt;ref&lt;/code&gt; se utiliza para registrar una referencia a un elemento o componente hijo. La referencia se registrar&amp;aacute; en el objeto &lt;code&gt;$refs&lt;/code&gt; del componente principal . Si se usa en un elemento DOM simple, la referencia ser&amp;aacute; ese elemento; si se usa en un componente hijo, la referencia ser&amp;aacute; la instancia del componente:</target>
        </trans-unit>
        <trans-unit id="5066d8ba54bbfdd3dcdd9ed758cdd3075df32596" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replace: false&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;replace: false&lt;/code&gt; &lt;sup&gt;eliminado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="64cc63f77ca6d5ea86ee6a9a3ce5b0052a6d1d18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;required&lt;/code&gt;: &lt;code&gt;Boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;required&lt;/code&gt; : &lt;code&gt;Boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="207dbe296a7293881fea2f26f89c9c5e76aaaa52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;root&lt;/code&gt;&lt;sup&gt;renamed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;root&lt;/code&gt;&lt;sup&gt;renamed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="d31ade615fead4ed11400c862e522e959bca81f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;router.alias&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;router.alias&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="6d235a33ebfcc70753eda5fc537e7b5670420627" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;router.beforeEach&lt;/code&gt; now works asynchronously and takes a &lt;code&gt;next&lt;/code&gt; function as its third argument.</source>
          <target state="translated">&lt;code&gt;router.beforeEach&lt;/code&gt; ahora funciona de forma asincr&amp;oacute;nica y toma una funci&amp;oacute;n &lt;code&gt;next&lt;/code&gt; como tercer argumento.</target>
        </trans-unit>
        <trans-unit id="ff8aab9f87d9c0c7dbe778da952d009685f93389" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;router.beforeEach&lt;/code&gt;&lt;sup&gt;changed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;router.beforeEach&lt;/code&gt;&lt;sup&gt;changed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="3ea728e40b071c74ac4272693bfaadb0de0ec446" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;router.go&lt;/code&gt;&lt;sup&gt;changed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;router.go&lt;/code&gt;&lt;sup&gt;changed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="090544bb056281ba9532c8047cdaf9d0d05e4b37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;router.map&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;router.map&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="1cb232b82834dbf9069b8e2a3017f5c2f7599833" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;router.on&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;router.on&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="4b4a806b2a9e280f31484e4c9315222146785c89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;router.redirect&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;router.redirect&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="d3a502b26b8df97f647fefded3f6190b80d3b753" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;router.start&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;router.start&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9426905c5ec52abca9d619ad5ac53ebd0df504af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;saveScrollPosition&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;saveScrollPosition&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="750fc68ce05b7623d61194ba5ced2a9965083d04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scopedSlots&lt;/code&gt;: (2.6.0+) An object that exposes passed-in scoped slots. Also exposes normal slots as functions.</source>
          <target state="translated">&lt;code&gt;scopedSlots&lt;/code&gt; : (2.6.0+) Un objeto que expone ranuras de alcance pasadas. Tambi&amp;eacute;n expone las ranuras normales como funciones.</target>
        </trans-unit>
        <trans-unit id="be6acdedeb90ff9f879626d5083830df3cc966bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;slot&lt;/code&gt; Attribute Styling &lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;slot&lt;/code&gt; Estilo de atributo de ranura &lt;sup&gt;eliminado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="30c8704048fac60e76439f5e473f80fc63e77468" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;slots()&lt;/code&gt; vs &lt;code&gt;children&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;slots()&lt;/code&gt; vs &lt;code&gt;children&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f0c9597a5adf0662207be820362cba0d788aa06d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;slots&lt;/code&gt;: A function returning a slots object</source>
          <target state="translated">&lt;code&gt;slots&lt;/code&gt; : una funci&amp;oacute;n que devuelve un objeto de ranuras</target>
        </trans-unit>
        <trans-unit id="2938d10c13ed025e9c15a9049d79f79623d5cddc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;store.watch&lt;/code&gt; now only accept functions. So for example, you would have to replace:</source>
          <target state="translated">&lt;code&gt;store.watch&lt;/code&gt; ahora solo acepta funciones. Entonces, por ejemplo, tendr&amp;iacute;a que reemplazar:</target>
        </trans-unit>
        <trans-unit id="391f67608584adfc4b9528f29c3a2fa54a756c5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;store.watch&lt;/code&gt; with String Property Path &lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;store.watch&lt;/code&gt; con String Property Path &lt;sup&gt;reemplazado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="7eb52512aea5ab4186101123ac78aca277e764b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;subRoutes&lt;/code&gt;&lt;sup&gt;renamed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;subRoutes&lt;/code&gt;&lt;sup&gt;renamed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="53f39029f6654e10e0b0f4858f5adac0e499bc88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;suppressTransitionError&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;suppressTransitionError&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9996b73c5e1a3a4d66d16981be645162a1cf9f52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tag&lt;/code&gt; - string, defaults to &lt;code&gt;span&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tag&lt;/code&gt; - cadena, por defecto es &lt;code&gt;span&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="25a50b60855fd86d7443b30508e35a2d1689e4f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;template&lt;/code&gt;/&lt;code&gt;render&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;template&lt;/code&gt;/&lt;code&gt;render&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="be115e23827953e91e44a8354fea36b6eb0c017c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;track-by&lt;/code&gt; has been replaced with &lt;code&gt;key&lt;/code&gt;, which works like any other attribute: without the &lt;code&gt;v-bind:&lt;/code&gt; or &lt;code&gt;:&lt;/code&gt; prefix, it is treated as a literal string. In most cases, you&amp;rsquo;d want to use a dynamic binding which expects a full expression instead of a key. For example, in place of:</source>
          <target state="translated">&lt;code&gt;track-by&lt;/code&gt; ha sido reemplazado por &lt;code&gt;key&lt;/code&gt; , que funciona como cualquier otro atributo: sin el prefijo &lt;code&gt;v-bind:&lt;/code&gt; or &lt;code&gt;:&lt;/code&gt; , se trata como una cadena literal. En la mayor&amp;iacute;a de los casos, querr&amp;aacute; utilizar un enlace din&amp;aacute;mico que espera una expresi&amp;oacute;n completa en lugar de una clave. Por ejemplo, en lugar de:</target>
        </trans-unit>
        <trans-unit id="def84db176e788d81060b53638ce6c5fb7d626d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;track-by&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;track-by&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="5456e868d7dd4e84e77edf065a4b1337e771efb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transition&lt;/code&gt; Attribute &lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;transition&lt;/code&gt; Atributo de transici&amp;oacute;n &lt;sup&gt;reemplazado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="8c718391dc9f677574dd7ad2d64f4f184ed224c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transitionOnLoad&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;transitionOnLoad&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="1832ed07f0e7e319ddeed58bc8d64b4f8321854b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;twoWay&lt;/code&gt; Prop Option &lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;twoWay&lt;/code&gt; Opci&amp;oacute;n de accesorio de dos v&amp;iacute;as &lt;sup&gt;eliminada&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="26d2de3080b59e8422fba94bbbee240c622a552b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt; - string, Specifies the type of transition events to wait for to determine transition end timing. Available values are &lt;code&gt;&quot;transition&quot;&lt;/code&gt; and &lt;code&gt;&quot;animation&quot;&lt;/code&gt;. By default, it will automatically detect the type that has a longer duration.</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; - string, Especifica el tipo de eventos de transici&amp;oacute;n a esperar para determinar el tiempo de finalizaci&amp;oacute;n de la transici&amp;oacute;n. Los valores disponibles son &lt;code&gt;&quot;transition&quot;&lt;/code&gt; y &lt;code&gt;&quot;animation&quot;&lt;/code&gt; . De forma predeterminada, detectar&amp;aacute; autom&amp;aacute;ticamente el tipo que tiene una mayor duraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="cf79f0305a910aff63536a07ae9d38683bb2093f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt;: can be one of the following native constructors: &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Number&lt;/code&gt;, &lt;code&gt;Boolean&lt;/code&gt;, &lt;code&gt;Array&lt;/code&gt;, &lt;code&gt;Object&lt;/code&gt;, &lt;code&gt;Date&lt;/code&gt;, &lt;code&gt;Function&lt;/code&gt;, &lt;code&gt;Symbol&lt;/code&gt;, any custom constructor function or an array of those. Will check if a prop has a given type, and will throw a warning if it doesn&amp;rsquo;t. &lt;a href=&quot;../guide/components-props#Prop-Types&quot;&gt;More information&lt;/a&gt; on prop types.</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; : puede ser uno de los siguientes constructores nativos: &lt;code&gt;String&lt;/code&gt; , &lt;code&gt;Number&lt;/code&gt; , &lt;code&gt;Boolean&lt;/code&gt; o , &lt;code&gt;Array&lt;/code&gt; , &lt;code&gt;Object&lt;/code&gt; , &lt;code&gt;Date&lt;/code&gt; , &lt;code&gt;Function&lt;/code&gt; , &lt;code&gt;Symbol&lt;/code&gt; , cualquier funci&amp;oacute;n de constructor personalizado o una matriz de esos. Verificar&amp;aacute; si un accesorio tiene un tipo determinado y lanzar&amp;aacute; una advertencia si no lo tiene. &lt;a href=&quot;../guide/components-props#Prop-Types&quot;&gt;M&amp;aacute;s informaci&amp;oacute;n&lt;/a&gt; sobre tipos de accesorios.</target>
        </trans-unit>
        <trans-unit id="89dc368fad48479896fef14b62931a19bb4220e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unbind&lt;/code&gt;: called only once, when the directive is unbound from the element.</source>
          <target state="translated">&lt;code&gt;unbind&lt;/code&gt; : se llama solo una vez, cuando la directiva se desvincula del elemento.</target>
        </trans-unit>
        <trans-unit id="3b56e0c2a7a52ab8cf1a4078febf74669e452078" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;update&lt;/code&gt;: called after the containing component&amp;rsquo;s VNode has updated, &lt;strong&gt;but possibly before its children have updated&lt;/strong&gt;. The directive&amp;rsquo;s value may or may not have changed, but you can skip unnecessary updates by comparing the binding&amp;rsquo;s current and old values (see below on hook arguments).</source>
          <target state="translated">&lt;code&gt;update&lt;/code&gt; : se llama despu&amp;eacute;s de que el VNode del componente contenedor se haya actualizado, &lt;strong&gt;pero posiblemente antes de que sus hijos se hayan actualizado&lt;/strong&gt; . El valor de la directiva puede haber cambiado o no, pero puede omitir actualizaciones innecesarias comparando los valores actuales y antiguos del enlace (ver m&amp;aacute;s abajo los argumentos del gancho).</target>
        </trans-unit>
        <trans-unit id="9115678acd2f07f2ed37efeb9d0f68fc5db3110f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-bind:style&lt;/code&gt; with Object Syntax and &lt;code&gt;!important&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;v-bind:style&lt;/code&gt; con sintaxis de objeto y &lt;code&gt;!important&lt;/code&gt; &lt;sup&gt;eliminado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="5e8b42db442843263eb11be4207372d5f5f40019" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-bind&lt;/code&gt; Shorthand</source>
          <target state="translated">&lt;code&gt;v-bind&lt;/code&gt; taquigraf&amp;iacute;a</target>
        </trans-unit>
        <trans-unit id="3045d5e309d9678829b53e2de0f7a3dccedb7ef7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-el&lt;/code&gt; and &lt;code&gt;v-ref&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;v-el&lt;/code&gt; y &lt;code&gt;v-ref&lt;/code&gt; &lt;sup&gt;reemplazados&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="a0c26519225500783bff2666410567d5f9e6dd88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-else&lt;/code&gt; no longer works with &lt;code&gt;v-show&lt;/code&gt;. Use &lt;code&gt;v-if&lt;/code&gt; with a negation expression instead. For example, instead of:</source>
          <target state="translated">&lt;code&gt;v-else&lt;/code&gt; ya no funciona con &lt;code&gt;v-show&lt;/code&gt; . Utilice &lt;code&gt;v-if&lt;/code&gt; con una expresi&amp;oacute;n de negaci&amp;oacute;n. Por ejemplo, en lugar de:</target>
        </trans-unit>
        <trans-unit id="580908b847f846db463d85bc08f552931fe69194" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-else&lt;/code&gt; with &lt;code&gt;v-show&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;v-else&lt;/code&gt; con &lt;code&gt;v-show&lt;/code&gt; &lt;sup&gt;eliminado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="e157d19fd9bacab64c9c12809044c69c6887122a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-enter-active&lt;/code&gt; and &lt;code&gt;v-leave-active&lt;/code&gt; give you the ability to specify different easing curves for enter/leave transitions, which you&amp;rsquo;ll see an example of in the following section.</source>
          <target state="translated">&lt;code&gt;v-enter-active&lt;/code&gt; y &lt;code&gt;v-leave-active&lt;/code&gt; le brindan la capacidad de especificar diferentes curvas de aceleraci&amp;oacute;n para las transiciones de entrada / salida, de las cuales ver&amp;aacute; un ejemplo en la siguiente secci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="3297b0d52bd83a2ea12893fc93a3be6cc50ecb71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-enter-active&lt;/code&gt;: Active state for enter. Applied during the entire entering phase. Added before element is inserted, removed when transition/animation finishes. This class can be used to define the duration, delay and easing curve for the entering transition.</source>
          <target state="translated">&lt;code&gt;v-enter-active&lt;/code&gt; : estado activo para entrar. Aplicado durante toda la fase de entrada. Se agrega antes de insertar el elemento, se elimina cuando finaliza la transici&amp;oacute;n / animaci&amp;oacute;n. Esta clase se puede utilizar para definir la duraci&amp;oacute;n, el retraso y la curva de relajaci&amp;oacute;n para la transici&amp;oacute;n de entrada.</target>
        </trans-unit>
        <trans-unit id="e415c5c39ad185cb80dab3fe98d0678991811706" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-enter-to&lt;/code&gt;: &lt;strong&gt;Only available in versions 2.1.8+.&lt;/strong&gt; Ending state for enter. Added one frame after element is inserted (at the same time &lt;code&gt;v-enter&lt;/code&gt; is removed), removed when transition/animation finishes.</source>
          <target state="translated">&lt;code&gt;v-enter-to&lt;/code&gt; : &lt;strong&gt;solo disponible en las versiones 2.1.8+. &lt;/strong&gt;Estado final para entrar. Se agreg&amp;oacute; un fotograma despu&amp;eacute;s de insertar el elemento (al mismo tiempo que se elimina &lt;code&gt;v-enter&lt;/code&gt; ), se elimina cuando finaliza la transici&amp;oacute;n / animaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="ff87fb9d5c6bc650a783b4da09454cc3bcc3c5e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-enter&lt;/code&gt;: Starting state for enter. Added before element is inserted, removed one frame after element is inserted.</source>
          <target state="translated">&lt;code&gt;v-enter&lt;/code&gt; : estado inicial para entrar. Se agrega antes de que se inserte el elemento, se elimina un marco despu&amp;eacute;s de que se inserta el elemento.</target>
        </trans-unit>
        <trans-unit id="cf998bc3af7b93def894cd2e30bd66e7bb636a3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-for&lt;/code&gt; Argument Order for Arrays &lt;sup&gt;changed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;v-for&lt;/code&gt; Argument Order for Arrays &lt;sup&gt;cambiado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="6a0ce3df918e64a5aa4a4a999c4be92e8c369b78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-for&lt;/code&gt; Argument Order for Objects &lt;sup&gt;changed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;v-for&lt;/code&gt; Argument Order for Objects ha &lt;sup&gt;cambiado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="c209f149d844955891db73a0e582689094ed00d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-for&lt;/code&gt; Range Values &lt;sup&gt;changed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;v-for&lt;/code&gt; valores de rango &lt;sup&gt;cambiados&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="2021e5e18779bef90f15088bb9dd5a81d0a4c49a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-for&lt;/code&gt; can also take an integer. In this case it will repeat the template that many times.</source>
          <target state="translated">&lt;code&gt;v-for&lt;/code&gt; tambi&amp;eacute;n puede tomar un n&amp;uacute;mero entero. En este caso, repetir&amp;aacute; la plantilla tantas veces.</target>
        </trans-unit>
        <trans-unit id="2bfa6c3bcd9d17a42502f81d6ff8390f75d6c134" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-for&lt;/code&gt; on a &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;v-for&lt;/code&gt; en una &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4d1ab032c0ac4d10c260a24531ae64c77a3f40e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-for&lt;/code&gt; with &lt;code&gt;v-if&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;v-for&lt;/code&gt; con &lt;code&gt;v-if&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="beeea1b128d433211573da690df97f4321c25853" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-for&lt;/code&gt; with a Component</source>
          <target state="translated">&lt;code&gt;v-for&lt;/code&gt; con un componente</target>
        </trans-unit>
        <trans-unit id="3cdfaef106439212576275d28209c738e240a599" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-for&lt;/code&gt; with a Range</source>
          <target state="translated">&lt;code&gt;v-for&lt;/code&gt; con un rango</target>
        </trans-unit>
        <trans-unit id="eb9b587fd7dca0972d2c9abd14c962f23bfcd780" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-for&lt;/code&gt; with an Object</source>
          <target state="translated">&lt;code&gt;v-for&lt;/code&gt; con un objeto</target>
        </trans-unit>
        <trans-unit id="42a9b2ba12de9a8148a11460bcfdeca726dfaa09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-if&lt;/code&gt; and &lt;code&gt;v-for&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;v-if&lt;/code&gt; y &lt;code&gt;v-for&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="23591f672e0289081d75194970387a4287577680" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-if&lt;/code&gt; is &amp;ldquo;real&amp;rdquo; conditional rendering because it ensures that event listeners and child components inside the conditional block are properly destroyed and re-created during toggles.</source>
          <target state="translated">&lt;code&gt;v-if&lt;/code&gt; es una representaci&amp;oacute;n condicional &quot;real&quot; porque garantiza que los detectores de eventos y los componentes secundarios dentro del bloque condicional se destruyan y se vuelvan a crear correctamente durante los cambios.</target>
        </trans-unit>
        <trans-unit id="ae1fbc8ba2fbbe13b37cdd0f5831b95f896be5fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-if&lt;/code&gt; is also &lt;strong&gt;lazy&lt;/strong&gt;: if the condition is false on initial render, it will not do anything - the conditional block won&amp;rsquo;t be rendered until the condition becomes true for the first time.</source>
          <target state="translated">&lt;code&gt;v-if&lt;/code&gt; tambi&amp;eacute;n es &lt;strong&gt;perezoso&lt;/strong&gt; : si la condici&amp;oacute;n es falsa en el renderizado inicial, no har&amp;aacute; nada; el bloque condicional no se renderizar&amp;aacute; hasta que la condici&amp;oacute;n sea verdadera por primera vez.</target>
        </trans-unit>
        <trans-unit id="42797324576b858592e346be96f0b2a2a43ff8fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-if&lt;/code&gt; vs &lt;code&gt;v-show&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;v-if&lt;/code&gt; vs &lt;code&gt;v-show&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b537d1726649b41482f4cf031a3ed8c89f32a06c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-if&lt;/code&gt; with &lt;code&gt;v-for&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;v-if&lt;/code&gt; con &lt;code&gt;v-for&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="37cbdbe7af25ddc5f7a4fc739d2120c1abc9ca9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-if&lt;/code&gt;/&lt;code&gt;v-else-if&lt;/code&gt;/&lt;code&gt;v-else&lt;/code&gt; without &lt;code&gt;key&lt;/code&gt;&lt;sup&gt;use with caution&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;v-if&lt;/code&gt; / &lt;code&gt;v-else-if&lt;/code&gt; / &lt;code&gt;v-else&lt;/code&gt; sin &lt;code&gt;key&lt;/code&gt; &lt;sup&gt;use con precauci&amp;oacute;n&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="88d60bd2a84b26098146bc60f770c98c7019c15f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-leave-active&lt;/code&gt;: Active state for leave. Applied during the entire leaving phase. Added immediately when leave transition is triggered, removed when the transition/animation finishes. This class can be used to define the duration, delay and easing curve for the leaving transition.</source>
          <target state="translated">&lt;code&gt;v-leave-active&lt;/code&gt; : Estado activo para salir. Se aplica durante toda la fase de salida. Se agrega inmediatamente cuando se activa la transici&amp;oacute;n de licencia, se elimina cuando finaliza la transici&amp;oacute;n / animaci&amp;oacute;n. Esta clase se puede utilizar para definir la duraci&amp;oacute;n, el retraso y la curva de relajaci&amp;oacute;n para la transici&amp;oacute;n de salida.</target>
        </trans-unit>
        <trans-unit id="2dfc39358d2e5de87afbe5583cbe422d3c129459" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-leave-to&lt;/code&gt;: &lt;strong&gt;Only available in versions 2.1.8+.&lt;/strong&gt; Ending state for leave. Added one frame after a leaving transition is triggered (at the same time &lt;code&gt;v-leave&lt;/code&gt; is removed), removed when the transition/animation finishes.</source>
          <target state="translated">&lt;code&gt;v-leave-to&lt;/code&gt; : &lt;strong&gt;solo disponible en las versiones 2.1.8+. &lt;/strong&gt;Estado final de licencia. Se agreg&amp;oacute; un fotograma despu&amp;eacute;s de que se activa una transici&amp;oacute;n de salida (al mismo tiempo que se elimina &lt;code&gt;v-leave&lt;/code&gt; ), se elimina cuando finaliza la transici&amp;oacute;n / animaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d118fe7f5f4d4d501b39a3ba1edfcb29569cff54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-leave&lt;/code&gt;: Starting state for leave. Added immediately when a leaving transition is triggered, removed after one frame.</source>
          <target state="translated">&lt;code&gt;v-leave&lt;/code&gt; : Estado inicial para el permiso. Se agrega inmediatamente cuando se activa una transici&amp;oacute;n de salida, se elimina despu&amp;eacute;s de un fotograma.</target>
        </trans-unit>
        <trans-unit id="38a534c9d7b9b690dde0a32193e846c6aace7935" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-link-active&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;v-link-active&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="da01eb9884e45de3fe87a796c0dae69b748a378d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-link&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;v-link&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="dac9bb50558a2b36a81a7c8541d1559cc57172dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-model&lt;/code&gt; internally uses different properties and emits different events for different input elements:</source>
          <target state="translated">&lt;code&gt;v-model&lt;/code&gt; utiliza internamente diferentes propiedades y emite diferentes eventos para diferentes elementos de entrada:</target>
        </trans-unit>
        <trans-unit id="033dc35c8ffe19ece226c6aded1a771c4f5781ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-model&lt;/code&gt; no longer cares about the initial value of an inline &lt;code&gt;value&lt;/code&gt; attribute. For predictability, it will instead always treat the Vue instance data as the source of truth.</source>
          <target state="translated">&lt;code&gt;v-model&lt;/code&gt; ya no se preocupa por el valor inicial de un atributo de &lt;code&gt;value&lt;/code&gt; l&amp;iacute;nea . En aras de la previsibilidad, siempre tratar&amp;aacute; los datos de la instancia de Vue como la fuente de la verdad.</target>
        </trans-unit>
        <trans-unit id="f4ab4e58d4889299a58f13ab1b0042156849d73f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-model&lt;/code&gt; will ignore the initial &lt;code&gt;value&lt;/code&gt;, &lt;code&gt;checked&lt;/code&gt; or &lt;code&gt;selected&lt;/code&gt; attributes found on any form elements. It will always treat the Vue instance data as the source of truth. You should declare the initial value on the JavaScript side, inside the &lt;code&gt;data&lt;/code&gt; option of your component.</source>
          <target state="translated">&lt;code&gt;v-model&lt;/code&gt; ignorar&amp;aacute; el &lt;code&gt;value&lt;/code&gt; inicial , &lt;code&gt;selected&lt;/code&gt; atributos &lt;code&gt;checked&lt;/code&gt; o seleccionados que se encuentran en cualquier elemento del formulario. Siempre tratar&amp;aacute; los datos de la instancia de Vue como la fuente de la verdad. Debe declarar el valor inicial en el lado de JavaScript, dentro de la opci&amp;oacute;n de &lt;code&gt;data&lt;/code&gt; de su componente.</target>
        </trans-unit>
        <trans-unit id="a81b011dc04234d895253e10d4eb4e582bc39271" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-model&lt;/code&gt; with &lt;code&gt;v-for&lt;/code&gt; Iterated Primitive Values &lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;v-model&lt;/code&gt; con &lt;code&gt;v-for&lt;/code&gt; Iterated Primitive Values &lt;sup&gt;eliminado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="67386eded7aef7e3f9cc8d0f1cc5b6a0fa7f1c27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-model&lt;/code&gt; with Components</source>
          <target state="translated">&lt;code&gt;v-model&lt;/code&gt; con componentes</target>
        </trans-unit>
        <trans-unit id="c9dfdc81feb8c731317a77593908fc0eb6decb5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-on&lt;/code&gt; Shorthand</source>
          <target state="translated">&lt;code&gt;v-on&lt;/code&gt; taquigraf&amp;iacute;a v-on</target>
        </trans-unit>
        <trans-unit id="32a18d046cf99bc28f5d0a7de3d15fba126079b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;validator&lt;/code&gt;: &lt;code&gt;Function&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;validator&lt;/code&gt; : &lt;code&gt;Function&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="524bfec1810fa374101aa3f853b0f40a4a8ddf77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; Attribute with &lt;code&gt;v-model&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; Atributo con &lt;code&gt;v-model&lt;/code&gt; &lt;sup&gt;eliminado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="8c1ef74ecfa13228c3724f3a548ba90b93839db2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt;: The value passed to the directive. For example in &lt;code&gt;v-my-directive=&quot;1 + 1&quot;&lt;/code&gt;, the value would be &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; : el valor pasado a la directiva. Por ejemplo, en &lt;code&gt;v-my-directive=&quot;1 + 1&quot;&lt;/code&gt; , el valor ser&amp;iacute;a &lt;code&gt;2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1c44719d0ec5fc8eb73ed93cc532ff73e83afd86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vm.$after&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;vm.$after&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="e8d1f5979a5ef2056db6932733ddf1c6b1e5b210" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vm.$appendTo&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;vm.$appendTo&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="dac0886733b06e13c2eefcc48fb019ea09564a76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vm.$before&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;vm.$before&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="468c796fd3040704dfc7d0471ac19176bfea107b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vm.$delete&lt;/code&gt; is now an alias for &lt;a href=&quot;../api/index#Vue-delete&quot;&gt;&lt;code&gt;Vue.delete&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;vm.$delete&lt;/code&gt; es ahora un alias para &lt;a href=&quot;../api/index#Vue-delete&quot;&gt; &lt;code&gt;Vue.delete&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a4ad40f4acabf9156d1d90b9875bda5e0a2ee8a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vm.$delete&lt;/code&gt;&lt;sup&gt;changed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;vm.$delete&lt;/code&gt;&lt;sup&gt;changed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="1e2be9c383b40bcfc057142704e52d2aaca3a2e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vm.$eval&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;vm.$eval&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="e6eeb4ebcaca34c10de788d4aa119c0bd289d99d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vm.$get&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;vm.$get&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="6f29cf9f3289d71e2d66ebf271f387e1a9862167" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vm.$interpolate&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;vm.$interpolate&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9b981e50525b0b5fc5f9318c6aeb70475797940c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vm.$log&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;vm.$log&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="71394bd0aeb40eefdfe28de13eb2c13e6e728210" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vm.$remove&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;vm.$remove&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="e6e2447410051eb00a7b91bad8803d96c55166ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vm.$set&lt;/code&gt; is now an alias for &lt;a href=&quot;../api/index#Vue-set&quot;&gt;&lt;code&gt;Vue.set&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;vm.$set&lt;/code&gt; ahora es un alias para &lt;a href=&quot;../api/index#Vue-set&quot;&gt; &lt;code&gt;Vue.set&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="505ab69165cf2995cfb11ea40696d4a5b41e0b61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vm.$set&lt;/code&gt;&lt;sup&gt;changed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;vm.$set&lt;/code&gt;&lt;sup&gt;changed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="57401fef8a8e169e7e929d8614a18377bc030efb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vm.$watch&lt;/code&gt; returns an unwatch function that stops firing the callback:</source>
          <target state="translated">&lt;code&gt;vm.$watch&lt;/code&gt; devuelve una funci&amp;oacute;n unwatch que deja de disparar la devoluci&amp;oacute;n de llamada:</target>
        </trans-unit>
        <trans-unit id="ff0f2fc6816834bc9bd1811fed9f22475501ef05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vm.$watch&lt;/code&gt;&lt;sup&gt;changed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;vm.$watch&lt;/code&gt;&lt;sup&gt;changed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="abb21b89e29657db5618127c39362b1e3ae4951e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vnode&lt;/code&gt;: The virtual node produced by Vue&amp;rsquo;s compiler. See the &lt;a href=&quot;../api/index#VNode-Interface&quot;&gt;VNode API&lt;/a&gt; for full details.</source>
          <target state="translated">&lt;code&gt;vnode&lt;/code&gt; : el nodo virtual producido por el compilador de Vue. Consulte la &lt;a href=&quot;../api/index#VNode-Interface&quot;&gt;API de VNode&lt;/a&gt; para obtener detalles completos.</target>
        </trans-unit>
        <trans-unit id="6fac90a8972a070b41a5204ef9013209ac15214e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{string | Array&amp;lt;string&amp;gt;} event&lt;/code&gt; (array only supported in 2.2.0+)</source>
          <target state="translated">&lt;code&gt;{string | Array&amp;lt;string&amp;gt;} event&lt;/code&gt; (el arreglo solo se admite en 2.2.0+)</target>
        </trans-unit>
        <trans-unit id="6c7224a24df013cf42e4daadc20e4df5ec853943" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{string | Array&amp;lt;string&amp;gt;} event&lt;/code&gt; (array only supported in 2.2.2+)</source>
          <target state="translated">&lt;code&gt;{string | Array&amp;lt;string&amp;gt;} event&lt;/code&gt; (el arreglo solo se admite en 2.2.2+)</target>
        </trans-unit>
        <trans-unit id="6e43689c40b946b0e07a166268095704e029777a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;../guide/single-file-components&quot;&gt;Single-file components&lt;/a&gt; should always order &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; tags consistently, with &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; last, because at least one of the other two is always necessary.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;../guide/single-file-components&quot;&gt;Los componentes de un solo archivo&lt;/a&gt; siempre deben ordenar las etiquetas &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; y &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; de manera consistente, con &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; al final, porque al menos uno de los otros dos es siempre necesario.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="80b8a7153f9c08ec435dd45782696c2ee48950d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://exploringjs.com/es6/ch_modules.html&quot;&gt;ES Module&lt;/a&gt;&lt;/strong&gt;: starting in 2.6 Vue provides two ES Modules (ESM) builds:</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://exploringjs.com/es6/ch_modules.html&quot;&gt;M&amp;oacute;dulo ES&lt;/a&gt;&lt;/strong&gt; : a partir de 2.6 Vue proporciona dos compilaciones de m&amp;oacute;dulos ES (ESM):</target>
        </trans-unit>
        <trans-unit id="d9a7bb0f883953526a1865d8aac4e7656ac2c08e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://wiki.commonjs.org/wiki/Modules/1.1&quot;&gt;CommonJS&lt;/a&gt;&lt;/strong&gt;: CommonJS builds are intended for use with older bundlers like &lt;a href=&quot;http://browserify.org/&quot;&gt;browserify&lt;/a&gt; or &lt;a href=&quot;https://webpack.github.io&quot;&gt;webpack 1&lt;/a&gt;. The default file for these bundlers (&lt;code&gt;pkg.main&lt;/code&gt;) is the Runtime only CommonJS build (&lt;code&gt;vue.runtime.common.js&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://wiki.commonjs.org/wiki/Modules/1.1&quot;&gt;CommonJS&lt;/a&gt;&lt;/strong&gt; : Las compilaciones de CommonJS est&amp;aacute;n dise&amp;ntilde;adas para su uso con&lt;a href=&quot;http://browserify.org/&quot;&gt; paquetes&lt;/a&gt; m&amp;aacute;s antiguos como browserify o&lt;a href=&quot;https://webpack.github.io&quot;&gt; webpack 1&lt;/a&gt; . El archivo predeterminado para estos &lt;code&gt;pkg.main&lt;/code&gt; ( pkg.main ) es la compilaci&amp;oacute;n CommonJS de Runtime only ( &lt;code&gt;vue.runtime.common.js&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e366c930ec3b4fec4ced30484f087fb21a3bc30c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://github.com/umdjs/umd&quot;&gt;UMD&lt;/a&gt;&lt;/strong&gt;: UMD builds can be used directly in the browser via a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag. The default file from jsDelivr CDN at &lt;a href=&quot;https://cdn.jsdelivr.net/npm/vue&quot;&gt;https://cdn.jsdelivr.net/npm/vue&lt;/a&gt; is the Runtime + Compiler UMD build (&lt;code&gt;vue.js&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://github.com/umdjs/umd&quot;&gt;UMD&lt;/a&gt;&lt;/strong&gt; : las compilaciones UMD se pueden utilizar directamente en el navegador mediante unaetiqueta &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; . El archivo predeterminado de jsDelivr CDN en&lt;a href=&quot;https://cdn.jsdelivr.net/npm/vue&quot;&gt; https://cdn.jsdelivr.net/npm/vue&lt;/a&gt; es Runtime + Compiler UMD build ( &lt;code&gt;vue.js&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="5db7f89958888998cd9bcd42a6228d2b17c34cba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://github.com/vuejs/vuex&quot;&gt;Vuex&lt;/a&gt; should be preferred for global state management, instead of &lt;code&gt;this.$root&lt;/code&gt; or a global event bus.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://github.com/vuejs/vuex&quot;&gt;Vuex&lt;/a&gt; deber&amp;iacute;a preferirse para la gesti&amp;oacute;n de estado global, en lugar de &lt;code&gt;this.$root&lt;/code&gt; o un bus de eventos global.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="37e6b518d268f1f3b3d45f287e9a79abf8f46460" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;include&lt;/code&gt; and &lt;code&gt;exclude&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;include&lt;/code&gt; y &lt;code&gt;exclude&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ef35c582c5b2bd461a2d356aa4214d114e344cf4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;max&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;max&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="85aaaeeaf0a7187b526384180405f37479896d2b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Always use &lt;code&gt;key&lt;/code&gt; with &lt;code&gt;v-for&lt;/code&gt;.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Utilice siempre la &lt;code&gt;key&lt;/code&gt; con &lt;code&gt;v-for&lt;/code&gt; .&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ff6d5b9ba6e9624c7ac074899b4eb42c0443ed14" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Argument:&lt;/strong&gt; slot name (optional, defaults to &lt;code&gt;default&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;Argumento:&lt;/strong&gt; nombre de la ranura (opcional, predeterminado por &lt;code&gt;default&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="1a0ec348e03e786d802aad611e12e81e27bb1ff8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Argument:&lt;/strong&gt;&lt;code&gt;attrOrProp (optional)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Argumento: &lt;/strong&gt; &lt;code&gt;attrOrProp (optional)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="85df7e86429c05c192674e23b8487f2e4cae4be5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Argument:&lt;/strong&gt;&lt;code&gt;event&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Argument:&lt;/strong&gt;&lt;code&gt;event&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="901012c6b7c03008ad983f7ccb9e58d375f4be41" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Arguments:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Arguments:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8c29b5bb4feffc7c92c14128cc804572a4e880d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Base components (a.k.a. presentational, dumb, or pure components) that apply app-specific styling and conventions should all begin with a specific prefix, such as &lt;code&gt;Base&lt;/code&gt;, &lt;code&gt;App&lt;/code&gt;, or &lt;code&gt;V&lt;/code&gt;.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Componentes de la base (tambi&amp;eacute;n conocido como de presentaci&amp;oacute;n, tonto, o componentes puros) que se aplican las convenciones de estilo y la aplicaci&amp;oacute;n espec&amp;iacute;fica todos deben comenzar con un prefijo espec&amp;iacute;fico, como &lt;code&gt;Base&lt;/code&gt; , &lt;code&gt;App&lt;/code&gt; , o &lt;code&gt;V&lt;/code&gt; .&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7f5c10096c63dd130131b3b88259f79d90ee1d40" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Child components that are tightly coupled with their parent should include the parent component name as a prefix.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Los componentes secundarios que est&amp;aacute;n estrechamente acoplados con su padre deben incluir el nombre del componente principal como prefijo.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8c14ddb64066aed61427d4978482144b31df722f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Compiler&lt;/strong&gt;: code that is responsible for compiling template strings into JavaScript render functions.</source>
          <target state="translated">&lt;strong&gt;Compilador&lt;/strong&gt; : c&amp;oacute;digo que se encarga de compilar cadenas de plantillas en funciones de representaci&amp;oacute;n de JavaScript.</target>
        </trans-unit>
        <trans-unit id="330c865f3b18eef81fd91137dca5e7c7119aab15" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Complex computed properties should be split into as many simpler properties as possible.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Las propiedades computadas complejas deben dividirse en tantas propiedades m&amp;aacute;s simples como sea posible.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b669904bfd5e2e391ecc6ac7b5a1ec8498adffbc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Component &lt;code&gt;data&lt;/code&gt; must be a function.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Los &lt;code&gt;data&lt;/code&gt; componentes deben ser una funci&amp;oacute;n.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="12cb5de838bd8ec65545c17554abf979bcb12cf5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Component Type&lt;/strong&gt; (changes the type of the component)</source>
          <target state="translated">&lt;strong&gt;Tipo de componente&lt;/strong&gt; (cambia el tipo de componente)</target>
        </trans-unit>
        <trans-unit id="1070db4dcb0fea66917b9ecc7b128e19f4c513f6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Component libraries, however, should prefer a class-based strategy instead of using the &lt;code&gt;scoped&lt;/code&gt; attribute.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Sin embargo, las bibliotecas de componentes deber&amp;iacute;an preferir una estrategia basada en clases en lugar de utilizar el atributo de &lt;code&gt;scoped&lt;/code&gt; .&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6032c0672b251116ebe5ef44f6100fec96927074" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Component names in JS/&lt;a href=&quot;../guide/render-function#JSX&quot;&gt;JSX&lt;/a&gt; should always be PascalCase, though they may be kebab-case inside strings for simpler applications that only use global component registration through &lt;code&gt;Vue.component&lt;/code&gt;.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Los nombres de los componentes en JS / &lt;a href=&quot;../guide/render-function#JSX&quot;&gt;JSX&lt;/a&gt; siempre deben ser PascalCase, aunque pueden ser kebab-case dentro de cadenas para aplicaciones m&amp;aacute;s simples que solo usan el registro global de componentes a trav&amp;eacute;s de &lt;code&gt;Vue.component&lt;/code&gt; .&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="59d6baf18988674cb3327d5132939976116ac542" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Component names should always be multi-word, except for root &lt;code&gt;App&lt;/code&gt; components, and built-in components provided by Vue, such as &lt;code&gt;&amp;lt;transition&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;component&amp;gt;&lt;/code&gt;.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Los nombres de los componentes siempre deben ser de varias palabras, excepto los componentes ra&amp;iacute;z de la &lt;code&gt;App&lt;/code&gt; componentes integrados proporcionados por Vue, como &lt;code&gt;&amp;lt;transition&amp;gt;&lt;/code&gt; o &lt;code&gt;&amp;lt;component&amp;gt;&lt;/code&gt; .&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5ecc49e791f298ce670a96901ebb3299a6d49812" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Component names should prefer full words over abbreviations.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Los nombres de los componentes deben preferir las palabras completas a las abreviaturas.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fea9c549a386da04e32898c618a2c46171948b21" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Component names should start with the highest-level (often most general) words and end with descriptive modifying words.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Los nombres de los componentes deben comenzar con las palabras de nivel m&amp;aacute;s alto (a menudo las m&amp;aacute;s generales) y terminar con palabras descriptivas de modificaci&amp;oacute;n.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="80cf97a5933ad9b6123acad9f96d2767993e9837" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Component templates should only include simple expressions, with more complex expressions refactored into computed properties or methods.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Las plantillas de componentes solo deben incluir expresiones simples, con expresiones m&amp;aacute;s complejas refactorizadas en propiedades o m&amp;eacute;todos calculados.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ddc4828fc7d1d4b1ce3dd310e6f7ffd12ed2c264" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Component/instance options should be ordered consistently.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Las opciones de componente / instancia deben ordenarse de forma coherente.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="31f82dffc160b9f426023c849b3f83056f096276" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Components that should only ever have a single active instance should begin with the &lt;code&gt;The&lt;/code&gt; prefix, to denote that there can be only one.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Los componentes que solo deben tener una &amp;uacute;nica instancia activa deben comenzar con el prefijo &lt;code&gt;The&lt;/code&gt; , para indicar que solo puede haber una.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="649d2784b652a983677974b9c419edfb37e1f75c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Components with no content should be self-closing in &lt;a href=&quot;../guide/single-file-components&quot;&gt;single-file components&lt;/a&gt;, string templates, and &lt;a href=&quot;../guide/render-function#JSX&quot;&gt;JSX&lt;/a&gt; - but never in DOM templates.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Los componentes sin contenido deben cerrarse autom&amp;aacute;ticamente en &lt;a href=&quot;../guide/single-file-components&quot;&gt;componentes de un solo archivo&lt;/a&gt; , plantillas de cadenas y &lt;a href=&quot;../guide/render-function#JSX&quot;&gt;JSX&lt;/a&gt; , pero nunca en plantillas DOM.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8972c7e01a3c71a03395aa066c335dc25874c6c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Composition&lt;/strong&gt; (merges properties into the options)</source>
          <target state="translated">&lt;strong&gt;Composici&amp;oacute;n&lt;/strong&gt; (fusiona propiedades en las opciones)</target>
        </trans-unit>
        <trans-unit id="60fabded27dfcc978fae4c0b8d31ca48e5c51013" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Conditionals&lt;/strong&gt; (whether the element is rendered/shown)</source>
          <target state="translated">&lt;strong&gt;Condicionales&lt;/strong&gt; (si el elemento es renderizado / mostrado)</target>
        </trans-unit>
        <trans-unit id="0279cf5d166f3e0294334d325d4fd07eb9f118d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Content&lt;/strong&gt; (overrides the content of the element)</source>
          <target state="translated">&lt;strong&gt;Contenido&lt;/strong&gt; (anula el contenido del elemento)</target>
        </trans-unit>
        <trans-unit id="5ee7eade560c0dd0696b80fb7add4a23a698e3b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;[&quot;{{&quot;, &quot;}}&quot;]&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Predeterminado: &lt;/strong&gt; &lt;code&gt;[&quot;{{&quot;, &quot;}}&quot;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b241a5abdc77897c492cfcb7d360a119102193ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;[]&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d029e9d9f74ab88f590177d6c19135c4439e89b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;false (from 2.2.3+)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Predeterminado: &lt;/strong&gt; &lt;code&gt;false (from 2.2.3+)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f7d74b8084339714face30320f2494ee1712275f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8dd55cfc1da367d187668279378ae6d546cede29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0098e3775a64a58246b237645a7ec597838f5d2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; (&lt;code&gt;false&lt;/code&gt; in production builds)</source>
          <target state="translated">&lt;strong&gt;Predeterminado: &lt;/strong&gt; &lt;code&gt;true&lt;/code&gt; ( &lt;code&gt;false&lt;/code&gt; en compilaciones de producci&amp;oacute;n)</target>
        </trans-unit>
        <trans-unit id="09e666297774299ab8e69da2379a5022b4be951d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f55e080a97a6af0c4009ba29f960e2aae463df51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;{}&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;{}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c3704abe1d37e76398ba5940843f37d776ab8ea4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Definition&lt;/strong&gt; (provides the component options)</source>
          <target state="translated">&lt;strong&gt;Definici&amp;oacute;n&lt;/strong&gt; (proporciona las opciones de los componentes)</target>
        </trans-unit>
        <trans-unit id="670a30ba85c2b7ec88690585d92bd52152734367" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Details:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Details:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c0ebd4e953a94526b58bb125c9e7e0a77e00d15d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Details&lt;/strong&gt;: Provides the installed version of Vue as a string. This is especially useful for community plugins and components, where you might use different strategies for different versions.</source>
          <target state="translated">&lt;strong&gt;Detalles&lt;/strong&gt; : proporciona la versi&amp;oacute;n instalada de Vue como una cadena. Esto es especialmente &amp;uacute;til para complementos y componentes de la comunidad, donde puede usar diferentes estrategias para diferentes versiones.</target>
        </trans-unit>
        <trans-unit id="38e9dd4854488b8db9a8fe2026faf9549edbeaea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Develop learning materials.&lt;/strong&gt; It&amp;rsquo;s often said that the best way to learn is to teach. If there&amp;rsquo;s something interesting you&amp;rsquo;re doing with Vue, strengthen your expertise by writing a blog post, developing a workshop, or even publishing a gist that you share on social media.</source>
          <target state="translated">&lt;strong&gt;Desarrollar materiales de aprendizaje. &lt;/strong&gt;A menudo se dice que la mejor forma de aprender es ense&amp;ntilde;ar. Si hay algo interesante que est&amp;aacute; haciendo con Vue, refuerce su experiencia escribiendo una publicaci&amp;oacute;n de blog, desarrollando un taller o incluso publicando una esencia que comparte en las redes sociales.</target>
        </trans-unit>
        <trans-unit id="33297db0f9366ab590e27a7920f3c76ecadbadfd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Directive shorthands (&lt;code&gt;:&lt;/code&gt; for &lt;code&gt;v-bind:&lt;/code&gt;, &lt;code&gt;@&lt;/code&gt; for &lt;code&gt;v-on:&lt;/code&gt; and &lt;code&gt;#&lt;/code&gt; for &lt;code&gt;v-slot&lt;/code&gt;) should be used always or never.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Taquigraf&amp;iacute;as la directiva ( &lt;code&gt;:&lt;/code&gt; para &lt;code&gt;v-bind:&lt;/code&gt; , &lt;code&gt;@&lt;/code&gt; para &lt;code&gt;v-on:&lt;/code&gt; y &lt;code&gt;#&lt;/code&gt; para &lt;code&gt;v-slot&lt;/code&gt; ) se debe utilizar siempre o nunca.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5e22652338ed6960afb4b599dd9fce9779cdc8fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Does not expect expression&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;No espera expresi&amp;oacute;n&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5666482d71ef230ec4048b63256dc97dcb881189" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Easier to read&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;M&amp;aacute;s f&amp;aacute;cil de leer&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b454432c041088580d48d79bff6e8c69b10a767e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Easier to test&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;M&amp;aacute;s f&amp;aacute;cil de probar&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="638cd0bc7500a23e53cbdfe519cb31952cddcc41" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Element selectors should be avoided with &lt;code&gt;scoped&lt;/code&gt;.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Los selectores de elementos deben evitarse con &lt;code&gt;scoped&lt;/code&gt; .&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a1785f83ab6bc5d6e19caf3d4220043888902d28" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Elements with multiple attributes should span multiple lines, with one attribute per line.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Los elementos con m&amp;uacute;ltiples atributos deben abarcar varias l&amp;iacute;neas, con un atributo por l&amp;iacute;nea.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="72495c0126129346f3a2a57da3953c3c6eea80eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Error Propagation Rules&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Reglas de propagaci&amp;oacute;n de errores&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2c82e51a4a5dcf1c48f49c2c08a74082e57288ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Events:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Events:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="26275c24038f6f0269283d2cd56eb668c97eb84a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Events&lt;/strong&gt; (callbacks triggered by reactive events)</source>
          <target state="translated">&lt;strong&gt;Eventos&lt;/strong&gt; (devoluciones de llamada desencadenadas por eventos reactivos)</target>
        </trans-unit>
        <trans-unit id="4e2021f429648043552bb98e0d02b664a4de5261" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Events&lt;/strong&gt; (component event listeners)</source>
          <target state="translated">&lt;strong&gt;Eventos&lt;/strong&gt; (oyentes de eventos de componentes)</target>
        </trans-unit>
        <trans-unit id="4168878b06eaa6917a0f012585506612f5054ea6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1bc0a5d67820f61786ae04d054caabfe5bd3f6ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Examples:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Examples:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="db3b4f12af78b4d578978b4d1b66314e3bb540eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Expects:&lt;/strong&gt; JavaScript expression that is valid in a function argument position (supports destructuring in &lt;a href=&quot;../guide/components-slots#Slot-Props-Destructuring&quot;&gt;supported environments&lt;/a&gt;). Optional - only needed if expecting props to be passed to the slot.</source>
          <target state="translated">&lt;strong&gt;Espera:&lt;/strong&gt; expresi&amp;oacute;n de JavaScript que es v&amp;aacute;lida en una posici&amp;oacute;n de argumento de funci&amp;oacute;n (admite desestructuraci&amp;oacute;n en &lt;a href=&quot;../guide/components-slots#Slot-Props-Destructuring&quot;&gt;entornos compatibles&lt;/a&gt; ). Opcional: solo es necesario si espera que se pasen accesorios a la ranura.</target>
        </trans-unit>
        <trans-unit id="d9d4bdd1b3db01d31d8bf74f267e6baecc3386f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Expects:&lt;/strong&gt; varies based on value of form inputs element or output of components</source>
          <target state="translated">&lt;strong&gt;Espera:&lt;/strong&gt; var&amp;iacute;a seg&amp;uacute;n el valor del elemento de entrada del formulario o la salida de los componentes</target>
        </trans-unit>
        <trans-unit id="0d11b300df1da0b4058d4da1c8c3f39b2d4a723e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Expects:&lt;/strong&gt;&lt;code&gt;Array | Object | number | string | Iterable (since 2.6)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Espera: &lt;/strong&gt; &lt;code&gt;Array | Object | number | string | Iterable (since 2.6)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="31e599a39b8279481f07e91bf63a62c6b6d2ef22" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Expects:&lt;/strong&gt;&lt;code&gt;Function | Inline Statement | Object&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Espera: &lt;/strong&gt; &lt;code&gt;Function | Inline Statement | Object&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f91ac6aa07ce5c805bd0876504d349578d9c7109" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Expects:&lt;/strong&gt;&lt;code&gt;any (with argument) | Object (without argument)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Espera: &lt;/strong&gt; &lt;code&gt;any (with argument) | Object (without argument)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0618a9bb43f4a5f84102eb945be26d0d63ad1ee2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Expects:&lt;/strong&gt;&lt;code&gt;any&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Expects:&lt;/strong&gt;&lt;code&gt;any&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="605bd65cd4cd4828fac7e01c366cdb864da5e77b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Expects:&lt;/strong&gt;&lt;code&gt;function argument expression&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Espera: &lt;/strong&gt; &lt;code&gt;function argument expression&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e25e1be19e286845489a734fb6a53828e92f749d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Expects:&lt;/strong&gt;&lt;code&gt;number | string&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Espera: &lt;/strong&gt; &lt;code&gt;number | string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8a7f0335895904ad2f729e9763c9b27268d43747" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Expects:&lt;/strong&gt;&lt;code&gt;string | Object (component&amp;rsquo;s options object)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Espera: &lt;/strong&gt; &lt;code&gt;string | Object (component&amp;rsquo;s options object)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c020bbcee9bb619cb464ebcee54b7feb48d74e8a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Expects:&lt;/strong&gt;&lt;code&gt;string&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Expects:&lt;/strong&gt;&lt;code&gt;string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="97823cf4fbee88626858f29b12850205387a6039" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Filenames of &lt;a href=&quot;../guide/single-file-components&quot;&gt;single-file components&lt;/a&gt; should either be always PascalCase or always kebab-case.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Los nombres de &lt;a href=&quot;../guide/single-file-components&quot;&gt;archivo de los componentes&lt;/a&gt; de un solo archivo deben ser siempre PascalCase o siempre kebab-case.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fddcdafb247623fb8b4c87606de9b27df793bacd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;For applications, styles in a top-level &lt;code&gt;App&lt;/code&gt; component and in layout components may be global, but all other components should always be scoped.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Para las aplicaciones, los estilos en un componente de la &lt;code&gt;App&lt;/code&gt; nivel superior y en los componentes de dise&amp;ntilde;o pueden ser globales, pero todos los dem&amp;aacute;s componentes siempre deben tener un alcance.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8b5eb97ea9993c46c17f79e9a998254fdd2f05e4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Full (production)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Completo (producci&amp;oacute;n)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="be686f38b457d90ffc224acb3ec03b7b7e86eca8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Full&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Full&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bf11e13c7ab9f59963581b6f063d5a96dd29d1d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Full&lt;/strong&gt;: builds that contain both the compiler and the runtime.</source>
          <target state="translated">&lt;strong&gt;Completo&lt;/strong&gt; : compilaciones que contienen tanto el compilador como el tiempo de ejecuci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="f3fa7204f8b746d36df3ac61484905acd924d349" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Global Awareness&lt;/strong&gt; (requires knowledge beyond the component)</source>
          <target state="translated">&lt;strong&gt;Conciencia global&lt;/strong&gt; (requiere conocimiento m&amp;aacute;s all&amp;aacute; del componente)</target>
        </trans-unit>
        <trans-unit id="8a23179aa54adb259c706287a4f178e2376909e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Global definitions&lt;/strong&gt; force unique names for every component</source>
          <target state="translated">&lt;strong&gt;Las definiciones globales&lt;/strong&gt; fuerzan nombres &amp;uacute;nicos para cada componente</target>
        </trans-unit>
        <trans-unit id="b8d7d6856790314324416e20c9332772457103cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Help meetup organizers.&lt;/strong&gt; There can never be too much help when it comes to running an event, so offer a hand to help out local organizers to help make every event a success.</source>
          <target state="translated">&lt;strong&gt;Ayuda a los organizadores de reuniones. &lt;/strong&gt;Nunca puede haber demasiada ayuda cuando se trata de organizar un evento, as&amp;iacute; que ofrezca una mano para ayudar a los organizadores locales para que cada evento sea un &amp;eacute;xito.</target>
        </trans-unit>
        <trans-unit id="859e7621593ceecd9a89afeb5a8858ed92a46010" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important&lt;/strong&gt;: the built files in GitHub&amp;rsquo;s &lt;code&gt;/dist&lt;/code&gt; folder are only checked-in during releases. To use Vue from the latest source code on GitHub, you will have to build it yourself!</source>
          <target state="translated">&lt;strong&gt;Importante&lt;/strong&gt; : los archivos compilados en la carpeta &lt;code&gt;/dist&lt;/code&gt; de GitHub solo se registran durante las versiones. Para usar Vue desde el &amp;uacute;ltimo c&amp;oacute;digo fuente en GitHub, &amp;iexcl;tendr&amp;aacute; que compilarlo usted mismo!</target>
        </trans-unit>
        <trans-unit id="8eddea28c04804d5cdd6c44aeb0017b9509b76d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;In most projects, component names should always be PascalCase in &lt;a href=&quot;../guide/single-file-components&quot;&gt;single-file components&lt;/a&gt; and string templates - but kebab-case in DOM templates.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;En la mayor&amp;iacute;a de los proyectos, los nombres de los componentes siempre deben ser PascalCase en &lt;a href=&quot;../guide/single-file-components&quot;&gt;los componentes de un solo archivo&lt;/a&gt; y en las plantillas de cadenas, pero en kebab en las plantillas DOM.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7a21702522e676296f3493a3bdf8d8d4178fdcc8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Interface&lt;/strong&gt; (the interface to the component)</source>
          <target state="translated">&lt;strong&gt;Interfaz&lt;/strong&gt; (la interfaz del componente)</target>
        </trans-unit>
        <trans-unit id="a2cad8ced8c039b0d36d08af7e77c606dced0283" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;It&amp;rsquo;s usually best to use &lt;code&gt;key&lt;/code&gt; with &lt;code&gt;v-if&lt;/code&gt; + &lt;code&gt;v-else&lt;/code&gt;, if they are the same element type (e.g. both &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; elements).&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Por lo general, es mejor usar &lt;code&gt;key&lt;/code&gt; con &lt;code&gt;v-if&lt;/code&gt; + &lt;code&gt;v-else&lt;/code&gt; , si son del mismo tipo de elemento (por ejemplo, ambos elementos &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; ).&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ed0da52f24fc23162d611a9446c6dec1db5c9130" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Limited to:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Limitado a:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="73b102f0b6dbbb699bb3240e3ac70456e2a1ce34" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;List Rendering&lt;/strong&gt; (creates multiple variations of the same element)</source>
          <target state="translated">&lt;strong&gt;Representaci&amp;oacute;n de listas&lt;/strong&gt; (crea m&amp;uacute;ltiples variaciones del mismo elemento)</target>
        </trans-unit>
        <trans-unit id="8d08a884b7774d818566f18f719401c683f2f423" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Local State&lt;/strong&gt; (local reactive properties)</source>
          <target state="translated">&lt;strong&gt;Estado&lt;/strong&gt; local (propiedades reactivas locales)</target>
        </trans-unit>
        <trans-unit id="7413394ced6fa7e66835478f101bf73395fa2218" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Modern JavaScript with ES2015/16&lt;/strong&gt;: Read through Babel&amp;rsquo;s &lt;a href=&quot;https://babeljs.io/docs/learn-es2015/&quot;&gt;Learn ES2015 guide&lt;/a&gt;. You don&amp;rsquo;t have to memorize every feature right now, but keep this page as a reference you can come back to.</source>
          <target state="translated">&lt;strong&gt;JavaScript moderno con ES2015 / 16&lt;/strong&gt; : lea la &lt;a href=&quot;https://babeljs.io/docs/learn-es2015/&quot;&gt;gu&amp;iacute;a Learn ES2015 de&lt;/a&gt; Babel . No es necesario que memorice todas las funciones en este momento, pero mantenga esta p&amp;aacute;gina como referencia a la que pueda volver.</target>
        </trans-unit>
        <trans-unit id="759cdbc7016b8df56d0f380dd2b2f5652a099ecf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Modifiers:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Modifiers:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7a9edbf4e1d29e963ce27ada6a35a7f6eb323d53" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;More adaptable to changing requirements&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;M&amp;aacute;s adaptable a los requisitos cambiantes&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bbb945645dad48b1151e86ddc17619445af4ecf9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Never use &lt;code&gt;v-if&lt;/code&gt; on the same element as &lt;code&gt;v-for&lt;/code&gt;.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Nunca use &lt;code&gt;v-if&lt;/code&gt; en el mismo elemento que &lt;code&gt;v-for&lt;/code&gt; .&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b8efe0dd83b74239daa3e2eeae247a424aacccb1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;No CSS support&lt;/strong&gt; means that while HTML and JavaScript are modularized into components, CSS is conspicuously left out</source>
          <target state="translated">&lt;strong&gt;La falta de compatibilidad con CSS&lt;/strong&gt; significa que mientras HTML y JavaScript est&amp;aacute;n modularizados en componentes, CSS se deja de lado</target>
        </trans-unit>
        <trans-unit id="708ba417a55b8fbadb58cd0c4df6960764b68b90" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;No build step&lt;/strong&gt; restricts us to HTML and ES5 JavaScript, rather than preprocessors like Pug (formerly Jade) and Babel</source>
          <target state="translated">&lt;strong&gt;Ning&amp;uacute;n paso de compilaci&amp;oacute;n&lt;/strong&gt; nos restringe a HTML y ES5 JavaScript, en lugar de preprocesadores como Pug (anteriormente Jade) y Babel.</target>
        </trans-unit>
        <trans-unit id="ed72b599aa666ec8a50be2dbe2d6abd81d7c2a72" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Node Package Manager (NPM)&lt;/strong&gt;: Read the &lt;a href=&quot;https://docs.npmjs.com/getting-started/what-is-npm&quot;&gt;Getting Started guide&lt;/a&gt; through section &lt;em&gt;10: Uninstalling global packages&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;Administrador de paquetes de nodo (NPM)&lt;/strong&gt; : lea la &lt;a href=&quot;https://docs.npmjs.com/getting-started/what-is-npm&quot;&gt;gu&amp;iacute;a de introducci&amp;oacute;n&lt;/a&gt; hasta la secci&amp;oacute;n &lt;em&gt;10: Desinstalaci&amp;oacute;n de paquetes globales&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="38aed51ce3b68c87b6b4572535e5c0577b7fd751" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Non-Reactive Properties&lt;/strong&gt; (instance properties independent of the reactivity system)</source>
          <target state="translated">&lt;strong&gt;Propiedades no reactivas&lt;/strong&gt; (propiedades de instancia independientes del sistema de reactividad)</target>
        </trans-unit>
        <trans-unit id="f933f46da514a2fdb43be91fa86036ab31069cc2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Non-empty HTML attribute values should always be inside quotes (single or double, whichever is not used in JS).&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Los valores de atributo HTML no vac&amp;iacute;os siempre deben estar entre comillas (simples o dobles, lo que no se use en JS).&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="941374b397d27fae73264211b1df1a35d0ec1059" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; since 2.6.0+, there are two notable changes to this property:</source>
          <target state="translated">&lt;strong&gt;Nota:&lt;/strong&gt; desde 2.6.0+, hay dos cambios notables en esta propiedad:</target>
        </trans-unit>
        <trans-unit id="c08f5b0f561a14dc143859f6d16020eaa1078df1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;v-slot:foo&lt;/code&gt; is supported in v2.6+. For older versions, you can use the &lt;a href=&quot;../guide/components-slots#Deprecated-Syntax&quot;&gt;deprecated syntax&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Nota: &lt;/strong&gt; &lt;code&gt;v-slot:foo&lt;/code&gt; es compatible con v2.6 +. Para versiones anteriores, puede utilizar la &lt;a href=&quot;../guide/components-slots#Deprecated-Syntax&quot;&gt;sintaxis obsoleta&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2f51242d40b473000f79f7174c5a056075aa3f0f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Only works in development mode.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Solo funciona en modo desarrollo.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cb1cf8401e5ae8979d62413b386fbf0e67928c58" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Option: deep&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Opci&amp;oacute;n: profunda&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="38d30dd612e7d86c03ace76fc8eaad0bb3c26c1f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Option: immediate&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Opci&amp;oacute;n: inmediata&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e05b0219610b7cada23af8c947c90b24246c1f5b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Other Attributes&lt;/strong&gt; (all unspecified bound &amp;amp; unbound attributes)</source>
          <target state="translated">&lt;strong&gt;Otros atributos&lt;/strong&gt; (todos los atributos vinculados y no vinculados no especificados)</target>
        </trans-unit>
        <trans-unit id="80c877b924c706abe4c17227940c7e09c897f967" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Prefer &lt;a href=&quot;#v-slot&quot;&gt;v-slot&lt;/a&gt; in 2.6.0+.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Prefiero &lt;a href=&quot;#v-slot&quot;&gt;la ranura&lt;/a&gt; en V en 2.6.0+.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c418b6815beb7efd7d2b58e7df362f41815b9d8d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Present at your local meetup.&lt;/strong&gt; Whether it&amp;rsquo;s giving a talk or running a workshop, you can bring a lot of value to your community by helping both new and experienced Vue developers continue to grow.</source>
          <target state="translated">&lt;strong&gt;Presente en su reuni&amp;oacute;n local. &lt;/strong&gt;Ya sea para dar una charla o realizar un taller, puede aportar mucho valor a su comunidad al ayudar a los desarrolladores de Vue nuevos y experimentados a seguir creciendo.</target>
        </trans-unit>
        <trans-unit id="0feb9d8624223b0415052afcdca0d85f1729096b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Prop definitions should be as detailed as possible.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Las definiciones de prop deben ser lo m&amp;aacute;s detalladas posible.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="20f4a8aefac26d08f8b6f5df7ad709bbf6d79918" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Prop names should always use camelCase during declaration, but kebab-case in templates and &lt;a href=&quot;../guide/render-function#JSX&quot;&gt;JSX&lt;/a&gt;.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Los nombres de accesorios siempre deben usar camelCase durante la declaraci&amp;oacute;n, pero kebab-case en plantillas y &lt;a href=&quot;../guide/render-function#JSX&quot;&gt;JSX&lt;/a&gt; .&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dab9da247b8351e83d736e55d134f2d0b569b3a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Props and events should be preferred for parent-child component communication, instead of &lt;code&gt;this.$parent&lt;/code&gt; or mutating props.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Los accesorios y eventos deben ser preferidos para la comunicaci&amp;oacute;n de componentes padre-hijo, en lugar de &lt;code&gt;this.$parent&lt;/code&gt; o accesorios mutantes.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d6be65cfbcfa67055bc600c48fbf98a8983d5f66" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Props:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Props:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b1681684e28d50d4e0b68a466fdf93d697603248" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Read only&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Solo lectura&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0d82fcc0aefc9c30c1614767b4ec2071a87651b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Render Modifiers&lt;/strong&gt; (changes the way the element renders)</source>
          <target state="translated">&lt;strong&gt;Render Modifiers&lt;/strong&gt; (cambia la forma en que se representa el elemento)</target>
        </trans-unit>
        <trans-unit id="046248a67f81a87275d2713361d93e6277e57fc1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Rendering&lt;/strong&gt; (the declarative description of the component output)</source>
          <target state="translated">&lt;strong&gt;Renderizado&lt;/strong&gt; (la descripci&amp;oacute;n declarativa de la salida del componente)</target>
        </trans-unit>
        <trans-unit id="bba8b85e09d04e9ff3833d399b110655c9d34fd1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Replaced by &lt;a href=&quot;#slot-scope&quot;&gt;slot-scope&lt;/a&gt; in 2.5.0+. Prefer &lt;a href=&quot;#v-slot&quot;&gt;v-slot&lt;/a&gt; in 2.6.0+.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Reemplazado por &lt;a href=&quot;#slot-scope&quot;&gt;slot-scope&lt;/a&gt; en 2.5.0+. Prefiere &lt;a href=&quot;#v-slot&quot;&gt;la ranura&lt;/a&gt; en V en 2.6.0+.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a8eef9ba06cd4cb3f284b874b86d987edb1aa3d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Restriction:&lt;/strong&gt; Only accepts &lt;code&gt;Function&lt;/code&gt; when used in a component definition.</source>
          <target state="translated">&lt;strong&gt;Restricci&amp;oacute;n:&lt;/strong&gt; solo acepta &lt;code&gt;Function&lt;/code&gt; cuando se usa en una definici&amp;oacute;n de componente.</target>
        </trans-unit>
        <trans-unit id="b90bf25d62c2eeb0635c85b67ee56f1f614d8001" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Restriction:&lt;/strong&gt; only respected in instance creation via &lt;code&gt;new&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Restricci&amp;oacute;n:&lt;/strong&gt; solo se respeta en la creaci&amp;oacute;n de instancias mediante &lt;code&gt;new&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8703a57646acf6bf8a7bcb014e1277df0396704b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Restriction:&lt;/strong&gt; only respected when used as a component option.</source>
          <target state="translated">&lt;strong&gt;Restricci&amp;oacute;n:&lt;/strong&gt; solo se respeta cuando se utiliza como opci&amp;oacute;n de componente.</target>
        </trans-unit>
        <trans-unit id="e7d6efc9eea5ec5899336b013d8a4a04ddbc1570" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Restriction:&lt;/strong&gt; previous sibling element must have &lt;code&gt;v-if&lt;/code&gt; or &lt;code&gt;v-else-if&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Restricci&amp;oacute;n: el&lt;/strong&gt; elemento hermano anterior debe tener &lt;code&gt;v-if&lt;/code&gt; o &lt;code&gt;v-else-if&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1cd4d042d1f3b77413125eae571f5dfa674118a9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Restrictions:&lt;/strong&gt; This option is only available in the full build, with in-browser compilation.</source>
          <target state="translated">&lt;strong&gt;Restricciones:&lt;/strong&gt; esta opci&amp;oacute;n solo est&amp;aacute; disponible en la compilaci&amp;oacute;n completa, con compilaci&amp;oacute;n en el navegador.</target>
        </trans-unit>
        <trans-unit id="3fffbe308cb3aebc9809737db9f95e9b2f39ae1d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Returns:&lt;/strong&gt; the set value.</source>
          <target state="translated">&lt;strong&gt;Devuelve:&lt;/strong&gt; el valor establecido.</target>
        </trans-unit>
        <trans-unit id="4d4a4525555cd7f56fa01b2fa1893dc073ac0686" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Returns:&lt;/strong&gt;&lt;code&gt;vm&lt;/code&gt; - the instance itself</source>
          <target state="translated">&lt;strong&gt;Devuelve: &lt;/strong&gt; &lt;code&gt;vm&lt;/code&gt; - la propia instancia</target>
        </trans-unit>
        <trans-unit id="e4729b1dcc4e75688e14c6fe1c83c8e0554a1125" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Returns:&lt;/strong&gt;&lt;code&gt;{Function} unwatch&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Devoluciones: &lt;/strong&gt; &lt;code&gt;{Function} unwatch&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d66c166160c0151a11c70fcf2705117948ee4002" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Runtime-only (production)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Solo en tiempo de ejecuci&amp;oacute;n (producci&amp;oacute;n)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="25cf73882e762dba8afee16b525b99baa1638042" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Runtime-only&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Runtime-only&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2b8151382b1dcb8df49d22db4a74cf360a4c0fd1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Runtime&lt;/strong&gt;: code that is responsible for creating Vue instances, rendering and patching virtual DOM, etc. Basically everything minus the compiler.</source>
          <target state="translated">&lt;strong&gt;Tiempo de ejecuci&amp;oacute;n&lt;/strong&gt; : c&amp;oacute;digo que se encarga de crear instancias de Vue, renderizar y parchear DOM virtual, etc. B&amp;aacute;sicamente todo menos el compilador.</target>
        </trans-unit>
        <trans-unit id="551e0b7660ec60a1ba024654ebf85dd6e11ea8a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="75b4cfeef7506f48dfa557a62c3c7451c92c8d48" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;#Vue-delete&quot;&gt;Vue.delete&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;#Vue-delete&quot;&gt;Vue.delete&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a46648f32cc811961aba9d8ce45132a5e6185843" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;#Vue-filter&quot;&gt;&lt;code&gt;Vue.filter&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;#Vue-filter&quot;&gt; &lt;code&gt;Vue.filter&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f50569412e532ff87a77992d17cc3bfc85802b39" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;#Vue-set&quot;&gt;Vue.set&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;#Vue-set&quot;&gt;Vue.set&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b6e7fa669571c4c87270f6a485dcaaa85df71aa8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;#data&quot;&gt;Options / Data - data&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;#data&quot;&gt;Opciones / Datos - datos&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b6f293290f184cc5ab66dddd694d353b7b1ffe0b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;#vm-watch&quot;&gt;Instance Methods / Data - vm.$watch&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Consulte tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;#vm-watch&quot;&gt;M&amp;eacute;todos / Datos de instancia - vm. $ Watch&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="655730a153c43078f4f87ccfddc2f6fb750a862c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/components&quot;&gt;Components&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/components&quot;&gt;Componentes&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a92cdc3b11d63af56fedffda35b9c9d3ba54cd70" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/components#Child-Component-Refs&quot;&gt;Child Component Refs&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;V&amp;eacute;ase tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/components#Child-Component-Refs&quot;&gt;referencias de componentes secundarios&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="40d5f587a413c7f218daa3b017b2791702860d16" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/components#Content-Distribution-with-Slots&quot;&gt;Content Distribution with Slots&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/components#Content-Distribution-with-Slots&quot;&gt;Distribuci&amp;oacute;n de contenido con ranuras&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="238943e8b51fe9df41911761dc0a75d5b8d90d0d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/components#Dynamic-Components&quot;&gt;Dynamic Components&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/components#Dynamic-Components&quot;&gt;Componentes din&amp;aacute;micos&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="646c04867d303b3267d9b377d73333b03cdf233d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/components#Named-Slots-with-slot&quot;&gt;Named Slots with &lt;code&gt;slot&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/components#Named-Slots-with-slot&quot;&gt;Ranuras con nombre con &lt;code&gt;slot&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0760a779de486365707dc9b03f7f30a90047835c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/components#Scoped-Slots-with-slot-scope&quot;&gt;Scoped Slots with &lt;code&gt;slot-scope&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/components#Scoped-Slots-with-slot-scope&quot;&gt;Ranuras con &lt;code&gt;slot-scope&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="93345cc9bbfa986b4f8e3caa45027ffeff574e6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/components#keep-alive&quot;&gt;Dynamic Components - keep-alive&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/components#keep-alive&quot;&gt;Componentes din&amp;aacute;micos: mantener vivo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="891a07243f19d9eb1039fefd2ed4e55925aaae96" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/components-props&quot;&gt;Props&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/components-props&quot;&gt;Props&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f426622eb0ceb376db671b70eda5c30ffa4b1dfa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/computed&quot;&gt;Computed Properties&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/computed&quot;&gt;Propiedades calculadas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c00eff06292af42acdd216d6d6b5576f362b2c93" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/conditional&quot;&gt;Conditional Rendering - v-if&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Consulte tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/conditional&quot;&gt;Representaci&amp;oacute;n condicional - v-if&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="79b6135ba2dc486a48201143bb838e83653261b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/conditional#v-else&quot;&gt;Conditional Rendering - v-else&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/conditional#v-else&quot;&gt;Representaci&amp;oacute;n condicional - v-else&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b65174231e4b06ed19f9a34c83c5acc0fe31872d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/conditional#v-else-if&quot;&gt;Conditional Rendering - v-else-if&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Consulte tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/conditional#v-else-if&quot;&gt;Representaci&amp;oacute;n condicional - v-else-if&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="299014eee91e616bfcca56a737112c80cfc3d772" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/conditional#v-show&quot;&gt;Conditional Rendering - v-show&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Consulte tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/conditional#v-show&quot;&gt;Representaci&amp;oacute;n condicional - v-show&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="726f3c96e9d38e8ad18ab2fba28c05495c7d79da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/custom-directive&quot;&gt;Custom Directives&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/custom-directive&quot;&gt;Directivas personalizadas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3e667e491ee0b98701fd24edf3c1800397c22ba0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/events&quot;&gt;Event Handling&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/events&quot;&gt;Manejo de eventos&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="09c6109d2241526adecc277a30dd85e60041ec13" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/filters&quot;&gt;Filters&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/filters&quot;&gt;Filtros&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="85730f6582b1d6edf8fee12b63343890fc741479" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/instance#Lifecycle-Diagram&quot;&gt;Lifecycle Diagram&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/instance#Lifecycle-Diagram&quot;&gt;Diagrama del ciclo de vida&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fee4e92c3ff05e7b974fac7e36e21e4f08139ffc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/mixins&quot;&gt;Mixins&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/mixins&quot;&gt;Mixins&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="79c24829ffda969dbdab6312fa3c8668bdcc8344" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/mixins#Custom-Option-Merge-Strategies&quot;&gt;Custom Option Merging Strategies&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Consulte tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/mixins#Custom-Option-Merge-Strategies&quot;&gt;Estrategias de combinaci&amp;oacute;n de opciones personalizadas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="65338c8d1b748556dda68a96bd16ca604103be3c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/mixins#Global-Mixin&quot;&gt;Global Mixin&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/mixins#Global-Mixin&quot;&gt;Global Mixin&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2aa0d9b7b29e84118ca532cd4cab105de8c618fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/plugins&quot;&gt;Plugins&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/plugins&quot;&gt;Complementos&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1a66fbcf3dd33b72ef6aa5cb84f68c991d9b2130" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/reactivity&quot;&gt;Reactivity in Depth&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/reactivity&quot;&gt;Reactividad en profundidad&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="77f0fdd0b4f8f14f94f58475a1cf9012ff65093f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/reactivity#Async-Update-Queue&quot;&gt;Async Update Queue&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Consulte tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/reactivity#Async-Update-Queue&quot;&gt;Cola de actualizaci&amp;oacute;n asincr&amp;oacute;nica&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c5c8b1a2063853ab1d1fda85eaa6d78b57690dcc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/render-function&quot;&gt;Render Functions&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/render-function&quot;&gt;Funciones de renderizado&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d3f132062e1b5c69afed4be050d4f44f8cc25213" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/render-function#Functional-Components&quot;&gt;Functional Components&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/render-function#Functional-Components&quot;&gt;Componentes funcionales&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a75eaed38f05fb030b2de4cec73f626d51233a09" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/ssr&quot;&gt;Server-Side Rendering&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/ssr&quot;&gt;Representaci&amp;oacute;n del lado del servidor&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="56b0efd9ac9cd69c32d96726259f9d79c269598f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/syntax#Raw-HTML&quot;&gt;Data Binding Syntax - Interpolations&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Consulte tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/syntax#Raw-HTML&quot;&gt;Sintaxis de enlace de datos: interpolaciones&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8271161c56b34f4ed09e96a61dcacd2e4643a633" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/syntax#Text&quot;&gt;Data Binding Syntax - Interpolations&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Consulte tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/syntax#Text&quot;&gt;Sintaxis de enlace de datos: interpolaciones&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3370eb77a32ecd0977e07c533683874b0df2a08d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/transitions&quot;&gt;Transitions: Entering, Leaving, and Lists&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Consulte tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/transitions&quot;&gt;Transiciones: entrar, salir y listas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8ad1ceff22433a10430b5d57f3dcc3643a132944" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Shorthand:&lt;/strong&gt;&lt;code&gt;#&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Shorthand:&lt;/strong&gt;&lt;code&gt;#&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fcc4514ab176e446d75e245a88b51dc322458804" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Shorthand:&lt;/strong&gt;&lt;code&gt;:&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Shorthand:&lt;/strong&gt;&lt;code&gt;:&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="56b80bf8a5cea64dfc81e0548d9ea7d0db1bbc57" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Shorthand:&lt;/strong&gt;&lt;code&gt;@&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Shorthand:&lt;/strong&gt;&lt;code&gt;@&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1485f213371049288a9043c4c6e7c71fc5301b3a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Side Effects&lt;/strong&gt; (triggers effects outside the component)</source>
          <target state="translated">&lt;strong&gt;Efectos secundarios&lt;/strong&gt; (desencadena efectos fuera del componente)</target>
        </trans-unit>
        <trans-unit id="4e3e066f93a98ff9b6f86f31949522e73647cfce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Slot props allow us to turn slots into reusable templates that can render different content based on input props.&lt;/strong&gt; This is most useful when you are designing a reusable component that encapsulates data logic while allowing the consuming parent component to customize part of its layout.</source>
          <target state="translated">&lt;strong&gt;Los accesorios de tragamonedas nos permiten convertirlos en plantillas reutilizables que pueden representar contenido diferente seg&amp;uacute;n los accesorios de entrada. &lt;/strong&gt;Esto es m&amp;aacute;s &amp;uacute;til cuando est&amp;aacute; dise&amp;ntilde;ando un componente reutilizable que encapsula la l&amp;oacute;gica de datos mientras permite que el componente principal consumidor personalice parte de su dise&amp;ntilde;o.</target>
        </trans-unit>
        <trans-unit id="bdc33d792626a2c65566ab6710547ccedbbbe21a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Soon, we&amp;rsquo;ll also provide tips for enforcement.&lt;/strong&gt; Sometimes you&amp;rsquo;ll simply have to be disciplined, but wherever possible, we&amp;rsquo;ll try to show you how to use ESLint and other automated processes to make enforcement simpler.</source>
          <target state="translated">&lt;strong&gt;Pronto, tambi&amp;eacute;n brindaremos sugerencias para la aplicaci&amp;oacute;n. &lt;/strong&gt;A veces, simplemente tendr&amp;aacute; que ser disciplinado, pero siempre que sea posible, intentaremos mostrarle c&amp;oacute;mo usar ESLint y otros procesos automatizados para simplificar la aplicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b910794ac82196c9b85ab9ebdc06ed76628d2164" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Start your own meetup.&lt;/strong&gt; If there&amp;rsquo;s not already a Vue meetup in your area, you can start your own! Use the &lt;a href=&quot;https://events.vuejs.org/resources/#getting-started&quot;&gt;resources at events.vuejs.org&lt;/a&gt; to help you succeed!</source>
          <target state="translated">&lt;strong&gt;Comienza tu propia reuni&amp;oacute;n. &lt;/strong&gt;Si a&amp;uacute;n no hay una reuni&amp;oacute;n de Vue en tu &amp;aacute;rea, &amp;iexcl;puedes comenzar la tuya propia! &amp;iexcl;Utilice los &lt;a href=&quot;https://events.vuejs.org/resources/#getting-started&quot;&gt;recursos en events.vuejs.org&lt;/a&gt; para ayudarlo a tener &amp;eacute;xito!</target>
        </trans-unit>
        <trans-unit id="bb435a412f3ed5e303b06b8ad27bd781711a45e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;String templates&lt;/strong&gt; lack syntax highlighting and require ugly slashes for multiline HTML</source>
          <target state="translated">&lt;strong&gt;Las plantillas de cadenas&lt;/strong&gt; carecen de resaltado de sintaxis y requieren barras diagonales desagradables para HTML multil&amp;iacute;nea</target>
        </trans-unit>
        <trans-unit id="91826a764ba2d12e12e249f5d494f2f3f332677a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Template Dependencies&lt;/strong&gt; (assets used in the template)</source>
          <target state="translated">&lt;strong&gt;Dependencias de la plantilla&lt;/strong&gt; (activos utilizados en la plantilla)</target>
        </trans-unit>
        <trans-unit id="3141a1332f639a1c10fa4a2070f0a439843bd1da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Template Modifiers&lt;/strong&gt; (changes the way templates are compiled)</source>
          <target state="translated">&lt;strong&gt;Modificadores de plantilla&lt;/strong&gt; (cambia la forma en que se compilan las plantillas)</target>
        </trans-unit>
        <trans-unit id="0939e92b5f16d2099531dcd1fbf26348fd421b73" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The attributes of elements (including components) should be ordered consistently.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Los atributos de los elementos (incluidos los componentes) deben ordenarse de forma coherente.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dd64d5073e26320bc07d94abe3f9f0518203703d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The prop is passed in as a raw value that needs to be transformed.&lt;/strong&gt; In this case, it&amp;rsquo;s best to define a computed property using the prop&amp;rsquo;s value:</source>
          <target state="translated">&lt;strong&gt;La propiedad se pasa como un valor sin procesar que debe transformarse. &lt;/strong&gt;En este caso, es mejor definir una propiedad calculada utilizando el valor de la propiedad:</target>
        </trans-unit>
        <trans-unit id="9643cfbe16ca3bde21b50b935dd40c1b37ab6e55" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The prop is used to pass in an initial value; the child component wants to use it as a local data property afterwards.&lt;/strong&gt; In this case, it&amp;rsquo;s best to define a local data property that uses the prop as its initial value:</source>
          <target state="translated">&lt;strong&gt;El prop se usa para pasar un valor inicial; el componente hijo quiere usarlo como una propiedad de datos local posteriormente. &lt;/strong&gt;En este caso, es mejor definir una propiedad de datos local que use la propiedad como su valor inicial:</target>
        </trans-unit>
        <trans-unit id="99e1ec01beca519bc9f4c54aed26a445ef281630" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This hook is not called during server-side rendering, because only the initial render is performed server-side.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Este gancho no se llama durante la renderizaci&amp;oacute;n del lado del servidor, porque solo la renderizaci&amp;oacute;n inicial se realiza en el lado del servidor.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9a8edf6385c4f8f212675cdf4c2a50819f817c2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This hook is not called during server-side rendering.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Este gancho no se llama durante la renderizaci&amp;oacute;n del lado del servidor.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="45f44af0f670ee40017a236055d597409b6a11c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Two-Way Binding&lt;/strong&gt; (combining binding and events)</source>
          <target state="translated">&lt;strong&gt;Enlace bidireccional&lt;/strong&gt; (combinando enlace y eventos)</target>
        </trans-unit>
        <trans-unit id="a8a8df635482be8a0aea67e4d1525e3ab12b009a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eb6eddb13c4851dc75db4c58d4b6fc48a0fd9c0c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;(createElement: () =&amp;gt; VNode) =&amp;gt; VNode&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Tipo: &lt;/strong&gt; &lt;code&gt;(createElement: () =&amp;gt; VNode) =&amp;gt; VNode&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="06e2056d629e76d01dc484b708969fb6488db132" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;(createElement: () =&amp;gt; VNode, error: Error) =&amp;gt; VNode&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Tipo: &lt;/strong&gt; &lt;code&gt;(createElement: () =&amp;gt; VNode, error: Error) =&amp;gt; VNode&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a7ba23adb5deb58bb8d8ee7e480c41343f407472" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;(err: Error, vm: Component, info: string) =&amp;gt; ?boolean&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Tipo: &lt;/strong&gt; &lt;code&gt;(err: Error, vm: Component, info: string) =&amp;gt; ?boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6e96bf1fc9915cd5d4a83500c01f76378efd4eed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Array&amp;lt;Object&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Array&amp;lt;Object&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="766f4d42e9b328809882e74d68fac0b28c1d8d90" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Array&amp;lt;Vue instance&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Tipo: &lt;/strong&gt; &lt;code&gt;Array&amp;lt;Vue instance&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a9fd0f350dfc4f2b88bcc1b2f5afa40ed5398ad9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Array&amp;lt;string | RegExp&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Tipo: &lt;/strong&gt; &lt;code&gt;Array&amp;lt;string | RegExp&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="530b674de176a529c43efafe1c1313fd7f4c7ec4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Array&amp;lt;string&amp;gt; | Object&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Tipo: &lt;/strong&gt; &lt;code&gt;Array&amp;lt;string&amp;gt; | Object&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7a43731fd13aa1ce8a3339c0d4fe66144edb4f27" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Array&amp;lt;string&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Array&amp;lt;string&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aaa1d27d27484cc82a97967c05d6ae022e74df2c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Element&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Element&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6ee088f5fb0d6e30bcbfd1c0cf8a099ff9dabb0d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Function&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Function&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fdc9f31a552c4e02490c3105b5fc0e2552eaaa84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Object | Function&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Tipo: &lt;/strong&gt; &lt;code&gt;Object | Function&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d244e7771d684b09d7e98cc93d86bbbed2959838" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Object&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Object&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b377ac434c5a72de26801e90f2c2d6a0ec38974f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Vue instance&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Tipo: &lt;/strong&gt; &lt;code&gt;Vue instance&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="065aeffd64b55779e6665647b1f2bf408b580573" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="22165b2444527c8d4a49f5b99b500d85cc57d8c4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;string | Element&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Tipo: &lt;/strong&gt; &lt;code&gt;string | Element&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a876dbc9023a0657cc28e3d65b8aab30cbad7834" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;string&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b57c19bc5d7d4e4046cec4620ea8fc58a679f200" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;{ [key: string]: Function | Array&amp;lt;Function&amp;gt; }&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Tipo: &lt;/strong&gt; &lt;code&gt;{ [key: string]: Function | Array&amp;lt;Function&amp;gt; }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="678bfba1cc2873e848aab72d048589b024b7fcc0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;{ [key: string]: Function | { get: Function, set: Function } }&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Tipo: &lt;/strong&gt; &lt;code&gt;{ [key: string]: Function | { get: Function, set: Function } }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="502dc9a695bf9cf66f95c4fd14c993d9cad127f5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;{ [key: string]: Function }&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Tipo: &lt;/strong&gt; &lt;code&gt;{ [key: string]: Function }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ddaadcde7fc8ae1fc09af3bf7d3f1f78a2f543ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;{ [key: string]: any }&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Tipo: &lt;/strong&gt; &lt;code&gt;{ [key: string]: any }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e3d66fd1acf807ccd91071624dfe726201fc0896" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;{ [key: string]: number | Array&amp;lt;number&amp;gt; }&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Tipo: &lt;/strong&gt; &lt;code&gt;{ [key: string]: number | Array&amp;lt;number&amp;gt; }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b1f86d55ecadb2951a0fca71dc00db158d870f39" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;{ [key: string]: string | Function | Object | Array}&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Tipo: &lt;/strong&gt; &lt;code&gt;{ [key: string]: string | Function | Object | Array}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dbc77cb1bbc01a7ed6daf7c1a7fbb405f0da102d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;{ [key: string]: string }&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Tipo: &lt;/strong&gt; &lt;code&gt;{ [key: string]: string }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="53824b89dd941837c3f91327c6f6998783bd55a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;{ [name: string]: ?Array&amp;lt;VNode&amp;gt; }&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Tipo: &lt;/strong&gt; &lt;code&gt;{ [name: string]: ?Array&amp;lt;VNode&amp;gt; }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="73d27a274925990865edafc7391d8681840c09c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;{ [name: string]: props =&amp;gt; Array&amp;lt;VNode&amp;gt; | undefined }&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Tipo: &lt;/strong&gt; &lt;code&gt;{ [name: string]: props =&amp;gt; Array&amp;lt;VNode&amp;gt; | undefined }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="311d2d806ea4b7c2933a502f5e2d57ae6ee5a7d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;{ prop?: string, event?: string }&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Escriba: &lt;/strong&gt; &lt;code&gt;{ prop?: string, event?: string }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6873fa2d08540c53a397bdfbfdd63ffc1e9cc091" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unique Attributes&lt;/strong&gt; (attributes that require unique values)</source>
          <target state="translated">&lt;strong&gt;Atributos &amp;uacute;nicos&lt;/strong&gt; (atributos que requieren valores &amp;uacute;nicos)</target>
        </trans-unit>
        <trans-unit id="9188873b53a0860b8d45c86992acf0ce33ebbec3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Usage:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Usage:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="98dca272af4b4983e9681bcffd62a12fd4abd3d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Usage&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Usage&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="7b952816ef10f5c30365b2f2a467fc60e140d033" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use module scoping to keep private functions inaccessible from the outside. If that&amp;rsquo;s not possible, always use the &lt;code&gt;$_&lt;/code&gt; prefix for custom private properties in a plugin, mixin, etc that should not be considered public API. Then to avoid conflicts with code by other authors, also include a named scope (e.g. &lt;code&gt;$_yourPluginName_&lt;/code&gt;).&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Utilice el alcance del m&amp;oacute;dulo para mantener las funciones privadas inaccesibles desde el exterior. Si eso no es posible, use siempre el prefijo &lt;code&gt;$_&lt;/code&gt; para propiedades privadas personalizadas en un complemento, mixin, etc.que no se debe considerar API p&amp;uacute;blica. Luego, para evitar conflictos con el c&amp;oacute;digo de otros autores, tambi&amp;eacute;n incluya un alcance con nombre (por ejemplo, &lt;code&gt;$_yourPluginName_&lt;/code&gt; ).&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6ecf232de64994dc60c6ec79622d7373f404fd30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Vuex 1.0&lt;/strong&gt; is mostly backwards-compatible, so requires very few changes to upgrade. It is recommended for those with large existing codebases or who want the smoothest possible upgrade path to Vue 2.0. This guide is dedicated to facilitating that process, but only includes migration notes. For the complete usage guide, see &lt;a href=&quot;https://github.com/vuejs/vuex/tree/1.0/docs/en&quot;&gt;the Vuex 1.0 docs&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Vuex 1.0&lt;/strong&gt; es en su mayor&amp;iacute;a compatible con versiones anteriores, por lo que requiere muy pocos cambios para actualizar. Se recomienda para aquellos con grandes bases de c&amp;oacute;digo existentes o que desean la ruta de actualizaci&amp;oacute;n m&amp;aacute;s fluida posible a Vue 2.0. Esta gu&amp;iacute;a est&amp;aacute; dedicada a facilitar ese proceso, pero solo incluye notas de migraci&amp;oacute;n. Para obtener la gu&amp;iacute;a de uso completa, consulte &lt;a href=&quot;https://github.com/vuejs/vuex/tree/1.0/docs/en&quot;&gt;los documentos de Vuex 1.0&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="af431ba48325bd4d7f58de11548316dfc8b6feff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Vuex 2.0&lt;/strong&gt; is a radical redesign and simplification of the API, for those who are starting new projects or want to be on the cutting edge of client-side state management. &lt;strong&gt;It is not covered by this migration guide&lt;/strong&gt;, so you should check out &lt;a href=&quot;https://vuex.vuejs.org/en/index.html&quot;&gt;the Vuex 2.0 docs&lt;/a&gt; if you&amp;rsquo;d like to learn more about it.</source>
          <target state="translated">&lt;strong&gt;Vuex 2.0&lt;/strong&gt; es un redise&amp;ntilde;o radical y una simplificaci&amp;oacute;n de la API, para aquellos que est&amp;aacute;n iniciando nuevos proyectos o quieren estar a la vanguardia de la gesti&amp;oacute;n del estado del lado del cliente. &lt;strong&gt;No est&amp;aacute; cubierto por esta gu&amp;iacute;a de migraci&amp;oacute;n&lt;/strong&gt; , por lo que debe consultar &lt;a href=&quot;https://vuex.vuejs.org/en/index.html&quot;&gt;los documentos de Vuex 2.0&lt;/a&gt; si desea obtener m&amp;aacute;s informaci&amp;oacute;n al respecto.</target>
        </trans-unit>
        <trans-unit id="28333e7389a6ff2c59d850ec3efa3f250a4204be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Watch a repo you care about.&lt;/strong&gt; This will send you notifications whenever there&amp;rsquo;s activity in that repository, giving you insider knowledge about ongoing discussions and upcoming features. It&amp;rsquo;s a fantastic way to build expertise so that you&amp;rsquo;re eventually able to help address issues and pull requests.</source>
          <target state="translated">&lt;strong&gt;Vea un repositorio que le interese. &lt;/strong&gt;Esto le enviar&amp;aacute; notificaciones cada vez que haya actividad en ese repositorio, brind&amp;aacute;ndole informaci&amp;oacute;n privilegiada sobre las discusiones en curso y las pr&amp;oacute;ximas funciones. Es una manera fant&amp;aacute;stica de desarrollar experiencia para que eventualmente pueda ayudar a abordar problemas y solicitudes de extracci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="8f323e74e0ef55994efdc0beb0b10eb86f864143" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Whenever a build system is available to concatenate files, each component should be in its own file.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Siempre que haya un sistema de compilaci&amp;oacute;n disponible para concatenar archivos, cada componente debe estar en su propio archivo.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="79c44e1a0b49036c145384d37dbaa84a85317491" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;You may want to add one empty line between multi-line properties, particularly if the options can no longer fit on your screen without scrolling.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Es posible que desee agregar una l&amp;iacute;nea vac&amp;iacute;a entre las propiedades de varias l&amp;iacute;neas, especialmente si las opciones ya no caben en su pantalla sin desplazarse.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a0fb19815123396136cceb04c694d8ed5abf01db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;inject:&lt;/strong&gt;&lt;code&gt;Array&amp;lt;string&amp;gt; | { [key: string]: string | Symbol | Object }&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;inyectar: &lt;/strong&gt; &lt;code&gt;Array&amp;lt;string&amp;gt; | { [key: string]: string | Symbol | Object }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="754df4dec74707ddac5e992d1b61cea815c1e48c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;provide:&lt;/strong&gt;&lt;code&gt;Object | () =&amp;gt; Object&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;proporcionar: &lt;/strong&gt; &lt;code&gt;Object | () =&amp;gt; Object&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ec07f0d5bd46ec78ee4692994f8c00d2dddc42be" translate="yes" xml:space="preserve">
          <source>A &amp;ldquo;meta component&amp;rdquo; for rendering dynamic components. The actual component to render is determined by the &lt;code&gt;is&lt;/code&gt; prop:</source>
          <target state="translated">Un &quot;metacomponente&quot; para renderizar componentes din&amp;aacute;micos. El componente real a renderizar est&amp;aacute; determinado por la propiedad &lt;code&gt;is&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="bb4cfe64ee7a0b6571622705815bef0e877c75e3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; outlet without &lt;code&gt;name&lt;/code&gt; implicitly has the name &amp;ldquo;default&amp;rdquo;.</source>
          <target state="translated">Una salida &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; sin &lt;code&gt;name&lt;/code&gt; tiene impl&amp;iacute;citamente el nombre &quot;predeterminado&quot;.</target>
        </trans-unit>
        <trans-unit id="60cec72a9327071f74f65c9fce108a5fe2bf77de" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;v-else&lt;/code&gt; element must immediately follow a &lt;code&gt;v-if&lt;/code&gt; or a &lt;code&gt;v-else-if&lt;/code&gt; element - otherwise it will not be recognized.</source>
          <target state="translated">Un elemento &lt;code&gt;v-else&lt;/code&gt; debe seguir inmediatamente a un elemento &lt;code&gt;v-if&lt;/code&gt; o &lt;code&gt;v-else-if&lt;/code&gt; ; de lo contrario, no se reconocer&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="4cf1defebb5e366d182860082df4f9c375ab0139" translate="yes" xml:space="preserve">
          <source>A Single Root Element</source>
          <target state="translated">Un único elemento raíz</target>
        </trans-unit>
        <trans-unit id="ceffe144b8c4378be65e840c1a0919b279cde4b4" translate="yes" xml:space="preserve">
          <source>A Vue application consists of a &lt;strong&gt;root Vue instance&lt;/strong&gt; created with &lt;code&gt;new Vue&lt;/code&gt;, optionally organized into a tree of nested, reusable components. For example, a todo app&amp;rsquo;s component tree might look like this:</source>
          <target state="translated">Una aplicaci&amp;oacute;n de Vue consiste en una &lt;strong&gt;instancia ra&amp;iacute;z de Vue&lt;/strong&gt; creada con el &lt;code&gt;new Vue&lt;/code&gt; , opcionalmente organizada en un &amp;aacute;rbol de componentes reutilizables anidados. Por ejemplo, el &amp;aacute;rbol de componentes de una aplicaci&amp;oacute;n de tareas pendientes podr&amp;iacute;a verse as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="a8e2d731fb12269ec4d70667badbaa7897deaedb" translate="yes" xml:space="preserve">
          <source>A Vue.js plugin should expose an &lt;code&gt;install&lt;/code&gt; method. The method will be called with the &lt;code&gt;Vue&lt;/code&gt; constructor as the first argument, along with possible options:</source>
          <target state="translated">Un complemento de Vue.js deber&amp;iacute;a exponer un m&amp;eacute;todo de &lt;code&gt;install&lt;/code&gt; . El m&amp;eacute;todo se llamar&amp;aacute; con el constructor de &lt;code&gt;Vue&lt;/code&gt; como primer argumento, junto con las posibles opciones:</target>
        </trans-unit>
        <trans-unit id="4bba7b53e0541cfcd4a009adf4f68e4b3c5ca8de" translate="yes" xml:space="preserve">
          <source>A benefit of functional components over partials is that they can be much more dynamic, because they grant you access to the full power of JavaScript. There is a cost to this power however. If you&amp;rsquo;ve never used a component framework with render functions before, they may take a bit longer to learn.</source>
          <target state="translated">Una ventaja de los componentes funcionales sobre los parciales es que pueden ser mucho m&amp;aacute;s din&amp;aacute;micos, ya que le otorgan acceso a todo el poder de JavaScript. Sin embargo, este poder tiene un costo. Si nunca antes ha usado un marco de componentes con funciones de renderizado, es posible que tarde un poco m&amp;aacute;s en aprender.</target>
        </trans-unit>
        <trans-unit id="6558f6de76330a37b744f1034bda91dda7558061" translate="yes" xml:space="preserve">
          <source>A common need for data binding is manipulating an element&amp;rsquo;s class list and its inline styles. Since they are both attributes, we can use &lt;code&gt;v-bind&lt;/code&gt; to handle them: we only need to calculate a final string with our expressions. However, meddling with string concatenation is annoying and error-prone. For this reason, Vue provides special enhancements when &lt;code&gt;v-bind&lt;/code&gt; is used with &lt;code&gt;class&lt;/code&gt; and &lt;code&gt;style&lt;/code&gt;. In addition to strings, the expressions can also evaluate to objects or arrays.</source>
          <target state="translated">Una necesidad com&amp;uacute;n para el enlace de datos es manipular la lista de clases de un elemento y sus estilos en l&amp;iacute;nea. Dado que ambos son atributos, podemos usar &lt;code&gt;v-bind&lt;/code&gt; para manejarlos: solo necesitamos calcular una cadena final con nuestras expresiones. Sin embargo, entrometerse con la concatenaci&amp;oacute;n de cadenas es molesto y propenso a errores. Por esta raz&amp;oacute;n, Vue proporciona mejoras especiales cuando se usa &lt;code&gt;v-bind&lt;/code&gt; con &lt;code&gt;class&lt;/code&gt; y &lt;code&gt;style&lt;/code&gt; . Adem&amp;aacute;s de las cadenas, las expresiones tambi&amp;eacute;n pueden evaluar objetos o matrices.</target>
        </trans-unit>
        <trans-unit id="0c653b78a9faeb826a2c067b679c675865ed438d" translate="yes" xml:space="preserve">
          <source>A component can have as many props as you&amp;rsquo;d like and by default, any value can be passed to any prop. In the template above, you&amp;rsquo;ll see that we can access this value on the component instance, just like with &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="translated">Un componente puede tener tantos accesorios como desee y, por defecto, cualquier valor puede pasarse a cualquier accesorio. En la plantilla anterior, ver&amp;aacute; que podemos acceder a este valor en la instancia del componente, al igual que con los &lt;code&gt;data&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f039cd265a0d2a11362a61dbb40b34908557d4b4" translate="yes" xml:space="preserve">
          <source>A component like the above will result in a &amp;ldquo;max stack size exceeded&amp;rdquo; error, so make sure recursive invocation is conditional (i.e. uses a &lt;code&gt;v-if&lt;/code&gt; that will eventually be &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">Un componente como el anterior dar&amp;aacute; como resultado un error de &quot;tama&amp;ntilde;o m&amp;aacute;ximo de pila excedido&quot;, as&amp;iacute; que aseg&amp;uacute;rese de que la invocaci&amp;oacute;n recursiva sea condicional (es decir, use un &lt;code&gt;v-if&lt;/code&gt; que eventualmente ser&amp;aacute; &lt;code&gt;false&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="0a3c63a2fee227b333e870ab1589d51864813a7b" translate="yes" xml:space="preserve">
          <source>A component&amp;rsquo;s render output is primarily determined by the props it receives. If a component&amp;rsquo;s render output solely depends on its props it becomes straightforward to test, similar to asserting the return value of a pure function with different arguments. Take a simplified example:</source>
          <target state="translated">La salida de render de un componente est&amp;aacute; determinada principalmente por los accesorios que recibe. Si la salida de procesamiento de un componente depende &amp;uacute;nicamente de sus accesorios, se vuelve f&amp;aacute;cil de probar, similar a afirmar el valor de retorno de una funci&amp;oacute;n pura con diferentes argumentos. Tome un ejemplo simplificado:</target>
        </trans-unit>
        <trans-unit id="19ce618085a2805f62690806a48e9f6b482ad7ca" translate="yes" xml:space="preserve">
          <source>A directive definition object can provide several hook functions (all optional):</source>
          <target state="translated">Un objeto de definición de directiva puede proporcionar varias funciones de gancho (todas opcionales):</target>
        </trans-unit>
        <trans-unit id="3341adc1c3570e9195360570c1ac65b5cbea5dce" translate="yes" xml:space="preserve">
          <source>A few keys (&lt;code&gt;.esc&lt;/code&gt; and all arrow keys) have inconsistent &lt;code&gt;key&lt;/code&gt; values in IE9, so these built-in aliases should be preferred if you need to support IE9.</source>
          <target state="translated">Algunas teclas ( &lt;code&gt;.esc&lt;/code&gt; y todas las teclas de flecha) tienen valores de &lt;code&gt;key&lt;/code&gt; inconsistentes en IE9, por lo que estos alias incorporados deben ser preferidos si necesita admitir IE9.</target>
        </trans-unit>
        <trans-unit id="020dac6b0a6bb67273d2f0e7f399a420024b2c61" translate="yes" xml:space="preserve">
          <source>A hash of components to be made available to the Vue instance.</source>
          <target state="translated">Un conjunto de componentes que se pondrán a disposición de la instancia Vue.</target>
        </trans-unit>
        <trans-unit id="1e0ce39f0fc0e924cfb4dbc70b35f63a8ff93074" translate="yes" xml:space="preserve">
          <source>A hash of directives to be made available to the Vue instance.</source>
          <target state="translated">Un conjunto de directivas que se pondrán a disposición de la instancia Vue.</target>
        </trans-unit>
        <trans-unit id="1544e0531ea17c539b8d0c1a96b2a5643da01b5f" translate="yes" xml:space="preserve">
          <source>A hash of filters to be made available to the Vue instance.</source>
          <target state="translated">Un conjunto de filtros que se pondrán a disposición de la instancia Vue.</target>
        </trans-unit>
        <trans-unit id="2c08757c4619f5028feb3ad53cc4e1f441670cfd" translate="yes" xml:space="preserve">
          <source>A library that provides an API of its own, while at the same time injecting some combination of the above. e.g. &lt;a href=&quot;https://github.com/vuejs/vue-router&quot;&gt;vue-router&lt;/a&gt;</source>
          <target state="translated">Una biblioteca que proporciona una API propia, mientras que al mismo tiempo inyecta alguna combinaci&amp;oacute;n de lo anterior. por ejemplo, &lt;a href=&quot;https://github.com/vuejs/vue-router&quot;&gt;vue-router&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b2fafde79bfb24a5de472ebbad55838683b74860" translate="yes" xml:space="preserve">
          <source>A list/hash of attributes that are exposed to accept data from the parent component. It has an Array-based simple syntax and an alternative Object-based syntax that allows advanced configurations such as type checking, custom validation and default values.</source>
          <target state="translated">Una lista/hash de atributos que se exponen para aceptar datos del componente principal.Tiene una sintaxis simple basada en Array y una sintaxis alternativa basada en objetos que permite configuraciones avanzadas como la comprobación de tipos,la validación personalizada y los valores por defecto.</target>
        </trans-unit>
        <trans-unit id="6e29e35dc8f51033a71ae5578fc90bdb8fdfe561" translate="yes" xml:space="preserve">
          <source>A more advanced example can be found on &lt;a href=&quot;https://github.com/vuejs/vuex&quot;&gt;Vuex&lt;/a&gt;&amp;lsquo;s 1.x merging strategy:</source>
          <target state="translated">Se puede encontrar un ejemplo m&amp;aacute;s avanzado en la estrategia de fusi&amp;oacute;n 1.x de &lt;a href=&quot;https://github.com/vuejs/vuex&quot;&gt;Vuex&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="344cf5185e577ae6e50408f94b60ca4c285fcdf6" translate="yes" xml:space="preserve">
          <source>A non-prop attribute is an attribute that is passed to a component, but does not have a corresponding prop defined.</source>
          <target state="translated">Un atributo de no-propaganda es un atributo que se pasa a un componente,pero que no tiene definido un propulsor correspondiente.</target>
        </trans-unit>
        <trans-unit id="3f2af8c21a03055f0f0290da3a238911987f1f9a" translate="yes" xml:space="preserve">
          <source>A static type system can help prevent many potential runtime errors, especially as applications grow. That&amp;rsquo;s why Vue ships with &lt;a href=&quot;https://github.com/vuejs/vue/tree/dev/types&quot;&gt;official type declarations&lt;/a&gt; for &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; - not only in Vue core, but also for &lt;a href=&quot;https://github.com/vuejs/vue-router/tree/dev/types&quot;&gt;vue-router&lt;/a&gt; and &lt;a href=&quot;https://github.com/vuejs/vuex/tree/dev/types&quot;&gt;vuex&lt;/a&gt; as well.</source>
          <target state="translated">Un sistema de tipo est&amp;aacute;tico puede ayudar a prevenir muchos errores potenciales en tiempo de ejecuci&amp;oacute;n, especialmente a medida que crecen las aplicaciones. Es por eso que Vue se env&amp;iacute;a con &lt;a href=&quot;https://github.com/vuejs/vue/tree/dev/types&quot;&gt;declaraciones de tipo oficiales&lt;/a&gt; para &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; , no solo en el n&amp;uacute;cleo de Vue, sino tambi&amp;eacute;n para &lt;a href=&quot;https://github.com/vuejs/vue-router/tree/dev/types&quot;&gt;vue-router&lt;/a&gt; y &lt;a href=&quot;https://github.com/vuejs/vuex/tree/dev/types&quot;&gt;vuex&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="34d823e791929dfce5b163269a1fdee1ccbfcb7f" translate="yes" xml:space="preserve">
          <source>A string template to be used as the markup for the Vue instance. The template will &lt;strong&gt;replace&lt;/strong&gt; the mounted element. Any existing markup inside the mounted element will be ignored, unless content distribution slots are present in the template.</source>
          <target state="translated">Una plantilla de cadena que se utilizar&amp;aacute; como marcado para la instancia de Vue. La plantilla &lt;strong&gt;reemplazar&amp;aacute;&lt;/strong&gt; el elemento montado. Se ignorar&amp;aacute; cualquier marca existente dentro del elemento montado, a menos que haya espacios de distribuci&amp;oacute;n de contenido en la plantilla.</target>
        </trans-unit>
        <trans-unit id="a1a768eab0321d86b7b0feef85adb35d107dba4d" translate="yes" xml:space="preserve">
          <source>AMD Module Loaders</source>
          <target state="translated">Cargadores de módulos AMD</target>
        </trans-unit>
        <trans-unit id="d93d10ff0fbef1b4aa0ddc24e10e907746d3c85a" translate="yes" xml:space="preserve">
          <source>API</source>
          <target state="translated">API</target>
        </trans-unit>
        <trans-unit id="af7c97243822c575e6dea6f215ee12719926f9f4" translate="yes" xml:space="preserve">
          <source>API: Built-In Components</source>
          <target state="translated">API:Componentes incorporados</target>
        </trans-unit>
        <trans-unit id="182abf83df3d6d1db9a593bb0366628155ef06f9" translate="yes" xml:space="preserve">
          <source>API: Directives</source>
          <target state="translated">API:Directivas</target>
        </trans-unit>
        <trans-unit id="803e82e7257353bfeb0f26bf035da8f913dd28e7" translate="yes" xml:space="preserve">
          <source>API: Global API</source>
          <target state="translated">API:API global</target>
        </trans-unit>
        <trans-unit id="274ecf9e386f5a1451a1216ffa5d393822269042" translate="yes" xml:space="preserve">
          <source>API: Global Config</source>
          <target state="translated">API:Configuración global</target>
        </trans-unit>
        <trans-unit id="51db937a7296a0aac33ba9b598fdda2aee35e700" translate="yes" xml:space="preserve">
          <source>API: Instance Methods / Data</source>
          <target state="translated">API:Métodos de instancia/Datos</target>
        </trans-unit>
        <trans-unit id="3dcaca5d8eaed0671c3d5f0a65db9a960f0f41aa" translate="yes" xml:space="preserve">
          <source>API: Instance Methods / Events</source>
          <target state="translated">API:Métodos de instancia/Eventos</target>
        </trans-unit>
        <trans-unit id="e0b0eefb2d521ba85bf72d84963d31559317516e" translate="yes" xml:space="preserve">
          <source>API: Instance Methods / Lifecycle</source>
          <target state="translated">API:Métodos de Instancia/Ciclo de vida</target>
        </trans-unit>
        <trans-unit id="1feafa4225f6f196d017fdf4edda3d91ec66967c" translate="yes" xml:space="preserve">
          <source>API: Instance Properties</source>
          <target state="translated">API:Propiedades de la Instancia</target>
        </trans-unit>
        <trans-unit id="10ba615ce7b320afd5b392412fe4470513df3e31" translate="yes" xml:space="preserve">
          <source>API: Options / Assets</source>
          <target state="translated">API:Opciones/Activos</target>
        </trans-unit>
        <trans-unit id="649abfafdd403c9e1429b0c3f0e57e63cf39627e" translate="yes" xml:space="preserve">
          <source>API: Options / Composition</source>
          <target state="translated">API:Opciones/Composición</target>
        </trans-unit>
        <trans-unit id="4aa2b676ca368b068136c808001a9064ced8a5f8" translate="yes" xml:space="preserve">
          <source>API: Options / DOM</source>
          <target state="translated">API:Opciones/DOM</target>
        </trans-unit>
        <trans-unit id="f0c41a50a812e722584f0fcbc7f529524b842ad6" translate="yes" xml:space="preserve">
          <source>API: Options / Data</source>
          <target state="translated">API:Opciones/Datos</target>
        </trans-unit>
        <trans-unit id="7a3afcd7c9dc1632a731a8dacf6fc794e4891491" translate="yes" xml:space="preserve">
          <source>API: Options / Lifecycle Hooks</source>
          <target state="translated">API:Opciones/Ganchos del ciclo de vida</target>
        </trans-unit>
        <trans-unit id="0dea04425cb9fcfb5bdce3fb6bc961c653bdcee2" translate="yes" xml:space="preserve">
          <source>API: Options / Misc</source>
          <target state="translated">API:Opciones/Misc</target>
        </trans-unit>
        <trans-unit id="bce7491ededc9a8b224c78844b5b107d9900f405" translate="yes" xml:space="preserve">
          <source>API: Special Attributes</source>
          <target state="translated">API:Atributos especiales</target>
        </trans-unit>
        <trans-unit id="bb3ce55370f39e11f03a5da5893267fd848150e6" translate="yes" xml:space="preserve">
          <source>Abbreviated Syntax for Lone Default Slots</source>
          <target state="translated">Sintaxis abreviada de las franjas horarias por defecto solas</target>
        </trans-unit>
        <trans-unit id="d4d360c1c9029915eaf8eaa012bcc1434524bc17" translate="yes" xml:space="preserve">
          <source>Above, you&amp;rsquo;ll see that we can use &lt;code&gt;v-bind&lt;/code&gt; to dynamically pass props. This is especially useful when you don&amp;rsquo;t know the exact content you&amp;rsquo;re going to render ahead of time, like when &lt;a href=&quot;https://jsfiddle.net/chrisvfritz/sbLgr0ad&quot;&gt;fetching posts from an API&lt;/a&gt;.</source>
          <target state="translated">Arriba, ver&amp;aacute; que podemos usar &lt;code&gt;v-bind&lt;/code&gt; para pasar props din&amp;aacute;micamente. Esto es especialmente &amp;uacute;til cuando no conoce el contenido exacto que va a renderizar con anticipaci&amp;oacute;n, como cuando &lt;a href=&quot;https://jsfiddle.net/chrisvfritz/sbLgr0ad&quot;&gt;obtiene publicaciones de una API&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5b50b62f5cbc40072eea261aa6929a1cb82ee0d5" translate="yes" xml:space="preserve">
          <source>Accessing &lt;code&gt;vm.$scopedSlots&lt;/code&gt; is most useful when writing a component with a &lt;a href=&quot;../guide/render-function&quot;&gt;render function&lt;/a&gt;.</source>
          <target state="translated">Acceder a &lt;code&gt;vm.$scopedSlots&lt;/code&gt; es m&amp;aacute;s &amp;uacute;til cuando se escribe un componente con una &lt;a href=&quot;../guide/render-function&quot;&gt;funci&amp;oacute;n de renderizado&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="43cc7124b3cd5bce237d9cb731b89c1b2d4441c4" translate="yes" xml:space="preserve">
          <source>Accessing &lt;code&gt;vm.$slots&lt;/code&gt; is most useful when writing a component with a &lt;a href=&quot;../guide/render-function&quot;&gt;render function&lt;/a&gt;.</source>
          <target state="translated">Acceder a &lt;code&gt;vm.$slots&lt;/code&gt; es m&amp;aacute;s &amp;uacute;til cuando se escribe un componente con una &lt;a href=&quot;../guide/render-function&quot;&gt;funci&amp;oacute;n de render&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="aa5360da634be9b4703e888f353bb4cb930b0c39" translate="yes" xml:space="preserve">
          <source>Accessing Child Component Instances &amp;amp; Child Elements</source>
          <target state="translated">Acceso a instancias de componentes secundarios y elementos secundarios</target>
        </trans-unit>
        <trans-unit id="3e070cd358201567e0214607dc834ffde3324729" translate="yes" xml:space="preserve">
          <source>Accessing the Parent Component Instance</source>
          <target state="translated">Accediendo a la instancia del componente padre</target>
        </trans-unit>
        <trans-unit id="f3400d1a5e37cdaf0529c23c93b2c085bc355aa4" translate="yes" xml:space="preserve">
          <source>Accessing the Root Instance</source>
          <target state="translated">Acceder a la instancia raíz</target>
        </trans-unit>
        <trans-unit id="0558b15a1e843f3e820f05a7831ba76cff8484ca" translate="yes" xml:space="preserve">
          <source>Add one or more global assets: directives/filters/transitions etc. e.g. &lt;a href=&quot;https://github.com/vuejs/vue-touch&quot;&gt;vue-touch&lt;/a&gt;</source>
          <target state="translated">Agregue uno o m&amp;aacute;s activos globales: directivas / filtros / transiciones, etc., por ejemplo, &lt;a href=&quot;https://github.com/vuejs/vue-touch&quot;&gt;vue-touch&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a4d0ce34829d9491f99c124a1a46de95499eedd6" translate="yes" xml:space="preserve">
          <source>Add some Vue instance methods by attaching them to Vue.prototype.</source>
          <target state="translated">Añada algunos métodos de instancia de Vue adjuntándolos al Vue.prototipo.</target>
        </trans-unit>
        <trans-unit id="8f8521ac8394f55fe417b5a588330dbc88d1f9ad" translate="yes" xml:space="preserve">
          <source>Add some component options by global mixin. e.g. &lt;a href=&quot;https://github.com/vuejs/vue-router&quot;&gt;vue-router&lt;/a&gt;</source>
          <target state="translated">Agregue algunas opciones de componentes por mezcla global. por ejemplo, &lt;a href=&quot;https://github.com/vuejs/vue-router&quot;&gt;vue-router&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="35ab17ed46d3ba5668bc28248feebff2125e2e51" translate="yes" xml:space="preserve">
          <source>Add some global methods or properties. e.g. &lt;a href=&quot;https://github.com/karol-f/vue-custom-element&quot;&gt;vue-custom-element&lt;/a&gt;</source>
          <target state="translated">Agregue algunos m&amp;eacute;todos o propiedades globales. por ejemplo, &lt;a href=&quot;https://github.com/karol-f/vue-custom-element&quot;&gt;vue-custom-element&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5c233bccc4dfd135faa12ee3138b60f3181270d4" translate="yes" xml:space="preserve">
          <source>Add to your project&amp;rsquo;s &lt;code&gt;package.json&lt;/code&gt;:</source>
          <target state="translated">Agregue al &lt;code&gt;package.json&lt;/code&gt; de su proyecto :</target>
        </trans-unit>
        <trans-unit id="b39cddc1d643ab738b6dccc79617b70ec367a05a" translate="yes" xml:space="preserve">
          <source>Adds a property to a reactive object, ensuring the new property is also reactive, so triggers view updates. This must be used to add new properties to reactive objects, as Vue cannot detect normal property additions (e.g. &lt;code&gt;this.myObject.newProperty = 'hi'&lt;/code&gt;).</source>
          <target state="translated">Agrega una propiedad a un objeto reactivo, lo que garantiza que la nueva propiedad tambi&amp;eacute;n sea reactiva, por lo que activa las actualizaciones de vista. Esto debe usarse para agregar nuevas propiedades a objetos reactivos, ya que Vue no puede detectar adiciones de propiedades normales (por ejemplo, &lt;code&gt;this.myObject.newProperty = 'hi'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="b7ad3ea0d73c47cc510dd161a21610c0f1c71ede" translate="yes" xml:space="preserve">
          <source>After adding &lt;code&gt;functional: true&lt;/code&gt;, updating the render function of our anchored heading component would require adding the &lt;code&gt;context&lt;/code&gt; argument, updating &lt;code&gt;this.$slots.default&lt;/code&gt; to &lt;code&gt;context.children&lt;/code&gt;, then updating &lt;code&gt;this.level&lt;/code&gt; to &lt;code&gt;context.props.level&lt;/code&gt;.</source>
          <target state="translated">Despu&amp;eacute;s de agregar &lt;code&gt;functional: true&lt;/code&gt; , actualizar la funci&amp;oacute;n de representaci&amp;oacute;n de nuestro componente de encabezado anclado requerir&amp;iacute;a agregar el argumento de &lt;code&gt;context&lt;/code&gt; o , actualizar &lt;code&gt;this.$slots.default&lt;/code&gt; a &lt;code&gt;context.children&lt;/code&gt; , luego actualizar &lt;code&gt;this.level&lt;/code&gt; a &lt;code&gt;context.props.level&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5179b5b2a43182c70638c6dd48526689cccdd9bf" translate="yes" xml:space="preserve">
          <source>After including the above code as a declaration file (like &lt;code&gt;my-property.d.ts&lt;/code&gt;) in your project, you can use &lt;code&gt;$myProperty&lt;/code&gt; on a Vue instance.</source>
          <target state="translated">Despu&amp;eacute;s de incluir el c&amp;oacute;digo anterior como un archivo de declaraci&amp;oacute;n (como &lt;code&gt;my-property.d.ts&lt;/code&gt; ) en su proyecto, puede usar &lt;code&gt;$myProperty&lt;/code&gt; en una instancia de Vue.</target>
        </trans-unit>
        <trans-unit id="584fb7bea52bf2a8057d7f7a3fcb966585501642" translate="yes" xml:space="preserve">
          <source>After that, browse through the table of contents for this page in the sidebar. If you see a topic you may be affected by, but the migration helper didn&amp;rsquo;t catch, check it out.</source>
          <target state="translated">Despu&amp;eacute;s de eso, navegue por la tabla de contenido de esta p&amp;aacute;gina en la barra lateral. Si ve un tema que le puede afectar, pero el asistente de migraci&amp;oacute;n no lo capt&amp;oacute;, compru&amp;eacute;belo.</target>
        </trans-unit>
        <trans-unit id="5545c04b66e1e2439288f5b5b54f970a924d0478" translate="yes" xml:space="preserve">
          <source>After that, you&amp;rsquo;ll be ready to contribute to Vue&amp;rsquo;s core repositories:</source>
          <target state="translated">Despu&amp;eacute;s de eso, estar&amp;aacute; listo para contribuir a los repositorios centrales de Vue:</target>
        </trans-unit>
        <trans-unit id="c9d485dbd20011f611535fdf446b3d653a7c76ba" translate="yes" xml:space="preserve">
          <source>After the instance is created, the original data object can be accessed as &lt;code&gt;vm.$data&lt;/code&gt;. The Vue instance also proxies all the properties found on the data object, so &lt;code&gt;vm.a&lt;/code&gt; will be equivalent to &lt;code&gt;vm.$data.a&lt;/code&gt;.</source>
          <target state="translated">Una vez creada la instancia, se puede acceder al objeto de datos original como &lt;code&gt;vm.$data&lt;/code&gt; . La instancia Vue tambi&amp;eacute;n como proxy todas las propiedades encuentran en el objeto de datos, por lo &lt;code&gt;vm.a&lt;/code&gt; ser&amp;aacute; equivalente a &lt;code&gt;vm.$data.a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d666349c92f3219ad13aa2920b4d2b8183e64ea0" translate="yes" xml:space="preserve">
          <source>After the instance is mounted, the resolved element will be accessible as &lt;code&gt;vm.$el&lt;/code&gt;.</source>
          <target state="translated">Una vez montada la instancia, se podr&amp;aacute; acceder al elemento resuelto como &lt;code&gt;vm.$el&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ccaf124ea8cb4d40376eaf9b3098c579b4150a79" translate="yes" xml:space="preserve">
          <source>After you&amp;rsquo;ve taken a day to dive into these resources, we recommend checking out &lt;a href=&quot;https://cli.vuejs.org/&quot;&gt;Vue CLI 3&lt;/a&gt;. Follow the instructions and you should have a Vue project with &lt;code&gt;.vue&lt;/code&gt; components, ES2015, Webpack and hot-reloading in no time!</source>
          <target state="translated">Despu&amp;eacute;s de que se haya tomado un d&amp;iacute;a para sumergirse en estos recursos, le recomendamos que consulte &lt;a href=&quot;https://cli.vuejs.org/&quot;&gt;Vue CLI 3&lt;/a&gt; . Siga las instrucciones y usted debe tener un proyecto Vue con &lt;code&gt;.vue&lt;/code&gt; componentes, ES2015, webpack y hot-recarga en ning&amp;uacute;n momento!</target>
        </trans-unit>
        <trans-unit id="4035fa2559db72aeae2fe32d00fce2ce3541064d" translate="yes" xml:space="preserve">
          <source>Again due to limitations of modern JavaScript, &lt;strong&gt;Vue cannot detect property addition or deletion&lt;/strong&gt;. For example:</source>
          <target state="translated">Nuevamente, debido a las limitaciones del JavaScript moderno, &lt;strong&gt;Vue no puede detectar la adici&amp;oacute;n o eliminaci&amp;oacute;n de propiedades&lt;/strong&gt; . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="13d06ad758afa4d98d31afc22e29029433a54989" translate="yes" xml:space="preserve">
          <source>Again, if you&amp;rsquo;re using string templates, this limitation does not apply.</source>
          <target state="translated">Nuevamente, si est&amp;aacute; utilizando plantillas de cadenas, esta limitaci&amp;oacute;n no se aplica.</target>
        </trans-unit>
        <trans-unit id="1a5fd8f6fe7da6eb27ee847128e973cae177d678" translate="yes" xml:space="preserve">
          <source>Again, the object syntax is often used in conjunction with computed properties that return objects.</source>
          <target state="translated">Una vez más,la sintaxis de los objetos se utiliza a menudo en conjunción con las propiedades calculadas que devuelven los objetos.</target>
        </trans-unit>
        <trans-unit id="882c2811e5772305a01848736e50210f7d5c7909" translate="yes" xml:space="preserve">
          <source>Aliasing &lt;code&gt;createElement&lt;/code&gt; to &lt;code&gt;h&lt;/code&gt; is a common convention you&amp;rsquo;ll see in the Vue ecosystem and is actually required for JSX. Starting with &lt;a href=&quot;https://github.com/vuejs/babel-plugin-transform-vue-jsx#h-auto-injection&quot;&gt;version 3.4.0&lt;/a&gt; of the Babel plugin for Vue, we automatically inject &lt;code&gt;const h = this.$createElement&lt;/code&gt; in any method and getter (not functions or arrow functions), declared in ES2015 syntax that has JSX, so you can drop the &lt;code&gt;(h)&lt;/code&gt; parameter. With prior versions of the plugin, your app would throw an error if &lt;code&gt;h&lt;/code&gt; was not available in the scope.</source>
          <target state="translated">Aliasing &lt;code&gt;createElement&lt;/code&gt; que &lt;code&gt;h&lt;/code&gt; es una convenci&amp;oacute;n com&amp;uacute;n se ver&amp;aacute; en el ecosistema Vue y que realmente se requiere para JSX. A partir de la &lt;a href=&quot;https://github.com/vuejs/babel-plugin-transform-vue-jsx#h-auto-injection&quot;&gt;versi&amp;oacute;n 3.4.0&lt;/a&gt; del complemento de Babel para Vue, &lt;code&gt;const h = this.$createElement&lt;/code&gt; autom&amp;aacute;ticamente const h = this. $ CreateElement en cualquier m&amp;eacute;todo y getter (no funciones o funciones de flecha), declarado en la sintaxis ES2015 que tiene JSX, para que pueda eliminar el &lt;code&gt;(h)&lt;/code&gt; par&amp;aacute;metro. Con versiones anteriores del complemento, su aplicaci&amp;oacute;n arrojar&amp;iacute;a un error si &lt;code&gt;h&lt;/code&gt; no estuviera disponible en el alcance.</target>
        </trans-unit>
        <trans-unit id="67e512a516784e547a77cdcbe9a92b128f542007" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;$slots&lt;/code&gt; are now also exposed on &lt;code&gt;$scopedSlots&lt;/code&gt; as functions. If you work with render functions, it is now recommended to always access slots via &lt;code&gt;$scopedSlots&lt;/code&gt;, whether they currently use a scope or not. This will not only make future refactors to add a scope simpler, but also ease your eventual migration to Vue 3, where all slots will be functions.</source>
          <target state="translated">Todos los &lt;code&gt;$slots&lt;/code&gt; ahora tambi&amp;eacute;n est&amp;aacute;n expuestos en &lt;code&gt;$scopedSlots&lt;/code&gt; como funciones. Si trabaja con funciones de renderizado, ahora se recomienda acceder siempre a las ranuras a trav&amp;eacute;s de &lt;code&gt;$scopedSlots&lt;/code&gt; , ya sea que usen un alcance o no. Esto no solo simplificar&amp;aacute; los futuros refactores para agregar un alcance, sino que tambi&amp;eacute;n facilitar&amp;aacute; su eventual migraci&amp;oacute;n a Vue 3, donde todas las ranuras ser&amp;aacute;n funciones.</target>
        </trans-unit>
        <trans-unit id="d4fc5c0811f2637eb910708a252d6026f43f9a64" translate="yes" xml:space="preserve">
          <source>All UMD builds can be used directly as an AMD module.</source>
          <target state="translated">Todas las construcciones de UMD pueden ser usadas directamente como un módulo AMD.</target>
        </trans-unit>
        <trans-unit id="df38f74745e7028f377542dd26c5bcd8b69c02e7" translate="yes" xml:space="preserve">
          <source>All VNodes in the component tree must be unique. That means the following render function is invalid:</source>
          <target state="translated">Todos los VNodos en el árbol de componentes deben ser únicos.Eso significa que la siguiente función de representación es inválida:</target>
        </trans-unit>
        <trans-unit id="518e8e3823613ecc844aca79a863b64325e131d7" translate="yes" xml:space="preserve">
          <source>All lifecycle hooks automatically have their &lt;code&gt;this&lt;/code&gt; context bound to the instance, so that you can access data, computed properties, and methods. This means &lt;strong&gt;you should not use an arrow function to define a lifecycle method&lt;/strong&gt; (e.g. &lt;code&gt;created: () =&amp;gt; this.fetchTodos()&lt;/code&gt;). The reason is arrow functions bind the parent context, so &lt;code&gt;this&lt;/code&gt; will not be the Vue instance as you expect and &lt;code&gt;this.fetchTodos&lt;/code&gt; will be undefined.</source>
          <target state="translated">Todos los enlaces de ciclo de vida tienen autom&amp;aacute;ticamente &lt;code&gt;this&lt;/code&gt; contexto vinculado a la instancia, de modo que pueda acceder a datos, propiedades calculadas y m&amp;eacute;todos. Esto significa &lt;strong&gt;que no debe usar una funci&amp;oacute;n de flecha para definir un m&amp;eacute;todo de ciclo de vida&lt;/strong&gt; (por ejemplo, &lt;code&gt;created: () =&amp;gt; this.fetchTodos()&lt;/code&gt; ). La raz&amp;oacute;n es que las funciones de flecha enlazan el contexto principal, por lo que &lt;code&gt;this&lt;/code&gt; no ser&amp;aacute; la instancia de Vue como esperabas y &lt;code&gt;this.fetchTodos&lt;/code&gt; no estar&amp;aacute; definido.</target>
        </trans-unit>
        <trans-unit id="5a1fd707965d908f856ca354f3073f7702a25ad9" translate="yes" xml:space="preserve">
          <source>All of these are either already stored as raw numbers or can be converted into numbers. Once we do that, we can animate these state changes using 3rd-party libraries to tween state, in combination with Vue&amp;rsquo;s reactivity and component systems.</source>
          <target state="translated">Todos estos ya est&amp;aacute;n almacenados como n&amp;uacute;meros sin procesar o se pueden convertir en n&amp;uacute;meros. Una vez que hagamos eso, podemos animar estos cambios de estado utilizando bibliotecas de terceros para interpolar el estado, en combinaci&amp;oacute;n con la reactividad y los sistemas de componentes de Vue.</target>
        </trans-unit>
        <trans-unit id="4a83d046e31f738e64b7093dda5db51fee1bd192" translate="yes" xml:space="preserve">
          <source>All of these are solved by &lt;strong&gt;single-file components&lt;/strong&gt; with a &lt;code&gt;.vue&lt;/code&gt; extension, made possible with build tools such as Webpack or Browserify.</source>
          <target state="translated">Todos estos se resuelven mediante &lt;strong&gt;componentes&lt;/strong&gt; de un &lt;strong&gt;solo archivo&lt;/strong&gt; con una extensi&amp;oacute;n &lt;code&gt;.vue&lt;/code&gt; , que son posibles con herramientas de compilaci&amp;oacute;n como Webpack o Browserify.</target>
        </trans-unit>
        <trans-unit id="c167a5e717e3cf2ba619d5219265e210d79f7e3c" translate="yes" xml:space="preserve">
          <source>All props form a &lt;strong&gt;one-way-down binding&lt;/strong&gt; between the child property and the parent one: when the parent property updates, it will flow down to the child, but not the other way around. This prevents child components from accidentally mutating the parent&amp;rsquo;s state, which can make your app&amp;rsquo;s data flow harder to understand.</source>
          <target state="translated">Todos los accesorios forman un &lt;strong&gt;enlace unidireccional hacia abajo&lt;/strong&gt; entre la propiedad secundaria y la principal: cuando la propiedad principal se actualiza, fluir&amp;aacute; hacia la secundaria, pero no al rev&amp;eacute;s. Esto evita que los componentes secundarios muten accidentalmente el estado principal, lo que puede dificultar la comprensi&amp;oacute;n del flujo de datos de su aplicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="16eab474b1ec4a1329577a71f5e9c584e38a8532" translate="yes" xml:space="preserve">
          <source>All routing mode options have been condensed into a single &lt;a href=&quot;https://router.vuejs.org/en/api/options.html#mode&quot;&gt;&lt;code&gt;mode&lt;/code&gt; option&lt;/a&gt;. Update:</source>
          <target state="translated">Todas las opciones de modo de enrutamiento se han condensado en una &lt;a href=&quot;https://router.vuejs.org/en/api/options.html#mode&quot;&gt;opci&amp;oacute;n de &lt;/a&gt; &lt;code&gt;mode&lt;/code&gt; &amp;uacute;nico . Actualizar:</target>
        </trans-unit>
        <trans-unit id="8eb0ad80548989252fccb966f36ec90afb0e191a" translate="yes" xml:space="preserve">
          <source>All subcomponents will now be able to access this instance and use it as a global store:</source>
          <target state="translated">Todos los subcomponentes podrán ahora acceder a esta instancia y utilizarla como una tienda global:</target>
        </trans-unit>
        <trans-unit id="86b786b1e86ded052a10ac30b2941b171f237ad7" translate="yes" xml:space="preserve">
          <source>All the features on this page document the handling of edge cases, meaning unusual situations that sometimes require bending Vue&amp;rsquo;s rules a little. Note however, that they all have disadvantages or situations where they could be dangerous. These are noted in each case, so keep them in mind when deciding to use each feature.</source>
          <target state="translated">Todas las funciones de esta p&amp;aacute;gina documentan el manejo de casos extremos, es decir, situaciones inusuales que a veces requieren doblar un poco las reglas de Vue. Sin embargo, tenga en cuenta que todos tienen desventajas o situaciones en las que podr&amp;iacute;an ser peligrosos. Estos se anotan en cada caso, as&amp;iacute; que t&amp;eacute;ngalos en cuenta cuando decida utilizar cada funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="6ce03eb6970bf7238f60e7b5faf1c518811ed16c" translate="yes" xml:space="preserve">
          <source>Allow the component to recursively invoke itself in its template. Note that when a component is registered globally with &lt;code&gt;Vue.component()&lt;/code&gt;, the global ID is automatically set as its name.</source>
          <target state="translated">Permita que el componente se invoque a s&amp;iacute; mismo de forma recursiva en su plantilla. Tenga en cuenta que cuando un componente se registra globalmente con &lt;code&gt;Vue.component()&lt;/code&gt; , la ID global se establece autom&amp;aacute;ticamente como su nombre.</target>
        </trans-unit>
        <trans-unit id="4030c4050fc12765d9ba75383685566375d8c859" translate="yes" xml:space="preserve">
          <source>Allows a custom component to customize the prop and event used when it&amp;rsquo;s used with &lt;code&gt;v-model&lt;/code&gt;. By default, &lt;code&gt;v-model&lt;/code&gt; on a component uses &lt;code&gt;value&lt;/code&gt; as the prop and &lt;code&gt;input&lt;/code&gt; as the event, but some input types such as checkboxes and radio buttons may want to use the &lt;code&gt;value&lt;/code&gt; prop for a different purpose. Using the &lt;code&gt;model&lt;/code&gt; option can avoid the conflict in such cases.</source>
          <target state="translated">Permite que un componente personalizado personalice el accesorio y el evento usados ​​cuando se usa con &lt;code&gt;v-model&lt;/code&gt; . De forma predeterminada, &lt;code&gt;v-model&lt;/code&gt; en un componente usa &lt;code&gt;value&lt;/code&gt; como prop y &lt;code&gt;input&lt;/code&gt; como evento, pero algunos tipos de entrada, como casillas de verificaci&amp;oacute;n y botones de radio, pueden querer usar el prop &lt;code&gt;value&lt;/code&gt; para un prop&amp;oacute;sito diferente. El uso de la opci&amp;oacute;n de &lt;code&gt;model&lt;/code&gt; o puede evitar el conflicto en tales casos.</target>
        </trans-unit>
        <trans-unit id="f29503ea12f3831556bab8df3d4f0c4b219c2ed7" translate="yes" xml:space="preserve">
          <source>Allows declaratively extending another component (could be either a plain options object or a constructor) without having to use &lt;code&gt;Vue.extend&lt;/code&gt;. This is primarily intended to make it easier to extend between single file components.</source>
          <target state="translated">Permite extender declarativamente otro componente (podr&amp;iacute;a ser un objeto de opciones simple o un constructor) sin tener que usar &lt;code&gt;Vue.extend&lt;/code&gt; . Esto est&amp;aacute; destinado principalmente a facilitar la extensi&amp;oacute;n entre componentes de un solo archivo.</target>
        </trans-unit>
        <trans-unit id="71832ae8fbec097aca1233a41a5a8145116e6ffd" translate="yes" xml:space="preserve">
          <source>Also note that &lt;strong&gt;what&amp;rsquo;s considered &amp;ldquo;highest-level&amp;rdquo; will be contextual to your app&lt;/strong&gt;. For example, imagine an app with a search form. It may include components like this one:</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que &lt;strong&gt;lo&lt;/strong&gt; que &lt;strong&gt;se considera de &quot;nivel m&amp;aacute;s alto&quot; ser&amp;aacute; contextual para su aplicaci&amp;oacute;n&lt;/strong&gt; . Por ejemplo, imagine una aplicaci&amp;oacute;n con un formulario de b&amp;uacute;squeda. Puede incluir componentes como este:</target>
        </trans-unit>
        <trans-unit id="d29ecac72ed7922b3f8b6ffb06c3eef36a16fd7e" translate="yes" xml:space="preserve">
          <source>Also note that if you&amp;rsquo;ve already invested heavily in kebab-case, consistency with HTML conventions and being able to use the same casing across all your projects may be more important than the advantages listed above. In those cases, &lt;strong&gt;using kebab-case everywhere is also acceptable.&lt;/strong&gt;</source>
          <target state="translated">Tambi&amp;eacute;n tenga en cuenta que si ya ha invertido mucho en kebab-case, la coherencia con las convenciones HTML y poder utilizar la misma carcasa en todos sus proyectos puede ser m&amp;aacute;s importante que las ventajas enumeradas anteriormente. En esos casos, &lt;strong&gt;tambi&amp;eacute;n es aceptable usar kebab-case en todas partes.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bfbb7fab0be9654dae857edec1fc82f73c59ac8f" translate="yes" xml:space="preserve">
          <source>Also see &lt;a href=&quot;deployment&quot;&gt;Production Deployment Tips&lt;/a&gt;.</source>
          <target state="translated">Consulte tambi&amp;eacute;n &lt;a href=&quot;deployment&quot;&gt;Consejos de implementaci&amp;oacute;n de producci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9733af4a520a87f91ee5c9edbce6f05a4300b1ea" translate="yes" xml:space="preserve">
          <source>Alternate Template Definitions</source>
          <target state="translated">Definiciones de plantillas alternativas</target>
        </trans-unit>
        <trans-unit id="90594d18c278847211cf8a22342e70877c15c228" translate="yes" xml:space="preserve">
          <source>Alternatively, you can also specify an alias for the index (or the key if used on an Object):</source>
          <target state="translated">Alternativamente,también puede especificar un alias para el índice (o la clave si se utiliza en un objeto):</target>
        </trans-unit>
        <trans-unit id="6c21cb25a7f1aa0b87f4b576985c4e9de23a4f8a" translate="yes" xml:space="preserve">
          <source>Although Vue doesn&amp;rsquo;t use custom elements internally, it has &lt;a href=&quot;https://custom-elements-everywhere.com/#vue&quot;&gt;great interoperability&lt;/a&gt; when it comes to consuming or distributing as custom elements. Vue CLI also supports building Vue components that register themselves as native custom elements.</source>
          <target state="translated">Aunque Vue no usa elementos personalizados internamente, tiene una &lt;a href=&quot;https://custom-elements-everywhere.com/#vue&quot;&gt;gran interoperabilidad&lt;/a&gt; cuando se trata de consumir o distribuir como elementos personalizados. Vue CLI tambi&amp;eacute;n admite la creaci&amp;oacute;n de componentes de Vue que se registran como elementos personalizados nativos.</target>
        </trans-unit>
        <trans-unit id="5f919759cdbbe867e98788b24924bdb6828f1ec1" translate="yes" xml:space="preserve">
          <source>Although filters within text interpolations are still allowed, all of the filters have been removed. Instead, it&amp;rsquo;s recommended to use more specialized libraries for solving problems in each domain (e.g. &lt;a href=&quot;https://date-fns.org/&quot;&gt;&lt;code&gt;date-fns&lt;/code&gt;&lt;/a&gt; to format dates and &lt;a href=&quot;http://openexchangerates.github.io/accounting.js/&quot;&gt;&lt;code&gt;accounting&lt;/code&gt;&lt;/a&gt; for currencies).</source>
          <target state="translated">Aunque los filtros dentro de las interpolaciones de texto todav&amp;iacute;a est&amp;aacute;n permitidos, se han eliminado todos los filtros. En su lugar, se recomienda utilizar bibliotecas m&amp;aacute;s especializadas para resolver problemas en cada dominio (por ejemplo, &lt;a href=&quot;https://date-fns.org/&quot;&gt; &lt;code&gt;date-fns&lt;/code&gt; &lt;/a&gt; para formatear fechas y &lt;a href=&quot;http://openexchangerates.github.io/accounting.js/&quot;&gt; &lt;code&gt;accounting&lt;/code&gt; &lt;/a&gt; monedas).</target>
        </trans-unit>
        <trans-unit id="4e7f3a16ff67996f9ee85352b2dcd3bbfebfca43" translate="yes" xml:space="preserve">
          <source>Although not strictly associated with the &lt;a href=&quot;https://en.wikipedia.org/wiki/Model_View_ViewModel&quot;&gt;MVVM pattern&lt;/a&gt;, Vue&amp;rsquo;s design was partly inspired by it. As a convention, we often use the variable &lt;code&gt;vm&lt;/code&gt; (short for ViewModel) to refer to our Vue instance.</source>
          <target state="translated">Aunque no est&amp;aacute; estrictamente asociado con el &lt;a href=&quot;https://en.wikipedia.org/wiki/Model_View_ViewModel&quot;&gt;patr&amp;oacute;n MVVM&lt;/a&gt; , el dise&amp;ntilde;o de Vue se inspir&amp;oacute; en parte en &amp;eacute;l. Como convenci&amp;oacute;n, a menudo usamos la variable &lt;code&gt;vm&lt;/code&gt; (abreviatura de ViewModel) para referirnos a nuestra instancia de Vue.</target>
        </trans-unit>
        <trans-unit id="48633038159d243023310c2ad16e9d558e2af750" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;errorCaptured&lt;/code&gt; hook can return &lt;code&gt;false&lt;/code&gt; to prevent the error from propagating further. This is essentially saying &amp;ldquo;this error has been handled and should be ignored.&amp;rdquo; It will prevent any additional &lt;code&gt;errorCaptured&lt;/code&gt; hooks or the global &lt;code&gt;config.errorHandler&lt;/code&gt; from being invoked for this error.</source>
          <target state="translated">Un gancho &lt;code&gt;errorCaptured&lt;/code&gt; puede devolver &lt;code&gt;false&lt;/code&gt; para evitar que el error se propague m&amp;aacute;s. B&amp;aacute;sicamente, se trata de decir &quot;este error se ha manejado y debe ignorarse&quot;. &lt;code&gt;errorCaptured&lt;/code&gt; ganchos de errorCaptured adicionales o el &lt;code&gt;config.errorHandler&lt;/code&gt; global para este error.</target>
        </trans-unit>
        <trans-unit id="a79dd4fc23e6041bcb9f258f161a2a973a10be8c" translate="yes" xml:space="preserve">
          <source>An alternative to string templates allowing you to leverage the full programmatic power of JavaScript. The render function receives a &lt;code&gt;createElement&lt;/code&gt; method as it&amp;rsquo;s first argument used to create &lt;code&gt;VNode&lt;/code&gt;s.</source>
          <target state="translated">Una alternativa a las plantillas de cadenas que le permite aprovechar todo el poder program&amp;aacute;tico de JavaScript. La funci&amp;oacute;n render recibe un m&amp;eacute;todo &lt;code&gt;createElement&lt;/code&gt; como su primer argumento usado para crear &lt;code&gt;VNode&lt;/code&gt; s.</target>
        </trans-unit>
        <trans-unit id="ca3799ca57153370cb0516f1ebcb1401ebe08e12" translate="yes" xml:space="preserve">
          <source>An example of a custom directive using some of these properties:</source>
          <target state="translated">Un ejemplo de una directiva personalizada que utiliza algunas de estas propiedades:</target>
        </trans-unit>
        <trans-unit id="b0d30581a4ac7962ecae5a1d28316366708ba0db" translate="yes" xml:space="preserve">
          <source>An ideal Vue application is props down, events up. Sticking to this convention makes your components much easier to understand. However, there are edge cases where prop mutation or &lt;code&gt;this.$parent&lt;/code&gt; can simplify two components that are already deeply coupled.</source>
          <target state="translated">Una aplicaci&amp;oacute;n de Vue ideal es props down, events up. Cumplir con esta convenci&amp;oacute;n hace que sus componentes sean mucho m&amp;aacute;s f&amp;aacute;ciles de entender. Sin embargo, hay casos extremos en los que prop mutation o &lt;code&gt;this.$parent&lt;/code&gt; pueden simplificar dos componentes que ya est&amp;aacute;n profundamente acoplados.</target>
        </trans-unit>
        <trans-unit id="c8f457aa9789280586eabf3b4043968fac51eb9b" translate="yes" xml:space="preserve">
          <source>An important note about the ref registration timing: because the refs themselves are created as a result of the render function, you cannot access them on the initial render - they don&amp;rsquo;t exist yet! &lt;code&gt;$refs&lt;/code&gt; is also non-reactive, therefore you should not attempt to use it in templates for data-binding.</source>
          <target state="translated">Una nota importante sobre el tiempo de registro de las referencias: debido a que las propias referencias se crean como resultado de la funci&amp;oacute;n de renderizado, no puede acceder a ellas en el renderizado inicial, &amp;iexcl;todav&amp;iacute;a no existen! &lt;code&gt;$refs&lt;/code&gt; tampoco es reactivo, por lo tanto, no debe intentar usarlo en plantillas para el enlace de datos.</target>
        </trans-unit>
        <trans-unit id="31adc28bf741f1caac66398ce75f50fb8901e915" translate="yes" xml:space="preserve">
          <source>An object of DOM elements and component instances, registered with &lt;a href=&quot;#ref&quot;&gt;&lt;code&gt;ref&lt;/code&gt; attributes&lt;/a&gt;.</source>
          <target state="translated">Un objeto de elementos DOM e instancias de componentes, registrado con &lt;a href=&quot;#ref&quot;&gt;atributos &lt;/a&gt; &lt;code&gt;ref&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="429233ae8c44c337cc867f9ffe3dabc28329fcda" translate="yes" xml:space="preserve">
          <source>An object representing the current props a component has received. The Vue instance proxies access to the properties on its props object.</source>
          <target state="translated">Un objeto que representa los accesorios actuales que ha recibido un componente.La instancia Vue da acceso a las propiedades de su objeto de atrezzo.</target>
        </trans-unit>
        <trans-unit id="b854f15df3197587296b2c1985187a344087cda1" translate="yes" xml:space="preserve">
          <source>An object where keys are expressions to watch and values are the corresponding callbacks. The value can also be a string of a method name, or an Object that contains additional options. The Vue instance will call &lt;code&gt;$watch()&lt;/code&gt; for each entry in the object at instantiation.</source>
          <target state="translated">Un objeto donde las claves son expresiones para observar y los valores son las devoluciones de llamada correspondientes. El valor tambi&amp;eacute;n puede ser una cadena de un nombre de m&amp;eacute;todo o un Objeto que contiene opciones adicionales. La instancia de Vue llamar&amp;aacute; a &lt;code&gt;$watch()&lt;/code&gt; para cada entrada en el objeto en la instanciaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="a910bf09a64caf648d8684b0e13f7b12b51b445f" translate="yes" xml:space="preserve">
          <source>And &lt;a href=&quot;render-function#Functional-Components&quot;&gt;functional components&lt;/a&gt; are especially well-suited to this task:</source>
          <target state="translated">Y los &lt;a href=&quot;render-function#Functional-Components&quot;&gt;componentes funcionales&lt;/a&gt; son especialmente adecuados para esta tarea:</target>
        </trans-unit>
        <trans-unit id="4f2d8a5ea853de2d832e41d30344cf66ad54abde" translate="yes" xml:space="preserve">
          <source>And access scoped slots as functions that return VNodes from &lt;a href=&quot;../api/index#vm-scopedSlots&quot;&gt;&lt;code&gt;this.$scopedSlots&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Y acceda a las ranuras con &amp;aacute;mbito como funciones que devuelven VNodes desde &lt;a href=&quot;../api/index#vm-scopedSlots&quot;&gt; &lt;code&gt;this.$scopedSlots&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="06be132e44569998b6713037b4938f2f9326d7b0" translate="yes" xml:space="preserve">
          <source>And another for the index:</source>
          <target state="translated">Y otra para el índice:</target>
        </trans-unit>
        <trans-unit id="ccd97cfa695145777f87153245644b8bc85629fb" translate="yes" xml:space="preserve">
          <source>And even define methods for use by the parent:</source>
          <target state="translated">E incluso definir métodos para el uso de los padres:</target>
        </trans-unit>
        <trans-unit id="3fe400f8b1de3f59d8a0a26cac0f5d38cdc0768f" translate="yes" xml:space="preserve">
          <source>And in both cases, Vue automatically keeps the page updated, even when &lt;code&gt;blogTitle&lt;/code&gt; changes.</source>
          <target state="translated">Y en ambos casos, Vue mantiene autom&amp;aacute;ticamente la p&amp;aacute;gina actualizada, incluso cuando cambia &lt;code&gt;blogTitle&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="02afd3485814018314fc92f3b2cbf8e1256b1cfe" translate="yes" xml:space="preserve">
          <source>And the &lt;code&gt;data-date-picker=&quot;activated&quot;&lt;/code&gt; attribute will automatically be added to the root element of &lt;code&gt;bootstrap-date-input&lt;/code&gt;.</source>
          <target state="translated">Y el atributo &lt;code&gt;data-date-picker=&quot;activated&quot;&lt;/code&gt; agregar&amp;aacute; autom&amp;aacute;ticamente al elemento ra&amp;iacute;z de &lt;code&gt;bootstrap-date-input&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4d0f2b48e78d27ea894b9f9744256fd5b0718f4e" translate="yes" xml:space="preserve">
          <source>And the following data:</source>
          <target state="translated">Y los siguientes datos:</target>
        </trans-unit>
        <trans-unit id="c6d1ad79131294b1b2ea6cece145a23b5d1a5f6c" translate="yes" xml:space="preserve">
          <source>And then maybe also translated so that they look like slide transitions:</source>
          <target state="translated">Y luego tal vez también traducido para que parezcan transiciones de diapositivas:</target>
        </trans-unit>
        <trans-unit id="8b9af529f591ec25d3f2779afcadcc8505cb56cf" translate="yes" xml:space="preserve">
          <source>Angular (Formerly known as Angular 2)</source>
          <target state="translated">Angular (Anteriormente conocido como Angular 2)</target>
        </trans-unit>
        <trans-unit id="4127a41ec2530d25dc05e74ba8d8ef42d6dfeb13" translate="yes" xml:space="preserve">
          <source>Angular essentially requires using TypeScript, given that almost all its documentation and learning resources are TypeScript-based. TypeScript has its benefits - static type checking can be very useful for large-scale applications, and can be a big productivity boost for developers with backgrounds in Java and C#.</source>
          <target state="translated">Angular requiere esencialmente el uso de TypeScript,dado que casi toda su documentación y recursos de aprendizaje están basados en TypeScript.TypeScript tiene sus beneficios-la comprobación estática de tipos puede ser muy útil para aplicaciones a gran escala,y puede ser un gran impulso a la productividad para los desarrolladores con antecedentes en Java y C#.</target>
        </trans-unit>
        <trans-unit id="e44881591b06fbc4a45833b87c07555b78e7ddd2" translate="yes" xml:space="preserve">
          <source>Angular&amp;rsquo;s learning curve is much steeper. The API surface of the framework is huge and as a user you will need to familiarize yourself with a lot more concepts before getting productive. The complexity of Angular is largely due to its design goal of targeting only large, complex applications - but that does make the framework a lot more difficult for less-experienced developers to pick up.</source>
          <target state="translated">La curva de aprendizaje de Angular es mucho m&amp;aacute;s pronunciada. La superficie API del marco es enorme y, como usuario, deber&amp;aacute; familiarizarse con muchos m&amp;aacute;s conceptos antes de volverse productivo. La complejidad de Angular se debe en gran parte a su objetivo de dise&amp;ntilde;o de apuntar solo a aplicaciones grandes y complejas, pero eso hace que el marco sea mucho m&amp;aacute;s dif&amp;iacute;cil de captar para los desarrolladores menos experimentados.</target>
        </trans-unit>
        <trans-unit id="0bebd6505683a5460e20d1f583af41eb627ff410" translate="yes" xml:space="preserve">
          <source>AngularJS (Angular 1)</source>
          <target state="translated">AngularJS (Angular 1)</target>
        </trans-unit>
        <trans-unit id="f27be6768b82160617147c1127846e551b257da7" translate="yes" xml:space="preserve">
          <source>AngularJS has strong opinions about how your applications should be structured, while Vue is a more flexible, modular solution. While this makes Vue more adaptable to a wide variety of projects, we also recognize that sometimes it&amp;rsquo;s useful to have some decisions made for you, so that you can just start coding.</source>
          <target state="translated">AngularJS tiene opiniones s&amp;oacute;lidas sobre c&amp;oacute;mo deben estructurarse sus aplicaciones, mientras que Vue es una soluci&amp;oacute;n modular m&amp;aacute;s flexible. Si bien esto hace que Vue sea m&amp;aacute;s adaptable a una amplia variedad de proyectos, tambi&amp;eacute;n reconocemos que a veces es &amp;uacute;til que se tomen algunas decisiones para que pueda comenzar a codificar.</target>
        </trans-unit>
        <trans-unit id="0199e29cf3b3f4d7cda82c53037ac25108e233de" translate="yes" xml:space="preserve">
          <source>AngularJS uses two-way binding between scopes, while Vue enforces a one-way data flow between components. This makes the flow of data easier to reason about in non-trivial applications.</source>
          <target state="translated">AngularJS usa una unión bidireccional entre los visores,mientras que Vue hace cumplir un flujo de datos unidireccional entre los componentes.Esto hace que el flujo de datos sea más fácil de razonar en aplicaciones no triviales.</target>
        </trans-unit>
        <trans-unit id="89cdaaa526dab7508f980424466958d70c6ea504" translate="yes" xml:space="preserve">
          <source>Animating State with Watchers</source>
          <target state="translated">Animando el estado con los observadores</target>
        </trans-unit>
        <trans-unit id="a5fe4216ab1a65fba7f939921a81d64835706feb" translate="yes" xml:space="preserve">
          <source>Annotating Return Types</source>
          <target state="translated">Anotar los tipos de retorno</target>
        </trans-unit>
        <trans-unit id="fac26fa78a26c835cdff8ea91702976f8d085d17" translate="yes" xml:space="preserve">
          <source>Another advantage of this approach is there will be times when debouncing isn&amp;rsquo;t quite the right wrapper function. For example, when hitting an API for search suggestions, waiting to offer suggestions until after the user has stopped typing for a period of time isn&amp;rsquo;t an ideal experience. What you probably want instead is a &lt;strong&gt;throttling&lt;/strong&gt; function. Now since you&amp;rsquo;re already using a utility library like lodash, refactoring to use its &lt;code&gt;throttle&lt;/code&gt; function instead takes only a few seconds.</source>
          <target state="translated">Otra ventaja de este enfoque es que habr&amp;aacute; ocasiones en las que la eliminaci&amp;oacute;n de rebotes no sea la funci&amp;oacute;n de envoltura adecuada. Por ejemplo, al acceder a una API para obtener sugerencias de b&amp;uacute;squeda, esperar para ofrecer sugerencias hasta que el usuario haya dejado de escribir durante un per&amp;iacute;odo de tiempo no es una experiencia ideal. Lo que probablemente desee en su lugar es una funci&amp;oacute;n de &lt;strong&gt;limitaci&amp;oacute;n&lt;/strong&gt; . Ahora que ya est&amp;aacute; usando una biblioteca de utilidades como lodash, la refactorizaci&amp;oacute;n para usar su funci&amp;oacute;n de &lt;code&gt;throttle&lt;/code&gt; solo toma unos segundos.</target>
        </trans-unit>
        <trans-unit id="b3ca4d422cbd550db9e33ff6b547ff5cabe7506b" translate="yes" xml:space="preserve">
          <source>Another benefit of specifying a &lt;code&gt;name&lt;/code&gt; option is debugging. Named components result in more helpful warning messages. Also, when inspecting an app in the &lt;a href=&quot;https://github.com/vuejs/vue-devtools&quot;&gt;vue-devtools&lt;/a&gt;, unnamed components will show up as &lt;code&gt;&amp;lt;AnonymousComponent&amp;gt;&lt;/code&gt;, which isn&amp;rsquo;t very informative. By providing the &lt;code&gt;name&lt;/code&gt; option, you will get a much more informative component tree.</source>
          <target state="translated">Otro beneficio de especificar una opci&amp;oacute;n de &lt;code&gt;name&lt;/code&gt; es la depuraci&amp;oacute;n. Los componentes con nombre dan como resultado mensajes de advertencia m&amp;aacute;s &amp;uacute;tiles. Adem&amp;aacute;s, al inspeccionar una aplicaci&amp;oacute;n en &lt;a href=&quot;https://github.com/vuejs/vue-devtools&quot;&gt;vue-devtools&lt;/a&gt; , los componentes sin nombre aparecer&amp;aacute;n como &lt;code&gt;&amp;lt;AnonymousComponent&amp;gt;&lt;/code&gt; , que no es muy informativo. Al proporcionar la opci&amp;oacute;n de &lt;code&gt;name&lt;/code&gt; , obtendr&amp;aacute; un &amp;aacute;rbol de componentes mucho m&amp;aacute;s informativo.</target>
        </trans-unit>
        <trans-unit id="5308008001fa5061e1f04723030a1ce8f47aa8b9" translate="yes" xml:space="preserve">
          <source>Another example is the &lt;code&gt;v-on&lt;/code&gt; directive, which listens to DOM events:</source>
          <target state="translated">Otro ejemplo es la directiva &lt;code&gt;v-on&lt;/code&gt; , que escucha eventos DOM:</target>
        </trans-unit>
        <trans-unit id="d1ecc65f67e6969ebcc8bbf972265b09018de544" translate="yes" xml:space="preserve">
          <source>Another important difference between these offerings is that Vue&amp;rsquo;s companion libraries for state management and routing (among &lt;a href=&quot;https://github.com/vuejs&quot;&gt;other concerns&lt;/a&gt;) are all officially supported and kept up-to-date with the core library. React instead chooses to leave these concerns to the community, creating a more fragmented ecosystem. Being more popular though, React&amp;rsquo;s ecosystem is considerably richer than Vue&amp;rsquo;s.</source>
          <target state="translated">Otra diferencia importante entre estas ofertas es que las bibliotecas complementarias de Vue para la administraci&amp;oacute;n del estado y el enrutamiento (entre &lt;a href=&quot;https://github.com/vuejs&quot;&gt;otras preocupaciones&lt;/a&gt; ) cuentan con soporte oficial y se mantienen actualizadas con la biblioteca principal. En su lugar, React opta por dejar estas preocupaciones a la comunidad, creando un ecosistema m&amp;aacute;s fragmentado. Sin embargo, al ser m&amp;aacute;s popular, el ecosistema de React es considerablemente m&amp;aacute;s rico que el de Vue.</target>
        </trans-unit>
        <trans-unit id="279abeb88c89906481a812ea27f12adaee86a4e4" translate="yes" xml:space="preserve">
          <source>Another option for conditionally displaying an element is the &lt;code&gt;v-show&lt;/code&gt; directive. The usage is largely the same:</source>
          <target state="translated">Otra opci&amp;oacute;n para mostrar un elemento de forma condicional es la directiva &lt;code&gt;v-show&lt;/code&gt; . El uso es b&amp;aacute;sicamente el mismo:</target>
        </trans-unit>
        <trans-unit id="3df284c618aa9b322bcba8cd186336d81e30b6b1" translate="yes" xml:space="preserve">
          <source>Another option is &lt;a href=&quot;https://nativescript-vue.org/&quot;&gt;NativeScript-Vue&lt;/a&gt;, a &lt;a href=&quot;https://www.nativescript.org/&quot;&gt;NativeScript&lt;/a&gt; plugin for building truly native applications using Vue.js.</source>
          <target state="translated">Otra opci&amp;oacute;n es &lt;a href=&quot;https://nativescript-vue.org/&quot;&gt;NativeScript-Vue&lt;/a&gt; , un complemento de &lt;a href=&quot;https://www.nativescript.org/&quot;&gt;NativeScript&lt;/a&gt; para crear aplicaciones verdaderamente nativas utilizando Vue.js.</target>
        </trans-unit>
        <trans-unit id="c01c2e1f17f76fd0637bdf50179307408d9d2e2f" translate="yes" xml:space="preserve">
          <source>Another way to define templates is inside of a script element with the type &lt;code&gt;text/x-template&lt;/code&gt;, then referencing the template by an id. For example:</source>
          <target state="translated">Otra forma de definir plantillas es dentro de un elemento de script con el tipo &lt;code&gt;text/x-template&lt;/code&gt; , luego haciendo referencia a la plantilla por una identificaci&amp;oacute;n. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="b2151d681dcbfc67a52e5624c98d86c82b4824c9" translate="yes" xml:space="preserve">
          <source>Any value that can be named might be useful to the view. For example, we might decide to display a message telling the user how much money they saved. We might also decide to calculate sales tax, but perhaps display it separately, rather than as part of the final price.</source>
          <target state="translated">Cualquier valor que se pueda nombrar puede ser útil para la vista.Por ejemplo,podríamos decidir mostrar un mensaje que diga al usuario cuánto dinero ha ahorrado.También podríamos decidir calcular el impuesto sobre las ventas,pero tal vez mostrarlo por separado,en lugar de como parte del precio final.</target>
        </trans-unit>
        <trans-unit id="e62b70f056a0f2de6c9c51efc819c923d57838d8" translate="yes" xml:space="preserve">
          <source>Apart from &lt;code&gt;el&lt;/code&gt;, you should treat these arguments as read-only and never modify them. If you need to share information across hooks, it is recommended to do so through element&amp;rsquo;s &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dataset&quot;&gt;dataset&lt;/a&gt;.</source>
          <target state="translated">Aparte de &lt;code&gt;el&lt;/code&gt; , debe tratar estos argumentos como de solo lectura y nunca modificarlos. Si necesita compartir informaci&amp;oacute;n a trav&amp;eacute;s de enlaces, se recomienda hacerlo a trav&amp;eacute;s del &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dataset&quot;&gt;conjunto&lt;/a&gt; de datos del elemento .</target>
        </trans-unit>
        <trans-unit id="6d299c0f48f39d2b0feb39ddbb1885486785bc4c" translate="yes" xml:space="preserve">
          <source>Apart from answering questions and sharing resources in the forum and chat, there are a few other less obvious ways to share and expand what you know:</source>
          <target state="translated">Aparte de responder a las preguntas y compartir recursos en el foro y el chat,hay otras formas menos obvias de compartir y ampliar lo que sabes:</target>
        </trans-unit>
        <trans-unit id="bdd6b99bbdb5d0bd3b9a45910d4fa7d7b8dd9d8a" translate="yes" xml:space="preserve">
          <source>Apply a global &lt;a href=&quot;https://github.com/hughsk/envify&quot;&gt;envify&lt;/a&gt; transform to your bundle.</source>
          <target state="translated">Aplique una transformaci&amp;oacute;n &lt;a href=&quot;https://github.com/hughsk/envify&quot;&gt;envify&lt;/a&gt; global a su paquete.</target>
        </trans-unit>
        <trans-unit id="757dea009fa74f7bf6dcb184ed31259ffcbc037f" translate="yes" xml:space="preserve">
          <source>Apply a global &lt;a href=&quot;https://github.com/hughsk/envify&quot;&gt;envify&lt;/a&gt; transform to your bundle. This allows the minifier to strip out all the warnings in Vue&amp;rsquo;s source code wrapped in env variable conditional blocks. For example:</source>
          <target state="translated">Aplique una transformaci&amp;oacute;n &lt;a href=&quot;https://github.com/hughsk/envify&quot;&gt;envify&lt;/a&gt; global a su paquete. Esto permite que el minificador elimine todas las advertencias en el c&amp;oacute;digo fuente de Vue envuelto en bloques condicionales de variable env. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="403327cdfd6455034e7a5903a902c785cc738a89" translate="yes" xml:space="preserve">
          <source>Apply a mixin globally, which affects every Vue instance created afterwards. This can be used by plugin authors to inject custom behavior into components. &lt;strong&gt;Not recommended in application code&lt;/strong&gt;.</source>
          <target state="translated">Aplicar un mixin globalmente, que afecta a todas las instancias de Vue creadas posteriormente. Los autores de complementos pueden usar esto para inyectar un comportamiento personalizado en los componentes. &lt;strong&gt;No recomendado en el c&amp;oacute;digo de la aplicaci&amp;oacute;n&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="f4735ef213d3d24765c464d6cd890777f7cf436c" translate="yes" xml:space="preserve">
          <source>Arbitrary Route Properties &lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">Propiedades de ruta arbitraria &lt;sup&gt;reemplazadas&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="267ad5229d54ec1973232c405c353b0796523fe6" translate="yes" xml:space="preserve">
          <source>Arbitrary route properties must now be scoped under the new meta property, to avoid conflicts with future features. So for example, if you had defined:</source>
          <target state="translated">Las propiedades de rutas arbitrarias deben ahora ser examinadas bajo la nueva propiedad meta,para evitar conflictos con futuras características.Así,por ejemplo,si se hubiera definido:</target>
        </trans-unit>
        <trans-unit id="cbb9fa252e60809efa55a7ad83aea5438ef56753" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">Arguments</target>
        </trans-unit>
        <trans-unit id="107004472b7ba4e5e31f3082ee1fb5a1239eec61" translate="yes" xml:space="preserve">
          <source>Array</source>
          <target state="translated">Array</target>
        </trans-unit>
        <trans-unit id="ff66cc6d677ef24332635378ca4342dd60d4f561" translate="yes" xml:space="preserve">
          <source>Array Change Detection</source>
          <target state="translated">Detección de cambios en la matriz</target>
        </trans-unit>
        <trans-unit id="708e0f765f5d842c0a59b838022e6e808b06e5a7" translate="yes" xml:space="preserve">
          <source>Array Syntax</source>
          <target state="translated">Sintaxis de la matriz</target>
        </trans-unit>
        <trans-unit id="4ab524c1211c73bf04858502f22ef0470f4d2fb6" translate="yes" xml:space="preserve">
          <source>As a rule, remember that:</source>
          <target state="translated">Como regla,recuerde eso:</target>
        </trans-unit>
        <trans-unit id="b059cf6741c0409285deffd2e281e5839db913a8" translate="yes" xml:space="preserve">
          <source>As an example, we&amp;rsquo;ll now walk the migration of a two-way currency filter:</source>
          <target state="translated">Como ejemplo, ahora analizaremos la migraci&amp;oacute;n de un filtro de moneda bidireccional:</target>
        </trans-unit>
        <trans-unit id="c7dad05163db61d51ef343a96c387115e0e4b67a" translate="yes" xml:space="preserve">
          <source>As for Vuex, even version 0.8 is compatible with Vue 2, so you&amp;rsquo;re not forced to upgrade. The only reason you may want to upgrade immediately is to take advantage of the new features in Vuex 2, such as modules and reduced boilerplate.</source>
          <target state="translated">En cuanto a Vuex, incluso la versi&amp;oacute;n 0.8 es compatible con Vue 2, por lo que no est&amp;aacute; obligado a actualizar. La &amp;uacute;nica raz&amp;oacute;n por la que es posible que desee actualizar de inmediato es para aprovechar las nuevas caracter&amp;iacute;sticas de Vuex 2, como los m&amp;oacute;dulos y el texto est&amp;aacute;ndar reducido.</target>
        </trans-unit>
        <trans-unit id="af69a0700c77f9910c08f70bc1ad9fd3da6ce652" translate="yes" xml:space="preserve">
          <source>As for the &lt;code&gt;$&lt;/code&gt; prefix, its purpose within the Vue ecosystem is special instance properties that are exposed to the user, so using it for &lt;em&gt;private&lt;/em&gt; properties would not be appropriate.</source>
          <target state="translated">En cuanto al prefijo &lt;code&gt;$&lt;/code&gt; , su prop&amp;oacute;sito dentro del ecosistema Vue son propiedades de instancia especiales que est&amp;aacute;n expuestas al usuario, por lo que su uso para propiedades &lt;em&gt;privadas&lt;/em&gt; no ser&amp;iacute;a apropiado.</target>
        </trans-unit>
        <trans-unit id="8928a0eece301fdb8d986f28f6779f52d5b80d8c" translate="yes" xml:space="preserve">
          <source>As it&amp;rsquo;s transitioning between the &amp;ldquo;on&amp;rdquo; button and the &amp;ldquo;off&amp;rdquo; button, both buttons are rendered - one transitioning out while the other transitions in. This is the default behavior of &lt;code&gt;&amp;lt;transition&amp;gt;&lt;/code&gt; - entering and leaving happens simultaneously.</source>
          <target state="translated">A medida que se realiza la transici&amp;oacute;n entre el bot&amp;oacute;n &quot;encendido&quot; y el bot&amp;oacute;n &quot;apagado&quot;, ambos botones se renderizan, uno en transici&amp;oacute;n hacia afuera y el otro hacia adentro. Este es el comportamiento predeterminado de &lt;code&gt;&amp;lt;transition&amp;gt;&lt;/code&gt; : la entrada y la salida ocurren simult&amp;aacute;neamente.</target>
        </trans-unit>
        <trans-unit id="0d926c9870beb71dbe5afe4d5a4aec59ff016a79" translate="yes" xml:space="preserve">
          <source>As our component grows, it&amp;rsquo;s likely we&amp;rsquo;ll not only need the title and content of a post, but also the published date, comments, and more. Defining a prop for each related piece of information could become very annoying:</source>
          <target state="translated">A medida que nuestro componente crece, es probable que no solo necesitemos el t&amp;iacute;tulo y el contenido de una publicaci&amp;oacute;n, sino tambi&amp;eacute;n la fecha de publicaci&amp;oacute;n, los comentarios y m&amp;aacute;s. Definir un accesorio para cada informaci&amp;oacute;n relacionada podr&amp;iacute;a resultar muy molesto:</target>
        </trans-unit>
        <trans-unit id="301a8e1a96b0efb19480a241d8d5495a88e81d7c" translate="yes" xml:space="preserve">
          <source>As promised, we can also use preprocessors such as Pug, Babel (with ES2015 modules), and Stylus for cleaner and more feature-rich components.</source>
          <target state="translated">Como prometimos,también podemos usar preprocesadores como Pug,Babel (con módulos ES2015)y Stylus para obtener componentes más limpios y con más características.</target>
        </trans-unit>
        <trans-unit id="93822eb668e20b3a72d64366b15044afe31b739b" translate="yes" xml:space="preserve">
          <source>As we continue developing the convention where components are never allowed to directly mutate state that belongs to a store, but should instead dispatch events that notify the store to perform actions, we eventually arrive at the &lt;a href=&quot;https://facebook.github.io/flux/&quot;&gt;Flux&lt;/a&gt; architecture. The benefit of this convention is we can record all state mutations happening to the store and implement advanced debugging helpers such as mutation logs, snapshots, and history re-rolls / time travel.</source>
          <target state="translated">A medida que continuamos desarrollando la convenci&amp;oacute;n donde los componentes nunca pueden mutar directamente el estado que pertenece a una tienda, sino que deben enviar eventos que notifican a la tienda que realice acciones, finalmente llegamos a la arquitectura &lt;a href=&quot;https://facebook.github.io/flux/&quot;&gt;Flux&lt;/a&gt; . El beneficio de esta convenci&amp;oacute;n es que podemos registrar todas las mutaciones de estado que ocurren en la tienda e implementar ayudantes de depuraci&amp;oacute;n avanzados, como registros de mutaci&amp;oacute;n, instant&amp;aacute;neas y repeticiones de historial / viajes en el tiempo.</target>
        </trans-unit>
        <trans-unit id="7a95384968f4932d7b5246463d0cff519b6a7b61" translate="yes" xml:space="preserve">
          <source>As we develop our &lt;code&gt;&amp;lt;blog-post&amp;gt;&lt;/code&gt; component, some features may require communicating back up to the parent. For example, we may decide to include an accessibility feature to enlarge the text of blog posts, while leaving the rest of the page its default size:</source>
          <target state="translated">A medida que desarrollamos nuestro componente &lt;code&gt;&amp;lt;blog-post&amp;gt;&lt;/code&gt; , algunas funciones pueden requerir una copia de seguridad de la comunicaci&amp;oacute;n con el padre. Por ejemplo, podemos decidir incluir una funci&amp;oacute;n de accesibilidad para ampliar el texto de las publicaciones del blog, dejando el resto de la p&amp;aacute;gina en su tama&amp;ntilde;o predeterminado:</target>
        </trans-unit>
        <trans-unit id="b6a3f74af5652088551ae51dbeff194fa3bfa2e1" translate="yes" xml:space="preserve">
          <source>As with Vue&amp;rsquo;s transition components, the data backing state transitions can be updated in real time, which is especially useful for prototyping! Even using a simple SVG polygon, you can achieve many effects that would be difficult to conceive of until you&amp;rsquo;ve played with the variables a little.</source>
          <target state="translated">Al igual que con los componentes de transici&amp;oacute;n de Vue, las transiciones de estado de respaldo de datos se pueden actualizar en tiempo real, lo que es especialmente &amp;uacute;til para la creaci&amp;oacute;n de prototipos. Incluso usando un simple pol&amp;iacute;gono SVG, puedes lograr muchos efectos que ser&amp;iacute;an dif&amp;iacute;ciles de concebir hasta que hayas jugado un poco con las variables.</target>
        </trans-unit>
        <trans-unit id="d44e77060c27c4b30c454259c170d12f7db1f1bf" translate="yes" xml:space="preserve">
          <source>As with any project, there are rules to contributing. To ensure that we can help you or accept your pull request as quickly as possible, please read &lt;a href=&quot;https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md&quot;&gt;the contributing guide&lt;/a&gt;.</source>
          <target state="translated">Como con cualquier proyecto, existen reglas para contribuir. Para asegurarse de que podamos ayudarlo o aceptar su solicitud de extracci&amp;oacute;n lo m&amp;aacute;s r&amp;aacute;pido posible, lea &lt;a href=&quot;https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md&quot;&gt;la gu&amp;iacute;a de contribuci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4277c9ab681082594a6c686adbf5a2ea751b7cf3" translate="yes" xml:space="preserve">
          <source>As you can see, &lt;code&gt;v-model&lt;/code&gt;&amp;lsquo;s two-way binding doesn&amp;rsquo;t make sense here. Setting &lt;code&gt;str&lt;/code&gt; to another value in the iterator function will do nothing because it&amp;rsquo;s only a local variable in the function scope.</source>
          <target state="translated">Como puede ver, el enlace bidireccional de &lt;code&gt;v-model&lt;/code&gt; no tiene sentido aqu&amp;iacute;. Establecer &lt;code&gt;str&lt;/code&gt; en otro valor en la funci&amp;oacute;n de iterador no har&amp;aacute; nada porque es solo una variable local en el alcance de la funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="68e217a3fa103d696c6e74b9f87eab8bc71775c3" translate="yes" xml:space="preserve">
          <source>As you can see, the factory function receives a &lt;code&gt;resolve&lt;/code&gt; callback, which should be called when you have retrieved your component definition from the server. You can also call &lt;code&gt;reject(reason)&lt;/code&gt; to indicate the load has failed. The &lt;code&gt;setTimeout&lt;/code&gt; here is for demonstration; how to retrieve the component is up to you. One recommended approach is to use async components together with &lt;a href=&quot;https://webpack.js.org/guides/code-splitting/&quot;&gt;Webpack&amp;rsquo;s code-splitting feature&lt;/a&gt;:</source>
          <target state="translated">Como puede ver, la funci&amp;oacute;n de f&amp;aacute;brica recibe una devoluci&amp;oacute;n de llamada de &lt;code&gt;resolve&lt;/code&gt; , que debe llamarse cuando haya recuperado la definici&amp;oacute;n de su componente del servidor. Tambi&amp;eacute;n puede llamar al &lt;code&gt;reject(reason)&lt;/code&gt; para indicar que la carga ha fallado. El &lt;code&gt;setTimeout&lt;/code&gt; aqu&amp;iacute; es para demostraci&amp;oacute;n; c&amp;oacute;mo recuperar el componente depende de usted. Un enfoque recomendado es utilizar componentes as&amp;iacute;ncronos junto con la &lt;a href=&quot;https://webpack.js.org/guides/code-splitting/&quot;&gt;funci&amp;oacute;n de divisi&amp;oacute;n de c&amp;oacute;digo de Webpack&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="5b27b282e2f1a441686dd2390d9c4cdad9154bb2" translate="yes" xml:space="preserve">
          <source>As you might notice, it&amp;rsquo;s quite difficult to see which components are specific to the search. Now let&amp;rsquo;s rename the components according to the rule:</source>
          <target state="translated">Como puede notar, es bastante dif&amp;iacute;cil ver qu&amp;eacute; componentes son espec&amp;iacute;ficos de la b&amp;uacute;squeda. Ahora cambiemos el nombre de los componentes de acuerdo con la regla:</target>
        </trans-unit>
        <trans-unit id="2c7c8cb3256126ff26063df02fbf5c2d122e806e" translate="yes" xml:space="preserve">
          <source>As you&amp;rsquo;ll see above, we just add the slot where we want it to go &amp;ndash; and that&amp;rsquo;s it. We&amp;rsquo;re done!</source>
          <target state="translated">Como ver&amp;aacute; arriba, simplemente agregamos la ranura donde queremos que vaya, y eso es todo. &amp;iexcl;Terminamos!</target>
        </trans-unit>
        <trans-unit id="245bafa0153d44f38f0fe4e7da9cafd1e866bd32" translate="yes" xml:space="preserve">
          <source>Asserting Asynchronous Updates</source>
          <target state="translated">Afirmación de actualizaciones asincrónicas</target>
        </trans-unit>
        <trans-unit id="c20e3e21906793ff78c0157e3834f5147fd7b664" translate="yes" xml:space="preserve">
          <source>Assign a custom handler for runtime Vue warnings. Note this only works during development and is ignored in production.</source>
          <target state="translated">Asignar un manejador personalizado para las advertencias de Vue en tiempo de ejecución.Tenga en cuenta que esto sólo funciona durante el desarrollo y se ignora en la producción.</target>
        </trans-unit>
        <trans-unit id="b7dd9120ca91c830c9b578fa32779c54df5b7b8e" translate="yes" xml:space="preserve">
          <source>Assign a handler for uncaught errors during component render function and watchers. The handler gets called with the error and the Vue instance.</source>
          <target state="translated">Asignar un controlador para los errores no atrapados durante la función de renderizado de componentes y observadores.El manejador es llamado con el error y la instancia Vue.</target>
        </trans-unit>
        <trans-unit id="1f65677a6f8971fcdedcedabf6d1fc56a644736c" translate="yes" xml:space="preserve">
          <source>Async Components</source>
          <target state="translated">Componentes de Async</target>
        </trans-unit>
        <trans-unit id="582e6084935f72aceab9de2dba0ee5645c7f04b5" translate="yes" xml:space="preserve">
          <source>Async Update Queue</source>
          <target state="translated">Cola de actualización de Async</target>
        </trans-unit>
        <trans-unit id="aad87d6e8c00b32fa186c27488e91c838a266b3b" translate="yes" xml:space="preserve">
          <source>Async is now required for rendering performance.</source>
          <target state="translated">Ahora se requiere Async para la representación de la actuación.</target>
        </trans-unit>
        <trans-unit id="66da5414bc3e62fe79d78edfd1fc4676709e0d5b" translate="yes" xml:space="preserve">
          <source>At the core of Vue.js is a system that enables us to declaratively render data to the DOM using straightforward template syntax:</source>
          <target state="translated">En el núcleo del Vue.js se encuentra un sistema que nos permite presentar los datos de forma declarativa al DOM utilizando una sintaxis de plantilla sencilla:</target>
        </trans-unit>
        <trans-unit id="8d4a475bf74fd33040278d881bd3eae2ccb03e6c" translate="yes" xml:space="preserve">
          <source>At the very least, you&amp;rsquo;ll want to include the post&amp;rsquo;s content:</source>
          <target state="translated">Como m&amp;iacute;nimo, querr&amp;aacute;s incluir el contenido de la publicaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="fd25e6ff7eedb72d30f8f53d41ba4a9b33bf7f4a" translate="yes" xml:space="preserve">
          <source>At this moment, Weex is still in active development and is not as mature and battle-tested as React Native, but its development is driven by the production needs of the largest e-commerce business in the world, and the Vue team will also actively collaborate with the Weex team to ensure a smooth experience for Vue developers.</source>
          <target state="translated">En este momento,Weex sigue en desarrollo activo y no está tan maduro y probado como React Native,pero su desarrollo está impulsado por las necesidades de producción de la mayor empresa de comercio electrónico del mundo,y el equipo de Vue también colaborará activamente con el equipo de Weex para asegurar una experiencia sin problemas para los desarrolladores de Vue.</target>
        </trans-unit>
        <trans-unit id="5419a18af94811377577a489eb8cec03778592a5" translate="yes" xml:space="preserve">
          <source>At this point, the template is no longer simple and declarative. You have to look at it for a second before realizing that it displays &lt;code&gt;message&lt;/code&gt; in reverse. The problem is made worse when you want to include the reversed message in your template more than once.</source>
          <target state="translated">En este punto, la plantilla ya no es simple y declarativa. Tienes que mirarlo por un segundo antes de darte cuenta de que muestra el &lt;code&gt;message&lt;/code&gt; al rev&amp;eacute;s. El problema se agrava cuando desea incluir el mensaje invertido en su plantilla m&amp;aacute;s de una vez.</target>
        </trans-unit>
        <trans-unit id="282508b59fa6f1279fded58d092f544b220e4742" translate="yes" xml:space="preserve">
          <source>Attaches an event listener to the element. The event type is denoted by the argument. The expression can be a method name, an inline statement, or omitted if there are modifiers present.</source>
          <target state="translated">Adjunta un oyente de eventos al elemento.El tipo de evento es denotado por el argumento.La expresión puede ser un nombre de método,una declaración en línea,u omitida si hay modificadores presentes.</target>
        </trans-unit>
        <trans-unit id="a6652617f2c799eb11ee727b16c5646c48af6905" translate="yes" xml:space="preserve">
          <source>Attributes</source>
          <target state="translated">Attributes</target>
        </trans-unit>
        <trans-unit id="2d1447b83b4b4f812b2b940155f5db517c72245a" translate="yes" xml:space="preserve">
          <source>Attributes bound to a &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; element are called &lt;strong&gt;slot props&lt;/strong&gt;. Now, in the parent scope, we can use &lt;code&gt;v-slot&lt;/code&gt; with a value to define a name for the slot props we&amp;rsquo;ve been provided:</source>
          <target state="translated">Los atributos vinculados a un elemento &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; se denominan &lt;strong&gt;accesorios de ranura&lt;/strong&gt; . Ahora, en el &amp;aacute;mbito principal, podemos usar &lt;code&gt;v-slot&lt;/code&gt; con un valor para definir un nombre para los accesorios de ranura que nos han proporcionado:</target>
        </trans-unit>
        <trans-unit id="6784f96c452a0c7bc91364bfd3f389e53aeacd0d" translate="yes" xml:space="preserve">
          <source>Augmenting Types for Use with Plugins</source>
          <target state="translated">Tipos de aumento para el uso de plugins</target>
        </trans-unit>
        <trans-unit id="33d277414317dcbde6c548c863a000f272b2ba1b" translate="yes" xml:space="preserve">
          <source>Auto-prefixing</source>
          <target state="translated">Auto-prefixing</target>
        </trans-unit>
        <trans-unit id="e62f264454fa035298bd4525a87eab2e74959394" translate="yes" xml:space="preserve">
          <source>Automatic Global Registration of Base Components</source>
          <target state="translated">Registro mundial automático de los componentes básicos</target>
        </trans-unit>
        <trans-unit id="5fada8c65210fc29160102a7e4e88dbb24309041" translate="yes" xml:space="preserve">
          <source>Avoid &lt;code&gt;v-if&lt;/code&gt; with &lt;code&gt;v-for&lt;/code&gt;&lt;sup&gt;essential&lt;/sup&gt;</source>
          <target state="translated">Evite &lt;code&gt;v-if&lt;/code&gt; con &lt;code&gt;v-for&lt;/code&gt; &lt;sup&gt;essential&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="677c52df1b8d2a0a67237f2cc1537f7da03218f1" translate="yes" xml:space="preserve">
          <source>Avoid v-if with v-for</source>
          <target state="translated">Evitar v-si con v-por</target>
        </trans-unit>
        <trans-unit id="be7e10d1c5dd2ad77f6d5a617372a7bf013cb7bf" translate="yes" xml:space="preserve">
          <source>Bad</source>
          <target state="translated">Bad</target>
        </trans-unit>
        <trans-unit id="042fd1df7a4a13c0287f65bf8289380a720a781f" translate="yes" xml:space="preserve">
          <source>Base Example</source>
          <target state="translated">Ejemplo de base</target>
        </trans-unit>
        <trans-unit id="ed5305a1a3c7ea2038ed6b0922e96b3a5d1d42ab" translate="yes" xml:space="preserve">
          <source>Base component names</source>
          <target state="translated">Los nombres de los componentes básicos</target>
        </trans-unit>
        <trans-unit id="afb696d8130130ecabb5326a69e2eb71d47369d7" translate="yes" xml:space="preserve">
          <source>Base component names &lt;sup&gt;strongly recommended&lt;/sup&gt;</source>
          <target state="translated">Se &lt;sup&gt;recomiendan encarecidamente&lt;/sup&gt; nombres de componentes &lt;sup&gt;b&amp;aacute;sicos&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="dac6b24f78471a132bc9a7ec7774530351b54fb0" translate="yes" xml:space="preserve">
          <source>Basic Example</source>
          <target state="translated">Ejemplo básico</target>
        </trans-unit>
        <trans-unit id="b20cbc384159fd820ed034fd3615298ec09f5902" translate="yes" xml:space="preserve">
          <source>Basic Usage</source>
          <target state="translated">Uso básico</target>
        </trans-unit>
        <trans-unit id="5fcebeefad3cdbbf8733aa928160dec7dc90c1a1" translate="yes" xml:space="preserve">
          <source>Basics</source>
          <target state="translated">Basics</target>
        </trans-unit>
        <trans-unit id="1bc019e851603df6ba175b433b3fe2a1197430af" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;v-if&lt;/code&gt; is a directive, it has to be attached to a single element. But what if we want to toggle more than one element? In this case we can use &lt;code&gt;v-if&lt;/code&gt; on a &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; element, which serves as an invisible wrapper. The final rendered result will not include the &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">Dado que &lt;code&gt;v-if&lt;/code&gt; es una directiva, se debe adjuntar a un solo elemento. Pero, &amp;iquest;y si queremos alternar m&amp;aacute;s de un elemento? En este caso, podemos usar &lt;code&gt;v-if&lt;/code&gt; en un elemento &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; , que sirve como envoltorio invisible. El resultado final renderizado no incluir&amp;aacute; el elemento &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a372bf443e6b55ba392d12b1ef28e77d0fe75e24" translate="yes" xml:space="preserve">
          <source>Because of the circular nature of Vue&amp;rsquo;s declaration files, TypeScript may have difficulties inferring the types of certain methods. For this reason, you may need to annotate the return type on methods like &lt;code&gt;render&lt;/code&gt; and those in &lt;code&gt;computed&lt;/code&gt;.</source>
          <target state="translated">Debido a la naturaleza circular de los archivos de declaraci&amp;oacute;n de Vue, TypeScript puede tener dificultades para inferir los tipos de ciertos m&amp;eacute;todos. Por esta raz&amp;oacute;n, es posible que deba anotar el tipo de retorno en m&amp;eacute;todos como &lt;code&gt;render&lt;/code&gt; y aquellos en &lt;code&gt;computed&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8d354e1f0395c2c7bde80f3d0635afd447b1534e" translate="yes" xml:space="preserve">
          <source>Become a Community Leader</source>
          <target state="translated">Conviértase en un líder de la comunidad</target>
        </trans-unit>
        <trans-unit id="799bed431f75d62e2ee7199cced467223a9ef08b" translate="yes" xml:space="preserve">
          <source>Before we dive into render functions, it&amp;rsquo;s important to know a little about how browsers work. Take this HTML for example:</source>
          <target state="translated">Antes de sumergirnos en las funciones de renderizado, es importante saber un poco sobre c&amp;oacute;mo funcionan los navegadores. Tome este HTML por ejemplo:</target>
        </trans-unit>
        <trans-unit id="21fefc2aed895fea23a9fcaa8f08933e083c11cd" translate="yes" xml:space="preserve">
          <source>Being so similar in scope, we&amp;rsquo;ve put more time into fine-tuning this comparison than any other. We want to ensure not only technical accuracy, but also balance. We point out where React outshines Vue, for example in the richness of their ecosystem and abundance of their custom renderers.</source>
          <target state="translated">Al ser tan similar en alcance, hemos dedicado m&amp;aacute;s tiempo a ajustar esta comparaci&amp;oacute;n que cualquier otra. Queremos garantizar no solo la precisi&amp;oacute;n t&amp;eacute;cnica, sino tambi&amp;eacute;n el equilibrio. Se&amp;ntilde;alamos d&amp;oacute;nde React eclipsa a Vue, por ejemplo, en la riqueza de su ecosistema y la abundancia de sus renderizadores personalizados.</target>
        </trans-unit>
        <trans-unit id="bd6db4741fd073ae0a7d8447883e2b90ecb5347c" translate="yes" xml:space="preserve">
          <source>Below is a diagram for the instance lifecycle. You don&amp;rsquo;t need to fully understand everything going on right now, but as you learn and build more, it will be a useful reference.</source>
          <target state="translated">A continuaci&amp;oacute;n, se muestra un diagrama del ciclo de vida de la instancia. No es necesario que comprenda completamente todo lo que sucede en este momento, pero a medida que aprenda y construya m&amp;aacute;s, ser&amp;aacute; una referencia &amp;uacute;til.</target>
        </trans-unit>
        <trans-unit id="235d0b8767114f70c53f2b4e152b46e080f3734e" translate="yes" xml:space="preserve">
          <source>Below is an example of our &lt;code&gt;capitalize&lt;/code&gt; filter being used:</source>
          <target state="translated">A continuaci&amp;oacute;n se muestra un ejemplo del uso de nuestro filtro de &lt;code&gt;capitalize&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="118c169de4184a1a92bb4146dfa31b6b77e2b0aa" translate="yes" xml:space="preserve">
          <source>Better performance. Riot &lt;a href=&quot;http://riotjs.com/compare/#virtual-dom-vs-expressions-binding&quot;&gt;traverses a DOM tree&lt;/a&gt; rather than using a virtual DOM, so suffers from the same performance issues as AngularJS.</source>
          <target state="translated">Mejor presentaci&amp;oacute;n. Riot &lt;a href=&quot;http://riotjs.com/compare/#virtual-dom-vs-expressions-binding&quot;&gt;atraviesa un &amp;aacute;rbol DOM en&lt;/a&gt; lugar de utilizar un DOM virtual, por lo que sufre los mismos problemas de rendimiento que AngularJS.</target>
        </trans-unit>
        <trans-unit id="009817effc0ffc4d86c347b50db0aff9a2aea858" translate="yes" xml:space="preserve">
          <source>Beyond the &lt;code&gt;scoped&lt;/code&gt; attribute, using unique class names can help ensure that 3rd-party CSS does not apply to your own HTML. For example, many projects use the &lt;code&gt;button&lt;/code&gt;, &lt;code&gt;btn&lt;/code&gt;, or &lt;code&gt;icon&lt;/code&gt; class names, so even if not using a strategy such as BEM, adding an app-specific and/or component-specific prefix (e.g. &lt;code&gt;ButtonClose-icon&lt;/code&gt;) can provide some protection.</source>
          <target state="translated">M&amp;aacute;s all&amp;aacute; del atributo de &lt;code&gt;scoped&lt;/code&gt; , el uso de nombres de clase &amp;uacute;nicos puede ayudar a garantizar que CSS de terceros no se aplique a su propio HTML. Por ejemplo, muchos proyectos usan los nombres de clase de &lt;code&gt;button&lt;/code&gt; , &lt;code&gt;btn&lt;/code&gt; o &lt;code&gt;icon&lt;/code&gt; , por lo que incluso si no se usa una estrategia como BEM, agregar un prefijo espec&amp;iacute;fico de la aplicaci&amp;oacute;n y / o del componente (por ejemplo, &lt;code&gt;ButtonClose-icon&lt;/code&gt; ) puede brindar cierta protecci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="515a429282336e463c99dec820735d887010c8f4" translate="yes" xml:space="preserve">
          <source>Bind the &lt;code&gt;value&lt;/code&gt; attribute to a &lt;code&gt;value&lt;/code&gt; prop</source>
          <target state="translated">Enlazar el &lt;code&gt;value&lt;/code&gt; de atributo a un &lt;code&gt;value&lt;/code&gt; prop</target>
        </trans-unit>
        <trans-unit id="6580d0d46a0e41a64a6ba66b0193a84a7e1f821c" translate="yes" xml:space="preserve">
          <source>Binding HTML Classes</source>
          <target state="translated">Vinculando las clases de HTML</target>
        </trans-unit>
        <trans-unit id="6ee002dad41000728304505b221bb8c5fb147e3d" translate="yes" xml:space="preserve">
          <source>Binding Inline Styles</source>
          <target state="translated">Estilos en línea vinculantes</target>
        </trans-unit>
        <trans-unit id="f1ee008a1926025b19fdd56f5373aa3a7d9318ac" translate="yes" xml:space="preserve">
          <source>Binding Native Events to Components</source>
          <target state="translated">Vincular los eventos nativos a los componentes</target>
        </trans-unit>
        <trans-unit id="b76ff4906f33c2dd97ddd929b9662ba8cac6174c" translate="yes" xml:space="preserve">
          <source>Boolean</source>
          <target state="translated">Boolean</target>
        </trans-unit>
        <trans-unit id="f2e3f71b1d3e19f2e9daec1ac68138e7180590dc" translate="yes" xml:space="preserve">
          <source>Both React and Vue are exceptionally and similarly fast, so speed is unlikely to be a deciding factor in choosing between them. For specific metrics though, check out this &lt;a href=&quot;https://stefankrause.net/js-frameworks-benchmark8/table.html&quot;&gt;3rd party benchmark&lt;/a&gt;, which focuses on raw render/update performance with very simple component trees.</source>
          <target state="translated">Tanto React como Vue son excepcional y similarmente r&amp;aacute;pidos, por lo que es poco probable que la velocidad sea un factor decisivo para elegir entre ellos. Sin embargo, para obtener m&amp;eacute;tricas espec&amp;iacute;ficas, consulte este &lt;a href=&quot;https://stefankrause.net/js-frameworks-benchmark8/table.html&quot;&gt;punto de referencia de terceros&lt;/a&gt; , que se centra en el rendimiento de procesamiento / actualizaci&amp;oacute;n sin procesar con &amp;aacute;rboles de componentes muy simples.</target>
        </trans-unit>
        <trans-unit id="2e1f44731f0d8bd48449467011ad127d990bba49" translate="yes" xml:space="preserve">
          <source>Both Vuex 1.0 and 2.0:</source>
          <target state="translated">Tanto el Vuex 1.0 como el 2.0:</target>
        </trans-unit>
        <trans-unit id="8281ab3deb811a80b50de14c008ad41be7252410" translate="yes" xml:space="preserve">
          <source>Both frameworks are exceptionally fast, with very similar metrics on benchmarks. You can &lt;a href=&quot;https://stefankrause.net/js-frameworks-benchmark8/table.html&quot;&gt;browse specific metrics&lt;/a&gt; for a more granular comparison, but speed is unlikely to be a deciding factor.</source>
          <target state="translated">Ambos marcos son excepcionalmente r&amp;aacute;pidos, con m&amp;eacute;tricas muy similares en los puntos de referencia. Puede &lt;a href=&quot;https://stefankrause.net/js-frameworks-benchmark8/table.html&quot;&gt;examinar m&amp;eacute;tricas espec&amp;iacute;ficas&lt;/a&gt; para obtener una comparaci&amp;oacute;n m&amp;aacute;s detallada, pero es poco probable que la velocidad sea un factor decisivo.</target>
        </trans-unit>
        <trans-unit id="1f688a06e547b5c3a43787858bd62f64749948d7" translate="yes" xml:space="preserve">
          <source>Bower</source>
          <target state="translated">Bower</target>
        </trans-unit>
        <trans-unit id="b870bd9f96d89dded8ea0d87740c482adb729a24" translate="yes" xml:space="preserve">
          <source>Bringing Designs to Life</source>
          <target state="translated">Dar vida a los diseños</target>
        </trans-unit>
        <trans-unit id="ed81754147c265a661af47b5f96c56bae653c0d7" translate="yes" xml:space="preserve">
          <source>Browserify</source>
          <target state="translated">Browserify</target>
        </trans-unit>
        <trans-unit id="9e171a4486bb0f587cd37fe2753caa9f12125e40" translate="yes" xml:space="preserve">
          <source>Browserify + vueify</source>
          <target state="translated">Navegar+verificar</target>
        </trans-unit>
        <trans-unit id="34e1fd3d1854d4d8ca0be8b74bcfe2caf4bb9209" translate="yes" xml:space="preserve">
          <source>Built-In Components</source>
          <target state="translated">Componentes incorporados</target>
        </trans-unit>
        <trans-unit id="162a059b43b2eb2bd569ff7fb65fbf91817157e2" translate="yes" xml:space="preserve">
          <source>Built-In Directives</source>
          <target state="translated">Directivas incorporadas</target>
        </trans-unit>
        <trans-unit id="a8f47abf8ffa59d09613aa3f7f6e2688d3011aba" translate="yes" xml:space="preserve">
          <source>Built-In Text Filters &lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">Se &lt;sup&gt;eliminaron los&lt;/sup&gt; filtros de texto integrados&lt;sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9c4dc1b45e6084c850d989f2c78a6b12f0cec61a" translate="yes" xml:space="preserve">
          <source>Built-in Components - keep-alive</source>
          <target state="translated">Componentes incorporados-keep-alive</target>
        </trans-unit>
        <trans-unit id="9382d146fcef9840c5aeec093e3c39405d284d11" translate="yes" xml:space="preserve">
          <source>But if we provide content:</source>
          <target state="translated">Pero si proporcionamos contenido:</target>
        </trans-unit>
        <trans-unit id="6bc24e1b15b8172ffcabfcd993bddbbe5af96753" translate="yes" xml:space="preserve">
          <source>But in Webpack 3 and earlier, you&amp;rsquo;ll need to use &lt;a href=&quot;https://webpack.js.org/plugins/define-plugin/&quot;&gt;DefinePlugin&lt;/a&gt;:</source>
          <target state="translated">Pero en Webpack 3 y versiones anteriores, deber&amp;aacute; usar &lt;a href=&quot;https://webpack.js.org/plugins/define-plugin/&quot;&gt;DefinePlugin&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="a8ae153969b9942e56a9bac5d741bc625281e374" translate="yes" xml:space="preserve">
          <source>But sometimes we may want to bind the value to a dynamic property on the Vue instance. We can use &lt;code&gt;v-bind&lt;/code&gt; to achieve that. In addition, using &lt;code&gt;v-bind&lt;/code&gt; allows us to bind the input value to non-string values.</source>
          <target state="translated">Pero a veces es posible que deseemos vincular el valor a una propiedad din&amp;aacute;mica en la instancia de Vue. Podemos usar &lt;code&gt;v-bind&lt;/code&gt; para lograrlo. Adem&amp;aacute;s, el uso de &lt;code&gt;v-bind&lt;/code&gt; nos permite vincular el valor de entrada a valores que no son cadenas.</target>
        </trans-unit>
        <trans-unit id="25e176e9a97a3c4f462daaed936a731baf80a8b9" translate="yes" xml:space="preserve">
          <source>But they&amp;rsquo;ll &lt;strong&gt;never&lt;/strong&gt; contain global state (e.g. from a Vuex store).</source>
          <target state="translated">Pero &lt;strong&gt;nunca&lt;/strong&gt; contendr&amp;aacute;n un estado global (por ejemplo, de una tienda Vuex).</target>
        </trans-unit>
        <trans-unit id="0c16b65bff1266df40cbfea717a355fbbb3865b2" translate="yes" xml:space="preserve">
          <source>But this would render the same text for every todo, which is not super interesting. We should be able to pass data from the parent scope into child components. Let&amp;rsquo;s modify the component definition to make it accept a &lt;a href=&quot;guide/components#Props&quot;&gt;prop&lt;/a&gt;:</source>
          <target state="translated">Pero esto generar&amp;iacute;a el mismo texto para cada tarea, lo cual no es muy interesante. Deber&amp;iacute;amos poder pasar datos del &amp;aacute;mbito principal a los componentes secundarios. Modifiquemos la definici&amp;oacute;n del componente para que acepte un &lt;a href=&quot;guide/components#Props&quot;&gt;accesorio&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="4fb52dff7f27988a090ba79f9b505246472be393" translate="yes" xml:space="preserve">
          <source>By communicating with JavaScript transitions through data attributes, it&amp;rsquo;s also possible to stagger transitions in a list:</source>
          <target state="translated">Al comunicarse con las transiciones de JavaScript a trav&amp;eacute;s de los atributos de datos, tambi&amp;eacute;n es posible escalonar las transiciones en una lista:</target>
        </trans-unit>
        <trans-unit id="1ffc52d15241fcde204b3749994637baf6b9f1a2" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;v-model&lt;/code&gt; on a component uses &lt;code&gt;value&lt;/code&gt; as the prop and &lt;code&gt;input&lt;/code&gt; as the event, but some input types such as checkboxes and radio buttons may want to use the &lt;code&gt;value&lt;/code&gt; attribute for a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#Value&quot;&gt;different purpose&lt;/a&gt;. Using the &lt;code&gt;model&lt;/code&gt; option can avoid a conflict in such cases:</source>
          <target state="translated">De forma predeterminada, &lt;code&gt;v-model&lt;/code&gt; en un componente usa &lt;code&gt;value&lt;/code&gt; como prop y &lt;code&gt;input&lt;/code&gt; como evento, pero algunos tipos de input, como casillas de verificaci&amp;oacute;n y botones de radio, pueden querer usar el atributo &lt;code&gt;value&lt;/code&gt; para un &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#Value&quot;&gt;prop&amp;oacute;sito diferente&lt;/a&gt; . El uso de la opci&amp;oacute;n de &lt;code&gt;model&lt;/code&gt; o puede evitar un conflicto en tales casos:</target>
        </trans-unit>
        <trans-unit id="0ad90607d4c0404c9faa13f5fee7b87b35f56269" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;v-model&lt;/code&gt; syncs the input with the data after each &lt;code&gt;input&lt;/code&gt; event (with the exception of IME composition as &lt;a href=&quot;#vmodel-ime-tip&quot;&gt;stated above&lt;/a&gt;). You can add the &lt;code&gt;lazy&lt;/code&gt; modifier to instead sync after &lt;code&gt;change&lt;/code&gt; events:</source>
          <target state="translated">De forma predeterminada, &lt;code&gt;v-model&lt;/code&gt; sincroniza la entrada con los datos despu&amp;eacute;s de cada evento de &lt;code&gt;input&lt;/code&gt; (con la excepci&amp;oacute;n de la composici&amp;oacute;n de IME como se &lt;a href=&quot;#vmodel-ime-tip&quot;&gt;indic&amp;oacute; anteriormente&lt;/a&gt; ). Puede agregar el modificador &lt;code&gt;lazy&lt;/code&gt; para sincronizar despu&amp;eacute;s de los eventos de &lt;code&gt;change&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c148f99afa31c3b0b4175f568b49a103e6ad0ecc" translate="yes" xml:space="preserve">
          <source>By default, Vue updates the DOM as efficiently as possible. That means when switching between elements of the same type, it simply patches the existing element, rather than removing it and adding a new one in its place. This can have &lt;a href=&quot;https://jsfiddle.net/chrisvfritz/bh8fLeds/&quot;&gt;unintended consequences&lt;/a&gt; if these elements should not actually be considered the same.</source>
          <target state="translated">De forma predeterminada, Vue actualiza el DOM de la manera m&amp;aacute;s eficiente posible. Eso significa que al cambiar entre elementos del mismo tipo, simplemente parchea el elemento existente, en lugar de eliminarlo y agregar uno nuevo en su lugar. Esto puede tener &lt;a href=&quot;https://jsfiddle.net/chrisvfritz/bh8fLeds/&quot;&gt;consecuencias no deseadas&lt;/a&gt; si estos elementos no deben considerarse realmente iguales.</target>
        </trans-unit>
        <trans-unit id="a77e6be69803dd9706b337a72081315320a15961" translate="yes" xml:space="preserve">
          <source>By default, all errors are still sent to the global &lt;code&gt;config.errorHandler&lt;/code&gt; if it is defined, so that these errors can still be reported to an analytics service in a single place.</source>
          <target state="translated">De forma predeterminada, todos los errores se siguen enviando al &lt;code&gt;config.errorHandler&lt;/code&gt; global si est&amp;aacute; definido, de modo que estos errores se pueden informar a un servicio de an&amp;aacute;lisis en un solo lugar.</target>
        </trans-unit>
        <trans-unit id="83e8efbea67d6157fcddcb4edcfa1b49f5be94c6" translate="yes" xml:space="preserve">
          <source>By default, parent scope attribute bindings that are not recognized as props will &amp;ldquo;fallthrough&amp;rdquo; and be applied to the root element of the child component as normal HTML attributes. When authoring a component that wraps a target element or another component, this may not always be the desired behavior. By setting &lt;code&gt;inheritAttrs&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;, this default behavior can be disabled. The attributes are available via the &lt;code&gt;$attrs&lt;/code&gt; instance property (also new in 2.4) and can be explicitly bound to a non-root element using &lt;code&gt;v-bind&lt;/code&gt;.</source>
          <target state="translated">De forma predeterminada, los enlaces de atributo de alcance principal que no se reconocen como accesorios &quot;fallar&amp;aacute;n&quot; y se aplicar&amp;aacute;n al elemento ra&amp;iacute;z del componente secundario como atributos HTML normales. Al crear un componente que envuelve un elemento de destino u otro componente, es posible que este no siempre sea el comportamiento deseado. Al establecer &lt;code&gt;inheritAttrs&lt;/code&gt; en &lt;code&gt;false&lt;/code&gt; , este comportamiento predeterminado se puede deshabilitar. Los atributos est&amp;aacute;n disponibles a trav&amp;eacute;s de la propiedad de instancia &lt;code&gt;$attrs&lt;/code&gt; (tambi&amp;eacute;n nueva en 2.4) y se pueden vincular expl&amp;iacute;citamente a un elemento que no sea ra&amp;iacute;z mediante &lt;code&gt;v-bind&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cbd6959db2d24ce79d7dca446bb49d40906058ca" translate="yes" xml:space="preserve">
          <source>By default, this will use the transitions specified for entering and leaving. If you&amp;rsquo;d like however, you can also specify custom CSS classes:</source>
          <target state="translated">De forma predeterminada, utilizar&amp;aacute; las transiciones especificadas para entrar y salir. Sin embargo, si lo desea, tambi&amp;eacute;n puede especificar clases CSS personalizadas:</target>
        </trans-unit>
        <trans-unit id="524e3e94154f70bc5cd238efc984b56537e51616" translate="yes" xml:space="preserve">
          <source>By iterating over a computed property instead, like this:</source>
          <target state="translated">Realizando una iteración sobre una propiedad computarizada,como esta:</target>
        </trans-unit>
        <trans-unit id="ffde0f5ffc23d749b1907e603465a412357ed88f" translate="yes" xml:space="preserve">
          <source>By moving the &lt;code&gt;v-if&lt;/code&gt; to a container element, we&amp;rsquo;re no longer checking &lt;code&gt;shouldShowUsers&lt;/code&gt; for &lt;em&gt;every&lt;/em&gt; user in the list. Instead, we check it once and don&amp;rsquo;t even evaluate the &lt;code&gt;v-for&lt;/code&gt; if &lt;code&gt;shouldShowUsers&lt;/code&gt; is false.</source>
          <target state="translated">Al mover el &lt;code&gt;v-if&lt;/code&gt; a un elemento contenedor, ya no comprobamos &lt;code&gt;shouldShowUsers&lt;/code&gt; para &lt;em&gt;cada&lt;/em&gt; usuario de la lista. En cambio, lo comprobamos una vez y ni siquiera evaluamos el &lt;code&gt;v-for&lt;/code&gt; si &lt;code&gt;shouldShowUsers&lt;/code&gt; es falso.</target>
        </trans-unit>
        <trans-unit id="c5c485332147fd438327cdd4bf55f716394baf76" translate="yes" xml:space="preserve">
          <source>By now, your app should be fully migrated. If you&amp;rsquo;re still hungry for more though, you can read the rest of this page - or dive in to the new and improved guide from &lt;a href=&quot;../index&quot;&gt;the beginning&lt;/a&gt;. Many parts will be skimmable, since you&amp;rsquo;re already familiar with the core concepts.</source>
          <target state="translated">A estas alturas, su aplicaci&amp;oacute;n deber&amp;iacute;a estar completamente migrada. Sin embargo, si a&amp;uacute;n tiene hambre de m&amp;aacute;s, puede leer el resto de esta p&amp;aacute;gina o sumergirse en la gu&amp;iacute;a nueva y mejorada desde &lt;a href=&quot;../index&quot;&gt;el principio&lt;/a&gt; . Muchas partes se pueden escanear, ya que ya est&amp;aacute; familiarizado con los conceptos b&amp;aacute;sicos.</target>
        </trans-unit>
        <trans-unit id="8c4b0275ee1b88f92d43018837d550c5c16046c1" translate="yes" xml:space="preserve">
          <source>By passing &lt;code&gt;context.data&lt;/code&gt; as the second argument to &lt;code&gt;createElement&lt;/code&gt;, we are passing down any attributes or event listeners used on &lt;code&gt;my-functional-button&lt;/code&gt;. It&amp;rsquo;s so transparent, in fact, that events don&amp;rsquo;t even require the &lt;code&gt;.native&lt;/code&gt; modifier.</source>
          <target state="translated">Al pasar &lt;code&gt;context.data&lt;/code&gt; como segundo argumento para &lt;code&gt;createElement&lt;/code&gt; , estamos transmitiendo cualquier atributo o detector de eventos utilizado en &lt;code&gt;my-functional-button&lt;/code&gt; Function -button . Es tan transparente, de hecho, que los eventos ni siquiera requieren el modificador &lt;code&gt;.native&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="67b6c4b8addee6f0bec9b64fdc066f75fd594e81" translate="yes" xml:space="preserve">
          <source>CDN</source>
          <target state="translated">CDN</target>
        </trans-unit>
        <trans-unit id="700b401ca52b1bd3071dc838bf11be9cdb19fc5f" translate="yes" xml:space="preserve">
          <source>CLI</source>
          <target state="translated">CLI</target>
        </trans-unit>
        <trans-unit id="eb704231be479daeb04b503bb4d54f57efe5578f" translate="yes" xml:space="preserve">
          <source>CSP environments</source>
          <target state="translated">Entornos CSP</target>
        </trans-unit>
        <trans-unit id="9020d263f8a3f425dedb8420905b7b42c9734f4a" translate="yes" xml:space="preserve">
          <source>CSS Animations</source>
          <target state="translated">Animaciones CSS</target>
        </trans-unit>
        <trans-unit id="f266fe7a0113efe52607c4f4f3b4ebbbb3f47585" translate="yes" xml:space="preserve">
          <source>CSS Transitions</source>
          <target state="translated">Transiciones del CSS</target>
        </trans-unit>
        <trans-unit id="48d8f8e4d0c0e93f13e2c87ea6bb5cd7957207dc" translate="yes" xml:space="preserve">
          <source>CSS animations are applied in the same way as CSS transitions, the difference being that &lt;code&gt;v-enter&lt;/code&gt; is not removed immediately after the element is inserted, but on an &lt;code&gt;animationend&lt;/code&gt; event.</source>
          <target state="translated">Las animaciones CSS se aplican de la misma manera que las transiciones CSS, con la diferencia de que &lt;code&gt;v-enter&lt;/code&gt; no se elimina inmediatamente despu&amp;eacute;s de insertar el elemento, sino en un evento &lt;code&gt;animationend&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bbb794d199e71c2cd267a0ceec4bc830f0994805" translate="yes" xml:space="preserve">
          <source>CSS transition classes will be applied to inner elements and not to the group/container itself.</source>
          <target state="translated">Las clases de transición de CSS se aplicarán a los elementos internos y no al grupo/contenedor en sí.</target>
        </trans-unit>
        <trans-unit id="7d236fbcb9274aa5cc57d61418439c052a90749f" translate="yes" xml:space="preserve">
          <source>Caching invalidation of computed properties will be removed in future major versions of Vue. Replace any uncached computed properties with methods, which will have the same result.</source>
          <target state="translated">La invalidación de la memoria caché de las propiedades calculadas se eliminará en las futuras versiones principales de Vue.Reemplazar cualquier propiedad computarizada no almacenada con métodos que tendrán el mismo resultado.</target>
        </trans-unit>
        <trans-unit id="8985f48d62f9f073d646c6404b51e6fb553d8fe5" translate="yes" xml:space="preserve">
          <source>Called after a Vue instance has been destroyed. When this hook is called, all directives of the Vue instance have been unbound, all event listeners have been removed, and all child Vue instances have also been destroyed.</source>
          <target state="translated">Llamado después de que una instancia de Vue haya sido destruida.Cuando se llama a este gancho,todas las directivas de la instancia Vue han sido desatadas,todos los oyentes de eventos han sido eliminados,y todas las instancias Vue infantiles también han sido destruidas.</target>
        </trans-unit>
        <trans-unit id="3530cfac5196f790d3069acb16fe440211703006" translate="yes" xml:space="preserve">
          <source>Called after a data change causes the virtual DOM to be re-rendered and patched.</source>
          <target state="translated">Llamado después de un cambio de datos hace que el DOM virtual sea reproducido y parcheado.</target>
        </trans-unit>
        <trans-unit id="83312d8e8dc6f9113cf6c95f0e2c09dfcb5c36f5" translate="yes" xml:space="preserve">
          <source>Called after the instance has been mounted, where &lt;code&gt;el&lt;/code&gt; is replaced by the newly created &lt;code&gt;vm.$el&lt;/code&gt;. If the root instance is mounted to an in-document element, &lt;code&gt;vm.$el&lt;/code&gt; will also be in-document when &lt;code&gt;mounted&lt;/code&gt; is called.</source>
          <target state="translated">Se llama despu&amp;eacute;s de que se haya montado la instancia, donde &lt;code&gt;el&lt;/code&gt; se reemplaza por el &lt;code&gt;vm.$el&lt;/code&gt; reci&amp;eacute;n creado . Si la instancia ra&amp;iacute;z est&amp;aacute; montada en un elemento del documento, &lt;code&gt;vm.$el&lt;/code&gt; tambi&amp;eacute;n estar&amp;aacute; en el documento cuando se llame al &lt;code&gt;mounted&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8bad46ae4298e45721b7951c1b6f0d32995c3e16" translate="yes" xml:space="preserve">
          <source>Called right before a Vue instance is destroyed. At this stage the instance is still fully functional.</source>
          <target state="translated">Llamado justo antes de que se destruya una instancia de Vue.En esta etapa,la instancia todavía es completamente funcional.</target>
        </trans-unit>
        <trans-unit id="85ce8dc6482495b2e5f1c136e19210920f78ae5e" translate="yes" xml:space="preserve">
          <source>Called right before the mounting begins: the &lt;code&gt;render&lt;/code&gt; function is about to be called for the first time.</source>
          <target state="translated">Llamada justo antes de que comience el montaje: la funci&amp;oacute;n de &lt;code&gt;render&lt;/code&gt; est&amp;aacute; a punto de ser llamada por primera vez.</target>
        </trans-unit>
        <trans-unit id="9fc1b25df593503e17062f1c3e2653b22c66f3a2" translate="yes" xml:space="preserve">
          <source>Called synchronously after the instance is created. At this stage, the instance has finished processing the options which means the following have been set up: data observation, computed properties, methods, watch/event callbacks. However, the mounting phase has not been started, and the &lt;code&gt;$el&lt;/code&gt; property will not be available yet.</source>
          <target state="translated">Se llama sincr&amp;oacute;nicamente despu&amp;eacute;s de que se crea la instancia. En esta etapa, la instancia ha terminado de procesar las opciones, lo que significa que se ha configurado lo siguiente: observaci&amp;oacute;n de datos, propiedades calculadas, m&amp;eacute;todos, devoluciones de llamada de reloj / evento. Sin embargo, la fase de montaje no se ha iniciado y la propiedad &lt;code&gt;$el&lt;/code&gt; a&amp;uacute;n no estar&amp;aacute; disponible.</target>
        </trans-unit>
        <trans-unit id="feed33b8752c111f08079dce1a2159650ebe5342" translate="yes" xml:space="preserve">
          <source>Called synchronously immediately after the instance has been initialized, before data observation and event/watcher setup.</source>
          <target state="translated">Llamado sincrónicamente inmediatamente después de que la instancia ha sido inicializada,antes de la observación de los datos y la configuración del evento/observador.</target>
        </trans-unit>
        <trans-unit id="19ba77af716508606cffcc73e06106d60b7aff0b" translate="yes" xml:space="preserve">
          <source>Called when a kept-alive component is activated.</source>
          <target state="translated">Se llama así cuando se activa un componente de mantenimiento de la vida.</target>
        </trans-unit>
        <trans-unit id="03356ab312d39995a07fe8884dd2e46052f7f905" translate="yes" xml:space="preserve">
          <source>Called when a kept-alive component is deactivated.</source>
          <target state="translated">Se llama así cuando se desactiva un componente de mantenimiento de vida.</target>
        </trans-unit>
        <trans-unit id="22a22dd33b29826fd113758eeb92c36b05d2429c" translate="yes" xml:space="preserve">
          <source>Called when an error from any descendent component is captured. The hook receives three arguments: the error, the component instance that triggered the error, and a string containing information on where the error was captured. The hook can return &lt;code&gt;false&lt;/code&gt; to stop the error from propagating further.</source>
          <target state="translated">Se llama cuando se captura un error de cualquier componente descendiente. El gancho recibe tres argumentos: el error, la instancia del componente que desencaden&amp;oacute; el error y una cadena que contiene informaci&amp;oacute;n sobre d&amp;oacute;nde se captur&amp;oacute; el error. El gancho puede devolver &lt;code&gt;false&lt;/code&gt; para evitar que el error se propague m&amp;aacute;s.</target>
        </trans-unit>
        <trans-unit id="33743d1acc9255573c610e6cc615ee541354bead" translate="yes" xml:space="preserve">
          <source>Called when data changes, before the DOM is patched. This is a good place to access the existing DOM before an update, e.g. to remove manually added event listeners.</source>
          <target state="translated">Llamado cuando los datos cambian,antes de que el DOM sea parcheado.Es un buen lugar para acceder al DOM existente antes de una actualización,por ejemplo para eliminar los oyentes de eventos añadidos manualmente.</target>
        </trans-unit>
        <trans-unit id="8f1335b59b2aae3343d1240b464bee8030a93df4" translate="yes" xml:space="preserve">
          <source>Cases like this no longer work:</source>
          <target state="translated">Casos como este ya no funcionan:</target>
        </trans-unit>
        <trans-unit id="47ba6a256935c5ee569450f66c777bc4a457173d" translate="yes" xml:space="preserve">
          <source>Causes a component to be stateless (no &lt;code&gt;data&lt;/code&gt;) and instanceless (no &lt;code&gt;this&lt;/code&gt; context). They are only a &lt;code&gt;render&lt;/code&gt; function that returns virtual nodes making them much cheaper to render.</source>
          <target state="translated">Hace que un componente sea sin estado (sin &lt;code&gt;data&lt;/code&gt; ) y sin instancia (sin &lt;code&gt;this&lt;/code&gt; contexto). Son solo una funci&amp;oacute;n de &lt;code&gt;render&lt;/code&gt; izado que devuelve nodos virtuales, lo que los hace mucho m&amp;aacute;s baratos de renderizar.</target>
        </trans-unit>
        <trans-unit id="bcaa33a7ae44bd5042c37a9cdbea7f843b1cf7c8" translate="yes" xml:space="preserve">
          <source>Caveats</source>
          <target state="translated">Caveats</target>
        </trans-unit>
        <trans-unit id="128bbe4c1a2eec75b3a48d52a04dc381d50f549c" translate="yes" xml:space="preserve">
          <source>Change Detection Caveats</source>
          <target state="translated">Advertencias sobre la detección de cambios</target>
        </trans-unit>
        <trans-unit id="e72c9cb74aa03a1204d264e75dd17b9f2ce6bddb" translate="yes" xml:space="preserve">
          <source>Change the plain text interpolation delimiters.</source>
          <target state="translated">Cambiar los delimitadores de interpolación de texto plano.</target>
        </trans-unit>
        <trans-unit id="2406ae964529e03a8ff9e23d92e1842c1977cd4c" translate="yes" xml:space="preserve">
          <source>Cheap Static Components with &lt;code&gt;v-once&lt;/code&gt;</source>
          <target state="translated">Componentes est&amp;aacute;ticos econ&amp;oacute;micos con &lt;code&gt;v-once&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="55780f6f22cfb5a725f801fb55d3e7c32385ae95" translate="yes" xml:space="preserve">
          <source>Check it out for yourself by entering some text in the input, then pressing the toggle button:</source>
          <target state="translated">Compruébelo usted mismo introduciendo algún texto en la entrada,y luego pulsando el botón de cambio:</target>
        </trans-unit>
        <trans-unit id="3c33724c45fb8e747d255d9b041a54c4aa78fe4e" translate="yes" xml:space="preserve">
          <source>Check out more details on &lt;code&gt;&amp;lt;keep-alive&amp;gt;&lt;/code&gt; in the &lt;a href=&quot;../api/index#keep-alive&quot;&gt;API reference&lt;/a&gt;.</source>
          <target state="translated">Consulte m&amp;aacute;s detalles sobre &lt;code&gt;&amp;lt;keep-alive&amp;gt;&lt;/code&gt; en la &lt;a href=&quot;../api/index#keep-alive&quot;&gt;referencia de API&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f531b7f4e1cce7c6b104a7b3cf21fe76b655e01f" translate="yes" xml:space="preserve">
          <source>Check out the result below:</source>
          <target state="translated">Mira el resultado a continuación:</target>
        </trans-unit>
        <trans-unit id="1d66c3d0758e71b315e012814dc35df62cfab9d2" translate="yes" xml:space="preserve">
          <source>Checkbox</source>
          <target state="translated">Checkbox</target>
        </trans-unit>
        <trans-unit id="a8729bc4793abbf031b32f50c70e97b14a84f1c2" translate="yes" xml:space="preserve">
          <source>Checkout &lt;a href=&quot;https://github.com/vuejs/awesome-vue#components--libraries&quot;&gt;awesome-vue&lt;/a&gt; for a huge collection of community-contributed plugins and libraries.</source>
          <target state="translated">Consulte &lt;a href=&quot;https://github.com/vuejs/awesome-vue#components--libraries&quot;&gt;awesome-vue&lt;/a&gt; para obtener una gran colecci&amp;oacute;n de complementos y bibliotecas contribuidos por la comunidad.</target>
        </trans-unit>
        <trans-unit id="3f332ccc08e1b0498df223620c8d4cf1fb1be840" translate="yes" xml:space="preserve">
          <source>Child Component Refs</source>
          <target state="translated">Refs.de componentes para niños</target>
        </trans-unit>
        <trans-unit id="4b102a4abe624392b6fec86da9cebfeccf82f9d1" translate="yes" xml:space="preserve">
          <source>Children of the same common parent must have &lt;strong&gt;unique keys&lt;/strong&gt;. Duplicate keys will cause render errors.</source>
          <target state="translated">Los hijos del mismo padre com&amp;uacute;n deben tener &lt;strong&gt;claves &amp;uacute;nicas&lt;/strong&gt; . Las claves duplicadas causar&amp;aacute;n errores de renderizado.</target>
        </trans-unit>
        <trans-unit id="26d10419c85d39f36202cd562489c0cca977e3fc" translate="yes" xml:space="preserve">
          <source>Circular References</source>
          <target state="translated">Referencias de la circular</target>
        </trans-unit>
        <trans-unit id="c024d09d54f06a3a36aeb2331ad06e01744fb502" translate="yes" xml:space="preserve">
          <source>Circular References Between Components</source>
          <target state="translated">Referencias circulares entre los componentes</target>
        </trans-unit>
        <trans-unit id="dca0daa7ecaa93a4cfed75a4c1810768b7e08768" translate="yes" xml:space="preserve">
          <source>Class and Style Bindings</source>
          <target state="translated">Encuadernaciones de clase y estilo</target>
        </trans-unit>
        <trans-unit id="9a74b2e08183e9c12dbab6f2ce8267f763f44cf6" translate="yes" xml:space="preserve">
          <source>Class-Style Vue Components</source>
          <target state="translated">Componentes de estilo de clase</target>
        </trans-unit>
        <trans-unit id="264398069882e7753347718021d0c9c51b7ce8fc" translate="yes" xml:space="preserve">
          <source>Code of Conduct</source>
          <target state="translated">Código de Conducta</target>
        </trans-unit>
        <trans-unit id="15cd7581d0836866a847df9eba4b6be6631a6fb2" translate="yes" xml:space="preserve">
          <source>Coffee &lt;em&gt;with&lt;/em&gt; milk</source>
          <target state="translated">Caf&amp;eacute; &lt;em&gt;con&lt;/em&gt; leche</target>
        </trans-unit>
        <trans-unit id="c974ead90c104908ea0a8c2bb04898917e9588c6" translate="yes" xml:space="preserve">
          <source>Combined with the HTML5 History API, you can build a very basic but fully-functional client-side router. To see that in practice, check out &lt;a href=&quot;https://github.com/chrisvfritz/vue-2.0-simple-routing-example&quot;&gt;this example app&lt;/a&gt;.</source>
          <target state="translated">Combinado con la API de historial de HTML5, puede construir un enrutador del lado del cliente muy b&amp;aacute;sico pero completamente funcional. Para verlo en la pr&amp;aacute;ctica, consulte &lt;a href=&quot;https://github.com/chrisvfritz/vue-2.0-simple-routing-example&quot;&gt;esta aplicaci&amp;oacute;n de ejemplo&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="377dd01e05316c6519d98a0022d6976f8e76be87" translate="yes" xml:space="preserve">
          <source>CommonJS</source>
          <target state="translated">CommonJS</target>
        </trans-unit>
        <trans-unit id="a6efa3f8b6925bf806e313da9f1695177c2a8032" translate="yes" xml:space="preserve">
          <source>CommonJS and ES Module builds also preserve raw checks for &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; to determine the mode they should run in. You should use appropriate bundler configurations to replace these environment variables in order to control which mode Vue will run in. Replacing &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; with string literals also allows minifiers like UglifyJS to completely drop the development-only code blocks, reducing final file size.</source>
          <target state="translated">Las compilaciones de CommonJS y ES Module tambi&amp;eacute;n conservan comprobaciones sin procesar para &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; para determinar el modo en el que deben ejecutarse. Debe usar las configuraciones de empaquetado adecuadas para reemplazar estas variables de entorno a fin de controlar en qu&amp;eacute; modo se ejecutar&amp;aacute; Vue. Reemplazo de &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; con cadenas literales tambi&amp;eacute;n permite que los minificadores como UglifyJS eliminen por completo los bloques de c&amp;oacute;digo de solo desarrollo, reduciendo el tama&amp;ntilde;o del archivo final.</target>
        </trans-unit>
        <trans-unit id="d99e960f2123bbfd6a9677c2fb76958c2fd6c3b7" translate="yes" xml:space="preserve">
          <source>CommonJS and ES Module builds are intended for bundlers, therefore we don&amp;rsquo;t provide minified versions for them. You will be responsible for minifying the final bundle yourself.</source>
          <target state="translated">Las compilaciones de CommonJS y ES Module est&amp;aacute;n destinadas a agrupadores, por lo que no proporcionamos versiones minificadas para ellos. Ser&amp;aacute;s responsable de minificar el paquete final t&amp;uacute; mismo.</target>
        </trans-unit>
        <trans-unit id="ea8787d5b12c9aec27fd3469864538cd711d9cd2" translate="yes" xml:space="preserve">
          <source>CommonJS modules</source>
          <target state="translated">Los módulos de CommonJS</target>
        </trans-unit>
        <trans-unit id="7f6b8eeaf74802fbeaa7657791100a5b37f51bfb" translate="yes" xml:space="preserve">
          <source>Comparison with Other Frameworks</source>
          <target state="translated">Comparación con otros marcos</target>
        </trans-unit>
        <trans-unit id="5d57c5330d10b55140b0ca441a4e01cd9cdaa363" translate="yes" xml:space="preserve">
          <source>Compatibility Note</source>
          <target state="translated">Nota de compatibilidad</target>
        </trans-unit>
        <trans-unit id="077aef20ba3929d7790595b2e4f8807f31cf16a3" translate="yes" xml:space="preserve">
          <source>Compilation Scope</source>
          <target state="translated">Alcance de la compilación</target>
        </trans-unit>
        <trans-unit id="8b872f9c0b449f8445c95b2c8e455da91a06a8ed" translate="yes" xml:space="preserve">
          <source>Compiles a template string into a render function. &lt;strong&gt;Only available in the full build.&lt;/strong&gt;</source>
          <target state="translated">Compila una cadena de plantilla en una funci&amp;oacute;n de renderizado. &lt;strong&gt;Solo disponible en la versi&amp;oacute;n completa.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="33f10f0dbd2f59e5fcb0c550db57268475dcd088" translate="yes" xml:space="preserve">
          <source>Complete Example</source>
          <target state="translated">Ejemplo completo</target>
        </trans-unit>
        <trans-unit id="6de04754eaf2ce0a0b86e33e3cf6b7710d77fb59" translate="yes" xml:space="preserve">
          <source>Complete syntax highlighting</source>
          <target state="translated">Resaltado de la sintaxis completa</target>
        </trans-unit>
        <trans-unit id="558f46627cddb51db9b48cf5dcc7c099216cf9b4" translate="yes" xml:space="preserve">
          <source>Completely destroy a vm. Clean up its connections with other existing vms, unbind all its directives, turn off all event listeners.</source>
          <target state="translated">Destruir completamente a un vm.Limpiar sus conexiones con otros vms existentes,desatar todas sus directivas,apagar todos los oyentes de eventos.</target>
        </trans-unit>
        <trans-unit id="60b812cb2013aa4e729edf7ad740fb109d1d148d" translate="yes" xml:space="preserve">
          <source>Complex expressions in your templates make them less declarative. We should strive to describe &lt;em&gt;what&lt;/em&gt; should appear, not &lt;em&gt;how&lt;/em&gt; we&amp;rsquo;re computing that value. Computed properties and methods also allow the code to be reused.</source>
          <target state="translated">Las expresiones complejas en sus plantillas las hacen menos declarativas. Debemos esforzarnos por describir &lt;em&gt;lo que&lt;/em&gt; deber&amp;iacute;a aparecer, no &lt;em&gt;c&amp;oacute;mo&lt;/em&gt; estamos calculando ese valor. Las propiedades y m&amp;eacute;todos calculados tambi&amp;eacute;n permiten reutilizar el c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="f564777ac40c723997c5eed12787c64f393c6531" translate="yes" xml:space="preserve">
          <source>Complexity</source>
          <target state="translated">Complexity</target>
        </trans-unit>
        <trans-unit id="a4cfb70bd503715674d13134e96b7c51983b3fec" translate="yes" xml:space="preserve">
          <source>Component Names</source>
          <target state="translated">Nombres de los componentes</target>
        </trans-unit>
        <trans-unit id="2299d18631ea2d15a7f23fd390e4ec138046f219" translate="yes" xml:space="preserve">
          <source>Component Registration</source>
          <target state="translated">Registro de componentes</target>
        </trans-unit>
        <trans-unit id="76dbbe8a930e0a69d5d347fb2b8857c7f5d041c2" translate="yes" xml:space="preserve">
          <source>Component data</source>
          <target state="translated">Datos de los componentes</target>
        </trans-unit>
        <trans-unit id="07fa6f82748552fa6959798fe84402715f519155" translate="yes" xml:space="preserve">
          <source>Component data &lt;sup&gt;essential&lt;/sup&gt;</source>
          <target state="translated">Datos de componentes &lt;sup&gt;esenciales&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="a9005720e38400bff72f424ff551489a82d1f4c9" translate="yes" xml:space="preserve">
          <source>Component files</source>
          <target state="translated">Archivos de componentes</target>
        </trans-unit>
        <trans-unit id="c206757423c2c2602ec849d9038c631cc34cd0b7" translate="yes" xml:space="preserve">
          <source>Component files &lt;sup&gt;strongly recommended&lt;/sup&gt;</source>
          <target state="translated">Se &lt;sup&gt;recomiendan encarecidamente&lt;/sup&gt; archivos de componentes&lt;sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="05782a5202992289472cb0adc5836d14fe8b6fa5" translate="yes" xml:space="preserve">
          <source>Component name casing in JS/JSX</source>
          <target state="translated">La carcasa del nombre del componente en JS/JSX</target>
        </trans-unit>
        <trans-unit id="8d58e990dc1ea08678461d19736c9b83a1f066ef" translate="yes" xml:space="preserve">
          <source>Component name casing in JS/JSX &lt;sup&gt;strongly recommended&lt;/sup&gt;</source>
          <target state="translated">Se &lt;sup&gt;recomienda encarecidamente&lt;/sup&gt; utilizar may&amp;uacute;sculas y min&amp;uacute;sculas en JS / JSX&lt;sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="f05bdbf09514c1b53e40160337200dfc490f992d" translate="yes" xml:space="preserve">
          <source>Component name casing in templates</source>
          <target state="translated">La carcasa del nombre del componente en las plantillas</target>
        </trans-unit>
        <trans-unit id="1e18a489bfacb69f08dfc8d90630a5d062c2d2f7" translate="yes" xml:space="preserve">
          <source>Component name casing in templates &lt;sup&gt;strongly recommended&lt;/sup&gt;</source>
          <target state="translated">Se &lt;sup&gt;recomienda encarecidamente&lt;/sup&gt; utilizar may&amp;uacute;sculas y min&amp;uacute;sculas en las plantillas&lt;sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="629cc2db9c759e3cc55d230b3df6ceeaea9a0092" translate="yes" xml:space="preserve">
          <source>Component root nodes</source>
          <target state="translated">Nodos de la raíz del componente</target>
        </trans-unit>
        <trans-unit id="a123d7f78d70c0b6001f7359d734ea29890190d1" translate="yes" xml:space="preserve">
          <source>Component style scoping</source>
          <target state="translated">El alcance del estilo de los componentes</target>
        </trans-unit>
        <trans-unit id="567ca8f77c3219302641a1a6b3cbf6b6345370dd" translate="yes" xml:space="preserve">
          <source>Component style scoping &lt;sup&gt;essential&lt;/sup&gt;</source>
          <target state="translated">El alcance del estilo de componente es &lt;sup&gt;esencial&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="7bbaeb30b003b383abf66a05fbb65d25d9b1335d" translate="yes" xml:space="preserve">
          <source>Component-Scoped CSS</source>
          <target state="translated">Componente-CSV copiado</target>
        </trans-unit>
        <trans-unit id="6bd90fa3ceed4851dbf609ff767a5e21884509aa" translate="yes" xml:space="preserve">
          <source>Component-scoped CSS</source>
          <target state="translated">Componente-copiado CSS</target>
        </trans-unit>
        <trans-unit id="84cc863bd6ebde8b18b087a1a41708311c44c9c8" translate="yes" xml:space="preserve">
          <source>Component/instance options order</source>
          <target state="translated">Orden de opciones de componentes/instancias</target>
        </trans-unit>
        <trans-unit id="f99f2514ac8da860e451570040ac9cb079725a4d" translate="yes" xml:space="preserve">
          <source>Component/instance options order &lt;sup&gt;recommended&lt;/sup&gt;</source>
          <target state="translated">Se &lt;sup&gt;recomienda el&lt;/sup&gt; orden de las opciones de componente / instancia&lt;sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="630acc980e704e87c41531a9bf0ab1c959379bd2" translate="yes" xml:space="preserve">
          <source>Components - &lt;code&gt;.sync&lt;/code&gt; Modifier</source>
          <target state="translated">Componentes - Modificador &lt;code&gt;.sync&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d697039b56319687b789c001bdf552b6a593e277" translate="yes" xml:space="preserve">
          <source>Components - Cheap Static Components with &lt;code&gt;v-once&lt;/code&gt;</source>
          <target state="translated">Componentes: componentes est&amp;aacute;ticos econ&amp;oacute;micos con &lt;code&gt;v-once&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d625a365fe460c7ab04d19527319878856813a39" translate="yes" xml:space="preserve">
          <source>Components - Custom Events</source>
          <target state="translated">Componentes-Eventos personalizados</target>
        </trans-unit>
        <trans-unit id="69cc86f0e375b71a83275042d25019bde0a799a9" translate="yes" xml:space="preserve">
          <source>Components - Form Input Components using Custom Events</source>
          <target state="translated">Componentes-Formar componentes de entrada usando eventos personalizados</target>
        </trans-unit>
        <trans-unit id="ed808ded769fe1e869b0b0eb75743c5cb99a86fd" translate="yes" xml:space="preserve">
          <source>Components - Props</source>
          <target state="translated">Componentes-Atrezzo</target>
        </trans-unit>
        <trans-unit id="10badeeb0b180e6f4fa46f1b15d0aa67f6c92fd6" translate="yes" xml:space="preserve">
          <source>Components - Slots</source>
          <target state="translated">Componentes-Ranuras</target>
        </trans-unit>
        <trans-unit id="6a8337b74e1a1b3b9d6b1d47003c0d53d7467618" translate="yes" xml:space="preserve">
          <source>Components Basics</source>
          <target state="translated">Componentes básicos</target>
        </trans-unit>
        <trans-unit id="51a0fec9dace472c37dae5a959b04b6a0009286c" translate="yes" xml:space="preserve">
          <source>Components are reusable Vue instances with a name: in this case, &lt;code&gt;&amp;lt;button-counter&amp;gt;&lt;/code&gt;. We can use this component as a custom element inside a root Vue instance created with &lt;code&gt;new Vue&lt;/code&gt;:</source>
          <target state="translated">Los componentes son instancias de Vue reutilizables con un nombre: en este caso, &lt;code&gt;&amp;lt;button-counter&amp;gt;&lt;/code&gt; . Podemos usar este componente como un elemento personalizado dentro de una instancia ra&amp;iacute;z de Vue creada con el &lt;code&gt;new Vue&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fe22238a07bd729b9368a1ce01069d211a98d786" translate="yes" xml:space="preserve">
          <source>Components can be reused as many times as you want:</source>
          <target state="translated">Los componentes pueden ser reutilizados tantas veces como se quiera:</target>
        </trans-unit>
        <trans-unit id="5b8c94b116d43a888484c937f13d55f1ba3fd31e" translate="yes" xml:space="preserve">
          <source>Components can recursively invoke themselves in their own template. However, they can only do so with the &lt;code&gt;name&lt;/code&gt; option:</source>
          <target state="translated">Los componentes pueden invocarse a s&amp;iacute; mismos de forma recursiva en su propia plantilla. Sin embargo, solo pueden hacerlo con la opci&amp;oacute;n de &lt;code&gt;name&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="751b8b7146d51c067716448a26cd434906e1c55f" translate="yes" xml:space="preserve">
          <source>Components can specify requirements for its props, such as the types you&amp;rsquo;ve already seen. If a requirement isn&amp;rsquo;t met, Vue will warn you in the browser&amp;rsquo;s JavaScript console. This is especially useful when developing a component that&amp;rsquo;s intended to be used by others.</source>
          <target state="translated">Los componentes pueden especificar requisitos para sus accesorios, como los tipos que ya ha visto. Si no se cumple un requisito, Vue le advertir&amp;aacute; en la consola JavaScript del navegador. Esto es especialmente &amp;uacute;til cuando se desarrolla un componente que est&amp;aacute; destinado a ser utilizado por otros.</target>
        </trans-unit>
        <trans-unit id="2fee40168c1a374ccf26caec6fd7fe0c040bc31c" translate="yes" xml:space="preserve">
          <source>Components now always replace the element they&amp;rsquo;re bound to. To simulate the behavior of &lt;code&gt;replace: false&lt;/code&gt;, you can wrap your root component with an element similar to the one you&amp;rsquo;re replacing. For example:</source>
          <target state="translated">Los componentes ahora siempre reemplazan el elemento al que est&amp;aacute;n vinculados. Para simular el comportamiento de &lt;code&gt;replace: false&lt;/code&gt; , puede envolver su componente ra&amp;iacute;z con un elemento similar al que est&amp;aacute; reemplazando. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="c2e6a0f1ecf6c973ca47ca7186c80185b6b96f21" translate="yes" xml:space="preserve">
          <source>Components that self-close communicate that they not only have no content, but are &lt;strong&gt;meant&lt;/strong&gt; to have no content. It&amp;rsquo;s the difference between a blank page in a book and one labeled &amp;ldquo;This page intentionally left blank.&amp;rdquo; Your code is also cleaner without the unnecessary closing tag.</source>
          <target state="translated">Los componentes que se cierran autom&amp;aacute;ticamente comunican que no solo no tienen contenido, sino que est&amp;aacute;n &lt;strong&gt;destinados&lt;/strong&gt; a no tener contenido. Es la diferencia entre una p&amp;aacute;gina en blanco en un libro y una etiquetada como &quot;Esta p&amp;aacute;gina se dej&amp;oacute; en blanco intencionalmente&quot;. Su c&amp;oacute;digo tambi&amp;eacute;n es m&amp;aacute;s limpio sin la etiqueta de cierre innecesaria.</target>
        </trans-unit>
        <trans-unit id="660d87cb56480f4244feeffc6da7619b7edbffc0" translate="yes" xml:space="preserve">
          <source>Composing with Components</source>
          <target state="translated">Composición con componentes</target>
        </trans-unit>
        <trans-unit id="bc04ee3668d9ea0faa68ca105b627ca813d5edea" translate="yes" xml:space="preserve">
          <source>Computed Caching vs Methods</source>
          <target state="translated">Caching Computarizado vs Métodos</target>
        </trans-unit>
        <trans-unit id="70bd86bd3f0d5ae194697eb2880e50cca80f426b" translate="yes" xml:space="preserve">
          <source>Computed Properties</source>
          <target state="translated">Propiedades calculadas</target>
        </trans-unit>
        <trans-unit id="8e13d4ac07b657d278dceef0e18d67d34114bf52" translate="yes" xml:space="preserve">
          <source>Computed Properties and Watchers</source>
          <target state="translated">Propiedades computarizadas y observadores</target>
        </trans-unit>
        <trans-unit id="c1a9203aa3517f44a8e435470ea368b59319cf82" translate="yes" xml:space="preserve">
          <source>Computed Setter</source>
          <target state="translated">Setter computarizado</target>
        </trans-unit>
        <trans-unit id="38e65524c92dd7a22334161d17dd8cd47bc733c7" translate="yes" xml:space="preserve">
          <source>Computed properties</source>
          <target state="translated">Propiedades calculadas</target>
        </trans-unit>
        <trans-unit id="5727316a77d42c90873eecef08909f47ad335bba" translate="yes" xml:space="preserve">
          <source>Computed properties are by default getter-only, but you can also provide a setter when you need it:</source>
          <target state="translated">Las propiedades calculadas son,por defecto,sólo para getter,pero también puedes proporcionar un setter cuando lo necesites:</target>
        </trans-unit>
        <trans-unit id="27d67cf72a16ce6f7e7fef0d1c238d2dcd768988" translate="yes" xml:space="preserve">
          <source>Computed properties are cached, and only re-computed on reactive dependency changes. Note that if a certain dependency is out of the instance&amp;rsquo;s scope (i.e. not reactive), the computed property will &lt;strong&gt;not&lt;/strong&gt; be updated.</source>
          <target state="translated">Las propiedades calculadas se almacenan en cach&amp;eacute; y solo se vuelven a calcular en los cambios de dependencia reactivos. Tenga en cuenta que si una determinada dependencia est&amp;aacute; fuera del alcance de la instancia (es decir, no reactiva), la propiedad calculada &lt;strong&gt;no&lt;/strong&gt; se actualizar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="ba6cb9fc6557b5cec7e768c24fd8980831e819b3" translate="yes" xml:space="preserve">
          <source>Computed properties to be mixed into the Vue instance. All getters and setters have their &lt;code&gt;this&lt;/code&gt; context automatically bound to the Vue instance.</source>
          <target state="translated">Propiedades calculadas que se mezclar&amp;aacute;n en la instancia de Vue. Todos los captadores y definidores tienen su &lt;code&gt;this&lt;/code&gt; contexto obligado autom&amp;aacute;ticamente a la instancia Vue.</target>
        </trans-unit>
        <trans-unit id="5cf24801a2b491e5ed7c286c67cc4ec735dfe0bf" translate="yes" xml:space="preserve">
          <source>Computed vs Watched Property</source>
          <target state="translated">Propiedad Computada vs.Propiedad Vigilada</target>
        </trans-unit>
        <trans-unit id="e0c81be5eacbe33990b3264613af44e7e00436e7" translate="yes" xml:space="preserve">
          <source>Conditional Groups with &lt;code&gt;v-if&lt;/code&gt; on &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt;</source>
          <target state="translated">Grupos condicionales con &lt;code&gt;v-if&lt;/code&gt; en &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ea9a4bba446372af01e0eb85f26e0ec3d5f7469e" translate="yes" xml:space="preserve">
          <source>Conditional Rendering</source>
          <target state="translated">Rendición condicional</target>
        </trans-unit>
        <trans-unit id="6281861540d03adef45443a41dbce83bfb9f4b5a" translate="yes" xml:space="preserve">
          <source>Conditional display (using &lt;code&gt;v-show&lt;/code&gt;)</source>
          <target state="translated">Pantalla condicional (usando &lt;code&gt;v-show&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="58a327cee7af8b8174524170058798f55fcb2a26" translate="yes" xml:space="preserve">
          <source>Conditional rendering (using &lt;code&gt;v-if&lt;/code&gt;)</source>
          <target state="translated">Representaci&amp;oacute;n condicional (usando &lt;code&gt;v-if&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="c0ffe0e0a9f1b16c5eadc124528b283345b2eb8a" translate="yes" xml:space="preserve">
          <source>Conditionally render the element based on the truthy-ness of the expression value. The element and its contained directives / components are destroyed and re-constructed during toggles. If the element is a &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; element, its content will be extracted as the conditional block.</source>
          <target state="translated">Representar condicionalmente el elemento bas&amp;aacute;ndose en la veracidad del valor de la expresi&amp;oacute;n. El elemento y sus directivas / componentes contenidos se destruyen y reconstruyen durante los cambios. Si el elemento es un elemento &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; , su contenido se extraer&amp;aacute; como el bloque condicional.</target>
        </trans-unit>
        <trans-unit id="b5a6d3bea1f126fba65a513b23bf60879adf5de8" translate="yes" xml:space="preserve">
          <source>Conditionals and Loops</source>
          <target state="translated">Condicionales y bucles</target>
        </trans-unit>
        <trans-unit id="78d3e47c861a9d35861af2b80ffb69e1e64a09e1" translate="yes" xml:space="preserve">
          <source>Configure whether to allow &lt;a href=&quot;https://github.com/vuejs/vue-devtools&quot;&gt;vue-devtools&lt;/a&gt; inspection. This option&amp;rsquo;s default value is &lt;code&gt;true&lt;/code&gt; in development builds and &lt;code&gt;false&lt;/code&gt; in production builds. You can set it to &lt;code&gt;true&lt;/code&gt; to enable inspection for production builds.</source>
          <target state="translated">Configure si desea permitir la inspecci&amp;oacute;n de &lt;a href=&quot;https://github.com/vuejs/vue-devtools&quot;&gt;vue-devtools&lt;/a&gt; . El valor predeterminado de esta opci&amp;oacute;n es &lt;code&gt;true&lt;/code&gt; en las compilaciones de desarrollo y &lt;code&gt;false&lt;/code&gt; en las compilaciones de producci&amp;oacute;n. Puede establecerlo en &lt;code&gt;true&lt;/code&gt; para habilitar la inspecci&amp;oacute;n de construcciones de producci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="52e68a873a2be3470675b9ee933b98d781ae7fef" translate="yes" xml:space="preserve">
          <source>Constraints</source>
          <target state="translated">Constraints</target>
        </trans-unit>
        <trans-unit id="445aad4957c1feec85e04d68a340464226aefa88" translate="yes" xml:space="preserve">
          <source>Contains parent-scope &lt;code&gt;v-on&lt;/code&gt; event listeners (without &lt;code&gt;.native&lt;/code&gt; modifiers). This can be passed down to an inner component via &lt;code&gt;v-on=&quot;$listeners&quot;&lt;/code&gt; - useful when creating transparent wrapper components.</source>
          <target state="translated">Contiene detectores de eventos &lt;code&gt;v-on&lt;/code&gt; de alcance principal (sin modificadores &lt;code&gt;.native&lt;/code&gt; ). Esto se puede pasar a un componente interno a trav&amp;eacute;s de &lt;code&gt;v-on=&quot;$listeners&quot;&lt;/code&gt; , &amp;uacute;til al crear componentes de envoltura transparentes.</target>
        </trans-unit>
        <trans-unit id="7afa3dae881ae74558506ce0892c24e74624d285" translate="yes" xml:space="preserve">
          <source>Contains parent-scope attribute bindings (except for &lt;code&gt;class&lt;/code&gt; and &lt;code&gt;style&lt;/code&gt;) that are not recognized (and extracted) as props. When a component doesn&amp;rsquo;t have any declared props, this essentially contains all parent-scope bindings (except for &lt;code&gt;class&lt;/code&gt; and &lt;code&gt;style&lt;/code&gt;), and can be passed down to an inner component via &lt;code&gt;v-bind=&quot;$attrs&quot;&lt;/code&gt; - useful when creating higher-order components.</source>
          <target state="translated">Contiene enlaces de atributos de alcance principal (excepto para &lt;code&gt;class&lt;/code&gt; y &lt;code&gt;style&lt;/code&gt; ) que no se reconocen (y extraen) como accesorios. Cuando un componente no tiene ning&amp;uacute;n accesorio declarado, esto esencialmente contiene todos los enlaces de alcance principal (excepto la &lt;code&gt;class&lt;/code&gt; y el &lt;code&gt;style&lt;/code&gt; ), y se puede pasar a un componente interno a trav&amp;eacute;s de &lt;code&gt;v-bind=&quot;$attrs&quot;&lt;/code&gt; - &amp;uacute;til cuando se crea un nivel superior -ordenar componentes.</target>
        </trans-unit>
        <trans-unit id="59495b7ca0f2a9b72ff075971da46a0a4c80ab3d" translate="yes" xml:space="preserve">
          <source>Content Distribution with Slots</source>
          <target state="translated">Distribución de contenidos con tragaperras</target>
        </trans-unit>
        <trans-unit id="ca3d2dc1d907b17312d85e3f062534361d8e0f00" translate="yes" xml:space="preserve">
          <source>Content inserted via named &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; no longer preserves the &lt;code&gt;slot&lt;/code&gt; attribute. Use a wrapper element to style them, or for advanced use cases, modify the inserted content programmatically using &lt;a href=&quot;render-function&quot;&gt;render functions&lt;/a&gt;.</source>
          <target state="translated">El contenido insertado a trav&amp;eacute;s de &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; con nombre ya no conserva el atributo de &lt;code&gt;slot&lt;/code&gt; . Utilice un elemento contenedor para dise&amp;ntilde;arlos o, para casos de uso avanzados, modifique el contenido insertado mediante programaci&amp;oacute;n mediante &lt;a href=&quot;render-function&quot;&gt;funciones de renderizado&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="57d31c2eb33df9234757a4d517416148a5a9edf8" translate="yes" xml:space="preserve">
          <source>Contribute Code</source>
          <target state="translated">Código de contribución</target>
        </trans-unit>
        <trans-unit id="7d0d4a0cab34f47e91912629a442a10056ba6924" translate="yes" xml:space="preserve">
          <source>Controlling Reusable Elements with &lt;code&gt;key&lt;/code&gt;</source>
          <target state="translated">Control de elementos reutilizables con &lt;code&gt;key&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5d62c87737211740fe0f51a9aec4aaf2fdb68d5a" translate="yes" xml:space="preserve">
          <source>Controlling Updates</source>
          <target state="translated">Control de las actualizaciones</target>
        </trans-unit>
        <trans-unit id="2abf3f548706125bce97eab08626d8b83f998bed" translate="yes" xml:space="preserve">
          <source>Create a &amp;ldquo;subclass&amp;rdquo; of the base Vue constructor. The argument should be an object containing component options.</source>
          <target state="translated">Cree una &quot;subclase&quot; del constructor Vue base. El argumento debe ser un objeto que contenga opciones de componentes.</target>
        </trans-unit>
        <trans-unit id="7b636affe4316b21cee1c56f29df138a02ece0fc" translate="yes" xml:space="preserve">
          <source>Create a two-way binding on a form input element or a component. For detailed usage and other notes, see the Guide section linked below.</source>
          <target state="translated">Crear un enlace bidireccional en un elemento de entrada de formulario o un componente.Para obtener información detallada sobre el uso y otras notas,consulte la sección de la Guía que se encuentra a continuación.</target>
        </trans-unit>
        <trans-unit id="e4428591f6bfdcff9018444de4e4b2c12acd1b20" translate="yes" xml:space="preserve">
          <source>Creating a Vue Instance</source>
          <target state="translated">Creación de una instancia de vue...</target>
        </trans-unit>
        <trans-unit id="e25a5433a4b0677aa872e250bb371466ff37cbdf" translate="yes" xml:space="preserve">
          <source>Custom Directives</source>
          <target state="translated">Directivas de la costumbre</target>
        </trans-unit>
        <trans-unit id="b2605830095ea9664e9b6b0e78b2dfce357336ca" translate="yes" xml:space="preserve">
          <source>Custom Directives &lt;sup&gt;simplified&lt;/sup&gt;</source>
          <target state="translated">Directivas personalizadas &lt;sup&gt;simplificadas&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="30f552fb7d2523e7c921d75d7494408388c644e4" translate="yes" xml:space="preserve">
          <source>Custom Events</source>
          <target state="translated">Eventos personalizados</target>
        </trans-unit>
        <trans-unit id="b7921e476147d86cf859de06a785218c56f57833" translate="yes" xml:space="preserve">
          <source>Custom Option Merge Strategies</source>
          <target state="translated">Estrategias de fusión de opciones personalizadas</target>
        </trans-unit>
        <trans-unit id="45b3b47d95e376c23eb2bf9a7026857086058e80" translate="yes" xml:space="preserve">
          <source>Custom Transition Classes</source>
          <target state="translated">Clases de transición personalizadas</target>
        </trans-unit>
        <trans-unit id="6342d2a1e7f2a3e93125d66fe5182864e99353a0" translate="yes" xml:space="preserve">
          <source>Custom component events</source>
          <target state="translated">Eventos de componentes personalizados</target>
        </trans-unit>
        <trans-unit id="87204d79f0d85c763f871e11f9645cfcdbf30541" translate="yes" xml:space="preserve">
          <source>Custom events can also be used to create custom inputs that work with &lt;code&gt;v-model&lt;/code&gt;. Remember that:</source>
          <target state="translated">Los eventos personalizados tambi&amp;eacute;n se pueden utilizar para crear entradas personalizadas que funcionen con &lt;code&gt;v-model&lt;/code&gt; . Recuerda eso:</target>
        </trans-unit>
        <trans-unit id="7c39a207e283bc7bdcf96aa4cc5abcb84d2d6a23" translate="yes" xml:space="preserve">
          <source>Custom validator function that takes the prop value as the sole argument. In a non-production environment, a console warning will be thrown if this function returns a falsy value (i.e. the validation fails). You can read more about prop validation &lt;a href=&quot;../guide/components-props#Prop-Validation&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Funci&amp;oacute;n de validaci&amp;oacute;n personalizada que toma el valor de prop como &amp;uacute;nico argumento. En un entorno de no producci&amp;oacute;n, se lanzar&amp;aacute; una advertencia de consola si esta funci&amp;oacute;n devuelve un valor falso (es decir, la validaci&amp;oacute;n falla). Puede leer m&amp;aacute;s sobre la validaci&amp;oacute;n de accesorios &lt;a href=&quot;../guide/components-props#Prop-Validation&quot;&gt;aqu&amp;iacute;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9482d884bbaefa018603b26f6945593b108f36a4" translate="yes" xml:space="preserve">
          <source>Customizing Component &lt;code&gt;v-model&lt;/code&gt;</source>
          <target state="translated">Personalizaci&amp;oacute;n &lt;code&gt;v-model&lt;/code&gt; componente</target>
        </trans-unit>
        <trans-unit id="06a565f3773a61c8641dff267c8ded6bcd9b3f9c" translate="yes" xml:space="preserve">
          <source>DOM Template Parsing Caveats</source>
          <target state="translated">Cuadernos de análisis de plantillas DOM</target>
        </trans-unit>
        <trans-unit id="b51cca4b51fb1200a40ecaa657030eabf6191260" translate="yes" xml:space="preserve">
          <source>DOM-Focused Instance Methods</source>
          <target state="translated">Métodos de instancia enfocada DOM</target>
        </trans-unit>
        <trans-unit id="1b5526b4e58b1155390d6513a29a1da140c24070" translate="yes" xml:space="preserve">
          <source>Data Binding Syntax - interpolations</source>
          <target state="translated">Sintaxis de unión de datos-interpolaciones</target>
        </trans-unit>
        <trans-unit id="77366f440a2b74b929dfbae3704e0ee470afe05e" translate="yes" xml:space="preserve">
          <source>Data and Methods</source>
          <target state="translated">Datos y métodos</target>
        </trans-unit>
        <trans-unit id="d38cca5da9c7df446a12182ab09218cd420e4017" translate="yes" xml:space="preserve">
          <source>Data binding</source>
          <target state="translated">La vinculación de los datos</target>
        </trans-unit>
        <trans-unit id="eb9a4bc1c0c153e4e4b042a79113b815b7e3021d" translate="yes" xml:space="preserve">
          <source>Date</source>
          <target state="translated">Date</target>
        </trans-unit>
        <trans-unit id="3dbd5db7967ac1aa2137f6c5db041d637cd7562b" translate="yes" xml:space="preserve">
          <source>Debouncing is used to limit how often we execute Ajax requests and other expensive operations. Vue&amp;rsquo;s &lt;code&gt;debounce&lt;/code&gt; attribute parameter for &lt;code&gt;v-model&lt;/code&gt; made this easy for very simple cases, but it actually debounced &lt;strong&gt;state updates&lt;/strong&gt; rather than the expensive operations themselves. It&amp;rsquo;s a subtle difference, but it comes with limitations as an application grows.</source>
          <target state="translated">El rebote se utiliza para limitar la frecuencia con la que ejecutamos solicitudes Ajax y otras operaciones costosas. El par&amp;aacute;metro de atributo de &lt;code&gt;debounce&lt;/code&gt; de Vue para &lt;code&gt;v-model&lt;/code&gt; hizo esto f&amp;aacute;cil para casos muy simples, pero en realidad elimin&amp;oacute; &lt;strong&gt;las actualizaciones de estado en&lt;/strong&gt; lugar de las costosas operaciones en s&amp;iacute;. Es una diferencia sutil, pero viene con limitaciones a medida que crece una aplicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="f2b400be160585ef7d6a1e0a5c8cd2d26e163dfb" translate="yes" xml:space="preserve">
          <source>Declarative Rendering</source>
          <target state="translated">Rendición de cuentas</target>
        </trans-unit>
        <trans-unit id="60326be113e84d326e32fb44f3563b6652a74f33" translate="yes" xml:space="preserve">
          <source>Declaring Reactive Properties</source>
          <target state="translated">Declarando las propiedades reactivas</target>
        </trans-unit>
        <trans-unit id="19119a0240ee87794f1539cc386759e6432b0af1" translate="yes" xml:space="preserve">
          <source>Defer the callback to be executed after the next DOM update cycle. Use it immediately after you&amp;rsquo;ve changed some data to wait for the DOM update.</source>
          <target state="translated">Aplaza la ejecuci&amp;oacute;n de la devoluci&amp;oacute;n de llamada despu&amp;eacute;s del pr&amp;oacute;ximo ciclo de actualizaci&amp;oacute;n del DOM. &amp;Uacute;selo inmediatamente despu&amp;eacute;s de haber cambiado algunos datos para esperar la actualizaci&amp;oacute;n del DOM.</target>
        </trans-unit>
        <trans-unit id="db1b7ad7e26590367943109c215c7f0efee9147c" translate="yes" xml:space="preserve">
          <source>Defer the callback to be executed after the next DOM update cycle. Use it immediately after you&amp;rsquo;ve changed some data to wait for the DOM update. This is the same as the global &lt;code&gt;Vue.nextTick&lt;/code&gt;, except that the callback&amp;rsquo;s &lt;code&gt;this&lt;/code&gt; context is automatically bound to the instance calling this method.</source>
          <target state="translated">Aplaza la ejecuci&amp;oacute;n de la devoluci&amp;oacute;n de llamada despu&amp;eacute;s del pr&amp;oacute;ximo ciclo de actualizaci&amp;oacute;n del DOM. &amp;Uacute;selo inmediatamente despu&amp;eacute;s de haber cambiado algunos datos para esperar la actualizaci&amp;oacute;n del DOM. Este es el mismo que el mundial &lt;code&gt;Vue.nextTick&lt;/code&gt; , excepto que la devoluci&amp;oacute;n de llamada de &lt;code&gt;this&lt;/code&gt; contexto se enlaza autom&amp;aacute;ticamente a la instancia de llamar a este m&amp;eacute;todo.</target>
        </trans-unit>
        <trans-unit id="3aeedfa2bb6af21a6c240454b04a9d9a6077d201" translate="yes" xml:space="preserve">
          <source>Define custom key alias(es) for &lt;code&gt;v-on&lt;/code&gt;.</source>
          <target state="translated">Defina alias de clave personalizados para &lt;code&gt;v-on&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="07cb7b03644814ccec1bd1576e0cdc6073329f9f" translate="yes" xml:space="preserve">
          <source>Define custom merging strategies for options.</source>
          <target state="translated">Definir estrategias de fusión personalizadas para las opciones.</target>
        </trans-unit>
        <trans-unit id="f14e2bbf870e3072284518da52bbf318ef3de3e0" translate="yes" xml:space="preserve">
          <source>Define your own property (e.g. &lt;code&gt;isLoading&lt;/code&gt;), then update the loading state in a watcher on the route. For example, if fetching data with &lt;a href=&quot;https://github.com/mzabriskie/axios&quot;&gt;axios&lt;/a&gt;:</source>
          <target state="translated">Defina su propia propiedad (por ejemplo, &lt;code&gt;isLoading&lt;/code&gt; ), luego actualice el estado de carga en un observador en la ruta. Por ejemplo, si busca datos con &lt;a href=&quot;https://github.com/mzabriskie/axios&quot;&gt;axios&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="7886c9ac31585e7059a2a594d6d51d9f8af55bc5" translate="yes" xml:space="preserve">
          <source>Defines if the prop is required. In a non-production environment, a console warning will be thrown if this value is truthy and the prop is not passed.</source>
          <target state="translated">Define si se requiere la hélice.En un entorno sin producción,se lanzará una advertencia de consola si este valor es verdadero y no se pasa el puntal.</target>
        </trans-unit>
        <trans-unit id="f936e16929c240786ce41c438c9b0e7d0bceebd5" translate="yes" xml:space="preserve">
          <source>Delete a property on an object. If the object is reactive, ensure the deletion triggers view updates. This is primarily used to get around the limitation that Vue cannot detect property deletions, but you should rarely need to use it.</source>
          <target state="translated">Borrar una propiedad de un objeto.Si el objeto es reactivo,asegúrese de que la eliminación desencadena actualizaciones de la vista.Esto se utiliza principalmente para sortear la limitación de que Vue no puede detectar las eliminaciones de propiedades,pero raramente debería necesitar utilizarlo.</target>
        </trans-unit>
        <trans-unit id="76d431baebcb16ff7fcbe15aee82bb0cf4ad4582" translate="yes" xml:space="preserve">
          <source>Denote named slots or slots that expect to receive props.</source>
          <target state="translated">Denota franjas horarias nombradas o franjas horarias que esperan recibir accesorios.</target>
        </trans-unit>
        <trans-unit id="142ea1eba23cdbbe5b68040400be1739264c9e4d" translate="yes" xml:space="preserve">
          <source>Denote the &amp;ldquo;else block&amp;rdquo; for &lt;code&gt;v-if&lt;/code&gt; or a &lt;code&gt;v-if&lt;/code&gt;/&lt;code&gt;v-else-if&lt;/code&gt; chain.</source>
          <target state="translated">Denote el &quot;bloque else&quot; para &lt;code&gt;v-if&lt;/code&gt; o una cadena &lt;code&gt;v-if&lt;/code&gt; / &lt;code&gt;v-else-if&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f2c984aaadf58ba802aed56b64dabd2310e7a5b4" translate="yes" xml:space="preserve">
          <source>Denote the &amp;ldquo;else if block&amp;rdquo; for &lt;code&gt;v-if&lt;/code&gt;. Can be chained.</source>
          <target state="translated">Denote el &quot;bloque else if&quot; para &lt;code&gt;v-if&lt;/code&gt; . Se puede encadenar.</target>
        </trans-unit>
        <trans-unit id="3aefbe2f210572802298b2ad0347dc9e423d2690" translate="yes" xml:space="preserve">
          <source>Dependency Injection</source>
          <target state="translated">Inyección de dependencia</target>
        </trans-unit>
        <trans-unit id="527600bf0272b6bf3abcb495a99c6ee346bb82b2" translate="yes" xml:space="preserve">
          <source>Deprecated</source>
          <target state="translated">Deprecated</target>
        </trans-unit>
        <trans-unit id="7c1f42119bffd331221f02c2d7e0adb0b031df05" translate="yes" xml:space="preserve">
          <source>Deprecated Syntax</source>
          <target state="translated">Sintaxis desaprobada</target>
        </trans-unit>
        <trans-unit id="4bada1251cc0e33b470722abe048401582aa8546" translate="yes" xml:space="preserve">
          <source>Despite the existence of props and events, sometimes you might still need to directly access a child component in JavaScript. To achieve this you can assign a reference ID to the child component using the &lt;code&gt;ref&lt;/code&gt; attribute. For example:</source>
          <target state="translated">A pesar de la existencia de accesorios y eventos, a veces es posible que a&amp;uacute;n necesite acceder directamente a un componente secundario en JavaScript. Para lograr esto, puede asignar una ID de referencia al componente secundario utilizando el atributo &lt;code&gt;ref&lt;/code&gt; . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="70b76287eafaba59f37405af3f173f6bfc44551a" translate="yes" xml:space="preserve">
          <source>Destructuring Slot Props</source>
          <target state="translated">Desestructuración de los puntales de las ranuras</target>
        </trans-unit>
        <trans-unit id="b1c5a7fcb4118b23681170020a3bb0920d2f9716" translate="yes" xml:space="preserve">
          <source>Detailed &lt;a href=&quot;../guide/components#Prop-Validation&quot;&gt;prop definitions&lt;/a&gt; have two advantages:</source>
          <target state="translated">Las &lt;a href=&quot;../guide/components#Prop-Validation&quot;&gt;definiciones&lt;/a&gt; detalladas de accesorios tienen dos ventajas:</target>
        </trans-unit>
        <trans-unit id="7ca6b2f29bf0e683cffc5bfdaa2638ab6df0be0b" translate="yes" xml:space="preserve">
          <source>Detailed Explanation</source>
          <target state="translated">Explicación detallada</target>
        </trans-unit>
        <trans-unit id="c8399fc7ad135cd736adc13fe440302a07e98cb7" translate="yes" xml:space="preserve">
          <source>Detailed release notes for each version are available on &lt;a href=&quot;https://github.com/vuejs/vue/releases&quot;&gt;GitHub&lt;/a&gt;.</source>
          <target state="translated">Las notas de lanzamiento detalladas para cada versi&amp;oacute;n est&amp;aacute;n disponibles en &lt;a href=&quot;https://github.com/vuejs/vue/releases&quot;&gt;GitHub&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="40d9b9f619dbd27ad649a2fb2ed512704a8498dc" translate="yes" xml:space="preserve">
          <source>Dev Build</source>
          <target state="translated">Dev Build</target>
        </trans-unit>
        <trans-unit id="de71895c6b8731341df7953e5cac6cc720d4cb3b" translate="yes" xml:space="preserve">
          <source>Development Tooling</source>
          <target state="translated">Herramientas de desarrollo</target>
        </trans-unit>
        <trans-unit id="f1a6305cd34006d48f89c6b7c5b39e442c279bfb" translate="yes" xml:space="preserve">
          <source>Development vs. Production Mode</source>
          <target state="translated">Modo de desarrollo vs.modo de producción</target>
        </trans-unit>
        <trans-unit id="e61f7a6aab9b9601861b94c2e17708a31a26f4cc" translate="yes" xml:space="preserve">
          <source>Development/production modes are hard-coded for the UMD builds: the un-minified files are for development, and the minified files are for production.</source>
          <target state="translated">Los modos de desarrollo/producción están codificados en duro para las construcciones de UMD:los archivos no minados son para el desarrollo,y los minados son para la producción.</target>
        </trans-unit>
        <trans-unit id="3757cf237017d813bd35da8ec2305e895f14c3e4" translate="yes" xml:space="preserve">
          <source>Direct &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; Include</source>
          <target state="translated">Incluir &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; directo</target>
        </trans-unit>
        <trans-unit id="7df8abc29de3933d7d9cb30da57cfccb911c13db" translate="yes" xml:space="preserve">
          <source>Directive &lt;code&gt;.literal&lt;/code&gt; Modifier &lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">Modificador de directiva &lt;code&gt;.literal&lt;/code&gt; &lt;sup&gt;eliminado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="e43c9c257ed4992f826362fcfbba8afdcac1c199" translate="yes" xml:space="preserve">
          <source>Directive Hook Arguments</source>
          <target state="translated">Argumentos del Gancho Directivo</target>
        </trans-unit>
        <trans-unit id="c938d0aef00011b5a0279e01e206aed9f7ccae05" translate="yes" xml:space="preserve">
          <source>Directive arguments can be dynamic. For example, in &lt;code&gt;v-mydirective:[argument]=&quot;value&quot;&lt;/code&gt;, the &lt;code&gt;argument&lt;/code&gt; can be updated based on data properties in our component instance! This makes our custom directives flexible for use throughout our application.</source>
          <target state="translated">Los argumentos directivos pueden ser din&amp;aacute;micos. Por ejemplo, en &lt;code&gt;v-mydirective:[argument]=&quot;value&quot;&lt;/code&gt; , el &lt;code&gt;argument&lt;/code&gt; o se puede actualizar seg&amp;uacute;n las propiedades de los datos en nuestra instancia de componente. Esto hace que nuestras directivas personalizadas sean flexibles para su uso en toda nuestra aplicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="9140a9a668b6efa44837f17d5c5e3b23c0db39a7" translate="yes" xml:space="preserve">
          <source>Directive hooks are passed these arguments:</source>
          <target state="translated">Los ganchos de la directiva se pasan estos argumentos:</target>
        </trans-unit>
        <trans-unit id="e6fc39cf25b0647f518bb1e791fb59f8693b3eb7" translate="yes" xml:space="preserve">
          <source>Directive shorthands</source>
          <target state="translated">Taquigrafía de la directiva</target>
        </trans-unit>
        <trans-unit id="958118e04c69e4b161491ee2580e2daa1c385c27" translate="yes" xml:space="preserve">
          <source>Directive shorthands &lt;sup&gt;strongly recommended&lt;/sup&gt;</source>
          <target state="translated">Se &lt;sup&gt;recomienda encarecidamente la&lt;/sup&gt; abreviatura directiva&lt;sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="28c82071e940360118b0611d5c912a71c32a0100" translate="yes" xml:space="preserve">
          <source>Directives</source>
          <target state="translated">Directives</target>
        </trans-unit>
        <trans-unit id="f6e02b52dce787224483306678d9a7ff2c5ac4ac" translate="yes" xml:space="preserve">
          <source>Directives are special attributes with the &lt;code&gt;v-&lt;/code&gt; prefix. Directive attribute values are expected to be &lt;strong&gt;a single JavaScript expression&lt;/strong&gt; (with the exception of &lt;code&gt;v-for&lt;/code&gt;, which will be discussed later). A directive&amp;rsquo;s job is to reactively apply side effects to the DOM when the value of its expression changes. Let&amp;rsquo;s review the example we saw in the introduction:</source>
          <target state="translated">Las directivas son atributos especiales con el prefijo &lt;code&gt;v-&lt;/code&gt; . Se espera que los valores de los atributos de la directiva sean &lt;strong&gt;una sola expresi&amp;oacute;n de JavaScript&lt;/strong&gt; (con la excepci&amp;oacute;n de &lt;code&gt;v-for&lt;/code&gt; , que se discutir&amp;aacute; m&amp;aacute;s adelante). El trabajo de una directiva es aplicar de forma reactiva efectos secundarios al DOM cuando cambia el valor de su expresi&amp;oacute;n. Repasemos el ejemplo que vimos en la introducci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="5a7b078f6fffb64c05ef05bc651ea0230372543a" translate="yes" xml:space="preserve">
          <source>Directives have a greatly reduced scope of responsibility: they are now only used for applying low-level direct DOM manipulations. In most cases, you should prefer using components as the main code-reuse abstraction.</source>
          <target state="translated">Las directivas tienen un ámbito de responsabilidad muy reducido:ahora sólo se utilizan para aplicar manipulaciones directas de bajo nivel de DOM.En la mayoría de los casos,se debería preferir utilizar los componentes como la principal abstracción de reutilización de códigos.</target>
        </trans-unit>
        <trans-unit id="2dcce90e911d0ed7e63b677b61fb05cc3faa8cba" translate="yes" xml:space="preserve">
          <source>Directives no longer have instances. This means there&amp;rsquo;s no more &lt;code&gt;this&lt;/code&gt; inside directive hooks. Instead, they receive everything they might need as arguments. If you really must persist state across hooks, you can do so on &lt;code&gt;el&lt;/code&gt;.</source>
          <target state="translated">Las directivas ya no tienen instancias. Esto significa que no m&amp;aacute;s es &lt;code&gt;this&lt;/code&gt; dentro ganchos directiva. En cambio, reciben todo lo que puedan necesitar como argumentos. Si realmente debe persistir el estado en los ganchos, puede hacerlo en &lt;code&gt;el&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0cc37d7c35424d61187e77c350659717ee6b0343" translate="yes" xml:space="preserve">
          <source>Directives vs Components</source>
          <target state="translated">Directivas vs.Componentes</target>
        </trans-unit>
        <trans-unit id="3f2cbb04f6567d1c007d0aaa5f77666916f9bcd2" translate="yes" xml:space="preserve">
          <source>Disabling Attribute Inheritance</source>
          <target state="translated">Herencia de atributo inhabilitante</target>
        </trans-unit>
        <trans-unit id="049073ae5b4c1db3b9ba9bb2b124a4b230f0bde4" translate="yes" xml:space="preserve">
          <source>Displaying Filtered/Sorted Results</source>
          <target state="translated">Mostrando resultados filtrados/clasificados</target>
        </trans-unit>
        <trans-unit id="fad728fefe77763a68e26de84f3520b2b68a4c03" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Functions/Arrow_functions&quot;&gt;arrow functions&lt;/a&gt; on an options property or callback, such as &lt;code&gt;created: () =&amp;gt; console.log(this.a)&lt;/code&gt; or &lt;code&gt;vm.$watch('a', newValue =&amp;gt; this.myMethod())&lt;/code&gt;. Since an arrow function doesn&amp;rsquo;t have a &lt;code&gt;this&lt;/code&gt;, &lt;code&gt;this&lt;/code&gt; will be treated as any other variable and lexically looked up through parent scopes until found, often resulting in errors such as &lt;code&gt;Uncaught TypeError: Cannot read property of undefined&lt;/code&gt; or &lt;code&gt;Uncaught TypeError: this.myMethod is not a function&lt;/code&gt;.</source>
          <target state="translated">No use &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Functions/Arrow_functions&quot;&gt;funciones de flecha&lt;/a&gt; en una propiedad de opciones o devoluci&amp;oacute;n de llamada, como &lt;code&gt;created: () =&amp;gt; console.log(this.a)&lt;/code&gt; o &lt;code&gt;vm.$watch('a', newValue =&amp;gt; this.myMethod())&lt;/code&gt; . Puesto que una funci&amp;oacute;n de la flecha no tiene &lt;code&gt;this&lt;/code&gt; , &lt;code&gt;this&lt;/code&gt; ser&amp;aacute; tratado como cualquier otra variable y l&amp;eacute;xico mirado hacia arriba a trav&amp;eacute;s de los padres hasta que alcances encontrado, a menudo resulta en errores como &lt;code&gt;Uncaught TypeError: Cannot read property of undefined&lt;/code&gt; o &lt;code&gt;Uncaught TypeError: this.myMethod is not a function&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="890db44609fe3c70adc2fb62237a57c309abca15" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use &lt;code&gt;.passive&lt;/code&gt; and &lt;code&gt;.prevent&lt;/code&gt; together, because &lt;code&gt;.prevent&lt;/code&gt; will be ignored and your browser will probably show you a warning. Remember, &lt;code&gt;.passive&lt;/code&gt; communicates to the browser that you &lt;em&gt;don&amp;rsquo;t&lt;/em&gt; want to prevent the event&amp;rsquo;s default behavior.</source>
          <target state="translated">No utilice &lt;code&gt;.passive&lt;/code&gt; y &lt;code&gt;.prevent&lt;/code&gt; juntos, porque &lt;code&gt;.prevent&lt;/code&gt; ser&amp;aacute; ignorada y su navegador probablemente le mostrar&amp;aacute; un aviso. Recuerde, &lt;code&gt;.passive&lt;/code&gt; le comunica al navegador que &lt;em&gt;no&lt;/em&gt; desea evitar el comportamiento predeterminado del evento.</target>
        </trans-unit>
        <trans-unit id="51f362101e6fb54f133e70f730ec6b0fa1f7594b" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use non-primitive values like objects and arrays as &lt;code&gt;v-for&lt;/code&gt; keys. Use string or numeric values instead.</source>
          <target state="translated">No utilice valores no primitivos como objetos y matrices como claves &lt;code&gt;v-for&lt;/code&gt; . En su lugar, utilice valores num&amp;eacute;ricos o de cadena.</target>
        </trans-unit>
        <trans-unit id="b4930e1ee5f8ecba58c1ab6aba1024cb6e3381c1" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use the minified version during development. You will miss out on all the nice warnings for common mistakes!</source>
          <target state="translated">No use la versi&amp;oacute;n minificada durante el desarrollo. &amp;iexcl;Te perder&amp;aacute;s todas las buenas advertencias de errores comunes!</target>
        </trans-unit>
        <trans-unit id="899e054cc75954e4159c5ebdaef25856dd086605" translate="yes" xml:space="preserve">
          <source>Due to limitations in JavaScript, Vue &lt;strong&gt;cannot&lt;/strong&gt; detect the following changes to an array:</source>
          <target state="translated">Debido a las limitaciones de JavaScript, Vue &lt;strong&gt;no puede&lt;/strong&gt; detectar los siguientes cambios en una matriz:</target>
        </trans-unit>
        <trans-unit id="8f5a54ddfeaab0b34c48e32ca40adb365a291a09" translate="yes" xml:space="preserve">
          <source>Due to the limitations of modern JavaScript (and the abandonment of &lt;code&gt;Object.observe&lt;/code&gt;), Vue &lt;strong&gt;cannot detect property addition or deletion&lt;/strong&gt;. Since Vue performs the getter/setter conversion process during instance initialization, a property must be present in the &lt;code&gt;data&lt;/code&gt; object in order for Vue to convert it and make it reactive. For example:</source>
          <target state="translated">Debido a las limitaciones del JavaScript moderno (y el abandono de &lt;code&gt;Object.observe&lt;/code&gt; ), Vue &lt;strong&gt;no puede detectar la adici&amp;oacute;n o eliminaci&amp;oacute;n de propiedades&lt;/strong&gt; . Dado que Vue realiza el proceso de conversi&amp;oacute;n getter / setter durante la inicializaci&amp;oacute;n de la instancia, una propiedad debe estar presente en el objeto de &lt;code&gt;data&lt;/code&gt; para que Vue lo convierta y lo haga reactivo. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="4d1e3bcfb2991be45c08d600c135d8a8f3bd979e" translate="yes" xml:space="preserve">
          <source>Duplicate Slots &lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">Se &lt;sup&gt;eliminaron las&lt;/sup&gt; ranuras duplicadas&lt;sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="1e4dfad1a692a8e9e499aa601a49c4ba4f904e1a" translate="yes" xml:space="preserve">
          <source>During development, Vue provides a lot of warnings to help you with common errors and pitfalls. However, these warning strings become useless in production and bloat your app&amp;rsquo;s payload size. In addition, some of these warning checks have small runtime costs that can be avoided in production mode.</source>
          <target state="translated">Durante el desarrollo, Vue proporciona muchas advertencias para ayudarlo con errores y trampas comunes. Sin embargo, estas cadenas de advertencia se vuelven in&amp;uacute;tiles en producci&amp;oacute;n y aumentan el tama&amp;ntilde;o de la carga &amp;uacute;til de su aplicaci&amp;oacute;n. Adem&amp;aacute;s, algunas de estas comprobaciones de advertencia tienen peque&amp;ntilde;os costes de ejecuci&amp;oacute;n que se pueden evitar en el modo de producci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="4e0b4d06e01f37d245996f44cf8aad221df6bb37" translate="yes" xml:space="preserve">
          <source>Dynamic &amp;amp; Async Components</source>
          <target state="translated">Componentes din&amp;aacute;micos y as&amp;iacute;ncronos</target>
        </trans-unit>
        <trans-unit id="0f29650484d14962fd70996d94d073f31ddb540c" translate="yes" xml:space="preserve">
          <source>Dynamic Argument Expression Constraints</source>
          <target state="translated">Restricciones de la expresión de los argumentos dinámicos</target>
        </trans-unit>
        <trans-unit id="af1ad0c6ae30fa7a85fac894f37497e0cf2dad3b" translate="yes" xml:space="preserve">
          <source>Dynamic Argument Value Constraints</source>
          <target state="translated">Argumento dinámico Restricciones de valor</target>
        </trans-unit>
        <trans-unit id="9b7f2a051af6ba64581ce902392478aec9152664" translate="yes" xml:space="preserve">
          <source>Dynamic Arguments</source>
          <target state="translated">Argumentos dinámicos</target>
        </trans-unit>
        <trans-unit id="a5fdad1da0c422ddbaedc42b6d8523a19935dd4a" translate="yes" xml:space="preserve">
          <source>Dynamic Components</source>
          <target state="translated">Componentes dinámicos</target>
        </trans-unit>
        <trans-unit id="7ed8c346bc4125aae72e6d3a54d7f6262905126a" translate="yes" xml:space="preserve">
          <source>Dynamic Components - keep-alive</source>
          <target state="translated">Componentes dinámicos-mantener vivo</target>
        </trans-unit>
        <trans-unit id="7e034c49c5cb1c629752968fa9c7831a78d808e9" translate="yes" xml:space="preserve">
          <source>Dynamic Directive Arguments</source>
          <target state="translated">Argumentos de la Directiva Dinámica</target>
        </trans-unit>
        <trans-unit id="c5efbfd95e89a2e200767862226b5ea05b0c65cd" translate="yes" xml:space="preserve">
          <source>Dynamic Slot Names</source>
          <target state="translated">Nombres de ranuras dinámicas</target>
        </trans-unit>
        <trans-unit id="fc384df95a2eb5e6d4806d3eac83c68c6146e347" translate="yes" xml:space="preserve">
          <source>Dynamic State Transitions</source>
          <target state="translated">Transiciones de estado dinámico</target>
        </trans-unit>
        <trans-unit id="352ceca6fc1e262f140d46e933114b56fb3111ba" translate="yes" xml:space="preserve">
          <source>Dynamic Transitions</source>
          <target state="translated">Transiciones dinámicas</target>
        </trans-unit>
        <trans-unit id="93ee8b48e893e0a24c554d34149c5732350f19ef" translate="yes" xml:space="preserve">
          <source>Dynamic argument expressions have some syntax constraints because certain characters, such as spaces and quotes, are invalid inside HTML attribute names. For example, the following is invalid:</source>
          <target state="translated">Las expresiones de argumentos dinámicos tienen algunas limitaciones de sintaxis porque ciertos caracteres,como los espacios y las comillas,son inválidos dentro de los nombres de atributos HTML.Por ejemplo,el siguiente es inválido:</target>
        </trans-unit>
        <trans-unit id="066b5692f75eaf85a9eb86ad0ec5f4a812ee3640" translate="yes" xml:space="preserve">
          <source>Dynamic arguments are expected to evaluate to a string, with the exception of &lt;code&gt;null&lt;/code&gt;. The special value &lt;code&gt;null&lt;/code&gt; can be used to explicitly remove the binding. Any other non-string value will trigger a warning.</source>
          <target state="translated">Se espera que los argumentos din&amp;aacute;micos se eval&amp;uacute;en en una cadena, con la excepci&amp;oacute;n de &lt;code&gt;null&lt;/code&gt; . El valor especial &lt;code&gt;null&lt;/code&gt; se puede utilizar para eliminar expl&amp;iacute;citamente el enlace. Cualquier otro valor que no sea una cadena activar&amp;aacute; una advertencia.</target>
        </trans-unit>
        <trans-unit id="76813c002463cb6cd3d5aaacd8c77a0fdc2e1c18" translate="yes" xml:space="preserve">
          <source>Dynamic components</source>
          <target state="translated">Componentes dinámicos</target>
        </trans-unit>
        <trans-unit id="8ca3e70bb28937f01555d17d146f8ddb5c4ff9fe" translate="yes" xml:space="preserve">
          <source>Dynamic options rendered with &lt;code&gt;v-for&lt;/code&gt;:</source>
          <target state="translated">Opciones din&amp;aacute;micas renderizadas con &lt;code&gt;v-for&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c7c226cd4979c15617282ce978af491363f417bc" translate="yes" xml:space="preserve">
          <source>Dynamically bind one or more attributes, or a component prop to an expression.</source>
          <target state="translated">Vincular dinámicamente uno o más atributos,o un componente de apoyo a una expresión.</target>
        </trans-unit>
        <trans-unit id="05eb141560fc4fbe23b15082a0866f326cc413ad" translate="yes" xml:space="preserve">
          <source>Dynamically rendering arbitrary HTML on your website can be very dangerous because it can easily lead to &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_scripting&quot;&gt;XSS attacks&lt;/a&gt;. Only use &lt;code&gt;v-html&lt;/code&gt; on trusted content and &lt;strong&gt;never&lt;/strong&gt; on user-provided content.</source>
          <target state="translated">La renderizaci&amp;oacute;n din&amp;aacute;mica de HTML arbitrario en su sitio web puede ser muy peligrosa porque puede conducir f&amp;aacute;cilmente a &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_scripting&quot;&gt;ataques XSS&lt;/a&gt; . Utilice &lt;code&gt;v-html&lt;/code&gt; solo en contenido confiable y &lt;strong&gt;nunca&lt;/strong&gt; en contenido proporcionado por el usuario.</target>
        </trans-unit>
        <trans-unit id="eedbb4031c5d446b94624d3a0f6602aec8d6dfb3" translate="yes" xml:space="preserve">
          <source>Dynamically rendering arbitrary HTML on your website can be very dangerous because it can easily lead to &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_scripting&quot;&gt;XSS vulnerabilities&lt;/a&gt;. Only use HTML interpolation on trusted content and &lt;strong&gt;never&lt;/strong&gt; on user-provided content.</source>
          <target state="translated">Representar din&amp;aacute;micamente HTML arbitrario en su sitio web puede ser muy peligroso porque puede conducir f&amp;aacute;cilmente a &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_scripting&quot;&gt;vulnerabilidades XSS&lt;/a&gt; . Utilice &amp;uacute;nicamente la interpolaci&amp;oacute;n HTML en contenido confiable y &lt;strong&gt;nunca&lt;/strong&gt; en contenido proporcionado por el usuario.</target>
        </trans-unit>
        <trans-unit id="7307a1f2056f78ceb4b076d712f210b93d116ffe" translate="yes" xml:space="preserve">
          <source>ES Module (for browsers)</source>
          <target state="translated">Módulo ES (para navegadores)</target>
        </trans-unit>
        <trans-unit id="f93896ed5a340e7e28d51a91add020b4ca5af3b6" translate="yes" xml:space="preserve">
          <source>ES Module (for bundlers)</source>
          <target state="translated">Módulo ES (para los empaquetadores)</target>
        </trans-unit>
        <trans-unit id="9522be7f22cdc09d3c22d90d688472548ef56bd2" translate="yes" xml:space="preserve">
          <source>ESM for browsers (2.6+ only): intended for direct imports in modern browsers via &lt;code&gt;&amp;lt;script type=&quot;module&quot;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">ESM para navegadores (solo 2.6+): dise&amp;ntilde;ado para importaciones directas en navegadores modernos a trav&amp;eacute;s de &lt;code&gt;&amp;lt;script type=&quot;module&quot;&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e27c262b3d9b3eb1c6c28300b45d4a73dc87aab5" translate="yes" xml:space="preserve">
          <source>ESM for bundlers: intended for use with modern bundlers like &lt;a href=&quot;https://webpack.js.org&quot;&gt;webpack 2&lt;/a&gt; or &lt;a href=&quot;https://rollupjs.org/&quot;&gt;Rollup&lt;/a&gt;. ESM format is designed to be statically analyzable so the bundlers can take advantage of that to perform &amp;ldquo;tree-shaking&amp;rdquo; and eliminate unused code from your final bundle. The default file for these bundlers (&lt;code&gt;pkg.module&lt;/code&gt;) is the Runtime only ES Module build (&lt;code&gt;vue.runtime.esm.js&lt;/code&gt;).</source>
          <target state="translated">ESM para agrupadores: dise&amp;ntilde;ado para su uso con &lt;a href=&quot;https://webpack.js.org&quot;&gt;agrupadores&lt;/a&gt; modernos como webpack 2 o &lt;a href=&quot;https://rollupjs.org/&quot;&gt;Rollup&lt;/a&gt; . El formato ESM est&amp;aacute; dise&amp;ntilde;ado para ser analizable est&amp;aacute;ticamente, de modo que los empaquetadores puedan aprovecharlo para realizar un &quot;cambio de &amp;aacute;rbol&quot; y eliminar el c&amp;oacute;digo no utilizado de su paquete final. El archivo predeterminado para estos &lt;code&gt;pkg.module&lt;/code&gt; ( pkg.module ) es la compilaci&amp;oacute;n del m&amp;oacute;dulo ES solo en tiempo de ejecuci&amp;oacute;n ( &lt;code&gt;vue.runtime.esm.js&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="52584925c7fd5eeb8c70a3598a16ad94fa3bb4e3" translate="yes" xml:space="preserve">
          <source>Each Vue instance goes through a series of initialization steps when it&amp;rsquo;s created - for example, it needs to set up data observation, compile the template, mount the instance to the DOM, and update the DOM when data changes. Along the way, it also runs functions called &lt;strong&gt;lifecycle hooks&lt;/strong&gt;, giving users the opportunity to add their own code at specific stages.</source>
          <target state="translated">Cada instancia de Vue pasa por una serie de pasos de inicializaci&amp;oacute;n cuando se crea; por ejemplo, necesita configurar la observaci&amp;oacute;n de datos, compilar la plantilla, montar la instancia en el DOM y actualizar el DOM cuando los datos cambian. En el camino, tambi&amp;eacute;n ejecuta funciones llamadas &lt;strong&gt;enlaces de ciclo de vida&lt;/strong&gt; , lo que brinda a los usuarios la oportunidad de agregar su propio c&amp;oacute;digo en etapas espec&amp;iacute;ficas.</target>
        </trans-unit>
        <trans-unit id="b5088616c301da75dcaf436fbc5bf3ddd9acb337" translate="yes" xml:space="preserve">
          <source>Each of these classes will be prefixed with the name of the transition. Here the &lt;code&gt;v-&lt;/code&gt; prefix is the default when you use a &lt;code&gt;&amp;lt;transition&amp;gt;&lt;/code&gt; element with no name. If you use &lt;code&gt;&amp;lt;transition name=&quot;my-transition&quot;&amp;gt;&lt;/code&gt; for example, then the &lt;code&gt;v-enter&lt;/code&gt; class would instead be &lt;code&gt;my-transition-enter&lt;/code&gt;.</source>
          <target state="translated">Cada una de estas clases tendr&amp;aacute; como prefijo el nombre de la transici&amp;oacute;n. Aqu&amp;iacute;, el prefijo &lt;code&gt;v-&lt;/code&gt; es el predeterminado cuando usa un elemento &lt;code&gt;&amp;lt;transition&amp;gt;&lt;/code&gt; sin nombre. Si usa &lt;code&gt;&amp;lt;transition name=&quot;my-transition&quot;&amp;gt;&lt;/code&gt; por ejemplo, entonces la clase &lt;code&gt;v-enter&lt;/code&gt; ser&amp;iacute;a en su lugar &lt;code&gt;my-transition-enter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1cc96a01bcbcfb5be49b49faff41c9c72edfc787" translate="yes" xml:space="preserve">
          <source>Earlier, we mentioned creating a component for blog posts. The problem is, that component won&amp;rsquo;t be useful unless you can pass data to it, such as the title and content of the specific post we want to display. That&amp;rsquo;s where props come in.</source>
          <target state="translated">Anteriormente, mencionamos la creaci&amp;oacute;n de un componente para publicaciones de blog. El problema es que ese componente no ser&amp;aacute; &amp;uacute;til a menos que pueda pasarle datos, como el t&amp;iacute;tulo y el contenido de la publicaci&amp;oacute;n espec&amp;iacute;fica que queremos mostrar. Ah&amp;iacute; es donde entran en juego los accesorios.</target>
        </trans-unit>
        <trans-unit id="0d70bd765f3f2ae985e4c821b7603710f7eb9df8" translate="yes" xml:space="preserve">
          <source>Earlier, we used the &lt;code&gt;is&lt;/code&gt; attribute to switch between components in a tabbed interface:</source>
          <target state="translated">Anteriormente, usamos el atributo &lt;code&gt;is&lt;/code&gt; para cambiar entre componentes en una interfaz con pesta&amp;ntilde;as:</target>
        </trans-unit>
        <trans-unit id="4fa6dd6e776a6034da7ff016fc47682b3462032b" translate="yes" xml:space="preserve">
          <source>Earlier, when we described &lt;a href=&quot;#Accessing-the-Parent-Component-Instance&quot;&gt;Accessing the Parent Component Instance&lt;/a&gt;, we showed an example like this:</source>
          <target state="translated">Anteriormente, cuando describimos el &lt;a href=&quot;#Accessing-the-Parent-Component-Instance&quot;&gt;acceso a la instancia del componente principal&lt;/a&gt; , mostramos un ejemplo como este:</target>
        </trans-unit>
        <trans-unit id="1fc33fec143cab8fa565a8b5fcd84caddf5b2bb9" translate="yes" xml:space="preserve">
          <source>Editor Support</source>
          <target state="translated">Apoyo al editor</target>
        </trans-unit>
        <trans-unit id="4b30b2bc161838680b0573ae6f73a2c886f0328b" translate="yes" xml:space="preserve">
          <source>Editors can autocomplete component names in templates, because PascalCase is also used in JavaScript.</source>
          <target state="translated">Los editores pueden autocompletar los nombres de los componentes en las plantillas,porque PascalCase también se utiliza en JavaScript.</target>
        </trans-unit>
        <trans-unit id="aa08e2485ebe2fac169d5b9e3e17c69b91b28316" translate="yes" xml:space="preserve">
          <source>Either way, the rendered HTML will be:</source>
          <target state="translated">De cualquier manera,el HTML renderizado será:</target>
        </trans-unit>
        <trans-unit id="7394b6d08c5d50c4cc4b81306a613af47e801496" translate="yes" xml:space="preserve">
          <source>Element &amp;amp; Component Access</source>
          <target state="translated">Acceso a elementos y componentes</target>
        </trans-unit>
        <trans-unit id="f191399212a6a5144845ff3f2688976048435b58" translate="yes" xml:space="preserve">
          <source>Element attribute order</source>
          <target state="translated">Orden de los atributos del elemento</target>
        </trans-unit>
        <trans-unit id="3ec26bbfb700738f9bd4fc6d76fb545baff31bf3" translate="yes" xml:space="preserve">
          <source>Element attribute order &lt;sup&gt;recommended&lt;/sup&gt;</source>
          <target state="translated">Se &lt;sup&gt;recomienda el&lt;/sup&gt; orden de los atributos de los elementos&lt;sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="38a3522441dc0300f0d181dd880463460906d3e2" translate="yes" xml:space="preserve">
          <source>Element selectors with &lt;code&gt;scoped&lt;/code&gt;&lt;sup&gt;use with caution&lt;/sup&gt;</source>
          <target state="translated">Los selectores de elementos con &lt;code&gt;scoped&lt;/code&gt; &lt;sup&gt;utilizan con precauci&amp;oacute;n&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="d8f887f6e247da0f16c9fed78985cfcac7e019d8" translate="yes" xml:space="preserve">
          <source>Element selectors with scoped</source>
          <target state="translated">Los selectores de elementos con alcance</target>
        </trans-unit>
        <trans-unit id="0409f80dbf4550276ef2e4c40543a602bf7ee4bd" translate="yes" xml:space="preserve">
          <source>Elements inside are &lt;strong&gt;always required&lt;/strong&gt; to have a unique &lt;code&gt;key&lt;/code&gt; attribute.</source>
          <target state="translated">Los elementos internos &lt;strong&gt;siempre deben&lt;/strong&gt; tener un atributo de &lt;code&gt;key&lt;/code&gt; &amp;uacute;nico .</target>
        </trans-unit>
        <trans-unit id="20632bc30721b7b1111cc82ebfe4420e4ad7d5d8" translate="yes" xml:space="preserve">
          <source>Ember</source>
          <target state="translated">Ember</target>
        </trans-unit>
        <trans-unit id="49ee02a23a5aeffc39970d4d10f070a81e08bfb8" translate="yes" xml:space="preserve">
          <source>Ember is a full-featured framework that is designed to be highly opinionated. It provides a lot of established conventions and once you are familiar enough with them, it can make you very productive. However, it also means the learning curve is high and flexibility suffers. It&amp;rsquo;s a trade-off when you try to pick between an opinionated framework and a library with a loosely coupled set of tools that work together. The latter gives you more freedom but also requires you to make more architectural decisions.</source>
          <target state="translated">Ember es un marco con todas las funciones que est&amp;aacute; dise&amp;ntilde;ado para ser muy obstinado. Proporciona una gran cantidad de convenciones establecidas y, una vez que est&amp;eacute; lo suficientemente familiarizado con ellas, puede hacerlo muy productivo. Sin embargo, tambi&amp;eacute;n significa que la curva de aprendizaje es alta y la flexibilidad se ve afectada. Es una compensaci&amp;oacute;n cuando intenta elegir entre un marco obstinado y una biblioteca con un conjunto de herramientas poco acopladas que funcionan juntas. Esto &amp;uacute;ltimo le da m&amp;aacute;s libertad pero tambi&amp;eacute;n requiere que tome m&amp;aacute;s decisiones arquitect&amp;oacute;nicas.</target>
        </trans-unit>
        <trans-unit id="f1a14ce6850f52c29f8d348ff00f11f8c193143a" translate="yes" xml:space="preserve">
          <source>Emitting a Value With an Event</source>
          <target state="translated">Emitir un valor con un evento</target>
        </trans-unit>
        <trans-unit id="2ffac68868af36726216abf1444b14e8a9e81831" translate="yes" xml:space="preserve">
          <source>Empty lines in component/instance options</source>
          <target state="translated">Líneas vacías en las opciones de componentes o sustancias</target>
        </trans-unit>
        <trans-unit id="9a357c242d606aa776379e9ccc339c2a981402c3" translate="yes" xml:space="preserve">
          <source>Empty lines in component/instance options &lt;sup&gt;recommended&lt;/sup&gt;</source>
          <target state="translated">Se &lt;sup&gt;recomiendan&lt;/sup&gt; l&amp;iacute;neas vac&amp;iacute;as en las opciones de componente / instancia&lt;sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="395f296fb0a847870529140564672614d41b49c6" translate="yes" xml:space="preserve">
          <source>Enter/Leave &amp;amp; List Transitions</source>
          <target state="translated">Transiciones Entrar / Salir y Listar</target>
        </trans-unit>
        <trans-unit id="4cb2742b90eb0c79a4443668baa30aaa153719fb" translate="yes" xml:space="preserve">
          <source>Equivalent in Handler</source>
          <target state="translated">Equivalente en Manipulador</target>
        </trans-unit>
        <trans-unit id="524a185d655c3874eab06bc5b9c40d5ae39a5e05" translate="yes" xml:space="preserve">
          <source>Error tracking services &lt;a href=&quot;https://sentry.io/for/vue/&quot;&gt;Sentry&lt;/a&gt; and &lt;a href=&quot;https://docs.bugsnag.com/platforms/browsers/vue/&quot;&gt;Bugsnag&lt;/a&gt; provide official integrations using this option.</source>
          <target state="translated">Los servicios de seguimiento de errores &lt;a href=&quot;https://sentry.io/for/vue/&quot;&gt;Sentry&lt;/a&gt; y &lt;a href=&quot;https://docs.bugsnag.com/platforms/browsers/vue/&quot;&gt;Bugsnag&lt;/a&gt; proporcionan integraciones oficiales utilizando esta opci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="5a9a0a3787d6b474b295c63ce86d1775a4c674ca" translate="yes" xml:space="preserve">
          <source>Especially when the template version is so simple in comparison:</source>
          <target state="translated">Especialmente cuando la versión de la plantilla es tan simple en comparación:</target>
        </trans-unit>
        <trans-unit id="11d8dc595f327555e20a54381be565d9f67e4750" translate="yes" xml:space="preserve">
          <source>Even if you don&amp;rsquo;t like the idea of Single-File Components, you can still leverage its hot-reloading and pre-compilation features by separating your JavaScript and CSS into separate files:</source>
          <target state="translated">Incluso si no le gusta la idea de componentes de un solo archivo, a&amp;uacute;n puede aprovechar sus caracter&amp;iacute;sticas de precompilaci&amp;oacute;n y recarga en caliente al separar su JavaScript y CSS en archivos separados:</target>
        </trans-unit>
        <trans-unit id="a9c88ca6177858fca8d783f12c88be433e0d8d66" translate="yes" xml:space="preserve">
          <source>Event &amp;amp; Key Modifiers</source>
          <target state="translated">Modificadores de evento y clave</target>
        </trans-unit>
        <trans-unit id="47439ca5ded64f9ae2fef50d130387798195a012" translate="yes" xml:space="preserve">
          <source>Event Handling</source>
          <target state="translated">Manejo de eventos</target>
        </trans-unit>
        <trans-unit id="66526f44818cc6ab396a919c3fd5d840f2645ce8" translate="yes" xml:space="preserve">
          <source>Event Modifiers</source>
          <target state="translated">Modificadores de eventos</target>
        </trans-unit>
        <trans-unit id="ed4d874df84489b3b2e3acc9c685b0095bc84604" translate="yes" xml:space="preserve">
          <source>Event Names</source>
          <target state="translated">Nombres de los eventos</target>
        </trans-unit>
        <trans-unit id="c5497bca58468ae64aed6c0fd921109217988db3" translate="yes" xml:space="preserve">
          <source>Events</source>
          <target state="translated">Events</target>
        </trans-unit>
        <trans-unit id="5f219021b57e774d36f65324ba3a594e9e20460b" translate="yes" xml:space="preserve">
          <source>Every Vue application starts by creating a new &lt;strong&gt;Vue instance&lt;/strong&gt; with the &lt;code&gt;Vue&lt;/code&gt; function:</source>
          <target state="translated">Cada aplicaci&amp;oacute;n de Vue comienza creando una nueva &lt;strong&gt;instancia de Vue&lt;/strong&gt; con la funci&amp;oacute;n &lt;code&gt;Vue&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="bf667a90a613e55245c46fdd192636568d154701" translate="yes" xml:space="preserve">
          <source>Every aspect of our input is more explicit, using lifecycle hooks and DOM events in place of the hidden behavior of two-way filters.</source>
          <target state="translated">Cada aspecto de nuestra entrada es más explícito,usando ganchos de ciclo de vida y eventos DOM en lugar del comportamiento oculto de los filtros de dos vías.</target>
        </trans-unit>
        <trans-unit id="5fab82007b286c11875b1e8300f0b68eda4d7671" translate="yes" xml:space="preserve">
          <source>Every component instance has a corresponding &lt;strong&gt;watcher&lt;/strong&gt; instance, which records any properties &amp;ldquo;touched&amp;rdquo; during the component&amp;rsquo;s render as dependencies. Later on when a dependency&amp;rsquo;s setter is triggered, it notifies the watcher, which in turn causes the component to re-render.</source>
          <target state="translated">Cada instancia de componente tiene una instancia de &lt;strong&gt;observador&lt;/strong&gt; correspondiente , que registra cualquier propiedad &quot;tocada&quot; durante el procesamiento del componente como dependencias. M&amp;aacute;s adelante, cuando se activa el establecedor de una dependencia, notifica al observador, lo que a su vez hace que el componente vuelva a renderizarse.</target>
        </trans-unit>
        <trans-unit id="cde90b98b8ca342aa109a11b8cb6f107489aabdb" translate="yes" xml:space="preserve">
          <source>Every component must have exactly one root element. Fragment instances are no longer allowed. If you have a template like this:</source>
          <target state="translated">Cada componente debe tener exactamente un elemento raíz.Ya no se permiten instancias de fragmentación.Si tienes una plantilla como esta:</target>
        </trans-unit>
        <trans-unit id="f8f19e423bd95ddb0403144073cc789ba522dcdc" translate="yes" xml:space="preserve">
          <source>Every element is a node. Every piece of text is a node. Even comments are nodes! A node is just a piece of the page. And as in a family tree, each node can have children (i.e. each piece can contain other pieces).</source>
          <target state="translated">Cada elemento es un nodo.Cada trozo de texto es un nodo.¡Incluso los comentarios son nodos! Un nodo es sólo un pedazo de la página.Y como en un árbol genealógico,cada nodo puede tener hijos (es decir,cada pedazo puede contener otros pedazos).</target>
        </trans-unit>
        <trans-unit id="cc8033faba44f959c9968ac919456fbe10586a80" translate="yes" xml:space="preserve">
          <source>Everything in the parent template is compiled in parent scope; everything in the child template is compiled in the child scope.</source>
          <target state="translated">Todo en la plantilla de los padres está compilado en el ámbito de los padres;todo en la plantilla de los hijos está compilado en el ámbito de los hijos.</target>
        </trans-unit>
        <trans-unit id="f28c7ab27a6c42cfb1e4176122b33e862331bc81" translate="yes" xml:space="preserve">
          <source>Everything the component needs is passed through &lt;code&gt;context&lt;/code&gt;, which is an object containing:</source>
          <target state="translated">Todo lo que necesita el componente pasa a trav&amp;eacute;s del &lt;code&gt;context&lt;/code&gt; o , que es un objeto que contiene:</target>
        </trans-unit>
        <trans-unit id="3eb3a95fccd918b90c7eb487502d9a5258dea10d" translate="yes" xml:space="preserve">
          <source>Example Sandbox</source>
          <target state="translated">Ejemplo Sandbox</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="7b412ed401fdddea0ef09de5790b10445ea1013a" translate="yes" xml:space="preserve">
          <source>Explanation of Different Builds</source>
          <target state="translated">Explicación de las diferentes construcciones</target>
        </trans-unit>
        <trans-unit id="b102c653c316a0c798b1c3b5d245b2fd99221969" translate="yes" xml:space="preserve">
          <source>Explicit Transition Durations</source>
          <target state="translated">Duraciones de transición explícitas</target>
        </trans-unit>
        <trans-unit id="3a49021ed3d45b568f8768a63c1ebc20e5852fd1" translate="yes" xml:space="preserve">
          <source>Explore the Ecosystem</source>
          <target state="translated">Explorar el ecosistema</target>
        </trans-unit>
        <trans-unit id="9f62a44e4c752c760f987ea515f7893e2af42d0d" translate="yes" xml:space="preserve">
          <source>Extracting Component CSS</source>
          <target state="translated">Extracción del componente CSS</target>
        </trans-unit>
        <trans-unit id="03688ba6aa340b87549088aa5739944cb6b1dc73" translate="yes" xml:space="preserve">
          <source>FAQ</source>
          <target state="translated">FAQ</target>
        </trans-unit>
        <trans-unit id="ed87d8d2be60461f51035b723d16617e8c329991" translate="yes" xml:space="preserve">
          <source>Fallback Content</source>
          <target state="translated">Contenido alternativo</target>
        </trans-unit>
        <trans-unit id="0ec1383e48d82f723351a7c7d7e095874e0cced0" translate="yes" xml:space="preserve">
          <source>Filter Argument Syntax &lt;sup&gt;changed&lt;/sup&gt;</source>
          <target state="translated">La sintaxis del argumento del filtro &lt;sup&gt;cambi&amp;oacute;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="96e578211aa295317cf257310712fa28ccd8f6c6" translate="yes" xml:space="preserve">
          <source>Filters</source>
          <target state="translated">Filters</target>
        </trans-unit>
        <trans-unit id="8f48c7c02d00eef6501d151792b08bf6adbfe470" translate="yes" xml:space="preserve">
          <source>Filters Outside Text Interpolations &lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">Se &lt;sup&gt;eliminaron los&lt;/sup&gt; filtros externos a las interpolaciones de texto&lt;sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="5b3db50a9ea6f4f7c392840edf49099c7ed86b69" translate="yes" xml:space="preserve">
          <source>Filters are JavaScript functions, therefore they can take arguments:</source>
          <target state="translated">Los filtros son funciones de JavaScript,por lo tanto pueden tomar argumentos:</target>
        </trans-unit>
        <trans-unit id="9cf9da6ef24cfde47da11ec9725f0bf350874d59" translate="yes" xml:space="preserve">
          <source>Filters can be chained:</source>
          <target state="translated">Los filtros pueden ser encadenados:</target>
        </trans-unit>
        <trans-unit id="4c3505be6bb67c8eae9065c68ab17a4aa210b176" translate="yes" xml:space="preserve">
          <source>Filters can now only be used inside text interpolations (&lt;code&gt;{{ }}&lt;/code&gt; tags). In the past we&amp;rsquo;ve found using filters within directives such as &lt;code&gt;v-model&lt;/code&gt;, &lt;code&gt;v-on&lt;/code&gt;, etc led to more complexity than convenience. For list filtering on &lt;code&gt;v-for&lt;/code&gt;, it&amp;rsquo;s also better to move that logic into JavaScript as computed properties, so that it can be reused throughout your component.</source>
          <target state="translated">Los filtros ahora solo se pueden usar dentro de interpolaciones de texto ( etiquetas &lt;code&gt;{{ }}&lt;/code&gt; ). En el pasado, hemos descubierto que el uso de filtros dentro de directivas como &lt;code&gt;v-model&lt;/code&gt; , &lt;code&gt;v-on&lt;/code&gt; , etc., generaba m&amp;aacute;s complejidad que conveniencia. Para el filtrado de listas en &lt;code&gt;v-for&lt;/code&gt; , tambi&amp;eacute;n es mejor mover esa l&amp;oacute;gica a JavaScript como propiedades calculadas, de modo que pueda reutilizarse en todo su componente.</target>
        </trans-unit>
        <trans-unit id="e9d1aa6ff2a07e10c7656873ff1308d497c903c4" translate="yes" xml:space="preserve">
          <source>Filters&amp;rsquo; syntax for arguments now better aligns with JavaScript function invocation. So instead of taking space-delimited arguments:</source>
          <target state="translated">La sintaxis de los filtros para los argumentos ahora se alinea mejor con la invocaci&amp;oacute;n de funciones de JavaScript. Entonces, en lugar de tomar argumentos delimitados por espacios:</target>
        </trans-unit>
        <trans-unit id="60a606af2a6e34be36c3e018e84d36f4ebabe677" translate="yes" xml:space="preserve">
          <source>Finally, Vue offers a &lt;a href=&quot;https://github.com/vuejs/vue-cli&quot;&gt;CLI project generator&lt;/a&gt; that makes it trivially easy to start a new project by featuring an interactive project scaffolding wizard. You can even use it to &lt;a href=&quot;https://cli.vuejs.org/guide/prototyping.html#instant-prototyping&quot;&gt;instant prototyping&lt;/a&gt; a component. React is also making strides in this area with &lt;a href=&quot;https://github.com/facebookincubator/create-react-app&quot;&gt;create-react-app&lt;/a&gt;, but it currently has a few limitations:</source>
          <target state="translated">Finalmente, Vue ofrece un &lt;a href=&quot;https://github.com/vuejs/vue-cli&quot;&gt;generador de proyectos CLI&lt;/a&gt; que hace que sea trivialmente f&amp;aacute;cil comenzar un nuevo proyecto al presentar un asistente de andamio de proyectos interactivo. Incluso puede usarlo para &lt;a href=&quot;https://cli.vuejs.org/guide/prototyping.html#instant-prototyping&quot;&gt;crear prototipos instant&amp;aacute;neos de&lt;/a&gt; un componente. React tambi&amp;eacute;n est&amp;aacute; avanzando en esta &amp;aacute;rea con &lt;a href=&quot;https://github.com/facebookincubator/create-react-app&quot;&gt;create-react-app&lt;/a&gt; , pero actualmente tiene algunas limitaciones:</target>
        </trans-unit>
        <trans-unit id="46a09a60c55f421db2df0617afc361af95839d24" translate="yes" xml:space="preserve">
          <source>Finally, although not as deeply integrated with TypeScript as Angular is, Vue also offers &lt;a href=&quot;https://github.com/vuejs/vue/tree/dev/types&quot;&gt;official typings&lt;/a&gt; and &lt;a href=&quot;https://github.com/vuejs/vue-class-component&quot;&gt;official decorator&lt;/a&gt; for those who wish to use TypeScript with Vue. We are also actively collaborating with the TypeScript and VSCode teams at Microsoft to improve the TS/IDE experience for Vue + TS users.</source>
          <target state="translated">Finalmente, aunque no est&amp;aacute; tan profundamente integrado con TypeScript como Angular, Vue tambi&amp;eacute;n ofrece &lt;a href=&quot;https://github.com/vuejs/vue/tree/dev/types&quot;&gt;mecanograf&amp;iacute;a &lt;/a&gt;&lt;a href=&quot;https://github.com/vuejs/vue-class-component&quot;&gt;oficial&lt;/a&gt; y decorador oficial para aquellos que deseen usar TypeScript con Vue. Tambi&amp;eacute;n estamos colaborando activamente con los equipos de TypeScript y VSCode en Microsoft para mejorar la experiencia TS / IDE para los usuarios de Vue + TS.</target>
        </trans-unit>
        <trans-unit id="c79cb78954e7e44144e4d9f932c4ed497c0e092c" translate="yes" xml:space="preserve">
          <source>Finally, the ultimate way of creating dynamic transitions is through components that accept props to change the nature of the transition(s) to be used. It may sound cheesy, but the only limit really is your imagination.</source>
          <target state="translated">Por último,la forma definitiva de crear transiciones dinámicas es mediante componentes que acepten accesorios para cambiar la naturaleza de la transición o las transiciones que se vayan a utilizar.Puede sonar cursi,pero el único límite realmente es su imaginación.</target>
        </trans-unit>
        <trans-unit id="1d1f211e525b965795b5c0f10446e200361802de" translate="yes" xml:space="preserve">
          <source>Finally, we&amp;rsquo;ve split rules into four categories:</source>
          <target state="translated">Finalmente, dividimos las reglas en cuatro categor&amp;iacute;as:</target>
        </trans-unit>
        <trans-unit id="1ef8e6da45d2dd081d16f57b855fc793cd8acd72" translate="yes" xml:space="preserve">
          <source>Flexibility</source>
          <target state="translated">Flexibility</target>
        </trans-unit>
        <trans-unit id="000fcaf84aefc0e5054690f42482aa2d4e0bf254" translate="yes" xml:space="preserve">
          <source>Flexibility and Modularity</source>
          <target state="translated">Flexibilidad y modularidad</target>
        </trans-unit>
        <trans-unit id="513df0e04c650fcde5059f934aba58711aa740db" translate="yes" xml:space="preserve">
          <source>For Advanced Users</source>
          <target state="translated">Para usuarios avanzados</target>
        </trans-unit>
        <trans-unit id="0371195d5c5dd41a7b29d242b361064f37dcabe5" translate="yes" xml:space="preserve">
          <source>For Users New to Module Build Systems in JavaScript</source>
          <target state="translated">Para los usuarios nuevos en el módulo Construir sistemas en JavaScript</target>
        </trans-unit>
        <trans-unit id="6ab11db25aabad67fcc64bd1db7fd9a5258467bd" translate="yes" xml:space="preserve">
          <source>For a very naive implementation, you could do something like this:</source>
          <target state="translated">Para una implementación muy ingenua,podrías hacer algo como esto:</target>
        </trans-unit>
        <trans-unit id="97aed23a831fb46aa5f822991920ad494f56b3c0" translate="yes" xml:space="preserve">
          <source>For all other event and key modifiers, no proprietary prefix is necessary, because you can use event methods in the handler:</source>
          <target state="translated">Para todos los demás modificadores de eventos y claves,no es necesario un prefijo propietario,porque se pueden utilizar métodos de eventos en el manejador:</target>
        </trans-unit>
        <trans-unit id="4b301f643b1a2e6c5a62541c73173f461ea6ebb3" translate="yes" xml:space="preserve">
          <source>For consistency with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/History_API&quot;&gt;HTML5 History API&lt;/a&gt;, &lt;code&gt;router.go&lt;/code&gt; is now only used for &lt;a href=&quot;https://router.vuejs.org/en/essentials/navigation.html#routergon&quot;&gt;back/forward navigation&lt;/a&gt;, while &lt;a href=&quot;https://router.vuejs.org/en/essentials/navigation.html#routerpushlocation&quot;&gt;&lt;code&gt;router.push&lt;/code&gt;&lt;/a&gt; is used to navigate to a specific page.</source>
          <target state="translated">Para &lt;code&gt;router.go&lt;/code&gt; coherencia con la &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/History_API&quot;&gt;API de historial de HTML5&lt;/a&gt; , router.go ahora solo se usa para &lt;a href=&quot;https://router.vuejs.org/en/essentials/navigation.html#routergon&quot;&gt;la navegaci&amp;oacute;n hacia atr&amp;aacute;s / adelante&lt;/a&gt; , mientras que &lt;a href=&quot;https://router.vuejs.org/en/essentials/navigation.html#routerpushlocation&quot;&gt; &lt;code&gt;router.push&lt;/code&gt; &lt;/a&gt; se usa para navegar a una p&amp;aacute;gina espec&amp;iacute;fica.</target>
        </trans-unit>
        <trans-unit id="e4fb9ce3028e6861311988b9b290536a7aa92d89" translate="yes" xml:space="preserve">
          <source>For convenience, we offer a shorthand for this pattern with the &lt;code&gt;.sync&lt;/code&gt; modifier:</source>
          <target state="translated">Para mayor comodidad, ofrecemos una abreviatura de este patr&amp;oacute;n con el modificador &lt;code&gt;.sync&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e77949a3d7974a151900b4714219c740fd012a6b" translate="yes" xml:space="preserve">
          <source>For detailed usage of the &lt;code&gt;key&lt;/code&gt; attribute, please see the &lt;a href=&quot;../api/index#key&quot;&gt;&lt;code&gt;key&lt;/code&gt; API documentation&lt;/a&gt;.</source>
          <target state="translated">Para conocer el uso detallado del atributo de &lt;code&gt;key&lt;/code&gt; , consulte la &lt;a href=&quot;../api/index#key&quot;&gt;documentaci&amp;oacute;n de la API de &lt;/a&gt; &lt;code&gt;key&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="53e32fc40d0970eb330b3e2f44d962408b263fdc" translate="yes" xml:space="preserve">
          <source>For detailed usage, follow the links in the description above.</source>
          <target state="translated">Para un uso más detallado,siga los enlaces de la descripción anterior.</target>
        </trans-unit>
        <trans-unit id="9e8a5dedf29d4ff26e04aa95eadb4a541741862d" translate="yes" xml:space="preserve">
          <source>For detailed usage, see the guide section linked below.</source>
          <target state="translated">Para más detalles sobre el uso,véase la sección de la guía que figura a continuación.</target>
        </trans-unit>
        <trans-unit id="d591ea61c249ea3002f6d233030ffe8ea7141373" translate="yes" xml:space="preserve">
          <source>For developing Vue applications with TypeScript, we strongly recommend using &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt;, which provides great out-of-the-box support for TypeScript. If you are using &lt;a href=&quot;single-file-components&quot;&gt;single-file components&lt;/a&gt; (SFCs), get the awesome &lt;a href=&quot;https://github.com/vuejs/vetur&quot;&gt;Vetur extension&lt;/a&gt;, which provides TypeScript inference inside SFCs and many other great features.</source>
          <target state="translated">Para desarrollar aplicaciones Vue con TypeScript, recomendamos encarecidamente utilizar &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt; , que proporciona una excelente compatibilidad inmediata con TypeScript. Si est&amp;aacute; utilizando &lt;a href=&quot;single-file-components&quot;&gt;componentes de un solo archivo&lt;/a&gt; (SFC), obtenga la impresionante &lt;a href=&quot;https://github.com/vuejs/vetur&quot;&gt;extensi&amp;oacute;n Vetur&lt;/a&gt; , que proporciona inferencia de TypeScript dentro de SFC y muchas otras funciones excelentes.</target>
        </trans-unit>
        <trans-unit id="6e2d4bb9e3f6cebb3a8e3663cfdc894fd475b817" translate="yes" xml:space="preserve">
          <source>For each of Vue&amp;rsquo;s built-in text filters, we go through how you can replace them below. The example code could exist in custom helper functions, methods, or computed properties.</source>
          <target state="translated">Para cada uno de los filtros de texto integrados de Vue, veremos c&amp;oacute;mo puede reemplazarlos a continuaci&amp;oacute;n. El c&amp;oacute;digo de ejemplo podr&amp;iacute;a existir en funciones auxiliares personalizadas, m&amp;eacute;todos o propiedades calculadas.</target>
        </trans-unit>
        <trans-unit id="f0fc95b5d9a1e01b79eaa28bc87c877b0bf6da5a" translate="yes" xml:space="preserve">
          <source>For each property in the &lt;code&gt;components&lt;/code&gt; object, the key will be the name of the custom element, while the value will contain the options object for the component.</source>
          <target state="translated">Para cada propiedad en el objeto de &lt;code&gt;components&lt;/code&gt; , la clave ser&amp;aacute; el nombre del elemento personalizado, mientras que el valor contendr&amp;aacute; el objeto de opciones para el componente.</target>
        </trans-unit>
        <trans-unit id="ee5b4a54e529a0035e69d76c3d750875a601f600" translate="yes" xml:space="preserve">
          <source>For enumerated attributes, in addition to the falsy values above, the string &lt;code&gt;&quot;false&quot;&lt;/code&gt; will also render as &lt;code&gt;attr=&quot;false&quot;&lt;/code&gt;.</source>
          <target state="translated">Para los atributos enumerados, adem&amp;aacute;s de los valores falsos anteriores, la cadena &lt;code&gt;&quot;false&quot;&lt;/code&gt; tambi&amp;eacute;n se representar&amp;aacute; como &lt;code&gt;attr=&quot;false&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a1bcf675514ed1428c0f255af215d2d1ec106163" translate="yes" xml:space="preserve">
          <source>For example, data objects undergo a recursive merge, with the component&amp;rsquo;s data taking priority in cases of conflicts.</source>
          <target state="translated">Por ejemplo, los objetos de datos se someten a una fusi&amp;oacute;n recursiva, y los datos del componente tienen prioridad en casos de conflictos.</target>
        </trans-unit>
        <trans-unit id="1d2f158836607b874466f2b27900abd2a49b107c" translate="yes" xml:space="preserve">
          <source>For example, if you declare this component:</source>
          <target state="translated">Por ejemplo,si declaras este componente:</target>
        </trans-unit>
        <trans-unit id="7c30d3d0dc65ec8b44e08ea442bb32aa047a5282" translate="yes" xml:space="preserve">
          <source>For example, imagine we&amp;rsquo;re using a 3rd-party &lt;code&gt;bootstrap-date-input&lt;/code&gt; component with a Bootstrap plugin that requires a &lt;code&gt;data-date-picker&lt;/code&gt; attribute on the &lt;code&gt;input&lt;/code&gt;. We can add this attribute to our component instance:</source>
          <target state="translated">Por ejemplo, imagine que estamos usando un componente de &lt;code&gt;bootstrap-date-input&lt;/code&gt; terceros con un complemento de arranque que requiere un atributo de &lt;code&gt;data-date-picker&lt;/code&gt; en la &lt;code&gt;input&lt;/code&gt; . Podemos agregar este atributo a nuestra instancia de componente:</target>
        </trans-unit>
        <trans-unit id="029230d9057a5f295142155955df8324550cebca" translate="yes" xml:space="preserve">
          <source>For example, let&amp;rsquo;s say we have a todo app structured like this:</source>
          <target state="translated">Por ejemplo, digamos que tenemos una aplicaci&amp;oacute;n de tareas pendientes estructurada as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="8536684fa38a02049e92f9af5a854917903e5346" translate="yes" xml:space="preserve">
          <source>For example, the &lt;a href=&quot;../api/index#created&quot;&gt;&lt;code&gt;created&lt;/code&gt;&lt;/a&gt; hook can be used to run code after an instance is created:</source>
          <target state="translated">Por ejemplo, el enlace &lt;a href=&quot;../api/index#created&quot;&gt; &lt;code&gt;created&lt;/code&gt; &lt;/a&gt; se puede usar para ejecutar c&amp;oacute;digo despu&amp;eacute;s de que se crea una instancia:</target>
        </trans-unit>
        <trans-unit id="d87b2246eacf304bd868b9fc71ba48be665c366f" translate="yes" xml:space="preserve">
          <source>For example, to declare an instance property &lt;code&gt;$myProperty&lt;/code&gt; with type &lt;code&gt;string&lt;/code&gt;:</source>
          <target state="translated">Por ejemplo, para declarar una propiedad de instancia &lt;code&gt;$myProperty&lt;/code&gt; con el tipo &lt;code&gt;string&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="445caef62f32ef2f86bdab4d539a720263922705" translate="yes" xml:space="preserve">
          <source>For example, we are implementing a &lt;code&gt;&amp;lt;todo-list&amp;gt;&lt;/code&gt; component that contains the layout and filtering logic for a list:</source>
          <target state="translated">Por ejemplo, estamos implementando un componente &lt;code&gt;&amp;lt;todo-list&amp;gt;&lt;/code&gt; que contiene el dise&amp;ntilde;o y la l&amp;oacute;gica de filtrado de una lista:</target>
        </trans-unit>
        <trans-unit id="1c2f769cc15514daf831c7f8ba5ba411ef20e0ad" translate="yes" xml:space="preserve">
          <source>For example, when you set &lt;code&gt;vm.someData = 'new value'&lt;/code&gt;, the component will not re-render immediately. It will update in the next &amp;ldquo;tick&amp;rdquo;, when the queue is flushed. Most of the time we don&amp;rsquo;t need to care about this, but it can be tricky when you want to do something that depends on the post-update DOM state. Although Vue.js generally encourages developers to think in a &amp;ldquo;data-driven&amp;rdquo; fashion and avoid touching the DOM directly, sometimes it might be necessary to get your hands dirty. In order to wait until Vue.js has finished updating the DOM after a data change, you can use &lt;code&gt;Vue.nextTick(callback)&lt;/code&gt; immediately after the data is changed. The callback will be called after the DOM has been updated. For example:</source>
          <target state="translated">Por ejemplo, cuando establece &lt;code&gt;vm.someData = 'new value'&lt;/code&gt; , el componente no se volver&amp;aacute; a renderizar inmediatamente. Se actualizar&amp;aacute; en el siguiente &quot;tick&quot;, cuando se vac&amp;iacute;e la cola. La mayor&amp;iacute;a de las veces no necesitamos preocuparnos por esto, pero puede ser complicado cuando desea hacer algo que depende del estado DOM posterior a la actualizaci&amp;oacute;n. Aunque Vue.js generalmente alienta a los desarrolladores a pensar de una manera &quot;basada en datos&quot; y evitar tocar el DOM directamente, a veces puede ser necesario ensuciarse las manos. Para esperar hasta que Vue.js haya terminado de actualizar el DOM despu&amp;eacute;s de un cambio de datos, puede usar &lt;code&gt;Vue.nextTick(callback)&lt;/code&gt; inmediatamente despu&amp;eacute;s de que se cambien los datos. La devoluci&amp;oacute;n de llamada se llamar&amp;aacute; despu&amp;eacute;s de que se haya actualizado el DOM. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="e2dcdf7e5cfb578dd7fa577b7951c9147ef8d1fe" translate="yes" xml:space="preserve">
          <source>For example, you can update:</source>
          <target state="translated">Por ejemplo,puedes actualizar:</target>
        </trans-unit>
        <trans-unit id="171a4fb0d839fa35fc9ac0ce10d7a2647f1246d9" translate="yes" xml:space="preserve">
          <source>For example, you might have components for a header, sidebar, and content area, each typically containing other components for navigation links, blog posts, etc.</source>
          <target state="translated">Por ejemplo,puede tener componentes para un encabezado,una barra lateral y un área de contenido,cada uno de los cuales contiene típicamente otros componentes para enlaces de navegación,entradas de blog,etc.</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="8353bc6674b8324b5a5898cec0a2b4d4a90528a5" translate="yes" xml:space="preserve">
          <source>For languages that require an &lt;a href=&quot;https://en.wikipedia.org/wiki/Input_method&quot;&gt;IME&lt;/a&gt; (Chinese, Japanese, Korean etc.), you&amp;rsquo;ll notice that &lt;code&gt;v-model&lt;/code&gt; doesn&amp;rsquo;t get updated during IME composition. If you want to cater for these updates as well, use &lt;code&gt;input&lt;/code&gt; event instead.</source>
          <target state="translated">Para los idiomas que requieren un &lt;a href=&quot;https://en.wikipedia.org/wiki/Input_method&quot;&gt;IME&lt;/a&gt; (chino, japon&amp;eacute;s, coreano, etc.), notar&amp;aacute; que &lt;code&gt;v-model&lt;/code&gt; no se actualiza durante la composici&amp;oacute;n del IME. Si tambi&amp;eacute;n desea atender estas actualizaciones, use &lt;code&gt;input&lt;/code&gt; event.</target>
        </trans-unit>
        <trans-unit id="d953af41887caa68a9981e2a5dc5d2318ad53ee4" translate="yes" xml:space="preserve">
          <source>For large applications, both Vue and React offer robust routing solutions. The React community has also been very innovative in terms of state management solutions (e.g. Flux/Redux). These state management patterns and &lt;a href=&quot;https://yarnpkg.com/en/packages?q=redux%20vue&amp;amp;p=1&quot;&gt;even Redux itself&lt;/a&gt; can be easily integrated into Vue applications. In fact, Vue has even taken this model a step further with &lt;a href=&quot;https://github.com/vuejs/vuex&quot;&gt;Vuex&lt;/a&gt;, an Elm-inspired state management solution that integrates deeply into Vue that we think offers a superior development experience.</source>
          <target state="translated">Para aplicaciones grandes, tanto Vue como React ofrecen soluciones de enrutamiento s&amp;oacute;lidas. La comunidad React tambi&amp;eacute;n ha sido muy innovadora en t&amp;eacute;rminos de soluciones de gesti&amp;oacute;n estatal (por ejemplo, Flux / Redux). Estos patrones de gesti&amp;oacute;n de estado e &lt;a href=&quot;https://yarnpkg.com/en/packages?q=redux%20vue&amp;amp;p=1&quot;&gt;incluso el propio Redux se&lt;/a&gt; pueden integrar f&amp;aacute;cilmente en las aplicaciones de Vue. De hecho, Vue incluso ha llevado este modelo un paso m&amp;aacute;s all&amp;aacute; con &lt;a href=&quot;https://github.com/vuejs/vuex&quot;&gt;Vuex&lt;/a&gt; , una soluci&amp;oacute;n de administraci&amp;oacute;n de estado inspirada en Elm que se integra profundamente en Vue y creemos que ofrece una experiencia de desarrollo superior.</target>
        </trans-unit>
        <trans-unit id="6748b6e8c6539d47295af7dc062e5bff8197423c" translate="yes" xml:space="preserve">
          <source>For many developers who have been working with HTML, templates feel more natural to read and write. The preference itself can be somewhat subjective, but if it makes the developer more productive then the benefit is objective.</source>
          <target state="translated">Para muchos desarrolladores que han estado trabajando con HTML,las plantillas se sienten más naturales para leer y escribir.La preferencia en sí misma puede ser algo subjetiva,pero si hace que el desarrollador sea más productivo entonces el beneficio es objetivo.</target>
        </trans-unit>
        <trans-unit id="628f37126cb037b7ed4ef4cf22c76a0b062364d7" translate="yes" xml:space="preserve">
          <source>For more details, see &lt;a href=&quot;https://github.com/vuejs/vuex/blob/1.0/docs/en/plugins.md&quot;&gt;the plugins docs&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s detalles, consulte &lt;a href=&quot;https://github.com/vuejs/vuex/blob/1.0/docs/en/plugins.md&quot;&gt;los documentos de complementos&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1462c5eafd2a7f66683a9728a59128baa07aa8ef" translate="yes" xml:space="preserve">
          <source>For more details, see the links below.</source>
          <target state="translated">Para obtener más detalles,consulte los siguientes enlaces.</target>
        </trans-unit>
        <trans-unit id="ecef75fdd902dc21fadbfaa29bd9b19def442996" translate="yes" xml:space="preserve">
          <source>For more in-depth information on unit testing in Vue, check out &lt;a href=&quot;https://vue-test-utils.vuejs.org/&quot;&gt;Vue Test Utils&lt;/a&gt; and our cookbook entry about &lt;a href=&quot;https://vuejs.org/v2/cookbook/unit-testing-vue-components.html&quot;&gt;unit testing vue components&lt;/a&gt;.</source>
          <target state="translated">Para obtener informaci&amp;oacute;n m&amp;aacute;s detallada sobre las pruebas unitarias en Vue, consulte &lt;a href=&quot;https://vue-test-utils.vuejs.org/&quot;&gt;Vue Test Utils&lt;/a&gt; y nuestra entrada del libro de recetas sobre &lt;a href=&quot;https://vuejs.org/v2/cookbook/unit-testing-vue-components.html&quot;&gt;los componentes de la prueba unitaria&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e7a2e95661b48b511251e25b504cdd0211c50e8b" translate="yes" xml:space="preserve">
          <source>For more on how JSX maps to JavaScript, see the &lt;a href=&quot;https://github.com/vuejs/jsx#installation&quot;&gt;usage docs&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre c&amp;oacute;mo JSX se asigna a JavaScript, consulte los &lt;a href=&quot;https://github.com/vuejs/jsx#installation&quot;&gt;documentos de uso&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6e41c2b329c905a4640c7495f0532f24ec2ebd4c" translate="yes" xml:space="preserve">
          <source>For more on the advantages of this strategy, see &lt;a href=&quot;#debounce-Param-Attribute-for-v-model-removed&quot;&gt;the example here with &lt;code&gt;v-model&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre las ventajas de esta estrategia, consulte &lt;a href=&quot;#debounce-Param-Attribute-for-v-model-removed&quot;&gt;el ejemplo aqu&amp;iacute; con &lt;code&gt;v-model&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="25b70aa7a4e5c440a926c6e391e7d79fda4e4edb" translate="yes" xml:space="preserve">
          <source>For most Single Page Applications, it&amp;rsquo;s recommended to use the officially-supported &lt;a href=&quot;https://github.com/vuejs/vue-router&quot;&gt;vue-router library&lt;/a&gt;. For more details, see vue-router&amp;rsquo;s &lt;a href=&quot;https://router.vuejs.org/&quot;&gt;documentation&lt;/a&gt;.</source>
          <target state="translated">Para la mayor&amp;iacute;a de las aplicaciones de una sola p&amp;aacute;gina, se recomienda utilizar la &lt;a href=&quot;https://github.com/vuejs/vue-router&quot;&gt;biblioteca vue-router con&lt;/a&gt; soporte oficial . Para obtener m&amp;aacute;s detalles, consulte la &lt;a href=&quot;https://router.vuejs.org/&quot;&gt;documentaci&amp;oacute;n de&lt;/a&gt; vue-router .</target>
        </trans-unit>
        <trans-unit id="5b3557fe91b413f4d536e3e8b778c8dcb8073525" translate="yes" xml:space="preserve">
          <source>For most attributes, the value provided to the component will replace the value set by the component. So for example, passing &lt;code&gt;type=&quot;text&quot;&lt;/code&gt; will replace &lt;code&gt;type=&quot;date&quot;&lt;/code&gt; and probably break it! Fortunately, the &lt;code&gt;class&lt;/code&gt; and &lt;code&gt;style&lt;/code&gt; attributes are a little smarter, so both values are merged, making the final value: &lt;code&gt;form-control date-picker-theme-dark&lt;/code&gt;.</source>
          <target state="translated">Para la mayor&amp;iacute;a de los atributos, el valor proporcionado al componente reemplazar&amp;aacute; el valor establecido por el componente. Entonces, por ejemplo, pasar &lt;code&gt;type=&quot;text&quot;&lt;/code&gt; reemplazar&amp;aacute; &lt;code&gt;type=&quot;date&quot;&lt;/code&gt; y probablemente lo romper&amp;aacute;. Afortunadamente, los atributos de &lt;code&gt;class&lt;/code&gt; y &lt;code&gt;style&lt;/code&gt; son un poco m&amp;aacute;s inteligentes, por lo que ambos valores se fusionan, haciendo que el valor final sea: &lt;code&gt;form-control date-picker-theme-dark&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d0a837c87177ecd8e4cd4beb19f8c23e72ed9b09" translate="yes" xml:space="preserve">
          <source>For most object-based options, you can use the same strategy used by &lt;code&gt;methods&lt;/code&gt;:</source>
          <target state="translated">Para la mayor&amp;iacute;a de las opciones basadas en objetos, puede utilizar la misma estrategia que utilizan los &lt;code&gt;methods&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="079fe21cc823d55812a634a8c119ed4491fd69e2" translate="yes" xml:space="preserve">
          <source>For production, we recommend linking to a specific version number and build to avoid unexpected breakage from newer versions:</source>
          <target state="translated">Para la producción,recomendamos enlazar con un número de versión específico y construir para evitar roturas inesperadas de las versiones más recientes:</target>
        </trans-unit>
        <trans-unit id="bfe0d3e18701e6d75a26a86522437e9ae637b2e5" translate="yes" xml:space="preserve">
          <source>For prototyping or learning purposes, you can use the latest version with:</source>
          <target state="translated">Para la creación de prototipos o el aprendizaje,puede utilizar la última versión con:</target>
        </trans-unit>
        <trans-unit id="5495fda2474f4c57808bc121708bd27a76751c59" translate="yes" xml:space="preserve">
          <source>For radio, checkbox and select options, the &lt;code&gt;v-model&lt;/code&gt; binding values are usually static strings (or booleans for checkbox):</source>
          <target state="translated">Para las opciones de radio, casilla de verificaci&amp;oacute;n y selecci&amp;oacute;n, los valores de enlace del &lt;code&gt;v-model&lt;/code&gt; suelen ser cadenas est&amp;aacute;ticas (o booleanos para la casilla de verificaci&amp;oacute;n):</target>
        </trans-unit>
        <trans-unit id="eb997724620d308a038b97161b8c378aba0da047" translate="yes" xml:space="preserve">
          <source>For simplicity, &lt;code&gt;v-el&lt;/code&gt; and &lt;code&gt;v-ref&lt;/code&gt; have been merged into the &lt;code&gt;ref&lt;/code&gt; attribute, accessible on a component instance via &lt;code&gt;$refs&lt;/code&gt;. That means &lt;code&gt;v-el:my-element&lt;/code&gt; would become &lt;code&gt;ref=&quot;myElement&quot;&lt;/code&gt; and &lt;code&gt;v-ref:my-component&lt;/code&gt; would become &lt;code&gt;ref=&quot;myComponent&quot;&lt;/code&gt;. When used on a normal element, the &lt;code&gt;ref&lt;/code&gt; will be the DOM element, and when used on a component, the &lt;code&gt;ref&lt;/code&gt; will be the component instance.</source>
          <target state="translated">Para simplificar, &lt;code&gt;v-el&lt;/code&gt; y &lt;code&gt;v-ref&lt;/code&gt; se han fusionado en el atributo &lt;code&gt;ref&lt;/code&gt; , accesible en una instancia de componente a trav&amp;eacute;s de &lt;code&gt;$refs&lt;/code&gt; . Eso significa que &lt;code&gt;v-el:my-element&lt;/code&gt; se convertir&amp;iacute;a en &lt;code&gt;ref=&quot;myElement&quot;&lt;/code&gt; y &lt;code&gt;v-ref:my-component&lt;/code&gt; se convertir&amp;iacute;a en &lt;code&gt;ref=&quot;myComponent&quot;&lt;/code&gt; . Cuando se usa en un elemento normal, la &lt;code&gt;ref&lt;/code&gt; erencia ser&amp;aacute; el elemento DOM, y cuando se usa en un componente, la &lt;code&gt;ref&lt;/code&gt; erencia ser&amp;aacute; la instancia del componente.</target>
        </trans-unit>
        <trans-unit id="d2a3066945dc05ec1aac7c250f3d7947f3b1e0b5" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;.passive&lt;/code&gt;, &lt;code&gt;.capture&lt;/code&gt; and &lt;code&gt;.once&lt;/code&gt; event modifiers, Vue offers prefixes that can be used with &lt;code&gt;on&lt;/code&gt;:</source>
          <target state="translated">Para los &lt;code&gt;.passive&lt;/code&gt; , &lt;code&gt;.capture&lt;/code&gt; y &lt;code&gt;.once&lt;/code&gt; modificadores de eventos, Vue ofrece prefijos que se pueden utilizar con &lt;code&gt;on&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4f75221fb27ca7d747fd5afe72b749aa8a5d218f" translate="yes" xml:space="preserve">
          <source>For the HTML above, you decide you want this component interface:</source>
          <target state="translated">Para el HTML de arriba,decides que quieres esta interfaz de componentes:</target>
        </trans-unit>
        <trans-unit id="58f64ac9d01eaada8c5b4d73c9742574b3650194" translate="yes" xml:space="preserve">
          <source>For the most part, we also avoid suggestions about JavaScript or HTML in general. We don&amp;rsquo;t mind whether you use semicolons or trailing commas. We don&amp;rsquo;t mind whether your HTML uses single-quotes or double-quotes for attribute values. Some exceptions will exist however, where we&amp;rsquo;ve found that a particular pattern is helpful in the context of Vue.</source>
          <target state="translated">En su mayor parte, tambi&amp;eacute;n evitamos sugerencias sobre JavaScript o HTML en general. No nos importa si usa punto y coma o comas finales. No nos importa si su HTML utiliza comillas simples o dobles para los valores de los atributos. Sin embargo, existir&amp;aacute;n algunas excepciones en las que hemos descubierto que un patr&amp;oacute;n en particular es &amp;uacute;til en el contexto de Vue.</target>
        </trans-unit>
        <trans-unit id="382333fc9a3981c853d256439249bf9dd8adac77" translate="yes" xml:space="preserve">
          <source>For these cases, the &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; element has a special attribute, &lt;code&gt;name&lt;/code&gt;, which can be used to define additional slots:</source>
          <target state="translated">Para estos casos, el elemento &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; tiene un atributo especial, &lt;code&gt;name&lt;/code&gt; , que puede usarse para definir ranuras adicionales:</target>
        </trans-unit>
        <trans-unit id="cab05d6a03f13ecf11e09f8cd4a8521c92789cf2" translate="yes" xml:space="preserve">
          <source>For these reasons, we recommend you &lt;strong&gt;always use kebab-case for event names&lt;/strong&gt;.</source>
          <target state="translated">Por estas razones, le recomendamos que &lt;strong&gt;utilice siempre kebab-case para los nombres de los eventos&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="7422d6b54df4734e87a03b347852584179acad85" translate="yes" xml:space="preserve">
          <source>For this component, &lt;code&gt;children&lt;/code&gt; will give you both paragraphs, &lt;code&gt;slots().default&lt;/code&gt; will give you only the second, and &lt;code&gt;slots().foo&lt;/code&gt; will give you only the first. Having both &lt;code&gt;children&lt;/code&gt; and &lt;code&gt;slots()&lt;/code&gt; therefore allows you to choose whether this component knows about a slot system or perhaps delegates that responsibility to another component by passing along &lt;code&gt;children&lt;/code&gt;.</source>
          <target state="translated">Para este componente, los &lt;code&gt;children&lt;/code&gt; le dar&amp;aacute;n ambos p&amp;aacute;rrafos, &lt;code&gt;slots().default&lt;/code&gt; le dar&amp;aacute; solo el segundo, y &lt;code&gt;slots().foo&lt;/code&gt; le dar&amp;aacute; solo el primero. Por lo tanto, tener &lt;code&gt;children&lt;/code&gt; y &lt;code&gt;slots()&lt;/code&gt; permite elegir si este componente conoce un sistema de ranuras o quiz&amp;aacute;s delega esa responsabilidad a otro componente pasando &lt;code&gt;children&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="642f0a872b130e87234ba2ea02cd0acd1f89f0f7" translate="yes" xml:space="preserve">
          <source>For this to actually work though, the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; inside the component must:</source>
          <target state="translated">Sin embargo, para que esto realmente funcione, el &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; dentro del componente debe:</target>
        </trans-unit>
        <trans-unit id="f49d376a6de7473873ecab8b0255bfe983f0a381" translate="yes" xml:space="preserve">
          <source>Force the Vue instance to re-render. Note it does not affect all child components, only the instance itself and child components with inserted slot content.</source>
          <target state="translated">Obligar a la instancia de Vue a volver a presentarse.Tengan en cuenta que no afecta a todos los componentes hijos,sólo a la propia instancia y a los componentes hijos con contenido de ranura insertado.</target>
        </trans-unit>
        <trans-unit id="c6a1921854dd7346d5793a7190ade36dcd65a3ec" translate="yes" xml:space="preserve">
          <source>Forcing an Update</source>
          <target state="translated">Forzar una actualización</target>
        </trans-unit>
        <trans-unit id="3598258735d9462e35c71955d2aad478ee96de66" translate="yes" xml:space="preserve">
          <source>Form Input Bindings</source>
          <target state="translated">Formar los enlaces de entrada</target>
        </trans-unit>
        <trans-unit id="ea24491e797fa1205ee5f52da7150a0c400a5c95" translate="yes" xml:space="preserve">
          <source>Fortunately, if you&amp;rsquo;re using Webpack (or &lt;a href=&quot;https://github.com/vuejs/vue-cli&quot;&gt;Vue CLI 3+&lt;/a&gt;, which uses Webpack internally), you can use &lt;code&gt;require.context&lt;/code&gt; to globally register only these very common base components. Here&amp;rsquo;s an example of the code you might use to globally import base components in your app&amp;rsquo;s entry file (e.g. &lt;code&gt;src/main.js&lt;/code&gt;):</source>
          <target state="translated">Afortunadamente, si est&amp;aacute; usando Webpack (o &lt;a href=&quot;https://github.com/vuejs/vue-cli&quot;&gt;Vue CLI 3+&lt;/a&gt; , que usa Webpack internamente), puede usar &lt;code&gt;require.context&lt;/code&gt; para registrar globalmente solo estos componentes base muy comunes. A continuaci&amp;oacute;n, se muestra un ejemplo del c&amp;oacute;digo que puede usar para importar globalmente componentes base en el archivo de entrada de su aplicaci&amp;oacute;n (por ejemplo, &lt;code&gt;src/main.js&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="f4f1f7855db809feec9483f80786171f3900b2c2" translate="yes" xml:space="preserve">
          <source>Fortunately, since the new directives are much simpler, you can master them more easily. Read the new &lt;a href=&quot;custom-directive&quot;&gt;Custom Directives guide&lt;/a&gt; to learn more.</source>
          <target state="translated">Afortunadamente, dado que las nuevas directivas son mucho m&amp;aacute;s simples, puede dominarlas m&amp;aacute;s f&amp;aacute;cilmente. Lea la nueva &lt;a href=&quot;custom-directive&quot;&gt;gu&amp;iacute;a de Directivas personalizadas&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="4fd9ae517465a40e53760a54f6bec333ee06dca1" translate="yes" xml:space="preserve">
          <source>Fortunately, this task is made very simple by Vue&amp;rsquo;s custom &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; element:</source>
          <target state="translated">Afortunadamente, esta tarea es muy sencilla gracias al elemento &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; personalizado de Vue :</target>
        </trans-unit>
        <trans-unit id="c91f2670059f0276f8d6d89ac974fb50d086e473" translate="yes" xml:space="preserve">
          <source>Fragment Instances &lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">Instancias de fragmentos &lt;sup&gt;eliminadas&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="178ebb713b9cc3628fd4bcdf9a3650661449516a" translate="yes" xml:space="preserve">
          <source>From a security perspective, you should only use Vue templates that you can trust. Never use user-generated content as your template.</source>
          <target state="translated">Desde el punto de vista de la seguridad,sólo debes usar plantillas de Vue en las que puedas confiar.Nunca uses contenido generado por el usuario como tu plantilla.</target>
        </trans-unit>
        <trans-unit id="cb0a1c225bd8748f6348154b46c2de2332edb8a4" translate="yes" xml:space="preserve">
          <source>Full-word component names</source>
          <target state="translated">Nombres de los componentes con palabras completas</target>
        </trans-unit>
        <trans-unit id="3aa0c3eb248b1e714e0b69b9e72c94f2ab3623af" translate="yes" xml:space="preserve">
          <source>Full-word component names &lt;sup&gt;strongly recommended&lt;/sup&gt;</source>
          <target state="translated">Se &lt;sup&gt;recomiendan encarecidamente&lt;/sup&gt; nombres de componentes de palabra completa&lt;sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="f1e410ad1472b42cb42cc98962428637290b6706" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">Function</target>
        </trans-unit>
        <trans-unit id="c1c714fa2e5c3d3a4ea2ec4e1e55c1e860e21631" translate="yes" xml:space="preserve">
          <source>Function Shorthand</source>
          <target state="translated">Función Taquigrafía</target>
        </trans-unit>
        <trans-unit id="d66736d35977604554e47b985518c7ca79eb37e3" translate="yes" xml:space="preserve">
          <source>Functional Components</source>
          <target state="translated">Componentes funcionales</target>
        </trans-unit>
        <trans-unit id="37459d26665e23e74f757aae407f678185f79975" translate="yes" xml:space="preserve">
          <source>Functional components, however, require you to explicitly define this behavior:</source>
          <target state="translated">Sin embargo,los componentes funcionales requieren que se defina explícitamente este comportamiento:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
