<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="vue">
    <body>
      <group id="vue">
        <trans-unit id="fd37266b8e286538aff1b592e9199c7a1345df89" translate="yes" xml:space="preserve">
          <source>&quot;Great question!&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59474456feddb22f12b6496047fedda3049cd26a" translate="yes" xml:space="preserve">
          <source>&quot;Thanks for taking the time to explain. ðŸ™‚&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b6c6e7ac041597ca7766d0305bd369c31bbedcf" translate="yes" xml:space="preserve">
          <source>&quot;This is actually intentional, but thanks for taking the time to contribute. ðŸ˜Š&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ce1df0e2746f7c93fbc144132de6878d9e6c8f9" translate="yes" xml:space="preserve">
          <source>&quot;Why would we force component names to use less natural language?&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d90c72e019f82f09983905fd823512c950bb82e5" translate="yes" xml:space="preserve">
          <source>&quot;function that returns a function&quot; instead of &quot;higher order function&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3360189225217c5d0391ca2338aa0f8b0f965f38" translate="yes" xml:space="preserve">
          <source>&quot;you can use Vue with a script element&quot; instead of &quot;in order to initiate the usage of Vue, one possible option is to actually inject it via a script HTML element&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd1d90cfc8b9640bd47938c2d9380ee995fd6c09" translate="yes" xml:space="preserve">
          <source>$attrs</source>
          <target state="translated">$attrs</target>
        </trans-unit>
        <trans-unit id="76d6b45551072da143ab846dd0e17f9d5d1c23da" translate="yes" xml:space="preserve">
          <source>$children</source>
          <target state="translated">$children</target>
        </trans-unit>
        <trans-unit id="461e9bac5c124e13e943d74294b5b3c23e91e59a" translate="yes" xml:space="preserve">
          <source>$data</source>
          <target state="translated">$data</target>
        </trans-unit>
        <trans-unit id="102c05baf335ebefaca6d8938e451d716fbd6405" translate="yes" xml:space="preserve">
          <source>$el</source>
          <target state="translated">$el</target>
        </trans-unit>
        <trans-unit id="782530be65b83f6586269919a840310180912f47" translate="yes" xml:space="preserve">
          <source>$emit</source>
          <target state="translated">$emit</target>
        </trans-unit>
        <trans-unit id="7c64d0e4da17e60080f074482c14982569364748" translate="yes" xml:space="preserve">
          <source>$forceUpdate</source>
          <target state="translated">$forceUpdate</target>
        </trans-unit>
        <trans-unit id="33ddae78482bb861ded347de21b87b07dac4e4be" translate="yes" xml:space="preserve">
          <source>$nextTick</source>
          <target state="translated">$nextTick</target>
        </trans-unit>
        <trans-unit id="3a20f6eba8144ac5ff3abe86dfb68db3c4af639e" translate="yes" xml:space="preserve">
          <source>$on, $off and $once instance methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3c781b9525bfa0dff046b0ba2f5ac834f921221" translate="yes" xml:space="preserve">
          <source>$options</source>
          <target state="translated">$options</target>
        </trans-unit>
        <trans-unit id="45e7737b5f1d96d16a40213881d84a2a492be556" translate="yes" xml:space="preserve">
          <source>$parent</source>
          <target state="translated">$parent</target>
        </trans-unit>
        <trans-unit id="9e39346925589b05ed9ea301e59d4dc98ff3720d" translate="yes" xml:space="preserve">
          <source>$props</source>
          <target state="translated">$props</target>
        </trans-unit>
        <trans-unit id="04d2229912a610a57f89dd63f37f6d4cd475755c" translate="yes" xml:space="preserve">
          <source>$refs</source>
          <target state="translated">$refs</target>
        </trans-unit>
        <trans-unit id="b764ba81776db6e2c0d3c795e5f0fb4f7b3b3158" translate="yes" xml:space="preserve">
          <source>$root</source>
          <target state="translated">$root</target>
        </trans-unit>
        <trans-unit id="c1f2d08fa8a34a80f29c67c55ba8b52f43e7567f" translate="yes" xml:space="preserve">
          <source>$slots</source>
          <target state="translated">$slots</target>
        </trans-unit>
        <trans-unit id="1b3895b19cf78c81d9774182354058c7a9466aee" translate="yes" xml:space="preserve">
          <source>$watch</source>
          <target state="translated">$watch</target>
        </trans-unit>
        <trans-unit id="b8c7172f3cf1bf1a761d18229b15fde2a6261fa9" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2013&amp;ndash;present Yuxi Evan You</source>
          <target state="translated">&amp;copy; 2013 &amp;ndash; presente Yuxi Evan You</target>
        </trans-unit>
        <trans-unit id="b97356a77b6ffc38caada93b6cf0fe295416cc9e" translate="yes" xml:space="preserve">
          <source>&amp;hellip;as well as many smaller official &lt;a href=&quot;https://github.com/vuejs&quot;&gt;companion libraries&lt;/a&gt;.</source>
          <target state="translated">&amp;hellip; As&amp;iacute; como muchas &lt;a href=&quot;https://github.com/vuejs&quot;&gt;bibliotecas complementarias&lt;/a&gt; oficiales m&amp;aacute;s peque&amp;ntilde;as .</target>
        </trans-unit>
        <trans-unit id="eff4192dcc0805d6591a6a6cdb165cce361f146d" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Why would we force component names to use less natural language?&amp;rdquo;</source>
          <target state="translated">&quot;&amp;iquest;Por qu&amp;eacute; obligar&amp;iacute;amos a los nombres de los componentes a utilizar un lenguaje menos natural?&quot;</target>
        </trans-unit>
        <trans-unit id="0bb2d36a7cdc0316e1a6ba4bfab7bc310bcafbdf" translate="yes" xml:space="preserve">
          <source>...will generate this HTML:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de0c8e9ce197f029de95bbbc252be731c4ce809a" translate="yes" xml:space="preserve">
          <source>/ &lt;sup&gt;&amp;dagger;&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dbca386b3bf4c0c03ea3c64d065f726c26a64b7" translate="yes" xml:space="preserve">
          <source>1. Installation</source>
          <target state="translated">1.InstalaciÃ³n</target>
        </trans-unit>
        <trans-unit id="8964b933d266bc6ea7e3027896361049cfab4b4e" translate="yes" xml:space="preserve">
          <source>10. Form Input Bindings</source>
          <target state="translated">10.10.EncuadernaciÃ³n de los formularios de entrada</target>
        </trans-unit>
        <trans-unit id="b9a5886c311c7b0401052d6d6412c3df9478138b" translate="yes" xml:space="preserve">
          <source>11. Components Basics</source>
          <target state="translated">11.Componentes BÃ¡sicos</target>
        </trans-unit>
        <trans-unit id="9e1218c8ec0a4684d8527f3b30752b2ccdda1718" translate="yes" xml:space="preserve">
          <source>12. Component Registration</source>
          <target state="translated">12.Registro de componentes</target>
        </trans-unit>
        <trans-unit id="e2f8aadf9a91551c04909b2a7ed9615524cd115b" translate="yes" xml:space="preserve">
          <source>13. Props</source>
          <target state="translated">13Âº puntal</target>
        </trans-unit>
        <trans-unit id="b82ef3573be9cc2fe18ab976bec8e18e03412fab" translate="yes" xml:space="preserve">
          <source>14. Custom Events</source>
          <target state="translated">14.Eventos personalizados</target>
        </trans-unit>
        <trans-unit id="d910a71e7ae47d83952f1d3e1b63e02b0402ccee" translate="yes" xml:space="preserve">
          <source>15. Slots</source>
          <target state="translated">15Âº puesto...</target>
        </trans-unit>
        <trans-unit id="6c967d0c8304615157e96973d0292b620e53f664" translate="yes" xml:space="preserve">
          <source>16. Dynamic &amp;amp; Async Components</source>
          <target state="translated">16. Componentes din&amp;aacute;micos y asincr&amp;oacute;nicos</target>
        </trans-unit>
        <trans-unit id="9c275abba821c6e0588340a5e0e40376f2e406cd" translate="yes" xml:space="preserve">
          <source>17. Handling Edge Cases</source>
          <target state="translated">17.Manejo de los casos de borde</target>
        </trans-unit>
        <trans-unit id="faa2211daf731c093bbdc5d6f04ee1e61cdaab78" translate="yes" xml:space="preserve">
          <source>18. Enter/Leave &amp;amp; List Transitions</source>
          <target state="translated">18. Transiciones de entrada / salida y lista</target>
        </trans-unit>
        <trans-unit id="2a2419fca4136af3c93e0857966a07747966e4b8" translate="yes" xml:space="preserve">
          <source>19. State Transitions</source>
          <target state="translated">19.Transiciones de Estado</target>
        </trans-unit>
        <trans-unit id="87420499beeea7a738a1aa5ae8eb643442f6bb7e" translate="yes" xml:space="preserve">
          <source>2.x &amp;ldquo;Enumerated attrs&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b066d2c65c7687dc39bb1774764e3819688ae227" translate="yes" xml:space="preserve">
          <source>2.x Behavior</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d45ef206763bf6995eebc7719ebd6bd26ccacff" translate="yes" xml:space="preserve">
          <source>2.x Global API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="619e05791b4ca1be0e763f8b16b6b057babddc72" translate="yes" xml:space="preserve">
          <source>2.x Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30e1b4ef7660ce383aaae5dbb426186bb7438c00" translate="yes" xml:space="preserve">
          <source>2.x behavior: renders the &lt;code&gt;bar&lt;/code&gt; component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf4c197fa01335d70a4a88eeae745dc8c997580a" translate="yes" xml:space="preserve">
          <source>2.x behavior: renders the &lt;code&gt;plastic-button&lt;/code&gt; component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73f25bae7e053e89231ddc30bff222edbd0e367f" translate="yes" xml:space="preserve">
          <source>20. Mixins</source>
          <target state="translated">20.Mixins</target>
        </trans-unit>
        <trans-unit id="699f909d8d594e7ff956530e16ace7b55a03358f" translate="yes" xml:space="preserve">
          <source>21. Custom Directives</source>
          <target state="translated">21.Directivas aduaneras</target>
        </trans-unit>
        <trans-unit id="60d6452e1a1924d83cd5596509761e79f3863ac8" translate="yes" xml:space="preserve">
          <source>22. Render Functions &amp;amp; JSX</source>
          <target state="translated">22. Funciones de renderizado y JSX</target>
        </trans-unit>
        <trans-unit id="bec6f50c2ff413780baaa0915d1254fdd7fb847c" translate="yes" xml:space="preserve">
          <source>23. Plugins</source>
          <target state="translated">23.Plugins</target>
        </trans-unit>
        <trans-unit id="b728064106e62a6376b6b3ca966a5ec1cb7785fc" translate="yes" xml:space="preserve">
          <source>24. Filters</source>
          <target state="translated">24.filtros</target>
        </trans-unit>
        <trans-unit id="67a8b968f2a3387e367b56c7a54b238e7ca0866d" translate="yes" xml:space="preserve">
          <source>25. Single File Components</source>
          <target state="translated">25.Componentes de un solo archivo</target>
        </trans-unit>
        <trans-unit id="42078e213f52263ef4d08a363fbd525c2fcece33" translate="yes" xml:space="preserve">
          <source>26. Unit Testing</source>
          <target state="translated">26.Prueba de la unidad</target>
        </trans-unit>
        <trans-unit id="580a6d9842694c98cbe2ab49416f18bb1e659070" translate="yes" xml:space="preserve">
          <source>27. TypeScript Support</source>
          <target state="translated">27.Soporte de TypeScript</target>
        </trans-unit>
        <trans-unit id="6faa6b6ac924fea93632b44cbd364f9cd7e712f3" translate="yes" xml:space="preserve">
          <source>28. Production Deployment</source>
          <target state="translated">28.Despliegue de la producciÃ³n</target>
        </trans-unit>
        <trans-unit id="84abccad514ba03d3e5079c5c4d1d55a32bf53a9" translate="yes" xml:space="preserve">
          <source>29. Routing</source>
          <target state="translated">29.Enrutamiento</target>
        </trans-unit>
        <trans-unit id="cc829e856a51b840c7cc2a5cdfd95d3491ff0ba1" translate="yes" xml:space="preserve">
          <source>3. The Vue Instance</source>
          <target state="translated">3.La instancia de Vue</target>
        </trans-unit>
        <trans-unit id="75563ef1a8f2abdfbac0b932840c8674dc934bc0" translate="yes" xml:space="preserve">
          <source>3.x Behavior</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="027534d7c708d9744dd7c39bd50712e9b2edddcd" translate="yes" xml:space="preserve">
          <source>3.x Instance API (&lt;code&gt;app&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd4cead102a4c98ce606b71b76e4cd4a828424e0" translate="yes" xml:space="preserve">
          <source>3.x Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5849d64c9de846be8c0bbbf9a220773b2a54d46" translate="yes" xml:space="preserve">
          <source>3.x Update</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9824cc5bf735e3d796bf8bb081332718de5ac928" translate="yes" xml:space="preserve">
          <source>3.x behavior: renders a native button by calling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcb70032a0e4e225a0eaedb099bfd7f03b446b52" translate="yes" xml:space="preserve">
          <source>3.x behavior: renders the &lt;code&gt;foo&lt;/code&gt; component and passing the &lt;code&gt;is&lt;/code&gt; prop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d00b5152c73d6d149b0981c2f8243352bc147acf" translate="yes" xml:space="preserve">
          <source>30. State Management</source>
          <target state="translated">30.GestiÃ³n del Estado</target>
        </trans-unit>
        <trans-unit id="b6429ebb7b452c14364705bceb98a6993124fa08" translate="yes" xml:space="preserve">
          <source>31. Server-Side Rendering</source>
          <target state="translated">31Âª representaciÃ³n del lado del servidor</target>
        </trans-unit>
        <trans-unit id="05c5743ac40d4671baf7c74ddec425f43cc60c5c" translate="yes" xml:space="preserve">
          <source>32. Reactivity in Depth</source>
          <target state="translated">32.Reactividad en profundidad</target>
        </trans-unit>
        <trans-unit id="1d2180d5f0cfee1568a6c1ea885be149c73b2c9b" translate="yes" xml:space="preserve">
          <source>33. Migration from Vue 1.x</source>
          <target state="translated">33.MigraciÃ³n desde el Vue 1.x</target>
        </trans-unit>
        <trans-unit id="5390b18d7effc1031fdb531adf7031ed76936054" translate="yes" xml:space="preserve">
          <source>34. Migration from Vue Router 0.7.x</source>
          <target state="translated">34.MigraciÃ³n desde el Vue Router 0.7.x</target>
        </trans-unit>
        <trans-unit id="76884682b4af0e44f1ffd32c984cf3cd73c5c306" translate="yes" xml:space="preserve">
          <source>35. Migration from Vuex 0.6.x to 1.0</source>
          <target state="translated">35.MigraciÃ³n de Vuex 0.6.x a 1.0</target>
        </trans-unit>
        <trans-unit id="4b1b3e3b6224147e7f5d89f67ee3ae82e8c71180" translate="yes" xml:space="preserve">
          <source>36. Comparison with Other Frameworks</source>
          <target state="translated">36.ComparaciÃ³n con otros marcos</target>
        </trans-unit>
        <trans-unit id="36f6e824946359fdef7a63d5046de288f4c01ea2" translate="yes" xml:space="preserve">
          <source>37. Join the Vue.js Community!</source>
          <target state="translated">37.Â¡Ãšnete a la comunidad Vue.js!</target>
        </trans-unit>
        <trans-unit id="c0ac8db35605bf4fc8e68109c9e46fadaff9f8d6" translate="yes" xml:space="preserve">
          <source>3rd-party UI components.</source>
          <target state="translated">Componentes de UI de terceros.</target>
        </trans-unit>
        <trans-unit id="a9c179dae7db7b392dd9a6049dfad4a7634acb24" translate="yes" xml:space="preserve">
          <source>4. Template Syntax</source>
          <target state="translated">4.sintaxis de la plantilla</target>
        </trans-unit>
        <trans-unit id="27f7ce4b8acce3d493a977c09473e336fd2af2e3" translate="yes" xml:space="preserve">
          <source>5. Computed Properties and Watchers</source>
          <target state="translated">5.Propiedades computarizadas y observadores</target>
        </trans-unit>
        <trans-unit id="adc7977c2ddba6d92894c433ab24ceb3e9573c1d" translate="yes" xml:space="preserve">
          <source>6. Class and Style Bindings</source>
          <target state="translated">6.Clase y estilo de encuadernaciÃ³n</target>
        </trans-unit>
        <trans-unit id="d5b9c86d96711a24d3868259412d32ec0a2f74f4" translate="yes" xml:space="preserve">
          <source>7. Conditional Rendering</source>
          <target state="translated">7.RendiciÃ³n condicional</target>
        </trans-unit>
        <trans-unit id="ef2a0e262fc4215ab0bfa1c909d4d2e29df6e47c" translate="yes" xml:space="preserve">
          <source>8. List Rendering</source>
          <target state="translated">8.RenderizaciÃ³n de la lista</target>
        </trans-unit>
        <trans-unit id="41ef0a9157fa7065ed58edc6614faa2eb0f0008f" translate="yes" xml:space="preserve">
          <source>9. Event Handling</source>
          <target state="translated">9.Manejo de eventos</target>
        </trans-unit>
        <trans-unit id="887554d77a246d3737dd86e656072601c935f967" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#Transition-Modes&quot;&gt;Transition modes&lt;/a&gt; are not available, because we are no longer alternating between mutually exclusive elements.</source>
          <target state="translated">&lt;a href=&quot;#Transition-Modes&quot;&gt;Los modos de transici&amp;oacute;n&lt;/a&gt; no est&amp;aacute;n disponibles porque ya no estamos alternando entre elementos mutuamente excluyentes.</target>
        </trans-unit>
        <trans-unit id="cfb244f6fa9d3019d501df94f0e20f65c60944b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../guide/component-slots#abbreviated-syntax-for-lone-default-slots&quot;&gt;components&lt;/a&gt; (for a lone default slot with props)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8946b6378480cdcb83f37bafcdb51528405184b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../guide/components-slots#Abbreviated-Syntax-for-Lone-Default-Slots&quot;&gt;components&lt;/a&gt; (for a lone default slot with props)</source>
          <target state="translated">&lt;a href=&quot;../guide/components-slots#Abbreviated-Syntax-for-Lone-Default-Slots&quot;&gt;componentes&lt;/a&gt; (para una &amp;uacute;nica ranura predeterminada con accesorios)</target>
        </trans-unit>
        <trans-unit id="5ea416a3156c7da0f6ead07af8d4bead22fed303" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../guide/forms#lazy&quot;&gt;&lt;code&gt;.lazy&lt;/code&gt;&lt;/a&gt; - listen to &lt;code&gt;change&lt;/code&gt; events instead of &lt;code&gt;input&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../guide/forms#lazy&quot;&gt; &lt;code&gt;.lazy&lt;/code&gt; &lt;/a&gt; : escucha loseventos de &lt;code&gt;change&lt;/code&gt; lugar de la &lt;code&gt;input&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c200fcd86955d47b04f4c437e92ab0c7d16a07d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../guide/forms#number&quot;&gt;&lt;code&gt;.number&lt;/code&gt;&lt;/a&gt; - cast valid input string to numbers</source>
          <target state="translated">&lt;a href=&quot;../guide/forms#number&quot;&gt; &lt;code&gt;.number&lt;/code&gt; &lt;/a&gt; : convierte una cadena de entrada v&amp;aacute;lida en n&amp;uacute;meros</target>
        </trans-unit>
        <trans-unit id="023e9430bafd9961c9b01baf8909eff9ec8e9416" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../guide/forms#trim&quot;&gt;&lt;code&gt;.trim&lt;/code&gt;&lt;/a&gt; - trim input</source>
          <target state="translated">&lt;a href=&quot;../guide/forms#trim&quot;&gt; &lt;code&gt;.trim&lt;/code&gt; &lt;/a&gt; - entrada de recorte</target>
        </trans-unit>
        <trans-unit id="38cbf480746340dd9a2787f3854345127a766612" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;components#Form-Input-Components-using-Custom-Events&quot;&gt;Custom input components&lt;/a&gt; (using component events)</source>
          <target state="translated">&lt;a href=&quot;components#Form-Input-Components-using-Custom-Events&quot;&gt;Componentes de entrada personalizados&lt;/a&gt; (usando eventos de componentes)</target>
        </trans-unit>
        <trans-unit id="80c30c9028922fec95fa0b072c22af716a9a77db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://capacitorjs.com/&quot;&gt;Capacitor (opens new window)&lt;/a&gt; is a project from the &lt;a href=&quot;https://ionic.io/&quot;&gt;Ionic Team (opens new window)&lt;/a&gt; that allows developers to build native iOS, Android, and PWA apps with a single codebase by providing an API that can be run across multiple platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1007e9c3919c707510c9682a8e8008286b6d951" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://chat.vuejs.org/&quot;&gt;Chat&lt;/a&gt;: A place for Vue devs to meet and chat in real time.</source>
          <target state="translated">&lt;a href=&quot;https://chat.vuejs.org/&quot;&gt;Chat&lt;/a&gt; : un lugar para que los desarrolladores de Vue se re&amp;uacute;nan y conversen en tiempo real.</target>
        </trans-unit>
        <trans-unit id="6f70dd6b41a79c161ae02e07feaa17cb4811d643" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://cli.vuejs.org&quot;&gt;Vue CLI (opens new window)&lt;/a&gt; provides built-in TypeScript tooling support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b81d139f6b2fd0485b15a6de8e676f9a6ad01aa8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://cli.vuejs.org&quot;&gt;Vue CLI&lt;/a&gt; provides built-in TypeScript tooling support.</source>
          <target state="translated">&lt;a href=&quot;https://cli.vuejs.org&quot;&gt;Vue CLI&lt;/a&gt; proporciona compatibilidad con herramientas TypeScript incorporadas.</target>
        </trans-unit>
        <trans-unit id="64cdcc93f712af397e60ea4aa0e435155a0b6061" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://cli.vuejs.org/&quot;&gt;Vue CLI&lt;/a&gt; has built-in options for unit testing with &lt;a href=&quot;https://github.com/facebook/jest&quot;&gt;Jest&lt;/a&gt; or &lt;a href=&quot;https://mochajs.org/&quot;&gt;Mocha&lt;/a&gt; that works out of the box. We also have the official &lt;a href=&quot;https://vue-test-utils.vuejs.org/&quot;&gt;Vue Test Utils&lt;/a&gt; which provides more detailed guidance for custom setups.</source>
          <target state="translated">&lt;a href=&quot;https://cli.vuejs.org/&quot;&gt;Vue CLI&lt;/a&gt; tiene opciones integradas para pruebas unitarias con &lt;a href=&quot;https://github.com/facebook/jest&quot;&gt;Jest&lt;/a&gt; o &lt;a href=&quot;https://mochajs.org/&quot;&gt;Mocha&lt;/a&gt; que funcionan desde el primer momento. Tambi&amp;eacute;n contamos con &lt;a href=&quot;https://vue-test-utils.vuejs.org/&quot;&gt;Vue Test Utils,&lt;/a&gt; que proporciona una gu&amp;iacute;a m&amp;aacute;s detallada para configuraciones personalizadas.</target>
        </trans-unit>
        <trans-unit id="0b712b72f34628fd7aa1786a45a695e227362ffe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_aria-describedby_attribute&quot;&gt;aria-describedby (opens new window)&lt;/a&gt; is used the same way as &lt;code&gt;aria-labelledby&lt;/code&gt; expect provides a description with additional information that the user might need. This can be used to describe the criteria for any input:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0be741d1b1ffd6bc7f49eb600d14f94b06b2f400" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://events.vuejs.org/meetups&quot;&gt;Meetups&lt;/a&gt;: Want to find local Vue.js enthusiasts like yourself? Interested in becoming a community leader? We have the help and support you need right here!</source>
          <target state="translated">&lt;a href=&quot;https://events.vuejs.org/meetups&quot;&gt;Meetups&lt;/a&gt; : &amp;iquest;Quieres encontrar entusiastas locales de Vue.js como t&amp;uacute;? &amp;iquest;Interesado en convertirse en un l&amp;iacute;der comunitario? &amp;iexcl;Tenemos la ayuda y el apoyo que necesita aqu&amp;iacute; mismo!</target>
        </trans-unit>
        <trans-unit id="5e414217ab56b454e3a38cc1e8d16f3eba5f33e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://forum.vuejs.org/&quot;&gt;Forum&lt;/a&gt;: The best place to ask questions and get answers about Vue and its ecosystem.</source>
          <target state="translated">&lt;a href=&quot;https://forum.vuejs.org/&quot;&gt;Foro&lt;/a&gt; : el mejor lugar para hacer preguntas y obtener respuestas sobre Vue y su ecosistema.</target>
        </trans-unit>
        <trans-unit id="c96b36e4b4daac6ceb112f942cf30b81b67655e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://forum.vuejs.org/c/show-and-tell&quot;&gt;The &amp;ldquo;Show and Tell&amp;rdquo; Subforum&lt;/a&gt;: Another great place to check out what others have built with and for the growing Vue ecosystem.</source>
          <target state="translated">&lt;a href=&quot;https://forum.vuejs.org/c/show-and-tell&quot;&gt;El subforo &quot;Show and Tell&quot;&lt;/a&gt; : otro gran lugar para ver lo que otros han construido con y para el creciente ecosistema de Vue.</target>
        </trans-unit>
        <trans-unit id="3c3f99fb796579d999a0383166f2781ffa751b47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/vitejs/vite&quot;&gt;Vite (opens new window)&lt;/a&gt; is a web development build tool that allows for lightning fast serving of code due its native ES Module import approach.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c9416e3d56f054156a5b07bec2cb3af739416db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/vuejs&quot;&gt;GitHub&lt;/a&gt;: If you have a bug to report or feature to request, that&amp;rsquo;s what the GitHub issues are for. We also welcome pull requests!</source>
          <target state="translated">&lt;a href=&quot;https://github.com/vuejs&quot;&gt;GitHub&lt;/a&gt; : si tiene un error que informar o una funci&amp;oacute;n que solicitar, para eso est&amp;aacute;n los problemas de GitHub. &amp;iexcl;Tambi&amp;eacute;n aceptamos solicitudes de extracci&amp;oacute;n!</target>
        </trans-unit>
        <trans-unit id="abb3c60b38a18d98149dafcd5aa19f6e72eb6052" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/vuejs/awesome-vue&quot;&gt;The Awesome Vue Page&lt;/a&gt;: See what other awesome resources have been published by other awesome people.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/vuejs/awesome-vue&quot;&gt;La p&amp;aacute;gina Awesome Vue&lt;/a&gt; : vea qu&amp;eacute; otros recursos incre&amp;iacute;bles han sido publicados por otras personas incre&amp;iacute;bles.</target>
        </trans-unit>
        <trans-unit id="abeecfeab02f9ccbb4a7bc048d632081bab54569" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/vuejs/rfcs/blob/sfc-improvements/active-rfcs/0000-sfc-script-setup.md&quot;&gt;SFC Composition API Syntax Sugar (&lt;code&gt;&amp;lt;script setup&amp;gt;&lt;/code&gt;) (opens new window)&lt;/a&gt;experimental</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11197c2c8a3de35252a6796f2edcbcbebf956265" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/vuejs/rfcs/blob/sfc-improvements/active-rfcs/0000-sfc-style-variables.md&quot;&gt;SFC State-driven CSS Variables (&lt;code&gt;&amp;lt;style vars&amp;gt;&lt;/code&gt;) (opens new window)&lt;/a&gt;experimental</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b87ee67a7a910f0b54aaf316865d862fd01c83" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/vuejs/vue&quot;&gt;vue&lt;/a&gt;: the core library</source>
          <target state="translated">&lt;a href=&quot;https://github.com/vuejs/vue&quot;&gt;vue&lt;/a&gt; : la biblioteca central</target>
        </trans-unit>
        <trans-unit id="33fdd86cc537d1c9d8633706ed8f0059ac3ae988" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/vuejs/vue-cli&quot;&gt;Vue CLI (opens new window)&lt;/a&gt; can generate new projects that use TypeScript. To get started:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="300fc9a9c559ca1e6d722017a96838529709653b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/vuejs/vue-cli&quot;&gt;Vue CLI 3&lt;/a&gt; can generate new projects that use TypeScript. To get started:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/vuejs/vue-cli&quot;&gt;Vue CLI 3&lt;/a&gt; puede generar nuevos proyectos que usan TypeScript. Para empezar:</target>
        </trans-unit>
        <trans-unit id="93dd74353b2434b35ff5b54b75b8fb09a61f43b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/vuejs/vue-next/tree/master/packages/runtime-core&quot;&gt;&lt;code&gt;createRenderer&lt;/code&gt; API from &lt;code&gt;@vue/runtime-core&lt;/code&gt; (opens new window)&lt;/a&gt; to create custom renderers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="751e6e361e84ac596e6497fe8b6af4793ea2ed5c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/vuejs/vue-router&quot;&gt;vue-router&lt;/a&gt;: a routing system for SPAs</source>
          <target state="translated">&lt;a href=&quot;https://github.com/vuejs/vue-router&quot;&gt;vue-router&lt;/a&gt; : un sistema de enrutamiento para SPA</target>
        </trans-unit>
        <trans-unit id="1c040bcb32d8345e9b906fa42b87e6d805594532" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/vuejs/vuex&quot;&gt;vuex&lt;/a&gt;: Flux-inspired state management</source>
          <target state="translated">&lt;a href=&quot;https://github.com/vuejs/vuex&quot;&gt;vuex&lt;/a&gt; : gesti&amp;oacute;n de estados inspirada en Flux</target>
        </trans-unit>
        <trans-unit id="6c8dcd499407ddbe29f160ae44df2dcb1fccf44b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://lmiller1990.github.io/vue-testing-handbook/v3/#what-is-this-guide&quot;&gt;Vue Testing Handbook (opens new window)&lt;/a&gt; by Lachlan Miller</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33b2f73193f3a304e72ec95386ece440967b653c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=streetsidesoftware.code-spell-checker&quot;&gt;Code Spell Checker (opens new window)&lt;/a&gt;: An extension for VS Code to help you check spelling within markdown and code examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fbe3d0b35e6316189ce0229728fc261f4f34a25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://quasar.dev&quot;&gt;Quasar Framework (opens new window)&lt;/a&gt; will generate an SSR app (with optional PWA handoff) that leverages its best-in-class build system, sensible configuration and developer extensibility to make designing and building your idea a breeze. With over one hundred specific &quot;Material Design 2.0&quot;-compliant components, you can decide which ones to execute on the server, which are available in the browser, and even manage the &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tags of your site. Quasar is a node.js and webpack based development environment that supercharges and streamlines rapid development of SPA, PWA, SSR, Electron, Capacitor and Cordova apps&amp;mdash;all from one codebase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3512a9d95784d66e813e4d16e5ebb712f869e615" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://quasar.dev&quot;&gt;Quasar Framework&lt;/a&gt; will generate an SSR app (with optional PWA handoff) that leverages its best-in-class build system, sensible configuration and developer extensibility to make designing and building your idea a breeze. With over one hundred specific &amp;ldquo;Material Design 2.0&amp;rdquo;-compliant components, you can decide which ones to execute on the server, which are available in the browser - and even manage the &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tags of your site. Quasar is a node.js and webpack based development environment that supercharges and streamlines rapid development of SPA, PWA, SSR, Electron and Cordova apps - all from one codebase.</source>
          <target state="translated">&lt;a href=&quot;https://quasar.dev&quot;&gt;Quasar Framework&lt;/a&gt; generar&amp;aacute; una aplicaci&amp;oacute;n SSR (con transferencia de PWA opcional) que aprovecha su sistema de compilaci&amp;oacute;n, el mejor en su clase, la configuraci&amp;oacute;n sensible y la extensibilidad del desarrollador para facilitar el dise&amp;ntilde;o y la construcci&amp;oacute;n de su idea. Con m&amp;aacute;s de cien componentes espec&amp;iacute;ficos compatibles con &amp;ldquo;Material Design 2.0&amp;rdquo;, puede decidir cu&amp;aacute;les ejecutar en el servidor, cu&amp;aacute;les est&amp;aacute;n disponibles en el navegador, e incluso administrar las etiquetas &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; de su sitio. Quasar es un entorno de desarrollo basado en node.js y webpack que potencia y agiliza el r&amp;aacute;pido desarrollo de las aplicaciones SPA, PWA, SSR, Electron y Cordova, todo desde una base de c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="01ff36f1a4078703622b4159aba4fe89d233aa39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://router.vuejs.org/en/essentials/nested-routes.html&quot;&gt;Renamed to &lt;code&gt;children&lt;/code&gt;&lt;/a&gt; for consistency within Vue and with other routing libraries.</source>
          <target state="translated">&lt;a href=&quot;https://router.vuejs.org/en/essentials/nested-routes.html&quot;&gt;Renombrado a &lt;code&gt;children&lt;/code&gt; &lt;/a&gt; para mayor coherencia dentro de Vue y con otras bibliotecas de enrutamiento.</target>
        </trans-unit>
        <trans-unit id="6d2821c7cc398070f39b87bbc473e8c422a388ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://vue-loader.vuejs.org/en/configurations/extract-css.html&quot;&gt;Webpack + vue-loader (opens new window)&lt;/a&gt; (the &lt;code&gt;vue-cli&lt;/code&gt; webpack template has this pre-configured)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4851d6df302005b75be1afa213e677baac7da98" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://vue-loader.vuejs.org/en/configurations/extract-css.html&quot;&gt;Webpack + vue-loader&lt;/a&gt; (the &lt;code&gt;vue-cli&lt;/code&gt; webpack template has this pre-configured)</source>
          <target state="translated">&lt;a href=&quot;https://vue-loader.vuejs.org/en/configurations/extract-css.html&quot;&gt;Webpack + vue-loader&lt;/a&gt; (la plantilla de paquete web &lt;code&gt;vue-cli&lt;/code&gt; tiene esto preconfigurado)</target>
        </trans-unit>
        <trans-unit id="29e0a9da24e832469f04f345d462ff4a580fd3dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://vuejs.org/js/vue.js&quot;&gt;Development Version&lt;/a&gt;With full warnings and debug mode</source>
          <target state="translated">&lt;a href=&quot;https://vuejs.org/js/vue.js&quot;&gt;Versi&amp;oacute;n de desarrollo&lt;/a&gt; con advertencias completas y modo de depuraci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="c5535548f8b3427b8379f5165f127b54b02c7ab9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://vuejs.org/js/vue.min.js&quot;&gt;Production Version&lt;/a&gt;Warnings stripped, 33.30KB min+gzip</source>
          <target state="translated">&lt;a href=&quot;https://vuejs.org/js/vue.min.js&quot;&gt;&lt;/a&gt;Eliminaci&amp;oacute;n de las advertencias de la versi&amp;oacute;n de producci&amp;oacute;n , 33,30 KB min + gzip</target>
        </trans-unit>
        <trans-unit id="05cbb11486b0d44a91f7051331fe25dcb8a21ee4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.amazon.com/Bird-Some-Instructions-Writing-Life/dp/0385480016&quot;&gt;Bird by Bird (opens new window)&lt;/a&gt; (see &lt;a href=&quot;https://www.goodreads.com/work/quotes/841198-bird-by-bird-some-instructions-on-writing-and-life&quot;&gt;popular quotes (opens new window)&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a285adb22c8a61f46105e68e99fc18c528953dc5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.amazon.com/Writing-Well-30th-Anniversary-Nonfiction-ebook/dp/B0090RVGW0&quot;&gt;On Writing Well (opens new window)&lt;/a&gt; (see &lt;a href=&quot;https://www.goodreads.com/work/quotes/1139032-on-writing-well-the-classic-guide-to-writing-nonfiction&quot;&gt;popular quotes (opens new window)&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="373655f6118198e479b912d4c1ee5d51ee504af4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.grammarly.com/&quot;&gt;Grammarly (opens new window)&lt;/a&gt;: Desktop app and browser extension for checking spelling and grammar (though grammar checking doesn't catch everything and occasionally shows a false positive).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="340f4ce631ce5ce4f9a30dbf5b0244811debc916" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.jetbrains.com/webstorm/&quot;&gt;WebStorm (opens new window)&lt;/a&gt; also provides out-of-the-box support for both TypeScript and Vue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="337e7a73326212a8fb1169c963d8c533ca85517e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.jetbrains.com/webstorm/&quot;&gt;WebStorm&lt;/a&gt; also provides out-of-the-box support for both TypeScript and Vue.</source>
          <target state="translated">&lt;a href=&quot;https://www.jetbrains.com/webstorm/&quot;&gt;WebStorm&lt;/a&gt; tambi&amp;eacute;n proporciona soporte listo para usar tanto para TypeScript como para Vue.</target>
        </trans-unit>
        <trans-unit id="352cf507f11e3a6267680a0cfd59cdf3157336a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.nativescript.org&quot;&gt;NativeScript (opens new window)&lt;/a&gt; powers cross-platform (truly native) mobile apps, using the web skills you already know. Combined they are a fantastic pair for developing immersive mobile experiences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64645c097331c6090958f8e2e2201b9f15735034" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.w3.org/TR/WCAG21/&quot;&gt;WCAG 2.1 (opens new window)&lt;/a&gt; extends on &lt;a href=&quot;https://www.w3.org/TR/WCAG20/&quot;&gt;WCAG 2.0 (opens new window)&lt;/a&gt; and allows implementation of new technologies by addressing changes to the web. The W3C encourages use of the most current version of WCAG when developing or updating Web accessibility policies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67e14888fa6900e7c0f6f9d94307057f36ccec73" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;single-file-components&quot;&gt;Single-file components&lt;/a&gt; give you full access to CSS in the same file as the rest of your component code.</source>
          <target state="translated">&lt;a href=&quot;single-file-components&quot;&gt;Los componentes de un solo archivo le&lt;/a&gt; brindan acceso completo a CSS en el mismo archivo que el resto del c&amp;oacute;digo de su componente.</target>
        </trans-unit>
        <trans-unit id="f26d35f481df6103bff19f2ad4d7131ce1e33f29" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syntax#Dynamic-Arguments&quot;&gt;Dynamic directive arguments&lt;/a&gt; also work on &lt;code&gt;v-slot&lt;/code&gt;, allowing the definition of dynamic slot names:</source>
          <target state="translated">&lt;a href=&quot;syntax#Dynamic-Arguments&quot;&gt;Los argumentos de la directiva din&amp;aacute;mica&lt;/a&gt; tambi&amp;eacute;n funcionan en &lt;code&gt;v-slot&lt;/code&gt; , lo que permite la definici&amp;oacute;n de nombres de slots din&amp;aacute;micos:</target>
        </trans-unit>
        <trans-unit id="092d0c8f0cd7f716a52b45575c319e01b7dea068" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;template-syntax#dynamic-arguments&quot;&gt;Dynamic directive arguments&lt;/a&gt; also work on &lt;code&gt;v-slot&lt;/code&gt;, allowing the definition of dynamic slot names:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a359a5ab9e5f91b1a63342e42c3efc0a574814" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;transitions-enterleave#transition-modes&quot;&gt;Transition modes&lt;/a&gt; are not available, because we are no longer alternating between mutually exclusive elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8129bf9cf8def21e2ada7b1cb80b61d3bd655e59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$attrs&lt;/code&gt; contains &lt;em&gt;all&lt;/em&gt; attributes, which makes it easier to apply all of them to a different element. The example from above now generates the following HTML:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="652c4ae50892e49ee7d4ed4a19d91d8b368e7ed5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$attrs&lt;/code&gt; includes &lt;code&gt;class&lt;/code&gt; &amp;amp; &lt;code&gt;style&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4810e17a813e9e27f1205dc76a802601fb9188a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$attrs&lt;/code&gt; now contains &lt;em&gt;all&lt;/em&gt; attributes passed to a component, including &lt;code&gt;class&lt;/code&gt; and &lt;code&gt;style&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8738b900aa9bf58737b38139acb16aff0ee49935" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$attrs&lt;/code&gt; now includes &lt;code&gt;class&lt;/code&gt; and &lt;code&gt;style&lt;/code&gt; attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="654831ec65302fae6c1e59aa9eede1026b27b815" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$children&lt;/code&gt; instance property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e3a5ea8aa587586573918f02ceb92746c92318a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$destroy&lt;/code&gt; instance method. Users should no longer manually manage the lifecycle of individual Vue components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4596cc5b9345e4e289feda6ade9a9fb167d3329" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$dispatch&lt;/code&gt; and &lt;code&gt;$broadcast&lt;/code&gt; have been removed in favor of more explicitly cross-component communication and more maintainable state management solutions, such as &lt;a href=&quot;https://github.com/vuejs/vuex&quot;&gt;Vuex&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;$dispatch&lt;/code&gt; y &lt;code&gt;$broadcast&lt;/code&gt; se han eliminado a favor de una comunicaci&amp;oacute;n entre componentes m&amp;aacute;s expl&amp;iacute;cita y soluciones de gesti&amp;oacute;n de estado m&amp;aacute;s &lt;a href=&quot;https://github.com/vuejs/vuex&quot;&gt;f&amp;aacute;ciles de&lt;/a&gt; mantener, como Vuex .</target>
        </trans-unit>
        <trans-unit id="b9df513f27287d2cbd9f8eeee5d59a0830e2c785" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$dispatch&lt;/code&gt; and &lt;code&gt;$broadcast&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;$dispatch&lt;/code&gt; y &lt;code&gt;$broadcast&lt;/code&gt; &lt;sup&gt;reemplazados&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="a02a3e7f3affe28368061200607ab7b786ff99fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$index&lt;/code&gt; and &lt;code&gt;$key&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;$index&lt;/code&gt; y &lt;code&gt;$key&lt;/code&gt; &lt;sup&gt;eliminados&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9c182dc235c892e5985bb77e06dadbcff490e6cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$listeners&lt;/code&gt; has been removed / merged into &lt;code&gt;$attrs&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c5e2e015422cf833b22755d382a3ff983874565" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$listeners&lt;/code&gt; removed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b8adbcd7512814d9fbda4acfcab046b0389a588" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$loadingRouteData&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;$loadingRouteData&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="520b07ac63ffe71a144f881dc3f5034800ec24a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$on&lt;/code&gt;, &lt;code&gt;$off&lt;/code&gt; and &lt;code&gt;$once&lt;/code&gt; instance methods are removed. Application instances no longer implement the event emitter interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a490a2f98a9e5f3ab213674b7298ee7ab9650fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$refs&lt;/code&gt; are only populated after the component has been rendered, and they are not reactive. It is only meant as an escape hatch for direct child manipulation - you should avoid accessing &lt;code&gt;$refs&lt;/code&gt; from within templates or computed properties.</source>
          <target state="translated">&lt;code&gt;$refs&lt;/code&gt; solo se completan despu&amp;eacute;s de que se haya renderizado el componente y no son reactivos. Solo est&amp;aacute; pensado como una trampilla de escape para la manipulaci&amp;oacute;n directa de ni&amp;ntilde;os; debe evitar acceder a &lt;code&gt;$refs&lt;/code&gt; desde plantillas o propiedades calculadas.</target>
        </trans-unit>
        <trans-unit id="8354441e2620e8cdfa98fa992c48515f81a75248" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$refs&lt;/code&gt; are only populated after the component has been rendered. It is only meant as an escape hatch for direct child manipulation - you should avoid accessing &lt;code&gt;$refs&lt;/code&gt; from within templates or computed properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e1b5f981084ac22655524c0a5300b21d37985de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$scopedSlots&lt;/code&gt; property is removed and all slots are exposed via &lt;code&gt;$slots&lt;/code&gt; as functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4be0bc92598d04fecea53484c5816af7cfda073" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$watch&lt;/code&gt; returns an unwatch function that stops firing the callback:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17360df2a21784e7baa79c00ee25d94dc3e5e1db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;MyComponent&amp;gt;&lt;/code&gt; is more visually distinct from a single-word HTML element than &lt;code&gt;&amp;lt;my-component&amp;gt;&lt;/code&gt;, because there are two character differences (the two capitals), rather than just one (a hyphen).</source>
          <target state="translated">&lt;code&gt;&amp;lt;MyComponent&amp;gt;&lt;/code&gt; es m&amp;aacute;s distinto visualmente de un elemento HTML de una sola palabra que &lt;code&gt;&amp;lt;my-component&amp;gt;&lt;/code&gt; , porque hay dos diferencias de caracteres (las dos may&amp;uacute;sculas), en lugar de solo una (un gui&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="5f4b726ac808f5dd955669d3f84e7f6698d44369" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;TransitionGroup&amp;gt;&lt;/code&gt; now renders no wrapper element by default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8beacc31b6ca2fd30514084e03fc776d3bf94832" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;component&amp;gt;&lt;/code&gt; and &lt;code&gt;is&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ad5a72f9bad4c883a1756da31bc27b2bf763afd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;keep-alive&amp;gt;&lt;/code&gt; does not work with functional components because they do not have instances to be cached.</source>
          <target state="translated">&lt;code&gt;&amp;lt;keep-alive&amp;gt;&lt;/code&gt; no funciona con componentes funcionales porque no tienen instancias para almacenar en cach&amp;eacute;.</target>
        </trans-unit>
        <trans-unit id="fb5ff78ead8103430d48c91d11828664d4eb8529" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; Component</source>
          <target state="translated">&lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; Componente</target>
        </trans-unit>
        <trans-unit id="754a5514704ba7d95c72e60de080ff4cbfe9b03c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; serve as content distribution outlets in component templates. &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; itself will be replaced.</source>
          <target state="translated">&lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; sirven como salidas de distribuci&amp;oacute;n de contenido en plantillas de componentes. &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; en s&amp;iacute; mismo ser&amp;aacute; reemplazado.</target>
        </trans-unit>
        <trans-unit id="c1f9db8a3b190fe0e2546dc047ca059766297cbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; tags with no special directives (&lt;code&gt;v-if/else-if/else&lt;/code&gt;, &lt;code&gt;v-for&lt;/code&gt;, or &lt;code&gt;v-slot&lt;/code&gt;) are now treated as plain elements and will result in a native &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; element instead of rendering its inner content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd3460ee10fda9968704c874e028ee9c9d85eb87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;transition&amp;gt;&lt;/code&gt; serve as transition effects for &lt;strong&gt;single&lt;/strong&gt; element/component. The &lt;code&gt;&amp;lt;transition&amp;gt;&lt;/code&gt; only applies the transition behavior to the wrapped content inside; it doesn&amp;rsquo;t render an extra DOM element, or show up in the inspected component hierarchy.</source>
          <target state="translated">&lt;code&gt;&amp;lt;transition&amp;gt;&lt;/code&gt; sirven como efectos de transici&amp;oacute;n para un &lt;strong&gt;solo&lt;/strong&gt; elemento / componente. La &lt;code&gt;&amp;lt;transition&amp;gt;&lt;/code&gt; solo aplica el comportamiento de transici&amp;oacute;n al contenido envuelto dentro; no representa un elemento DOM adicional ni aparece en la jerarqu&amp;iacute;a de componentes inspeccionados.</target>
        </trans-unit>
        <trans-unit id="0fd5b7e6617aec1952b9a6bc7bd82e3791c79cdb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;transition&amp;gt;&lt;/code&gt; serve as transition effects for &lt;strong&gt;single&lt;/strong&gt; element/component. The &lt;code&gt;&amp;lt;transition&amp;gt;&lt;/code&gt; only applies the transition behavior to the wrapped content inside; it doesn't render an extra DOM element, or show up in the inspected component hierarchy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f50a5500e9214fb79b4ce2f83d43311984f2df8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;transition-group&amp;gt;&lt;/code&gt; no longer renders a root element by default, but can still create one with the &lt;code&gt;tag&lt;/code&gt; prop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de029dceca4b43bbb4fe74e340672b518e9fed72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;transition-group&amp;gt;&lt;/code&gt; provides transition effects for &lt;strong&gt;multiple&lt;/strong&gt; elements/components. By default it doesn't render a wrapper DOM element, but one can be defined via the &lt;code&gt;tag&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="601c0bdee882413efd2e4cb3b22d4d10cbefc8e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;transition-group&amp;gt;&lt;/code&gt; serve as transition effects for &lt;strong&gt;multiple&lt;/strong&gt; elements/components. The &lt;code&gt;&amp;lt;transition-group&amp;gt;&lt;/code&gt; renders a real DOM element. By default it renders a &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;, and you can configure what element it should render via the &lt;code&gt;tag&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;code&gt;&amp;lt;transition-group&amp;gt;&lt;/code&gt; sirven como efectos de transici&amp;oacute;n para &lt;strong&gt;m&amp;uacute;ltiples&lt;/strong&gt; elementos / componentes. El &lt;code&gt;&amp;lt;transition-group&amp;gt;&lt;/code&gt; representa un elemento DOM real. De forma predeterminada, representa un &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; , y puede configurar qu&amp;eacute; elemento debe representar a trav&amp;eacute;s del atributo de &lt;code&gt;tag&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="314e94a40fc34e60d66778b7574c27f73dcda8c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;transition-group&amp;gt;&lt;/code&gt; supports moving transitions via CSS transform. When a child&amp;rsquo;s position on screen has changed after an update, it will get applied a moving CSS class (auto generated from the &lt;code&gt;name&lt;/code&gt; attribute or configured with the &lt;code&gt;move-class&lt;/code&gt; attribute). If the CSS &lt;code&gt;transform&lt;/code&gt; property is &amp;ldquo;transition-able&amp;rdquo; when the moving class is applied, the element will be smoothly animated to its destination using the &lt;a href=&quot;https://aerotwist.com/blog/flip-your-animations/&quot;&gt;FLIP technique&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;transition-group&amp;gt;&lt;/code&gt; admite transiciones en movimiento a trav&amp;eacute;s de la transformaci&amp;oacute;n CSS. Cuando la posici&amp;oacute;n de un ni&amp;ntilde;o en la pantalla ha cambiado despu&amp;eacute;s de una actualizaci&amp;oacute;n, se le aplicar&amp;aacute; una clase CSS m&amp;oacute;vil (generada autom&amp;aacute;ticamente a partir del atributo de &lt;code&gt;name&lt;/code&gt; o configurada con el atributo &lt;code&gt;move-class&lt;/code&gt; ). Si la propiedad de &lt;code&gt;transform&lt;/code&gt; aci&amp;oacute;n CSS es &quot;transitable&quot; cuando se aplica la clase m&amp;oacute;vil, el elemento se animar&amp;aacute; suavemente a su destino utilizando la &lt;a href=&quot;https://aerotwist.com/blog/flip-your-animations/&quot;&gt;t&amp;eacute;cnica FLIP&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e01ea9ce443185f31ca16ae34fd0c3cbed42677a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;transition-group&amp;gt;&lt;/code&gt; supports moving transitions via CSS transform. When a child's position on screen has changed after an update, it will get applied a moving CSS class (auto generated from the &lt;code&gt;name&lt;/code&gt; attribute or configured with the &lt;code&gt;move-class&lt;/code&gt; attribute). If the CSS &lt;code&gt;transform&lt;/code&gt; property is &quot;transition-able&quot; when the moving class is applied, the element will be smoothly animated to its destination using the &lt;a href=&quot;https://aerotwist.com/blog/flip-your-animations/&quot;&gt;FLIP technique (opens new window)&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef85453d00a0773005be085839077125c36ec8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'sync'&lt;/code&gt; watchers should be used sparingly, as they don't have these benefits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c00a8b928abe34d7a7f1b9f5e2b25ebd1086026" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.camel&lt;/code&gt; - (2.1.0+) transform the kebab-case attribute name into camelCase.</source>
          <target state="translated">&lt;code&gt;.camel&lt;/code&gt; - (2.1.0+) transforma el nombre del atributo kebab-case en camelCase.</target>
        </trans-unit>
        <trans-unit id="7970d9f0edaf912117eac5b2758218272107d49b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.camel&lt;/code&gt; - transform the kebab-case attribute name into camelCase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dceac4770a7de5ffea14046254eba930256fbed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.camel&lt;/code&gt; is not needed if you are using string templates, or compiling with &lt;code&gt;vue-loader&lt;/code&gt;/&lt;code&gt;vueify&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.camel&lt;/code&gt; no es necesario si est&amp;aacute; utilizando plantillas de cadenas o compilando con &lt;code&gt;vue-loader&lt;/code&gt; / &lt;code&gt;vueify&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ca6853c74e60fbdfd6bc9cfbeaa937afdb3c355f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.capture.once&lt;/code&gt; or</source>
          <target state="translated">&lt;code&gt;.capture.once&lt;/code&gt; o</target>
        </trans-unit>
        <trans-unit id="50ccbc62c0da3fc09eaf7e9a40f41bfbf617291a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.capture&lt;/code&gt; - add event listener in capture mode.</source>
          <target state="translated">&lt;code&gt;.capture&lt;/code&gt; : agrega un detector de eventos en el modo de captura.</target>
        </trans-unit>
        <trans-unit id="14178abc5893d92cb0150e7efd2653cb3de2b369" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.ctrl&lt;/code&gt;, &lt;code&gt;.alt&lt;/code&gt;, &lt;code&gt;.shift&lt;/code&gt;, &lt;code&gt;.meta&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.ctrl&lt;/code&gt; , &lt;code&gt;.alt&lt;/code&gt; , &lt;code&gt;.shift&lt;/code&gt; , &lt;code&gt;.meta&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8d642619d24be16f80c7d676944253b894b02768" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.delete&lt;/code&gt; (captures both &quot;Delete&quot; and &quot;Backspace&quot; keys)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad2e539407e865c551fc08fb1120b4cc3c1408a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.delete&lt;/code&gt; (captures both &amp;ldquo;Delete&amp;rdquo; and &amp;ldquo;Backspace&amp;rdquo; keys)</source>
          <target state="translated">&lt;code&gt;.delete&lt;/code&gt; (captura las teclas &quot;Eliminar&quot; y &quot;Retroceso&quot;)</target>
        </trans-unit>
        <trans-unit id="c2c32812bb18df5be26d1998fa20e93efbc28dc7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.enter&lt;/code&gt;, &lt;code&gt;.13&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;.enter&lt;/code&gt; , &lt;code&gt;.13&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="39c78d428aebd9ca45da6a48799135386ab75ff3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.exact&lt;/code&gt; Modifier</source>
          <target state="translated">&lt;code&gt;.exact&lt;/code&gt; Modificador</target>
        </trans-unit>
        <trans-unit id="2f8db93b6f8bd287a3008cc77dc22bb0cd89e4cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.left&lt;/code&gt; - (2.2.0+) only trigger handler for left button mouse events.</source>
          <target state="translated">&lt;code&gt;.left&lt;/code&gt; : (2.2.0+) solo controlador de activaci&amp;oacute;n para eventos del bot&amp;oacute;n izquierdo del mouse.</target>
        </trans-unit>
        <trans-unit id="2d7043f9056ec79be9f4123ab7df1fd48eca897e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.left&lt;/code&gt; - only trigger handler for left button mouse events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec4498628ec652b00ecac6d8f0f5f9bd6d26b7d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.middle&lt;/code&gt; - (2.2.0+) only trigger handler for middle button mouse events.</source>
          <target state="translated">&lt;code&gt;.middle&lt;/code&gt; : (2.2.0+) solo controlador de activaci&amp;oacute;n para eventos de mouse del bot&amp;oacute;n central.</target>
        </trans-unit>
        <trans-unit id="6ea18a61a820c35b64f37baf497676a324bfaa79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.middle&lt;/code&gt; - only trigger handler for middle button mouse events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db1226f01245c27d4eb416fe9fb23bced9953329" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.native&lt;/code&gt; - listen for a native event on the root element of component.</source>
          <target state="translated">&lt;code&gt;.native&lt;/code&gt; : escucha un evento nativo en el elemento ra&amp;iacute;z del componente.</target>
        </trans-unit>
        <trans-unit id="5444ff6608a4532818767370445cce9c528f237f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.once&lt;/code&gt; - trigger handler at most once.</source>
          <target state="translated">&lt;code&gt;.once&lt;/code&gt; - manejador de disparo como m&amp;aacute;ximo una vez.</target>
        </trans-unit>
        <trans-unit id="06ef9f33ba675a27c3e0f487cebb64cd4f94c56b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.once&lt;/code&gt; and &lt;code&gt;.sync&lt;/code&gt; Modifiers on &lt;code&gt;v-bind&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;.once&lt;/code&gt; y &lt;code&gt;.sync&lt;/code&gt; Modificadores en &lt;code&gt;v-bind&lt;/code&gt; &lt;sup&gt;eliminado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="a5978339e4048288072f1d0aca34a3ca07e4c168" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.passive&lt;/code&gt; - (2.3.0+) attaches a DOM event with &lt;code&gt;{ passive: true }&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.passive&lt;/code&gt; : (2.3.0+) adjunta un evento DOM con &lt;code&gt;{ passive: true }&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0fc9b27256f8185dcaa68dc28228b4e66d5a84b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.passive&lt;/code&gt; - attaches a DOM event with &lt;code&gt;{ passive: true }&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d9af57a38e90eed214bc6ac99ab1c3f101e7a5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prevent&lt;/code&gt; - call &lt;code&gt;event.preventDefault()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.prevent&lt;/code&gt; : llama a &lt;code&gt;event.preventDefault()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8f61b4325c58d2e34c18dfabfd675caebc0656ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prop&lt;/code&gt; - Bind as a DOM property instead of an attribute (&lt;a href=&quot;https://stackoverflow.com/questions/6003819/properties-and-attributes-in-html#answer-6004028&quot;&gt;what&amp;rsquo;s the difference?&lt;/a&gt;). If the tag is a component then &lt;code&gt;.prop&lt;/code&gt; will set the property on the component&amp;rsquo;s &lt;code&gt;$el&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.prop&lt;/code&gt; : enlaza como una propiedad DOM en lugar de un atributo ( &lt;a href=&quot;https://stackoverflow.com/questions/6003819/properties-and-attributes-in-html#answer-6004028&quot;&gt;&amp;iquest;cu&amp;aacute;l es la diferencia?&lt;/a&gt; ). Si la etiqueta es un componente, &lt;code&gt;.prop&lt;/code&gt; establecer&amp;aacute; la propiedad en el &lt;code&gt;$el&lt;/code&gt; del componente .</target>
        </trans-unit>
        <trans-unit id="895b09e6c4555b18d75a7c14e3e183955ff63654" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.right&lt;/code&gt; - (2.2.0+) only trigger handler for right button mouse events.</source>
          <target state="translated">&lt;code&gt;.right&lt;/code&gt; - (2.2.0+) solo manejador de activaci&amp;oacute;n para eventos de mouse con bot&amp;oacute;n derecho.</target>
        </trans-unit>
        <trans-unit id="0713e562a43567625c31ceefa1cee0317f4ffb88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.right&lt;/code&gt; - only trigger handler for right button mouse events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba0fe2c15caf97ea9da6b13ee823d6ccb749d120" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.self&lt;/code&gt; - only trigger handler if event was dispatched from this element.</source>
          <target state="translated">&lt;code&gt;.self&lt;/code&gt; : solo controlador de activaci&amp;oacute;n si el evento se envi&amp;oacute; desde este elemento.</target>
        </trans-unit>
        <trans-unit id="f53d8c5cb4af66234cce5f3ffa99cc141cd09ca9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.stop&lt;/code&gt; - call &lt;code&gt;event.stopPropagation()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.stop&lt;/code&gt; : llama a &lt;code&gt;event.stopPropagation()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e6eda6204756e264c87b331ff62c085257503aae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.sync&lt;/code&gt; - (2.3.0+) a syntax sugar that expands into a &lt;code&gt;v-on&lt;/code&gt; handler for updating the bound value.</source>
          <target state="translated">&lt;code&gt;.sync&lt;/code&gt; - (2.3.0+) un az&amp;uacute;car de sintaxis que se expande en un controlador &lt;code&gt;v-on&lt;/code&gt; para actualizar el valor enlazado.</target>
        </trans-unit>
        <trans-unit id="fa8d81d79d3b0900d2de0449677837305ba5854c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.sync&lt;/code&gt; Modifier</source>
          <target state="translated">&lt;code&gt;.sync&lt;/code&gt; Modificador</target>
        </trans-unit>
        <trans-unit id="33276e1ed84974568cf6979de9d0842f7bfc8771" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.{keyAlias}&lt;/code&gt; - only trigger handler on certain keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="393c8b0954e8841037040a5ce6851747c34da83c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.{keyCode | keyAlias}&lt;/code&gt; - only trigger handler on certain keys.</source>
          <target state="translated">&lt;code&gt;.{keyCode | keyAlias}&lt;/code&gt; - solo maneja el disparador en ciertas claves.</target>
        </trans-unit>
        <trans-unit id="ef14d0b6c47e41f12f81e9093c63d0f155eed82b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Array.prototype.$remove&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;Array.prototype.$remove&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="8d6c3ac6fce97244448ab08d877353880763d90d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Array.prototype.$set&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;Array.prototype.$set&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="fa753d22ec8526039685e19c323998c44fe62431" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vue.compile&lt;/code&gt; (only in full builds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00e5c56b548dee8fecff1a99b415e2557c853f1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vue.config.async&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;Vue.config.async&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="cddfd77c01930a08842b2b44c0067a0a4ba383e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vue.config.debug&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;Vue.config.debug&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="e3e7301429950b1b372ff2d70b13c55c1496e6ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vue.config.delimiters&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;Vue.config.delimiters&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="dc52da7b4b148f66c13ff494f9774d615804a832" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vue.config.unsafeDelimiters&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;Vue.config.unsafeDelimiters&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="0c0ce0ad0a368fbf8ed4276be6a05458a2e1a9a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vue.config&lt;/code&gt; is an object containing Vue&amp;rsquo;s global configurations. You can modify its properties listed below before bootstrapping your application:</source>
          <target state="translated">&lt;code&gt;Vue.config&lt;/code&gt; es un objeto que contiene las configuraciones globales de Vue. Puede modificar las propiedades que se enumeran a continuaci&amp;oacute;n antes de iniciar su aplicaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="e0ef751b86c42ff62a3d8b166c9d1cce04db5676" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vue.delete&lt;/code&gt; (only in compat builds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f11fcb23f34f2463a434db700e4f8aefcdf802" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vue.directive('on').keyCodes&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;Vue.directive('on').keyCodes&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="a64359c7a37d98c62d1cfa4403f6f568fc974462" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vue.elementDirective&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;Vue.elementDirective&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9a9d19d34e374be0fff06f9ef5c933e541f5740a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vue.extend&lt;/code&gt; with &lt;code&gt;el&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;Vue.extend&lt;/code&gt; con &lt;code&gt;el&lt;/code&gt; &lt;sup&gt;eliminado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="400b14e32cb1f52b982e642080bc4692e617bf60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vue.nextTick()&lt;/code&gt; is a global API exposed directly on a single Vue object &amp;ndash; in fact, the instance method &lt;code&gt;$nextTick()&lt;/code&gt; is just a handy wrapper around &lt;code&gt;Vue.nextTick()&lt;/code&gt; with the callback&amp;rsquo;s &lt;code&gt;this&lt;/code&gt; context automatically bound to the current instance for convenience.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28976028820be172fd993e9ed4792fe2b6d02449" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vue.observable&lt;/code&gt; (replaced by &lt;code&gt;Vue.reactive&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9347aaae5841defc8036cfbe9c0a51b59793973e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vue.partial&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;Vue.partial&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="0f16fc1b810784839ac61d81a75799ac0f85fb08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vue.prototype&lt;/code&gt; Replaced by &lt;code&gt;config.globalProperties&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e87d69ecde7d42427228b5a8c91feb74de05db6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vue.set&lt;/code&gt; (only in compat builds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fa42e33eecd7d3589ecdd915ea5ec04e0089a04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vue.set&lt;/code&gt; and &lt;code&gt;Vue.delete&lt;/code&gt; can no longer work on Vue instances. It is now mandatory to properly declare all top-level reactive properties in the data option. If you&amp;rsquo;d like to delete properties on a Vue instance or its &lt;code&gt;$data&lt;/code&gt;, set it to null.</source>
          <target state="translated">&lt;code&gt;Vue.set&lt;/code&gt; y &lt;code&gt;Vue.delete&lt;/code&gt; ya no pueden funcionar en instancias de Vue. Ahora es obligatorio declarar correctamente todas las propiedades reactivas de nivel superior en la opci&amp;oacute;n de datos. Si desea eliminar propiedades en una instancia de Vue o sus &lt;code&gt;$data&lt;/code&gt; , config&amp;uacute;relo en nulo.</target>
        </trans-unit>
        <trans-unit id="d0bc792b1bdce623e788a3b0a931a8d56e2f86fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vue.set&lt;/code&gt; and &lt;code&gt;Vue.delete&lt;/code&gt; on Vue instances &lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;Vue.set&lt;/code&gt; y &lt;code&gt;Vue.delete&lt;/code&gt; en instancias Vue &lt;sup&gt;eliminan&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9177cefead6808fa2384289dba24fe47c2a29686" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vue.transition&lt;/code&gt; for Reusable Transitions &lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;Vue.transition&lt;/code&gt; &lt;sup&gt;reemplaz&amp;oacute; &lt;/sup&gt;Vue.transition para transiciones reutilizables&lt;sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="e8b9e1203cc30ac563c65b2680f85decc64fd16e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vue.use&lt;/code&gt; automatically prevents you from using the same plugin more than once, so calling it multiple times on the same plugin will install the plugin only once.</source>
          <target state="translated">&lt;code&gt;Vue.use&lt;/code&gt; evita autom&amp;aacute;ticamente que uses el mismo complemento m&amp;aacute;s de una vez, por lo que llamarlo varias veces en el mismo complemento instalar&amp;aacute; el complemento solo una vez.</target>
        </trans-unit>
        <trans-unit id="6788a615e335f55a839084c4f38ed7d75676b3a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[directive, value, arg, modifiers]&lt;/code&gt; - The above, plus a &lt;code&gt;key: value&lt;/code&gt; pair &lt;code&gt;Object&lt;/code&gt; defining any modifiers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1920a2567860f45b63e76ba052eda5127e31eac0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[directive, value, arg]&lt;/code&gt; - The above, plus a &lt;code&gt;String&lt;/code&gt; argument, ie. &lt;code&gt;click&lt;/code&gt; in &lt;code&gt;v-on:click&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31dc457a7b96ad07e96c27f832e4b3751ee86e72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[directive, value]&lt;/code&gt; - The above, plus a value of type &lt;code&gt;any&lt;/code&gt; to be assigned to the directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0143f7b7b58f14090421fdfbde12920778c38e74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[directive]&lt;/code&gt; - The directive by itself. Required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a1032069bad58ff3a8bfeabc735a7f14f8fb81b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;abstract: true&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;abstract: true&lt;/code&gt; &lt;sup&gt;reemplazado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="3e864d626249e6a85e3a388e1e4092437d723a4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;activate&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;activate&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="f851f7fa6f60ecf0dec128f7390d8b62458adf17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;appear-active-class&lt;/code&gt; - &lt;code&gt;string&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4353dc5efdbe32b0149e3ac06c906fd0adc3c000" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;appear-active-class&lt;/code&gt; - string</source>
          <target state="translated">&lt;code&gt;appear-active-class&lt;/code&gt; - cadena</target>
        </trans-unit>
        <trans-unit id="8038824738fbd2a8926e86a8ca5866dc3f9cf7e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;appear-class&lt;/code&gt; - &lt;code&gt;string&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7895d0b325b6952354c3d80ff32b2906f749b1a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;appear-class&lt;/code&gt; - string</source>
          <target state="translated">&lt;code&gt;appear-class&lt;/code&gt; - cadena</target>
        </trans-unit>
        <trans-unit id="1e59f36060375afc515b1ea9edcac4466421932a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;appear-to-class&lt;/code&gt; - &lt;code&gt;string&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02785a57c2402cdc6a9517e5924d16e0c5e2f070" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;appear-to-class&lt;/code&gt; - string</source>
          <target state="translated">&lt;code&gt;appear-to-class&lt;/code&gt; - cadena</target>
        </trans-unit>
        <trans-unit id="4e5a39c42fa94cfeacc26d6dbf22a4bdd10b83fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;appear&lt;/code&gt; - &lt;code&gt;boolean&lt;/code&gt;, Whether to apply transition on initial render. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14d327cfb71296ec021255dd505f627b7de54f5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;appear&lt;/code&gt; - boolean, Whether to apply transition on initial render. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;appear&lt;/code&gt; - booleano, ya sea para aplicar la transici&amp;oacute;n en el renderizado inicial. El valor predeterminado es &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="46804fe9875d20d005ed78771beb5c6a188a75a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arg&lt;/code&gt;: The argument passed to the directive, if any. For example in &lt;code&gt;v-my-directive:foo&lt;/code&gt;, the arg would be &lt;code&gt;&quot;foo&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;arg&lt;/code&gt; : El argumento pasado a la directiva, si existe. Por ejemplo, en &lt;code&gt;v-my-directive:foo&lt;/code&gt; , el argumento ser&amp;iacute;a &lt;code&gt;&quot;foo&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1464bf4612a32d3a83d54a4a15912d0ecabb841a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attached&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;attached&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="692c37f71b0ae1767b6a8911c91463bdbe56c257" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attrs&lt;/code&gt; and &lt;code&gt;slots&lt;/code&gt; are proxies to the corresponding values on the internal component instance. This ensures they always expose the latest values even after updates so that we can destructure them without worrying accessing a stale reference:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dd450d4329a7bb017d1a24ae1141251de8fe9d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attrs&lt;/code&gt; and &lt;code&gt;slots&lt;/code&gt; are stateful objects that are always updated when the component itself is updated. This means you should avoid destructuring them and always reference properties as &lt;code&gt;attrs.x&lt;/code&gt; or &lt;code&gt;slots.x&lt;/code&gt;. Also note that unlike &lt;code&gt;props&lt;/code&gt;, &lt;code&gt;attrs&lt;/code&gt; and &lt;code&gt;slots&lt;/code&gt; are &lt;strong&gt;not&lt;/strong&gt; reactive. If you intend to apply side effects based on &lt;code&gt;attrs&lt;/code&gt; or &lt;code&gt;slots&lt;/code&gt; changes, you should do so inside an &lt;code&gt;onUpdated&lt;/code&gt; lifecycle hook.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10f160f7a822ce8c91d2a586223dc6cfce1febfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beforeCompile&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;beforeCompile&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="09e1815b014645b8322b0bc134c701711c442750" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beforeMount&lt;/code&gt; -&amp;gt; &lt;code&gt;onBeforeMount&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3655ccd62792b4bca94915537f7f90d2b3786bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beforeMount&lt;/code&gt;: called when the directive is first bound to the element and before parent component is mounted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e16b1773b154688295c0e88ea664b86fe0639bcd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beforeUnmount&lt;/code&gt; -&amp;gt; &lt;code&gt;onBeforeUnmount&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fc2ff533eba97d819b980ee511560bc368d4309" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beforeUnmount&lt;/code&gt;: called before the bound element's parent component is unmounted</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6008d36c772a90188b433eda31aecc9dee845ae1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beforeUpdate&lt;/code&gt; -&amp;gt; &lt;code&gt;onBeforeUpdate&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c558bd6a4632255f7d38d51531050f572a4aa00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beforeUpdate&lt;/code&gt;: called before the containing component's VNode is updated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccea54c373dac3c8d65a16ba2eb5a6995bac65ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bind&lt;/code&gt;: called only once, when the directive is first bound to the element. This is where you can do one-time setup work.</source>
          <target state="translated">&lt;code&gt;bind&lt;/code&gt; : se llama solo una vez, cuando la directiva se vincula por primera vez al elemento. Aqu&amp;iacute; es donde puede realizar un trabajo de configuraci&amp;oacute;n &amp;uacute;nico.</target>
        </trans-unit>
        <trans-unit id="7e88a24ffc7a21f2f0293cb73bfa23c709cb7740" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;binding&lt;/code&gt;: An object containing the following properties.</source>
          <target state="translated">&lt;code&gt;binding&lt;/code&gt; : un objeto que contiene las siguientes propiedades.</target>
        </trans-unit>
        <trans-unit id="2eefaf469dca46fa8e77402d0578a1833851ed6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cache: false&lt;/code&gt;&lt;sup&gt;deprecated&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;cache: false&lt;/code&gt; &lt;sup&gt;desuso&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="2534c8cf9582b9fe7c73b01ac1a113b292958972" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;canActivate&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;canActivate&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="e00c12e8367fa5db098ecd62bbd6e739bd306eb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;canDeactivate&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;canDeactivate&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="7368829e248fb8305aef1caa7fc1f941b53d5ab5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;canReuse: false&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;canReuse: false&lt;/code&gt; &lt;sup&gt;eliminado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="0b5db01f7e694b3c7034ea658220d7a267201469" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;children&lt;/code&gt;: An array of the VNode children</source>
          <target state="translated">&lt;code&gt;children&lt;/code&gt; : una matriz de los hijos de VNode</target>
        </trans-unit>
        <trans-unit id="c3a47d013397fb46882250eeefda2f1b03c3a309" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class&lt;/code&gt; and &lt;code&gt;style&lt;/code&gt; attributes get some special handling in the Vue 2 virtual DOM implementation. For that reason, they are &lt;em&gt;not&lt;/em&gt; included in &lt;code&gt;$attrs&lt;/code&gt;, while all other attributes are.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f6a168486b4017071daba0d8264dfa7517f5ac5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;coerce&lt;/code&gt; Prop Option &lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;coerce&lt;/code&gt; Opci&amp;oacute;n de Prop &lt;sup&gt;eliminada&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="06022586ddff6fc75ec4eaa9fdec461f4b526ace" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compiled&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;compiled&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="c3cfca0f4c83321a4ff781cdf475c822cb3a8627" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;component&lt;/code&gt; option renamed to &lt;code&gt;loader&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b67b778ee3bb191090ddb18de675204c33e35db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;componentUpdated&lt;/code&gt;: called after the containing component&amp;rsquo;s VNode &lt;strong&gt;and the VNodes of its children&lt;/strong&gt; have updated.</source>
          <target state="translated">&lt;code&gt;componentUpdated&lt;/code&gt; : llamado despu&amp;eacute;s de que el VNode del componente contenedor &lt;strong&gt;y los VNodes de sus hijos se&lt;/strong&gt; hayan actualizado.</target>
        </trans-unit>
        <trans-unit id="69cc3a2b401725bf097ca43d5fb208ff271c4f39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.ignoredElements&lt;/code&gt; Is Now &lt;code&gt;config.isCustomElement&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="407fc78eba84b31ec2640d860cb07018502ee8b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.productionTip&lt;/code&gt; Removed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa5e877822eacd2a61eae794400be4eb1f32d430" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;contentEditable&lt;/code&gt; &amp;rarr; &lt;code&gt;'inherit'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fd4fd368812de65cda9f52eb474c7783ac16cbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;createElement&lt;/code&gt; Arguments</source>
          <target state="translated">&lt;code&gt;createElement&lt;/code&gt; Argumentos</target>
        </trans-unit>
        <trans-unit id="8e375a2d026533ec60aec08dba0986568f35e5a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;created&lt;/code&gt;: called before the bound element's attributes or event listeners are applied. This is useful in cases where the directive needs to attach event listeners that must be called before normal &lt;code&gt;v-on&lt;/code&gt; event listeners.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b827a35e047f9a213a7abdc91d4f5a2248b4c16a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;css&lt;/code&gt; - &lt;code&gt;boolean&lt;/code&gt;. Whether to apply CSS transition classes. Defaults to &lt;code&gt;true&lt;/code&gt;. If set to &lt;code&gt;false&lt;/code&gt;, will only trigger JavaScript hooks registered via component events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86f37cb1da70d29575985958d1590d6cc38a37e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;css&lt;/code&gt; - boolean, Whether to apply CSS transition classes. Defaults to &lt;code&gt;true&lt;/code&gt;. If set to &lt;code&gt;false&lt;/code&gt;, will only trigger JavaScript hooks registered via component events.</source>
          <target state="translated">&lt;code&gt;css&lt;/code&gt; - booleano, ya sea para aplicar clases de transici&amp;oacute;n CSS. Por defecto es &lt;code&gt;true&lt;/code&gt; . Si se establece en &lt;code&gt;false&lt;/code&gt; , solo activar&amp;aacute; los enlaces de JavaScript registrados a trav&amp;eacute;s de eventos de componentes.</target>
        </trans-unit>
        <trans-unit id="c99391aaef8b4eb7b33a18369d20a188c326cb1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt; Must Be a Function</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; deben ser una funci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="f87871b905171e6e00e93284f1c1351d56a20b8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt;: The entire &lt;a href=&quot;#The-Data-Object-In-Depth&quot;&gt;data object&lt;/a&gt;, passed to the component as the 2nd argument of &lt;code&gt;createElement&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; : el &lt;a href=&quot;#The-Data-Object-In-Depth&quot;&gt;objeto de datos&lt;/a&gt; completo , pasado al componente como el segundo argumento de &lt;code&gt;createElement&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c43148c317b9b95cddc6e5fb8584871aa53ba5d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="a9783409e8781e3f918704e678aeebc5904c50b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;date-picker-theme-dark&lt;/code&gt;, which is passed to the component by its parent</source>
          <target state="translated">&lt;code&gt;date-picker-theme-dark&lt;/code&gt; , que su padre pasa al componente</target>
        </trans-unit>
        <trans-unit id="51c14f1e7de5dab0832d7ae5de38632a715093f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deactivate&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;deactivate&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="0feac897a7fa29dcc9c832b60d7e4ae4fcae1b90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;debounce&lt;/code&gt; Param Attribute for &lt;code&gt;v-model&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;debounce&lt;/code&gt; Atributo de par&amp;aacute;metro de rebote para &lt;code&gt;v-model&lt;/code&gt; &lt;sup&gt;eliminado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="24a257730da0bcafdb571f6e77fa872f0d64b69d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default&lt;/code&gt;: &lt;code&gt;any&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt; : &lt;code&gt;any&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c8068e8b086898670038008bfa729b11030a04db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default&lt;/code&gt;: &lt;code&gt;any&lt;/code&gt; Specifies a default value for the prop. If the prop is not passed, this value will be used instead. Object or array defaults must be returned from a factory function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b52d6dfe3b445b1f21f432877a0ed67e969a1366" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;detached&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;detached&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="70ae98f702a2add1a7fe2e0d1e99264441613b4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dir&lt;/code&gt; would be the following object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="609cb3592522095bc2ad837d49b3d52549ee8c70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dir&lt;/code&gt;: an object, passed as a parameter when directive is registered. For example, in the directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="605eaaf22d31cea3e0063a871465d00ae2979bbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disabled&lt;/code&gt; - &lt;code&gt;boolean&lt;/code&gt;. This optional prop can be used to disable the &lt;code&gt;&amp;lt;teleport&amp;gt;&lt;/code&gt;'s functionality, which means that its slot content will not be moved anywhere and instead be rendered where you specified the &lt;code&gt;&amp;lt;teleport&amp;gt;&lt;/code&gt; in the surrounding parent component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="994f7f001906d1ea743441ccb2dcfe13771e23a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;draggable&lt;/code&gt; &amp;rarr; &lt;code&gt;false&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a5a15ca58133b769744f694d5328c81c4058d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;draggable&lt;/code&gt;&lt;sup&gt;enumerated&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;draggable&lt;/code&gt;&lt;sup&gt;enumerated&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="6dcaaaafc7f3c0b91a9e9dfdb4fb9e29ed1a3ab8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;draggable=&quot;&quot;&lt;/code&gt;&lt;sup&gt;&amp;dagger;&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;draggable=&quot;&quot;&lt;/code&gt;&lt;sup&gt;&amp;dagger;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="43b1d63a4a3a936363d2da9e727674b68ef4448d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;draggable=&quot;0&quot;&lt;/code&gt;&lt;sup&gt;&amp;dagger;&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;draggable=&quot;0&quot;&lt;/code&gt;&lt;sup&gt;&amp;dagger;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="2ff04f4d9e3355bc7147178d59ae69a75ea7a6aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;draggable=&quot;foo&quot;&lt;/code&gt;&lt;sup&gt;&amp;dagger;&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;draggable=&quot;foo&quot;&lt;/code&gt;&lt;sup&gt;&amp;dagger;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="c7612f157c62360f9e3811458eed7ebc9e4dd0fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;duration&lt;/code&gt; - &lt;code&gt;number | { enter: number, leave: number }&lt;/code&gt;. Specifies the duration of transition. By default, Vue waits for the first &lt;code&gt;transitionend&lt;/code&gt; or &lt;code&gt;animationend&lt;/code&gt; event on the root transition element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df580a053cc28d6a12839c5e6e9fc11d7119a5b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;duration&lt;/code&gt; - number | { &lt;code&gt;enter&lt;/code&gt;: number, &lt;code&gt;leave&lt;/code&gt;: number }, Specifies the duration of transition. By default, Vue waits for the first &lt;code&gt;transitionend&lt;/code&gt; or &lt;code&gt;animationend&lt;/code&gt; event on the root transition element.</source>
          <target state="translated">&lt;code&gt;duration&lt;/code&gt; - n&amp;uacute;mero | { &lt;code&gt;enter&lt;/code&gt; : n&amp;uacute;mero, &lt;code&gt;leave&lt;/code&gt; : n&amp;uacute;mero}, especifica la duraci&amp;oacute;n de la transici&amp;oacute;n. De forma predeterminada, Vue espera el primer evento de &lt;code&gt;animationend&lt;/code&gt; &lt;code&gt;transitionend&lt;/code&gt; o final de animaci&amp;oacute;n en el elemento de transici&amp;oacute;n ra&amp;iacute;z.</target>
        </trans-unit>
        <trans-unit id="f1a07dc084e595c52507333c1ccf9550cec7d475" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;el&lt;/code&gt;: The element the directive is bound to. This can be used to directly manipulate the DOM.</source>
          <target state="translated">&lt;code&gt;el&lt;/code&gt; : El elemento al que est&amp;aacute; vinculada la directiva. Esto se puede utilizar para manipular directamente el DOM.</target>
        </trans-unit>
        <trans-unit id="1824946961a963e7b816405fe16c94aa5d5534e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emits&lt;/code&gt; Option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92bbf0aa4d6950eed516db31d49ff76a677084fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emits&lt;/code&gt; option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20faad78bd77474e90e695992c554cf1f89f22c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enter-active-class&lt;/code&gt; - &lt;code&gt;string&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aadc3c277ea3136167618177c35bca3c6b3e905" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enter-active-class&lt;/code&gt; - string</source>
          <target state="translated">&lt;code&gt;enter-active-class&lt;/code&gt; - cadena</target>
        </trans-unit>
        <trans-unit id="aae4cbe2475670612d8c6e238d4fe9b528214780" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enter-class&lt;/code&gt; - string</source>
          <target state="translated">&lt;code&gt;enter-class&lt;/code&gt; - cadena</target>
        </trans-unit>
        <trans-unit id="8d6b73070fb6af982960d5ef7040629fc6d57ba5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enter-class&lt;/code&gt; is renamed to &lt;code&gt;enter-from-class&lt;/code&gt; (can be written as &lt;code&gt;enterFromClass&lt;/code&gt; in render functions or JSX)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="073be7070c6cbad57e9ddda7a508fb7f3ead1544" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enter-from-class&lt;/code&gt; - &lt;code&gt;string&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a42cecdae4174e68ab837507d8736a5caabe99a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enter-to-class&lt;/code&gt; (2.1.8+)</source>
          <target state="translated">&lt;code&gt;enter-to-class&lt;/code&gt; (2.1.8+)</target>
        </trans-unit>
        <trans-unit id="d2085f02a6d4903efca791d90776d36f37c7bf44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enter-to-class&lt;/code&gt; - &lt;code&gt;string&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfa3b9618c3eb38fc8c3d068dbf52245da33b3c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enter-to-class&lt;/code&gt; - string</source>
          <target state="translated">&lt;code&gt;enter-to-class&lt;/code&gt; - cadena</target>
        </trans-unit>
        <trans-unit id="0e45e15db17fbc48da20eb76a811d7c4d6f63277" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;errorCaptured&lt;/code&gt; -&amp;gt; &lt;code&gt;onErrorCaptured&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48878af0ad5ee8fade69a293c7b2ff9dc7eb88c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;events&lt;/code&gt; option &lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;events&lt;/code&gt; opci&amp;oacute;n de eventos &lt;sup&gt;eliminada&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="baa1bdf2ea628bb69c36e6c0f0db1a5bb2cac08c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exclude&lt;/code&gt; - &lt;code&gt;string | RegExp | Array&lt;/code&gt;. Any component with a matching name will not be cached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88d2831139e6c482a4da52fbfae35dd6789a45c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exclude&lt;/code&gt; - string or RegExp or Array. Any component with a matching name will not be cached.</source>
          <target state="translated">&lt;code&gt;exclude&lt;/code&gt; - cadena o RegExp o Array. Cualquier componente con un nombre coincidente no se almacenar&amp;aacute; en cach&amp;eacute;.</target>
        </trans-unit>
        <trans-unit id="d36c674257bd2993699527235d1ec8f66a3860f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expression&lt;/code&gt;: The expression of the binding as a string. For example in &lt;code&gt;v-my-directive=&quot;1 + 1&quot;&lt;/code&gt;, the expression would be &lt;code&gt;&quot;1 + 1&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;expression&lt;/code&gt; : la expresi&amp;oacute;n del enlace como una cadena. Por ejemplo, en &lt;code&gt;v-my-directive=&quot;1 + 1&quot;&lt;/code&gt; , la expresi&amp;oacute;n ser&amp;iacute;a &lt;code&gt;&quot;1 + 1&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e1288a8456e52ae17dbec75a10b76e64942fedf0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt;, &lt;code&gt;'false'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1331e5cad48d8700c2308602cef064262711b40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foo&lt;/code&gt;&lt;sup&gt;normal&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;foo&lt;/code&gt;&lt;sup&gt;normal&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="58fd22516b06dec5d6b751cc2a65d2dd2ae99c8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foo=&quot;false&quot;&lt;/code&gt;&lt;sup&gt;&amp;dagger;&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;foo=&quot;false&quot;&lt;/code&gt;&lt;sup&gt;&amp;dagger;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="32dd6704f5f56e629366952448845a8eee0ffd0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;form-control&lt;/code&gt;, which is set by the component in its template</source>
          <target state="translated">&lt;code&gt;form-control&lt;/code&gt; , que es establecido por el componente en su plantilla</target>
        </trans-unit>
        <trans-unit id="25d7c90e74b678b81c87eda4d5c9b6986f5c28af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;functional&lt;/code&gt; attribute on single-file component (SFC) &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; and &lt;code&gt;functional&lt;/code&gt; component option are deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6ae5c543f4a1c1dc2690f5d80fc8ff1174b9af3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;functional&lt;/code&gt; attribute removed on &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dcb8ca2f410cd7000cb0211aaba206bf4c36a8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getCurrentInstance&lt;/code&gt; enables access to an internal component instance useful for advanced usages or for library creators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0256e01109c0b5b0359aae584e8e390f96f59022" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getCurrentInstance&lt;/code&gt;&lt;strong&gt;only&lt;/strong&gt; works during &lt;a href=&quot;#setup&quot;&gt;setup&lt;/a&gt; or &lt;a href=&quot;#lifecycle-hooks&quot;&gt;Lifecycle Hooks&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8adc543c68339932add3d684aab3940a4e1b79e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;h()&lt;/code&gt; Arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72580c30e1dd9b536799078adb51642e7d3abce0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;h&lt;/code&gt; being globally imported means that any library that contains Vue components will include &lt;code&gt;import { h } from 'vue'&lt;/code&gt; somewhere. As a result, this creates a bit of overhead since it requires library authors to properly configure the externalization of Vue in their build setup:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c3fdbece2754d868393458741bef9c8de77139" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;h&lt;/code&gt; is now globally imported instead of passed to render functions as an arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="345435234d551f6232989f72712cdb12c3799d46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hashbang: false&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;hashbang: false&lt;/code&gt; &lt;sup&gt;eliminado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="b5004a7448e17e92babd341da4c2e07da8788603" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;history: true&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;history: true&lt;/code&gt; &lt;sup&gt;reemplazado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="275bf3f39884c9feae68d0b7eb7dfcc411e30694" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;if (!event.ctrlKey) return&lt;/code&gt; (change &lt;code&gt;ctrlKey&lt;/code&gt; to &lt;code&gt;altKey&lt;/code&gt;, &lt;code&gt;shiftKey&lt;/code&gt;, or &lt;code&gt;metaKey&lt;/code&gt;, respectively)</source>
          <target state="translated">&lt;code&gt;if (!event.ctrlKey) return&lt;/code&gt; (cambia &lt;code&gt;ctrlKey&lt;/code&gt; a &lt;code&gt;altKey&lt;/code&gt; , &lt;code&gt;shiftKey&lt;/code&gt; o &lt;code&gt;metaKey&lt;/code&gt; , respectivamente)</target>
        </trans-unit>
        <trans-unit id="af34f415bbdb707f5b1f254aee52e736a7815db6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;if (event.keyCode !== 13) return&lt;/code&gt; (change &lt;code&gt;13&lt;/code&gt; to &lt;a href=&quot;http://keycode.info/&quot;&gt;another key code&lt;/a&gt; for other key modifiers)</source>
          <target state="translated">&lt;code&gt;if (event.keyCode !== 13) return&lt;/code&gt; (cambie &lt;code&gt;13&lt;/code&gt; a &lt;a href=&quot;http://keycode.info/&quot;&gt;otro c&amp;oacute;digo de tecla&lt;/a&gt; para otros modificadores de tecla)</target>
        </trans-unit>
        <trans-unit id="fd24625cc358b8c97231cf9efb8cc4c42fe53758" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;in-out&lt;/code&gt;: New element transitions in first, then when complete, the current element transitions out.</source>
          <target state="translated">&lt;code&gt;in-out&lt;/code&gt; : el elemento nuevo entra primero, luego, cuando se completa, el elemento actual sale.</target>
        </trans-unit>
        <trans-unit id="9ad412bc457eecd0c8e700ae9af65338d53a7082" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;include&lt;/code&gt; - &lt;code&gt;string | RegExp | Array&lt;/code&gt;. Only components with matching names will be cached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d95db78b7d76e655444fc48bf5b446562121a29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;include&lt;/code&gt; - string or RegExp or Array. Only components with matching names will be cached.</source>
          <target state="translated">&lt;code&gt;include&lt;/code&gt; - cadena o RegExp o Array. Solo se almacenar&amp;aacute;n en cach&amp;eacute; los componentes con nombres coincidentes.</target>
        </trans-unit>
        <trans-unit id="eb9847f3fc5d57ad0cd8e8fb60e09369887d9595" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;init&lt;/code&gt;&lt;sup&gt;renamed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;init&lt;/code&gt;&lt;sup&gt;renamed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="de12f8229689753835cb0e39f11901f7dafb5ccc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;injections&lt;/code&gt;: (2.3.0+) if using the &lt;a href=&quot;../api/index#provide-inject&quot;&gt;&lt;code&gt;inject&lt;/code&gt;&lt;/a&gt; option, this will contain resolved injections.</source>
          <target state="translated">&lt;code&gt;injections&lt;/code&gt; : (2.3.0+) si usa la opci&amp;oacute;n &lt;a href=&quot;../api/index#provide-inject&quot;&gt; &lt;code&gt;inject&lt;/code&gt; &lt;/a&gt; , contendr&amp;aacute; inyecciones resueltas.</target>
        </trans-unit>
        <trans-unit id="4fcbd949291318e0541a1f4d6af2ab68a294fd67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inline-template&lt;/code&gt; - boolean</source>
          <target state="translated">&lt;code&gt;inline-template&lt;/code&gt; - booleano</target>
        </trans-unit>
        <trans-unit id="9f931b5aba074b0ec94889239e1100bda9938fd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inserted&lt;/code&gt;: called when the bound element has been inserted into its parent node (this only guarantees parent node presence, not necessarily in-document).</source>
          <target state="translated">&lt;code&gt;inserted&lt;/code&gt; : se llama cuando el elemento vinculado se ha insertado en su nodo principal (esto solo garantiza la presencia del nodo principal, no necesariamente en el documento).</target>
        </trans-unit>
        <trans-unit id="7f1b3ca84e2645c5da2d4ef782e3b8a3d927f62a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;instance&lt;/code&gt;: The instance of the component where directive is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="996ecba7b3342b9c64a8c1572b54189569fe0bc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is&lt;/code&gt; - &lt;code&gt;string | Component&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc62b24563568e7e1a3f4f59f212ecd11162f27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;is&lt;/code&gt; - string | ComponentDefinition | ComponentConstructor</source>
          <target state="translated">&lt;code&gt;is&lt;/code&gt; - cadena | ComponentDefinition | ComponenteConstructor</target>
        </trans-unit>
        <trans-unit id="02370530c1e40e818e4870c2e12f8f9af2ac4231" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;itemRefs&lt;/code&gt; doesn't have to be an array: it can also be an object where the refs are set by their iteration keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8d7b4a4e2a4fb6925bad906c32ff01806bda36f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keep-alive&lt;/code&gt; Attribute &lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;keep-alive&lt;/code&gt; Atributo de mantener vivo &lt;sup&gt;reemplazado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="2e13ca54f1e69775d6673c6926ff9ff26b63a12c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keep-alive&lt;/code&gt; is no longer a special attribute, but rather a wrapper component, similar to &lt;code&gt;&amp;lt;transition&amp;gt;&lt;/code&gt;. For example:</source>
          <target state="translated">&lt;code&gt;keep-alive&lt;/code&gt; ya no es un atributo especial, sino m&amp;aacute;s bien un componente contenedor, similar a &lt;code&gt;&amp;lt;transition&amp;gt;&lt;/code&gt; . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="2a10978fd450f53d2160919497a919648bbf31a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keep-alive&lt;/code&gt; with Dynamic Components</source>
          <target state="translated">&lt;code&gt;keep-alive&lt;/code&gt; con componentes din&amp;aacute;micos</target>
        </trans-unit>
        <trans-unit id="f7127e64a220bc70ee5b9cb87d40ca7aa8e4caae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt; attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d49069eaf74606df2518a89c27fe60c99d7bf5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt; usage on &lt;code&gt;&amp;lt;template v-for&amp;gt;&lt;/code&gt; and non-&lt;code&gt;v-for&lt;/code&gt; nodes has changed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2afa358b105e354a24538073fe5c5587daec5b28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt; with &lt;code&gt;v-for&lt;/code&gt; is &lt;em&gt;always&lt;/em&gt; required on components, in order to maintain internal component state down the subtree. Even for elements though, it&amp;rsquo;s a good practice to maintain predictable behavior, such as &lt;a href=&quot;https://bost.ocks.org/mike/constancy/&quot;&gt;object constancy&lt;/a&gt; in animations.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; con &lt;code&gt;v-for&lt;/code&gt; est&amp;aacute; &lt;em&gt;siempre&lt;/em&gt; requiere de componentes, con el fin de mantener el estado de los componentes internos por el sub-&amp;aacute;rbol. Sin embargo, incluso para los elementos, es una buena pr&amp;aacute;ctica mantener un comportamiento predecible, como la &lt;a href=&quot;https://bost.ocks.org/mike/constancy/&quot;&gt;constancia del objeto&lt;/a&gt; en las animaciones.</target>
        </trans-unit>
        <trans-unit id="681b63df3f3a4fb3477209f9d1459c095997467f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt; with &lt;code&gt;v-for&lt;/code&gt; is &lt;em&gt;always&lt;/em&gt; required on components, in order to maintain internal component state down the subtree. Even for elements though, it's a good practice to maintain predictable behavior, such as &lt;a href=&quot;https://bost.ocks.org/mike/constancy/&quot;&gt;object constancy (opens new window)&lt;/a&gt; in animations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf8b16160992d4d9aea99cdeb5ace887d8de17b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keyCode&lt;/code&gt; support as &lt;code&gt;v-on&lt;/code&gt; modifiers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d78993508cf715b15147df7bca21d80246c2b53b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lazy&lt;/code&gt; or &lt;code&gt;number&lt;/code&gt; Param Attributes for &lt;code&gt;v-model&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;lazy&lt;/code&gt; Atributos de par&amp;aacute;metros perezosos o &lt;code&gt;number&lt;/code&gt; para &lt;code&gt;v-model&lt;/code&gt; &lt;sup&gt;reemplazado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="e03dd3b89f70a8b5ed5bd0b0b5958f9720abc651" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;leave-active-class&lt;/code&gt; - &lt;code&gt;string&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a08b6df28cae76117c4ab8fe07cc45242b3f8a4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;leave-active-class&lt;/code&gt; - string</source>
          <target state="translated">&lt;code&gt;leave-active-class&lt;/code&gt; - cadena</target>
        </trans-unit>
        <trans-unit id="7a5afe9af6aac5227721f835c3b142948d056010" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;leave-cancelled&lt;/code&gt; (&lt;code&gt;v-show&lt;/code&gt; only)</source>
          <target state="translated">&lt;code&gt;leave-cancelled&lt;/code&gt; (solo &lt;code&gt;v-show&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="8ca3b0a8c59e4c007244434f8050569c9d027687" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;leave-class&lt;/code&gt; - string</source>
          <target state="translated">&lt;code&gt;leave-class&lt;/code&gt; - cadena</target>
        </trans-unit>
        <trans-unit id="b67e2a8aec84a0dcc75c4e896fbb35468e0faecf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;leave-class&lt;/code&gt; is renamed to &lt;code&gt;leave-from-class&lt;/code&gt; (can be written as &lt;code&gt;leaveFromClass&lt;/code&gt; in render functions or JSX)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55c8b812e54c62db7c71086e081ec53550c31f81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;leave-from-class&lt;/code&gt; - &lt;code&gt;string&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8828250425898a434e6926fbea4927a417797d47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;leave-to-class&lt;/code&gt; (2.1.8+)</source>
          <target state="translated">&lt;code&gt;leave-to-class&lt;/code&gt; (2.1.8+)</target>
        </trans-unit>
        <trans-unit id="e2f6383fc7d906fae944e67794080ca81467a0d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;leave-to-class&lt;/code&gt; - &lt;code&gt;string&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c88360cb7fd1652355b7eed49afba9cb42438b92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;leave-to-class&lt;/code&gt; - string</source>
          <target state="translated">&lt;code&gt;leave-to-class&lt;/code&gt; - cadena</target>
        </trans-unit>
        <trans-unit id="0f400545b6b035c2dbd561c3ecd19bcdf439921c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;listeners&lt;/code&gt; are now passed as part of &lt;code&gt;$attrs&lt;/code&gt; and can be removed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0bebbe0666d8906fd1a0501b28c019e728cad6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;listeners&lt;/code&gt;: (2.3.0+) An object containing parent-registered event listeners. This is an alias to &lt;code&gt;data.on&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;listeners&lt;/code&gt; : (2.3.0+) Un objeto que contiene oyentes de eventos registrados por los padres. Este es un alias para &lt;code&gt;data.on&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9f9fb278d6fb785e09cffd3903edeb8b9e62eca8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;markRaw&lt;/code&gt; and the shallowXXX APIs below allow you to selectively opt-out of the default deep reactive/readonly conversion and embed raw, non-proxied objects in your state graph. They can be used for various reasons:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a16ec416c4397c3e282a7cae85dfb5f0164eb72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max&lt;/code&gt; - &lt;code&gt;number | string&lt;/code&gt;. The maximum number of component instances to cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43fbba728dab31fb9af02fa9033f9162d11c962c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max&lt;/code&gt; - number. The maximum number of component instances to cache.</source>
          <target state="translated">&lt;code&gt;max&lt;/code&gt; - numero. El n&amp;uacute;mero m&amp;aacute;ximo de instancias de componentes para almacenar en cach&amp;eacute;.</target>
        </trans-unit>
        <trans-unit id="bcfa89112689d616967bfd605aae624532d71d2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mode&lt;/code&gt; - &lt;code&gt;string&lt;/code&gt; Controls the timing sequence of leaving/entering transitions. Available modes are &lt;code&gt;&quot;out-in&quot;&lt;/code&gt; and &lt;code&gt;&quot;in-out&quot;&lt;/code&gt;; defaults to simultaneous.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8598085076815efa8425e2063bee8efc6ee0291" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mode&lt;/code&gt; - string, Controls the timing sequence of leaving/entering transitions. Available modes are &lt;code&gt;&quot;out-in&quot;&lt;/code&gt; and &lt;code&gt;&quot;in-out&quot;&lt;/code&gt;; defaults to simultaneous.</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; - cadena, controla la secuencia de tiempo de las transiciones de entrada / salida. Los modos disponibles son &lt;code&gt;&quot;out-in&quot;&lt;/code&gt; y &lt;code&gt;&quot;in-out&quot;&lt;/code&gt; ; por defecto es simult&amp;aacute;neo.</target>
        </trans-unit>
        <trans-unit id="14b72a65d245fe3636b70a741bd17ce5ccadb4a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;modifiers&lt;/code&gt;: An object containing modifiers, if any. For example in &lt;code&gt;v-my-directive.foo.bar&lt;/code&gt;, the modifiers object would be &lt;code&gt;{ foo: true, bar: true }&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;modifiers&lt;/code&gt; : un objeto que contiene modificadores, si los hay. Por ejemplo, en &lt;code&gt;v-my-directive.foo.bar&lt;/code&gt; , el objeto de modificadores ser&amp;iacute;a &lt;code&gt;{ foo: true, bar: true }&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="192d7ef4c6d4a713fb9ac97998a55b1154c11c22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mounted&lt;/code&gt; -&amp;gt; &lt;code&gt;onMounted&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34461c41507831913d9b065c9d6adbf8895fd779" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mounted&lt;/code&gt;: called when the bound element's parent component is mounted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72588d259ffe17b0a4386f312a5bafa07db4ce52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;move-class&lt;/code&gt; - overwrite CSS class applied during moving transition.</source>
          <target state="translated">&lt;code&gt;move-class&lt;/code&gt; : sobrescribe la clase CSS aplicada durante la transici&amp;oacute;n de movimiento.</target>
        </trans-unit>
        <trans-unit id="11012a0804d1eaa5da932ca5def018569b7149b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; - &lt;code&gt;string&lt;/code&gt; Used to automatically generate transition CSS class names. e.g. &lt;code&gt;name: 'fade'&lt;/code&gt; will auto expand to &lt;code&gt;.fade-enter&lt;/code&gt;, &lt;code&gt;.fade-enter-active&lt;/code&gt;, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ab44986853b8833dd401506ea75dfa4fbdd5483" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; - &lt;code&gt;string&lt;/code&gt;, Used for named slot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baeb9a2898aff240dde6e5bae7adeb5b87671da4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; - string, Used for named slot.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; - cadena, utilizado para la ranura con nombre.</target>
        </trans-unit>
        <trans-unit id="abea443462ccde387a337989730c363b2970b95e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; - string, Used to automatically generate transition CSS class names. e.g. &lt;code&gt;name: 'fade'&lt;/code&gt; will auto expand to &lt;code&gt;.fade-enter&lt;/code&gt;, &lt;code&gt;.fade-enter-active&lt;/code&gt;, etc. Defaults to &lt;code&gt;&quot;v&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; - string, se utiliza para generar autom&amp;aacute;ticamente nombres de clases CSS de transici&amp;oacute;n. por ejemplo, &lt;code&gt;name: 'fade'&lt;/code&gt; se expandir&amp;aacute; autom&amp;aacute;ticamente a &lt;code&gt;.fade-enter&lt;/code&gt; , &lt;code&gt;.fade-enter-active&lt;/code&gt; , etc. El valor predeterminado es &lt;code&gt;&quot;v&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="706a2107f46e7eb9c04b46a76e5af2dc0f595d30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;: The name of the directive, without the &lt;code&gt;v-&lt;/code&gt; prefix.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; : El nombre de la directiva, sin el prefijo &lt;code&gt;v-&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="819c2fd31db61e9c872eb0443e322856acd0102c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;null&lt;/code&gt;, &lt;code&gt;'false'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46595fd18903e166055289a315304f859ecaee3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;oldValue&lt;/code&gt;: The previous value, only available in &lt;code&gt;beforeUpdate&lt;/code&gt; and &lt;code&gt;updated&lt;/code&gt;. It is available whether or not the value has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db6699c1d3862b1dc3909a2907c95717f793dd3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;oldValue&lt;/code&gt;: The previous value, only available in &lt;code&gt;update&lt;/code&gt; and &lt;code&gt;componentUpdated&lt;/code&gt;. It is available whether or not the value has changed.</source>
          <target state="translated">&lt;code&gt;oldValue&lt;/code&gt; : el valor anterior, solo disponible en &lt;code&gt;update&lt;/code&gt; y &lt;code&gt;componentUpdated&lt;/code&gt; . Est&amp;aacute; disponible tanto si el valor ha cambiado como si no.</target>
        </trans-unit>
        <trans-unit id="d109ab71ebfdcfca36ddf6d28cd07b4dd835bd1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;oldVnode&lt;/code&gt;: The previous virtual node, only available in the &lt;code&gt;update&lt;/code&gt; and &lt;code&gt;componentUpdated&lt;/code&gt; hooks.</source>
          <target state="translated">&lt;code&gt;oldVnode&lt;/code&gt; : El nodo virtual anterior, solo disponible en los hooks &lt;code&gt;update&lt;/code&gt; y &lt;code&gt;componentUpdated&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c07e1b02882461c135c94454bca0bc70aead1e6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onTrack&lt;/code&gt; and &lt;code&gt;onTrigger&lt;/code&gt; only work in development mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34786ff8b891fdce6c55063f4e512499aa4cb093" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onTrack&lt;/code&gt; will be called when a reactive property or ref is tracked as a dependency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe8820e3b6267c75eeb905a97a36a2ac25f3ab9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onTrigger&lt;/code&gt; will be called when the watcher callback is triggered by the mutation of a dependency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ffd5fe16641bf7b288f66a3d1c90b239a88a734" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;out-in&lt;/code&gt;: Current element transitions out first, then when complete, the new element transitions in.</source>
          <target state="translated">&lt;code&gt;out-in&lt;/code&gt; : el elemento actual sale primero, luego, cuando se completa, el nuevo elemento entra.</target>
        </trans-unit>
        <trans-unit id="b69fce8e543f67997ddc8e156d2a0eb8f26820f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parent&lt;/code&gt;: A reference to the parent component</source>
          <target state="translated">&lt;code&gt;parent&lt;/code&gt; : una referencia al componente padre</target>
        </trans-unit>
        <trans-unit id="41c951702bfe3bd76c982e642246d08642280fe0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;persisted&lt;/code&gt; - &lt;code&gt;boolean&lt;/code&gt;. If true, indicates this is a transition that doesn't actually insert/remove the element, but toggles the show / hidden status instead. The transition hooks are injected, but will be skipped by the renderer. Instead, a custom directive can control the transition by calling the injected hooks (e.g. &lt;code&gt;v-show&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e52c3446f7c5f4a54de58d2abc4226875f84288" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;props&lt;/code&gt;/&lt;code&gt;propsData&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;props&lt;/code&gt;/&lt;code&gt;propsData&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dfd018d4a105b96b50db1a14fe39c60c3b6f379d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;props&lt;/code&gt;: An object of the provided props</source>
          <target state="translated">&lt;code&gt;props&lt;/code&gt; : un objeto de los props proporcionados</target>
        </trans-unit>
        <trans-unit id="510f3f4dc2c62c4e956d7258a263c4c20918d28a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;provide&lt;/code&gt; and &lt;code&gt;inject&lt;/code&gt; are primarily provided for advanced plugin / component library use cases. It is NOT recommended to use them in generic application code.</source>
          <target state="translated">&lt;code&gt;provide&lt;/code&gt; e &lt;code&gt;inject&lt;/code&gt; se proporcionan principalmente para casos de uso de bibliotecas de complementos / componentes avanzados. NO se recomienda utilizarlos en un c&amp;oacute;digo de aplicaci&amp;oacute;n gen&amp;eacute;rico.</target>
        </trans-unit>
        <trans-unit id="cd50360902f2180e1c20252813965a4fa27fb9fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;provide&lt;/code&gt; and &lt;code&gt;inject&lt;/code&gt; enables dependency injection. Both can only be called during &lt;a href=&quot;#setup&quot;&gt;&lt;code&gt;setup()&lt;/code&gt;&lt;/a&gt; with a current active instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dde5e2722b50d4eeafbab8d148cadad31e07b31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;provide&lt;/code&gt;/&lt;code&gt;inject&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;provide&lt;/code&gt;/&lt;code&gt;inject&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b6a87fe8f5ec1cbb5cf2e36f13ef2eba3d0f06b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reactive&lt;/code&gt; is the equivalent of the &lt;code&gt;Vue.observable()&lt;/code&gt; API in Vue 2.x, renamed to avoid confusion with RxJS observables. Here, the returned state is a reactive object. The reactive conversion is &quot;deep&quot; - it affects all nested properties of the passed object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b24c2549fd1fe0fe8e8616652f54be0f4bb39ebd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reactive&lt;/code&gt; will unwrap all the deep &lt;a href=&quot;refs-api#ref&quot;&gt;refs&lt;/a&gt;, while maintaining the ref reactivity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecadb55ebd7d5d9984625f8b695103168946d769" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ready&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;ready&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="d3e034ce50bbeb08a9e76daeeb150a5d82e8d514" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ref&lt;/code&gt; inside &lt;code&gt;v-for&lt;/code&gt; no longer register an array of refs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05c7db69753c6068f522a1fa2042ebbe18aee583" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ref&lt;/code&gt; is used to register a reference to an element or a child component. The reference will be registered under the parent component&amp;rsquo;s &lt;code&gt;$refs&lt;/code&gt; object. If used on a plain DOM element, the reference will be that element; if used on a child component, the reference will be component instance:</source>
          <target state="translated">&lt;code&gt;ref&lt;/code&gt; se utiliza para registrar una referencia a un elemento o componente hijo. La referencia se registrar&amp;aacute; en el objeto &lt;code&gt;$refs&lt;/code&gt; del componente principal . Si se usa en un elemento DOM simple, la referencia ser&amp;aacute; ese elemento; si se usa en un componente hijo, la referencia ser&amp;aacute; la instancia del componente:</target>
        </trans-unit>
        <trans-unit id="e6a8ba23f902814551aff143eb7499f01ddef78e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ref&lt;/code&gt; is used to register a reference to an element or a child component. The reference will be registered under the parent component's &lt;code&gt;$refs&lt;/code&gt; object. If used on a plain DOM element, the reference will be that element; if used on a child component, the reference will be component instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ede0aa913e1ebfff44f086b6ba1532f0386c9dd1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ref&lt;/code&gt; takes the argument and returns it wrapped within an object with a &lt;code&gt;value&lt;/code&gt; property, which can then be used to access or mutate the value of the reactive variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74b5a947bf0be64b7c5ce0fe06ff09bbfebbf40d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ref&lt;/code&gt; will return a reactive and mutable object that serves as a reactive &lt;strong&gt;ref&lt;/strong&gt;erence to the internal value it is holding - that's where the name comes from. This object contains the only one property named &lt;code&gt;value&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3190a2877294298b743d9d669a32b2bce2aae229" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;renderTracked&lt;/code&gt; -&amp;gt; &lt;code&gt;onRenderTracked&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed6f289f39002e413c34ead6021e3979cf6b886f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;renderTriggered&lt;/code&gt; -&amp;gt; &lt;code&gt;onRenderTriggered&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5066d8ba54bbfdd3dcdd9ed758cdd3075df32596" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replace: false&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;replace: false&lt;/code&gt; &lt;sup&gt;eliminado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="64cc63f77ca6d5ea86ee6a9a3ce5b0052a6d1d18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;required&lt;/code&gt;: &lt;code&gt;Boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;required&lt;/code&gt; : &lt;code&gt;Boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e7117f4c34dc799d07b06f1e1a0ef386ae0e4cb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;required&lt;/code&gt;: &lt;code&gt;Boolean&lt;/code&gt; Defines if the prop is required. In a non-production environment, a console warning will be thrown if this value is truthy and the prop is not passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57f84785f36eeb7755fc8da382592fd4a8ae56df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resolveComponent&lt;/code&gt; can only be used within &lt;code&gt;render&lt;/code&gt; or &lt;code&gt;setup&lt;/code&gt; functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9443f0a16abf355dc1ae1b672a0cf363e9204fb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resolveComponent&lt;/code&gt; is the same function that templates use internally to resolve components by name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85a7fa17e21d52c2b8b2f4bd201c81cf041aae38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resolveDirective&lt;/code&gt; can only be used within &lt;code&gt;render&lt;/code&gt; or &lt;code&gt;setup&lt;/code&gt; functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64b2aaf455fd14e13617718598e37dae9aba4587" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resolveDynamicComponent&lt;/code&gt; can only be used within &lt;code&gt;render&lt;/code&gt; or &lt;code&gt;setup&lt;/code&gt; functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="207dbe296a7293881fea2f26f89c9c5e76aaaa52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;root&lt;/code&gt;&lt;sup&gt;renamed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;root&lt;/code&gt;&lt;sup&gt;renamed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="d31ade615fead4ed11400c862e522e959bca81f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;router.alias&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;router.alias&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="6d235a33ebfcc70753eda5fc537e7b5670420627" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;router.beforeEach&lt;/code&gt; now works asynchronously and takes a &lt;code&gt;next&lt;/code&gt; function as its third argument.</source>
          <target state="translated">&lt;code&gt;router.beforeEach&lt;/code&gt; ahora funciona de forma asincr&amp;oacute;nica y toma una funci&amp;oacute;n &lt;code&gt;next&lt;/code&gt; como tercer argumento.</target>
        </trans-unit>
        <trans-unit id="ff8aab9f87d9c0c7dbe778da952d009685f93389" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;router.beforeEach&lt;/code&gt;&lt;sup&gt;changed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;router.beforeEach&lt;/code&gt;&lt;sup&gt;changed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="3ea728e40b071c74ac4272693bfaadb0de0ec446" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;router.go&lt;/code&gt;&lt;sup&gt;changed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;router.go&lt;/code&gt;&lt;sup&gt;changed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="090544bb056281ba9532c8047cdaf9d0d05e4b37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;router.map&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;router.map&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="1cb232b82834dbf9069b8e2a3017f5c2f7599833" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;router.on&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;router.on&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="4b4a806b2a9e280f31484e4c9315222146785c89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;router.redirect&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;router.redirect&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="d3a502b26b8df97f647fefded3f6190b80d3b753" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;router.start&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;router.start&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9426905c5ec52abca9d619ad5ac53ebd0df504af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;saveScrollPosition&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;saveScrollPosition&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="750fc68ce05b7623d61194ba5ced2a9965083d04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scopedSlots&lt;/code&gt;: (2.6.0+) An object that exposes passed-in scoped slots. Also exposes normal slots as functions.</source>
          <target state="translated">&lt;code&gt;scopedSlots&lt;/code&gt; : (2.6.0+) Un objeto que expone ranuras de alcance pasadas. Tambi&amp;eacute;n expone las ranuras normales como funciones.</target>
        </trans-unit>
        <trans-unit id="c58cc9acf63fac2bba40b22ca6386c2a8d83f39e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setup&lt;/code&gt; Component Option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5806ab4c64bd040879266e7bff90cd51a3ccf08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setup&lt;/code&gt; can also return a render function which can directly make use of the reactive state declared in the same scope:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14fce8335392d3730841fa1233d2309ba4f93041" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setup&lt;/code&gt; can also return a render function, which can directly make use of reactive state declared in the same scope:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09a7ac51e5bc69e610566b1b75e2040b43a35985" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setup&lt;/code&gt; is called right after the initial props resolution when a component instance is created. Lifecycle-wise, it is called before the &lt;a href=&quot;options-lifecycle-hooks#beforecreate&quot;&gt;beforeCreate&lt;/a&gt; hook.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be6acdedeb90ff9f879626d5083830df3cc966bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;slot&lt;/code&gt; Attribute Styling &lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;slot&lt;/code&gt; Estilo de atributo de ranura &lt;sup&gt;eliminado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="30c8704048fac60e76439f5e473f80fc63e77468" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;slots()&lt;/code&gt; vs &lt;code&gt;children&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;slots()&lt;/code&gt; vs &lt;code&gt;children&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f0c9597a5adf0662207be820362cba0d788aa06d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;slots&lt;/code&gt;: A function returning a slots object</source>
          <target state="translated">&lt;code&gt;slots&lt;/code&gt; : una funci&amp;oacute;n que devuelve un objeto de ranuras</target>
        </trans-unit>
        <trans-unit id="614fd4e34f12a2cc77f1dcde422c2f230afdf54f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;spellcheck&lt;/code&gt; &amp;rarr; &lt;code&gt;true&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2938d10c13ed025e9c15a9049d79f79623d5cddc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;store.watch&lt;/code&gt; now only accept functions. So for example, you would have to replace:</source>
          <target state="translated">&lt;code&gt;store.watch&lt;/code&gt; ahora solo acepta funciones. Entonces, por ejemplo, tendr&amp;iacute;a que reemplazar:</target>
        </trans-unit>
        <trans-unit id="391f67608584adfc4b9528f29c3a2fa54a756c5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;store.watch&lt;/code&gt; with String Property Path &lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;store.watch&lt;/code&gt; con String Property Path &lt;sup&gt;reemplazado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="7eb52512aea5ab4186101123ac78aca277e764b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;subRoutes&lt;/code&gt;&lt;sup&gt;renamed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;subRoutes&lt;/code&gt;&lt;sup&gt;renamed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="53f39029f6654e10e0b0f4858f5adac0e499bc88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;suppressTransitionError&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;suppressTransitionError&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="95eebc1526a1621c21aae4af29b6f8850cd2cdd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tag&lt;/code&gt; - &lt;code&gt;string&lt;/code&gt;, if not defined, renders without a root element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9996b73c5e1a3a4d66d16981be645162a1cf9f52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;tag&lt;/code&gt; - string, defaults to &lt;code&gt;span&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tag&lt;/code&gt; - cadena, por defecto es &lt;code&gt;span&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="25a50b60855fd86d7443b30508e35a2d1689e4f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;template&lt;/code&gt;/&lt;code&gt;render&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;template&lt;/code&gt;/&lt;code&gt;render&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="67064ed2d7d657be153b7d06dfee4e42c1dceb12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;this.$slots&lt;/code&gt; now exposes slots as functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb9b8919e464347c622f9daefe73d375f79b608" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to&lt;/code&gt; - &lt;code&gt;string&lt;/code&gt;. Required prop, has to be a valid query selector, or an HTMLElement (if used in a browser environment). Specifies a target element where &lt;code&gt;&amp;lt;teleport&amp;gt;&lt;/code&gt; content will be moved</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="757800fd50abd230b5115bd6d8a735869fe9b55b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toRef&lt;/code&gt; is useful when you want to pass the ref of a prop to a composition function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab11e852b09aefeddc2be437067e411586b231a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toRef&lt;/code&gt; will return a usable ref even if the source property doesn't currently exist. This makes it especially useful when working with optional props, which wouldn't be picked up by &lt;a href=&quot;#torefs&quot;&gt;&lt;code&gt;toRefs&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="126fd1f6a5ab2b1d3c48f10e023e2687c78324b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toRefs&lt;/code&gt; is useful when returning a reactive object from a composition function so that the consuming component can destructure/spread the returned object without losing reactivity:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37a49041d490948ec52a3fa37dd7c518919f0135" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toRefs&lt;/code&gt; will only generate refs for properties that are included in the source object. To create a ref for a specific property use &lt;a href=&quot;#toref&quot;&gt;&lt;code&gt;toRef&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be115e23827953e91e44a8354fea36b6eb0c017c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;track-by&lt;/code&gt; has been replaced with &lt;code&gt;key&lt;/code&gt;, which works like any other attribute: without the &lt;code&gt;v-bind:&lt;/code&gt; or &lt;code&gt;:&lt;/code&gt; prefix, it is treated as a literal string. In most cases, you&amp;rsquo;d want to use a dynamic binding which expects a full expression instead of a key. For example, in place of:</source>
          <target state="translated">&lt;code&gt;track-by&lt;/code&gt; ha sido reemplazado por &lt;code&gt;key&lt;/code&gt; , que funciona como cualquier otro atributo: sin el prefijo &lt;code&gt;v-bind:&lt;/code&gt; or &lt;code&gt;:&lt;/code&gt; , se trata como una cadena literal. En la mayor&amp;iacute;a de los casos, querr&amp;aacute; utilizar un enlace din&amp;aacute;mico que espera una expresi&amp;oacute;n completa en lugar de una clave. Por ejemplo, en lugar de:</target>
        </trans-unit>
        <trans-unit id="def84db176e788d81060b53638ce6c5fb7d626d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;track-by&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;track-by&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="5456e868d7dd4e84e77edf065a4b1337e771efb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transition&lt;/code&gt; Attribute &lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;transition&lt;/code&gt; Atributo de transici&amp;oacute;n &lt;sup&gt;reemplazado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="8c718391dc9f677574dd7ad2d64f4f184ed224c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transitionOnLoad&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;transitionOnLoad&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="02ab6e004268774ceebe6ba44ebb4b225e471c61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt;, &lt;code&gt;'true'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="018f0b8e4786079ad7ed450c44f7c06807e89353" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt;, &lt;code&gt;'true'&lt;/code&gt;, &lt;code&gt;''&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;'foo'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1832ed07f0e7e319ddeed58bc8d64b4f8321854b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;twoWay&lt;/code&gt; Prop Option &lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;twoWay&lt;/code&gt; Opci&amp;oacute;n de accesorio de dos v&amp;iacute;as &lt;sup&gt;eliminada&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="898cd5e9442af8819133dec1c5cbbeb7b45c8525" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt; - &lt;code&gt;string&lt;/code&gt;. Specifies the type of transition events to wait for to determine transition end timing. Available values are &lt;code&gt;&quot;transition&quot;&lt;/code&gt; and &lt;code&gt;&quot;animation&quot;&lt;/code&gt;. By default, it will automatically detect the type that has a longer duration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26d2de3080b59e8422fba94bbbee240c622a552b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt; - string, Specifies the type of transition events to wait for to determine transition end timing. Available values are &lt;code&gt;&quot;transition&quot;&lt;/code&gt; and &lt;code&gt;&quot;animation&quot;&lt;/code&gt;. By default, it will automatically detect the type that has a longer duration.</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; - string, Especifica el tipo de eventos de transici&amp;oacute;n a esperar para determinar el tiempo de finalizaci&amp;oacute;n de la transici&amp;oacute;n. Los valores disponibles son &lt;code&gt;&quot;transition&quot;&lt;/code&gt; y &lt;code&gt;&quot;animation&quot;&lt;/code&gt; . De forma predeterminada, detectar&amp;aacute; autom&amp;aacute;ticamente el tipo que tiene una mayor duraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="cf79f0305a910aff63536a07ae9d38683bb2093f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt;: can be one of the following native constructors: &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Number&lt;/code&gt;, &lt;code&gt;Boolean&lt;/code&gt;, &lt;code&gt;Array&lt;/code&gt;, &lt;code&gt;Object&lt;/code&gt;, &lt;code&gt;Date&lt;/code&gt;, &lt;code&gt;Function&lt;/code&gt;, &lt;code&gt;Symbol&lt;/code&gt;, any custom constructor function or an array of those. Will check if a prop has a given type, and will throw a warning if it doesn&amp;rsquo;t. &lt;a href=&quot;../guide/components-props#Prop-Types&quot;&gt;More information&lt;/a&gt; on prop types.</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; : puede ser uno de los siguientes constructores nativos: &lt;code&gt;String&lt;/code&gt; , &lt;code&gt;Number&lt;/code&gt; , &lt;code&gt;Boolean&lt;/code&gt; o , &lt;code&gt;Array&lt;/code&gt; , &lt;code&gt;Object&lt;/code&gt; , &lt;code&gt;Date&lt;/code&gt; , &lt;code&gt;Function&lt;/code&gt; , &lt;code&gt;Symbol&lt;/code&gt; , cualquier funci&amp;oacute;n de constructor personalizado o una matriz de esos. Verificar&amp;aacute; si un accesorio tiene un tipo determinado y lanzar&amp;aacute; una advertencia si no lo tiene. &lt;a href=&quot;../guide/components-props#Prop-Types&quot;&gt;M&amp;aacute;s informaci&amp;oacute;n&lt;/a&gt; sobre tipos de accesorios.</target>
        </trans-unit>
        <trans-unit id="4cf9e3cc3ba439416a819e4766c8cbcf27d57e13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt;: can be one of the following native constructors: &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Number&lt;/code&gt;, &lt;code&gt;Boolean&lt;/code&gt;, &lt;code&gt;Array&lt;/code&gt;, &lt;code&gt;Object&lt;/code&gt;, &lt;code&gt;Date&lt;/code&gt;, &lt;code&gt;Function&lt;/code&gt;, &lt;code&gt;Symbol&lt;/code&gt;, any custom constructor function or an array of those. Will check if a prop has a given type, and will throw a warning if it doesn't. &lt;a href=&quot;../guide/component-props#prop-types&quot;&gt;More information&lt;/a&gt; on prop types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89dc368fad48479896fef14b62931a19bb4220e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unbind&lt;/code&gt;: called only once, when the directive is unbound from the element.</source>
          <target state="translated">&lt;code&gt;unbind&lt;/code&gt; : se llama solo una vez, cuando la directiva se desvincula del elemento.</target>
        </trans-unit>
        <trans-unit id="fd588f7e7037b65ead061c51a468db1b5635502f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;undefined&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9427946ae85e4bd51b911cb0e30d57fb68e6015" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;undefined&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8c3e2262941b857b355707039b7337928cab291" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;undefined&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2a57d4cfa5f483d2eef6ba67dc0175f8321239d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unmounted&lt;/code&gt; -&amp;gt; &lt;code&gt;onUnmounted&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="815b1c4985007aa6c9b0769781fec9e0bb5acaa5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unmounted&lt;/code&gt;: called only once, when the directive is unbound from the element and the parent component is unmounted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b56e0c2a7a52ab8cf1a4078febf74669e452078" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;update&lt;/code&gt;: called after the containing component&amp;rsquo;s VNode has updated, &lt;strong&gt;but possibly before its children have updated&lt;/strong&gt;. The directive&amp;rsquo;s value may or may not have changed, but you can skip unnecessary updates by comparing the binding&amp;rsquo;s current and old values (see below on hook arguments).</source>
          <target state="translated">&lt;code&gt;update&lt;/code&gt; : se llama despu&amp;eacute;s de que el VNode del componente contenedor se haya actualizado, &lt;strong&gt;pero posiblemente antes de que sus hijos se hayan actualizado&lt;/strong&gt; . El valor de la directiva puede haber cambiado o no, pero puede omitir actualizaciones innecesarias comparando los valores actuales y antiguos del enlace (ver m&amp;aacute;s abajo los argumentos del gancho).</target>
        </trans-unit>
        <trans-unit id="942b9c7226b569eb98f02878ba025d556d0c17fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;updated&lt;/code&gt; -&amp;gt; &lt;code&gt;onUpdated&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b64a7242b8204ac47b600ec93f333aef628851" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;updated&lt;/code&gt;: called after the containing component's VNode &lt;strong&gt;and the VNodes of its children&lt;/strong&gt; have updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9115678acd2f07f2ed37efeb9d0f68fc5db3110f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-bind:style&lt;/code&gt; with Object Syntax and &lt;code&gt;!important&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;v-bind:style&lt;/code&gt; con sintaxis de objeto y &lt;code&gt;!important&lt;/code&gt; &lt;sup&gt;eliminado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="5e8b42db442843263eb11be4207372d5f5f40019" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-bind&lt;/code&gt; Shorthand</source>
          <target state="translated">&lt;code&gt;v-bind&lt;/code&gt; taquigraf&amp;iacute;a</target>
        </trans-unit>
        <trans-unit id="ae05a375042bf03b9ac77d95a35119c2aeebcf1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-bind&lt;/code&gt; value &lt;sup&gt;2.x&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc2fccf5c4afc1b8ada06e4082897a79a4d6f58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-bind&lt;/code&gt; value &lt;sup&gt;3.x&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="870f0f6d5d6ae2da50157a3dcbdefae7b55bc0e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-bind=&quot;object&quot;&lt;/code&gt; is now order-sensitive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3045d5e309d9678829b53e2de0f7a3dccedb7ef7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-el&lt;/code&gt; and &lt;code&gt;v-ref&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;v-el&lt;/code&gt; y &lt;code&gt;v-ref&lt;/code&gt; &lt;sup&gt;reemplazados&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="a0c26519225500783bff2666410567d5f9e6dd88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-else&lt;/code&gt; no longer works with &lt;code&gt;v-show&lt;/code&gt;. Use &lt;code&gt;v-if&lt;/code&gt; with a negation expression instead. For example, instead of:</source>
          <target state="translated">&lt;code&gt;v-else&lt;/code&gt; ya no funciona con &lt;code&gt;v-show&lt;/code&gt; . Utilice &lt;code&gt;v-if&lt;/code&gt; con una expresi&amp;oacute;n de negaci&amp;oacute;n. Por ejemplo, en lugar de:</target>
        </trans-unit>
        <trans-unit id="580908b847f846db463d85bc08f552931fe69194" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-else&lt;/code&gt; with &lt;code&gt;v-show&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;v-else&lt;/code&gt; con &lt;code&gt;v-show&lt;/code&gt; &lt;sup&gt;eliminado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="e157d19fd9bacab64c9c12809044c69c6887122a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-enter-active&lt;/code&gt; and &lt;code&gt;v-leave-active&lt;/code&gt; give you the ability to specify different easing curves for enter/leave transitions, which you&amp;rsquo;ll see an example of in the following section.</source>
          <target state="translated">&lt;code&gt;v-enter-active&lt;/code&gt; y &lt;code&gt;v-leave-active&lt;/code&gt; le brindan la capacidad de especificar diferentes curvas de aceleraci&amp;oacute;n para las transiciones de entrada / salida, de las cuales ver&amp;aacute; un ejemplo en la siguiente secci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="1dd824af0555b9cec80c0d5fceac55517a3aec41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-enter-active&lt;/code&gt; and &lt;code&gt;v-leave-active&lt;/code&gt; give you the ability to specify different easing curves for enter/leave transitions, which you'll see an example of in the following section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3297b0d52bd83a2ea12893fc93a3be6cc50ecb71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-enter-active&lt;/code&gt;: Active state for enter. Applied during the entire entering phase. Added before element is inserted, removed when transition/animation finishes. This class can be used to define the duration, delay and easing curve for the entering transition.</source>
          <target state="translated">&lt;code&gt;v-enter-active&lt;/code&gt; : estado activo para entrar. Aplicado durante toda la fase de entrada. Se agrega antes de insertar el elemento, se elimina cuando finaliza la transici&amp;oacute;n / animaci&amp;oacute;n. Esta clase se puede utilizar para definir la duraci&amp;oacute;n, el retraso y la curva de relajaci&amp;oacute;n para la transici&amp;oacute;n de entrada.</target>
        </trans-unit>
        <trans-unit id="3808b383bd781243f80a5b5fd8007db97d7f4725" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-enter-active&lt;/code&gt;: Active state for enter. Applied during the entire entering phase. Added before the element is inserted, removed when the transition/animation finishes. This class can be used to define the duration, delay and easing curve for the entering transition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57916f9166c4d76b1231c6c3796aec5dff58f1ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-enter-from&lt;/code&gt;: Starting state for enter. Added before the element is inserted, removed one frame after the element is inserted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e415c5c39ad185cb80dab3fe98d0678991811706" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-enter-to&lt;/code&gt;: &lt;strong&gt;Only available in versions 2.1.8+.&lt;/strong&gt; Ending state for enter. Added one frame after element is inserted (at the same time &lt;code&gt;v-enter&lt;/code&gt; is removed), removed when transition/animation finishes.</source>
          <target state="translated">&lt;code&gt;v-enter-to&lt;/code&gt; : &lt;strong&gt;solo disponible en las versiones 2.1.8+. &lt;/strong&gt;Estado final para entrar. Se agreg&amp;oacute; un fotograma despu&amp;eacute;s de insertar el elemento (al mismo tiempo que se elimina &lt;code&gt;v-enter&lt;/code&gt; ), se elimina cuando finaliza la transici&amp;oacute;n / animaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="734f6da0632df84e93dce7e415d62182f6411f99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-enter-to&lt;/code&gt;: Ending state for enter. Added one frame after the element is inserted (at the same time &lt;code&gt;v-enter-from&lt;/code&gt; is removed), removed when the transition/animation finishes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff87fb9d5c6bc650a783b4da09454cc3bcc3c5e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-enter&lt;/code&gt;: Starting state for enter. Added before element is inserted, removed one frame after element is inserted.</source>
          <target state="translated">&lt;code&gt;v-enter&lt;/code&gt; : estado inicial para entrar. Se agrega antes de que se inserte el elemento, se elimina un marco despu&amp;eacute;s de que se inserta el elemento.</target>
        </trans-unit>
        <trans-unit id="cf998bc3af7b93def894cd2e30bd66e7bb636a3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-for&lt;/code&gt; Argument Order for Arrays &lt;sup&gt;changed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;v-for&lt;/code&gt; Argument Order for Arrays &lt;sup&gt;cambiado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="6a0ce3df918e64a5aa4a4a999c4be92e8c369b78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-for&lt;/code&gt; Argument Order for Objects &lt;sup&gt;changed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;v-for&lt;/code&gt; Argument Order for Objects ha &lt;sup&gt;cambiado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="c209f149d844955891db73a0e582689094ed00d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-for&lt;/code&gt; Range Values &lt;sup&gt;changed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;v-for&lt;/code&gt; valores de rango &lt;sup&gt;cambiados&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="2021e5e18779bef90f15088bb9dd5a81d0a4c49a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-for&lt;/code&gt; can also take an integer. In this case it will repeat the template that many times.</source>
          <target state="translated">&lt;code&gt;v-for&lt;/code&gt; tambi&amp;eacute;n puede tomar un n&amp;uacute;mero entero. En este caso, repetir&amp;aacute; la plantilla tantas veces.</target>
        </trans-unit>
        <trans-unit id="33e986262c17a1279bd1aad00637a95bd492e762" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-for&lt;/code&gt; can also work on values that implement the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#The_iterable_protocol&quot;&gt;Iterable Protocol (opens new window)&lt;/a&gt;, including native &lt;code&gt;Map&lt;/code&gt; and &lt;code&gt;Set&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bfa6c3bcd9d17a42502f81d6ff8390f75d6c134" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-for&lt;/code&gt; on a &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;v-for&lt;/code&gt; en una &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4d1ab032c0ac4d10c260a24531ae64c77a3f40e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-for&lt;/code&gt; with &lt;code&gt;v-if&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;v-for&lt;/code&gt; con &lt;code&gt;v-if&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="beeea1b128d433211573da690df97f4321c25853" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-for&lt;/code&gt; with a Component</source>
          <target state="translated">&lt;code&gt;v-for&lt;/code&gt; con un componente</target>
        </trans-unit>
        <trans-unit id="3cdfaef106439212576275d28209c738e240a599" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-for&lt;/code&gt; with a Range</source>
          <target state="translated">&lt;code&gt;v-for&lt;/code&gt; con un rango</target>
        </trans-unit>
        <trans-unit id="eb9b587fd7dca0972d2c9abd14c962f23bfcd780" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-for&lt;/code&gt; with an Object</source>
          <target state="translated">&lt;code&gt;v-for&lt;/code&gt; con un objeto</target>
        </trans-unit>
        <trans-unit id="42a9b2ba12de9a8148a11460bcfdeca726dfaa09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-if&lt;/code&gt; and &lt;code&gt;v-for&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;v-if&lt;/code&gt; y &lt;code&gt;v-for&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9d8ccc1807f88bdf18b607e44e793fa35e81bc41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-if&lt;/code&gt; and &lt;code&gt;v-for&lt;/code&gt; precedence when used on the same element has changed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16011b323f5540b76c7e4cda6ff5e72d9b26e1f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-if&lt;/code&gt; is &quot;real&quot; conditional rendering because it ensures that event listeners and child components inside the conditional block are properly destroyed and re-created during toggles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23591f672e0289081d75194970387a4287577680" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-if&lt;/code&gt; is &amp;ldquo;real&amp;rdquo; conditional rendering because it ensures that event listeners and child components inside the conditional block are properly destroyed and re-created during toggles.</source>
          <target state="translated">&lt;code&gt;v-if&lt;/code&gt; es una representaci&amp;oacute;n condicional &quot;real&quot; porque garantiza que los detectores de eventos y los componentes secundarios dentro del bloque condicional se destruyan y se vuelvan a crear correctamente durante los cambios.</target>
        </trans-unit>
        <trans-unit id="ae1fbc8ba2fbbe13b37cdd0f5831b95f896be5fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-if&lt;/code&gt; is also &lt;strong&gt;lazy&lt;/strong&gt;: if the condition is false on initial render, it will not do anything - the conditional block won&amp;rsquo;t be rendered until the condition becomes true for the first time.</source>
          <target state="translated">&lt;code&gt;v-if&lt;/code&gt; tambi&amp;eacute;n es &lt;strong&gt;perezoso&lt;/strong&gt; : si la condici&amp;oacute;n es falsa en el renderizado inicial, no har&amp;aacute; nada; el bloque condicional no se renderizar&amp;aacute; hasta que la condici&amp;oacute;n sea verdadera por primera vez.</target>
        </trans-unit>
        <trans-unit id="79996541b01f79f5316cb09a964c01212f38f6db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-if&lt;/code&gt; is also &lt;strong&gt;lazy&lt;/strong&gt;: if the condition is false on initial render, it will not do anything - the conditional block won't be rendered until the condition becomes true for the first time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42797324576b858592e346be96f0b2a2a43ff8fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-if&lt;/code&gt; vs &lt;code&gt;v-show&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;v-if&lt;/code&gt; vs &lt;code&gt;v-show&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b537d1726649b41482f4cf031a3ed8c89f32a06c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-if&lt;/code&gt; with &lt;code&gt;v-for&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;v-if&lt;/code&gt; con &lt;code&gt;v-for&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="37cbdbe7af25ddc5f7a4fc739d2120c1abc9ca9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-if&lt;/code&gt;/&lt;code&gt;v-else-if&lt;/code&gt;/&lt;code&gt;v-else&lt;/code&gt; without &lt;code&gt;key&lt;/code&gt;&lt;sup&gt;use with caution&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;v-if&lt;/code&gt; / &lt;code&gt;v-else-if&lt;/code&gt; / &lt;code&gt;v-else&lt;/code&gt; sin &lt;code&gt;key&lt;/code&gt; &lt;sup&gt;use con precauci&amp;oacute;n&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="64fc4312d4e9867c3d245fce80c683c3b07aea87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-is&lt;/code&gt; for In-DOM Template Parsing Workarounds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77f543ea7d20bcecc834438fd75fc97c6e328587" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-is&lt;/code&gt; functions like a dynamic 2.x &lt;code&gt;:is&lt;/code&gt; binding - so to render a component by its registered name, its value should be a JavaScript string literal:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef1d2f2cdd70975fb908de11aa575550486b54d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-leave-active&lt;/code&gt;: Active state for leave. Applied during the entire leaving phase. Added immediately when a leave transition is triggered, removed when the transition/animation finishes. This class can be used to define the duration, delay and easing curve for the leaving transition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88d60bd2a84b26098146bc60f770c98c7019c15f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-leave-active&lt;/code&gt;: Active state for leave. Applied during the entire leaving phase. Added immediately when leave transition is triggered, removed when the transition/animation finishes. This class can be used to define the duration, delay and easing curve for the leaving transition.</source>
          <target state="translated">&lt;code&gt;v-leave-active&lt;/code&gt; : Estado activo para salir. Se aplica durante toda la fase de salida. Se agrega inmediatamente cuando se activa la transici&amp;oacute;n de licencia, se elimina cuando finaliza la transici&amp;oacute;n / animaci&amp;oacute;n. Esta clase se puede utilizar para definir la duraci&amp;oacute;n, el retraso y la curva de relajaci&amp;oacute;n para la transici&amp;oacute;n de salida.</target>
        </trans-unit>
        <trans-unit id="60f545060a3c13e6b419a0ca927e3809166b8199" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-leave-from&lt;/code&gt;: Starting state for leave. Added immediately when a leaving transition is triggered, removed after one frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dfc39358d2e5de87afbe5583cbe422d3c129459" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-leave-to&lt;/code&gt;: &lt;strong&gt;Only available in versions 2.1.8+.&lt;/strong&gt; Ending state for leave. Added one frame after a leaving transition is triggered (at the same time &lt;code&gt;v-leave&lt;/code&gt; is removed), removed when the transition/animation finishes.</source>
          <target state="translated">&lt;code&gt;v-leave-to&lt;/code&gt; : &lt;strong&gt;solo disponible en las versiones 2.1.8+. &lt;/strong&gt;Estado final de licencia. Se agreg&amp;oacute; un fotograma despu&amp;eacute;s de que se activa una transici&amp;oacute;n de salida (al mismo tiempo que se elimina &lt;code&gt;v-leave&lt;/code&gt; ), se elimina cuando finaliza la transici&amp;oacute;n / animaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="3be6620979cc8142153b82b25c08d5b3961f70f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-leave-to&lt;/code&gt;: Ending state for leave. Added one frame after a leaving transition is triggered (at the same time &lt;code&gt;v-leave-from&lt;/code&gt; is removed), removed when the transition/animation finishes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d118fe7f5f4d4d501b39a3ba1edfcb29569cff54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-leave&lt;/code&gt;: Starting state for leave. Added immediately when a leaving transition is triggered, removed after one frame.</source>
          <target state="translated">&lt;code&gt;v-leave&lt;/code&gt; : Estado inicial para el permiso. Se agrega inmediatamente cuando se activa una transici&amp;oacute;n de salida, se elimina despu&amp;eacute;s de un fotograma.</target>
        </trans-unit>
        <trans-unit id="38a534c9d7b9b690dde0a32193e846c6aace7935" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-link-active&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;v-link-active&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="da01eb9884e45de3fe87a796c0dae69b748a378d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-link&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;v-link&lt;/code&gt;&lt;sup&gt;replaced&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="423f994ff9496dde6fc924941760fc4200c99af8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-model&lt;/code&gt; arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dac9bb50558a2b36a81a7c8541d1559cc57172dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-model&lt;/code&gt; internally uses different properties and emits different events for different input elements:</source>
          <target state="translated">&lt;code&gt;v-model&lt;/code&gt; utiliza internamente diferentes propiedades y emite diferentes eventos para diferentes elementos de entrada:</target>
        </trans-unit>
        <trans-unit id="c2995a942040ae4c8196cef13d7b0754ade78eff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-model&lt;/code&gt; modifiers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="033dc35c8ffe19ece226c6aded1a771c4f5781ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-model&lt;/code&gt; no longer cares about the initial value of an inline &lt;code&gt;value&lt;/code&gt; attribute. For predictability, it will instead always treat the Vue instance data as the source of truth.</source>
          <target state="translated">&lt;code&gt;v-model&lt;/code&gt; ya no se preocupa por el valor inicial de un atributo de &lt;code&gt;value&lt;/code&gt; l&amp;iacute;nea . En aras de la previsibilidad, siempre tratar&amp;aacute; los datos de la instancia de Vue como la fuente de la verdad.</target>
        </trans-unit>
        <trans-unit id="4fe154be976a5e9fe307325ea3ceec21251a6ef7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-model&lt;/code&gt; usage on components has been reworked, replacing &lt;code&gt;v-bind.sync&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4ab4e58d4889299a58f13ab1b0042156849d73f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-model&lt;/code&gt; will ignore the initial &lt;code&gt;value&lt;/code&gt;, &lt;code&gt;checked&lt;/code&gt; or &lt;code&gt;selected&lt;/code&gt; attributes found on any form elements. It will always treat the Vue instance data as the source of truth. You should declare the initial value on the JavaScript side, inside the &lt;code&gt;data&lt;/code&gt; option of your component.</source>
          <target state="translated">&lt;code&gt;v-model&lt;/code&gt; ignorar&amp;aacute; el &lt;code&gt;value&lt;/code&gt; inicial , &lt;code&gt;selected&lt;/code&gt; atributos &lt;code&gt;checked&lt;/code&gt; o seleccionados que se encuentran en cualquier elemento del formulario. Siempre tratar&amp;aacute; los datos de la instancia de Vue como la fuente de la verdad. Debe declarar el valor inicial en el lado de JavaScript, dentro de la opci&amp;oacute;n de &lt;code&gt;data&lt;/code&gt; de su componente.</target>
        </trans-unit>
        <trans-unit id="ea10e334630eead081a9bbccfc28114b8829b3f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-model&lt;/code&gt; will ignore the initial &lt;code&gt;value&lt;/code&gt;, &lt;code&gt;checked&lt;/code&gt; or &lt;code&gt;selected&lt;/code&gt; attributes found on any form elements. It will always treat the current active instance data as the source of truth. You should declare the initial value on the JavaScript side, inside the &lt;code&gt;data&lt;/code&gt; option of your component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a81b011dc04234d895253e10d4eb4e582bc39271" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-model&lt;/code&gt; with &lt;code&gt;v-for&lt;/code&gt; Iterated Primitive Values &lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;v-model&lt;/code&gt; con &lt;code&gt;v-for&lt;/code&gt; Iterated Primitive Values &lt;sup&gt;eliminado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="67386eded7aef7e3f9cc8d0f1cc5b6a0fa7f1c27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-model&lt;/code&gt; with Components</source>
          <target state="translated">&lt;code&gt;v-model&lt;/code&gt; con componentes</target>
        </trans-unit>
        <trans-unit id="f24e6ce932c7ca040bc5af7be17af1932c3c0233" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-on.native&lt;/code&gt; modifier removed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d6e1105b8d916a0004376e673ca9d1c6b79461" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-on:event.native&lt;/code&gt; modifier has been removed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9dfdc81feb8c731317a77593908fc0eb6decb5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-on&lt;/code&gt; Shorthand</source>
          <target state="translated">&lt;code&gt;v-on&lt;/code&gt; taquigraf&amp;iacute;a v-on</target>
        </trans-unit>
        <trans-unit id="0eb9ecaa719a278f4adcfe658c4071d3d939bfc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-on&lt;/code&gt; also supports binding to an object of event/listener pairs without an argument. Note when using the object syntax, it does not support any modifiers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="270ee63dac9fded9275dc1ec3f804e85846a99a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v-show&lt;/code&gt; doesn't support the &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; element, nor does it work with &lt;code&gt;v-else&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32a18d046cf99bc28f5d0a7de3d15fba126079b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;validator&lt;/code&gt;: &lt;code&gt;Function&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;validator&lt;/code&gt; : &lt;code&gt;Function&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b3c1cdd424116f06a0d904feffc1ece972dd1a91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;validator&lt;/code&gt;: &lt;code&gt;Function&lt;/code&gt; Custom validator function that takes the prop value as the sole argument. In a non-production environment, a console warning will be thrown if this function returns a falsy value (i.e. the validation fails). You can read more about prop validation &lt;a href=&quot;../guide/component-props#prop-validation&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="524bfec1810fa374101aa3f853b0f40a4a8ddf77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; Attribute with &lt;code&gt;v-model&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; Atributo con &lt;code&gt;v-model&lt;/code&gt; &lt;sup&gt;eliminado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="8c1ef74ecfa13228c3724f3a548ba90b93839db2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt;: The value passed to the directive. For example in &lt;code&gt;v-my-directive=&quot;1 + 1&quot;&lt;/code&gt;, the value would be &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; : el valor pasado a la directiva. Por ejemplo, en &lt;code&gt;v-my-directive=&quot;1 + 1&quot;&lt;/code&gt; , el valor ser&amp;iacute;a &lt;code&gt;2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1c44719d0ec5fc8eb73ed93cc532ff73e83afd86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vm.$after&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;vm.$after&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="e8d1f5979a5ef2056db6932733ddf1c6b1e5b210" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vm.$appendTo&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;vm.$appendTo&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="dac0886733b06e13c2eefcc48fb019ea09564a76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vm.$before&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;vm.$before&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="468c796fd3040704dfc7d0471ac19176bfea107b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vm.$delete&lt;/code&gt; is now an alias for &lt;a href=&quot;../api/index#Vue-delete&quot;&gt;&lt;code&gt;Vue.delete&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;vm.$delete&lt;/code&gt; es ahora un alias para &lt;a href=&quot;../api/index#Vue-delete&quot;&gt; &lt;code&gt;Vue.delete&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a4ad40f4acabf9156d1d90b9875bda5e0a2ee8a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vm.$delete&lt;/code&gt;&lt;sup&gt;changed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;vm.$delete&lt;/code&gt;&lt;sup&gt;changed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="1e2be9c383b40bcfc057142704e52d2aaca3a2e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vm.$eval&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;vm.$eval&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="e6eeb4ebcaca34c10de788d4aa119c0bd289d99d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vm.$get&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;vm.$get&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="6f29cf9f3289d71e2d66ebf271f387e1a9862167" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vm.$interpolate&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;vm.$interpolate&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="9b981e50525b0b5fc5f9318c6aeb70475797940c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vm.$log&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;vm.$log&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="71394bd0aeb40eefdfe28de13eb2c13e6e728210" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vm.$remove&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;vm.$remove&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="e6e2447410051eb00a7b91bad8803d96c55166ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vm.$set&lt;/code&gt; is now an alias for &lt;a href=&quot;../api/index#Vue-set&quot;&gt;&lt;code&gt;Vue.set&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;vm.$set&lt;/code&gt; ahora es un alias para &lt;a href=&quot;../api/index#Vue-set&quot;&gt; &lt;code&gt;Vue.set&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="505ab69165cf2995cfb11ea40696d4a5b41e0b61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vm.$set&lt;/code&gt;&lt;sup&gt;changed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;vm.$set&lt;/code&gt;&lt;sup&gt;changed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="57401fef8a8e169e7e929d8614a18377bc030efb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vm.$watch&lt;/code&gt; returns an unwatch function that stops firing the callback:</source>
          <target state="translated">&lt;code&gt;vm.$watch&lt;/code&gt; devuelve una funci&amp;oacute;n unwatch que deja de disparar la devoluci&amp;oacute;n de llamada:</target>
        </trans-unit>
        <trans-unit id="ff0f2fc6816834bc9bd1811fed9f22475501ef05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vm.$watch&lt;/code&gt;&lt;sup&gt;changed&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;vm.$watch&lt;/code&gt;&lt;sup&gt;changed&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="abb21b89e29657db5618127c39362b1e3ae4951e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vnode&lt;/code&gt;: The virtual node produced by Vue&amp;rsquo;s compiler. See the &lt;a href=&quot;../api/index#VNode-Interface&quot;&gt;VNode API&lt;/a&gt; for full details.</source>
          <target state="translated">&lt;code&gt;vnode&lt;/code&gt; : el nodo virtual producido por el compilador de Vue. Consulte la &lt;a href=&quot;../api/index#VNode-Interface&quot;&gt;API de VNode&lt;/a&gt; para obtener detalles completos.</target>
        </trans-unit>
        <trans-unit id="cb652a48bb8a54bc9a6a44f6a996d8c69b0c9972" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vue(.runtime).global(.prod).js&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;vue(.runtime).global(.prod).js&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="cf0f50a872778b7139d46115ff119b147353765c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vue.cjs(.prod).js&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;vue.cjs(.prod).js&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="69ee11c7626f28e17512232b02b96922fa1da3a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vue.esm-bundler.js&lt;/code&gt;: includes the runtime compiler. Use this if you are using a bundler but still want runtime template compilation (e.g. in-DOM templates or templates via inline JavaScript strings). You will need to configure your bundler to alias vue to this file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b12344c6d5744ac2a8cdbfee23689f07c87556ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vue.global.js&lt;/code&gt; is the &quot;full&quot; build that includes both the compiler and the runtime so it supports compiling templates on the fly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68f154c13e7bb1675a3693211ca0e4b6ea276f8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vue.runtime.esm-bundler.js&lt;/code&gt;&lt;strong&gt;(default)&lt;/strong&gt; is runtime only, and requires all templates to be pre-compiled. This is the default entry for bundlers (via module field in &lt;code&gt;package.json&lt;/code&gt;) because when using a bundler templates are typically pre-compiled (e.g. in &lt;code&gt;*.vue&lt;/code&gt; files).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5938a33f792df3166eef9febfdb6f4ca0b5eb07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vue.runtime.global.js&lt;/code&gt; contains only the runtime and requires templates to be pre-compiled during a build step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a1f5d41bd1f9f66dec6af23324ca85bd1c698a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;watch&lt;/code&gt; shares behavior with &lt;a href=&quot;#watcheffect&quot;&gt;&lt;code&gt;watchEffect&lt;/code&gt;&lt;/a&gt; in terms of &lt;a href=&quot;#stopping-the-watcher&quot;&gt;manual stoppage&lt;/a&gt;, &lt;a href=&quot;#side-effect-invalidation&quot;&gt;side effect invalidation&lt;/a&gt; (with &lt;code&gt;onInvalidate&lt;/code&gt; passed to the callback as the 3rd argument instead), &lt;a href=&quot;#effect-flush-timing&quot;&gt;flush timing&lt;/a&gt; and &lt;a href=&quot;#watcher-debugging&quot;&gt;debugging&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="903ab43f753495927eeb12c6bc9a0d94998499ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;watch&lt;/code&gt; shares behavior with &lt;a href=&quot;#watcheffect&quot;&gt;&lt;code&gt;watchEffect&lt;/code&gt;&lt;/a&gt; in terms of &lt;a href=&quot;../guide/reactivity-computed-watchers#stopping-the-watcher&quot;&gt;manual stoppage&lt;/a&gt;, &lt;a href=&quot;../guide/reactivity-computed-watchers#side-effect-invalidation&quot;&gt;side effect invalidation&lt;/a&gt; (with &lt;code&gt;onInvalidate&lt;/code&gt; passed to the callback as the 3rd argument instead), &lt;a href=&quot;../guide/reactivity-computed-watchers#effect-flush-timing&quot;&gt;flush timing&lt;/a&gt; and &lt;a href=&quot;../guide/reactivity-computed-watchers#watcher-debugging&quot;&gt;debugging&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84a9022db152f4a7614615c757d6003e4f4d2d76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;withDirectives&lt;/code&gt; can only be used within &lt;code&gt;render&lt;/code&gt; or &lt;code&gt;setup&lt;/code&gt; functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fac90a8972a070b41a5204ef9013209ac15214e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{string | Array&amp;lt;string&amp;gt;} event&lt;/code&gt; (array only supported in 2.2.0+)</source>
          <target state="translated">&lt;code&gt;{string | Array&amp;lt;string&amp;gt;} event&lt;/code&gt; (el arreglo solo se admite en 2.2.0+)</target>
        </trans-unit>
        <trans-unit id="6c7224a24df013cf42e4daadc20e4df5ec853943" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{string | Array&amp;lt;string&amp;gt;} event&lt;/code&gt; (array only supported in 2.2.2+)</source>
          <target state="translated">&lt;code&gt;{string | Array&amp;lt;string&amp;gt;} event&lt;/code&gt; (el arreglo solo se admite en 2.2.2+)</target>
        </trans-unit>
        <trans-unit id="1cee463928e664bc4d54e2c5ec2c990a36c74ff4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;https://webaim.org/articles/auditory/&quot;&gt;Auditory (opens new window)&lt;/a&gt;&lt;/em&gt; - These users can benefit from captioning, transcripts or sign language video.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a02e6ab6719792d73c27f4f2d8484a32e3b1072" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;https://webaim.org/articles/cognitive/&quot;&gt;Cognitive (opens new window)&lt;/a&gt;&lt;/em&gt; - These users can benefit from supplemental media, structural organization of content, clear and simple writing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2342c04fb153105ee49cecf789de4036cdac716" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;https://webaim.org/articles/motor/&quot;&gt;Motor (opens new window)&lt;/a&gt;&lt;/em&gt; - These users can benefit from a range of &lt;a href=&quot;https://webaim.org/articles/motor/assistive&quot;&gt;assistive technologies for motor impairments (opens new window)&lt;/a&gt;: voice recognition software, eye tracking, single-switch access, head wand, sip and puff switch, oversized trackball mouse, adaptive keyboard or other assistive technologies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32c53dc076fa9d9d72cb96f8d3c292cc05ab746b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;https://webaim.org/articles/visual/&quot;&gt;Visual (opens new window)&lt;/a&gt;&lt;/em&gt; - These users can benefit from the use of screen readers, screen magnification, controlling screen contrast, or braille display.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c48a0b860a7bc5e36e9524b80a84930d3aa157a0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Not available&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9de07dc93c52255e8d3f282065b185c3c7d89e20" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;removed&lt;/em&gt; (&lt;a href=&quot;#config-productiontip-removed&quot;&gt;see below&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07de90d2ccdd7cff0249a396866e8e9e2a84fff5" translate="yes" xml:space="preserve">
          <source>&lt;img alt=&quot;beta&quot; class=&quot;img-fluid rounded&quot; src=&quot;data:image/svg+xml;charset=utf-8;base64,PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMTQwIiBoZWlnaHQ9IjIwIiByb2xlPSJpbWciIGFyaWEtbGFiZWw9Im5wbUBuZXh0OiB2Mi4wLjAtcmMuMCI+PHRpdGxlPm5wbUBuZXh0OiB2Mi4wLjAtcmMuMDwvdGl0bGU+PGxpbmVhckdyYWRpZW50IGlkPSJzIiB4Mj0iMCIgeTI9IjEwMCUiPjxzdG9wIG9mZnNldD0iMCIgc3RvcC1jb2xvcj0iI2JiYiIgc3RvcC1vcGFjaXR5PSIuMSIvPjxzdG9wIG9mZnNldD0iMSIgc3RvcC1vcGFjaXR5PSIuMSIvPjwvbGluZWFyR3JhZGllbnQ+PGNsaXBQYXRoIGlkPSJyIj48cmVjdCB3aWR0aD0iMTQwIiBoZWlnaHQ9IjIwIiByeD0iMyIgZmlsbD0iI2ZmZiIvPjwvY2xpcFBhdGg+PGcgY2xpcC1wYXRoPSJ1cmwoI3IpIj48cmVjdCB3aWR0aD0iNjkiIGhlaWdodD0iMjAiIGZpbGw9IiM1NTUiLz48cmVjdCB4PSI2OSIgd2lkdGg9IjcxIiBoZWlnaHQ9IjIwIiBmaWxsPSIjMDA3ZWM2Ii8+PHJlY3Qgd2lkdGg9IjE0MCIgaGVpZ2h0PSIyMCIgZmlsbD0idXJsKCNzKSIvPjwvZz48ZyBmaWxsPSIjZmZmIiB0ZXh0LWFuY2hvcj0ibWlkZGxlIiBmb250LWZhbWlseT0iVmVyZGFuYSxHZW5ldmEsRGVqYVZ1IFNhbnMsc2Fucy1zZXJpZiIgdGV4dC1yZW5kZXJpbmc9Imdlb21ldHJpY1ByZWNpc2lvbiIgZm9udC1zaXplPSIxMTAiPjx0ZXh0IGFyaWEtaGlkZGVuPSJ0cnVlIiB4PSIzNTUiIHk9IjE1MCIgZmlsbD0iIzAxMDEwMSIgZmlsbC1vcGFjaXR5PSIuMyIgdHJhbnNmb3JtPSJzY2FsZSguMSkiIHRleHRMZW5ndGg9IjU5MCI+bnBtQG5leHQ8L3RleHQ+PHRleHQgeD0iMzU1IiB5PSIxNDAiIHRyYW5zZm9ybT0ic2NhbGUoLjEpIiBmaWxsPSIjZmZmIiB0ZXh0TGVuZ3RoPSI1OTAiPm5wbUBuZXh0PC90ZXh0Pjx0ZXh0IGFyaWEtaGlkZGVuPSJ0cnVlIiB4PSIxMDM1IiB5PSIxNTAiIGZpbGw9IiMwMTAxMDEiIGZpbGwtb3BhY2l0eT0iLjMiIHRyYW5zZm9ybT0ic2NhbGUoLjEpIiB0ZXh0TGVuZ3RoPSI2MTAiPnYyLjAuMC1yYy4wPC90ZXh0Pjx0ZXh0IHg9IjEwMzUiIHk9IjE0MCIgdHJhbnNmb3JtPSJzY2FsZSguMSkiIGZpbGw9IiNmZmYiIHRleHRMZW5ndGg9IjYxMCI+djIuMC4wLXJjLjA8L3RleHQ+PC9nPjwvc3ZnPg==&quot;/&gt; (opens new window)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b7a53c97125bc2bb501b606622d75ea49da2ce9" translate="yes" xml:space="preserve">
          <source>&lt;img alt=&quot;beta&quot; class=&quot;img-fluid rounded&quot; src=&quot;data:image/svg+xml;charset=utf-8;base64,PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMTQwIiBoZWlnaHQ9IjIwIiByb2xlPSJpbWciIGFyaWEtbGFiZWw9Im5wbUBuZXh0OiB2OC4wLjAtcmMuMSI+PHRpdGxlPm5wbUBuZXh0OiB2OC4wLjAtcmMuMTwvdGl0bGU+PGxpbmVhckdyYWRpZW50IGlkPSJzIiB4Mj0iMCIgeTI9IjEwMCUiPjxzdG9wIG9mZnNldD0iMCIgc3RvcC1jb2xvcj0iI2JiYiIgc3RvcC1vcGFjaXR5PSIuMSIvPjxzdG9wIG9mZnNldD0iMSIgc3RvcC1vcGFjaXR5PSIuMSIvPjwvbGluZWFyR3JhZGllbnQ+PGNsaXBQYXRoIGlkPSJyIj48cmVjdCB3aWR0aD0iMTQwIiBoZWlnaHQ9IjIwIiByeD0iMyIgZmlsbD0iI2ZmZiIvPjwvY2xpcFBhdGg+PGcgY2xpcC1wYXRoPSJ1cmwoI3IpIj48cmVjdCB3aWR0aD0iNjkiIGhlaWdodD0iMjAiIGZpbGw9IiM1NTUiLz48cmVjdCB4PSI2OSIgd2lkdGg9IjcxIiBoZWlnaHQ9IjIwIiBmaWxsPSIjMDA3ZWM2Ii8+PHJlY3Qgd2lkdGg9IjE0MCIgaGVpZ2h0PSIyMCIgZmlsbD0idXJsKCNzKSIvPjwvZz48ZyBmaWxsPSIjZmZmIiB0ZXh0LWFuY2hvcj0ibWlkZGxlIiBmb250LWZhbWlseT0iVmVyZGFuYSxHZW5ldmEsRGVqYVZ1IFNhbnMsc2Fucy1zZXJpZiIgdGV4dC1yZW5kZXJpbmc9Imdlb21ldHJpY1ByZWNpc2lvbiIgZm9udC1zaXplPSIxMTAiPjx0ZXh0IGFyaWEtaGlkZGVuPSJ0cnVlIiB4PSIzNTUiIHk9IjE1MCIgZmlsbD0iIzAxMDEwMSIgZmlsbC1vcGFjaXR5PSIuMyIgdHJhbnNmb3JtPSJzY2FsZSguMSkiIHRleHRMZW5ndGg9IjU5MCI+bnBtQG5leHQ8L3RleHQ+PHRleHQgeD0iMzU1IiB5PSIxNDAiIHRyYW5zZm9ybT0ic2NhbGUoLjEpIiBmaWxsPSIjZmZmIiB0ZXh0TGVuZ3RoPSI1OTAiPm5wbUBuZXh0PC90ZXh0Pjx0ZXh0IGFyaWEtaGlkZGVuPSJ0cnVlIiB4PSIxMDM1IiB5PSIxNTAiIGZpbGw9IiMwMTAxMDEiIGZpbGwtb3BhY2l0eT0iLjMiIHRyYW5zZm9ybT0ic2NhbGUoLjEpIiB0ZXh0TGVuZ3RoPSI2MTAiPnY4LjAuMC1yYy4xPC90ZXh0Pjx0ZXh0IHg9IjEwMzUiIHk9IjE0MCIgdHJhbnNmb3JtPSJzY2FsZSguMSkiIGZpbGw9IiNmZmYiIHRleHRMZW5ndGg9IjYxMCI+djguMC4wLXJjLjE8L3RleHQ+PC9nPjwvc3ZnPg==&quot;/&gt; (opens new window)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fdfec9e59303c0e14df11e786296fed933a6f2b" translate="yes" xml:space="preserve">
          <source>&lt;img alt=&quot;beta&quot; class=&quot;img-fluid rounded&quot; src=&quot;data:image/svg+xml;charset=utf-8;base64,PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMTYyIiBoZWlnaHQ9IjIwIiByb2xlPSJpbWciIGFyaWEtbGFiZWw9Im5wbUBuZXh0OiB2Ni4wLjAtYmV0YS4xMCI+PHRpdGxlPm5wbUBuZXh0OiB2Ni4wLjAtYmV0YS4xMDwvdGl0bGU+PGxpbmVhckdyYWRpZW50IGlkPSJzIiB4Mj0iMCIgeTI9IjEwMCUiPjxzdG9wIG9mZnNldD0iMCIgc3RvcC1jb2xvcj0iI2JiYiIgc3RvcC1vcGFjaXR5PSIuMSIvPjxzdG9wIG9mZnNldD0iMSIgc3RvcC1vcGFjaXR5PSIuMSIvPjwvbGluZWFyR3JhZGllbnQ+PGNsaXBQYXRoIGlkPSJyIj48cmVjdCB3aWR0aD0iMTYyIiBoZWlnaHQ9IjIwIiByeD0iMyIgZmlsbD0iI2ZmZiIvPjwvY2xpcFBhdGg+PGcgY2xpcC1wYXRoPSJ1cmwoI3IpIj48cmVjdCB3aWR0aD0iNjkiIGhlaWdodD0iMjAiIGZpbGw9IiM1NTUiLz48cmVjdCB4PSI2OSIgd2lkdGg9IjkzIiBoZWlnaHQ9IjIwIiBmaWxsPSIjZmU3ZDM3Ii8+PHJlY3Qgd2lkdGg9IjE2MiIgaGVpZ2h0PSIyMCIgZmlsbD0idXJsKCNzKSIvPjwvZz48ZyBmaWxsPSIjZmZmIiB0ZXh0LWFuY2hvcj0ibWlkZGxlIiBmb250LWZhbWlseT0iVmVyZGFuYSxHZW5ldmEsRGVqYVZ1IFNhbnMsc2Fucy1zZXJpZiIgdGV4dC1yZW5kZXJpbmc9Imdlb21ldHJpY1ByZWNpc2lvbiIgZm9udC1zaXplPSIxMTAiPjx0ZXh0IGFyaWEtaGlkZGVuPSJ0cnVlIiB4PSIzNTUiIHk9IjE1MCIgZmlsbD0iIzAxMDEwMSIgZmlsbC1vcGFjaXR5PSIuMyIgdHJhbnNmb3JtPSJzY2FsZSguMSkiIHRleHRMZW5ndGg9IjU5MCI+bnBtQG5leHQ8L3RleHQ+PHRleHQgeD0iMzU1IiB5PSIxNDAiIHRyYW5zZm9ybT0ic2NhbGUoLjEpIiBmaWxsPSIjZmZmIiB0ZXh0TGVuZ3RoPSI1OTAiPm5wbUBuZXh0PC90ZXh0Pjx0ZXh0IGFyaWEtaGlkZGVuPSJ0cnVlIiB4PSIxMTQ1IiB5PSIxNTAiIGZpbGw9IiMwMTAxMDEiIGZpbGwtb3BhY2l0eT0iLjMiIHRyYW5zZm9ybT0ic2NhbGUoLjEpIiB0ZXh0TGVuZ3RoPSI4MzAiPnY2LjAuMC1iZXRhLjEwPC90ZXh0Pjx0ZXh0IHg9IjExNDUiIHk9IjE0MCIgdHJhbnNmb3JtPSJzY2FsZSguMSkiIGZpbGw9IiNmZmYiIHRleHRMZW5ndGg9IjgzMCI+djYuMC4wLWJldGEuMTA8L3RleHQ+PC9nPjwvc3ZnPg==&quot;/&gt; (opens new window)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5e73320d08acc5c746d5860790c5eac292002ef" translate="yes" xml:space="preserve">
          <source>&lt;img alt=&quot;ga&quot; class=&quot;img-fluid rounded&quot; src=&quot;data:image/svg+xml;charset=utf-8;base64,PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iODAiIGhlaWdodD0iMjAiIHJvbGU9ImltZyIgYXJpYS1sYWJlbD0ibnBtOiB2Ny41LjAiPjx0aXRsZT5ucG06IHY3LjUuMDwvdGl0bGU+PGxpbmVhckdyYWRpZW50IGlkPSJzIiB4Mj0iMCIgeTI9IjEwMCUiPjxzdG9wIG9mZnNldD0iMCIgc3RvcC1jb2xvcj0iI2JiYiIgc3RvcC1vcGFjaXR5PSIuMSIvPjxzdG9wIG9mZnNldD0iMSIgc3RvcC1vcGFjaXR5PSIuMSIvPjwvbGluZWFyR3JhZGllbnQ+PGNsaXBQYXRoIGlkPSJyIj48cmVjdCB3aWR0aD0iODAiIGhlaWdodD0iMjAiIHJ4PSIzIiBmaWxsPSIjZmZmIi8+PC9jbGlwUGF0aD48ZyBjbGlwLXBhdGg9InVybCgjcikiPjxyZWN0IHdpZHRoPSIzNSIgaGVpZ2h0PSIyMCIgZmlsbD0iIzU1NSIvPjxyZWN0IHg9IjM1IiB3aWR0aD0iNDUiIGhlaWdodD0iMjAiIGZpbGw9IiMwMDdlYzYiLz48cmVjdCB3aWR0aD0iODAiIGhlaWdodD0iMjAiIGZpbGw9InVybCgjcykiLz48L2c+PGcgZmlsbD0iI2ZmZiIgdGV4dC1hbmNob3I9Im1pZGRsZSIgZm9udC1mYW1pbHk9IlZlcmRhbmEsR2VuZXZhLERlamFWdSBTYW5zLHNhbnMtc2VyaWYiIHRleHQtcmVuZGVyaW5nPSJnZW9tZXRyaWNQcmVjaXNpb24iIGZvbnQtc2l6ZT0iMTEwIj48dGV4dCBhcmlhLWhpZGRlbj0idHJ1ZSIgeD0iMTg1IiB5PSIxNTAiIGZpbGw9IiMwMTAxMDEiIGZpbGwtb3BhY2l0eT0iLjMiIHRyYW5zZm9ybT0ic2NhbGUoLjEpIiB0ZXh0TGVuZ3RoPSIyNTAiPm5wbTwvdGV4dD48dGV4dCB4PSIxODUiIHk9IjE0MCIgdHJhbnNmb3JtPSJzY2FsZSguMSkiIGZpbGw9IiNmZmYiIHRleHRMZW5ndGg9IjI1MCI+bnBtPC90ZXh0Pjx0ZXh0IGFyaWEtaGlkZGVuPSJ0cnVlIiB4PSI1NjUiIHk9IjE1MCIgZmlsbD0iIzAxMDEwMSIgZmlsbC1vcGFjaXR5PSIuMyIgdHJhbnNmb3JtPSJzY2FsZSguMSkiIHRleHRMZW5ndGg9IjM1MCI+djcuNS4wPC90ZXh0Pjx0ZXh0IHg9IjU2NSIgeT0iMTQwIiB0cmFuc2Zvcm09InNjYWxlKC4xKSIgZmlsbD0iI2ZmZiIgdGV4dExlbmd0aD0iMzUwIj52Ny41LjA8L3RleHQ+PC9nPjwvc3ZnPg==&quot;/&gt; (opens new window)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd1a65561b8ff535c5da8780de5142a93502632e" translate="yes" xml:space="preserve">
          <source>&lt;img alt=&quot;rc&quot; class=&quot;img-fluid rounded&quot; src=&quot;data:image/svg+xml;charset=utf-8;base64,PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMTIyIiBoZWlnaHQ9IjIwIiByb2xlPSJpbWciIGFyaWEtbGFiZWw9Im5wbUBuZXh0OiB2MTYuMS4yIj48dGl0bGU+bnBtQG5leHQ6IHYxNi4xLjI8L3RpdGxlPjxsaW5lYXJHcmFkaWVudCBpZD0icyIgeDI9IjAiIHkyPSIxMDAlIj48c3RvcCBvZmZzZXQ9IjAiIHN0b3AtY29sb3I9IiNiYmIiIHN0b3Atb3BhY2l0eT0iLjEiLz48c3RvcCBvZmZzZXQ9IjEiIHN0b3Atb3BhY2l0eT0iLjEiLz48L2xpbmVhckdyYWRpZW50PjxjbGlwUGF0aCBpZD0iciI+PHJlY3Qgd2lkdGg9IjEyMiIgaGVpZ2h0PSIyMCIgcng9IjMiIGZpbGw9IiNmZmYiLz48L2NsaXBQYXRoPjxnIGNsaXAtcGF0aD0idXJsKCNyKSI+PHJlY3Qgd2lkdGg9IjY5IiBoZWlnaHQ9IjIwIiBmaWxsPSIjNTU1Ii8+PHJlY3QgeD0iNjkiIHdpZHRoPSI1MyIgaGVpZ2h0PSIyMCIgZmlsbD0iIzAwN2VjNiIvPjxyZWN0IHdpZHRoPSIxMjIiIGhlaWdodD0iMjAiIGZpbGw9InVybCgjcykiLz48L2c+PGcgZmlsbD0iI2ZmZiIgdGV4dC1hbmNob3I9Im1pZGRsZSIgZm9udC1mYW1pbHk9IlZlcmRhbmEsR2VuZXZhLERlamFWdSBTYW5zLHNhbnMtc2VyaWYiIHRleHQtcmVuZGVyaW5nPSJnZW9tZXRyaWNQcmVjaXNpb24iIGZvbnQtc2l6ZT0iMTEwIj48dGV4dCBhcmlhLWhpZGRlbj0idHJ1ZSIgeD0iMzU1IiB5PSIxNTAiIGZpbGw9IiMwMTAxMDEiIGZpbGwtb3BhY2l0eT0iLjMiIHRyYW5zZm9ybT0ic2NhbGUoLjEpIiB0ZXh0TGVuZ3RoPSI1OTAiPm5wbUBuZXh0PC90ZXh0Pjx0ZXh0IHg9IjM1NSIgeT0iMTQwIiB0cmFuc2Zvcm09InNjYWxlKC4xKSIgZmlsbD0iI2ZmZiIgdGV4dExlbmd0aD0iNTkwIj5ucG1AbmV4dDwvdGV4dD48dGV4dCBhcmlhLWhpZGRlbj0idHJ1ZSIgeD0iOTQ1IiB5PSIxNTAiIGZpbGw9IiMwMTAxMDEiIGZpbGwtb3BhY2l0eT0iLjMiIHRyYW5zZm9ybT0ic2NhbGUoLjEpIiB0ZXh0TGVuZ3RoPSI0MzAiPnYxNi4xLjI8L3RleHQ+PHRleHQgeD0iOTQ1IiB5PSIxNDAiIHRyYW5zZm9ybT0ic2NhbGUoLjEpIiBmaWxsPSIjZmZmIiB0ZXh0TGVuZ3RoPSI0MzAiPnYxNi4xLjI8L3RleHQ+PC9nPjwvc3ZnPg==&quot;/&gt; (opens new window)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4cd98791d7ec1d6e8bb7ef7c53b7d12e4d0d3d9" translate="yes" xml:space="preserve">
          <source>&lt;img alt=&quot;rc&quot; class=&quot;img-fluid rounded&quot; src=&quot;data:image/svg+xml;charset=utf-8;base64,PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iODAiIGhlaWdodD0iMjAiIHJvbGU9ImltZyIgYXJpYS1sYWJlbD0ibnBtOiB2MS4wLjIiPjx0aXRsZT5ucG06IHYxLjAuMjwvdGl0bGU+PGxpbmVhckdyYWRpZW50IGlkPSJzIiB4Mj0iMCIgeTI9IjEwMCUiPjxzdG9wIG9mZnNldD0iMCIgc3RvcC1jb2xvcj0iI2JiYiIgc3RvcC1vcGFjaXR5PSIuMSIvPjxzdG9wIG9mZnNldD0iMSIgc3RvcC1vcGFjaXR5PSIuMSIvPjwvbGluZWFyR3JhZGllbnQ+PGNsaXBQYXRoIGlkPSJyIj48cmVjdCB3aWR0aD0iODAiIGhlaWdodD0iMjAiIHJ4PSIzIiBmaWxsPSIjZmZmIi8+PC9jbGlwUGF0aD48ZyBjbGlwLXBhdGg9InVybCgjcikiPjxyZWN0IHdpZHRoPSIzNSIgaGVpZ2h0PSIyMCIgZmlsbD0iIzU1NSIvPjxyZWN0IHg9IjM1IiB3aWR0aD0iNDUiIGhlaWdodD0iMjAiIGZpbGw9IiMwMDdlYzYiLz48cmVjdCB3aWR0aD0iODAiIGhlaWdodD0iMjAiIGZpbGw9InVybCgjcykiLz48L2c+PGcgZmlsbD0iI2ZmZiIgdGV4dC1hbmNob3I9Im1pZGRsZSIgZm9udC1mYW1pbHk9IlZlcmRhbmEsR2VuZXZhLERlamFWdSBTYW5zLHNhbnMtc2VyaWYiIHRleHQtcmVuZGVyaW5nPSJnZW9tZXRyaWNQcmVjaXNpb24iIGZvbnQtc2l6ZT0iMTEwIj48dGV4dCBhcmlhLWhpZGRlbj0idHJ1ZSIgeD0iMTg1IiB5PSIxNTAiIGZpbGw9IiMwMTAxMDEiIGZpbGwtb3BhY2l0eT0iLjMiIHRyYW5zZm9ybT0ic2NhbGUoLjEpIiB0ZXh0TGVuZ3RoPSIyNTAiPm5wbTwvdGV4dD48dGV4dCB4PSIxODUiIHk9IjE0MCIgdHJhbnNmb3JtPSJzY2FsZSguMSkiIGZpbGw9IiNmZmYiIHRleHRMZW5ndGg9IjI1MCI+bnBtPC90ZXh0Pjx0ZXh0IGFyaWEtaGlkZGVuPSJ0cnVlIiB4PSI1NjUiIHk9IjE1MCIgZmlsbD0iIzAxMDEwMSIgZmlsbC1vcGFjaXR5PSIuMyIgdHJhbnNmb3JtPSJzY2FsZSguMSkiIHRleHRMZW5ndGg9IjM1MCI+djEuMC4yPC90ZXh0Pjx0ZXh0IHg9IjU2NSIgeT0iMTQwIiB0cmFuc2Zvcm09InNjYWxlKC4xKSIgZmlsbD0iI2ZmZiIgdGV4dExlbmd0aD0iMzUwIj52MS4wLjI8L3RleHQ+PC9nPjwvc3ZnPg==&quot;/&gt; (opens new window)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f532de9aac8e55bef5e0f5093bd0586af50ed18c" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;&lt;code&gt;beforeCreate&lt;/code&gt;&lt;/s&gt; -&amp;gt; use &lt;code&gt;setup()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd9970dff44996bcde3c79a9a99337f6f3c000e1" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;&lt;code&gt;created&lt;/code&gt;&lt;/s&gt; -&amp;gt; use &lt;code&gt;setup()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a62f121cfbc311b6cd6e6a963bbe8352d8bf73" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;&amp;dagger;: changed&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="873060f4f062622b02fde3d3b9d47df5856e5f42" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;eg. &lt;code&gt;aria-checked&lt;/code&gt;, &lt;code&gt;tabindex&lt;/code&gt;, &lt;code&gt;alt&lt;/code&gt;, etc.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1765aa59623fd3f772120772edcc28550ec5eb40" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;i.e. &lt;code&gt;contenteditable&lt;/code&gt;, &lt;code&gt;draggable&lt;/code&gt; and &lt;code&gt;spellcheck&lt;/code&gt;.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="859a785d018f3f4fea2f82d1f0f79526411eddea" translate="yes" xml:space="preserve">
          <source>&lt;strike&gt;Detect when there&amp;rsquo;s a change in one of the values&lt;/strike&gt;: we no longer have to do this, as Proxies allow us to intercept it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="464d2fa98e947c6fc09defc84479defb45097312" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;../guide/single-file-component&quot;&gt;Single-file components&lt;/a&gt; should always order &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; tags consistently, with &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; last, because at least one of the other two is always necessary.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e43689c40b946b0e07a166268095704e029777a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;../guide/single-file-components&quot;&gt;Single-file components&lt;/a&gt; should always order &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; tags consistently, with &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; last, because at least one of the other two is always necessary.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;../guide/single-file-components&quot;&gt;Los componentes de un solo archivo&lt;/a&gt; siempre deben ordenar las etiquetas &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; y &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; de manera consistente, con &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; al final, porque al menos uno de los otros dos es siempre necesario.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="80b8a7153f9c08ec435dd45782696c2ee48950d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://exploringjs.com/es6/ch_modules.html&quot;&gt;ES Module&lt;/a&gt;&lt;/strong&gt;: starting in 2.6 Vue provides two ES Modules (ESM) builds:</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://exploringjs.com/es6/ch_modules.html&quot;&gt;M&amp;oacute;dulo ES&lt;/a&gt;&lt;/strong&gt; : a partir de 2.6 Vue proporciona dos compilaciones de m&amp;oacute;dulos ES (ESM):</target>
        </trans-unit>
        <trans-unit id="d9a7bb0f883953526a1865d8aac4e7656ac2c08e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;http://wiki.commonjs.org/wiki/Modules/1.1&quot;&gt;CommonJS&lt;/a&gt;&lt;/strong&gt;: CommonJS builds are intended for use with older bundlers like &lt;a href=&quot;http://browserify.org/&quot;&gt;browserify&lt;/a&gt; or &lt;a href=&quot;https://webpack.github.io&quot;&gt;webpack 1&lt;/a&gt;. The default file for these bundlers (&lt;code&gt;pkg.main&lt;/code&gt;) is the Runtime only CommonJS build (&lt;code&gt;vue.runtime.common.js&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;http://wiki.commonjs.org/wiki/Modules/1.1&quot;&gt;CommonJS&lt;/a&gt;&lt;/strong&gt; : Las compilaciones de CommonJS est&amp;aacute;n dise&amp;ntilde;adas para su uso con&lt;a href=&quot;http://browserify.org/&quot;&gt; paquetes&lt;/a&gt; m&amp;aacute;s antiguos como browserify o&lt;a href=&quot;https://webpack.github.io&quot;&gt; webpack 1&lt;/a&gt; . El archivo predeterminado para estos &lt;code&gt;pkg.main&lt;/code&gt; ( pkg.main ) es la compilaci&amp;oacute;n CommonJS de Runtime only ( &lt;code&gt;vue.runtime.common.js&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e366c930ec3b4fec4ced30484f087fb21a3bc30c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://github.com/umdjs/umd&quot;&gt;UMD&lt;/a&gt;&lt;/strong&gt;: UMD builds can be used directly in the browser via a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag. The default file from jsDelivr CDN at &lt;a href=&quot;https://cdn.jsdelivr.net/npm/vue&quot;&gt;https://cdn.jsdelivr.net/npm/vue&lt;/a&gt; is the Runtime + Compiler UMD build (&lt;code&gt;vue.js&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://github.com/umdjs/umd&quot;&gt;UMD&lt;/a&gt;&lt;/strong&gt; : las compilaciones UMD se pueden utilizar directamente en el navegador mediante unaetiqueta &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; . El archivo predeterminado de jsDelivr CDN en&lt;a href=&quot;https://cdn.jsdelivr.net/npm/vue&quot;&gt; https://cdn.jsdelivr.net/npm/vue&lt;/a&gt; es Runtime + Compiler UMD build ( &lt;code&gt;vue.js&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="5db7f89958888998cd9bcd42a6228d2b17c34cba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://github.com/vuejs/vuex&quot;&gt;Vuex&lt;/a&gt; should be preferred for global state management, instead of &lt;code&gt;this.$root&lt;/code&gt; or a global event bus.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;https://github.com/vuejs/vuex&quot;&gt;Vuex&lt;/a&gt; deber&amp;iacute;a preferirse para la gesti&amp;oacute;n de estado global, en lugar de &lt;code&gt;this.$root&lt;/code&gt; o un bus de eventos global.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="75dbf40e950a4102b84aaf3c862a32a7299bdc6d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://next.vuex.vuejs.org/&quot;&gt;Vuex (opens new window)&lt;/a&gt; should be preferred for global state management, instead of &lt;code&gt;this.$root&lt;/code&gt; or a global event bus.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37e6b518d268f1f3b3d45f287e9a79abf8f46460" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;include&lt;/code&gt; and &lt;code&gt;exclude&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;include&lt;/code&gt; y &lt;code&gt;exclude&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ef35c582c5b2bd461a2d356aa4214d114e344cf4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;max&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;max&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="787a9d6e133171b917ea2d7802870630235a8360" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A feature doesn't exist until it's well documented.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ed795e84361b52e8a21bca0c309294ee9c49cf3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Advanced&lt;/strong&gt;: While the Essentials helps people handle ~80% of use cases, subsequent guides help get users to 95% of use cases, plus more detailed information on non-essential features (e.g. transitions, animations), more complex convenience features (e.g. mixins, custom directives), and dev experience improvements (e.g. JSX, plugins). The final 5% of use cases that are more niche, complex, and/or prone to abuse will be left to the cookbook and API reference, which can be linked to from these advanced guides.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4f7afdf72c529858418e093576b46e98c279a77" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Almost always avoid humor (for English docs)&lt;/strong&gt;, especially sarcasm and pop culture references, as it doesn't translate well across cultures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd04081cd82708a25182817cee65534806b85a05" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Always prefer simpler, plainer language over complex or jargony language.&lt;/strong&gt; For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ee99fddfa2f6b28590138a7f827feed601b276b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Always try to see from the user's perspective.&lt;/strong&gt; When we understand something thoroughly, it becomes obvious to us. This is called &lt;em&gt;the curse of knowledge&lt;/em&gt;. In order to write good documentation, try to remember what you first needed to know when learning this concept. What jargon did you need to learn? What did you misunderstand? What took a long time to really grasp? Good documentation meets users where they are. It can be helpful to practice explaining the concept to people in person before.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85aaaeeaf0a7187b526384180405f37479896d2b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Always use &lt;code&gt;key&lt;/code&gt; with &lt;code&gt;v-for&lt;/code&gt;.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Utilice siempre la &lt;code&gt;key&lt;/code&gt; con &lt;code&gt;v-for&lt;/code&gt; .&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ff6d5b9ba6e9624c7ac074899b4eb42c0443ed14" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Argument:&lt;/strong&gt; slot name (optional, defaults to &lt;code&gt;default&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;Argumento:&lt;/strong&gt; nombre de la ranura (opcional, predeterminado por &lt;code&gt;default&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="1a0ec348e03e786d802aad611e12e81e27bb1ff8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Argument:&lt;/strong&gt;&lt;code&gt;attrOrProp (optional)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Argumento: &lt;/strong&gt; &lt;code&gt;attrOrProp (optional)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="85df7e86429c05c192674e23b8487f2e4cae4be5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Argument:&lt;/strong&gt;&lt;code&gt;event&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Argument:&lt;/strong&gt;&lt;code&gt;event&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="901012c6b7c03008ad983f7ccb9e58d375f4be41" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Arguments:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Arguments:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="56e775da82b01487c7f6ddf6c7ff16cd7c53673d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Arguments&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Arguments&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="33992cd7e1d4ef10a9499dcbb4f520ead09ac79e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Avoid abbreviations&lt;/strong&gt; in writing and code examples (e.g. &lt;code&gt;attribute&lt;/code&gt; is better than &lt;code&gt;attr&lt;/code&gt;, &lt;code&gt;message&lt;/code&gt; is better than &lt;code&gt;msg&lt;/code&gt;), unless you are specifically referencing an abbreviation in an API (e.g. &lt;code&gt;$attrs&lt;/code&gt;). Abbreviation symbols included on standard keyboards (e.g. &lt;code&gt;@&lt;/code&gt;, &lt;code&gt;#&lt;/code&gt;, &lt;code&gt;&amp;amp;&lt;/code&gt;) are OK.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c0b18ebe29cb9a06126dd059688331f3a2440e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Avoid appeals to authority&lt;/strong&gt; (e.g. &quot;you should do X, because that's a best practice&quot; or &quot;X is best because it gives you full separation of concerns&quot;). Instead, demonstrate with examples the specific human problems caused and/or solved by a pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46d65e8c07918a6bc4fc441323e29983bbd9a0f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Avoid language that invalidate struggle&lt;/strong&gt;, such as &quot;easy&quot;, &quot;just&quot;, &quot;obviously&quot;, etc. For reference, see &lt;a href=&quot;https://css-tricks.com/words-avoid-educational-writing/&quot;&gt;Words To Avoid in Educational Writing (opens new window)&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dcf4427cb2a6d595c9a05b09f8ca64ee3ad53a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Avoid special content blocks for tips and caveats when possible.&lt;/strong&gt; It's generally preferable to blend these more naturally into the main content, e.g. by building on examples to demonstrate an edge case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efa446def1ad41fc10eb34c9056e0a8c4e404c85" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;BREAKING:&lt;/strong&gt; Custom elements whitelisting is now performed during template compilation, and should be configured via compiler options instead of runtime config.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01da6e2440aa192da49cf8b11a776a48a76a7200" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;BREAKING:&lt;/strong&gt; If you manually provide &lt;code&gt;key&lt;/code&gt;s, then each branch must use a unique &lt;code&gt;key&lt;/code&gt;. You can no longer intentionally use the same &lt;code&gt;key&lt;/code&gt; to force branch reuse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae175ad47315eea9e9a39533c67873cf466f9f43" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;BREAKING:&lt;/strong&gt; Special &lt;code&gt;is&lt;/code&gt; prop usage is restricted to the reserved &lt;code&gt;&amp;lt;component&amp;gt;&lt;/code&gt; tag only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee827148d36021c59741321aacc57643982b7a8a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;BREAKING:&lt;/strong&gt; When used on custom components, &lt;code&gt;v-model&lt;/code&gt; prop and event default names are changed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4235e80fc9dc06d7a6abb45980d4c2e50bc71d14" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;BREAKING:&lt;/strong&gt;&lt;code&gt;&amp;lt;template v-for&amp;gt;&lt;/code&gt;&lt;code&gt;key&lt;/code&gt; should be placed on the &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; tag (rather than on its children).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bff92da5836fbcab3acefbef57897c2082f4a04b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;BREAKING:&lt;/strong&gt;&lt;code&gt;functional&lt;/code&gt; attribute on single-file component (SFC) &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; is removed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9163764839b016d2aa60cbf6fbf57f802f72ea10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;BREAKING:&lt;/strong&gt;&lt;code&gt;v-bind&lt;/code&gt;'s &lt;code&gt;.sync&lt;/code&gt; modifier and component &lt;code&gt;model&lt;/code&gt; option are removed and replaced with an argument on &lt;code&gt;v-model&lt;/code&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e2dafdd4c06a312d1450c12eb75a75cd0241d95" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;BREAKING:&lt;/strong&gt;&lt;code&gt;{ functional: true }&lt;/code&gt; option in components created by functions is removed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbcf2a233a65fd2fd00e34c9b3ee9de9b5167d06" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;BREAKING&lt;/strong&gt;: &lt;code&gt;config.keyCodes&lt;/code&gt; is no longer supported</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b24d367bdd848a62233fdddc5beda45d0a786717" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;BREAKING&lt;/strong&gt;: &lt;code&gt;data&lt;/code&gt; component option declaration no longer accepts a plain JavaScript &lt;code&gt;object&lt;/code&gt; and expects a &lt;code&gt;function&lt;/code&gt; declaration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac40f34e176bf3b1cdfd61d68f754a3acc7e30eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;BREAKING&lt;/strong&gt;: &lt;code&gt;this.$scopedSlots&lt;/code&gt; is removed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebea5fc0eb746a078325b6cfde13cbef3a687714" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;BREAKING&lt;/strong&gt;: If used on the same element, &lt;code&gt;v-if&lt;/code&gt; will have higher precedence than &lt;code&gt;v-for&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4eeed6466a8a4fb235e1c18db3d399198687e98" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;BREAKING&lt;/strong&gt;: No longer removes attribute if value is boolean &lt;code&gt;false&lt;/code&gt;. Instead, it's set as attr=&quot;false&quot; instead. To remove the attribute, use &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="836a18b741bd8193cbe06974145bbc1399f785cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;BREAKING&lt;/strong&gt;: Order of bindings for v-bind will affect the rendering result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae15e43470e66cfdd091bb39a4b6b1a7e8e99a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;BREAKING&lt;/strong&gt;: Using numbers, i.e. keyCodes, as &lt;code&gt;v-on&lt;/code&gt; modifiers is no longer supported</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eb5f330e5d08b167be7f887ed66647391ceaace" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;BREAKING&lt;/strong&gt;: When watching an array, the callback will only trigger when the array is replaced. If you need to trigger on mutation, the &lt;code&gt;deep&lt;/code&gt; option must be specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="909131d52757fb236bfaa473bb8bce418dc56bdf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;BREAKING&lt;/strong&gt;: when merging multiple &lt;code&gt;data&lt;/code&gt; return values from mixins or extends, the merge is now shallow instead of deep (only root-level properties are merged).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c29b5bb4feffc7c92c14128cc804572a4e880d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Base components (a.k.a. presentational, dumb, or pure components) that apply app-specific styling and conventions should all begin with a specific prefix, such as &lt;code&gt;Base&lt;/code&gt;, &lt;code&gt;App&lt;/code&gt;, or &lt;code&gt;V&lt;/code&gt;.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Componentes de la base (tambi&amp;eacute;n conocido como de presentaci&amp;oacute;n, tonto, o componentes puros) que se aplican las convenciones de estilo y la aplicaci&amp;oacute;n espec&amp;iacute;fica todos deben comenzar con un prefijo espec&amp;iacute;fico, como &lt;code&gt;Base&lt;/code&gt; , &lt;code&gt;App&lt;/code&gt; , o &lt;code&gt;V&lt;/code&gt; .&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9e17a1561b2927d068ab2985a628655e94d38b4e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Be emotionally relevant.&lt;/strong&gt; Explanations and examples that relate to something people have experience with and care about will always be more effective.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f86a07d312f770bf918be7ae44c8f27359655e88" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Be involved in feature discussions.&lt;/strong&gt; The best APIs come from documentation-driven development, where we build features that are easy to explain, rather than trying to figure out how to explain them later. Asking questions (especially &quot;dumb&quot; questions) earlier often helps reveal confusions, inconsistencies, and problematic behavior before a breaking change would be required to fix them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d9ba10e96215f4343f0c761fa556c779dec85f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Below is the Options API equivalent:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f5c10096c63dd130131b3b88259f79d90ee1d40" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Child components that are tightly coupled with their parent should include the parent component name as a prefix.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Los componentes secundarios que est&amp;aacute;n estrechamente acoplados con su padre deben incluir el nombre del componente principal como prefijo.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8c14ddb64066aed61427d4978482144b31df722f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Compiler&lt;/strong&gt;: code that is responsible for compiling template strings into JavaScript render functions.</source>
          <target state="translated">&lt;strong&gt;Compilador&lt;/strong&gt; : c&amp;oacute;digo que se encarga de compilar cadenas de plantillas en funciones de representaci&amp;oacute;n de JavaScript.</target>
        </trans-unit>
        <trans-unit id="330c865f3b18eef81fd91137dca5e7c7119aab15" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Complex computed properties should be split into as many simpler properties as possible.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Las propiedades computadas complejas deben dividirse en tantas propiedades m&amp;aacute;s simples como sea posible.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b669904bfd5e2e391ecc6ac7b5a1ec8498adffbc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Component &lt;code&gt;data&lt;/code&gt; must be a function.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Los &lt;code&gt;data&lt;/code&gt; componentes deben ser una funci&amp;oacute;n.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="12cb5de838bd8ec65545c17554abf979bcb12cf5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Component Type&lt;/strong&gt; (changes the type of the component)</source>
          <target state="translated">&lt;strong&gt;Tipo de componente&lt;/strong&gt; (cambia el tipo de componente)</target>
        </trans-unit>
        <trans-unit id="1070db4dcb0fea66917b9ecc7b128e19f4c513f6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Component libraries, however, should prefer a class-based strategy instead of using the &lt;code&gt;scoped&lt;/code&gt; attribute.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Sin embargo, las bibliotecas de componentes deber&amp;iacute;an preferir una estrategia basada en clases en lugar de utilizar el atributo de &lt;code&gt;scoped&lt;/code&gt; .&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6032c0672b251116ebe5ef44f6100fec96927074" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Component names in JS/&lt;a href=&quot;../guide/render-function#JSX&quot;&gt;JSX&lt;/a&gt; should always be PascalCase, though they may be kebab-case inside strings for simpler applications that only use global component registration through &lt;code&gt;Vue.component&lt;/code&gt;.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Los nombres de los componentes en JS / &lt;a href=&quot;../guide/render-function#JSX&quot;&gt;JSX&lt;/a&gt; siempre deben ser PascalCase, aunque pueden ser kebab-case dentro de cadenas para aplicaciones m&amp;aacute;s simples que solo usan el registro global de componentes a trav&amp;eacute;s de &lt;code&gt;Vue.component&lt;/code&gt; .&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="00a78403b1a2aea64b39725784ef75b0456c1e67" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Component names in JS/&lt;a href=&quot;../guide/render-function#jsx&quot;&gt;JSX&lt;/a&gt; should always be PascalCase, though they may be kebab-case inside strings for simpler applications that only use global component registration through &lt;code&gt;app.component&lt;/code&gt;.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59d6baf18988674cb3327d5132939976116ac542" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Component names should always be multi-word, except for root &lt;code&gt;App&lt;/code&gt; components, and built-in components provided by Vue, such as &lt;code&gt;&amp;lt;transition&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;component&amp;gt;&lt;/code&gt;.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Los nombres de los componentes siempre deben ser de varias palabras, excepto los componentes ra&amp;iacute;z de la &lt;code&gt;App&lt;/code&gt; componentes integrados proporcionados por Vue, como &lt;code&gt;&amp;lt;transition&amp;gt;&lt;/code&gt; o &lt;code&gt;&amp;lt;component&amp;gt;&lt;/code&gt; .&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5ecc49e791f298ce670a96901ebb3299a6d49812" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Component names should prefer full words over abbreviations.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Los nombres de los componentes deben preferir las palabras completas a las abreviaturas.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fea9c549a386da04e32898c618a2c46171948b21" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Component names should start with the highest-level (often most general) words and end with descriptive modifying words.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Los nombres de los componentes deben comenzar con las palabras de nivel m&amp;aacute;s alto (a menudo las m&amp;aacute;s generales) y terminar con palabras descriptivas de modificaci&amp;oacute;n.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="80cf97a5933ad9b6123acad9f96d2767993e9837" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Component templates should only include simple expressions, with more complex expressions refactored into computed properties or methods.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Las plantillas de componentes solo deben incluir expresiones simples, con expresiones m&amp;aacute;s complejas refactorizadas en propiedades o m&amp;eacute;todos calculados.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ddc4828fc7d1d4b1ce3dd310e6f7ffd12ed2c264" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Component/instance options should be ordered consistently.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Las opciones de componente / instancia deben ordenarse de forma coherente.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="31f82dffc160b9f426023c849b3f83056f096276" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Components that should only ever have a single active instance should begin with the &lt;code&gt;The&lt;/code&gt; prefix, to denote that there can be only one.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Los componentes que solo deben tener una &amp;uacute;nica instancia activa deben comenzar con el prefijo &lt;code&gt;The&lt;/code&gt; , para indicar que solo puede haber una.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="72470c47f38590da2b9f41bd74c14b2ee1bc31a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Components with no content should be self-closing in &lt;a href=&quot;../guide/single-file-component&quot;&gt;single-file components&lt;/a&gt;, string templates, and &lt;a href=&quot;../guide/render-function#jsx&quot;&gt;JSX&lt;/a&gt; - but never in DOM templates.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="649d2784b652a983677974b9c419edfb37e1f75c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Components with no content should be self-closing in &lt;a href=&quot;../guide/single-file-components&quot;&gt;single-file components&lt;/a&gt;, string templates, and &lt;a href=&quot;../guide/render-function#JSX&quot;&gt;JSX&lt;/a&gt; - but never in DOM templates.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Los componentes sin contenido deben cerrarse autom&amp;aacute;ticamente en &lt;a href=&quot;../guide/single-file-components&quot;&gt;componentes de un solo archivo&lt;/a&gt; , plantillas de cadenas y &lt;a href=&quot;../guide/render-function#JSX&quot;&gt;JSX&lt;/a&gt; , pero nunca en plantillas DOM.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a4ac2cdf7f98694182608b01bc0f744fe9e4746e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Composition API&lt;/strong&gt; (the entry point for using the Composition API)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8972c7e01a3c71a03395aa066c335dc25874c6c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Composition&lt;/strong&gt; (merges properties into the options)</source>
          <target state="translated">&lt;strong&gt;Composici&amp;oacute;n&lt;/strong&gt; (fusiona propiedades en las opciones)</target>
        </trans-unit>
        <trans-unit id="60fabded27dfcc978fae4c0b8d31ca48e5c51013" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Conditionals&lt;/strong&gt; (whether the element is rendered/shown)</source>
          <target state="translated">&lt;strong&gt;Condicionales&lt;/strong&gt; (si el elemento es renderizado / mostrado)</target>
        </trans-unit>
        <trans-unit id="0279cf5d166f3e0294334d325d4fd07eb9f118d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Content&lt;/strong&gt; (overrides the content of the element)</source>
          <target state="translated">&lt;strong&gt;Contenido&lt;/strong&gt; (anula el contenido del elemento)</target>
        </trans-unit>
        <trans-unit id="51c3b5d7899b27aaf4553d8f374cba2f0cf85605" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Cookbook&lt;/strong&gt;: Recipes in the cookbook are written with some assumption of familiarity with Vue and its ecosystem. Each is a highly structured document that walks through some common implementation details that a Vue dev might encounter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d33f3dc65fd2766ebb811127cb046dd3ba50995c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DANGER&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;DANGER&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5f9965f5d0581505fbad8117e849a2bb3c06e9b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Danger&lt;/strong&gt;: Provide information that is negative and has a high risk to the user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ee7eade560c0dd0696b80fb7add4a23a698e3b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;[&quot;{{&quot;, &quot;}}&quot;]&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Predeterminado: &lt;/strong&gt; &lt;code&gt;[&quot;{{&quot;, &quot;}}&quot;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="31d6afb6f6d5c4ba2f1d890ed5736b8c6b5dbab3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;['{{', '}}']&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b241a5abdc77897c492cfcb7d360a119102193ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;[]&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d029e9d9f74ab88f590177d6c19135c4439e89b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;false (from 2.2.3+)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Predeterminado: &lt;/strong&gt; &lt;code&gt;false (from 2.2.3+)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f7d74b8084339714face30320f2494ee1712275f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8dd55cfc1da367d187668279378ae6d546cede29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0098e3775a64a58246b237645a7ec597838f5d2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;true&lt;/code&gt; (&lt;code&gt;false&lt;/code&gt; in production builds)</source>
          <target state="translated">&lt;strong&gt;Predeterminado: &lt;/strong&gt; &lt;code&gt;true&lt;/code&gt; ( &lt;code&gt;false&lt;/code&gt; en compilaciones de producci&amp;oacute;n)</target>
        </trans-unit>
        <trans-unit id="09e666297774299ab8e69da2379a5022b4be951d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f55e080a97a6af0c4009ba29f960e2aae463df51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;{}&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;{}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c3704abe1d37e76398ba5940843f37d776ab8ea4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Definition&lt;/strong&gt; (provides the component options)</source>
          <target state="translated">&lt;strong&gt;Definici&amp;oacute;n&lt;/strong&gt; (proporciona las opciones de los componentes)</target>
        </trans-unit>
        <trans-unit id="1cd26386d55741f7fa9b8ca81ce4db36bdd35b17" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Describe the &lt;em&gt;problem&lt;/em&gt; first, then the solution.&lt;/strong&gt; Before showing how a feature works, it's important to explain why it exists. Otherwise, users won't have the context to know if this information is important to them (is it a problem they experience?) or what prior knowledge/experience to connect it to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="670a30ba85c2b7ec88690585d92bd52152734367" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Details:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Details:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c0ebd4e953a94526b58bb125c9e7e0a77e00d15d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Details&lt;/strong&gt;: Provides the installed version of Vue as a string. This is especially useful for community plugins and components, where you might use different strategies for different versions.</source>
          <target state="translated">&lt;strong&gt;Detalles&lt;/strong&gt; : proporciona la versi&amp;oacute;n instalada de Vue como una cadena. Esto es especialmente &amp;uacute;til para complementos y componentes de la comunidad, donde puede usar diferentes estrategias para diferentes versiones.</target>
        </trans-unit>
        <trans-unit id="38e9dd4854488b8db9a8fe2026faf9549edbeaea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Develop learning materials.&lt;/strong&gt; It&amp;rsquo;s often said that the best way to learn is to teach. If there&amp;rsquo;s something interesting you&amp;rsquo;re doing with Vue, strengthen your expertise by writing a blog post, developing a workshop, or even publishing a gist that you share on social media.</source>
          <target state="translated">&lt;strong&gt;Desarrollar materiales de aprendizaje. &lt;/strong&gt;A menudo se dice que la mejor forma de aprender es ense&amp;ntilde;ar. Si hay algo interesante que est&amp;aacute; haciendo con Vue, refuerce su experiencia escribiendo una publicaci&amp;oacute;n de blog, desarrollando un taller o incluso publicando una esencia que comparte en las redes sociales.</target>
        </trans-unit>
        <trans-unit id="33297db0f9366ab590e27a7920f3c76ecadbadfd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Directive shorthands (&lt;code&gt;:&lt;/code&gt; for &lt;code&gt;v-bind:&lt;/code&gt;, &lt;code&gt;@&lt;/code&gt; for &lt;code&gt;v-on:&lt;/code&gt; and &lt;code&gt;#&lt;/code&gt; for &lt;code&gt;v-slot&lt;/code&gt;) should be used always or never.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Taquigraf&amp;iacute;as la directiva ( &lt;code&gt;:&lt;/code&gt; para &lt;code&gt;v-bind:&lt;/code&gt; , &lt;code&gt;@&lt;/code&gt; para &lt;code&gt;v-on:&lt;/code&gt; y &lt;code&gt;#&lt;/code&gt; para &lt;code&gt;v-slot&lt;/code&gt; ) se debe utilizar siempre o nunca.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5e22652338ed6960afb4b599dd9fce9779cdc8fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Does not expect expression&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;No espera expresi&amp;oacute;n&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6fcc1671566d3b4f3769462631f2b920b916fe7a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Don't include more than two interwoven tips and caveats per page.&lt;/strong&gt; If you find that more than two tips are needed in a page, consider adding a caveats section to address these issues. The guide is meant to be read straight through, and tips and caveats can be overwhelming or distracting to someone trying to understand the base concepts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="373ec713ee8640be446cc5d983e8fc63ddc9cbc1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Don't use emojis (except in discussions).&lt;/strong&gt; Emojis are cute and friendly, but they can be a distraction in documentation and some emoji even convey different meanings in different cultures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5666482d71ef230ec4048b63256dc97dcb881189" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Easier to read&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;M&amp;aacute;s f&amp;aacute;cil de leer&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b454432c041088580d48d79bff6e8c69b10a767e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Easier to test&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;M&amp;aacute;s f&amp;aacute;cil de probar&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="638cd0bc7500a23e53cbdfe519cb31952cddcc41" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Element selectors should be avoided with &lt;code&gt;scoped&lt;/code&gt;.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Los selectores de elementos deben evitarse con &lt;code&gt;scoped&lt;/code&gt; .&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a1785f83ab6bc5d6e19caf3d4220043888902d28" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Elements with multiple attributes should span multiple lines, with one attribute per line.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Los elementos con m&amp;uacute;ltiples atributos deben abarcar varias l&amp;iacute;neas, con un atributo por l&amp;iacute;nea.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="72495c0126129346f3a2a57da3953c3c6eea80eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Error Propagation Rules&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Reglas de propagaci&amp;oacute;n de errores&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b628b6e50ce2e88278533deddbc3d4df6169924f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Essentials&lt;/strong&gt;: It should take no longer than 5 hours to read the Essentials, though shorter is better. Its goal is to provide the 20% of knowledge that will help users handle 80% of use cases. Essentials can link to more advanced guides and the API, though, in most cases, you should avoid such links. When they are provided, you need also provide a context so users are aware if they should follow this link on their first reading. Otherwise, many users end up exhausting their cognitive capacity link-hopping, trying to fully learn every aspect of a feature before moving on, and as a result, never finish that first read-through of the Essentials. Remember that a smooth read is more important than being thorough. We want to give people the information they need to avoid a frustrating experience, but they can always come back and read further, or Google a less common problem when they encounter it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c82e51a4a5dcf1c48f49c2c08a74082e57288ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Events:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Events:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="26275c24038f6f0269283d2cd56eb668c97eb84a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Events&lt;/strong&gt; (callbacks triggered by reactive events)</source>
          <target state="translated">&lt;strong&gt;Eventos&lt;/strong&gt; (devoluciones de llamada desencadenadas por eventos reactivos)</target>
        </trans-unit>
        <trans-unit id="4e2021f429648043552bb98e0d02b664a4de5261" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Events&lt;/strong&gt; (component event listeners)</source>
          <target state="translated">&lt;strong&gt;Eventos&lt;/strong&gt; (oyentes de eventos de componentes)</target>
        </trans-unit>
        <trans-unit id="4168878b06eaa6917a0f012585506612f5054ea6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bce3f4a409dc0c67054a7e806ad3eecf69f742f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1bc0a5d67820f61786ae04d054caabfe5bd3f6ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Examples:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Examples:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5831cd2625ba72eb2a0649c33a4ba902e70c110e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Excellence comes from iteration.&lt;/strong&gt; First drafts are always bad, but writing them is a vital part of the process. It's extremely difficult to avoid the slow progression of Bad -&amp;gt; OK -&amp;gt; Good -&amp;gt; Great -&amp;gt; Inspiring -&amp;gt; Transcendent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0a0fef810a9db96f06f255a7dec09d1f131e019" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Expects:&lt;/strong&gt; JavaScript expression that is valid in a function argument position (supports destructuring in &lt;a href=&quot;../guide/component-slots#destructuring-slot-props&quot;&gt;supported environments&lt;/a&gt;). Optional - only needed if expecting props to be passed to the slot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db3b4f12af78b4d578978b4d1b66314e3bb540eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Expects:&lt;/strong&gt; JavaScript expression that is valid in a function argument position (supports destructuring in &lt;a href=&quot;../guide/components-slots#Slot-Props-Destructuring&quot;&gt;supported environments&lt;/a&gt;). Optional - only needed if expecting props to be passed to the slot.</source>
          <target state="translated">&lt;strong&gt;Espera:&lt;/strong&gt; expresi&amp;oacute;n de JavaScript que es v&amp;aacute;lida en una posici&amp;oacute;n de argumento de funci&amp;oacute;n (admite desestructuraci&amp;oacute;n en &lt;a href=&quot;../guide/components-slots#Slot-Props-Destructuring&quot;&gt;entornos compatibles&lt;/a&gt; ). Opcional: solo es necesario si espera que se pasen accesorios a la ranura.</target>
        </trans-unit>
        <trans-unit id="4eb41866fbeaee693261d3297ab065806da6b9ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Expects:&lt;/strong&gt; string literal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9d4bdd1b3db01d31d8bf74f267e6baecc3386f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Expects:&lt;/strong&gt; varies based on value of form inputs element or output of components</source>
          <target state="translated">&lt;strong&gt;Espera:&lt;/strong&gt; var&amp;iacute;a seg&amp;uacute;n el valor del elemento de entrada del formulario o la salida de los componentes</target>
        </trans-unit>
        <trans-unit id="0d11b300df1da0b4058d4da1c8c3f39b2d4a723e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Expects:&lt;/strong&gt;&lt;code&gt;Array | Object | number | string | Iterable (since 2.6)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Espera: &lt;/strong&gt; &lt;code&gt;Array | Object | number | string | Iterable (since 2.6)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cfd9db5e25e4d939debe55c2191f67b05b1e96fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Expects:&lt;/strong&gt;&lt;code&gt;Array | Object | number | string | Iterable&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31e599a39b8279481f07e91bf63a62c6b6d2ef22" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Expects:&lt;/strong&gt;&lt;code&gt;Function | Inline Statement | Object&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Espera: &lt;/strong&gt; &lt;code&gt;Function | Inline Statement | Object&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f91ac6aa07ce5c805bd0876504d349578d9c7109" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Expects:&lt;/strong&gt;&lt;code&gt;any (with argument) | Object (without argument)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Espera: &lt;/strong&gt; &lt;code&gt;any (with argument) | Object (without argument)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0618a9bb43f4a5f84102eb945be26d0d63ad1ee2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Expects:&lt;/strong&gt;&lt;code&gt;any&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Expects:&lt;/strong&gt;&lt;code&gt;any&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="605bd65cd4cd4828fac7e01c366cdb864da5e77b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Expects:&lt;/strong&gt;&lt;code&gt;function argument expression&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Espera: &lt;/strong&gt; &lt;code&gt;function argument expression&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e25e1be19e286845489a734fb6a53828e92f749d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Expects:&lt;/strong&gt;&lt;code&gt;number | string&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Espera: &lt;/strong&gt; &lt;code&gt;number | string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8cb9c268451c431e3ff4beec24135d68a9264b4b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Expects:&lt;/strong&gt;&lt;code&gt;string | Function&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a7f0335895904ad2f729e9763c9b27268d43747" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Expects:&lt;/strong&gt;&lt;code&gt;string | Object (component&amp;rsquo;s options object)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Espera: &lt;/strong&gt; &lt;code&gt;string | Object (component&amp;rsquo;s options object)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c020bbcee9bb619cb464ebcee54b7feb48d74e8a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Expects:&lt;/strong&gt;&lt;code&gt;string&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Expects:&lt;/strong&gt;&lt;code&gt;string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="56929206700d8db6985c71864d5e8b7b32862a25" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Filenames of &lt;a href=&quot;../guide/single-file-component&quot;&gt;single-file components&lt;/a&gt; should either be always PascalCase or always kebab-case.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97823cf4fbee88626858f29b12850205387a6039" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Filenames of &lt;a href=&quot;../guide/single-file-components&quot;&gt;single-file components&lt;/a&gt; should either be always PascalCase or always kebab-case.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Los nombres de &lt;a href=&quot;../guide/single-file-components&quot;&gt;archivo de los componentes&lt;/a&gt; de un solo archivo deben ser siempre PascalCase o siempre kebab-case.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fddcdafb247623fb8b4c87606de9b27df793bacd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;For applications, styles in a top-level &lt;code&gt;App&lt;/code&gt; component and in layout components may be global, but all other components should always be scoped.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Para las aplicaciones, los estilos en un componente de la &lt;code&gt;App&lt;/code&gt; nivel superior y en los componentes de dise&amp;ntilde;o pueden ser globales, pero todos los dem&amp;aacute;s componentes siempre deben tener un alcance.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1fbf4d454f398b78dc76acfa06c2e5521bf15148" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;From other projects&lt;/strong&gt;: How does this software compare to similar software? This is important to help users understand what additional problems we might solve or create for them, and to what extent they can transfer knowledge they already have.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b5eb97ea9993c46c17f79e9a998254fdd2f05e4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Full (production)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Completo (producci&amp;oacute;n)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="be686f38b457d90ffc224acb3ec03b7b7e86eca8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Full&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Full&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bf11e13c7ab9f59963581b6f063d5a96dd29d1d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Full&lt;/strong&gt;: builds that contain both the compiler and the runtime.</source>
          <target state="translated">&lt;strong&gt;Completo&lt;/strong&gt; : compilaciones que contienen tanto el compilador como el tiempo de ejecuci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="f3fa7204f8b746d36df3ac61484905acd924d349" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Global Awareness&lt;/strong&gt; (requires knowledge beyond the component)</source>
          <target state="translated">&lt;strong&gt;Conciencia global&lt;/strong&gt; (requiere conocimiento m&amp;aacute;s all&amp;aacute; del componente)</target>
        </trans-unit>
        <trans-unit id="8a23179aa54adb259c706287a4f178e2376909e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Global definitions&lt;/strong&gt; force unique names for every component</source>
          <target state="translated">&lt;strong&gt;Las definiciones globales&lt;/strong&gt; fuerzan nombres &amp;uacute;nicos para cada componente</target>
        </trans-unit>
        <trans-unit id="2f43e56449de51df895c15468a6860f5bdf547e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Guide&lt;/strong&gt;: Make users feel smart, powerful, and curious, then maintain this state so that users maintain the motivation and cognitive capacity to keep learning more. Guide pages are meant to be read sequentially, so should generally be ordered from the highest to lowest power/effort ratio.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d1fc4403a7a5869313b3cd13567b10a0f19f926" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Headings should describe problems&lt;/strong&gt;, not solutions. For example, a less effective heading might be &quot;Using props&quot;, because it describes a solution. A better heading might be &quot;Passing Data to Child Components with Props&quot;, because it provides the context of the problem props solve. Users won't really start paying attention to the explanation of a feature until they have some idea of why/when they'd use it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8d7d6856790314324416e20c9332772457103cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Help meetup organizers.&lt;/strong&gt; There can never be too much help when it comes to running an event, so offer a hand to help out local organizers to help make every event a success.</source>
          <target state="translated">&lt;strong&gt;Ayuda a los organizadores de reuniones. &lt;/strong&gt;Nunca puede haber demasiada ayuda cuando se trata de organizar un evento, as&amp;iacute; que ofrezca una mano para ayudar a los organizadores locales para que cada evento sea un &amp;eacute;xito.</target>
        </trans-unit>
        <trans-unit id="be73b89e3182b121a9fd16e801f4eadc223132eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Here&amp;rsquo;s a quick look at how it works.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c19c2a85727f0e0aabfb3de74c79f83c656677c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;INFO&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;INFO&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="159d66eda6305969fbd1869fd472766005895aca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Important&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="859e7621593ceecd9a89afeb5a8858ed92a46010" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important&lt;/strong&gt;: the built files in GitHub&amp;rsquo;s &lt;code&gt;/dist&lt;/code&gt; folder are only checked-in during releases. To use Vue from the latest source code on GitHub, you will have to build it yourself!</source>
          <target state="translated">&lt;strong&gt;Importante&lt;/strong&gt; : los archivos compilados en la carpeta &lt;code&gt;/dist&lt;/code&gt; de GitHub solo se registran durante las versiones. Para usar Vue desde el &amp;uacute;ltimo c&amp;oacute;digo fuente en GitHub, &amp;iexcl;tendr&amp;aacute; que compilarlo usted mismo!</target>
        </trans-unit>
        <trans-unit id="5a326399e1607915bca32e9fa5362b7b27f3ec2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;In Vue 3.0, this check is performed during template compilation.&lt;/strong&gt; To instruct the compiler to treat &lt;code&gt;&amp;lt;plastic-button&amp;gt;&lt;/code&gt; as a custom element:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e54bc9e8d3e3ce3fb76757aa9b5229dae5b0f68" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;In most cases, prefer links between sections of the docs over repeating the same content in multiple sections.&lt;/strong&gt; Some repetition in content is unavoidable and even essential for learning. However, too much repetition also makes the docs more difficult to maintain, because a change in the API will require changes in many places and it's easy to miss something. This is a difficult balance to strike.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="243b12705e1e4a8afff4a5916928acb619ce3070" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;In most projects, component names should always be PascalCase in &lt;a href=&quot;../guide/single-file-component&quot;&gt;single-file components&lt;/a&gt; and string templates - but kebab-case in DOM templates.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eddea28c04804d5cdd6c44aeb0017b9509b76d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;In most projects, component names should always be PascalCase in &lt;a href=&quot;../guide/single-file-components&quot;&gt;single-file components&lt;/a&gt; and string templates - but kebab-case in DOM templates.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;En la mayor&amp;iacute;a de los proyectos, los nombres de los componentes siempre deben ser PascalCase en &lt;a href=&quot;../guide/single-file-components&quot;&gt;los componentes de un solo archivo&lt;/a&gt; y en las plantillas de cadenas, pero en kebab en las plantillas DOM.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="64ee6fb8a7f4b0c53cfac9e3b806ec29aa05421d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Info&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Info&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="684c46f169d4bf28c0669726af8c71c163be2d8e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Info&lt;/strong&gt;: Provide information that is neutral</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d979b84fc3fc5093dec36bbdc4f6542a9b961c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Inside &lt;code&gt;setup()&lt;/code&gt;, &lt;code&gt;this&lt;/code&gt; won't be a reference to the current active instance&lt;/strong&gt; Since &lt;code&gt;setup()&lt;/code&gt; is called before other component options are resolved, &lt;code&gt;this&lt;/code&gt; inside &lt;code&gt;setup()&lt;/code&gt; will behave quite differently from &lt;code&gt;this&lt;/code&gt; in other options. This might cause confusions when using &lt;code&gt;setup()&lt;/code&gt; along other Options API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5daa84f16c0506d6d9cd93aadc3c25d84843e150" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Installation/Integration&lt;/strong&gt;: Provide a thorough overview of how to integrate the software into as many different kinds of projects as necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a21702522e676296f3493a3bdf8d8d4178fdcc8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Interface&lt;/strong&gt; (the interface to the component)</source>
          <target state="translated">&lt;strong&gt;Interfaz&lt;/strong&gt; (la interfaz del componente)</target>
        </trans-unit>
        <trans-unit id="32c7c824ff4b6e8f1a22737f802d3c06e4e1290c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Introduce only one new concept at a time whenever possible&lt;/strong&gt; (including both text and code examples). Even if many people are able to understand when you introduce more than one, there are also many who will become lost - and even those who don't become lost will have depleted more of their cognitive capacity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78144fbb436fa4a769d2897d345b3a6902805b82" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Introduction/Getting Started&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2aed45fa106a6becd5a1041e2d72c68bb343705" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Invocation Timing&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2cad8ced8c039b0d36d08af7e77c606dced0283" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;It&amp;rsquo;s usually best to use &lt;code&gt;key&lt;/code&gt; with &lt;code&gt;v-if&lt;/code&gt; + &lt;code&gt;v-else&lt;/code&gt;, if they are the same element type (e.g. both &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; elements).&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Por lo general, es mejor usar &lt;code&gt;key&lt;/code&gt; con &lt;code&gt;v-if&lt;/code&gt; + &lt;code&gt;v-else&lt;/code&gt; , si son del mismo tipo de elemento (por ejemplo, ambos elementos &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; ).&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="50ab8195d70fdd957d834defb31f6c854eb21fbd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Kindly communicate rules/boundaries.&lt;/strong&gt; If someone behaves in a way that's abusive/inappropriate, respond only with kindness and maturity, but also make it clear that this behavior is not acceptable and what will happen (according to the code of conduct) if they continue behaving poorly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6474c86e96b67957b474b5c8709c7e7244d8c5b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Let&amp;rsquo;s now apply it to our example:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed0da52f24fc23162d611a9446c6dec1db5c9130" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Limited to:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Limitado a:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3adeed0a0675e966a2815a581c3051cba6b69141" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Limited to:&lt;/strong&gt; native HTML elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73b102f0b6dbbb699bb3240e3ac70456e2a1ce34" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;List Rendering&lt;/strong&gt; (creates multiple variations of the same element)</source>
          <target state="translated">&lt;strong&gt;Representaci&amp;oacute;n de listas&lt;/strong&gt; (crea m&amp;uacute;ltiples variaciones del mismo elemento)</target>
        </trans-unit>
        <trans-unit id="9cc3d43d827e31df8c7e407c697576adabdc70b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Listen to what people are saying and mirror if you're not sure you're understanding correctly.&lt;/strong&gt; This can help validate people's feelings and experiences, while also understanding if &lt;em&gt;you're&lt;/em&gt; understanding &lt;em&gt;them&lt;/em&gt; correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d08a884b7774d818566f18f719401c683f2f423" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Local State&lt;/strong&gt; (local reactive properties)</source>
          <target state="translated">&lt;strong&gt;Estado&lt;/strong&gt; local (propiedades reactivas locales)</target>
        </trans-unit>
        <trans-unit id="379bd1bf3febc936761261ddaf1794fd649c8446" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Mapping between Options API Lifecycle Options and Composition API&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3d03ac8bd372e446fc01b68fb411514961f76f6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Markdown Example&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61921d9dc155c55bd7e73e7dc622468d0dd53bd2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Markdown Examples&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce2152138153b226303222d1db66478be9439c28" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Migrations&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Migrations&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="7413394ced6fa7e66835478f101bf73395fa2218" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Modern JavaScript with ES2015/16&lt;/strong&gt;: Read through Babel&amp;rsquo;s &lt;a href=&quot;https://babeljs.io/docs/learn-es2015/&quot;&gt;Learn ES2015 guide&lt;/a&gt;. You don&amp;rsquo;t have to memorize every feature right now, but keep this page as a reference you can come back to.</source>
          <target state="translated">&lt;strong&gt;JavaScript moderno con ES2015 / 16&lt;/strong&gt; : lea la &lt;a href=&quot;https://babeljs.io/docs/learn-es2015/&quot;&gt;gu&amp;iacute;a Learn ES2015 de&lt;/a&gt; Babel . No es necesario que memorice todas las funciones en este momento, pero mantenga esta p&amp;aacute;gina como referencia a la que pueda volver.</target>
        </trans-unit>
        <trans-unit id="35c503ce7156f8dd5a3085065443d12b874ae981" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Modern JavaScript with ES2015/16&lt;/strong&gt;: Read through Babel's &lt;a href=&quot;https://babeljs.io/docs/en/learn&quot;&gt;Learn ES2015 guide (opens new window)&lt;/a&gt;. You don't have to memorize every feature right now, but keep this page as a reference you can come back to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="759cdbc7016b8df56d0f380dd2b2f5652a099ecf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Modifiers:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Modifiers:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7a9edbf4e1d29e963ce27ada6a35a7f6eb323d53" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;More adaptable to changing requirements&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;M&amp;aacute;s adaptable a los requisitos cambiantes&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f684f9039d9866568b94fec13f8413ccad3924e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NEW:&lt;/strong&gt; Added the ability to create custom &lt;code&gt;v-model&lt;/code&gt; modifiers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cf368d0dc6cbdf2a62bf94247d3a81adf5e6a07" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NEW:&lt;/strong&gt; Multiple &lt;code&gt;v-model&lt;/code&gt; bindings on the same component are possible now;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="632e202410d3fa3142f7dc8f84f78b467c1e2b29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NEW:&lt;/strong&gt; There is new &lt;code&gt;v-is&lt;/code&gt; directive to support 2.x use cases where &lt;code&gt;is&lt;/code&gt; was used on native elements to work around native HTML parsing restrictions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22e301ed94f18c44e9c6f32189872de5119720f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NEW:&lt;/strong&gt;&lt;code&gt;key&lt;/code&gt;s are no longer necessary on &lt;code&gt;v-if&lt;/code&gt;/&lt;code&gt;v-else&lt;/code&gt;/&lt;code&gt;v-else-if&lt;/code&gt; branches, since Vue now automatically generates unique &lt;code&gt;key&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fc1597dfe992d87dcc418262208d7b520cc2ad4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;NOTE&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="30a7b4aa01523562e38bc0c0b4cd83ae88c71d8b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Never assume a more advanced context than you have to.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbb945645dad48b1151e86ddc17619445af4ecf9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Never use &lt;code&gt;v-if&lt;/code&gt; on the same element as &lt;code&gt;v-for&lt;/code&gt;.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Nunca use &lt;code&gt;v-if&lt;/code&gt; en el mismo elemento que &lt;code&gt;v-for&lt;/code&gt; .&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b8efe0dd83b74239daa3e2eeae247a424aacccb1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;No CSS support&lt;/strong&gt; means that while HTML and JavaScript are modularized into components, CSS is conspicuously left out</source>
          <target state="translated">&lt;strong&gt;La falta de compatibilidad con CSS&lt;/strong&gt; significa que mientras HTML y JavaScript est&amp;aacute;n modularizados en componentes, CSS se deja de lado</target>
        </trans-unit>
        <trans-unit id="708ba417a55b8fbadb58cd0c4df6960764b68b90" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;No build step&lt;/strong&gt; restricts us to HTML and ES5 JavaScript, rather than preprocessors like Pug (formerly Jade) and Babel</source>
          <target state="translated">&lt;strong&gt;Ning&amp;uacute;n paso de compilaci&amp;oacute;n&lt;/strong&gt; nos restringe a HTML y ES5 JavaScript, en lugar de preprocesadores como Pug (anteriormente Jade) y Babel.</target>
        </trans-unit>
        <trans-unit id="ed72b599aa666ec8a50be2dbe2d6abd81d7c2a72" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Node Package Manager (NPM)&lt;/strong&gt;: Read the &lt;a href=&quot;https://docs.npmjs.com/getting-started/what-is-npm&quot;&gt;Getting Started guide&lt;/a&gt; through section &lt;em&gt;10: Uninstalling global packages&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;Administrador de paquetes de nodo (NPM)&lt;/strong&gt; : lea la &lt;a href=&quot;https://docs.npmjs.com/getting-started/what-is-npm&quot;&gt;gu&amp;iacute;a de introducci&amp;oacute;n&lt;/a&gt; hasta la secci&amp;oacute;n &lt;em&gt;10: Desinstalaci&amp;oacute;n de paquetes globales&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="7acc531c2a9a3f4a5a8ddd4041736780b08d157a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Node Package Manager (npm)&lt;/strong&gt;: Read the &lt;a href=&quot;https://docs.npmjs.com/packages-and-modules/getting-packages-from-the-registry&quot;&gt;Getting Started guide (opens new window)&lt;/a&gt; section about how to get packages from the registry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38aed51ce3b68c87b6b4572535e5c0577b7fd751" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Non-Reactive Properties&lt;/strong&gt; (instance properties independent of the reactivity system)</source>
          <target state="translated">&lt;strong&gt;Propiedades no reactivas&lt;/strong&gt; (propiedades de instancia independientes del sistema de reactividad)</target>
        </trans-unit>
        <trans-unit id="f933f46da514a2fdb43be91fa86036ab31069cc2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Non-empty HTML attribute values should always be inside quotes (single or double, whichever is not used in JS).&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Los valores de atributo HTML no vac&amp;iacute;os siempre deben estar entre comillas (simples o dobles, lo que no se use en JS).&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="941374b397d27fae73264211b1df1a35d0ec1059" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; since 2.6.0+, there are two notable changes to this property:</source>
          <target state="translated">&lt;strong&gt;Nota:&lt;/strong&gt; desde 2.6.0+, hay dos cambios notables en esta propiedad:</target>
        </trans-unit>
        <trans-unit id="c08f5b0f561a14dc143859f6d16020eaa1078df1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;v-slot:foo&lt;/code&gt; is supported in v2.6+. For older versions, you can use the &lt;a href=&quot;../guide/components-slots#Deprecated-Syntax&quot;&gt;deprecated syntax&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Nota: &lt;/strong&gt; &lt;code&gt;v-slot:foo&lt;/code&gt; es compatible con v2.6 +. Para versiones anteriores, puede utilizar la &lt;a href=&quot;../guide/components-slots#Deprecated-Syntax&quot;&gt;sintaxis obsoleta&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f2cd00a05c4e51c80b150666326157914820525e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Note&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="77c625b46323254f1f436d1ff1d072c1ccbc8e5f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Now having those two functionalities in separate files, we can start using them in our component. Here&amp;rsquo;s how this can be done:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b9bbffebff17f5725eef4ebdf2b0b4e8353c59" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Only wait until something is &quot;Good&quot; before publishing.&lt;/strong&gt; The community will help you push it further down the chain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f51242d40b473000f79f7174c5a056075aa3f0f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Only works in development mode.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Solo funciona en modo desarrollo.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cb1cf8401e5ae8979d62413b386fbf0e67928c58" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Option: deep&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Opci&amp;oacute;n: profunda&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6a5fb15b8b724a80db2d11adf1e6fe115dce4518" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Option: flush&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38d30dd612e7d86c03ace76fc8eaad0bb3c26c1f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Option: immediate&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Opci&amp;oacute;n: inmediata&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e05b0219610b7cada23af8c947c90b24246c1f5b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Other Attributes&lt;/strong&gt; (all unspecified bound &amp;amp; unbound attributes)</source>
          <target state="translated">&lt;strong&gt;Otros atributos&lt;/strong&gt; (todos los atributos vinculados y no vinculados no especificados)</target>
        </trans-unit>
        <trans-unit id="80c877b924c706abe4c17227940c7e09c897f967" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Prefer &lt;a href=&quot;#v-slot&quot;&gt;v-slot&lt;/a&gt; in 2.6.0+.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Prefiero &lt;a href=&quot;#v-slot&quot;&gt;la ranura&lt;/a&gt; en V en 2.6.0+.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c418b6815beb7efd7d2b58e7df362f41815b9d8d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Present at your local meetup.&lt;/strong&gt; Whether it&amp;rsquo;s giving a talk or running a workshop, you can bring a lot of value to your community by helping both new and experienced Vue developers continue to grow.</source>
          <target state="translated">&lt;strong&gt;Presente en su reuni&amp;oacute;n local. &lt;/strong&gt;Ya sea para dar una charla o realizar un taller, puede aportar mucho valor a su comunidad al ayudar a los desarrolladores de Vue nuevos y experimentados a seguir creciendo.</target>
        </trans-unit>
        <trans-unit id="02b0b9d7c70b0eac40c055ce3694425e58759b3b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Proof-read your own work before showing it to others.&lt;/strong&gt; If you show someone work with a lot of spelling/grammar mistakes, you'll get feedback about spelling grammar/mistakes instead of more valuable notes about whether the writing is achieving your goals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0feb9d8624223b0415052afcdca0d85f1729096b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Prop definitions should be as detailed as possible.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Las definiciones de prop deben ser lo m&amp;aacute;s detalladas posible.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="20f4a8aefac26d08f8b6f5df7ad709bbf6d79918" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Prop names should always use camelCase during declaration, but kebab-case in templates and &lt;a href=&quot;../guide/render-function#JSX&quot;&gt;JSX&lt;/a&gt;.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Los nombres de accesorios siempre deben usar camelCase durante la declaraci&amp;oacute;n, pero kebab-case en plantillas y &lt;a href=&quot;../guide/render-function#JSX&quot;&gt;JSX&lt;/a&gt; .&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1bb81ce37f9746efc71239504abaa0358f11afc4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Prop names should always use camelCase during declaration, but kebab-case in templates and &lt;a href=&quot;../guide/render-function#jsx&quot;&gt;JSX&lt;/a&gt;.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dab9da247b8351e83d736e55d134f2d0b569b3a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Props and events should be preferred for parent-child component communication, instead of &lt;code&gt;this.$parent&lt;/code&gt; or mutating props.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Los accesorios y eventos deben ser preferidos para la comunicaci&amp;oacute;n de componentes padre-hijo, en lugar de &lt;code&gt;this.$parent&lt;/code&gt; o accesorios mutantes.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d6be65cfbcfa67055bc600c48fbf98a8983d5f66" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Props:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Props:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b1681684e28d50d4e0b68a466fdf93d697603248" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Read only&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Solo lectura&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="967e3ec2670e9ce2544a02647cc6e3524a1033c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reference/API&lt;/strong&gt;: Provide a complete list of features, including type information, descriptions of the problem each solves, examples of every combination of options, and links to guides, cookbook recipes, and other internal resources providing more detail. Unlike other pages, this one is not meant to be read top-to-bottom, so plenty of detail can be provided. These references must also be more easily skimmable than the guides, so the format should be closer to dictionary entries than the story-telling format of the guides.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ba0717df87f0c2ba83f15e3c3e7e13c2ce3b1b5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Relatable is better than obscure.&lt;/strong&gt; For example, a &lt;code&gt;&amp;lt;BlogPost&amp;gt;&lt;/code&gt; component example is better than &lt;code&gt;&amp;lt;CurrencyExchangeSettings&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d82fcc0aefc9c30c1614767b4ec2071a87651b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Render Modifiers&lt;/strong&gt; (changes the way the element renders)</source>
          <target state="translated">&lt;strong&gt;Render Modifiers&lt;/strong&gt; (cambia la forma en que se representa el elemento)</target>
        </trans-unit>
        <trans-unit id="606c6722d9e6077d0a71cff87db5dd6619af5bd5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Rendered Markdown&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1ef3cf1c7bba84226f2cbff94b432d3806debab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Rendered Output&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="046248a67f81a87275d2713361d93e6277e57fc1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Rendering&lt;/strong&gt; (the declarative description of the component output)</source>
          <target state="translated">&lt;strong&gt;Renderizado&lt;/strong&gt; (la descripci&amp;oacute;n declarativa de la salida del componente)</target>
        </trans-unit>
        <trans-unit id="bba8b85e09d04e9ff3833d399b110655c9d34fd1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Replaced by &lt;a href=&quot;#slot-scope&quot;&gt;slot-scope&lt;/a&gt; in 2.5.0+. Prefer &lt;a href=&quot;#v-slot&quot;&gt;v-slot&lt;/a&gt; in 2.6.0+.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Reemplazado por &lt;a href=&quot;#slot-scope&quot;&gt;slot-scope&lt;/a&gt; en 2.5.0+. Prefiere &lt;a href=&quot;#v-slot&quot;&gt;la ranura&lt;/a&gt; en V en 2.6.0+.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7d9d8590c06950cfe7d23c8076e75de32ab31793" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Resources:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Resources:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aa09b1a3058d56edd04f134fd7c48d7c250cde5f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Resources&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Resources&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cd20deb2bd323139cb49e99fda8def370265bcc5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Respect users' cognitive capacity (i.e. brain power).&lt;/strong&gt; When a user starts reading, they begin with a certain amount of limited brain power and when they run out, they stop learning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8eef9ba06cd4cb3f284b874b86d987edb1aa3d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Restriction:&lt;/strong&gt; Only accepts &lt;code&gt;Function&lt;/code&gt; when used in a component definition.</source>
          <target state="translated">&lt;strong&gt;Restricci&amp;oacute;n:&lt;/strong&gt; solo acepta &lt;code&gt;Function&lt;/code&gt; cuando se usa en una definici&amp;oacute;n de componente.</target>
        </trans-unit>
        <trans-unit id="b90bf25d62c2eeb0635c85b67ee56f1f614d8001" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Restriction:&lt;/strong&gt; only respected in instance creation via &lt;code&gt;new&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Restricci&amp;oacute;n:&lt;/strong&gt; solo se respeta en la creaci&amp;oacute;n de instancias mediante &lt;code&gt;new&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8703a57646acf6bf8a7bcb014e1277df0396704b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Restriction:&lt;/strong&gt; only respected when used as a component option.</source>
          <target state="translated">&lt;strong&gt;Restricci&amp;oacute;n:&lt;/strong&gt; solo se respeta cuando se utiliza como opci&amp;oacute;n de componente.</target>
        </trans-unit>
        <trans-unit id="e7d6efc9eea5ec5899336b013d8a4a04ddbc1570" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Restriction:&lt;/strong&gt; previous sibling element must have &lt;code&gt;v-if&lt;/code&gt; or &lt;code&gt;v-else-if&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Restricci&amp;oacute;n: el&lt;/strong&gt; elemento hermano anterior debe tener &lt;code&gt;v-if&lt;/code&gt; o &lt;code&gt;v-else-if&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1cd4d042d1f3b77413125eae571f5dfa674118a9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Restrictions:&lt;/strong&gt; This option is only available in the full build, with in-browser compilation.</source>
          <target state="translated">&lt;strong&gt;Restricciones:&lt;/strong&gt; esta opci&amp;oacute;n solo est&amp;aacute; disponible en la compilaci&amp;oacute;n completa, con compilaci&amp;oacute;n en el navegador.</target>
        </trans-unit>
        <trans-unit id="3aa30166447568193d8352c261b4a9676114829a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Restrictions:&lt;/strong&gt; This option is only available in the full build, with in-browser template compilation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e584ca6914ce5e035ff932a639c1bba063960a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Returns:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Returns:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3fffbe308cb3aebc9809737db9f95e9b2f39ae1d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Returns:&lt;/strong&gt; the set value.</source>
          <target state="translated">&lt;strong&gt;Devuelve:&lt;/strong&gt; el valor establecido.</target>
        </trans-unit>
        <trans-unit id="4d4a4525555cd7f56fa01b2fa1893dc073ac0686" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Returns:&lt;/strong&gt;&lt;code&gt;vm&lt;/code&gt; - the instance itself</source>
          <target state="translated">&lt;strong&gt;Devuelve: &lt;/strong&gt; &lt;code&gt;vm&lt;/code&gt; - la propia instancia</target>
        </trans-unit>
        <trans-unit id="e4729b1dcc4e75688e14c6fe1c83c8e0554a1125" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Returns:&lt;/strong&gt;&lt;code&gt;{Function} unwatch&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Devoluciones: &lt;/strong&gt; &lt;code&gt;{Function} unwatch&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d66c166160c0151a11c70fcf2705117948ee4002" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Runtime-only (production)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Solo en tiempo de ejecuci&amp;oacute;n (producci&amp;oacute;n)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="25cf73882e762dba8afee16b525b99baa1638042" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Runtime-only&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Runtime-only&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2b8151382b1dcb8df49d22db4a74cf360a4c0fd1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Runtime&lt;/strong&gt;: code that is responsible for creating Vue instances, rendering and patching virtual DOM, etc. Basically everything minus the compiler.</source>
          <target state="translated">&lt;strong&gt;Tiempo de ejecuci&amp;oacute;n&lt;/strong&gt; : c&amp;oacute;digo que se encarga de crear instancias de Vue, renderizar y parchear DOM virtual, etc. B&amp;aacute;sicamente todo menos el compilador.</target>
        </trans-unit>
        <trans-unit id="551e0b7660ec60a1ba024654ebf85dd6e11ea8a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="75b4cfeef7506f48dfa557a62c3c7451c92c8d48" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;#Vue-delete&quot;&gt;Vue.delete&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;#Vue-delete&quot;&gt;Vue.delete&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a46648f32cc811961aba9d8ce45132a5e6185843" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;#Vue-filter&quot;&gt;&lt;code&gt;Vue.filter&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;#Vue-filter&quot;&gt; &lt;code&gt;Vue.filter&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f50569412e532ff87a77992d17cc3bfc85802b39" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;#Vue-set&quot;&gt;Vue.set&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;#Vue-set&quot;&gt;Vue.set&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b6e7fa669571c4c87270f6a485dcaaa85df71aa8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;#data&quot;&gt;Options / Data - data&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;#data&quot;&gt;Opciones / Datos - datos&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b6f293290f184cc5ab66dddd694d353b7b1ffe0b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;#vm-watch&quot;&gt;Instance Methods / Data - vm.$watch&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Consulte tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;#vm-watch&quot;&gt;M&amp;eacute;todos / Datos de instancia - vm. $ Watch&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1beb5ed3999aabe1e234f9aef76ee2ecdca2b889" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/component-attrs#attribute-inheritance&quot;&gt;Attribute Inheritance&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec24b49af2320650b1cd488dba6beef6e96b21ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/component-attrs#disabling-attribute-inheritance&quot;&gt;Disabling Attribute Inheritance&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f0748daca8f6421ef752221d49571c3b91ee293" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/component-basics&quot;&gt;Components&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7765e974fad93a22eb13f4248e92f2a51cfcdf1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/component-basics#content-distribution-with-slots&quot;&gt;Content Distribution with Slots&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6185bdfc419285da0f0105949d97b1555075338" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/component-dynamic-async&quot;&gt;Dynamic Components&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4d21e44e60162468e2f324654b4eb07cd8981e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/component-dynamic-async#dynamic-components-with-keep-alive&quot;&gt;Dynamic Components - keep-alive&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="017d9826342af7c23356cdb253c533d0250ab569" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/component-props&quot;&gt;Props&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c938f12979fca40aeb719e76e4e6f208571a199a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/component-provide-inject&quot;&gt;Provide / Inject&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6663fc5d2be78338efaba04c19c948ba8e3ec6d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/component-template-refs&quot;&gt;Child Component Refs&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="655730a153c43078f4f87ccfddc2f6fb750a862c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/components&quot;&gt;Components&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/components&quot;&gt;Componentes&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a92cdc3b11d63af56fedffda35b9c9d3ba54cd70" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/components#Child-Component-Refs&quot;&gt;Child Component Refs&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;V&amp;eacute;ase tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/components#Child-Component-Refs&quot;&gt;referencias de componentes secundarios&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="40d5f587a413c7f218daa3b017b2791702860d16" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/components#Content-Distribution-with-Slots&quot;&gt;Content Distribution with Slots&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/components#Content-Distribution-with-Slots&quot;&gt;Distribuci&amp;oacute;n de contenido con ranuras&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="238943e8b51fe9df41911761dc0a75d5b8d90d0d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/components#Dynamic-Components&quot;&gt;Dynamic Components&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/components#Dynamic-Components&quot;&gt;Componentes din&amp;aacute;micos&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="646c04867d303b3267d9b377d73333b03cdf233d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/components#Named-Slots-with-slot&quot;&gt;Named Slots with &lt;code&gt;slot&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/components#Named-Slots-with-slot&quot;&gt;Ranuras con nombre con &lt;code&gt;slot&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0760a779de486365707dc9b03f7f30a90047835c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/components#Scoped-Slots-with-slot-scope&quot;&gt;Scoped Slots with &lt;code&gt;slot-scope&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/components#Scoped-Slots-with-slot-scope&quot;&gt;Ranuras con &lt;code&gt;slot-scope&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="93345cc9bbfa986b4f8e3caa45027ffeff574e6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/components#keep-alive&quot;&gt;Dynamic Components - keep-alive&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/components#keep-alive&quot;&gt;Componentes din&amp;aacute;micos: mantener vivo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="891a07243f19d9eb1039fefd2ed4e55925aaae96" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/components-props&quot;&gt;Props&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/components-props&quot;&gt;Props&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f426622eb0ceb376db671b70eda5c30ffa4b1dfa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/computed&quot;&gt;Computed Properties&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/computed&quot;&gt;Propiedades calculadas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="888ff7be58a8ef0ff5f641cb2eecb8fac96dd4c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/computed#watchers&quot;&gt;Watchers&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c00eff06292af42acdd216d6d6b5576f362b2c93" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/conditional&quot;&gt;Conditional Rendering - v-if&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Consulte tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/conditional&quot;&gt;Representaci&amp;oacute;n condicional - v-if&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="79b6135ba2dc486a48201143bb838e83653261b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/conditional#v-else&quot;&gt;Conditional Rendering - v-else&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/conditional#v-else&quot;&gt;Representaci&amp;oacute;n condicional - v-else&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b65174231e4b06ed19f9a34c83c5acc0fe31872d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/conditional#v-else-if&quot;&gt;Conditional Rendering - v-else-if&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Consulte tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/conditional#v-else-if&quot;&gt;Representaci&amp;oacute;n condicional - v-else-if&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f1bbd65d7f5ce8618de0d2cdd4bc471e94574b02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/conditional#v-if&quot;&gt;Conditional Rendering - v-if&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="299014eee91e616bfcca56a737112c80cfc3d772" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/conditional#v-show&quot;&gt;Conditional Rendering - v-show&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Consulte tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/conditional#v-show&quot;&gt;Representaci&amp;oacute;n condicional - v-show&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="726f3c96e9d38e8ad18ab2fba28c05495c7d79da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/custom-directive&quot;&gt;Custom Directives&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/custom-directive&quot;&gt;Directivas personalizadas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3e667e491ee0b98701fd24edf3c1800397c22ba0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/events&quot;&gt;Event Handling&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/events&quot;&gt;Manejo de eventos&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="09c6109d2241526adecc277a30dd85e60041ec13" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/filters&quot;&gt;Filters&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/filters&quot;&gt;Filtros&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="85730f6582b1d6edf8fee12b63343890fc741479" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/instance#Lifecycle-Diagram&quot;&gt;Lifecycle Diagram&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/instance#Lifecycle-Diagram&quot;&gt;Diagrama del ciclo de vida&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c9fa1503c6f14acb334446f6f8b6834d352ffcfb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/instance#lifecycle-diagram&quot;&gt;Lifecycle Diagram&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fee4e92c3ff05e7b974fac7e36e21e4f08139ffc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/mixins&quot;&gt;Mixins&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/mixins&quot;&gt;Mixins&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="79c24829ffda969dbdab6312fa3c8668bdcc8344" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/mixins#Custom-Option-Merge-Strategies&quot;&gt;Custom Option Merging Strategies&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Consulte tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/mixins#Custom-Option-Merge-Strategies&quot;&gt;Estrategias de combinaci&amp;oacute;n de opciones personalizadas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="65338c8d1b748556dda68a96bd16ca604103be3c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/mixins#Global-Mixin&quot;&gt;Global Mixin&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/mixins#Global-Mixin&quot;&gt;Global Mixin&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b17641e45f1b89aa7e5eef58379f400f517fb6e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/mixins#custom-option-merge-strategies&quot;&gt;Custom Option Merging Strategies&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d05504eb00add99f881bbc3b30cb67e13965fb4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/mixins#global-mixin&quot;&gt;Global Mixin&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aa0d9b7b29e84118ca532cd4cab105de8c618fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/plugins&quot;&gt;Plugins&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/plugins&quot;&gt;Complementos&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1a66fbcf3dd33b72ef6aa5cb84f68c991d9b2130" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/reactivity&quot;&gt;Reactivity in Depth&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/reactivity&quot;&gt;Reactividad en profundidad&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="77f0fdd0b4f8f14f94f58475a1cf9012ff65093f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/reactivity#Async-Update-Queue&quot;&gt;Async Update Queue&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Consulte tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/reactivity#Async-Update-Queue&quot;&gt;Cola de actualizaci&amp;oacute;n asincr&amp;oacute;nica&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c5c8b1a2063853ab1d1fda85eaa6d78b57690dcc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/render-function&quot;&gt;Render Functions&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/render-function&quot;&gt;Funciones de renderizado&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d3f132062e1b5c69afed4be050d4f44f8cc25213" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/render-function#Functional-Components&quot;&gt;Functional Components&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/render-function#Functional-Components&quot;&gt;Componentes funcionales&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a75eaed38f05fb030b2de4cec73f626d51233a09" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/ssr&quot;&gt;Server-Side Rendering&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Ver tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/ssr&quot;&gt;Representaci&amp;oacute;n del lado del servidor&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="56b0efd9ac9cd69c32d96726259f9d79c269598f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/syntax#Raw-HTML&quot;&gt;Data Binding Syntax - Interpolations&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Consulte tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/syntax#Raw-HTML&quot;&gt;Sintaxis de enlace de datos: interpolaciones&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8271161c56b34f4ed09e96a61dcacd2e4643a633" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/syntax#Text&quot;&gt;Data Binding Syntax - Interpolations&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Consulte tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/syntax#Text&quot;&gt;Sintaxis de enlace de datos: interpolaciones&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f93ba7e26818c34808fa589a759218137c564189" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/teleport#teleport&quot;&gt;Teleport component&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="214ca9492d6b6e5d334e53a84c0111755523f795" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/template-syntax#raw-html&quot;&gt;Data Binding Syntax - Interpolations&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb26a9678c99fd58ffcaafe5b42e22bd0ca2cd4e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/template-syntax#text&quot;&gt;Data Binding Syntax - Interpolations&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3370eb77a32ecd0977e07c533683874b0df2a08d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/transitions&quot;&gt;Transitions: Entering, Leaving, and Lists&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;Consulte tambi&amp;eacute;n: &lt;/strong&gt;&lt;a href=&quot;../guide/transitions&quot;&gt;Transiciones: entrar, salir y listas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d1468227e395964ff461c0abae67893b8af4932d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/transitions-enterleave#transitioning-single-elements-components&quot;&gt;Enter &amp;amp; Leave Transitions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba2b34bf4273e710c05ac882b1adacb310826bcb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;../guide/transitions-list&quot;&gt;List Transitions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c4c44982a2785114b78121a3c29dfffaa977d20" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;application-config&quot;&gt;Application Config&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5888996680ae74ae5ac780b0a7b497e43a78e916" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;composition-api&quot;&gt;Composition API&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f758bf30011b01787c11b7c2eede0ccf222c01a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;computed-watch-api#watcheffect&quot;&gt;Computed and Watch - watchEffect&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e436d8d17233b2992716228de3b26414908a6e08" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;global-api#nexttick&quot;&gt;nextTick&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62b07dc62630b5e9843456bf0817a6c1b9a51533" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also:&lt;/strong&gt;&lt;a href=&quot;options-data#data-2&quot;&gt;Options / Data - data&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7186d0046c17a6da25a9438f95b74f4eee397d1f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aac8d8c95aaaf809a1523aee1c04a62185318a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also&lt;/strong&gt;: &lt;a href=&quot;../guide/component-dynamic-async&quot;&gt;Dynamic and Async components&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf14f7d2e015cb5440d1337d37fbc238c250f46f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also&lt;/strong&gt;: &lt;a href=&quot;../guide/composition-api-lifecycle-hooks&quot;&gt;Composition API lifecycle hooks&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6af86c1a55cc828af9331aceac082ce0611643e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also&lt;/strong&gt;: &lt;a href=&quot;../guide/composition-api-setup&quot;&gt;Composition API &lt;code&gt;setup&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4db685d313c7e9b1d6b5e937b4500d8e261ded9f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also&lt;/strong&gt;: &lt;a href=&quot;../guide/reactivity-computed-watchers#watch&quot;&gt;&lt;code&gt;watch&lt;/code&gt; guide&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fecd21943a3f6e1dcc4302a91a57e6f25b15f5a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also&lt;/strong&gt;: &lt;a href=&quot;../guide/reactivity-computed-watchers#watcheffect&quot;&gt;&lt;code&gt;watchEffect&lt;/code&gt; guide&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccb6aeb0b4c3ca676641e8aa244589d65c575f5a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also&lt;/strong&gt;: &lt;a href=&quot;../guide/reactivity-fundamentals#creating-standalone-reactive-values-as-refs&quot;&gt;Creating Standalone Reactive Values as &lt;code&gt;refs&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8555b588f3096b1a8e9109372a7b632474f92f1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also&lt;/strong&gt;: &lt;a href=&quot;composition-api-template-refs#template-refs&quot;&gt;Using template refs in Composition API&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81f722fe2ae82daa5ab79e707aa78851cd842c33" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See also&lt;/strong&gt;: &lt;a href=&quot;instance-methods#nexttick&quot;&gt;&lt;code&gt;$nextTick&lt;/code&gt; instance method&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ad1ceff22433a10430b5d57f3dcc3643a132944" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Shorthand:&lt;/strong&gt;&lt;code&gt;#&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Shorthand:&lt;/strong&gt;&lt;code&gt;#&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fcc4514ab176e446d75e245a88b51dc322458804" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Shorthand:&lt;/strong&gt;&lt;code&gt;:&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Shorthand:&lt;/strong&gt;&lt;code&gt;:&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="56b80bf8a5cea64dfc81e0548d9ea7d0db1bbc57" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Shorthand:&lt;/strong&gt;&lt;code&gt;@&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Shorthand:&lt;/strong&gt;&lt;code&gt;@&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dac006e006ce159e27aac10b67926e8bcb99abb0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Show, don't tell.&lt;/strong&gt; For example, &quot;To use Vue on a page, you can add this to your HTML&quot; (then show the script tag), instead of &quot;To use Vue on a page, you can add a script element with a src attribute, the value of which should be a link to Vue's compiled source&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1485f213371049288a9043c4c6e7c71fc5301b3a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Side Effects&lt;/strong&gt; (triggers effects outside the component)</source>
          <target state="translated">&lt;strong&gt;Efectos secundarios&lt;/strong&gt; (desencadena efectos fuera del componente)</target>
        </trans-unit>
        <trans-unit id="4e3e066f93a98ff9b6f86f31949522e73647cfce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Slot props allow us to turn slots into reusable templates that can render different content based on input props.&lt;/strong&gt; This is most useful when you are designing a reusable component that encapsulates data logic while allowing the consuming parent component to customize part of its layout.</source>
          <target state="translated">&lt;strong&gt;Los accesorios de tragamonedas nos permiten convertirlos en plantillas reutilizables que pueden representar contenido diferente seg&amp;uacute;n los accesorios de entrada. &lt;/strong&gt;Esto es m&amp;aacute;s &amp;uacute;til cuando est&amp;aacute; dise&amp;ntilde;ando un componente reutilizable que encapsula la l&amp;oacute;gica de datos mientras permite que el componente principal consumidor personalice parte de su dise&amp;ntilde;o.</target>
        </trans-unit>
        <trans-unit id="bdc33d792626a2c65566ab6710547ccedbbbe21a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Soon, we&amp;rsquo;ll also provide tips for enforcement.&lt;/strong&gt; Sometimes you&amp;rsquo;ll simply have to be disciplined, but wherever possible, we&amp;rsquo;ll try to show you how to use ESLint and other automated processes to make enforcement simpler.</source>
          <target state="translated">&lt;strong&gt;Pronto, tambi&amp;eacute;n brindaremos sugerencias para la aplicaci&amp;oacute;n. &lt;/strong&gt;A veces, simplemente tendr&amp;aacute; que ser disciplinado, pero siempre que sea posible, intentaremos mostrarle c&amp;oacute;mo usar ESLint y otros procesos automatizados para simplificar la aplicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="ca10f2240b9fefaa3f2c840de97ed3471359402f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Specific is better than generic.&lt;/strong&gt; For example, a &lt;code&gt;&amp;lt;BlogPost&amp;gt;&lt;/code&gt; component example is better than &lt;code&gt;&amp;lt;ComponentA&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b910794ac82196c9b85ab9ebdc06ed76628d2164" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Start your own meetup.&lt;/strong&gt; If there&amp;rsquo;s not already a Vue meetup in your area, you can start your own! Use the &lt;a href=&quot;https://events.vuejs.org/resources/#getting-started&quot;&gt;resources at events.vuejs.org&lt;/a&gt; to help you succeed!</source>
          <target state="translated">&lt;strong&gt;Comienza tu propia reuni&amp;oacute;n. &lt;/strong&gt;Si a&amp;uacute;n no hay una reuni&amp;oacute;n de Vue en tu &amp;aacute;rea, &amp;iexcl;puedes comenzar la tuya propia! &amp;iexcl;Utilice los &lt;a href=&quot;https://events.vuejs.org/resources/#getting-started&quot;&gt;recursos en events.vuejs.org&lt;/a&gt; para ayudarlo a tener &amp;eacute;xito!</target>
        </trans-unit>
        <trans-unit id="bb435a412f3ed5e303b06b8ad27bd781711a45e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;String templates&lt;/strong&gt; lack syntax highlighting and require ugly slashes for multiline HTML</source>
          <target state="translated">&lt;strong&gt;Las plantillas de cadenas&lt;/strong&gt; carecen de resaltado de sintaxis y requieren barras diagonales desagradables para HTML multil&amp;iacute;nea</target>
        </trans-unit>
        <trans-unit id="ac05116856bcc1245d7bd4a12b6104b7ee768ded" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Style Guide&lt;/strong&gt;: There are necessarily some key pieces in development that need a decision, but are not core to the API. The style guide provides educated, opinionated recommendations to help guide these decisions. They shouldn't be followed blindly, but can help teams save time by being aligned on smaller details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49cd92a540f8d5ddaf089011afae080a463c00bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;TIP&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;TIP&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="91826a764ba2d12e12e249f5d494f2f3f332677a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Template Dependencies&lt;/strong&gt; (assets used in the template)</source>
          <target state="translated">&lt;strong&gt;Dependencias de la plantilla&lt;/strong&gt; (activos utilizados en la plantilla)</target>
        </trans-unit>
        <trans-unit id="3141a1332f639a1c10fa4a2070f0a439843bd1da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Template Modifiers&lt;/strong&gt; (changes the way templates are compiled)</source>
          <target state="translated">&lt;strong&gt;Modificadores de plantilla&lt;/strong&gt; (cambia la forma en que se compilan las plantillas)</target>
        </trans-unit>
        <trans-unit id="573a51e377250cefeea3ab4b96bd94f66bbf0a53" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Thank people for their contributions/reviews, even if you're feeling grumpy.&lt;/strong&gt; For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0939e92b5f16d2099531dcd1fbf26348fd421b73" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The attributes of elements (including components) should be ordered consistently.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Los atributos de los elementos (incluidos los componentes) deben ordenarse de forma coherente.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dd64d5073e26320bc07d94abe3f9f0518203703d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The prop is passed in as a raw value that needs to be transformed.&lt;/strong&gt; In this case, it&amp;rsquo;s best to define a computed property using the prop&amp;rsquo;s value:</source>
          <target state="translated">&lt;strong&gt;La propiedad se pasa como un valor sin procesar que debe transformarse. &lt;/strong&gt;En este caso, es mejor definir una propiedad calculada utilizando el valor de la propiedad:</target>
        </trans-unit>
        <trans-unit id="0d5779e6b5d2477ed084f967df66c416dcbb2cea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The prop is passed in as a raw value that needs to be transformed.&lt;/strong&gt; In this case, it's best to define a computed property using the prop's value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9643cfbe16ca3bde21b50b935dd40c1b37ab6e55" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The prop is used to pass in an initial value; the child component wants to use it as a local data property afterwards.&lt;/strong&gt; In this case, it&amp;rsquo;s best to define a local data property that uses the prop as its initial value:</source>
          <target state="translated">&lt;strong&gt;El prop se usa para pasar un valor inicial; el componente hijo quiere usarlo como una propiedad de datos local posteriormente. &lt;/strong&gt;En este caso, es mejor definir una propiedad de datos local que use la propiedad como su valor inicial:</target>
        </trans-unit>
        <trans-unit id="51f1e7d04fab49dcd27a02719211148333976e1f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The prop is used to pass in an initial value; the child component wants to use it as a local data property afterwards.&lt;/strong&gt; In this case, it's best to define a local data property that uses the prop as its initial value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99e1ec01beca519bc9f4c54aed26a445ef281630" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This hook is not called during server-side rendering, because only the initial render is performed server-side.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Este gancho no se llama durante la renderizaci&amp;oacute;n del lado del servidor, porque solo la renderizaci&amp;oacute;n inicial se realiza en el lado del servidor.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9a8edf6385c4f8f212675cdf4c2a50819f817c2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This hook is not called during server-side rendering.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Este gancho no se llama durante la renderizaci&amp;oacute;n del lado del servidor.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="41f76348ba946b3228eb0c7261268bf29f416bb8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Tip:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="05a1716d01f74f303c41f6d2d41bf5755234db73" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Tip&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="436bb4f65d5a4fd7f1b733cf2fa64d148fafc584" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip&lt;/strong&gt;: Provide information that is positive and encouraged</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f50a67acc9ca0b4b53b1116df69092834002a4db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Track the function that changes it&lt;/strong&gt;: We do this in a getter within the proxy, called &lt;code&gt;effect&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e97e6b777ec31bc90848d45b049f231d318a61b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Trigger the function so it can update the final value&lt;/strong&gt;: We do in a setter within the proxy, called &lt;code&gt;trigger&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8abc6d5b17b50518bcb7fb283301834427f83b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Try not to get defensive when receiving feedback.&lt;/strong&gt; Our writing can be very personal to us, but if we get upset with the people who help us make it better, they will either stop giving feedback or start limiting the kind of feedback they give.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45f44af0f670ee40017a236055d597409b6a11c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Two-Way Binding&lt;/strong&gt; (combining binding and events)</source>
          <target state="translated">&lt;strong&gt;Enlace bidireccional&lt;/strong&gt; (combinando enlace y eventos)</target>
        </trans-unit>
        <trans-unit id="a8a8df635482be8a0aea67e4d1525e3ab12b009a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eb6eddb13c4851dc75db4c58d4b6fc48a0fd9c0c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;(createElement: () =&amp;gt; VNode) =&amp;gt; VNode&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Tipo: &lt;/strong&gt; &lt;code&gt;(createElement: () =&amp;gt; VNode) =&amp;gt; VNode&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="06e2056d629e76d01dc484b708969fb6488db132" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;(createElement: () =&amp;gt; VNode, error: Error) =&amp;gt; VNode&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Tipo: &lt;/strong&gt; &lt;code&gt;(createElement: () =&amp;gt; VNode, error: Error) =&amp;gt; VNode&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2a71e24312e2e2ed4fef9450d3b490c2e51c3b75" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;(e: DebuggerEvent) =&amp;gt; void&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc0644857ab43992104b9feeaf856ed40a6714a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;(err: Error, instance: Component, info: string) =&amp;gt; ?boolean&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7ba23adb5deb58bb8d8ee7e480c41343f407472" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;(err: Error, vm: Component, info: string) =&amp;gt; ?boolean&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Tipo: &lt;/strong&gt; &lt;code&gt;(err: Error, vm: Component, info: string) =&amp;gt; ?boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c1ceb2b05685d61880cc6dec3fecd18ee44a7e19" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;(tag: string) =&amp;gt; boolean&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e96bf1fc9915cd5d4a83500c01f76378efd4eed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Array&amp;lt;Object&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Array&amp;lt;Object&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="766f4d42e9b328809882e74d68fac0b28c1d8d90" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Array&amp;lt;Vue instance&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Tipo: &lt;/strong&gt; &lt;code&gt;Array&amp;lt;Vue instance&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a9fd0f350dfc4f2b88bcc1b2f5afa40ed5398ad9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Array&amp;lt;string | RegExp&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Tipo: &lt;/strong&gt; &lt;code&gt;Array&amp;lt;string | RegExp&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="530b674de176a529c43efafe1c1313fd7f4c7ec4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Array&amp;lt;string&amp;gt; | Object&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Tipo: &lt;/strong&gt; &lt;code&gt;Array&amp;lt;string&amp;gt; | Object&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7a43731fd13aa1ce8a3339c0d4fe66144edb4f27" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Array&amp;lt;string&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Array&amp;lt;string&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="669c93990c5da99d7a9d701937b8e951216374bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Array&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Array&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="46275fd1de27bf95da1f6e457e17d76f81dc90ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Component instance&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaa1d27d27484cc82a97967c05d6ae022e74df2c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Element&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Element&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6ee088f5fb0d6e30bcbfd1c0cf8a099ff9dabb0d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Function&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Function&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="754f0715f78913a04abafdabd4b8623c9c90e06c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Node&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Node&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fdc9f31a552c4e02490c3105b5fc0e2552eaaa84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Object | Function&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Tipo: &lt;/strong&gt; &lt;code&gt;Object | Function&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d244e7771d684b09d7e98cc93d86bbbed2959838" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Object&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Object&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f23176beca32c295f2c9d064b56bb3e1df1cb3cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;String | Array | Object&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b079c24bb37efb351e49749b5dd5cfd76303c001" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;String | Object (component&amp;rsquo;s options object)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c85e287e7bb16d1c3c04c216038d3a55a7163cc5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;String | Object | Function&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17ea26f01ba01297f039978db643464c3a93fadf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;String&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;String&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b377ac434c5a72de26801e90f2c2d6a0ec38974f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;Vue instance&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Tipo: &lt;/strong&gt; &lt;code&gt;Vue instance&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="78a3bf6662f05256ce21c92f9eb3d702f9f3283c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;[key: string]: any&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b09a6c4d87e8e7f364b1edcdea4299603c13125" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;any&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;any&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="065aeffd64b55779e6665647b1f2bf408b580573" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="22165b2444527c8d4a49f5b99b500d85cc57d8c4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;string | Element&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Tipo: &lt;/strong&gt; &lt;code&gt;string | Element&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a876dbc9023a0657cc28e3d65b8aab30cbad7834" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;string&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="955c2cbabda73fa1f0576f28a4508dae88328e8b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;vnode&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;vnode&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b57c19bc5d7d4e4046cec4620ea8fc58a679f200" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;{ [key: string]: Function | Array&amp;lt;Function&amp;gt; }&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Tipo: &lt;/strong&gt; &lt;code&gt;{ [key: string]: Function | Array&amp;lt;Function&amp;gt; }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="678bfba1cc2873e848aab72d048589b024b7fcc0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;{ [key: string]: Function | { get: Function, set: Function } }&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Tipo: &lt;/strong&gt; &lt;code&gt;{ [key: string]: Function | { get: Function, set: Function } }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="502dc9a695bf9cf66f95c4fd14c993d9cad127f5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;{ [key: string]: Function }&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Tipo: &lt;/strong&gt; &lt;code&gt;{ [key: string]: Function }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ddaadcde7fc8ae1fc09af3bf7d3f1f78a2f543ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;{ [key: string]: any }&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Tipo: &lt;/strong&gt; &lt;code&gt;{ [key: string]: any }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e3d66fd1acf807ccd91071624dfe726201fc0896" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;{ [key: string]: number | Array&amp;lt;number&amp;gt; }&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Tipo: &lt;/strong&gt; &lt;code&gt;{ [key: string]: number | Array&amp;lt;number&amp;gt; }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b1f86d55ecadb2951a0fca71dc00db158d870f39" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;{ [key: string]: string | Function | Object | Array}&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Tipo: &lt;/strong&gt; &lt;code&gt;{ [key: string]: string | Function | Object | Array}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dbc77cb1bbc01a7ed6daf7c1a7fbb405f0da102d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;{ [key: string]: string }&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Tipo: &lt;/strong&gt; &lt;code&gt;{ [key: string]: string }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="018c96c039259e62bb9e1120da8dff7f912923da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;{ [name: string]: (...args: any[]) =&amp;gt; Array&amp;lt;VNode&amp;gt; | undefined }&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53824b89dd941837c3f91327c6f6998783bd55a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;{ [name: string]: ?Array&amp;lt;VNode&amp;gt; }&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Tipo: &lt;/strong&gt; &lt;code&gt;{ [name: string]: ?Array&amp;lt;VNode&amp;gt; }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="73d27a274925990865edafc7391d8681840c09c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;{ [name: string]: props =&amp;gt; Array&amp;lt;VNode&amp;gt; | undefined }&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Tipo: &lt;/strong&gt; &lt;code&gt;{ [name: string]: props =&amp;gt; Array&amp;lt;VNode&amp;gt; | undefined }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="311d2d806ea4b7c2933a502f5e2d57ae6ee5a7d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Type:&lt;/strong&gt;&lt;code&gt;{ prop?: string, event?: string }&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Escriba: &lt;/strong&gt; &lt;code&gt;{ prop?: string, event?: string }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7934e251dfc53111a614d94bb3acb3544d5d6ad9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Typing:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Typing:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5e62500fb57bbb3cda651f667f63db6bbaaef5e0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Typing&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Typing&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="6873fa2d08540c53a397bdfbfdd63ffc1e9cc091" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unique Attributes&lt;/strong&gt; (attributes that require unique values)</source>
          <target state="translated">&lt;strong&gt;Atributos &amp;uacute;nicos&lt;/strong&gt; (atributos que requieren valores &amp;uacute;nicos)</target>
        </trans-unit>
        <trans-unit id="b03d00ed969fe5d80f50f0a848515a42bd2152c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unless the context assumes a string template or build system, only write code that works in any environment by the software (e.g. Vue, Vuex, etc).&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00af2067e2199ba618b351b81e966815abee99a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Usage with Render Functions / JSX&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bed5d18d69be23d09df9ea313f3274bdd43e1aa5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Usage with Templates&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9188873b53a0860b8d45c86992acf0ce33ebbec3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Usage:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Usage:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d8dc7d3f34a5ae991931c1feb2220b682550f7b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Usage:&lt;/strong&gt; When using in-DOM templates, the template is subject to native HTML parsing rules. Some HTML elements, such as &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;ol&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; have restrictions on what elements can appear inside them, and some elements such as &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; can only appear inside certain other elements. As a workaround, we can use &lt;code&gt;v-is&lt;/code&gt; directive on these elements:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98dca272af4b4983e9681bcffd62a12fd4abd3d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Usage&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;Usage&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="33e8713a075109a2d6807a4b49fad827b51de8d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use Title Case for headings&lt;/strong&gt; - at least for now, since it's what we use through the rest of the docs. There's research suggesting that sentence case (only first word of the heading starts with a capital) is actually superior for legibility and also reduces the cognitive overhead for documentation writers, since they don't have to try to remember whether to capitalize words like &quot;and&quot;, &quot;with&quot;, and &quot;about&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bff251dc2a6835c61e102b564fd374d2a06477b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use a lot of positive and empathetic emojis.&lt;/strong&gt; It's always better to seem a little strange than mean or impatient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b952816ef10f5c30365b2f2a467fc60e140d033" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use module scoping to keep private functions inaccessible from the outside. If that&amp;rsquo;s not possible, always use the &lt;code&gt;$_&lt;/code&gt; prefix for custom private properties in a plugin, mixin, etc that should not be considered public API. Then to avoid conflicts with code by other authors, also include a named scope (e.g. &lt;code&gt;$_yourPluginName_&lt;/code&gt;).&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Utilice el alcance del m&amp;oacute;dulo para mantener las funciones privadas inaccesibles desde el exterior. Si eso no es posible, use siempre el prefijo &lt;code&gt;$_&lt;/code&gt; para propiedades privadas personalizadas en un complemento, mixin, etc.que no se debe considerar API p&amp;uacute;blica. Luego, para evitar conflictos con el c&amp;oacute;digo de otros autores, tambi&amp;eacute;n incluya un alcance con nombre (por ejemplo, &lt;code&gt;$_yourPluginName_&lt;/code&gt; ).&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="22d2dd89355d952a9c1b791218e78cb5ba2775fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use module scoping to keep private functions inaccessible from the outside. If that's not possible, always use the &lt;code&gt;$_&lt;/code&gt; prefix for custom private properties in a plugin, mixin, etc that should not be considered public API. Then to avoid conflicts with code by other authors, also include a named scope (e.g. &lt;code&gt;$_yourPluginName_&lt;/code&gt;).&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03ce2ec482f28b2915ddd297e57cffa48885962c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use the Oxford comma&lt;/strong&gt; (e.g. &quot;a, b, and c&quot; instead of &quot;a, b and c&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77e256ff0e7cc48e8286a61074d991ec51ac1cc8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Versions&lt;/strong&gt;: When important changes are made, it's useful to include a full list of changes, including a detailed explanation of why the change was made and how to migrate their projects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ecf232de64994dc60c6ec79622d7373f404fd30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Vuex 1.0&lt;/strong&gt; is mostly backwards-compatible, so requires very few changes to upgrade. It is recommended for those with large existing codebases or who want the smoothest possible upgrade path to Vue 2.0. This guide is dedicated to facilitating that process, but only includes migration notes. For the complete usage guide, see &lt;a href=&quot;https://github.com/vuejs/vuex/tree/1.0/docs/en&quot;&gt;the Vuex 1.0 docs&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Vuex 1.0&lt;/strong&gt; es en su mayor&amp;iacute;a compatible con versiones anteriores, por lo que requiere muy pocos cambios para actualizar. Se recomienda para aquellos con grandes bases de c&amp;oacute;digo existentes o que desean la ruta de actualizaci&amp;oacute;n m&amp;aacute;s fluida posible a Vue 2.0. Esta gu&amp;iacute;a est&amp;aacute; dedicada a facilitar ese proceso, pero solo incluye notas de migraci&amp;oacute;n. Para obtener la gu&amp;iacute;a de uso completa, consulte &lt;a href=&quot;https://github.com/vuejs/vuex/tree/1.0/docs/en&quot;&gt;los documentos de Vuex 1.0&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="af431ba48325bd4d7f58de11548316dfc8b6feff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Vuex 2.0&lt;/strong&gt; is a radical redesign and simplification of the API, for those who are starting new projects or want to be on the cutting edge of client-side state management. &lt;strong&gt;It is not covered by this migration guide&lt;/strong&gt;, so you should check out &lt;a href=&quot;https://vuex.vuejs.org/en/index.html&quot;&gt;the Vuex 2.0 docs&lt;/a&gt; if you&amp;rsquo;d like to learn more about it.</source>
          <target state="translated">&lt;strong&gt;Vuex 2.0&lt;/strong&gt; es un redise&amp;ntilde;o radical y una simplificaci&amp;oacute;n de la API, para aquellos que est&amp;aacute;n iniciando nuevos proyectos o quieren estar a la vanguardia de la gesti&amp;oacute;n del estado del lado del cliente. &lt;strong&gt;No est&amp;aacute; cubierto por esta gu&amp;iacute;a de migraci&amp;oacute;n&lt;/strong&gt; , por lo que debe consultar &lt;a href=&quot;https://vuex.vuejs.org/en/index.html&quot;&gt;los documentos de Vuex 2.0&lt;/a&gt; si desea obtener m&amp;aacute;s informaci&amp;oacute;n al respecto.</target>
        </trans-unit>
        <trans-unit id="a61fe7dcc9b944b7aa4bb3863418ae332c93ffba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WARNING&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;WARNING&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="251436bcf1a85c83d8711b39296fe259fc9d0256" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Warning:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="48ff52f9d936414cfc994de38da801535fe68344" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning&lt;/strong&gt;: Provide information that users should be aware of as there is a low to moderate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28333e7389a6ff2c59d850ec3efa3f250a4204be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Watch a repo you care about.&lt;/strong&gt; This will send you notifications whenever there&amp;rsquo;s activity in that repository, giving you insider knowledge about ongoing discussions and upcoming features. It&amp;rsquo;s a fantastic way to build expertise so that you&amp;rsquo;re eventually able to help address issues and pull requests.</source>
          <target state="translated">&lt;strong&gt;Vea un repositorio que le interese. &lt;/strong&gt;Esto le enviar&amp;aacute; notificaciones cada vez que haya actividad en ese repositorio, brind&amp;aacute;ndole informaci&amp;oacute;n privilegiada sobre las discusiones en curso y las pr&amp;oacute;ximas funciones. Es una manera fant&amp;aacute;stica de desarrollar experiencia para que eventualmente pueda ayudar a abordar problemas y solicitudes de extracci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="9e671aa86194a5f4a76aeb1bb2ad1359a234174c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;When deciding what to teach first, think of what knowledge will provide the best power/effort ratio.&lt;/strong&gt; That means teaching whatever will help users solve the greatest pains or greatest number of problems, with the relatively least effort to learn. This helps learners feel smart, powerful, and curious, so their cognitive capacity will drain more slowly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d58882a27b6bb22436bd260bd15b70eba686b6ca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;When referencing a directly following example, use a colon (&lt;code&gt;:&lt;/code&gt;) to end a sentence&lt;/strong&gt;, rather than a period (&lt;code&gt;.&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d76a875f7a231f48d10965c8ffa4a0e8a990d04" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;When referencing the name of a project, use the name that project refers to itself as.&lt;/strong&gt; For example, &quot;webpack&quot; and &quot;npm&quot; should both use lowercase as that's how their documentation refers to them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="476994ace82ced8f13dcf8d1c2149d4b3a48b92b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;When someone reports a problem, there is almost always a problem&lt;/strong&gt;, even if the solution they proposed isn't quite right. Keep asking follow-up questions to learn more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c127aed7333751ea514c3905bdeb8253ab63403" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;When you ask people for feedback, tell reviewers what:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79356a5d6d8847da3107ae2dc06877772642de05" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;When you assume knowledge, declare it&lt;/strong&gt; at the beginning and link to resources for less common knowledge that you're expecting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f323e74e0ef55994efdc0beb0b10eb86f864143" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Whenever a build system is available to concatenate files, each component should be in its own file.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Siempre que haya un sistema de compilaci&amp;oacute;n disponible para concatenar archivos, cada componente debe estar en su propio archivo.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0e561362ff22f5371c9446666cb171793bc15211" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;While writing, don't be afraid to ask questions&lt;/strong&gt;, &lt;em&gt;especially&lt;/em&gt; if you're afraid they might be &quot;dumb&quot;. Being vulnerable is hard, but it's the only way for us to more fully understand what we need to explain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79c44e1a0b49036c145384d37dbaa84a85317491" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;You may want to add one empty line between multi-line properties, particularly if the options can no longer fit on your screen without scrolling.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Es posible que desee agregar una l&amp;iacute;nea vac&amp;iacute;a entre las propiedades de varias l&amp;iacute;neas, especialmente si las opciones ya no caben en su pantalla sin desplazarse.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eb743e3e6347b4902683e67c995daef1c59ba902" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;balances you're trying to strike&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10d94e73764dabddc143ed99d1e813d574d7edd6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;beforeUnmount&lt;/strong&gt;: new! Similar to component lifecycle hooks, this will be called right before an element is unmounted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7965e26cf39b541529feacf1db0581ff9a42948" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;beforeUpdate&lt;/strong&gt;: new! This is called before the element itself is updated, much like the component lifecycle hooks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="117b5c5b88b4c8d0076f684d027a0552c2738636" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;bind&lt;/strong&gt; - Occurs once the directive is bound to the element. Occurs only once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6ff7578ab49070527635fc2b6f343ebeb6bdb2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;componentUpdated&lt;/strong&gt; - This hook is called once the component and the children have been updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27b3089428d511d5eec5e6be893ec5c237fa5a70" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;created&lt;/strong&gt; - new! This is called before the element's attributes or event listeners are applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0fb19815123396136cceb04c694d8ed5abf01db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;inject:&lt;/strong&gt;&lt;code&gt;Array&amp;lt;string&amp;gt; | { [key: string]: string | Symbol | Object }&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;inyectar: &lt;/strong&gt; &lt;code&gt;Array&amp;lt;string&amp;gt; | { [key: string]: string | Symbol | Object }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="15d21e9dc706e38efa79e9c88056719fc93a89ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;inserted&lt;/strong&gt; - Occurs once the element is inserted into the parent DOM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="754df4dec74707ddac5e992d1b61cea815c1e48c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;provide:&lt;/strong&gt;&lt;code&gt;Object | () =&amp;gt; Object&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;proporcionar: &lt;/strong&gt; &lt;code&gt;Object | () =&amp;gt; Object&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f5431f5f18ce51182b4af333e35a44c00009163c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;unbind&lt;/strong&gt; - This hook is called once the directive is removed. Also called only once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb86e08933735dc53c03d3c27d1f1845eeff866" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;update&lt;/strong&gt; - This hook is called when the element updates, but children haven't been updated yet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37a25b965c10598bd59ff04b122eabd828397cf3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;you're trying to do&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed276f05a67dc074a3717d7a7ec1d23095c0acf4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;your fears are&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29b2530952d2f089c5f2aaff76867bf36fe14e83" translate="yes" xml:space="preserve">
          <source>@vue/babel-plugin-jsx</source>
          <target state="translated">@vue/babel-plugin-jsx</target>
        </trans-unit>
        <trans-unit id="964f01bfa3ab17c436f9da744f1c4a9a117259a3" translate="yes" xml:space="preserve">
          <source>@vue/test-utils</source>
          <target state="translated">@vue/test-utils</target>
        </trans-unit>
        <trans-unit id="acd3b3dcfe2256cd45f36f65c8c137b3670f9506" translate="yes" xml:space="preserve">
          <source>A &quot;meta component&quot; for rendering dynamic components. The actual component to render is determined by the &lt;code&gt;is&lt;/code&gt; prop. An &lt;code&gt;is&lt;/code&gt; prop as a string could be either an HTML tag name or a Component name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec07f0d5bd46ec78ee4692994f8c00d2dddc42be" translate="yes" xml:space="preserve">
          <source>A &amp;ldquo;meta component&amp;rdquo; for rendering dynamic components. The actual component to render is determined by the &lt;code&gt;is&lt;/code&gt; prop:</source>
          <target state="translated">Un &quot;metacomponente&quot; para renderizar componentes din&amp;aacute;micos. El componente real a renderizar est&amp;aacute; determinado por la propiedad &lt;code&gt;is&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="95b06038d420458f43d7abd304d1cf394f7aa7d5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; outlet without &lt;code&gt;name&lt;/code&gt; implicitly has the name &quot;default&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb4cfe64ee7a0b6571622705815bef0e877c75e3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; outlet without &lt;code&gt;name&lt;/code&gt; implicitly has the name &amp;ldquo;default&amp;rdquo;.</source>
          <target state="translated">Una salida &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; sin &lt;code&gt;name&lt;/code&gt; tiene impl&amp;iacute;citamente el nombre &quot;predeterminado&quot;.</target>
        </trans-unit>
        <trans-unit id="de8d5e12d207f20e4705cad86e13eedd7cd648b8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;render&lt;/code&gt; function will normally only need to use &lt;code&gt;resolveComponent&lt;/code&gt; for components that are &lt;a href=&quot;component-registration#global-registration&quot;&gt;registered globally&lt;/a&gt;. &lt;a href=&quot;component-registration#local-registration&quot;&gt;Local component registration&lt;/a&gt; can usually be skipped altogether. Consider the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60cec72a9327071f74f65c9fce108a5fe2bf77de" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;v-else&lt;/code&gt; element must immediately follow a &lt;code&gt;v-if&lt;/code&gt; or a &lt;code&gt;v-else-if&lt;/code&gt; element - otherwise it will not be recognized.</source>
          <target state="translated">Un elemento &lt;code&gt;v-else&lt;/code&gt; debe seguir inmediatamente a un elemento &lt;code&gt;v-if&lt;/code&gt; o &lt;code&gt;v-else-if&lt;/code&gt; ; de lo contrario, no se reconocer&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="e5a6e85b32bc0c4e7f684459d1b0f1b4ef4d62bc" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;Reactive Reference&lt;/strong&gt; or getter function that we want to watch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b80291bb685197426817d88c8c02640945ae2816" translate="yes" xml:space="preserve">
          <source>A New Global API: &lt;code&gt;createApp&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3f6b8a5f35934d379801b09d48bdba13ca17e22" translate="yes" xml:space="preserve">
          <source>A Note for Plugin Authors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cf1defebb5e366d182860082df4f9c375ab0139" translate="yes" xml:space="preserve">
          <source>A Single Root Element</source>
          <target state="translated">Un Ãºnico elemento raÃ­z</target>
        </trans-unit>
        <trans-unit id="ceffe144b8c4378be65e840c1a0919b279cde4b4" translate="yes" xml:space="preserve">
          <source>A Vue application consists of a &lt;strong&gt;root Vue instance&lt;/strong&gt; created with &lt;code&gt;new Vue&lt;/code&gt;, optionally organized into a tree of nested, reusable components. For example, a todo app&amp;rsquo;s component tree might look like this:</source>
          <target state="translated">Una aplicaci&amp;oacute;n de Vue consiste en una &lt;strong&gt;instancia ra&amp;iacute;z de Vue&lt;/strong&gt; creada con el &lt;code&gt;new Vue&lt;/code&gt; , opcionalmente organizada en un &amp;aacute;rbol de componentes reutilizables anidados. Por ejemplo, el &amp;aacute;rbol de componentes de una aplicaci&amp;oacute;n de tareas pendientes podr&amp;iacute;a verse as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="a8e2d731fb12269ec4d70667badbaa7897deaedb" translate="yes" xml:space="preserve">
          <source>A Vue.js plugin should expose an &lt;code&gt;install&lt;/code&gt; method. The method will be called with the &lt;code&gt;Vue&lt;/code&gt; constructor as the first argument, along with possible options:</source>
          <target state="translated">Un complemento de Vue.js deber&amp;iacute;a exponer un m&amp;eacute;todo de &lt;code&gt;install&lt;/code&gt; . El m&amp;eacute;todo se llamar&amp;aacute; con el constructor de &lt;code&gt;Vue&lt;/code&gt; como primer argumento, junto con las posibles opciones:</target>
        </trans-unit>
        <trans-unit id="4bba7b53e0541cfcd4a009adf4f68e4b3c5ca8de" translate="yes" xml:space="preserve">
          <source>A benefit of functional components over partials is that they can be much more dynamic, because they grant you access to the full power of JavaScript. There is a cost to this power however. If you&amp;rsquo;ve never used a component framework with render functions before, they may take a bit longer to learn.</source>
          <target state="translated">Una ventaja de los componentes funcionales sobre los parciales es que pueden ser mucho m&amp;aacute;s din&amp;aacute;micos, ya que le otorgan acceso a todo el poder de JavaScript. Sin embargo, este poder tiene un costo. Si nunca antes ha usado un marco de componentes con funciones de renderizado, es posible que tarde un poco m&amp;aacute;s en aprender.</target>
        </trans-unit>
        <trans-unit id="88ba56e060abe168563d9090e6cd0c9c6ae2aca1" translate="yes" xml:space="preserve">
          <source>A blueprint of the real DOM element received as el argument above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b223bb391bd315dd020022da7b7acf238213ecad" translate="yes" xml:space="preserve">
          <source>A callback</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6558f6de76330a37b744f1034bda91dda7558061" translate="yes" xml:space="preserve">
          <source>A common need for data binding is manipulating an element&amp;rsquo;s class list and its inline styles. Since they are both attributes, we can use &lt;code&gt;v-bind&lt;/code&gt; to handle them: we only need to calculate a final string with our expressions. However, meddling with string concatenation is annoying and error-prone. For this reason, Vue provides special enhancements when &lt;code&gt;v-bind&lt;/code&gt; is used with &lt;code&gt;class&lt;/code&gt; and &lt;code&gt;style&lt;/code&gt;. In addition to strings, the expressions can also evaluate to objects or arrays.</source>
          <target state="translated">Una necesidad com&amp;uacute;n para el enlace de datos es manipular la lista de clases de un elemento y sus estilos en l&amp;iacute;nea. Dado que ambos son atributos, podemos usar &lt;code&gt;v-bind&lt;/code&gt; para manejarlos: solo necesitamos calcular una cadena final con nuestras expresiones. Sin embargo, entrometerse con la concatenaci&amp;oacute;n de cadenas es molesto y propenso a errores. Por esta raz&amp;oacute;n, Vue proporciona mejoras especiales cuando se usa &lt;code&gt;v-bind&lt;/code&gt; con &lt;code&gt;class&lt;/code&gt; y &lt;code&gt;style&lt;/code&gt; . Adem&amp;aacute;s de las cadenas, las expresiones tambi&amp;eacute;n pueden evaluar objetos o matrices.</target>
        </trans-unit>
        <trans-unit id="14474f925aa87d13d1d6433e420daee0baf00ea7" translate="yes" xml:space="preserve">
          <source>A common need for data binding is manipulating an element's class list and its inline styles. Since they are both attributes, we can use &lt;code&gt;v-bind&lt;/code&gt; to handle them: we only need to calculate a final string with our expressions. However, meddling with string concatenation is annoying and error-prone. For this reason, Vue provides special enhancements when &lt;code&gt;v-bind&lt;/code&gt; is used with &lt;code&gt;class&lt;/code&gt; and &lt;code&gt;style&lt;/code&gt;. In addition to strings, the expressions can also evaluate to objects or arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="250ba43fe1f662c19840b84c085fc42604adf782" translate="yes" xml:space="preserve">
          <source>A common scenario for this is creating a component that includes a full-screen modal. In most cases, you'd want the modal's logic to live within the component, but the positioning of the modal quickly becomes difficult to solve through CSS, or requires a change in component composition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c40671783e85b86e42e775b71a420407b2735a2" translate="yes" xml:space="preserve">
          <source>A common use case scenario would be a reusable &lt;code&gt;&amp;lt;Modal&amp;gt;&lt;/code&gt; component of which there might be multiple instances active at the same time. For this kind of scenario, multiple &lt;code&gt;&amp;lt;teleport&amp;gt;&lt;/code&gt; components can mount their content to the same target element. The order will be a simple append - later mounts will be located after earlier ones within the target element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ff403e972f59edff216cb5f5389503748f291bc" translate="yes" xml:space="preserve">
          <source>A component can have as many props as you like and, by default, any value can be passed to any prop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c653b78a9faeb826a2c067b679c675865ed438d" translate="yes" xml:space="preserve">
          <source>A component can have as many props as you&amp;rsquo;d like and by default, any value can be passed to any prop. In the template above, you&amp;rsquo;ll see that we can access this value on the component instance, just like with &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="translated">Un componente puede tener tantos accesorios como desee y, por defecto, cualquier valor puede pasarse a cualquier accesorio. En la plantilla anterior, ver&amp;aacute; que podemos acceder a este valor en la instancia del componente, al igual que con los &lt;code&gt;data&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f039cd265a0d2a11362a61dbb40b34908557d4b4" translate="yes" xml:space="preserve">
          <source>A component like the above will result in a &amp;ldquo;max stack size exceeded&amp;rdquo; error, so make sure recursive invocation is conditional (i.e. uses a &lt;code&gt;v-if&lt;/code&gt; that will eventually be &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">Un componente como el anterior dar&amp;aacute; como resultado un error de &quot;tama&amp;ntilde;o m&amp;aacute;ximo de pila excedido&quot;, as&amp;iacute; que aseg&amp;uacute;rese de que la invocaci&amp;oacute;n recursiva sea condicional (es decir, use un &lt;code&gt;v-if&lt;/code&gt; que eventualmente ser&amp;aacute; &lt;code&gt;false&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="286ffa059ed10c33bfc38867456469462b7c4984" translate="yes" xml:space="preserve">
          <source>A component non-prop attribute is an attribute or event listener that is passed to a component, but does not have a corresponding property defined in &lt;a href=&quot;component-props&quot;&gt;props&lt;/a&gt; or &lt;a href=&quot;component-custom-events#defining-custom-events&quot;&gt;emits&lt;/a&gt;. Common examples of this include &lt;code&gt;class&lt;/code&gt;, &lt;code&gt;style&lt;/code&gt;, and &lt;code&gt;id&lt;/code&gt; attributes. You can access those attributes via &lt;code&gt;$attrs&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bd5f922cc4ab5b64a8cff6b1741d761c7877c56" translate="yes" xml:space="preserve">
          <source>A component option that is executed &lt;strong&gt;before&lt;/strong&gt; the component is created, once the &lt;code&gt;props&lt;/code&gt; are resolved, and serves as the entry point for composition API's</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74fab4e9487bb198ff021ab0cd3d785b415a0d21" translate="yes" xml:space="preserve">
          <source>A component previously using &lt;code&gt;inline-template&lt;/code&gt; can also be refactored using the default slot - which makes the data scoping more explicit while preserving the convenience of writing child content inline:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a3c63a2fee227b333e870ab1589d51864813a7b" translate="yes" xml:space="preserve">
          <source>A component&amp;rsquo;s render output is primarily determined by the props it receives. If a component&amp;rsquo;s render output solely depends on its props it becomes straightforward to test, similar to asserting the return value of a pure function with different arguments. Take a simplified example:</source>
          <target state="translated">La salida de render de un componente est&amp;aacute; determinada principalmente por los accesorios que recibe. Si la salida de procesamiento de un componente depende &amp;uacute;nicamente de sus accesorios, se vuelve f&amp;aacute;cil de probar, similar a afirmar el valor de retorno de una funci&amp;oacute;n pura con diferentes argumentos. Tome un ejemplo simplificado:</target>
        </trans-unit>
        <trans-unit id="2517a8bcc96010f6299535122cafd1948e24591d" translate="yes" xml:space="preserve">
          <source>A default value (&lt;strong&gt;Optional&lt;/strong&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19ce618085a2805f62690806a48e9f6b482ad7ca" translate="yes" xml:space="preserve">
          <source>A directive definition object can provide several hook functions (all optional):</source>
          <target state="translated">Un objeto de definiciÃ³n de directiva puede proporcionar varias funciones de gancho (todas opcionales):</target>
        </trans-unit>
        <trans-unit id="3341adc1c3570e9195360570c1ac65b5cbea5dce" translate="yes" xml:space="preserve">
          <source>A few keys (&lt;code&gt;.esc&lt;/code&gt; and all arrow keys) have inconsistent &lt;code&gt;key&lt;/code&gt; values in IE9, so these built-in aliases should be preferred if you need to support IE9.</source>
          <target state="translated">Algunas teclas ( &lt;code&gt;.esc&lt;/code&gt; y todas las teclas de flecha) tienen valores de &lt;code&gt;key&lt;/code&gt; inconsistentes en IE9, por lo que estos alias incorporados deben ser preferidos si necesita admitir IE9.</target>
        </trans-unit>
        <trans-unit id="020dac6b0a6bb67273d2f0e7f399a420024b2c61" translate="yes" xml:space="preserve">
          <source>A hash of components to be made available to the Vue instance.</source>
          <target state="translated">Un conjunto de componentes que se pondrÃ¡n a disposiciÃ³n de la instancia Vue.</target>
        </trans-unit>
        <trans-unit id="7efdcedb90eeec41173c30e887f26a2c610f4337" translate="yes" xml:space="preserve">
          <source>A hash of components to be made available to the component instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e0ce39f0fc0e924cfb4dbc70b35f63a8ff93074" translate="yes" xml:space="preserve">
          <source>A hash of directives to be made available to the Vue instance.</source>
          <target state="translated">Un conjunto de directivas que se pondrÃ¡n a disposiciÃ³n de la instancia Vue.</target>
        </trans-unit>
        <trans-unit id="56106ba45d58d06d8b03bb0b4bb0d5c4c6bd0bdc" translate="yes" xml:space="preserve">
          <source>A hash of directives to be made available to the component instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1544e0531ea17c539b8d0c1a96b2a5643da01b5f" translate="yes" xml:space="preserve">
          <source>A hash of filters to be made available to the Vue instance.</source>
          <target state="translated">Un conjunto de filtros que se pondrÃ¡n a disposiciÃ³n de la instancia Vue.</target>
        </trans-unit>
        <trans-unit id="9d7d2455b3194eb1984ed52a4baf016a20e11ec4" translate="yes" xml:space="preserve">
          <source>A library that provides an API of its own, while at the same time injecting some combination of the above (e.g. &lt;a href=&quot;https://github.com/vuejs/vue-router&quot;&gt;vue-router (opens new window)&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c08757c4619f5028feb3ad53cc4e1f441670cfd" translate="yes" xml:space="preserve">
          <source>A library that provides an API of its own, while at the same time injecting some combination of the above. e.g. &lt;a href=&quot;https://github.com/vuejs/vue-router&quot;&gt;vue-router&lt;/a&gt;</source>
          <target state="translated">Una biblioteca que proporciona una API propia, mientras que al mismo tiempo inyecta alguna combinaci&amp;oacute;n de lo anterior. por ejemplo, &lt;a href=&quot;https://github.com/vuejs/vue-router&quot;&gt;vue-router&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b2fafde79bfb24a5de472ebbad55838683b74860" translate="yes" xml:space="preserve">
          <source>A list/hash of attributes that are exposed to accept data from the parent component. It has an Array-based simple syntax and an alternative Object-based syntax that allows advanced configurations such as type checking, custom validation and default values.</source>
          <target state="translated">Una lista/hash de atributos que se exponen para aceptar datos del componente principal.Tiene una sintaxis simple basada en Array y una sintaxis alternativa basada en objetos que permite configuraciones avanzadas como la comprobaciÃ³n de tipos,la validaciÃ³n personalizada y los valores por defecto.</target>
        </trans-unit>
        <trans-unit id="670170a81876ab2cbe5278e221091a720b1d7297" translate="yes" xml:space="preserve">
          <source>A list/hash of custom events that can be emitted from the component. It has an array-based simple syntax and an alternative Object-based syntax that allows to configure an event validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="925b235b56bc0e0ffc99be162dd5e622cceb4b2a" translate="yes" xml:space="preserve">
          <source>A majority of the change has already been shipped in 2.6. As a result, the migration can happen in one step:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e29e35dc8f51033a71ae5578fc90bdb8fdfe561" translate="yes" xml:space="preserve">
          <source>A more advanced example can be found on &lt;a href=&quot;https://github.com/vuejs/vuex&quot;&gt;Vuex&lt;/a&gt;&amp;lsquo;s 1.x merging strategy:</source>
          <target state="translated">Se puede encontrar un ejemplo m&amp;aacute;s avanzado en la estrategia de fusi&amp;oacute;n 1.x de &lt;a href=&quot;https://github.com/vuejs/vuex&quot;&gt;Vuex&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="344cf5185e577ae6e50408f94b60ca4c285fcdf6" translate="yes" xml:space="preserve">
          <source>A non-prop attribute is an attribute that is passed to a component, but does not have a corresponding prop defined.</source>
          <target state="translated">Un atributo de no-propaganda es un atributo que se pasa a un componente,pero que no tiene definido un propulsor correspondiente.</target>
        </trans-unit>
        <trans-unit id="9388b6578f9a900e36b56e95317e323e0e9a415d" translate="yes" xml:space="preserve">
          <source>A recent development in for catching browser-specific issues is using application monitoring and error reporting tools (e.g., Sentry, LogRocket, etc.) for browsers that are not as commonly used (e.g., &amp;lt; IE11, older Safari versions, etc.).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e34418b6cc004da813cc535405ca15978426d09" translate="yes" xml:space="preserve">
          <source>A side effect of this manifests when using &lt;code&gt;inheritAttrs: false&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7142cafd2b5b92749e03daa6b9cd840ed782418" translate="yes" xml:space="preserve">
          <source>A static type system can help prevent many potential runtime errors as applications grow, which is why Vue 3 is written in TypeScript. This means you don't need any additional tooling to use TypeScript with Vue - it has first-class citizen support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f2af8c21a03055f0f0290da3a238911987f1f9a" translate="yes" xml:space="preserve">
          <source>A static type system can help prevent many potential runtime errors, especially as applications grow. That&amp;rsquo;s why Vue ships with &lt;a href=&quot;https://github.com/vuejs/vue/tree/dev/types&quot;&gt;official type declarations&lt;/a&gt; for &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; - not only in Vue core, but also for &lt;a href=&quot;https://github.com/vuejs/vue-router/tree/dev/types&quot;&gt;vue-router&lt;/a&gt; and &lt;a href=&quot;https://github.com/vuejs/vuex/tree/dev/types&quot;&gt;vuex&lt;/a&gt; as well.</source>
          <target state="translated">Un sistema de tipo est&amp;aacute;tico puede ayudar a prevenir muchos errores potenciales en tiempo de ejecuci&amp;oacute;n, especialmente a medida que crecen las aplicaciones. Es por eso que Vue se env&amp;iacute;a con &lt;a href=&quot;https://github.com/vuejs/vue/tree/dev/types&quot;&gt;declaraciones de tipo oficiales&lt;/a&gt; para &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; , no solo en el n&amp;uacute;cleo de Vue, sino tambi&amp;eacute;n para &lt;a href=&quot;https://github.com/vuejs/vue-router/tree/dev/types&quot;&gt;vue-router&lt;/a&gt; y &lt;a href=&quot;https://github.com/vuejs/vuex/tree/dev/types&quot;&gt;vuex&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="34d823e791929dfce5b163269a1fdee1ccbfcb7f" translate="yes" xml:space="preserve">
          <source>A string template to be used as the markup for the Vue instance. The template will &lt;strong&gt;replace&lt;/strong&gt; the mounted element. Any existing markup inside the mounted element will be ignored, unless content distribution slots are present in the template.</source>
          <target state="translated">Una plantilla de cadena que se utilizar&amp;aacute; como marcado para la instancia de Vue. La plantilla &lt;strong&gt;reemplazar&amp;aacute;&lt;/strong&gt; el elemento montado. Se ignorar&amp;aacute; cualquier marca existente dentro del elemento montado, a menos que haya espacios de distribuci&amp;oacute;n de contenido en la plantilla.</target>
        </trans-unit>
        <trans-unit id="8a6db6ec64fc3112c3e1b02295665b9140eb85ee" translate="yes" xml:space="preserve">
          <source>A string template to be used as the markup for the component instance. The template will &lt;strong&gt;replace&lt;/strong&gt; the mounted element. Any existing markup inside the mounted element will be ignored, unless content distribution slots are present in the template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3872035c28a5c6af9b8d061c904b0d44d50fe857" translate="yes" xml:space="preserve">
          <source>A virtual node, usually created with &lt;code&gt;h()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f812e2ad5430bab04c5350732a8bd352d01701f" translate="yes" xml:space="preserve">
          <source>A watcher can also watch multiple sources at the same time using an array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c01374a4ba8b1bc7817bfab1c4213e4a2ad40348" translate="yes" xml:space="preserve">
          <source>A watcher data source can either be a getter function that returns a value, or directly a &lt;a href=&quot;refs-api#ref&quot;&gt;ref&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ebd8bb3d4d9dd66817f2b91de44f532313de641" translate="yes" xml:space="preserve">
          <source>A watcher data source can either be a getter function that returns a value, or directly a &lt;code&gt;ref&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a768eab0321d86b7b0feef85adb35d107dba4d" translate="yes" xml:space="preserve">
          <source>AMD Module Loaders</source>
          <target state="translated">Cargadores de mÃ³dulos AMD</target>
        </trans-unit>
        <trans-unit id="d93d10ff0fbef1b4aa0ddc24e10e907746d3c85a" translate="yes" xml:space="preserve">
          <source>API</source>
          <target state="translated">API</target>
        </trans-unit>
        <trans-unit id="31d8e92e9dabc93764317a3d96b3f0115fb1dac7" translate="yes" xml:space="preserve">
          <source>API Reference: &lt;code&gt;key&lt;/code&gt; Special Attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af7c97243822c575e6dea6f215ee12719926f9f4" translate="yes" xml:space="preserve">
          <source>API: Built-In Components</source>
          <target state="translated">API:Componentes incorporados</target>
        </trans-unit>
        <trans-unit id="182abf83df3d6d1db9a593bb0366628155ef06f9" translate="yes" xml:space="preserve">
          <source>API: Directives</source>
          <target state="translated">API:Directivas</target>
        </trans-unit>
        <trans-unit id="803e82e7257353bfeb0f26bf035da8f913dd28e7" translate="yes" xml:space="preserve">
          <source>API: Global API</source>
          <target state="translated">API:API global</target>
        </trans-unit>
        <trans-unit id="274ecf9e386f5a1451a1216ffa5d393822269042" translate="yes" xml:space="preserve">
          <source>API: Global Config</source>
          <target state="translated">API:ConfiguraciÃ³n global</target>
        </trans-unit>
        <trans-unit id="51db937a7296a0aac33ba9b598fdda2aee35e700" translate="yes" xml:space="preserve">
          <source>API: Instance Methods / Data</source>
          <target state="translated">API:MÃ©todos de instancia/Datos</target>
        </trans-unit>
        <trans-unit id="3dcaca5d8eaed0671c3d5f0a65db9a960f0f41aa" translate="yes" xml:space="preserve">
          <source>API: Instance Methods / Events</source>
          <target state="translated">API:MÃ©todos de instancia/Eventos</target>
        </trans-unit>
        <trans-unit id="e0b0eefb2d521ba85bf72d84963d31559317516e" translate="yes" xml:space="preserve">
          <source>API: Instance Methods / Lifecycle</source>
          <target state="translated">API:MÃ©todos de Instancia/Ciclo de vida</target>
        </trans-unit>
        <trans-unit id="1feafa4225f6f196d017fdf4edda3d91ec66967c" translate="yes" xml:space="preserve">
          <source>API: Instance Properties</source>
          <target state="translated">API:Propiedades de la Instancia</target>
        </trans-unit>
        <trans-unit id="10ba615ce7b320afd5b392412fe4470513df3e31" translate="yes" xml:space="preserve">
          <source>API: Options / Assets</source>
          <target state="translated">API:Opciones/Activos</target>
        </trans-unit>
        <trans-unit id="649abfafdd403c9e1429b0c3f0e57e63cf39627e" translate="yes" xml:space="preserve">
          <source>API: Options / Composition</source>
          <target state="translated">API:Opciones/ComposiciÃ³n</target>
        </trans-unit>
        <trans-unit id="4aa2b676ca368b068136c808001a9064ced8a5f8" translate="yes" xml:space="preserve">
          <source>API: Options / DOM</source>
          <target state="translated">API:Opciones/DOM</target>
        </trans-unit>
        <trans-unit id="f0c41a50a812e722584f0fcbc7f529524b842ad6" translate="yes" xml:space="preserve">
          <source>API: Options / Data</source>
          <target state="translated">API:Opciones/Datos</target>
        </trans-unit>
        <trans-unit id="7a3afcd7c9dc1632a731a8dacf6fc794e4891491" translate="yes" xml:space="preserve">
          <source>API: Options / Lifecycle Hooks</source>
          <target state="translated">API:Opciones/Ganchos del ciclo de vida</target>
        </trans-unit>
        <trans-unit id="0dea04425cb9fcfb5bdce3fb6bc961c653bdcee2" translate="yes" xml:space="preserve">
          <source>API: Options / Misc</source>
          <target state="translated">API:Opciones/Misc</target>
        </trans-unit>
        <trans-unit id="bce7491ededc9a8b224c78844b5b107d9900f405" translate="yes" xml:space="preserve">
          <source>API: Special Attributes</source>
          <target state="translated">API:Atributos especiales</target>
        </trans-unit>
        <trans-unit id="100fcbfc9c6ce2355e4498fe9a709fb73ec96f49" translate="yes" xml:space="preserve">
          <source>ARIA Role</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb3ce55370f39e11f03a5da5893267fd848150e6" translate="yes" xml:space="preserve">
          <source>Abbreviated Syntax for Lone Default Slots</source>
          <target state="translated">Sintaxis abreviada de las franjas horarias por defecto solas</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
