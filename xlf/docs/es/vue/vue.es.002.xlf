<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="vue">
    <body>
      <group id="vue">
        <trans-unit id="686299f7711a328af7f7ede481ecd878f135b9f6" translate="yes" xml:space="preserve">
          <source>Generally speaking, &lt;code&gt;v-if&lt;/code&gt; has higher toggle costs while &lt;code&gt;v-show&lt;/code&gt; has higher initial render costs. So prefer &lt;code&gt;v-show&lt;/code&gt; if you need to toggle something very often, and prefer &lt;code&gt;v-if&lt;/code&gt; if the condition is unlikely to change at runtime.</source>
          <target state="translated">En t&amp;eacute;rminos generales, &lt;code&gt;v-if&lt;/code&gt; tiene costos de alternancia m&amp;aacute;s altos, mientras que &lt;code&gt;v-show&lt;/code&gt; tiene costos de renderizaci&amp;oacute;n iniciales m&amp;aacute;s altos. Por lo tanto, prefiera &lt;code&gt;v-show&lt;/code&gt; si necesita alternar algo con mucha frecuencia, y prefiera &lt;code&gt;v-if&lt;/code&gt; si es poco probable que la condici&amp;oacute;n cambie en tiempo de ejecuci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="54c5f98c2534a5664e54bdf67174809b2a27c8a3" translate="yes" xml:space="preserve">
          <source>Get Support</source>
          <target state="translated">Obtener apoyo</target>
        </trans-unit>
        <trans-unit id="010b85ad56b34c34c7c2a3b2436c740e30428ed5" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="translated">Empezando</target>
        </trans-unit>
        <trans-unit id="4687f4eea959b8d3a7678579930ba86b60298a4b" translate="yes" xml:space="preserve">
          <source>Global API</source>
          <target state="translated">API global</target>
        </trans-unit>
        <trans-unit id="d99de9060d9d291cf15a1d729547287918e216dc" translate="yes" xml:space="preserve">
          <source>Global Config</source>
          <target state="translated">Configuración global</target>
        </trans-unit>
        <trans-unit id="a87e1f8386cdfab8951563f9287ce245995f5751" translate="yes" xml:space="preserve">
          <source>Global Mixin</source>
          <target state="translated">Global Mixin</target>
        </trans-unit>
        <trans-unit id="12acfdfcb7281091faacdbe76162537707d677a4" translate="yes" xml:space="preserve">
          <source>Global Registration</source>
          <target state="translated">Registro global</target>
        </trans-unit>
        <trans-unit id="d23476cf27dc98d9e3173cbdb68ad4566d7bbe61" translate="yes" xml:space="preserve">
          <source>Global registration often isn&amp;rsquo;t ideal. For example, if you&amp;rsquo;re using a build system like Webpack, globally registering all components means that even if you stop using a component, it could still be included in your final build. This unnecessarily increases the amount of JavaScript your users have to download.</source>
          <target state="translated">El registro global a menudo no es ideal. Por ejemplo, si est&amp;aacute; utilizando un sistema de compilaci&amp;oacute;n como Webpack, registrar globalmente todos los componentes significa que incluso si deja de usar un componente, a&amp;uacute;n podr&amp;iacute;a incluirse en su compilaci&amp;oacute;n final. Esto aumenta innecesariamente la cantidad de JavaScript que los usuarios deben descargar.</target>
        </trans-unit>
        <trans-unit id="e2b51a4acf3ac2ad46709058f4a65e88a724bd55" translate="yes" xml:space="preserve">
          <source>Global state management</source>
          <target state="translated">Gestión estatal global</target>
        </trans-unit>
        <trans-unit id="d2cdbb9287a2eee1e29278ad1a52afa18af50490" translate="yes" xml:space="preserve">
          <source>Globally registered components can be used in the template of any root Vue instance (&lt;code&gt;new Vue&lt;/code&gt;) created afterwards &amp;ndash; and even inside all subcomponents of that Vue instance&amp;rsquo;s component tree.</source>
          <target state="translated">Los componentes registrados globalmente se pueden usar en la plantilla de cualquier instancia ra&amp;iacute;z de Vue ( &lt;code&gt;new Vue&lt;/code&gt; ) creada posteriormente, e incluso dentro de todos los subcomponentes del &amp;aacute;rbol de componentes de esa instancia de Vue.</target>
        </trans-unit>
        <trans-unit id="9d53a8dc9787d0f1938039b6b2df16c89e2967b1" translate="yes" xml:space="preserve">
          <source>Go ahead and enter &lt;code&gt;app3.seen = false&lt;/code&gt; in the console. You should see the message disappear.</source>
          <target state="translated">&lt;code&gt;app3.seen = false&lt;/code&gt; e ingrese app3.seen = false en la consola. Deber&amp;iacute;a ver desaparecer el mensaje.</target>
        </trans-unit>
        <trans-unit id="61dedcf053ff33692baacbf7789c5d7195d9acbe" translate="yes" xml:space="preserve">
          <source>Good</source>
          <target state="translated">Good</target>
        </trans-unit>
        <trans-unit id="bf073fae640ded81eeb7a4cee70faff4a623c16c" translate="yes" xml:space="preserve">
          <source>Guide</source>
          <target state="translated">Guide</target>
        </trans-unit>
        <trans-unit id="613dffa8c694c4b79227626375484864e1cbb5bc" translate="yes" xml:space="preserve">
          <source>HTML &amp;amp; CSS</source>
          <target state="translated">HTML y CSS</target>
        </trans-unit>
        <trans-unit id="ecb5ae374f41987062d1edb5a439c141fbcfee47" translate="yes" xml:space="preserve">
          <source>HTML Interpolation &lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">Se &lt;sup&gt;elimin&amp;oacute; la&lt;/sup&gt; interpolaci&amp;oacute;n HTML&lt;sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="61152bedc285b45e3443132c85b9e9eab87b1c71" translate="yes" xml:space="preserve">
          <source>HTML attribute names are case-insensitive, so browsers will interpret any uppercase characters as lowercase. That means when you&amp;rsquo;re using in-DOM templates, camelCased prop names need to use their kebab-cased (hyphen-delimited) equivalents:</source>
          <target state="translated">Los nombres de los atributos HTML no distinguen entre may&amp;uacute;sculas y min&amp;uacute;sculas, por lo que los navegadores interpretar&amp;aacute;n cualquier car&amp;aacute;cter en may&amp;uacute;sculas como min&amp;uacute;sculas. Eso significa que cuando usa plantillas en DOM, los nombres de accesorios basados ​​en camello deben usar sus equivalentes en may&amp;uacute;sculas y min&amp;uacute;sculas (delimitados por guiones):</target>
        </trans-unit>
        <trans-unit id="206317f92c61c3721e7b0ef393e74b50f2adc608" translate="yes" xml:space="preserve">
          <source>HTML elements,</source>
          <target state="translated">Elementos HTML,</target>
        </trans-unit>
        <trans-unit id="b7d20a95e49462d14a4c08f7dda3686750b36c96" translate="yes" xml:space="preserve">
          <source>HTML interpolation has been &lt;a href=&quot;#HTML-Interpolation-removed&quot;&gt;removed in favor of &lt;code&gt;v-html&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">La interpolaci&amp;oacute;n HTML se ha &lt;a href=&quot;#HTML-Interpolation-removed&quot;&gt;eliminado a favor de &lt;code&gt;v-html&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0b1c56685d95ab775546bda4c6e1ef23eea39b81" translate="yes" xml:space="preserve">
          <source>HTML interpolations (&lt;code&gt;{{{ foo }}}&lt;/code&gt;) have been removed in favor of the &lt;a href=&quot;../api/index#v-html&quot;&gt;&lt;code&gt;v-html&lt;/code&gt; directive&lt;/a&gt;.</source>
          <target state="translated">Las interpolaciones HTML ( &lt;code&gt;{{{ foo }}}&lt;/code&gt; ) se han eliminado a favor de la &lt;a href=&quot;../api/index#v-html&quot;&gt;directiva &lt;/a&gt; &lt;code&gt;v-html&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ec5f7d68ba95b6c2f0128818861a5fb3a7ce41b3" translate="yes" xml:space="preserve">
          <source>HTML&amp;rsquo;s built-in input types won&amp;rsquo;t always meet your needs. Fortunately, Vue components allow you to build reusable inputs with completely customized behavior. These inputs even work with &lt;code&gt;v-model&lt;/code&gt;! To learn more, read about &lt;a href=&quot;components#Using-v-model-on-Components&quot;&gt;custom inputs&lt;/a&gt; in the Components guide.</source>
          <target state="translated">Los tipos de entrada integrados de HTML no siempre satisfacen sus necesidades. Afortunadamente, los componentes de Vue le permiten crear entradas reutilizables con un comportamiento completamente personalizado. &amp;iexcl;Estas entradas incluso funcionan con &lt;code&gt;v-model&lt;/code&gt; ! Para obtener m&amp;aacute;s informaci&amp;oacute;n, lea acerca de las &lt;a href=&quot;components#Using-v-model-on-Components&quot;&gt;entradas personalizadas&lt;/a&gt; en la gu&amp;iacute;a de Componentes.</target>
        </trans-unit>
        <trans-unit id="69b83e92529f5151314d046d862c4a9c77d93516" translate="yes" xml:space="preserve">
          <source>HTML-based templates make it much easier to progressively migrate existing applications to take advantage of Vue&amp;rsquo;s reactivity features.</source>
          <target state="translated">Las plantillas basadas en HTML facilitan la migraci&amp;oacute;n progresiva de aplicaciones existentes para aprovechar las funciones de reactividad de Vue.</target>
        </trans-unit>
        <trans-unit id="5e6fab8d8bdb45dbc0c724b264884e741a1423d5" translate="yes" xml:space="preserve">
          <source>Handling Edge Cases</source>
          <target state="translated">Manejo de los casos de borde</target>
        </trans-unit>
        <trans-unit id="0c27db799f42037e36231e8871e3549a290cef26" translate="yes" xml:space="preserve">
          <source>Handling Loading State</source>
          <target state="translated">Manejo Estado de carga</target>
        </trans-unit>
        <trans-unit id="f70e7e4e8994ebaac734eaf505f7cb87f5015b0f" translate="yes" xml:space="preserve">
          <source>Handling User Input</source>
          <target state="translated">Manejo de la entrada del usuario</target>
        </trans-unit>
        <trans-unit id="553c9fd444b729d939071ffd415fb951213f90a4" translate="yes" xml:space="preserve">
          <source>Hashbangs are no longer required for Google to crawl a URL, so they are no longer the default (or even an option) for the hash strategy.</source>
          <target state="translated">Los hashbangs ya no son necesarios para que Google rastree una URL,por lo que ya no son el valor predeterminado (ni siquiera una opción)de la estrategia de hash.</target>
        </trans-unit>
        <trans-unit id="a8d68b23680238f325efc34072a89db096cd1404" translate="yes" xml:space="preserve">
          <source>Having this validator extracted out, we&amp;rsquo;ve also more comfortably built it up into a more robust solution. The state quirks have been eliminated and it&amp;rsquo;s actually impossible for users to enter anything wrong, similar to what the browser&amp;rsquo;s native number input tries to do.</source>
          <target state="translated">Habiendo extra&amp;iacute;do este validador, tambi&amp;eacute;n lo hemos construido m&amp;aacute;s c&amp;oacute;modamente en una soluci&amp;oacute;n m&amp;aacute;s robusta. Se han eliminado las peculiaridades del estado y en realidad es imposible para los usuarios ingresar algo incorrecto, similar a lo que intenta hacer la entrada de n&amp;uacute;meros nativos del navegador.</target>
        </trans-unit>
        <trans-unit id="5d3e638fd34dc7467faa0ba823b8497588b5815b" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;attributeName&lt;/code&gt; will be dynamically evaluated as a JavaScript expression, and its evaluated value will be used as the final value for the argument. For example, if your Vue instance has a data property, &lt;code&gt;attributeName&lt;/code&gt;, whose value is &lt;code&gt;&quot;href&quot;&lt;/code&gt;, then this binding will be equivalent to &lt;code&gt;v-bind:href&lt;/code&gt;.</source>
          <target state="translated">Aqu&amp;iacute;, &lt;code&gt;attributeName&lt;/code&gt; se evaluar&amp;aacute; din&amp;aacute;micamente como una expresi&amp;oacute;n de JavaScript, y su valor evaluado se utilizar&amp;aacute; como valor final para el argumento. Por ejemplo, si su instancia de Vue tiene una propiedad de datos, &lt;code&gt;attributeName&lt;/code&gt; , cuyo valor es &lt;code&gt;&quot;href&quot;&lt;/code&gt; , entonces este enlace ser&amp;aacute; equivalente a &lt;code&gt;v-bind:href&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="89a97b67c98ddcf2e842f6272379190e542a3a62" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;filterA&lt;/code&gt; is defined as a function taking three arguments. The value of &lt;code&gt;message&lt;/code&gt; will be passed into the first argument. The plain string &lt;code&gt;'arg1'&lt;/code&gt; will be passed into the &lt;code&gt;filterA&lt;/code&gt; as its second argument, and the value of expression &lt;code&gt;arg2&lt;/code&gt; will be evaluated and passed in as the third argument.</source>
          <target state="translated">Aqu&amp;iacute; &lt;code&gt;filterA&lt;/code&gt; se define como una funci&amp;oacute;n que toma tres argumentos. El valor del &lt;code&gt;message&lt;/code&gt; pasar&amp;aacute; al primer argumento. La cadena simple &lt;code&gt;'arg1'&lt;/code&gt; se pasar&amp;aacute; al &lt;code&gt;filterA&lt;/code&gt; como su segundo argumento, y el valor de la expresi&amp;oacute;n &lt;code&gt;arg2&lt;/code&gt; se evaluar&amp;aacute; y pasar&amp;aacute; como tercer argumento.</target>
        </trans-unit>
        <trans-unit id="b533c1b3a997459bdeab6c6103d2b8341430c012" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;href&lt;/code&gt; is the argument, which tells the &lt;code&gt;v-bind&lt;/code&gt; directive to bind the element&amp;rsquo;s &lt;code&gt;href&lt;/code&gt; attribute to the value of the expression &lt;code&gt;url&lt;/code&gt;.</source>
          <target state="translated">Aqu&amp;iacute; &lt;code&gt;href&lt;/code&gt; es el argumento, que le dice a la directiva &lt;code&gt;v-bind&lt;/code&gt; que vincule el atributo &lt;code&gt;href&lt;/code&gt; del elemento al valor de la expresi&amp;oacute;n &lt;code&gt;url&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e8a2ad49522f0c5140bd579d6e3f6cc63de82a9e" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;slot=&quot;default&quot;&lt;/code&gt; can be omitted as it is implied:</source>
          <target state="translated">Aqu&amp;iacute; se puede omitir &lt;code&gt;slot=&quot;default&quot;&lt;/code&gt; , ya que est&amp;aacute; impl&amp;iacute;cito:</target>
        </trans-unit>
        <trans-unit id="a5a992eb5c40fb541d26012305484c0906879154" translate="yes" xml:space="preserve">
          <source>Here the argument is the event name to listen to. We will talk about event handling in more detail too.</source>
          <target state="translated">Aquí el argumento es el nombre del evento que hay que escuchar.Hablaremos sobre el manejo de eventos con más detalle también.</target>
        </trans-unit>
        <trans-unit id="f407b88178ffc4e03f9f78c8af7c050fb1a05bb8" translate="yes" xml:space="preserve">
          <source>Here we are encountering something new. The &lt;code&gt;v-bind&lt;/code&gt; attribute you are seeing is called a &lt;strong&gt;directive&lt;/strong&gt;. Directives are prefixed with &lt;code&gt;v-&lt;/code&gt; to indicate that they are special attributes provided by Vue, and as you may have guessed, they apply special reactive behavior to the rendered DOM. Here, it is basically saying &amp;ldquo;keep this element&amp;rsquo;s &lt;code&gt;title&lt;/code&gt; attribute up-to-date with the &lt;code&gt;message&lt;/code&gt; property on the Vue instance.&amp;rdquo;</source>
          <target state="translated">Aqu&amp;iacute; nos encontramos con algo nuevo. El atributo &lt;code&gt;v-bind&lt;/code&gt; que est&amp;aacute; viendo se llama &lt;strong&gt;directiva&lt;/strong&gt; . Las directivas tienen el prefijo &lt;code&gt;v-&lt;/code&gt; para indicar que son atributos especiales proporcionados por Vue, y como habr&amp;aacute;s adivinado, aplican un comportamiento reactivo especial al DOM renderizado. Aqu&amp;iacute;, b&amp;aacute;sicamente est&amp;aacute; diciendo &quot;mant&amp;eacute;n el atributo de &lt;code&gt;title&lt;/code&gt; este elemento actualizado con la propiedad del &lt;code&gt;message&lt;/code&gt; en la instancia de Vue&quot;.</target>
        </trans-unit>
        <trans-unit id="20439924cb310f6e6ebea9dce4e509745f1d1bb0" translate="yes" xml:space="preserve">
          <source>Here we have declared a computed property &lt;code&gt;reversedMessage&lt;/code&gt;. The function we provided will be used as the getter function for the property &lt;code&gt;vm.reversedMessage&lt;/code&gt;:</source>
          <target state="translated">Aqu&amp;iacute; hemos declarado una propiedad calculada &lt;code&gt;reversedMessage&lt;/code&gt; . La funci&amp;oacute;n que proporcionamos se utilizar&amp;aacute; como funci&amp;oacute;n getter para la propiedad &lt;code&gt;vm.reversedMessage&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="41a58605aec4adfd7f18a1d980084fe022c01384" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a complete example of a simple todo list:</source>
          <target state="translated">Aqu&amp;iacute; hay un ejemplo completo de una lista de tareas pendientes simple:</target>
        </trans-unit>
        <trans-unit id="e6deaab1ac1757bb576b7c7fb31ce01f23836233" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of a &lt;code&gt;smart-list&lt;/code&gt; component that delegates to more specific components, depending on the props passed to it:</source>
          <target state="translated">Aqu&amp;iacute; hay un ejemplo de un componente de &lt;code&gt;smart-list&lt;/code&gt; que delega a componentes m&amp;aacute;s espec&amp;iacute;ficos, dependiendo de los accesorios que se le pasen:</target>
        </trans-unit>
        <trans-unit id="8edc36b060f6cabd0970dde81f8964d59b6e1225" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of a Vue component:</source>
          <target state="translated">Aqu&amp;iacute; hay un ejemplo de un componente de Vue:</target>
        </trans-unit>
        <trans-unit id="b31be59658661ba4e66f41944f3554b7a0be5398" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of a file we&amp;rsquo;ll call &lt;code&gt;Hello.vue&lt;/code&gt;:</source>
          <target state="translated">Aqu&amp;iacute; hay un ejemplo de un archivo que llamaremos &lt;code&gt;Hello.vue&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b33ffef562696923d8035d66d6b00e446f9c5cd6" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example using a template component:</source>
          <target state="translated">Aqu&amp;iacute; hay un ejemplo usando un componente de plantilla:</target>
        </trans-unit>
        <trans-unit id="99ff339aed17c551cb54d5842ca9646f53c8ed64" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example with all of these modifiers used together:</source>
          <target state="translated">Aqu&amp;iacute; hay un ejemplo con todos estos modificadores usados ​​juntos:</target>
        </trans-unit>
        <trans-unit id="18a91a386128ffc554ca249fb0825499466cf9d3" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example, omitting prefixed CSS rules for the sake of brevity:</source>
          <target state="translated">Aqu&amp;iacute; hay un ejemplo, omitiendo las reglas CSS prefijadas por brevedad:</target>
        </trans-unit>
        <trans-unit id="79a379c34c53ce83d07e71356345ea69136a74d1" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example:</source>
          <target state="translated">Aqu&amp;iacute; hay un ejemplo:</target>
        </trans-unit>
        <trans-unit id="f7ffc75a586e32509010b20213e0f4e623c0e848" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s that in action:</source>
          <target state="translated">Aqu&amp;iacute; est&amp;aacute; eso en acci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="9a829483e3b314613758a5a663c73e6905d5701b" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;slot-scope&lt;/code&gt; declares the received props object as the &lt;code&gt;slotProps&lt;/code&gt; variable, and makes it available inside the &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; scope. You can name &lt;code&gt;slotProps&lt;/code&gt; anything you like similar to naming function arguments in JavaScript.</source>
          <target state="translated">Aqu&amp;iacute;, &lt;code&gt;slot-scope&lt;/code&gt; declara el objeto de props recibido como la variable &lt;code&gt;slotProps&lt;/code&gt; y lo pone a disposici&amp;oacute;n dentro del alcance &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; . Puedes nombrar &lt;code&gt;slotProps&lt;/code&gt; como quieras, similar a nombrar argumentos de funci&amp;oacute;n en JavaScript.</target>
        </trans-unit>
        <trans-unit id="f68e5bf516c14d7636dc7e787f07b009104eba6f" translate="yes" xml:space="preserve">
          <source>Here, the &lt;code&gt;v-if&lt;/code&gt; directive would remove/insert the &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element based on the truthiness of the value of the expression &lt;code&gt;seen&lt;/code&gt;.</source>
          <target state="translated">Aqu&amp;iacute;, la directiva &lt;code&gt;v-if&lt;/code&gt; eliminar&amp;iacute;a / insertar&amp;iacute;a el elemento &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; bas&amp;aacute;ndose en la veracidad del valor de la expresi&amp;oacute;n &lt;code&gt;seen&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8e26e3e40dfd6774d32a14ec704c7c19bb0bf799" translate="yes" xml:space="preserve">
          <source>Hook Functions</source>
          <target state="translated">Funciones del gancho</target>
        </trans-unit>
        <trans-unit id="d2bdd950b4b524b4faf0540c42b846e440d3ebd2" translate="yes" xml:space="preserve">
          <source>Hook functions with the same name are merged into an array so that all of them will be called. Mixin hooks will be called &lt;strong&gt;before&lt;/strong&gt; the component&amp;rsquo;s own hooks.</source>
          <target state="translated">Las funciones de enlace con el mismo nombre se fusionan en una matriz para que se invoquen todas. Los hooks de Mixin se llamar&amp;aacute;n &lt;strong&gt;antes que&lt;/strong&gt; los hooks propios del componente.</target>
        </trans-unit>
        <trans-unit id="656dedbf5301c31ed9bdf32f2a451638643101f3" translate="yes" xml:space="preserve">
          <source>How Changes Are Tracked</source>
          <target state="translated">Cómo se rastrean los cambios</target>
        </trans-unit>
        <trans-unit id="a056aea1f6dc2d57c44eacd2de4c8078611a80e1" translate="yes" xml:space="preserve">
          <source>How long will it take to migrate a Vue 1.x app to 2.0?</source>
          <target state="translated">¿Cuánto tiempo llevará migrar una aplicación Vue 1.x a 2.0?</target>
        </trans-unit>
        <trans-unit id="a173386c8ab0ffd650a7e5d8b6fb73ce6260ce4e" translate="yes" xml:space="preserve">
          <source>How many times you get distracted and start playing with a cool new feature. 😉 Not judging, it also happened to us while building 2.0!</source>
          <target state="translated">¿Cuántas veces te distraes y empiezas a jugar con una nueva y genial función? 😉 No te estoy juzgando,¡también nos pasó a nosotros mientras construíamos el 2.0!</target>
        </trans-unit>
        <trans-unit id="5b51fcd95b1bb4c1d0a2feadea82b32351c13de4" translate="yes" xml:space="preserve">
          <source>However, &lt;code&gt;inline-template&lt;/code&gt; makes the scope of your templates harder to reason about. As a best practice, prefer defining templates inside the component using the &lt;code&gt;template&lt;/code&gt; option or in a &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; element in a &lt;code&gt;.vue&lt;/code&gt; file.</source>
          <target state="translated">Sin embargo, &lt;code&gt;inline-template&lt;/code&gt; hace que sea m&amp;aacute;s dif&amp;iacute;cil razonar sobre el alcance de sus plantillas. Como pr&amp;aacute;ctica recomendada, prefiera definir plantillas dentro del componente utilizando la opci&amp;oacute;n de &lt;code&gt;template&lt;/code&gt; o en un elemento &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; en un archivo &lt;code&gt;.vue&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="42d602a14282520e03f05621c18e657389b28401" translate="yes" xml:space="preserve">
          <source>However, even this barely scratches the surface of what scoped slots are capable of. For real-life, powerful examples of scoped slot usage, we recommend browsing libraries such as &lt;a href=&quot;https://github.com/Akryum/vue-virtual-scroller&quot;&gt;Vue Virtual Scroller&lt;/a&gt;, &lt;a href=&quot;https://github.com/posva/vue-promised&quot;&gt;Vue Promised&lt;/a&gt;, and &lt;a href=&quot;https://github.com/LinusBorg/portal-vue&quot;&gt;Portal Vue&lt;/a&gt;.</source>
          <target state="translated">Sin embargo, incluso esto apenas raspa la superficie de lo que son capaces de hacer las ranuras con mira. Para ejemplos poderosos de la vida real de uso de ranuras con alcance, recomendamos explorar bibliotecas como &lt;a href=&quot;https://github.com/Akryum/vue-virtual-scroller&quot;&gt;Vue Virtual Scroller&lt;/a&gt; , &lt;a href=&quot;https://github.com/posva/vue-promised&quot;&gt;Vue Promised&lt;/a&gt; y &lt;a href=&quot;https://github.com/LinusBorg/portal-vue&quot;&gt;Portal Vue&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e377ccc91063a19e1128087c043b05ac14bc27fd" translate="yes" xml:space="preserve">
          <source>However, for applications that use &lt;strong&gt;only&lt;/strong&gt; global component definitions via &lt;code&gt;Vue.component&lt;/code&gt;, we recommend kebab-case instead. The reasons are:</source>
          <target state="translated">Sin embargo, para aplicaciones que usan &lt;strong&gt;solo&lt;/strong&gt; definiciones de componentes globales a trav&amp;eacute;s de &lt;code&gt;Vue.component&lt;/code&gt; , recomendamos kebab-case en su lugar. Las razones son:</target>
        </trans-unit>
        <trans-unit id="92e85fdd91d6f41600c13668283501481ec58917" translate="yes" xml:space="preserve">
          <source>However, if you&amp;rsquo;re requiring/importing components using a &lt;strong&gt;module system&lt;/strong&gt;, e.g. via Webpack or Browserify, you&amp;rsquo;ll get an error:</source>
          <target state="translated">Sin embargo, si necesita / importa componentes utilizando un &lt;strong&gt;sistema de m&amp;oacute;dulos&lt;/strong&gt; , por ejemplo, a trav&amp;eacute;s de Webpack o Browserify, obtendr&amp;aacute; un error:</target>
        </trans-unit>
        <trans-unit id="002e68a8e4165cd18ac4324c9c1241124753edbf" translate="yes" xml:space="preserve">
          <source>However, if you&amp;rsquo;ve ruled out the above and find yourself in this extremely rare situation of having to manually force an update, you can do so with &lt;a href=&quot;../api/index#vm-forceUpdate&quot;&gt;&lt;code&gt;$forceUpdate&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Sin embargo, si ha descartado lo anterior y se encuentra en esta situaci&amp;oacute;n extremadamente rara de tener que forzar manualmente una actualizaci&amp;oacute;n, puede hacerlo con &lt;a href=&quot;../api/index#vm-forceUpdate&quot;&gt; &lt;code&gt;$forceUpdate&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="317d1532f6f3ac08090592a8fdf8e37b997ac4a2" translate="yes" xml:space="preserve">
          <source>However, in some cases you may want to have both on the same element, for example having a CSS animation triggered by Vue, along with a CSS transition effect on hover. In these cases, you will have to explicitly declare the type you want Vue to care about in a &lt;code&gt;type&lt;/code&gt; attribute, with a value of either &lt;code&gt;animation&lt;/code&gt; or &lt;code&gt;transition&lt;/code&gt;.</source>
          <target state="translated">Sin embargo, en algunos casos, es posible que desee tener ambos en el mismo elemento, por ejemplo, tener una animaci&amp;oacute;n CSS activada por Vue, junto con un efecto de transici&amp;oacute;n CSS al pasar el mouse. En estos casos, tendr&amp;aacute; que declarar expl&amp;iacute;citamente el tipo que desea que le importe a Vue en un atributo de &lt;code&gt;type&lt;/code&gt; , con un valor de &lt;code&gt;animation&lt;/code&gt; o &lt;code&gt;transition&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="88b48c81e2c3197a6ab15508375bec7eb9392d39" translate="yes" xml:space="preserve">
          <source>However, just as with other directives, the shorthand is only available when an argument is provided. That means the following syntax is invalid:</source>
          <target state="translated">Sin embargo,al igual que con otras directivas,la taquigrafía sólo está disponible cuando se proporciona un argumento.Eso significa que la siguiente sintaxis es inválida:</target>
        </trans-unit>
        <trans-unit id="8e607f87fc1472f8d762256cb7690621e8b2099d" translate="yes" xml:space="preserve">
          <source>However, not everyone wants to use TypeScript. In many smaller-scale use cases, introducing a type system may result in more overhead than productivity gain. In those cases you&amp;rsquo;d be better off going with Vue instead, since using Angular without TypeScript can be challenging.</source>
          <target state="translated">Sin embargo, no todo el mundo quiere usar TypeScript. En muchos casos de uso de menor escala, la introducci&amp;oacute;n de un sistema de tipos puede resultar en m&amp;aacute;s gastos generales que ganancia de productividad. En esos casos, ser&amp;iacute;a mejor optar por Vue, ya que usar Angular sin TypeScript puede ser un desaf&amp;iacute;o.</target>
        </trans-unit>
        <trans-unit id="ec8343c1410b44b823f35ff99f46fde41c340d0f" translate="yes" xml:space="preserve">
          <source>However, there are downsides to dependency injection. It couples components in your application to the way they&amp;rsquo;re currently organized, making refactoring more difficult. Provided properties are also not reactive. This is by design, because using them to create a central data store scales just as poorly as &lt;a href=&quot;#Accessing-the-Root-Instance&quot;&gt;using &lt;code&gt;$root&lt;/code&gt;&lt;/a&gt; for the same purpose. If the properties you want to share are specific to your app, rather than generic, or if you ever want to update provided data inside ancestors, then that&amp;rsquo;s a good sign that you probably need a real state management solution like &lt;a href=&quot;https://github.com/vuejs/vuex&quot;&gt;Vuex&lt;/a&gt; instead.</source>
          <target state="translated">Sin embargo, la inyecci&amp;oacute;n de dependencia tiene sus desventajas. Acopla los componentes de su aplicaci&amp;oacute;n a la forma en que est&amp;aacute;n organizados actualmente, lo que dificulta la refactorizaci&amp;oacute;n. Las propiedades proporcionadas tampoco son reactivas. Esto es por dise&amp;ntilde;o, porque usarlos para crear un almac&amp;eacute;n de datos central escala tan mal como &lt;a href=&quot;#Accessing-the-Root-Instance&quot;&gt;usar &lt;code&gt;$root&lt;/code&gt; &lt;/a&gt; para el mismo prop&amp;oacute;sito. Si las propiedades que desea compartir son espec&amp;iacute;ficas de su aplicaci&amp;oacute;n, en lugar de gen&amp;eacute;ricas, o si alguna vez desea actualizar los datos proporcionados dentro de los antepasados, entonces es una buena se&amp;ntilde;al de que probablemente necesite una soluci&amp;oacute;n de administraci&amp;oacute;n de bienes &lt;a href=&quot;https://github.com/vuejs/vuex&quot;&gt;ra&amp;iacute;ces&lt;/a&gt; como Vuex .</target>
        </trans-unit>
        <trans-unit id="484afbd80ed598ca9c40608f3d779c450b8063ca" translate="yes" xml:space="preserve">
          <source>However, this can be a bit verbose if you have multiple conditional classes. That&amp;rsquo;s why it&amp;rsquo;s also possible to use the object syntax inside array syntax:</source>
          <target state="translated">Sin embargo, esto puede ser un poco detallado si tiene varias clases condicionales. Es por eso que tambi&amp;eacute;n es posible usar la sintaxis de objeto dentro de la sintaxis de matriz:</target>
        </trans-unit>
        <trans-unit id="226b6257bd14a41b418cc2a3219aded857a502c5" translate="yes" xml:space="preserve">
          <source>However, this won&amp;rsquo;t automatically pass any data to the component, because components have isolated scopes of their own. In order to pass the iterated data into the component, we should also use props:</source>
          <target state="translated">Sin embargo, esto no pasar&amp;aacute; autom&amp;aacute;ticamente ning&amp;uacute;n dato al componente, ya que los componentes tienen &amp;aacute;mbitos propios aislados. Para pasar los datos iterados al componente, tambi&amp;eacute;n deber&amp;iacute;amos usar accesorios:</target>
        </trans-unit>
        <trans-unit id="9beda99dc2b127dc999f5b7cc2a4cd360648f73d" translate="yes" xml:space="preserve">
          <source>However, when communicating between distant descendants/ancestors, &lt;code&gt;$emit&lt;/code&gt; won&amp;rsquo;t help you. Instead, the simplest possible upgrade would be to use a centralized event hub. This has the added benefit of allowing you to communicate between components no matter where they are in the component tree - even between siblings! Because Vue instances implement an event emitter interface, you can actually use an empty Vue instance for this purpose.</source>
          <target state="translated">Sin embargo, al comunicarse entre descendientes / antepasados ​​lejanos, &lt;code&gt;$emit&lt;/code&gt; no le ayudar&amp;aacute;. En cambio, la actualizaci&amp;oacute;n m&amp;aacute;s simple posible ser&amp;iacute;a utilizar un centro de eventos centralizado. Esto tiene el beneficio adicional de permitirle comunicarse entre componentes sin importar d&amp;oacute;nde se encuentren en el &amp;aacute;rbol de componentes, &amp;iexcl;incluso entre hermanos! Debido a que las instancias de Vue implementan una interfaz de emisor de eventos, en realidad puede usar una instancia de Vue vac&amp;iacute;a para este prop&amp;oacute;sito.</target>
        </trans-unit>
        <trans-unit id="1a1f757f908ed45ae57de4307c1068e94a1b0cef" translate="yes" xml:space="preserve">
          <source>However, you can still wrap default slot content in a &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; if you wish to be explicit:</source>
          <target state="translated">Sin embargo, a&amp;uacute;n puede envolver el contenido del espacio predeterminado en una &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; si desea ser expl&amp;iacute;cito:</target>
        </trans-unit>
        <trans-unit id="2a7fc3d6b914325c881febd71fbf6f3338aea8b7" translate="yes" xml:space="preserve">
          <source>I hope that right now, you&amp;rsquo;re reading this sentence in your preferred language. If not, would you like to help us get there?</source>
          <target state="translated">Espero que ahora mismo est&amp;eacute;s leyendo esta oraci&amp;oacute;n en tu idioma preferido. Si no es as&amp;iacute;, &amp;iquest;te gustar&amp;iacute;a ayudarnos a llegar all&amp;iacute;?</target>
        </trans-unit>
        <trans-unit id="b957c41023281a182ae498da3fc29d81076e5bc0" translate="yes" xml:space="preserve">
          <source>I&amp;rsquo;m glad you asked! The answer is no. About 90% of the API is the same and the core concepts haven&amp;rsquo;t changed. It&amp;rsquo;s long because we like to offer very detailed explanations and include a lot of examples. Rest assured, &lt;strong&gt;this is not something you have to read from top to bottom!&lt;/strong&gt;</source>
          <target state="translated">&amp;iexcl;Me alegra que lo hayas preguntado! La respuesta es no. Aproximadamente el 90% de la API es la misma y los conceptos b&amp;aacute;sicos no han cambiado. Es largo porque nos gusta ofrecer explicaciones muy detalladas e incluir muchos ejemplos. Tenga la seguridad de que &lt;strong&gt;esto no es algo que deba leer de arriba a abajo.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b3507f10505e91a18afb212ac7e9aa0befd70ebf" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&amp;lt;navigation-link&amp;gt;&lt;/code&gt;&amp;lsquo;s template did &lt;strong&gt;not&lt;/strong&gt; contain a &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; element, any content provided between its opening and closing tag would be discarded.</source>
          <target state="translated">Si la plantilla de &lt;code&gt;&amp;lt;navigation-link&amp;gt;&lt;/code&gt; &lt;strong&gt;no&lt;/strong&gt; contiene un elemento &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; , cualquier contenido proporcionado entre su etiqueta de apertura y cierre se descartar&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="4775d5880e56a64ce430a67fd93821ff5271a8f6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;elementOrSelector&lt;/code&gt; argument is not provided, the template will be rendered as an off-document element, and you will have to use native DOM API to insert it into the document yourself.</source>
          <target state="translated">Si no se proporciona el argumento &lt;code&gt;elementOrSelector&lt;/code&gt; , la plantilla se representar&amp;aacute; como un elemento fuera del documento y tendr&amp;aacute; que usar la API DOM nativa para insertarla en el documento usted mismo.</target>
        </trans-unit>
        <trans-unit id="6814c905755d5d0673271362491140f9bfec32ae" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;isButtonDisabled&lt;/code&gt; has the value of &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;undefined&lt;/code&gt;, or &lt;code&gt;false&lt;/code&gt;, the &lt;code&gt;disabled&lt;/code&gt; attribute will not even be included in the rendered &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">Si &lt;code&gt;isButtonDisabled&lt;/code&gt; tiene el valor &lt;code&gt;null&lt;/code&gt; , &lt;code&gt;undefined&lt;/code&gt; o &lt;code&gt;false&lt;/code&gt; , el atributo &lt;code&gt;disabled&lt;/code&gt; ni siquiera se incluir&amp;aacute; en el elemento &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; renderizado .</target>
        </trans-unit>
        <trans-unit id="deb91108b05984da997ff690270396ce3ba6ac45" translate="yes" xml:space="preserve">
          <source>If I upgrade to Vue 2, will I also have to upgrade Vuex and Vue Router?</source>
          <target state="translated">Si actualizo el Vue 2,¿también tendré que actualizar el Vuex y el Vue Router?</target>
        </trans-unit>
        <trans-unit id="af93e3aeb163599bea53f782e2751ff74ad451b7" translate="yes" xml:space="preserve">
          <source>If Vue didn&amp;rsquo;t have this rule, clicking on one button would affect the data of &lt;em&gt;all other instances&lt;/em&gt;, like below:</source>
          <target state="translated">Si Vue no tuviera esta regla, hacer clic en un bot&amp;oacute;n afectar&amp;iacute;a los datos de &lt;em&gt;todas las dem&amp;aacute;s instancias&lt;/em&gt; , como a continuaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="b7586f731f0b07604a55b0bff8fa3025687fb239" translate="yes" xml:space="preserve">
          <source>If a Vue instance didn&amp;rsquo;t receive the &lt;code&gt;el&lt;/code&gt; option at instantiation, it will be in &amp;ldquo;unmounted&amp;rdquo; state, without an associated DOM element. &lt;code&gt;vm.$mount()&lt;/code&gt; can be used to manually start the mounting of an unmounted Vue instance.</source>
          <target state="translated">Si una instancia de Vue no recibi&amp;oacute; el &lt;code&gt;el&lt;/code&gt; opci&amp;oacute;n en la creaci&amp;oacute;n de instancias, que estar&amp;aacute; en el estado &amp;ldquo;sin montar&amp;rdquo;, sin un elemento DOM asociada. &lt;code&gt;vm.$mount()&lt;/code&gt; se puede usar para iniciar manualmente el montaje de una instancia de Vue desmontada.</target>
        </trans-unit>
        <trans-unit id="6d5c5a2c7610113711661bfb46b69f9a5e5ddb79" translate="yes" xml:space="preserve">
          <source>If a component only makes sense in the context of a single parent component, that relationship should be evident in its name. Since editors typically organize files alphabetically, this also keeps these related files next to each other.</source>
          <target state="translated">Si un componente sólo tiene sentido en el contexto de un componente monoparental,esa relación debe ser evidente en su nombre.Como los editores suelen organizar los archivos por orden alfabético,esto también mantiene estos archivos relacionados uno junto al otro.</target>
        </trans-unit>
        <trans-unit id="b5928a9e5cf47cbe7b8911ef9b07fba741c7d9aa" translate="yes" xml:space="preserve">
          <source>If a runtime error occurs during a component&amp;rsquo;s render, it will be passed to the global &lt;code&gt;Vue.config.errorHandler&lt;/code&gt; config function if it has been set. It might be a good idea to leverage this hook together with an error-tracking service like &lt;a href=&quot;https://sentry.io&quot;&gt;Sentry&lt;/a&gt;, which provides &lt;a href=&quot;https://sentry.io/for/vue/&quot;&gt;an official integration&lt;/a&gt; for Vue.</source>
          <target state="translated">Si se produce un error de tiempo de ejecuci&amp;oacute;n durante el procesamiento de un componente, se pasar&amp;aacute; a la funci&amp;oacute;n de configuraci&amp;oacute;n global &lt;code&gt;Vue.config.errorHandler&lt;/code&gt; si se ha establecido. Podr&amp;iacute;a ser una buena idea aprovechar este enlace junto con un servicio de seguimiento de errores como &lt;a href=&quot;https://sentry.io&quot;&gt;Sentry&lt;/a&gt; , que proporciona &lt;a href=&quot;https://sentry.io/for/vue/&quot;&gt;una integraci&amp;oacute;n oficial&lt;/a&gt; para Vue.</target>
        </trans-unit>
        <trans-unit id="08aa6aa203690ff56afb57ae212ba05b4f6c10ba" translate="yes" xml:space="preserve">
          <source>If both event and callback are given, remove the listener for that specific callback only.</source>
          <target state="translated">Si se dan tanto el evento como la devolución de llamada,elimine al oyente sólo para esa devolución de llamada específica.</target>
        </trans-unit>
        <trans-unit id="94a6cbe6ca363d5ecbd722fc5378a6b8f28c5053" translate="yes" xml:space="preserve">
          <source>If instead, your intent is to conditionally skip execution of the loop, you can place the &lt;code&gt;v-if&lt;/code&gt; on a wrapper element (or &lt;a href=&quot;conditional#Conditional-Groups-with-v-if-on-lt-template-gt&quot;&gt;&lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt;&lt;/a&gt;). For example:</source>
          <target state="translated">Si, en cambio, su intenci&amp;oacute;n es omitir condicionalmente la ejecuci&amp;oacute;n del bucle, puede colocar el &lt;code&gt;v-if&lt;/code&gt; en un elemento contenedor (o &lt;a href=&quot;conditional#Conditional-Groups-with-v-if-on-lt-template-gt&quot;&gt; &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; &lt;/a&gt; ). Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="50d9bd5e8b2424d69b89a9acc464902a1ecc6350" translate="yes" xml:space="preserve">
          <source>If it needs to be injected from a property with a different name, use &lt;code&gt;from&lt;/code&gt; to denote the source property:</source>
          <target state="translated">Si necesita inyectarse desde una propiedad con un nombre diferente, use &lt;code&gt;from&lt;/code&gt; para denotar la propiedad fuente:</target>
        </trans-unit>
        <trans-unit id="f0caf8a9ac2bcc9fe7de24b53400b7eedb0a1ea6" translate="yes" xml:space="preserve">
          <source>If multiple &lt;code&gt;errorCaptured&lt;/code&gt; hooks exist on a component&amp;rsquo;s inheritance chain or parent chain, all of them will be invoked on the same error.</source>
          <target state="translated">Si existen varios &lt;code&gt;errorCaptured&lt;/code&gt; en la cadena de herencia o la cadena principal de un componente, todos se invocar&amp;aacute;n con el mismo error.</target>
        </trans-unit>
        <trans-unit id="8faa43e0b6fd3244a15d3b9a3afc829c3468152d" translate="yes" xml:space="preserve">
          <source>If neither &lt;code&gt;render&lt;/code&gt; function nor &lt;code&gt;template&lt;/code&gt; option is present, the in-DOM HTML of the mounting DOM element will be extracted as the template. In this case, Runtime + Compiler build of Vue should be used.</source>
          <target state="translated">Si no est&amp;aacute; presente la funci&amp;oacute;n de &lt;code&gt;render&lt;/code&gt; izado ni &lt;code&gt;template&lt;/code&gt; opci&amp;oacute;n de plantilla , el HTML en DOM del elemento DOM de montaje se extraer&amp;aacute; como plantilla. En este caso, se debe usar la compilaci&amp;oacute;n Runtime + Compiler de Vue.</target>
        </trans-unit>
        <trans-unit id="9b01e73de7162db0cb72a3eeafeeb2620b8021a4" translate="yes" xml:space="preserve">
          <source>If no CSS transitions/animations are detected and no JavaScript hooks are provided, the DOM operations for insertion and/or removal will be executed immediately on next frame (Note: this is a browser animation frame, different from Vue&amp;rsquo;s concept of &lt;code&gt;nextTick&lt;/code&gt;).</source>
          <target state="translated">Si no se detectan transiciones / animaciones CSS y no se proporcionan ganchos de JavaScript, las operaciones DOM para la inserci&amp;oacute;n y / o eliminaci&amp;oacute;n se ejecutar&amp;aacute;n inmediatamente en el siguiente fotograma (Nota: este es un fotograma de animaci&amp;oacute;n del navegador, diferente del concepto de &lt;code&gt;nextTick&lt;/code&gt; de Vue ).</target>
        </trans-unit>
        <trans-unit id="5bc33fe28ba69d339fb37eab66ba597ee9dc10b1" translate="yes" xml:space="preserve">
          <source>If no arguments are provided, remove all event listeners;</source>
          <target state="translated">Si no hay argumentos,retire a todos los oyentes del evento;</target>
        </trans-unit>
        <trans-unit id="91aba20875e905d73638256716c23f9b7b43a58d" translate="yes" xml:space="preserve">
          <source>If only the event is provided, remove all listeners for that event;</source>
          <target state="translated">Si sólo se proporciona el evento,retire a todos los oyentes de ese evento;</target>
        </trans-unit>
        <trans-unit id="575587717723913920c46177080895c689efec3d" translate="yes" xml:space="preserve">
          <source>If render function is present in the Vue option, the template will be ignored.</source>
          <target state="translated">Si la función de renderización está presente en la opción Vue,la plantilla será ignorada.</target>
        </trans-unit>
        <trans-unit id="85fd7702f7debf176df5e9e28d28b4d2f2479f88" translate="yes" xml:space="preserve">
          <source>If required, a deep clone of the original object can be obtained by passing &lt;code&gt;vm.$data&lt;/code&gt; through &lt;code&gt;JSON.parse(JSON.stringify(...))&lt;/code&gt;.</source>
          <target state="translated">Si es necesario, se puede obtener un clon profundo del objeto original pasando &lt;code&gt;vm.$data&lt;/code&gt; trav&amp;eacute;s de &lt;code&gt;JSON.parse(JSON.stringify(...))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="21380cb2235ba519b963494fea54adad9607a338" translate="yes" xml:space="preserve">
          <source>If so, please feel free to fork the repo for &lt;a href=&quot;https://github.com/vuejs/vuejs.org/&quot;&gt;these docs&lt;/a&gt; or for any other officially maintained documentation, then start translating. Once you&amp;rsquo;ve made some progress, open an issue or pull request in the main repo and we&amp;rsquo;ll put out a call for more contributors to help you out.</source>
          <target state="translated">Si es as&amp;iacute;, no dude en bifurcar el repositorio para &lt;a href=&quot;https://github.com/vuejs/vuejs.org/&quot;&gt;estos documentos&lt;/a&gt; o para cualquier otra documentaci&amp;oacute;n mantenida oficialmente, luego comience a traducir. Una vez que haya progresado, abra un problema o una solicitud de extracci&amp;oacute;n en el repositorio principal y realizaremos una llamada para que m&amp;aacute;s contribuyentes lo ayuden.</target>
        </trans-unit>
        <trans-unit id="b3b0a88772445b0201a5544af343a6bd0d139fcc" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;errorCaptured&lt;/code&gt; hook itself throws an error, both this error and the original captured error are sent to the global &lt;code&gt;config.errorHandler&lt;/code&gt;.</source>
          <target state="translated">Si el gancho &lt;code&gt;errorCaptured&lt;/code&gt; en s&amp;iacute; mismo arroja un error, tanto este error como el error capturado original se env&amp;iacute;an al &lt;code&gt;config.errorHandler&lt;/code&gt; global .</target>
        </trans-unit>
        <trans-unit id="7303cbac97656642d551545dc4e5cababd70308f" translate="yes" xml:space="preserve">
          <source>If the component is a functional component, the render function also receives an extra argument &lt;code&gt;context&lt;/code&gt;, which provides access to contextual data since functional components are instance-less.</source>
          <target state="translated">Si el componente es un componente funcional, la funci&amp;oacute;n de representaci&amp;oacute;n tambi&amp;eacute;n recibe un &lt;code&gt;context&lt;/code&gt; o de argumento adicional , que proporciona acceso a datos contextuales, ya que los componentes funcionales no tienen instancia.</target>
        </trans-unit>
        <trans-unit id="71e1040d1b4539c4a4df0fdf98d510e6cb4c6439" translate="yes" xml:space="preserve">
          <source>If the initial value of your &lt;code&gt;v-model&lt;/code&gt; expression does not match any of the options, the &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; element will render in an &amp;ldquo;unselected&amp;rdquo; state. On iOS this will cause the user not being able to select the first item because iOS does not fire a change event in this case. It is therefore recommended to provide a disabled option with an empty value, as demonstrated in the example above.</source>
          <target state="translated">Si el valor inicial de la expresi&amp;oacute;n de su &lt;code&gt;v-model&lt;/code&gt; no coincide con ninguna de las opciones, el elemento &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; se representar&amp;aacute; en un estado &quot;no seleccionado&quot;. En iOS, esto har&amp;aacute; que el usuario no pueda seleccionar el primer elemento porque iOS no activa un evento de cambio en este caso. Por lo tanto, se recomienda proporcionar una opci&amp;oacute;n desactivada con un valor vac&amp;iacute;o, como se demuestra en el ejemplo anterior.</target>
        </trans-unit>
        <trans-unit id="3be14640de0939678c1a24bad38088404e2ca8c9" translate="yes" xml:space="preserve">
          <source>If the string starts with &lt;code&gt;#&lt;/code&gt; it will be used as a querySelector and use the selected element&amp;rsquo;s innerHTML as the template string. This allows the use of the common &lt;code&gt;&amp;lt;script type=&quot;x-template&quot;&amp;gt;&lt;/code&gt; trick to include templates.</source>
          <target state="translated">Si la cadena comienza con &lt;code&gt;#&lt;/code&gt; , se usar&amp;aacute; como querySelector y usar&amp;aacute; el innerHTML del elemento seleccionado como cadena de plantilla. Esto permite el uso del truco com&amp;uacute;n &lt;code&gt;&amp;lt;script type=&quot;x-template&quot;&amp;gt;&lt;/code&gt; para incluir plantillas.</target>
        </trans-unit>
        <trans-unit id="95e2a9dfaa380a0de81081767f202693968ef8fc" translate="yes" xml:space="preserve">
          <source>If the transition component provided &lt;a href=&quot;#JavaScript-Hooks&quot;&gt;JavaScript hooks&lt;/a&gt;, these hooks will be called at appropriate timings.</source>
          <target state="translated">Si el componente de transici&amp;oacute;n proporciona &lt;a href=&quot;#JavaScript-Hooks&quot;&gt;enlaces JavaScript&lt;/a&gt; , estos enlaces se llamar&amp;aacute;n en los tiempos adecuados.</target>
        </trans-unit>
        <trans-unit id="0bebbf9e60227c2180beccfec6669351ce887915" translate="yes" xml:space="preserve">
          <source>If there&amp;rsquo;s a 3rd-party router you prefer to use, such as &lt;a href=&quot;https://github.com/visionmedia/page.js&quot;&gt;Page.js&lt;/a&gt; or &lt;a href=&quot;https://github.com/flatiron/director&quot;&gt;Director&lt;/a&gt;, integration is &lt;a href=&quot;https://github.com/chrisvfritz/vue-2.0-simple-routing-example/compare/master...pagejs&quot;&gt;similarly easy&lt;/a&gt;. Here&amp;rsquo;s a &lt;a href=&quot;https://github.com/chrisvfritz/vue-2.0-simple-routing-example/tree/pagejs&quot;&gt;complete example&lt;/a&gt; using Page.js.</source>
          <target state="translated">Si prefiere usar un enrutador de terceros, como &lt;a href=&quot;https://github.com/visionmedia/page.js&quot;&gt;Page.js&lt;/a&gt; o &lt;a href=&quot;https://github.com/flatiron/director&quot;&gt;Director&lt;/a&gt; , la integraci&amp;oacute;n es &lt;a href=&quot;https://github.com/chrisvfritz/vue-2.0-simple-routing-example/compare/master...pagejs&quot;&gt;igualmente f&amp;aacute;cil&lt;/a&gt; . Aqu&amp;iacute; hay un &lt;a href=&quot;https://github.com/chrisvfritz/vue-2.0-simple-routing-example/tree/pagejs&quot;&gt;ejemplo completo&lt;/a&gt; usando Page.js.</target>
        </trans-unit>
        <trans-unit id="403bdf723c083d8b2ccede629d30e16d178e61fd" translate="yes" xml:space="preserve">
          <source>If this option is available at instantiation, the instance will immediately enter compilation; otherwise, the user will have to explicitly call &lt;code&gt;vm.$mount()&lt;/code&gt; to manually start the compilation.</source>
          <target state="translated">Si esta opci&amp;oacute;n est&amp;aacute; disponible en la instanciaci&amp;oacute;n, la instancia ingresar&amp;aacute; inmediatamente a la compilaci&amp;oacute;n; de lo contrario, el usuario tendr&amp;aacute; que llamar expl&amp;iacute;citamente a &lt;code&gt;vm.$mount()&lt;/code&gt; para iniciar manualmente la compilaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="916a06724e966c52ae5b3afbcb15fb0a47533851" translate="yes" xml:space="preserve">
          <source>If you also want to apply a transition on the initial render of a node, you can add the &lt;code&gt;appear&lt;/code&gt; attribute:</source>
          <target state="translated">Si tambi&amp;eacute;n desea aplicar una transici&amp;oacute;n en el renderizado inicial de un nodo, puede agregar el atributo de &lt;code&gt;appear&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7ec74309d0b36ccc7bac1396b5fe53120fd641ab" translate="yes" xml:space="preserve">
          <source>If you are a fan of CSS-in-JS, many of the popular CSS-in-JS libraries support Vue (e.g. &lt;a href=&quot;https://github.com/styled-components/vue-styled-components&quot;&gt;styled-components-vue&lt;/a&gt; and &lt;a href=&quot;https://github.com/egoist/vue-emotion&quot;&gt;vue-emotion&lt;/a&gt;). The main difference between React and Vue here is that the default method of styling in Vue is through more familiar &lt;code&gt;style&lt;/code&gt; tags in &lt;a href=&quot;single-file-components&quot;&gt;single-file components&lt;/a&gt;.</source>
          <target state="translated">Si eres fan&amp;aacute;tico de CSS-in-JS, muchas de las bibliotecas populares de CSS-in-JS admiten Vue (por ejemplo, &lt;a href=&quot;https://github.com/styled-components/vue-styled-components&quot;&gt;styled-components-vue&lt;/a&gt; y &lt;a href=&quot;https://github.com/egoist/vue-emotion&quot;&gt;vue-emotion&lt;/a&gt; ). La principal diferencia entre React y Vue aqu&amp;iacute; es que el m&amp;eacute;todo predeterminado de estilo en Vue es a trav&amp;eacute;s de etiquetas de &lt;code&gt;style&lt;/code&gt; m&amp;aacute;s familiares en &lt;a href=&quot;single-file-components&quot;&gt;componentes de un solo archivo&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8905225615c521ffb76784bc94d7b858597c4fa8" translate="yes" xml:space="preserve">
          <source>If you are an experienced frontend developer and want to know how Vue compares to other libraries/frameworks, check out the &lt;a href=&quot;guide/comparison&quot;&gt;Comparison with Other Frameworks&lt;/a&gt;.</source>
          <target state="translated">Si es un desarrollador de frontend experimentado y desea saber c&amp;oacute;mo se compara Vue con otras bibliotecas / marcos, consulte la &lt;a href=&quot;guide/comparison&quot;&gt;Comparaci&amp;oacute;n con otros marcos&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fbcbc82a190068637d910f1c319db9b6e1926788" translate="yes" xml:space="preserve">
          <source>If you are developing a large project, working with other developers, or sometimes include 3rd-party HTML/CSS (e.g. from Auth0), consistent scoping will ensure that your styles only apply to the components they are meant for.</source>
          <target state="translated">Si estás desarrollando un proyecto grande,trabajando con otros desarrolladores,o a veces incluyes HTML/CSS de terceros (por ejemplo,de Auth0),un alcance consistente asegurará que tus estilos sólo se apliquen a los componentes para los que están pensados.</target>
        </trans-unit>
        <trans-unit id="d40ab587db89fe2bdc56b68cb15d14ec1f64b7eb" translate="yes" xml:space="preserve">
          <source>If you are familiar with Virtual DOM concepts and prefer the raw power of JavaScript, you can also &lt;a href=&quot;render-function&quot;&gt;directly write render functions&lt;/a&gt; instead of templates, with optional JSX support.</source>
          <target state="translated">Si est&amp;aacute; familiarizado con los conceptos de Virtual DOM y prefiere la potencia bruta de JavaScript, tambi&amp;eacute;n puede &lt;a href=&quot;render-function&quot;&gt;escribir directamente funciones de renderizado en&lt;/a&gt; lugar de plantillas, con soporte JSX opcional.</target>
        </trans-unit>
        <trans-unit id="96c8aaaa2941143cf085fd81f80dc6fc001828e4" translate="yes" xml:space="preserve">
          <source>If you are using Webpack, and prefer separating JavaScript and template files, you can use &lt;a href=&quot;https://github.com/ktsn/vue-template-loader&quot;&gt;vue-template-loader&lt;/a&gt;, which also transforms the template files into JavaScript render functions during the build step.</source>
          <target state="translated">Si est&amp;aacute; utilizando Webpack y prefiere separar los archivos de plantilla y JavaScript, puede utilizar &lt;a href=&quot;https://github.com/ktsn/vue-template-loader&quot;&gt;vue-template-loader&lt;/a&gt; , que tambi&amp;eacute;n transforma los archivos de plantilla en funciones de representaci&amp;oacute;n de JavaScript durante el paso de compilaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="89858e35b068365a82039534b03f306fb0a1b8c0" translate="yes" xml:space="preserve">
          <source>If you are using native ES Modules, there is also an ES Modules compatible build:</source>
          <target state="translated">Si estás usando módulos ES nativos,también hay una construcción compatible con los módulos ES:</target>
        </trans-unit>
        <trans-unit id="f554b9ea3847cd26d76c47af993f74bd496cd6f0" translate="yes" xml:space="preserve">
          <source>If you are using template-based functional components, you will also have to manually add attributes and listeners. Since we have access to the individual context contents, we can use &lt;code&gt;data.attrs&lt;/code&gt; to pass along any HTML attributes and &lt;code&gt;listeners&lt;/code&gt;&lt;em&gt;(the alias for &lt;code&gt;data.on&lt;/code&gt;)&lt;/em&gt; to pass along any event listeners.</source>
          <target state="translated">Si est&amp;aacute; utilizando componentes funcionales basados ​​en plantillas, tambi&amp;eacute;n tendr&amp;aacute; que agregar atributos y oyentes manualmente. Dado que tenemos acceso a los contenidos de contexto individuales, podemos usar &lt;code&gt;data.attrs&lt;/code&gt; para transmitir cualquier atributo HTML y &lt;code&gt;listeners&lt;/code&gt; &lt;em&gt;(el alias de &lt;code&gt;data.on&lt;/code&gt; )&lt;/em&gt; para transmitir cualquier escucha de eventos.</target>
        </trans-unit>
        <trans-unit id="8f0f868039c608a8992e0ecad40e6cc8c9afaa6c" translate="yes" xml:space="preserve">
          <source>If you are using the full build, i.e. directly including Vue via a script tag without a build tool, make sure to use the minified version (&lt;code&gt;vue.min.js&lt;/code&gt;) for production. Both versions can be found in the &lt;a href=&quot;installation#Direct-lt-script-gt-Include&quot;&gt;Installation guide&lt;/a&gt;.</source>
          <target state="translated">Si est&amp;aacute; utilizando la compilaci&amp;oacute;n completa, es decir, incluye directamente Vue a trav&amp;eacute;s de una etiqueta de script sin una herramienta de compilaci&amp;oacute;n, aseg&amp;uacute;rese de usar la versi&amp;oacute;n &lt;code&gt;vue.min.js&lt;/code&gt; ( vue.min.js ) para la producci&amp;oacute;n. Ambas versiones se pueden encontrar en la &lt;a href=&quot;installation#Direct-lt-script-gt-Include&quot;&gt;gu&amp;iacute;a de instalaci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0b251e43cfeb3150b9ce15a72f34811cb195e1d1" translate="yes" xml:space="preserve">
          <source>If you do &lt;strong&gt;not&lt;/strong&gt; want the root element of a component to inherit attributes, you can set &lt;code&gt;inheritAttrs: false&lt;/code&gt; in the component&amp;rsquo;s options. For example:</source>
          <target state="translated">Si &lt;strong&gt;no&lt;/strong&gt; desea que el elemento ra&amp;iacute;z de un componente herede atributos, puede establecer &lt;code&gt;inheritAttrs: false&lt;/code&gt; en las opciones del componente. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="83b896d00583e6604507095ce6adcb8923125b4d" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t declare &lt;code&gt;message&lt;/code&gt; in the data option, Vue will warn you that the render function is trying to access a property that doesn&amp;rsquo;t exist.</source>
          <target state="translated">Si no declara el &lt;code&gt;message&lt;/code&gt; en la opci&amp;oacute;n de datos, Vue le advertir&amp;aacute; que la funci&amp;oacute;n de renderizado est&amp;aacute; intentando acceder a una propiedad que no existe.</target>
        </trans-unit>
        <trans-unit id="46b8f4debe19961ca67a65010685320784bdc244" translate="yes" xml:space="preserve">
          <source>If you find type inference or member completion isn&amp;rsquo;t working, annotating certain methods may help address these problems. Using the &lt;code&gt;--noImplicitAny&lt;/code&gt; option will help find many of these unannotated methods.</source>
          <target state="translated">Si encuentra que la inferencia de tipos o la finalizaci&amp;oacute;n de miembros no funciona, anotar ciertos m&amp;eacute;todos puede ayudar a solucionar estos problemas. El uso de la opci&amp;oacute;n &lt;code&gt;--noImplicitAny&lt;/code&gt; ayudar&amp;aacute; a encontrar muchos de estos m&amp;eacute;todos sin anotar.</target>
        </trans-unit>
        <trans-unit id="c99d9927ea3c8d31465469a680b0264760b24597" translate="yes" xml:space="preserve">
          <source>If you find yourself needing to force an update in Vue, in 99.99% of cases, you&amp;rsquo;ve made a mistake somewhere.</source>
          <target state="translated">Si necesita forzar una actualizaci&amp;oacute;n en Vue, en el 99,99% de los casos, cometi&amp;oacute; un error en alguna parte.</target>
        </trans-unit>
        <trans-unit id="a282623f6bdd7b021ecb4c856f00a4975082becf" translate="yes" xml:space="preserve">
          <source>If you happen to be using partials in a performance-critical part of your app, then you should upgrade to &lt;a href=&quot;render-function#Functional-Components&quot;&gt;functional components&lt;/a&gt;. They must be in a plain JS/JSX file (rather than in a &lt;code&gt;.vue&lt;/code&gt; file) and are stateless and instanceless, like partials. This makes rendering extremely fast.</source>
          <target state="translated">Si est&amp;aacute; utilizando parciales en una parte cr&amp;iacute;tica para el rendimiento de su aplicaci&amp;oacute;n, debe actualizar a &lt;a href=&quot;render-function#Functional-Components&quot;&gt;componentes funcionales&lt;/a&gt; . Deben estar en un archivo JS / JSX simple (en lugar de en un archivo &lt;code&gt;.vue&lt;/code&gt; ) y no tienen estado ni instancia, como parciales. Esto hace que el renderizado sea extremadamente r&amp;aacute;pido.</target>
        </trans-unit>
        <trans-unit id="f6790c4d625e03a0db14e824c77f7252c8ac6b22" translate="yes" xml:space="preserve">
          <source>If you have any questions on how you can get more involved with your local Vue community, reach out at &lt;a href=&quot;https://www.twitter.com/vuejs_events&quot;&gt;@Vuejs_Events&lt;/a&gt;!</source>
          <target state="translated">Si tiene alguna pregunta sobre c&amp;oacute;mo puede participar m&amp;aacute;s en su comunidad local de Vue, &amp;iexcl; &lt;a href=&quot;https://www.twitter.com/vuejs_events&quot;&gt;comun&amp;iacute;quese&lt;/a&gt; con @Vuejs_Events !</target>
        </trans-unit>
        <trans-unit id="065d3201caaa2141d71da739cdfc7e30446a0749" translate="yes" xml:space="preserve">
          <source>If you have any tests, run them and see what still fails. If you don&amp;rsquo;t have tests, just open the app in your browser and keep an eye out for warnings or errors as you navigate around.</source>
          <target state="translated">Si tiene alguna prueba, ejec&amp;uacute;tela y vea qu&amp;eacute; sigue fallando. Si no tiene pruebas, simplemente abra la aplicaci&amp;oacute;n en su navegador y est&amp;eacute; atento a las advertencias o errores mientras navega.</target>
        </trans-unit>
        <trans-unit id="4b6b5852b50da5bcf815176a6c34db9a40804fe5" translate="yes" xml:space="preserve">
          <source>If you need multiple aliases, you can also use an array syntax:</source>
          <target state="translated">Si necesitas múltiples alias,también puedes usar una sintaxis de matriz:</target>
        </trans-unit>
        <trans-unit id="a86c834af1858680fe5ab3f3504c46895d429410" translate="yes" xml:space="preserve">
          <source>If you need to add new routes after the router has been instantiated, you can replace the router&amp;rsquo;s matcher with a new one that includes the route you&amp;rsquo;d like to add:</source>
          <target state="translated">Si necesita agregar nuevas rutas despu&amp;eacute;s de que se haya creado una instancia del enrutador, puede reemplazar el comparador del enrutador por uno nuevo que incluya la ruta que le gustar&amp;iacute;a agregar:</target>
        </trans-unit>
        <trans-unit id="ddaed66412f9035c897a73c53b95d7b75a77f86c" translate="yes" xml:space="preserve">
          <source>If you need to compile templates on the client (e.g. passing a string to the &lt;code&gt;template&lt;/code&gt; option, or mounting to an element using its in-DOM HTML as the template), you will need the compiler and thus the full build:</source>
          <target state="translated">Si necesita compilar plantillas en el cliente (por ejemplo, pasar una cadena a la opci&amp;oacute;n de &lt;code&gt;template&lt;/code&gt; o montar un elemento usando su HTML DOM como plantilla), necesitar&amp;aacute; el compilador y, por lo tanto, la compilaci&amp;oacute;n completa:</target>
        </trans-unit>
        <trans-unit id="1f48f8167c0a23ab61df4005f4d4a72ae2eb587c" translate="yes" xml:space="preserve">
          <source>If you need to programmatically generate routes when starting up your app, you can do so by dynamically pushing definitions to a routes array. For example:</source>
          <target state="translated">Si necesitas generar rutas programadas al iniciar la aplicación,puedes hacerlo empujando dinámicamente las definiciones a un conjunto de rutas.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="c75b905774715058912c0cd6cc8289b46519b9fd" translate="yes" xml:space="preserve">
          <source>If you need to stagger list transitions, you can control timing by setting and accessing a &lt;code&gt;data-index&lt;/code&gt; (or similar attribute) on an element. See &lt;a href=&quot;transitions#Staggering-List-Transitions&quot;&gt;an example here&lt;/a&gt;.</source>
          <target state="translated">Si necesita escalonar las transiciones de la lista, puede controlar el tiempo configurando y accediendo a un &lt;code&gt;data-index&lt;/code&gt; (o atributo similar) en un elemento. Vea &lt;a href=&quot;transitions#Staggering-List-Transitions&quot;&gt;un ejemplo aqu&amp;iacute;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3f36db052506affc289d8cbab07f304cc42b2cfc" translate="yes" xml:space="preserve">
          <source>If you only need very simple routing and do not wish to involve a full-featured router library, you can do so by dynamically rendering a page-level component like this:</source>
          <target state="translated">Si sólo necesita un enrutamiento muy simple y no desea implicar una biblioteca de enrutamiento con todas las funciones,puede hacerlo renderizando dinámicamente un componente de nivel de página como este:</target>
        </trans-unit>
        <trans-unit id="83934613eeb1fab05cbec23a2b6576ef65c9de74" translate="yes" xml:space="preserve">
          <source>If you open up your JavaScript console again and enter &lt;code&gt;app2.message = 'some new message'&lt;/code&gt;, you&amp;rsquo;ll once again see that the bound HTML - in this case the &lt;code&gt;title&lt;/code&gt; attribute - has been updated.</source>
          <target state="translated">Si abre su consola JavaScript nuevamente e ingresa &lt;code&gt;app2.message = 'some new message'&lt;/code&gt; , ver&amp;aacute; una vez m&amp;aacute;s que el HTML enlazado, en este caso el atributo de &lt;code&gt;title&lt;/code&gt; , se ha actualizado.</target>
        </trans-unit>
        <trans-unit id="aee69dbd3a0e9f50e62e6f6016f428f6608cc1d0" translate="yes" xml:space="preserve">
          <source>If you prefer a class-based API when declaring components, you can use the officially maintained &lt;a href=&quot;https://github.com/vuejs/vue-class-component&quot;&gt;vue-class-component&lt;/a&gt; decorator:</source>
          <target state="translated">Si prefiere una API basada en clases al declarar componentes, puede usar el decorador de &lt;a href=&quot;https://github.com/vuejs/vue-class-component&quot;&gt;componentes vue-class-component&lt;/a&gt; mantenido oficialmente :</target>
        </trans-unit>
        <trans-unit id="75403d1bbcd622140e98147df81237f72e89afbb" translate="yes" xml:space="preserve">
          <source>If you prefer something more interactive, you can also check out &lt;a href=&quot;https://scrimba.com/playlist/pXKqta&quot;&gt;this tutorial series on Scrimba&lt;/a&gt;, which gives you a mix of screencast and code playground that you can pause and play around with anytime.</source>
          <target state="translated">Si prefieres algo m&amp;aacute;s interactivo, tambi&amp;eacute;n puedes consultar &lt;a href=&quot;https://scrimba.com/playlist/pXKqta&quot;&gt;esta serie de tutoriales sobre Scrimba&lt;/a&gt; , que te ofrece una combinaci&amp;oacute;n de screencast y juegos de c&amp;oacute;digo que puedes pausar y jugar en cualquier momento.</target>
        </trans-unit>
        <trans-unit id="a1803a0174123ec0c71857041cc2fd5b41d4ca83" translate="yes" xml:space="preserve">
          <source>If you really need to override another &lt;code&gt;!important&lt;/code&gt;, you must use the string syntax:</source>
          <target state="translated">Si realmente necesita anular otro &lt;code&gt;!important&lt;/code&gt; , debe usar la sintaxis de cadena:</target>
        </trans-unit>
        <trans-unit id="b9b3464a0443a4fd3675c6560f46c9a5c23720d5" translate="yes" xml:space="preserve">
          <source>If you really want to duplicate the same element/component many times, you can do so with a factory function. For example, the following render function is a perfectly valid way of rendering 20 identical paragraphs:</source>
          <target state="translated">Si realmente quieres duplicar el mismo elemento/componente muchas veces,puedes hacerlo con una función de fábrica.Por ejemplo,la siguiente función de renderización es una forma perfectamente válida de renderizar 20 párrafos idénticos:</target>
        </trans-unit>
        <trans-unit id="035e11da3a8ba14dbdb2e0af739ac5d197d754c9" translate="yes" xml:space="preserve">
          <source>If you still want to call an unwatch function inside the callback, you should check its availability first:</source>
          <target state="translated">Si todavía quieres llamar a una función de desbloqueo dentro de la devolución de llamada,deberías comprobar su disponibilidad primero:</target>
        </trans-unit>
        <trans-unit id="e745791f30101cac58a2b81a7963801c737409a8" translate="yes" xml:space="preserve">
          <source>If you try this in your template however, Vue will show an error, explaining that &lt;strong&gt;every component must have a single root element&lt;/strong&gt;. You can fix this error by wrapping the template in a parent element, such as:</source>
          <target state="translated">Sin embargo, si prueba esto en su plantilla, Vue mostrar&amp;aacute; un error, explicando que &lt;strong&gt;cada componente debe tener un solo elemento ra&amp;iacute;z&lt;/strong&gt; . Puede corregir este error envolviendo la plantilla en un elemento principal, como:</target>
        </trans-unit>
        <trans-unit id="867330159a7ddc38fc78ddc898cba459aac34c10" translate="yes" xml:space="preserve">
          <source>If you use any non-Vue custom elements in your templates, such as a web component, PascalCase ensures that your Vue components remain distinctly visible.</source>
          <target state="translated">Si utiliza cualquier elemento personalizado que no sea Vue en sus plantillas,como un componente web,PascalCase asegura que sus componentes Vue permanezcan claramente visibles.</target>
        </trans-unit>
        <trans-unit id="60f8e15ea64a01da65a785bd3977a29768fe4144" translate="yes" xml:space="preserve">
          <source>If you want to coerce a prop, setup a local computed value based on it instead. For example, instead of:</source>
          <target state="translated">Si quieres coaccionar un accesorio,establece un valor calculado local basado en él.Por ejemplo,en lugar de:</target>
        </trans-unit>
        <trans-unit id="ec0a06cc0af41c0df81514c72a42baf2a7b4e3e2" translate="yes" xml:space="preserve">
          <source>If you want to dive right in and start playing with single-file components, check out &lt;a href=&quot;https://codesandbox.io/s/o29j95wx9&quot;&gt;this simple todo app&lt;/a&gt; on CodeSandbox.</source>
          <target state="translated">Si quieres sumergirte y empezar a jugar con componentes de un solo archivo, echa un vistazo a &lt;a href=&quot;https://codesandbox.io/s/o29j95wx9&quot;&gt;esta sencilla aplicaci&amp;oacute;n&lt;/a&gt; de tareas pendientes en CodeSandbox.</target>
        </trans-unit>
        <trans-unit id="46daea4d2cc73e0262635e93ef739858416c1a90" translate="yes" xml:space="preserve">
          <source>If you want to pass all the properties of an object as props, you can use &lt;code&gt;v-bind&lt;/code&gt; without an argument (&lt;code&gt;v-bind&lt;/code&gt; instead of &lt;code&gt;v-bind:prop-name&lt;/code&gt;). For example, given a &lt;code&gt;post&lt;/code&gt; object:</source>
          <target state="translated">Si desea pasar todas las propiedades de un objeto como accesorios, puede usar &lt;code&gt;v-bind&lt;/code&gt; sin un argumento ( &lt;code&gt;v-bind&lt;/code&gt; en lugar de &lt;code&gt;v-bind:prop-name&lt;/code&gt; ). Por ejemplo, dado un objeto de &lt;code&gt;post&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="caa62e4207841b276f4bf69747cc49086ed59533" translate="yes" xml:space="preserve">
          <source>If you want to register a directive locally instead, components also accept a &lt;code&gt;directives&lt;/code&gt; option:</source>
          <target state="translated">Si desea registrar una directiva localmente, los componentes tambi&amp;eacute;n aceptan una opci&amp;oacute;n de &lt;code&gt;directives&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a5c60bce10cae3d5303941aa3e57ed099d7e4435" translate="yes" xml:space="preserve">
          <source>If you want user input to be automatically typecast as a number, you can add the &lt;code&gt;number&lt;/code&gt; modifier to your &lt;code&gt;v-model&lt;/code&gt; managed inputs:</source>
          <target state="translated">Si desea que la entrada del usuario se encasille autom&amp;aacute;ticamente como un n&amp;uacute;mero, puede agregar el modificador de &lt;code&gt;number&lt;/code&gt; a las entradas administradas de su &lt;code&gt;v-model&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2a16d061cc634d4f68b39e327bf7521b345a10fa" translate="yes" xml:space="preserve">
          <source>If you want whitespace from user input to be trimmed automatically, you can add the &lt;code&gt;trim&lt;/code&gt; modifier to your &lt;code&gt;v-model&lt;/code&gt;-managed inputs:</source>
          <target state="translated">Si desea que los espacios en blanco de la entrada del usuario se recorten autom&amp;aacute;ticamente, puede agregar el modificador de &lt;code&gt;trim&lt;/code&gt; a sus entradas administradas por &lt;code&gt;v-model&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="27e01c628ccff4f037b351b0e994f9073ee50cc8" translate="yes" xml:space="preserve">
          <source>If you were previously relying on &lt;code&gt;vm.$watch&lt;/code&gt; to do something with the DOM after a component updates, you can instead do so in the &lt;code&gt;updated&lt;/code&gt; lifecycle hook.</source>
          <target state="translated">Si anteriormente confiaba en &lt;code&gt;vm.$watch&lt;/code&gt; para hacer algo con el DOM despu&amp;eacute;s de que se actualiza un componente, puede hacerlo en el &lt;code&gt;updated&lt;/code&gt; ciclo de vida actualizado .</target>
        </trans-unit>
        <trans-unit id="d09ac65f465dd8ab501455462ff8cb0ee50716d0" translate="yes" xml:space="preserve">
          <source>If you would like to also toggle a class in the list conditionally, you can do it with a ternary expression:</source>
          <target state="translated">Si desea también cambiar una clase de la lista condicionalmente,puede hacerlo con una expresión ternaria:</target>
        </trans-unit>
        <trans-unit id="bba4a4286bcc04db765fc3867dbf7ddb1a48e9be" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to learn more about Vue before diving in, we created a video walking through the core principles and a sample project.</source>
          <target state="translated">Si desea obtener m&amp;aacute;s informaci&amp;oacute;n sobre Vue antes de sumergirse, creamos un video que explica los principios b&amp;aacute;sicos y un proyecto de muestra.</target>
        </trans-unit>
        <trans-unit id="8bdbab444a3ccfd0f249abc5bdb15834f654b882" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re a &lt;strong&gt;Browserify&lt;/strong&gt; user that would like to use async components, its creator has unfortunately &lt;a href=&quot;https://github.com/substack/node-browserify/issues/58#issuecomment-21978224&quot;&gt;made it clear&lt;/a&gt; that async loading &amp;ldquo;is not something that Browserify will ever support.&amp;rdquo; Officially, at least. The Browserify community has found &lt;a href=&quot;https://github.com/vuejs/vuejs.org/issues/620&quot;&gt;some workarounds&lt;/a&gt;, which may be helpful for existing and complex applications. For all other scenarios, we recommend using Webpack for built-in, first-class async support.</source>
          <target state="translated">Si es un usuario de &lt;strong&gt;Browserify&lt;/strong&gt; que le gustar&amp;iacute;a utilizar componentes as&amp;iacute;ncronos, su creador, lamentablemente, &lt;a href=&quot;https://github.com/substack/node-browserify/issues/58#issuecomment-21978224&quot;&gt;dej&amp;oacute; en claro&lt;/a&gt; que la carga as&amp;iacute;ncrona &quot;no es algo que Browserify admitir&amp;aacute; nunca&quot;. Oficialmente, al menos. La comunidad de Browserify ha encontrado &lt;a href=&quot;https://github.com/vuejs/vuejs.org/issues/620&quot;&gt;algunas soluciones&lt;/a&gt; que pueden ser &amp;uacute;tiles para aplicaciones complejas y existentes. Para todos los dem&amp;aacute;s escenarios, recomendamos usar Webpack para soporte as&amp;iacute;ncrono integrado de primera clase.</target>
        </trans-unit>
        <trans-unit id="edcc3ba94bcb1cfdcb2e9c17bd2ce8899e7c55b1" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re coming from React, you may be wondering how vuex compares to &lt;a href=&quot;https://github.com/reactjs/redux&quot;&gt;redux&lt;/a&gt;, the most popular Flux implementation in that ecosystem. Redux is actually view-layer agnostic, so it can easily be used with Vue via &lt;a href=&quot;https://yarnpkg.com/en/packages?q=redux%20vue&amp;amp;p=1&quot;&gt;simple bindings&lt;/a&gt;. Vuex is different in that it &lt;em&gt;knows&lt;/em&gt; it&amp;rsquo;s in a Vue app. This allows it to better integrate with Vue, offering a more intuitive API and improved development experience.</source>
          <target state="translated">Si viene de React, es posible que se pregunte c&amp;oacute;mo se compara vuex con &lt;a href=&quot;https://github.com/reactjs/redux&quot;&gt;redux&lt;/a&gt; , la implementaci&amp;oacute;n de Flux m&amp;aacute;s popular en ese ecosistema. Redux es en realidad independiente de la capa de vista, por lo que se puede usar f&amp;aacute;cilmente con Vue a trav&amp;eacute;s de &lt;a href=&quot;https://yarnpkg.com/en/packages?q=redux%20vue&amp;amp;p=1&quot;&gt;enlaces simples&lt;/a&gt; . Vuex es diferente porque &lt;em&gt;sabe&lt;/em&gt; que est&amp;aacute; en una aplicaci&amp;oacute;n Vue. Esto le permite integrarse mejor con Vue, ofreciendo una API m&amp;aacute;s intuitiva y una experiencia de desarrollo mejorada.</target>
        </trans-unit>
        <trans-unit id="ac6cff90ff8235cb92a798958233e09ce65f41ef" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re not careful, recursive components can also lead to infinite loops:</source>
          <target state="translated">Si no tiene cuidado, los componentes recursivos tambi&amp;eacute;n pueden dar lugar a bucles infinitos:</target>
        </trans-unit>
        <trans-unit id="31dfe6cb288a0519fc0e0e9ea5786682c1441d3d" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re not using a module system with &lt;code&gt;import&lt;/code&gt;/&lt;code&gt;require&lt;/code&gt;, you can probably skip this section for now. If you are, we have some special instructions and tips just for you.</source>
          <target state="translated">Si no est&amp;aacute; utilizando un sistema de m&amp;oacute;dulos con &lt;code&gt;import&lt;/code&gt; / &lt;code&gt;require&lt;/code&gt; , probablemente pueda omitir esta secci&amp;oacute;n por ahora. Si es as&amp;iacute;, tenemos algunas instrucciones y consejos especiales solo para usted.</target>
        </trans-unit>
        <trans-unit id="4cd1a70ae99b09e3c3ad5742cdad75a7a51ef4df" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re not yet familiar with Vue&amp;rsquo;s components, you can skip this for now.</source>
          <target state="translated">Si a&amp;uacute;n no est&amp;aacute; familiarizado con los componentes de Vue, puede omitir esto por ahora.</target>
        </trans-unit>
        <trans-unit id="3fc717a96a6a10a9a99af5efe59b5bba0e6a070d" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re still here, then it&amp;rsquo;s likely you&amp;rsquo;re using a module system, such as with Babel and Webpack. In these cases, we recommend creating a &lt;code&gt;components&lt;/code&gt; directory, with each component in its own file.</source>
          <target state="translated">Si todav&amp;iacute;a est&amp;aacute; aqu&amp;iacute;, es probable que est&amp;eacute; utilizando un sistema de m&amp;oacute;dulos, como con Babel y Webpack. En estos casos, recomendamos crear un directorio de &lt;code&gt;components&lt;/code&gt; , con cada componente en su propio archivo.</target>
        </trans-unit>
        <trans-unit id="ea196c4500fb63b55d56b5fae7f497c03397f1ba" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re writing a lot of &lt;code&gt;render&lt;/code&gt; functions, it might feel painful to write something like this:</source>
          <target state="translated">Si est&amp;aacute; escribiendo muchas funciones de &lt;code&gt;render&lt;/code&gt; izado , puede resultar doloroso escribir algo como esto:</target>
        </trans-unit>
        <trans-unit id="1e55f976e59b49199d2ea7af9a5149f956c1e601" translate="yes" xml:space="preserve">
          <source>If your directive needs multiple values, you can also pass in a JavaScript object literal. Remember, directives can take any valid JavaScript expression.</source>
          <target state="translated">Si tu directiva necesita múltiples valores,también puedes pasar un objeto de JavaScript literal.Recuerda,las directivas pueden tomar cualquier expresión válida de JavaScript.</target>
        </trans-unit>
        <trans-unit id="ac40dacaf019bddc14aed2d0fa2773dee73842cf" translate="yes" xml:space="preserve">
          <source>Imagine this is the template for &lt;code&gt;bootstrap-date-input&lt;/code&gt;:</source>
          <target state="translated">Imagina que esta es la plantilla para &lt;code&gt;bootstrap-date-input&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="224c21757ea8bf64841521a52786c7584cd3070c" translate="yes" xml:space="preserve">
          <source>Implicit parent-child communication</source>
          <target state="translated">Comunicación implícita entre padres e hijos</target>
        </trans-unit>
        <trans-unit id="55330d37bd375d0971edbec4ed65271fd1ecea19" translate="yes" xml:space="preserve">
          <source>Implicit parent-child communication &lt;sup&gt;use with caution&lt;/sup&gt;</source>
          <target state="translated">&lt;sup&gt;Uso de la&lt;/sup&gt; comunicaci&amp;oacute;n impl&amp;iacute;cita entre padres e hijos &lt;sup&gt;con precauci&amp;oacute;n&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="cff0737239eca41b60241cc75c9ed0aa10e7cf12" translate="yes" xml:space="preserve">
          <source>In 2.2.0+ and above, &lt;code&gt;activated&lt;/code&gt; and &lt;code&gt;deactivated&lt;/code&gt; will fire for all nested components inside a &lt;code&gt;&amp;lt;keep-alive&amp;gt;&lt;/code&gt; tree.</source>
          <target state="translated">En 2.2.0+ y superior, &lt;code&gt;activated&lt;/code&gt; y &lt;code&gt;deactivated&lt;/code&gt; activar&amp;aacute; para todos los componentes anidados dentro de un &amp;aacute;rbol &lt;code&gt;&amp;lt;keep-alive&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b549760aeed2ab9d1d4db1c8e2a9ad9c0ecadc86" translate="yes" xml:space="preserve">
          <source>In 2.2.0+, this hook also captures errors in component lifecycle hooks. Also, when this hook is &lt;code&gt;undefined&lt;/code&gt;, captured errors will be logged with &lt;code&gt;console.error&lt;/code&gt; instead of crashing the app.</source>
          <target state="translated">En 2.2.0+, este enlace tambi&amp;eacute;n captura errores en los enlaces del ciclo de vida de los componentes. Adem&amp;aacute;s, cuando este gancho &lt;code&gt;undefined&lt;/code&gt; est&amp;aacute; definido , los errores capturados se registrar&amp;aacute;n con &lt;code&gt;console.error&lt;/code&gt; en lugar de bloquear la aplicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="999b4c5d77cbbc3bee12f8c040b08340523086be" translate="yes" xml:space="preserve">
          <source>In 2.2.0+, when using &lt;code&gt;v-for&lt;/code&gt; with a component, a &lt;a href=&quot;list#key&quot;&gt;&lt;code&gt;key&lt;/code&gt;&lt;/a&gt; is now required.</source>
          <target state="translated">En 2.2.0+, cuando se usa &lt;code&gt;v-for&lt;/code&gt; con un componente, ahora se requiere una &lt;a href=&quot;list#key&quot;&gt; &lt;code&gt;key&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ecaafff83b9fcb93b3e419ce8a4773d634c3148b" translate="yes" xml:space="preserve">
          <source>In 2.4.0+, this hook also captures errors thrown inside Vue custom event handlers.</source>
          <target state="translated">En 2.4.0+,este gancho también captura los errores lanzados dentro de los manejadores de eventos personalizados de Vue.</target>
        </trans-unit>
        <trans-unit id="edef70fc2b7c008af4bf42ee31332936b525d0f1" translate="yes" xml:space="preserve">
          <source>In 2.5.0+ injections can be optional with default value:</source>
          <target state="translated">En 2.5.0+las inyecciones pueden ser opcionales con el valor por defecto:</target>
        </trans-unit>
        <trans-unit id="4b8a8ed5d2d9e4a1e1eed10aaf95fe05167d5fd5" translate="yes" xml:space="preserve">
          <source>In 2.5.0+, if you are using &lt;a href=&quot;single-file-components&quot;&gt;single-file components&lt;/a&gt;, template-based functional components can be declared with:</source>
          <target state="translated">En 2.5.0+, si est&amp;aacute; utilizando &lt;a href=&quot;single-file-components&quot;&gt;componentes de un solo archivo&lt;/a&gt; , los componentes funcionales basados ​​en plantillas se pueden declarar con:</target>
        </trans-unit>
        <trans-unit id="98c67c0761e7da9c00c57d35a0738163cb924a2e" translate="yes" xml:space="preserve">
          <source>In 2.6+, &lt;code&gt;v-for&lt;/code&gt; can also work on values that implement the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#The_iterable_protocol&quot;&gt;Iterable Protocol&lt;/a&gt;, including native &lt;code&gt;Map&lt;/code&gt; and &lt;code&gt;Set&lt;/code&gt;. However, it should be noted that Vue 2.x currently does not support reactivity on &lt;code&gt;Map&lt;/code&gt; and &lt;code&gt;Set&lt;/code&gt; values, so cannot automatically detect changes.</source>
          <target state="translated">En 2.6+, &lt;code&gt;v-for&lt;/code&gt; tambi&amp;eacute;n puede funcionar en valores que implementan el &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#The_iterable_protocol&quot;&gt;Protocolo Iterable&lt;/a&gt; , incluidos los &lt;code&gt;Map&lt;/code&gt; y &lt;code&gt;Set&lt;/code&gt; nativos . Sin embargo, debe tenerse en cuenta que Vue 2.x actualmente no admite la reactividad en los valores &lt;code&gt;Map&lt;/code&gt; y &lt;code&gt;Set&lt;/code&gt; , por lo que no puede detectar cambios autom&amp;aacute;ticamente.</target>
        </trans-unit>
        <trans-unit id="5553d76d7cbc80714e9fa7174eeef5474643a592" translate="yes" xml:space="preserve">
          <source>In 2.6.0+, this hook also captures errors thrown inside &lt;code&gt;v-on&lt;/code&gt; DOM listeners. In addition, if any of the covered hooks or handlers returns a Promise chain (e.g. async functions), the error from that Promise chain will also be handled.</source>
          <target state="translated">En 2.6.0+, este gancho tambi&amp;eacute;n captura errores lanzados dentro &lt;code&gt;v-on&lt;/code&gt; escuchas DOM de v-on . Adem&amp;aacute;s, si alguno de los ganchos o manejadores cubiertos devuelve una cadena Promise (por ejemplo, funciones as&amp;iacute;ncronas), tambi&amp;eacute;n se manejar&amp;aacute; el error de esa cadena Promise.</target>
        </trans-unit>
        <trans-unit id="5b65e8c99e14e1d3d5fad411cf67fa65a409639e" translate="yes" xml:space="preserve">
          <source>In 2.6.0, we introduced a new unified syntax (the &lt;code&gt;v-slot&lt;/code&gt; directive) for named and scoped slots. It replaces the &lt;code&gt;slot&lt;/code&gt; and &lt;code&gt;slot-scope&lt;/code&gt; attributes, which are now deprecated, but have &lt;em&gt;not&lt;/em&gt; been removed and are still documented &lt;a href=&quot;#Deprecated-Syntax&quot;&gt;here&lt;/a&gt;. The rationale for introducing the new syntax is described in this &lt;a href=&quot;https://github.com/vuejs/rfcs/blob/master/active-rfcs/0001-new-slot-syntax.md&quot;&gt;RFC&lt;/a&gt;.</source>
          <target state="translated">En 2.6.0, introdujimos una nueva sintaxis unificada (la directiva &lt;code&gt;v-slot&lt;/code&gt; ) para ranuras con nombre y &amp;aacute;mbito. Sustituye a las &lt;code&gt;slot&lt;/code&gt; y &lt;code&gt;slot-scope&lt;/code&gt; atributos, que ahora est&amp;aacute;n en desuso, pero que han &lt;em&gt;no&lt;/em&gt; han quitado y todav&amp;iacute;a est&amp;aacute;n documentadas &lt;a href=&quot;#Deprecated-Syntax&quot;&gt;aqu&amp;iacute;&lt;/a&gt; . La justificaci&amp;oacute;n para introducir la nueva sintaxis se describe en este &lt;a href=&quot;https://github.com/vuejs/rfcs/blob/master/active-rfcs/0001-new-slot-syntax.md&quot;&gt;RFC&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1efb26c55b50e56d58b23c52bfa3f35fba3a9ae3" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;../guide/single-file-components&quot;&gt;single-file components&lt;/a&gt;, &lt;code&gt;scoped&lt;/code&gt; styles will not apply to content inside &lt;code&gt;v-html&lt;/code&gt;, because that HTML is not processed by Vue&amp;rsquo;s template compiler. If you want to target &lt;code&gt;v-html&lt;/code&gt; content with scoped CSS, you can instead use &lt;a href=&quot;https://vue-loader.vuejs.org/en/features/css-modules.html&quot;&gt;CSS modules&lt;/a&gt; or an additional, global &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; element with a manual scoping strategy such as BEM.</source>
          <target state="translated">En &lt;a href=&quot;../guide/single-file-components&quot;&gt;los componentes de un solo archivo&lt;/a&gt; , los estilos de &lt;code&gt;scoped&lt;/code&gt; no se aplicar&amp;aacute;n al contenido dentro de &lt;code&gt;v-html&lt;/code&gt; , porque ese HTML no es procesado por el compilador de plantillas de Vue. Si desea orientar el contenido &lt;code&gt;v-html&lt;/code&gt; con CSS con alcance, puede usar &lt;a href=&quot;https://vue-loader.vuejs.org/en/features/css-modules.html&quot;&gt;m&amp;oacute;dulos CSS&lt;/a&gt; o un elemento &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; global adicional con una estrategia de alcance manual como BEM.</target>
        </trans-unit>
        <trans-unit id="0c8d376f7dee4247b96adc0876ef4edbaf45e20c" translate="yes" xml:space="preserve">
          <source>In JavaScript, PascalCase is the convention for classes and prototype constructors - essentially, anything that can have distinct instances. Vue components also have instances, so it makes sense to also use PascalCase. As an added benefit, using PascalCase within JSX (and templates) allows readers of the code to more easily distinguish between components and HTML elements.</source>
          <target state="translated">En JavaScript,PascalCase es la convención para las clases y los constructores de prototipos-esencialmente,cualquier cosa que pueda tener instancias distintas.Los componentes visuales también tienen instancias,así que tiene sentido usar también el PascalCase.Como beneficio adicional,el uso de PascalCase dentro de JSX (y plantillas)permite a los lectores del código distinguir más fácilmente entre los componentes y los elementos HTML.</target>
        </trans-unit>
        <trans-unit id="0e6aff66522249011aa1aa6c3f9299f8a6a28ad8" translate="yes" xml:space="preserve">
          <source>In JavaScript, splitting objects with multiple properties over multiple lines is widely considered a good convention, because it&amp;rsquo;s much easier to read. Our templates and &lt;a href=&quot;../guide/render-function#JSX&quot;&gt;JSX&lt;/a&gt; deserve the same consideration.</source>
          <target state="translated">En JavaScript, dividir objetos con m&amp;uacute;ltiples propiedades en m&amp;uacute;ltiples l&amp;iacute;neas se considera una buena convenci&amp;oacute;n, porque es mucho m&amp;aacute;s f&amp;aacute;cil de leer. Nuestras plantillas y &lt;a href=&quot;../guide/render-function#JSX&quot;&gt;JSX&lt;/a&gt; merecen la misma consideraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="0e2913db7ffdacc418eed127754b210542e820db" translate="yes" xml:space="preserve">
          <source>In Polymer, the team has also made its data-binding system very limited in order to compensate for the performance. For example, the only expressions supported in Polymer templates are boolean negation and single method calls. Its computed property implementation is also not very flexible.</source>
          <target state="translated">En el caso del Polímero,el equipo también ha hecho que su sistema de unión de datos sea muy limitado para compensar el rendimiento.Por ejemplo,las únicas expresiones soportadas en las plantillas de Polymer son la negación booleana y las llamadas de método único.Su implementación de propiedades computarizadas tampoco es muy flexible.</target>
        </trans-unit>
        <trans-unit id="b180ff4b776b13afecd7e06c14be26a036f40513" translate="yes" xml:space="preserve">
          <source>In React, all components express their UI within render functions using JSX, a declarative XML-like syntax that works within JavaScript.</source>
          <target state="translated">En React,todos los componentes expresan su UI dentro de las funciones de renderizado usando JSX,una sintaxis declarativa de tipo XML que funciona dentro de JavaScript.</target>
        </trans-unit>
        <trans-unit id="0c74e086bdc4e1b0963bd8e65da5a6cf41a27ae4" translate="yes" xml:space="preserve">
          <source>In React, everything is just JavaScript. Not only are HTML structures expressed via JSX, the recent trends also tend to put CSS management inside JavaScript as well. This approach has its own benefits, but also comes with various trade-offs that may not seem worthwhile for every developer.</source>
          <target state="translated">En realidad,todo es sólo JavaScript.No sólo las estructuras HTML se expresan a través de JSX,las tendencias recientes también tienden a poner la gestión de CSS dentro de JavaScript también.Este enfoque tiene sus propios beneficios,pero también viene con varias compensaciones que pueden parecer no valer la pena para cada desarrollador.</target>
        </trans-unit>
        <trans-unit id="e01224b36d0e229721ad0a27e329111636e12ad4" translate="yes" xml:space="preserve">
          <source>In React, when a component&amp;rsquo;s state changes, it triggers the re-render of the entire component sub-tree, starting at that component as root. To avoid unnecessary re-renders of child components, you need to either use &lt;code&gt;PureComponent&lt;/code&gt; or implement &lt;code&gt;shouldComponentUpdate&lt;/code&gt; whenever you can. You may also need to use immutable data structures to make your state changes more optimization-friendly. However, in certain cases you may not be able to rely on such optimizations because &lt;code&gt;PureComponent/shouldComponentUpdate&lt;/code&gt; assumes the entire sub tree&amp;rsquo;s render output is determined by the props of the current component. If that is not the case, then such optimizations may lead to inconsistent DOM state.</source>
          <target state="translated">En React, cuando cambia el estado de un componente, se activa la reproducci&amp;oacute;n de todo el sub&amp;aacute;rbol del componente, comenzando en ese componente como ra&amp;iacute;z. Para evitar repeticiones innecesarias de componentes secundarios, debe utilizar &lt;code&gt;PureComponent&lt;/code&gt; o implementar &lt;code&gt;shouldComponentUpdate&lt;/code&gt; siempre que pueda. Tambi&amp;eacute;n es posible que deba utilizar estructuras de datos inmutables para que los cambios de estado sean m&amp;aacute;s f&amp;aacute;ciles de optimizar. Sin embargo, en ciertos casos, es posible que no pueda confiar en tales optimizaciones porque &lt;code&gt;PureComponent/shouldComponentUpdate&lt;/code&gt; asume que la salida de renderizaci&amp;oacute;n de todo el sub&amp;aacute;rbol est&amp;aacute; determinada por los accesorios del componente actual. Si ese no es el caso, dichas optimizaciones pueden conducir a un estado DOM inconsistente.</target>
        </trans-unit>
        <trans-unit id="850444a28d2f3a6b68ecd836b4765b12b999a6f4" translate="yes" xml:space="preserve">
          <source>In Vue 2.x, &lt;code&gt;Vue.observable&lt;/code&gt; directly mutates the object passed to it, so that it is equivalent to the object returned, as &lt;a href=&quot;../guide/instance#Data-and-Methods&quot;&gt;demonstrated here&lt;/a&gt;. In Vue 3.x, a reactive proxy will be returned instead, leaving the original object non-reactive if mutated directly. Therefore, for future compatibility, we recommend always working with the object returned by &lt;code&gt;Vue.observable&lt;/code&gt;, rather than the object originally passed to it.</source>
          <target state="translated">En Vue 2.x, &lt;code&gt;Vue.observable&lt;/code&gt; muta directamente el objeto que se le pasa, para que sea equivalente al objeto devuelto, como se &lt;a href=&quot;../guide/instance#Data-and-Methods&quot;&gt;demuestra aqu&amp;iacute;&lt;/a&gt; . En Vue 3.x, se devolver&amp;aacute; un proxy reactivo en su lugar, dejando el objeto original no reactivo si se muta directamente. Por lo tanto, para compatibilidad futura, recomendamos trabajar siempre con el objeto devuelto por &lt;code&gt;Vue.observable&lt;/code&gt; , en lugar del objeto que se le pas&amp;oacute; originalmente.</target>
        </trans-unit>
        <trans-unit id="9ed32cf518158ed818bb81f6b262961d6f11529c" translate="yes" xml:space="preserve">
          <source>In Vue, a component is essentially a Vue instance with pre-defined options. Registering a component in Vue is straightforward:</source>
          <target state="translated">En Vue,un componente es esencialmente una instancia de Vue con opciones predefinidas.Registrar un componente en Vue es sencillo:</target>
        </trans-unit>
        <trans-unit id="640123531948ef3b9eb7980eb088b64ca536081b" translate="yes" xml:space="preserve">
          <source>In Vue, a component&amp;rsquo;s dependencies are automatically tracked during its render, so the system knows precisely which components actually need to re-render when state changes. Each component can be considered to have &lt;code&gt;shouldComponentUpdate&lt;/code&gt; automatically implemented for you, without the nested component caveats.</source>
          <target state="translated">En Vue, las dependencias de un componente se rastrean autom&amp;aacute;ticamente durante su renderizado, por lo que el sistema sabe con precisi&amp;oacute;n qu&amp;eacute; componentes realmente necesitan volver a renderizarse cuando cambia de estado. Se puede considerar que cada componente tiene &lt;code&gt;shouldComponentUpdate&lt;/code&gt; implementado autom&amp;aacute;ticamente, sin las advertencias del componente anidado.</target>
        </trans-unit>
        <trans-unit id="18335155b76d4fad8194e8bdec133a87f6304254" translate="yes" xml:space="preserve">
          <source>In Vue, we also have &lt;a href=&quot;render-function&quot;&gt;render functions&lt;/a&gt; and even &lt;a href=&quot;render-function#JSX&quot;&gt;support JSX&lt;/a&gt;, because sometimes you do need that power. However, as the default experience we offer templates as a simpler alternative. Any valid HTML is also a valid Vue template, and this leads to a few advantages of its own:</source>
          <target state="translated">En Vue, tambi&amp;eacute;n tenemos &lt;a href=&quot;render-function&quot;&gt;funciones de renderizado&lt;/a&gt; e incluso &lt;a href=&quot;render-function#JSX&quot;&gt;admitimos JSX&lt;/a&gt; , porque a veces necesitas esa potencia. Sin embargo, como experiencia predeterminada, ofrecemos plantillas como alternativa m&amp;aacute;s sencilla. Cualquier HTML v&amp;aacute;lido tambi&amp;eacute;n es una plantilla de Vue v&amp;aacute;lida, y esto conlleva algunas ventajas propias:</target>
        </trans-unit>
        <trans-unit id="030d10ad2ba05486f4deb446ef11d5e04ed0a4f7" translate="yes" xml:space="preserve">
          <source>In Webpack 4+, you can use the &lt;code&gt;mode&lt;/code&gt; option:</source>
          <target state="translated">En Webpack 4+, puede usar la opci&amp;oacute;n de &lt;code&gt;mode&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="316b5f68fcb7371b1ffc1163190a5aa5dbe2b1f0" translate="yes" xml:space="preserve">
          <source>In a large application, it is necessary to divide the whole app into components to make development manageable. We will talk a lot more about components &lt;a href=&quot;guide/components&quot;&gt;later in the guide&lt;/a&gt;, but here&amp;rsquo;s an (imaginary) example of what an app&amp;rsquo;s template might look like with components:</source>
          <target state="translated">En una aplicaci&amp;oacute;n grande, es necesario dividir toda la aplicaci&amp;oacute;n en componentes para que el desarrollo sea manejable. Hablaremos mucho m&amp;aacute;s sobre los componentes &lt;a href=&quot;guide/components&quot;&gt;m&amp;aacute;s adelante en la gu&amp;iacute;a&lt;/a&gt; , pero aqu&amp;iacute; hay un ejemplo (imaginario) de c&amp;oacute;mo se ver&amp;iacute;a la plantilla de una aplicaci&amp;oacute;n con componentes:</target>
        </trans-unit>
        <trans-unit id="b9d1075c896ee6a04f422ac930836698aaea2b0a" translate="yes" xml:space="preserve">
          <source>In a typical app, however, you&amp;rsquo;ll likely have an array of posts in &lt;code&gt;data&lt;/code&gt;:</source>
          <target state="translated">Sin embargo, en una aplicaci&amp;oacute;n t&amp;iacute;pica, es probable que tenga una variedad de publicaciones en los &lt;code&gt;data&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4f4e2e50a87f6ed41c151d22eff006d5759a7c9c" translate="yes" xml:space="preserve">
          <source>In addition to data properties, Vue instances expose a number of useful instance properties and methods. These are prefixed with &lt;code&gt;$&lt;/code&gt; to differentiate them from user-defined properties. For example:</source>
          <target state="translated">Adem&amp;aacute;s de las propiedades de los datos, las instancias de Vue exponen una serie de propiedades y m&amp;eacute;todos de instancia &amp;uacute;tiles. Estos tienen el prefijo &lt;code&gt;$&lt;/code&gt; para diferenciarlos de las propiedades definidas por el usuario. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="80219b5bbf693b189078749f367546bbbcf16aa2" translate="yes" xml:space="preserve">
          <source>In addition to text interpolation, we can also bind element attributes like this:</source>
          <target state="translated">Además de la interpolación de texto,también podemos unir atributos de elementos como este:</target>
        </trans-unit>
        <trans-unit id="a5994728cbddc196dcd0ef1858badc921029a1e1" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;code&gt;watch&lt;/code&gt; option, you can also use the imperative &lt;a href=&quot;../api/index#vm-watch&quot;&gt;vm.$watch API&lt;/a&gt;.</source>
          <target state="translated">Adem&amp;aacute;s de la opci&amp;oacute;n de &lt;code&gt;watch&lt;/code&gt; , tambi&amp;eacute;n puede utilizar la &lt;a href=&quot;../api/index#vm-watch&quot;&gt;API&lt;/a&gt; imperativa vm. $ Watch .</target>
        </trans-unit>
        <trans-unit id="3e32faab7e104e620749fb0ceef10880dd5beb4c" translate="yes" xml:space="preserve">
          <source>In addition to the default set of directives shipped in core (&lt;code&gt;v-model&lt;/code&gt; and &lt;code&gt;v-show&lt;/code&gt;), Vue also allows you to register your own custom directives. Note that in Vue 2.0, the primary form of code reuse and abstraction is components - however there may be cases where you need some low-level DOM access on plain elements, and this is where custom directives would still be useful. An example would be focusing on an input element, like this one:</source>
          <target state="translated">Adem&amp;aacute;s del conjunto predeterminado de directivas enviadas en el n&amp;uacute;cleo ( &lt;code&gt;v-model&lt;/code&gt; y &lt;code&gt;v-show&lt;/code&gt; ), Vue tambi&amp;eacute;n le permite registrar sus propias directivas personalizadas. Tenga en cuenta que en Vue 2.0, la forma principal de reutilizaci&amp;oacute;n y abstracci&amp;oacute;n del c&amp;oacute;digo son los componentes; sin embargo, puede haber casos en los que necesite un acceso DOM de bajo nivel en elementos simples, y aqu&amp;iacute; es donde las directivas personalizadas a&amp;uacute;n ser&amp;iacute;an &amp;uacute;tiles. Un ejemplo se centrar&amp;iacute;a en un elemento de entrada, como este:</target>
        </trans-unit>
        <trans-unit id="7d28a8c09a6baf609edfa9fc404ef67e9134cea0" translate="yes" xml:space="preserve">
          <source>In addition, &lt;code&gt;type&lt;/code&gt; can also be a custom constructor function and the assertion will be made with an &lt;code&gt;instanceof&lt;/code&gt; check. For example, given the following constructor function exists:</source>
          <target state="translated">Adem&amp;aacute;s, el &lt;code&gt;type&lt;/code&gt; tambi&amp;eacute;n puede ser una funci&amp;oacute;n de constructor personalizada y la aserci&amp;oacute;n se realizar&amp;aacute; con una &lt;code&gt;instanceof&lt;/code&gt; verificaci&amp;oacute;n. Por ejemplo, dado que existe la siguiente funci&amp;oacute;n constructora:</target>
        </trans-unit>
        <trans-unit id="a858e091d2bb7c6e47ea11f2b98a3648f57a8e3b" translate="yes" xml:space="preserve">
          <source>In addition, each instance/component can still own and manage its own private state:</source>
          <target state="translated">Además,cada instancia/componente puede seguir siendo propietaria y administradora de su propio estado privado:</target>
        </trans-unit>
        <trans-unit id="ee9ca0d32bcd7721be259373df69a9266664877b" translate="yes" xml:space="preserve">
          <source>In addition, every time the parent component is updated, all props in the child component will be refreshed with the latest value. This means you should &lt;strong&gt;not&lt;/strong&gt; attempt to mutate a prop inside a child component. If you do, Vue will warn you in the console.</source>
          <target state="translated">Adem&amp;aacute;s, cada vez que se actualiza el componente principal, todos los accesorios del componente secundario se actualizar&amp;aacute;n con el &amp;uacute;ltimo valor. Esto significa que &lt;strong&gt;no&lt;/strong&gt; debe intentar mutar un accesorio dentro de un componente secundario. Si lo hace, Vue le advertir&amp;aacute; en la consola.</target>
        </trans-unit>
        <trans-unit id="2dbcc3158e141581bb6b942a272d46856d1b275a" translate="yes" xml:space="preserve">
          <source>In case you haven&amp;rsquo;t noticed yet, Vue performs DOM updates &lt;strong&gt;asynchronously&lt;/strong&gt;. Whenever a data change is observed, it will open a queue and buffer all the data changes that happen in the same event loop. If the same watcher is triggered multiple times, it will be pushed into the queue only once. This buffered de-duplication is important in avoiding unnecessary calculations and DOM manipulations. Then, in the next event loop &amp;ldquo;tick&amp;rdquo;, Vue flushes the queue and performs the actual (already de-duped) work. Internally Vue tries native &lt;code&gt;Promise.then&lt;/code&gt;, &lt;code&gt;MutationObserver&lt;/code&gt;, and &lt;code&gt;setImmediate&lt;/code&gt; for the asynchronous queuing and falls back to &lt;code&gt;setTimeout(fn, 0)&lt;/code&gt;.</source>
          <target state="translated">En caso de que a&amp;uacute;n no lo haya notado, Vue realiza actualizaciones DOM de &lt;strong&gt;forma asincr&amp;oacute;nica&lt;/strong&gt; . Siempre que se observe un cambio de datos, abrir&amp;aacute; una cola y almacenar&amp;aacute; en b&amp;uacute;fer todos los cambios de datos que sucedan en el mismo ciclo de eventos. Si el mismo observador se activa varias veces, se colocar&amp;aacute; en la cola solo una vez. Esta deduplicaci&amp;oacute;n en b&amp;uacute;fer es importante para evitar c&amp;aacute;lculos y manipulaciones DOM innecesarios. Luego, en el siguiente ciclo de eventos &quot;tick&quot;, Vue vac&amp;iacute;a la cola y realiza el trabajo real (ya eliminado). Internamente, Vue prueba &lt;code&gt;Promise.then&lt;/code&gt; nativo , &lt;code&gt;MutationObserver&lt;/code&gt; y &lt;code&gt;setImmediate&lt;/code&gt; para la cola asincr&amp;oacute;nica y &lt;code&gt;setTimeout(fn, 0)&lt;/code&gt; a setTimeout (fn, 0) .</target>
        </trans-unit>
        <trans-unit id="aaebcaa832cc872ee62580c8ab1928e2e9c98159" translate="yes" xml:space="preserve">
          <source>In case you prefer setting up your own build setup from scratch, you will need to manually configure webpack with &lt;a href=&quot;https://vue-loader.vuejs.org&quot;&gt;vue-loader&lt;/a&gt;. To learn more about webpack itself, check out &lt;a href=&quot;https://webpack.js.org/configuration/&quot;&gt;their official docs&lt;/a&gt; and &lt;a href=&quot;https://webpack.academy/p/the-core-concepts&quot;&gt;Webpack Academy&lt;/a&gt;.</source>
          <target state="translated">En caso de que prefiera configurar su propia configuraci&amp;oacute;n de compilaci&amp;oacute;n desde cero, deber&amp;aacute; configurar manualmente el paquete web con &lt;a href=&quot;https://vue-loader.vuejs.org&quot;&gt;vue-loader&lt;/a&gt; . Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre el paquete web en s&amp;iacute;, consulte &lt;a href=&quot;https://webpack.js.org/configuration/&quot;&gt;sus documentos oficiales&lt;/a&gt; y &lt;a href=&quot;https://webpack.academy/p/the-core-concepts&quot;&gt;Webpack Academy&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="14c7c4ad32435f4b7855ae564fc2ea7c8c969cd8" translate="yes" xml:space="preserve">
          <source>In cases like above, when &lt;em&gt;only&lt;/em&gt; the default slot is provided content, the component&amp;rsquo;s tags can be used as the slot&amp;rsquo;s template. This allows us to use &lt;code&gt;v-slot&lt;/code&gt; directly on the component:</source>
          <target state="translated">En casos como el anterior, cuando &lt;em&gt;solo&lt;/em&gt; se proporciona el contenido del espacio predeterminado, las etiquetas del componente se pueden usar como plantilla del espacio. Esto nos permite usar &lt;code&gt;v-slot&lt;/code&gt; directamente en el componente:</target>
        </trans-unit>
        <trans-unit id="4aa7f570dcb37787dd83b543d84d7b6f36311f16" translate="yes" xml:space="preserve">
          <source>In cases like this, we can mark components as &lt;code&gt;functional&lt;/code&gt;, which means that they&amp;rsquo;re stateless (no &lt;a href=&quot;../api/index#Options-Data&quot;&gt;reactive data&lt;/a&gt;) and instanceless (no &lt;code&gt;this&lt;/code&gt; context). A &lt;strong&gt;functional component&lt;/strong&gt; looks like this:</source>
          <target state="translated">En casos como este, podemos marcar componentes como &lt;code&gt;functional&lt;/code&gt; , lo que significa que no tienen estado (sin &lt;a href=&quot;../api/index#Options-Data&quot;&gt;datos reactivos&lt;/a&gt; ) y sin instancia (sin &lt;code&gt;this&lt;/code&gt; contexto). Un &lt;strong&gt;componente funcional se&lt;/strong&gt; ve as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="7115593cdb5e7c5bc03b8752b74312ce66ca58e0" translate="yes" xml:space="preserve">
          <source>In committed code, prop definitions should always be as detailed as possible, specifying at least type(s).</source>
          <target state="translated">En el código comprometido,las definiciones de los puntales deben ser siempre tan detalladas como sea posible,especificando al menos el tipo o tipos.</target>
        </trans-unit>
        <trans-unit id="7bfd4fed8d270a9c14023eb29a927d5b4c0ecab4" translate="yes" xml:space="preserve">
          <source>In comparison, &lt;code&gt;v-show&lt;/code&gt; is much simpler - the element is always rendered regardless of initial condition, with CSS-based toggling.</source>
          <target state="translated">En comparaci&amp;oacute;n, &lt;code&gt;v-show&lt;/code&gt; es mucho m&amp;aacute;s simple: el elemento siempre se representa independientemente de la condici&amp;oacute;n inicial, con alternancia basada en CSS.</target>
        </trans-unit>
        <trans-unit id="d22711c22222a7cebea6f132a3ff7ea151c0f818" translate="yes" xml:space="preserve">
          <source>In comparison, a method invocation will &lt;strong&gt;always&lt;/strong&gt; run the function whenever a re-render happens.</source>
          <target state="translated">En comparaci&amp;oacute;n, la invocaci&amp;oacute;n de un m&amp;eacute;todo &lt;strong&gt;siempre&lt;/strong&gt; ejecutar&amp;aacute; la funci&amp;oacute;n cada vez que ocurra una nueva representaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="07f3fad6ea47761ecb752634045422b5f91f5f10" translate="yes" xml:space="preserve">
          <source>In development, Vue will warn you if a component is ever provided incorrectly formatted props, helping you catch potential sources of error.</source>
          <target state="translated">En el desarrollo,Vue le advertirá si un componente se proporciona alguna vez con un formato incorrecto de utilería,ayudándole a detectar posibles fuentes de error.</target>
        </trans-unit>
        <trans-unit id="9a8c437a03d6e7a0e6f5698507548a4d93c2d7fe" translate="yes" xml:space="preserve">
          <source>In every subcomponent of a &lt;code&gt;new Vue&lt;/code&gt; instance, this root instance can be accessed with the &lt;code&gt;$root&lt;/code&gt; property. For example, in this root instance:</source>
          <target state="translated">En cada subcomponente de una &lt;code&gt;new Vue&lt;/code&gt; instancia de Vue , se puede acceder a esta instancia ra&amp;iacute;z con la propiedad &lt;code&gt;$root&lt;/code&gt; . Por ejemplo, en esta instancia ra&amp;iacute;z:</target>
        </trans-unit>
        <trans-unit id="097d80c1c9662de13d79de78efe60775b83d52ef" translate="yes" xml:space="preserve">
          <source>In fact, you can think of dependency injection as sort of &amp;ldquo;long-range props&amp;rdquo;, except:</source>
          <target state="translated">De hecho, puede pensar en la inyecci&amp;oacute;n de dependencia como una especie de &quot;accesorios de largo alcance&quot;, excepto:</target>
        </trans-unit>
        <trans-unit id="7bc506457177d40f6c274f20bb75f39f6557a677" translate="yes" xml:space="preserve">
          <source>In general, whenever something can be achieved in plain JavaScript, we want to avoid introducing a special syntax like filters to take care of the same concern. Here&amp;rsquo;s how you can replace Vue&amp;rsquo;s built-in directive filters:</source>
          <target state="translated">En general, siempre que se pueda lograr algo en JavaScript simple, queremos evitar la introducci&amp;oacute;n de una sintaxis especial como filtros para ocuparse de la misma preocupaci&amp;oacute;n. As&amp;iacute; es como puede reemplazar los filtros de directiva integrados de Vue:</target>
        </trans-unit>
        <trans-unit id="ae9ee797c12050e7d3af19214520a26751de6044" translate="yes" xml:space="preserve">
          <source>In large applications, we may need to divide the app into smaller chunks and only load a component from the server when it&amp;rsquo;s needed. To make that easier, Vue allows you to define your component as a factory function that asynchronously resolves your component definition. Vue will only trigger the factory function when the component needs to be rendered and will cache the result for future re-renders. For example:</source>
          <target state="translated">En aplicaciones grandes, es posible que tengamos que dividir la aplicaci&amp;oacute;n en partes m&amp;aacute;s peque&amp;ntilde;as y solo cargar un componente del servidor cuando sea necesario. Para hacerlo m&amp;aacute;s f&amp;aacute;cil, Vue le permite definir su componente como una funci&amp;oacute;n de f&amp;aacute;brica que resuelve asincr&amp;oacute;nicamente la definici&amp;oacute;n de su componente. Vue solo activar&amp;aacute; la funci&amp;oacute;n de f&amp;aacute;brica cuando el componente necesite renderizarse y almacenar&amp;aacute; en cach&amp;eacute; el resultado para futuras renderizaciones. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="447ec0f63a19e47502450736e07a06c1647bfe27" translate="yes" xml:space="preserve">
          <source>In many Vue projects, global components will be defined using &lt;code&gt;Vue.component&lt;/code&gt;, followed by &lt;code&gt;new Vue({ el: '#container' })&lt;/code&gt; to target a container element in the body of every page.</source>
          <target state="translated">En muchos proyectos de Vue, los componentes globales se definir&amp;aacute;n usando &lt;code&gt;Vue.component&lt;/code&gt; , seguido de &lt;code&gt;new Vue({ el: '#container' })&lt;/code&gt; para apuntar a un elemento contenedor en el cuerpo de cada p&amp;aacute;gina.</target>
        </trans-unit>
        <trans-unit id="53ccc949f90a192c185068356f4f8dd5029eb128" translate="yes" xml:space="preserve">
          <source>In many cases though, you&amp;rsquo;ll still run into strange behavior (e.g. &lt;code&gt;0.035.toFixed(2)&lt;/code&gt; rounds up to &lt;code&gt;0.04&lt;/code&gt;, but &lt;code&gt;0.045&lt;/code&gt; rounds down to &lt;code&gt;0.04&lt;/code&gt;). To work around these issues, you can use the &lt;a href=&quot;http://openexchangerates.github.io/accounting.js/&quot;&gt;&lt;code&gt;accounting&lt;/code&gt;&lt;/a&gt; library to more reliably format currencies.</source>
          <target state="translated">Sin embargo, en muchos casos, a&amp;uacute;n se encontrar&amp;aacute; con un comportamiento extra&amp;ntilde;o (por ejemplo, &lt;code&gt;0.035.toFixed(2)&lt;/code&gt; redondea a &lt;code&gt;0.04&lt;/code&gt; , pero &lt;code&gt;0.045&lt;/code&gt; se redondea a &lt;code&gt;0.04&lt;/code&gt; ). Para solucionar estos problemas, puede utilizar la biblioteca de &lt;a href=&quot;http://openexchangerates.github.io/accounting.js/&quot;&gt; &lt;code&gt;accounting&lt;/code&gt; &lt;/a&gt; para formatear monedas de forma m&amp;aacute;s fiable.</target>
        </trans-unit>
        <trans-unit id="c390053bb2e4d5c93dcd01989be3871147f8ba8c" translate="yes" xml:space="preserve">
          <source>In many cases, you may want the same behavior on &lt;code&gt;bind&lt;/code&gt; and &lt;code&gt;update&lt;/code&gt;, but don&amp;rsquo;t care about the other hooks. For example:</source>
          <target state="translated">En muchos casos, es posible que desee el mismo comportamiento al &lt;code&gt;bind&lt;/code&gt; y &lt;code&gt;update&lt;/code&gt; , pero no le importan los otros ganchos. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="a111823d1c021115efbe8d836af1c2f184002aa1" translate="yes" xml:space="preserve">
          <source>In most cases, Vue can automatically figure out when the transition has finished. By default, Vue waits for the first &lt;code&gt;transitionend&lt;/code&gt; or &lt;code&gt;animationend&lt;/code&gt; event on the root transition element. However, this may not always be desired - for example, we may have a choreographed transition sequence where some nested inner elements have a delayed transition or a longer transition duration than the root transition element.</source>
          <target state="translated">En la mayor&amp;iacute;a de los casos, Vue puede averiguar autom&amp;aacute;ticamente cu&amp;aacute;ndo ha finalizado la transici&amp;oacute;n. De forma predeterminada, Vue espera el primer evento de &lt;code&gt;animationend&lt;/code&gt; &lt;code&gt;transitionend&lt;/code&gt; o final de animaci&amp;oacute;n en el elemento de transici&amp;oacute;n ra&amp;iacute;z. Sin embargo, esto puede no ser siempre deseable; por ejemplo, podemos tener una secuencia de transici&amp;oacute;n coreografiada donde algunos elementos internos anidados tienen una transici&amp;oacute;n retrasada o una duraci&amp;oacute;n de transici&amp;oacute;n m&amp;aacute;s larga que el elemento de transici&amp;oacute;n ra&amp;iacute;z.</target>
        </trans-unit>
        <trans-unit id="5bb963c73fa00775099a6347ea2baa7e2a3e2c72" translate="yes" xml:space="preserve">
          <source>In most cases, it&amp;rsquo;s best to avoid reaching into other component instances or manually manipulating DOM elements. There are cases, however, when it can be appropriate.</source>
          <target state="translated">En la mayor&amp;iacute;a de los casos, es mejor evitar acceder a otras instancias de componentes o manipular manualmente elementos DOM. Sin embargo, hay casos en los que puede ser apropiado.</target>
        </trans-unit>
        <trans-unit id="b6c86a77b0b04c3ca150f69dd5331a352786535a" translate="yes" xml:space="preserve">
          <source>In most cases, reaching into the parent makes your application more difficult to debug and understand, especially if you mutate data in the parent. When looking at that component later, it will be very difficult to figure out where that mutation came from.</source>
          <target state="translated">En la mayoría de los casos,el hecho de llegar al padre hace que su solicitud sea más difícil de depurar y comprender,especialmente si se mutan los datos en el padre.Al mirar ese componente más tarde,será muy difícil averiguar de dónde vino esa mutación.</target>
        </trans-unit>
        <trans-unit id="419bd771510d306d9921bc5eb07cb10e9cc4094a" translate="yes" xml:space="preserve">
          <source>In natural English, adjectives and other descriptors do typically appear before the nouns, while exceptions require connector words. For example:</source>
          <target state="translated">En inglés natural,los adjetivos y otros descriptores suelen aparecer antes de los sustantivos,mientras que las excepciones requieren palabras conectoras.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="e5c5a11b792a6a6c3c9dbe85b25f28ab2feb0a79" translate="yes" xml:space="preserve">
          <source>In normal use cases you shouldn&amp;rsquo;t have to call this method yourself. Prefer controlling the lifecycle of child components in a data-driven fashion using &lt;code&gt;v-if&lt;/code&gt; and &lt;code&gt;v-for&lt;/code&gt;.</source>
          <target state="translated">En casos de uso normales, no deber&amp;iacute;a tener que llamar a este m&amp;eacute;todo usted mismo. Prefiere controlar el ciclo de vida de los componentes secundarios de una manera basada en datos utilizando &lt;code&gt;v-if&lt;/code&gt; y &lt;code&gt;v-for&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4d273535df632e4e8ae9260566c4f2451d604b5c" translate="yes" xml:space="preserve">
          <source>In our case, let&amp;rsquo;s make that point the &lt;code&gt;tree-folder&lt;/code&gt; component. We know the child that creates the paradox is the &lt;code&gt;tree-folder-contents&lt;/code&gt; component, so we&amp;rsquo;ll wait until the &lt;code&gt;beforeCreate&lt;/code&gt; lifecycle hook to register it:</source>
          <target state="translated">En nuestro caso, hagamos ese punto en el componente de &lt;code&gt;tree-folder&lt;/code&gt; . Sabemos que el ni&amp;ntilde;o que crea la paradoja es el componente &lt;code&gt;tree-folder-contents&lt;/code&gt; , por lo que esperaremos hasta el &lt;code&gt;beforeCreate&lt;/code&gt; ciclo de vida beforeCreate para registrarlo:</target>
        </trans-unit>
        <trans-unit id="8fc49bd00753f672db39f74244a5be9e57229d11" translate="yes" xml:space="preserve">
          <source>In our experience, it&amp;rsquo;s better to &lt;em&gt;always&lt;/em&gt; add a unique key, so that you and your team simply never have to worry about these edge cases. Then in the rare, performance-critical scenarios where object constancy isn&amp;rsquo;t necessary, you can make a conscious exception.</source>
          <target state="translated">En nuestra experiencia, es mejor agregar &lt;em&gt;siempre&lt;/em&gt; una clave &amp;uacute;nica, para que usted y su equipo simplemente nunca tengan que preocuparse por estos casos extremos. Luego, en los escenarios raros y cr&amp;iacute;ticos para el rendimiento donde la constancia del objeto no es necesaria, puede hacer una excepci&amp;oacute;n consciente.</target>
        </trans-unit>
        <trans-unit id="a7da1d060c31fa0a41ee9f1ab266ae7cb095dc2c" translate="yes" xml:space="preserve">
          <source>In situations where computed properties are not feasible (e.g. inside nested &lt;code&gt;v-for&lt;/code&gt; loops), you can use a method:</source>
          <target state="translated">En situaciones donde las propiedades calculadas no son factibles (por ejemplo, dentro &lt;code&gt;v-for&lt;/code&gt; bucles v-for anidados ), puede usar un m&amp;eacute;todo:</target>
        </trans-unit>
        <trans-unit id="0f3807437f4c73a9a48f84e425ea613aac544cc0" translate="yes" xml:space="preserve">
          <source>In some cases, we may need &amp;ldquo;two-way binding&amp;rdquo; for a prop. Unfortunately, true two-way binding can create maintenance issues, because child components can mutate the parent without the source of that mutation being obvious in both the parent and the child.</source>
          <target state="translated">En algunos casos, es posible que necesitemos un &quot;enlace bidireccional&quot; para un accesorio. Desafortunadamente, el enlace bidireccional verdadero puede crear problemas de mantenimiento, porque los componentes secundarios pueden mutar al padre sin que la fuente de esa mutaci&amp;oacute;n sea obvia tanto en el padre como en el hijo.</target>
        </trans-unit>
        <trans-unit id="1940a94800d8a762af2d6a0c31713ae2122b98c5" translate="yes" xml:space="preserve">
          <source>In such cases you can specify an explicit transition duration (in milliseconds) using the &lt;code&gt;duration&lt;/code&gt; prop on the &lt;code&gt;&amp;lt;transition&amp;gt;&lt;/code&gt; component:</source>
          <target state="translated">En tales casos, puede especificar una duraci&amp;oacute;n de transici&amp;oacute;n expl&amp;iacute;cita (en milisegundos) usando la opci&amp;oacute;n de &lt;code&gt;duration&lt;/code&gt; en el componente &lt;code&gt;&amp;lt;transition&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="eb7b8e5881c6c604581549ecd2e87a6d5a150d11" translate="yes" xml:space="preserve">
          <source>In that case, the &lt;code&gt;.native&lt;/code&gt; listener in the parent would silently break. There would be no errors, but the &lt;code&gt;onFocus&lt;/code&gt; handler wouldn&amp;rsquo;t be called when we expected it to.</source>
          <target state="translated">En ese caso, el oyente &lt;code&gt;.native&lt;/code&gt; en el padre se romper&amp;iacute;a silenciosamente. No habr&amp;iacute;a errores, pero el controlador &lt;code&gt;onFocus&lt;/code&gt; no se llamar&amp;iacute;a cuando lo esper&amp;aacute;bamos.</target>
        </trans-unit>
        <trans-unit id="8c963edc9ad3f82196cbef815577797afa016c7d" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;https://cdn.jsdelivr.net/npm/vue/dist/&quot;&gt;&lt;code&gt;dist/&lt;/code&gt; directory of the NPM package&lt;/a&gt; you will find many different builds of Vue.js. Here&amp;rsquo;s an overview of the difference between them:</source>
          <target state="translated">En el &lt;a href=&quot;https://cdn.jsdelivr.net/npm/vue/dist/&quot;&gt;directorio &lt;/a&gt; &lt;code&gt;dist/&lt;/code&gt; del paquete NPM encontrar&amp;aacute; muchas versiones diferentes de Vue.js. Aqu&amp;iacute; hay una descripci&amp;oacute;n general de la diferencia entre ellos:</target>
        </trans-unit>
        <trans-unit id="1f40ffd220cc5bc553599168b68b9a1d61abb356" translate="yes" xml:space="preserve">
          <source>In the above example, the handler will only be called if &lt;code&gt;$event.key&lt;/code&gt; is equal to &lt;code&gt;'PageDown'&lt;/code&gt;.</source>
          <target state="translated">En el ejemplo anterior, solo se llamar&amp;aacute; al controlador si &lt;code&gt;$event.key&lt;/code&gt; es igual a &lt;code&gt;'PageDown'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4792c37807464f6bc3e88fc7e7650b64df280b7d" translate="yes" xml:space="preserve">
          <source>In the case of boolean attributes, where their mere existence implies &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;v-bind&lt;/code&gt; works a little differently. In this example:</source>
          <target state="translated">En el caso de los atributos booleanos, donde su mera existencia implica &lt;code&gt;true&lt;/code&gt; , &lt;code&gt;v-bind&lt;/code&gt; funciona de manera un poco diferente. En este ejemplo:</target>
        </trans-unit>
        <trans-unit id="bb18b983202c7fe25cd6f2bdde9cc28d610f7cf0" translate="yes" xml:space="preserve">
          <source>In the console, enter &lt;code&gt;app4.todos.push({ text: 'New item' })&lt;/code&gt;. You should see a new item appended to the list.</source>
          <target state="translated">En la consola, ingrese &lt;code&gt;app4.todos.push({ text: 'New item' })&lt;/code&gt; . Deber&amp;iacute;a ver un nuevo elemento adjunto a la lista.</target>
        </trans-unit>
        <trans-unit id="95310bafe87b1cd719e23dc5ad106b31232edbf5" translate="yes" xml:space="preserve">
          <source>In the example above, &lt;code&gt;currentTabComponent&lt;/code&gt; can contain either:</source>
          <target state="translated">En el ejemplo anterior, &lt;code&gt;currentTabComponent&lt;/code&gt; puede contener:</target>
        </trans-unit>
        <trans-unit id="d04b574a39526af2226086b101aac912fd89cf7c" translate="yes" xml:space="preserve">
          <source>In the example above, either &lt;code&gt;appear&lt;/code&gt; attribute or &lt;code&gt;v-on:appear&lt;/code&gt; hook will cause an appear transition.</source>
          <target state="translated">En el ejemplo anterior, &lt;code&gt;appear&lt;/code&gt; atributo o &lt;code&gt;v-on:appear&lt;/code&gt; gancho de apariencia provocar&amp;aacute; una transici&amp;oacute;n de apariencia.</target>
        </trans-unit>
        <trans-unit id="62a3df45a50f5bfc852f235683adae371735692a" translate="yes" xml:space="preserve">
          <source>In the future, you can consult the &lt;a href=&quot;../api/index#Instance-Properties&quot;&gt;API reference&lt;/a&gt; for a full list of instance properties and methods.</source>
          <target state="translated">En el futuro, puede consultar la &lt;a href=&quot;../api/index#Instance-Properties&quot;&gt;referencia de API&lt;/a&gt; para obtener una lista completa de propiedades y m&amp;eacute;todos de instancia.</target>
        </trans-unit>
        <trans-unit id="61e01a36c0b76503c82d3b378dd53c34675f6cd7" translate="yes" xml:space="preserve">
          <source>In the parent, we can support this feature by adding a &lt;code&gt;postFontSize&lt;/code&gt; data property:</source>
          <target state="translated">En el padre, podemos admitir esta funci&amp;oacute;n agregando una propiedad de datos &lt;code&gt;postFontSize&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="bd63d2b019faa52d4307ffd579cbe3aabbbc0774" translate="yes" xml:space="preserve">
          <source>In the two examples above, we happen to pass string values, but &lt;em&gt;any&lt;/em&gt; type of value can actually be passed to a prop.</source>
          <target state="translated">En los dos ejemplos anteriores, pasamos valores de cadena, pero &lt;em&gt;cualquier&lt;/em&gt; tipo de valor se puede pasar a una propiedad.</target>
        </trans-unit>
        <trans-unit id="dd9b704f820476ed2050280cb293d51fab68d129" translate="yes" xml:space="preserve">
          <source>In these cases, you can also use the &lt;code&gt;key&lt;/code&gt; attribute to transition between different states of the same element. Instead of using &lt;code&gt;v-if&lt;/code&gt; and &lt;code&gt;v-else&lt;/code&gt;, the above example could be rewritten as:</source>
          <target state="translated">En estos casos, tambi&amp;eacute;n puede utilizar el atributo &lt;code&gt;key&lt;/code&gt; para realizar la transici&amp;oacute;n entre diferentes estados del mismo elemento. En lugar de usar &lt;code&gt;v-if&lt;/code&gt; y &lt;code&gt;v-else&lt;/code&gt; , el ejemplo anterior podr&amp;iacute;a reescribirse como:</target>
        </trans-unit>
        <trans-unit id="270ed3979fc2c798270823f8c8f6f6d7b3c0fe7a" translate="yes" xml:space="preserve">
          <source>In these cases, you can define your components as plain JavaScript objects:</source>
          <target state="translated">En estos casos,puede definir sus componentes como objetos JavaScript simples:</target>
        </trans-unit>
        <trans-unit id="2a3f7f2ff8f42344402992b4038b21897eb06f33" translate="yes" xml:space="preserve">
          <source>In this case, &lt;code&gt;filterA&lt;/code&gt;, defined with a single argument, will receive the value of &lt;code&gt;message&lt;/code&gt;, and then the &lt;code&gt;filterB&lt;/code&gt; function will be called with the result of &lt;code&gt;filterA&lt;/code&gt; passed into &lt;code&gt;filterB&lt;/code&gt;&amp;lsquo;s single argument.</source>
          <target state="translated">En este caso, &lt;code&gt;filterA&lt;/code&gt; , definido con un solo argumento, recibir&amp;aacute; el valor de &lt;code&gt;message&lt;/code&gt; , y luego se &lt;code&gt;filterB&lt;/code&gt; funci&amp;oacute;n filterB con el resultado de &lt;code&gt;filterA&lt;/code&gt; pasado al &amp;uacute;nico argumento de &lt;code&gt;filterB&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="51f8bfe75335d793eeba7a8a459bb7388dddda84" translate="yes" xml:space="preserve">
          <source>In this case, two different values for &lt;code&gt;class&lt;/code&gt; are defined:</source>
          <target state="translated">En este caso, se definen dos valores diferentes para la &lt;code&gt;class&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5a41e15d26b4745e4e15ab1dd537dc8ed976bef4" translate="yes" xml:space="preserve">
          <source>In this case, using the &lt;code&gt;watch&lt;/code&gt; option allows us to perform an asynchronous operation (accessing an API), limit how often we perform that operation, and set intermediary states until we get a final answer. None of that would be possible with a computed property.</source>
          <target state="translated">En este caso, usar la opci&amp;oacute;n &lt;code&gt;watch&lt;/code&gt; nos permite realizar una operaci&amp;oacute;n as&amp;iacute;ncrona (acceder a una API), limitar la frecuencia con la que realizamos esa operaci&amp;oacute;n y establecer estados intermedios hasta obtener una respuesta final. Nada de eso ser&amp;iacute;a posible con una propiedad calculada.</target>
        </trans-unit>
        <trans-unit id="c77863cfdbda9f76e5977da8ad51a7454c3913a0" translate="yes" xml:space="preserve">
          <source>In this component, all descendants of &lt;code&gt;&amp;lt;google-map&amp;gt;&lt;/code&gt; needed access to a &lt;code&gt;getMap&lt;/code&gt; method, in order to know which map to interact with. Unfortunately, using the &lt;code&gt;$parent&lt;/code&gt; property didn&amp;rsquo;t scale well to more deeply nested components. That&amp;rsquo;s where dependency injection can be useful, using two new instance options: &lt;code&gt;provide&lt;/code&gt; and &lt;code&gt;inject&lt;/code&gt;.</source>
          <target state="translated">En este componente, todos los descendientes de &lt;code&gt;&amp;lt;google-map&amp;gt;&lt;/code&gt; necesitaban acceso a un m&amp;eacute;todo &lt;code&gt;getMap&lt;/code&gt; para saber con qu&amp;eacute; mapa interactuar. Desafortunadamente, el uso de la propiedad &lt;code&gt;$parent&lt;/code&gt; no se ampli&amp;oacute; bien a componentes anidados m&amp;aacute;s profundamente. Ah&amp;iacute; es donde la inyecci&amp;oacute;n de dependencias puede ser &amp;uacute;til, utilizando dos nuevas opciones de instancia: &lt;code&gt;provide&lt;/code&gt; e &lt;code&gt;inject&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="87c32991080d62b6805604f45e74c2b9dbeebfae" translate="yes" xml:space="preserve">
          <source>In this example, we&amp;rsquo;ve chosen to name the object containing all our slot props &lt;code&gt;slotProps&lt;/code&gt;, but you can use any name you like.</source>
          <target state="translated">En este ejemplo, hemos elegido nombrar el objeto que contiene todos nuestros accesorios de tragamonedas &lt;code&gt;slotProps&lt;/code&gt; , pero puedes usar el nombre que quieras.</target>
        </trans-unit>
        <trans-unit id="2fe86abd2c9033c394d4520eeee5520850f8fc84" translate="yes" xml:space="preserve">
          <source>In this example, when &lt;code&gt;eventName&lt;/code&gt;&amp;lsquo;s value is &lt;code&gt;&quot;focus&quot;&lt;/code&gt;, &lt;code&gt;v-on:[eventName]&lt;/code&gt; will be equivalent to &lt;code&gt;v-on:focus&lt;/code&gt;.</source>
          <target state="translated">En este ejemplo, cuando el valor de &lt;code&gt;eventName&lt;/code&gt; es &lt;code&gt;&quot;focus&quot;&lt;/code&gt; , &lt;code&gt;v-on:[eventName]&lt;/code&gt; ser&amp;aacute; equivalente a &lt;code&gt;v-on:focus&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f0f426e265453130f5824fc7740883c382b44aac" translate="yes" xml:space="preserve">
          <source>In-template expressions are very convenient, but they are meant for simple operations. Putting too much logic in your templates can make them bloated and hard to maintain. For example:</source>
          <target state="translated">Las expresiones dentro de la plantilla son muy convenientes,pero están pensadas para operaciones sencillas.Poner demasiada lógica en sus plantillas puede hacerlas hinchadas y difíciles de mantener.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="14f1365ed8291193e8cace94a5ade677414a902d" translate="yes" xml:space="preserve">
          <source>Individual nodes</source>
          <target state="translated">Nodos individuales</target>
        </trans-unit>
        <trans-unit id="62ac95bcfcaea7ee52c78bc13557436b1b7e8b9e" translate="yes" xml:space="preserve">
          <source>Information for React Developers</source>
          <target state="translated">Información para los desarrolladores de React</target>
        </trans-unit>
        <trans-unit id="a44289ee2d1bd2c3982f79cb3d372150789f0e39" translate="yes" xml:space="preserve">
          <source>Inline Templates</source>
          <target state="translated">Plantillas en línea</target>
        </trans-unit>
        <trans-unit id="d6a0f79f1797a1db2dda5bb9c7106c3808038d31" translate="yes" xml:space="preserve">
          <source>Inside &lt;code&gt;v-for&lt;/code&gt; blocks we have full access to parent scope properties. &lt;code&gt;v-for&lt;/code&gt; also supports an optional second argument for the index of the current item.</source>
          <target state="translated">Dentro &lt;code&gt;v-for&lt;/code&gt; bloques v-for tenemos acceso completo a las propiedades del alcance principal. &lt;code&gt;v-for&lt;/code&gt; tambi&amp;eacute;n admite un segundo argumento opcional para el &amp;iacute;ndice del elemento actual.</target>
        </trans-unit>
        <trans-unit id="df082a453d9989c585680725b67df591a35ff7cd" translate="yes" xml:space="preserve">
          <source>Install a Vue.js plugin. If the plugin is an Object, it must expose an &lt;code&gt;install&lt;/code&gt; method. If it is a function itself, it will be treated as the install method. The install method will be called with Vue as the argument.</source>
          <target state="translated">Instale un complemento de Vue.js. Si el complemento es un objeto, debe exponer un m&amp;eacute;todo de &lt;code&gt;install&lt;/code&gt; . Si es una funci&amp;oacute;n en s&amp;iacute;, se tratar&amp;aacute; como el m&amp;eacute;todo de instalaci&amp;oacute;n. El m&amp;eacute;todo de instalaci&amp;oacute;n se llamar&amp;aacute; con Vue como argumento.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="76cfe08fef21bde292ada7bf7c0aed2cb8221c4a" translate="yes" xml:space="preserve">
          <source>Instance DOM Options</source>
          <target state="translated">Opciones de DOM de la instancia</target>
        </trans-unit>
        <trans-unit id="ff364c35cc3bd1adde1c021645e9ea7d4cfa6d27" translate="yes" xml:space="preserve">
          <source>Instance Lifecycle Hooks</source>
          <target state="translated">Ganchos del ciclo de vida de la instancia</target>
        </trans-unit>
        <trans-unit id="973fbc314de18d3a6034820e1c145f308866aa0a" translate="yes" xml:space="preserve">
          <source>Instance Methods / Data</source>
          <target state="translated">Métodos de instancia/Datos</target>
        </trans-unit>
        <trans-unit id="072a5ac49177533e4f02b944ecefcab1e2a8405f" translate="yes" xml:space="preserve">
          <source>Instance Methods / Events</source>
          <target state="translated">Métodos de instancia/Eventos</target>
        </trans-unit>
        <trans-unit id="217d7335931d2bbee9b9778f9ae71c201b5b2ba6" translate="yes" xml:space="preserve">
          <source>Instance Methods / Lifecycle</source>
          <target state="translated">Métodos de instancia/Ciclo de vida</target>
        </trans-unit>
        <trans-unit id="227bff69876b172aeee6752f9b003b6b9627ce6c" translate="yes" xml:space="preserve">
          <source>Instance Properties</source>
          <target state="translated">Propiedades de la Instancia</target>
        </trans-unit>
        <trans-unit id="b4f963982241acc7a523f3640f34c5d31eeeb04c" translate="yes" xml:space="preserve">
          <source>Instead of a computed property, we can define the same function as a method. For the end result, the two approaches are indeed exactly the same. However, the difference is that &lt;strong&gt;computed properties are cached based on their reactive dependencies.&lt;/strong&gt; A computed property will only re-evaluate when some of its reactive dependencies have changed. This means as long as &lt;code&gt;message&lt;/code&gt; has not changed, multiple access to the &lt;code&gt;reversedMessage&lt;/code&gt; computed property will immediately return the previously computed result without having to run the function again.</source>
          <target state="translated">En lugar de una propiedad calculada, podemos definir la misma funci&amp;oacute;n como m&amp;eacute;todo. Para el resultado final, los dos enfoques son exactamente iguales. Sin embargo, la diferencia es que las &lt;strong&gt;propiedades calculadas se almacenan en cach&amp;eacute; en funci&amp;oacute;n de sus dependencias reactivas. &lt;/strong&gt;Una propiedad calculada solo se volver&amp;aacute; a evaluar cuando algunas de sus dependencias reactivas hayan cambiado. Esto significa que mientras el &lt;code&gt;message&lt;/code&gt; no haya cambiado, el acceso m&amp;uacute;ltiple a la propiedad calculada &lt;code&gt;reversedMessage&lt;/code&gt; devolver&amp;aacute; inmediatamente el resultado calculado previamente sin tener que ejecutar la funci&amp;oacute;n nuevamente.</target>
        </trans-unit>
        <trans-unit id="1b4b07b3bfde3c37c88bc87409ab0932e79deaf1" translate="yes" xml:space="preserve">
          <source>Instead of binding directly to a method name, we can also use methods in an inline JavaScript statement:</source>
          <target state="translated">En lugar de vincularse directamente a un nombre de método,también podemos usar métodos en una declaración de JavaScript en línea:</target>
        </trans-unit>
        <trans-unit id="e8cfda798ff1c2483b2312e929e673f1a5762a04" translate="yes" xml:space="preserve">
          <source>Instead of hard-coding the content for each todo, we can let the parent component take control by making every todo a slot, then binding &lt;code&gt;todo&lt;/code&gt; as a slot prop:</source>
          <target state="translated">En lugar de codificar el contenido de cada tarea, podemos dejar que el componente principal tome el control haciendo de cada tarea una ranura y luego vinculando &lt;code&gt;todo&lt;/code&gt; como un accesorio de ranura:</target>
        </trans-unit>
        <trans-unit id="ce7ba8338e1ddfeb030dce1f2c4b233f9f6e562c" translate="yes" xml:space="preserve">
          <source>Instead of using this interface to watch events emitted by the store itself (e.g. &lt;code&gt;store.on('mutation', callback)&lt;/code&gt;), a new method &lt;code&gt;store.subscribe&lt;/code&gt; is introduced. Typical usage inside a plugin would be:</source>
          <target state="translated">En lugar de utilizar esta interfaz para observar los eventos emitidos por la propia tienda (por ejemplo, &lt;code&gt;store.on('mutation', callback)&lt;/code&gt; ), se introduce un nuevo m&amp;eacute;todo &lt;code&gt;store.subscribe&lt;/code&gt; . El uso t&amp;iacute;pico dentro de un complemento ser&amp;iacute;a:</target>
        </trans-unit>
        <trans-unit id="c042f3d9b71b32db250543be269d410c99d13527" translate="yes" xml:space="preserve">
          <source>Instead of:</source>
          <target state="translated">En lugar de:</target>
        </trans-unit>
        <trans-unit id="c45f60db0ef01bd679b8e4fcc3944f81d86bbcba" translate="yes" xml:space="preserve">
          <source>Instead, &lt;strong&gt;a component&amp;rsquo;s &lt;code&gt;data&lt;/code&gt; option must be a function&lt;/strong&gt;, so that each instance can maintain an independent copy of the returned data object:</source>
          <target state="translated">En cambio, &lt;strong&gt;la opci&amp;oacute;n de &lt;code&gt;data&lt;/code&gt; un componente debe ser una funci&amp;oacute;n&lt;/strong&gt; , de modo que cada instancia pueda mantener una copia independiente del objeto de datos devuelto:</target>
        </trans-unit>
        <trans-unit id="de7d48ff36cd012d479333deddf79964e9f6ef8d" translate="yes" xml:space="preserve">
          <source>Instead, retrieve reactive data directly.</source>
          <target state="translated">En lugar de eso,recupera los datos reactivos directamente.</target>
        </trans-unit>
        <trans-unit id="3f19e4bbba14c8cf11229dc99c18e65e5c769ff2" translate="yes" xml:space="preserve">
          <source>Instead, we recommend combining the two prefixes into &lt;code&gt;$_&lt;/code&gt;, as a convention for user-defined private properties that guarantee no conflicts with Vue.</source>
          <target state="translated">En su lugar, recomendamos combinar los dos prefijos en &lt;code&gt;$_&lt;/code&gt; , como una convenci&amp;oacute;n para las propiedades privadas definidas por el usuario que garantizan que no haya conflictos con Vue.</target>
        </trans-unit>
        <trans-unit id="c287d7ed2127cbc1824f61b424108dfdd71928ca" translate="yes" xml:space="preserve">
          <source>Instead, we want each component instance to only manage its own data. For that to happen, each instance must generate a unique data object. In JavaScript, this can be accomplished by returning the object in a function:</source>
          <target state="translated">En cambio,queremos que cada instancia de componente sólo gestione sus propios datos.Para que eso suceda,cada instancia debe generar un objeto de datos único.En JavaScript,esto se puede lograr devolviendo el objeto en una función:</target>
        </trans-unit>
        <trans-unit id="ce0cc627a5064aba30be950b8ad2481ae6f54dff" translate="yes" xml:space="preserve">
          <source>Instead, you must always specify the name of the slot if you wish to use the shorthand:</source>
          <target state="translated">En cambio,siempre debe especificar el nombre de la ranura si desea utilizar la taquigrafía:</target>
        </trans-unit>
        <trans-unit id="e8afed2c977a300920d4774ed7aaf9deb5512321" translate="yes" xml:space="preserve">
          <source>Instead, you should use an array of &lt;strong&gt;objects&lt;/strong&gt; so that &lt;code&gt;v-model&lt;/code&gt; can update the field on the object. For example:</source>
          <target state="translated">En su lugar, debe usar una matriz de &lt;strong&gt;objetos&lt;/strong&gt; para que &lt;code&gt;v-model&lt;/code&gt; pueda actualizar el campo en el objeto. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="379c57f76110aace6f90c62a627b81f0dbbb50b8" translate="yes" xml:space="preserve">
          <source>Integrating 3rd-Party Routers</source>
          <target state="translated">La integración de los routers de tercera parte</target>
        </trans-unit>
        <trans-unit id="17e18e17ef79745c1f295aa1481626993cd060bc" translate="yes" xml:space="preserve">
          <source>Interestingly, there are quite a few similarities in how Angular and Vue are addressing these AngularJS issues.</source>
          <target state="translated">Curiosamente,hay bastantes similitudes en la forma en que Angular y Vue están abordando estos temas de AngularJS.</target>
        </trans-unit>
        <trans-unit id="a02ab300dc1e2d3aba3bbbb2499900bcfcafa6b5" translate="yes" xml:space="preserve">
          <source>Internally, scoped slots work by wrapping your slot content in a function passed a single argument:</source>
          <target state="translated">Internamente,las ranuras de alcance funcionan envolviendo el contenido de la ranura en una función que pasa un solo argumento:</target>
        </trans-unit>
        <trans-unit id="6a9858c9bf3149456595f98943cf88e41039822e" translate="yes" xml:space="preserve">
          <source>Interpolation</source>
          <target state="translated">Interpolation</target>
        </trans-unit>
        <trans-unit id="8c3512fba6689d1150362df7589fdd0259a7670c" translate="yes" xml:space="preserve">
          <source>Interpolation on textareas (&lt;code&gt;&amp;lt;textarea&amp;gt;{{text}}&amp;lt;/textarea&amp;gt;&lt;/code&gt;) won't work. Use &lt;code&gt;v-model&lt;/code&gt; instead.</source>
          <target state="translated">La interpolaci&amp;oacute;n en &amp;aacute;reas de texto ( &lt;code&gt;&amp;lt;textarea&amp;gt;{{text}}&amp;lt;/textarea&amp;gt;&lt;/code&gt; ) no funcionar&amp;aacute;. Utilice &lt;code&gt;v-model&lt;/code&gt; en su lugar.</target>
        </trans-unit>
        <trans-unit id="74ebae54b757a56e2bc6baaef1874a08b06640a9" translate="yes" xml:space="preserve">
          <source>Interpolation within Attributes &lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">Se &lt;sup&gt;elimin&amp;oacute; la&lt;/sup&gt; interpolaci&amp;oacute;n dentro de los atributos&lt;sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="fb6efaa267240ec6e8121cc0f552cf518066ff57" translate="yes" xml:space="preserve">
          <source>Interpolation within attributes is no longer valid. For example:</source>
          <target state="translated">La interpolación dentro de los atributos ya no es válida.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="10efc8300e4de32a0bfa767fd16f85f0fca31378" translate="yes" xml:space="preserve">
          <source>Interpolations</source>
          <target state="translated">Interpolations</target>
        </trans-unit>
        <trans-unit id="b4e6a310890f62289340d7802703b8c2586c6d86" translate="yes" xml:space="preserve">
          <source>Intro</source>
          <target state="translated">Intro</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="52da9e9435184a9a9be23be1c62462bd7a0b062b" translate="yes" xml:space="preserve">
          <source>It also makes it much easier for designers and less experienced developers to parse and contribute to the codebase.</source>
          <target state="translated">También hace que sea mucho más fácil para los diseñadores y desarrolladores menos experimentados analizar y contribuir a la base de código.</target>
        </trans-unit>
        <trans-unit id="242a4787e446f757f3ac8fde1ce7050c81ebb1cc" translate="yes" xml:space="preserve">
          <source>It can also be used to force replacement of an element/component instead of reusing it. This can be useful when you want to:</source>
          <target state="translated">También puede utilizarse para forzar la sustitución de un elemento/componente en lugar de reutilizarlo.Esto puede ser útil cuando se quiera:</target>
        </trans-unit>
        <trans-unit id="bf94cb95d2a6204ed6e671a125bae5746aa13ec0" translate="yes" xml:space="preserve">
          <source>It cannot generate projects from user-built &lt;a href=&quot;https://cli.vuejs.org/guide/plugins-and-presets.html#presets&quot;&gt;presets&lt;/a&gt;, which can be especially useful for enterprise environments with pre-established conventions.</source>
          <target state="translated">No puede generar proyectos a partir de &lt;a href=&quot;https://cli.vuejs.org/guide/plugins-and-presets.html#presets&quot;&gt;ajustes preestablecidos&lt;/a&gt; creados por el usuario , lo que puede resultar especialmente &amp;uacute;til para entornos empresariales con convenciones preestablecidas.</target>
        </trans-unit>
        <trans-unit id="37750b9b71f6bf6ac1b868dd8c8eae2a17dab1cf" translate="yes" xml:space="preserve">
          <source>It depends on a few factors:</source>
          <target state="translated">Depende de algunos factores:</target>
        </trans-unit>
        <trans-unit id="70b676c863532ffe7d78b42611fe7b4038b9d1dc" translate="yes" xml:space="preserve">
          <source>It does not allow any configuration during project generation, while Vue CLI runs on top of an upgradeable runtime dependency that can be extended via &lt;a href=&quot;https://cli.vuejs.org/guide/plugins-and-presets.html#plugins&quot;&gt;plugins&lt;/a&gt;.</source>
          <target state="translated">No permite ninguna configuraci&amp;oacute;n durante la generaci&amp;oacute;n del proyecto, mientras que Vue CLI se ejecuta sobre una dependencia de tiempo de ejecuci&amp;oacute;n actualizable que se puede extender a trav&amp;eacute;s de &lt;a href=&quot;https://cli.vuejs.org/guide/plugins-and-presets.html#plugins&quot;&gt;complementos&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="240dd640eed272f9ee3a7566a0beee5ed35abc4a" translate="yes" xml:space="preserve">
          <source>It generally takes more time to navigate through nested sub-directories, than scrolling through a single &lt;code&gt;components&lt;/code&gt; directory.</source>
          <target state="translated">Por lo general, se necesita m&amp;aacute;s tiempo para navegar por los subdirectorios anidados que desplazarse por un &amp;uacute;nico directorio de &lt;code&gt;components&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="23f753667cec6acdcb632b79682184c7b7b2e7aa" translate="yes" xml:space="preserve">
          <source>It is a very common need to call &lt;code&gt;event.preventDefault()&lt;/code&gt; or &lt;code&gt;event.stopPropagation()&lt;/code&gt; inside event handlers. Although we can do this easily inside methods, it would be better if the methods can be purely about data logic rather than having to deal with DOM event details.</source>
          <target state="translated">Es una necesidad muy com&amp;uacute;n llamar a &lt;code&gt;event.preventDefault()&lt;/code&gt; o &lt;code&gt;event.stopPropagation()&lt;/code&gt; dentro de los controladores de eventos. Aunque podemos hacer esto f&amp;aacute;cilmente dentro de los m&amp;eacute;todos, ser&amp;iacute;a mejor si los m&amp;eacute;todos pudieran ser puramente sobre l&amp;oacute;gica de datos en lugar de tener que lidiar con detalles de eventos DOM.</target>
        </trans-unit>
        <trans-unit id="4e8708ee403dc8bba50752b03a6d6d4b4352acb0" translate="yes" xml:space="preserve">
          <source>It is also possible to add an &amp;ldquo;else block&amp;rdquo; with &lt;code&gt;v-else&lt;/code&gt;:</source>
          <target state="translated">Tambi&amp;eacute;n es posible agregar un &quot;bloque else&quot; con &lt;code&gt;v-else&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b1e03924ee6970dca117928a311e1533f2014100" translate="yes" xml:space="preserve">
          <source>It is no longer supported to have &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt;s with the same name in the same template. When a slot is rendered it is &amp;ldquo;used up&amp;rdquo; and cannot be rendered elsewhere in the same render tree. If you must render the same content in multiple places, pass that content as a prop.</source>
          <target state="translated">Ya no se admite tener &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; s con el mismo nombre en la misma plantilla. Cuando se renderiza una ranura, se &amp;ldquo;agota&amp;rdquo; y no se puede renderizar en ning&amp;uacute;n otro lugar del mismo &amp;aacute;rbol de renderizaci&amp;oacute;n. Si debe renderizar el mismo contenido en varios lugares, pase ese contenido como un accesorio.</target>
        </trans-unit>
        <trans-unit id="d9093e211b6a6e41ed8691587734eee35acd8952" translate="yes" xml:space="preserve">
          <source>It is now prohibited to replace a component instance&amp;rsquo;s root $data. This prevents some edge cases in the reactivity system and makes the component state more predictable (especially with type-checking systems).</source>
          <target state="translated">Ahora est&amp;aacute; prohibido reemplazar la ra&amp;iacute;z $ data de una instancia de componente. Esto evita algunos casos extremos en el sistema de reactividad y hace que el estado del componente sea m&amp;aacute;s predecible (especialmente con sistemas de verificaci&amp;oacute;n de tipos).</target>
        </trans-unit>
        <trans-unit id="7ae415c6af2657c64c911e26e414175ec588acbe" translate="yes" xml:space="preserve">
          <source>It is often a good idea to bind to a style object directly so that the template is cleaner:</source>
          <target state="translated">A menudo es una buena idea atarse a un objeto de estilo directamente para que la plantilla sea más limpia:</target>
        </trans-unit>
        <trans-unit id="1576748fb05ab8ce1c2e6c48f332f0a5704cb1b7" translate="yes" xml:space="preserve">
          <source>It is often overlooked that the source of truth in Vue applications is the raw &lt;code&gt;data&lt;/code&gt; object - a Vue instance only proxies access to it. Therefore, if you have a piece of state that should be shared by multiple instances, you can share it by identity:</source>
          <target state="translated">A menudo se pasa por alto que la fuente de la verdad en las aplicaciones de Vue es el objeto de &lt;code&gt;data&lt;/code&gt; procesar : una instancia de Vue solo accede a &amp;eacute;l mediante proxy. Por lo tanto, si tiene un fragmento de estado que deben compartir varias instancias, puede compartirlo por identidad:</target>
        </trans-unit>
        <trans-unit id="41c09ac650c82070b83c3fbdfde0270b1b2629a2" translate="yes" xml:space="preserve">
          <source>It is recommended to provide a &lt;code&gt;key&lt;/code&gt; attribute with &lt;code&gt;v-for&lt;/code&gt; whenever possible, unless the iterated DOM content is simple, or you are intentionally relying on the default behavior for performance gains.</source>
          <target state="translated">Se recomienda proporcionar un atributo &lt;code&gt;key&lt;/code&gt; con &lt;code&gt;v-for&lt;/code&gt; siempre que sea ​​posible, a menos que el contenido del DOM iterado sea simple o que conf&amp;iacute;e intencionalmente en el comportamiento predeterminado para mejorar el rendimiento.</target>
        </trans-unit>
        <trans-unit id="158301256c28a9020989b897a8c306e76ca398cb" translate="yes" xml:space="preserve">
          <source>It mostly works well, but the delayed state updates can cause strange behavior. For example, click on the &lt;code&gt;Result&lt;/code&gt; tab and try entering &lt;code&gt;9.999&lt;/code&gt; into one of those inputs. When the input loses focus, its value will update to &lt;code&gt;$10.00&lt;/code&gt;. When looking at the calculated total however, you&amp;rsquo;ll see that &lt;code&gt;9.999&lt;/code&gt; is what&amp;rsquo;s stored in our data. The version of reality that the user sees is out of sync!</source>
          <target state="translated">En general, funciona bien, pero las actualizaciones de estado demoradas pueden causar un comportamiento extra&amp;ntilde;o. Por ejemplo, haga clic en la pesta&amp;ntilde;a &lt;code&gt;Result&lt;/code&gt; ado e intente ingresar &lt;code&gt;9.999&lt;/code&gt; en una de esas entradas. Cuando la entrada pierde el foco, su valor se actualizar&amp;aacute; a &lt;code&gt;$10.00&lt;/code&gt; . Sin embargo, al mirar el total calculado, ver&amp;aacute; que &lt;code&gt;9.999&lt;/code&gt; es lo que se almacena en nuestros datos. &amp;iexcl;La versi&amp;oacute;n de la realidad que ve el usuario no est&amp;aacute; sincronizada!</target>
        </trans-unit>
        <trans-unit id="5c7b220831f2244cc3f3b0618d0e11be1b6ee123" translate="yes" xml:space="preserve">
          <source>It only offers a single template that assumes you&amp;rsquo;re building a single-page application, while Vue offers a wide variety of default options for various purposes and build systems.</source>
          <target state="translated">Solo ofrece una plantilla &amp;uacute;nica que asume que est&amp;aacute; creando una aplicaci&amp;oacute;n de una sola p&amp;aacute;gina, mientras que Vue ofrece una amplia variedad de opciones predeterminadas para varios prop&amp;oacute;sitos y sistemas de construcci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d429d77b592d7a12031c03e84167b80ce44e01ac" translate="yes" xml:space="preserve">
          <source>It requires saving the &lt;code&gt;picker&lt;/code&gt; to the component instance, when it&amp;rsquo;s possible that only lifecycle hooks need access to it. This isn&amp;rsquo;t terrible, but it could be considered clutter.</source>
          <target state="translated">Requiere guardar el &lt;code&gt;picker&lt;/code&gt; en la instancia del componente, cuando es posible que solo los ganchos del ciclo de vida necesiten acceder a &amp;eacute;l. Esto no es terrible, pero podr&amp;iacute;a considerarse un desorden.</target>
        </trans-unit>
        <trans-unit id="2b6375c65084a2fbe49aa4574ab7168511258809" translate="yes" xml:space="preserve">
          <source>It should be noted that &lt;strong&gt;this limitation does &lt;em&gt;not&lt;/em&gt; apply if you are using string templates from one of the following sources&lt;/strong&gt;:</source>
          <target state="translated">Cabe se&amp;ntilde;alar que &lt;strong&gt;esta limitaci&amp;oacute;n no &lt;em&gt;se&lt;/em&gt; aplica si est&amp;aacute; utilizando plantillas de cadenas de una de las siguientes fuentes&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="59833298d090a415397bceadf5ff0bd3a66b0de9" translate="yes" xml:space="preserve">
          <source>It will render:</source>
          <target state="translated">Se rendirá:</target>
        </trans-unit>
        <trans-unit id="e8131a6805d411d3c8871b6a4ec5d84d6d47f8b3" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s actually possible to transition between any number of elements, either by using multiple &lt;code&gt;v-if&lt;/code&gt;s or binding a single element to a dynamic property. For example:</source>
          <target state="translated">De hecho, es posible realizar la transici&amp;oacute;n entre cualquier n&amp;uacute;mero de elementos, ya sea utilizando m&amp;uacute;ltiples &lt;code&gt;v-if&lt;/code&gt; s o vinculando un solo elemento a una propiedad din&amp;aacute;mica. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="1f0eec334e7b1ca80024f1af665b1bef3cd4f2a0" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s also a good idea to explicitly add &lt;code&gt;v-bind:css=&quot;false&quot;&lt;/code&gt; for JavaScript-only transitions so that Vue can skip the CSS detection. This also prevents CSS rules from accidentally interfering with the transition.</source>
          <target state="translated">Tambi&amp;eacute;n es una buena idea agregar expl&amp;iacute;citamente &lt;code&gt;v-bind:css=&quot;false&quot;&lt;/code&gt; para las transiciones solo de JavaScript para que Vue pueda omitir la detecci&amp;oacute;n de CSS. Esto tambi&amp;eacute;n evita que las reglas CSS interfieran accidentalmente con la transici&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="ea8bac071f56eff3c599037448c4745e3f78f107" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s common for an app to be organized into a tree of nested components:</source>
          <target state="translated">Es com&amp;uacute;n que una aplicaci&amp;oacute;n se organice en un &amp;aacute;rbol de componentes anidados:</target>
        </trans-unit>
        <trans-unit id="529381524bf490d0fa30c365c3a6643e1ab87406" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s easier to locate the handler function implementations within your JS code by skimming the HTML template.</source>
          <target state="translated">Es m&amp;aacute;s f&amp;aacute;cil ubicar las implementaciones de la funci&amp;oacute;n del controlador dentro de su c&amp;oacute;digo JS al hojear la plantilla HTML.</target>
        </trans-unit>
        <trans-unit id="3cb4d6d25e874e731b1a5bd3fcf3592c111ac7d3" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s easy to toggle the presence of an element, too:</source>
          <target state="translated">Tambi&amp;eacute;n es f&amp;aacute;cil alternar la presencia de un elemento:</target>
        </trans-unit>
        <trans-unit id="e8a1b4e2622ff4412a28418661a05714360fa046" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s important to note that many of these limitations are intentional design decisions made by the create-react-app team and they do have their advantages. For example, as long as your project&amp;rsquo;s needs are very simple and you never need to &amp;ldquo;eject&amp;rdquo; to customize your build process, you&amp;rsquo;ll be able to update it as a dependency. You can read more about the &lt;a href=&quot;https://github.com/facebookincubator/create-react-app#philosophy&quot;&gt;differing philosophy here&lt;/a&gt;.</source>
          <target state="translated">Es importante tener en cuenta que muchas de estas limitaciones son decisiones de dise&amp;ntilde;o intencionales tomadas por el equipo de creaci&amp;oacute;n-reacci&amp;oacute;n-aplicaci&amp;oacute;n y tienen sus ventajas. Por ejemplo, siempre que las necesidades de su proyecto sean muy simples y nunca necesite &quot;expulsar&quot; para personalizar su proceso de compilaci&amp;oacute;n, podr&amp;aacute; actualizarlo como una dependencia. Puede leer m&amp;aacute;s sobre la &lt;a href=&quot;https://github.com/facebookincubator/create-react-app#philosophy&quot;&gt;filosof&amp;iacute;a diferente aqu&amp;iacute;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="eba37741216bb34acb503b7bccb11a46196d44f7" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s important to note that you should never replace the original state object in your actions - the components and the store need to share reference to the same object in order for mutations to be observed.</source>
          <target state="translated">Es importante tener en cuenta que nunca debe reemplazar el objeto de estado original en sus acciones: los componentes y la tienda deben compartir referencias al mismo objeto para que se observen las mutaciones.</target>
        </trans-unit>
        <trans-unit id="471a1dd215ec1df9cced88727c09d955351467bb" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s rare that global components are ever referenced in JavaScript, so following a convention for JavaScript makes less sense.</source>
          <target state="translated">Es raro que alguna vez se haga referencia a componentes globales en JavaScript, por lo que seguir una convenci&amp;oacute;n para JavaScript tiene menos sentido.</target>
        </trans-unit>
        <trans-unit id="6dbbee3b3142d705f32e4ea9a33d016015abd4b0" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s recommended to wrap the entire contents in a new element, like this:</source>
          <target state="translated">Se recomienda envolver todo el contenido en un nuevo elemento, como este:</target>
        </trans-unit>
        <trans-unit id="fb69fc29789fe29cf276273312bfe243527744c9" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s sometimes useful to emit a specific value with an event. For example, we may want the &lt;code&gt;&amp;lt;blog-post&amp;gt;&lt;/code&gt; component to be in charge of how much to enlarge the text by. In those cases, we can use &lt;code&gt;$emit&lt;/code&gt;&amp;lsquo;s 2nd parameter to provide this value:</source>
          <target state="translated">A veces es &amp;uacute;til emitir un valor espec&amp;iacute;fico con un evento. Por ejemplo, es posible que queramos que el componente &lt;code&gt;&amp;lt;blog-post&amp;gt;&lt;/code&gt; est&amp;eacute; a cargo de cu&amp;aacute;nto agrandar el texto. En esos casos, podemos usar el segundo par&amp;aacute;metro de &lt;code&gt;$emit&lt;/code&gt; para proporcionar este valor:</target>
        </trans-unit>
        <trans-unit id="0e4779d05c5a545a6bd2f3323d3fe430a37f5d7b" translate="yes" xml:space="preserve">
          <source>JSX</source>
          <target state="translated">JSX</target>
        </trans-unit>
        <trans-unit id="acc00892c117ef61e4f9ab3d9331cb95e0f00caa" translate="yes" xml:space="preserve">
          <source>JSX vs Templates</source>
          <target state="translated">JSX vs.Plantillas</target>
        </trans-unit>
        <trans-unit id="de6da78717be0e5457a235494d2556f25b2595f3" translate="yes" xml:space="preserve">
          <source>JavaScript Hooks</source>
          <target state="translated">Ganchos de JavaScript</target>
        </trans-unit>
        <trans-unit id="b2bdc615d0b1e25db680b5ea62ca160d5e24612e" translate="yes" xml:space="preserve">
          <source>JavaScript&amp;rsquo;s native &lt;code&gt;.filter&lt;/code&gt; can also manage much more complex filtering operations, because you have access to the full power of JavaScript within computed properties. For example, if you wanted to find all active users and case-insensitively match against both their name and email:</source>
          <target state="translated">El &lt;code&gt;.filter&lt;/code&gt; nativo de JavaScript tambi&amp;eacute;n puede administrar operaciones de filtrado mucho m&amp;aacute;s complejas, porque tiene acceso a todo el poder de JavaScript dentro de las propiedades computadas. Por ejemplo, si desea encontrar todos los usuarios activos y hacer coincidir sin distinci&amp;oacute;n entre may&amp;uacute;sculas y min&amp;uacute;sculas tanto con su nombre como con su correo electr&amp;oacute;nico:</target>
        </trans-unit>
        <trans-unit id="be4bdcf0feb91c266b9ddb8530b4392dc9b7e35e" translate="yes" xml:space="preserve">
          <source>Join the Vue.js Community!</source>
          <target state="translated">Únete a la Comunidad Vue.js!</target>
        </trans-unit>
        <trans-unit id="61cbea5eb9c474841bbd881e5ab4ec7c34f644ee" translate="yes" xml:space="preserve">
          <source>Just like with HTML elements, it&amp;rsquo;s often useful to be able to pass content to a component, like this:</source>
          <target state="translated">Al igual que con los elementos HTML, a menudo es &amp;uacute;til poder pasar contenido a un componente, como este:</target>
        </trans-unit>
        <trans-unit id="027fca0ba6266bff1583f80f2ced47d62346398f" translate="yes" xml:space="preserve">
          <source>Just to support relatively little markup in a template:</source>
          <target state="translated">Sólo para soportar relativamente poco marcado en una plantilla:</target>
        </trans-unit>
        <trans-unit id="d66c8dcebdd2226f233aec952c13c29103045708" translate="yes" xml:space="preserve">
          <source>Keep in mind, however, that components built with this pattern are still inherently fragile. For example, imagine we add a new &lt;code&gt;&amp;lt;google-map-region&amp;gt;&lt;/code&gt; component and when &lt;code&gt;&amp;lt;google-map-markers&amp;gt;&lt;/code&gt; appears within that, it should only render markers that fall within that region:</source>
          <target state="translated">Sin embargo, tenga en cuenta que los componentes creados con este patr&amp;oacute;n siguen siendo inherentemente fr&amp;aacute;giles. Por ejemplo, imagine que agregamos un nuevo componente &lt;code&gt;&amp;lt;google-map-region&amp;gt;&lt;/code&gt; y cuando &lt;code&gt;&amp;lt;google-map-markers&amp;gt;&lt;/code&gt; aparezca dentro de &amp;eacute;l, solo deber&amp;iacute;a representar los marcadores que se encuentran dentro de esa regi&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="6da44efd57019ab966f7e6f60ef152a26f453f56" translate="yes" xml:space="preserve">
          <source>Key Codes</source>
          <target state="translated">Códigos clave</target>
        </trans-unit>
        <trans-unit id="c2970ed4e4bcc1bc09ed400bc881c877da7aa156" translate="yes" xml:space="preserve">
          <source>Key Modifiers</source>
          <target state="translated">Modificadores clave</target>
        </trans-unit>
        <trans-unit id="3e3436c44b271fc9f4ddc4a5694abe70d414be31" translate="yes" xml:space="preserve">
          <source>Keyed &lt;code&gt;v-for&lt;/code&gt;&lt;sup&gt;essential&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;v-for&lt;/code&gt; clave clave para &lt;sup&gt;esencial&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="c75c97df0a3fadad8262ee8e7d09b174b5374e8e" translate="yes" xml:space="preserve">
          <source>Keyed v-for</source>
          <target state="translated">Clave v-para</target>
        </trans-unit>
        <trans-unit id="9cf20628a323dc6f8efd78ac79c3f26ce8cbd3a6" translate="yes" xml:space="preserve">
          <source>Keys:</source>
          <target state="translated">Keys:</target>
        </trans-unit>
        <trans-unit id="bb23b6faea770d3a5e16178dbc59584678b24aa0" translate="yes" xml:space="preserve">
          <source>Knockout</source>
          <target state="translated">Knockout</target>
        </trans-unit>
        <trans-unit id="bc0968409752cc62e7fa235b2d725b7b8c2c6eb5" translate="yes" xml:space="preserve">
          <source>Knockout was a pioneer in the MVVM and dependency tracking spaces and its reactivity system is very similar to Vue&amp;rsquo;s. Its &lt;a href=&quot;http://knockoutjs.com/documentation/browser-support.html&quot;&gt;browser support&lt;/a&gt; is also very impressive considering everything it does, with support back to IE6! Vue on the other hand only supports IE9+.</source>
          <target state="translated">Knockout fue pionero en MVVM y los espacios de seguimiento de dependencias y su sistema de reactividad es muy similar al de Vue. Su &lt;a href=&quot;http://knockoutjs.com/documentation/browser-support.html&quot;&gt;compatibilidad con el navegador&lt;/a&gt; tambi&amp;eacute;n es muy impresionante teniendo en cuenta todo lo que hace, &amp;iexcl;con compatibilidad con IE6! Vue, por otro lado, solo es compatible con IE9 +.</target>
        </trans-unit>
        <trans-unit id="a8d8aa2835fc3129b6920d079159549c156fa63c" translate="yes" xml:space="preserve">
          <source>Large applications can often grow in complexity, due to multiple pieces of state scattered across many components and the interactions between them. To solve this problem, Vue offers &lt;a href=&quot;https://github.com/vuejs/vuex&quot;&gt;vuex&lt;/a&gt;: our own Elm-inspired state management library. It even integrates into &lt;a href=&quot;https://github.com/vuejs/vue-devtools&quot;&gt;vue-devtools&lt;/a&gt;, providing zero-setup access to &lt;a href=&quot;https://raw.githubusercontent.com/vuejs/vue-devtools/master/media/demo.gif&quot;&gt;time travel debugging&lt;/a&gt;.</source>
          <target state="translated">Las aplicaciones grandes a menudo pueden aumentar en complejidad, debido a m&amp;uacute;ltiples partes de estado dispersas en muchos componentes y las interacciones entre ellos. Para resolver este problema, Vue ofrece &lt;a href=&quot;https://github.com/vuejs/vuex&quot;&gt;vuex&lt;/a&gt; : nuestra propia biblioteca de administraci&amp;oacute;n de estados inspirada en Elm. Incluso se integra en &lt;a href=&quot;https://github.com/vuejs/vue-devtools&quot;&gt;vue-devtools&lt;/a&gt; , proporcionando acceso sin configuraci&amp;oacute;n a la &lt;a href=&quot;https://raw.githubusercontent.com/vuejs/vue-devtools/master/media/demo.gif&quot;&gt;depuraci&amp;oacute;n de viajes en el tiempo&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="72406d3bbbb2f67e5c1e70370160f257ae0ba129" translate="yes" xml:space="preserve">
          <source>Lastly, the styling in Vue&amp;rsquo;s single-file components is very flexible. Through &lt;a href=&quot;https://github.com/vuejs/vue-loader&quot;&gt;vue-loader&lt;/a&gt;, you can use any preprocessor, post-processor, and even deep integration with &lt;a href=&quot;https://vue-loader.vuejs.org/en/features/css-modules.html&quot;&gt;CSS Modules&lt;/a&gt; &amp;ndash; all within the &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">Por &amp;uacute;ltimo, el estilo en los componentes de un solo archivo de Vue es muy flexible. A trav&amp;eacute;s de &lt;a href=&quot;https://github.com/vuejs/vue-loader&quot;&gt;vue-loader&lt;/a&gt; , puede usar cualquier preprocesador, posprocesador e incluso una integraci&amp;oacute;n profunda con los &lt;a href=&quot;https://vue-loader.vuejs.org/en/features/css-modules.html&quot;&gt;m&amp;oacute;dulos CSS&lt;/a&gt; , todo dentro del elemento &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c1e35e7e7dfbb463a1648c90eafb0e342703312" translate="yes" xml:space="preserve">
          <source>Latest stable version: 2.6.10</source>
          <target state="translated">Última versión estable:2.6.10</target>
        </trans-unit>
        <trans-unit id="be0c59519c5e2b5fe13b0f7ff4bf498d719b4a7e" translate="yes" xml:space="preserve">
          <source>Learn more about dependency injection in &lt;a href=&quot;../api/index#provide-inject&quot;&gt;the API doc&lt;/a&gt;.</source>
          <target state="translated">Obtenga m&amp;aacute;s informaci&amp;oacute;n sobre la inyecci&amp;oacute;n de dependencias en &lt;a href=&quot;../api/index#provide-inject&quot;&gt;el documento de API&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="13b64b875178e4752802d8b808be11083d0726fa" translate="yes" xml:space="preserve">
          <source>Learning Curve</source>
          <target state="translated">Curva de aprendizaje</target>
        </trans-unit>
        <trans-unit id="0ccfd80d1c7d66dca3a0e6fc501777ae369d0d15" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s dive into a simple example where a &lt;code&gt;render&lt;/code&gt; function would be practical. Say you want to generate anchored headings:</source>
          <target state="translated">Veamos un ejemplo sencillo en el que una funci&amp;oacute;n de &lt;code&gt;render&lt;/code&gt; izaci&amp;oacute;n ser&amp;iacute;a pr&amp;aacute;ctica. Supongamos que desea generar encabezados anclados:</target>
        </trans-unit>
        <trans-unit id="8ae601ac39b42a0ce2f774ed4c117e44fb796a7c" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say you have a list of todos:</source>
          <target state="translated">Digamos que tienes una lista de todos:</target>
        </trans-unit>
        <trans-unit id="a0a681ce0e5b2dc3f8e587da2d3c87e6868974b2" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say you want to make a custom directive that allows you to pin elements to your page using fixed positioning. We could create a custom directive where the value updates the vertical positioning in pixels, like this:</source>
          <target state="translated">Supongamos que desea crear una directiva personalizada que le permita anclar elementos a su p&amp;aacute;gina utilizando un posicionamiento fijo. Podr&amp;iacute;amos crear una directiva personalizada donde el valor actualice el posicionamiento vertical en p&amp;iacute;xeles, as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="2a858d496553eddcff13ca95af4e5a9c35dff1f6" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say you&amp;rsquo;re building a file directory tree, like in Finder or File Explorer. You might have a &lt;code&gt;tree-folder&lt;/code&gt; component with this template:</source>
          <target state="translated">Supongamos que est&amp;aacute; creando un &amp;aacute;rbol de directorios de archivos, como en Finder o Explorador de archivos. Es posible que tenga un componente de &lt;code&gt;tree-folder&lt;/code&gt; con esta plantilla:</target>
        </trans-unit>
        <trans-unit id="58fd3b1b83cc7fc933d72fe934bdb6e534441281" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT License.</source>
          <target state="translated">Con licencia del MIT.</target>
        </trans-unit>
        <trans-unit id="963a6d001df804654ef3a7108a4f994e4ad3043d" translate="yes" xml:space="preserve">
          <source>Lifecycle Diagram</source>
          <target state="translated">Diagrama del ciclo de vida</target>
        </trans-unit>
        <trans-unit id="2404fc2fb7f08994c22ba2e88d94f0289f80699e" translate="yes" xml:space="preserve">
          <source>Lifecycle Events (in the order they are called)</source>
          <target state="translated">Eventos del Ciclo de Vida (en el orden en que se llaman)</target>
        </trans-unit>
        <trans-unit id="4e48f698aadae9546857e8298a5bcd17843d6036" translate="yes" xml:space="preserve">
          <source>Lifecycle Hooks</source>
          <target state="translated">Ganchos del ciclo de vida</target>
        </trans-unit>
        <trans-unit id="014bcd654c60d5250fad2123b073b9c0ac3340f6" translate="yes" xml:space="preserve">
          <source>Links</source>
          <target state="translated">Links</target>
        </trans-unit>
        <trans-unit id="34959794ca38ca0b2f99ab6b512cce0bcb1574fd" translate="yes" xml:space="preserve">
          <source>List Entering/Leaving Transitions</source>
          <target state="translated">Lista de transiciones de entrada/salida</target>
        </trans-unit>
        <trans-unit id="ec66c1c1aadebafa9aea3a9e5e78a70374186e6e" translate="yes" xml:space="preserve">
          <source>List Move Transitions</source>
          <target state="translated">Lista Mover las transiciones</target>
        </trans-unit>
        <trans-unit id="97c5ac00feef7e4e4dea6fbc37427502208da0a0" translate="yes" xml:space="preserve">
          <source>List Rendering</source>
          <target state="translated">Renderización de la lista</target>
        </trans-unit>
        <trans-unit id="66a9aa57e0afea8cd99a3f75a8c6d3489f047106" translate="yes" xml:space="preserve">
          <source>List Transitions</source>
          <target state="translated">Lista de transiciones</target>
        </trans-unit>
        <trans-unit id="78b30713ef8e682cdf6d1254269a44a2a34f3330" translate="yes" xml:space="preserve">
          <source>Listen for a custom event on the current vm. Events can be triggered by &lt;code&gt;vm.$emit&lt;/code&gt;. The callback will receive all the additional arguments passed into these event-triggering methods.</source>
          <target state="translated">Escuche un evento personalizado en la m&amp;aacute;quina virtual actual. Los eventos pueden ser activados por &lt;code&gt;vm.$emit&lt;/code&gt; . La devoluci&amp;oacute;n de llamada recibir&amp;aacute; todos los argumentos adicionales pasados ​​a estos m&amp;eacute;todos de activaci&amp;oacute;n de eventos.</target>
        </trans-unit>
        <trans-unit id="e49f77d4075cf41a76ef9beacb50d0f6b9aefcc0" translate="yes" xml:space="preserve">
          <source>Listen for a custom event, but only once. The listener will be removed once it triggers for the first time.</source>
          <target state="translated">Escuchen para un evento personalizado,pero sólo una vez.El oyente será eliminado una vez que se active por primera vez.</target>
        </trans-unit>
        <trans-unit id="43e6ad0a03b8b1a9446a11f0e19551c8b4dc800d" translate="yes" xml:space="preserve">
          <source>Listen for an event only once with &lt;code&gt;$once(eventName, eventHandler)&lt;/code&gt;</source>
          <target state="translated">Escuche un evento solo una vez con &lt;code&gt;$once(eventName, eventHandler)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="696df6abce8abb54e8cd9a4d788b6b19b808783e" translate="yes" xml:space="preserve">
          <source>Listen for an event with &lt;code&gt;$on(eventName, eventHandler)&lt;/code&gt;</source>
          <target state="translated">Escuche un evento con &lt;code&gt;$on(eventName, eventHandler)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2a358a8843be76d3c49082380039fa0679262430" translate="yes" xml:space="preserve">
          <source>Listening for Native Events on Components with &lt;code&gt;v-on&lt;/code&gt;&lt;sup&gt;changed&lt;/sup&gt;</source>
          <target state="translated">Escucha de eventos nativos en componentes con &lt;code&gt;v-on&lt;/code&gt; &lt;sup&gt;cambiado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="6d24ce075567f8634478a57941ae0b0eecc75979" translate="yes" xml:space="preserve">
          <source>Listening to Child Components Events</source>
          <target state="translated">Escuchar los eventos de Child Components</target>
        </trans-unit>
        <trans-unit id="4068e29f0d00dd78b6cb63522d95b7fd8466fe66" translate="yes" xml:space="preserve">
          <source>Listening to Events</source>
          <target state="translated">Escuchar los eventos</target>
        </trans-unit>
        <trans-unit id="454c823d312bb21fb3768d64892637753b93fb76" translate="yes" xml:space="preserve">
          <source>Listening to custom events on a child component (the handler is called when &amp;ldquo;my-event&amp;rdquo; is emitted on the child):</source>
          <target state="translated">Escuchar eventos personalizados en un componente secundario (se llama al controlador cuando se emite &quot;my-event&quot; en el ni&amp;ntilde;o):</target>
        </trans-unit>
        <trans-unit id="8631bfe9aed59c0e3f179ac4e96195bbc6860960" translate="yes" xml:space="preserve">
          <source>Listening to the kebab-cased version will have no effect:</source>
          <target state="translated">Escuchar la versión del kebab no tendrá ningún efecto:</target>
        </trans-unit>
        <trans-unit id="ba43e280bc7445e5b4f1d1db31b10f615d04d7e1" translate="yes" xml:space="preserve">
          <source>Local Registration</source>
          <target state="translated">Registro local</target>
        </trans-unit>
        <trans-unit id="5aa492ab1eff8abbb7c26a1b8e7859024fe0d373" translate="yes" xml:space="preserve">
          <source>Local Registration in a Module System</source>
          <target state="translated">Registro local en un sistema de módulos</target>
        </trans-unit>
        <trans-unit id="c21bde3b85066869a4def12bbecd2597d5f1d6cf" translate="yes" xml:space="preserve">
          <source>Logic is now decoupled from the presentation layer, making maintenance (change/extension of logic) much easier.</source>
          <target state="translated">La lógica está ahora desacoplada de la capa de presentación,haciendo el mantenimiento (cambio/extensión de la lógica)mucho más fácil.</target>
        </trans-unit>
        <trans-unit id="9ba90cc7a29b593100819375e54c2166bf952ca3" translate="yes" xml:space="preserve">
          <source>Maintaining State</source>
          <target state="translated">Mantener el estado</target>
        </trans-unit>
        <trans-unit id="b0f21a5d13bd1abc123a654d0af01af3751372ba" translate="yes" xml:space="preserve">
          <source>Make Vue ignore custom elements defined outside of Vue (e.g., using the Web Components APIs). Otherwise, it will throw a warning about an &lt;code&gt;Unknown custom element&lt;/code&gt;, assuming that you forgot to register a global component or misspelled a component name.</source>
          <target state="translated">Haga que Vue ignore los elementos personalizados definidos fuera de Vue (por ejemplo, utilizando las API de componentes web). De lo contrario, arrojar&amp;aacute; una advertencia sobre un &lt;code&gt;Unknown custom element&lt;/code&gt; , asumiendo que olvid&amp;oacute; registrar un componente global o escribi&amp;oacute; mal el nombre de un componente.</target>
        </trans-unit>
        <trans-unit id="40cc7de2e3efbc03590e2caf3615a6df24defc19" translate="yes" xml:space="preserve">
          <source>Make an object reactive. Internally, Vue uses this on the object returned by the &lt;code&gt;data&lt;/code&gt; function.</source>
          <target state="translated">Haz que un objeto sea reactivo. Internamente, Vue usa esto en el objeto devuelto por la funci&amp;oacute;n de &lt;code&gt;data&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1ca710d6ed72907ab1882247d85dafbe4c288636" translate="yes" xml:space="preserve">
          <source>Make sure to read about &lt;a href=&quot;#Explanation-of-Different-Builds&quot;&gt;the different builds of Vue&lt;/a&gt; and use the &lt;strong&gt;production&lt;br/&gt; version&lt;/strong&gt; in your published site, replacing &lt;code&gt;vue.js&lt;/code&gt; with &lt;code&gt;vue.min.js&lt;/code&gt;. This is a smaller build optimized for speed instead of development experience.</source>
          <target state="translated">Aseg&amp;uacute;rese de leer sobre &lt;a href=&quot;#Explanation-of-Different-Builds&quot;&gt;los diferentes construye de Vue&lt;/a&gt; y el uso de la &lt;strong&gt;producci&amp;oacute;n de &lt;br/&gt;la versi&amp;oacute;n&lt;/strong&gt; en su sitio publicado, en sustituci&amp;oacute;n de &lt;code&gt;vue.js&lt;/code&gt; con &lt;code&gt;vue.min.js&lt;/code&gt; . Esta es una compilaci&amp;oacute;n m&amp;aacute;s peque&amp;ntilde;a optimizada para la velocidad en lugar de la experiencia de desarrollo.</target>
        </trans-unit>
        <trans-unit id="e3c022bac6422a256a8effaab478918265d7cabe" translate="yes" xml:space="preserve">
          <source>Managing many state transitions can quickly increase the complexity of a Vue instance or component. Fortunately, many animations can be extracted out into dedicated child components. Let&amp;rsquo;s do this with the animated integer from our earlier example:</source>
          <target state="translated">La administraci&amp;oacute;n de muchas transiciones de estado puede aumentar r&amp;aacute;pidamente la complejidad de una instancia o componente de Vue. Afortunadamente, muchas animaciones se pueden extraer en componentes secundarios dedicados. Hagamos esto con el entero animado de nuestro ejemplo anterior:</target>
        </trans-unit>
        <trans-unit id="7c3bd17fad3bf74f92a5f858b73034ae0e335d8b" translate="yes" xml:space="preserve">
          <source>Managing state on &lt;code&gt;this.$root&lt;/code&gt; and/or using a &lt;a href=&quot;../guide/migration#dispatch-and-broadcast-replaced&quot;&gt;global event bus&lt;/a&gt; can be convenient for very simple cases, but are not appropriate for most applications. Vuex offers not only a central place to manage state, but also tools for organizing, tracking, and debugging state changes.</source>
          <target state="translated">Administrar el estado en &lt;code&gt;this.$root&lt;/code&gt; y / o usar un &lt;a href=&quot;../guide/migration#dispatch-and-broadcast-replaced&quot;&gt;bus de eventos global&lt;/a&gt; puede ser conveniente para casos muy simples, pero no es apropiado para la mayor&amp;iacute;a de las aplicaciones. Vuex ofrece no solo un lugar central para administrar el estado, sino tambi&amp;eacute;n herramientas para organizar, rastrear y depurar cambios de estado.</target>
        </trans-unit>
        <trans-unit id="f8ce6aa2bb23c0ea42fa8eff08fdeb57d8d46f86" translate="yes" xml:space="preserve">
          <source>Manipulate children, props, or data before passing them on to a child component</source>
          <target state="translated">Manipular niños,accesorios o datos antes de pasarlos a un componente infantil</target>
        </trans-unit>
        <trans-unit id="94450504feac5b15b4e2b00b870ff24df0d15b30" translate="yes" xml:space="preserve">
          <source>Many files with similar names, making rapid file switching in code editors more difficult.</source>
          <target state="translated">Muchos archivos con nombres similares,haciendo más difícil el cambio rápido de archivos en los editores de código.</target>
        </trans-unit>
        <trans-unit id="e9845a3a28b614ba4d1f3f00fed1ceb01c5a0858" translate="yes" xml:space="preserve">
          <source>Many nested sub-directories, which increases the time it takes to browse components in an editor&amp;rsquo;s sidebar.</source>
          <target state="translated">Muchos subdirectorios anidados, lo que aumenta el tiempo que lleva examinar los componentes en la barra lateral de un editor.</target>
        </trans-unit>
        <trans-unit id="871f71bb96ca0bb4e5791c4ef660e24c2c568ffe" translate="yes" xml:space="preserve">
          <source>Many of your components will be relatively generic, possibly only wrapping an element like an input or a button. We sometimes refer to these as &lt;a href=&quot;../style-guide/index#Base-component-names-strongly-recommended&quot;&gt;base components&lt;/a&gt; and they tend to be used very frequently across your components.</source>
          <target state="translated">Muchos de sus componentes ser&amp;aacute;n relativamente gen&amp;eacute;ricos, posiblemente solo envuelvan un elemento como una entrada o un bot&amp;oacute;n. A veces nos referimos a estos como &lt;a href=&quot;../style-guide/index#Base-component-names-strongly-recommended&quot;&gt;componentes b&amp;aacute;sicos&lt;/a&gt; y tienden a usarse con mucha frecuencia en todos sus componentes.</target>
        </trans-unit>
        <trans-unit id="d3f90d76037526451c4d4d6a19af05a35509fe8a" translate="yes" xml:space="preserve">
          <source>Mapping an Array to Elements with &lt;code&gt;v-for&lt;/code&gt;</source>
          <target state="translated">Asignaci&amp;oacute;n de una matriz a elementos con &lt;code&gt;v-for&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f03a6d54b8b6514c9c14a1dc9c7ad30c6d8ce6b1" translate="yes" xml:space="preserve">
          <source>Meta Instance Methods</source>
          <target state="translated">Métodos de meta instancia</target>
        </trans-unit>
        <trans-unit id="2f4694e23c9582e9a5db1045c363b51dfc44e4fe" translate="yes" xml:space="preserve">
          <source>Method Event Handlers</source>
          <target state="translated">Manipuladores de eventos de método</target>
        </trans-unit>
        <trans-unit id="7695e9b47d9ba02cf1af67839a1c5a56784566b4" translate="yes" xml:space="preserve">
          <source>Methods in Inline Handlers</source>
          <target state="translated">Métodos en los manipuladores en línea</target>
        </trans-unit>
        <trans-unit id="d1290d394bc9cbc272b779c93460593c97002ca1" translate="yes" xml:space="preserve">
          <source>Methods to be mixed into the Vue instance. You can access these methods directly on the VM instance, or use them in directive expressions. All methods will have their &lt;code&gt;this&lt;/code&gt; context automatically bound to the Vue instance.</source>
          <target state="translated">M&amp;eacute;todos para mezclar en la instancia de Vue. Puede acceder a estos m&amp;eacute;todos directamente en la instancia de VM o usarlos en expresiones de directiva. Todos los m&amp;eacute;todos tendr&amp;aacute;n su contexto &lt;code&gt;this&lt;/code&gt; vinculado autom&amp;aacute;ticamente a la instancia de Vue.</target>
        </trans-unit>
        <trans-unit id="431ecb390fd9ca8c90c7d10a3d2d7c57e8f24d12" translate="yes" xml:space="preserve">
          <source>Middlewares &lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">Middlewares &lt;sup&gt;reemplazados&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="a7c29497fcc9380f26664db064158964ed034b2e" translate="yes" xml:space="preserve">
          <source>Middlewares are replaced by plugins. A plugin is a function that receives the store as the only argument, and can listen to the mutation event on the store:</source>
          <target state="translated">Los middlewares son reemplazados por plugins.Un plugin es una función que recibe la tienda como único argumento,y puede escuchar el evento de la mutación en la tienda:</target>
        </trans-unit>
        <trans-unit id="de3452a9ee78ce898468e14c739e9cdea57d03f0" translate="yes" xml:space="preserve">
          <source>Migration from Vue 1.x</source>
          <target state="translated">Migración desde el Vue 1.x</target>
        </trans-unit>
        <trans-unit id="33235c234b4d4ff968729d9a75b61daade922a4c" translate="yes" xml:space="preserve">
          <source>Migration from Vue Router 0.7.x</source>
          <target state="translated">Migración desde el Vue Router 0.7.x</target>
        </trans-unit>
        <trans-unit id="85c2e4a1b81a8d15a3bcd89e26321a5e8bae795c" translate="yes" xml:space="preserve">
          <source>Migration from Vuex 0.6.x to 1.0</source>
          <target state="translated">Migración de Vuex 0.6.x a 1.0</target>
        </trans-unit>
        <trans-unit id="56ce9269c79d7b84814a50d956fd29f09b1efb47" translate="yes" xml:space="preserve">
          <source>Mixin hooks are called in the order they are provided, and called before the component&amp;rsquo;s own hooks.</source>
          <target state="translated">Los ganchos de mezcla se llaman en el orden en que se proporcionan y se llaman antes que los propios ganchos del componente.</target>
        </trans-unit>
        <trans-unit id="d634308003ff858f289d2833f637dfc9bee3fc78" translate="yes" xml:space="preserve">
          <source>Mixins</source>
          <target state="translated">Mixins</target>
        </trans-unit>
        <trans-unit id="06fc764968134bc875ae2b80299dfa521ccaf9ca" translate="yes" xml:space="preserve">
          <source>Mixins are a flexible way to distribute reusable functionalities for Vue components. A mixin object can contain any component options. When a component uses a mixin, all options in the mixin will be &amp;ldquo;mixed&amp;rdquo; into the component&amp;rsquo;s own options.</source>
          <target state="translated">Los mixins son una forma flexible de distribuir funcionalidades reutilizables para componentes de Vue. Un objeto de mezcla puede contener cualquier opci&amp;oacute;n de componente. Cuando un componente utiliza un mixin, todas las opciones del mixin se &quot;mezclar&amp;aacute;n&quot; en las opciones propias del componente.</target>
        </trans-unit>
        <trans-unit id="049a096df6b896be6526afb4fccc301157e04515" translate="yes" xml:space="preserve">
          <source>MobX has become quite popular in the React community and it actually uses a nearly identical reactivity system to Vue. To a limited extent, the React + MobX workflow can be thought of as a more verbose Vue, so if you&amp;rsquo;re using that combination and are enjoying it, jumping into Vue is probably the next logical step.</source>
          <target state="translated">MobX se ha vuelto bastante popular en la comunidad React y en realidad usa un sistema de reactividad casi id&amp;eacute;ntico al de Vue. Hasta cierto punto, el flujo de trabajo React + MobX se puede considerar como un Vue m&amp;aacute;s detallado, por lo que si est&amp;aacute; usando esa combinaci&amp;oacute;n y la est&amp;aacute; disfrutando, saltar a Vue es probablemente el siguiente paso l&amp;oacute;gico.</target>
        </trans-unit>
        <trans-unit id="91de419c6a3b3cf41aa4545caf2eb8b01499b085" translate="yes" xml:space="preserve">
          <source>Modifier(s)</source>
          <target state="translated">Modifier(s)</target>
        </trans-unit>
        <trans-unit id="3a7ea294bf33134dce4b142b8b7182de29b978b2" translate="yes" xml:space="preserve">
          <source>Modifiers</source>
          <target state="translated">Modifiers</target>
        </trans-unit>
        <trans-unit id="c78835db37c935d808d9977de5814282ad48b4f6" translate="yes" xml:space="preserve">
          <source>Modifiers Keys:</source>
          <target state="translated">Llaves modificadoras:</target>
        </trans-unit>
        <trans-unit id="9c9674aab8b56f915029a2d1e586af8120c00891" translate="yes" xml:space="preserve">
          <source>Modifiers are special postfixes denoted by a dot, which indicate that a directive should be bound in some special way. For example, the &lt;code&gt;.prevent&lt;/code&gt; modifier tells the &lt;code&gt;v-on&lt;/code&gt; directive to call &lt;code&gt;event.preventDefault()&lt;/code&gt; on the triggered event:</source>
          <target state="translated">Los modificadores son sufijos especiales indicados por un punto, que indican que una directiva debe estar vinculada de alguna manera especial. Por ejemplo, el modificador &lt;code&gt;.prevent&lt;/code&gt; le dice a la directiva &lt;code&gt;v-on&lt;/code&gt; que llame a &lt;code&gt;event.preventDefault()&lt;/code&gt; en el evento desencadenado:</target>
        </trans-unit>
        <trans-unit id="8c585db7d0122a15a54cf6c6876ffe8cc3e86e63" translate="yes" xml:space="preserve">
          <source>Module Systems</source>
          <target state="translated">Sistemas de módulos</target>
        </trans-unit>
        <trans-unit id="a6d2bd6abfd4bb67af5f7cf3bcc6c49be04098be" translate="yes" xml:space="preserve">
          <source>More mature tooling support. Vue provides official support for &lt;a href=&quot;https://github.com/vuejs/vue-loader&quot;&gt;webpack&lt;/a&gt; and &lt;a href=&quot;https://github.com/vuejs/vueify&quot;&gt;Browserify&lt;/a&gt;, while Riot relies on community support for build system integration.</source>
          <target state="translated">Soporte de herramientas m&amp;aacute;s maduro. Vue proporciona soporte oficial para &lt;a href=&quot;https://github.com/vuejs/vue-loader&quot;&gt;webpack&lt;/a&gt; y &lt;a href=&quot;https://github.com/vuejs/vueify&quot;&gt;Browserify&lt;/a&gt; , mientras que Riot conf&amp;iacute;a en el soporte de la comunidad para la integraci&amp;oacute;n del sistema de compilaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="8ac57078adf5d9e220c754f33e3cab2a4c61f61d" translate="yes" xml:space="preserve">
          <source>Most of the tips below are enabled by default if you are using &lt;a href=&quot;https://cli.vuejs.org&quot;&gt;Vue CLI&lt;/a&gt;. This section is only relevant if you are using a custom build setup.</source>
          <target state="translated">La mayor&amp;iacute;a de los consejos a continuaci&amp;oacute;n est&amp;aacute;n habilitados de forma predeterminada si est&amp;aacute; utilizando &lt;a href=&quot;https://cli.vuejs.org&quot;&gt;Vue CLI&lt;/a&gt; . Esta secci&amp;oacute;n solo es relevante si est&amp;aacute; utilizando una configuraci&amp;oacute;n de compilaci&amp;oacute;n personalizada.</target>
        </trans-unit>
        <trans-unit id="ff6e88abb4082a25af5cddfc16c8063e7092c245" translate="yes" xml:space="preserve">
          <source>Most use cases of mutating a prop can be replaced by one of these options:</source>
          <target state="translated">La mayoría de los casos de uso de la hélice mutante pueden ser sustituidos por una de estas opciones:</target>
        </trans-unit>
        <trans-unit id="0f6138bafcc1d5e10b1c4ef89a77bfaf9ad800f1" translate="yes" xml:space="preserve">
          <source>Mouse Button Modifiers</source>
          <target state="translated">Modificadores del botón del ratón</target>
        </trans-unit>
        <trans-unit id="6a5aa2d48e5943f597c67e02c2fd245883968d95" translate="yes" xml:space="preserve">
          <source>Much better, isn&amp;rsquo;t it?</source>
          <target state="translated">Mucho mejor, &amp;iquest;no?</target>
        </trans-unit>
        <trans-unit id="d62651fa8a2e7b83b1b472f6394d7ec9c1b77f13" translate="yes" xml:space="preserve">
          <source>Much simpler! Sort of. The code is shorter, but also requires greater familiarity with Vue instance properties. In this case, you have to know that when you pass children without a &lt;code&gt;v-slot&lt;/code&gt; directive into a component, like the &lt;code&gt;Hello world!&lt;/code&gt; inside of &lt;code&gt;anchored-heading&lt;/code&gt;, those children are stored on the component instance at &lt;code&gt;$slots.default&lt;/code&gt;. If you haven&amp;rsquo;t already, &lt;strong&gt;it&amp;rsquo;s recommended to read through the &lt;a href=&quot;../api/index#Instance-Properties&quot;&gt;instance properties API&lt;/a&gt; before diving into render functions.&lt;/strong&gt;</source>
          <target state="translated">&amp;iexcl;Mucho m&amp;aacute;s simple! Algo as&amp;iacute; como. El c&amp;oacute;digo es m&amp;aacute;s corto, pero tambi&amp;eacute;n requiere una mayor familiaridad con las propiedades de las instancias de Vue. En este caso, debe saber que cuando pasa ni&amp;ntilde;os sin una directiva de &lt;code&gt;v-slot&lt;/code&gt; en v a un componente, como &lt;code&gt;Hello world!&lt;/code&gt; dentro del &lt;code&gt;anchored-heading&lt;/code&gt; , esos elementos &lt;code&gt;$slots.default&lt;/code&gt; se almacenan en la instancia del componente en $ slots.default . Si a&amp;uacute;n no lo ha hecho, &lt;strong&gt;se recomienda leer la &lt;a href=&quot;../api/index#Instance-Properties&quot;&gt;API de propiedades de&lt;/a&gt; la instancia antes de sumergirse en las funciones de renderizado.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ae7fd6f6c6f4ea4c4eacb2f56da39f0b2fb1a420" translate="yes" xml:space="preserve">
          <source>Multi-attribute elements</source>
          <target state="translated">Elementos multiatributos</target>
        </trans-unit>
        <trans-unit id="ceea8f5866781984f4ad8f3e46247846aa62fb94" translate="yes" xml:space="preserve">
          <source>Multi-attribute elements &lt;sup&gt;strongly recommended&lt;/sup&gt;</source>
          <target state="translated">Elementos de atributos m&amp;uacute;ltiples &lt;sup&gt;muy recomendados&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="c74c369ff94e794c799780bff5d5ea7fad8ef38a" translate="yes" xml:space="preserve">
          <source>Multi-word component names</source>
          <target state="translated">Nombres de componentes de varias palabras</target>
        </trans-unit>
        <trans-unit id="d3d1a8c17e83b5f0002fdfe859df802f2669490e" translate="yes" xml:space="preserve">
          <source>Multi-word component names &lt;sup&gt;essential&lt;/sup&gt;</source>
          <target state="translated">Nombres de componentes de varias palabras &lt;sup&gt;esenciales&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="0f05bd0026ab6ceb1bb040af8f4b0c24c530607d" translate="yes" xml:space="preserve">
          <source>Multiline text</source>
          <target state="translated">Texto multilínea</target>
        </trans-unit>
        <trans-unit id="f6620aef040214a72d3c2e57f8f5384fa762cf0c" translate="yes" xml:space="preserve">
          <source>Multiple Values</source>
          <target state="translated">Múltiples valores</target>
        </trans-unit>
        <trans-unit id="e7051b9f8df86c845f6fca692b6b3cadd5b8a10a" translate="yes" xml:space="preserve">
          <source>Multiple checkboxes, bound to the same Array:</source>
          <target state="translated">Múltiples casillas de verificación,unidas a la misma matriz:</target>
        </trans-unit>
        <trans-unit id="4bb517cb00682f4c08a606d69d3a2147fe97738f" translate="yes" xml:space="preserve">
          <source>Multiple nodes where only 1 is rendered at a time</source>
          <target state="translated">Múltiples nodos donde sólo se renderiza uno a la vez</target>
        </trans-unit>
        <trans-unit id="e6e9d08847648f1f24b432d66915720d2a3cd5b3" translate="yes" xml:space="preserve">
          <source>Multiple select (bound to Array):</source>
          <target state="translated">Selección múltiple (ligado a Array):</target>
        </trans-unit>
        <trans-unit id="646b4dd27caf266ac22f395b2a33613ba629a308" translate="yes" xml:space="preserve">
          <source>Mustaches cannot be used inside HTML attributes. Instead, use a &lt;a href=&quot;../api/index#v-bind&quot;&gt;v-bind directive&lt;/a&gt;:</source>
          <target state="translated">Los bigotes no se pueden usar dentro de los atributos HTML. En su lugar, use una &lt;a href=&quot;../api/index#v-bind&quot;&gt;directiva v-bind&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="a1ceb98e8d45e6f84a7b372d2bc5ecdc0a979de1" translate="yes" xml:space="preserve">
          <source>Mutating a prop locally is now considered an anti-pattern, e.g. declaring a prop and then setting &lt;code&gt;this.myProp = 'someOtherValue'&lt;/code&gt; in the component. Due to the new rendering mechanism, whenever the parent component re-renders, the child component&amp;rsquo;s local changes will be overwritten.</source>
          <target state="translated">Mutar un accesorio localmente ahora se considera un anti-patr&amp;oacute;n, por ejemplo, declarar un accesorio y luego establecer &lt;code&gt;this.myProp = 'someOtherValue'&lt;/code&gt; en el componente. Debido al nuevo mecanismo de renderizado, siempre que el componente padre se vuelva a renderizar, los cambios locales del componente secundario se sobrescribir&amp;aacute;n.</target>
        </trans-unit>
        <trans-unit id="0acccbc6d162746eb3fb69dff7df3fa404b932c2" translate="yes" xml:space="preserve">
          <source>Mutation Methods</source>
          <target state="translated">Métodos de mutación</target>
        </trans-unit>
        <trans-unit id="5f08c22f9167f78491a6ca2175a2bc368b8504f7" translate="yes" xml:space="preserve">
          <source>Mutation methods, as the name suggests, mutate the original array they are called on. In comparison, there are also non-mutating methods, e.g. &lt;code&gt;filter()&lt;/code&gt;, &lt;code&gt;concat()&lt;/code&gt; and &lt;code&gt;slice()&lt;/code&gt;, which do not mutate the original array but &lt;strong&gt;always return a new array&lt;/strong&gt;. When working with non-mutating methods, you can replace the old array with the new one:</source>
          <target state="translated">Los m&amp;eacute;todos de mutaci&amp;oacute;n, como su nombre indica, mutan la matriz original a la que se llaman. En comparaci&amp;oacute;n, tambi&amp;eacute;n existen m&amp;eacute;todos no mutantes, por ejemplo, &lt;code&gt;filter()&lt;/code&gt; , &lt;code&gt;concat()&lt;/code&gt; y &lt;code&gt;slice()&lt;/code&gt; , que no mutan la matriz original pero &lt;strong&gt;siempre devuelven una nueva matriz&lt;/strong&gt; . Cuando trabaje con m&amp;eacute;todos que no sean mutantes, puede reemplazar la matriz anterior por la nueva:</target>
        </trans-unit>
        <trans-unit id="7d94ebbf07f5417771d7c7fd06f208703494bf50" translate="yes" xml:space="preserve">
          <source>NPM</source>
          <target state="translated">NPM</target>
        </trans-unit>
        <trans-unit id="5d35915fe00d2c128685549b04a6a30f49020050" translate="yes" xml:space="preserve">
          <source>NPM is the recommended installation method when building large scale applications with Vue. It pairs nicely with module bundlers such as &lt;a href=&quot;https://webpack.js.org/&quot;&gt;Webpack&lt;/a&gt; or &lt;a href=&quot;http://browserify.org/&quot;&gt;Browserify&lt;/a&gt;. Vue also provides accompanying tools for authoring &lt;a href=&quot;single-file-components&quot;&gt;Single File Components&lt;/a&gt;.</source>
          <target state="translated">NPM es el m&amp;eacute;todo de instalaci&amp;oacute;n recomendado al crear aplicaciones a gran escala con Vue. Se &lt;a href=&quot;https://webpack.js.org/&quot;&gt;combina&lt;/a&gt; muy bien con paquetes de m&amp;oacute;dulos como Webpack o &lt;a href=&quot;http://browserify.org/&quot;&gt;Browserify&lt;/a&gt; . Vue tambi&amp;eacute;n proporciona herramientas complementarias para la creaci&amp;oacute;n &lt;a href=&quot;single-file-components&quot;&gt;de componentes de archivo &amp;uacute;nico&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="39674384c8d92e5f7a36d0d3f3e397a2e95cfa07" translate="yes" xml:space="preserve">
          <source>Name Casing</source>
          <target state="translated">Nombre Carcasa</target>
        </trans-unit>
        <trans-unit id="0ab2cdaecd6bb74527ceec8c7c8e94dbe4ba99ce" translate="yes" xml:space="preserve">
          <source>Name conflicts (e.g. multiple &lt;code&gt;ButtonDelete.vue&lt;/code&gt; components) make it more difficult to quickly navigate to a specific component in a code editor.</source>
          <target state="translated">Los conflictos de nombres (por ejemplo, varios componentes &lt;code&gt;ButtonDelete.vue&lt;/code&gt; ) hacen que sea m&amp;aacute;s dif&amp;iacute;cil navegar r&amp;aacute;pidamente a un componente espec&amp;iacute;fico en un editor de c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="7a6baafc30ef8e96b10f64b5ae02d071b89f11b7" translate="yes" xml:space="preserve">
          <source>Named Slots</source>
          <target state="translated">Ranuras nombradas</target>
        </trans-unit>
        <trans-unit id="ad1343c1fa843d537b321f552fb2d9e3249973f3" translate="yes" xml:space="preserve">
          <source>Named Slots Shorthand</source>
          <target state="translated">Nombrado Slots Shorthand</target>
        </trans-unit>
        <trans-unit id="eb77d0a7e3904d77f8e4a7c84a101f0e60e5b947" translate="yes" xml:space="preserve">
          <source>Named Slots with the &lt;code&gt;slot&lt;/code&gt; Attribute</source>
          <target state="translated">Ranuras con nombre con el atributo de &lt;code&gt;slot&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8e9a0bbd092de06c02318f4224dc00dd0e597d4b" translate="yes" xml:space="preserve">
          <source>Native Rendering</source>
          <target state="translated">Renderización nativa</target>
        </trans-unit>
        <trans-unit id="2b1f77c5995cd9dac2e37e8101252626e5271812" translate="yes" xml:space="preserve">
          <source>New in 2.1.0+</source>
          <target state="translated">Nuevo en 2.1.0+</target>
        </trans-unit>
        <trans-unit id="2ebe6a1174c620d032840e985bebc14e9c813501" translate="yes" xml:space="preserve">
          <source>New in 2.1.0+: returns a Promise if no callback is provided and Promise is supported in the execution environment. Please note that Vue does not come with a Promise polyfill, so if you target browsers that don&amp;rsquo;t support Promises natively (looking at you, IE), you will have to provide a polyfill yourself.</source>
          <target state="translated">Nuevo en 2.1.0+: devuelve una promesa si no se proporciona ninguna devoluci&amp;oacute;n de llamada y la promesa es compatible con el entorno de ejecuci&amp;oacute;n. Tenga en cuenta que Vue no viene con un polyfill de Promise, por lo que si apunta a navegadores que no son compatibles con Promises de forma nativa (mir&amp;aacute;ndolo a usted, IE), tendr&amp;aacute; que proporcionar un polyfill usted mismo.</target>
        </trans-unit>
        <trans-unit id="a23469cb28697e68c77d280bbb32f3803b532a34" translate="yes" xml:space="preserve">
          <source>New in 2.1.4+</source>
          <target state="translated">Nuevo en 2.1.4+</target>
        </trans-unit>
        <trans-unit id="6c6aade3e6584c7a8b32cab964c7a674d3b07efd" translate="yes" xml:space="preserve">
          <source>New in 2.2.0</source>
          <target state="translated">Nuevo en 2.2.0</target>
        </trans-unit>
        <trans-unit id="0f9f45aff79e86f97a647ac660d1cac6b64f6ae9" translate="yes" xml:space="preserve">
          <source>New in 2.2.0+</source>
          <target state="translated">Nuevo en 2.2.0+</target>
        </trans-unit>
        <trans-unit id="0222464ccf0d40a3f2619ea19d32c2ebca8e8947" translate="yes" xml:space="preserve">
          <source>New in 2.3.0+</source>
          <target state="translated">Nuevo en 2.3.0+</target>
        </trans-unit>
        <trans-unit id="b02f6830ecc8383c4879860f5a1da68ddd041c03" translate="yes" xml:space="preserve">
          <source>New in 2.4.0+</source>
          <target state="translated">Nuevo en 2.4.0+</target>
        </trans-unit>
        <trans-unit id="50e01eb5f080e39b850973e99d037d430ae13836" translate="yes" xml:space="preserve">
          <source>New in 2.5.0+</source>
          <target state="translated">Nuevo en 2.5.0+</target>
        </trans-unit>
        <trans-unit id="053c4407e09eb77d114f51a7a8bc3d31c0dc62de" translate="yes" xml:space="preserve">
          <source>New in 2.6.0+</source>
          <target state="translated">Nuevo en 2.6.0+</target>
        </trans-unit>
        <trans-unit id="1c463bc393dd8ee82390da1c8679bbb86e610abe" translate="yes" xml:space="preserve">
          <source>No longer necessary, since warnings come with stack traces by default now.</source>
          <target state="translated">Ya no es necesario,ya que las advertencias vienen con trazas de pila por defecto ahora.</target>
        </trans-unit>
        <trans-unit id="66c6e5d0b724903ee1ff6e6099b203d955086d1a" translate="yes" xml:space="preserve">
          <source>No real use. If you do happen to rely on this feature somehow and aren&amp;rsquo;t sure how to work around it, post on &lt;a href=&quot;https://forum.vuejs.org/&quot;&gt;the forum&lt;/a&gt; for ideas.</source>
          <target state="translated">Sin uso real. Si conf&amp;iacute;a en esta funci&amp;oacute;n de alguna manera y no est&amp;aacute; seguro de c&amp;oacute;mo solucionarlo, publique en &lt;a href=&quot;https://forum.vuejs.org/&quot;&gt;el foro&lt;/a&gt; para obtener ideas.</target>
        </trans-unit>
        <trans-unit id="499b8c29716c6bc9380fa29ea0c868d469132ef2" translate="yes" xml:space="preserve">
          <source>Nodes, Trees, and the Virtual DOM</source>
          <target state="translated">Nodos,árboles y el DOM virtual</target>
        </trans-unit>
        <trans-unit id="67dbd82660f093394a26b3ae3623994010f0c69e" translate="yes" xml:space="preserve">
          <source>Non-Prop Attributes</source>
          <target state="translated">Atributos no relacionados con las cosechas</target>
        </trans-unit>
        <trans-unit id="3a775c24cf85519f3493a1f3184bcda0bc6bbbc5" translate="yes" xml:space="preserve">
          <source>Non-flux state management</source>
          <target state="translated">Gestión del estado sin flujo</target>
        </trans-unit>
        <trans-unit id="7d2d13e9ec1357ce0a1972e320ea404789b39c3f" translate="yes" xml:space="preserve">
          <source>Non-flux state management &lt;sup&gt;use with caution&lt;/sup&gt;</source>
          <target state="translated">Manejo del estado sin flujo &lt;sup&gt;use con precauci&amp;oacute;n&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="54aa04fe9a9673dccd2cdb7588ee890d8cbf364d" translate="yes" xml:space="preserve">
          <source>Note every child in a &lt;code&gt;&amp;lt;transition-group&amp;gt;&lt;/code&gt; must be &lt;strong&gt;uniquely keyed&lt;/strong&gt; for the animations to work properly.</source>
          <target state="translated">Tenga en cuenta que todos los ni&amp;ntilde;os de un &lt;code&gt;&amp;lt;transition-group&amp;gt;&lt;/code&gt; deben tener &lt;strong&gt;una clave &amp;uacute;nica&lt;/strong&gt; para que las animaciones funcionen correctamente.</target>
        </trans-unit>
        <trans-unit id="01d9b9321e6ff665ab2980ef004ad4d70ee364dd" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&amp;lt;keep-alive&amp;gt;&lt;/code&gt; requires the components being switched between to all have names, either using the &lt;code&gt;name&lt;/code&gt; option on a component, or through local/global registration.</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;&amp;lt;keep-alive&amp;gt;&lt;/code&gt; requiere que los componentes que se cambian entre todos tengan nombres, ya sea usando la opci&amp;oacute;n de &lt;code&gt;name&lt;/code&gt; en un componente o mediante el registro local / global.</target>
        </trans-unit>
        <trans-unit id="f371b641eda948d758990f934853de8872ee227f" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;inheritAttrs: false&lt;/code&gt; option does &lt;strong&gt;not&lt;/strong&gt; affect &lt;code&gt;style&lt;/code&gt; and &lt;code&gt;class&lt;/code&gt; bindings.</source>
          <target state="translated">Tenga en cuenta que la opci&amp;oacute;n &lt;code&gt;inheritAttrs: false&lt;/code&gt; &lt;strong&gt;no&lt;/strong&gt; afecta &lt;code&gt;class&lt;/code&gt; enlaces de &lt;code&gt;style&lt;/code&gt; y clase .</target>
        </trans-unit>
        <trans-unit id="4865cbc834beecb2b610f666cf562d7362926a15" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;mounted&lt;/code&gt; does &lt;strong&gt;not&lt;/strong&gt; guarantee that all child components have also been mounted. If you want to wait until the entire view has been rendered, you can use &lt;a href=&quot;#vm-nextTick&quot;&gt;vm.$nextTick&lt;/a&gt; inside of &lt;code&gt;mounted&lt;/code&gt;:</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;mounted&lt;/code&gt; no &lt;strong&gt;no&lt;/strong&gt; garantiza que todos los componentes hijos tambi&amp;eacute;n se han montado. Si desea esperar hasta que se haya renderizado toda la vista, puede usar &lt;a href=&quot;#vm-nextTick&quot;&gt;vm. $ NextTick&lt;/a&gt; dentro de &lt;code&gt;mounted&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8aa1b05ebbda7e5b2744c6d248de2032ac1d216f" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;target=&quot;_blank&quot;&lt;/code&gt; is not supported on &lt;code&gt;&amp;lt;router-link&amp;gt;&lt;/code&gt;, so if you need to open a link in a new tab, you have to use &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; instead.</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;target=&quot;_blank&quot;&lt;/code&gt; no es compatible con &lt;code&gt;&amp;lt;router-link&amp;gt;&lt;/code&gt; , por lo que si necesita abrir un enlace en una nueva pesta&amp;ntilde;a, debe usar &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e4d9853311324c1062785017be6c36f8e6cda485" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;updated&lt;/code&gt; does &lt;strong&gt;not&lt;/strong&gt; guarantee that all child components have also been re-rendered. If you want to wait until the entire view has been re-rendered, you can use &lt;a href=&quot;#vm-nextTick&quot;&gt;vm.$nextTick&lt;/a&gt; inside of &lt;code&gt;updated&lt;/code&gt;:</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;updated&lt;/code&gt; no &lt;strong&gt;no&lt;/strong&gt; garantiza que todos los componentes hijos tambi&amp;eacute;n han sido re-renderizados. Si desea esperar hasta que se haya vuelto a renderizar toda la vista, puede usar &lt;a href=&quot;#vm-nextTick&quot;&gt;vm. $ NextTick&lt;/a&gt; dentro de &lt;code&gt;updated&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e111be77d17fe6743b1bb02879c8402ce1acfd03" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;v-bind&lt;/code&gt; with the &lt;code&gt;.sync&lt;/code&gt; modifier does &lt;strong&gt;not&lt;/strong&gt; work with expressions (e.g. &lt;code&gt;v-bind:title.sync=&amp;rdquo;doc.title + &amp;lsquo;!&amp;rsquo;&amp;rdquo;&lt;/code&gt; is invalid). Instead, you must only provide the name of the property you want to bind, similar to &lt;code&gt;v-model&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;v-bind&lt;/code&gt; con el modificador &lt;code&gt;.sync&lt;/code&gt; &lt;strong&gt;no&lt;/strong&gt; funciona con expresiones (por ejemplo, &lt;code&gt;v-bind:title.sync=&amp;rdquo;doc.title + &amp;lsquo;!&amp;rsquo;&amp;rdquo;&lt;/code&gt; es v&amp;aacute;lido). En su lugar, solo debe proporcionar el nombre de la propiedad que desea vincular, similar a &lt;code&gt;v-model&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="771a269b6d8c0e9ec3e7216d190b9a4d937f48ce" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;v-show&lt;/code&gt; doesn&amp;rsquo;t support the &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; element, nor does it work with &lt;code&gt;v-else&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;v-show&lt;/code&gt; no admite el elemento &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; , ni funciona con &lt;code&gt;v-else&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a4d9068c552bdf157869d707a68e7ff8a3725d0e" translate="yes" xml:space="preserve">
          <source>Note that &lt;strong&gt;&lt;code&gt;v-slot&lt;/code&gt; can only be added to a &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt;&lt;/strong&gt; (with &lt;a href=&quot;#Abbreviated-Syntax-for-Lone-Default-Slots&quot;&gt;one exception&lt;/a&gt;), unlike the deprecated &lt;a href=&quot;#Deprecated-Syntax&quot;&gt;&lt;code&gt;slot&lt;/code&gt; attribute&lt;/a&gt;.</source>
          <target state="translated">Tenga en cuenta que &lt;strong&gt; &lt;code&gt;v-slot&lt;/code&gt; solo se puede agregar a una &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; &lt;/strong&gt; (con &lt;a href=&quot;#Abbreviated-Syntax-for-Lone-Default-Slots&quot;&gt;una excepci&amp;oacute;n&lt;/a&gt; ), a diferencia del &lt;a href=&quot;#Deprecated-Syntax&quot;&gt;atributo &lt;/a&gt; &lt;code&gt;slot&lt;/code&gt; obsoleto .</target>
        </trans-unit>
        <trans-unit id="776dcb74ada7f4cc1814737bb17df3646b8395ff" translate="yes" xml:space="preserve">
          <source>Note that &lt;strong&gt;locally registered components are &lt;em&gt;not&lt;/em&gt; also available in subcomponents&lt;/strong&gt;. For example, if you wanted &lt;code&gt;ComponentA&lt;/code&gt; to be available in &lt;code&gt;ComponentB&lt;/code&gt;, you&amp;rsquo;d have to use:</source>
          <target state="translated">Tenga en cuenta que &lt;strong&gt;los componentes registrados localmente &lt;em&gt;tampoco&lt;/em&gt; est&amp;aacute;n disponibles en subcomponentes&lt;/strong&gt; . Por ejemplo, si desea que &lt;code&gt;ComponentA&lt;/code&gt; est&amp;eacute; disponible en &lt;code&gt;ComponentB&lt;/code&gt; , tendr&amp;aacute; que usar:</target>
        </trans-unit>
        <trans-unit id="8881ac4ac19e2ded818c92290bbcf16a14c24745" translate="yes" xml:space="preserve">
          <source>Note that &lt;strong&gt;you should not use an arrow function to define a method&lt;/strong&gt; (e.g. &lt;code&gt;plus: () =&amp;gt; this.a++&lt;/code&gt;). The reason is arrow functions bind the parent context, so &lt;code&gt;this&lt;/code&gt; will not be the Vue instance as you expect and &lt;code&gt;this.a&lt;/code&gt; will be undefined.</source>
          <target state="translated">Tenga en cuenta que &lt;strong&gt;no debe utilizar una funci&amp;oacute;n de flecha para definir un m&amp;eacute;todo&lt;/strong&gt; (por ejemplo, &lt;code&gt;plus: () =&amp;gt; this.a++&lt;/code&gt; ). La raz&amp;oacute;n es que las funciones de flecha enlazan el contexto principal, por lo que &lt;code&gt;this&lt;/code&gt; no ser&amp;aacute; la instancia de Vue como esperabas y &lt;code&gt;this.a&lt;/code&gt; no estar&amp;aacute; definida.</target>
        </trans-unit>
        <trans-unit id="835968cbd8027db3d9ca26ddf24e18c1f5c52040" translate="yes" xml:space="preserve">
          <source>Note that &lt;strong&gt;you should not use an arrow function to define a watcher&lt;/strong&gt; (e.g. &lt;code&gt;searchQuery: newValue =&amp;gt; this.updateAutocomplete(newValue)&lt;/code&gt;). The reason is arrow functions bind the parent context, so &lt;code&gt;this&lt;/code&gt; will not be the Vue instance as you expect and &lt;code&gt;this.updateAutocomplete&lt;/code&gt; will be undefined.</source>
          <target state="translated">Tenga en cuenta que &lt;strong&gt;no debe utilizar una funci&amp;oacute;n de flecha para definir un observador&lt;/strong&gt; (por ejemplo, &lt;code&gt;searchQuery: newValue =&amp;gt; this.updateAutocomplete(newValue)&lt;/code&gt; ). La raz&amp;oacute;n es que las funciones de flecha enlazan el contexto principal, por lo que &lt;code&gt;this&lt;/code&gt; no ser&amp;aacute; la instancia de Vue como espera y &lt;code&gt;this.updateAutocomplete&lt;/code&gt; no estar&amp;aacute; definido.</target>
        </trans-unit>
        <trans-unit id="ae4a42d86a3cca81f57342eb0f1aed6f05d0e695" translate="yes" xml:space="preserve">
          <source>Note that Vue&amp;rsquo;s event system is different from the browser&amp;rsquo;s &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventTarget&quot;&gt;EventTarget API&lt;/a&gt;. Though they work similarly, &lt;code&gt;$emit&lt;/code&gt;, &lt;code&gt;$on&lt;/code&gt;, and &lt;code&gt;$off&lt;/code&gt; are &lt;strong&gt;not&lt;/strong&gt; aliases for &lt;code&gt;dispatchEvent&lt;/code&gt;, &lt;code&gt;addEventListener&lt;/code&gt;, and &lt;code&gt;removeEventListener&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que el sistema de eventos de Vue es diferente de la &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventTarget&quot;&gt;API EventTarget&lt;/a&gt; del navegador . Aunque funcionan de manera similar, &lt;code&gt;$emit&lt;/code&gt; , &lt;code&gt;$on&lt;/code&gt; y &lt;code&gt;$off&lt;/code&gt; &lt;strong&gt;no&lt;/strong&gt; son alias para &lt;code&gt;dispatchEvent&lt;/code&gt; , &lt;code&gt;addEventListener&lt;/code&gt; y &lt;code&gt;removeEventListener&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9c4518368215428ba1ec224631fb3c0691204e72" translate="yes" xml:space="preserve">
          <source>Note that for other directives (e.g. &lt;code&gt;v-if&lt;/code&gt; and &lt;code&gt;v-show&lt;/code&gt;), JavaScript&amp;rsquo;s normal truthiness still applies.</source>
          <target state="translated">Tenga en cuenta que para otras directivas (por ejemplo, &lt;code&gt;v-if&lt;/code&gt; y &lt;code&gt;v-show&lt;/code&gt; ), la veracidad normal de JavaScript a&amp;uacute;n se aplica.</target>
        </trans-unit>
        <trans-unit id="59c87a2470ce03d315d2bf588709c8b05af9d942" translate="yes" xml:space="preserve">
          <source>Note that if you use an arrow function with a computed property, &lt;code&gt;this&lt;/code&gt; won&amp;rsquo;t be the component&amp;rsquo;s instance, but you can still access the instance as the function&amp;rsquo;s first argument:</source>
          <target state="translated">Tenga en cuenta que si usa una funci&amp;oacute;n de flecha con una propiedad calculada, &lt;code&gt;this&lt;/code&gt; no ser&amp;aacute; la instancia del componente, pero a&amp;uacute;n puede acceder a la instancia como el primer argumento de la funci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="76ac594b131a812ccc4dec6f17d0ccc6f38ab19e" translate="yes" xml:space="preserve">
          <source>Note that if you use an arrow function with the &lt;code&gt;data&lt;/code&gt; property, &lt;code&gt;this&lt;/code&gt; won&amp;rsquo;t be the component&amp;rsquo;s instance, but you can still access the instance as the function&amp;rsquo;s first argument:</source>
          <target state="translated">Tenga en cuenta que si usa una funci&amp;oacute;n de flecha con la propiedad de &lt;code&gt;data&lt;/code&gt; , &lt;code&gt;this&lt;/code&gt; no ser&amp;aacute; la instancia del componente, pero a&amp;uacute;n puede acceder a la instancia como el primer argumento de la funci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="b92212320fc7b39925a58ec2e6b387152eda8b23" translate="yes" xml:space="preserve">
          <source>Note that in ES2015+, placing a variable name like &lt;code&gt;ComponentA&lt;/code&gt; inside an object is shorthand for &lt;code&gt;ComponentA: ComponentA&lt;/code&gt;, meaning the name of the variable is both:</source>
          <target state="translated">Tenga en cuenta que en ES2015 +, colocar un nombre de variable como &lt;code&gt;ComponentA&lt;/code&gt; dentro de un objeto es una abreviatura de &lt;code&gt;ComponentA: ComponentA&lt;/code&gt; , lo que significa que el nombre de la variable es ambos:</target>
        </trans-unit>
        <trans-unit id="38d7decb45ee1373ac91755a507d8307efe29952" translate="yes" xml:space="preserve">
          <source>Note that in this method we update the state of our app without touching the DOM - all DOM manipulations are handled by Vue, and the code you write is focused on the underlying logic.</source>
          <target state="translated">Ten en cuenta que en este método actualizamos el estado de nuestra aplicación sin tocar el DOM-todas las manipulaciones de DOM son manejadas por Vue,y el código que escribes se centra en la lógica subyacente.</target>
        </trans-unit>
        <trans-unit id="d39c5b6e21dbfd1407f27da7320c3009d1f4fce3" translate="yes" xml:space="preserve">
          <source>Note that it&amp;rsquo;s &lt;strong&gt;not&lt;/strong&gt; recommended to use &lt;code&gt;v-if&lt;/code&gt; and &lt;code&gt;v-for&lt;/code&gt; together. Refer to &lt;a href=&quot;../style-guide/index#Avoid-v-if-with-v-for-essential&quot;&gt;style guide&lt;/a&gt; for details.</source>
          <target state="translated">Tenga en cuenta que &lt;strong&gt;no se&lt;/strong&gt; recomienda utilizar &lt;code&gt;v-if&lt;/code&gt; y &lt;code&gt;v-for&lt;/code&gt; juntos. Consulte la &lt;a href=&quot;../style-guide/index#Avoid-v-if-with-v-for-essential&quot;&gt;gu&amp;iacute;a de estilo&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="8cc9bca625b5e998dd62bb4f93dc90d8caa850ab" translate="yes" xml:space="preserve">
          <source>Note that modifier keys are different from regular keys and when used with &lt;code&gt;keyup&lt;/code&gt; events, they have to be pressed when the event is emitted. In other words, &lt;code&gt;keyup.ctrl&lt;/code&gt; will only trigger if you release a key while holding down &lt;code&gt;ctrl&lt;/code&gt;. It won&amp;rsquo;t trigger if you release the &lt;code&gt;ctrl&lt;/code&gt; key alone. If you do want such behaviour, use the &lt;code&gt;keyCode&lt;/code&gt; for &lt;code&gt;ctrl&lt;/code&gt; instead: &lt;code&gt;keyup.17&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que las teclas modificadoras son diferentes de las teclas normales y, cuando se utilizan con eventos de &lt;code&gt;keyup&lt;/code&gt; , deben presionarse cuando se emite el evento. En otras palabras, &lt;code&gt;keyup.ctrl&lt;/code&gt; solo se activar&amp;aacute; si suelta una tecla mientras mantiene presionada la tecla &lt;code&gt;ctrl&lt;/code&gt; . No se activar&amp;aacute; si suelta la tecla &lt;code&gt;ctrl&lt;/code&gt; solo. Si desea tal comportamiento, use el &lt;code&gt;keyCode&lt;/code&gt; para &lt;code&gt;ctrl&lt;/code&gt; en su lugar: &lt;code&gt;keyup.17&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="782e93758e1a8da260782325b450852c804d73f2" translate="yes" xml:space="preserve">
          <source>Note that objects and arrays in JavaScript are passed by reference, so if the prop is an array or object, mutating the object or array itself inside the child component &lt;strong&gt;will&lt;/strong&gt; affect parent state.</source>
          <target state="translated">Nota que los objetos y las matrices en JavaScript se pasan por referencia, as&amp;iacute; que si la h&amp;eacute;lice es una matriz o un objeto, mutando el objeto o la matriz de s&amp;iacute; mismo en el interior del componente secundario &lt;strong&gt;se&lt;/strong&gt; afectar el estado de los padres.</target>
        </trans-unit>
        <trans-unit id="3151ecc6011010f2ef8540f5f9ad70909763b9e7" translate="yes" xml:space="preserve">
          <source>Note that props are validated &lt;strong&gt;before&lt;/strong&gt; a component instance is created, so instance properties (e.g. &lt;code&gt;data&lt;/code&gt;, &lt;code&gt;computed&lt;/code&gt;, etc) will not be available inside &lt;code&gt;default&lt;/code&gt; or &lt;code&gt;validator&lt;/code&gt; functions.</source>
          <target state="translated">Tenga en cuenta que los accesorios se validan &lt;strong&gt;antes de&lt;/strong&gt; que se cree una instancia de componente, por lo que las propiedades de la instancia (por ejemplo , &lt;code&gt;data&lt;/code&gt; , &lt;code&gt;computed&lt;/code&gt; , etc.) no estar&amp;aacute;n disponibles dentro de las funciones &lt;code&gt;default&lt;/code&gt; o de &lt;code&gt;validator&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="84136e18c6c864e905f34757af495e8cd152f729" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; elements are still efficiently re-used, because they don&amp;rsquo;t have &lt;code&gt;key&lt;/code&gt; attributes.</source>
          <target state="translated">Tenga en cuenta que los elementos &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; todav&amp;iacute;a se reutilizan de manera eficiente, porque no tienen atributos &lt;code&gt;key&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c6f6de9e542ddf567ea5a5cf5a2069dcc0d7d80" translate="yes" xml:space="preserve">
          <source>Note that the abbreviated syntax for default slot &lt;strong&gt;cannot&lt;/strong&gt; be mixed with named slots, as it would lead to scope ambiguity:</source>
          <target state="translated">Tenga en cuenta que la sintaxis abreviada para la ranura predeterminada &lt;strong&gt;no se&lt;/strong&gt; puede mezclar con ranuras con nombre, ya que dar&amp;iacute;a lugar a ambig&amp;uuml;edad en el alcance:</target>
        </trans-unit>
        <trans-unit id="d9393e6c94f522abc9f4a9fa2054455519ccc108" translate="yes" xml:space="preserve">
          <source>Note that the same merge strategies are used in &lt;code&gt;Vue.extend()&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que las mismas estrategias de combinaci&amp;oacute;n se utilizan en &lt;code&gt;Vue.extend()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b19b165a75219255a66fd8c95f88d1f25d66fca4" translate="yes" xml:space="preserve">
          <source>Note that with &lt;code&gt;immediate&lt;/code&gt; option you won&amp;rsquo;t be able to unwatch the given property on the first callback call.</source>
          <target state="translated">Tenga en cuenta que con &lt;code&gt;immediate&lt;/code&gt; opci&amp;oacute;n inmediata no podr&amp;aacute; dejar de ver la propiedad dada en la primera llamada de devoluci&amp;oacute;n de llamada.</target>
        </trans-unit>
        <trans-unit id="09e5eb4daa67f823465bf8f428dfecbb3f5135d5" translate="yes" xml:space="preserve">
          <source>Note that you have to include &lt;code&gt;strict: true&lt;/code&gt; (or at least &lt;code&gt;noImplicitThis: true&lt;/code&gt; which is a part of &lt;code&gt;strict&lt;/code&gt; flag) to leverage type checking of &lt;code&gt;this&lt;/code&gt; in component methods otherwise it is always treated as &lt;code&gt;any&lt;/code&gt; type.</source>
          <target state="translated">Tenga en cuenta que debe incluir &lt;code&gt;strict: true&lt;/code&gt; (o al menos &lt;code&gt;noImplicitThis: true&lt;/code&gt; que es parte de &lt;code&gt;strict&lt;/code&gt; bandera estricta ) para aprovechar la verificaci&amp;oacute;n de tipos de &lt;code&gt;this&lt;/code&gt; en los m&amp;eacute;todos de componentes, de lo contrario, siempre se trata como &lt;code&gt;any&lt;/code&gt; tipo.</target>
        </trans-unit>
        <trans-unit id="3c9f11f51925aec7450ae0935dd3b229a967e2c1" translate="yes" xml:space="preserve">
          <source>Note that you must use &lt;a href=&quot;https://github.com/vuejs/vue-router&quot;&gt;Vue Router&lt;/a&gt; 2.4.0+ if you wish to use the above syntax for route components.</source>
          <target state="translated">Tenga en cuenta que debe usar &lt;a href=&quot;https://github.com/vuejs/vue-router&quot;&gt;Vue Router&lt;/a&gt; 2.4.0+ si desea usar la sintaxis anterior para los componentes de ruta.</target>
        </trans-unit>
        <trans-unit id="a9a477d195904adab9bde1cc82c2b08801e6b422" translate="yes" xml:space="preserve">
          <source>Note that you still have to declare the &lt;code&gt;checked&lt;/code&gt; prop in component&amp;rsquo;s &lt;code&gt;props&lt;/code&gt; option.</source>
          <target state="translated">Tenga en cuenta que todav&amp;iacute;a tiene que declarar el accesorio &lt;code&gt;checked&lt;/code&gt; en la opci&amp;oacute;n de &lt;code&gt;props&lt;/code&gt; del componente .</target>
        </trans-unit>
        <trans-unit id="ea28128f17211fcef9f44807c81be52f215e0561" translate="yes" xml:space="preserve">
          <source>Note the &lt;code&gt;is=&quot;todo-item&quot;&lt;/code&gt; attribute. This is necessary in DOM templates, because only an &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; element is valid inside a &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt;. It does the same thing as &lt;code&gt;&amp;lt;todo-item&amp;gt;&lt;/code&gt;, but works around a potential browser parsing error. See &lt;a href=&quot;components#DOM-Template-Parsing-Caveats&quot;&gt;DOM Template Parsing Caveats&lt;/a&gt; to learn more.</source>
          <target state="translated">Tenga en cuenta el atributo &lt;code&gt;is=&quot;todo-item&quot;&lt;/code&gt; . Esto es necesario en las plantillas DOM, porque solo un elemento &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; es v&amp;aacute;lido dentro de un &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; . Hace lo mismo que &lt;code&gt;&amp;lt;todo-item&amp;gt;&lt;/code&gt; , pero soluciona un posible error de an&amp;aacute;lisis del navegador. Consulte &lt;a href=&quot;components#DOM-Template-Parsing-Caveats&quot;&gt;Advertencias sobre el an&amp;aacute;lisis de plantillas DOM&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="056476ec0b830039894a5b3089419b4a5d60c537" translate="yes" xml:space="preserve">
          <source>Note, &lt;code&gt;&amp;lt;keep-alive&amp;gt;&lt;/code&gt; is designed for the case where it has one direct child component that is being toggled. It does not work if you have &lt;code&gt;v-for&lt;/code&gt; inside it. When there are multiple conditional children, as above, &lt;code&gt;&amp;lt;keep-alive&amp;gt;&lt;/code&gt; requires that only one child is rendered at a time.</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;&amp;lt;keep-alive&amp;gt;&lt;/code&gt; est&amp;aacute; dise&amp;ntilde;ado para el caso en el que tiene un componente secundario directo que se est&amp;aacute; alternando. No funciona si tiene &lt;code&gt;v-for&lt;/code&gt; dentro. Cuando hay varios hijos condicionales, como antes, &lt;code&gt;&amp;lt;keep-alive&amp;gt;&lt;/code&gt; requiere que solo se represente un hijo a la vez.</target>
        </trans-unit>
        <trans-unit id="1d29dd3fc2d4ef6a6ce13aedfe8172fb47b148bd" translate="yes" xml:space="preserve">
          <source>Note: On Macintosh keyboards, meta is the command key (⌘). On Windows keyboards, meta is the Windows key (⊞). On Sun Microsystems keyboards, meta is marked as a solid diamond (◆). On certain keyboards, specifically MIT and Lisp machine keyboards and successors, such as the Knight keyboard, space-cadet keyboard, meta is labeled &amp;ldquo;META&amp;rdquo;. On Symbolics keyboards, meta is labeled &amp;ldquo;META&amp;rdquo; or &amp;ldquo;Meta&amp;rdquo;.</source>
          <target state="translated">Nota: En los teclados Macintosh, meta es la tecla de comando (⌘). En los teclados de Windows, meta es la tecla de Windows (⊞). En los teclados de Sun Microsystems, la meta est&amp;aacute; marcada como un diamante s&amp;oacute;lido (◆). En ciertos teclados, espec&amp;iacute;ficamente los teclados de m&amp;aacute;quina MIT y Lisp y sucesores, como el teclado Knight, el teclado space-cadet, meta est&amp;aacute; etiquetado como &amp;ldquo;META&amp;rdquo;. En los teclados Symbolics, meta se etiqueta como &quot;META&quot; o &quot;Meta&quot;.</target>
        </trans-unit>
        <trans-unit id="9028e9d05d6a455c1974133f7e5293ddabaa337b" translate="yes" xml:space="preserve">
          <source>Note: in versions before 2.3.0, the &lt;code&gt;props&lt;/code&gt; option is required if you wish to accept props in a functional component. In 2.3.0+ you can omit the &lt;code&gt;props&lt;/code&gt; option and all attributes found on the component node will be implicitly extracted as props.</source>
          <target state="translated">Nota: en las versiones anteriores a la 2.3.0, la opci&amp;oacute;n &lt;code&gt;props&lt;/code&gt; es necesaria si desea aceptar props en un componente funcional. En 2.3.0+, puede omitir la opci&amp;oacute;n de &lt;code&gt;props&lt;/code&gt; y todos los atributos que se encuentran en el nodo del componente se extraer&amp;aacute;n impl&amp;iacute;citamente como accesorios.</target>
        </trans-unit>
        <trans-unit id="94a9d4709f41005aebf7f630aea0e9e8dcba6214" translate="yes" xml:space="preserve">
          <source>Note: the &lt;code&gt;provide&lt;/code&gt; and &lt;code&gt;inject&lt;/code&gt; bindings are NOT reactive. This is intentional. However, if you pass down an observed object, properties on that object do remain reactive.</source>
          <target state="translated">Nota: los enlaces de &lt;code&gt;provide&lt;/code&gt; e &lt;code&gt;inject&lt;/code&gt; NO son reactivos. Esto es intencional. Sin embargo, si transmite un objeto observado, las propiedades de ese objeto permanecen reactivas.</target>
        </trans-unit>
        <trans-unit id="458f74037e32ee6cfbdde797c11bd7a73de43a01" translate="yes" xml:space="preserve">
          <source>Note: this option does &lt;strong&gt;not&lt;/strong&gt; affect &lt;code&gt;class&lt;/code&gt; and &lt;code&gt;style&lt;/code&gt; bindings.</source>
          <target state="translated">Nota: esta opci&amp;oacute;n &lt;strong&gt;no&lt;/strong&gt; afecta &lt;code&gt;class&lt;/code&gt; enlaces de clase y &lt;code&gt;style&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0598de4737485dd16187bee300278ba69862eb70" translate="yes" xml:space="preserve">
          <source>Note: when mutating (rather than replacing) an Object or an Array, the old value will be the same as new value because they reference the same Object/Array. Vue doesn&amp;rsquo;t keep a copy of the pre-mutate value.</source>
          <target state="translated">Nota: al mutar (en lugar de reemplazar) un objeto o una matriz, el valor anterior ser&amp;aacute; el mismo que el nuevo porque hacen referencia al mismo objeto / matriz. Vue no guarda una copia del valor previo a la mutaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b91291f0de6e06db99bb183c76dabbf60ffa395f" translate="yes" xml:space="preserve">
          <source>Notice all actions that mutate the store&amp;rsquo;s state are put inside the store itself. This type of centralized state management makes it easier to understand what type of mutations could happen and how they are triggered. Now when something goes wrong, we&amp;rsquo;ll also have a log of what happened leading up to the bug.</source>
          <target state="translated">Observe que todas las acciones que mutan el estado de la tienda se colocan dentro de la propia tienda. Este tipo de gesti&amp;oacute;n estatal centralizada facilita la comprensi&amp;oacute;n de qu&amp;eacute; tipo de mutaciones pueden ocurrir y c&amp;oacute;mo se desencadenan. Ahora, cuando algo sale mal, tambi&amp;eacute;n tendremos un registro de lo que sucedi&amp;oacute; antes del error.</target>
        </trans-unit>
        <trans-unit id="5bc1f6f3474e7672908319c7bc94aae61f59580d" translate="yes" xml:space="preserve">
          <source>Notice that when clicking on the buttons, each one maintains its own, separate &lt;code&gt;count&lt;/code&gt;. That&amp;rsquo;s because each time you use a component, a new &lt;strong&gt;instance&lt;/strong&gt; of it is created.</source>
          <target state="translated">Tenga en cuenta que al hacer clic en los botones, cada uno mantiene su propia &lt;code&gt;count&lt;/code&gt; separada . Eso es porque cada vez que usa un componente, se crea una nueva &lt;strong&gt;instancia&lt;/strong&gt; del mismo.</target>
        </trans-unit>
        <trans-unit id="777758140398dbba4754b09995581bb165f2d561" translate="yes" xml:space="preserve">
          <source>Now &lt;code&gt;v-model&lt;/code&gt; should work perfectly with this component:</source>
          <target state="translated">Ahora &lt;code&gt;v-model&lt;/code&gt; deber&amp;iacute;a funcionar perfectamente con este componente:</target>
        </trans-unit>
        <trans-unit id="f41ecd46e8d6d6bb70e920ed57d983ae6565a184" translate="yes" xml:space="preserve">
          <source>Now both &lt;code&gt;ComponentA&lt;/code&gt; and &lt;code&gt;ComponentC&lt;/code&gt; can be used inside &lt;code&gt;ComponentB&lt;/code&gt;&amp;lsquo;s template.</source>
          <target state="translated">Ahora, tanto &lt;code&gt;ComponentA&lt;/code&gt; como &lt;code&gt;ComponentC&lt;/code&gt; se pueden usar dentro de la plantilla de &lt;code&gt;ComponentB&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="64af1694b13df77b316f8c73909dd8b963af9613" translate="yes" xml:space="preserve">
          <source>Now everything inside the &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; elements will be passed to the corresponding slots. Any content not wrapped in a &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; using &lt;code&gt;v-slot&lt;/code&gt; is assumed to be for the default slot.</source>
          <target state="translated">Ahora todo dentro de los elementos &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; se pasar&amp;aacute; a las ranuras correspondientes. Se asume que cualquier contenido que no est&amp;eacute; incluido en una &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; utilice &lt;code&gt;v-slot&lt;/code&gt; es para la ranura predeterminada.</target>
        </trans-unit>
        <trans-unit id="6d0f458e8cae4f3622f936273f3e1139e34d7a7b" translate="yes" xml:space="preserve">
          <source>Now in the component where you&amp;rsquo;ve defined this &lt;code&gt;ref&lt;/code&gt;, you can use:</source>
          <target state="translated">Ahora, en el componente donde ha definido esta &lt;code&gt;ref&lt;/code&gt; erencia , puede usar:</target>
        </trans-unit>
        <trans-unit id="10c100aabba7af200c0826cfd9a4189752cd557e" translate="yes" xml:space="preserve">
          <source>Now it&amp;rsquo;s time to take a deep dive! One of Vue&amp;rsquo;s most distinct features is the unobtrusive reactivity system. Models are just plain JavaScript objects. When you modify them, the view updates. It makes state management simple and intuitive, but it&amp;rsquo;s also important to understand how it works to avoid some common gotchas. In this section, we are going to dig into some of the lower-level details of Vue&amp;rsquo;s reactivity system.</source>
          <target state="translated">&amp;iexcl;Ahora es el momento de sumergirse en profundidad! Una de las caracter&amp;iacute;sticas m&amp;aacute;s distintivas de Vue es el sistema de reactividad discreto. Los modelos son objetos simples de JavaScript. Cuando los modifica, la vista se actualiza. Hace que la administraci&amp;oacute;n del estado sea simple e intuitiva, pero tambi&amp;eacute;n es importante comprender c&amp;oacute;mo funciona para evitar algunos errores comunes. En esta secci&amp;oacute;n, vamos a profundizar en algunos de los detalles de nivel inferior del sistema de reactividad de Vue.</target>
        </trans-unit>
        <trans-unit id="8b6e6c5e29a0011ecf92b2b3f2e105991af96fc7" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s add a button to enlarge the text right before the content of every post:</source>
          <target state="translated">Ahora agreguemos un bot&amp;oacute;n para ampliar el texto justo antes del contenido de cada publicaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="27f3edc7f43414bdb880e462618cc2a4be655f49" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s dive into an example, transitioning entering and leaving using the same CSS classes we&amp;rsquo;ve used previously:</source>
          <target state="translated">Ahora profundicemos en un ejemplo, haciendo la transici&amp;oacute;n de entrada y salida usando las mismas clases de CSS que usamos anteriormente:</target>
        </trans-unit>
        <trans-unit id="dd26b2548ee21e904e0d33fa95d291ffe37c263c" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s dive into an example. Here&amp;rsquo;s a JavaScript transition using Velocity.js:</source>
          <target state="translated">Ahora veamos un ejemplo. Aqu&amp;iacute; hay una transici&amp;oacute;n de JavaScript usando Velocity.js:</target>
        </trans-unit>
        <trans-unit id="db457f96df4f0407b03b33810d84f20e49792e2d" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s update the transition for our on/off buttons with &lt;code&gt;out-in&lt;/code&gt;:</source>
          <target state="translated">Ahora, actualice la transici&amp;oacute;n de nuestros botones de encendido / apagado con &lt;code&gt;out-in&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="850bba741090a632ab041dbea9329ab10babf270" translate="yes" xml:space="preserve">
          <source>Now the &lt;code&gt;&amp;lt;base-input&amp;gt;&lt;/code&gt; component is a &lt;strong&gt;fully transparent wrapper&lt;/strong&gt;, meaning it can be used exactly like a normal &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element: all the same attributes and listeners will work, without the &lt;code&gt;.native&lt;/code&gt; modifier.</source>
          <target state="translated">Ahora el componente &lt;code&gt;&amp;lt;base-input&amp;gt;&lt;/code&gt; es un &lt;strong&gt;contenedor completamente transparente&lt;/strong&gt; , lo que significa que se puede usar exactamente como un elemento &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; normal : los mismos atributos y oyentes funcionar&amp;aacute;n, sin el modificador &lt;code&gt;.native&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="33d4814b929f161b38b9f934ab2aa6a05b1be4d4" translate="yes" xml:space="preserve">
          <source>Now the &lt;em&gt;Posts&lt;/em&gt; tab maintains its state (the selected post) even when it&amp;rsquo;s not rendered. See &lt;a href=&quot;https://jsfiddle.net/chrisvfritz/Lp20op9o/&quot;&gt;this fiddle&lt;/a&gt; for the complete code.</source>
          <target state="translated">Ahora la pesta&amp;ntilde;a &lt;em&gt;Publicaciones&lt;/em&gt; mantiene su estado (la publicaci&amp;oacute;n seleccionada) incluso cuando no est&amp;aacute; renderizada. Consulte &lt;a href=&quot;https://jsfiddle.net/chrisvfritz/Lp20op9o/&quot;&gt;este viol&amp;iacute;n&lt;/a&gt; para obtener el c&amp;oacute;digo completo.</target>
        </trans-unit>
        <trans-unit id="3a866376561d170695076f998d16ef29475c4851" translate="yes" xml:space="preserve">
          <source>Now those inputs will be rendered from scratch each time you toggle. See for yourself:</source>
          <target state="translated">Ahora esas entradas se renderizarán desde cero cada vez que cambies.Compruébelo usted mismo:</target>
        </trans-unit>
        <trans-unit id="5237d0862d1e32d66a1238befdcec2a1cee4d6bd" translate="yes" xml:space="preserve">
          <source>Now we can pass the todo into each repeated component using &lt;code&gt;v-bind&lt;/code&gt;:</source>
          <target state="translated">Ahora podemos pasar la tarea a cada componente repetido usando &lt;code&gt;v-bind&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8ac2bcabccc1a40d27783fa177eb9745afd5270c" translate="yes" xml:space="preserve">
          <source>Now we get:</source>
          <target state="translated">Ahora lo conseguimos:</target>
        </trans-unit>
        <trans-unit id="923823ddc53818b43f37e1756295008b20a5e569" translate="yes" xml:space="preserve">
          <source>Now we&amp;rsquo;ll answer both what the community can do for you and what you can do for the community.</source>
          <target state="translated">Ahora responderemos qu&amp;eacute; puede hacer la comunidad por usted y qu&amp;eacute; puede hacer usted por la comunidad.</target>
        </trans-unit>
        <trans-unit id="65acc113a97fb20c77fd8e66d6b9e5577e37c2d1" translate="yes" xml:space="preserve">
          <source>Now when using &lt;code&gt;v-model&lt;/code&gt; on this component:</source>
          <target state="translated">Ahora, al usar &lt;code&gt;v-model&lt;/code&gt; en este componente:</target>
        </trans-unit>
        <trans-unit id="248dcb3a91e49c1782db9a10e1b75d0c45f374c4" translate="yes" xml:space="preserve">
          <source>Now when we use &lt;code&gt;&amp;lt;submit-button&amp;gt;&lt;/code&gt; in a parent component, providing no content for the slot:</source>
          <target state="translated">Ahora, cuando usamos &lt;code&gt;&amp;lt;submit-button&amp;gt;&lt;/code&gt; en un componente principal, sin proporcionar contenido para el espacio:</target>
        </trans-unit>
        <trans-unit id="a992bbc0f49c4600f1fce407f7a3883535b20007" translate="yes" xml:space="preserve">
          <source>Now when we use the &lt;code&gt;&amp;lt;todo-list&amp;gt;&lt;/code&gt; component, we can optionally define an alternative &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; for todo items, but with access to data from the child:</source>
          <target state="translated">Ahora, cuando usamos el componente &lt;code&gt;&amp;lt;todo-list&amp;gt;&lt;/code&gt; , podemos definir opcionalmente una &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; alternativa para los elementos de tareas pendientes, pero con acceso a los datos del ni&amp;ntilde;o:</target>
        </trans-unit>
        <trans-unit id="5c6ac744ac13f4f3529e5b95ada6cc236397759d" translate="yes" xml:space="preserve">
          <source>Now when you run &lt;code&gt;vm.fullName = 'John Doe'&lt;/code&gt;, the setter will be invoked and &lt;code&gt;vm.firstName&lt;/code&gt; and &lt;code&gt;vm.lastName&lt;/code&gt; will be updated accordingly.</source>
          <target state="translated">Ahora, cuando ejecute &lt;code&gt;vm.fullName = 'John Doe'&lt;/code&gt; , se invocar&amp;aacute; el establecedor y &lt;code&gt;vm.firstName&lt;/code&gt; y &lt;code&gt;vm.lastName&lt;/code&gt; se actualizar&amp;aacute;n en consecuencia.</target>
        </trans-unit>
        <trans-unit id="c95a512db9f39a3a016016301d2d32cc53d1129b" translate="yes" xml:space="preserve">
          <source>Now whenever &lt;code&gt;sourceOfTruth&lt;/code&gt; is mutated, both &lt;code&gt;vmA&lt;/code&gt; and &lt;code&gt;vmB&lt;/code&gt; will update their views automatically. Subcomponents within each of these instances would also have access via &lt;code&gt;this.$root.$data&lt;/code&gt;. We have a single source of truth now, but debugging would be a nightmare. Any piece of data could be changed by any part of our app at any time, without leaving a trace.</source>
          <target state="translated">Ahora, cada vez que se &lt;code&gt;sourceOfTruth&lt;/code&gt; , tanto &lt;code&gt;vmA&lt;/code&gt; como &lt;code&gt;vmB&lt;/code&gt; actualizar&amp;aacute;n sus vistas autom&amp;aacute;ticamente. Los subcomponentes dentro de cada una de estas instancias tambi&amp;eacute;n tendr&amp;iacute;an acceso a trav&amp;eacute;s de &lt;code&gt;this.$root.$data&lt;/code&gt; . Tenemos una &amp;uacute;nica fuente de verdad ahora, pero la depuraci&amp;oacute;n ser&amp;iacute;a una pesadilla. Cualquier parte de nuestra aplicaci&amp;oacute;n puede cambiar cualquier dato en cualquier momento, sin dejar rastro.</target>
        </trans-unit>
        <trans-unit id="f0a99cd123681e2aa2af5f62113a3388dd485458" translate="yes" xml:space="preserve">
          <source>Now you can compose it in another component&amp;rsquo;s template:</source>
          <target state="translated">Ahora puede componerlo en la plantilla de otro componente:</target>
        </trans-unit>
        <trans-unit id="a3cafea5f9fea2834964a51ae219c94edcf43d7b" translate="yes" xml:space="preserve">
          <source>Now, whenever a new property is added to &lt;code&gt;post&lt;/code&gt; objects, it will automatically be available inside &lt;code&gt;&amp;lt;blog-post&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Ahora, siempre que se agregue una nueva propiedad a los objetos de &lt;code&gt;post&lt;/code&gt; , autom&amp;aacute;ticamente estar&amp;aacute; disponible dentro de &lt;code&gt;&amp;lt;blog-post&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b7baa1d40c4ea29afc9098732bffee2a861a6c44" translate="yes" xml:space="preserve">
          <source>Number</source>
          <target state="translated">Number</target>
        </trans-unit>
        <trans-unit id="1249f1b2253683fc003ea8f094caa69928eaf837" translate="yes" xml:space="preserve">
          <source>Nuxt.js</source>
          <target state="translated">Nuxt.js</target>
        </trans-unit>
        <trans-unit id="f579c523960af1aec824c6fdc57af6d4abd76a1f" translate="yes" xml:space="preserve">
          <source>OR</source>
          <target state="translated">OR</target>
        </trans-unit>
        <trans-unit id="2883f191bc5ebfdc16c0813eff659b35363ea69b" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="translated">Object</target>
        </trans-unit>
        <trans-unit id="86580d14a7ddf3bcd41cb5bf79f5c784db2009b3" translate="yes" xml:space="preserve">
          <source>Object Change Detection Caveats</source>
          <target state="translated">Cuevas de detección de cambios en los objetos</target>
        </trans-unit>
        <trans-unit id="bff5a67a67ce40c0fd925410f2eb22f8e622ed24" translate="yes" xml:space="preserve">
          <source>Object Literals</source>
          <target state="translated">Literales de objetos</target>
        </trans-unit>
        <trans-unit id="68654e143c9a95a12dddf5b994152ad350c30fec" translate="yes" xml:space="preserve">
          <source>Object Syntax</source>
          <target state="translated">Sintaxis de los objetos</target>
        </trans-unit>
        <trans-unit id="955b2e0aa5e53a4916bce29cbfdc2fd4cc269476" translate="yes" xml:space="preserve">
          <source>Official Declaration in NPM Packages</source>
          <target state="translated">Declaración oficial en los paquetes de NPM</target>
        </trans-unit>
        <trans-unit id="e0d4eccd8c718c1a4aa53fa3e4adb3463704c6c3" translate="yes" xml:space="preserve">
          <source>Official Flux-Like Implementation</source>
          <target state="translated">Implementación oficial similar a la del flujo</target>
        </trans-unit>
        <trans-unit id="d41ddeb6775e329516c16fc6584211bbddf25a44" translate="yes" xml:space="preserve">
          <source>Official Router</source>
          <target state="translated">Router oficial...</target>
        </trans-unit>
        <trans-unit id="28ad6876beffc882a2da696718cda5f0b89ad0ed" translate="yes" xml:space="preserve">
          <source>On &lt;code&gt;input&lt;/code&gt;, emit its own custom &lt;code&gt;input&lt;/code&gt; event with the new value</source>
          <target state="translated">En la &lt;code&gt;input&lt;/code&gt; , emite su propio evento de &lt;code&gt;input&lt;/code&gt; personalizado con el nuevo valor</target>
        </trans-unit>
        <trans-unit id="8d04e03632e4eea5ab7fbb011f47571b7d133e29" translate="yes" xml:space="preserve">
          <source>On a higher level, we can divide components into two categories: presentational ones and logical ones. We recommend using templates for presentational components and render function / JSX for logical ones. The percentage of these components depends on the type of app you are building, but in general we find presentational ones to be much more common.</source>
          <target state="translated">En un nivel más alto,podemos dividir los componentes en dos categorías:los de presentación y los lógicos.Recomendamos el uso de plantillas para los componentes de presentación y la función de render/JSX para los lógicos.El porcentaje de estos componentes depende del tipo de aplicación que se esté construyendo,pero en general encontramos que los de presentación son mucho más comunes.</target>
        </trans-unit>
        <trans-unit id="ecfd81e3f5a0816680f9b8987dee9ab76e3a2d2b" translate="yes" xml:space="preserve">
          <source>On normal components, attributes not defined as props are automatically added to the root element of the component, replacing or &lt;a href=&quot;class-and-style&quot;&gt;intelligently merging with&lt;/a&gt; any existing attributes of the same name.</source>
          <target state="translated">En los componentes normales, los atributos no definidos como accesorios se agregan autom&amp;aacute;ticamente al elemento ra&amp;iacute;z del componente, reemplazando o &lt;a href=&quot;class-and-style&quot;&gt;fusion&amp;aacute;ndose inteligentemente con&lt;/a&gt; cualquier atributo existente del mismo nombre.</target>
        </trans-unit>
        <trans-unit id="115970ef5ff2b56182595889250a6ca56011969e" translate="yes" xml:space="preserve">
          <source>On root Vue instances (i.e. instances created with &lt;code&gt;new Vue({ ... })&lt;/code&gt;), you must use &lt;code&gt;propsData&lt;/code&gt; instead of &lt;code&gt;props&lt;/code&gt;.</source>
          <target state="translated">En instancias ra&amp;iacute;z de Vue (es decir, instancias creadas con &lt;code&gt;new Vue({ ... })&lt;/code&gt; ), debe usar &lt;code&gt;propsData&lt;/code&gt; en lugar de &lt;code&gt;props&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6cc2844f3ba73496715d5d711c0cabc37d43bc1d" translate="yes" xml:space="preserve">
          <source>On the other hand, &lt;code&gt;$refs&lt;/code&gt; are designed primarily for programmatic access in JavaScript - it is not recommended to rely on them in templates, because that would mean referring to state that does not belong to the instance itself. This would violate Vue&amp;rsquo;s data-driven view model.</source>
          <target state="translated">Por otro lado, los &lt;code&gt;$refs&lt;/code&gt; est&amp;aacute;n dise&amp;ntilde;ados principalmente para el acceso program&amp;aacute;tico en JavaScript; no se recomienda confiar en ellos en las plantillas, porque eso significar&amp;iacute;a hacer referencia a un estado que no pertenece a la instancia en s&amp;iacute;. Esto violar&amp;iacute;a el modelo de vista basado en datos de Vue.</target>
        </trans-unit>
        <trans-unit id="b540e34dd34eb0880938f77efa7424968025eadc" translate="yes" xml:space="preserve">
          <source>On the other hand, the runtime-only build is fully CSP-compliant. When using the runtime-only build with &lt;a href=&quot;https://github.com/vuejs-templates/webpack-simple&quot;&gt;Webpack + vue-loader&lt;/a&gt; or &lt;a href=&quot;https://github.com/vuejs-templates/browserify-simple&quot;&gt;Browserify + vueify&lt;/a&gt;, your templates will be precompiled into &lt;code&gt;render&lt;/code&gt; functions which work perfectly in CSP environments.</source>
          <target state="translated">Por otro lado, la compilaci&amp;oacute;n de solo tiempo de ejecuci&amp;oacute;n es totalmente compatible con CSP. Cuando utilice la compilaci&amp;oacute;n de solo tiempo de ejecuci&amp;oacute;n con &lt;a href=&quot;https://github.com/vuejs-templates/webpack-simple&quot;&gt;Webpack + vue-loader&lt;/a&gt; o &lt;a href=&quot;https://github.com/vuejs-templates/browserify-simple&quot;&gt;Browserify + vueify&lt;/a&gt; , sus plantillas se precompilar&amp;aacute;n en funciones de &lt;code&gt;render&lt;/code&gt; izado que funcionan perfectamente en entornos CSP.</target>
        </trans-unit>
        <trans-unit id="8d767e2d19bb7e35a75d58e381e3d41454c0c3f2" translate="yes" xml:space="preserve">
          <source>On this page, we&amp;rsquo;ll only cover entering, leaving, and list transitions, but you can see the next section for &lt;a href=&quot;transitioning-state&quot;&gt;managing state transitions&lt;/a&gt;.</source>
          <target state="translated">En esta p&amp;aacute;gina, solo cubriremos las transiciones de entrada, salida y lista, pero puede ver la siguiente secci&amp;oacute;n para &lt;a href=&quot;transitioning-state&quot;&gt;administrar las transiciones de estado&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="37eb05f4d4e96c1234bdb668f4b2f5b554eed08a" translate="yes" xml:space="preserve">
          <source>Once a prop is registered, you can pass data to it as a custom attribute, like this:</source>
          <target state="translated">Una vez registrado un accesorio,puedes pasarle datos como un atributo personalizado,así:</target>
        </trans-unit>
        <trans-unit id="66af394c02eb313b263b2c4b24ed3c50b4c07c98" translate="yes" xml:space="preserve">
          <source>Once again, try not to overuse this pattern. While convenient in those rare cases when you have to render a lot of static content, it&amp;rsquo;s simply not necessary unless you actually notice slow rendering &amp;ndash; plus, it could cause a lot of confusion later. For example, imagine another developer who&amp;rsquo;s not familiar with &lt;code&gt;v-once&lt;/code&gt; or simply misses it in the template. They might spend hours trying to figure out why the template isn&amp;rsquo;t updating correctly.</source>
          <target state="translated">Una vez m&amp;aacute;s, intente no abusar de este patr&amp;oacute;n. Si bien es conveniente en esos raros casos en los que tiene que renderizar una gran cantidad de contenido est&amp;aacute;tico, simplemente no es necesario a menos que realmente note un renderizado lento, adem&amp;aacute;s, podr&amp;iacute;a causar mucha confusi&amp;oacute;n m&amp;aacute;s adelante. Por ejemplo, imagine otro desarrollador que no est&amp;eacute; familiarizado con &lt;code&gt;v-once&lt;/code&gt; o simplemente no lo vea en la plantilla. Pueden pasar horas tratando de averiguar por qu&amp;eacute; la plantilla no se actualiza correctamente.</target>
        </trans-unit>
        <trans-unit id="60427c06e75efde50ce039ae0b452cc000ae7ef8" translate="yes" xml:space="preserve">
          <source>Once observed, you can no longer add reactive properties to the root data object. It is therefore recommended to declare all root-level reactive properties upfront, before creating the instance.</source>
          <target state="translated">Una vez observado,ya no se pueden añadir propiedades reactivas al objeto de datos raíz.Por lo tanto,se recomienda declarar todas las propiedades reactivas a nivel de raíz por adelantado,antes de crear la instancia.</target>
        </trans-unit>
        <trans-unit id="decb1a1fde9ee9b3e759b559bcf2ede344d13377" translate="yes" xml:space="preserve">
          <source>Once you feel comfortable with the knowledge you&amp;rsquo;ve just digested, we recommend coming back to read the full guide on &lt;a href=&quot;components-dynamic-async&quot;&gt;Dynamic &amp;amp; Async Components&lt;/a&gt;, as well as the other pages in the Components In-Depth section of the sidebar.</source>
          <target state="translated">Una vez que se sienta c&amp;oacute;modo con el conocimiento que acaba de digerir, le recomendamos que vuelva a leer la gu&amp;iacute;a completa sobre &lt;a href=&quot;components-dynamic-async&quot;&gt;Componentes din&amp;aacute;micos y as&amp;iacute;ncronos&lt;/a&gt; , as&amp;iacute; como las otras p&amp;aacute;ginas en la secci&amp;oacute;n Componentes en profundidad de la barra lateral.</target>
        </trans-unit>
        <trans-unit id="f50329c826448bbda1ee5ce8c2c416fac8c003a3" translate="yes" xml:space="preserve">
          <source>One important note is that these FLIP transitions do not work with elements set to &lt;code&gt;display: inline&lt;/code&gt;. As an alternative, you can use &lt;code&gt;display: inline-block&lt;/code&gt; or place elements in a flex context.</source>
          <target state="translated">Una nota importante es que estas transiciones FLIP no funcionan con elementos configurados para &lt;code&gt;display: inline&lt;/code&gt; . Como alternativa, puede usar &lt;code&gt;display: inline-block&lt;/code&gt; o colocar elementos en un contexto flexible.</target>
        </trans-unit>
        <trans-unit id="15a19c04bf3761da4954cadebd24295dde2b8675" translate="yes" xml:space="preserve">
          <source>One important thing to note is that &lt;strong&gt;separation of concerns is not equal to separation of file types.&lt;/strong&gt; In modern UI development, we have found that instead of dividing the codebase into three huge layers that interweave with one another, it makes much more sense to divide them into loosely-coupled components and compose them. Inside a component, its template, logic and styles are inherently coupled, and collocating them actually makes the component more cohesive and maintainable.</source>
          <target state="translated">Una cosa importante a tener en cuenta es que la &lt;strong&gt;separaci&amp;oacute;n de preocupaciones no es igual a la separaci&amp;oacute;n de tipos de archivos. &lt;/strong&gt;En el desarrollo de la interfaz de usuario moderna, hemos descubierto que en lugar de dividir la base de c&amp;oacute;digo en tres capas enormes que se entrelazan entre s&amp;iacute;, tiene mucho m&amp;aacute;s sentido dividirlas en componentes sueltos y componerlos. Dentro de un componente, su plantilla, l&amp;oacute;gica y estilos est&amp;aacute;n intr&amp;iacute;nsecamente acoplados, y su ubicaci&amp;oacute;n hace que el componente sea m&amp;aacute;s cohesivo y f&amp;aacute;cil de mantener.</target>
        </trans-unit>
        <trans-unit id="ba41464fb51dc3d17291a7984b07e3ead107d6cd" translate="yes" xml:space="preserve">
          <source>One of the most common transition types uses CSS transitions. Here&amp;rsquo;s an example:</source>
          <target state="translated">Uno de los tipos de transici&amp;oacute;n m&amp;aacute;s comunes utiliza transiciones CSS. He aqu&amp;iacute; un ejemplo:</target>
        </trans-unit>
        <trans-unit id="7b71ee323d52ac501596f9b35d6767689ddb4ebc" translate="yes" xml:space="preserve">
          <source>One of the most common uses for these methods is to communicate between a parent and its direct children. In these cases, you can actually &lt;a href=&quot;components#Form-Input-Components-using-Custom-Events&quot;&gt;listen to an &lt;code&gt;$emit&lt;/code&gt; from a child with &lt;code&gt;v-on&lt;/code&gt;&lt;/a&gt;. This allows you to keep the convenience of events with added explicitness.</source>
          <target state="translated">Uno de los usos m&amp;aacute;s comunes de estos m&amp;eacute;todos es comunicarse entre un padre y sus hijos directos. En estos casos, puede &lt;a href=&quot;components#Form-Input-Components-using-Custom-Events&quot;&gt;escuchar un &lt;code&gt;$emit&lt;/code&gt; de un ni&amp;ntilde;o con &lt;code&gt;v-on&lt;/code&gt; &lt;/a&gt; . Esto le permite mantener la conveniencia de los eventos con mayor claridad.</target>
        </trans-unit>
        <trans-unit id="70774a581a1c775647bf86a829f4e0651d0e222a" translate="yes" xml:space="preserve">
          <source>One or More Named Parameters &lt;sup&gt;changed&lt;/sup&gt;</source>
          <target state="translated">Uno o m&amp;aacute;s par&amp;aacute;metros nombrados han &lt;sup&gt;cambiado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="4e3d2bc9560217cd384652200da10fbf0bdb8e0b" translate="yes" xml:space="preserve">
          <source>One thing to note: similar to how &lt;code&gt;v-bind:class&lt;/code&gt; and &lt;code&gt;v-bind:style&lt;/code&gt; have special treatment in templates, they have their own top-level fields in VNode data objects. This object also allows you to bind normal HTML attributes as well as DOM properties such as &lt;code&gt;innerHTML&lt;/code&gt; (this would replace the &lt;code&gt;v-html&lt;/code&gt; directive):</source>
          <target state="translated">Una cosa a tener en cuenta: similar a c&amp;oacute;mo &lt;code&gt;v-bind:class&lt;/code&gt; y &lt;code&gt;v-bind:style&lt;/code&gt; tienen un tratamiento especial en las plantillas, tienen sus propios campos de nivel superior en los objetos de datos VNode. Este objeto tambi&amp;eacute;n le permite vincular atributos HTML normales, as&amp;iacute; como propiedades DOM como &lt;code&gt;innerHTML&lt;/code&gt; (esto reemplazar&amp;iacute;a la directiva &lt;code&gt;v-html&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="0d00cba8d56cb34c07366778b058997e1e6be989" translate="yes" xml:space="preserve">
          <source>One time bindings (&lt;code&gt;{{* foo }}&lt;/code&gt;) have been replaced by the new &lt;a href=&quot;../api/index#v-once&quot;&gt;&lt;code&gt;v-once&lt;/code&gt; directive&lt;/a&gt;.</source>
          <target state="translated">Los enlaces &amp;uacute;nicos ( &lt;code&gt;{{* foo }}&lt;/code&gt; ) han sido reemplazados por la nueva &lt;a href=&quot;../api/index#v-once&quot;&gt;directiva &lt;/a&gt; &lt;code&gt;v-once&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b6a0ca5f17117a2d79de1ddff5f7c2037c280f5f" translate="yes" xml:space="preserve">
          <source>One-Time Bindings &lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">Enlaces &amp;uacute;nicos &lt;sup&gt;reemplazados&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="6a82bece6c6f4d9547ea740b83ea3c0446063eb1" translate="yes" xml:space="preserve">
          <source>One-Way Data Flow</source>
          <target state="translated">Flujo de datos unidireccional</target>
        </trans-unit>
        <trans-unit id="545c63628a39318763f613482d1fbb98218b985f" translate="yes" xml:space="preserve">
          <source>Only UMD builds are available from Bower.</source>
          <target state="translated">Sólo las construcciones de UMD están disponibles en Bower.</target>
        </trans-unit>
        <trans-unit id="afb58a0b3374e0000a3d5235d1868b2071496402" translate="yes" xml:space="preserve">
          <source>Only Vue Router 2 is compatible with Vue 2, so if you&amp;rsquo;re updating Vue, you&amp;rsquo;ll have to update Vue Router as well. That&amp;rsquo;s why we&amp;rsquo;ve included details on the migration path here in the main docs. For a complete guide on using the new Vue Router, see the &lt;a href=&quot;https://router.vuejs.org/en/&quot;&gt;Vue Router docs&lt;/a&gt;.</source>
          <target state="translated">Solo Vue Router 2 es compatible con Vue 2, por lo que si est&amp;aacute; actualizando Vue, tambi&amp;eacute;n tendr&amp;aacute; que actualizar Vue Router. Es por eso que hemos incluido detalles sobre la ruta de migraci&amp;oacute;n aqu&amp;iacute; en los documentos principales. Para obtener una gu&amp;iacute;a completa sobre el uso del nuevo Vue Router, consulte los &lt;a href=&quot;https://router.vuejs.org/en/&quot;&gt;documentos&lt;/a&gt; del Vue Router .</target>
        </trans-unit>
        <trans-unit id="83950822db2f31bcab4a982049e8a2377ef9aa81" translate="yes" xml:space="preserve">
          <source>Only Vue Router 2 is compatible with Vue 2, so yes, you&amp;rsquo;ll have to follow the &lt;a href=&quot;migration-vue-router&quot;&gt;migration path for Vue Router&lt;/a&gt; as well. Fortunately, most applications don&amp;rsquo;t have a lot of router code, so this likely won&amp;rsquo;t take more than an hour.</source>
          <target state="translated">Solo Vue Router 2 es compatible con Vue 2, as&amp;iacute; que s&amp;iacute;, tambi&amp;eacute;n tendr&amp;aacute;s que seguir la &lt;a href=&quot;migration-vue-router&quot;&gt;ruta de migraci&amp;oacute;n para Vue Router&lt;/a&gt; . Afortunadamente, la mayor&amp;iacute;a de las aplicaciones no tienen mucho c&amp;oacute;digo de enrutador, por lo que es probable que esto no demore m&amp;aacute;s de una hora.</target>
        </trans-unit>
        <trans-unit id="2cbd6f69ac9f00bc6cc9a5cada50b773f8b9b204" translate="yes" xml:space="preserve">
          <source>Only in 2.2.0+: Also works with Array + index.</source>
          <target state="translated">Sólo en 2.2.0+:También funciona con el índice Array +.</target>
        </trans-unit>
        <trans-unit id="95478f28e516ba5806445048a3c04633ee9620d8" translate="yes" xml:space="preserve">
          <source>Optimization Efforts</source>
          <target state="translated">Esfuerzos de optimización</target>
        </trans-unit>
        <trans-unit id="780c075090673488095ee8c24e310c188ceb0e25" translate="yes" xml:space="preserve">
          <source>Option Merging</source>
          <target state="translated">opción de fusión</target>
        </trans-unit>
        <trans-unit id="34b239efa2fca3d9404779824c96746803cb0ac3" translate="yes" xml:space="preserve">
          <source>Options / Assets</source>
          <target state="translated">Opciones/Activos</target>
        </trans-unit>
        <trans-unit id="a8322b7d3e6ea2843e0f110827e9f381192e83db" translate="yes" xml:space="preserve">
          <source>Options / Composition</source>
          <target state="translated">Opciones/Composición</target>
        </trans-unit>
        <trans-unit id="23f8ac645a29b2a587df1e001744b1d9555b758c" translate="yes" xml:space="preserve">
          <source>Options / DOM</source>
          <target state="translated">Opciones/DOM</target>
        </trans-unit>
        <trans-unit id="7e61ca3b6c7817347db226ad3551cc64c2d446f7" translate="yes" xml:space="preserve">
          <source>Options / Data</source>
          <target state="translated">Opciones/Datos</target>
        </trans-unit>
        <trans-unit id="83461f255e0b700d1fc468a6266119fa610f9019" translate="yes" xml:space="preserve">
          <source>Options / Lifecycle Hooks</source>
          <target state="translated">Opciones/Ganchos para el ciclo de vida</target>
        </trans-unit>
        <trans-unit id="7d2f97ccdee65e286d78a496a5ee8cd549c930ee" translate="yes" xml:space="preserve">
          <source>Options / Misc</source>
          <target state="translated">Opciones/Misc</target>
        </trans-unit>
        <trans-unit id="c65a7777ad439fc6385d6da8d4c12a4f89868164" translate="yes" xml:space="preserve">
          <source>Options such as &lt;code&gt;acceptStatement&lt;/code&gt;, &lt;code&gt;deep&lt;/code&gt;, &lt;code&gt;priority&lt;/code&gt;, etc have all been removed. To replace &lt;code&gt;twoWay&lt;/code&gt; directives, see &lt;a href=&quot;#Two-Way-Filters-replaced&quot;&gt;this example&lt;/a&gt;.</source>
          <target state="translated">Se han eliminado todas las opciones como &lt;code&gt;acceptStatement&lt;/code&gt; , &lt;code&gt;deep&lt;/code&gt; , &lt;code&gt;priority&lt;/code&gt; , etc. Para reemplazar &lt;code&gt;twoWay&lt;/code&gt; directivas twoWay , vea &lt;a href=&quot;#Two-Way-Filters-replaced&quot;&gt;este ejemplo&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="268262a68726a842a9214f48a664175ac456e7a4" translate="yes" xml:space="preserve">
          <source>Options that expect object values, for example &lt;code&gt;methods&lt;/code&gt;, &lt;code&gt;components&lt;/code&gt; and &lt;code&gt;directives&lt;/code&gt;, will be merged into the same object. The component&amp;rsquo;s options will take priority when there are conflicting keys in these objects:</source>
          <target state="translated">Las opciones que esperan valores de objeto, por ejemplo , &lt;code&gt;methods&lt;/code&gt; , &lt;code&gt;components&lt;/code&gt; y &lt;code&gt;directives&lt;/code&gt; , se fusionar&amp;aacute;n en el mismo objeto. Las opciones del componente tendr&amp;aacute;n prioridad cuando haya claves en conflicto en estos objetos:</target>
        </trans-unit>
        <trans-unit id="6e8a33817f19f064f5e6cf9b1efc94083145cda9" translate="yes" xml:space="preserve">
          <source>Or a data/computed property:</source>
          <target state="translated">O una propiedad de datos/computadora:</target>
        </trans-unit>
        <trans-unit id="60f24c4199344a7f41d53a7637411a2eabdf966c" translate="yes" xml:space="preserve">
          <source>Or a render function:</source>
          <target state="translated">O una función de representación:</target>
        </trans-unit>
        <trans-unit id="023f1403c5535c7569fdca6e12645578c310b4c5" translate="yes" xml:space="preserve">
          <source>Or alternatively, you could use Webpack&amp;rsquo;s asynchronous &lt;code&gt;import&lt;/code&gt; when you register the component locally:</source>
          <target state="translated">O alternativamente, puede usar la &lt;code&gt;import&lt;/code&gt; aci&amp;oacute;n asincr&amp;oacute;nica de Webpack cuando registre el componente localmente:</target>
        </trans-unit>
        <trans-unit id="45c03a2813f8f4d2212c4aad0f6ca1365bfc8c76" translate="yes" xml:space="preserve">
          <source>Or better yet, pass removal methods an index:</source>
          <target state="translated">O mejor aún,pasar los métodos de eliminación un índice:</target>
        </trans-unit>
        <trans-unit id="7655b19551e9be2b132e49ba50a30e1355a9890c" translate="yes" xml:space="preserve">
          <source>Or even other components:</source>
          <target state="translated">O incluso otros componentes:</target>
        </trans-unit>
        <trans-unit id="03b6295d62d0a9f390c82c14d8335ae12a8dffb8" translate="yes" xml:space="preserve">
          <source>Or if &lt;code&gt;myElement&lt;/code&gt; is the last child:</source>
          <target state="translated">O si &lt;code&gt;myElement&lt;/code&gt; es el &amp;uacute;ltimo hijo:</target>
        </trans-unit>
        <trans-unit id="a001bd7723a1c2e569009fd7dcd66c9ec91d9d8c" translate="yes" xml:space="preserve">
          <source>Or if you&amp;rsquo;re using ES2015 modules, such as through Babel and Webpack, that might look more like:</source>
          <target state="translated">O si est&amp;aacute; utilizando m&amp;oacute;dulos ES2015, como a trav&amp;eacute;s de Babel y Webpack, eso podr&amp;iacute;a parecerse m&amp;aacute;s a:</target>
        </trans-unit>
        <trans-unit id="24f03f9044ac60a104f95613db5b63ecc9c3a137" translate="yes" xml:space="preserve">
          <source>Or with a render function:</source>
          <target state="translated">O con una función de representación:</target>
        </trans-unit>
        <trans-unit id="7f55d71b1414a39798d6cca5dd9a4e4bcb171abc" translate="yes" xml:space="preserve">
          <source>Or with component methods:</source>
          <target state="translated">O con métodos de componentes:</target>
        </trans-unit>
        <trans-unit id="014d7bb6d9a77fedd188db250f7b0d093aca38d2" translate="yes" xml:space="preserve">
          <source>Or, if the event handler is a method:</source>
          <target state="translated">O,si el manejador de eventos es un método:</target>
        </trans-unit>
        <trans-unit id="283f8ac5294276aa36ea18c510c09f047be7a9ce" translate="yes" xml:space="preserve">
          <source>Or, if you&amp;rsquo;re using the runtime-only build of Vue:</source>
          <target state="translated">O, si est&amp;aacute; utilizando la compilaci&amp;oacute;n solo en tiempo de ejecuci&amp;oacute;n de Vue:</target>
        </trans-unit>
        <trans-unit id="42dd049e1164508d70fdffd3fa7096495d134200" translate="yes" xml:space="preserve">
          <source>Or, the &lt;code&gt;slot&lt;/code&gt; attribute can also be used directly on a normal element:</source>
          <target state="translated">O el atributo de &lt;code&gt;slot&lt;/code&gt; tambi&amp;eacute;n se puede usar directamente en un elemento normal:</target>
        </trans-unit>
        <trans-unit id="eda804a2c09c29b8cf6a5a0b90c532b90ce7782e" translate="yes" xml:space="preserve">
          <source>Or, using &lt;a href=&quot;https://github.com/hughsk/envify&quot;&gt;envify&lt;/a&gt; with Grunt and &lt;a href=&quot;https://github.com/jmreidy/grunt-browserify&quot;&gt;grunt-browserify&lt;/a&gt;:</source>
          <target state="translated">O, usando &lt;a href=&quot;https://github.com/hughsk/envify&quot;&gt;envify&lt;/a&gt; con Grunt y &lt;a href=&quot;https://github.com/jmreidy/grunt-browserify&quot;&gt;grunt-browserify&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="4a6aaeff2cbead89c1f4935f438fab6a604b15ba" translate="yes" xml:space="preserve">
          <source>Or, using &lt;a href=&quot;https://github.com/hughsk/envify&quot;&gt;envify&lt;/a&gt; with Gulp:</source>
          <target state="translated">O, usando &lt;a href=&quot;https://github.com/hughsk/envify&quot;&gt;envify&lt;/a&gt; con Gulp:</target>
        </trans-unit>
        <trans-unit id="1dde4fa7292ce9cc3269b98cdb60ec01006edb1f" translate="yes" xml:space="preserve">
          <source>Order matters when using modifiers because the relevant code is generated in the same order. Therefore using &lt;code&gt;v-on:click.prevent.self&lt;/code&gt; will prevent &lt;strong&gt;all clicks&lt;/strong&gt; while &lt;code&gt;v-on:click.self.prevent&lt;/code&gt; will only prevent clicks on the element itself.</source>
          <target state="translated">El orden es importante cuando se utilizan modificadores porque el c&amp;oacute;digo relevante se genera en el mismo orden. Por lo tanto, usar &lt;code&gt;v-on:click.prevent.self&lt;/code&gt; evitar&amp;aacute; &lt;strong&gt;todos los clics,&lt;/strong&gt; mientras que &lt;code&gt;v-on:click.self.prevent&lt;/code&gt; solo evitar&amp;aacute; los clics en el elemento en s&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="39e64d7abff6f773ffb6cbec098e4c76feffd596" translate="yes" xml:space="preserve">
          <source>Order of words in component names</source>
          <target state="translated">Orden de las palabras en los nombres de los componentes</target>
        </trans-unit>
        <trans-unit id="4ca3deef66606ab2cc6dd3240ad8a0d842c161e3" translate="yes" xml:space="preserve">
          <source>Order of words in component names &lt;sup&gt;strongly recommended&lt;/sup&gt;</source>
          <target state="translated">Se &lt;sup&gt;recomienda encarecidamente el&lt;/sup&gt; orden de las palabras en los nombres de los componentes&lt;sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="ce2a84f2c2447c5ea7220c9144eb3ca335437fca" translate="yes" xml:space="preserve">
          <source>Organizing Components</source>
          <target state="translated">Componentes de la organización</target>
        </trans-unit>
        <trans-unit id="c5c0f6920c95f31314076af49b17314ea73698db" translate="yes" xml:space="preserve">
          <source>Organizing Transitions into Components</source>
          <target state="translated">Organización de las transiciones en los componentes</target>
        </trans-unit>
        <trans-unit id="0ba799c410addb3c357f8f4ace9cc3fe6bde69ff" translate="yes" xml:space="preserve">
          <source>Other Examples</source>
          <target state="translated">Otros ejemplos</target>
        </trans-unit>
        <trans-unit id="b8975bed11b093ad4d25765fbdba52b25cdf43ca" translate="yes" xml:space="preserve">
          <source>Our &lt;a href=&quot;https://vuejs.org/coc&quot;&gt;Code of Conduct&lt;/a&gt; is a guide to make it easier to enrich all of us and the technical communities in which we participate.</source>
          <target state="translated">Nuestro &lt;a href=&quot;https://vuejs.org/coc&quot;&gt;C&amp;oacute;digo de Conducta&lt;/a&gt; es una gu&amp;iacute;a para facilitar el enriquecimiento de todos nosotros y de las comunidades t&amp;eacute;cnicas en las que participamos.</target>
        </trans-unit>
        <trans-unit id="e13c5dab7f9b9edcb291ceb3ccaa49cace4cfdc4" translate="yes" xml:space="preserve">
          <source>Our custom directive is now flexible enough to support a few different use cases.</source>
          <target state="translated">Nuestra directiva personalizada es ahora lo suficientemente flexible como para soportar unos pocos casos de uso diferentes.</target>
        </trans-unit>
        <trans-unit id="37f52ec20ab2f8bf7b37f62b547cb8e20c076916" translate="yes" xml:space="preserve">
          <source>Our setup code is kept separate from our cleanup code, making it more difficult to programmatically clean up anything we set up.</source>
          <target state="translated">Nuestro código de configuración se mantiene separado de nuestro código de limpieza,lo que dificulta la limpieza programada de cualquier cosa que hayamos configurado.</target>
        </trans-unit>
        <trans-unit id="238d7a51a5c3679447b882c1766791e18087ee23" translate="yes" xml:space="preserve">
          <source>Over time though, Knockout development has slowed and it&amp;rsquo;s begun to show its age a little. For example, its component system lacks a full set of lifecycle hooks and although it&amp;rsquo;s a very common use case, the interface for passing children to a component feels a little clunky compared to &lt;a href=&quot;components#Content-Distribution-with-Slots&quot;&gt;Vue&amp;rsquo;s&lt;/a&gt;.</source>
          <target state="translated">Sin embargo, con el tiempo, el desarrollo de Knockout se ha ralentizado y ha comenzado a mostrar un poco su edad. Por ejemplo, su sistema de componentes carece de un conjunto completo de ganchos de ciclo de vida y, aunque es un caso de uso muy com&amp;uacute;n, la interfaz para pasar hijos a un componente se siente un poco torpe en comparaci&amp;oacute;n con la de &lt;a href=&quot;components#Content-Distribution-with-Slots&quot;&gt;Vue&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="801ee7630523d9225a5832eb0b586c416639bcdd" translate="yes" xml:space="preserve">
          <source>Overall this removes the need for a whole class of performance optimizations from the developer&amp;rsquo;s plate, and allows them to focus more on building the app itself as it scales.</source>
          <target state="translated">En general, esto elimina la necesidad de una clase completa de optimizaciones de rendimiento de la placa del desarrollador y les permite enfocarse m&amp;aacute;s en construir la aplicaci&amp;oacute;n en s&amp;iacute; a medida que escala.</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="9ddaaee77cc1ce72a49a759b344df34d9c4b8e47" translate="yes" xml:space="preserve">
          <source>Parcel</source>
          <target state="translated">Parcel</target>
        </trans-unit>
        <trans-unit id="33422ae8d86c599fdf8a4eca4a9f0b44c416cdcc" translate="yes" xml:space="preserve">
          <source>Partials have been removed in favor of more explicit data flow between components, using props. Unless you&amp;rsquo;re using a partial in a performance-critical area, the recommendation is to use a &lt;a href=&quot;components&quot;&gt;normal component&lt;/a&gt; instead. If you were dynamically binding the &lt;code&gt;name&lt;/code&gt; of a partial, you can use a &lt;a href=&quot;components#Dynamic-Components&quot;&gt;dynamic component&lt;/a&gt;.</source>
          <target state="translated">Los parciales se han eliminado en favor de un flujo de datos m&amp;aacute;s expl&amp;iacute;cito entre componentes, utilizando accesorios. A menos que est&amp;eacute; utilizando un &lt;a href=&quot;components&quot;&gt;componente&lt;/a&gt; parcial en un &amp;aacute;rea de rendimiento cr&amp;iacute;tico, la recomendaci&amp;oacute;n es utilizar un componente normal en su lugar. Si estaba vinculando din&amp;aacute;micamente el &lt;code&gt;name&lt;/code&gt; de un parcial, puede usar un &lt;a href=&quot;components#Dynamic-Components&quot;&gt;componente din&amp;aacute;mico&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="338863b7eee72484e07f62862d08e6032c44cc9e" translate="yes" xml:space="preserve">
          <source>PascalCase has a few advantages over kebab-case:</source>
          <target state="translated">El PascalCase tiene algunas ventajas sobre el kebab-case:</target>
        </trans-unit>
        <trans-unit id="548d3885edc6e4335d13093c595410a7b884affc" translate="yes" xml:space="preserve">
          <source>PascalCase works best with autocompletion in code editors, as it&amp;rsquo;s consistent with how we reference components in JS(X) and templates, wherever possible. However, mixed case filenames can sometimes create issues on case-insensitive file systems, which is why kebab-case is also perfectly acceptable.</source>
          <target state="translated">PascalCase funciona mejor con el autocompletado en editores de c&amp;oacute;digo, ya que es coherente con la forma en que hacemos referencia a componentes en JS (X) y plantillas, siempre que sea posible. Sin embargo, los nombres de archivo de may&amp;uacute;sculas y min&amp;uacute;sculas a veces pueden crear problemas en los sistemas de archivos que no distinguen entre may&amp;uacute;sculas y min&amp;uacute;sculas, por lo que kebab-case tambi&amp;eacute;n es perfectamente aceptable.</target>
        </trans-unit>
        <trans-unit id="7a196eac2c28fafbe4d9187661633bcbf6027ce5" translate="yes" xml:space="preserve">
          <source>Pass props to an instance during its creation. This is primarily intended to make unit testing easier.</source>
          <target state="translated">Pasar los accesorios a una instancia durante su creación.Esto tiene como objetivo principal facilitar las pruebas de la unidad.</target>
        </trans-unit>
        <trans-unit id="b15f86774ec499f2e12e99cefb07c19682388f39" translate="yes" xml:space="preserve">
          <source>Passing Attributes and Events to Child Elements/Components</source>
          <target state="translated">Pasar los atributos y eventos a los elementos/componentes del niño</target>
        </trans-unit>
        <trans-unit id="2d887895f60f5b27f1b6d8b4caca996b7ba1b2ec" translate="yes" xml:space="preserve">
          <source>Passing Data to Child Components with Props</source>
          <target state="translated">Pasar los datos a los componentes infantiles con los accesorios</target>
        </trans-unit>
        <trans-unit id="433763659eeaa495cbff9aab4fe004119a2898a6" translate="yes" xml:space="preserve">
          <source>Passing Static or Dynamic Props</source>
          <target state="translated">Pasar los puntales estáticos o dinámicos</target>
        </trans-unit>
        <trans-unit id="69be14b609ea17960c4d679c5eac924f94c81a81" translate="yes" xml:space="preserve">
          <source>Passing a Boolean</source>
          <target state="translated">Pasando un Booleano</target>
        </trans-unit>
        <trans-unit id="d0fe306e90e1b3d68f9dfb33a59e5241fa360572" translate="yes" xml:space="preserve">
          <source>Passing a Number</source>
          <target state="translated">Pasando un número</target>
        </trans-unit>
        <trans-unit id="7c0a78154538069738bcf2cc5806f8c67f3744ba" translate="yes" xml:space="preserve">
          <source>Passing an Array</source>
          <target state="translated">Pasando una matriz</target>
        </trans-unit>
        <trans-unit id="acf0b569b0457811ee77b0ce38bc6a81b61b14f2" translate="yes" xml:space="preserve">
          <source>Passing an Object</source>
          <target state="translated">Pasar un objeto</target>
        </trans-unit>
        <trans-unit id="d7c9bb0f37131e5505011ab717b8002aabd88b14" translate="yes" xml:space="preserve">
          <source>Passing in &lt;code&gt;immediate: true&lt;/code&gt; in the option will trigger the callback immediately with the current value of the expression:</source>
          <target state="translated">Pasar &lt;code&gt;immediate: true&lt;/code&gt; en la opci&amp;oacute;n activar&amp;aacute; la devoluci&amp;oacute;n de llamada inmediatamente con el valor actual de la expresi&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="035acdf774e378174fd9c2b1135b63f7dfac1cf3" translate="yes" xml:space="preserve">
          <source>Passing the Properties of an Object</source>
          <target state="translated">Pasando las propiedades de un objeto</target>
        </trans-unit>
        <trans-unit id="c141d90b1516060d8a91d0883b728d5ba2fca7a4" translate="yes" xml:space="preserve">
          <source>Performance-wise, Vue outperforms Ember &lt;a href=&quot;https://stefankrause.net/js-frameworks-benchmark8/table.html&quot;&gt;by a fair margin&lt;/a&gt;, even after the latest Glimmer engine update in Ember 3.x. Vue automatically batches updates, while in Ember you need to manually manage run loops in performance-critical situations.</source>
          <target state="translated">En cuanto al rendimiento, Vue supera a Ember &lt;a href=&quot;https://stefankrause.net/js-frameworks-benchmark8/table.html&quot;&gt;por un margen justo&lt;/a&gt; , incluso despu&amp;eacute;s de la &amp;uacute;ltima actualizaci&amp;oacute;n del motor Glimmer en Ember 3.x. Vue procesa autom&amp;aacute;ticamente las actualizaciones por lotes, mientras que en Ember necesita administrar manualmente los ciclos de ejecuci&amp;oacute;n en situaciones cr&amp;iacute;ticas para el rendimiento.</target>
        </trans-unit>
        <trans-unit id="07ba11f36689ab7bebcb8bac7bb946785fdc5fcf" translate="yes" xml:space="preserve">
          <source>Please refer to the &lt;a href=&quot;https://github.com/vuejs/vue/blob/dev/src/core/vdom/vnode.js&quot;&gt;VNode class declaration&lt;/a&gt;.</source>
          <target state="translated">Consulte la &lt;a href=&quot;https://github.com/vuejs/vue/blob/dev/src/core/vdom/vnode.js&quot;&gt;declaraci&amp;oacute;n de la clase VNode&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ac81e979c05bfcd7c0a62185f40c627cb4bf8d0e" translate="yes" xml:space="preserve">
          <source>Please refer to the &lt;a href=&quot;https://github.com/vuejs/vue/tree/dev/packages/vue-server-renderer&quot;&gt;vue-server-renderer package documentation&lt;/a&gt;.</source>
          <target state="translated">Consulte la &lt;a href=&quot;https://github.com/vuejs/vue/tree/dev/packages/vue-server-renderer&quot;&gt;documentaci&amp;oacute;n del paquete vue-server-renderer&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ab2e26dd8b8868a3969cb3321e0c983c0d9d67d4" translate="yes" xml:space="preserve">
          <source>Plugins</source>
          <target state="translated">Plugins</target>
        </trans-unit>
        <trans-unit id="2ec26164bdb69a59c55861e3e8bf8c2338afa489" translate="yes" xml:space="preserve">
          <source>Plugins may add to Vue&amp;rsquo;s global/instance properties and component options. In these cases, type declarations are needed to make plugins compile in TypeScript. Fortunately, there&amp;rsquo;s a TypeScript feature to augment existing types called &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/declaration-merging.html#module-augmentation&quot;&gt;module augmentation&lt;/a&gt;.</source>
          <target state="translated">Los complementos pueden agregarse a las propiedades globales / de instancia y a las opciones de componentes de Vue. En estos casos, se necesitan declaraciones de tipo para que los complementos se compilen en TypeScript. Afortunadamente, hay una funci&amp;oacute;n de TypeScript para aumentar los tipos existentes llamada &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/declaration-merging.html#module-augmentation&quot;&gt;aumento de m&amp;oacute;dulo&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a77c0e9519023f6d3be8c4d42d0b610cd78973f1" translate="yes" xml:space="preserve">
          <source>Plugins usually add global-level functionality to Vue. There is no strictly defined scope for a plugin - there are typically several types of plugins:</source>
          <target state="translated">Los plugins suelen añadir funcionalidad de nivel global a Vue.No hay un ámbito de aplicación estrictamente definido para un plugin,normalmente hay varios tipos de plugins:</target>
        </trans-unit>
        <trans-unit id="6b444c9bbd597a6dbe29c3f8f817d1db7e6559dd" translate="yes" xml:space="preserve">
          <source>Polymer</source>
          <target state="translated">Polymer</target>
        </trans-unit>
        <trans-unit id="48e622aad7a867a5952bf32f2af768cae8dc7ee2" translate="yes" xml:space="preserve">
          <source>Polymer is another Google-sponsored project and in fact was a source of inspiration for Vue as well. Vue&amp;rsquo;s components can be loosely compared to Polymer&amp;rsquo;s custom elements and both provide a very similar development style. The biggest difference is that Polymer is built upon the latest Web Components features and requires non-trivial polyfills to work (with degraded performance) in browsers that don&amp;rsquo;t support those features natively. In contrast, Vue works without any dependencies or polyfills down to IE9.</source>
          <target state="translated">Polymer es otro proyecto patrocinado por Google y, de hecho, tambi&amp;eacute;n fue una fuente de inspiraci&amp;oacute;n para Vue. Los componentes de Vue se pueden comparar libremente con los elementos personalizados de Polymer y ambos proporcionan un estilo de desarrollo muy similar. La mayor diferencia es que Polymer se basa en las &amp;uacute;ltimas funciones de componentes web y requiere polyfills no triviales para funcionar (con rendimiento degradado) en navegadores que no admiten esas funciones de forma nativa. Por el contrario, Vue funciona sin dependencias ni polyfills hasta IE9.</target>
        </trans-unit>
        <trans-unit id="e3ed11ed8d0e10e94e25f6a0c663996776050be2" translate="yes" xml:space="preserve">
          <source>Pre-Compiling Templates</source>
          <target state="translated">Plantillas de precompilación</target>
        </trans-unit>
        <trans-unit id="15730848aa8545d4e8c4a13694b301ad43855149" translate="yes" xml:space="preserve">
          <source>Preact and Other React-Like Libraries</source>
          <target state="translated">Bibliotecas de Preact y otras de tipo reactivo</target>
        </trans-unit>
        <trans-unit id="13b722a113ea767b74d7b7af219e735b33c584e7" translate="yes" xml:space="preserve">
          <source>Prefer class selectors over element selectors in &lt;code&gt;scoped&lt;/code&gt; styles, because large numbers of element selectors are slow.</source>
          <target state="translated">Prefiera los selectores de clases sobre los selectores de elementos en estilos con &lt;code&gt;scoped&lt;/code&gt; , porque una gran cantidad de selectores de elementos son lentos.</target>
        </trans-unit>
        <trans-unit id="90eceb016c51a762f15c7287008c113f6f37296c" translate="yes" xml:space="preserve">
          <source>Prefix</source>
          <target state="translated">Prefix</target>
        </trans-unit>
        <trans-unit id="0862f2579db5a3bc1211bb13bd8e3d71a3009a33" translate="yes" xml:space="preserve">
          <source>Pretty cool, right?</source>
          <target state="translated">Bastante guay,¿verdad?</target>
        </trans-unit>
        <trans-unit id="d28e5e120a6410b8fa39239f3e826f7cc472afd9" translate="yes" xml:space="preserve">
          <source>Previously, &lt;code&gt;v-el&lt;/code&gt;/&lt;code&gt;v-ref&lt;/code&gt; combined with &lt;code&gt;v-for&lt;/code&gt; would produce an array of elements/components, because there was no way to give each item a unique name. You can still achieve this behavior by giving each item the same &lt;code&gt;ref&lt;/code&gt;:</source>
          <target state="translated">Anteriormente, &lt;code&gt;v-el&lt;/code&gt; / &lt;code&gt;v-ref&lt;/code&gt; combinado con &lt;code&gt;v-for&lt;/code&gt; produc&amp;iacute;a una matriz de elementos / componentes, porque no hab&amp;iacute;a forma de darle a cada elemento un nombre &amp;uacute;nico. A&amp;uacute;n puede lograr este comportamiento dando a cada elemento la misma &lt;code&gt;ref&lt;/code&gt; erencia :</target>
        </trans-unit>
        <trans-unit id="d470a2a77dc4521dc133ec45eef2767f713b0387" translate="yes" xml:space="preserve">
          <source>Previously, &lt;code&gt;v-for=&quot;number in 10&quot;&lt;/code&gt; would have &lt;code&gt;number&lt;/code&gt; starting at 0 and ending at 9. Now it starts at 1 and ends at 10.</source>
          <target state="translated">Anteriormente, &lt;code&gt;v-for=&quot;number in 10&quot;&lt;/code&gt; tendr&amp;iacute;a un &lt;code&gt;number&lt;/code&gt; comenzaba en 0 y terminaba en 9. Ahora comienza en 1 y termina en 10.</target>
        </trans-unit>
        <trans-unit id="1140ac9954dc5a38cef519f604f5c32be573d951" translate="yes" xml:space="preserve">
          <source>Primarily used to preserve component state or avoid re-rendering.</source>
          <target state="translated">Se utiliza principalmente para preservar el estado de los componentes o evitar que se vuelvan a reproducir.</target>
        </trans-unit>
        <trans-unit id="54685256c4d8355200332707df1e1ca7c0e02261" translate="yes" xml:space="preserve">
          <source>Priority A Rules: Essential (Error Prevention)</source>
          <target state="translated">Reglas de prioridad A:Esencial (Prevención de errores)</target>
        </trans-unit>
        <trans-unit id="5e8b1025d5987c3729d2b01eada46b2522bba9e3" translate="yes" xml:space="preserve">
          <source>Priority A: Essential</source>
          <target state="translated">Prioridad A:Esencial</target>
        </trans-unit>
        <trans-unit id="387f936830407167742df6ab963bfa0088949c5b" translate="yes" xml:space="preserve">
          <source>Priority B Rules: Strongly Recommended (Improving Readability)</source>
          <target state="translated">Reglas de prioridad B:Muy recomendado (Mejorar la legibilidad)</target>
        </trans-unit>
        <trans-unit id="736596242b03557a18a34e5f65ea6a2b562cbebd" translate="yes" xml:space="preserve">
          <source>Priority B: Strongly Recommended</source>
          <target state="translated">Prioridad B:Recomendada encarecidamente</target>
        </trans-unit>
        <trans-unit id="bdd836597207d18ba5b3d19036238a4cd88fa60f" translate="yes" xml:space="preserve">
          <source>Priority C Rules: Recommended (Minimizing Arbitrary Choices and Cognitive Overhead)</source>
          <target state="translated">Reglas de prioridad C:Recomendado (Minimizar las opciones arbitrarias y el exceso de conocimiento)</target>
        </trans-unit>
        <trans-unit id="2974ce185c92ec782a626e16a8514e803539b365" translate="yes" xml:space="preserve">
          <source>Priority C: Recommended</source>
          <target state="translated">Prioridad C:Recomendada</target>
        </trans-unit>
        <trans-unit id="47bd70395bb96139b28544a3748794466e50c29a" translate="yes" xml:space="preserve">
          <source>Priority D Rules: Use with Caution (Potentially Dangerous Patterns)</source>
          <target state="translated">Reglas de prioridad D:Uso con precaución (Patrones potencialmente peligrosos)</target>
        </trans-unit>
        <trans-unit id="94fef0d8e8f642d6dc69557c9f10b185198cefc4" translate="yes" xml:space="preserve">
          <source>Priority D: Use with Caution</source>
          <target state="translated">Prioridad D:Usar con precaución</target>
        </trans-unit>
        <trans-unit id="f5cd87102ef90d5553f07151bd4bd9dd0bc22e76" translate="yes" xml:space="preserve">
          <source>Private property names</source>
          <target state="translated">Nombres de propiedades privadas</target>
        </trans-unit>
        <trans-unit id="190351e7c1964109dd0d07bb44b4406d321887f5" translate="yes" xml:space="preserve">
          <source>Private property names &lt;sup&gt;essential&lt;/sup&gt;</source>
          <target state="translated">Nombres de propiedad privada &lt;sup&gt;esenciales&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="7d03d42c737cd08e3c616e333f7637225318bb7d" translate="yes" xml:space="preserve">
          <source>Problem solved!</source>
          <target state="translated">¡Problema resuelto!</target>
        </trans-unit>
        <trans-unit id="c5c5063b096172b05347461de69b1892f161c926" translate="yes" xml:space="preserve">
          <source>Production Deployment</source>
          <target state="translated">Despliegue de la producción</target>
        </trans-unit>
        <trans-unit id="24b510d5213c71d3e2ce9940d48c8b9fa3d13829" translate="yes" xml:space="preserve">
          <source>Programmatic Event Listeners</source>
          <target state="translated">Escuchadores de eventos programáticos</target>
        </trans-unit>
        <trans-unit id="6ac41420921db4b82a6fc5a064c1c845ef1ef7bc" translate="yes" xml:space="preserve">
          <source>Programmatic Navigation</source>
          <target state="translated">Navegación programática</target>
        </trans-unit>
        <trans-unit id="476b867d91093b69a7500380688c889567822c8b" translate="yes" xml:space="preserve">
          <source>Programmatically choose one of several other components to delegate to</source>
          <target state="translated">Elegir programáticamente uno de varios otros componentes para delegar en</target>
        </trans-unit>
        <trans-unit id="ee3cf99bb774be8991c68e2bbfef328b2095ab6c" translate="yes" xml:space="preserve">
          <source>Project Creation</source>
          <target state="translated">Creación del proyecto</target>
        </trans-unit>
        <trans-unit id="cf8dbc35f90ca7fe4e3262afb2f4d8617ccb053f" translate="yes" xml:space="preserve">
          <source>Prop Casing (camelCase vs kebab-case)</source>
          <target state="translated">Carcasa de utilería (camelCase vs kebab-case)</target>
        </trans-unit>
        <trans-unit id="1c763ccd366cdd65c783dc8f22bc1a65ff00cadb" translate="yes" xml:space="preserve">
          <source>Prop Mutation &lt;sup&gt;deprecated&lt;/sup&gt;</source>
          <target state="translated">Prop Mutation &lt;sup&gt;obsoleto&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="23ca9a44a1ade4d87027ae10b8309bece2e74a54" translate="yes" xml:space="preserve">
          <source>Prop Types</source>
          <target state="translated">Tipos de Objeto</target>
        </trans-unit>
        <trans-unit id="0d718a828e84189a6c1ea77a0099a78e06d7d7c9" translate="yes" xml:space="preserve">
          <source>Prop Validation</source>
          <target state="translated">Validación de la propulsión</target>
        </trans-unit>
        <trans-unit id="3ad34219a208945c8ea06d8eb918df83f7e61456" translate="yes" xml:space="preserve">
          <source>Prop definitions</source>
          <target state="translated">Definiciones de los objetos</target>
        </trans-unit>
        <trans-unit id="e2f4b4fdf875186ea4cf16dbb812dbea30216d87" translate="yes" xml:space="preserve">
          <source>Prop definitions &lt;sup&gt;essential&lt;/sup&gt;</source>
          <target state="translated">Definiciones de accesorios &lt;sup&gt;esenciales&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="895e352dc19c97709d5567c55fe72b1a6d482c35" translate="yes" xml:space="preserve">
          <source>Prop name casing</source>
          <target state="translated">Cubierta de nombre de utilería</target>
        </trans-unit>
        <trans-unit id="b90f11ae0da8cbfe0b2f736a16886c055d6bffd1" translate="yes" xml:space="preserve">
          <source>Prop name casing &lt;sup&gt;strongly recommended&lt;/sup&gt;</source>
          <target state="translated">Se &lt;sup&gt;recomienda encarecidamente&lt;/sup&gt; utilizar &lt;sup&gt;may&amp;uacute;sculas y min&amp;uacute;sculas&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="66e61e4c98d3b3a635091c842dada04fef1b9143" translate="yes" xml:space="preserve">
          <source>Properly configuring all the discussed aspects of a production-ready server-rendered app can be a daunting task. Luckily, there is an excellent community project that aims to make all of this easier: &lt;a href=&quot;https://nuxtjs.org/&quot;&gt;Nuxt.js&lt;/a&gt;. Nuxt.js is a higher-level framework built on top of the Vue ecosystem which provides an extremely streamlined development experience for writing universal Vue applications. Better yet, you can even use it as a static site generator (with pages authored as single-file Vue components)! We highly recommend giving it a try.</source>
          <target state="translated">Configurar correctamente todos los aspectos discutidos de una aplicaci&amp;oacute;n renderizada por servidor lista para producci&amp;oacute;n puede ser una tarea abrumadora. Por suerte, hay un proyecto de la comunidad excelente que pretende hacer todo esto m&amp;aacute;s f&amp;aacute;cil: las &lt;a href=&quot;https://nuxtjs.org/&quot;&gt;Nuxt.js&lt;/a&gt; . Nuxt.js es un marco de trabajo de nivel superior construido sobre el ecosistema Vue que proporciona una experiencia de desarrollo extremadamente optimizada para escribir aplicaciones universales de Vue. Mejor a&amp;uacute;n, &amp;iexcl;incluso puede usarlo como un generador de sitios est&amp;aacute;ticos (con p&amp;aacute;ginas creadas como componentes de Vue de un solo archivo)! Recomendamos encarecidamente probarlo.</target>
        </trans-unit>
        <trans-unit id="fc7c765b5dbb95f7134159f12c7f78946b944760" translate="yes" xml:space="preserve">
          <source>Properly trigger lifecycle hooks of a component</source>
          <target state="translated">Activar correctamente los ganchos del ciclo de vida de un componente</target>
        </trans-unit>
        <trans-unit id="e9f3056a7ba256cf707e7dce02bf806a8e3e1baf" translate="yes" xml:space="preserve">
          <source>Properties that start with &lt;code&gt;_&lt;/code&gt; or &lt;code&gt;$&lt;/code&gt; will &lt;strong&gt;not&lt;/strong&gt; be proxied on the Vue instance because they may conflict with Vue&amp;rsquo;s internal properties and API methods. You will have to access them as &lt;code&gt;vm.$data._property&lt;/code&gt;.</source>
          <target state="translated">Las propiedades que comienzan con &lt;code&gt;_&lt;/code&gt; o &lt;code&gt;$&lt;/code&gt; ser&amp;aacute; &lt;strong&gt;no&lt;/strong&gt; por proxy en la instancia de Vue, ya que pueden entrar en conflicto con las propiedades internas de Vue y m&amp;eacute;todos de la API. Tendr&amp;aacute; que acceder a ellos como &lt;code&gt;vm.$data._property&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e5561bc237fb41709bb2e8b651d704c1664ae03e" translate="yes" xml:space="preserve">
          <source>Props</source>
          <target state="translated">Props</target>
        </trans-unit>
        <trans-unit id="824b655ece5f935a9f95c151296cb1d2ff2e73ec" translate="yes" xml:space="preserve">
          <source>Props are custom attributes you can register on a component. When a value is passed to a prop attribute, it becomes a property on that component instance. To pass a title to our blog post component, we can include it in the list of props this component accepts, using a &lt;code&gt;props&lt;/code&gt; option:</source>
          <target state="translated">Los accesorios son atributos personalizados que puede registrar en un componente. Cuando se pasa un valor a un atributo prop, se convierte en una propiedad en esa instancia de componente. Para pasar un t&amp;iacute;tulo a nuestro componente de publicaci&amp;oacute;n de blog, podemos incluirlo en la lista de accesorios que acepta este componente, usando una opci&amp;oacute;n de &lt;code&gt;props&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="02635ba77eef9661786c01a78d90b7501db1be4e" translate="yes" xml:space="preserve">
          <source>Props are now always one-way down. To produce side effects in the parent scope, a component needs to explicitly emit an event instead of relying on implicit binding. For more information, see:</source>
          <target state="translated">Los accesorios ahora son siempre de una sola dirección.Para producir efectos secundarios en el ámbito de los padres,un componente necesita emitir explícitamente un evento en lugar de depender de la vinculación implícita.Para más información,véase:</target>
        </trans-unit>
        <trans-unit id="f6122d047108de3e0837cf3e23276a8775fc2406" translate="yes" xml:space="preserve">
          <source>Props on a Root Instance &lt;sup&gt;replaced&lt;/sup&gt;</source>
          <target state="translated">Props en una instancia ra&amp;iacute;z &lt;sup&gt;reemplazados&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="877adb56a197e1259015de3210d87c2e790b7975" translate="yes" xml:space="preserve">
          <source>Provide an alternative render output when the default &lt;code&gt;render&lt;/code&gt; function encounters an error. The error will be passed to &lt;code&gt;renderError&lt;/code&gt; as the second argument. This is particularly useful when used together with hot-reload.</source>
          <target state="translated">Proporcione una salida de renderizaci&amp;oacute;n alternativa cuando la funci&amp;oacute;n de &lt;code&gt;render&lt;/code&gt; izaci&amp;oacute;n predeterminada encuentre un error. El error se pasar&amp;aacute; a &lt;code&gt;renderError&lt;/code&gt; como segundo argumento. Esto es particularmente &amp;uacute;til cuando se usa junto con la recarga en caliente.</target>
        </trans-unit>
        <trans-unit id="02efa133aeef7a133aefd2f252af936a5cccad26" translate="yes" xml:space="preserve">
          <source>Provide the Vue instance an existing DOM element to mount on. It can be a CSS selector string or an actual HTMLElement.</source>
          <target state="translated">Proporcionar a la instancia Vue un elemento DOM existente para montarlo.Puede ser una cadena de selección CSS o un HTMLElement real.</target>
        </trans-unit>
        <trans-unit id="dcf49ab626c30fff5ed5ee4dbe07721b4605c56b" translate="yes" xml:space="preserve">
          <source>Quasar Framework SSR + PWA</source>
          <target state="translated">Quasar Framework SSR+PWA</target>
        </trans-unit>
        <trans-unit id="282e30765bd347047d1a351ac3b6f1cf18becd81" translate="yes" xml:space="preserve">
          <source>Quoted attribute values</source>
          <target state="translated">Valores de atributo citados</target>
        </trans-unit>
        <trans-unit id="683b9e103293a057ef4362aa5bc974a4f8bd8131" translate="yes" xml:space="preserve">
          <source>Quoted attribute values &lt;sup&gt;strongly recommended&lt;/sup&gt;</source>
          <target state="translated">Se &lt;sup&gt;recomiendan encarecidamente los&lt;/sup&gt; valores de atributo citados&lt;sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="ed1e44a4093ca562205b72061c34f1507e70c015" translate="yes" xml:space="preserve">
          <source>RFC-0001</source>
          <target state="translated">RFC-0001</target>
        </trans-unit>
        <trans-unit id="b11bf19e3f65b4a1ada383e41f26dab5c503940e" translate="yes" xml:space="preserve">
          <source>Radio</source>
          <target state="translated">Radio</target>
        </trans-unit>
        <trans-unit id="76550ff95e4521edf8dc9e8329b78993dc047414" translate="yes" xml:space="preserve">
          <source>Raw HTML</source>
          <target state="translated">HTML en bruto</target>
        </trans-unit>
        <trans-unit id="4d1f996aa17807ebebdb5143b01f86f170d5bea6" translate="yes" xml:space="preserve">
          <source>React</source>
          <target state="translated">React</target>
        </trans-unit>
        <trans-unit id="b183e9aafa930f129da2c452cc641903b8199bea" translate="yes" xml:space="preserve">
          <source>React Native enables you to write native-rendered apps for iOS and Android using the same React component model. This is great in that as a developer, you can apply your knowledge of a framework across multiple platforms. On this front, Vue has an official collaboration with &lt;a href=&quot;https://weex.apache.org/&quot;&gt;Weex&lt;/a&gt;, a cross-platform UI framework created by Alibaba Group and being incubated by the Apache Software Foundation (ASF). Weex allows you to use the same Vue component syntax to author components that can not only be rendered in the browser, but also natively on iOS and Android!</source>
          <target state="translated">React Native le permite escribir aplicaciones renderizadas nativas para iOS y Android usando el mismo modelo de componente React. Esto es genial porque, como desarrollador, puede aplicar su conocimiento de un marco en m&amp;uacute;ltiples plataformas. En este frente, Vue tiene una colaboraci&amp;oacute;n oficial con &lt;a href=&quot;https://weex.apache.org/&quot;&gt;Weex&lt;/a&gt; , un marco de interfaz de usuario multiplataforma creado por Alibaba Group y que est&amp;aacute; siendo incubado por Apache Software Foundation (ASF). Weex le permite usar la misma sintaxis de componentes de Vue para crear componentes que no solo se pueden renderizar en el navegador, sino tambi&amp;eacute;n de forma nativa en iOS y Android.</target>
        </trans-unit>
        <trans-unit id="ee4366331847de86650378c9e4041dac06218df0" translate="yes" xml:space="preserve">
          <source>React and Vue share many similarities. They both:</source>
          <target state="translated">Reaccionar y Vue comparten muchas similitudes.Ambos:</target>
        </trans-unit>
        <trans-unit id="bb65ef679dc307f628a20a0b729cd808d18c5ac0" translate="yes" xml:space="preserve">
          <source>React is renowned for its steep learning curve. Before you can really get started, you need to know about JSX and probably ES2015+, since many examples use React&amp;rsquo;s class syntax. You also have to learn about build systems, because although you could technically use Babel Standalone to live-compile your code in the browser, it&amp;rsquo;s absolutely not suitable for production.</source>
          <target state="translated">React es conocido por su empinada curva de aprendizaje. Antes de que pueda realmente comenzar, debe conocer JSX y probablemente ES2015 +, ya que muchos ejemplos usan la sintaxis de clase de React. Tambi&amp;eacute;n debe aprender sobre sistemas de compilaci&amp;oacute;n, porque aunque t&amp;eacute;cnicamente podr&amp;iacute;a usar Babel Standalone para compilar en vivo su c&amp;oacute;digo en el navegador, no es absolutamente adecuado para la producci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="bb1b40c27f9e4939cf3ff484fca2a9371f8d3b42" translate="yes" xml:space="preserve">
          <source>React-like libraries usually try to share as much of their API and ecosystem with React as is feasible. For that reason, the vast majority of comparisons above will also apply to them. The main difference will typically be a reduced ecosystem, often significantly, compared to React. Since these libraries cannot be 100% compatible with everything in the React ecosystem, some tooling and companion libraries may not be usable. Or, even if they appear to work, they could break at any time unless your specific React-like library is officially supported on par with React.</source>
          <target state="translated">Las bibliotecas similares a React suelen tratar de compartir con React la mayor cantidad posible de su API y su ecosistema.Por esa razón,la gran mayoría de las comparaciones anteriores también se aplicarán a ellos.La principal diferencia será típicamente un ecosistema reducido,a menudo de forma significativa,en comparación con React.Dado que estas bibliotecas no pueden ser 100% compatibles con todo el ecosistema de React,es posible que algunas herramientas y bibliotecas complementarias no sean utilizables.O,incluso si parecen funcionar,podrían romperse en cualquier momento a menos que su biblioteca específica similar a la de React esté oficialmente respaldada a la par de la de React.</target>
        </trans-unit>
        <trans-unit id="96578d9c2e6eaee240051ff91e83f741cc87e93b" translate="yes" xml:space="preserve">
          <source>Reactivity</source>
          <target state="translated">Reactivity</target>
        </trans-unit>
        <trans-unit id="38be1878e88addc141471e2ac5be059c49256537" translate="yes" xml:space="preserve">
          <source>Reactivity in Depth</source>
          <target state="translated">Reactividad en profundidad</target>
        </trans-unit>
        <trans-unit id="446d7c237336d575135ddcd7063341761426b025" translate="yes" xml:space="preserve">
          <source>Ready for More?</source>
          <target state="translated">¿Listo para más?</target>
        </trans-unit>
        <trans-unit id="40fe62216df511ee5c87bc8e026789c819f7b21e" translate="yes" xml:space="preserve">
          <source>Really though, any transition attribute can be dynamically bound. And it&amp;rsquo;s not only attributes. Since event hooks are methods, they have access to any data in the context. That means depending on the state of your component, your JavaScript transitions can behave differently.</source>
          <target state="translated">Sin embargo, en realidad, cualquier atributo de transici&amp;oacute;n puede vincularse din&amp;aacute;micamente. Y no son solo atributos. Dado que los event hooks son m&amp;eacute;todos, tienen acceso a cualquier dato del contexto. Eso significa que, dependiendo del estado de su componente, sus transiciones de JavaScript pueden comportarse de manera diferente.</target>
        </trans-unit>
        <trans-unit id="cdb5994a5662a9b7831e2e56b44ea27b6edb5bab" translate="yes" xml:space="preserve">
          <source>Recent versions of Angular, with &lt;a href=&quot;https://en.wikipedia.org/wiki/Ahead-of-time_compilation&quot;&gt;AOT compilation&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Tree_shaking&quot;&gt;tree-shaking&lt;/a&gt;, have been able to get its size down considerably. However, a full-featured Vue 2 project with Vuex + Vue Router included (~30KB gzipped) is still significantly lighter than an out-of-the-box, AOT-compiled application generated by &lt;code&gt;angular-cli&lt;/code&gt; (~65KB gzipped).</source>
          <target state="translated">Las versiones recientes de Angular, con &lt;a href=&quot;https://en.wikipedia.org/wiki/Ahead-of-time_compilation&quot;&gt;compilaci&amp;oacute;n AOT&lt;/a&gt; y &lt;a href=&quot;https://en.wikipedia.org/wiki/Tree_shaking&quot;&gt;agitaci&amp;oacute;n de &amp;aacute;rboles&lt;/a&gt; , han podido reducir considerablemente su tama&amp;ntilde;o. Sin embargo, un proyecto de Vue 2 con todas las funciones con Vuex + Vue Router incluido (~ 30KB comprimido en gzip) sigue siendo significativamente m&amp;aacute;s ligero que una aplicaci&amp;oacute;n compilada con AOT lista para usar generada por &lt;code&gt;angular-cli&lt;/code&gt; (~ 65KB en gzip).</target>
        </trans-unit>
        <trans-unit id="3f99a56b4630f2ac18091fad78531d1626d4dac4" translate="yes" xml:space="preserve">
          <source>Recommended Configuration</source>
          <target state="translated">Configuración recomendada</target>
        </trans-unit>
        <trans-unit id="f9d18b779732cc0ea4b60f929feea8a7c40df5fc" translate="yes" xml:space="preserve">
          <source>Recreating dynamic components is normally useful behavior, but in this case, we&amp;rsquo;d really like those tab component instances to be cached once they&amp;rsquo;re created for the first time. To solve this problem, we can wrap our dynamic component with a &lt;code&gt;&amp;lt;keep-alive&amp;gt;&lt;/code&gt; element:</source>
          <target state="translated">La recreaci&amp;oacute;n de componentes din&amp;aacute;micos suele ser un comportamiento &amp;uacute;til, pero en este caso, realmente nos gustar&amp;iacute;a que esas instancias de componentes de pesta&amp;ntilde;as se almacenen en cach&amp;eacute; una vez que se crean por primera vez. Para resolver este problema, podemos envolver nuestro componente din&amp;aacute;mico con un elemento &lt;code&gt;&amp;lt;keep-alive&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="25c0556aa6352203342eea1a65c58a623378dbcc" translate="yes" xml:space="preserve">
          <source>Recursive Components</source>
          <target state="translated">Componentes recursivos</target>
        </trans-unit>
        <trans-unit id="46819d95829c2f8ee915e7d271f512463387fc11" translate="yes" xml:space="preserve">
          <source>Refactoring becomes more difficult, because find-and-replace often isn&amp;rsquo;t sufficient to update relative references to a moved component.</source>
          <target state="translated">La refactorizaci&amp;oacute;n se vuelve m&amp;aacute;s dif&amp;iacute;cil, porque buscar y reemplazar a menudo no es suficiente para actualizar las referencias relativas a un componente movido.</target>
        </trans-unit>
        <trans-unit id="f4234eefb475a2340f218d9e7a7e6c874a82a6fa" translate="yes" xml:space="preserve">
          <source>Refer to the respective build tool documentations to see how it&amp;rsquo;s done:</source>
          <target state="translated">Consulte la documentaci&amp;oacute;n de la herramienta de compilaci&amp;oacute;n respectiva para ver c&amp;oacute;mo se hace:</target>
        </trans-unit>
        <trans-unit id="8d8b1f50199fd6cb6ab6141f41a87fd8dae1f00d" translate="yes" xml:space="preserve">
          <source>Register or retrieve a global component. Registration also automatically sets the component&amp;rsquo;s &lt;code&gt;name&lt;/code&gt; with the given &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">Registre o recupere un componente global. El registro tambi&amp;eacute;n establece autom&amp;aacute;ticamente el &lt;code&gt;name&lt;/code&gt; del componente con la &lt;code&gt;id&lt;/code&gt; entificaci&amp;oacute;n proporcionada .</target>
        </trans-unit>
        <trans-unit id="0168019975e7b996b73bc3be3562ac476872545c" translate="yes" xml:space="preserve">
          <source>Register or retrieve a global directive.</source>
          <target state="translated">Registre o recupere una directiva global.</target>
        </trans-unit>
        <trans-unit id="13bd6c258247a18188a7e24270fbc9f007d7c82d" translate="yes" xml:space="preserve">
          <source>Register or retrieve a global filter.</source>
          <target state="translated">Registre o recupere un filtro global.</target>
        </trans-unit>
        <trans-unit id="76de89743a325c94ab024ae33f08812f80d685bb" translate="yes" xml:space="preserve">
          <source>Relation to Custom Elements</source>
          <target state="translated">Relación con los elementos personalizados</target>
        </trans-unit>
        <trans-unit id="0ea4af908fe06688dd3fc02035189b08293c5074" translate="yes" xml:space="preserve">
          <source>Release Notes</source>
          <target state="translated">Notas de lanzamiento</target>
        </trans-unit>
        <trans-unit id="d92abdf653f23351eb7a0ab4d23290ee1313902d" translate="yes" xml:space="preserve">
          <source>Remember that &lt;strong&gt;global registration must take place before the root Vue instance is created (with &lt;code&gt;new Vue&lt;/code&gt;)&lt;/strong&gt;. &lt;a href=&quot;https://github.com/chrisvfritz/vue-enterprise-boilerplate/blob/master/src/components/_globals.js&quot;&gt;Here&amp;rsquo;s an example&lt;/a&gt; of this pattern in a real project context.</source>
          <target state="translated">Recuerde que &lt;strong&gt;el registro global debe tener lugar antes de que se cree la instancia ra&amp;iacute;z de Vue (con el &lt;code&gt;new Vue&lt;/code&gt; )&lt;/strong&gt; . &lt;a href=&quot;https://github.com/chrisvfritz/vue-enterprise-boilerplate/blob/master/src/components/_globals.js&quot;&gt;Aqu&amp;iacute; hay un ejemplo&lt;/a&gt; de este patr&amp;oacute;n en el contexto de un proyecto real.</target>
        </trans-unit>
        <trans-unit id="73942b04c7d6e9cc0cafd922223a9eab5438c235" translate="yes" xml:space="preserve">
          <source>Remove custom event listener(s).</source>
          <target state="translated">Eliminar los oyentes de eventos personalizados.</target>
        </trans-unit>
        <trans-unit id="25c548f4a7b9b6ef1cfbffbca926739476b1c4e2" translate="yes" xml:space="preserve">
          <source>Removed due to hooks simplification. If you really must suppress transition errors, you can use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/try...catch&quot;&gt;&lt;code&gt;try&lt;/code&gt;&amp;hellip;&lt;code&gt;catch&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">Eliminado debido a la simplificaci&amp;oacute;n de los ganchos. Si realmente debe suprimir los errores de transici&amp;oacute;n, puede usar &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/try...catch&quot;&gt; &lt;code&gt;try&lt;/code&gt; ... &lt;code&gt;catch&lt;/code&gt; en su&lt;/a&gt; lugar.</target>
        </trans-unit>
        <trans-unit id="e7f3ed71f5d7421b91e0c25cc42984adb65b4fdd" translate="yes" xml:space="preserve">
          <source>Renamed to &lt;code&gt;base&lt;/code&gt; for consistency with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base&quot;&gt;the HTML &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; element&lt;/a&gt;.</source>
          <target state="translated">Renombrado a &lt;code&gt;base&lt;/code&gt; de la coherencia con &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base&quot;&gt;el HTML &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; elemento&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3aa893c2a6ebe75166762d5109366b728fa5dc54" translate="yes" xml:space="preserve">
          <source>Render Functions &amp;amp; JSX</source>
          <target state="translated">Funciones de renderizado y JSX</target>
        </trans-unit>
        <trans-unit id="f54e5429aec68f05a2b3b43a85ee9662c29159d7" translate="yes" xml:space="preserve">
          <source>Render Functions - Slots</source>
          <target state="translated">Funciones de Renderización-Ranuras</target>
        </trans-unit>
        <trans-unit id="aeac0239d7806a13c73e4eacbb8e89032112b08f" translate="yes" xml:space="preserve">
          <source>Render functions with JSX have a few advantages:</source>
          <target state="translated">Las funciones de renderizado con JSX tienen algunas ventajas:</target>
        </trans-unit>
        <trans-unit id="c0f479c7d13498bbd2aa42eae8f88242964120b5" translate="yes" xml:space="preserve">
          <source>Render the element and component &lt;strong&gt;once&lt;/strong&gt; only. On subsequent re-renders, the element/component and all its children will be treated as static content and skipped. This can be used to optimize update performance.</source>
          <target state="translated">Renderice el elemento y el componente solo &lt;strong&gt;una vez&lt;/strong&gt; . En versiones posteriores, el elemento / componente y todos sus elementos secundarios se tratar&amp;aacute;n como contenido est&amp;aacute;tico y se omitir&amp;aacute;n. Esto se puede utilizar para optimizar el rendimiento de la actualizaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="1c510f643528b3292df74bbcf70195487418102f" translate="yes" xml:space="preserve">
          <source>Render the element or template block multiple times based on the source data. The directive&amp;rsquo;s value must use the special syntax &lt;code&gt;alias in expression&lt;/code&gt; to provide an alias for the current element being iterated on:</source>
          <target state="translated">Renderice el elemento o bloque de plantilla varias veces seg&amp;uacute;n los datos de origen. El valor de la directiva debe usar el &lt;code&gt;alias in expression&lt;/code&gt; sintaxis especial en la expresi&amp;oacute;n para proporcionar un alias para el elemento actual que se est&amp;aacute; iterando:</target>
        </trans-unit>
        <trans-unit id="9647e21c53c63f65c167aa12298837e080c17cb0" translate="yes" xml:space="preserve">
          <source>Rendering plain HTML elements is very fast in Vue, but sometimes you might have a component that contains &lt;strong&gt;a lot&lt;/strong&gt; of static content. In these cases, you can ensure that it&amp;rsquo;s only evaluated once and then cached by adding the &lt;code&gt;v-once&lt;/code&gt; directive to the root element, like this:</source>
          <target state="translated">La representaci&amp;oacute;n de elementos HTML sin formato es muy r&amp;aacute;pida en Vue, pero a veces puede tener un componente que contiene &lt;strong&gt;mucho&lt;/strong&gt; contenido est&amp;aacute;tico. En estos casos, puede asegurarse de que solo se eval&amp;uacute;e una vez y luego se almacene en cach&amp;eacute; agregando la directiva &lt;code&gt;v-once&lt;/code&gt; al elemento ra&amp;iacute;z, as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="9a09ee1cf84326d5d5b1fbbb8dcaca046fb652f2" translate="yes" xml:space="preserve">
          <source>Replacing &lt;code&gt;vm.$data&lt;/code&gt;&lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">Reemplazo de &lt;code&gt;vm.$data&lt;/code&gt; &lt;sup&gt;eliminados&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="6336d2b4c545bfdb0a2c2e6130a2fe522bc117ed" translate="yes" xml:space="preserve">
          <source>Replacing Template Features with Plain JavaScript</source>
          <target state="translated">Reemplazar las características de la plantilla con un simple JavaScript</target>
        </trans-unit>
        <trans-unit id="3694e119ff9868c46a5da68ac50107adb0cd0254" translate="yes" xml:space="preserve">
          <source>Replacing an Array</source>
          <target state="translated">Reemplazar una matriz</target>
        </trans-unit>
        <trans-unit id="448ceec811e5cd1612b41b145f75a74425a6d60a" translate="yes" xml:space="preserve">
          <source>Replacing the &lt;code&gt;capitalize&lt;/code&gt; Filter</source>
          <target state="translated">Reemplazo del filtro de &lt;code&gt;capitalize&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8ebc9242fd66a164fb0466c94c267b085022f523" translate="yes" xml:space="preserve">
          <source>Replacing the &lt;code&gt;currency&lt;/code&gt; Filter</source>
          <target state="translated">Reemplazo del filtro de &lt;code&gt;currency&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6e8e54f171683ed43699d784bb3a20daa786f68a" translate="yes" xml:space="preserve">
          <source>Replacing the &lt;code&gt;debounce&lt;/code&gt; Filter</source>
          <target state="translated">Reemplazo del filtro &lt;code&gt;debounce&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bc05ccbf460e1bee1b220a363cd9b366122fc62c" translate="yes" xml:space="preserve">
          <source>Replacing the &lt;code&gt;filterBy&lt;/code&gt; Filter</source>
          <target state="translated">Reemplazo del filtro &lt;code&gt;filterBy&lt;/code&gt; filtro</target>
        </trans-unit>
        <trans-unit id="5aadbac5cc6d5572fbf9f02300727b922b52477f" translate="yes" xml:space="preserve">
          <source>Replacing the &lt;code&gt;json&lt;/code&gt; Filter</source>
          <target state="translated">Reemplazo del filtro &lt;code&gt;json&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5af22200afbbae6350485e71f8a0930a62620a3b" translate="yes" xml:space="preserve">
          <source>Replacing the &lt;code&gt;limitBy&lt;/code&gt; Filter</source>
          <target state="translated">Reemplazo del &lt;code&gt;limitBy&lt;/code&gt; filtro</target>
        </trans-unit>
        <trans-unit id="63239b2dfa73a07907b85e48d0e4e3d07aa51efd" translate="yes" xml:space="preserve">
          <source>Replacing the &lt;code&gt;lowercase&lt;/code&gt; Filter</source>
          <target state="translated">Reemplazo del filtro de &lt;code&gt;lowercase&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="307535ec9952915e10873762b9b0a59ea99d17d1" translate="yes" xml:space="preserve">
          <source>Replacing the &lt;code&gt;orderBy&lt;/code&gt; Filter</source>
          <target state="translated">Sustituci&amp;oacute;n del &lt;code&gt;orderBy&lt;/code&gt; filtro</target>
        </trans-unit>
        <trans-unit id="5a0b57fe75978a4fde52508fa6b11e6a9fcbade8" translate="yes" xml:space="preserve">
          <source>Replacing the &lt;code&gt;pluralize&lt;/code&gt; Filter</source>
          <target state="translated">Reemplazo del filtro &lt;code&gt;pluralize&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5895ba028c303252e37b6295f10778b7ca351267" translate="yes" xml:space="preserve">
          <source>Replacing the &lt;code&gt;uppercase&lt;/code&gt; Filter</source>
          <target state="translated">Reemplazo del filtro en &lt;code&gt;uppercase&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c183ebe6cda4d505c2e49d3160c8367d36be5b90" translate="yes" xml:space="preserve">
          <source>Replacing/Merging with Existing Attributes</source>
          <target state="translated">Reemplazando/fusionando con los atributos existentes</target>
        </trans-unit>
        <trans-unit id="87df60de337fb58864343e396696d74611e0d403" translate="yes" xml:space="preserve">
          <source>Resources</source>
          <target state="translated">Resources</target>
        </trans-unit>
        <trans-unit id="bd4afc0073cac79bf136f8e1d922b83f76e969ad" translate="yes" xml:space="preserve">
          <source>Result:</source>
          <target state="translated">Result:</target>
        </trans-unit>
        <trans-unit id="1f5b54bbca313ab53947ed8a4f97b16e01f729d9" translate="yes" xml:space="preserve">
          <source>Reusable Transitions</source>
          <target state="translated">Transiciones reutilizables</target>
        </trans-unit>
        <trans-unit id="a48bbafb258bfc790b66aec7d45e0a6a8fa1cd83" translate="yes" xml:space="preserve">
          <source>Reusing Components</source>
          <target state="translated">Reutilización de componentes</target>
        </trans-unit>
        <trans-unit id="b836c4c63ed0b1bed339e82e9c78c2b817e6736c" translate="yes" xml:space="preserve">
          <source>Riot</source>
          <target state="translated">Riot</target>
        </trans-unit>
        <trans-unit id="6e85617241bed85b4dcd2ae064b3025078b134e9" translate="yes" xml:space="preserve">
          <source>Riot 3.0 provides a similar component-based development model (which is called a &amp;ldquo;tag&amp;rdquo; in Riot), with a minimal and beautifully designed API. Riot and Vue probably share a lot in design philosophies. However, despite being a bit heavier than Riot, Vue does offer some significant advantages:</source>
          <target state="translated">Riot 3.0 proporciona un modelo de desarrollo basado en componentes similar (que se denomina &quot;etiqueta&quot; en Riot), con una API m&amp;iacute;nima y bellamente dise&amp;ntilde;ada. Riot y Vue probablemente comparten muchas filosof&amp;iacute;as de dise&amp;ntilde;o. Sin embargo, a pesar de ser un poco m&amp;aacute;s pesado que Riot, Vue ofrece algunas ventajas significativas:</target>
        </trans-unit>
        <trans-unit id="cee656e4e4fb4012f85e12695536c23a5e0e62c3" translate="yes" xml:space="preserve">
          <source>Rollup</source>
          <target state="translated">Rollup</target>
        </trans-unit>
        <trans-unit id="8e4ecad6a05d926091d335638bbc9859c1de1f8b" translate="yes" xml:space="preserve">
          <source>Rollup + rollup-plugin-vue</source>
          <target state="translated">Rollup+rollup-plugin-vue</target>
        </trans-unit>
        <trans-unit id="42ec7ccbef29d0422b242b5178f06191bc8484d0" translate="yes" xml:space="preserve">
          <source>Route Definitions</source>
          <target state="translated">Definiciones de la ruta</target>
        </trans-unit>
        <trans-unit id="6e3b967c60ba49b0f518c43998cb2dc91dd2134c" translate="yes" xml:space="preserve">
          <source>Route Hooks</source>
          <target state="translated">Ganchos de ruta</target>
        </trans-unit>
        <trans-unit id="2b73a7098cbf7da1b1613b48acc5eb7c6f35331c" translate="yes" xml:space="preserve">
          <source>Route Matching</source>
          <target state="translated">Coincidencia de rutas</target>
        </trans-unit>
        <trans-unit id="18febd25894978ca61139fd68c461cb521819d89" translate="yes" xml:space="preserve">
          <source>Route Options: Misc</source>
          <target state="translated">Opciones de ruta:Misc</target>
        </trans-unit>
        <trans-unit id="f0865cca790a39153b3f106f9c19244b4f157bd4" translate="yes" xml:space="preserve">
          <source>Route matching now uses &lt;a href=&quot;https://github.com/pillarjs/path-to-regexp&quot;&gt;path-to-regexp&lt;/a&gt; under the hood, making it much more flexible than previously.</source>
          <target state="translated">La coincidencia de rutas ahora usa &lt;a href=&quot;https://github.com/pillarjs/path-to-regexp&quot;&gt;path-to-regexp&lt;/a&gt; debajo del cap&amp;oacute;, lo que la hace mucho m&amp;aacute;s flexible que antes.</target>
        </trans-unit>
        <trans-unit id="32027b0a6491682801317490f82d9b553e764f1b" translate="yes" xml:space="preserve">
          <source>Router Initialization</source>
          <target state="translated">Inicialización del router</target>
        </trans-unit>
        <trans-unit id="1b4778ead27c045154fa8a8032dcbf9b6b10e64f" translate="yes" xml:space="preserve">
          <source>Router Options: Modes</source>
          <target state="translated">Opciones del router:Modos</target>
        </trans-unit>
        <trans-unit id="9add2b84e8289fb0ea9dcb2637e5d5907ca4d748" translate="yes" xml:space="preserve">
          <source>Routes are now defined as an array on a &lt;a href=&quot;https://router.vuejs.org/en/essentials/getting-started.html#javascript&quot;&gt;&lt;code&gt;routes&lt;/code&gt; option&lt;/a&gt; at router instantiation. So these routes for example:</source>
          <target state="translated">Las rutas ahora se definen como una matriz en una &lt;a href=&quot;https://router.vuejs.org/en/essentials/getting-started.html#javascript&quot;&gt;opci&amp;oacute;n de &lt;/a&gt; &lt;code&gt;routes&lt;/code&gt; en la instanciaci&amp;oacute;n del enrutador. Entonces estas rutas, por ejemplo:</target>
        </trans-unit>
        <trans-unit id="7d15dd1bec2e055c5b177c9f869305ae6c54c9bb" translate="yes" xml:space="preserve">
          <source>Routing</source>
          <target state="translated">Routing</target>
        </trans-unit>
        <trans-unit id="d670f1115ef0c3c29b2d47e241e7dd62eafb1e11" translate="yes" xml:space="preserve">
          <source>Rule Categories</source>
          <target state="translated">Categorías de reglas</target>
        </trans-unit>
        <trans-unit id="91ba54d8bd5025bb2cb3e7a4cd0c0785af90a756" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find &lt;code&gt;keep-alive&lt;/code&gt; attributes.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar atributos de &lt;code&gt;keep-alive&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6d2ac67778b450ed0b9659002961f8409d707930" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find CSS selectors targeting named slots (e.g. &lt;code&gt;[slot=&quot;my-slot-name&quot;]&lt;/code&gt;).</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar selectores de CSS dirigidos a espacios con nombre (por ejemplo, &lt;code&gt;[slot=&quot;my-slot-name&quot;]&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="fb8ef12ba88bdd9ea8d64f474b58bd5f002af15c" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find HTML interpolations.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar interpolaciones HTML.</target>
        </trans-unit>
        <trans-unit id="e29967481758c6af408495a286989e2f4b3a4403" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find all examples of this hook.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su c&amp;oacute;digo base para encontrar todos los ejemplos de este gancho.</target>
        </trans-unit>
        <trans-unit id="131ad91eddecfe4bcd3aa1d2c3dae1e7c9a6d28b" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of &lt;code&gt;$dispatch&lt;/code&gt; and &lt;code&gt;$broadcast&lt;/code&gt;.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de &lt;code&gt;$dispatch&lt;/code&gt; y &lt;code&gt;$broadcast&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5547bdef16b43ebf6aa5572275c3effebf29215" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of &lt;code&gt;.$remove&lt;/code&gt; on an array. If you miss any, you should see &lt;strong&gt;console errors&lt;/strong&gt; from the missing method.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su c&amp;oacute;digo base para encontrar ejemplos de &lt;code&gt;.$remove&lt;/code&gt; en una matriz. Si omite alguno, deber&amp;iacute;a ver los &lt;strong&gt;errores de consola&lt;/strong&gt; del m&amp;eacute;todo que falta.</target>
        </trans-unit>
        <trans-unit id="4d1a3ee9aa64afee960f48bf970646ff2ca1516a" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of &lt;code&gt;.$set&lt;/code&gt; on an array. If you miss any, you should see &lt;strong&gt;console errors&lt;/strong&gt; from the missing method.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de &lt;code&gt;.$set&lt;/code&gt; en una matriz. Si omite alguno, deber&amp;iacute;a ver los &lt;strong&gt;errores de consola&lt;/strong&gt; del m&amp;eacute;todo que falta.</target>
        </trans-unit>
        <trans-unit id="f7cf2f519c21c26383d689b999383e7f48c8daeb" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of &lt;code&gt;Vue.config.async&lt;/code&gt;.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su c&amp;oacute;digo base para encontrar ejemplos de &lt;code&gt;Vue.config.async&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="adba4cc2d78c532c252af8489b44bb0c82a60071" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of &lt;code&gt;Vue.config.debug&lt;/code&gt;.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de &lt;code&gt;Vue.config.debug&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="842114654af7636636f5d0ca2790f492b054f6ff" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of &lt;code&gt;Vue.config.delimiters&lt;/code&gt;.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de &lt;code&gt;Vue.config.delimiters&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="56d3c94b1fca7d1fecbd0be685fc6a65bfb4e3ff" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of &lt;code&gt;Vue.config.unsafeDelimiters&lt;/code&gt;. After this, the helper will also find instances of HTML interpolation so that you can replace them with `v-html`.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de &lt;code&gt;Vue.config.unsafeDelimiters&lt;/code&gt; . Despu&amp;eacute;s de esto, el asistente tambi&amp;eacute;n encontrar&amp;aacute; instancias de interpolaci&amp;oacute;n HTML para que pueda reemplazarlas con `v-html`.</target>
        </trans-unit>
        <trans-unit id="7abfe983d07d10f68fd1a923086c66cfb28e6a0a" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of &lt;code&gt;Vue.elementDirective&lt;/code&gt;.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de &lt;code&gt;Vue.elementDirective&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0cbd833dba88270b867f404265f89cd61957dd9e" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of &lt;code&gt;Vue.partial&lt;/code&gt;.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de &lt;code&gt;Vue.partial&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2be876bb1c3f71e3306a218289a786bebe66e6ac" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of &lt;code&gt;Vue.set&lt;/code&gt; or &lt;code&gt;Vue.delete&lt;/code&gt; on a Vue instance. If you miss any, they'll trigger &lt;strong&gt;console warnings&lt;/strong&gt;.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de &lt;code&gt;Vue.set&lt;/code&gt; o &lt;code&gt;Vue.delete&lt;/code&gt; en una instancia de Vue. Si omite alguno, activar&amp;aacute;n &lt;strong&gt;advertencias de consola&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="b9c98c79eef3d7a23f61df5ef62ac7e471ae74fb" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of &lt;code&gt;Vue.transition&lt;/code&gt;.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de &lt;code&gt;Vue.transition&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3cd48bf0c847ee511a1c8d066fdfbdc6f4f6ffc4" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of &lt;code&gt;replace: false&lt;/code&gt;.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de &lt;code&gt;replace: false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc77c164d9ea83ca27d60242ad248d1e7b987f0e" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of &lt;code&gt;router.alias&lt;/code&gt; being called.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de &lt;code&gt;router.alias&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7cf69302085bdd68f35cf86d99ec675583acea23" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of &lt;code&gt;router.go&lt;/code&gt; being used where &lt;code&gt;router.push&lt;/code&gt; should be used instead.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de &lt;code&gt;router.go&lt;/code&gt; se utiliza donde en su &lt;code&gt;router.push&lt;/code&gt; debe usarse router.push .</target>
        </trans-unit>
        <trans-unit id="e39b23f840933b639f0659fde34e12f635127e7f" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of &lt;code&gt;router.map&lt;/code&gt; being called.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de &lt;code&gt;router.map&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b828dfd9e2d7bcae2364000145b56e764e6ebe03" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of &lt;code&gt;router.on&lt;/code&gt; being called.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de &lt;code&gt;router.on&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f9a6975194aa0ce1b5cad1c6626af7c35453fcd0" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of &lt;code&gt;router.redirect&lt;/code&gt; being called.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de &lt;code&gt;router.redirect&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cc5f2a33706f0e2d3f4cdbd090a5e649c5b6ae0f" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of &lt;code&gt;router.start&lt;/code&gt; being called.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de &lt;code&gt;router.start&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f5f2fbe802e2c06eba8dee0a46275f8ee4460bc0" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of &lt;code&gt;store.on&lt;/code&gt;, &lt;code&gt;store.off&lt;/code&gt;, and &lt;code&gt;store.emit&lt;/code&gt;.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su c&amp;oacute;digo base para encontrar ejemplos de &lt;code&gt;store.on&lt;/code&gt; , &lt;code&gt;store.off&lt;/code&gt; y &lt;code&gt;store.emit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="00ad6c9fe856a5b4567b7a4dab60a0fe45a37f40" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of &lt;code&gt;store.watch&lt;/code&gt; with a string as the first argument.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de &lt;code&gt;store.watch&lt;/code&gt; con una cadena como primer argumento.</target>
        </trans-unit>
        <trans-unit id="4f47a47355d74434a753364a679e2f4c9a402ae5" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of &lt;code&gt;track-by&lt;/code&gt;.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de &lt;code&gt;track-by&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da0f85cb5aa67bdac2ea466f36918db2fcd36b05" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of &lt;code&gt;v-el&lt;/code&gt; and &lt;code&gt;v-ref&lt;/code&gt;.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de &lt;code&gt;v-el&lt;/code&gt; y &lt;code&gt;v-ref&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7aa5783c6df3a82bb69131d32c3850e7f84cfda7" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of &lt;code&gt;vm.$after&lt;/code&gt;. If you miss any, you'll see &lt;strong&gt;console errors&lt;/strong&gt;.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de &lt;code&gt;vm.$after&lt;/code&gt; . Si omite alguno, ver&amp;aacute; &lt;strong&gt;errores de consola&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="09e7d78d817c1fd2a45c3cf9b9c21a2069c4fd37" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of &lt;code&gt;vm.$appendTo&lt;/code&gt;. If you miss any, you'll see &lt;strong&gt;console errors&lt;/strong&gt;.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de &lt;code&gt;vm.$appendTo&lt;/code&gt; . Si omite alguno, ver&amp;aacute; &lt;strong&gt;errores de consola&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="d7350cc4e203e91682eee37d60894b3e1314af48" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of &lt;code&gt;vm.$before&lt;/code&gt;. If you miss any, you'll see &lt;strong&gt;console errors&lt;/strong&gt;.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de &lt;code&gt;vm.$before&lt;/code&gt; . Si omite alguno, ver&amp;aacute; &lt;strong&gt;errores de consola&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="c0c4f878eaed231fe0dbb2225df03cd65dc84e13" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of &lt;code&gt;vm.$eval&lt;/code&gt;. If you miss any, you'll see &lt;strong&gt;console errors&lt;/strong&gt;.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de &lt;code&gt;vm.$eval&lt;/code&gt; . Si omite alguno, ver&amp;aacute; &lt;strong&gt;errores de consola&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="3f8e856f05355ed8982ce86f4336ff6eacabf3e2" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of &lt;code&gt;vm.$get&lt;/code&gt;. If you miss any, you'll see &lt;strong&gt;console errors&lt;/strong&gt;.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de &lt;code&gt;vm.$get&lt;/code&gt; . Si omite alguno, ver&amp;aacute; &lt;strong&gt;errores de consola&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="bd0dd654ce3404b139a97c6070c1ea80255ce0fd" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of &lt;code&gt;vm.$interpolate&lt;/code&gt;. If you miss any, you'll see &lt;strong&gt;console errors&lt;/strong&gt;.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de &lt;code&gt;vm.$interpolate&lt;/code&gt; . Si omite alguno, ver&amp;aacute; &lt;strong&gt;errores de consola&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="81bbbda8f1ba1322792aa46e4294439738bc392f" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of &lt;code&gt;vm.$log&lt;/code&gt;. If you miss any, you'll see &lt;strong&gt;console errors&lt;/strong&gt;.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de &lt;code&gt;vm.$log&lt;/code&gt; . Si omite alguno, ver&amp;aacute; &lt;strong&gt;errores de consola&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="381f44de62059e317b1f31d7ce9b3541555d602b" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of &lt;code&gt;vm.$remove&lt;/code&gt;. If you miss any, you'll see &lt;strong&gt;console errors&lt;/strong&gt;.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su c&amp;oacute;digo base para encontrar ejemplos de &lt;code&gt;vm.$remove&lt;/code&gt; . Si omite alguno, ver&amp;aacute; &lt;strong&gt;errores de consola&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="b874a37ca4886af9d3b7780e6010cf89d9c7f988" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of arbitrary route properties not scoped under meta.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su c&amp;oacute;digo base para encontrar ejemplos de propiedades de ruta arbitrarias que no se encuentran dentro del &amp;aacute;mbito de meta.</target>
        </trans-unit>
        <trans-unit id="1fa158cea69bdd4c40bd2a48988a099538d4dc5e" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of defined directives. The helper will flag all of them, as it's likely in most cases that you'll want to refactor to a component.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su c&amp;oacute;digo base para encontrar ejemplos de directivas definidas. El ayudante los marcar&amp;aacute; todos, ya que es probable que en la mayor&amp;iacute;a de los casos desee refactorizar a un componente.</target>
        </trans-unit>
        <trans-unit id="979e6458f784d896c90752c57e560652f6c8525d" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of filters being used inside directives. If you miss any, you should also see &lt;strong&gt;console errors&lt;/strong&gt;.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su c&amp;oacute;digo base para encontrar ejemplos de filtros que se utilizan dentro de las directivas. Si omite alguno, tambi&amp;eacute;n deber&amp;iacute;a ver &lt;strong&gt;errores de consola&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="801a0e4488b5e174aaaa485bb9fbdd0fb7f5b389" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of filters used in directives like &lt;code&gt;v-model&lt;/code&gt;. If you miss any, you should also see &lt;strong&gt;console errors&lt;/strong&gt;.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de filtros utilizados en directivas como &lt;code&gt;v-model&lt;/code&gt; . Si omite alguno, tambi&amp;eacute;n deber&amp;iacute;a ver &lt;strong&gt;errores de consola&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="83b833ef69efe1e17f7ef29c061f04dea5876bad" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of interpolation used within attributes.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de interpolaci&amp;oacute;n utilizados dentro de los atributos.</target>
        </trans-unit>
        <trans-unit id="9bb76b174b8438ba3c0f4ba54b4026ce44dd98ca" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of overwriting &lt;code&gt;vm.$data&lt;/code&gt;. If you miss any, &lt;strong&gt;console warnings&lt;/strong&gt; will be emitted.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de sobrescritura de &lt;code&gt;vm.$data&lt;/code&gt; . Si omite alguno, &lt;strong&gt;se&lt;/strong&gt; emitir&amp;aacute;n &lt;strong&gt;advertencias de la consola&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="8dbff7c8c83dec265171807e5ec5ea40ea988ad1" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of style bindings with &lt;code&gt;!important&lt;/code&gt; in objects.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de enlaces de estilo con &lt;code&gt;!important&lt;/code&gt; en los objetos.</target>
        </trans-unit>
        <trans-unit id="93ebbb2019ca1300c683d3ae1afb72a96650f915" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of the &lt;code&gt;$loadingRouteData&lt;/code&gt; meta property.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de la &lt;code&gt;$loadingRouteData&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="52407d926e2b5716bf90f4cb35758896e87892ed" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of the &lt;code&gt;.once&lt;/code&gt; and &lt;code&gt;.sync&lt;/code&gt; modifiers.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;ayudante de la migraci&amp;oacute;n&lt;/a&gt; de su base de c&amp;oacute;digo para encontrar ejemplos de la &lt;code&gt;.once&lt;/code&gt; y &lt;code&gt;.sync&lt;/code&gt; modificadores.</target>
        </trans-unit>
        <trans-unit id="2c8ce2853d843c2c72201a428aaae4467ceec09d" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of the &lt;code&gt;abstract: true&lt;/code&gt; option.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de la opci&amp;oacute;n &lt;code&gt;abstract: true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2258f58c39858d2874ac267df312bf5774d76c18" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of the &lt;code&gt;activate&lt;/code&gt; hook.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos del gancho de &lt;code&gt;activate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d2dd196d33a6838401706a980c174ba91eb1c6e" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of the &lt;code&gt;cache: false&lt;/code&gt; option.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de la opci&amp;oacute;n &lt;code&gt;cache: false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="635b9a1176068b8a0020a01c4f47cb421d064226" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of the &lt;code&gt;canActivate&lt;/code&gt; hook.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su c&amp;oacute;digo base para encontrar ejemplos del gancho &lt;code&gt;canActivate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1ef7f740384cd3cfdf159ef6085f2faaac1ec88f" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of the &lt;code&gt;canDeactivate&lt;/code&gt; hook.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos del gancho &lt;code&gt;canDeactivate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="416c87ed212eefdaa2ddbf02f6a0ba2e74d86959" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of the &lt;code&gt;canReuse: false&lt;/code&gt; option.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su c&amp;oacute;digo base para encontrar ejemplos de la opci&amp;oacute;n &lt;code&gt;canReuse: false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce44d3b81054ffa59cb49fd62f006c1d791e2ab0" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of the &lt;code&gt;coerce&lt;/code&gt; option.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su c&amp;oacute;digo base para encontrar ejemplos de la opci&amp;oacute;n de &lt;code&gt;coerce&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="61fdd38d446cfe928998b1181aa744e45596c1c5" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of the &lt;code&gt;data&lt;/code&gt; hook.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos del enlace de &lt;code&gt;data&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eeb9b18e06a447d16bfa196a854b2eb06f05360a" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of the &lt;code&gt;deactivate&lt;/code&gt; hook.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos del gancho de &lt;code&gt;deactivate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f483517518991a282467c00ae1cad300e136b269" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of the &lt;code&gt;debounce&lt;/code&gt; attribute.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su c&amp;oacute;digo base para encontrar ejemplos del atributo &lt;code&gt;debounce&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b65067f3a77b357e086f22629678c364185b2ab2" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of the &lt;code&gt;hashbang: false&lt;/code&gt; option.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su c&amp;oacute;digo base para encontrar ejemplos de la opci&amp;oacute;n &lt;code&gt;hashbang: false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8a2e5b8abfbc6295fa11dd1caccde1ae7c3d69af" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of the &lt;code&gt;history: true&lt;/code&gt; option.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su c&amp;oacute;digo base para encontrar ejemplos de la opci&amp;oacute;n &lt;code&gt;history: true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="452c89b5559555a477ca0eb92f956476ce00d5cd" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of the &lt;code&gt;middlewares&lt;/code&gt; option on a store.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de la opci&amp;oacute;n de &lt;code&gt;middlewares&lt;/code&gt; en una tienda.</target>
        </trans-unit>
        <trans-unit id="6faa58ba44b5eb605740b8397f8693bbaaa6f840" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of the &lt;code&gt;root&lt;/code&gt; option.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su c&amp;oacute;digo base para encontrar ejemplos de la opci&amp;oacute;n &lt;code&gt;root&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab45ded99a30a006bddeceb3fd6aa38bb6c3d9c6" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of the &lt;code&gt;saveScrollPosition: true&lt;/code&gt; option.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de la opci&amp;oacute;n &lt;code&gt;saveScrollPosition: true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ec2df901f80374c6ff66f398825204e5f18d423" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of the &lt;code&gt;subRoutes&lt;/code&gt; option.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de la opci&amp;oacute;n &lt;code&gt;subRoutes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7178b2cc5e9e2a36383d9e60b9eea90fb3bcb121" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of the &lt;code&gt;suppressTransitionError: true&lt;/code&gt; option.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su c&amp;oacute;digo base para encontrar ejemplos de la opci&amp;oacute;n &lt;code&gt;suppressTransitionError: true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4e988285e061dd6f2c40c32cddfbc676c1aab12a" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of the &lt;code&gt;transition&lt;/code&gt; attribute.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su c&amp;oacute;digo base para encontrar ejemplos del atributo de &lt;code&gt;transition&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c5f2b82da8cac7dc4262de8c7c93d4a46587dbca" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of the &lt;code&gt;transition&lt;/code&gt; attribute. During your update, you can transition (pun very much intended) to the new staggering strategy as well.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su c&amp;oacute;digo base para encontrar ejemplos del atributo de &lt;code&gt;transition&lt;/code&gt; . Durante su actualizaci&amp;oacute;n, tambi&amp;eacute;n puede hacer la transici&amp;oacute;n (juego de palabras muy intencionado) a la nueva estrategia asombrosa.</target>
        </trans-unit>
        <trans-unit id="34922f45eeac604f53b4193f84913c2beb89b350" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of the &lt;code&gt;transitionOnLoad: true&lt;/code&gt; option.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de la opci&amp;oacute;n &lt;code&gt;transitionOnLoad: true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c9c97a1b14162dd07775888af56118c3a3370301" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of the &lt;code&gt;twoWay&lt;/code&gt; option.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de la opci&amp;oacute;n de dos &lt;code&gt;twoWay&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cb3445799897bdc7ce3106b11c9b2c1f1d554568" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of the &lt;code&gt;v-else&lt;/code&gt; with &lt;code&gt;v-show&lt;/code&gt;.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su c&amp;oacute;digo base para encontrar ejemplos de &lt;code&gt;v-else&lt;/code&gt; con &lt;code&gt;v-show&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bccc02e6c6793423ef659db42169cb5afa5716d0" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of the &lt;code&gt;v-link-active&lt;/code&gt; directive.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su c&amp;oacute;digo base para encontrar ejemplos de la directiva &lt;code&gt;v-link-active&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ea921119a7e1635ac4e5a00b3d8a84491101f3fb" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of the &lt;code&gt;v-link&lt;/code&gt; directive.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de la directiva &lt;code&gt;v-link&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a825bdc145076ec6a6e4b0c215f030aa3ba79b85" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of the `.literal` modifier on a directive.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos del modificador `.literal` en una directiva.</target>
        </trans-unit>
        <trans-unit id="733bb79e129d2dca49869269db0a3698c6f65fa8" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of the obsolete argument order. Note that if you name your index arguments something unusual like &lt;code&gt;position&lt;/code&gt; or &lt;code&gt;num&lt;/code&gt;, the helper will not flag them.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos del orden de argumentos obsoleto. Tenga en cuenta que si nombra sus argumentos de &amp;iacute;ndice con algo inusual, como &lt;code&gt;position&lt;/code&gt; o &lt;code&gt;num&lt;/code&gt; , el asistente no los marcar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="da725380e126a62727af458ad28bac7c6524d798" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of the obsolete argument order. Note that if you name your key arguments something like &lt;code&gt;name&lt;/code&gt; or &lt;code&gt;property&lt;/code&gt;, the helper will not flag them.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos del orden de argumentos obsoleto. Tenga en cuenta que si nombra sus argumentos clave con algo como &lt;code&gt;name&lt;/code&gt; o &lt;code&gt;property&lt;/code&gt; , el asistente no los marcar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="f1e1035d99ed76f7515df578e692ff719107895a" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of the obsolete route syntax.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de la sintaxis de ruta obsoleta.</target>
        </trans-unit>
        <trans-unit id="142bb71333ac86e488c9aacc373010de66e961e1" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of the obsolete text filters. If you miss any, you should also see &lt;strong&gt;console errors&lt;/strong&gt;.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de los filtros de texto obsoletos. Si omite alguno, tambi&amp;eacute;n deber&amp;iacute;a ver &lt;strong&gt;errores de consola&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="397d5ab0302428112127147010f4482ef9051b5e" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of the obsolete usage.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos del uso obsoleto.</target>
        </trans-unit>
        <trans-unit id="c1aa36c4bb555ce2607bb2d08c4631182d133d50" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of the old filter syntax. If you miss any, you should also see &lt;strong&gt;console errors&lt;/strong&gt;.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de la sintaxis de filtro anterior. Si omite alguno, tambi&amp;eacute;n deber&amp;iacute;a ver &lt;strong&gt;errores de consola&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="20564b7f4450c4fa59c4a3ba6fa87121c27fe89f" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of the the old &lt;code&gt;keyCode&lt;/code&gt; configuration syntax.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de la antigua sintaxis de configuraci&amp;oacute;n de &lt;code&gt;keyCode&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cc0976e79e68e3874825b8d9309f7bc3cf13503f" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of the these param attributes.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su c&amp;oacute;digo base para encontrar ejemplos de estos atributos de par&amp;aacute;metro.</target>
        </trans-unit>
        <trans-unit id="4a53e2c9b9e1ccea5753bf6c5b26aa93f8d31041" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find examples of these removed variables. If you miss any, you should also see &lt;strong&gt;console errors&lt;/strong&gt; such as: &lt;code&gt;Uncaught ReferenceError: $index is not defined&lt;/code&gt;</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar ejemplos de estas variables eliminadas. Si pierde alguno, tambi&amp;eacute;n deber&amp;iacute;a ver &lt;strong&gt;errores de consola&lt;/strong&gt; como: &lt;code&gt;Uncaught ReferenceError: $index is not defined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b0ae781de5086e5c0e4123dc4514d344522a5237" translate="yes" xml:space="preserve">
          <source>Run the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on your codebase to find one-time bindings.</source>
          <target state="translated">Ejecute el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en su base de c&amp;oacute;digo para encontrar enlaces &amp;uacute;nicos.</target>
        </trans-unit>
        <trans-unit id="2c800955474c5ae66271d1f51e3a706afff6e929" translate="yes" xml:space="preserve">
          <source>Run your bundling command with the actual &lt;code&gt;NODE_ENV&lt;/code&gt; environment variable set to &lt;code&gt;&quot;production&quot;&lt;/code&gt;. This tells &lt;code&gt;vueify&lt;/code&gt; to avoid including hot-reload and development related code.</source>
          <target state="translated">Ejecute su comando de empaquetado con la variable de entorno &lt;code&gt;NODE_ENV&lt;/code&gt; real establecida en &lt;code&gt;&quot;production&quot;&lt;/code&gt; . Esto le dice a &lt;code&gt;vueify&lt;/code&gt; que evite incluir c&amp;oacute;digo relacionado con el desarrollo y la recarga en caliente.</target>
        </trans-unit>
        <trans-unit id="65124f23df07644ee66ed5e04606bd6c7b54318b" translate="yes" xml:space="preserve">
          <source>Run your end-to-end test suite or app after upgrading and look for &lt;strong&gt;console warnings&lt;/strong&gt; about duplicate slots &lt;code&gt;v-model&lt;/code&gt;.</source>
          <target state="translated">Ejecute su aplicaci&amp;oacute;n o suite de pruebas de un extremo a otro despu&amp;eacute;s de la actualizaci&amp;oacute;n y busque las &lt;strong&gt;advertencias de la consola&lt;/strong&gt; sobre el &lt;code&gt;v-model&lt;/code&gt; ranuras duplicadas .</target>
        </trans-unit>
        <trans-unit id="0276baa533bc89d334fafab4aee362813fb56fba" translate="yes" xml:space="preserve">
          <source>Run your end-to-end test suite or app after upgrading and look for &lt;strong&gt;console warnings&lt;/strong&gt; about inline value attributes with &lt;code&gt;v-model&lt;/code&gt;.</source>
          <target state="translated">Ejecute su aplicaci&amp;oacute;n o suite de pruebas de un extremo a otro despu&amp;eacute;s de la actualizaci&amp;oacute;n y busque las &lt;strong&gt;advertencias de la consola&lt;/strong&gt; sobre los atributos de valor en l&amp;iacute;nea con &lt;code&gt;v-model&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b9168febc3cd9fb510564d5d619d53cfceebc829" translate="yes" xml:space="preserve">
          <source>Run your end-to-end test suite or app after upgrading and look for &lt;strong&gt;console warnings&lt;/strong&gt; about multiple root elements in a template.</source>
          <target state="translated">Ejecute su aplicaci&amp;oacute;n o suite de pruebas de un extremo a otro despu&amp;eacute;s de la actualizaci&amp;oacute;n y busque las &lt;strong&gt;advertencias de la consola&lt;/strong&gt; sobre varios elementos ra&amp;iacute;z en una plantilla.</target>
        </trans-unit>
        <trans-unit id="6cd905d20455b18138224bc59c413711a6de22a2" translate="yes" xml:space="preserve">
          <source>Run your end-to-end test suite or app after upgrading and look for &lt;strong&gt;console warnings&lt;/strong&gt; about prop mutations.</source>
          <target state="translated">Ejecute su aplicaci&amp;oacute;n o suite de pruebas de un extremo a otro despu&amp;eacute;s de la actualizaci&amp;oacute;n y busque &lt;strong&gt;advertencias de consola&lt;/strong&gt; sobre mutaciones de accesorios.</target>
        </trans-unit>
        <trans-unit id="7da416f4436591687e3ea5cf9d579fb6711b7dbd" translate="yes" xml:space="preserve">
          <source>Run your end-to-end test suite or app after upgrading and look for &lt;strong&gt;console warnings&lt;/strong&gt; about the &lt;code&gt;el&lt;/code&gt; option with &lt;code&gt;Vue.extend&lt;/code&gt;.</source>
          <target state="translated">Ejecutar su banco de pruebas de extremo a extremo o la aplicaci&amp;oacute;n despu&amp;eacute;s de la actualizaci&amp;oacute;n y busque &lt;strong&gt;las advertencias de la consola&lt;/strong&gt; sobre el &lt;code&gt;el&lt;/code&gt; opci&amp;oacute;n con &lt;code&gt;Vue.extend&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de5aa3b1e8bcd9a2e9b6648cc6da29ebd7c682fa" translate="yes" xml:space="preserve">
          <source>Run your end-to-end test suite, if you have one. The &lt;strong&gt;failed tests&lt;/strong&gt; should alert to you to any parts of your app that may be affected by this change.</source>
          <target state="translated">Ejecute su conjunto de pruebas de extremo a extremo, si tiene uno. Las &lt;strong&gt;pruebas fallidas&lt;/strong&gt; deber&amp;iacute;an alertarle sobre cualquier parte de su aplicaci&amp;oacute;n que pueda verse afectada por este cambio.</target>
        </trans-unit>
        <trans-unit id="25b0475e8303e55dc27cdda9bbd8ef8c1c492011" translate="yes" xml:space="preserve">
          <source>Run your end-to-end test suite, if you have one. The &lt;strong&gt;failed tests&lt;/strong&gt; should alert to you to the fact that a watcher was relying on the old behavior.</source>
          <target state="translated">Ejecute su conjunto de pruebas de extremo a extremo, si tiene uno. Las &lt;strong&gt;pruebas fallidas&lt;/strong&gt; deber&amp;iacute;an alertarle sobre el hecho de que un observador confiaba en el comportamiento anterior.</target>
        </trans-unit>
        <trans-unit id="3925b4e9140324a46bda954fa3ba6a11551d44d8" translate="yes" xml:space="preserve">
          <source>Run your end-to-end test suite, if you have one. The &lt;strong&gt;failed tests&lt;/strong&gt; should alert to you to the fact that props passed to root instances are no longer working.</source>
          <target state="translated">Ejecute su conjunto de pruebas de extremo a extremo, si tiene uno. Las &lt;strong&gt;pruebas fallidas&lt;/strong&gt; deber&amp;iacute;an alertarle sobre el hecho de que los accesorios pasados ​​a las instancias ra&amp;iacute;z ya no funcionan.</target>
        </trans-unit>
        <trans-unit id="c7a107bdb49919e8c77ec76a87618731104be368" translate="yes" xml:space="preserve">
          <source>Run your test suite, if you have one. The &lt;strong&gt;failed tests&lt;/strong&gt; should alert to you to any parts of your app that may be affected by this change.</source>
          <target state="translated">Ejecute su conjunto de pruebas, si tiene uno. Las &lt;strong&gt;pruebas fallidas&lt;/strong&gt; deber&amp;iacute;an alertarle sobre cualquier parte de su aplicaci&amp;oacute;n que pueda verse afectada por este cambio.</target>
        </trans-unit>
        <trans-unit id="13285023695c206297d4666f3184c48b775d9ec3" translate="yes" xml:space="preserve">
          <source>Runtime + Compiler vs. Runtime-only</source>
          <target state="translated">Tiempo de ejecución+Compilador vs.Sólo tiempo de ejecución</target>
        </trans-unit>
        <trans-unit id="ce3caf82d6dc4282305777c04d22cb7e32e8739f" translate="yes" xml:space="preserve">
          <source>Runtime Performance</source>
          <target state="translated">Rendimiento en tiempo de ejecución</target>
        </trans-unit>
        <trans-unit id="0ab3eee80056a96ec147159fe704ef0b8dcd1e74" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#slot-scope&quot;&gt;&lt;code&gt;slot-scope&lt;/code&gt;&lt;/a&gt; except that &lt;code&gt;scope&lt;/code&gt; can only be used on &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; elements.</source>
          <target state="translated">Igual que &lt;a href=&quot;#slot-scope&quot;&gt; &lt;code&gt;slot-scope&lt;/code&gt; ,&lt;/a&gt; excepto que el &lt;code&gt;scope&lt;/code&gt; solo se puede usar en elementos &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c41f297530a1a4027d4fe5146dc89421c3603b93" translate="yes" xml:space="preserve">
          <source>Sarah Drasner demonstrates this in the demo below, using a combination of timed and interactivity-driven state changes:</source>
          <target state="translated">Sarah Drasner lo demuestra en la siguiente demostración,usando una combinación de cambios de estado temporizados e interactivos:</target>
        </trans-unit>
        <trans-unit id="a29f0256272e79ca91a1c4e608f09a6264397d12" translate="yes" xml:space="preserve">
          <source>Scale</source>
          <target state="translated">Scale</target>
        </trans-unit>
        <trans-unit id="88011a37856972ada6fede54fa2220927bfb5ac0" translate="yes" xml:space="preserve">
          <source>Scaling Down</source>
          <target state="translated">Reduciendo la escala</target>
        </trans-unit>
        <trans-unit id="2d20a53538fb773c0616dc1ef8c4f21c2ceb637d" translate="yes" xml:space="preserve">
          <source>Scaling Up</source>
          <target state="translated">Ampliación de la escala</target>
        </trans-unit>
        <trans-unit id="bf1e630e7268556a0635e37341aa31c69f284094" translate="yes" xml:space="preserve">
          <source>Scoped Slots</source>
          <target state="translated">Ranuras de alcance</target>
        </trans-unit>
        <trans-unit id="c891d436871bb971da8c2ff8081958bff3ddb19a" translate="yes" xml:space="preserve">
          <source>Scoped Slots with the &lt;code&gt;slot-scope&lt;/code&gt; Attribute</source>
          <target state="translated">Ranuras con &lt;code&gt;slot-scope&lt;/code&gt; atributo de &amp;aacute;mbito de ranura</target>
        </trans-unit>
        <trans-unit id="6aa971b69d2fe9a8fec7d58fa039f9aafe0f8da1" translate="yes" xml:space="preserve">
          <source>Scoped slot functions are now guaranteed to return an array of VNodes, unless the return value is invalid, in which case the function will return &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">Ahora se garantiza que las funciones de ranuras con alcance devolver&amp;aacute;n una matriz de VNodes, a menos que el valor de retorno no sea v&amp;aacute;lido, en cuyo caso la funci&amp;oacute;n devolver&amp;aacute; &lt;code&gt;undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dfa277d957af13fbcf610edac48d6ff9d1d53991" translate="yes" xml:space="preserve">
          <source>Search your codebase for the regex &lt;code&gt;/\w+ in \d+/&lt;/code&gt;. Wherever it appears in a &lt;code&gt;v-for&lt;/code&gt;, check to see if you may be affected.</source>
          <target state="translated">Busque en su base de c&amp;oacute;digo la expresi&amp;oacute;n regular &lt;code&gt;/\w+ in \d+/&lt;/code&gt; . Dondequiera que aparezca en &lt;code&gt;v-for&lt;/code&gt; , verifique si puede verse afectado.</target>
        </trans-unit>
        <trans-unit id="0d4f1b3e1926d0de28455af2f7b050061aa08a61" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://jsfiddle.net/chrisvfritz/1Leb7up8/&quot;&gt;this fiddle&lt;/a&gt; for the full code. Note, however, that if you find yourself having to do a lot of setup and cleanup within a single component, the best solution will usually be to create more modular components. In this case, we&amp;rsquo;d recommend creating a reusable &lt;code&gt;&amp;lt;input-datepicker&amp;gt;&lt;/code&gt; component.</source>
          <target state="translated">Vea &lt;a href=&quot;https://jsfiddle.net/chrisvfritz/1Leb7up8/&quot;&gt;este viol&amp;iacute;n&lt;/a&gt; para el c&amp;oacute;digo completo. Sin embargo, tenga en cuenta que si tiene que realizar una gran cantidad de configuraci&amp;oacute;n y limpieza dentro de un solo componente, la mejor soluci&amp;oacute;n suele ser crear m&amp;aacute;s componentes modulares. En este caso, recomendamos crear un componente &lt;code&gt;&amp;lt;input-datepicker&amp;gt;&lt;/code&gt; reutilizable .</target>
        </trans-unit>
        <trans-unit id="04b10db48b879dd4894715118934c8f16e790244" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://jsfiddle.net/chrisvfritz/65gLu2b6/&quot;&gt;this fiddle&lt;/a&gt; for the complete code behind the above demo.</source>
          <target state="translated">Vea &lt;a href=&quot;https://jsfiddle.net/chrisvfritz/65gLu2b6/&quot;&gt;este viol&amp;iacute;n&lt;/a&gt; para obtener el c&amp;oacute;digo completo detr&amp;aacute;s de la demostraci&amp;oacute;n anterior.</target>
        </trans-unit>
        <trans-unit id="030b52b1aecbbfd160c5986ee59275d22c9f7672" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://jsfiddle.net/chrisvfritz/o3nycadu/&quot;&gt;this fiddle&lt;/a&gt; to experiment with the full code, or &lt;a href=&quot;https://jsfiddle.net/chrisvfritz/b2qj69o1/&quot;&gt;this version&lt;/a&gt; for an example binding to a component&amp;rsquo;s options object, instead of its registered name.</source>
          <target state="translated">Vea &lt;a href=&quot;https://jsfiddle.net/chrisvfritz/o3nycadu/&quot;&gt;este viol&amp;iacute;n&lt;/a&gt; para experimentar con el c&amp;oacute;digo completo, o &lt;a href=&quot;https://jsfiddle.net/chrisvfritz/b2qj69o1/&quot;&gt;esta versi&amp;oacute;n&lt;/a&gt; para un ejemplo de enlace al objeto de opciones de un componente, en lugar de su nombre registrado.</target>
        </trans-unit>
        <trans-unit id="bc6fd808ffb90ac93f1cb9d312e01c08b9a59bf3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/compiler-options.html&quot;&gt;TypeScript compiler options docs&lt;/a&gt; for more details.</source>
          <target state="translated">Consulte los &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/compiler-options.html&quot;&gt;documentos de opciones del compilador de TypeScript&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="8f4b188488a5cff189e4cfc9d54ff0931435281a" translate="yes" xml:space="preserve">
          <source>See example &lt;a href=&quot;https://github.com/vuejs/vuex/blob/1.0/docs/en/plugins.md&quot;&gt;the plugins docs&lt;/a&gt; for more info.</source>
          <target state="translated">Consulte el ejemplo de &lt;a href=&quot;https://github.com/vuejs/vuex/blob/1.0/docs/en/plugins.md&quot;&gt;los documentos de complementos&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b7cdc723bd45704f63d3132765b8411da257e1bf" translate="yes" xml:space="preserve">
          <source>See the Pen &lt;a href=&quot;https://codepen.io/sdras/pen/YZBGNp/&quot;&gt;Vue-controlled Wall-E&lt;/a&gt; by Sarah Drasner (&lt;a href=&quot;https://codepen.io/sdras&quot;&gt;@sdras&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.</source>
          <target state="translated">Vea el &lt;a href=&quot;https://codepen.io/sdras/pen/YZBGNp/&quot;&gt;Wall-E controlado por&lt;/a&gt; Pen Vue de Sarah Drasner ( &lt;a href=&quot;https://codepen.io/sdras&quot;&gt;@sdras&lt;/a&gt; ) en &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8598222918d3c6e513d63060cf55e2971ded729a" translate="yes" xml:space="preserve">
          <source>Select</source>
          <target state="translated">Select</target>
        </trans-unit>
        <trans-unit id="d84be9de2f9e35e379e0e4f6e0bb2340cf1b2d0b" translate="yes" xml:space="preserve">
          <source>Select Options</source>
          <target state="translated">Seleccione las opciones</target>
        </trans-unit>
        <trans-unit id="33e3b8ff7914aff97145e0add0103e5154bdde21" translate="yes" xml:space="preserve">
          <source>Self-closing components</source>
          <target state="translated">Componentes de cierre automático</target>
        </trans-unit>
        <trans-unit id="8aa1710830cfa45dfe404022342d5aade64a9767" translate="yes" xml:space="preserve">
          <source>Self-closing components &lt;sup&gt;strongly recommended&lt;/sup&gt;</source>
          <target state="translated">Se &lt;sup&gt;recomiendan&lt;/sup&gt; componentes de cierre autom&amp;aacute;tico&lt;sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="01fe9a20a8fdeb0f312fdcea1363c6a939cf772b" translate="yes" xml:space="preserve">
          <source>Server-Side Rendering</source>
          <target state="translated">Renderización del lado del servidor</target>
        </trans-unit>
        <trans-unit id="d986e7075907e08286bd92c14ff694e5215b1ede" translate="yes" xml:space="preserve">
          <source>Set this to &lt;code&gt;false&lt;/code&gt; to prevent the production tip on Vue startup.</source>
          <target state="translated">Establezca esto en &lt;code&gt;false&lt;/code&gt; para evitar la sugerencia de producci&amp;oacute;n en el inicio de Vue.</target>
        </trans-unit>
        <trans-unit id="0322b76a288cd27bf5d650f3c073fe32426bc786" translate="yes" xml:space="preserve">
          <source>Set this to &lt;code&gt;true&lt;/code&gt; to enable component init, compile, render and patch performance tracing in the browser devtool performance/timeline panel. Only works in development mode and in browsers that support the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Performance/mark&quot;&gt;performance.mark&lt;/a&gt; API.</source>
          <target state="translated">Aj&amp;uacute;stelo a &lt;code&gt;true&lt;/code&gt; para habilitar el seguimiento del rendimiento de inicio, compilaci&amp;oacute;n, renderizado y parche de componentes en el panel de rendimiento / l&amp;iacute;nea de tiempo de la herramienta de desarrollo del navegador. Solo funciona en modo de desarrollo y en navegadores que admiten la API &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Performance/mark&quot;&gt;performance.mark&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="97f2f59947f62c014c5d7c2a4de9191db27303ae" translate="yes" xml:space="preserve">
          <source>Share (and Build) Your Experience</source>
          <target state="translated">Comparta (y construya)su experiencia</target>
        </trans-unit>
        <trans-unit id="89dd25c3e7bb9f776951ef9ad74e60a7d6dd05bb" translate="yes" xml:space="preserve">
          <source>Shorthands</source>
          <target state="translated">Shorthands</target>
        </trans-unit>
        <trans-unit id="1ae7276e79db945fd551dc9db134399c32bb6984" translate="yes" xml:space="preserve">
          <source>Should either be updated to use an inline expression:</source>
          <target state="translated">Debe actualizarse cualquiera de los dos para utilizar una expresión en línea:</target>
        </trans-unit>
        <trans-unit id="b0a3536bb7788ee14bd41892adba577744a1012d" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;$root&lt;/code&gt;, the &lt;code&gt;$parent&lt;/code&gt; property can be used to access the parent instance from a child. This can be tempting to reach for as a lazy alternative to passing data with a prop.</source>
          <target state="translated">Al igual que &lt;code&gt;$root&lt;/code&gt; , la propiedad &lt;code&gt;$parent&lt;/code&gt; se puede usar para acceder a la instancia principal desde un hijo. Esto puede ser tentador como una alternativa perezosa a pasar datos con un accesorio.</target>
        </trans-unit>
        <trans-unit id="dadac4906f4bc6e4a81d9058bdcbf1bbcb397f71" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;v-else&lt;/code&gt;, a &lt;code&gt;v-else-if&lt;/code&gt; element must immediately follow a &lt;code&gt;v-if&lt;/code&gt; or a &lt;code&gt;v-else-if&lt;/code&gt; element.</source>
          <target state="translated">Similar a &lt;code&gt;v-else&lt;/code&gt; , un elemento &lt;code&gt;v-else-if&lt;/code&gt; debe seguir inmediatamente a un elemento &lt;code&gt;v-if&lt;/code&gt; o &lt;code&gt;v-else-if&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="af9b7b6d2657eb7de92b424e723e1ce34e27dd45" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;v-on&lt;/code&gt; and &lt;code&gt;v-bind&lt;/code&gt;, &lt;code&gt;v-slot&lt;/code&gt; also has a shorthand, replacing everything before the argument (&lt;code&gt;v-slot:&lt;/code&gt;) with the special symbol &lt;code&gt;#&lt;/code&gt;. For example, &lt;code&gt;v-slot:header&lt;/code&gt; can be rewritten as &lt;code&gt;#header&lt;/code&gt;:</source>
          <target state="translated">Similar a &lt;code&gt;v-on&lt;/code&gt; y &lt;code&gt;v-bind&lt;/code&gt; , &lt;code&gt;v-slot&lt;/code&gt; tambi&amp;eacute;n tiene una forma abreviada, reemplazando todo antes del argumento ( &lt;code&gt;v-slot:&lt;/code&gt; con el s&amp;iacute;mbolo especial &lt;code&gt;#&lt;/code&gt; . Por ejemplo, &lt;code&gt;v-slot:header&lt;/code&gt; se puede reescribir como &lt;code&gt;#header&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="110921f9f16f79ec9020d42a774f85de76c9358e" translate="yes" xml:space="preserve">
          <source>Similar to prop defaults, you need to use a factory function for non primitive values:</source>
          <target state="translated">Similar a los valores por defecto de la utilería,necesitas usar una función de fábrica para los valores no primitivos:</target>
        </trans-unit>
        <trans-unit id="3115d0b13d887f54dba012634384e7c25cfdf659" translate="yes" xml:space="preserve">
          <source>Similar to template &lt;code&gt;v-if&lt;/code&gt;, you can also use a &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; tag with &lt;code&gt;v-for&lt;/code&gt; to render a block of multiple elements. For example:</source>
          <target state="translated">Similar a la plantilla &lt;code&gt;v-if&lt;/code&gt; , tambi&amp;eacute;n puede usar una etiqueta &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; con &lt;code&gt;v-for&lt;/code&gt; para representar un bloque de varios elementos. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="9032b6dd131e5bdf77e7f1e8c9ad6ef9e98b4db4" translate="yes" xml:space="preserve">
          <source>Similarly, you can use dynamic arguments to bind a handler to a dynamic event name:</source>
          <target state="translated">Del mismo modo,puedes usar argumentos dinámicos para vincular un manejador a un nombre de evento dinámico:</target>
        </trans-unit>
        <trans-unit id="e756f11c70f78a0ba1866d4795579c59fa6d1833" translate="yes" xml:space="preserve">
          <source>Simple Assertions</source>
          <target state="translated">Afirmaciones simples</target>
        </trans-unit>
        <trans-unit id="bbba1d068bf49ca0e64f1e344f51043367c2266d" translate="yes" xml:space="preserve">
          <source>Simple Routing From Scratch</source>
          <target state="translated">Una simple ruta desde cero</target>
        </trans-unit>
        <trans-unit id="4e794aae53f27e868a697d7573dd5ec04e937e2a" translate="yes" xml:space="preserve">
          <source>Simple State Management from Scratch</source>
          <target state="translated">La simple gestión del estado desde el principio</target>
        </trans-unit>
        <trans-unit id="7a423acd4331de7d207764fc94ba09543c17ef88" translate="yes" xml:space="preserve">
          <source>Simple computed properties</source>
          <target state="translated">Propiedades computarizadas simples</target>
        </trans-unit>
        <trans-unit id="28fbbfbd1e3c5e7641094f470de044776bb5ad02" translate="yes" xml:space="preserve">
          <source>Simple computed properties &lt;sup&gt;strongly recommended&lt;/sup&gt;</source>
          <target state="translated">Se &lt;sup&gt;recomiendan&lt;/sup&gt; propiedades calculadas simples&lt;sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="37761f78a8d655b3953b071e198e22dcd5a02587" translate="yes" xml:space="preserve">
          <source>Simple expressions in templates</source>
          <target state="translated">Expresiones simples en plantillas</target>
        </trans-unit>
        <trans-unit id="fcf7b67ac329ddfb22fdf3fbec785727bf9bf466" translate="yes" xml:space="preserve">
          <source>Simple expressions in templates &lt;sup&gt;strongly recommended&lt;/sup&gt;</source>
          <target state="translated">Expresiones simples en plantillas &lt;sup&gt;muy recomendadas&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="211d49f995dbe282f57faa15874e031ac53eeff7" translate="yes" xml:space="preserve">
          <source>Simpler, well-named computed properties are:</source>
          <target state="translated">Las propiedades computarizadas más simples y bien nombradas son:</target>
        </trans-unit>
        <trans-unit id="63a2bccabf19824dace120aef2460e5986003d8a" translate="yes" xml:space="preserve">
          <source>Simplifying computed properties forces you to give each value a descriptive name, even if it&amp;rsquo;s not reused. This makes it much easier for other developers (and future you) to focus in on the code they care about and figure out what&amp;rsquo;s going on.</source>
          <target state="translated">La simplificaci&amp;oacute;n de las propiedades calculadas le obliga a darle a cada valor un nombre descriptivo, incluso si no se reutiliza. Esto hace que sea mucho m&amp;aacute;s f&amp;aacute;cil para otros desarrolladores (y para usted en el futuro) concentrarse en el c&amp;oacute;digo que les interesa y descubrir qu&amp;eacute; est&amp;aacute; pasando.</target>
        </trans-unit>
        <trans-unit id="5fd1e98b263d4df6091312537a5b1fb83da16e24" translate="yes" xml:space="preserve">
          <source>Simply download and include with a script tag. &lt;code&gt;Vue&lt;/code&gt; will be registered as a global variable.</source>
          <target state="translated">Simplemente descargue e incluya con una etiqueta de script. &lt;code&gt;Vue&lt;/code&gt; se registrar&amp;aacute; como una variable global.</target>
        </trans-unit>
        <trans-unit id="d5938f34f8624b63802c3118f180d5e293766247" translate="yes" xml:space="preserve">
          <source>Simultaneous entering and leaving transitions aren&amp;rsquo;t always desirable though, so Vue offers some alternative &lt;strong&gt;transition modes&lt;/strong&gt;:</source>
          <target state="translated">Sin embargo, las transiciones de entrada y salida simult&amp;aacute;neas no siempre son deseables, por lo que Vue ofrece algunos &lt;strong&gt;modos de transici&amp;oacute;n&lt;/strong&gt; alternativos :</target>
        </trans-unit>
        <trans-unit id="6a69d78f54bcf8ac6e1f4a3963e04cee33a026d0" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;$nextTick()&lt;/code&gt; returns a promise, you can achieve the same as the above using the new &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function&quot;&gt;ES2016 async/await&lt;/a&gt; syntax:</source>
          <target state="translated">Dado que &lt;code&gt;$nextTick()&lt;/code&gt; devuelve una promesa, puede lograr lo mismo que lo anterior utilizando la nueva &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function&quot;&gt;sintaxis async / await de ES2016&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="10a777de149e5a77b75501c009eb466a9bc93514" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;v-ref&lt;/code&gt; is no longer a directive, but a special attribute, it can also be dynamically defined. This is especially useful in combination with &lt;code&gt;v-for&lt;/code&gt;. For example:</source>
          <target state="translated">Dado que &lt;code&gt;v-ref&lt;/code&gt; ya no es una directiva, sino un atributo especial, tambi&amp;eacute;n se puede definir din&amp;aacute;micamente. Esto es especialmente &amp;uacute;til en combinaci&amp;oacute;n con &lt;code&gt;v-for&lt;/code&gt; . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="9de3c1e0a71e1edcdc7ffbc2b45060ebfe43b095" translate="yes" xml:space="preserve">
          <source>Since Vue &lt;a href=&quot;reactivity#Async-Update-Queue&quot;&gt;performs DOM updates asynchronously&lt;/a&gt;, assertions on DOM updates resulting from state change will have to be made in a &lt;code&gt;Vue.nextTick&lt;/code&gt; callback:</source>
          <target state="translated">Dado que Vue &lt;a href=&quot;reactivity#Async-Update-Queue&quot;&gt;realiza actualizaciones de DOM de forma asincr&amp;oacute;nica&lt;/a&gt; , las afirmaciones sobre las actualizaciones de DOM resultantes del cambio de estado deber&amp;aacute;n realizarse en una &lt;code&gt;Vue.nextTick&lt;/code&gt; llamada de Vue.nextTick :</target>
        </trans-unit>
        <trans-unit id="a6f5eaf2601394efec9f1b3f5eff696573b84807" translate="yes" xml:space="preserve">
          <source>Since Vue doesn&amp;rsquo;t allow dynamically adding root-level reactive properties, you have to initialize Vue instances by declaring all root-level reactive data properties upfront, even with an empty value:</source>
          <target state="translated">Dado que Vue no permite agregar din&amp;aacute;micamente propiedades reactivas a nivel de ra&amp;iacute;z, debe inicializar las instancias de Vue declarando todas las propiedades de datos reactivas a nivel de ra&amp;iacute;z por adelantado, incluso con un valor vac&amp;iacute;o:</target>
        </trans-unit>
        <trans-unit id="17a485dec90726f134aafab30671454807556666" translate="yes" xml:space="preserve">
          <source>Since component names should always be multi-word, this convention prevents you from having to choose an arbitrary prefix for simple component wrappers (e.g. &lt;code&gt;MyButton&lt;/code&gt;, &lt;code&gt;VueButton&lt;/code&gt;).</source>
          <target state="translated">Dado que los nombres de los componentes deben estar siempre por varias palabras, esta convenci&amp;oacute;n le impide tener que elegir un prefijo arbitrario para envolturas de componentes simples (por ejemplo &lt;code&gt;MyButton&lt;/code&gt; , &lt;code&gt;VueButton&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ba2168060abb1674449c97121137c7602377ef42" translate="yes" xml:space="preserve">
          <source>Since components are reusable Vue instances, they accept the same options as &lt;code&gt;new Vue&lt;/code&gt;, such as &lt;code&gt;data&lt;/code&gt;, &lt;code&gt;computed&lt;/code&gt;, &lt;code&gt;watch&lt;/code&gt;, &lt;code&gt;methods&lt;/code&gt;, and lifecycle hooks. The only exceptions are a few root-specific options like &lt;code&gt;el&lt;/code&gt;.</source>
          <target state="translated">Dado que los componentes son instancias de Vue reutilizables, aceptan las mismas opciones que el &lt;code&gt;new Vue&lt;/code&gt; , como &lt;code&gt;data&lt;/code&gt; , &lt;code&gt;computed&lt;/code&gt; , &lt;code&gt;watch&lt;/code&gt; , &lt;code&gt;methods&lt;/code&gt; y enlaces de ciclo de vida. Las &amp;uacute;nicas excepciones son algunas opciones espec&amp;iacute;ficas de root como &lt;code&gt;el&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b68173db2c99b86c3a75462f226a7b75ff0f1d5" translate="yes" xml:space="preserve">
          <source>Since editors typically organize files alphabetically, all the important relationships between components are now evident at a glance.</source>
          <target state="translated">Como los editores suelen organizar los archivos por orden alfabético,todas las relaciones importantes entre los componentes son ahora evidentes a simple vista.</target>
        </trans-unit>
        <trans-unit id="ef79f75d79e817472bd0ed5aad52845e59dbf2e4" translate="yes" xml:space="preserve">
          <source>Since functional components are just functions, they&amp;rsquo;re much cheaper to render.</source>
          <target state="translated">Dado que los componentes funcionales son solo funciones, son mucho m&amp;aacute;s baratos de renderizar.</target>
        </trans-unit>
        <trans-unit id="5ca066badcd55a6324af0033eddd42706cb8d9c3" translate="yes" xml:space="preserve">
          <source>Since it&amp;rsquo;s a generic mechanism for Vue to identify nodes, the &lt;code&gt;key&lt;/code&gt; also has other uses that are not specifically tied to &lt;code&gt;v-for&lt;/code&gt;, as we will see later in the guide.</source>
          <target state="translated">Dado que es un mecanismo gen&amp;eacute;rico para que Vue identifique nodos, la &lt;code&gt;key&lt;/code&gt; tambi&amp;eacute;n tiene otros usos que no est&amp;aacute;n espec&amp;iacute;ficamente vinculados a &lt;code&gt;v-for&lt;/code&gt; , como veremos m&amp;aacute;s adelante en la gu&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="c460325ca52e3630249720f5552ae7b020e4765a" translate="yes" xml:space="preserve">
          <source>Since the runtime-only builds are roughly 30% lighter-weight than their full-build counterparts, you should use it whenever you can. If you still wish to use the full build instead, you need to configure an alias in your bundler:</source>
          <target state="translated">Como las construcciones de tiempo de ejecución son aproximadamente un 30% más ligeras que las de construcción completa,deberías usarlas siempre que puedas.Si todavía quieres usar la construcción completa en su lugar,necesitas configurar un alias en tu paquete:</target>
        </trans-unit>
        <trans-unit id="e62e1d6e39e14f551529b609a48c6fb619bb1df6" translate="yes" xml:space="preserve">
          <source>Since these are &lt;a href=&quot;https://cdn.jsdelivr.net/npm/vue/types/&quot;&gt;published on NPM&lt;/a&gt;, and the latest TypeScript knows how to resolve type declarations in NPM packages, this means when installed via NPM, you don&amp;rsquo;t need any additional tooling to use TypeScript with Vue.</source>
          <target state="translated">Dado que estos se &lt;a href=&quot;https://cdn.jsdelivr.net/npm/vue/types/&quot;&gt;publican en NPM&lt;/a&gt; , y el &amp;uacute;ltimo TypeScript sabe c&amp;oacute;mo resolver declaraciones de tipo en paquetes NPM, esto significa que cuando se instala a trav&amp;eacute;s de NPM, no necesita ninguna herramienta adicional para usar TypeScript con Vue.</target>
        </trans-unit>
        <trans-unit id="4ea3d2ff946bc5b79835d964012d367a993b9ca6" translate="yes" xml:space="preserve">
          <source>Since these components are so frequently used, you may want to simply make them global instead of importing them everywhere. A prefix makes this possible with Webpack:</source>
          <target state="translated">Dado que estos componentes se utilizan con tanta frecuencia,tal vez convenga simplemente hacerlos globales en lugar de importarlos a todas partes.Un prefijo hace esto posible con Webpack:</target>
        </trans-unit>
        <trans-unit id="796906cd98540356e295c43d625d24ed68862aac" translate="yes" xml:space="preserve">
          <source>Since we&amp;rsquo;re no longer using filter options that require a value to be returned, our currency work could actually be done asynchronously. That means if we had a lot of apps that had to work with currencies, we could easily refactor this logic into a shared microservice.</source>
          <target state="translated">Dado que ya no usamos opciones de filtro que requieren que se devuelva un valor, nuestro trabajo de moneda podr&amp;iacute;a realizarse de forma asincr&amp;oacute;nica. Eso significa que si tuvi&amp;eacute;ramos muchas aplicaciones que tuvieran que funcionar con monedas, podr&amp;iacute;amos refactorizar f&amp;aacute;cilmente esta l&amp;oacute;gica en un microservicio compartido.</target>
        </trans-unit>
        <trans-unit id="a31aa77b805847e93b5d67d3ae054b43de8ddfb3" translate="yes" xml:space="preserve">
          <source>Since you don&amp;rsquo;t have to manually attach event listeners in JS, your ViewModel code can be pure logic and DOM-free. This makes it easier to test.</source>
          <target state="translated">Como no tiene que adjuntar manualmente detectores de eventos en JS, su c&amp;oacute;digo ViewModel puede ser pura l&amp;oacute;gica y sin DOM. Esto facilita la prueba.</target>
        </trans-unit>
        <trans-unit id="59debd2931aa770a2b0975329d41213dcd9c5d88" translate="yes" xml:space="preserve">
          <source>Since you don&amp;rsquo;t need to know about JSX, ES2015, or build systems to get started with Vue, it also typically takes developers less than a day reading &lt;a href=&quot;../index&quot;&gt;the guide&lt;/a&gt; to learn enough to build non-trivial applications.</source>
          <target state="translated">Dado que no necesita saber acerca de JSX, ES2015 o sistemas de compilaci&amp;oacute;n para comenzar con Vue, los desarrolladores generalmente tardan menos de un d&amp;iacute;a en leer &lt;a href=&quot;../index&quot;&gt;la gu&amp;iacute;a&lt;/a&gt; para aprender lo suficiente para crear aplicaciones no triviales.</target>
        </trans-unit>
        <trans-unit id="4a6e205b866dd29d282ce270191d3645216b482d" translate="yes" xml:space="preserve">
          <source>Single File Components</source>
          <target state="translated">Componentes de un solo archivo</target>
        </trans-unit>
        <trans-unit id="5e7f1d7d63552994a465b38c32202f3620abe335" translate="yes" xml:space="preserve">
          <source>Single checkbox, boolean value:</source>
          <target state="translated">Una sola casilla de verificación,valor booleano:</target>
        </trans-unit>
        <trans-unit id="040f06c8b02b9ecd8ce3bcc463d52f44ab71de30" translate="yes" xml:space="preserve">
          <source>Single select:</source>
          <target state="translated">Una sola selección:</target>
        </trans-unit>
        <trans-unit id="95ef58f9b3d77202b180ce829f19b7953db91e4d" translate="yes" xml:space="preserve">
          <source>Single-file (&lt;code&gt;.vue&lt;/code&gt;) components</source>
          <target state="translated">Componentes de un solo archivo ( &lt;code&gt;.vue&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="a0fcc7019dc5bbeb59c13b0247440b91dff10e8e" translate="yes" xml:space="preserve">
          <source>Single-file component filename casing</source>
          <target state="translated">Carcasa de un solo archivo de componentes</target>
        </trans-unit>
        <trans-unit id="093c716d53dd968ee64e9ba688e8285861d21500" translate="yes" xml:space="preserve">
          <source>Single-file component filename casing &lt;sup&gt;strongly recommended&lt;/sup&gt;</source>
          <target state="translated">Se &lt;sup&gt;recomienda encarecidamente&lt;/sup&gt; utilizar may&amp;uacute;sculas y min&amp;uacute;sculas para el nombre de archivo de componente de archivo&lt;sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="aad2c1946beed7073bd3f80b10b836af1bd801c0" translate="yes" xml:space="preserve">
          <source>Single-file component top-level element order</source>
          <target state="translated">Orden de los elementos de nivel superior de los componentes de un solo archivo</target>
        </trans-unit>
        <trans-unit id="369e619c0ac6b0e41c0c5e5672725a1dad22811c" translate="yes" xml:space="preserve">
          <source>Single-file component top-level element order &lt;sup&gt;recommended&lt;/sup&gt;</source>
          <target state="translated">Se &lt;sup&gt;recomienda el&lt;/sup&gt; orden de elementos de nivel superior de componente de archivo &amp;uacute;nico&lt;sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="e5ab16f7ba44150cac61508afe92cbd1d1dd294b" translate="yes" xml:space="preserve">
          <source>Single-instance component names</source>
          <target state="translated">Nombres de los componentes de una sola sustancia</target>
        </trans-unit>
        <trans-unit id="801a9b431b0affdfa69d3dd93084d1b29dae9cb0" translate="yes" xml:space="preserve">
          <source>Single-instance component names &lt;sup&gt;strongly recommended&lt;/sup&gt;</source>
          <target state="translated">Se &lt;sup&gt;recomiendan encarecidamente&lt;/sup&gt; nombres de componentes de instancia &amp;uacute;nica&lt;sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="b7152342a267362add3c0d7f69f720f7a9c76c9e" translate="yes" xml:space="preserve">
          <source>Size</source>
          <target state="translated">Size</target>
        </trans-unit>
        <trans-unit id="896ccfe8515d070b5a15610d907daecc5196a888" translate="yes" xml:space="preserve">
          <source>Skip compilation for this element and all its children. You can use this for displaying raw mustache tags. Skipping large numbers of nodes with no directives on them can also speed up compilation.</source>
          <target state="translated">Salte la compilación para este elemento y todos sus hijos.Puedes usar esto para mostrar las etiquetas del bigote en bruto.Saltar un gran número de nodos sin directivas en ellos también puede acelerar la compilación.</target>
        </trans-unit>
        <trans-unit id="083d20797ac518ecfd2d5802f11e56f053d9b2a3" translate="yes" xml:space="preserve">
          <source>Slot Content</source>
          <target state="translated">Contenido de la ranura</target>
        </trans-unit>
        <trans-unit id="0c1a16e17517d5db584e59f03e5701a1df0aec29" translate="yes" xml:space="preserve">
          <source>Slots</source>
          <target state="translated">Slots</target>
        </trans-unit>
        <trans-unit id="0c05d5215c9958f423cfa89492ade3561c496be1" translate="yes" xml:space="preserve">
          <source>Small, focused computed properties make fewer assumptions about how information will be used, so require less refactoring as requirements change.</source>
          <target state="translated">Las propiedades computarizadas pequeñas y enfocadas hacen menos suposiciones sobre cómo se utilizará la información,por lo que requieren menos refactorización a medida que cambian los requisitos.</target>
        </trans-unit>
        <trans-unit id="270782c16d7dfcd9bacc30c93f3205da13a192a6" translate="yes" xml:space="preserve">
          <source>So even if we only render elements for a small fraction of users, we have to iterate over the entire list every time we re-render, whether or not the set of active users has changed.</source>
          <target state="translated">Así que aunque sólo rendericemos elementos para una pequeña fracción de usuarios,tenemos que iterar sobre toda la lista cada vez que volvemos a renderizar,tanto si el conjunto de usuarios activos ha cambiado como si no.</target>
        </trans-unit>
        <trans-unit id="9efa5f0263f4584699ee25a6ef7cd96b38af2cbd" translate="yes" xml:space="preserve">
          <source>So far we&amp;rsquo;ve only been binding to simple property keys in our templates. But Vue.js actually supports the full power of JavaScript expressions inside all data bindings:</source>
          <target state="translated">Hasta ahora, solo hemos vinculado claves de propiedad simples en nuestras plantillas. Pero Vue.js en realidad admite todo el poder de las expresiones de JavaScript dentro de todos los enlaces de datos:</target>
        </trans-unit>
        <trans-unit id="fc43cc8fe805d607917adfb57b267a4c1e366e21" translate="yes" xml:space="preserve">
          <source>So far, we&amp;rsquo;ve managed transitions for:</source>
          <target state="translated">Hasta ahora, hemos gestionado las transiciones para:</target>
        </trans-unit>
        <trans-unit id="9990ce27d68bc258ecfe618b1e117aba2e010d2d" translate="yes" xml:space="preserve">
          <source>So far, we&amp;rsquo;ve only created components using &lt;code&gt;Vue.component&lt;/code&gt;:</source>
          <target state="translated">Hasta ahora, solo hemos creado componentes usando &lt;code&gt;Vue.component&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="67796fb098e807812b451996ffa7c37901a92525" translate="yes" xml:space="preserve">
          <source>So far, we&amp;rsquo;ve only seen props listed as an array of strings:</source>
          <target state="translated">Hasta ahora, solo hemos visto accesorios enumerados como una matriz de cadenas:</target>
        </trans-unit>
        <trans-unit id="bcb7e6dc22797e50c31c81c6ca57f0d64cd4b40a" translate="yes" xml:space="preserve">
          <source>So far, you&amp;rsquo;ve seen props passed a static value, like in:</source>
          <target state="translated">Hasta ahora, has visto que los accesorios pasan un valor est&amp;aacute;tico, como en:</target>
        </trans-unit>
        <trans-unit id="bf5ea7f867584dc6f766ba242591c6f576f49d80" translate="yes" xml:space="preserve">
          <source>So far, you&amp;rsquo;ve seen uses of &lt;code&gt;$emit&lt;/code&gt;, listened to with &lt;code&gt;v-on&lt;/code&gt;, but Vue instances also offer other methods in its events interface. We can:</source>
          <target state="translated">Hasta ahora, ha visto usos de &lt;code&gt;$emit&lt;/code&gt; , escuchado con &lt;code&gt;v-on&lt;/code&gt; , pero las instancias de Vue tambi&amp;eacute;n ofrecen otros m&amp;eacute;todos en su interfaz de eventos. Podemos:</target>
        </trans-unit>
        <trans-unit id="8d84a44b86d81a516326f9813e2b3977e997a457" translate="yes" xml:space="preserve">
          <source>So this might be a good time to refactor the &lt;code&gt;&amp;lt;blog-post&amp;gt;&lt;/code&gt; component to accept a single &lt;code&gt;post&lt;/code&gt; prop instead:</source>
          <target state="translated">Por lo tanto, este podr&amp;iacute;a ser un buen momento para refactorizar el componente &lt;code&gt;&amp;lt;blog-post&amp;gt;&lt;/code&gt; para aceptar una sola propuesta de &lt;code&gt;post&lt;/code&gt; lugar:</target>
        </trans-unit>
        <trans-unit id="d6aa2762b60d0919d3cc5d125c99532a28d73b78" translate="yes" xml:space="preserve">
          <source>So what about for when we have a whole list of items we want to render simultaneously, for example with &lt;code&gt;v-for&lt;/code&gt;? In this case, we&amp;rsquo;ll use the &lt;code&gt;&amp;lt;transition-group&amp;gt;&lt;/code&gt; component. Before we dive into an example though, there are a few things that are important to know about this component:</source>
          <target state="translated">Entonces, &amp;iquest;qu&amp;eacute; pasa cuando tenemos una lista completa de elementos que queremos representar simult&amp;aacute;neamente, por ejemplo, con &lt;code&gt;v-for&lt;/code&gt; ? En este caso, usaremos el componente &lt;code&gt;&amp;lt;transition-group&amp;gt;&lt;/code&gt; . Sin embargo, antes de sumergirnos en un ejemplo, hay algunas cosas que es importante saber sobre este componente:</target>
        </trans-unit>
        <trans-unit id="147f6354f521a67959c12f2f8261d77ce2bb9c39" translate="yes" xml:space="preserve">
          <source>Some HTML elements, such as &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;ol&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; have restrictions on what elements can appear inside them, and some elements such as &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; can only appear inside certain other elements.</source>
          <target state="translated">Algunos elementos HTML, como &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;ol&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; y &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; tienen restricciones sobre qu&amp;eacute; elementos pueden aparecer dentro de ellos, y algunos elementos como &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt; y &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; solo pueden aparecen dentro de ciertos otros elementos.</target>
        </trans-unit>
        <trans-unit id="9c0790e8dcd7f3a0c69aa32f511de55c1f1ea0e6" translate="yes" xml:space="preserve">
          <source>Some advantages of this convention:</source>
          <target state="translated">Algunas ventajas de esta convención:</target>
        </trans-unit>
        <trans-unit id="2108424fbba417074fadf0d75a3e1edc693ebce6" translate="yes" xml:space="preserve">
          <source>Some argue that you&amp;rsquo;d need to learn an extra DSL (Domain-Specific Language) to be able to write templates - we believe this difference is superficial at best. First, JSX doesn&amp;rsquo;t mean the user doesn&amp;rsquo;t need to learn anything - it&amp;rsquo;s additional syntax on top of plain JavaScript, so it can be easy for someone familiar with JavaScript to learn, but saying it&amp;rsquo;s essentially free is misleading. Similarly, a template is just additional syntax on top of plain HTML and thus has very low learning cost for those who are already familiar with HTML. With the DSL we are also able to help the user get more done with less code (e.g. &lt;code&gt;v-on&lt;/code&gt; modifiers). The same task can involve a lot more code when using plain JSX or render functions.</source>
          <target state="translated">Algunos argumentan que necesitar&amp;iacute;a aprender un DSL (lenguaje espec&amp;iacute;fico de dominio) adicional para poder escribir plantillas; creemos que esta diferencia es superficial en el mejor de los casos. En primer lugar, JSX no significa que el usuario no necesite aprender nada: es una sintaxis adicional a JavaScript simple, por lo que puede ser f&amp;aacute;cil de aprender para alguien familiarizado con JavaScript, pero decir que es esencialmente gratis es enga&amp;ntilde;oso. De manera similar, una plantilla es solo una sintaxis adicional sobre HTML simple y, por lo tanto, tiene un costo de aprendizaje muy bajo para aquellos que ya est&amp;aacute;n familiarizados con HTML. Con el DSL tambi&amp;eacute;n podemos ayudar al usuario a hacer m&amp;aacute;s con menos c&amp;oacute;digo (por ejemplo &lt;code&gt;v-on&lt;/code&gt; modificadores v-on ). La misma tarea puede involucrar mucho m&amp;aacute;s c&amp;oacute;digo cuando se usa JSX simple o funciones de renderizado.</target>
        </trans-unit>
        <trans-unit id="a9ef7770ac385e4eae53d066a2f3c10a8b6c4ab6" translate="yes" xml:space="preserve">
          <source>Some directives can take an &amp;ldquo;argument&amp;rdquo;, denoted by a colon after the directive name. For example, the &lt;code&gt;v-bind&lt;/code&gt; directive is used to reactively update an HTML attribute:</source>
          <target state="translated">Algunas directivas pueden tomar un &quot;argumento&quot;, indicado por dos puntos despu&amp;eacute;s del nombre de la directiva. Por ejemplo, la directiva &lt;code&gt;v-bind&lt;/code&gt; se usa para actualizar de forma reactiva un atributo HTML:</target>
        </trans-unit>
        <trans-unit id="09428a807ec781f76bc254d725a9a4e0a2df7f8b" translate="yes" xml:space="preserve">
          <source>Some environments, such as Google Chrome Apps, enforce Content Security Policy (CSP), which prohibits the use of &lt;code&gt;new Function()&lt;/code&gt; for evaluating expressions. The full build depends on this feature to compile templates, so is unusable in these environments.</source>
          <target state="translated">Algunos entornos, como Google Chrome Apps, hacen cumplir la Pol&amp;iacute;tica de seguridad de contenido (CSP), que proh&amp;iacute;be el uso de la &lt;code&gt;new Function()&lt;/code&gt; para evaluar expresiones. La compilaci&amp;oacute;n completa depende de esta funci&amp;oacute;n para compilar plantillas, por lo que no se puede utilizar en estos entornos.</target>
        </trans-unit>
        <trans-unit id="5a2e23d7e711dac515b3913d004594ddb71e0888" translate="yes" xml:space="preserve">
          <source>Some features of Vue exist to accommodate rare edge cases or smoother migrations from a legacy code base. When overused however, they can make your code more difficult to maintain or even become a source of bugs. These rules shine a light on potentially risky features, describing when and why they should be avoided.</source>
          <target state="translated">Algunas características de Vue existen para acomodar casos de borde raros o migraciones más suaves de una base de código heredado.Sin embargo,cuando se usan en exceso,pueden hacer que su código sea más difícil de mantener o incluso convertirse en una fuente de errores.Estas reglas arrojan luz sobre características potencialmente riesgosas,describiendo cuándo y por qué deben ser evitadas.</target>
        </trans-unit>
        <trans-unit id="d10fd1239637017ec222f508352aa84bee00680a" translate="yes" xml:space="preserve">
          <source>Some of Vue&amp;rsquo;s syntax will look very similar to AngularJS (e.g. &lt;code&gt;v-if&lt;/code&gt; vs &lt;code&gt;ng-if&lt;/code&gt;). This is because there were a lot of things that AngularJS got right and these were an inspiration for Vue very early in its development. There are also many pains that come with AngularJS however, where Vue has attempted to offer a significant improvement.</source>
          <target state="translated">Parte de la sintaxis de Vue se ver&amp;aacute; muy similar a AngularJS (por ejemplo, &lt;code&gt;v-if&lt;/code&gt; vs &lt;code&gt;ng-if&lt;/code&gt; ). Esto se debe a que hubo muchas cosas en las que AngularJS hizo bien y fueron una inspiraci&amp;oacute;n para Vue muy temprano en su desarrollo. Sin embargo, tambi&amp;eacute;n hay muchos problemas que vienen con AngularJS, donde Vue ha intentado ofrecer una mejora significativa.</target>
        </trans-unit>
        <trans-unit id="ba632b521cfadde631ed92ffd03194fe0b0a9806" translate="yes" xml:space="preserve">
          <source>Some of the current hooks have different behavior and there are also a couple new hooks.</source>
          <target state="translated">Algunos de los ganchos actuales tienen un comportamiento diferente y también hay un par de ganchos nuevos.</target>
        </trans-unit>
        <trans-unit id="823d42c9ef6472009b44bd254d2588f2ed0ae4c8" translate="yes" xml:space="preserve">
          <source>Some of the most notable differences include:</source>
          <target state="translated">Algunas de las diferencias más notables incluyen:</target>
        </trans-unit>
        <trans-unit id="85976567c84aab5c4b5906f9117b4275cd11d741" translate="yes" xml:space="preserve">
          <source>Some of the sections below may also be slightly outdated due to recent updates in React 16+, and we are planning to work with the React community to revamp this section in the near future.</source>
          <target state="translated">Algunas de las secciones que figuran a continuación también pueden estar ligeramente desactualizadas debido a las recientes actualizaciones de React 16+,y estamos planeando trabajar con la comunidad de React para renovar esta sección en un futuro próximo.</target>
        </trans-unit>
        <trans-unit id="e66b9d4602dcda92a8811e8379102ad854fa4037" translate="yes" xml:space="preserve">
          <source>Some plugins provided by Vue.js official plugins such as &lt;code&gt;vue-router&lt;/code&gt; automatically calls &lt;code&gt;Vue.use()&lt;/code&gt; if &lt;code&gt;Vue&lt;/code&gt; is available as a global variable. However in a module environment such as CommonJS, you always need to call &lt;code&gt;Vue.use()&lt;/code&gt; explicitly:</source>
          <target state="translated">Algunos complementos proporcionados por los complementos oficiales de Vue.js, como &lt;code&gt;vue-router&lt;/code&gt; , llaman autom&amp;aacute;ticamente a &lt;code&gt;Vue.use()&lt;/code&gt; si &lt;code&gt;Vue&lt;/code&gt; est&amp;aacute; disponible como variable global. Sin embargo, en un entorno de m&amp;oacute;dulo como CommonJS, siempre debe llamar a &lt;code&gt;Vue.use()&lt;/code&gt; expl&amp;iacute;citamente:</target>
        </trans-unit>
        <trans-unit id="9fe62eac7aa92f9e248fd4f6cf8a8c9817319b5d" translate="yes" xml:space="preserve">
          <source>Some users have enjoyed using two-way filters with &lt;code&gt;v-model&lt;/code&gt; to create interesting inputs with very little code. While &lt;em&gt;seemingly&lt;/em&gt; simple however, two-way filters can also hide a great deal of complexity - and even encourage poor UX by delaying state updates. Instead, components wrapping an input are recommended as a more explicit and feature-rich way of creating custom inputs.</source>
          <target state="translated">Algunos usuarios han disfrutado usando filtros bidireccionales con &lt;code&gt;v-model&lt;/code&gt; para crear entradas interesantes con muy poco c&amp;oacute;digo. Sin embargo, aunque &lt;em&gt;aparentemente&lt;/em&gt; simple, los filtros bidireccionales tambi&amp;eacute;n pueden ocultar una gran cantidad de complejidad e incluso fomentar una UX deficiente al retrasar las actualizaciones de estado. En cambio, los componentes que envuelven una entrada se recomiendan como una forma m&amp;aacute;s expl&amp;iacute;cita y rica en funciones de crear entradas personalizadas.</target>
        </trans-unit>
        <trans-unit id="a20659b05e332a0ae32621debfebacc5d1ababa5" translate="yes" xml:space="preserve">
          <source>Sometimes this works great, like when transitioning items are absolutely positioned on top of each other:</source>
          <target state="translated">A veces esto funciona muy bien,como cuando los elementos de transición se colocan absolutamente uno encima del otro:</target>
        </trans-unit>
        <trans-unit id="f26fd8bf6b50010b5da928fa27ec1a70c263cd9c" translate="yes" xml:space="preserve">
          <source>Sometimes we also need to access the original DOM event in an inline statement handler. You can pass it into a method using the special &lt;code&gt;$event&lt;/code&gt; variable:</source>
          <target state="translated">A veces tambi&amp;eacute;n necesitamos acceder al evento DOM original en un controlador de declaraciones en l&amp;iacute;nea. Puede pasarlo a un m&amp;eacute;todo usando la variable especial &lt;code&gt;$event&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a58007ff3d542a5e64e8ab0473747490736edba5" translate="yes" xml:space="preserve">
          <source>Sometimes we want to display a filtered or sorted version of an array without actually mutating or resetting the original data. In this case, you can create a computed property that returns the filtered or sorted array.</source>
          <target state="translated">A veces queremos mostrar una versión filtrada u ordenada de una matriz sin realmente mutar o restablecer los datos originales.En este caso,se puede crear una propiedad computarizada que devuelva la matriz filtrada u ordenada.</target>
        </trans-unit>
        <trans-unit id="bb4776e0f84b8cab0978edcc2a16ccf37eb32d43" translate="yes" xml:space="preserve">
          <source>Sometimes you may want to assign a number of new properties to an existing object, for example using &lt;code&gt;Object.assign()&lt;/code&gt; or &lt;code&gt;_.extend()&lt;/code&gt;. In such cases, you should create a fresh object with properties from both objects. So instead of:</source>
          <target state="translated">A veces, es posible que desee asignar varias propiedades nuevas a un objeto existente, por ejemplo, utilizando &lt;code&gt;Object.assign()&lt;/code&gt; o &lt;code&gt;_.extend()&lt;/code&gt; . En tales casos, debe crear un objeto nuevo con propiedades de ambos objetos. Entonces en lugar de:</target>
        </trans-unit>
        <trans-unit id="4216179a7f142347ead5e8b4c8a44ddd1938267a" translate="yes" xml:space="preserve">
          <source>Sometimes you may want to assign a number of properties to an existing object, for example using &lt;code&gt;Object.assign()&lt;/code&gt; or &lt;code&gt;_.extend()&lt;/code&gt;. However, new properties added to the object will not trigger changes. In such cases, create a fresh object with properties from both the original object and the mixin object:</source>
          <target state="translated">A veces, es posible que desee asignar varias propiedades a un objeto existente, por ejemplo, utilizando &lt;code&gt;Object.assign()&lt;/code&gt; o &lt;code&gt;_.extend()&lt;/code&gt; . Sin embargo, las nuevas propiedades agregadas al objeto no desencadenar&amp;aacute;n cambios. En tales casos, cree un objeto nuevo con propiedades tanto del objeto original como del objeto mixin:</target>
        </trans-unit>
        <trans-unit id="4a3e5c479936fa0c0c3ae63c92af5bdeccbe0976" translate="yes" xml:space="preserve">
          <source>Sometimes, it&amp;rsquo;s useful for slot content to have access to data only available in the child component. For example, imagine a &lt;code&gt;&amp;lt;current-user&amp;gt;&lt;/code&gt; component with the following template:</source>
          <target state="translated">A veces, es &amp;uacute;til que el contenido del espacio tenga acceso a los datos que solo est&amp;aacute;n disponibles en el componente secundario. Por ejemplo, imagine un componente &lt;code&gt;&amp;lt;current-user&amp;gt;&lt;/code&gt; con la siguiente plantilla:</target>
        </trans-unit>
        <trans-unit id="d2dd5e9a7fd5d98bf25e0a4d4fb18f9f4c3db2f1" translate="yes" xml:space="preserve">
          <source>Sometimes, it&amp;rsquo;s useful to dynamically switch between components, like in a tabbed interface:</source>
          <target state="translated">A veces, es &amp;uacute;til cambiar din&amp;aacute;micamente entre componentes, como en una interfaz con pesta&amp;ntilde;as:</target>
        </trans-unit>
        <trans-unit id="878866be830f3d4c0492c7b15ce7d3313f921fc8" translate="yes" xml:space="preserve">
          <source>Soup &lt;em&gt;of the&lt;/em&gt; day</source>
          <target state="translated">Sopa &lt;em&gt;del&lt;/em&gt; dia</target>
        </trans-unit>
        <trans-unit id="9898b37c34a88e00f23e82b5e3dc9a1701903a0c" translate="yes" xml:space="preserve">
          <source>Special Attributes</source>
          <target state="translated">Atributos especiales</target>
        </trans-unit>
        <trans-unit id="c1844df643c3c6b29d9ebd395e5456144c913b68" translate="yes" xml:space="preserve">
          <source>Special Attributes - ref</source>
          <target state="translated">Atributos especiales-ref</target>
        </trans-unit>
        <trans-unit id="7f375124a7e84608fdea56b183bf085ef84dd0dd" translate="yes" xml:space="preserve">
          <source>Specifies a default value for the prop. If the prop is not passed, this value will be used instead. Object or array defaults must be returned from a factory function.</source>
          <target state="translated">Especifica un valor por defecto para el puntal.Si no se pasa la hélice,se usará este valor en su lugar.Los valores predeterminados de los objetos o arreglos deben ser devueltos desde una función de fábrica.</target>
        </trans-unit>
        <trans-unit id="3d419b352796d39146919ef5966306201da0baac" translate="yes" xml:space="preserve">
          <source>Specify the parent instance for the instance to be created. Establishes a parent-child relationship between the two. The parent will be accessible as &lt;code&gt;this.$parent&lt;/code&gt; for the child, and the child will be pushed into the parent&amp;rsquo;s &lt;code&gt;$children&lt;/code&gt; array.</source>
          <target state="translated">Especifique la instancia principal para la instancia que se crear&amp;aacute;. Establece una relaci&amp;oacute;n padre-hijo entre los dos. El padre ser&amp;aacute; accesible como &lt;code&gt;this.$parent&lt;/code&gt; para el hijo, y el hijo se insertar&amp;aacute; en la matriz &lt;code&gt;$children&lt;/code&gt; del padre .</target>
        </trans-unit>
        <trans-unit id="e4de7be6dcaca74a1df3b6f74eed72c7caf49130" translate="yes" xml:space="preserve">
          <source>Staggering List Transitions</source>
          <target state="translated">Transiciones de la lista escalonada</target>
        </trans-unit>
        <trans-unit id="5ba91e4b27bd154b6feecd545db4023c8e7c12d0" translate="yes" xml:space="preserve">
          <source>Start by running the &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;migration helper&lt;/a&gt; on a current project. We&amp;rsquo;ve carefully minified and compressed a senior Vue dev into a simple command line interface. Whenever they recognize an obsolete feature, they&amp;rsquo;ll let you know, offer suggestions, and provide links to more info.</source>
          <target state="translated">Empiece por ejecutar el &lt;a href=&quot;https://github.com/vuejs/vue-migration-helper&quot;&gt;asistente de migraci&amp;oacute;n&lt;/a&gt; en un proyecto actual. Hemos minimizado y comprimido cuidadosamente un desarrollador senior de Vue en una interfaz de l&amp;iacute;nea de comandos simple. Siempre que reconozcan una funci&amp;oacute;n obsoleta, le informar&amp;aacute;n, ofrecer&amp;aacute;n sugerencias y proporcionar&amp;aacute;n enlaces a m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="5fcf8af955dfbcfec984375c6e8f6a528e65233d" translate="yes" xml:space="preserve">
          <source>Starting in 2.3.0+ you can provide an array of multiple (prefixed) values to a style property, for example:</source>
          <target state="translated">A partir de la versión 2.3.0+se puede proporcionar un conjunto de valores múltiples (prefijados)a una propiedad de estilo,por ejemplo:</target>
        </trans-unit>
        <trans-unit id="9ba53e05f135de31a97be4f79621e7c2bfae116b" translate="yes" xml:space="preserve">
          <source>Starting in 2.4.0+, &lt;code&gt;v-on&lt;/code&gt; also supports binding to an object of event/listener pairs without an argument. Note when using the object syntax, it does not support any modifiers.</source>
          <target state="translated">A partir de 2.4.0+, &lt;code&gt;v-on&lt;/code&gt; tambi&amp;eacute;n admite la vinculaci&amp;oacute;n a un objeto de pares de evento / escucha sin un argumento. Tenga en cuenta que cuando utilice la sintaxis de objeto, no admite ning&amp;uacute;n modificador.</target>
        </trans-unit>
        <trans-unit id="9b9230ebf8a27183774b5eb88b79650092ee23d2" translate="yes" xml:space="preserve">
          <source>Starting in version 2.6.0, it is also possible to use a JavaScript expression in a directive argument by wrapping it with square brackets:</source>
          <target state="translated">A partir de la versión 2.6.0,también es posible utilizar una expresión de JavaScript en un argumento de directiva envolviéndolo con corchetes:</target>
        </trans-unit>
        <trans-unit id="bfa146787ba4b5ec0af7e28c9b9db98dcdf2cd1c" translate="yes" xml:space="preserve">
          <source>State Management</source>
          <target state="translated">Gestión del Estado</target>
        </trans-unit>
        <trans-unit id="d5d64221ddf91f88df67cce91813f4262eb7edaf" translate="yes" xml:space="preserve">
          <source>State Transitions</source>
          <target state="translated">Transiciones de Estado</target>
        </trans-unit>
        <trans-unit id="a872ca8fe22c7e62b5337472cd220dc9385362c8" translate="yes" xml:space="preserve">
          <source>Stop listening for an event with &lt;code&gt;$off(eventName, eventHandler)&lt;/code&gt;</source>
          <target state="translated">Deje de escuchar un evento con &lt;code&gt;$off(eventName, eventHandler)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a59e5fba28ea5c4503821b338479233b19afe716" translate="yes" xml:space="preserve">
          <source>Store&amp;rsquo;s Event Emitter &lt;sup&gt;removed&lt;/sup&gt;</source>
          <target state="translated">Emisor de eventos de la tienda &lt;sup&gt;eliminado&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="3df63b7acb0522da685dad5fe84b81fdd7b25264" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="translated">String</target>
        </trans-unit>
        <trans-unit id="91315c1968e95b4caef2bb0299209f84b45e1fa3" translate="yes" xml:space="preserve">
          <source>String templates (e.g. &lt;code&gt;template: '...'&lt;/code&gt;)</source>
          <target state="translated">Plantillas de cadenas (por ejemplo, &lt;code&gt;template: '...'&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="74b4f2ed89813f9a73f7270d61c097ff9c059dd6" translate="yes" xml:space="preserve">
          <source>Style Guide</source>
          <target state="translated">Guía de estilo</target>
        </trans-unit>
        <trans-unit id="93b9066aa73ddae63c26874719afa6da8fe21b7f" translate="yes" xml:space="preserve">
          <source>Style Guide: Priority A: Essential</source>
          <target state="translated">Guía de estilo:Prioridad A:Esencial</target>
        </trans-unit>
        <trans-unit id="43212530e7b38b61ce475ee08dd6944866d5239c" translate="yes" xml:space="preserve">
          <source>Style Guide: Priority B: Strongly Recommended</source>
          <target state="translated">Guía de estilo:Prioridad B:Fuertemente recomendada</target>
        </trans-unit>
        <trans-unit id="dc97fc3044903277305bdcda1967fb4d1dab822e" translate="yes" xml:space="preserve">
          <source>Style Guide: Priority C: Recommended</source>
          <target state="translated">Guía de estilo:Prioridad C:Recomendada</target>
        </trans-unit>
        <trans-unit id="b9a479a71d55ce0478bf03634c2c6dce93bce7d7" translate="yes" xml:space="preserve">
          <source>Style Guide: Priority D: Use with Caution</source>
          <target state="translated">Guía de estilo:Prioridad D:Usar con precaución</target>
        </trans-unit>
        <trans-unit id="d999535d9e96f490d6db66310b5ab700b8118ee7" translate="yes" xml:space="preserve">
          <source>Style Guide: Rule Categories</source>
          <target state="translated">Guía de estilo:Categorías de reglas</target>
        </trans-unit>
        <trans-unit id="fbbf610d0cedad761fd69b3fc9625e259e3102c5" translate="yes" xml:space="preserve">
          <source>Suppress all Vue logs and warnings.</source>
          <target state="translated">Suprima todos los registros y advertencias de Vue.</target>
        </trans-unit>
        <trans-unit id="3f84ef531f9db996694ad09a8fdddbca1440577e" translate="yes" xml:space="preserve">
          <source>Symbol</source>
          <target state="translated">Symbol</target>
        </trans-unit>
        <trans-unit id="ed4b8354b13fc6485ba3014a73af2e474df2ab5c" translate="yes" xml:space="preserve">
          <source>System Modifier Keys</source>
          <target state="translated">Llaves modificadoras del sistema</target>
        </trans-unit>
        <trans-unit id="d3c9825399d84e5c262586eb382db07595391d25" translate="yes" xml:space="preserve">
          <source>Template Compilation</source>
          <target state="translated">Compilación de plantillas</target>
        </trans-unit>
        <trans-unit id="efb3147068725b40c3436e7283942bba6c112bbf" translate="yes" xml:space="preserve">
          <source>Template Syntax</source>
          <target state="translated">Sintaxis de la plantilla</target>
        </trans-unit>
        <trans-unit id="a60e21f3a907038b2e4d24850447a7990f71ed0d" translate="yes" xml:space="preserve">
          <source>Template expressions are sandboxed and only have access to a &lt;a href=&quot;https://github.com/vuejs/vue/blob/v2.6.10/src/core/instance/proxy.js#L9&quot;&gt;whitelist of globals&lt;/a&gt; such as &lt;code&gt;Math&lt;/code&gt; and &lt;code&gt;Date&lt;/code&gt;. You should not attempt to access user defined globals in template expressions.</source>
          <target state="translated">Las expresiones de plantilla est&amp;aacute;n en un espacio aislado y solo tienen acceso a una &lt;a href=&quot;https://github.com/vuejs/vue/blob/v2.6.10/src/core/instance/proxy.js#L9&quot;&gt;lista blanca de globales&lt;/a&gt; como &lt;code&gt;Math&lt;/code&gt; y &lt;code&gt;Date&lt;/code&gt; . No debe intentar acceder a globales definidos por el usuario en expresiones de plantilla.</target>
        </trans-unit>
        <trans-unit id="f25b700ed9f092123a43acb205a6869342cf9dd6" translate="yes" xml:space="preserve">
          <source>Templates</source>
          <target state="translated">Templates</target>
        </trans-unit>
        <trans-unit id="a55a275aa676930d9258569485d5b38eb1196630" translate="yes" xml:space="preserve">
          <source>Terms</source>
          <target state="translated">Terms</target>
        </trans-unit>
        <trans-unit id="c3328c39b0e29f78e9ff45db674248b1d245887d" translate="yes" xml:space="preserve">
          <source>Text</source>
          <target state="translated">Text</target>
        </trans-unit>
        <trans-unit id="03aaa3887a5a2deee792941da96ae7dda7d74089" translate="yes" xml:space="preserve">
          <source>Thanks to Vue&amp;rsquo;s Reactivity system, it always knows when to update (if you use it correctly). There are edge cases, however, when you might want to force an update, despite the fact that no reactive data has changed. Then there are other cases when you might want to prevent unnecessary updates.</source>
          <target state="translated">Gracias al sistema de reactividad de Vue, siempre sabe cu&amp;aacute;ndo actualizar (si lo usa correctamente). Sin embargo, existen casos extremos en los que es posible que desee forzar una actualizaci&amp;oacute;n, a pesar de que no se han modificado los datos reactivos. Luego, hay otros casos en los que es posible que desee evitar actualizaciones innecesarias.</target>
        </trans-unit>
        <trans-unit id="b5627556ef42d923efe566603e16cd6d339c54b6" translate="yes" xml:space="preserve">
          <source>Thanks to the &lt;code&gt;v-on:enlarge-text=&quot;postFontSize += 0.1&quot;&lt;/code&gt; listener, the parent will receive the event and update &lt;code&gt;postFontSize&lt;/code&gt; value.</source>
          <target state="translated">Gracias al oyente &lt;code&gt;v-on:enlarge-text=&quot;postFontSize += 0.1&quot;&lt;/code&gt; , el padre recibir&amp;aacute; el evento y actualizar&amp;aacute; el valor de &lt;code&gt;postFontSize&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="36e5dbb5155a7f2f18ff2f7f92eeacd1bc83b650" translate="yes" xml:space="preserve">
          <source>That means the value of &lt;code&gt;v-slot&lt;/code&gt; can actually accept any valid JavaScript expression that can appear in the argument position of a function definition. So in supported environments (&lt;a href=&quot;single-file-components&quot;&gt;single-file components&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment#Browser_compatibility&quot;&gt;modern browsers&lt;/a&gt;), you can also use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment#Object_destructuring&quot;&gt;ES2015 destructuring&lt;/a&gt; to pull out specific slot props, like so:</source>
          <target state="translated">Eso significa que el valor de &lt;code&gt;v-slot&lt;/code&gt; puede aceptar cualquier expresi&amp;oacute;n JavaScript v&amp;aacute;lida que pueda aparecer en la posici&amp;oacute;n del argumento de una definici&amp;oacute;n de funci&amp;oacute;n. Por lo tanto, en entornos compatibles ( &lt;a href=&quot;single-file-components&quot;&gt;componentes de un solo archivo&lt;/a&gt; o &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment#Browser_compatibility&quot;&gt;navegadores modernos&lt;/a&gt; ), tambi&amp;eacute;n puede usar la &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment#Object_destructuring&quot;&gt;desestructuraci&amp;oacute;n de ES2015&lt;/a&gt; para extraer accesorios de ranura espec&amp;iacute;ficos, as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="bcb7688f15ef595e1970dc731883ce107eed33d5" translate="yes" xml:space="preserve">
          <source>That means this element:</source>
          <target state="translated">Eso significa este elemento:</target>
        </trans-unit>
        <trans-unit id="e26ac9d99d2de3a31a44d33d135f52e40dec965b" translate="yes" xml:space="preserve">
          <source>That said, it would probably make a better comparison between Vue core and Ember&amp;rsquo;s &lt;a href=&quot;https://guides.emberjs.com/v2.10.0/templates/handlebars-basics/&quot;&gt;templating&lt;/a&gt; and &lt;a href=&quot;https://guides.emberjs.com/v2.10.0/object-model/&quot;&gt;object model&lt;/a&gt; layers:</source>
          <target state="translated">Dicho esto, probablemente har&amp;iacute;a una mejor comparaci&amp;oacute;n entre el n&amp;uacute;cleo de Vue y las capas de &lt;a href=&quot;https://guides.emberjs.com/v2.10.0/object-model/&quot;&gt;modelo de objetos&lt;/a&gt; y &lt;a href=&quot;https://guides.emberjs.com/v2.10.0/templates/handlebars-basics/&quot;&gt;plantillas&lt;/a&gt; de Ember :</target>
        </trans-unit>
        <trans-unit id="fd91ee6e59ac928406a857815fec4a8fd6adac41" translate="yes" xml:space="preserve">
          <source>That slot has access to the same instance properties (i.e. the same &amp;ldquo;scope&amp;rdquo;) as the rest of the template. The slot does &lt;strong&gt;not&lt;/strong&gt; have access to &lt;code&gt;&amp;lt;navigation-link&amp;gt;&lt;/code&gt;&amp;lsquo;s scope. For example, trying to access &lt;code&gt;url&lt;/code&gt; would not work:</source>
          <target state="translated">Ese espacio tiene acceso a las mismas propiedades de la instancia (es decir, el mismo &quot;alcance&quot;) que el resto de la plantilla. La ranura &lt;strong&gt;no&lt;/strong&gt; tiene acceso al alcance de &lt;code&gt;&amp;lt;navigation-link&amp;gt;&lt;/code&gt; . Por ejemplo, intentar acceder a la &lt;code&gt;url&lt;/code&gt; no funcionar&amp;iacute;a:</target>
        </trans-unit>
        <trans-unit id="459dd83f2362d8a07c853704c9fdaa721e9d7d51" translate="yes" xml:space="preserve">
          <source>That template doesn&amp;rsquo;t feel great. It&amp;rsquo;s not only verbose, but we&amp;rsquo;re duplicating &lt;code&gt;&amp;lt;slot&amp;gt;&amp;lt;/slot&amp;gt;&lt;/code&gt; for every heading level and will have to do the same when we add the anchor element.</source>
          <target state="translated">Esa plantilla no se siente muy bien. No solo es detallado, sino que estamos duplicando &lt;code&gt;&amp;lt;slot&amp;gt;&amp;lt;/slot&amp;gt;&lt;/code&gt; para cada nivel de encabezado y tendremos que hacer lo mismo cuando agreguemos el elemento de anclaje.</target>
        </trans-unit>
        <trans-unit id="f0e76918c986bcb84adf08fee89b468d3a1fda00" translate="yes" xml:space="preserve">
          <source>That won&amp;rsquo;t work, however, because only the &lt;code&gt;&amp;lt;current-user&amp;gt;&lt;/code&gt; component has access to the &lt;code&gt;user&lt;/code&gt; and the content we&amp;rsquo;re providing is rendered in the parent.</source>
          <target state="translated">Sin embargo, eso no funcionar&amp;aacute;, porque solo el componente &lt;code&gt;&amp;lt;current-user&amp;gt;&lt;/code&gt; tiene acceso al &lt;code&gt;user&lt;/code&gt; y el contenido que proporcionamos se representa en el padre.</target>
        </trans-unit>
        <trans-unit id="f7e6eaf815a0b389b506fd9203ee98688ac385cc" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s all you need to know about DOM template parsing caveats for now &amp;ndash; and actually, the end of Vue&amp;rsquo;s &lt;em&gt;Essentials&lt;/em&gt;. Congratulations! There&amp;rsquo;s still more to learn, but first, we recommend taking a break to play with Vue yourself and build something fun.</source>
          <target state="translated">Eso es todo lo que necesita saber sobre las advertencias del an&amp;aacute;lisis de plantillas DOM por ahora y, de hecho, el final de Vue's &lt;em&gt;Essentials&lt;/em&gt; . &amp;iexcl;Felicidades! A&amp;uacute;n hay m&amp;aacute;s que aprender, pero primero, recomendamos tomar un descanso para jugar con Vue y construir algo divertido.</target>
        </trans-unit>
        <trans-unit id="e65f913a2b8930db25e11b615901938e35677612" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s all you need to know about custom component events for now, but once you&amp;rsquo;ve finished reading this page and feel comfortable with its content, we recommend coming back later to read the full guide on &lt;a href=&quot;components-custom-events&quot;&gt;Custom Events&lt;/a&gt;.</source>
          <target state="translated">Eso es todo lo que necesita saber sobre los eventos de componentes personalizados por ahora, pero una vez que haya terminado de leer esta p&amp;aacute;gina y se sienta c&amp;oacute;modo con su contenido, le recomendamos que vuelva m&amp;aacute;s tarde para leer la gu&amp;iacute;a completa sobre &lt;a href=&quot;components-custom-events&quot;&gt;eventos personalizados&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="814dc84544fcf8f9ba3af47bc369c70717b8fdfa" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s all you need to know about dynamic components for now, but once you&amp;rsquo;ve finished reading this page and feel comfortable with its content, we recommend coming back later to read the full guide on &lt;a href=&quot;components-dynamic-async&quot;&gt;Dynamic &amp;amp; Async Components&lt;/a&gt;.</source>
          <target state="translated">Eso es todo lo que necesita saber sobre los componentes din&amp;aacute;micos por ahora, pero una vez que haya terminado de leer esta p&amp;aacute;gina y se sienta c&amp;oacute;modo con su contenido, le recomendamos que vuelva m&amp;aacute;s tarde para leer la gu&amp;iacute;a completa sobre &lt;a href=&quot;components-dynamic-async&quot;&gt;componentes din&amp;aacute;micos y as&amp;iacute;ncronos&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1370785d9557daacd2793450c22d6061fa0adbc6" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s all you need to know about props for now, but once you&amp;rsquo;ve finished reading this page and feel comfortable with its content, we recommend coming back later to read the full guide on &lt;a href=&quot;components-props&quot;&gt;Props&lt;/a&gt;.</source>
          <target state="translated">Eso es todo lo que necesita saber sobre los accesorios por ahora, pero una vez que haya terminado de leer esta p&amp;aacute;gina y se sienta c&amp;oacute;modo con su contenido, le recomendamos que vuelva m&amp;aacute;s tarde para leer la gu&amp;iacute;a completa sobre &lt;a href=&quot;components-props&quot;&gt;accesorios&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1e701db7e6d05f9288626f8d97a85fc554f9593e" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s all you need to know about registration for now, but once you&amp;rsquo;ve finished reading this page and feel comfortable with its content, we recommend coming back later to read the full guide on &lt;a href=&quot;components-registration&quot;&gt;Component Registration&lt;/a&gt;.</source>
          <target state="translated">Eso es todo lo que necesita saber sobre el registro por ahora, pero una vez que haya terminado de leer esta p&amp;aacute;gina y se sienta c&amp;oacute;modo con su contenido, le recomendamos que vuelva m&amp;aacute;s tarde para leer la gu&amp;iacute;a completa sobre el &lt;a href=&quot;components-registration&quot;&gt;registro de componentes&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8e7ac0de9bc7b2393fad83ed8e57aa35094e7cc2" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s all you need to know about slots for now, but once you&amp;rsquo;ve finished reading this page and feel comfortable with its content, we recommend coming back later to read the full guide on &lt;a href=&quot;components-slots&quot;&gt;Slots&lt;/a&gt;.</source>
          <target state="translated">Eso es todo lo que necesita saber sobre las tragamonedas por ahora, pero una vez que haya terminado de leer esta p&amp;aacute;gina y se sienta c&amp;oacute;modo con su contenido, le recomendamos que vuelva m&amp;aacute;s tarde para leer la gu&amp;iacute;a completa sobre &lt;a href=&quot;components-slots&quot;&gt;tragamonedas&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6f39b1bdd26be7312e776a774c103e8b83e7cb1a" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s why for any complex logic, you should use a &lt;strong&gt;computed property&lt;/strong&gt;.</source>
          <target state="translated">Por eso, para cualquier l&amp;oacute;gica compleja, debe utilizar una &lt;strong&gt;propiedad calculada&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="3b16487797e90834fa5c92964e14dabbe10606c8" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s why instead, we recommend emitting events in the pattern of &lt;code&gt;update:myPropName&lt;/code&gt;. For example, in a hypothetical component with a &lt;code&gt;title&lt;/code&gt; prop, we could communicate the intent of assigning a new value with:</source>
          <target state="translated">Por eso, en cambio, recomendamos emitir eventos en el patr&amp;oacute;n de &lt;code&gt;update:myPropName&lt;/code&gt; . Por ejemplo, en un componente hipot&amp;eacute;tico con un accesorio de &lt;code&gt;title&lt;/code&gt; , podr&amp;iacute;amos comunicar la intenci&amp;oacute;n de asignar un nuevo valor con:</target>
        </trans-unit>
        <trans-unit id="996c0c7a918cb9833eb237973fce54baee6b3199" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s why there&amp;rsquo;s a &lt;a href=&quot;https://github.com/vuejs/jsx&quot;&gt;Babel plugin&lt;/a&gt; to use JSX with Vue, getting us back to a syntax that&amp;rsquo;s closer to templates:</source>
          <target state="translated">Es por eso que hay un &lt;a href=&quot;https://github.com/vuejs/jsx&quot;&gt;complemento de Babel&lt;/a&gt; para usar JSX con Vue, volviendo a una sintaxis m&amp;aacute;s cercana a las plantillas:</target>
        </trans-unit>
        <trans-unit id="ad7c55b719b44c49b49edeaa4e2789ec22bd2ca2" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s why we offer a full system for rapid Vue.js development. &lt;a href=&quot;https://github.com/vuejs/vue-cli&quot;&gt;Vue CLI&lt;/a&gt; aims to be the standard tooling baseline for the Vue ecosystem. It ensures the various build tools work smoothly together with sensible defaults so you can focus on writing your app instead of spending hours wrangling with configurations. At the same time, it still offers the flexibility to tweak the configuration of each tool to specific needs.</source>
          <target state="translated">Es por eso que ofrecemos un sistema completo para el desarrollo r&amp;aacute;pido de Vue.js. &lt;a href=&quot;https://github.com/vuejs/vue-cli&quot;&gt;Vue CLI&lt;/a&gt; tiene como objetivo ser la l&amp;iacute;nea de base de herramientas est&amp;aacute;ndar para el ecosistema Vue. Garantiza que las diversas herramientas de compilaci&amp;oacute;n funcionen sin problemas junto con valores predeterminados razonables para que pueda concentrarse en escribir su aplicaci&amp;oacute;n en lugar de pasar horas luchando con configuraciones. Al mismo tiempo, todav&amp;iacute;a ofrece la flexibilidad de ajustar la configuraci&amp;oacute;n de cada herramienta a necesidades espec&amp;iacute;ficas.</target>
        </trans-unit>
        <trans-unit id="e8054cccceec827f8cba34b7a1b6bd02a65cd67d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;guide/installation&quot;&gt;Installation&lt;/a&gt; page provides more options of installing Vue. Note: We &lt;strong&gt;do not&lt;/strong&gt; recommend that beginners start with &lt;code&gt;vue-cli&lt;/code&gt;, especially if you are not yet familiar with Node.js-based build tools.</source>
          <target state="translated">La p&amp;aacute;gina de &lt;a href=&quot;guide/installation&quot;&gt;instalaci&amp;oacute;n&lt;/a&gt; proporciona m&amp;aacute;s opciones para instalar Vue. Nota: Nosotros &lt;strong&gt;no&lt;/strong&gt; recomendamos que los principiantes comienzan con &lt;code&gt;vue-cli&lt;/code&gt; , especialmente si usted todav&amp;iacute;a no est&amp;aacute; familiarizado con las herramientas de construcci&amp;oacute;n basadas en Node.js.</target>
        </trans-unit>
        <trans-unit id="a5ab4cb7708169e37819b6bac8b1dd32c12097a8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.npmjs.com/package/pluralize&quot;&gt;pluralize&lt;/a&gt; package on NPM serves this purpose nicely, but if you only want to pluralize a specific word or want to have special output for cases like &lt;code&gt;0&lt;/code&gt;, then you can also easily define your own pluralize functions. For example:</source>
          <target state="translated">El paquete de &lt;a href=&quot;https://www.npmjs.com/package/pluralize&quot;&gt;pluralizar&lt;/a&gt; en NPM sirve muy bien para este prop&amp;oacute;sito, pero si solo desea pluralizar una palabra espec&amp;iacute;fica o desea tener una salida especial para casos como &lt;code&gt;0&lt;/code&gt; , entonces tambi&amp;eacute;n puede definir f&amp;aacute;cilmente sus propias funciones de pluralizaci&amp;oacute;n. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="05878157178d05a4e01a1c89173d306a9458b9ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$route&lt;/code&gt; property is now reactive, so you can use a watcher to react to route changes, like this:</source>
          <target state="translated">La propiedad &lt;code&gt;$route&lt;/code&gt; ahora es reactiva, por lo que puede usar un observador para reaccionar a los cambios de ruta, como este:</target>
        </trans-unit>
        <trans-unit id="26e5d2730ae73e0e0de2df953cf2ee3a5fad3d02" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; will be the actual link (and will get the correct href), but the active class will be applied to the outer &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">El &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; ser&amp;aacute; el enlace real (y obtendr&amp;aacute; el href correcto), pero la clase activa se aplicar&amp;aacute; al &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; externo .</target>
        </trans-unit>
        <trans-unit id="a1c768384d9ec752c708894881ada4881202a8fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; will not be visible until the compilation is done.</source>
          <target state="translated">El &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; no ser&amp;aacute; visible hasta que se complete la compilaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="6726c886cd7d1313872ea34b72b56e9373d396cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;google-map&amp;gt;&lt;/code&gt; component might define a &lt;code&gt;map&lt;/code&gt; property that all subcomponents need access to. In this case &lt;code&gt;&amp;lt;google-map-markers&amp;gt;&lt;/code&gt; might want to access that map with something like &lt;code&gt;this.$parent.getMap&lt;/code&gt;, in order to add a set of markers to it. You can see this pattern &lt;a href=&quot;https://jsfiddle.net/chrisvfritz/ttzutdxh/&quot;&gt;in action here&lt;/a&gt;.</source>
          <target state="translated">El componente &lt;code&gt;&amp;lt;google-map&amp;gt;&lt;/code&gt; podr&amp;iacute;a definir una propiedad de &lt;code&gt;map&lt;/code&gt; a a la que todos los subcomponentes necesitan acceder. En este caso, es posible que &lt;code&gt;&amp;lt;google-map-markers&amp;gt;&lt;/code&gt; desee acceder a ese mapa con algo como &lt;code&gt;this.$parent.getMap&lt;/code&gt; , para agregarle un conjunto de marcadores. Puedes ver este patr&amp;oacute;n &lt;a href=&quot;https://jsfiddle.net/chrisvfritz/ttzutdxh/&quot;&gt;en acci&amp;oacute;n aqu&amp;iacute;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="780604d1e5198fdcc94939f3a317c58b142346c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;transition-group&amp;gt;&lt;/code&gt; component has another trick up its sleeve. It can not only animate entering and leaving, but also changes in position. The only new concept you need to know to use this feature is the addition of &lt;strong&gt;the &lt;code&gt;v-move&lt;/code&gt; class&lt;/strong&gt;, which is added when items are changing positions. Like the other classes, its prefix will match the value of a provided &lt;code&gt;name&lt;/code&gt; attribute and you can also manually specify a class with the &lt;code&gt;move-class&lt;/code&gt; attribute.</source>
          <target state="translated">El componente &lt;code&gt;&amp;lt;transition-group&amp;gt;&lt;/code&gt; tiene otro truco bajo la manga. No solo puede animar la entrada y la salida, sino tambi&amp;eacute;n los cambios de posici&amp;oacute;n. El &amp;uacute;nico concepto nuevo que necesita saber para usar esta funci&amp;oacute;n es la adici&amp;oacute;n de &lt;strong&gt;la clase &lt;code&gt;v-move&lt;/code&gt; &lt;/strong&gt; , que se agrega cuando los elementos cambian de posici&amp;oacute;n. Al igual que las otras clases, su prefijo coincidir&amp;aacute; con el valor de un atributo de &lt;code&gt;name&lt;/code&gt; proporcionado y tambi&amp;eacute;n puede especificar manualmente una clase con el atributo &lt;code&gt;move-class&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="606648505385790cf915adeb72e619634753fda2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.camel&lt;/code&gt; modifier allows camelizing a &lt;code&gt;v-bind&lt;/code&gt; attribute name when using in-DOM templates, e.g. the SVG &lt;code&gt;viewBox&lt;/code&gt; attribute:</source>
          <target state="translated">El modificador &lt;code&gt;.camel&lt;/code&gt; permite camelizar un nombre de atributo &lt;code&gt;v-bind&lt;/code&gt; cuando se usan plantillas en DOM, por ejemplo, el atributo SVG &lt;code&gt;viewBox&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b9f947cb89a1b3d04c28ecc1fa1b5146bc308109" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.exact&lt;/code&gt; modifier allows control of the exact combination of system modifiers needed to trigger an event.</source>
          <target state="translated">El modificador &lt;code&gt;.exact&lt;/code&gt; permite controlar la combinaci&amp;oacute;n exacta de modificadores del sistema necesarios para desencadenar un evento.</target>
        </trans-unit>
        <trans-unit id="71dc161e02d764cb61bccce7f7216e558eea41ce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.literal&lt;/code&gt; modifier has been removed, as the same can be easily achieved by providing a string literal as the value.</source>
          <target state="translated">El modificador &lt;code&gt;.literal&lt;/code&gt; se ha eliminado, ya que se puede lograr f&amp;aacute;cilmente proporcionando un literal de cadena como valor.</target>
        </trans-unit>
        <trans-unit id="447f18c9c1ff6544a5bf8da7ab660de9c45d00c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.passive&lt;/code&gt; modifier is especially useful for improving performance on mobile devices.</source>
          <target state="translated">El modificador &lt;code&gt;.passive&lt;/code&gt; es especialmente &amp;uacute;til para mejorar el rendimiento en dispositivos m&amp;oacute;viles.</target>
        </trans-unit>
        <trans-unit id="21fd043aec56c5be7446f861bc772ebd8e753810" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.sync&lt;/code&gt; modifier can also be used with &lt;code&gt;v-bind&lt;/code&gt; when using an object to set multiple props at once:</source>
          <target state="translated">El modificador &lt;code&gt;.sync&lt;/code&gt; tambi&amp;eacute;n se puede usar con &lt;code&gt;v-bind&lt;/code&gt; cuando se usa un objeto para establecer m&amp;uacute;ltiples accesorios a la vez:</target>
        </trans-unit>
        <trans-unit id="c3321d11e9ef44eba8d358a3614e37323b934b17" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;events&lt;/code&gt; option has been removed. Event handlers should now be registered in the &lt;code&gt;created&lt;/code&gt; hook instead. Check out the &lt;a href=&quot;#dispatch-and-broadcast-replaced&quot;&gt;&lt;code&gt;$dispatch&lt;/code&gt; and &lt;code&gt;$broadcast&lt;/code&gt; migration guide&lt;/a&gt; for a detailed example.</source>
          <target state="translated">Se ha eliminado la opci&amp;oacute;n de &lt;code&gt;events&lt;/code&gt; . Los controladores de eventos ahora deber&amp;iacute;an estar registrados en el gancho &lt;code&gt;created&lt;/code&gt; . Consulte la &lt;a href=&quot;#dispatch-and-broadcast-replaced&quot;&gt;gu&amp;iacute;a de migraci&amp;oacute;n de &lt;/a&gt; &lt;code&gt;$dispatch&lt;/code&gt; y &lt;code&gt;$broadcast&lt;/code&gt; para obtener un ejemplo detallado.</target>
        </trans-unit>
        <trans-unit id="2b7c4b5febaa054c2d70f2972911d81840dc234e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;in-out&lt;/code&gt; mode isn&amp;rsquo;t used as often, but can sometimes be useful for a slightly different transition effect. Let&amp;rsquo;s try combining it with the slide-fade transition we worked on earlier:</source>
          <target state="translated">El modo de &lt;code&gt;in-out&lt;/code&gt; no se usa con tanta frecuencia, pero a veces puede ser &amp;uacute;til para un efecto de transici&amp;oacute;n ligeramente diferente. Intentemos combinarlo con la transici&amp;oacute;n de deslizamiento-desvanecimiento en la que trabajamos anteriormente:</target>
        </trans-unit>
        <trans-unit id="7bb2562df8be00932287fedd76a233d44e708651" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;include&lt;/code&gt; and &lt;code&gt;exclude&lt;/code&gt; props allow components to be conditionally cached. Both props can be a comma-delimited string, a RegExp or an Array:</source>
          <target state="translated">Las &lt;code&gt;include&lt;/code&gt; y &lt;code&gt;exclude&lt;/code&gt; permiten que los componentes se almacenen en cach&amp;eacute; condicionalmente. Ambos accesorios pueden ser una cadena delimitada por comas, una expresi&amp;oacute;n regular o una matriz:</target>
        </trans-unit>
        <trans-unit id="4cd088c8b9dd70d20f540d863e4827655ef4afc8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;inject&lt;/code&gt; option should be either:</source>
          <target state="translated">La opci&amp;oacute;n de &lt;code&gt;inject&lt;/code&gt; debe ser:</target>
        </trans-unit>
        <trans-unit id="582a8cbd2aa999f85f97f4835ddb07fec729cd60" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;key&lt;/code&gt; special attribute is primarily used as a hint for Vue&amp;rsquo;s virtual DOM algorithm to identify VNodes when diffing the new list of nodes against the old list. Without keys, Vue uses an algorithm that minimizes element movement and tries to patch/reuse elements of the same type in-place as much as possible. With keys, it will reorder elements based on the order change of keys, and elements with keys that are no longer present will always be removed/destroyed.</source>
          <target state="translated">El atributo especial &lt;code&gt;key&lt;/code&gt; se usa principalmente como una pista para que el algoritmo DOM virtual de Vue identifique los VNodes al comparar la nueva lista de nodos con la lista anterior. Sin claves, Vue usa un algoritmo que minimiza el movimiento de elementos e intenta parchear / reutilizar elementos del mismo tipo en el lugar tanto como sea posible. Con las claves, reordenar&amp;aacute; los elementos en funci&amp;oacute;n del cambio de orden de las claves, y los elementos con claves que ya no est&amp;aacute;n presentes siempre ser&amp;aacute;n eliminados / destruidos.</target>
        </trans-unit>
        <trans-unit id="dc118214d9d96bdcdab86a3dcf6dbc36ea6680a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lazy&lt;/code&gt; and &lt;code&gt;number&lt;/code&gt; param attributes are now modifiers, to make it more clear what That means instead of:</source>
          <target state="translated">Los atributos &lt;code&gt;lazy&lt;/code&gt; y &lt;code&gt;number&lt;/code&gt; param ahora son modificadores, para que quede m&amp;aacute;s claro lo que eso significa en lugar de:</target>
        </trans-unit>
        <trans-unit id="cb26d534e1e0fd7dab034b343fe732f25ec4cdc8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mixins&lt;/code&gt; option accepts an array of mixin objects. These mixin objects can contain instance options like normal instance objects, and they will be merged against the eventual options using the same option merging logic in &lt;code&gt;Vue.extend()&lt;/code&gt;. e.g. If your mixin contains a created hook and the component itself also has one, both functions will be called.</source>
          <target state="translated">La opci&amp;oacute;n &lt;code&gt;mixins&lt;/code&gt; acepta una variedad de objetos mixin. Estos objetos mixin pueden contener opciones de instancia como objetos de instancia normales, y se combinar&amp;aacute;n con las opciones eventuales utilizando la misma l&amp;oacute;gica de combinaci&amp;oacute;n de opciones en &lt;code&gt;Vue.extend()&lt;/code&gt; . Por ejemplo, si su mixin contiene un gancho creado y el componente en s&amp;iacute; tambi&amp;eacute;n tiene uno, se llamar&amp;aacute;n ambas funciones.</target>
        </trans-unit>
        <trans-unit id="a26f8d5002e995f88abd483d65f2b8981c550aeb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;provide&lt;/code&gt; option should be an object or a function that returns an object. This object contains the properties that are available for injection into its descendants. You can use ES2015 Symbols as keys in this object, but only in environments that natively support &lt;code&gt;Symbol&lt;/code&gt; and &lt;code&gt;Reflect.ownKeys&lt;/code&gt;.</source>
          <target state="translated">La opci&amp;oacute;n de &lt;code&gt;provide&lt;/code&gt; debe ser un objeto o una funci&amp;oacute;n que devuelva un objeto. Este objeto contiene las propiedades que est&amp;aacute;n disponibles para su inyecci&amp;oacute;n en sus descendientes. Puede utilizar los s&amp;iacute;mbolos ES2015 como claves en este objeto, pero solo en entornos que admitan de forma nativa &lt;code&gt;Symbol&lt;/code&gt; y &lt;code&gt;Reflect.ownKeys&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1df98a28e225ea8d4b071027515cc8bf9c095a9e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;provide&lt;/code&gt; options allows us to specify the data/methods we want to &lt;strong&gt;provide&lt;/strong&gt; to descendent components. In this case, that&amp;rsquo;s the &lt;code&gt;getMap&lt;/code&gt; method inside &lt;code&gt;&amp;lt;google-map&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">Las opciones de &lt;code&gt;provide&lt;/code&gt; nos permiten especificar los datos / m&amp;eacute;todos que queremos &lt;strong&gt;proporcionar&lt;/strong&gt; a los componentes descendientes. En este caso, ese es el m&amp;eacute;todo &lt;code&gt;getMap&lt;/code&gt; dentro de &lt;code&gt;&amp;lt;google-map&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e89e752e4e0ad59fc71d8c42dbb8b140ac0a0a39" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;render&lt;/code&gt; function has priority over the render function compiled from &lt;code&gt;template&lt;/code&gt; option or in-DOM HTML template of the mounting element which is specified by the &lt;code&gt;el&lt;/code&gt; option.</source>
          <target state="translated">El &lt;code&gt;render&lt;/code&gt; funci&amp;oacute;n tiene prioridad sobre la funci&amp;oacute;n render compilado a partir de &lt;code&gt;template&lt;/code&gt; opci&amp;oacute;n o en DOM HTML plantilla del elemento de montaje que se especifica por el &lt;code&gt;el&lt;/code&gt; opci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="2f312c98cab71695e7dd222c575b78b0d13a0c64" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;slot-scope&lt;/code&gt; attribute can also be used directly on a non-&lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; element (including components):</source>
          <target state="translated">El atributo &lt;code&gt;slot-scope&lt;/code&gt; tambi&amp;eacute;n se puede usar directamente en un elemento que no sea &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; (incluidos los componentes):</target>
        </trans-unit>
        <trans-unit id="955152ea21b24fdf404e6e6a60a1465f0de55be9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;true-value&lt;/code&gt; and &lt;code&gt;false-value&lt;/code&gt; attributes don&amp;rsquo;t affect the input&amp;rsquo;s &lt;code&gt;value&lt;/code&gt; attribute, because browsers don&amp;rsquo;t include unchecked boxes in form submissions. To guarantee that one of two values is submitted in a form (e.g. &amp;ldquo;yes&amp;rdquo; or &amp;ldquo;no&amp;rdquo;), use radio inputs instead.</source>
          <target state="translated">Las &lt;code&gt;true-value&lt;/code&gt; y &lt;code&gt;false-value&lt;/code&gt; atributos no afectan a la entrada de &lt;code&gt;value&lt;/code&gt; atributo, ya que los navegadores no incluyen casillas sin marcar en los env&amp;iacute;os de formularios. Para garantizar que uno de los dos valores se env&amp;iacute;e en un formulario (por ejemplo, &quot;s&amp;iacute;&quot; o &quot;no&quot;), utilice entradas de radio en su lugar.</target>
        </trans-unit>
        <trans-unit id="e182f837614c4a38080aad510dbbf2060bfc370d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; can be one of the following native constructors:</source>
          <target state="translated">El &lt;code&gt;type&lt;/code&gt; puede ser uno de los siguientes constructores nativos:</target>
        </trans-unit>
        <trans-unit id="e190ce9f5befbb3426f06af3ed96f5a8aa0969e6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;v-&lt;/code&gt; prefix serves as a visual cue for identifying Vue-specific attributes in your templates. This is useful when you are using Vue.js to apply dynamic behavior to some existing markup, but can feel verbose for some frequently used directives. At the same time, the need for the &lt;code&gt;v-&lt;/code&gt; prefix becomes less important when you are building a &lt;a href=&quot;https://en.wikipedia.org/wiki/Single-page_application&quot;&gt;SPA&lt;/a&gt;, where Vue manages every template. Therefore, Vue provides special shorthands for two of the most often used directives, &lt;code&gt;v-bind&lt;/code&gt; and &lt;code&gt;v-on&lt;/code&gt;:</source>
          <target state="translated">El prefijo &lt;code&gt;v-&lt;/code&gt; sirve como una pista visual para identificar atributos espec&amp;iacute;ficos de Vue en sus plantillas. Esto es &amp;uacute;til cuando usa Vue.js para aplicar un comportamiento din&amp;aacute;mico a alg&amp;uacute;n marcado existente, pero puede parecer detallado para algunas directivas de uso frecuente. Al mismo tiempo, la necesidad del prefijo &lt;code&gt;v-&lt;/code&gt; se vuelve menos importante cuando est&amp;aacute; construyendo un &lt;a href=&quot;https://en.wikipedia.org/wiki/Single-page_application&quot;&gt;SPA&lt;/a&gt; , donde Vue administra cada plantilla. Por lo tanto, Vue proporciona abreviaturas especiales para dos de las directivas m&amp;aacute;s utilizadas, &lt;code&gt;v-bind&lt;/code&gt; y &lt;code&gt;v-on&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cd8461a9f091788550d2bcfcb0e99f3643c233d5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;v-else-if&lt;/code&gt;, as the name suggests, serves as an &amp;ldquo;else if block&amp;rdquo; for &lt;code&gt;v-if&lt;/code&gt;. It can also be chained multiple times:</source>
          <target state="translated">El &lt;code&gt;v-else-if&lt;/code&gt; , como sugiere el nombre, sirve como un &quot;bloque else if&quot; para &lt;code&gt;v-if&lt;/code&gt; . Tambi&amp;eacute;n se puede encadenar varias veces:</target>
        </trans-unit>
        <trans-unit id="0f6244029a3dc18b6cba09b3e6e0a940180e13b8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;v-link-active&lt;/code&gt; directive has also been replaced by the &lt;code&gt;tag&lt;/code&gt; attribute on &lt;a href=&quot;https://router.vuejs.org/en/api/router-link.html&quot;&gt;the &lt;code&gt;&amp;lt;router-link&amp;gt;&lt;/code&gt; component&lt;/a&gt;. So for example, you&amp;rsquo;ll update this:</source>
          <target state="translated">La directiva &lt;code&gt;v-link-active&lt;/code&gt; tambi&amp;eacute;n ha sido reemplazada por el atributo de &lt;code&gt;tag&lt;/code&gt; en &lt;a href=&quot;https://router.vuejs.org/en/api/router-link.html&quot;&gt;el componente &lt;code&gt;&amp;lt;router-link&amp;gt;&lt;/code&gt; &lt;/a&gt; . Entonces, por ejemplo, actualizar&amp;aacute; esto:</target>
        </trans-unit>
        <trans-unit id="83d24c44d5fff24f0114d4c306087248f718b001" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;v-link&lt;/code&gt; directive has been replaced with a new &lt;a href=&quot;https://router.vuejs.org/en/api/router-link.html&quot;&gt;&lt;code&gt;&amp;lt;router-link&amp;gt;&lt;/code&gt; component&lt;/a&gt;, as this sort of job is now solely the responsibility of components in Vue 2. That means whenever wherever you have a link like this:</source>
          <target state="translated">La directiva &lt;code&gt;v-link&lt;/code&gt; ha sido reemplazada con un nuevo &lt;a href=&quot;https://router.vuejs.org/en/api/router-link.html&quot;&gt;componente &lt;/a&gt; &lt;code&gt;&amp;lt;router-link&amp;gt;&lt;/code&gt; , ya que este tipo de trabajo ahora es responsabilidad exclusiva de los componentes en Vue 2. Eso significa que siempre que tenga un enlace como este:</target>
        </trans-unit>
        <trans-unit id="913c16238f6be321d10c7aa5ede9be4e8848de68" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;v-slot&lt;/code&gt; directive was introduced in Vue 2.6.0, offering an improved, alternative API to the still-supported &lt;code&gt;slot&lt;/code&gt; and &lt;code&gt;slot-scope&lt;/code&gt; attributes. The full rationale for introducing &lt;code&gt;v-slot&lt;/code&gt; is described in this &lt;a href=&quot;https://github.com/vuejs/rfcs/blob/master/active-rfcs/0001-new-slot-syntax.md&quot;&gt;RFC&lt;/a&gt;. The &lt;code&gt;slot&lt;/code&gt; and &lt;code&gt;slot-scope&lt;/code&gt; attributes will continue to be supported in all future 2.x releases, but are officially deprecated and will eventually be removed in Vue 3.</source>
          <target state="translated">El &lt;code&gt;v-slot&lt;/code&gt; directiva se introdujo en Vue 2.6.0, que ofrece una mejora, API alternativa a los soportados todav&amp;iacute;a- &lt;code&gt;slot&lt;/code&gt; y &lt;code&gt;slot-scope&lt;/code&gt; atributos. La justificaci&amp;oacute;n completa para la introducci&amp;oacute;n de &lt;code&gt;v-slot&lt;/code&gt; se describe en este &lt;a href=&quot;https://github.com/vuejs/rfcs/blob/master/active-rfcs/0001-new-slot-syntax.md&quot;&gt;RFC&lt;/a&gt; . Las &lt;code&gt;slot&lt;/code&gt; y &lt;code&gt;slot-scope&lt;/code&gt; atributos seguir&amp;aacute;n siendo apoyado en todas las futuras versiones 2.x, pero han quedado obsoletos oficialmente y con el tiempo se retir&amp;oacute; en Vue 3.</target>
        </trans-unit>
        <trans-unit id="f371f3394ccbbd9c9c7339bc5a079bc98cf103c4" translate="yes" xml:space="preserve">
          <source>The CLI assumes prior knowledge of Node.js and the associated build tools. If you are new to Vue or front-end build tools, we strongly suggest going through &lt;a href=&quot;../index&quot;&gt;the guide&lt;/a&gt; without any build tools before using the CLI.</source>
          <target state="translated">La CLI asume un conocimiento previo de Node.js y las herramientas de compilaci&amp;oacute;n asociadas. Si es nuevo en Vue o en las herramientas de compilaci&amp;oacute;n de front-end, le recomendamos encarecidamente que lea &lt;a href=&quot;../index&quot;&gt;la gu&amp;iacute;a&lt;/a&gt; sin ninguna herramienta de compilaci&amp;oacute;n antes de usar la CLI.</target>
        </trans-unit>
        <trans-unit id="431e39681a2982cceb38425ec480f7e168f10ba0" translate="yes" xml:space="preserve">
          <source>The CLI takes care of most of the tooling configurations for you, but also allows fine-grained customization through its own &lt;a href=&quot;https://cli.vuejs.org/config/&quot;&gt;config options&lt;/a&gt;.</source>
          <target state="translated">La CLI se encarga de la mayor&amp;iacute;a de las configuraciones de herramientas por usted, pero tambi&amp;eacute;n permite una personalizaci&amp;oacute;n detallada a trav&amp;eacute;s de sus propias &lt;a href=&quot;https://cli.vuejs.org/config/&quot;&gt;opciones de configuraci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="37e9961ffd2140433ee6300b4c25596bb92249ae" translate="yes" xml:space="preserve">
          <source>The Complete SSR Guide</source>
          <target state="translated">La guía completa de la SSR</target>
        </trans-unit>
        <trans-unit id="eb35b5bf284498fbba8e557432a08e707e7edef3" translate="yes" xml:space="preserve">
          <source>The Data Object In-Depth</source>
          <target state="translated">El objeto de datos en profundidad</target>
        </trans-unit>
        <trans-unit id="3c531607ce360cbb5aec13ac8c3438a41dc5f330" translate="yes" xml:space="preserve">
          <source>The Virtual DOM</source>
          <target state="translated">El DOM virtual</target>
        </trans-unit>
        <trans-unit id="babecbcffc795b2e20d9189e575e0bb731f8cd62" translate="yes" xml:space="preserve">
          <source>The Vue Instance</source>
          <target state="translated">La Instancia Vue</target>
        </trans-unit>
        <trans-unit id="be83ced5c720e31f43242c0f5e365ad3f2da0751" translate="yes" xml:space="preserve">
          <source>The Web Components Spec has been finalized, but is not natively implemented in every browser. Safari 10.1+, Chrome 54+ and Firefox 63+ natively support web components. In comparison, Vue components don&amp;rsquo;t require any polyfills and work consistently in all supported browsers (IE9 and above). When needed, Vue components can also be wrapped inside a native custom element.</source>
          <target state="translated">La especificaci&amp;oacute;n de componentes web se ha finalizado, pero no se implementa de forma nativa en todos los navegadores. Safari 10.1+, Chrome 54+ y Firefox 63+ admiten componentes web de forma nativa. En comparaci&amp;oacute;n, los componentes de Vue no requieren polyfills y funcionan de manera consistente en todos los navegadores compatibles (IE9 y superior). Cuando sea necesario, los componentes de Vue tambi&amp;eacute;n se pueden envolver dentro de un elemento personalizado nativo.</target>
        </trans-unit>
        <trans-unit id="0a28d4802ae8f29af4f28a606d7b55fd498ccb1b" translate="yes" xml:space="preserve">
          <source>The above code is imperative and repetitive. Compare it with a computed property version:</source>
          <target state="translated">El código anterior es imperativo y repetitivo.Compáralo con una versión de propiedad computarizada:</target>
        </trans-unit>
        <trans-unit id="bb879e483c23bffcd30b4eb818c6b264dd8b31d3" translate="yes" xml:space="preserve">
          <source>The above declarations allow the following code to be compiled:</source>
          <target state="translated">Las declaraciones anteriores permiten recopilar el siguiente código:</target>
        </trans-unit>
        <trans-unit id="f57aa3ad596a32aa0ee96ea34ada406c21b66366" translate="yes" xml:space="preserve">
          <source>The above example and some future ones use JavaScript&amp;rsquo;s &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals&quot;&gt;template literal&lt;/a&gt; to make multi-line templates more readable. These are not supported by Internet Explorer (IE), so if you must support IE and are not transpiling (e.g. with Babel or TypeScript), use &lt;a href=&quot;https://css-tricks.com/snippets/javascript/multiline-string-variables-in-javascript/&quot;&gt;newline escapes&lt;/a&gt; instead.</source>
          <target state="translated">El ejemplo anterior y algunos futuros usan el &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals&quot;&gt;literal de plantilla&lt;/a&gt; de JavaScript para hacer que las plantillas de varias l&amp;iacute;neas sean m&amp;aacute;s legibles. Estos no son compatibles con Internet Explorer (IE), por lo que si debe admitir IE y no est&amp;aacute; transpiling (por ejemplo, con Babel o TypeScript), use &lt;a href=&quot;https://css-tricks.com/snippets/javascript/multiline-string-variables-in-javascript/&quot;&gt;escapes de nueva l&amp;iacute;nea en su&lt;/a&gt; lugar.</target>
        </trans-unit>
        <trans-unit id="99a5b0f10fab94bdbe6947c371a61fc4c4300760" translate="yes" xml:space="preserve">
          <source>The above is made possible by Vue&amp;rsquo;s &lt;code&gt;&amp;lt;component&amp;gt;&lt;/code&gt; element with the &lt;code&gt;is&lt;/code&gt; special attribute:</source>
          <target state="translated">Lo anterior es posible gracias al &lt;code&gt;&amp;lt;component&amp;gt;&lt;/code&gt; Vue con el atributo especial &lt;code&gt;is&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b7374ad3f755708e5dc13a8b4b98839ff8d234e1" translate="yes" xml:space="preserve">
          <source>The above only renders the todos that are not complete.</source>
          <target state="translated">Lo anterior sólo hace que todos los que no están completos.</target>
        </trans-unit>
        <trans-unit id="4af7e3e4b79fac718e6fd64e5702254c69dcf11f" translate="yes" xml:space="preserve">
          <source>The above syntax means the presence of the &lt;code&gt;active&lt;/code&gt; class will be determined by the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Truthy&quot;&gt;truthiness&lt;/a&gt; of the data property &lt;code&gt;isActive&lt;/code&gt;.</source>
          <target state="translated">La sintaxis anterior significa que la presencia de la clase &lt;code&gt;active&lt;/code&gt; estar&amp;aacute; determinada por la &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Truthy&quot;&gt;veracidad&lt;/a&gt; de la propiedad de datos &lt;code&gt;isActive&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aeec69d6935039bffd444e21fbd1ed7763a7edf9" translate="yes" xml:space="preserve">
          <source>The above will be equivalent to:</source>
          <target state="translated">Lo anterior será equivalente a:</target>
        </trans-unit>
        <trans-unit id="bc22dad858f565e9beeefc992c5465134124606c" translate="yes" xml:space="preserve">
          <source>The anchored heading component we created earlier is relatively simple. It doesn&amp;rsquo;t manage any state, watch any state passed to it, and it has no lifecycle methods. Really, it&amp;rsquo;s only a function with some props.</source>
          <target state="translated">El componente de encabezado anclado que creamos anteriormente es relativamente simple. No gestiona ning&amp;uacute;n estado, observa cualquier estado que se le transfiera y no tiene m&amp;eacute;todos de ciclo de vida. Realmente, es solo una funci&amp;oacute;n con algunos accesorios.</target>
        </trans-unit>
        <trans-unit id="87b9709d9cefabc9cccc6ad0b23e243c50a3cb35" translate="yes" xml:space="preserve">
          <source>The array syntax allows more predictable route matching, since iterating over an object is not guaranteed to use the same property order across browsers.</source>
          <target state="translated">La sintaxis de la matriz permite una coincidencia de rutas más predecible,ya que al iterar sobre un objeto no se garantiza el uso del mismo orden de propiedades en todos los navegadores.</target>
        </trans-unit>
        <trans-unit id="da3ddd2386065d734a4382298ee4c3e11da253a3" translate="yes" xml:space="preserve">
          <source>The array syntax for &lt;code&gt;v-bind:style&lt;/code&gt; allows you to apply multiple style objects to the same element:</source>
          <target state="translated">La sintaxis de matriz para &lt;code&gt;v-bind:style&lt;/code&gt; le permite aplicar varios objetos de estilo al mismo elemento:</target>
        </trans-unit>
        <trans-unit id="e823b9beb8c48498f2cf709b4d0756d4d1fc6465" translate="yes" xml:space="preserve">
          <source>The async component factory can also return an object of the following format:</source>
          <target state="translated">La fábrica de componentes async también puede devolver un objeto del siguiente formato:</target>
        </trans-unit>
        <trans-unit id="ba11fc067d05679fdd5921eda5ec20ebd31b1c5d" translate="yes" xml:space="preserve">
          <source>The autocompletion in editors make the cost of writing longer names very low, while the clarity they provide is invaluable. Uncommon abbreviations, in particular, should always be avoided.</source>
          <target state="translated">La autocompletación en los editores hace que el costo de escribir nombres más largos sea muy bajo,mientras que la claridad que proporcionan es invaluable.Las abreviaturas poco comunes,en particular,deben evitarse siempre.</target>
        </trans-unit>
        <trans-unit id="8c22ef1ce4c22f9fdb3192ace8ea666bf31d6a91" translate="yes" xml:space="preserve">
          <source>The bound object doesn&amp;rsquo;t have to be inline:</source>
          <target state="translated">El objeto vinculado no tiene que estar en l&amp;iacute;nea:</target>
        </trans-unit>
        <trans-unit id="c473e09bb4188e420d79ebd60ee46d8c65246cf3" translate="yes" xml:space="preserve">
          <source>The component system is another important concept in Vue, because it&amp;rsquo;s an abstraction that allows us to build large-scale applications composed of small, self-contained, and often reusable components. If we think about it, almost any type of application interface can be abstracted into a tree of components:</source>
          <target state="translated">El sistema de componentes es otro concepto importante en Vue, porque es una abstracci&amp;oacute;n que nos permite crear aplicaciones a gran escala compuestas por componentes peque&amp;ntilde;os, aut&amp;oacute;nomos y, a menudo, reutilizables. Si lo pensamos bien, casi cualquier tipo de interfaz de aplicaci&amp;oacute;n se puede abstraer en un &amp;aacute;rbol de componentes:</target>
        </trans-unit>
        <trans-unit id="e2a227479dfaa2ebe9e09278b1482fab712cafda" translate="yes" xml:space="preserve">
          <source>The component&amp;rsquo;s DOM will have been updated when this hook is called, so you can perform DOM-dependent operations here. However, in most cases you should avoid changing state inside the hook. To react to state changes, it&amp;rsquo;s usually better to use a &lt;a href=&quot;#computed&quot;&gt;computed property&lt;/a&gt; or &lt;a href=&quot;#watch&quot;&gt;watcher&lt;/a&gt; instead.</source>
          <target state="translated">El DOM del componente se habr&amp;aacute; actualizado cuando se llame a este enlace, por lo que puede realizar operaciones dependientes del DOM aqu&amp;iacute;. Sin embargo, en la mayor&amp;iacute;a de los casos, debe evitar cambiar el estado dentro del gancho. Para reaccionar a los cambios de estado, normalmente es mejor utilizar una &lt;a href=&quot;#computed&quot;&gt;propiedad calculada&lt;/a&gt; o un &lt;a href=&quot;#watch&quot;&gt;observador&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="33a9c37f2f9908b2ff6754fe4ced3a3b882e927a" translate="yes" xml:space="preserve">
          <source>The component&amp;rsquo;s name is the first argument of &lt;code&gt;Vue.component&lt;/code&gt;.</source>
          <target state="translated">El nombre del componente es el primer argumento de &lt;code&gt;Vue.component&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6c50d6a412a378e537c001610ef774aa9ae31afc" translate="yes" xml:space="preserve">
          <source>The contents of the &lt;code&gt;span&lt;/code&gt; will be replaced with the value of the &lt;code&gt;rawHtml&lt;/code&gt; property, interpreted as plain HTML - data bindings are ignored. Note that you cannot use &lt;code&gt;v-html&lt;/code&gt; to compose template partials, because Vue is not a string-based templating engine. Instead, components are preferred as the fundamental unit for UI reuse and composition.</source>
          <target state="translated">El contenido del &lt;code&gt;span&lt;/code&gt; se reemplazar&amp;aacute; con el valor de la propiedad &lt;code&gt;rawHtml&lt;/code&gt; , interpretado como HTML simple; los enlaces de datos se ignoran. Tenga en cuenta que no puede usar &lt;code&gt;v-html&lt;/code&gt; para componer parciales de plantilla, porque Vue no es un motor de plantillas basado en cadenas. En cambio, se prefieren los componentes como unidad fundamental para la reutilizaci&amp;oacute;n y composici&amp;oacute;n de la interfaz de usuario.</target>
        </trans-unit>
        <trans-unit id="0aabf5563ee74ceaaa562a702ba84f4906e6efaf" translate="yes" xml:space="preserve">
          <source>The custom component &lt;code&gt;&amp;lt;blog-post-row&amp;gt;&lt;/code&gt; will be hoisted out as invalid content, causing errors in the eventual rendered output. Fortunately, the &lt;code&gt;is&lt;/code&gt; special attribute offers a workaround:</source>
          <target state="translated">El componente personalizado &lt;code&gt;&amp;lt;blog-post-row&amp;gt;&lt;/code&gt; se incluir&amp;aacute; como contenido no v&amp;aacute;lido, lo que provocar&amp;aacute; errores en la salida eventual renderizada. Afortunadamente, el atributo especial &lt;code&gt;is&lt;/code&gt; ofrece una soluci&amp;oacute;n alternativa:</target>
        </trans-unit>
        <trans-unit id="773dcdb0e4554ae71591d98763ca297e3e508d9e" translate="yes" xml:space="preserve">
          <source>The data object for the Vue instance. Vue will recursively convert its properties into getter/setters to make it &amp;ldquo;reactive&amp;rdquo;. &lt;strong&gt;The object must be plain&lt;/strong&gt;: native objects such as browser API objects and prototype properties are ignored. A rule of thumb is that data should just be data - it is not recommended to observe objects with their own stateful behavior.</source>
          <target state="translated">El objeto de datos de la instancia de Vue. Vue convertir&amp;aacute; de forma recursiva sus propiedades en getter / setters para hacerlo &quot;reactivo&quot;. &lt;strong&gt;El objeto debe ser sencillo&lt;/strong&gt; : los objetos nativos, como los objetos de la API del navegador y las propiedades del prototipo, se ignoran. Una regla general es que los datos deben ser solo datos; no se recomienda observar objetos con su propio comportamiento con estado.</target>
        </trans-unit>
        <trans-unit id="f249c1e096e4760333b8a1a164e494b46a537f23" translate="yes" xml:space="preserve">
          <source>The data object that the Vue instance is observing. The Vue instance proxies access to the properties on its data object.</source>
          <target state="translated">El objeto de datos que la instancia Vue está observando.La instancia Vue tiene acceso a las propiedades de su objeto de datos.</target>
        </trans-unit>
        <trans-unit id="536204b9289a091fc1bfb216ea4a0b6805215f8d" translate="yes" xml:space="preserve">
          <source>The default behavior of &lt;code&gt;v-for&lt;/code&gt; will try to patch the elements in-place without moving them. To force it to reorder elements, you need to provide an ordering hint with the &lt;code&gt;key&lt;/code&gt; special attribute:</source>
          <target state="translated">El comportamiento predeterminado de &lt;code&gt;v-for&lt;/code&gt; intentar&amp;aacute; parchear los elementos en su lugar sin moverlos. Para obligarlo a reordenar los elementos, debe proporcionar una sugerencia de pedido con el atributo especial &lt;code&gt;key&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d129c09e272230c72d4816c9cf37d602f78c6b98" translate="yes" xml:space="preserve">
          <source>The detailed usage for &lt;code&gt;v-for&lt;/code&gt; is explained in the guide section linked below.</source>
          <target state="translated">El uso detallado de &lt;code&gt;v-for&lt;/code&gt; se explica en la secci&amp;oacute;n de la gu&amp;iacute;a vinculada a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="fcb2400b62e62455e5be23679bc16dcd684f0e97" translate="yes" xml:space="preserve">
          <source>The difference is that an element with &lt;code&gt;v-show&lt;/code&gt; will always be rendered and remain in the DOM; &lt;code&gt;v-show&lt;/code&gt; only toggles the &lt;code&gt;display&lt;/code&gt; CSS property of the element.</source>
          <target state="translated">La diferencia es que un elemento con &lt;code&gt;v-show&lt;/code&gt; siempre se renderizar&amp;aacute; y permanecer&amp;aacute; en el DOM; &lt;code&gt;v-show&lt;/code&gt; solo alterna la propiedad CSS de &lt;code&gt;display&lt;/code&gt; del elemento.</target>
        </trans-unit>
        <trans-unit id="9beac5c57d068b893c427afee540acec4a448457" translate="yes" xml:space="preserve">
          <source>The direct child components of the current instance. &lt;strong&gt;Note there&amp;rsquo;s no order guarantee for &lt;code&gt;$children&lt;/code&gt;, and it is not reactive.&lt;/strong&gt; If you find yourself trying to use &lt;code&gt;$children&lt;/code&gt; for data binding, consider using an Array and &lt;code&gt;v-for&lt;/code&gt; to generate child components, and use the Array as the source of truth.</source>
          <target state="translated">Los componentes secundarios directos de la instancia actual. &lt;strong&gt;Tenga en cuenta que no hay garant&amp;iacute;a de pedido para &lt;code&gt;$children&lt;/code&gt; y no es reactivo. &lt;/strong&gt;Si intenta usar &lt;code&gt;$children&lt;/code&gt; para el enlace de datos, considere usar un Array y &lt;code&gt;v-for&lt;/code&gt; para generar componentes secundarios, y use el Array como fuente de verdad.</target>
        </trans-unit>
        <trans-unit id="8966ad2384af724eb5afaebd84955178e2bef331" translate="yes" xml:space="preserve">
          <source>The directive &lt;code&gt;v-if&lt;/code&gt; is used to conditionally render a block. The block will only be rendered if the directive&amp;rsquo;s expression returns a truthy value.</source>
          <target state="translated">La directiva &lt;code&gt;v-if&lt;/code&gt; se usa para renderizar condicionalmente un bloque. El bloque solo se representar&amp;aacute; si la expresi&amp;oacute;n de la directiva devuelve un valor veraz.</target>
        </trans-unit>
        <trans-unit id="a9e1b62f46f6347c3255105bf2f7f7bb4beb980e" translate="yes" xml:space="preserve">
          <source>The double mustaches interprets the data as plain text, not HTML. In order to output real HTML, you will need to use the &lt;code&gt;v-html&lt;/code&gt; directive:</source>
          <target state="translated">El doble bigote interpreta los datos como texto sin formato, no HTML. Para generar HTML real, deber&amp;aacute; utilizar la directiva &lt;code&gt;v-html&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cdf9489100840a3b7f6fc331943b5d3351ce62f0" translate="yes" xml:space="preserve">
          <source>The easiest way to pre-compile templates is using &lt;a href=&quot;single-file-components&quot;&gt;Single-File Components&lt;/a&gt; - the associated build setups automatically performs pre-compilation for you, so the built code contains the already compiled render functions instead of raw template strings.</source>
          <target state="translated">La forma m&amp;aacute;s f&amp;aacute;cil de precompilar plantillas es utilizando &lt;a href=&quot;single-file-components&quot;&gt;componentes de un solo archivo&lt;/a&gt; : las configuraciones de compilaci&amp;oacute;n asociadas realizan autom&amp;aacute;ticamente la compilaci&amp;oacute;n previa, por lo que el c&amp;oacute;digo compilado contiene las funciones de renderizaci&amp;oacute;n ya compiladas en lugar de cadenas de plantilla sin formato.</target>
        </trans-unit>
        <trans-unit id="75f9865708d8a06fa846e682702658bdabd9c8e0" translate="yes" xml:space="preserve">
          <source>The easiest way to try out Vue.js is using the &lt;a href=&quot;https://jsfiddle.net/chrisvfritz/50wL7mdz/&quot;&gt;JSFiddle Hello World example&lt;/a&gt;. Feel free to open it in another tab and follow along as we go through some basic examples. Or, you can &lt;a href=&quot;https://gist.githubusercontent.com/chrisvfritz/7f8d7d63000b48493c336e48b3db3e52/raw/ed60c4e5d5c6fec48b0921edaed0cb60be30e87c/index.html&quot;&gt;create an &lt;code&gt;index.html&lt;/code&gt; file&lt;/a&gt; and include Vue with:</source>
          <target state="translated">La forma m&amp;aacute;s f&amp;aacute;cil de probar Vue.js es usando el &lt;a href=&quot;https://jsfiddle.net/chrisvfritz/50wL7mdz/&quot;&gt;ejemplo JSFiddle Hello World&lt;/a&gt; . Si&amp;eacute;ntase libre de abrirlo en otra pesta&amp;ntilde;a y seguirlo mientras revisamos algunos ejemplos b&amp;aacute;sicos. O puede &lt;a href=&quot;https://gist.githubusercontent.com/chrisvfritz/7f8d7d63000b48493c336e48b3db3e52/raw/ed60c4e5d5c6fec48b0921edaed0cb60be30e87c/index.html&quot;&gt;crear un archivo &lt;code&gt;index.html&lt;/code&gt; &lt;/a&gt; e incluir Vue con:</target>
        </trans-unit>
        <trans-unit id="847757f66edc351ea14e3e7f70aa130ed1b67ad7" translate="yes" xml:space="preserve">
          <source>The el option can no longer be used in &lt;code&gt;Vue.extend&lt;/code&gt;. It&amp;rsquo;s only valid as an instance creation option.</source>
          <target state="translated">La opci&amp;oacute;n el ya no se puede usar en &lt;code&gt;Vue.extend&lt;/code&gt; . Solo es v&amp;aacute;lido como opci&amp;oacute;n de creaci&amp;oacute;n de instancias.</target>
        </trans-unit>
        <trans-unit id="14ff2ebab179926c1bba713b3418f8fa507384ca" translate="yes" xml:space="preserve">
          <source>The filter&amp;rsquo;s function always receives the expression&amp;rsquo;s value (the result of the former chain) as its first argument. In the above example, the &lt;code&gt;capitalize&lt;/code&gt; filter function will receive the value of &lt;code&gt;message&lt;/code&gt; as its argument.</source>
          <target state="translated">La funci&amp;oacute;n del filtro siempre recibe el valor de la expresi&amp;oacute;n (el resultado de la cadena anterior) como primer argumento. En el ejemplo anterior, la funci&amp;oacute;n de filtro de &lt;code&gt;capitalize&lt;/code&gt; recibir&amp;aacute; el valor de &lt;code&gt;message&lt;/code&gt; como argumento.</target>
        </trans-unit>
        <trans-unit id="25978631002a6e912099e352f219ba34c4dc10cb" translate="yes" xml:space="preserve">
          <source>The filtered list will &lt;em&gt;only&lt;/em&gt; be re-evaluated if there are relevant changes to the &lt;code&gt;users&lt;/code&gt; array, making filtering much more efficient.</source>
          <target state="translated">La lista filtrada &lt;em&gt;solo&lt;/em&gt; se volver&amp;aacute; a evaluar si hay cambios relevantes en la matriz de &lt;code&gt;users&lt;/code&gt; , lo que hace que el filtrado sea mucho m&amp;aacute;s eficiente.</target>
        </trans-unit>
        <trans-unit id="b5951356bec324133fa39def8def2ef7e47b05c1" translate="yes" xml:space="preserve">
          <source>The following template:</source>
          <target state="translated">La siguiente plantilla:</target>
        </trans-unit>
        <trans-unit id="6e4a514c82bb3b7baff7919684302ede3370a422" translate="yes" xml:space="preserve">
          <source>The getter/setters are invisible to the user, but under the hood they enable Vue to perform dependency-tracking and change-notification when properties are accessed or modified. One caveat is that browser consoles format getter/setters differently when converted data objects are logged, so you may want to install &lt;a href=&quot;https://github.com/vuejs/vue-devtools&quot;&gt;vue-devtools&lt;/a&gt; for a more inspection-friendly interface.</source>
          <target state="translated">Los captadores / definidores son invisibles para el usuario, pero bajo el cap&amp;oacute; permiten a Vue realizar un seguimiento de dependencias y notificaciones de cambios cuando se accede a las propiedades o se modifican. Una advertencia es que las consolas del navegador dan formato a los getter / setters de manera diferente cuando se registran los objetos de datos convertidos, por lo que es posible que desee instalar &lt;a href=&quot;https://github.com/vuejs/vue-devtools&quot;&gt;vue-devtools&lt;/a&gt; para una interfaz m&amp;aacute;s f&amp;aacute;cil de inspeccionar.</target>
        </trans-unit>
        <trans-unit id="8cd9d811837e0eecf0a4df368877b6262fe04425" translate="yes" xml:space="preserve">
          <source>The implicitly assigned &lt;code&gt;$index&lt;/code&gt; and &lt;code&gt;$key&lt;/code&gt; variables have been removed in favor of explicitly defining them in &lt;code&gt;v-for&lt;/code&gt;. This makes the code easier to read for developers less experienced with Vue and also results in much clearer behavior when dealing with nested loops.</source>
          <target state="translated">Las variables &lt;code&gt;$index&lt;/code&gt; y &lt;code&gt;$key&lt;/code&gt; asignadas impl&amp;iacute;citamente se han eliminado a favor de definirlas expl&amp;iacute;citamente en &lt;code&gt;v-for&lt;/code&gt; . Esto hace que el c&amp;oacute;digo sea m&amp;aacute;s f&amp;aacute;cil de leer para los desarrolladores con menos experiencia con Vue y tambi&amp;eacute;n da como resultado un comportamiento mucho m&amp;aacute;s claro cuando se trata de bucles anidados.</target>
        </trans-unit>
        <trans-unit id="cd591127230d8deaf3a79ff7072473dcdfb326ef" translate="yes" xml:space="preserve">
          <source>The instantiation options used for the current Vue instance. This is useful when you want to include custom properties in the options:</source>
          <target state="translated">Las opciones de instanciación utilizadas para la actual instancia de Vue.Esto es útil cuando se desea incluir propiedades personalizadas en las opciones:</target>
        </trans-unit>
        <trans-unit id="6507e95ac3123f38dc39170ae522dfbce1786b53" translate="yes" xml:space="preserve">
          <source>The logic for many event handlers will be more complex though, so keeping your JavaScript in the value of the &lt;code&gt;v-on&lt;/code&gt; attribute isn&amp;rsquo;t feasible. That&amp;rsquo;s why &lt;code&gt;v-on&lt;/code&gt; can also accept the name of a method you&amp;rsquo;d like to call.</source>
          <target state="translated">Sin embargo, la l&amp;oacute;gica para muchos controladores de eventos ser&amp;aacute; m&amp;aacute;s compleja, por lo que mantener su JavaScript en el valor del atributo &lt;code&gt;v-on&lt;/code&gt; no es factible. Es por eso que &lt;code&gt;v-on&lt;/code&gt; tambi&amp;eacute;n puede aceptar el nombre de un m&amp;eacute;todo al que le gustar&amp;iacute;a llamar.</target>
        </trans-unit>
        <trans-unit id="a7dfd0134284048bc632e36141f4ea3e7333c213" translate="yes" xml:space="preserve">
          <source>The match is first checked on the component&amp;rsquo;s own &lt;code&gt;name&lt;/code&gt; option, then its local registration name (the key in the parent&amp;rsquo;s &lt;code&gt;components&lt;/code&gt; option) if the &lt;code&gt;name&lt;/code&gt; option is not available. Anonymous components cannot be matched against.</source>
          <target state="translated">La coincidencia se verifica primero en la opci&amp;oacute;n de &lt;code&gt;name&lt;/code&gt; propio del componente , luego en su nombre de registro local (la clave en la opci&amp;oacute;n de &lt;code&gt;components&lt;/code&gt; del padre ) si la opci&amp;oacute;n de &lt;code&gt;name&lt;/code&gt; no est&amp;aacute; disponible. Los componentes an&amp;oacute;nimos no se pueden comparar.</target>
        </trans-unit>
        <trans-unit id="a6157926048113f46fe23ee578e48fe424291d8e" translate="yes" xml:space="preserve">
          <source>The maximum number of component instances to cache. Once this number is reached, the cached component instance that was least recently accessed will be destroyed before creating a new instance.</source>
          <target state="translated">El número máximo de instancias componentes a almacenar.Una vez alcanzado este número,la instancia de componente almacenada en caché a la que se haya accedido menos recientemente será destruida antes de crear una nueva instancia.</target>
        </trans-unit>
        <trans-unit id="8bf10a52fb597971ee2811a4b6daca68eb87e10e" translate="yes" xml:space="preserve">
          <source>The merge strategy receives the value of that option defined on the parent and child instances as the first and second arguments, respectively. The context Vue instance is passed as the third argument.</source>
          <target state="translated">La estrategia de fusión recibe el valor de esa opción definida en las instancias padre e hijo como primer y segundo argumento,respectivamente.La instancia de contexto Vue se pasa como tercer argumento.</target>
        </trans-unit>
        <trans-unit id="7f5a003cef802af9e91a6f9747fac2e515359d41" translate="yes" xml:space="preserve">
          <source>The method returns the instance itself so you can chain other instance methods after it.</source>
          <target state="translated">El método devuelve la instancia misma para que puedas encadenar otros métodos de instancia después de ella.</target>
        </trans-unit>
        <trans-unit id="46eb4e33843509639b8c44662beadd21ed8310ed" translate="yes" xml:space="preserve">
          <source>The most basic form of data binding is text interpolation using the &amp;ldquo;Mustache&amp;rdquo; syntax (double curly braces):</source>
          <target state="translated">La forma m&amp;aacute;s b&amp;aacute;sica de enlace de datos es la interpolaci&amp;oacute;n de texto utilizando la sintaxis &quot;Moustache&quot; (llaves dobles):</target>
        </trans-unit>
        <trans-unit id="bd564c73b6d49eec1b2c8919fa49f3bc33098a11" translate="yes" xml:space="preserve">
          <source>The most common use case is combined with &lt;code&gt;v-for&lt;/code&gt;:</source>
          <target state="translated">El caso de uso m&amp;aacute;s com&amp;uacute;n se combina con &lt;code&gt;v-for&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c379b64d918d58c59f406c013a50f15fd94aaa4c" translate="yes" xml:space="preserve">
          <source>The mustache tag will be replaced with the value of the &lt;code&gt;msg&lt;/code&gt; property on the corresponding data object. It will also be updated whenever the data object&amp;rsquo;s &lt;code&gt;msg&lt;/code&gt; property changes.</source>
          <target state="translated">La etiqueta del bigote se reemplazar&amp;aacute; con el valor de la propiedad &lt;code&gt;msg&lt;/code&gt; en el objeto de datos correspondiente. Tambi&amp;eacute;n se actualizar&amp;aacute; cada vez que cambie la propiedad &lt;code&gt;msg&lt;/code&gt; del objeto de datos .</target>
        </trans-unit>
        <trans-unit id="37afbe4bcd06f0f0be230e6d8e06d5f57d026a3e" translate="yes" xml:space="preserve">
          <source>The name you give a component may depend on where you intend to use it. When using a component directly in the DOM (as opposed to in a string template or &lt;a href=&quot;single-file-components&quot;&gt;single-file component&lt;/a&gt;), we strongly recommend following the &lt;a href=&quot;https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name&quot;&gt;W3C rules&lt;/a&gt; for custom tag names (all-lowercase, must contain a hyphen). This helps you avoid conflicts with current and future HTML elements.</source>
          <target state="translated">El nombre que le d&amp;eacute; a un componente puede depender de d&amp;oacute;nde desee utilizarlo. Cuando se utiliza un componente directamente en el DOM (a diferencia de en una plantilla de cadena o &lt;a href=&quot;single-file-components&quot;&gt;un componente de un solo archivo&lt;/a&gt; ), recomendamos encarecidamente seguir las &lt;a href=&quot;https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name&quot;&gt;reglas&lt;/a&gt; del W3C para los nombres de etiquetas personalizados (todo en min&amp;uacute;sculas, debe contener un gui&amp;oacute;n). Esto le ayuda a evitar conflictos con elementos HTML actuales y futuros.</target>
        </trans-unit>
        <trans-unit id="49544b57b4faf031cbd490df14c62342f8913c7c" translate="yes" xml:space="preserve">
          <source>The new, more concise way to configure &lt;code&gt;keyCodes&lt;/code&gt; is through &lt;code&gt;Vue.config.keyCodes&lt;/code&gt;. For example:</source>
          <target state="translated">La forma nueva y m&amp;aacute;s concisa de configurar &lt;code&gt;keyCodes&lt;/code&gt; es a trav&amp;eacute;s de &lt;code&gt;Vue.config.keyCodes&lt;/code&gt; . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="1ba4a8191026a27a782703cf2cb8992c45a25eab" translate="yes" xml:space="preserve">
          <source>The next 2 examples work with Vue 2.2.1+. Below that version, injected values were resolved after the &lt;code&gt;props&lt;/code&gt; and the &lt;code&gt;data&lt;/code&gt; initialization.</source>
          <target state="translated">Los siguientes 2 ejemplos funcionan con Vue 2.2.1+. Debajo de esa versi&amp;oacute;n, los valores inyectados se resolvieron despu&amp;eacute;s de los &lt;code&gt;props&lt;/code&gt; y la inicializaci&amp;oacute;n de los &lt;code&gt;data&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c4e0ddfdd8217a03837dee9d518c520c1cff551b" translate="yes" xml:space="preserve">
          <source>The next thing you&amp;rsquo;ll have to become familiar with is how to use template features in the &lt;code&gt;createElement&lt;/code&gt; function. Here are the arguments that &lt;code&gt;createElement&lt;/code&gt; accepts:</source>
          <target state="translated">Lo siguiente con lo que tendr&amp;aacute; que familiarizarse es c&amp;oacute;mo usar las caracter&amp;iacute;sticas de la plantilla en la funci&amp;oacute;n &lt;code&gt;createElement&lt;/code&gt; . Estos son los argumentos que acepta &lt;code&gt;createElement&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a93809e131de1acb92c27480b98ade7c8b177368" translate="yes" xml:space="preserve">
          <source>The object syntax for &lt;code&gt;v-bind:style&lt;/code&gt; is pretty straightforward - it looks almost like CSS, except it&amp;rsquo;s a JavaScript object. You can use either camelCase or kebab-case (use quotes with kebab-case) for the CSS property names:</source>
          <target state="translated">La sintaxis del objeto para &lt;code&gt;v-bind:style&lt;/code&gt; es bastante sencilla: se parece casi a CSS, excepto que es un objeto de JavaScript. Puede usar camelCase o kebab-case (use comillas con kebab-case) para los nombres de las propiedades CSS:</target>
        </trans-unit>
        <trans-unit id="f804d7c199bb60087ee99a4d2ed2841ff111fad8" translate="yes" xml:space="preserve">
          <source>The official guide assumes intermediate level knowledge of HTML, CSS, and JavaScript. If you are totally new to frontend development, it might not be the best idea to jump right into a framework as your first step - grasp the basics then come back! Prior experience with other frameworks helps, but is not required.</source>
          <target state="translated">La guía oficial asume un conocimiento de nivel intermedio de HTML,CSS y JavaScript.Si eres totalmente nuevo en el desarrollo del frontend,puede que no sea la mejor idea saltar directamente a un marco como primer paso-¡asegura lo básico y luego regresa! La experiencia previa con otros marcos ayuda,pero no es necesaria.</target>
        </trans-unit>
        <trans-unit id="cdcd3cc5d3cb2f01160d1290fc4a6159e0dddd79" translate="yes" xml:space="preserve">
          <source>The only exception to this being the use of &lt;code&gt;Object.freeze()&lt;/code&gt;, which prevents existing properties from being changed, which also means the reactivity system can&amp;rsquo;t &lt;em&gt;track&lt;/em&gt; changes.</source>
          <target state="translated">La &amp;uacute;nica excepci&amp;oacute;n a esto es el uso de &lt;code&gt;Object.freeze()&lt;/code&gt; , que evita que se cambien las propiedades existentes, lo que tambi&amp;eacute;n significa que el sistema de reactividad no puede &lt;em&gt;rastrear los&lt;/em&gt; cambios.</target>
        </trans-unit>
        <trans-unit id="8eb7f5feed0a750d304ea8614d2edca774bd3f41" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;scoped&lt;/code&gt; attribute automatically scopes this CSS to your component by adding a unique attribute (such as &lt;code&gt;data-v-21e5b78&lt;/code&gt;) to elements and compiling &lt;code&gt;.list-container:hover&lt;/code&gt; to something like &lt;code&gt;.list-container[data-v-21e5b78]:hover&lt;/code&gt;.</source>
          <target state="translated">El atributo de &lt;code&gt;scoped&lt;/code&gt; opcional aplica autom&amp;aacute;ticamente este CSS a su componente agregando un atributo &amp;uacute;nico (como &lt;code&gt;data-v-21e5b78&lt;/code&gt; ) a los elementos y compilando &lt;code&gt;.list-container:hover&lt;/code&gt; a algo como &lt;code&gt;.list-container[data-v-21e5b78]:hover&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8f86e91201591c3c1631acf2b2475e6e451afce5" translate="yes" xml:space="preserve">
          <source>The parent instance, if the current instance has one.</source>
          <target state="translated">La instancia parental,si la instancia actual tiene una.</target>
        </trans-unit>
        <trans-unit id="a213359cc7f926ecae5256c14d1f382a33b06e44" translate="yes" xml:space="preserve">
          <source>The problem is event flows that depend on a component&amp;rsquo;s tree structure can be hard to reason about and are very brittle when the tree becomes large. They don&amp;rsquo;t scale well and only set you up for pain later. &lt;code&gt;$dispatch&lt;/code&gt; and &lt;code&gt;$broadcast&lt;/code&gt; also do not solve communication between sibling components.</source>
          <target state="translated">El problema es que los flujos de eventos que dependen de la estructura del &amp;aacute;rbol de un componente pueden ser dif&amp;iacute;ciles de razonar y son muy fr&amp;aacute;giles cuando el &amp;aacute;rbol crece. No escalan bien y solo te preparan para el dolor m&amp;aacute;s adelante. &lt;code&gt;$dispatch&lt;/code&gt; y &lt;code&gt;$broadcast&lt;/code&gt; tampoco resuelven la comunicaci&amp;oacute;n entre componentes hermanos.</target>
        </trans-unit>
        <trans-unit id="98399a72800d5002678971cac53da1533e26a6d2" translate="yes" xml:space="preserve">
          <source>The problem is that large numbers of &lt;a href=&quot;http://stevesouders.com/efws/css-selectors/csscreate.php?n=1000&amp;amp;sel=a%5Bhref%5D&amp;amp;body=background%3A+%23CFD&amp;amp;ne=1000&quot;&gt;element-attribute selectors&lt;/a&gt; (e.g. &lt;code&gt;button[data-v-f3f3eg9]&lt;/code&gt;) will be considerably slower than &lt;a href=&quot;http://stevesouders.com/efws/css-selectors/csscreate.php?n=1000&amp;amp;sel=.class%5Bhref%5D&amp;amp;body=background%3A+%23CFD&amp;amp;ne=1000&quot;&gt;class-attribute selectors&lt;/a&gt; (e.g. &lt;code&gt;.btn-close[data-v-f3f3eg9]&lt;/code&gt;), so class selectors should be preferred whenever possible.</source>
          <target state="translated">El problema es que una gran cantidad de &lt;a href=&quot;http://stevesouders.com/efws/css-selectors/csscreate.php?n=1000&amp;amp;sel=a%5Bhref%5D&amp;amp;body=background%3A+%23CFD&amp;amp;ne=1000&quot;&gt;selectores de atributos&lt;/a&gt; de elementos (por ejemplo, &lt;code&gt;button[data-v-f3f3eg9]&lt;/code&gt; ) ser&amp;aacute; considerablemente m&amp;aacute;s lento que &lt;a href=&quot;http://stevesouders.com/efws/css-selectors/csscreate.php?n=1000&amp;amp;sel=.class%5Bhref%5D&amp;amp;body=background%3A+%23CFD&amp;amp;ne=1000&quot;&gt;los selectores de atributos&lt;/a&gt; de clase (por ejemplo, &lt;code&gt;.btn-close[data-v-f3f3eg9]&lt;/code&gt; ), por lo que los selectores de clases deber&amp;iacute;an ser preferido siempre que sea posible.</target>
        </trans-unit>
        <trans-unit id="3bc4b51815e1ca75817d438f9a75b79de4143526" translate="yes" xml:space="preserve">
          <source>The problem is, there are also many &lt;em&gt;simple&lt;/em&gt; cases where these patterns may offer convenience. Beware: do not be seduced into trading simplicity (being able to understand the flow of your state) for short-term convenience (writing less code).</source>
          <target state="translated">El problema es que tambi&amp;eacute;n hay muchos casos &lt;em&gt;simples&lt;/em&gt; en los que estos patrones pueden ofrecer conveniencia. Cuidado: no se deje seducir por la simplicidad comercial (ser capaz de comprender el flujo de su estado) por conveniencia a corto plazo (escribir menos c&amp;oacute;digo).</target>
        </trans-unit>
        <trans-unit id="690eaa8b769a27585770a32b044820cae46112dd" translate="yes" xml:space="preserve">
          <source>The problem is, there are cases where it&amp;rsquo;s important not to delete elements that will remain in the DOM. For example, you may want to use &lt;code&gt;&amp;lt;transition-group&amp;gt;&lt;/code&gt; to animate list sorting, or maintain focus if the rendered element is an &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;. In these cases, adding a unique key for each item (e.g. &lt;code&gt;:key=&quot;todo.id&quot;&lt;/code&gt;) will tell Vue how to behave more predictably.</source>
          <target state="translated">El problema es que hay casos en los que es importante no eliminar elementos que permanecer&amp;aacute;n en el DOM. Por ejemplo, es posible que desee utilizar &lt;code&gt;&amp;lt;transition-group&amp;gt;&lt;/code&gt; para animar la clasificaci&amp;oacute;n de la lista o mantener el foco si el elemento renderizado es una &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; . En estos casos, agregar una clave &amp;uacute;nica para cada elemento (por ejemplo &lt;code&gt;:key=&quot;todo.id&quot;&lt;/code&gt; ) le dir&amp;aacute; a Vue c&amp;oacute;mo comportarse de manera m&amp;aacute;s predecible.</target>
        </trans-unit>
        <trans-unit id="35549fb2854bdbc4b65652d62df1f1ddfa7a99ea" translate="yes" xml:space="preserve">
          <source>The problem is, this button doesn&amp;rsquo;t do anything:</source>
          <target state="translated">El problema es que este bot&amp;oacute;n no hace nada:</target>
        </trans-unit>
        <trans-unit id="361cd98689630fb5a124f5e83b5f388af1b8a1f3" translate="yes" xml:space="preserve">
          <source>The provided element merely serves as a mounting point. Unlike in Vue 1.x, the mounted element will be replaced with Vue-generated DOM in all cases. It is therefore not recommended to mount the root instance to &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">El elemento provisto simplemente sirve como punto de montaje. A diferencia de Vue 1.x, el elemento montado se reemplazar&amp;aacute; con DOM generado por Vue en todos los casos. Por lo tanto, no se recomienda montar la instancia ra&amp;iacute;z en &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; o &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="34592f5fd4a2054ce0011f9d4e26a9c654b6f7b5" translate="yes" xml:space="preserve">
          <source>The reason for not automatically injecting &lt;code&gt;item&lt;/code&gt; into the component is because that makes the component tightly coupled to how &lt;code&gt;v-for&lt;/code&gt; works. Being explicit about where its data comes from makes the component reusable in other situations.</source>
          <target state="translated">La raz&amp;oacute;n por la que no se inyecta autom&amp;aacute;ticamente el &lt;code&gt;item&lt;/code&gt; en el componente es porque eso hace que el componente est&amp;eacute; estrechamente acoplado a c&amp;oacute;mo funciona &lt;code&gt;v-for&lt;/code&gt; . Ser expl&amp;iacute;cito sobre el origen de sus datos hace que el componente sea reutilizable en otras situaciones.</target>
        </trans-unit>
        <trans-unit id="c532c908704eacdd705ddb6c7847a0bd40253f67" translate="yes" xml:space="preserve">
          <source>The reason is this is the equivalent JavaScript that the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; would compile to:</source>
          <target state="translated">El motivo es que este es el JavaScript equivalente al que se compilar&amp;iacute;a &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="78702fdec5c6b73fa78a98283262c3e3a610ea89" translate="yes" xml:space="preserve">
          <source>The reference will be HTMLElement when used with functional components because they&amp;rsquo;re stateless and instanceless.</source>
          <target state="translated">La referencia ser&amp;aacute; HTMLElement cuando se use con componentes funcionales porque no tienen estado ni instancia.</target>
        </trans-unit>
        <trans-unit id="c0c42bbffd6116ac9f9aa2c29f718360da13a0c7" translate="yes" xml:space="preserve">
          <source>The rendered HTML will be:</source>
          <target state="translated">El HTML renderizado será:</target>
        </trans-unit>
        <trans-unit id="a426ede2112c009fbf616db449e0c6e3bc884e8e" translate="yes" xml:space="preserve">
          <source>The result is that many components may include long lists of base components:</source>
          <target state="translated">El resultado es que muchos componentes pueden incluir largas listas de componentes básicos:</target>
        </trans-unit>
        <trans-unit id="0894c1243efd2b6757cc56c901b4af230a9aac04" translate="yes" xml:space="preserve">
          <source>The returned object can be used directly inside &lt;a href=&quot;../guide/render-function&quot;&gt;render functions&lt;/a&gt; and &lt;a href=&quot;../guide/computed&quot;&gt;computed properties&lt;/a&gt;, and will trigger appropriate updates when mutated. It can also be used as a minimal, cross-component state store for simple scenarios:</source>
          <target state="translated">El objeto devuelto se puede usar directamente dentro de las &lt;a href=&quot;../guide/render-function&quot;&gt;funciones de renderizado&lt;/a&gt; y las &lt;a href=&quot;../guide/computed&quot;&gt;propiedades calculadas&lt;/a&gt; , y activar&amp;aacute; las actualizaciones apropiadas cuando se mute. Tambi&amp;eacute;n se puede utilizar como un almac&amp;eacute;n de estado de componentes cruzados m&amp;iacute;nimo para escenarios simples:</target>
        </trans-unit>
        <trans-unit id="f5f2182d5b9e1141097f081f69203ed474e7f51a" translate="yes" xml:space="preserve">
          <source>The root DOM element that the Vue instance is managing.</source>
          <target state="translated">El elemento DOM raíz que la instancia Vue está manejando.</target>
        </trans-unit>
        <trans-unit id="1fb1fe84422a22a87a20ac9a9db7f5aca1ce36fc" translate="yes" xml:space="preserve">
          <source>The root Vue instance of the current component tree. If the current instance has no parents this value will be itself.</source>
          <target state="translated">La raíz Vue del árbol de componentes actual.Si la instancia actual no tiene padres,este valor será el mismo.</target>
        </trans-unit>
        <trans-unit id="7b232ff8c5c18691a5df8efcbaf774a1cbaab836" translate="yes" xml:space="preserve">
          <source>The same is true for class bindings:</source>
          <target state="translated">Lo mismo ocurre con las fijaciones de clase:</target>
        </trans-unit>
        <trans-unit id="dd2c503caba50c997d7446df74ac0da742e9b8eb" translate="yes" xml:space="preserve">
          <source>The size of your app (small to medium-sized apps will probably be less than a day)</source>
          <target state="translated">El tamaño de su aplicación (las aplicaciones pequeñas y medianas probablemente serán menos de un día)</target>
        </trans-unit>
        <trans-unit id="71c2733bfb43f78b87500262cd44c42870815508" translate="yes" xml:space="preserve">
          <source>The special case to note here is the &lt;code&gt;data&lt;/code&gt; option - it must be a function when used with &lt;code&gt;Vue.extend()&lt;/code&gt;.</source>
          <target state="translated">El caso especial a tener en cuenta aqu&amp;iacute; es la opci&amp;oacute;n de &lt;code&gt;data&lt;/code&gt; : debe ser una funci&amp;oacute;n cuando se usa con &lt;code&gt;Vue.extend()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="572f57cb3c88ad0c0b5d74b281c1e800b18bf5b8" translate="yes" xml:space="preserve">
          <source>The store instance no longer exposes the event emitter interface (&lt;code&gt;on&lt;/code&gt;, &lt;code&gt;off&lt;/code&gt;, &lt;code&gt;emit&lt;/code&gt;). If you were previously using the store as a global event bus, &lt;a href=&quot;migration#dispatch-and-broadcast-removed&quot;&gt;see this section&lt;/a&gt; for migration instructions.</source>
          <target state="translated">La instancia de la tienda ya no expone la interfaz del emisor de eventos ( &lt;code&gt;on&lt;/code&gt; , &lt;code&gt;off&lt;/code&gt; , &lt;code&gt;emit&lt;/code&gt; ). Si anteriormente usaba la tienda como un bus de eventos global, &lt;a href=&quot;migration#dispatch-and-broadcast-removed&quot;&gt;consulte esta secci&amp;oacute;n&lt;/a&gt; para obtener instrucciones de migraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="77d67a6f8225d0df00a5fc5a901f8f424ef25e4a" translate="yes" xml:space="preserve">
          <source>The syntax has changed slightly, so &lt;code&gt;/category/*tags&lt;/code&gt; for example, should be updated to &lt;code&gt;/category/:tags+&lt;/code&gt;.</source>
          <target state="translated">La sintaxis ha cambiado ligeramente, por lo que las &lt;code&gt;/category/*tags&lt;/code&gt; por ejemplo, deben actualizarse a &lt;code&gt;/category/:tags+&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="908884184f3cb4e8612386879bc128af52d0df9c" translate="yes" xml:space="preserve">
          <source>The target object cannot be a Vue instance, or the root data object of a Vue instance.</source>
          <target state="translated">El objeto objetivo no puede ser una instancia Vue,o el objeto de datos raíz de una instancia Vue.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
