<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="phoenix">
    <body>
      <group id="phoenix">
        <trans-unit id="1ba7c5fe02bf40bcee64e896b6cd0ddf2b71ca36" translate="yes" xml:space="preserve">
          <source>Broadcasts message on given topic, to a single node</source>
          <target state="translated">Emite un mensaje sobre un tema determinado,a un solo nodo</target>
        </trans-unit>
        <trans-unit id="da681bfc05555f8cac2c5c0c250337cfb697db18" translate="yes" xml:space="preserve">
          <source>Broadcasts message on given topic, to a single node.</source>
          <target state="translated">Emite un mensaje sobre un tema determinado,a un solo nodo.</target>
        </trans-unit>
        <trans-unit id="baaf416dc33a67c455e18b0b538a1ae5730c71d0" translate="yes" xml:space="preserve">
          <source>Broadcasts message on given topic.</source>
          <target state="translated">Emite un mensaje sobre un tema determinado.</target>
        </trans-unit>
        <trans-unit id="1edade3815a385432e990fc315fdd6e6c7f1f398" translate="yes" xml:space="preserve">
          <source>Broadcasts message to all but &lt;code&gt;from_pid&lt;/code&gt; on given topic</source>
          <target state="translated">Transmite un mensaje a todos menos a &lt;code&gt;from_pid&lt;/code&gt; sobre un tema determinado</target>
        </trans-unit>
        <trans-unit id="abc20b7ef90b188eb547d7592ee2970a9b5990ac" translate="yes" xml:space="preserve">
          <source>Broadcasts message to all but &lt;code&gt;from_pid&lt;/code&gt; on given topic, to a single node</source>
          <target state="translated">Transmite el mensaje a todos menos &lt;code&gt;from_pid&lt;/code&gt; sobre un tema determinado, a un solo nodo</target>
        </trans-unit>
        <trans-unit id="5000b61642c547143460a6ec6ae2892cc6264673" translate="yes" xml:space="preserve">
          <source>Broadcasts message to all but &lt;code&gt;from_pid&lt;/code&gt; on given topic, to a single node.</source>
          <target state="translated">Transmite el mensaje a todos menos &lt;code&gt;from_pid&lt;/code&gt; sobre un tema determinado, a un solo nodo.</target>
        </trans-unit>
        <trans-unit id="f95185ce0e58abc03f073ee2890ea397829aef49" translate="yes" xml:space="preserve">
          <source>Broadcasts message to all but &lt;code&gt;from_pid&lt;/code&gt; on given topic, to a single node. See &lt;a href=&quot;phoenix.pubsub#broadcast/3&quot;&gt;&lt;code&gt;Phoenix.PubSub.broadcast/3&lt;/code&gt;&lt;/a&gt; for usage details</source>
          <target state="translated">Transmite el mensaje a todos menos &lt;code&gt;from_pid&lt;/code&gt; sobre un tema determinado, a un solo nodo. Consulte &lt;a href=&quot;phoenix.pubsub#broadcast/3&quot;&gt; &lt;code&gt;Phoenix.PubSub.broadcast/3&lt;/code&gt; &lt;/a&gt; para obtener detalles de uso</target>
        </trans-unit>
        <trans-unit id="e35e10e515b1d4d457f40e4fc28748a3276eba76" translate="yes" xml:space="preserve">
          <source>Broadcasts message to all but &lt;code&gt;from_pid&lt;/code&gt; on given topic, to a single node. See &lt;a href=&quot;phoenix.pubsub#broadcast/3&quot;&gt;&lt;code&gt;Phoenix.PubSub.broadcast/3&lt;/code&gt;&lt;/a&gt; for usage details.</source>
          <target state="translated">Transmite el mensaje a todos menos &lt;code&gt;from_pid&lt;/code&gt; sobre un tema determinado, a un solo nodo. Consulte &lt;a href=&quot;phoenix.pubsub#broadcast/3&quot;&gt; &lt;code&gt;Phoenix.PubSub.broadcast/3&lt;/code&gt; &lt;/a&gt; para obtener detalles de uso.</target>
        </trans-unit>
        <trans-unit id="01215d649649c533e41cf42ecf38e606611b58b5" translate="yes" xml:space="preserve">
          <source>Broadcasts message to all but &lt;code&gt;from_pid&lt;/code&gt; on given topic.</source>
          <target state="translated">Transmite un mensaje a todos menos a &lt;code&gt;from_pid&lt;/code&gt; sobre un tema determinado.</target>
        </trans-unit>
        <trans-unit id="50197b0c83c20aa8e60756157bf676b3db8808b4" translate="yes" xml:space="preserve">
          <source>Broadcasts message to all but &lt;code&gt;from_pid&lt;/code&gt; on given topic. See &lt;a href=&quot;phoenix.pubsub#broadcast/3&quot;&gt;&lt;code&gt;Phoenix.PubSub.broadcast/3&lt;/code&gt;&lt;/a&gt; for usage details</source>
          <target state="translated">Transmite un mensaje a todos menos a &lt;code&gt;from_pid&lt;/code&gt; sobre un tema determinado. Consulte &lt;a href=&quot;phoenix.pubsub#broadcast/3&quot;&gt; &lt;code&gt;Phoenix.PubSub.broadcast/3&lt;/code&gt; &lt;/a&gt; para obtener detalles de uso</target>
        </trans-unit>
        <trans-unit id="4cfdbf59168f78dca54b31b9369a0c8edad45fdd" translate="yes" xml:space="preserve">
          <source>Broadcasts message to all but &lt;code&gt;from_pid&lt;/code&gt; on given topic. See &lt;a href=&quot;phoenix.pubsub#broadcast/3&quot;&gt;&lt;code&gt;Phoenix.PubSub.broadcast/3&lt;/code&gt;&lt;/a&gt; for usage details.</source>
          <target state="translated">Transmite un mensaje a todos menos a &lt;code&gt;from_pid&lt;/code&gt; sobre un tema determinado. Consulte &lt;a href=&quot;phoenix.pubsub#broadcast/3&quot;&gt; &lt;code&gt;Phoenix.PubSub.broadcast/3&lt;/code&gt; &lt;/a&gt; para obtener detalles de uso.</target>
        </trans-unit>
        <trans-unit id="4fd7d8094ed0d9f9ef4449c65cd3960417e593cb" translate="yes" xml:space="preserve">
          <source>Broadcasts the given topic, message, and dispatcher to all nodes in the cluster (except the current node itself).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6744e87a8381641b4cde9705dfef9ee31801e255" translate="yes" xml:space="preserve">
          <source>Broadcasts the given topic, message, and dispatcher to given node in the cluster (it may point to itself).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1646c55126644c477caa78a9ea90873bf19aa804" translate="yes" xml:space="preserve">
          <source>Browser address bar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="293663a57177870794dca0c1751bd172ff6f1289" translate="yes" xml:space="preserve">
          <source>Browsers implement a storage by using cookies. When a cookie is set in the response, the browser stores it and sends it in the next request.</source>
          <target state="translated">Los navegadores implementan un almacenamiento mediante el uso de cookies.Cuando se establece una cookie en la respuesta,el navegador la almacena y la envía en la siguiente solicitud.</target>
        </trans-unit>
        <trans-unit id="4759bf14d7a511508e86c343c934894b6e8db533" translate="yes" xml:space="preserve">
          <source>Builder</source>
          <target state="translated">Builder</target>
        </trans-unit>
        <trans-unit id="aaf7c10bf0a579e313e284fd389aa7a72d36e686" translate="yes" xml:space="preserve">
          <source>Builds a dynamic query expression</source>
          <target state="translated">Construye una expresión de consulta dinámica</target>
        </trans-unit>
        <trans-unit id="035a00799962cb493238a0a62db95718dd0c9cc9" translate="yes" xml:space="preserve">
          <source>Builds a dynamic query expression.</source>
          <target state="translated">Construye una expresión de consulta dinámica.</target>
        </trans-unit>
        <trans-unit id="a45afaca9c91a1c32a9e917eca46a915988a9f39" translate="yes" xml:space="preserve">
          <source>Builds a query for the association in the given struct or structs</source>
          <target state="translated">Construye una consulta para la asociación en la estructura o estructuras dadas</target>
        </trans-unit>
        <trans-unit id="407385801b1e85882900e84e2dc6b09dd54a44e4" translate="yes" xml:space="preserve">
          <source>Builds a query for the association in the given struct or structs.</source>
          <target state="translated">Construye una consulta para la asociación en la estructura o estructuras dadas.</target>
        </trans-unit>
        <trans-unit id="ced66bf8e021e21edfee88e91fd8bee8dc689ca4" translate="yes" xml:space="preserve">
          <source>Builds a socket</source>
          <target state="translated">Construye un enchufe</target>
        </trans-unit>
        <trans-unit id="178c31d3a9ba9e5ac041bf5f2cadc37f2969f838" translate="yes" xml:space="preserve">
          <source>Builds a socket for the given &lt;code&gt;socket_module&lt;/code&gt; with given id and assigns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00c87893c8631edef27f3833e1cc0e8b5a8eb090" translate="yes" xml:space="preserve">
          <source>Builds a socket for the given &lt;code&gt;socket_module&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd5e1205dff465d478f5f9f203d29a49c4f9a0ff" translate="yes" xml:space="preserve">
          <source>Builds a socket with given id and assigns</source>
          <target state="translated">Construye un enchufe con una identificación dada y asigna</target>
        </trans-unit>
        <trans-unit id="5643a36079c84d62291717bceeaf757f27684fd6" translate="yes" xml:space="preserve">
          <source>Builds a socket with given id and assigns.</source>
          <target state="translated">Construye un zócalo con identificación y asignaciones dadas.</target>
        </trans-unit>
        <trans-unit id="0c373ae3deb56451e196d972839aac1b1465029f" translate="yes" xml:space="preserve">
          <source>Builds a socket.</source>
          <target state="translated">Construye un enchufe.</target>
        </trans-unit>
        <trans-unit id="564d64573cd800ede3483cc31acb71f2c69da51b" translate="yes" xml:space="preserve">
          <source>Builds a struct from the given &lt;code&gt;assoc&lt;/code&gt; in &lt;code&gt;struct&lt;/code&gt;</source>
          <target state="translated">Construye una estructura a partir de la &lt;code&gt;assoc&lt;/code&gt; dada en una &lt;code&gt;struct&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="115a32a9ade32b44e729b841088b442f63153188" translate="yes" xml:space="preserve">
          <source>Builds a struct from the given &lt;code&gt;assoc&lt;/code&gt; in &lt;code&gt;struct&lt;/code&gt;.</source>
          <target state="translated">Crea una estructura a partir de la &lt;code&gt;assoc&lt;/code&gt; dada en &lt;code&gt;struct&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="30d7f140361dec14b5a789c34dc36ebfd35298f6" translate="yes" xml:space="preserve">
          <source>Built-in parsers</source>
          <target state="translated">Analizadores incorporados</target>
        </trans-unit>
        <trans-unit id="2ceca089ad01522602de57710545e1b64e4bc0c5" translate="yes" xml:space="preserve">
          <source>But this will:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea82b8be34e753ff3545fe49a87a72c5afed7850" translate="yes" xml:space="preserve">
          <source>But we can do even better.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e406fe622b4eda4c4473214a0111281d422b230" translate="yes" xml:space="preserve">
          <source>By abiding by the plug contract, we turn an application request into a series of explicit transformations. It doesn't stop there. To really see how effective Plug's design is, let's imagine a scenario where we need to check a series of conditions and then either redirect or halt if a condition fails. Without plug, we would end up with something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7243e4810458725050916d2e8378cd9f6cbc328c" translate="yes" xml:space="preserve">
          <source>By calling &lt;code&gt;validate_confirmation(changeset, :email)&lt;/code&gt;, this validation will check if both &quot;email&quot; and &quot;email_confirmation&quot; in the parameter map matches. Note this validation only looks at the parameters themselves, never the fields in the schema. As such as, the &quot;email_confirmation&quot; field does not need to be added as a virtual field in your schema.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e1685f14dba3d96347d988739d528f81ec0f3c1" translate="yes" xml:space="preserve">
          <source>By calling &lt;code&gt;validate_confirmation(changeset, :email)&lt;/code&gt;, this validation will check if both &amp;ldquo;email&amp;rdquo; and &amp;ldquo;email_confirmation&amp;rdquo; in the parameter map matches.</source>
          <target state="translated">Al llamar a &lt;code&gt;validate_confirmation(changeset, :email)&lt;/code&gt; ,: email) , esta validaci&amp;oacute;n verificar&amp;aacute; si tanto &amp;ldquo;email&amp;rdquo; como &amp;ldquo;email_confirmation&amp;rdquo; en el mapa de par&amp;aacute;metros coinciden.</target>
        </trans-unit>
        <trans-unit id="ca040f86a7a9a63986f64b5484e3ee6a9854bab7" translate="yes" xml:space="preserve">
          <source>By convention your LiveView modules and &lt;code&gt;leex&lt;/code&gt; templates should be placed in &lt;code&gt;lib/my_web_app/live/&lt;/code&gt; directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b322784d8ac8280252213806912d05a2861cc48" translate="yes" xml:space="preserve">
          <source>By default Phoenix accepts requests on port 4000. If we point our favorite web browser at &lt;a href=&quot;http://localhost:4000&quot;&gt;http://localhost:4000&lt;/a&gt;, we should see the Phoenix Framework welcome page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7458ccb7537b49709f337c42a52a8d18b06137c5" translate="yes" xml:space="preserve">
          <source>By default Phoenix provides &lt;code&gt;Phoenix.Socket.V2.JSONSerializer&lt;/code&gt; that encodes to JSON and decodes JSON messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b28227eb91b2bb0b9444ee88ec1ee79badeb0458" translate="yes" xml:space="preserve">
          <source>By default a signed or encrypted cookie is only valid for a day, unless a &lt;code&gt;:max_age&lt;/code&gt; is specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d25e3382cf972188531ef5c5e971bdc86ce025" translate="yes" xml:space="preserve">
          <source>By default clients expect HTTPS servers to listen on port 443. It is possible to specify a different port in HTTPS URLs, but for public servers it is often preferable to stick to the default. In particular, HSTS requires that the site be reachable on port 443 using HTTPS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="613c82ed180dfa43f74844e64751cc1af3c94f2d" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;ecto.migrate&lt;/code&gt; will execute all pending migrations. We can exercise more control over which migrations we run by specifying some options when we run the task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5882dbfbfa27da2fbdedfbff9e1a63f338d24168" translate="yes" xml:space="preserve">
          <source>By default, CSRF tokens are generated through &lt;a href=&quot;../plug/1.5.0/plug.csrfprotection&quot;&gt;&lt;code&gt;Plug.CSRFProtection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">De forma predeterminada, los tokens CSRF se generan a trav&amp;eacute;s de &lt;a href=&quot;../plug/1.5.0/plug.csrfprotection&quot;&gt; &lt;code&gt;Plug.CSRFProtection&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1465a06e31b181be9371171ee37758b5f937a222" translate="yes" xml:space="preserve">
          <source>By default, CSRF tokens are generated through &lt;a href=&quot;../plug/1.7.1/plug.csrfprotection&quot;&gt;&lt;code&gt;Plug.CSRFProtection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf44902d066daac00377756f269ce94379621c08" translate="yes" xml:space="preserve">
          <source>By default, Controllers render templates in a view with a similar name to the controller. For example, &lt;code&gt;MyApp.UserController&lt;/code&gt; will render templates inside the &lt;code&gt;MyApp.UserView&lt;/code&gt;. This information can be changed any time by using &lt;a href=&quot;#render/3&quot;&gt;&lt;code&gt;render/3&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#render/4&quot;&gt;&lt;code&gt;render/4&lt;/code&gt;&lt;/a&gt; or the &lt;a href=&quot;#put_view/2&quot;&gt;&lt;code&gt;put_view/2&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">De forma predeterminada, los controladores representan las plantillas en una vista con un nombre similar al del controlador. Por ejemplo, &lt;code&gt;MyApp.UserController&lt;/code&gt; renderizar&amp;aacute; plantillas dentro de &lt;code&gt;MyApp.UserView&lt;/code&gt; . Esta informaci&amp;oacute;n se puede cambiar en cualquier momento usando &lt;a href=&quot;#render/3&quot;&gt; &lt;code&gt;render/3&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#render/4&quot;&gt; &lt;code&gt;render/4&lt;/code&gt; &lt;/a&gt; o la funci&amp;oacute;n &lt;a href=&quot;#put_view/2&quot;&gt; &lt;code&gt;put_view/2&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="ff81ed45b7465077f0238ae3712c251b02aef2c1" translate="yes" xml:space="preserve">
          <source>By default, Controllers render templates in a view with a similar name to the controller. For example, &lt;code&gt;MyAppWeb.UserController&lt;/code&gt; will render templates inside the &lt;code&gt;MyAppWeb.UserView&lt;/code&gt;. This information can be changed any time by using the &lt;a href=&quot;#put_view/2&quot;&gt;&lt;code&gt;put_view/2&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb8b2e95adce99468ff6ee3a4e3e9908aa0c3110" translate="yes" xml:space="preserve">
          <source>By default, Ecto will generate a foreign key constraint with name &quot;comments_post_id_fkey&quot; (the name is configurable).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a268cfeb224349d5d90c3cd123f25da9e6f77fd2" translate="yes" xml:space="preserve">
          <source>By default, Ecto will generate a foreign key constraint with name &amp;ldquo;comments_post_id_fkey&amp;rdquo; (the name is configurable).</source>
          <target state="translated">De forma predeterminada, Ecto generar&amp;aacute; una restricci&amp;oacute;n de clave externa con el nombre &quot;comments_post_id_fkey&quot; (el nombre es configurable).</target>
        </trans-unit>
        <trans-unit id="fae9065c91907a74dc22def221d61623cee30465" translate="yes" xml:space="preserve">
          <source>By default, JSON encoding is used to broker messages to and from clients. A custom serializer may be given as a module which implements the &lt;code&gt;encode!/1&lt;/code&gt; and &lt;code&gt;decode!/2&lt;/code&gt; functions defined by the &lt;a href=&quot;phoenix.transports.serializer&quot;&gt;&lt;code&gt;Phoenix.Transports.Serializer&lt;/code&gt;&lt;/a&gt; behaviour.</source>
          <target state="translated">De forma predeterminada, la codificaci&amp;oacute;n JSON se utiliza para intercambiar mensajes hacia y desde clientes. Se puede proporcionar un serializador personalizado como m&amp;oacute;dulo que implementa las funciones &lt;code&gt;encode!/1&lt;/code&gt; y &lt;code&gt;decode!/2&lt;/code&gt; definidas por el comportamiento &lt;a href=&quot;phoenix.transports.serializer&quot;&gt; &lt;code&gt;Phoenix.Transports.Serializer&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a824dc4ed53d783f7a9975983ce7ef8b0506c3fb" translate="yes" xml:space="preserve">
          <source>By default, Phoenix applications depend on the following packages:</source>
          <target state="translated">Por defecto,las aplicaciones de Phoenix dependen de los siguientes paquetes:</target>
        </trans-unit>
        <trans-unit id="817d20452cd8be58fa983c6be832a701e9567224" translate="yes" xml:space="preserve">
          <source>By default, Phoenix implements this protocol for integers, binaries, atoms, and structs. For structs, a key &lt;code&gt;:id&lt;/code&gt; is assumed, but you may provide a specific implementation.</source>
          <target state="translated">Por defecto, Phoenix implementa este protocolo para enteros, binarios, &amp;aacute;tomos y estructuras. Para las estructuras, se asume una clave &lt;code&gt;:id&lt;/code&gt; , pero puede proporcionar una implementaci&amp;oacute;n espec&amp;iacute;fica.</target>
        </trans-unit>
        <trans-unit id="c77f53dd306fa81c812f2682c1de5d50bfe6516e" translate="yes" xml:space="preserve">
          <source>By default, Phoenix instruments the following events:</source>
          <target state="translated">Por defecto,Phoenix instrumenta los siguientes eventos:</target>
        </trans-unit>
        <trans-unit id="8ebcd9b5c38954d3163ccd8ecd9a117876eeae4e" translate="yes" xml:space="preserve">
          <source>By default, Phoenix supports both websockets and longpoll transports. For example:</source>
          <target state="translated">Por defecto,Phoenix admite tanto los transportes por Internet como los transportes de larga distancia.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="b9937c50f71e8e049a8c05f9b659bcecef64cbe5" translate="yes" xml:space="preserve">
          <source>By default, Phoenix supports both websockets and longpoll when invoking &lt;a href=&quot;phoenix.endpoint#socket/3&quot;&gt;&lt;code&gt;Phoenix.Endpoint.socket/3&lt;/code&gt;&lt;/a&gt; in your endpoint:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d60b41ba4d3734cc2576fa292a00f2228e477c4" translate="yes" xml:space="preserve">
          <source>By default, Plug and Phoenix will treat all exceptions as 500 errors. However, Plug provides a protocol called &lt;a href=&quot;../plug/plug.exception&quot;&gt;&lt;code&gt;Plug.Exception&lt;/code&gt;&lt;/a&gt; where we are able to customize the status and add actions that exception structs can returns on the debug error page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c1d03b3d76d48b7871af950bfe31f58d6df0dd3" translate="yes" xml:space="preserve">
          <source>By default, Plug tests checks for invalid header keys, e.g. header keys which include uppercase letters, and raises a &lt;a href=&quot;plug.conn.invalidheadererror&quot;&gt;&lt;code&gt;Plug.Conn.InvalidHeaderError&lt;/code&gt;&lt;/a&gt; when it finds one. To disable it, set :validate_header_keys_during_test to false on the app config.</source>
          <target state="translated">De forma predeterminada, Plug comprueba si hay claves de encabezado no v&amp;aacute;lidas, por ejemplo, claves de encabezado que incluyen letras may&amp;uacute;sculas, y genera un &lt;a href=&quot;plug.conn.invalidheadererror&quot;&gt; &lt;code&gt;Plug.Conn.InvalidHeaderError&lt;/code&gt; &lt;/a&gt; cuando encuentra una. Para deshabilitarlo, establezca: validate_header_keys_during_test en falso en la configuraci&amp;oacute;n de la aplicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="87e508d57d6e986caca30d7f130a816e1bf801e1" translate="yes" xml:space="preserve">
          <source>By default, a &lt;code&gt;.leex&lt;/code&gt; template does not track changes. Change tracking can be enabled by including a changed map in the assigns with the key &lt;code&gt;__changed__&lt;/code&gt; and passing &lt;code&gt;true&lt;/code&gt; to the dynamic parts. The map should contain the name of any changed field as key and the boolean true as value. If a field is not listed in &lt;code&gt;:changed&lt;/code&gt;, then it is always considered unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab07041e506b7bff5fdaf86b0c2088b2b5296fa8" translate="yes" xml:space="preserve">
          <source>By default, a schema will automatically generate a primary key which is named &lt;code&gt;id&lt;/code&gt; and of type &lt;code&gt;:integer&lt;/code&gt;. The &lt;code&gt;field&lt;/code&gt; macro defines a field in the schema with given name and type. &lt;code&gt;has_many&lt;/code&gt; associates many posts with the user schema. Schemas are regular structs and can be created and manipulated directly using Elixir&amp;rsquo;s struct API:</source>
          <target state="translated">De forma predeterminada, un esquema generar&amp;aacute; autom&amp;aacute;ticamente una clave principal que se denomina &lt;code&gt;id&lt;/code&gt; y de tipo &lt;code&gt;:integer&lt;/code&gt; . La macro de &lt;code&gt;field&lt;/code&gt; define un campo en el esquema con un nombre y un tipo. &lt;code&gt;has_many&lt;/code&gt; asocia muchas publicaciones con el esquema de usuario. Los esquemas son estructuras regulares y se pueden crear y manipular directamente usando la API de estructura de Elixir:</target>
        </trans-unit>
        <trans-unit id="d5de1c1bf1cac87b445c38e02f249e16480fea34" translate="yes" xml:space="preserve">
          <source>By default, a schema will automatically generate a primary key which is named &lt;code&gt;id&lt;/code&gt; and of type &lt;code&gt;:integer&lt;/code&gt;. The &lt;code&gt;field&lt;/code&gt; macro defines a field in the schema with given name and type. &lt;code&gt;has_many&lt;/code&gt; associates many posts with the user schema. Schemas are regular structs and can be created and manipulated directly using Elixir's struct API:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61acb587c73bad3e159ceb6a0a03220e2c7382be" translate="yes" xml:space="preserve">
          <source>By default, all LiveView assigns are stateful, which enables change tracking and stateful interactions. In some cases, it's useful to mark assigns as temporary, meaning they will be reset to a default value after each update. This allows otherwise large but infrequently updated values to be discarded after the client has been patched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c4aff495dda98b8a45419a1da698d7619905941" translate="yes" xml:space="preserve">
          <source>By default, all forms marked with &lt;code&gt;phx-change&lt;/code&gt; will recover input values automatically after the user has reconnected or the LiveView has remounted after a crash. This is achieved by the client triggering the same &lt;code&gt;phx-change&lt;/code&gt; to the server as soon as the mount has been completed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdb33692f4f922ef8e7384f9894f6b6f566404f3" translate="yes" xml:space="preserve">
          <source>By default, both Postgres and MySQL return the amount of entries inserted on &lt;a href=&quot;#c:insert_all/3&quot;&gt;&lt;code&gt;insert_all/3&lt;/code&gt;&lt;/a&gt;. However, when the &lt;code&gt;:on_conflict&lt;/code&gt; option is specified, Postgres will only return a row if it was affected while MySQL returns at least the number of entries attempted.</source>
          <target state="translated">De forma predeterminada, tanto Postgres como MySQL devuelven la cantidad de entradas insertadas en &lt;a href=&quot;#c:insert_all/3&quot;&gt; &lt;code&gt;insert_all/3&lt;/code&gt; &lt;/a&gt; . Sin embargo, cuando se especifica la opci&amp;oacute;n &lt;code&gt;:on_conflict&lt;/code&gt; , Postgres solo devolver&amp;aacute; una fila si se vio afectada, mientras que MySQL devuelve al menos el n&amp;uacute;mero de entradas intentadas.</target>
        </trans-unit>
        <trans-unit id="59909984c65d4777ed0f3ee8c76c0bcc4eb4ad05" translate="yes" xml:space="preserve">
          <source>By default, both Postgres and MySQL will return the number of entries inserted on &lt;a href=&quot;#c:insert_all/3&quot;&gt;&lt;code&gt;insert_all/3&lt;/code&gt;&lt;/a&gt;. However, when the &lt;code&gt;:on_conflict&lt;/code&gt; option is specified, Postgres and MySQL will return different results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de233bf5f3f9c757c065d4cd8e84316010e764d2" translate="yes" xml:space="preserve">
          <source>By default, broadcasted events are pushed directly to the client, but intercepting events gives your channel a chance to customize the event for the client to append extra information or filter the message from being delivered.</source>
          <target state="translated">Por defecto,los eventos emitidos se envían directamente al cliente,pero la interceptación de eventos le da a su canal la oportunidad de personalizar el evento para que el cliente añada información extra o filtre el mensaje para que no sea entregado.</target>
        </trans-unit>
        <trans-unit id="254a23963f3f147ec81ad839e431fa169765b357" translate="yes" xml:space="preserve">
          <source>By default, channel &lt;code&gt;&quot;join&quot;&lt;/code&gt; and &lt;code&gt;&quot;handle_in&quot;&lt;/code&gt; events are logged, using the level &lt;code&gt;:info&lt;/code&gt; and &lt;code&gt;:debug&lt;/code&gt;, respectively. Logs can be customized per event type or disabled by setting the &lt;code&gt;:log_join&lt;/code&gt; and &lt;code&gt;:log_handle_in&lt;/code&gt; options when using &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Phoenix.Channel&lt;/code&gt;&lt;/a&gt;. For example, the following configuration logs join events as &lt;code&gt;:info&lt;/code&gt;, but disables logging for incoming events:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8484b7b776d9e09863af72b8186c36040033470" translate="yes" xml:space="preserve">
          <source>By default, channel &lt;code&gt;&quot;join&quot;&lt;/code&gt; and &lt;code&gt;&quot;handle_in&quot;&lt;/code&gt; events are logged, using the level &lt;code&gt;:info&lt;/code&gt; and &lt;code&gt;:debug&lt;/code&gt;, respectively. Logs can be customized per event type or disabled by setting the &lt;code&gt;:log_join&lt;/code&gt; and &lt;code&gt;:log_handle_in&lt;/code&gt; options when using &lt;a href=&quot;phoenix.channel#content&quot;&gt;&lt;code&gt;Phoenix.Channel&lt;/code&gt;&lt;/a&gt;. For example, the following configuration logs join events as &lt;code&gt;:info&lt;/code&gt;, but disables logging for incoming events:</source>
          <target state="translated">De forma predeterminada, los eventos de canal &lt;code&gt;&quot;join&quot;&lt;/code&gt; y &lt;code&gt;&quot;handle_in&quot;&lt;/code&gt; se registran, utilizando el nivel &lt;code&gt;:info&lt;/code&gt; y &lt;code&gt;:debug&lt;/code&gt; , respectivamente. Los registros se pueden personalizar por tipo de evento o deshabilitar configurando las &lt;code&gt;:log_join&lt;/code&gt; y &lt;code&gt;:log_handle_in&lt;/code&gt; cuando se usa &lt;a href=&quot;phoenix.channel#content&quot;&gt; &lt;code&gt;Phoenix.Channel&lt;/code&gt; &lt;/a&gt; . Por ejemplo, los siguientes registros de configuraci&amp;oacute;n se unen a eventos como &lt;code&gt;:info&lt;/code&gt; rmaci&amp;oacute;n , pero deshabilita el registro de eventos entrantes:</target>
        </trans-unit>
        <trans-unit id="1ca53f1e429a7e8e5d0c5c79ee63faddaf99433f" translate="yes" xml:space="preserve">
          <source>By default, data output in templates is not considered safe:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77127032563b63331ed75935691a8dae8644ce22" translate="yes" xml:space="preserve">
          <source>By default, it looks for an implementation of the protocol, otherwise checks if the exception has the &lt;code&gt;:plug_status&lt;/code&gt; field or simply returns 500.</source>
          <target state="translated">De forma predeterminada, busca una implementaci&amp;oacute;n del protocolo; de lo contrario, comprueba si la excepci&amp;oacute;n tiene el campo &lt;code&gt;:plug_status&lt;/code&gt; o simplemente devuelve 500.</target>
        </trans-unit>
        <trans-unit id="ce7df1ce09d3b95a15af132d0783bd3b431787b6" translate="yes" xml:space="preserve">
          <source>By default, it will keep the latest version and 2 previous versions as well as any digest created in the last hour.</source>
          <target state="translated">Por defecto,mantendrá la última versión y 2 versiones anteriores,así como cualquier resumen creado en la última hora.</target>
        </trans-unit>
        <trans-unit id="11600f5b12cbb0d0ad9196a9238995486e684451" translate="yes" xml:space="preserve">
          <source>By default, mix phoenix.gen.secret generates a key 64 characters long.</source>
          <target state="translated">Por defecto,la mezcla phoenix.gen.secret genera una clave de 64 caracteres de largo.</target>
        </trans-unit>
        <trans-unit id="e92996c56130e46f9f7c2c9e0e901205927e690b" translate="yes" xml:space="preserve">
          <source>By default, mix phx.gen.secret generates a key 64 characters long.</source>
          <target state="translated">Por defecto,mix phx.gen.secret genera una clave de 64 caracteres de longitud.</target>
        </trans-unit>
        <trans-unit id="353508c1c264732db28501a9fc2634a94f25d0dc" translate="yes" xml:space="preserve">
          <source>By default, only the headers &quot;accept&quot;, &quot;accept-language&quot;, and &quot;authorization&quot; are recycled. However, a custom set of headers can be specified by passing a list of strings representing its names as the second argument of the function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32ca330b1e616b81662ec4d4ef124c9e56ff4955" translate="yes" xml:space="preserve">
          <source>By default, the bound element will be the event listener, but a window-level binding may be provided via &lt;code&gt;phx-window-keydown&lt;/code&gt; or &lt;code&gt;phx-window-keyup&lt;/code&gt;, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9e053035a992ad440134b8fe6bb2bb506296826" translate="yes" xml:space="preserve">
          <source>By default, the connection&amp;rsquo;s query params are included in the generated path. Custom query params may be used instead by providing a map of your own params. You may also retrieve only the request path by passing an empty map of params.</source>
          <target state="translated">De forma predeterminada, los par&amp;aacute;metros de consulta de la conexi&amp;oacute;n se incluyen en la ruta generada. En su lugar, se pueden utilizar par&amp;aacute;metros de consulta personalizados proporcionando un mapa de sus propios par&amp;aacute;metros. Tambi&amp;eacute;n puede recuperar solo la ruta de solicitud pasando un mapa vac&amp;iacute;o de par&amp;aacute;metros.</target>
        </trans-unit>
        <trans-unit id="dc77640e4a2742fe3831fd03e1b3f00201d9e0fe" translate="yes" xml:space="preserve">
          <source>By default, the controller and view will be namespaced by the schema name. You can customize the web module namespace by passing the &lt;code&gt;--web&lt;/code&gt; flag with a module name, for example:</source>
          <target state="translated">De forma predeterminada, el controlador y la vista estar&amp;aacute;n separados por el nombre del esquema. Puede personalizar el espacio de nombres del m&amp;oacute;dulo web pasando la &lt;code&gt;--web&lt;/code&gt; con un nombre de m&amp;oacute;dulo, por ejemplo:</target>
        </trans-unit>
        <trans-unit id="b870fd1613d7bc837c7fb85e712119ea8176da56" translate="yes" xml:space="preserve">
          <source>By default, the derived implementation will also use the &lt;code&gt;:id&lt;/code&gt; key. In case the user does not contain an &lt;code&gt;:id&lt;/code&gt; key, the key can be specified with an option:</source>
          <target state="translated">De forma predeterminada, la implementaci&amp;oacute;n derivada tambi&amp;eacute;n utilizar&amp;aacute; la clave &lt;code&gt;:id&lt;/code&gt; . En caso de que el usuario no contenga una clave &lt;code&gt;:id&lt;/code&gt; , la clave se puede especificar con una opci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="6be2b1eb23fbc16e7a226a21b99ee26314570865" translate="yes" xml:space="preserve">
          <source>By default, the following classes are applied to the LiveView's parent container:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="187e85e94e6e51510fec3d96b7fd25a22058656c" translate="yes" xml:space="preserve">
          <source>By default, the given path is a websocket upgrade endpoint, with long-polling fallback. The transports can be configured within the Socket handler. See &lt;a href=&quot;phoenix.socket&quot;&gt;&lt;code&gt;Phoenix.Socket&lt;/code&gt;&lt;/a&gt; for more information on defining socket handlers.</source>
          <target state="translated">De forma predeterminada, la ruta proporcionada es un punto final de actualizaci&amp;oacute;n de websocket, con respaldo de sondeo largo. Los transportes se pueden configurar dentro del controlador de Socket. Consulte &lt;a href=&quot;phoenix.socket&quot;&gt; &lt;code&gt;Phoenix.Socket&lt;/code&gt; &lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre c&amp;oacute;mo definir controladores de socket.</target>
        </trans-unit>
        <trans-unit id="8cffecad488a51df44b450abba6b6b9f9d67a8a9" translate="yes" xml:space="preserve">
          <source>By default, the supervisor also starts &lt;a href=&quot;http://hexdocs.pm/telemetry_poller&quot;&gt;&lt;code&gt;:telemetry_poller&lt;/code&gt;&lt;/a&gt;. By simply adding &lt;code&gt;:telemetry_poller&lt;/code&gt; as a dependency, you can receive VM-related events on a specified interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9160dbef59f808f39d5df46c819a7932402cb60" translate="yes" xml:space="preserve">
          <source>By default, the table name for the migration and schema will be the plural name provided for the resource. To customize this value, a &lt;code&gt;--table&lt;/code&gt; option may be provided. For example:</source>
          <target state="translated">De forma predeterminada, el nombre de la tabla para la migraci&amp;oacute;n y el esquema ser&amp;aacute; el nombre en plural proporcionado para el recurso. Para personalizar este valor, se puede proporcionar una opci&amp;oacute;n &lt;code&gt;--table&lt;/code&gt; . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="aed634d9ceb20a9d053ba889b712738bbbb07763" translate="yes" xml:space="preserve">
          <source>By default, the type is sent as itself, without calling dumping to keep the higher level representation. But it can be set to &lt;code&gt;:dump&lt;/code&gt; so that it is dumped before being encoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65eb1af1ae0923f8dbb330cf00e76aff94323f0f" translate="yes" xml:space="preserve">
          <source>By default, you can generate a route to this LiveView by using the &lt;code&gt;live_path&lt;/code&gt; helper:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27e1f8f9c425229e754f86165235a0e052207991" translate="yes" xml:space="preserve">
          <source>By defining a schema, Ecto automatically defines a struct with the schema fields:</source>
          <target state="translated">Al definir un esquema,Ecto define automáticamente una estructura con los campos del esquema:</target>
        </trans-unit>
        <trans-unit id="3a48f1bb556b62393b3498d5b941e3dd785c0778" translate="yes" xml:space="preserve">
          <source>By defining our own clause in &lt;code&gt;render&lt;/code&gt;, it takes higher priority than the template, but the template is still there, which you can verify by simply removing the newly added clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7ba6941e0aa76ed33228ec903b82bbbca9adfcd" translate="yes" xml:space="preserve">
          <source>By having structs as data, we guarantee they are light-weight, serializable structures. In many languages, the data is often represented by large, complex objects, with entwined state transactions, which makes serialization, maintenance and understanding hard;</source>
          <target state="translated">Al tener estructuras como datos,garantizamos que son estructuras ligeras y serializables.En muchos idiomas,los datos suelen estar representados por objetos grandes y complejos,con transacciones de estado entrelazadas,lo que dificulta la serialización,el mantenimiento y la comprensión;</target>
        </trans-unit>
        <trans-unit id="f4bc19b49e4a07e4321e1dff4210dbd266193562" translate="yes" xml:space="preserve">
          <source>By implementing the Plug API, &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Plug.Builder&lt;/code&gt;&lt;/a&gt; guarantees this module is a plug and can be handed to a web server or used as part of another pipeline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d18c6cc02b3eab9bdf12392d843e6b7776d6e77" translate="yes" xml:space="preserve">
          <source>By implementing the Plug API, &lt;a href=&quot;plug.builder#content&quot;&gt;&lt;code&gt;Plug.Builder&lt;/code&gt;&lt;/a&gt; guarantees this module is a plug and can be handed to a web server or used as part of another pipeline.</source>
          <target state="translated">Al implementar la API de Plug, &lt;a href=&quot;plug.builder#content&quot;&gt; &lt;code&gt;Plug.Builder&lt;/code&gt; &lt;/a&gt; garantiza que este m&amp;oacute;dulo es un plug y puede entregarse a un servidor web o usarse como parte de otra canalizaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="c6de9b3db655a99c3d4b4309b93931d50969516f" translate="yes" xml:space="preserve">
          <source>By joining the channel, we can interact with it directly. The given channel is joined in a separate process which is linked to the test process.</source>
          <target state="translated">Al entrar en el canal,podemos interactuar con él directamente.El canal dado se une en un proceso separado que está vinculado al proceso de prueba.</target>
        </trans-unit>
        <trans-unit id="15d49075ed5c0e6dd1b4db97f04e6473b219d915" translate="yes" xml:space="preserve">
          <source>By looking at &lt;code&gt;templates&lt;/code&gt; and &lt;code&gt;views&lt;/code&gt; directories, we can see Phoenix provides features for handling layouts and error pages out of the box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d6b0b5f2d1997a9e84246f2b1cde0fcfc91f0a5" translate="yes" xml:space="preserve">
          <source>By passing the &lt;code&gt;:read_only&lt;/code&gt; option, none of the functions that perform write operations, such as &lt;a href=&quot;#c:insert/2&quot;&gt;&lt;code&gt;insert/2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c:insert_all/3&quot;&gt;&lt;code&gt;insert_all/3&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#c:update_all/3&quot;&gt;&lt;code&gt;update_all/3&lt;/code&gt;&lt;/a&gt;, and friends will be defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc5e58f6ff24d96d8e1ca4804c017b524da88c87" translate="yes" xml:space="preserve">
          <source>By pattern matching on the result we can differentiate different conditions:</source>
          <target state="translated">Mediante la coincidencia de patrones en el resultado podemos diferenciar las diferentes condiciones:</target>
        </trans-unit>
        <trans-unit id="cd7b6be11c6c28e20310f4737672f3064202b8e2" translate="yes" xml:space="preserve">
          <source>By preloading an association using a custom query you can confine the behavior of &lt;a href=&quot;#cast_assoc/3&quot;&gt;&lt;code&gt;cast_assoc/3&lt;/code&gt;&lt;/a&gt;. This opens up the possibility to work on a subset of the data, instead of all associations in the database.</source>
          <target state="translated">Al precargar una asociaci&amp;oacute;n mediante una consulta personalizada, puede limitar el comportamiento de &lt;a href=&quot;#cast_assoc/3&quot;&gt; &lt;code&gt;cast_assoc/3&lt;/code&gt; &lt;/a&gt; . Esto abre la posibilidad de trabajar en un subconjunto de datos, en lugar de todas las asociaciones en la base de datos.</target>
        </trans-unit>
        <trans-unit id="8e673cd4ab0a0e5f4be3dfe7dce5d6983c785cd5" translate="yes" xml:space="preserve">
          <source>By subscribing to the topic, we can use &lt;a href=&quot;#assert_broadcast/3&quot;&gt;&lt;code&gt;assert_broadcast/3&lt;/code&gt;&lt;/a&gt; to verify a message has been sent through the pubsub layer.</source>
          <target state="translated">Al suscribirnos al tema, podemos usar &lt;a href=&quot;#assert_broadcast/3&quot;&gt; &lt;code&gt;assert_broadcast/3&lt;/code&gt; &lt;/a&gt; para verificar que se haya enviado un mensaje a trav&amp;eacute;s de la capa pubsub.</target>
        </trans-unit>
        <trans-unit id="884dc2f8b0b466fe198be5c7bd6bd41e505f7e51" translate="yes" xml:space="preserve">
          <source>CA Issued Certificate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30e8b6877367ea06f0a354b20f564c6bed06a78f" translate="yes" xml:space="preserve">
          <source>CSRF Protection</source>
          <target state="translated">Protección del CSRF</target>
        </trans-unit>
        <trans-unit id="c9df88380d1dd3b25943e604a5a2f036a0a907bb" translate="yes" xml:space="preserve">
          <source>CSRF protection</source>
          <target state="translated">Protección del FCRS</target>
        </trans-unit>
        <trans-unit id="d5fee4e9e6db4d2f1fdc95f2b2f4a8761758bd65" translate="yes" xml:space="preserve">
          <source>Cache mechanisms</source>
          <target state="translated">Mecanismos de caché</target>
        </trans-unit>
        <trans-unit id="f09eed70310275a028d61c137230810723d6a233" translate="yes" xml:space="preserve">
          <source>Cache query metadata</source>
          <target state="translated">Metadatos de consulta de la memoria caché</target>
        </trans-unit>
        <trans-unit id="ecc64d6e4ad82a6e9d7bfc0b0383a45d3af2b452" translate="yes" xml:space="preserve">
          <source>Cache query metadata that is passed to &lt;a href=&quot;#c:execute/5&quot;&gt;&lt;code&gt;execute/5&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48398225bbff206393302c005c06fcbdd9039c32" translate="yes" xml:space="preserve">
          <source>Calculate the given &lt;code&gt;aggregate&lt;/code&gt; over the given &lt;code&gt;field&lt;/code&gt;</source>
          <target state="translated">Calcule el &lt;code&gt;aggregate&lt;/code&gt; dado sobre el &lt;code&gt;field&lt;/code&gt; dado</target>
        </trans-unit>
        <trans-unit id="b72c65ee7e44cc973d557eb132bd0a8e45fcd8e0" translate="yes" xml:space="preserve">
          <source>Calculate the given &lt;code&gt;aggregate&lt;/code&gt; over the given &lt;code&gt;field&lt;/code&gt;.</source>
          <target state="translated">Calcule el &lt;code&gt;aggregate&lt;/code&gt; dado sobre el &lt;code&gt;field&lt;/code&gt; dado .</target>
        </trans-unit>
        <trans-unit id="fef3963b2932aeb8fa841bfd89ca5f61f2bbc9b4" translate="yes" xml:space="preserve">
          <source>Calculate the given &lt;code&gt;aggregate&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f33ada32fda260381cb7928e58ebbc783a59470" translate="yes" xml:space="preserve">
          <source>Calculates the average for the given entry</source>
          <target state="translated">Calcula el promedio para la entrada dada</target>
        </trans-unit>
        <trans-unit id="8baedf935b7484427c37b3b58d7a6070653c5e22" translate="yes" xml:space="preserve">
          <source>Calculates the average for the given entry.</source>
          <target state="translated">Calcula el promedio para la entrada dada.</target>
        </trans-unit>
        <trans-unit id="a460f7839239c78344810ed4fdb957f96e65e250" translate="yes" xml:space="preserve">
          <source>Calculates the maximum for the given entry</source>
          <target state="translated">Calcula el máximo para la entrada dada</target>
        </trans-unit>
        <trans-unit id="afe02f125fcee88cdab42d83a2afbfd814eca2cd" translate="yes" xml:space="preserve">
          <source>Calculates the maximum for the given entry.</source>
          <target state="translated">Calcula el máximo para la entrada dada.</target>
        </trans-unit>
        <trans-unit id="95498afa39bf4d0b12b115d63e8fce6b69579abe" translate="yes" xml:space="preserve">
          <source>Calculates the minimum for the given entry</source>
          <target state="translated">Calcula el mínimo para la entrada dada</target>
        </trans-unit>
        <trans-unit id="2d13608c2125ea28acdc9d31a66697e03fe7c6a7" translate="yes" xml:space="preserve">
          <source>Calculates the minimum for the given entry.</source>
          <target state="translated">Calcula el mínimo para la entrada dada.</target>
        </trans-unit>
        <trans-unit id="135e5a276ffc4d7b681841fc4f3cad6bc49c7edc" translate="yes" xml:space="preserve">
          <source>Calculates the sum for the given entry</source>
          <target state="translated">Calcula la suma para la entrada dada</target>
        </trans-unit>
        <trans-unit id="dc20f2648334718a3dd5af85d7705b07facd7151" translate="yes" xml:space="preserve">
          <source>Calculates the sum for the given entry.</source>
          <target state="translated">Calcula la suma para la entrada dada.</target>
        </trans-unit>
        <trans-unit id="9c55980c2341959b5f21335c4bd5c0891fa74196" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;ecto.type#c:embed_as/1&quot;&gt;&lt;code&gt;Ecto.Type.embed_as/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec3adcd8037a9604f9cd349ab4d20dc5a17412f7" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;ecto.type#c:equal?/2&quot;&gt;&lt;code&gt;Ecto.Type.equal?/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d12af7746d2dd412b78d3fae8ef21a84dd3affb8" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;https://hexdocs.pm/elixir/Access.html#c:fetch/2&quot;&gt;&lt;code&gt;Access.fetch/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Implementaci&amp;oacute;n de &lt;a href=&quot;https://hexdocs.pm/elixir/Access.html#c:fetch/2&quot;&gt; &lt;code&gt;Access.fetch/2&lt;/code&gt; &lt;/a&gt; llamada para Access.fetch / 2 .</target>
        </trans-unit>
        <trans-unit id="54edfce776f3272812893f8747f90228568372f7" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;https://hexdocs.pm/elixir/Access.html#c:get_and_update/3&quot;&gt;&lt;code&gt;Access.get_and_update/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Implementaci&amp;oacute;n de &lt;a href=&quot;https://hexdocs.pm/elixir/Access.html#c:get_and_update/3&quot;&gt; &lt;code&gt;Access.get_and_update/3&lt;/code&gt; &lt;/a&gt; llamada para Access.get_and_update / 3 .</target>
        </trans-unit>
        <trans-unit id="f613055a34d5b0cc54d3942a8067e73b97f688f0" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;https://hexdocs.pm/elixir/Access.html#c:pop/2&quot;&gt;&lt;code&gt;Access.pop/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Implementaci&amp;oacute;n de &lt;a href=&quot;https://hexdocs.pm/elixir/Access.html#c:pop/2&quot;&gt; &lt;code&gt;Access.pop/2&lt;/code&gt; &lt;/a&gt; llamada para Access.pop / 2 .</target>
        </trans-unit>
        <trans-unit id="d0f41563b10c703cb7b2e9ba5e91a7b2ccbecf74" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;https://hexdocs.pm/elixir/Application.html#c:start/2&quot;&gt;&lt;code&gt;Application.start/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Implementaci&amp;oacute;n de devoluci&amp;oacute;n de llamada para &lt;a href=&quot;https://hexdocs.pm/elixir/Application.html#c:start/2&quot;&gt; &lt;code&gt;Application.start/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d39e0ddeef9186f868e4ff28dde24c9443d6a437" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;https://hexdocs.pm/elixir/Exception.html#c:blame/2&quot;&gt;&lt;code&gt;Exception.blame/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68c58dafe95ef3747136785a32cb0be3190d5a95" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;https://hexdocs.pm/elixir/Exception.html#c:exception/1&quot;&gt;&lt;code&gt;Exception.exception/1&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Implementaci&amp;oacute;n de devoluci&amp;oacute;n de llamada para &lt;a href=&quot;https://hexdocs.pm/elixir/Exception.html#c:exception/1&quot;&gt; &lt;code&gt;Exception.exception/1&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f2aeddeb86c19d9930349a6b7fa2dda563422a7d" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;https://hexdocs.pm/elixir/Exception.html#c:exception/1&quot;&gt;&lt;code&gt;Exception.exception/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Implementaci&amp;oacute;n de devoluci&amp;oacute;n de llamada para &lt;a href=&quot;https://hexdocs.pm/elixir/Exception.html#c:exception/1&quot;&gt; &lt;code&gt;Exception.exception/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="032a4efc6854da59dd9e469ea8f84cad45395207" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;https://hexdocs.pm/elixir/Exception.html#c:message/1&quot;&gt;&lt;code&gt;Exception.message/1&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Implementaci&amp;oacute;n de devoluci&amp;oacute;n de llamada para &lt;a href=&quot;https://hexdocs.pm/elixir/Exception.html#c:message/1&quot;&gt; &lt;code&gt;Exception.message/1&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1218946b31c04832e0e62cf1bdb9c7d81085c97b" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;https://hexdocs.pm/elixir/Exception.html#c:message/1&quot;&gt;&lt;code&gt;Exception.message/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Implementaci&amp;oacute;n de devoluci&amp;oacute;n de llamada para &lt;a href=&quot;https://hexdocs.pm/elixir/Exception.html#c:message/1&quot;&gt; &lt;code&gt;Exception.message/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="043fff358e410d756d69b64693e0aee209f5665a" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:init/1&quot;&gt;&lt;code&gt;GenServer.init/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Implementaci&amp;oacute;n de &lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html#c:init/1&quot;&gt; &lt;code&gt;GenServer.init/1&lt;/code&gt; &lt;/a&gt; llamada para GenServer.init / 1 .</target>
        </trans-unit>
        <trans-unit id="3cdf88d24ddc0b7e4c16c41e315078007b184333" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html#c:init/1&quot;&gt;&lt;code&gt;Supervisor.init/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Implementaci&amp;oacute;n de devoluci&amp;oacute;n de llamada para &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html#c:init/1&quot;&gt; &lt;code&gt;Supervisor.init/1&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8f43379e08ef8f5a8ca98adb45861d96f7192f12" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Task.html#c:run/1&quot;&gt;&lt;code&gt;Mix.Task.run/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e47ec3f11d8a914105cb3fef07dbb6ed1c63a4d8" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;phoenix.socket.transport#c:default_config/0&quot;&gt;&lt;code&gt;Phoenix.Socket.Transport.default_config/0&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Implementaci&amp;oacute;n de devoluci&amp;oacute;n de llamada para &lt;a href=&quot;phoenix.socket.transport#c:default_config/0&quot;&gt; &lt;code&gt;Phoenix.Socket.Transport.default_config/0&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a1708e191eed33380ca67b6028fd8573fdbb644c" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;phoenix.template.engine#c:compile/2&quot;&gt;&lt;code&gt;Phoenix.Template.Engine.compile/2&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Implementaci&amp;oacute;n de devoluci&amp;oacute;n de llamada para &lt;a href=&quot;phoenix.template.engine#c:compile/2&quot;&gt; &lt;code&gt;Phoenix.Template.Engine.compile/2&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ea5ea27a2af7e749a7ba629623c5843bcae054f6" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;phoenix.template.engine#c:compile/2&quot;&gt;&lt;code&gt;Phoenix.Template.Engine.compile/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Implementaci&amp;oacute;n de devoluci&amp;oacute;n de llamada para &lt;a href=&quot;phoenix.template.engine#c:compile/2&quot;&gt; &lt;code&gt;Phoenix.Template.Engine.compile/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4b21277ad35de9d0bbc697bf34687df68d1dd7ec" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;plug#c:call/2&quot;&gt;&lt;code&gt;Plug.call/2&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Implementaci&amp;oacute;n de &lt;a href=&quot;plug#c:call/2&quot;&gt; &lt;code&gt;Plug.call/2&lt;/code&gt; &lt;/a&gt; llamada para Plug.call/2</target>
        </trans-unit>
        <trans-unit id="ae8f3a29268323ceeca5abc36851ba2c103c086b" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;plug#c:call/2&quot;&gt;&lt;code&gt;Plug.call/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Implementaci&amp;oacute;n de &lt;a href=&quot;plug#c:call/2&quot;&gt; &lt;code&gt;Plug.call/2&lt;/code&gt; &lt;/a&gt; llamada para Plug.call/2 .</target>
        </trans-unit>
        <trans-unit id="6712d82f4b88479c43c2c73eaf562611fb7e23fa" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;plug#c:init/1&quot;&gt;&lt;code&gt;Plug.init/1&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Implementaci&amp;oacute;n de &lt;a href=&quot;plug#c:init/1&quot;&gt; &lt;code&gt;Plug.init/1&lt;/code&gt; &lt;/a&gt; llamada para Plug.init / 1</target>
        </trans-unit>
        <trans-unit id="022af9f513221b7f1f63492515611dcd449eb5e8" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;plug#c:init/1&quot;&gt;&lt;code&gt;Plug.init/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Implementaci&amp;oacute;n de &lt;a href=&quot;plug#c:init/1&quot;&gt; &lt;code&gt;Plug.init/1&lt;/code&gt; &lt;/a&gt; llamada para Plug.init / 1 .</target>
        </trans-unit>
        <trans-unit id="6457b9900e28960d880713e0be6cfde4ec5db930" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;plug.parsers#c:init/1&quot;&gt;&lt;code&gt;Plug.Parsers.init/1&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Implementaci&amp;oacute;n de &lt;a href=&quot;plug.parsers#c:init/1&quot;&gt; &lt;code&gt;Plug.Parsers.init/1&lt;/code&gt; &lt;/a&gt; llamada para Plug.Parsers.init / 1</target>
        </trans-unit>
        <trans-unit id="c66ea58bed6e4b9609840eaf39b2b719bd12d7ac" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;plug.parsers#c:init/1&quot;&gt;&lt;code&gt;Plug.Parsers.init/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Implementaci&amp;oacute;n de &lt;a href=&quot;plug.parsers#c:init/1&quot;&gt; &lt;code&gt;Plug.Parsers.init/1&lt;/code&gt; &lt;/a&gt; llamada para Plug.Parsers.init / 1 .</target>
        </trans-unit>
        <trans-unit id="99de215287a8ed32e9b3a733cfa29574666cd932" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;plug.parsers#c:parse/5&quot;&gt;&lt;code&gt;Plug.Parsers.parse/5&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Implementaci&amp;oacute;n de &lt;a href=&quot;plug.parsers#c:parse/5&quot;&gt; &lt;code&gt;Plug.Parsers.parse/5&lt;/code&gt; &lt;/a&gt; llamada para Plug.Parsers.parse / 5 .</target>
        </trans-unit>
        <trans-unit id="b0c139f555137accf02a451a8b1663007120c24c" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;plug.session.store#c:delete/3&quot;&gt;&lt;code&gt;Plug.Session.Store.delete/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Implementaci&amp;oacute;n de &lt;a href=&quot;plug.session.store#c:delete/3&quot;&gt; &lt;code&gt;Plug.Session.Store.delete/3&lt;/code&gt; &lt;/a&gt; llamada para Plug.Session.Store.delete / 3 .</target>
        </trans-unit>
        <trans-unit id="ce7ff51daa4d07514d97a7f84deeb51eb9f9702b" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;plug.session.store#c:get/3&quot;&gt;&lt;code&gt;Plug.Session.Store.get/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Implementaci&amp;oacute;n de &lt;a href=&quot;plug.session.store#c:get/3&quot;&gt; &lt;code&gt;Plug.Session.Store.get/3&lt;/code&gt; &lt;/a&gt; llamada para Plug.Session.Store.get / 3 .</target>
        </trans-unit>
        <trans-unit id="743aca979f7635146ef099e5301227c6a2bd0171" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;plug.session.store#c:init/1&quot;&gt;&lt;code&gt;Plug.Session.Store.init/1&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Implementaci&amp;oacute;n de &lt;a href=&quot;plug.session.store#c:init/1&quot;&gt; &lt;code&gt;Plug.Session.Store.init/1&lt;/code&gt; &lt;/a&gt; llamada para Plug.Session.Store.init / 1 .</target>
        </trans-unit>
        <trans-unit id="54dabbe6b1c738df92a743cc1b137377ef2dc1db" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;a href=&quot;plug.session.store#c:put/4&quot;&gt;&lt;code&gt;Plug.Session.Store.put/4&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Implementaci&amp;oacute;n de &lt;a href=&quot;plug.session.store#c:put/4&quot;&gt; &lt;code&gt;Plug.Session.Store.put/4&lt;/code&gt; &lt;/a&gt; llamada para Plug.Session.Store.put / 4 .</target>
        </trans-unit>
        <trans-unit id="6d2edbcfbb5ce6be0b7a5d8fb89fc814b48c2518" translate="yes" xml:space="preserve">
          <source>Callback implementation for &lt;code&gt;c:Ecto.Association.on_repo_change/5&lt;/code&gt;.</source>
          <target state="translated">Implementaci&amp;oacute;n de devoluci&amp;oacute;n de llamada para &lt;code&gt;c:Ecto.Association.on_repo_change/5&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="07b60a7f444177c89dd1e016b817202d912a922b" translate="yes" xml:space="preserve">
          <source>Callback invoked to start the supervisor and during hot code upgrades</source>
          <target state="translated">La devolución de llamada invocada para iniciar el supervisor y durante las actualizaciones de código caliente</target>
        </trans-unit>
        <trans-unit id="9fbe07680545fab8c38f764f99ebaad2d192e475" translate="yes" xml:space="preserve">
          <source>Callback invoked to start the supervisor and during hot code upgrades.</source>
          <target state="translated">Llamada de regreso invocada para iniciar el supervisor y durante las actualizaciones de código caliente.</target>
        </trans-unit>
        <trans-unit id="9e77a644b6afd00c56c701efd50e212887f5f4c3" translate="yes" xml:space="preserve">
          <source>Callback to convert the options specified in the field macro into parameters to be used in other callbacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e40111572fe515536aee3325186cd5acdee91825" translate="yes" xml:space="preserve">
          <source>Callback to start the Cowboy endpoint</source>
          <target state="translated">Llamada de regreso para iniciar el punto final de Cowboy</target>
        </trans-unit>
        <trans-unit id="f3236f24f016b3d9c0833c991bdcf855546f8e62" translate="yes" xml:space="preserve">
          <source>Callback to start the Cowboy endpoint.</source>
          <target state="translated">Llamada para iniciar el punto final de Cowboy.</target>
        </trans-unit>
        <trans-unit id="9fdc2cfe374fa5bde1e4e458854875e1709add1c" translate="yes" xml:space="preserve">
          <source>Callbacks</source>
          <target state="translated">Callbacks</target>
        </trans-unit>
        <trans-unit id="d0fbe0f7bb361f1569fe6ed513feb13674ba7d95" translate="yes" xml:space="preserve">
          <source>Callbacks are invoked in the reverse order they are defined (callbacks defined first are invoked last).</source>
          <target state="translated">Las devoluciones de llamada se invocan en el orden inverso al definido (las devoluciones de llamada definidas en primer lugar se invocan en último lugar).</target>
        </trans-unit>
        <trans-unit id="5cbc1e632b5dae84c35ee72ee8e331091acf6f0f" translate="yes" xml:space="preserve">
          <source>Callbacks cycle</source>
          <target state="translated">El ciclo de retrollamadas</target>
        </trans-unit>
        <trans-unit id="dbbd41fef703690543f89a69dc32d3a42905a61c" translate="yes" xml:space="preserve">
          <source>Called as needed and after merges.</source>
          <target state="translated">Llamado según sea necesario y después de las fusiones.</target>
        </trans-unit>
        <trans-unit id="1c4fe82ac39bdc87aed411ead9e3ccd0583d7d31" translate="yes" xml:space="preserve">
          <source>Called to autogenerate a value for id/embed_id/binary_id</source>
          <target state="translated">Llamado a autogenerar un valor para id/embed_id/binary_id</target>
        </trans-unit>
        <trans-unit id="8f68520c1312f30f81829bba3fe8b77ba247f167" translate="yes" xml:space="preserve">
          <source>Called to autogenerate a value for id/embed_id/binary_id.</source>
          <target state="translated">Llamado a autogenerar un valor para id/embed_id/binary_id.</target>
        </trans-unit>
        <trans-unit id="807d052993a5d1a26888e1636080fc2b67e8ed03" translate="yes" xml:space="preserve">
          <source>Called when an application is started</source>
          <target state="translated">Llamado cuando se inicia una aplicación</target>
        </trans-unit>
        <trans-unit id="f0ca56a7a06bc47a8cf3a0a7612d281facc7aec4" translate="yes" xml:space="preserve">
          <source>Called when an application is started.</source>
          <target state="translated">Se llama cuando se inicia una solicitud.</target>
        </trans-unit>
        <trans-unit id="ce2d907fe48d4de6aa4d76bcc22f81b26e6168bd" translate="yes" xml:space="preserve">
          <source>Callers should only subscribe to a given topic a single time. Duplicate subscriptions for a Pid/topic pair are allowed and will cause duplicate events to be sent; however, when using &lt;a href=&quot;phoenix.pubsub#unsubscribe/2&quot;&gt;&lt;code&gt;Phoenix.PubSub.unsubscribe/2&lt;/code&gt;&lt;/a&gt;, all duplicate subscriptions will be dropped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c9a634c7a8d3becce10c69bdfff8821034955bf" translate="yes" xml:space="preserve">
          <source>Callers should only subscribe to a given topic a single time. Duplicate subscriptions for a Pid/topic pair are allowed and will cause duplicate events to be sent; however, when using &lt;a href=&quot;phoenix.pubsub#unsubscribe/3&quot;&gt;&lt;code&gt;Phoenix.PubSub.unsubscribe/3&lt;/code&gt;&lt;/a&gt;, all duplicate subscriptions will be dropped.</source>
          <target state="translated">Las personas que llaman solo deben suscribirse a un tema determinado una sola vez. Se permiten suscripciones duplicadas para un par Pid / tema y har&amp;aacute;n que se env&amp;iacute;en eventos duplicados; sin embargo, al usar &lt;a href=&quot;phoenix.pubsub#unsubscribe/3&quot;&gt; &lt;code&gt;Phoenix.PubSub.unsubscribe/3&lt;/code&gt; &lt;/a&gt; , se eliminar&amp;aacute;n todas las suscripciones duplicadas.</target>
        </trans-unit>
        <trans-unit id="7fe75a5900b2020c4e0694bc0f4aaeb8dac07e20" translate="yes" xml:space="preserve">
          <source>Calls the Endpoint and Router pipelines for the current route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b37b3a10ada22f7da28908a66918d9fb5908b72" translate="yes" xml:space="preserve">
          <source>Calls the Endpoint and Router pipelines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51473715b3055d8b5369d919c4ebe6516370cc8a" translate="yes" xml:space="preserve">
          <source>Calls the Endpoint and bypasses Router match</source>
          <target state="translated">Llama al punto final y desvía la coincidencia del router</target>
        </trans-unit>
        <trans-unit id="370acfef3703e3f90e392daddd10376201a01d84" translate="yes" xml:space="preserve">
          <source>Calls the Endpoint and bypasses Router match.</source>
          <target state="translated">Llama al Punto Final y desvía la coincidencia del router.</target>
        </trans-unit>
        <trans-unit id="2c8a321e9e8f0812c9a814f2adbd7dffb9fb3d96" translate="yes" xml:space="preserve">
          <source>Calls the Endpoint and the given Router pipelines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e76046a2aebeed485708e63cd36fd8ac2928f09e" translate="yes" xml:space="preserve">
          <source>Can also be a &quot;MFA&quot; (module, function, arguments) tuple. That function will receive the connection and should return a map (with string keys) to be merged into the session. For example, &lt;code&gt;{MyModule, :my_function, []}&lt;/code&gt; means &lt;code&gt;MyModule.my_function(conn)&lt;/code&gt; is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88e062532b66a1ad5e10fd38139c1c81ab87fb66" translate="yes" xml:space="preserve">
          <source>Can return &lt;code&gt;:up&lt;/code&gt;, &lt;code&gt;:down&lt;/code&gt; or &lt;code&gt;{:error, term}&lt;/code&gt; in case anything goes wrong.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5c2f31f12329b480874d41c2cb0a6bf9acc6f3c" translate="yes" xml:space="preserve">
          <source>Case sensitivity</source>
          <target state="translated">Sensibilidad al caso</target>
        </trans-unit>
        <trans-unit id="e0f540f92c7222f2992e0ffca4cb3124cdab0766" translate="yes" xml:space="preserve">
          <source>Casting</source>
          <target state="translated">Casting</target>
        </trans-unit>
        <trans-unit id="db6a2272ded0700644f24cfe5b5b0309474bb690" translate="yes" xml:space="preserve">
          <source>Casts a value to the given type</source>
          <target state="translated">Echa un valor al tipo dado</target>
        </trans-unit>
        <trans-unit id="3b890ef0afa0f6d0ec2387b3100aa57cd59d471f" translate="yes" xml:space="preserve">
          <source>Casts a value to the given type.</source>
          <target state="translated">Echa un valor al tipo dado.</target>
        </trans-unit>
        <trans-unit id="39961a9c776d161601bfe01b5f9a4f0958708e12" translate="yes" xml:space="preserve">
          <source>Casts the given association with the changeset parameters</source>
          <target state="translated">Establece la asociación dada con los parámetros del conjunto de cambios</target>
        </trans-unit>
        <trans-unit id="be9379c9eea53b656902efc6e1b5e1e99a20af64" translate="yes" xml:space="preserve">
          <source>Casts the given association with the changeset parameters.</source>
          <target state="translated">Proyecta la asociación dada con los parámetros del conjunto de cambios.</target>
        </trans-unit>
        <trans-unit id="e95ccfe299647f87c0cba2bbfe94e26e86ce5050" translate="yes" xml:space="preserve">
          <source>Casts the given embed with the changeset parameters</source>
          <target state="translated">Proyecta la incrustación dada con los parámetros de cambio...</target>
        </trans-unit>
        <trans-unit id="f7f50157aaf9bbd054614b39e14e8c260e3e785a" translate="yes" xml:space="preserve">
          <source>Casts the given embed with the changeset parameters.</source>
          <target state="translated">Lanza la incrustación dada con los parámetros de cambio.</target>
        </trans-unit>
        <trans-unit id="506cc20e1151fcc429a938ede7c283a878d6e44b" translate="yes" xml:space="preserve">
          <source>Casts the given input to the ParameterizedType with the given parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98f8af8a0284595a1a3d48928fba619382632646" translate="yes" xml:space="preserve">
          <source>Casts the given input to the custom type</source>
          <target state="translated">Lanza la entrada dada al tipo personalizado</target>
        </trans-unit>
        <trans-unit id="8755ddad47681604b78b876fd901374c259a26c8" translate="yes" xml:space="preserve">
          <source>Casts the given input to the custom type.</source>
          <target state="translated">Lanza la entrada dada al tipo personalizado.</target>
        </trans-unit>
        <trans-unit id="c0dc7b80874914239cf81ad7d06a8bba507b97e8" translate="yes" xml:space="preserve">
          <source>Casts the given value to the given type at the database level</source>
          <target state="translated">Echa el valor dado al tipo dado a nivel de la base de datos</target>
        </trans-unit>
        <trans-unit id="d48a0c8cc72b886950ec9ba2adae18a1f5adf08f" translate="yes" xml:space="preserve">
          <source>Casts the given value to the given type at the database level.</source>
          <target state="translated">Echa el valor dado al tipo dado a nivel de la base de datos.</target>
        </trans-unit>
        <trans-unit id="e8438762801637aaa4831a4bdbf6654a398aeee5" translate="yes" xml:space="preserve">
          <source>Casts to UUID</source>
          <target state="translated">Lanzamientos a la UUID</target>
        </trans-unit>
        <trans-unit id="314cfcee4efb4546ed893c42c5d11295a20cc005" translate="yes" xml:space="preserve">
          <source>Casts to UUID.</source>
          <target state="translated">Lanzamientos a la UUID.</target>
        </trans-unit>
        <trans-unit id="712fa742793fb2c31cc8448917481b50249986ba" translate="yes" xml:space="preserve">
          <source>Causes the multi to fail with the given value</source>
          <target state="translated">Hace que el multi falle con el valor dado</target>
        </trans-unit>
        <trans-unit id="aacc9b97d22fcfe1b20f63b5787c16d8ed4f97e2" translate="yes" xml:space="preserve">
          <source>Causes the multi to fail with the given value.</source>
          <target state="translated">Hace que el multi falle con el valor dado.</target>
        </trans-unit>
        <trans-unit id="de9f4f86265b2aecfbaf0e7cc573428a522d7477" translate="yes" xml:space="preserve">
          <source>Change the plug Plug.Session to use that attribute:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41aa9b871d64ac5d948470838490441a4a2f0c5b" translate="yes" xml:space="preserve">
          <source>Change tracking also works when accessing map/struct fields. Take this template:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b656dadab30c48171de90c0d4d7d8047516e885" translate="yes" xml:space="preserve">
          <source>Change tracking requirement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a9a7a310e9346ab3eec5877a2adbd3127520d90" translate="yes" xml:space="preserve">
          <source>Changed attributes will only be added if the change does not have the same value as the field in the data.</source>
          <target state="translated">Los atributos modificados sólo se añadirán si el cambio no tiene el mismo valor que el campo en los datos.</target>
        </trans-unit>
        <trans-unit id="3f55b9615f358dd1b0d1cd5f8bd5031b0d7c32d5" translate="yes" xml:space="preserve">
          <source>Changes all empty parameters to nils (&quot;&quot; -&amp;gt; nil)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1240b51d036bf14642c6213923da9a6da0fcd9a6" translate="yes" xml:space="preserve">
          <source>Changes all empty parameters to nils (&amp;ldquo;&amp;rdquo; -&amp;gt; nil).</source>
          <target state="translated">Cambia todos los par&amp;aacute;metros vac&amp;iacute;os a nils (&amp;ldquo;&amp;rdquo; -&amp;gt; nil).</target>
        </trans-unit>
        <trans-unit id="e85e8376066e6efa07d004cd93aa1d6c124968fb" translate="yes" xml:space="preserve">
          <source>Changes empty parameters of &lt;code&gt;required_key&lt;/code&gt; (recursively) to nils</source>
          <target state="translated">Cambia los par&amp;aacute;metros vac&amp;iacute;os de &lt;code&gt;required_key&lt;/code&gt; (recursivamente) a nils</target>
        </trans-unit>
        <trans-unit id="ba2dbae392ef539a56ff20bd536d56826af3e21a" translate="yes" xml:space="preserve">
          <source>Changeset actions</source>
          <target state="translated">Acciones de cambio</target>
        </trans-unit>
        <trans-unit id="4ff4e9ed29935614b3b0a4860d00f7c7fab653fd" translate="yes" xml:space="preserve">
          <source>Changesets</source>
          <target state="translated">Changesets</target>
        </trans-unit>
        <trans-unit id="15fe687723b50a7f1c89b99b8e32c64ca13bf776" translate="yes" xml:space="preserve">
          <source>Changesets allow developers to filter, cast, and validate changes before we apply them to the data. Imagine the given schema:</source>
          <target state="translated">Los conjuntos de cambios permiten a los desarrolladores filtrar,emitir y validar los cambios antes de que los apliquemos a los datos.Imagina el esquema dado:</target>
        </trans-unit>
        <trans-unit id="106dc8111d962bf3fa4d30e3e04971c906cf60bd" translate="yes" xml:space="preserve">
          <source>Changesets allow filtering, casting, validation and definition of constraints when manipulating structs.</source>
          <target state="translated">Los juegos de cambios permiten filtrar,fundir,validar y definir las restricciones al manipular las estructuras.</target>
        </trans-unit>
        <trans-unit id="4826b62fc4c9e7e5326175150a971664f8ce5fbd" translate="yes" xml:space="preserve">
          <source>Changesets allow working with both kinds of data:</source>
          <target state="translated">Los juegos de cambios permiten trabajar con ambos tipos de datos:</target>
        </trans-unit>
        <trans-unit id="44fa2c5bfbc3ec51c158e325fdf0f62d5ff5e9a9" translate="yes" xml:space="preserve">
          <source>Changesets and Validations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97d4b08927d9aa72714889f4f73366760107150c" translate="yes" xml:space="preserve">
          <source>Changesets are also capable of transforming database constraints, like unique indexes and foreign key checks, into errors. Allowing developers to keep their database consistent while still providing proper feedback to end users. Check &lt;a href=&quot;ecto.changeset#unique_constraint/3&quot;&gt;&lt;code&gt;Ecto.Changeset.unique_constraint/3&lt;/code&gt;&lt;/a&gt; for some examples as well as the other &lt;code&gt;_constraint&lt;/code&gt; functions.</source>
          <target state="translated">Los conjuntos de cambios tambi&amp;eacute;n son capaces de transformar las restricciones de la base de datos, como &amp;iacute;ndices &amp;uacute;nicos y comprobaciones de claves externas, en errores. Permitir a los desarrolladores mantener la coherencia de su base de datos al mismo tiempo que brindan comentarios adecuados a los usuarios finales. Consulte &lt;a href=&quot;ecto.changeset#unique_constraint/3&quot;&gt; &lt;code&gt;Ecto.Changeset.unique_constraint/3&lt;/code&gt; &lt;/a&gt; para ver algunos ejemplos, as&amp;iacute; como las otras funciones &lt;code&gt;_constraint&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eaabb4b1610b2670ddb90bb9b3f51b64b7f6fc71" translate="yes" xml:space="preserve">
          <source>Changesets can also be used with data in a plain map, by following the same API:</source>
          <target state="translated">Los conjuntos de cambios también se pueden utilizar con datos en un mapa plano,siguiendo la misma API:</target>
        </trans-unit>
        <trans-unit id="02c97d5d2f0f30db43c46780b79195892e097895" translate="yes" xml:space="preserve">
          <source>Changesets define a pipeline of transformations our data needs to undergo before it will be ready for our application to use. These transformations might include type-casting, user input validation, and filtering out any extraneous parameters. Often we'll use changesets to validate user input before writing it to the database. Ecto Repos are also changeset-aware, which allows them not only to refuse invalid data, but also perform the minimal database updates possible by inspecting the changeset to know which fields have changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f35e945b11b533c908a172bde59cd90a6810e709" translate="yes" xml:space="preserve">
          <source>Changesets do not support this type of constraints. When working with deferred constraints, a violation while invoking &lt;code&gt;Repo.insert/2&lt;/code&gt; or &lt;code&gt;Repo.update/2&lt;/code&gt; won&amp;rsquo;t return &lt;code&gt;{:error, changeset}&lt;/code&gt;, but rather raise an error at the end of the transaction.</source>
          <target state="translated">Los conjuntos de cambios no admiten este tipo de restricciones. Cuando se trabaja con restricciones diferidas, una infracci&amp;oacute;n al invocar &lt;code&gt;Repo.insert/2&lt;/code&gt; o &lt;code&gt;Repo.update/2&lt;/code&gt; no devolver&amp;aacute; &lt;code&gt;{:error, changeset}&lt;/code&gt; , sino que generar&amp;aacute; un error al final de la transacci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="53fb625fd2838e7e76530b2f06cf50c9d96a7cdb" translate="yes" xml:space="preserve">
          <source>Changesets do not support this type of constraints. When working with deferred constraints, a violation while invoking &lt;code&gt;Repo.insert/2&lt;/code&gt; or &lt;code&gt;Repo.update/2&lt;/code&gt; won't return &lt;code&gt;{:error, changeset}&lt;/code&gt;, but rather raise an error at the end of the transaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4d719c687cbb64610b4daa85e8756d9334b9d25" translate="yes" xml:space="preserve">
          <source>Changesets have an action field which is usually set by &lt;a href=&quot;ecto.repo&quot;&gt;&lt;code&gt;Ecto.Repo&lt;/code&gt;&lt;/a&gt; whenever one of the operations such as &lt;code&gt;insert&lt;/code&gt; or &lt;code&gt;update&lt;/code&gt; is called:</source>
          <target state="translated">Los conjuntos de cambios tienen un campo de acci&amp;oacute;n que normalmente establece &lt;a href=&quot;ecto.repo&quot;&gt; &lt;code&gt;Ecto.Repo&lt;/code&gt; &lt;/a&gt; siempre que se llama a una de las operaciones, como &lt;code&gt;insert&lt;/code&gt; ar o &lt;code&gt;update&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="24788605a643b294a485fe7186f622e7d307dc0a" translate="yes" xml:space="preserve">
          <source>Channel testing</source>
          <target state="translated">Prueba de canal</target>
        </trans-unit>
        <trans-unit id="e554fb4eb7fab7c704e73d8c51fda0b3df2886d9" translate="yes" xml:space="preserve">
          <source>Channels can reply, synchronously, to any &lt;code&gt;handle_in/3&lt;/code&gt; event. To match pushes with replies, clients must include a unique &lt;code&gt;ref&lt;/code&gt; with every message and the channel server will reply with a matching ref where the client can pick up the callback for the matching reply.</source>
          <target state="translated">Los canales pueden responder, sincr&amp;oacute;nicamente, a cualquier evento &lt;code&gt;handle_in/3&lt;/code&gt; . Para hacer coincidir los empujes con las respuestas, los clientes deben incluir una &lt;code&gt;ref&lt;/code&gt; erencia &amp;uacute;nica con cada mensaje y el servidor de canal responder&amp;aacute; con una referencia coincidente donde el cliente puede recoger la devoluci&amp;oacute;n de llamada para la respuesta coincidente.</target>
        </trans-unit>
        <trans-unit id="aa5494fe46265f9955154bc7bf0d7c3b9f070d29" translate="yes" xml:space="preserve">
          <source>Channels can send two types of message back to a transport: &lt;a href=&quot;phoenix.socket.message&quot;&gt;&lt;code&gt;Phoenix.Socket.Message&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;phoenix.socket.reply&quot;&gt;&lt;code&gt;Phoenix.Socket.Reply&lt;/code&gt;&lt;/a&gt;. Those messages are encoded in the channel into a format defined by the transport. That&amp;rsquo;s why transports are required to pass a serializer that abides to the behaviour described in &lt;a href=&quot;phoenix.transports.serializer&quot;&gt;&lt;code&gt;Phoenix.Transports.Serializer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Los canales pueden enviar dos tipos de mensajes a un transporte: &lt;a href=&quot;phoenix.socket.message&quot;&gt; &lt;code&gt;Phoenix.Socket.Message&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;phoenix.socket.reply&quot;&gt; &lt;code&gt;Phoenix.Socket.Reply&lt;/code&gt; &lt;/a&gt; . Estos mensajes se codifican en el canal en un formato definido por el transporte. Es por eso que se requiere que los transportes pasen un serializador que cumpla con el comportamiento descrito en &lt;a href=&quot;phoenix.transports.serializer&quot;&gt; &lt;code&gt;Phoenix.Transports.Serializer&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b3d27d901eb026cad065e54c8192d31e835b640f" translate="yes" xml:space="preserve">
          <source>Channels provide a means for bidirectional communication from clients that integrate with the &lt;a href=&quot;../phoenix_pubsub/1.0.2/phoenix.pubsub&quot;&gt;&lt;code&gt;Phoenix.PubSub&lt;/code&gt;&lt;/a&gt; layer for soft-realtime functionality.</source>
          <target state="translated">Los canales proporcionan un medio para la comunicaci&amp;oacute;n bidireccional de los clientes que se integran con la capa &lt;a href=&quot;../phoenix_pubsub/1.0.2/phoenix.pubsub&quot;&gt; &lt;code&gt;Phoenix.PubSub&lt;/code&gt; &lt;/a&gt; para una funcionalidad suave en tiempo real.</target>
        </trans-unit>
        <trans-unit id="c5f16f980902be918678b9a56abce231c6af160b" translate="yes" xml:space="preserve">
          <source>Channels provide a means for bidirectional communication from clients that integrate with the &lt;a href=&quot;../phoenix_pubsub/phoenix.pubsub&quot;&gt;&lt;code&gt;Phoenix.PubSub&lt;/code&gt;&lt;/a&gt; layer for soft-realtime functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2ae9471e7a712ab94fdb6bad36baf383fd99d00" translate="yes" xml:space="preserve">
          <source>Check &lt;a href=&quot;#datetime_select/3&quot;&gt;&lt;code&gt;datetime_select/3&lt;/code&gt;&lt;/a&gt; for more information on options and supported values.</source>
          <target state="translated">Consulte &lt;a href=&quot;#datetime_select/3&quot;&gt; &lt;code&gt;datetime_select/3&lt;/code&gt; &lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre las opciones y los valores admitidos.</target>
        </trans-unit>
        <trans-unit id="0876127fa1f23c598e6ebc5194c252ea6036daa6" translate="yes" xml:space="preserve">
          <source>Check &lt;a href=&quot;#get_csrf_token/0&quot;&gt;&lt;code&gt;get_csrf_token/0&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#delete_csrf_token/0&quot;&gt;&lt;code&gt;delete_csrf_token/0&lt;/code&gt;&lt;/a&gt; for retrieving and deleting CSRF tokens.</source>
          <target state="translated">Compruebe &lt;a href=&quot;#get_csrf_token/0&quot;&gt; &lt;code&gt;get_csrf_token/0&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;#delete_csrf_token/0&quot;&gt; &lt;code&gt;delete_csrf_token/0&lt;/code&gt; &lt;/a&gt; para recuperar y eliminar tokens CSRF.</target>
        </trans-unit>
        <trans-unit id="36e8d73c5d9d7c1e6dd7e543b8d5b6cf640ee771" translate="yes" xml:space="preserve">
          <source>Check &lt;a href=&quot;#scope/2&quot;&gt;&lt;code&gt;scope/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#resources/4&quot;&gt;&lt;code&gt;resources/4&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">Consulte el &lt;a href=&quot;#scope/2&quot;&gt; &lt;code&gt;scope/2&lt;/code&gt; &lt;/a&gt; y los &lt;a href=&quot;#resources/4&quot;&gt; &lt;code&gt;resources/4&lt;/code&gt; &lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="78921fd5a32a35386391dc343718e4bd2cd828f9" translate="yes" xml:space="preserve">
          <source>Check &lt;a href=&quot;ecto.schema#embeds_one/3&quot;&gt;&lt;code&gt;Ecto.Schema.embeds_one/3&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;ecto.schema#embeds_many/3&quot;&gt;&lt;code&gt;Ecto.Schema.embeds_many/3&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">Consulte &lt;a href=&quot;ecto.schema#embeds_one/3&quot;&gt; &lt;code&gt;Ecto.Schema.embeds_one/3&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;ecto.schema#embeds_many/3&quot;&gt; &lt;code&gt;Ecto.Schema.embeds_many/3&lt;/code&gt; &lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="e2e590821015449553f7a083a040bba81687e098" translate="yes" xml:space="preserve">
          <source>Checking side-effects</source>
          <target state="translated">Comprobación de los efectos secundarios</target>
        </trans-unit>
        <trans-unit id="6ac6252bbede5055777cad6522cdba3a204e3385" translate="yes" xml:space="preserve">
          <source>Checks for a check constraint in the given field</source>
          <target state="translated">Comprueba si hay una restricción de control en el campo dado</target>
        </trans-unit>
        <trans-unit id="a007ae3fcb27398cfb2f8cfb88cd969c756755f6" translate="yes" xml:space="preserve">
          <source>Checks for a check constraint in the given field.</source>
          <target state="translated">Comprueba si hay una restricción de control en el campo dado.</target>
        </trans-unit>
        <trans-unit id="18d676cde979db601a52e91aaaf4476188fb0ed4" translate="yes" xml:space="preserve">
          <source>Checks for a unique constraint in the given field</source>
          <target state="translated">Comprueba si existe una restricción única en el campo en cuestión.</target>
        </trans-unit>
        <trans-unit id="649662d24fed594a5b98f75686d3faa9f43db79a" translate="yes" xml:space="preserve">
          <source>Checks for a unique constraint in the given field or list of fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa59f930724fcdea67d084d926d28fc4c15f4c03" translate="yes" xml:space="preserve">
          <source>Checks for a unique constraint in the given field.</source>
          <target state="translated">Comprueba si existe una restricción única en el campo en cuestión.</target>
        </trans-unit>
        <trans-unit id="1806f8814a9a2a5f10b61db2ed93331ad1ccc220" translate="yes" xml:space="preserve">
          <source>Checks for an exclusion constraint in the given field</source>
          <target state="translated">Comprueba si existe una restricción de exclusión en el campo en cuestión</target>
        </trans-unit>
        <trans-unit id="fa586f48c4ea975ae752e15729708ae4eb86c327" translate="yes" xml:space="preserve">
          <source>Checks for an exclusion constraint in the given field.</source>
          <target state="translated">Comprueba si existe una restricción de exclusión en el campo en cuestión.</target>
        </trans-unit>
        <trans-unit id="75666e8b3dce3b6bb93ea5456967b9687a782186" translate="yes" xml:space="preserve">
          <source>Checks for foreign key constraint in the given field</source>
          <target state="translated">Comprobación de la restricción de claves extranjeras en el campo en cuestión</target>
        </trans-unit>
        <trans-unit id="b3b2e641330818474410be9363a7acfdf6f7e027" translate="yes" xml:space="preserve">
          <source>Checks for foreign key constraint in the given field.</source>
          <target state="translated">Comprueba si hay alguna restricción de clave extranjera en el campo en cuestión.</target>
        </trans-unit>
        <trans-unit id="5fa1bef6695916bf62ca3fc0e50a6cca0de72c75" translate="yes" xml:space="preserve">
          <source>Checks if Endpoint&amp;rsquo;s web server has been configured to start</source>
          <target state="translated">Comprueba si el servidor web de Endpoint se ha configurado para iniciarse</target>
        </trans-unit>
        <trans-unit id="771534d55fe1b3aac38a312bfe67507aff81041f" translate="yes" xml:space="preserve">
          <source>Checks if Endpoint&amp;rsquo;s web server has been configured to start.</source>
          <target state="translated">Comprueba si el servidor web de Endpoint se ha configurado para iniciarse.</target>
        </trans-unit>
        <trans-unit id="847a3f2e0a09c5f75b7436eacfe07fdda8f96913" translate="yes" xml:space="preserve">
          <source>Checks if Endpoint's web server has been configured to start.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="963f346febde4845b780cb252e5679ea119288ec" translate="yes" xml:space="preserve">
          <source>Checks if a given type matches with a primitive type that can be found in queries</source>
          <target state="translated">Comprueba si un tipo determinado coincide con un tipo primitivo que se puede encontrar en las consultas</target>
        </trans-unit>
        <trans-unit id="5e9a8212ae6f7073ddffb09a0d0e0eae45982cea" translate="yes" xml:space="preserve">
          <source>Checks if a given type matches with a primitive type that can be found in queries.</source>
          <target state="translated">Comprueba si un tipo determinado coincide con un tipo primitivo que se puede encontrar en las consultas.</target>
        </trans-unit>
        <trans-unit id="c8de4dbd68477598dffed3dcaf6a30c4ed80304c" translate="yes" xml:space="preserve">
          <source>Checks if an association is loaded</source>
          <target state="translated">Comprueba si una asociación está cargada</target>
        </trans-unit>
        <trans-unit id="6d1a314f9be25f92609b0bf832c30f5da98f3a76" translate="yes" xml:space="preserve">
          <source>Checks if an association is loaded.</source>
          <target state="translated">Comprueba si una asociación está cargada.</target>
        </trans-unit>
        <trans-unit id="92874536f2bd61a01795ca88b0a59254d1460cf5" translate="yes" xml:space="preserve">
          <source>Checks if set has a non-empty delta</source>
          <target state="translated">Comprueba si el conjunto tiene un delta no vacío</target>
        </trans-unit>
        <trans-unit id="5da5d365962f5490f61e15a84082285451a63d49" translate="yes" xml:space="preserve">
          <source>Checks if set has a non-empty delta.</source>
          <target state="translated">Comprueba si el conjunto tiene un delta no vacío.</target>
        </trans-unit>
        <trans-unit id="564a0175282bccd2d3d63e852b826ecb9098e420" translate="yes" xml:space="preserve">
          <source>Checks if the given &lt;code&gt;selector&lt;/code&gt; with &lt;code&gt;text_filter&lt;/code&gt; is on &lt;code&gt;view&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b45c07482c336ba440a9fdb88056674d4c21bc6b" translate="yes" xml:space="preserve">
          <source>Checks if the given atom can be used as base type</source>
          <target state="translated">Comprueba si el átomo dado puede ser usado como tipo base</target>
        </trans-unit>
        <trans-unit id="f3e31e2d1943a777f5e51ad6c5913e9026f39c24" translate="yes" xml:space="preserve">
          <source>Checks if the given atom can be used as base type.</source>
          <target state="translated">Comprueba si el átomo dado puede ser usado como tipo base.</target>
        </trans-unit>
        <trans-unit id="f087876ed1366027b27ce3f6d468eff9f6993be5" translate="yes" xml:space="preserve">
          <source>Checks if the given atom can be used as composite type</source>
          <target state="translated">Comprueba si el átomo dado puede ser usado como tipo compuesto</target>
        </trans-unit>
        <trans-unit id="c182b160ab8eb55a3f19b370e22b4a383096218f" translate="yes" xml:space="preserve">
          <source>Checks if the given atom can be used as composite type.</source>
          <target state="translated">Comprueba si el átomo dado puede ser usado como tipo compuesto.</target>
        </trans-unit>
        <trans-unit id="d0246439706f8cb02cffdfb4545b9983204e9f4a" translate="yes" xml:space="preserve">
          <source>Checks if the given element exists on the page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec2ead142ebe4a2acd898e340f5a641a34de0cd1" translate="yes" xml:space="preserve">
          <source>Checks if the given value is nil</source>
          <target state="translated">Comprueba si el valor dado es nulo</target>
        </trans-unit>
        <trans-unit id="ba10eedbcbac96de733b45e57696f86fd9e2ae1a" translate="yes" xml:space="preserve">
          <source>Checks if the given value is nil.</source>
          <target state="translated">Comprueba si el valor dado es nulo.</target>
        </trans-unit>
        <trans-unit id="1ff1fb2e41e4abad270b1d1faf934efc56ffec15" translate="yes" xml:space="preserve">
          <source>Checks if the left-value is included in the right one</source>
          <target state="translated">Comprueba si el valor de la izquierda está incluido en el de la derecha</target>
        </trans-unit>
        <trans-unit id="012a92f0ea9c7b9bd332b5b0280f7b3e079b95d6" translate="yes" xml:space="preserve">
          <source>Checks if the left-value is included in the right one.</source>
          <target state="translated">Comprueba si el valor de la izquierda está incluido en el de la derecha.</target>
        </trans-unit>
        <trans-unit id="ff79efe7f70ca6c7a26880d90f9fdcf1b5e2e115" translate="yes" xml:space="preserve">
          <source>Checks if there exists an entry that matches the given query</source>
          <target state="translated">Comprueba si existe una entrada que coincida con la consulta dada</target>
        </trans-unit>
        <trans-unit id="01ba608b03c189712dac599e833b596871fe995e" translate="yes" xml:space="preserve">
          <source>Checks if there exists an entry that matches the given query.</source>
          <target state="translated">Comprueba si existe una entrada que coincida con la consulta dada.</target>
        </trans-unit>
        <trans-unit id="389242c9a730035773dd2bfb10ced2e95b92bbe5" translate="yes" xml:space="preserve">
          <source>Checks if two terms are equal</source>
          <target state="translated">Comprueba si dos términos son iguales</target>
        </trans-unit>
        <trans-unit id="38a69d5cc36841de8cb46e3c595f0840ce93f8d2" translate="yes" xml:space="preserve">
          <source>Checks if two terms are equal.</source>
          <target state="translated">Comprueba si dos términos son iguales.</target>
        </trans-unit>
        <trans-unit id="fdde16246d41643a71fab5ae2a319f1ca2bec878" translate="yes" xml:space="preserve">
          <source>Checks if two terms are semantically equal</source>
          <target state="translated">Comprueba si dos términos son semánticamente iguales</target>
        </trans-unit>
        <trans-unit id="6646b3291804effbb7f740fa536c58d472e9a65b" translate="yes" xml:space="preserve">
          <source>Checks if two terms are semantically equal.</source>
          <target state="translated">Comprueba si dos términos son semánticamente iguales.</target>
        </trans-unit>
        <trans-unit id="3706563a91c576d80ebc42e1e60ed72b66677397" translate="yes" xml:space="preserve">
          <source>Checks if we have a primitive type</source>
          <target state="translated">Comprueba si tenemos un tipo primitivo</target>
        </trans-unit>
        <trans-unit id="d94cdaa6c65db405671997b233631e33f3635ec0" translate="yes" xml:space="preserve">
          <source>Checks if we have a primitive type.</source>
          <target state="translated">Comprueba si tenemos un tipo primitivo.</target>
        </trans-unit>
        <trans-unit id="ce70e4262eea85373e3f962f772047eb2b5cf584" translate="yes" xml:space="preserve">
          <source>Checks out a connection for the duration of the function</source>
          <target state="translated">Comprueba una conexión durante la duración de la función</target>
        </trans-unit>
        <trans-unit id="f8d5ddc97e30fb43102d8e232102ad0e94918cbc" translate="yes" xml:space="preserve">
          <source>Checks out a connection for the duration of the function.</source>
          <target state="translated">Comprueba una conexión durante la duración de la función.</target>
        </trans-unit>
        <trans-unit id="b4191a0c935af45665f885d48471cec8420ff8f6" translate="yes" xml:space="preserve">
          <source>Checks out a connection for the duration of the given function</source>
          <target state="translated">Comprueba una conexión durante la duración de la función dada</target>
        </trans-unit>
        <trans-unit id="432c332c21e1ebe651f69db561aa30d3341e739c" translate="yes" xml:space="preserve">
          <source>Checks out a connection for the duration of the given function.</source>
          <target state="translated">Comprueba una conexión durante la duración de la función dada.</target>
        </trans-unit>
        <trans-unit id="4d6f1ecf827d3f23473f3bbd2470ba23b02f45dd" translate="yes" xml:space="preserve">
          <source>Checks the Websocket subprotocols request header against the allowed subprotocols.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b26ef7e7f2c927fed219263f4d0d0a8b4e9f30af" translate="yes" xml:space="preserve">
          <source>Checks the associated field does not exist</source>
          <target state="translated">Comprueba que el campo asociado no existe</target>
        </trans-unit>
        <trans-unit id="bd86aa766094ca0b2d939788a04bc10d840c8eda" translate="yes" xml:space="preserve">
          <source>Checks the associated field does not exist.</source>
          <target state="translated">Comprueba que el campo asociado no existe.</target>
        </trans-unit>
        <trans-unit id="6501c966cafe6555cac818a9fd8b0d64fb1327f4" translate="yes" xml:space="preserve">
          <source>Checks the associated field exists</source>
          <target state="translated">Comprueba que el campo asociado existe</target>
        </trans-unit>
        <trans-unit id="10b1ca019610fea359d98628c9db1be68d7b49da" translate="yes" xml:space="preserve">
          <source>Checks the associated field exists.</source>
          <target state="translated">Comprueba que el campo asociado existe.</target>
        </trans-unit>
        <trans-unit id="f90bf014a68be0e1e612c9cab06f18981fe73e91" translate="yes" xml:space="preserve">
          <source>Checks the origin request header against the list of allowed origins</source>
          <target state="translated">Comprueba el encabezamiento de la solicitud de origen con la lista de orígenes permitidos</target>
        </trans-unit>
        <trans-unit id="9bf75f3781d0dbe77c4656080b8da67d7099adab" translate="yes" xml:space="preserve">
          <source>Checks the origin request header against the list of allowed origins.</source>
          <target state="translated">Comprueba el encabezamiento de la solicitud de origen con la lista de orígenes permitidos.</target>
        </trans-unit>
        <trans-unit id="d01c2aab6be8cde7caad416de7bc0d04d65e24c6" translate="yes" xml:space="preserve">
          <source>Checks to see if the &lt;code&gt;required_key&lt;/code&gt; is present</source>
          <target state="translated">Comprueba si la &lt;code&gt;required_key&lt;/code&gt; est&amp;aacute; presente</target>
        </trans-unit>
        <trans-unit id="c4e66d6a6903255b0703717c7e856b65d04f4679" translate="yes" xml:space="preserve">
          <source>Checks to see if the required_key is present (can be empty)</source>
          <target state="translated">Comprueba si la tecla_requerida está presente (puede estar vacía)</target>
        </trans-unit>
        <trans-unit id="b142803c5465bab9124b00891727a126ba33d366" translate="yes" xml:space="preserve">
          <source>Children are returned in the order they appear in the rendered HTML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6929a94fa1722ac5684bbfa4457c2e9ae0947c95" translate="yes" xml:space="preserve">
          <source>Cipher Suites</source>
          <target state="translated">Suites de cifrado</target>
        </trans-unit>
        <trans-unit id="b090f344738a81b88d35ff78ee37412da844f371" translate="yes" xml:space="preserve">
          <source>Clears a key from the flash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f908ace8be79c6747236457248fd8f0a02cf607" translate="yes" xml:space="preserve">
          <source>Clears all flash messages</source>
          <target state="translated">Borra todos los mensajes flash</target>
        </trans-unit>
        <trans-unit id="dcfd4db63de578c0ce575e1784274c31299c16f5" translate="yes" xml:space="preserve">
          <source>Clears all flash messages.</source>
          <target state="translated">Borra todos los mensajes flash.</target>
        </trans-unit>
        <trans-unit id="b5587a1be7dabdd4ea76580016a9a98fe251614b" translate="yes" xml:space="preserve">
          <source>Clears the entire session</source>
          <target state="translated">Despeja toda la sesión</target>
        </trans-unit>
        <trans-unit id="ba79f95b8ce1750f56350e7f99c4a89ccd2f2fde" translate="yes" xml:space="preserve">
          <source>Clears the entire session.</source>
          <target state="translated">Despeja toda la sesión.</target>
        </trans-unit>
        <trans-unit id="e1d43b78047ef86816aa8de85514822df9397e4e" translate="yes" xml:space="preserve">
          <source>Clears the flash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8349eb1eacd2b2432ee3a410d4c08f5f24e21e78" translate="yes" xml:space="preserve">
          <source>Clears up the flash storage</source>
          <target state="translated">Limpia el almacenamiento de flash</target>
        </trans-unit>
        <trans-unit id="c7267abbc6b07fa0a184e7ba7bef3624af318696" translate="yes" xml:space="preserve">
          <source>Clears up the flash storage.</source>
          <target state="translated">Limpia el almacenamiento de flash.</target>
        </trans-unit>
        <trans-unit id="7db198a937ac58d5e998c1fdbce3834a5ff9eca3" translate="yes" xml:space="preserve">
          <source>Click Events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60cf063996c1b9df2a4517de67012a483badcb20" translate="yes" xml:space="preserve">
          <source>Client hooks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dc111d8da02e06dcfa7f3b586b2d25ecc95c4de" translate="yes" xml:space="preserve">
          <source>Client-server communication</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6192be022a56d51376cfc6e08fa20fe84d29d186" translate="yes" xml:space="preserve">
          <source>Client-side</source>
          <target state="translated">Client-side</target>
        </trans-unit>
        <trans-unit id="a4fc1028434897d0d9b57e73e4734c9104f06a17" translate="yes" xml:space="preserve">
          <source>Clients are expected to send the Channel Transport protocol version that they expect to be talking to. The version can be retrieved on the server from &lt;code&gt;Phoenix.Channel.Transport.protocol_version/0&lt;/code&gt;. If no version is provided, the Transport adapters should default to assume a &lt;code&gt;&quot;1.0.0&quot;&lt;/code&gt; version number. See &lt;code&gt;web/static/js/phoenix.js&lt;/code&gt; for an example transport client implementation.</source>
          <target state="translated">Se espera que los clientes env&amp;iacute;en la versi&amp;oacute;n del protocolo Channel Transport con la que esperan estar hablando. La versi&amp;oacute;n se puede recuperar en el servidor de &lt;code&gt;Phoenix.Channel.Transport.protocol_version/0&lt;/code&gt; . Si no se proporciona una versi&amp;oacute;n, los adaptadores de transporte deben asumir de forma predeterminada un n&amp;uacute;mero de versi&amp;oacute;n &lt;code&gt;&quot;1.0.0&quot;&lt;/code&gt; . Consulte &lt;code&gt;web/static/js/phoenix.js&lt;/code&gt; para ver una implementaci&amp;oacute;n de cliente de transporte de ejemplo.</target>
        </trans-unit>
        <trans-unit id="bb642ce3e7dd820f226a0eb2901f439ddb01422d" translate="yes" xml:space="preserve">
          <source>Clients can be implemented for other protocols and encodings by abiding by the &lt;a href=&quot;phoenix.socket.message&quot;&gt;&lt;code&gt;Phoenix.Socket.Message&lt;/code&gt;&lt;/a&gt; format.</source>
          <target state="translated">Los clientes se pueden implementar para otros protocolos y codificaciones siguiendo el formato &lt;a href=&quot;phoenix.socket.message&quot;&gt; &lt;code&gt;Phoenix.Socket.Message&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1084b5d1689adfabc4b29c44836fe5d9e843e847" translate="yes" xml:space="preserve">
          <source>Clients must join a channel to send and receive PubSub events on that channel. Your channels must implement a &lt;code&gt;join/3&lt;/code&gt; callback that authorizes the socket for the given topic. For example, you could check if the user is allowed to join that particular room.</source>
          <target state="translated">Los clientes deben unirse a un canal para enviar y recibir eventos PubSub en ese canal. Sus canales deben implementar una devoluci&amp;oacute;n &lt;code&gt;join/3&lt;/code&gt; llamada join / 3 que autorice el socket para el tema dado. Por ejemplo, puede verificar si el usuario puede unirse a esa sala en particular.</target>
        </trans-unit>
        <trans-unit id="e3e91ba77145ff728ca9d0eac7d3d982a8f9407e" translate="yes" xml:space="preserve">
          <source>Closing channels is synchronous and has a default timeout of 5000 milliseconds.</source>
          <target state="translated">El cierre de los canales es sincrónico y tiene un tiempo de espera por defecto de 5000 milisegundos.</target>
        </trans-unit>
        <trans-unit id="211a906235b1f831858d7b7ecaa5593d162a799c" translate="yes" xml:space="preserve">
          <source>Closing socket is synchronous and has a default timeout of 5000 milliseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e8feceb74b432c8991b667a9c81c5f8e448eea1" translate="yes" xml:space="preserve">
          <source>Colocating templates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a59323355e7bcb25157e9c8251a4dbc71cc359d9" translate="yes" xml:space="preserve">
          <source>Combines result sets of multiple queries. The &lt;code&gt;select&lt;/code&gt; of each query must be exactly the same, with the same types in the same order.</source>
          <target state="translated">Combina conjuntos de resultados de varias consultas. La &lt;code&gt;select&lt;/code&gt; de cada consulta debe ser exactamente la misma, con los mismos tipos en el mismo orden.</target>
        </trans-unit>
        <trans-unit id="6e3d3bf1961b8057b125fc05310e2099de8793b0" translate="yes" xml:space="preserve">
          <source>Command line options</source>
          <target state="translated">Opciones de la línea de mando</target>
        </trans-unit>
        <trans-unit id="4ab6bd65a3f415745443c9f59c3ccefed58137d8" translate="yes" xml:space="preserve">
          <source>Commands invoked to prepare a query for &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;update_all&lt;/code&gt; and &lt;code&gt;delete_all&lt;/code&gt;</source>
          <target state="translated">Comandos invocados para preparar una consulta para &lt;code&gt;all&lt;/code&gt; , &lt;code&gt;update_all&lt;/code&gt; y &lt;code&gt;delete_all&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="196b5fd56be1b957e32ac7a8b4599e84def88107" translate="yes" xml:space="preserve">
          <source>Commands invoked to prepare a query for &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;update_all&lt;/code&gt; and &lt;code&gt;delete_all&lt;/code&gt;.</source>
          <target state="translated">Comandos invocados para preparar una consulta para &lt;code&gt;all&lt;/code&gt; , &lt;code&gt;update_all&lt;/code&gt; y &lt;code&gt;delete_all&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2844301d97258408e0b56ee5fddb3e205580943f" translate="yes" xml:space="preserve">
          <source>Commands invoked to prepare a query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79b9d1e12cf78bff3e5126e9af3c55d4704a30ae" translate="yes" xml:space="preserve">
          <source>Common configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4da77b60ddb851ca91679487f66b5c5a58ccc10" translate="yes" xml:space="preserve">
          <source>Communication with the hook from the server can be done by reading data attributes on the hook element, or by using &lt;code&gt;push_event&lt;/code&gt; on the server and &lt;code&gt;handleEvent&lt;/code&gt; on the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd58ee3a270f3a931009900e1008d549bbd7453" translate="yes" xml:space="preserve">
          <source>Community</source>
          <target state="translated">Community</target>
        </trans-unit>
        <trans-unit id="17421e6e6e98cfbe7a994fbcda25e417477a715d" translate="yes" xml:space="preserve">
          <source>Compacts a sets causal history</source>
          <target state="translated">Compacta un conjunto de historia causal</target>
        </trans-unit>
        <trans-unit id="387a836476bd6348742ec8318b4d33ea95c699a4" translate="yes" xml:space="preserve">
          <source>Compacts a sets causal history.</source>
          <target state="translated">Compacta un conjunto de historia causal.</target>
        </trans-unit>
        <trans-unit id="689d04b0d0b115ca5fb5f7a16877d0c6bb47657f" translate="yes" xml:space="preserve">
          <source>Comparison operators: &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">Los operadores de comparaci&amp;oacute;n: &lt;code&gt;==&lt;/code&gt; , &lt;code&gt;!=&lt;/code&gt; , &lt;code&gt;&amp;lt;=&lt;/code&gt; , &lt;code&gt;&amp;gt;=&lt;/code&gt; , &lt;code&gt;&amp;lt;&lt;/code&gt; , &lt;code&gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="918bcba54fa026c44f1439f7ab9003c0124cef3c" translate="yes" xml:space="preserve">
          <source>Compartmentalizing markup and events with &lt;code&gt;render&lt;/code&gt;, &lt;code&gt;live_render&lt;/code&gt;, and &lt;code&gt;live_component&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3993a075f65ea9d57f80c74dc0601a16a30c7c44" translate="yes" xml:space="preserve">
          <source>Compile-time configuration</source>
          <target state="translated">Configuración de tiempo de compilación</target>
        </trans-unit>
        <trans-unit id="1732a6d3f04e93c72bd4b9dfb702a0241b040d30" translate="yes" xml:space="preserve">
          <source>Compile-time usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b43a18b461359f050a29f398ede2e96a808b8612" translate="yes" xml:space="preserve">
          <source>Compiles Phoenix source files that support code reloading.</source>
          <target state="translated">Compila los archivos fuente de Phoenix que soportan la recarga de código.</target>
        </trans-unit>
        <trans-unit id="30bc423bb2cee749c72b094a1a1ffbbd38821f9a" translate="yes" xml:space="preserve">
          <source>Compiles a plug pipeline</source>
          <target state="translated">Compila una tubería de tapón</target>
        </trans-unit>
        <trans-unit id="e9e8fa12309768a3e1cb93436c2d3b7b30a47e37" translate="yes" xml:space="preserve">
          <source>Compiles a plug pipeline.</source>
          <target state="translated">Compila una tubería de tapones.</target>
        </trans-unit>
        <trans-unit id="b2e575ea9a9d857d6127db02e0797a8f845cd20f" translate="yes" xml:space="preserve">
          <source>Complex constraints</source>
          <target state="translated">Restricciones complejas</target>
        </trans-unit>
        <trans-unit id="9289473eeedaee09d76c8cf1b6994d8550debf46" translate="yes" xml:space="preserve">
          <source>Components</source>
          <target state="translated">Components</target>
        </trans-unit>
        <trans-unit id="61ad8d08839edaa60a290fd60feaea502067b874" translate="yes" xml:space="preserve">
          <source>Components are a mechanism to compartmentalize state, markup, and events in LiveView.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef0ea54f7bf365485bc86939f503cb32aa67473d" translate="yes" xml:space="preserve">
          <source>Components are defined by using &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Phoenix.LiveComponent&lt;/code&gt;&lt;/a&gt; and are used by calling &lt;a href=&quot;phoenix.liveview.helpers#live_component/3&quot;&gt;&lt;code&gt;Phoenix.LiveView.Helpers.live_component/3&lt;/code&gt;&lt;/a&gt; in a parent LiveView. Components run inside the LiveView process, but may have their own state and event handling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a61d88321aaa2265b05d3307f6d82fcf04ba645c" translate="yes" xml:space="preserve">
          <source>Components come in two shapes, stateless or stateful. The component above is a stateless component. Of course, the component above is not any different compared to a regular function. However, as we will see, components do provide their own exclusive feature set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="824202a9d631b91d01f0aa367477e1e79210f424" translate="yes" xml:space="preserve">
          <source>Components have their own &lt;code&gt;mount&lt;/code&gt; and &lt;code&gt;handle_event&lt;/code&gt; callbacks, as well as their own state with change tracking support. Components are also lightweight as they &quot;run&quot; in the same process as the parent &lt;code&gt;LiveView&lt;/code&gt;. However, this means an error in a component would cause the whole view to fail to render. See &lt;a href=&quot;phoenix.livecomponent&quot;&gt;&lt;code&gt;Phoenix.LiveComponent&lt;/code&gt;&lt;/a&gt; for a complete rundown on components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80029706257f6bb5bf751796fe48f206d839010b" translate="yes" xml:space="preserve">
          <source>Components must only contain HTML tags at their root. At least one HTML tag must be present. It is not possible to have components that render only text or text mixed with tags at the root.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8c2b863c07cfef68051076ce1f2fcd3a7775d8e" translate="yes" xml:space="preserve">
          <source>Components require at least one HTML tag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="160e7d38bdd6d8bd71eb9ce1b70c379e002b9b0e" translate="yes" xml:space="preserve">
          <source>Composing casts</source>
          <target state="translated">Composición de los elencos</target>
        </trans-unit>
        <trans-unit id="51c4e7e67d8ce6dd5ce03ffdf7dcbcd8ccb2b24b" translate="yes" xml:space="preserve">
          <source>Composing queries uses the same syntax as creating a query. The difference is that, instead of passing a schema like &lt;code&gt;User&lt;/code&gt; on the right side of &lt;code&gt;in&lt;/code&gt;, we passed the query itself.</source>
          <target state="translated">La redacci&amp;oacute;n de consultas utiliza la misma sintaxis que la creaci&amp;oacute;n de una consulta. La diferencia es que, en lugar de pasar un esquema como &lt;code&gt;User&lt;/code&gt; en el lado derecho de &lt;code&gt;in&lt;/code&gt; , pasamos la consulta en s&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="f024ecebf7e716ebba68f23ecf0097530cb0ba47" translate="yes" xml:space="preserve">
          <source>Composite types, such as &lt;code&gt;:array&lt;/code&gt;, are also supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca5e00120498b815c12de59fd45e93f8086a8bfc" translate="yes" xml:space="preserve">
          <source>Composition</source>
          <target state="translated">Composition</target>
        </trans-unit>
        <trans-unit id="ed2ff637c10fb1755e29c0eb2376d67d8e5a91b4" translate="yes" xml:space="preserve">
          <source>Comprehensions</source>
          <target state="translated">Comprehensions</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">Configuration</target>
        </trans-unit>
        <trans-unit id="fd39b3c73364e5cbcaa44c4b6b54b470d09a0303" translate="yes" xml:space="preserve">
          <source>Configure the server to choose a cipher based on its own preferences rather than the client's (&lt;code&gt;honor_cipher_order&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt;); when specifying a custom cipher list, ensure the ciphers are listed in descending order of preference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0094bc74195c0ce7d0dd3d154aa59e783fd72fdf" translate="yes" xml:space="preserve">
          <source>Configures and validates the options given to the &lt;code&gt;:ssl&lt;/code&gt; application</source>
          <target state="translated">Configura y valida las opciones dadas a la aplicaci&amp;oacute;n &lt;code&gt;:ssl&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="56ec8a61db64af5a01bc5e526abfe3c1561050d8" translate="yes" xml:space="preserve">
          <source>Configures and validates the options given to the &lt;code&gt;:ssl&lt;/code&gt; application.</source>
          <target state="translated">Configura y valida las opciones dadas a la aplicaci&amp;oacute;n &lt;code&gt;:ssl&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ffe444e22547ee9f84bad3b053149c9ec3dab7f5" translate="yes" xml:space="preserve">
          <source>Configures the session</source>
          <target state="translated">Configura la sesión</target>
        </trans-unit>
        <trans-unit id="8d1eeb71dc4b14892934e634b5b3675174b1ea15" translate="yes" xml:space="preserve">
          <source>Configures the session.</source>
          <target state="translated">Configura la sesión.</target>
        </trans-unit>
        <trans-unit id="4765f177d51788fc512d290e0c38dd80dfe5dd67" translate="yes" xml:space="preserve">
          <source>Connect info are only sent when the client connects to the server and only remain available during mount. &lt;code&gt;nil&lt;/code&gt; is returned when called in a disconnected state and a &lt;a href=&quot;https://hexdocs.pm/elixir/RuntimeError.html&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; is raised if called after mount.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49de342bd826df7e0023dee547fe1abefc5286de" translate="yes" xml:space="preserve">
          <source>Connect params are only sent when the client connects to the server and only remain available during mount. &lt;code&gt;nil&lt;/code&gt; is returned when called in a disconnected state and a &lt;a href=&quot;https://hexdocs.pm/elixir/RuntimeError.html&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; is raised if called after mount.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6512ee1541e9a6c52d5bf7cf465332e8df25ea3c" translate="yes" xml:space="preserve">
          <source>Connection</source>
          <target state="translated">Connection</target>
        </trans-unit>
        <trans-unit id="623f71d860d9d5252b3bc03398edbc723671e7b8" translate="yes" xml:space="preserve">
          <source>Connection fields</source>
          <target state="translated">Campos de conexión</target>
        </trans-unit>
        <trans-unit id="ad13d05763aa9834d363dfca9b25f6880b260ce0" translate="yes" xml:space="preserve">
          <source>Connects the Phoenix.Socket for a LiveView client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42532c5ec85156dd2636fd9d43331282c462a13d" translate="yes" xml:space="preserve">
          <source>Connects to the socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="825d466786d2b398b37d8973f0e317876f33b62a" translate="yes" xml:space="preserve">
          <source>Consider the case where the application layout allows views to dynamically render a section of script tags in the head of the document. Some views may wish to inject certain scripts, while others will not.</source>
          <target state="translated">Consideremos el caso en que el diseño de la aplicación permite que las vistas muestren dinámicamente una sección de etiquetas de guión en el encabezamiento del documento.Algunas vistas pueden desear inyectar ciertos guiones,mientras que otras no lo harán.</target>
        </trans-unit>
        <trans-unit id="0ec4a9286270cbc6f1229b77dcc30015580bc8f8" translate="yes" xml:space="preserve">
          <source>Consider using &lt;a href=&quot;plug.csrfprotection&quot;&gt;&lt;code&gt;Plug.CSRFProtection&lt;/code&gt;&lt;/a&gt; when using &lt;a href=&quot;plug.session#content&quot;&gt;&lt;code&gt;Plug.Session&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Considere usar &lt;a href=&quot;plug.csrfprotection&quot;&gt; &lt;code&gt;Plug.CSRFProtection&lt;/code&gt; &lt;/a&gt; cuando use &lt;a href=&quot;plug.session#content&quot;&gt; &lt;code&gt;Plug.Session&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e040a458f46532a90ec69fa0b4bfc33ba151c98b" translate="yes" xml:space="preserve">
          <source>Containers</source>
          <target state="translated">Containers</target>
        </trans-unit>
        <trans-unit id="cc11b3a28fa30ae6d3d3ad1438824cbd5224ba5c" translate="yes" xml:space="preserve">
          <source>Context</source>
          <target state="translated">Context</target>
        </trans-unit>
        <trans-unit id="049c25129edc0e21a3c2b9240307623c8b16b3e6" translate="yes" xml:space="preserve">
          <source>Contexts</source>
          <target state="translated">Contexts</target>
        </trans-unit>
        <trans-unit id="70047afe3e810a0b6eea22e32c29f411e2ee4eae" translate="yes" xml:space="preserve">
          <source>Contexts are dedicated modules that expose and group related functionality. For example, anytime you call Elixir's standard library, be it &lt;a href=&quot;https://hexdocs.pm/logger/Logger.html#info/1&quot;&gt;&lt;code&gt;Logger.info/1&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://hexdocs.pm/elixir/Stream.html#map/2&quot;&gt;&lt;code&gt;Stream.map/2&lt;/code&gt;&lt;/a&gt;, you are accessing different contexts. Internally, Elixir's logger is made of multiple modules, but we never interact with those modules directly. We call the &lt;a href=&quot;https://hexdocs.pm/logger/Logger.html&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; module the context, exactly because it exposes and groups all of the logging functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb108ef25a0e4f3e8c59003c81d1e76fee6ec74d" translate="yes" xml:space="preserve">
          <source>Control frames only supported when using websockets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed6760f37bf8055787e8b1d64d4c0d6c88aee901" translate="yes" xml:space="preserve">
          <source>Controller actions are just functions. We can name them anything we like as long as they follow Elixir's naming rules. The only requirement we must fulfill is that the action name matches a route defined in the router.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8aeaea5b25aa2c5fea23cc8ad0bae1d555609a9" translate="yes" xml:space="preserve">
          <source>Controller plugs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e9fb656787fc07e5d6a64599e65e1ccb74bd114" translate="yes" xml:space="preserve">
          <source>Controller testing</source>
          <target state="translated">Prueba del controlador</target>
        </trans-unit>
        <trans-unit id="fd28161568c4e8e181bf8b34d2eb64190067fd07" translate="yes" xml:space="preserve">
          <source>Controllers</source>
          <target state="translated">Controllers</target>
        </trans-unit>
        <trans-unit id="23b977aa3bde982b9c4ecc028c9359ca00bb0cdb" translate="yes" xml:space="preserve">
          <source>Controllers are Elixir modules, and actions are Elixir functions defined in them. The purpose of actions is to gather any data and perform any tasks needed for rendering. Our route specifies that we need a &lt;code&gt;HelloWeb.HelloController&lt;/code&gt; module with an &lt;code&gt;index/2&lt;/code&gt; action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b5353d03e9a8cd11fd0e1a2f7c28e676caa2a91" translate="yes" xml:space="preserve">
          <source>Controllers are plugs</source>
          <target state="translated">Los controladores son enchufes</target>
        </trans-unit>
        <trans-unit id="af452210db5ef164e5270ab6a3485524d2fd8cda" translate="yes" xml:space="preserve">
          <source>Controllers are used to group common functionality in the same (pluggable) module.</source>
          <target state="translated">Los controladores se utilizan para agrupar la funcionalidad común en el mismo módulo (enchufable).</target>
        </trans-unit>
        <trans-unit id="0889440db85bfe21930387ce72d6b8151ec94606" translate="yes" xml:space="preserve">
          <source>Controllers have several ways of rendering content. The simplest is to render some plain text using the &lt;code&gt;text/2&lt;/code&gt; function which Phoenix provides.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb0128974f09f06e681a8725deaa05f012c4805" translate="yes" xml:space="preserve">
          <source>Conveniences for building plugs.</source>
          <target state="translated">Conveniencia para construir enchufes.</target>
        </trans-unit>
        <trans-unit id="9f91a588298f951eb275c2b2ec86df49dc80af8f" translate="yes" xml:space="preserve">
          <source>Conveniences for decoding and encoding url encoded queries.</source>
          <target state="translated">Conveniencia de decodificar y codificar las consultas de la url.</target>
        </trans-unit>
        <trans-unit id="9c580d5a405e26c0a35b518f00ed173cab85f11c" translate="yes" xml:space="preserve">
          <source>Conveniences for encoding and decoding cookies.</source>
          <target state="translated">Conveniencia de codificar y decodificar las galletas.</target>
        </trans-unit>
        <trans-unit id="2505b6a64d4b3e7e31f84accd462c05c58ce0713" translate="yes" xml:space="preserve">
          <source>Conveniences for generating HTML.</source>
          <target state="translated">Conveniencia de generar HTML.</target>
        </trans-unit>
        <trans-unit id="1fefd886f0cee1b93efa1f72cccf15d683e4b0d7" translate="yes" xml:space="preserve">
          <source>Conveniences for inflecting and working with names in Phoenix.</source>
          <target state="translated">Conveniencias para inflexionar y trabajar con nombres en Phoenix.</target>
        </trans-unit>
        <trans-unit id="0a307a909b8251b2b8e81fa6e9fbc145135eec4f" translate="yes" xml:space="preserve">
          <source>Conveniences for testing Phoenix LiveViews.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2079e29298a5fa010672ca1e6447077dbdee3382" translate="yes" xml:space="preserve">
          <source>Conveniences for testing Phoenix channels.</source>
          <target state="translated">Conveniencia de probar los canales de Phoenix.</target>
        </trans-unit>
        <trans-unit id="5c778784530bdea24896902b3d11dadd17f8d90a" translate="yes" xml:space="preserve">
          <source>Conveniences for testing Phoenix endpoints and connection related helpers.</source>
          <target state="translated">Conveniencia de probar los puntos finales de Phoenix y los ayudantes relacionados con la conexión.</target>
        </trans-unit>
        <trans-unit id="c12f2b1bee63bacdcd8fb3213ef55235c074301e" translate="yes" xml:space="preserve">
          <source>Conveniences for testing plugs.</source>
          <target state="translated">Conveniencia para probar los enchufes.</target>
        </trans-unit>
        <trans-unit id="a6a11d3bfeded6baca8d0d4108499315d32aad3d" translate="yes" xml:space="preserve">
          <source>Conveniences for working with links and URLs in HTML.</source>
          <target state="translated">Conveniencia de trabajar con enlaces y URLs en HTML.</target>
        </trans-unit>
        <trans-unit id="e159c91ac2413f8fae02215e9f482d2e98915e2b" translate="yes" xml:space="preserve">
          <source>Conveniences for working with status codes.</source>
          <target state="translated">Conveniencia de trabajar con códigos de estado.</target>
        </trans-unit>
        <trans-unit id="6fc83fdc7bfefcb73b9fa9ddd4eb4f1ae8d72b66" translate="yes" xml:space="preserve">
          <source>Conveniences for writing Ecto related Mix tasks.</source>
          <target state="translated">Conveniencia de escribir tareas de mezcla relacionadas con el ecto.</target>
        </trans-unit>
        <trans-unit id="afe5a05896c4b4d309eff51672348166ee60bc0d" translate="yes" xml:space="preserve">
          <source>Conversely, if the request matches any of the routes defined by the &lt;code&gt;resources/2&lt;/code&gt; macro, the router will pipe it through the &lt;code&gt;:api&lt;/code&gt; pipeline - which currently does nothing - before it dispatches further to the correct action of the &lt;code&gt;HelloWeb.ReviewController&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c99813ce575b22d947e4753c2a53d28fdd0fe4e" translate="yes" xml:space="preserve">
          <source>Converting Certificates and Keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95129317525bffbcf31b7a71e10603f34ad6de04" translate="yes" xml:space="preserve">
          <source>Converts String to camel case</source>
          <target state="translated">Convierte la cuerda en una funda de camello</target>
        </trans-unit>
        <trans-unit id="9db2742f372bacc07fdf355480784f0de6ba2f9d" translate="yes" xml:space="preserve">
          <source>Converts String to camel case.</source>
          <target state="translated">Convierte a String en una caja de camello.</target>
        </trans-unit>
        <trans-unit id="93bd3d691babe59b7646592085998365cd346593" translate="yes" xml:space="preserve">
          <source>Converts String to underscore case</source>
          <target state="translated">Convierte a String en un caso de subrayado</target>
        </trans-unit>
        <trans-unit id="382099623de39c9a305a1c8582eb895d87ef6188" translate="yes" xml:space="preserve">
          <source>Converts String to underscore case.</source>
          <target state="translated">Convierte a String en un caso de subrayado.</target>
        </trans-unit>
        <trans-unit id="27264d44d355d6d25a79ad27fa899bdc74730105" translate="yes" xml:space="preserve">
          <source>Converts a binary UUID into a string</source>
          <target state="translated">Convierte un UUID binario en una cadena</target>
        </trans-unit>
        <trans-unit id="ef60b50efc17b6764635f82f50428935079c6bee" translate="yes" xml:space="preserve">
          <source>Converts a binary UUID into a string.</source>
          <target state="translated">Convierte un UUID binario en una cadena.</target>
        </trans-unit>
        <trans-unit id="9c7adaf7aed01dd8443b57d8556b7c61a17d42d4" translate="yes" xml:space="preserve">
          <source>Converts a data structure into a &lt;a href=&quot;phoenix.html.form&quot;&gt;&lt;code&gt;Phoenix.HTML.Form&lt;/code&gt;&lt;/a&gt; struct</source>
          <target state="translated">Convierte una estructura de datos en una estructura &lt;a href=&quot;phoenix.html.form&quot;&gt; &lt;code&gt;Phoenix.HTML.Form&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5f0924e039579284f4949a209838800577578bd0" translate="yes" xml:space="preserve">
          <source>Converts a data structure into a &lt;a href=&quot;phoenix.html.form&quot;&gt;&lt;code&gt;Phoenix.HTML.Form&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="translated">Convierte una estructura de datos en una estructura &lt;a href=&quot;phoenix.html.form&quot;&gt; &lt;code&gt;Phoenix.HTML.Form&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2488392ad7a5f3949b70e58d9fbf8cfc02210a0a" translate="yes" xml:space="preserve">
          <source>Converts a data structure into a &lt;a href=&quot;phoenix.html.form#t:t/0&quot;&gt;&lt;code&gt;Phoenix.HTML.Form&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="394f609c550517ae5582344720070e6dd46f20bf" translate="yes" xml:space="preserve">
          <source>Converts a data structure into an &lt;a href=&quot;ecto.query&quot;&gt;&lt;code&gt;Ecto.Query&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Convierte una estructura de datos en un &lt;a href=&quot;ecto.query&quot;&gt; &lt;code&gt;Ecto.Query&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f596d3623d5e3b391e0231a81f3148bc79da5b44" translate="yes" xml:space="preserve">
          <source>Converts a log entry into iodata</source>
          <target state="translated">Convierte una entrada de registro en yodatos</target>
        </trans-unit>
        <trans-unit id="dbfac8e7ad86b07e68ffea270a88c3ab47488d9c" translate="yes" xml:space="preserve">
          <source>Converts a log entry into iodata.</source>
          <target state="translated">Convierte una entrada de registro en yodo.</target>
        </trans-unit>
        <trans-unit id="cf24d3bfd1d0adf2c069e4995cacd8de41852380" translate="yes" xml:space="preserve">
          <source>Converts a map with string keys into a message struct</source>
          <target state="translated">Convierte un mapa con claves de cadena en una estructura de mensaje</target>
        </trans-unit>
        <trans-unit id="e1ef56d44b9b008f114784704498cd7afff2ab48" translate="yes" xml:space="preserve">
          <source>Converts a map with string keys into a message struct.</source>
          <target state="translated">Convierte un mapa con claves de cadena en una estructura de mensajes.</target>
        </trans-unit>
        <trans-unit id="c33e6bed7be119b7b0930fe1c8868021fea8977b" translate="yes" xml:space="preserve">
          <source>Converts a module, without the suffix, to a template root.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7649d80868b367f86ce5318ad508d0226a84911" translate="yes" xml:space="preserve">
          <source>Converts a query into a subquery</source>
          <target state="translated">Convierte una consulta en una subconsulta</target>
        </trans-unit>
        <trans-unit id="7ab3d4d922c75660ac90a3c041fe3d0ae49fd685" translate="yes" xml:space="preserve">
          <source>Converts a query into a subquery.</source>
          <target state="translated">Convierte una consulta en una subconsulta.</target>
        </trans-unit>
        <trans-unit id="fbf8235c9b84e1cf4dcffaa3063769e32049314d" translate="yes" xml:space="preserve">
          <source>Converts a safe result into a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a137d6416d0106481b1951e108ca4eae747e5a67" translate="yes" xml:space="preserve">
          <source>Converts a string representing a UUID into a binary</source>
          <target state="translated">Convierte una cadena que representa un UUID en un binario</target>
        </trans-unit>
        <trans-unit id="3140ee13801e4c00a1ff530b15f1f6a6f3a6c1b3" translate="yes" xml:space="preserve">
          <source>Converts a string representing a UUID into a binary.</source>
          <target state="translated">Convierte una cadena que representa un UUID en un binario.</target>
        </trans-unit>
        <trans-unit id="cbb7cf8eb57b429a02944a066a417de565b7469f" translate="yes" xml:space="preserve">
          <source>Converts a string to camel case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26ce8b0a474898457e495afaf507882370bba2fc" translate="yes" xml:space="preserve">
          <source>Converts a string to underscore case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3df0bdacb4443f553b22c73314bcdc4d5486b30" translate="yes" xml:space="preserve">
          <source>Converts an attribute/form field into its humanize version</source>
          <target state="translated">Convierte un campo de atributos/formas en su versión humanizada</target>
        </trans-unit>
        <trans-unit id="19c50d9e2906eb74159ce3992723820e814393d9" translate="yes" xml:space="preserve">
          <source>Converts an attribute/form field into its humanize version.</source>
          <target state="translated">Convierte un campo de atributos/formas en su versión humanizada.</target>
        </trans-unit>
        <trans-unit id="c9733a54bd8f688547630970dbc222882b82e07b" translate="yes" xml:space="preserve">
          <source>Converts the field in the given form based on the data structure into a &lt;a href=&quot;phoenix.html.form&quot;&gt;&lt;code&gt;Phoenix.HTML.Form&lt;/code&gt;&lt;/a&gt; struct</source>
          <target state="translated">Convierte el campo en el formulario dado seg&amp;uacute;n la estructura de datos en una estructura &lt;a href=&quot;phoenix.html.form&quot;&gt; &lt;code&gt;Phoenix.HTML.Form&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f80eee5cfebe6a00f029edb30bd90143409e8bcd" translate="yes" xml:space="preserve">
          <source>Converts the field in the given form based on the data structure into a &lt;a href=&quot;phoenix.html.form&quot;&gt;&lt;code&gt;Phoenix.HTML.Form&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="translated">Convierte el campo en el formulario dado seg&amp;uacute;n la estructura de datos en una estructura &lt;a href=&quot;phoenix.html.form&quot;&gt; &lt;code&gt;Phoenix.HTML.Form&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fd5b3fd023291fd444a733da409ce77d409e34ad" translate="yes" xml:space="preserve">
          <source>Converts the field in the given form based on the data structure into a list of &lt;a href=&quot;phoenix.html.form#t:t/0&quot;&gt;&lt;code&gt;Phoenix.HTML.Form&lt;/code&gt;&lt;/a&gt; structs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c3ce48bee964440fa19b570f3113c68531a8ac5" translate="yes" xml:space="preserve">
          <source>Converts the given &lt;code&gt;data&lt;/code&gt; into an &lt;a href=&quot;ecto.query&quot;&gt;&lt;code&gt;Ecto.Query&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Convierte los &lt;code&gt;data&lt;/code&gt; dados en un &lt;a href=&quot;ecto.query&quot;&gt; &lt;code&gt;Ecto.Query&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d2e1170df570845c7769ccab0dfe55c41e9f204e" translate="yes" xml:space="preserve">
          <source>Converts the given &lt;code&gt;data&lt;/code&gt; into an &lt;a href=&quot;ecto.query&quot;&gt;&lt;code&gt;Ecto.Query&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Convierte los &lt;code&gt;data&lt;/code&gt; dados en un &lt;a href=&quot;ecto.query&quot;&gt; &lt;code&gt;Ecto.Query&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a4eb22565028bee8e57f2538f8a2280b334b9223" translate="yes" xml:space="preserve">
          <source>Converts the template path into the template name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2145883a02bd851ae88a6f4c3355513dfdce656f" translate="yes" xml:space="preserve">
          <source>Cost of stateful components</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87779649d0bc969867c2ebc36aca44610a78a40f" translate="yes" xml:space="preserve">
          <source>Could be configured with:</source>
          <target state="translated">Se puede configurar con:</target>
        </trans-unit>
        <trans-unit id="1d9bb1fefb027c333b59cf87a86b727eef409e8b" translate="yes" xml:space="preserve">
          <source>Counts the distinct values in given entry</source>
          <target state="translated">Cuenta los distintos valores en una entrada determinada</target>
        </trans-unit>
        <trans-unit id="2de639a472b6b9495362bab1a9c12f1367933775" translate="yes" xml:space="preserve">
          <source>Counts the distinct values in given entry.</source>
          <target state="translated">Cuenta los distintos valores en una entrada dada.</target>
        </trans-unit>
        <trans-unit id="5075701de21a11711a31e4e2bb5ce2e539c5f1a6" translate="yes" xml:space="preserve">
          <source>Counts the entries in the table</source>
          <target state="translated">Cuenta las entradas de la tabla</target>
        </trans-unit>
        <trans-unit id="5335fb3a68b01d2c891c9707977fc5953efe5ecb" translate="yes" xml:space="preserve">
          <source>Counts the entries in the table.</source>
          <target state="translated">Cuenta las entradas de la tabla.</target>
        </trans-unit>
        <trans-unit id="60cab376ddb9984f252e1e5dc8b0676b16a76836" translate="yes" xml:space="preserve">
          <source>Counts the given entry</source>
          <target state="translated">Cuenta la entrada dada</target>
        </trans-unit>
        <trans-unit id="8b583bcad8995030f3efb2a4003bf44dbfe7f84f" translate="yes" xml:space="preserve">
          <source>Counts the given entry.</source>
          <target state="translated">Cuenta la entrada dada.</target>
        </trans-unit>
        <trans-unit id="1876139b7bf3518c493b5eb0ca99f3080dac4817" translate="yes" xml:space="preserve">
          <source>Create &lt;code&gt;lib/hello_web/templates/hello/index.html.eex&lt;/code&gt; and make it look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f3b0737e02ceebda5bb8873005e6a1ce1384b34" translate="yes" xml:space="preserve">
          <source>Create an IPTables rule to forward packets arriving on port 443 to the port on which the Elixir application is running</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6667c873b195491c47b83841b5d1a221b1d01d60" translate="yes" xml:space="preserve">
          <source>Create the storage for the given repository.</source>
          <target state="translated">Crear el almacenamiento para el depósito dado.</target>
        </trans-unit>
        <trans-unit id="d1f5d6dc55285577b611a56099866fe7a5540361" translate="yes" xml:space="preserve">
          <source>Creates a connection to be used in upcoming requests</source>
          <target state="translated">Crea una conexión que se utilizará en las próximas solicitudes</target>
        </trans-unit>
        <trans-unit id="a5620a9d32b1815c7e1e4a69d7c0269ff6490d80" translate="yes" xml:space="preserve">
          <source>Creates a connection to be used in upcoming requests with a preset method, path and body</source>
          <target state="translated">Crea una conexión que se utilizará en las próximas solicitudes con un método,una ruta y un cuerpo preestablecidos</target>
        </trans-unit>
        <trans-unit id="2ea17fb47f2e2bc29906e1a835f386b622c5e0fc" translate="yes" xml:space="preserve">
          <source>Creates a connection to be used in upcoming requests with a preset method, path and body.</source>
          <target state="translated">Crea una conexión que se utilizará en las próximas solicitudes con un método,una ruta y un cuerpo preestablecidos.</target>
        </trans-unit>
        <trans-unit id="6ca5933e33322f2725154605349ac03436e17d81" translate="yes" xml:space="preserve">
          <source>Creates a connection to be used in upcoming requests.</source>
          <target state="translated">Crea una conexión para ser usada en las próximas solicitudes.</target>
        </trans-unit>
        <trans-unit id="70b94307a4dc9f10ac59815d5581c6cf154df836" translate="yes" xml:space="preserve">
          <source>Creates a new Ecto project within an umbrella project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee543683371c801678c35510a84f0d50112834c" translate="yes" xml:space="preserve">
          <source>Creates a new Phoenix project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="784d5191d3a9b5906409d3610a3e60bef7215313" translate="yes" xml:space="preserve">
          <source>Creates a new Phoenix web project within an umbrella project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="655bf80f22d5ac7bdc88e18fa1d2f5c44bf8a2a4" translate="yes" xml:space="preserve">
          <source>Creates a new set for the replica</source>
          <target state="translated">Crea un nuevo conjunto para la réplica</target>
        </trans-unit>
        <trans-unit id="6c3c516ff83fdb7b3890a578438dd63e0ad4b906" translate="yes" xml:space="preserve">
          <source>Creates a new set for the replica.</source>
          <target state="translated">Crea un nuevo conjunto para la réplica.</target>
        </trans-unit>
        <trans-unit id="903417493612112fb660a9adcb58f5b243ad96cb" translate="yes" xml:space="preserve">
          <source>Creates a private key and a self-signed certificate in PEM format. These files can be referenced in the &lt;code&gt;certfile&lt;/code&gt; and &lt;code&gt;keyfile&lt;/code&gt; parameters of an HTTPS Endpoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb0bb19ce2b3aec84766cc9b34cd1b86693717c" translate="yes" xml:space="preserve">
          <source>Creates a query</source>
          <target state="translated">Crea una consulta</target>
        </trans-unit>
        <trans-unit id="9964ed477088ce9376af7d997db469e2c481c304" translate="yes" xml:space="preserve">
          <source>Creates a query.</source>
          <target state="translated">Crea una consulta.</target>
        </trans-unit>
        <trans-unit id="a92e7e3e21980465afda5df639077acd5e141d84" translate="yes" xml:space="preserve">
          <source>Creates a test connection</source>
          <target state="translated">Crea una conexión de prueba</target>
        </trans-unit>
        <trans-unit id="918f746fe680a623785f18e086e4d2e620665b7f" translate="yes" xml:space="preserve">
          <source>Creates a test connection.</source>
          <target state="translated">Crea una conexión de prueba.</target>
        </trans-unit>
        <trans-unit id="8db62c40dd78a09a060d952689268f9b49ea9f86" translate="yes" xml:space="preserve">
          <source>Creates an HTML tag with given name, content, and attributes</source>
          <target state="translated">Crea una etiqueta HTML con nombre,contenido y atributos.</target>
        </trans-unit>
        <trans-unit id="3c2bcae89a9be8a6c6feb5e8cc3b8e46a02f681c" translate="yes" xml:space="preserve">
          <source>Creates an HTML tag with given name, content, and attributes.</source>
          <target state="translated">Crea una etiqueta HTML con nombre,contenido y atributos.</target>
        </trans-unit>
        <trans-unit id="058d15dfe83b62882d54c2ff61d2e4edaf0d99a4" translate="yes" xml:space="preserve">
          <source>Creates an HTML tag with the given name and options</source>
          <target state="translated">Crea una etiqueta HTML con el nombre dado y las opciones</target>
        </trans-unit>
        <trans-unit id="27795a4c9e11b853e78c13b85bd3773163ca27e4" translate="yes" xml:space="preserve">
          <source>Creates an HTML tag with the given name and options.</source>
          <target state="translated">Crea una etiqueta HTML con el nombre y las opciones.</target>
        </trans-unit>
        <trans-unit id="295e8002fe94af556c61be9eb91674d5beffbd44" translate="yes" xml:space="preserve">
          <source>Creates the storage given by options</source>
          <target state="translated">Crea el almacenamiento dado por las opciones</target>
        </trans-unit>
        <trans-unit id="5092de28cfa9bf4a13d1673eb10f6c4ffa40c2cf" translate="yes" xml:space="preserve">
          <source>Creates the storage given by options.</source>
          <target state="translated">Crea el almacenamiento dado por las opciones.</target>
        </trans-unit>
        <trans-unit id="6fddd8f570b73edf6ee6aedf1e1d2ce52b9a828f" translate="yes" xml:space="preserve">
          <source>Creating New Pipelines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe2674b19a4ef350832065f14e6baacfe810c2e3" translate="yes" xml:space="preserve">
          <source>Creating our own Mix task</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d4716c204e14d61e0edc2d892b38e427e83183b" translate="yes" xml:space="preserve">
          <source>Cross-context data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fefc4554f3bb27eee0508ae30ee9670eba6ade5" translate="yes" xml:space="preserve">
          <source>Cross-context dependencies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e51d2e5aed57b208ac929160777789364e28e92" translate="yes" xml:space="preserve">
          <source>Cross-host protection</source>
          <target state="translated">Protección de los anfitriones cruzados</target>
        </trans-unit>
        <trans-unit id="bb429da394c6fd75bb855fb4e738199598fe54a0" translate="yes" xml:space="preserve">
          <source>Currently it is possible to join on:</source>
          <target state="translated">Actualmente es posible unirse:</target>
        </trans-unit>
        <trans-unit id="45672bcfb95487b9a1fe832c5ef8aef6e8144968" translate="yes" xml:space="preserve">
          <source>Currently used as a wrapper function for &lt;a href=&quot;../plug/1.5.1/plug.csrfprotection&quot;&gt;&lt;code&gt;Plug.CSRFProtection&lt;/code&gt;&lt;/a&gt; and mainly serves as a function plug in &lt;code&gt;YourApp.Router&lt;/code&gt;.</source>
          <target state="translated">Actualmente se utiliza como funci&amp;oacute;n contenedora para &lt;a href=&quot;../plug/1.5.1/plug.csrfprotection&quot;&gt; &lt;code&gt;Plug.CSRFProtection&lt;/code&gt; &lt;/a&gt; y sirve principalmente como funci&amp;oacute;n de complemento en &lt;code&gt;YourApp.Router&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9e8527b505d4d3ff1f51bd74f2ccae06781c8af7" translate="yes" xml:space="preserve">
          <source>Currently used as a wrapper function for &lt;a href=&quot;../plug/plug.csrfprotection&quot;&gt;&lt;code&gt;Plug.CSRFProtection&lt;/code&gt;&lt;/a&gt; and mainly serves as a function plug in &lt;code&gt;YourApp.Router&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6957b2308908d930700a3fc3c2b95aecb98c34" translate="yes" xml:space="preserve">
          <source>Currently, the &lt;code&gt;:api&lt;/code&gt; pipeline only defines &lt;code&gt;plug :accepts, [&quot;json&quot;]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0e856d3cac9ea58a4f2fe05ca46f1dc55eefce3" translate="yes" xml:space="preserve">
          <source>Custom Banners</source>
          <target state="translated">Banners personalizados</target>
        </trans-unit>
        <trans-unit id="8910f91b530d92a694e424d7330f749443421ac3" translate="yes" xml:space="preserve">
          <source>Custom Diffie-Hellman Parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8394a6d089573458fed901e2364c860b5809ed9b" translate="yes" xml:space="preserve">
          <source>Custom Error Pages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30f552fb7d2523e7c921d75d7494408388c644e4" translate="yes" xml:space="preserve">
          <source>Custom Events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cb6610e5fe1ba6a9df3dbf15438243872b7bb0f" translate="yes" xml:space="preserve">
          <source>Custom Exceptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb28204576a2e213094f3931ed41fe053faca307" translate="yes" xml:space="preserve">
          <source>Custom Template Engines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ad7995578312dcb09b4588cadcc8d6e2f426a4f" translate="yes" xml:space="preserve">
          <source>Custom URL Generation</source>
          <target state="translated">Generación de URL personalizada</target>
        </trans-unit>
        <trans-unit id="15c7584e3aa4d76e12311bbd0dca1b00c9c3931c" translate="yes" xml:space="preserve">
          <source>Custom body reader</source>
          <target state="translated">Lector de cuerpo personalizado</target>
        </trans-unit>
        <trans-unit id="c2f2a16fff225306736a35106079f78ddaa48623" translate="yes" xml:space="preserve">
          <source>Custom channel implementations cannot be tested with &lt;a href=&quot;phoenix.channeltest&quot;&gt;&lt;code&gt;Phoenix.ChannelTest&lt;/code&gt;&lt;/a&gt; and are currently considered experimental. The underlying API may be changed at any moment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9b3d50b9cbecd1c2335b3dee818de27f68cbef9" translate="yes" xml:space="preserve">
          <source>Custom channels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e21c9d3fe8c1579e1cd153dea9fb31d60cb8f21" translate="yes" xml:space="preserve">
          <source>Custom dispatch options</source>
          <target state="translated">Opciones de despacho personalizadas</target>
        </trans-unit>
        <trans-unit id="c047062656465c310928cc009c6d3064733926db" translate="yes" xml:space="preserve">
          <source>Custom dispatching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a79178c5b084f44fa3889f0d755f1d4399127ea8" translate="yes" xml:space="preserve">
          <source>Custom media types</source>
          <target state="translated">Tipos de medios personalizados</target>
        </trans-unit>
        <trans-unit id="3a766c13565fe19675393ce2a7b6137d5d93894a" translate="yes" xml:space="preserve">
          <source>Custom parameters</source>
          <target state="translated">Parámetros personalizados</target>
        </trans-unit>
        <trans-unit id="d80fc8ccc23b2e9580041e5c8771b1057edcb042" translate="yes" xml:space="preserve">
          <source>Custom serializers may be configured in the socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b4b6c5cdc1d2d58f4c757a35dc8aa9f75bf0e91" translate="yes" xml:space="preserve">
          <source>Custom sockets and transports</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="592888624942f64ddca66ef92a9ecf07af58ad65" translate="yes" xml:space="preserve">
          <source>Custom status codes</source>
          <target state="translated">Códigos de estado personalizados</target>
        </trans-unit>
        <trans-unit id="03c69cf1ba719cfa330283492e4177050d830b2f" translate="yes" xml:space="preserve">
          <source>Custom styles</source>
          <target state="translated">Estilos personalizados</target>
        </trans-unit>
        <trans-unit id="f7efae42f4cccc2527f00c7304e9225bf67da76b" translate="yes" xml:space="preserve">
          <source>Custom transports</source>
          <target state="translated">Los transportes aduaneros</target>
        </trans-unit>
        <trans-unit id="01968668870202b08c982a5f347b7df980dee05e" translate="yes" xml:space="preserve">
          <source>Custom type</source>
          <target state="translated">Tipo personalizado</target>
        </trans-unit>
        <trans-unit id="81ef71c7c4675a503829d703092a4f5cab2a4d3a" translate="yes" xml:space="preserve">
          <source>Custom types</source>
          <target state="translated">Tipos personalizados</target>
        </trans-unit>
        <trans-unit id="cb0f0b880fc41f72fa4da44b365d92d0e1e98258" translate="yes" xml:space="preserve">
          <source>Custom types and primary keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69a7d510ecf32ff0355d3b76dd97f825ed970bf0" translate="yes" xml:space="preserve">
          <source>Custom types are represented by user-defined modules</source>
          <target state="translated">Los tipos personalizados están representados por módulos definidos por el usuario</target>
        </trans-unit>
        <trans-unit id="6eafee3e694a6d6c7ed59b8497b3079202604841" translate="yes" xml:space="preserve">
          <source>Custom types are represented by user-defined modules.</source>
          <target state="translated">Los tipos personalizados están representados por módulos definidos por el usuario.</target>
        </trans-unit>
        <trans-unit id="b3653020c71c4777d50b6793ad417b1e51a7f288" translate="yes" xml:space="preserve">
          <source>Customising the context, schema, tables and migrations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b07356911684fcc96e48e208b012d821acafcf51" translate="yes" xml:space="preserve">
          <source>DER-encoded files contain binary data. Common file extensions are &lt;code&gt;.crt&lt;/code&gt; for certificates and &lt;code&gt;.key&lt;/code&gt; for keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="899aa8f2fba2b494f0348110cdaa1426a374a618" translate="yes" xml:space="preserve">
          <source>DOM Patching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dbca882b37a7c4c2bfde552e8d99b4bb7e720ea" translate="yes" xml:space="preserve">
          <source>DOM patching and temporary assigns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c13d188b3282dee3affd5deb83976d7618f628a2" translate="yes" xml:space="preserve">
          <source>Data Persistence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1aa668724cef525e095f5266a0e6ca216f30dc2" translate="yes" xml:space="preserve">
          <source>Data attributes</source>
          <target state="translated">Atributos de la fecha</target>
        </trans-unit>
        <trans-unit id="22ee43137eb33104fa6bb25df0d11793f36f2af6" translate="yes" xml:space="preserve">
          <source>Data attributes are added as a keyword list passed to the &lt;code&gt;data&lt;/code&gt; key. The following data attributes are supported:</source>
          <target state="translated">Los atributos de datos se agregan como una lista de palabras clave que se pasa a la clave de &lt;code&gt;data&lt;/code&gt; . Se admiten los siguientes atributos de datos:</target>
        </trans-unit>
        <trans-unit id="dfbea07707e01cf3d5cd2917e0db646244e80fb4" translate="yes" xml:space="preserve">
          <source>Database type</source>
          <target state="translated">Tipo de base de datos</target>
        </trans-unit>
        <trans-unit id="2b0147a202c0652436982e4210c99e4db43e1984" translate="yes" xml:space="preserve">
          <source>Databases like MongoDB have native support for embeds. Databases like PostgreSQL uses a mixture of JSONB (&lt;code&gt;embeds_one/3&lt;/code&gt;) and ARRAY columns to provide this functionality.</source>
          <target state="translated">Las bases de datos como MongoDB tienen soporte nativo para incrustaciones. Las bases de datos como PostgreSQL utilizan una mezcla de JSONB ( &lt;code&gt;embeds_one/3&lt;/code&gt; ) y columnas ARRAY para proporcionar esta funcionalidad.</target>
        </trans-unit>
        <trans-unit id="348c5694e0d7d8db4752697a7c185717753760e0" translate="yes" xml:space="preserve">
          <source>Date/time intervals: &lt;a href=&quot;#datetime_add/3&quot;&gt;&lt;code&gt;datetime_add/3&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#date_add/3&quot;&gt;&lt;code&gt;date_add/3&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#from_now/2&quot;&gt;&lt;code&gt;from_now/2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ago/2&quot;&gt;&lt;code&gt;ago/2&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Intervalos de &lt;a href=&quot;#datetime_add/3&quot;&gt; &lt;code&gt;datetime_add/3&lt;/code&gt; &lt;/a&gt; : datetime_add / 3 , &lt;a href=&quot;#date_add/3&quot;&gt; &lt;code&gt;date_add/3&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#from_now/2&quot;&gt; &lt;code&gt;from_now/2&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#ago/2&quot;&gt; &lt;code&gt;ago/2&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4b49d95452b9e3f848c81d1495d9817e624bbefc" translate="yes" xml:space="preserve">
          <source>Debounce and Throttle special behavior</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f32a6d38c05f0b1a313df80e1bd2e914cfe8619d" translate="yes" xml:space="preserve">
          <source>Debugging Client Events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc28334dbb2ee4b63b89c25268676f3540cb8080" translate="yes" xml:space="preserve">
          <source>Decodes iodata into &lt;a href=&quot;phoenix.socket.message&quot;&gt;&lt;code&gt;Phoenix.Socket.Message&lt;/code&gt;&lt;/a&gt; struct</source>
          <target state="translated">Decodifica iodata en la estructura &lt;a href=&quot;phoenix.socket.message&quot;&gt; &lt;code&gt;Phoenix.Socket.Message&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="53208e29b0c02dae50868ef8eb853e68e9f52795" translate="yes" xml:space="preserve">
          <source>Decodes iodata into &lt;a href=&quot;phoenix.socket.message&quot;&gt;&lt;code&gt;Phoenix.Socket.Message&lt;/code&gt;&lt;/a&gt; struct.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5022d1fa92e4a008b4f97389512658b390541e37" translate="yes" xml:space="preserve">
          <source>Decodes the given binary</source>
          <target state="translated">Decodifica el binario dado</target>
        </trans-unit>
        <trans-unit id="a4fc2ef19091b283310f075f39eebdbc574b872c" translate="yes" xml:space="preserve">
          <source>Decodes the given binary.</source>
          <target state="translated">Decodifica el binario dado.</target>
        </trans-unit>
        <trans-unit id="2cf36e2a8c8c57a5b892035925a389f0221c6e5a" translate="yes" xml:space="preserve">
          <source>Decodes the given cookies as given in a request header</source>
          <target state="translated">Decodifica las galletas dadas como se dan en el encabezado de una solicitud</target>
        </trans-unit>
        <trans-unit id="d138261ed7bfce68ab9d9284286314a08d6fb068" translate="yes" xml:space="preserve">
          <source>Decodes the given cookies as given in a request header.</source>
          <target state="translated">Decodifica las galletas dadas como se dan en el encabezado de una solicitud.</target>
        </trans-unit>
        <trans-unit id="ca8311e42f92d6b90a66d2da6614569a1aefd83a" translate="yes" xml:space="preserve">
          <source>Decodes the given cookies as given in either a request or response header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="165d936d32d794f4a22a59a865476cf0fb810a18" translate="yes" xml:space="preserve">
          <source>Decodes the given tuple and stores it in the accumulator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67791571081f15deaa98bef144e603752a37648d" translate="yes" xml:space="preserve">
          <source>Decodes the given tuple and stores it in the accumulator. It parses the key and stores the value into the current accumulator</source>
          <target state="translated">Decodifica la tupla dada y la almacena en el acumulador.Analiza la clave y almacena el valor en el acumulador actual</target>
        </trans-unit>
        <trans-unit id="6e49719641c1902ad6eefa0319fd41e19a3586ac" translate="yes" xml:space="preserve">
          <source>Decodes the given tuple and stores it in the accumulator. It parses the key and stores the value into the current accumulator.</source>
          <target state="translated">Decodifica la tupla dada y la almacena en el acumulador.Analiza la clave y almacena el valor en el acumulador actual.</target>
        </trans-unit>
        <trans-unit id="6ee990d02025019ecfcb5edf1b4c4ec39e936da7" translate="yes" xml:space="preserve">
          <source>Decodes the original data from the token and verifies its integrity</source>
          <target state="translated">Decodifica los datos originales de la ficha y verifica su integridad</target>
        </trans-unit>
        <trans-unit id="f049b89b24eb9935b3ca98ad1fb0f9d2cd9f68e8" translate="yes" xml:space="preserve">
          <source>Decodes the original data from the token and verifies its integrity.</source>
          <target state="translated">Decodifica los datos originales de la ficha y verifica su integridad.</target>
        </trans-unit>
        <trans-unit id="75c3a4309a68aab2ae1c45fc6b0180e2877459be" translate="yes" xml:space="preserve">
          <source>Decrypts the original data from the token and verifies its integrity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3756df3c62f47f45ddc117d75f48aa29a7d1dddb" translate="yes" xml:space="preserve">
          <source>Default options</source>
          <target state="translated">Opciones por defecto</target>
        </trans-unit>
        <trans-unit id="4da88ad909650175990a0a974e2ffa17afb351c7" translate="yes" xml:space="preserve">
          <source>Deferred constraints</source>
          <target state="translated">Restricciones diferidas</target>
        </trans-unit>
        <trans-unit id="34eb2207fae4118dc031e43bd682836d552cd605" translate="yes" xml:space="preserve">
          <source>Define a scope with the given path</source>
          <target state="translated">Definir un alcance con el camino dado</target>
        </trans-unit>
        <trans-unit id="8a24bfbfe4b950fbe1f98d96017ddb61058636dd" translate="yes" xml:space="preserve">
          <source>Define a scope with the given path.</source>
          <target state="translated">Definir un alcance con el camino dado.</target>
        </trans-unit>
        <trans-unit id="0ced961e1fc2c779109475084148a80717b33982" translate="yes" xml:space="preserve">
          <source>Defines &quot;RESTful&quot; routes for a resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c555127295a2b019c70780dc39a214d0b9c44313" translate="yes" xml:space="preserve">
          <source>Defines &amp;ldquo;RESTful&amp;rdquo; routes for a resource</source>
          <target state="translated">Define rutas &quot;RESTful&quot; para un recurso</target>
        </trans-unit>
        <trans-unit id="e546933a6e0a686579d2072a045b2b24d13e1704" translate="yes" xml:space="preserve">
          <source>Defines &amp;ldquo;RESTful&amp;rdquo; routes for a resource.</source>
          <target state="translated">Define rutas &quot;RESTful&quot; para un recurso.</target>
        </trans-unit>
        <trans-unit id="e813bf25abf682ba0e9eab4d5891d8518a52aacb" translate="yes" xml:space="preserve">
          <source>Defines a LiveView route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d29baddf329cf4df77e0fcaa04d26f8d7bf3e15a" translate="yes" xml:space="preserve">
          <source>Defines a Phoenix Channel.</source>
          <target state="translated">Define un Canal Fénix.</target>
        </trans-unit>
        <trans-unit id="235705cdc0369983f9f6de9af060949e5f16a26a" translate="yes" xml:space="preserve">
          <source>Defines a Phoenix endpoint.</source>
          <target state="translated">Define un punto final de Phoenix.</target>
        </trans-unit>
        <trans-unit id="dea58b4fafe180816f5fde43f615b9aea00c40bf" translate="yes" xml:space="preserve">
          <source>Defines a Phoenix router.</source>
          <target state="translated">Define un router Phoenix.</target>
        </trans-unit>
        <trans-unit id="6390ec122493c1583a174fe9ac5e369023b0024b" translate="yes" xml:space="preserve">
          <source>Defines a behaviour for &lt;a href=&quot;phoenix.socket.message&quot;&gt;&lt;code&gt;Phoenix.Socket.Message&lt;/code&gt;&lt;/a&gt; serialization.</source>
          <target state="translated">Define un comportamiento para la serializaci&amp;oacute;n de &lt;a href=&quot;phoenix.socket.message&quot;&gt; &lt;code&gt;Phoenix.Socket.Message&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2d792c91b226ca5abb5305609b372b30da2cb4da" translate="yes" xml:space="preserve">
          <source>Defines a channel matching the given topic and transports</source>
          <target state="translated">Define un canal que coincide con el tema dado y transporta</target>
        </trans-unit>
        <trans-unit id="3fa26eb70159f8ab640869d100ff7fbb8ebe0a73" translate="yes" xml:space="preserve">
          <source>Defines a channel matching the given topic and transports.</source>
          <target state="translated">Define un canal que coincide con el tema dado y transporta.</target>
        </trans-unit>
        <trans-unit id="af64f873d5500ce120a33c0e800349fe35b237d0" translate="yes" xml:space="preserve">
          <source>Defines a field on the schema with given name and type</source>
          <target state="translated">Define un campo en el esquema con un nombre y un tipo determinado</target>
        </trans-unit>
        <trans-unit id="efd699e27ca43fdec598faa06974044bb2a848bd" translate="yes" xml:space="preserve">
          <source>Defines a field on the schema with given name and type.</source>
          <target state="translated">Define un campo en el esquema con un nombre y un tipo determinado.</target>
        </trans-unit>
        <trans-unit id="f5407c8df5253b536e5c0092684631c55cd4cddc" translate="yes" xml:space="preserve">
          <source>Defines a list of plugs (and pipelines) to send the connection through.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67fbef7f15ed2faf874560243ca0083838e6bee5" translate="yes" xml:space="preserve">
          <source>Defines a message dispatched over transport to channels and vice-versa.</source>
          <target state="translated">Define un mensaje enviado por transporte a los canales y viceversa.</target>
        </trans-unit>
        <trans-unit id="28d7d8b620546f752b3959eef610fcd5b88b94e5" translate="yes" xml:space="preserve">
          <source>Defines a message sent from pubsub to channels and vice-versa.</source>
          <target state="translated">Define un mensaje enviado desde el pubsub a los canales y viceversa.</target>
        </trans-unit>
        <trans-unit id="b678f4e27bfbccbb54653172d4d94b97d52dd042" translate="yes" xml:space="preserve">
          <source>Defines a mount-point for a Socket module to handle channel definitions</source>
          <target state="translated">Define un punto de montaje para que un módulo de zócalo maneje las definiciones de los canales</target>
        </trans-unit>
        <trans-unit id="28cde125da30c3d4b8b02c57be5bbe5f2584445c" translate="yes" xml:space="preserve">
          <source>Defines a mount-point for a Socket module to handle channel definitions.</source>
          <target state="translated">Define un punto de montaje para que un módulo de zócalo se encargue de las definiciones de los canales.</target>
        </trans-unit>
        <trans-unit id="2ea9f414a6265695d3c3e707a27efc7759441b20" translate="yes" xml:space="preserve">
          <source>Defines a pipeline to send the connection through</source>
          <target state="translated">Define una tubería para enviar la conexión a través de</target>
        </trans-unit>
        <trans-unit id="67004c69d07a77e0364830f2e64643972bb5c715" translate="yes" xml:space="preserve">
          <source>Defines a pipeline to send the connection through.</source>
          <target state="translated">Define una tubería para enviar la conexión a través de ella.</target>
        </trans-unit>
        <trans-unit id="626377c188b161f8ee92a6f60c67907ced021330" translate="yes" xml:space="preserve">
          <source>Defines a plug inside a pipeline</source>
          <target state="translated">Define un tapón dentro de una tubería</target>
        </trans-unit>
        <trans-unit id="74844af7ddd6384b64831149a05b11c4fde3ff06" translate="yes" xml:space="preserve">
          <source>Defines a plug inside a pipeline.</source>
          <target state="translated">Define un tapón dentro de una tubería.</target>
        </trans-unit>
        <trans-unit id="8682bc32fd5509667c0e1dce1a301a5e6250f8b7" translate="yes" xml:space="preserve">
          <source>Defines a plug pipeline</source>
          <target state="translated">Define una tubería de tapón</target>
        </trans-unit>
        <trans-unit id="72233b14665ba28dfb9fa2ca6d5bec41f35d1fe6" translate="yes" xml:space="preserve">
          <source>Defines a plug pipeline.</source>
          <target state="translated">Define una tubería de tapón.</target>
        </trans-unit>
        <trans-unit id="7aaae2212cb7e4596cdbd559a955ffac90ed46ce" translate="yes" xml:space="preserve">
          <source>Defines a reply sent from channels to transports.</source>
          <target state="translated">Define una respuesta enviada desde los canales a los transportes.</target>
        </trans-unit>
        <trans-unit id="5df899000fa3205a84a1083055e157624bb5913b" translate="yes" xml:space="preserve">
          <source>Defines a repository.</source>
          <target state="translated">Define un depósito.</target>
        </trans-unit>
        <trans-unit id="8910a742cc5c74828188debf44ec1420d5d8e4e1" translate="yes" xml:space="preserve">
          <source>Defines a schema struct with a source name and field definitions</source>
          <target state="translated">Define una estructura de esquema con un nombre de fuente y definiciones de campo</target>
        </trans-unit>
        <trans-unit id="ab322b11466dcd7175f28e1be2949b280aaf773f" translate="yes" xml:space="preserve">
          <source>Defines a schema struct with a source name and field definitions.</source>
          <target state="translated">Define una estructura de esquema con un nombre de fuente y definiciones de campo.</target>
        </trans-unit>
        <trans-unit id="8d20d470d617c99121e5f459af0d902f39b06c39" translate="yes" xml:space="preserve">
          <source>Defines a schema.</source>
          <target state="translated">Define un esquema.</target>
        </trans-unit>
        <trans-unit id="73e2ef4d927292ff9b405a59dcb7fae197bf1c2c" translate="yes" xml:space="preserve">
          <source>Defines a scope in which routes can be nested</source>
          <target state="translated">Define un ámbito en el que se pueden anidar las rutas</target>
        </trans-unit>
        <trans-unit id="36cbf44758b5984aef0b549664bbe669a4c4938f" translate="yes" xml:space="preserve">
          <source>Defines a scope in which routes can be nested.</source>
          <target state="translated">Define un ámbito en el que las rutas pueden anidarse.</target>
        </trans-unit>
        <trans-unit id="33f13eac830e5d11dbbc012b15c928e78e648963" translate="yes" xml:space="preserve">
          <source>Defines a scope with the given path and alias</source>
          <target state="translated">Define un alcance con la ruta y el alias dados</target>
        </trans-unit>
        <trans-unit id="66efb298c9aabf9ccbc899061404636e728d9ff4" translate="yes" xml:space="preserve">
          <source>Defines a scope with the given path and alias.</source>
          <target state="translated">Define un alcance con la ruta y el alias dados.</target>
        </trans-unit>
        <trans-unit id="6075960a9e3871d4098ed3ef627f906f411517cd" translate="yes" xml:space="preserve">
          <source>Defines a socket and its state.</source>
          <target state="translated">Define un enchufe y su estado.</target>
        </trans-unit>
        <trans-unit id="40a2893ccaafecb4be3a8b5b85cdff7f0a543871" translate="yes" xml:space="preserve">
          <source>Defines a transport with configuration</source>
          <target state="translated">Define un transporte con configuración</target>
        </trans-unit>
        <trans-unit id="2e9243ed85aceecaa626c37b6242e99524b81dbb" translate="yes" xml:space="preserve">
          <source>Defines a transport with configuration.</source>
          <target state="translated">Define un transporte con configuración.</target>
        </trans-unit>
        <trans-unit id="1045219e4b28301c00581a67c31b46173d004740" translate="yes" xml:space="preserve">
          <source>Defines a websocket/longpoll mount-point for a socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6f7548bed405a22c425526cc2c285184b3f2c22" translate="yes" xml:space="preserve">
          <source>Defines an embedded schema with the given field definitions</source>
          <target state="translated">Define un esquema incrustado con las definiciones de campo dadas</target>
        </trans-unit>
        <trans-unit id="8fa803bf79623a181b5123498ee6f231f614a1bb" translate="yes" xml:space="preserve">
          <source>Defines an embedded schema with the given field definitions.</source>
          <target state="translated">Define un esquema incrustado con las definiciones de campo dadas.</target>
        </trans-unit>
        <trans-unit id="f2e1039f6e296b404c3b628cd0bcb31c1f64121b" translate="yes" xml:space="preserve">
          <source>Defines functions and the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Ecto.Type&lt;/code&gt;&lt;/a&gt; behaviour for implementing basic custom types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6432ba9d89cda272407151bb646031fa0b43a2f7" translate="yes" xml:space="preserve">
          <source>Defines functions and the &lt;a href=&quot;ecto.type#content&quot;&gt;&lt;code&gt;Ecto.Type&lt;/code&gt;&lt;/a&gt; behaviour for implementing custom types.</source>
          <target state="translated">Define funciones y el comportamiento de &lt;a href=&quot;ecto.type#content&quot;&gt; &lt;code&gt;Ecto.Type&lt;/code&gt; &lt;/a&gt; para implementar tipos personalizados.</target>
        </trans-unit>
        <trans-unit id="07165df5c35d63325209e3672605c7d1ef21e2bf" translate="yes" xml:space="preserve">
          <source>Defines the HTML safe protocol.</source>
          <target state="translated">Define el protocolo seguro de HTML.</target>
        </trans-unit>
        <trans-unit id="c60dd928ec133683effed99436f649bb52ba9ed6" translate="yes" xml:space="preserve">
          <source>Defines the Phoenix.HTML.Form struct</source>
          <target state="translated">Define la estructura de la forma Phoenix.HTML.</target>
        </trans-unit>
        <trans-unit id="9b73046e41b83e8632e11734a79b46f80bd80e3c" translate="yes" xml:space="preserve">
          <source>Defines the Phoenix.HTML.Form struct.</source>
          <target state="translated">Define la estructura de la forma Phoenix.HTML.</target>
        </trans-unit>
        <trans-unit id="a93ad99653849b671aa30e521a85ba4371f460d4" translate="yes" xml:space="preserve">
          <source>Defines the view layer of a Phoenix application.</source>
          <target state="translated">Define la capa de vista de una aplicación de Phoenix.</target>
        </trans-unit>
        <trans-unit id="07465682294918bcade97a592701eab8d7bc4fa5" translate="yes" xml:space="preserve">
          <source>Defines which Channel events to intercept for &lt;code&gt;handle_out/3&lt;/code&gt; callbacks</source>
          <target state="translated">Define qu&amp;eacute; eventos de canal interceptar para las devoluciones &lt;code&gt;handle_out/3&lt;/code&gt; llamada de handle_out / 3</target>
        </trans-unit>
        <trans-unit id="642d24d790a544e7a3090f37c45010edab2614c2" translate="yes" xml:space="preserve">
          <source>Defines which Channel events to intercept for &lt;code&gt;handle_out/3&lt;/code&gt; callbacks.</source>
          <target state="translated">Define qu&amp;eacute; eventos de canal interceptar para las devoluciones &lt;code&gt;handle_out/3&lt;/code&gt; llamada de handle_out / 3 .</target>
        </trans-unit>
        <trans-unit id="e3314166cec5f4c7b8773a376d51e5529a69824d" translate="yes" xml:space="preserve">
          <source>Defines windows which can be used with &lt;a href=&quot;ecto.query.windowapi&quot;&gt;&lt;code&gt;Ecto.Query.WindowAPI&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Define ventanas que se pueden usar con &lt;a href=&quot;ecto.query.windowapi&quot;&gt; &lt;code&gt;Ecto.Query.WindowAPI&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b2601687aa8ec4a6c14723b50e590b550da8746d" translate="yes" xml:space="preserve">
          <source>Defines windows which can be used with &lt;a href=&quot;ecto.query.windowapi&quot;&gt;&lt;code&gt;Ecto.Query.WindowAPI&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Define ventanas que se pueden usar con &lt;a href=&quot;ecto.query.windowapi&quot;&gt; &lt;code&gt;Ecto.Query.WindowAPI&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7404bbfa3bf1eaa2f779cbe4fdcea4586867f84e" translate="yes" xml:space="preserve">
          <source>Defining custom functions using macros and fragment</source>
          <target state="translated">Definir funciones personalizadas utilizando macros y fragmentos</target>
        </trans-unit>
        <trans-unit id="847c4e031bd354c6f6d6aff9d13bbd0981a8abc3" translate="yes" xml:space="preserve">
          <source>Defining embedded schema in such a way will define a &lt;code&gt;Parent.Child&lt;/code&gt; module with the appropriate struct. In order to properly cast the embedded schema. When casting the inline-defined embedded schemas you need to use the &lt;code&gt;:with&lt;/code&gt; option of &lt;a href=&quot;ecto.changeset#cast_embed/3&quot;&gt;&lt;code&gt;Ecto.Changeset.cast_embed/3&lt;/code&gt;&lt;/a&gt; to provide the proper function to do the casting. For example:</source>
          <target state="translated">Definir el esquema incrustado de esta manera definir&amp;aacute; un m&amp;oacute;dulo &lt;code&gt;Parent.Child&lt;/code&gt; con la estructura adecuada. Para convertir correctamente el esquema incrustado. Al emitir los esquemas incrustados definidos en l&amp;iacute;nea, debe utilizar la opci&amp;oacute;n &lt;code&gt;:with&lt;/code&gt; de &lt;a href=&quot;ecto.changeset#cast_embed/3&quot;&gt; &lt;code&gt;Ecto.Changeset.cast_embed/3&lt;/code&gt; &lt;/a&gt; para proporcionar la funci&amp;oacute;n adecuada para realizar la conversi&amp;oacute;n. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="e25d056469e7205f8c1dba96e0a56fc8a4f8df72" translate="yes" xml:space="preserve">
          <source>Defining embedded schema in such a way will define a &lt;code&gt;Parent.Child&lt;/code&gt; module with the appropriate struct. In order to properly cast the embedded schema. When casting the inline-defined embedded schemas you need to use the &lt;code&gt;:with&lt;/code&gt; option of &lt;code&gt;cast_embed/3&lt;/code&gt; to provide the proper function to do the casting. For example:</source>
          <target state="translated">Definir el esquema incrustado de esta manera definir&amp;aacute; un m&amp;oacute;dulo &lt;code&gt;Parent.Child&lt;/code&gt; con la estructura adecuada. Para convertir correctamente el esquema incrustado. Al emitir los esquemas incrustados definidos en l&amp;iacute;nea, debe usar la opci&amp;oacute;n &lt;code&gt;:with&lt;/code&gt; &lt;code&gt;cast_embed/3&lt;/code&gt; para proporcionar la funci&amp;oacute;n adecuada para realizar la conversi&amp;oacute;n. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="b730af78856042c2e6f0560a02fc09cd866d3de9" translate="yes" xml:space="preserve">
          <source>Defining the type of each field is not mandatory, but it is preferable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc3c2b2ee76ee6e2f89d0ec2d1f82252edeb9f34" translate="yes" xml:space="preserve">
          <source>Delete compiled/compressed asset files that are no longer in use based on specified criteria</source>
          <target state="translated">Eliminar los archivos de activos compilados/comprimidos que ya no se utilizan en base a criterios específicos</target>
        </trans-unit>
        <trans-unit id="28b5a017f49a91de5c9274f70107efe0891cca63" translate="yes" xml:space="preserve">
          <source>Delete compiled/compressed asset files that are no longer in use based on specified criteria.</source>
          <target state="translated">Eliminar los archivos de activos compilados/comprimidos que ya no se utilizan en base a criterios específicos.</target>
        </trans-unit>
        <trans-unit id="f7ce913ca1d09f09cb1227e93e044948b65eb687" translate="yes" xml:space="preserve">
          <source>Deletes &lt;code&gt;key&lt;/code&gt; from session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13214aab7bd1d6ebe1a36dd15784fd2dbb158e70" translate="yes" xml:space="preserve">
          <source>Deletes a change with the given key</source>
          <target state="translated">Borra un cambio con la tecla dada</target>
        </trans-unit>
        <trans-unit id="deca0e88c2adbf1fa7421afbd9abd2be33eec20f" translate="yes" xml:space="preserve">
          <source>Deletes a change with the given key.</source>
          <target state="translated">Borra un cambio con la tecla dada.</target>
        </trans-unit>
        <trans-unit id="aadb3bc757b2c5aaaedfe0cb46c185ffae746461" translate="yes" xml:space="preserve">
          <source>Deletes a request cookie</source>
          <target state="translated">Elimina una cookie de solicitud</target>
        </trans-unit>
        <trans-unit id="7b00727b0e36527b1754c79a189a2e6ba8d90811" translate="yes" xml:space="preserve">
          <source>Deletes a request cookie.</source>
          <target state="translated">Borra una cookie de solicitud.</target>
        </trans-unit>
        <trans-unit id="2d06cbcc573807b201eb7218d2ae670db20fd2bc" translate="yes" xml:space="preserve">
          <source>Deletes a request header if present</source>
          <target state="translated">Elimina el encabezamiento de una solicitud si está presente</target>
        </trans-unit>
        <trans-unit id="abea7b5b79304c193dfacc3e6ac3b8b34beb66ab" translate="yes" xml:space="preserve">
          <source>Deletes a request header if present.</source>
          <target state="translated">Borra el encabezamiento de una solicitud si está presente.</target>
        </trans-unit>
        <trans-unit id="6c7f349096886a817007251d959a39bd17bbf943" translate="yes" xml:space="preserve">
          <source>Deletes a response cookie</source>
          <target state="translated">Borra una cookie de respuesta</target>
        </trans-unit>
        <trans-unit id="720063bae4bfc2808217c51052678716d5abe047" translate="yes" xml:space="preserve">
          <source>Deletes a response cookie.</source>
          <target state="translated">Borra una galleta de respuesta.</target>
        </trans-unit>
        <trans-unit id="a8142ba1aa22d293febaab12665e6bb2b86e39aa" translate="yes" xml:space="preserve">
          <source>Deletes a response header if present</source>
          <target state="translated">Elimina un encabezado de respuesta si está presente</target>
        </trans-unit>
        <trans-unit id="e48fc1e7e71688c5551c72a64f5da6856955070a" translate="yes" xml:space="preserve">
          <source>Deletes a response header if present.</source>
          <target state="translated">Borra un encabezado de respuesta si está presente.</target>
        </trans-unit>
        <trans-unit id="a6425e65d9f201eb8a2b6e3490740623a09142db" translate="yes" xml:space="preserve">
          <source>Deletes a single struct with the given filters</source>
          <target state="translated">Elimina una sola estructura con los filtros dados</target>
        </trans-unit>
        <trans-unit id="cf31e7ca3f3b34e927478bb8d3ccd25fdbb569ec" translate="yes" xml:space="preserve">
          <source>Deletes a single struct with the given filters.</source>
          <target state="translated">Elimina una sola estructura con los filtros dados.</target>
        </trans-unit>
        <trans-unit id="c49793fda674028caa019b541a37af5245caf970" translate="yes" xml:space="preserve">
          <source>Deletes a struct using its primary key</source>
          <target state="translated">Elimina una estructura usando su clave primaria</target>
        </trans-unit>
        <trans-unit id="6b0f350c369eba34b55c12b3bb595615937f6ff5" translate="yes" xml:space="preserve">
          <source>Deletes a struct using its primary key.</source>
          <target state="translated">Elimina una estructura usando su clave primaria.</target>
        </trans-unit>
        <trans-unit id="99a7bdafb4a5add3ba4ed6cbb69eceaaa881d322" translate="yes" xml:space="preserve">
          <source>Deletes all entries matching the given query</source>
          <target state="translated">Borra todas las entradas que coincidan con la consulta dada</target>
        </trans-unit>
        <trans-unit id="f37192814b4bbe90dc78941307f5bc02d3f80812" translate="yes" xml:space="preserve">
          <source>Deletes all entries matching the given query.</source>
          <target state="translated">Borra todas las entradas que coincidan con la consulta dada.</target>
        </trans-unit>
        <trans-unit id="07d5b14db379714d12e9bdc4a09310e477552c02" translate="yes" xml:space="preserve">
          <source>Deletes any CSRF token set</source>
          <target state="translated">Borra cualquier juego de fichas de CSRF</target>
        </trans-unit>
        <trans-unit id="6708e2a5d51b61df92adbc1eb9bc52a77c891cd1" translate="yes" xml:space="preserve">
          <source>Deletes any CSRF token set.</source>
          <target state="translated">Borra cualquier juego de fichas de CSRF.</target>
        </trans-unit>
        <trans-unit id="efbcf3247e62f0f6be7f09d7f602f1dd662b28fe" translate="yes" xml:space="preserve">
          <source>Deletes the CSRF token from the process dictionary</source>
          <target state="translated">Borra el token CSRF del diccionario de procesos</target>
        </trans-unit>
        <trans-unit id="b0cf0913b96035e4ec0da1dc517a91bd41b65b68" translate="yes" xml:space="preserve">
          <source>Deletes the CSRF token from the process dictionary.</source>
          <target state="translated">Borra el token CSRF del diccionario de procesos.</target>
        </trans-unit>
        <trans-unit id="9b584ac24f3db38d0aae3ca2dfe9ae4e52297571" translate="yes" xml:space="preserve">
          <source>Deletes the session for the given &lt;code&gt;key&lt;/code&gt;</source>
          <target state="translated">Elimina la sesi&amp;oacute;n para la &lt;code&gt;key&lt;/code&gt; dada</target>
        </trans-unit>
        <trans-unit id="492ad3e1227c0240a2139106742d9007e1dbf985" translate="yes" xml:space="preserve">
          <source>Deletes the session for the given &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">Elimina la sesi&amp;oacute;n para la &lt;code&gt;key&lt;/code&gt; dada .</target>
        </trans-unit>
        <trans-unit id="7f2a493d27d308a215e6776d97101f6bfa8d94bd" translate="yes" xml:space="preserve">
          <source>Deleting a cookie requires the same options as to when the cookie was put. Check &lt;a href=&quot;#put_resp_cookie/4&quot;&gt;&lt;code&gt;put_resp_cookie/4&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">Eliminar una cookie requiere las mismas opciones que cuando se coloc&amp;oacute; la cookie. Consulte &lt;a href=&quot;#put_resp_cookie/4&quot;&gt; &lt;code&gt;put_resp_cookie/4&lt;/code&gt; &lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="5c0dee643023491858c39cbb20fc351077ecd61a" translate="yes" xml:space="preserve">
          <source>Dependencies in your software are often unavoidable, but we can do our best to limit them where possible and lessen the maintenance burden when a dependency is necessary. So far, we've done a great job isolating the two main contexts of our application from each other, but now we have a necessary dependency to handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0829d3fed8071950ec7a9ea9d8e675b4eee7e5df" translate="yes" xml:space="preserve">
          <source>Depending on the given &lt;code&gt;type&lt;/code&gt; performs a structural or semantical comparison.</source>
          <target state="translated">Dependiendo del &lt;code&gt;type&lt;/code&gt; dado realiza una comparaci&amp;oacute;n estructural o sem&amp;aacute;ntica.</target>
        </trans-unit>
        <trans-unit id="2922454c19f8dd8d1a608e68152a3e8f074c6ba1" translate="yes" xml:space="preserve">
          <source>Deploy a reverse proxy or load balancer process, such as Nginx or HAProxy (see &lt;a href=&quot;#offloading-tls&quot;&gt;Offloading TLS&lt;/a&gt;, below); the proxy listens on port 443 and passes the traffic to the Elixir application running on an unprivileged port</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e1db24871bf8ee75c657ace9b8d1cf48f6fca6f" translate="yes" xml:space="preserve">
          <source>Deployment - in-depth guides about deployment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d60002ce0cbb84509bdb53ded6e6959b0d1b953" translate="yes" xml:space="preserve">
          <source>Deprecated version of conn/0. Use build_conn/0 instead</source>
          <target state="translated">Versión obsoleta de conn/0.Usa build_conn/0 en su lugar.</target>
        </trans-unit>
        <trans-unit id="667efcfdd5df9fec932f221c6a4bed3f5f15f7d3" translate="yes" xml:space="preserve">
          <source>Deprecated version of conn/3. Use build_conn/3 instead</source>
          <target state="translated">Versión obsoleta de Conn/3.Utilice build_conn/3 en su lugar</target>
        </trans-unit>
        <trans-unit id="bc57df81bc6a4fdaad15a199a65b4ba7da132b5f" translate="yes" xml:space="preserve">
          <source>Developers interested in implementing custom transports must invoke the socket API defined in this module. This module also provides many conveniences that invokes the underlying socket API to make it easier to build custom transports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a43d5127d4822c6c5a9fb2f275c5aaedaf9e424f" translate="yes" xml:space="preserve">
          <source>Developers typically invoke &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html#init/2&quot;&gt;&lt;code&gt;Supervisor.init/2&lt;/code&gt;&lt;/a&gt; at the end of their init callback to return the proper supervision flags.</source>
          <target state="translated">Los desarrolladores suelen invocar &lt;a href=&quot;https://hexdocs.pm/elixir/Supervisor.html#init/2&quot;&gt; &lt;code&gt;Supervisor.init/2&lt;/code&gt; &lt;/a&gt; al final de su devoluci&amp;oacute;n de llamada de inicio para devolver los indicadores de supervisi&amp;oacute;n adecuados.</target>
        </trans-unit>
        <trans-unit id="de2b2421a912bbeefc48a7805363b92f8c8dfa95" translate="yes" xml:space="preserve">
          <source>Dictates how the type should be treated inside embeds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d10727ff07a61c20d90a8ead7e945824b521a56e" translate="yes" xml:space="preserve">
          <source>Diffie Hellman parameters</source>
          <target state="translated">Difundir los parámetros de Hellman</target>
        </trans-unit>
        <trans-unit id="5239c7e690be047b1c40d1686ed6392e481c3ddb" translate="yes" xml:space="preserve">
          <source>Digests and compress static files.</source>
          <target state="translated">Digiere y comprime los archivos estáticos.</target>
        </trans-unit>
        <trans-unit id="b81ec068f62bb915dba55bc19790a31a98f55818" translate="yes" xml:space="preserve">
          <source>Digests and compresses static files.</source>
          <target state="translated">Digiere y comprime los archivos estáticos.</target>
        </trans-unit>
        <trans-unit id="99ebbad0bfd4667f6a336c3b334aa0d4e3d8ddc7" translate="yes" xml:space="preserve">
          <source>Digests and compresses the static files and saves them in the given output path</source>
          <target state="translated">Digiere y comprime los archivos estáticos y los guarda en la ruta de salida dada</target>
        </trans-unit>
        <trans-unit id="7a8caf6ea516252bee7fd92867f23b995212ceca" translate="yes" xml:space="preserve">
          <source>Digests and compresses the static files and saves them in the given output path.</source>
          <target state="translated">Digiere y comprime los archivos estáticos y los guarda en la ruta de salida dada.</target>
        </trans-unit>
        <trans-unit id="bcbc4cc8e3f388ccae89b1884e0b6507830e2f84" translate="yes" xml:space="preserve">
          <source>Direct usage</source>
          <target state="translated">Uso directo</target>
        </trans-unit>
        <trans-unit id="07461fdd8bbd77721cfe447edf9e4bd20cbd0023" translate="yes" xml:space="preserve">
          <source>Directory structure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48921431448fdab71760c6030086e16e79e9c560" translate="yes" xml:space="preserve">
          <source>Disable logging: &lt;code&gt;use Phoenix.Socket, log: false&lt;/code&gt; or &lt;code&gt;socket &quot;/foo&quot;, MySocket, websocket: [log: false]&lt;/code&gt; in your endpoint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="641d0e62de0ede81f52d31e9ab7917ccf950ae23" translate="yes" xml:space="preserve">
          <source>Disable logging: In your endpoint &lt;code&gt;plug Plug.Telemetry, ..., log: Logger.level | false&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8825a6a930b9d113a3458154e71d4ad4c4a501e" translate="yes" xml:space="preserve">
          <source>Disable logging: Pass &lt;code&gt;log: false&lt;/code&gt; to the router macro, for example: &lt;code&gt;get(&quot;/page&quot;, PageController, :index, log: false)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3d4f3e80f755e56b4e3aacddd584ddf506f0562" translate="yes" xml:space="preserve">
          <source>Disable logging: Set &lt;code&gt;render_errors: [log: false]&lt;/code&gt; on your endpoint configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d602b65c08d4c643c673620d08a73542d64e7cc" translate="yes" xml:space="preserve">
          <source>Disable logging: This event cannot be disabled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d16fe5c27095e50264e4ea24af8d6061c35cdd9d" translate="yes" xml:space="preserve">
          <source>Disable logging: This event is not logged</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03bf0a54b86fdf600ed47b76df6625dec956b028" translate="yes" xml:space="preserve">
          <source>Disabling</source>
          <target state="translated">Disabling</target>
        </trans-unit>
        <trans-unit id="7fac5cf3ba2ec0a4d1df773e6887af7dea9803dd" translate="yes" xml:space="preserve">
          <source>Disconnecting all instances of a given live user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b5232fa4c733e97f037f875fd5a92f8e94d41c" translate="yes" xml:space="preserve">
          <source>Dispatches &lt;a href=&quot;phoenix.socket.message&quot;&gt;&lt;code&gt;Phoenix.Socket.Message&lt;/code&gt;&lt;/a&gt; to a channel</source>
          <target state="translated">Env&amp;iacute;a &lt;a href=&quot;phoenix.socket.message&quot;&gt; &lt;code&gt;Phoenix.Socket.Message&lt;/code&gt; &lt;/a&gt; a un canal</target>
        </trans-unit>
        <trans-unit id="fe9d02a45e91f54e19c7f2226499f19d70de1a13" translate="yes" xml:space="preserve">
          <source>Dispatches &lt;a href=&quot;phoenix.socket.message&quot;&gt;&lt;code&gt;Phoenix.Socket.Message&lt;/code&gt;&lt;/a&gt; to a channel.</source>
          <target state="translated">Env&amp;iacute;a &lt;a href=&quot;phoenix.socket.message&quot;&gt; &lt;code&gt;Phoenix.Socket.Message&lt;/code&gt; &lt;/a&gt; a un canal.</target>
        </trans-unit>
        <trans-unit id="1c1adafd96d807fa9fb86cd4d2da33f8d9cc603e" translate="yes" xml:space="preserve">
          <source>Dispatches the connection to the given endpoint</source>
          <target state="translated">Envía la conexión al punto final dado</target>
        </trans-unit>
        <trans-unit id="fba471690dad6774fb53979ac504840f01b87f88" translate="yes" xml:space="preserve">
          <source>Dispatches the connection to the given endpoint.</source>
          <target state="translated">Envía la conexión al punto final dado.</target>
        </trans-unit>
        <trans-unit id="ddc1527261174a3bf196eb7378ee28cfde1c8cf2" translate="yes" xml:space="preserve">
          <source>Dispatches to the current endpoint</source>
          <target state="translated">Despachos al punto final actual</target>
        </trans-unit>
        <trans-unit id="42be31ad4915b519b26d800f35414ec31eb0e7a5" translate="yes" xml:space="preserve">
          <source>Dispatches to the current endpoint.</source>
          <target state="translated">Despachos al punto final actual.</target>
        </trans-unit>
        <trans-unit id="5f8b1bea9f9d0843e3db8ee304f3d8d863a0d537" translate="yes" xml:space="preserve">
          <source>Dispatches to the path only if the request is a DELETE request. See &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt; for more examples</source>
          <target state="translated">Se env&amp;iacute;a a la ruta solo si la solicitud es una solicitud DELETE. Ver &lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt; para m&amp;aacute;s ejemplos</target>
        </trans-unit>
        <trans-unit id="349715d24abcab00378c6953ef63281898d5f0fc" translate="yes" xml:space="preserve">
          <source>Dispatches to the path only if the request is a DELETE request. See &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt; for more examples.</source>
          <target state="translated">Se env&amp;iacute;a a la ruta solo si la solicitud es una solicitud DELETE. Consulte &lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt; para obtener m&amp;aacute;s ejemplos.</target>
        </trans-unit>
        <trans-unit id="9efbcffe2d3f8f6f005a51ab5bedcf5e13902b73" translate="yes" xml:space="preserve">
          <source>Dispatches to the path only if the request is a GET request. See &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt; for more examples</source>
          <target state="translated">Se env&amp;iacute;a a la ruta solo si la solicitud es una solicitud GET. Ver &lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt; para m&amp;aacute;s ejemplos</target>
        </trans-unit>
        <trans-unit id="d1fdf8470e12c39b6e23854035c4ed2bcdd13ba3" translate="yes" xml:space="preserve">
          <source>Dispatches to the path only if the request is a GET request. See &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt; for more examples.</source>
          <target state="translated">Se env&amp;iacute;a a la ruta solo si la solicitud es una solicitud GET. Consulte &lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt; para obtener m&amp;aacute;s ejemplos.</target>
        </trans-unit>
        <trans-unit id="4158087588093b1ab228f794cda3e9b4c4bb7b97" translate="yes" xml:space="preserve">
          <source>Dispatches to the path only if the request is a HEAD request. See &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt; for more examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26451cb29dcd04808f58ada5f73009b82391d2da" translate="yes" xml:space="preserve">
          <source>Dispatches to the path only if the request is a PATCH request. See &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt; for more examples</source>
          <target state="translated">Se env&amp;iacute;a a la ruta solo si la solicitud es una solicitud de PATCH. Ver &lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt; para m&amp;aacute;s ejemplos</target>
        </trans-unit>
        <trans-unit id="eb9fffe149738fbaf0d808506ca784dcbbf146b1" translate="yes" xml:space="preserve">
          <source>Dispatches to the path only if the request is a PATCH request. See &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt; for more examples.</source>
          <target state="translated">Se env&amp;iacute;a a la ruta solo si la solicitud es una solicitud de PATCH. Consulte &lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt; para obtener m&amp;aacute;s ejemplos.</target>
        </trans-unit>
        <trans-unit id="759d5edd2913b0fd955b74910f524889cf96caf8" translate="yes" xml:space="preserve">
          <source>Dispatches to the path only if the request is a POST request. See &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt; for more examples</source>
          <target state="translated">Se env&amp;iacute;a a la ruta solo si la solicitud es una solicitud POST. Ver &lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt; para m&amp;aacute;s ejemplos</target>
        </trans-unit>
        <trans-unit id="e7375e61dd2d04843b22f96071660e356c62a62e" translate="yes" xml:space="preserve">
          <source>Dispatches to the path only if the request is a POST request. See &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt; for more examples.</source>
          <target state="translated">Se env&amp;iacute;a a la ruta solo si la solicitud es una solicitud POST. Consulte &lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt; para obtener m&amp;aacute;s ejemplos.</target>
        </trans-unit>
        <trans-unit id="633336dc61440b815025525888e0681e8339cd0a" translate="yes" xml:space="preserve">
          <source>Dispatches to the path only if the request is a PUT request. See &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt; for more examples</source>
          <target state="translated">Se env&amp;iacute;a a la ruta solo si la solicitud es una solicitud PUT. Ver &lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt; para m&amp;aacute;s ejemplos</target>
        </trans-unit>
        <trans-unit id="53fd2e3f0afad2fe34f350bf859d9130b5fc0d22" translate="yes" xml:space="preserve">
          <source>Dispatches to the path only if the request is a PUT request. See &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt; for more examples.</source>
          <target state="translated">Se env&amp;iacute;a a la ruta solo si la solicitud es una solicitud PUT. Consulte &lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt; para obtener m&amp;aacute;s ejemplos.</target>
        </trans-unit>
        <trans-unit id="114a23fd1f7e23090c953828c5b91b00fe01f39a" translate="yes" xml:space="preserve">
          <source>Dispatches to the path only if the request is an OPTIONS request. See &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt; for more examples</source>
          <target state="translated">Se env&amp;iacute;a a la ruta solo si la solicitud es una solicitud de OPCIONES. Ver &lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt; para m&amp;aacute;s ejemplos</target>
        </trans-unit>
        <trans-unit id="8029cdf2d25f0c8a87e355c232a05cf294c3e2a6" translate="yes" xml:space="preserve">
          <source>Dispatches to the path only if the request is an OPTIONS request. See &lt;a href=&quot;#match/3&quot;&gt;&lt;code&gt;match/3&lt;/code&gt;&lt;/a&gt; for more examples.</source>
          <target state="translated">Se env&amp;iacute;a a la ruta solo si la solicitud es una solicitud de OPCIONES. Consulte &lt;a href=&quot;#match/3&quot;&gt; &lt;code&gt;match/3&lt;/code&gt; &lt;/a&gt; para obtener m&amp;aacute;s ejemplos.</target>
        </trans-unit>
        <trans-unit id="844b37d9d4baf2003a9abb5cf8a72c3e2f8e0680" translate="yes" xml:space="preserve">
          <source>Do not use this function to validate associations are required, instead pass the &lt;code&gt;:required&lt;/code&gt; option to &lt;a href=&quot;#cast_assoc/3&quot;&gt;&lt;code&gt;cast_assoc/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">No utilice esta funci&amp;oacute;n para validar que se requieren asociaciones, en su lugar pase la opci&amp;oacute;n &lt;code&gt;:required&lt;/code&gt; a &lt;a href=&quot;#cast_assoc/3&quot;&gt; &lt;code&gt;cast_assoc/3&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b8ddfcafdc2874eee39ec3c72be3effd8080893b" translate="yes" xml:space="preserve">
          <source>Does not raise on attempts to interpolate with &lt;code&gt;#{}&lt;/code&gt;, but rather shows those characters literally, so it should be preferred over &lt;code&gt;~e&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bf8f5d49b9dd2bf889c2090ea30f0b66efc80e7" translate="yes" xml:space="preserve">
          <source>Drop the storage for the given repository.</source>
          <target state="translated">Deje caer el almacenamiento para el depósito dado.</target>
        </trans-unit>
        <trans-unit id="3696edaf2ed1c056e2a9e610b35c66b8c9c81a65" translate="yes" xml:space="preserve">
          <source>Drops the storage given by options</source>
          <target state="translated">Deja caer el almacenamiento dado por las opciones</target>
        </trans-unit>
        <trans-unit id="7132740a80c40ddcb7bc2c507f7136ce65c76081" translate="yes" xml:space="preserve">
          <source>Drops the storage given by options.</source>
          <target state="translated">Suelta el almacenamiento dado por las opciones.</target>
        </trans-unit>
        <trans-unit id="bbfee27654e557ca6d136983cc0d993192098a89" translate="yes" xml:space="preserve">
          <source>Due to the prevalence of the pipe operator in Elixir, Ecto also supports a pipe-based syntax:</source>
          <target state="translated">Debido a la prevalencia del operador del tubo en el Elixir,el Ecto también soporta una sintaxis basada en el tubo:</target>
        </trans-unit>
        <trans-unit id="879d8e7702bee3188afc919ead832f9d53f02deb" translate="yes" xml:space="preserve">
          <source>Dump CSRF state so it can be loaded in another process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30bbef50b4671de3933513ba08c2e94c67829796" translate="yes" xml:space="preserve">
          <source>Dumps a value to the given type</source>
          <target state="translated">Vuelca un valor al tipo dado</target>
        </trans-unit>
        <trans-unit id="b1a432d1d1196aa0d7f96d5eec91e28e3d91508c" translate="yes" xml:space="preserve">
          <source>Dumps a value to the given type.</source>
          <target state="translated">Vuelca un valor al tipo dado.</target>
        </trans-unit>
        <trans-unit id="07afdd411a4cf789bb5131067a1bb6630f065a34" translate="yes" xml:space="preserve">
          <source>Dumps the &lt;code&gt;value&lt;/code&gt; for &lt;code&gt;type&lt;/code&gt; considering it will be embedded in &lt;code&gt;format&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83f6d0b27c5e6c2d4dad8c11cfdd14a299984099" translate="yes" xml:space="preserve">
          <source>Dumps the CSRF state from the connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="158591d0eb0fd833637e72dedfa9e328e663c7c7" translate="yes" xml:space="preserve">
          <source>Dumps the given struct defined by an embedded schema.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0417dafea29d5dfc870d3de69a4c4e148be3b40e" translate="yes" xml:space="preserve">
          <source>Dumps the given term into an Ecto native type</source>
          <target state="translated">Vierte el término dado en un tipo nativo de ecto</target>
        </trans-unit>
        <trans-unit id="553ee57bc177891a45abc3f403d26305442b25e5" translate="yes" xml:space="preserve">
          <source>Dumps the given term into an Ecto native type.</source>
          <target state="translated">Vierte el término dado en un tipo nativo de ecto.</target>
        </trans-unit>
        <trans-unit id="46f3545d74684749addefc8accbfca66690a037c" translate="yes" xml:space="preserve">
          <source>Duplicate Join Subscriptions</source>
          <target state="translated">Suscripciones duplicadas</target>
        </trans-unit>
        <trans-unit id="c7d8d30b4b4cc0ebefd2ef7f85457a3500a15419" translate="yes" xml:space="preserve">
          <source>Duplicate Subscriptions</source>
          <target state="translated">Suscripciones duplicadas</target>
        </trans-unit>
        <trans-unit id="073c74bdd08ac89c82d34b21985574c996b8040f" translate="yes" xml:space="preserve">
          <source>Duplicated operations are not allowed.</source>
          <target state="translated">No se permiten operaciones duplicadas.</target>
        </trans-unit>
        <trans-unit id="3d84a8fb6491809cf5b86e43b269bdce2884814b" translate="yes" xml:space="preserve">
          <source>During a regular controller request, this exception will be converted to a 404 exception and rendered as a custom error page, as &lt;a href=&quot;../phoenix/custom_error_pages&quot;&gt;detailed here&lt;/a&gt;. To understand how a LiveView reacts to exceptions, we need to consider two scenarios: exceptions on mount and during any event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddc07840a9dd97e5d9b21c437fa120c0b5258fa6" translate="yes" xml:space="preserve">
          <source>During casting, all &lt;code&gt;permitted&lt;/code&gt; parameters whose values match the specified type information will have their key name converted to an atom and stored together with the value as a change in the &lt;code&gt;:changes&lt;/code&gt; field of the changeset. All parameters that are not explicitly permitted are ignored.</source>
          <target state="translated">Durante la conversi&amp;oacute;n, todos &lt;code&gt;permitted&lt;/code&gt; par&amp;aacute;metros permitidos cuyos valores coincidan con la informaci&amp;oacute;n del tipo especificado tendr&amp;aacute;n su nombre de clave convertido a un &amp;aacute;tomo y almacenado junto con el valor como un cambio en el campo &lt;code&gt;:changes&lt;/code&gt; del conjunto de cambios. Se ignoran todos los par&amp;aacute;metros que no est&amp;aacute;n expl&amp;iacute;citamente permitidos.</target>
        </trans-unit>
        <trans-unit id="c86666453246d5cdf625e92d8cf6fc31a015a7ad" translate="yes" xml:space="preserve">
          <source>During the request, files are represented with a &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Plug.Upload&lt;/code&gt;&lt;/a&gt; struct that contains three fields:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95239208a8ce56b0b9fafb46e146ac7d94cee756" translate="yes" xml:space="preserve">
          <source>During the request, files are represented with a &lt;a href=&quot;plug.upload#content&quot;&gt;&lt;code&gt;Plug.Upload&lt;/code&gt;&lt;/a&gt; struct that contains three fields:</source>
          <target state="translated">Durante la solicitud, los archivos se representan con una estructura &lt;a href=&quot;plug.upload#content&quot;&gt; &lt;code&gt;Plug.Upload&lt;/code&gt; &lt;/a&gt; que contiene tres campos:</target>
        </trans-unit>
        <trans-unit id="3ca7327a7bd2f5353024f65ee68945fbf10eccf7" translate="yes" xml:space="preserve">
          <source>Dynamic configuration</source>
          <target state="translated">Configuración dinámica</target>
        </trans-unit>
        <trans-unit id="57d1ea9ebb2927a523b2fa1ba48aa25e8ceb8c49" translate="yes" xml:space="preserve">
          <source>Dynamic instrumentation</source>
          <target state="translated">Instrumentación dinámica</target>
        </trans-unit>
        <trans-unit id="63f95847c9a172342fffe74ea0e9ee86b32d1f29" translate="yes" xml:space="preserve">
          <source>Dynamic is also supported as each field in an update, for example:</source>
          <target state="translated">La dinámica también se apoya como cada campo en una actualización,por ejemplo:</target>
        </trans-unit>
        <trans-unit id="9e83e2e52edf976173e31c30aa0305db62232df4" translate="yes" xml:space="preserve">
          <source>Dynamic is also supported inside updates, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aca0e11faafc714e1107582dd050cac6083af393" translate="yes" xml:space="preserve">
          <source>Dynamic query expressions allows developers to build queries expression bit by bit so they are later interpolated in a query.</source>
          <target state="translated">Las expresiones de consulta dinámicas permiten a los desarrolladores crear expresiones de consulta poco a poco para que luego sean interpoladas en una consulta.</target>
        </trans-unit>
        <trans-unit id="e0b2275f70cca30ac774d384ecf147236ae66404" translate="yes" xml:space="preserve">
          <source>Dynamics are also supported in &lt;a href=&quot;#order_by/2&quot;&gt;&lt;code&gt;order_by/2&lt;/code&gt;&lt;/a&gt; clauses inside &lt;a href=&quot;#windows/2&quot;&gt;&lt;code&gt;windows/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5964d4d90ea5ad8021798b3b8082d961c70ba442" translate="yes" xml:space="preserve">
          <source>Dynamics are also supported in &lt;code&gt;partition_by/2&lt;/code&gt; clauses inside &lt;a href=&quot;#windows/2&quot;&gt;&lt;code&gt;windows/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afdc3801b103c98d5b428f8b1cd450b0eb1163c6" translate="yes" xml:space="preserve">
          <source>Dynamics can be interpolated inside keyword lists at the root of &lt;code&gt;group_by&lt;/code&gt;. For example, you can write:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e2abb291b3116e93b04e0612abec56e0c0fff78" translate="yes" xml:space="preserve">
          <source>Dynamics can be interpolated inside keyword lists at the root of &lt;code&gt;order_by&lt;/code&gt;. For example, you can write:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77bf054b1752c47ccf22f28d3dd4a195ee74c2d7" translate="yes" xml:space="preserve">
          <source>Each &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Plug.Router&lt;/code&gt;&lt;/a&gt; has a plug pipeline, defined by &lt;a href=&quot;plug.builder&quot;&gt;&lt;code&gt;Plug.Builder&lt;/code&gt;&lt;/a&gt;, and by default it requires two plugs: &lt;code&gt;:match&lt;/code&gt; and &lt;code&gt;:dispatch&lt;/code&gt;. &lt;code&gt;:match&lt;/code&gt; is responsible for finding a matching route which is then forwarded to &lt;code&gt;:dispatch&lt;/code&gt;. This means users can easily hook into the router mechanism and add behaviour before match, before dispatch, or after both. All of the options given to &lt;code&gt;use Plug.Router&lt;/code&gt; are forwarded to &lt;a href=&quot;plug.builder&quot;&gt;&lt;code&gt;Plug.Builder&lt;/code&gt;&lt;/a&gt;. See the &lt;a href=&quot;plug.builder&quot;&gt;&lt;code&gt;Plug.Builder&lt;/code&gt;&lt;/a&gt; module for more information on the &lt;code&gt;plug&lt;/code&gt; macro and on the available options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="933904af8bf3dbaf33d220a1dd41c4a3cbf4454e" translate="yes" xml:space="preserve">
          <source>Each Phoenix endpoint defines its own &lt;a href=&quot;#instrument/3&quot;&gt;&lt;code&gt;instrument/3&lt;/code&gt;&lt;/a&gt; macro. This macro is called like this:</source>
          <target state="translated">Cada punto final de Phoenix define su propia macro &lt;a href=&quot;#instrument/3&quot;&gt; &lt;code&gt;instrument/3&lt;/code&gt; &lt;/a&gt; . Esta macro se llama as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="d2b643fec057644ebdc3a745c9f3b74028c8c0a8" translate="yes" xml:space="preserve">
          <source>Each element of the plug pipeline (according to the type signature of this function) has the form:</source>
          <target state="translated">Cada elemento de la tubería de enchufe (según la firma de tipo de esta función)tiene la forma:</target>
        </trans-unit>
        <trans-unit id="eb685d1d5301b54bb6fdbd19bd3a4def62faa983" translate="yes" xml:space="preserve">
          <source>Each join accepts the following options:</source>
          <target state="translated">Cada miembro acepta las siguientes opciones:</target>
        </trans-unit>
        <trans-unit id="c50d21214c659115473b7563f287066d99833476" translate="yes" xml:space="preserve">
          <source>Each message also has a &lt;code&gt;ref&lt;/code&gt; field which is used to track responses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa672af278f7f1f607abd1ee4459962a777b4db" translate="yes" xml:space="preserve">
          <source>Each of these actions takes two parameters, which will be provided by Phoenix behind the scenes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="119f627331a3a8e751b39858eaa8477c8c12ea77" translate="yes" xml:space="preserve">
          <source>Each of these plugs have a specific responsibility that we will learn later. The last plug is precisely the &lt;code&gt;HelloWeb.Router&lt;/code&gt; module. This allows the endpoint to delegate all further request processing to the router. As we now know, its main responsibility is to map verb/path pairs to controllers. The controller then tells a view to render a template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b807df4c8b8158b0d38aaa1ec1fe7695f9efe52" translate="yes" xml:space="preserve">
          <source>Each parser also accepts options to be given directly to it by using tuples. For example, to support file uploads it is common pass the &lt;code&gt;:length&lt;/code&gt;, &lt;code&gt;:read_length&lt;/code&gt; and &lt;code&gt;:read_timeout&lt;/code&gt; option to the multipart parser:</source>
          <target state="translated">Cada analizador tambi&amp;eacute;n acepta opciones que se le dar&amp;aacute;n directamente mediante el uso de tuplas. Por ejemplo, para la carga de archivos de soporte es com&amp;uacute;n el pase &lt;code&gt;:length&lt;/code&gt; , &lt;code&gt;:read_length&lt;/code&gt; y &lt;code&gt;:read_timeout&lt;/code&gt; opci&amp;oacute;n para el analizador de varias partes:</target>
        </trans-unit>
        <trans-unit id="74203beff6b2286d00dc12283d432f9cab89c9ed" translate="yes" xml:space="preserve">
          <source>Each parser also accepts options to be given directly to it by using tuples. For example, to support file uploads it is common to pass the &lt;code&gt;:length&lt;/code&gt;, &lt;code&gt;:read_length&lt;/code&gt; and &lt;code&gt;:read_timeout&lt;/code&gt; option to the multipart parser:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4137e6a78f65b04c761ff22f86213d0d80a2eb7e" translate="yes" xml:space="preserve">
          <source>Each repository in Ecto defines a &lt;code&gt;start_link/0&lt;/code&gt; function that needs to be invoked before using the repository. In general, this function is not called directly, but used as part of your application supervision tree.</source>
          <target state="translated">Cada repositorio en Ecto define una funci&amp;oacute;n &lt;code&gt;start_link/0&lt;/code&gt; que debe invocarse antes de usar el repositorio. En general, esta funci&amp;oacute;n no se llama directamente, sino que se utiliza como parte del &amp;aacute;rbol de supervisi&amp;oacute;n de la aplicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="42676af9c1801515132454954363e3968139cf8c" translate="yes" xml:space="preserve">
          <source>Each route needs to return a connection, as per the Plug spec. A catch-all &lt;code&gt;match&lt;/code&gt; is recommended to be defined as in the example above, otherwise routing fails with a function clause error.</source>
          <target state="translated">Cada ruta debe devolver una conexi&amp;oacute;n, seg&amp;uacute;n la especificaci&amp;oacute;n de Plug. Se recomienda definir una &lt;code&gt;match&lt;/code&gt; como en el ejemplo anterior; de lo contrario, el enrutamiento falla con un error de cl&amp;aacute;usula de funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="894c9d3de1257a3f179af52621c4783a296b6fb9" translate="yes" xml:space="preserve">
          <source>Each route receives a &lt;code&gt;conn&lt;/code&gt; variable containing a &lt;a href=&quot;plug.conn&quot;&gt;&lt;code&gt;Plug.Conn&lt;/code&gt;&lt;/a&gt; struct and it needs to return a connection, as per the Plug spec. A catch-all &lt;code&gt;match&lt;/code&gt; is recommended to be defined as in the example above, otherwise routing fails with a function clause error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d1ee628d1aaf1fd735f2bc3b4b03f73d749beb5" translate="yes" xml:space="preserve">
          <source>Each socket connection is started by the transport and the process that controls the socket likely belongs to the transport. However, some sockets spawn new processes, such as &lt;a href=&quot;phoenix.socket&quot;&gt;&lt;code&gt;Phoenix.Socket&lt;/code&gt;&lt;/a&gt; which spawns channels, and this gives the ability to start a supervision tree associated to the socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d74bf00f382d6c0c01c5f57c8e40a23243e4cd23" translate="yes" xml:space="preserve">
          <source>Earlier we looked at the &quot;stop&quot; event emitted by &lt;a href=&quot;../plug/plug.telemetry&quot;&gt;&lt;code&gt;Plug.Telemetry&lt;/code&gt;&lt;/a&gt;, and used it to count the number of HTTP requests. In reality, it's only somewhat helpful to be able to see just the total number of requests. What if you wanted to see the number of requests per route, or per route &lt;em&gt;and&lt;/em&gt; method?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcdf26136c50360b65e21c593b2aa25573fb61b1" translate="yes" xml:space="preserve">
          <source>Ecto</source>
          <target state="translated">Ecto</target>
        </trans-unit>
        <trans-unit id="0492f9fdbc91050ab2b943399a8e4779fdb3d363" translate="yes" xml:space="preserve">
          <source>Ecto Repos are the interface into a storage system, be it a Database like PostgreSQL or an external service like a RESTful API. The Repo module's purpose is to take care of the finer details of persistence and data querying for us. As the caller, we only care about fetching and persisting data. The Repo takes care of the underlying Database adapter communication, connection pooling, and error translation for database constraint violations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0808b72726eab51305183dbafca6b5b8cd62cd6" translate="yes" xml:space="preserve">
          <source>Ecto allows a limited set of expressions inside queries. In the query below, for example, we use &lt;code&gt;u.age&lt;/code&gt; to access a field, the &lt;code&gt;&amp;gt;&lt;/code&gt; comparison operator and the literal &lt;code&gt;0&lt;/code&gt;:</source>
          <target state="translated">Ecto permite un conjunto limitado de expresiones dentro de las consultas. En la consulta siguiente, por ejemplo, usamos &lt;code&gt;u.age&lt;/code&gt; para acceder a un campo, el operador de comparaci&amp;oacute;n &lt;code&gt;&amp;gt;&lt;/code&gt; y el literal &lt;code&gt;0&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="94f3cb6465c4dd9c65e9f19e4a6c3ad6ff98581a" translate="yes" xml:space="preserve">
          <source>Ecto allows developers to say that a table in their Ecto schema map to a different column in their database:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d4a9811baed7299e2ea6c61843ab6a75b227d42" translate="yes" xml:space="preserve">
          <source>Ecto also provides support for other databases and it has many learning resources available. Please check out &lt;a href=&quot;https://github.com/elixir-ecto/ecto&quot;&gt;Ecto's README&lt;/a&gt; for general information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc4695641349036d0b21011fb2419472a4f2177b" translate="yes" xml:space="preserve">
          <source>Ecto also supports &lt;a href=&quot;http://en.wikipedia.org/wiki/Optimistic_concurrency_control&quot;&gt;optimistic locking&lt;/a&gt; but not through queries. For more information on optimistic locking, have a look at the &lt;a href=&quot;ecto.changeset#optimistic_lock/3&quot;&gt;&lt;code&gt;Ecto.Changeset.optimistic_lock/3&lt;/code&gt;&lt;/a&gt; function</source>
          <target state="translated">Ecto tambi&amp;eacute;n admite &lt;a href=&quot;http://en.wikipedia.org/wiki/Optimistic_concurrency_control&quot;&gt;el bloqueo optimista,&lt;/a&gt; pero no mediante consultas. Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre el bloqueo optimista, consulte la funci&amp;oacute;n &lt;a href=&quot;ecto.changeset#optimistic_lock/3&quot;&gt; &lt;code&gt;Ecto.Changeset.optimistic_lock/3&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8e1c9f9a91281d88321b17b86669b0b0f5795ef0" translate="yes" xml:space="preserve">
          <source>Ecto also supports composite primary keys, which is where you need to use &lt;code&gt;primary_key: true&lt;/code&gt; for the fields in your schema. This usually goes along with setting &lt;code&gt;@primary_key false&lt;/code&gt; to disable generation of additional primary key fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d260b9af1a7917d7e4d184502a29c53ba67c3e54" translate="yes" xml:space="preserve">
          <source>Ecto also supports composite primary keys.</source>
          <target state="translated">El ecto también soporta claves primarias compuestas.</target>
        </trans-unit>
        <trans-unit id="a4adc50452a5297dcd0585501140d5cb5dfc117e" translate="yes" xml:space="preserve">
          <source>Ecto also supports defining associations in terms of other associations via the &lt;code&gt;:through&lt;/code&gt; option. Let&amp;rsquo;s see an example:</source>
          <target state="translated">Ecto tambi&amp;eacute;n admite la definici&amp;oacute;n de asociaciones en t&amp;eacute;rminos de otras asociaciones a trav&amp;eacute;s de la opci&amp;oacute;n &lt;code&gt;:through&lt;/code&gt; . Veamos un ejemplo:</target>
        </trans-unit>
        <trans-unit id="b2c285947a548bb0bf3241ebf045d9796075a325" translate="yes" xml:space="preserve">
          <source>Ecto also supports defining associations in terms of other associations via the &lt;code&gt;:through&lt;/code&gt; option. Let's see an example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b37c67383eec60d8334adc3fc230ee78bce3dc6" translate="yes" xml:space="preserve">
          <source>Ecto also supports embeds. While associations keep parent and child entries in different tables, embeds stores the child along side the parent.</source>
          <target state="translated">El ectograma también admite las incrustaciones.Mientras que las asociaciones mantienen las entradas de padres e hijos en diferentes tablas,los embebidos almacenan al niño junto al padre.</target>
        </trans-unit>
        <trans-unit id="908f4eba6dd75fb3bf8e7ee20ba68b4314aa6545" translate="yes" xml:space="preserve">
          <source>Ecto also supports many of the windows functions found in SQL databases. See &lt;a href=&quot;ecto.query.windowapi&quot;&gt;&lt;code&gt;Ecto.Query.WindowAPI&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">Ecto tambi&amp;eacute;n admite muchas de las funciones de Windows que se encuentran en las bases de datos SQL. Consulte &lt;a href=&quot;ecto.query.windowapi&quot;&gt; &lt;code&gt;Ecto.Query.WindowAPI&lt;/code&gt; &lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="5c35ea8a0006f885d97bfefda29f8a7f60b833a9" translate="yes" xml:space="preserve">
          <source>Ecto and SQL</source>
          <target state="translated">Ecto y SQL</target>
        </trans-unit>
        <trans-unit id="543e777ba71274048b82434d7ca3c6e914af7361" translate="yes" xml:space="preserve">
          <source>Ecto automatically applies the action for you when you call Repo.insert/update/delete, but if you want to show errors manually you can also set the action yourself, either directly on the &lt;code&gt;Ecto.Changeset&lt;/code&gt; struct field or by using &lt;code&gt;Ecto.Changeset.apply_action/2&lt;/code&gt;.</source>
          <target state="translated">Ecto aplica autom&amp;aacute;ticamente la acci&amp;oacute;n por usted cuando llama a Repo.insert / update / delete, pero si desea mostrar los errores manualmente, tambi&amp;eacute;n puede configurar la acci&amp;oacute;n usted mismo, ya sea directamente en el campo de estructura &lt;code&gt;Ecto.Changeset&lt;/code&gt; o utilizando &lt;code&gt;Ecto.Changeset.apply_action/2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1f049343842e4a513055f3ab397ff02c6dedf67a" translate="yes" xml:space="preserve">
          <source>Ecto changesets provide both validations and constraints which are ultimately turned into errors in case something goes wrong.</source>
          <target state="translated">Los conjuntos de cambios ectográficos proporcionan tanto validaciones como restricciones que,en última instancia,se convierten en errores en caso de que algo salga mal.</target>
        </trans-unit>
        <trans-unit id="0e6a7ceb26ad9821e6a3b4856e571db0d01d37ac" translate="yes" xml:space="preserve">
          <source>Ecto generators will automatically open the generated files if you have &lt;code&gt;ECTO_EDITOR&lt;/code&gt; set in your environment variable.</source>
          <target state="translated">Los generadores Ecto abrir&amp;aacute;n autom&amp;aacute;ticamente los archivos generados si tiene &lt;code&gt;ECTO_EDITOR&lt;/code&gt; configurado en su variable de entorno.</target>
        </trans-unit>
        <trans-unit id="68384cbbdc911478cd5e5264d1bb10fb91095ea3" translate="yes" xml:space="preserve">
          <source>Ecto is split into 4 main components:</source>
          <target state="translated">El ecto está dividido en 4 componentes principales:</target>
        </trans-unit>
        <trans-unit id="385eb8af979a59dc0f9156a0bfa4ed70dc78dd78" translate="yes" xml:space="preserve">
          <source>Ecto provides many tasks to help your workflow as well as code generators. You can find all available tasks by typing &lt;a href=&quot;https://hexdocs.pm/mix/Mix.Tasks.Help.html&quot;&gt;&lt;code&gt;mix help&lt;/code&gt;&lt;/a&gt; inside a project with Ecto listed as a dependency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88ef839ecd01e6c797ad024ae6bd2fdc011a46c1" translate="yes" xml:space="preserve">
          <source>Ecto provides many tasks to help your workflow as well as code generators. You can find all available tasks by typing &lt;code&gt;mix help&lt;/code&gt; inside a project with Ecto listed as a dependency.</source>
          <target state="translated">Ecto proporciona muchas tareas para ayudar a su flujo de trabajo, as&amp;iacute; como a los generadores de c&amp;oacute;digo. Puede encontrar todas las tareas disponibles escribiendo &lt;code&gt;mix help&lt;/code&gt; dentro de un proyecto con Ecto listado como una dependencia.</target>
        </trans-unit>
        <trans-unit id="369659805b6b5fab30fa846f0eaaf2f98192e800" translate="yes" xml:space="preserve">
          <source>Ecto provides two types of custom types: basic types and parameterized types. Basic types are simple, requiring only four callbacks to be implemented, and are enough for most occasions. Parameterized types can be customized on the field definition and provide a wilder variety of callbacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3681d1859c813fd536d00578ddf22cb6924eeddb" translate="yes" xml:space="preserve">
          <source>Ecto queries are composable. For example, the query above can actually be defined in two parts:</source>
          <target state="translated">Las consultas ecológicas se pueden componer.Por ejemplo,la consulta anterior puede definirse en dos partes:</target>
        </trans-unit>
        <trans-unit id="2da1bf196269568f33d7352b70b059cbe9365ba2" translate="yes" xml:space="preserve">
          <source>Ecto requires developers to specify the key &lt;code&gt;:ecto_repos&lt;/code&gt; in their application configuration before using tasks like &lt;code&gt;ecto.create&lt;/code&gt; and &lt;code&gt;ecto.migrate&lt;/code&gt;. For example:</source>
          <target state="translated">Ecto requiere que los desarrolladores especifiquen la clave &lt;code&gt;:ecto_repos&lt;/code&gt; en la configuraci&amp;oacute;n de su aplicaci&amp;oacute;n antes de usar tareas como &lt;code&gt;ecto.create&lt;/code&gt; y &lt;code&gt;ecto.migrate&lt;/code&gt; . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="57fe82e5d326d604eaf902fbd96b05f22011ae2d" translate="yes" xml:space="preserve">
          <source>Ecto schemas are responsible for mapping Elixir values to external data sources, as well as mapping external data back into Elixir data-structures. We can also define relationships to other schemas in our applications. For example, our &lt;code&gt;User&lt;/code&gt; schema might have many &lt;code&gt;Post&lt;/code&gt;'s, and each &lt;code&gt;Post&lt;/code&gt; would belong to a &lt;code&gt;User&lt;/code&gt;. Ecto also handles data validation and type casting with changesets, which we'll discuss in a moment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dbcbd860697ee680b407b4da15a4ae66b5238c6" translate="yes" xml:space="preserve">
          <source>Ecto schemas at their core are simply Elixir structs. Our &lt;code&gt;schema&lt;/code&gt; block is what tells Ecto how to cast our &lt;code&gt;%User{}&lt;/code&gt; struct fields to and from the external &lt;code&gt;users&lt;/code&gt; table. Often, the ability to simply cast data to and from the database isn't enough and extra data validation is required. This is where Ecto Changesets come in. Let's dive in!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4ecd730cb9b1dd813d32119673f0aa61b875ab1" translate="yes" xml:space="preserve">
          <source>Ecto supports defining associations on schemas:</source>
          <target state="translated">Ecto apoya la definición de asociaciones en los esquemas:</target>
        </trans-unit>
        <trans-unit id="8ef0e4fa90c3d01b7b8393d6382b1801000cca1e" translate="yes" xml:space="preserve">
          <source>Ecto supports following values for &lt;code&gt;interval&lt;/code&gt; option: &lt;code&gt;&quot;year&quot;&lt;/code&gt;, &lt;code&gt;&quot;month&quot;&lt;/code&gt;, &lt;code&gt;&quot;week&quot;&lt;/code&gt;, &lt;code&gt;&quot;day&quot;&lt;/code&gt;, &lt;code&gt;&quot;hour&quot;&lt;/code&gt;, &lt;code&gt;&quot;minute&quot;&lt;/code&gt;, &lt;code&gt;&quot;second&quot;&lt;/code&gt;, &lt;code&gt;&quot;millisecond&quot;&lt;/code&gt;, and &lt;code&gt;&quot;microsecond&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f5b97a18c2bf62f93a37d4e1e34d2d1add2db9c" translate="yes" xml:space="preserve">
          <source>Ecto supports two ID types, called &lt;code&gt;:id&lt;/code&gt; and &lt;code&gt;:binary_id&lt;/code&gt;, which are often used as the type for primary keys and associations.</source>
          <target state="translated">Ecto admite dos tipos de ID, llamados &lt;code&gt;:id&lt;/code&gt; y &lt;code&gt;:binary_id&lt;/code&gt; , que a menudo se utilizan como el tipo de claves y asociaciones primarias.</target>
        </trans-unit>
        <trans-unit id="7bc84d3797619e14b14938d446893ee596cbd55d" translate="yes" xml:space="preserve">
          <source>Ecto tasks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc4991eabecdb96fb9a632710bae981cce077544" translate="yes" xml:space="preserve">
          <source>Ecto telemetry events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20a84ad3515a8a2de63286eb205c801c7f85ca64" translate="yes" xml:space="preserve">
          <source>Ecto type</source>
          <target state="translated">Tipo de ecto</target>
        </trans-unit>
        <trans-unit id="739fdc6f801f8cd9bb885970f4e968f7c6d0a112" translate="yes" xml:space="preserve">
          <source>Ecto will ensure &lt;code&gt;^title&lt;/code&gt; is cast to the given type and enforce such type at the database level. If the value is returned in a &lt;code&gt;select&lt;/code&gt;, Ecto will also enforce the proper type throughout.</source>
          <target state="translated">Ecto se asegurar&amp;aacute; de que &lt;code&gt;^title&lt;/code&gt; se transmita al tipo dado y aplicar&amp;aacute; dicho tipo en el nivel de la base de datos. Si el valor se devuelve en una &lt;code&gt;select&lt;/code&gt; , Ecto tambi&amp;eacute;n aplicar&amp;aacute; el tipo adecuado en todo momento.</target>
        </trans-unit>
        <trans-unit id="109e0f72e455dc2c107b7ea7e25da2f337435680" translate="yes" xml:space="preserve">
          <source>Ecto.Adapter &lt;small&gt;behaviour&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Comportamiento de&lt;/small&gt; Ecto.Adapter&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c7b3436e4efa478386e69de3f89bccf78a5331ed" translate="yes" xml:space="preserve">
          <source>Ecto.Adapter.Queryable &lt;small&gt;behaviour&lt;/small&gt;</source>
          <target state="translated">Ecto.Adapter.Queryable &lt;small&gt;comportamiento&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="28222015c5ff8c27111fd36a355d891862e983ed" translate="yes" xml:space="preserve">
          <source>Ecto.Adapter.Schema &lt;small&gt;behaviour&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Comportamiento de&lt;/small&gt; Ecto.Adapter.Schema&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="220b9623a8e6a7a65e78d057a3d212aeb1b2de12" translate="yes" xml:space="preserve">
          <source>Ecto.Adapter.Storage &lt;small&gt;behaviour&lt;/small&gt;</source>
          <target state="translated">Ecto.Adapter.Storage &lt;small&gt;comportamiento&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="642d5ee61cdbf3b8b6100f8fd20b4c8ab0ab3603" translate="yes" xml:space="preserve">
          <source>Ecto.Adapter.Transaction &lt;small&gt;behaviour&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Comportamiento de&lt;/small&gt; Ecto.Adapter.Transaction&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ca20f1fc38a83abc4fe1f015f1e4a61f6d344ca3" translate="yes" xml:space="preserve">
          <source>Ecto.Association.BelongsTo</source>
          <target state="translated">Ecto.Association.BelongsTo</target>
        </trans-unit>
        <trans-unit id="bab53a05091b2ada117882673397ba808e865699" translate="yes" xml:space="preserve">
          <source>Ecto.Association.Has</source>
          <target state="translated">Ecto.Association.Has</target>
        </trans-unit>
        <trans-unit id="5b5db5b2170f1ce4d827994851108a6d1ee7d5b2" translate="yes" xml:space="preserve">
          <source>Ecto.Association.HasThrough</source>
          <target state="translated">Ecto.Association.HasThrough</target>
        </trans-unit>
        <trans-unit id="19e40c29077106de6b4120c7850a32444efff935" translate="yes" xml:space="preserve">
          <source>Ecto.Association.ManyToMany</source>
          <target state="translated">Ecto.Association.ManyToMany</target>
        </trans-unit>
        <trans-unit id="3e9d659ba5926e1ffb6a9e2eb6ce68fe1b43f568" translate="yes" xml:space="preserve">
          <source>Ecto.Association.NotLoaded</source>
          <target state="translated">Ecto.Association.NotLoaded</target>
        </trans-unit>
        <trans-unit id="f5d903958036e8e9d5b98f8ead032495c636fa97" translate="yes" xml:space="preserve">
          <source>Ecto.CastError</source>
          <target state="translated">Ecto.CastError</target>
        </trans-unit>
        <trans-unit id="359261cc36e3c68943f7642959e3a7879245c174" translate="yes" xml:space="preserve">
          <source>Ecto.CastError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.CastError &lt;small&gt;excepci&amp;oacute;n&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="87f7561d3d03785d252cdce4cff69685e660886d" translate="yes" xml:space="preserve">
          <source>Ecto.ChangeError</source>
          <target state="translated">Ecto.ChangeError</target>
        </trans-unit>
        <trans-unit id="eecc0c345ee7d1bc75637e20508b14c21e90d5ae" translate="yes" xml:space="preserve">
          <source>Ecto.ChangeError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.ChangeError &lt;small&gt;excepci&amp;oacute;n&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="67418d61e9ba76e8391116ba7958917020d802e6" translate="yes" xml:space="preserve">
          <source>Ecto.Changeset</source>
          <target state="translated">Ecto.Changeset</target>
        </trans-unit>
        <trans-unit id="04974eb9c173298cc8ee0461a1b8ea7c060f1a7b" translate="yes" xml:space="preserve">
          <source>Ecto.ConstraintError</source>
          <target state="translated">Ecto.ConstraintError</target>
        </trans-unit>
        <trans-unit id="8a42dff4520c0f3dad83eab70460eba2239a1c5f" translate="yes" xml:space="preserve">
          <source>Ecto.ConstraintError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.ConstraintError &lt;small&gt;excepci&amp;oacute;n&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="15dd79c790b1073f4f86a8ad069050bdc650ecfa" translate="yes" xml:space="preserve">
          <source>Ecto.Enum</source>
          <target state="translated">Ecto.Enum</target>
        </trans-unit>
        <trans-unit id="9ce1aee0af48a2f8651b751987fa8bc0f4e35a20" translate="yes" xml:space="preserve">
          <source>Ecto.InvalidChangesetError</source>
          <target state="translated">Ecto.InvalidChangesetError</target>
        </trans-unit>
        <trans-unit id="ce67b142a1bb80cf9c2a2867d44ea6a8c3578c02" translate="yes" xml:space="preserve">
          <source>Ecto.InvalidChangesetError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.InvalidChangesetError &lt;small&gt;excepci&amp;oacute;n&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c5d1477ae3fb400821f1242b9bb3dc4a61c20190" translate="yes" xml:space="preserve">
          <source>Ecto.InvalidURLError</source>
          <target state="translated">Ecto.InvalidURLError</target>
        </trans-unit>
        <trans-unit id="4f08c43270c41104629098a7c2219b5dc40b37cf" translate="yes" xml:space="preserve">
          <source>Ecto.InvalidURLError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.InvalidURLError &lt;small&gt;excepci&amp;oacute;n&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="70da37d2af0a5953603574326abc9ac655050e10" translate="yes" xml:space="preserve">
          <source>Ecto.LogEntry</source>
          <target state="translated">Ecto.LogEntry</target>
        </trans-unit>
        <trans-unit id="35c9fc73d2d00ac9bcf8cdabe8534e91ab794279" translate="yes" xml:space="preserve">
          <source>Ecto.MigrationError</source>
          <target state="translated">Ecto.MigrationError</target>
        </trans-unit>
        <trans-unit id="a9ceb2554ab2c7eeb30e6a3c180ef6e2b319e425" translate="yes" xml:space="preserve">
          <source>Ecto.MigrationError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.MigrationError &lt;small&gt;excepci&amp;oacute;n&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e4ca20044e173c84dd6302ce5e5cf9074c593be6" translate="yes" xml:space="preserve">
          <source>Ecto.Multi</source>
          <target state="translated">Ecto.Multi</target>
        </trans-unit>
        <trans-unit id="9907ae967fed0c4dc1e86c3721c118b3891d1fea" translate="yes" xml:space="preserve">
          <source>Ecto.MultiplePrimaryKeyError</source>
          <target state="translated">Ecto.MultiplePrimaryKeyError</target>
        </trans-unit>
        <trans-unit id="c1f9b9fe432a00f35560ba356a40f39920f1f051" translate="yes" xml:space="preserve">
          <source>Ecto.MultiplePrimaryKeyError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.MultiplePrimaryKeyError &lt;small&gt;excepci&amp;oacute;n&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="24182395079f3e39b19794e38a815c33b9b1dfef" translate="yes" xml:space="preserve">
          <source>Ecto.MultipleResultsError</source>
          <target state="translated">Ecto.MultipleResultsError</target>
        </trans-unit>
        <trans-unit id="7a94e3e2049d8814ddba5b9ced7f31db2e7e29c7" translate="yes" xml:space="preserve">
          <source>Ecto.MultipleResultsError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.MultipleResultsError &lt;small&gt;excepci&amp;oacute;n&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b4b837c1b562905d62ed1b14e00149c2ac6f6807" translate="yes" xml:space="preserve">
          <source>Ecto.NoPrimaryKeyFieldError</source>
          <target state="translated">Ecto.NoPrimaryKeyFieldError</target>
        </trans-unit>
        <trans-unit id="d7ea505a6cd593eabd8c281c2d19d2e9112b9283" translate="yes" xml:space="preserve">
          <source>Ecto.NoPrimaryKeyFieldError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.NoPrimaryKeyFieldError &lt;small&gt;excepci&amp;oacute;n&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5a80b5c4c8ef26db11186fd6e9a5e8f2d97f9f5b" translate="yes" xml:space="preserve">
          <source>Ecto.NoPrimaryKeyValueError</source>
          <target state="translated">Ecto.NoPrimaryKeyValueError</target>
        </trans-unit>
        <trans-unit id="0338e60f705ec07827b6de702273e130cc6ecba3" translate="yes" xml:space="preserve">
          <source>Ecto.NoPrimaryKeyValueError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.NoPrimaryKeyValueError &lt;small&gt;excepci&amp;oacute;n&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="67d9f373ca10f601f6578faac7affe911846f2c7" translate="yes" xml:space="preserve">
          <source>Ecto.NoResultsError</source>
          <target state="translated">Ecto.NoResultsError</target>
        </trans-unit>
        <trans-unit id="3b3df04e61c31360e8b11f8666b9fe1d610f05b1" translate="yes" xml:space="preserve">
          <source>Ecto.NoResultsError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.NoResultsError &lt;small&gt;excepci&amp;oacute;n&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f2d1ad11b52c91d3aa2182b2b9d4baac748baa68" translate="yes" xml:space="preserve">
          <source>Ecto.ParameterizedType &lt;small&gt;behaviour&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c2609bbb3bacd4e67c3f9412afeeeadf7ac8e15" translate="yes" xml:space="preserve">
          <source>Ecto.Query</source>
          <target state="translated">Ecto.Query</target>
        </trans-unit>
        <trans-unit id="c13b3224c69630c615aec89551d2087bc042356a" translate="yes" xml:space="preserve">
          <source>Ecto.Query metadata fields (stored in cache)</source>
          <target state="translated">Campos de metadatos Ecto.Query (almacenados en caché)</target>
        </trans-unit>
        <trans-unit id="541f8c403ffae2f4def036ce1baec276f67f4d63" translate="yes" xml:space="preserve">
          <source>Ecto.Query.API</source>
          <target state="translated">Ecto.Query.API</target>
        </trans-unit>
        <trans-unit id="3bbd7e221f68e1527e309cad7aba8114992aab8d" translate="yes" xml:space="preserve">
          <source>Ecto.Query.CastError</source>
          <target state="translated">Ecto.Query.CastError</target>
        </trans-unit>
        <trans-unit id="60b00c79bb2a8de43e5fae787ea603d53a3c8a03" translate="yes" xml:space="preserve">
          <source>Ecto.Query.CastError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.Query.CastError &lt;small&gt;excepci&amp;oacute;n&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="322683d4c482d9d4887697a585690a94b1c37b60" translate="yes" xml:space="preserve">
          <source>Ecto.Query.CompileError</source>
          <target state="translated">Ecto.Query.CompileError</target>
        </trans-unit>
        <trans-unit id="f6bb3386062941386362beaf0414a6747bab26f7" translate="yes" xml:space="preserve">
          <source>Ecto.Query.CompileError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.Query.CompileError &lt;small&gt;excepci&amp;oacute;n&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7dafa0a51a47382e1e63f70ed8f204dca6da2b81" translate="yes" xml:space="preserve">
          <source>Ecto.Query.WindowAPI</source>
          <target state="translated">Ecto.Query.WindowAPI</target>
        </trans-unit>
        <trans-unit id="bc2486ab3f1e159284df09db70205a20ecc2201b" translate="yes" xml:space="preserve">
          <source>Ecto.QueryError</source>
          <target state="translated">Ecto.QueryError</target>
        </trans-unit>
        <trans-unit id="4c241d42a8511f3b16e8e651c93c41a6e57fd732" translate="yes" xml:space="preserve">
          <source>Ecto.QueryError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.QueryError &lt;small&gt;excepci&amp;oacute;n&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8bd6a5e6bbbba374ec54882523a3dd6aa01f6bf0" translate="yes" xml:space="preserve">
          <source>Ecto.Queryable</source>
          <target state="translated">Ecto.Queryable</target>
        </trans-unit>
        <trans-unit id="5f5fb9bbe4d236231c4e0c9a1f430c532e1b61df" translate="yes" xml:space="preserve">
          <source>Ecto.Queryable &lt;small&gt;protocol&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Protocolo&lt;/small&gt; Ecto.Queryable&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="23d0b05d82025970e8643b6c2b44b5c9cc5422bf" translate="yes" xml:space="preserve">
          <source>Ecto.Queryable.t (0)</source>
          <target state="translated">Ecto.Queryable.t (0)</target>
        </trans-unit>
        <trans-unit id="2c66da9b2fb68c8d72ed4f1fdd408f25acf7b28f" translate="yes" xml:space="preserve">
          <source>Ecto.Queryable.to_query (1)</source>
          <target state="translated">Ecto.Consulta.a_consulta (1)</target>
        </trans-unit>
        <trans-unit id="b2b785210b6db93332cdd4d8ac8b14e9a6c8f2ec" translate="yes" xml:space="preserve">
          <source>Ecto.Repo</source>
          <target state="translated">Ecto.Repo</target>
        </trans-unit>
        <trans-unit id="abe003d38251fd11493b7aebc84a41065c8194a8" translate="yes" xml:space="preserve">
          <source>Ecto.Repo &lt;small&gt;behaviour&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Comportamiento de&lt;/small&gt; Ecto.Repo&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="1c38674c5108afb7eaab34bd7a717b13c34f6ea4" translate="yes" xml:space="preserve">
          <source>Ecto.Schema</source>
          <target state="translated">Ecto.Schema</target>
        </trans-unit>
        <trans-unit id="7213ca12b7254752de375b48ed69b6ac5c7591bd" translate="yes" xml:space="preserve">
          <source>Ecto.Schema metadata fields</source>
          <target state="translated">Campos de metadatos del ectograma</target>
        </trans-unit>
        <trans-unit id="9a7f68db592f84a9943fcb5b898c5e74891071ee" translate="yes" xml:space="preserve">
          <source>Ecto.Schema.Metadata</source>
          <target state="translated">Ecto.Schema.Metadata</target>
        </trans-unit>
        <trans-unit id="5755ba5b43e2e121bb26c6314858c4dc73dcc16c" translate="yes" xml:space="preserve">
          <source>Ecto.StaleEntryError</source>
          <target state="translated">Ecto.StaleEntryError</target>
        </trans-unit>
        <trans-unit id="d751e1a6e5e77ee622ddb5ffa9aab3299c04d4ac" translate="yes" xml:space="preserve">
          <source>Ecto.StaleEntryError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.StaleEntryError &lt;small&gt;excepci&amp;oacute;n&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ee0b6d1251bf780cf3082c668fa6afbd815e531c" translate="yes" xml:space="preserve">
          <source>Ecto.SubQuery</source>
          <target state="translated">Ecto.SubQuery</target>
        </trans-unit>
        <trans-unit id="5c5767f0467eff752742c91059c0f52a0d6da85b" translate="yes" xml:space="preserve">
          <source>Ecto.SubQueryError</source>
          <target state="translated">Ecto.SubQueryError</target>
        </trans-unit>
        <trans-unit id="af82c0bc574ed28a1bae0825f4ff83faf8642aa4" translate="yes" xml:space="preserve">
          <source>Ecto.SubQueryError &lt;small&gt;exception&lt;/small&gt;</source>
          <target state="translated">Ecto.SubQueryError &lt;small&gt;excepci&amp;oacute;n&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="bb89049cf6c1b37baa9267def3cd2d5e6e580a10" translate="yes" xml:space="preserve">
          <source>Ecto.Type</source>
          <target state="translated">Ecto.Type</target>
        </trans-unit>
        <trans-unit id="fd40802d5250133cf255ced53966159d4b5335d7" translate="yes" xml:space="preserve">
          <source>Ecto.Type &lt;small&gt;behaviour&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Comportamiento de&lt;/small&gt; Ecto.Type&lt;small&gt;&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7e1d464328ab2db0790a29e4a5a61c2b51b36dc9" translate="yes" xml:space="preserve">
          <source>Ecto.UUID</source>
          <target state="translated">Ecto.UUID</target>
        </trans-unit>
        <trans-unit id="c056be8aab94fcb1ffce2c4acd9f91211f770257" translate="yes" xml:space="preserve">
          <source>Edit the &lt;code&gt;index&lt;/code&gt; action of the &lt;code&gt;PageController&lt;/code&gt; module &lt;code&gt;lib/hello_web/controllers/page_controller.ex&lt;/code&gt; to look like this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df2b3ee4bfa707fe0f750730a7b1a6f4a93c4959" translate="yes" xml:space="preserve">
          <source>Edit the &lt;code&gt;index&lt;/code&gt; action of the &lt;code&gt;PageController&lt;/code&gt; module &lt;code&gt;lib/hello_web/controllers/page_controller.ex&lt;/code&gt; to look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24d2c6ee0d223c25a12683979befa7a65fe24c29" translate="yes" xml:space="preserve">
          <source>Editor's note: The secure transport protocol used by HTTPS is nowadays referred to as TLS. However, the application in the Erlang/OTP standard library that implements it is called &lt;code&gt;:ssl&lt;/code&gt;, for historical reasons. In this document we will refer to the protocol as 'TLS' and to the Erlang/OTP implementation as &lt;code&gt;:ssl&lt;/code&gt;, and its configuration parameters as &lt;code&gt;:ssl&lt;/code&gt; options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d62ae5f7d8336b6f25bf7adf6c0d96bc0d469ed1" translate="yes" xml:space="preserve">
          <source>Elixir 1.6 or later</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48a392d4dd03f72886070df034eefe1945afb9a6" translate="yes" xml:space="preserve">
          <source>Elixir code compiles to Erlang byte code to run on the Erlang virtual machine. Without Erlang, Elixir code has no virtual machine to run on, so we need to install Erlang as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89da4ae8705734d089eebf908c9384226bc5e8ac" translate="yes" xml:space="preserve">
          <source>Elixir developers tend to write assertive code. This means that, if we expect &lt;code&gt;leave&lt;/code&gt; to always return true, we can explicitly match on its result, as we did above:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="026c6b92fad7460b172761c6bdef80e0cc65a934" translate="yes" xml:space="preserve">
          <source>Elixir provides a macro called &lt;code&gt;defexception&lt;/code&gt; for defining custom exceptions. Exceptions are represented as structs, and structs need to be defined inside of modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bddcb552c6a1068cf1e007274938eab003f3107" translate="yes" xml:space="preserve">
          <source>Elixir type</source>
          <target state="translated">Tipo de elixir</target>
        </trans-unit>
        <trans-unit id="2f0de64ee8f6d9722cf5b6928af715bb95ebc664" translate="yes" xml:space="preserve">
          <source>Embedded schemas are defined similarly to source-based schemas. For example, you can use an embedded schema to represent your UI, mapping and validating its inputs, and then you convert such embedded schema to other schemas that are persisted to the database:</source>
          <target state="translated">Los esquemas incorporados se definen de manera similar a los esquemas basados en la fuente.Por ejemplo,puede utilizar un esquema incrustado para representar su interfaz de usuario,mapeando y validando sus entradas,y luego convertir dicho esquema incrustado en otros esquemas que se persiguen en la base de datos:</target>
        </trans-unit>
        <trans-unit id="d321b43810ec712e82ac71b26aa2669c35cc9ab5" translate="yes" xml:space="preserve">
          <source>Embedded schemas by default set the primary key type to &lt;code&gt;:binary_id&lt;/code&gt; but such can be configured with the &lt;code&gt;@primary_key&lt;/code&gt; attribute.</source>
          <target state="translated">Los esquemas incrustados establecen de forma predeterminada el tipo de clave principal en &lt;code&gt;:binary_id&lt;/code&gt; , pero se puede configurar con el atributo &lt;code&gt;@primary_key&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a74c4dff63d6eb182129f486224163ded7dd1010" translate="yes" xml:space="preserve">
          <source>Embeds</source>
          <target state="translated">Embeds</target>
        </trans-unit>
        <trans-unit id="15ec2a27c2b613ef9d1246405878528dbe70f066" translate="yes" xml:space="preserve">
          <source>Empty values</source>
          <target state="translated">Valores vacíos</target>
        </trans-unit>
        <trans-unit id="e12c4bc51c7f80baf2d58cd60b0b72befe9d7fc3" translate="yes" xml:space="preserve">
          <source>Emulates the client closing the channel</source>
          <target state="translated">Emula al cliente cerrando el canal</target>
        </trans-unit>
        <trans-unit id="0a0d1d460ed7ae24bb26447eb441939d7594f965" translate="yes" xml:space="preserve">
          <source>Emulates the client closing the channel.</source>
          <target state="translated">Emula al cliente cerrando el canal.</target>
        </trans-unit>
        <trans-unit id="556d7fd9dce7e339a9e21896427d0e9df9216df4" translate="yes" xml:space="preserve">
          <source>Emulates the client closing the socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed1383e73a934ae5dd38c4adeabafed7e4cdc135" translate="yes" xml:space="preserve">
          <source>Emulates the client leaving the channel</source>
          <target state="translated">Emula al cliente que deja el canal</target>
        </trans-unit>
        <trans-unit id="17db6b3bc54f57ff281b3281cff48c1f91f0d117" translate="yes" xml:space="preserve">
          <source>Emulates the client leaving the channel.</source>
          <target state="translated">Emula al cliente que deja el canal.</target>
        </trans-unit>
        <trans-unit id="4833d68fa15ee9411ff3f9f19c84f736625b93d0" translate="yes" xml:space="preserve">
          <source>Enables CSRF protection</source>
          <target state="translated">Permite la protección del CSRF</target>
        </trans-unit>
        <trans-unit id="840448d9ff6144dc12b1d62bf7566dd85976712b" translate="yes" xml:space="preserve">
          <source>Enables CSRF protection.</source>
          <target state="translated">Permite la protección del CSRF.</target>
        </trans-unit>
        <trans-unit id="36f7f260eacff8ce7935340ac25cfe6dfe22d818" translate="yes" xml:space="preserve">
          <source>Enables or disables recursive mode for CTEs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8799496bdebb6c82bf62ad19b164afe03dd7054" translate="yes" xml:space="preserve">
          <source>Encodes &lt;a href=&quot;phoenix.socket.message&quot;&gt;&lt;code&gt;Phoenix.Socket.Message&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;phoenix.socket.reply&quot;&gt;&lt;code&gt;Phoenix.Socket.Reply&lt;/code&gt;&lt;/a&gt; structs to push format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4439d359c8275177c11416f7d623055571b3b559" translate="yes" xml:space="preserve">
          <source>Encodes &lt;a href=&quot;phoenix.socket.message&quot;&gt;&lt;code&gt;Phoenix.Socket.Message&lt;/code&gt;&lt;/a&gt; struct to transport representation</source>
          <target state="translated">Codifica la estructura &lt;a href=&quot;phoenix.socket.message&quot;&gt; &lt;code&gt;Phoenix.Socket.Message&lt;/code&gt; &lt;/a&gt; para transportar la representaci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="de8975568caf53f64c1b972bddcfaff03aef75ee" translate="yes" xml:space="preserve">
          <source>Encodes a &lt;a href=&quot;phoenix.socket.broadcast&quot;&gt;&lt;code&gt;Phoenix.Socket.Broadcast&lt;/code&gt;&lt;/a&gt; struct to fastlane format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0656ea21559636a3ee2df0a652e60ed7a5acf9cf" translate="yes" xml:space="preserve">
          <source>Encodes a basic authentication header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33640f5ec22b24bf0f0de171e9a5b8b2a0b764cc" translate="yes" xml:space="preserve">
          <source>Encodes and signs data into a token you can send to clients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4136cdced053cd2d3ad4a24cfaebe880c4880600" translate="yes" xml:space="preserve">
          <source>Encodes data and signs it resulting in a token you can send to clients</source>
          <target state="translated">Codifica los datos y los firma,lo que resulta en una ficha que se puede enviar a los clientes</target>
        </trans-unit>
        <trans-unit id="5bd32fbf8fb4988c6f06bf34be67709564d0ac19" translate="yes" xml:space="preserve">
          <source>Encodes data and signs it resulting in a token you can send to clients.</source>
          <target state="translated">Codifica los datos y los firma,lo que resulta en una ficha que se puede enviar a los clientes.</target>
        </trans-unit>
        <trans-unit id="fc00694b284fbf0ca6ed4b59333c21bf7da11346" translate="yes" xml:space="preserve">
          <source>Encodes the HTML templates to iodata</source>
          <target state="translated">Codifica las plantillas HTML a iodata</target>
        </trans-unit>
        <trans-unit id="bfb6909ba137b13bf90db64457d8678c524bc153" translate="yes" xml:space="preserve">
          <source>Encodes the HTML templates to iodata.</source>
          <target state="translated">Codifica las plantillas HTML a iodatos.</target>
        </trans-unit>
        <trans-unit id="bfa7ce5698a8c9a272f9b42da04c2bba3f9d1ada" translate="yes" xml:space="preserve">
          <source>Encodes the given cookies as expected in a response header</source>
          <target state="translated">Codifica las cookies dadas como se espera en un encabezado de respuesta</target>
        </trans-unit>
        <trans-unit id="f48a0503bd24012813e0aede68caa5bd3d5aa5e1" translate="yes" xml:space="preserve">
          <source>Encodes the given cookies as expected in a response header.</source>
          <target state="translated">Codifica las cookies dadas como se espera en un encabezado de respuesta.</target>
        </trans-unit>
        <trans-unit id="cb350517064b72d7a25e5f65ef89d41643ca3680" translate="yes" xml:space="preserve">
          <source>Encodes the given map or list of tuples</source>
          <target state="translated">Codifica el mapa o la lista de tuplas dadas</target>
        </trans-unit>
        <trans-unit id="c1ab5b445561e7ceefe285404758fbc9608784a0" translate="yes" xml:space="preserve">
          <source>Encodes the given map or list of tuples.</source>
          <target state="translated">Codifica el mapa o la lista de tuplas dadas.</target>
        </trans-unit>
        <trans-unit id="96e127ce8d6455e372c5fd56ea665af369ae1ea3" translate="yes" xml:space="preserve">
          <source>Encodes, encrypts, and signs data into a token you can send to clients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b846476300f853d85d13d5947f9d2d00aa2516" translate="yes" xml:space="preserve">
          <source>Encoding and decoding</source>
          <target state="translated">Codificación y descodificación</target>
        </trans-unit>
        <trans-unit id="a020f6241ab7166f95774e91599ed46cf2bafaa1" translate="yes" xml:space="preserve">
          <source>Encoding keyword lists preserves the order of the fields:</source>
          <target state="translated">La codificación de las listas de palabras clave preserva el orden de los campos:</target>
        </trans-unit>
        <trans-unit id="7a2e6e7d7f545bf8d74f9cf21ea1d5f909b9251c" translate="yes" xml:space="preserve">
          <source>Encoding named lists:</source>
          <target state="translated">Codificando listas de nombres:</target>
        </trans-unit>
        <trans-unit id="506c5c945e0ce764f280c5d79fc55cd83adbe7a0" translate="yes" xml:space="preserve">
          <source>Encoding nested structures:</source>
          <target state="translated">Codificando las estructuras anidadas:</target>
        </trans-unit>
        <trans-unit id="e39e65881d4977227aa7c0bf1f34afafa18ef093" translate="yes" xml:space="preserve">
          <source>Encrypted Keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec278d1a15f13618c39a6bd06f27ddc94e905d46" translate="yes" xml:space="preserve">
          <source>Endpoint API</source>
          <target state="translated">API del punto final</target>
        </trans-unit>
        <trans-unit id="bf921ae468046a48c903c965f5551969f48378ce" translate="yes" xml:space="preserve">
          <source>Endpoint configuration</source>
          <target state="translated">Configuración del punto final</target>
        </trans-unit>
        <trans-unit id="ee8e5c078cab8ccf1fa5878d9e0a129082bd3e77" translate="yes" xml:space="preserve">
          <source>Endpoint configuration is split into two categories. Compile-time configuration means the configuration is read during compilation and changing it at runtime has no effect. The compile-time configuration is mostly related to error handling and instrumentation.</source>
          <target state="translated">La configuración del punto final se divide en dos categorías.La configuración en tiempo de compilación significa que la configuración se lee durante la compilación y cambiarla en tiempo de ejecución no tiene ningún efecto.La configuración en tiempo de compilación está relacionada principalmente con el manejo de errores y la instrumentación.</target>
        </trans-unit>
        <trans-unit id="e59e51cf292e385731745bc10fe86792b75ae2e2" translate="yes" xml:space="preserve">
          <source>Endpoint configuration is split into two categories. Compile-time configuration means the configuration is read during compilation and changing it at runtime has no effect. The compile-time configuration is mostly related to error handling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9103b209ad4262626a56b31bf69751829e6c4da" translate="yes" xml:space="preserve">
          <source>Endpoint plugs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86c04bf06c2268868838496ad24090854ec6e5c4" translate="yes" xml:space="preserve">
          <source>Endpoint testing</source>
          <target state="translated">Prueba del punto final</target>
        </trans-unit>
        <trans-unit id="b71c52711a24936e87649f5f6c786f704fc55482" translate="yes" xml:space="preserve">
          <source>Endpoints</source>
          <target state="translated">Endpoints</target>
        </trans-unit>
        <trans-unit id="48909b7ad855199bfe59cea5c9a40d133ce3f9b8" translate="yes" xml:space="preserve">
          <source>Endpoints must be explicitly started as part of your application supervision tree. Endpoints are added by default to the supervision tree in generated applications. Endpoints can be added to the supervision tree as follows:</source>
          <target state="translated">Los puntos finales deben iniciarse explícitamente como parte de su árbol de supervisión de la aplicación.Los puntos finales se añaden por defecto al árbol de supervisión de las aplicaciones generadas.Los puntos finales pueden añadirse al árbol de supervisión de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="5c89cf1414c123163db3e4ada4ca9be796ba6f04" translate="yes" xml:space="preserve">
          <source>Endpoints organize all the plugs common to every request, and apply them before dispatching into the router with its custom pipelines. We added a plug to the endpoint like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83aa16682d0c2ba817fe74261af7a04ddcc5cc37" translate="yes" xml:space="preserve">
          <source>Enforce UTF-8</source>
          <target state="translated">Hacer cumplir el UTF-8</target>
        </trans-unit>
        <trans-unit id="c1849eb0be9af6564e6d0e3b62d673d25b59cf17" translate="yes" xml:space="preserve">
          <source>Engines must implement the &lt;code&gt;compile/2&lt;/code&gt; function, that receives the template file and the template name and outputs the template quoted expression:</source>
          <target state="translated">Los motores deben implementar la funci&amp;oacute;n &lt;code&gt;compile/2&lt;/code&gt; , que recibe el archivo de plantilla y el nombre de la plantilla y genera la expresi&amp;oacute;n entre comillas de plantilla:</target>
        </trans-unit>
        <trans-unit id="196d7b3309d1e5eb9850884afec4c4bae3450d0c" translate="yes" xml:space="preserve">
          <source>Ensure all applications necessary to run the adapter are started</source>
          <target state="translated">Asegúrate de que se inicien todas las aplicaciones necesarias para ejecutar el adaptador</target>
        </trans-unit>
        <trans-unit id="97c96b97adefd31804b306b76be9c18601ec510f" translate="yes" xml:space="preserve">
          <source>Ensure all applications necessary to run the adapter are started.</source>
          <target state="translated">Asegúrese de que se inicien todas las aplicaciones necesarias para ejecutar el adaptador.</target>
        </trans-unit>
        <trans-unit id="6880556f20877e4f8a52af36bc2d3b199805feb2" translate="yes" xml:space="preserve">
          <source>Ensures the connection is recycled if it wasn&amp;rsquo;t already</source>
          <target state="translated">Garantiza que la conexi&amp;oacute;n se recicle si a&amp;uacute;n no lo estaba</target>
        </trans-unit>
        <trans-unit id="0e60a03980aee027fe1691a01cc5bb11c0cbee85" translate="yes" xml:space="preserve">
          <source>Ensures the connection is recycled if it wasn&amp;rsquo;t already.</source>
          <target state="translated">Garantiza que la conexi&amp;oacute;n se recicle si a&amp;uacute;n no lo estaba.</target>
        </trans-unit>
        <trans-unit id="11fb9b2b2a3e23b06b060112d12641a59b79933d" translate="yes" xml:space="preserve">
          <source>Ensures the connection is recycled if it wasn't already.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f320b643659b7061b5946fbb621cc2591e2c14e" translate="yes" xml:space="preserve">
          <source>Ensures the given module is an Ecto.Repo</source>
          <target state="translated">Asegura que el módulo dado es un Ecto.Repo</target>
        </trans-unit>
        <trans-unit id="6c59a3a6076875ecee6278d9f31718bdc8f04fc7" translate="yes" xml:space="preserve">
          <source>Ensures the given module is an Ecto.Repo.</source>
          <target state="translated">Asegura que el módulo dado es un Ecto.Repo.</target>
        </trans-unit>
        <trans-unit id="2ad5a4781c158db980d641100598f0a814961f62" translate="yes" xml:space="preserve">
          <source>Equivalent to multiple &lt;a href=&quot;#put_private/3&quot;&gt;&lt;code&gt;put_private/3&lt;/code&gt;&lt;/a&gt; calls.</source>
          <target state="translated">Equivalente a m&amp;uacute;ltiples llamadas &lt;a href=&quot;#put_private/3&quot;&gt; &lt;code&gt;put_private/3&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="665844873eba6677ffd80e2288163b49c7de89ff" translate="yes" xml:space="preserve">
          <source>Equivalent to multiple calls to &lt;a href=&quot;#assign/3&quot;&gt;&lt;code&gt;assign/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Equivalente a varias llamadas para &lt;a href=&quot;#assign/3&quot;&gt; &lt;code&gt;assign/3&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d371f28bfea1e852f448381bb4f0bdfccaa7149e" translate="yes" xml:space="preserve">
          <source>Equivalent to:</source>
          <target state="translated">Equivalente a:</target>
        </trans-unit>
        <trans-unit id="9ab4301ae8f07d25a150a12958e525ce0e1ef8f9" translate="yes" xml:space="preserve">
          <source>Erlang 20 or later</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="836dcbdc17cb5c2729dc6c2705c7fbc99072ecc4" translate="yes" xml:space="preserve">
          <source>Error and exception handling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73631d7f0356fdbdeaa36f8e5dbad89c6aa15dc4" translate="yes" xml:space="preserve">
          <source>Error handling</source>
          <target state="translated">Manejo de errores...</target>
        </trans-unit>
        <trans-unit id="40e1851b3b8efb947753dcaeb2301a6cd175949c" translate="yes" xml:space="preserve">
          <source>Error pages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b4673ef94aee0279f00bdec8bef7af091ed539" translate="yes" xml:space="preserve">
          <source>Error raised when CSRF token is invalid.</source>
          <target state="translated">El error se produce cuando la ficha CSRF no es válida.</target>
        </trans-unit>
        <trans-unit id="cd4dd7806db221ae8f85315297f1933628bac6af" translate="yes" xml:space="preserve">
          <source>Error raised when no response is sent in a request</source>
          <target state="translated">Error planteado cuando no se envía una respuesta en una solicitud</target>
        </trans-unit>
        <trans-unit id="80aac7a600595cc614c5a8707716e2680a856d60" translate="yes" xml:space="preserve">
          <source>Error raised when non-XHR requests are used for Javascript responses.</source>
          <target state="translated">Error surgido cuando se utilizan solicitudes no XHR para respuestas en Javascript.</target>
        </trans-unit>
        <trans-unit id="4fd4c12633060915842a7adbf471e8f2c4de38a5" translate="yes" xml:space="preserve">
          <source>Error raised when the cookie exceeds the maximum size of 4096 bytes.</source>
          <target state="translated">El error se produce cuando la cookie supera el tamaño máximo de 4096 bytes.</target>
        </trans-unit>
        <trans-unit id="d0075b7b1699d63ab98e1352564607df567a7b11" translate="yes" xml:space="preserve">
          <source>Error raised when the request body cannot be parsed.</source>
          <target state="translated">El error se produce cuando el cuerpo de la solicitud no puede ser analizado.</target>
        </trans-unit>
        <trans-unit id="c83423323bd0f9e7dca7dc133f2e9d8c07a67c72" translate="yes" xml:space="preserve">
          <source>Error raised when the request body is malformed.</source>
          <target state="translated">El error se produce cuando el cuerpo de la solicitud está malformado.</target>
        </trans-unit>
        <trans-unit id="355600e5fa5b646a0b7fd10a605ecbb4bd27c88c" translate="yes" xml:space="preserve">
          <source>Error raised when the request is too large.</source>
          <target state="translated">El error se produce cuando la petición es demasiado grande.</target>
        </trans-unit>
        <trans-unit id="6e12f9a35ca688371e35697f765ed55461d289eb" translate="yes" xml:space="preserve">
          <source>Error raised when trying to modify or send an already sent response</source>
          <target state="translated">Error surgido al tratar de modificar o enviar una respuesta ya enviada</target>
        </trans-unit>
        <trans-unit id="296513012a971b48d8b833aad634bbe05b65f96e" translate="yes" xml:space="preserve">
          <source>Error raised when trying to send a header that has errors, for example:</source>
          <target state="translated">Error planteado cuando se intenta enviar un encabezado que tiene errores,por ejemplo:</target>
        </trans-unit>
        <trans-unit id="1fb1c6eeb587a027f982759e60a4eb8840df9ee8" translate="yes" xml:space="preserve">
          <source>Escapes HTML content to be inserted a JavaScript string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc34dec098a3cabb258f8143fef111fe3392d935" translate="yes" xml:space="preserve">
          <source>Escapes the HTML entities in the given term, returning iodata.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="777544a1e5e3a2890c9d11e0670e4f90afe4ee49" translate="yes" xml:space="preserve">
          <source>Escapes the given HTML to iodata</source>
          <target state="translated">Escapa del HTML dado a iodata</target>
        </trans-unit>
        <trans-unit id="55a6457b3b6b83f90cbc23a5b6f6ef249a6e461d" translate="yes" xml:space="preserve">
          <source>Escapes the given HTML to iodata.</source>
          <target state="translated">Escapa del HTML dado a iodata.</target>
        </trans-unit>
        <trans-unit id="d428b221d3f388b6985a15759340115a82a01a85" translate="yes" xml:space="preserve">
          <source>Escapes the given HTML to string</source>
          <target state="translated">Escapa del HTML dado a la cadena</target>
        </trans-unit>
        <trans-unit id="9aae0e2d943bc79363acc16d6ad4f9539adf131a" translate="yes" xml:space="preserve">
          <source>Escapes the given HTML to string.</source>
          <target state="translated">Escapa del HTML dado a la cadena.</target>
        </trans-unit>
        <trans-unit id="a43c02952028f58987da67d94d91c06959d88ae7" translate="yes" xml:space="preserve">
          <source>Establishing the socket connection</source>
          <target state="translated">Estableciendo la conexión del enchufe</target>
        </trans-unit>
        <trans-unit id="8700cd4e26a53398fa836080d8b671414211c9bd" translate="yes" xml:space="preserve">
          <source>Evaluates to true if the provided subquery returns 1 or more rows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdf79b8896d2f81e42819bef253ab78ee4c76232" translate="yes" xml:space="preserve">
          <source>Evaluates whether all values returned from the provided subquery match in a comparison operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="818dc1bf0883b7b0cc6401f2614dc09f23ea8627" translate="yes" xml:space="preserve">
          <source>Even though 404 has been overridden, the &lt;code&gt;:not_found&lt;/code&gt; atom can still be used to set the status to 404 as well as the new atom &lt;code&gt;:actually_this_was_found&lt;/code&gt; inflected from the reason phrase &quot;Actually This Was Found&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0a62606f152b68877966f1c848b191cb7d5bb8c" translate="yes" xml:space="preserve">
          <source>Even though 404 has been overridden, the &lt;code&gt;:not_found&lt;/code&gt; atom can still be used to set the status to 404 as well as the new atom &lt;code&gt;:actually_this_was_found&lt;/code&gt; inflected from the reason phrase &amp;ldquo;Actually This Was Found&amp;rdquo;.</source>
          <target state="translated">Aunque 404 se ha anulado, el &amp;aacute;tomo &lt;code&gt;:not_found&lt;/code&gt; todav&amp;iacute;a se puede usar para establecer el estado en 404, as&amp;iacute; como el nuevo &amp;aacute;tomo &lt;code&gt;:actually_this_was_found&lt;/code&gt; really_this_was_found inflexionado de la frase de motivo &quot;Realmente esto se encontr&amp;oacute;&quot;.</target>
        </trans-unit>
        <trans-unit id="074292ad9299496428c36249f30a1b739828e4f3" translate="yes" xml:space="preserve">
          <source>Events and updates pushed by server - such as notifications, dashboards, etc;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5ea65ec4b8c12689983e971d1e328837a8835e4" translate="yes" xml:space="preserve">
          <source>Events considerations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab36676f1a0bc49dcaa9c690d2a0dbaa36bbae83" translate="yes" xml:space="preserve">
          <source>Every occurence of the &lt;code&gt;?&lt;/code&gt; character will be interpreted as a place for additional argument. If the literal character &lt;code&gt;?&lt;/code&gt; is required, it can be escaped with &lt;code&gt;\\?&lt;/code&gt; (one escape for strings, another for fragment).</source>
          <target state="translated">Cada aparici&amp;oacute;n del &lt;code&gt;?&lt;/code&gt; El personaje se interpretar&amp;aacute; como un lugar para argumentos adicionales. &amp;iquest;Si el personaje literal &lt;code&gt;?&lt;/code&gt; se requiere, se puede escapar con &lt;code&gt;\\?&lt;/code&gt; (un escape para cadenas, otro para fragmentos).</target>
        </trans-unit>
        <trans-unit id="06148d94ade3c0c8e812063e3f93749008214d86" translate="yes" xml:space="preserve">
          <source>Every time &lt;a href=&quot;#pipe_through/1&quot;&gt;&lt;code&gt;pipe_through/1&lt;/code&gt;&lt;/a&gt; is called, the new pipelines are appended to the ones previously given.</source>
          <target state="translated">Cada vez que se llama a &lt;a href=&quot;#pipe_through/1&quot;&gt; &lt;code&gt;pipe_through/1&lt;/code&gt; &lt;/a&gt; , las nuevas canalizaciones se a&amp;ntilde;aden a las proporcionadas anteriormente.</target>
        </trans-unit>
        <trans-unit id="cc375270d6fb2850d086f0d0640e1fd77b05a5b0" translate="yes" xml:space="preserve">
          <source>Every time a stateful component is rendered, both &lt;a href=&quot;#c:preload/1&quot;&gt;&lt;code&gt;preload/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#c:update/2&quot;&gt;&lt;code&gt;update/2&lt;/code&gt;&lt;/a&gt; are called. To understand why both callbacks are necessary, imagine that you implement a component and the component needs to load some state from the database. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc3685f8a3ac8c0bf5bdecefe13889f6e26ac09c" translate="yes" xml:space="preserve">
          <source>Every time the &lt;code&gt;MyApp.Address.changeset/2&lt;/code&gt; function is invoked, it must return a changeset. Once the parent changeset is given to an &lt;a href=&quot;ecto.repo&quot;&gt;&lt;code&gt;Ecto.Repo&lt;/code&gt;&lt;/a&gt; function, all entries will be inserted/updated/deleted within the same transaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e8f95beda0ca71a4e23af9a8fcd9870cd58bde0" translate="yes" xml:space="preserve">
          <source>Every time the &lt;code&gt;MyApp.Address.changeset/2&lt;/code&gt; function is invoked, it must return a changeset. This changeset will be applied to your Repo with the proper action accordingly.</source>
          <target state="translated">Cada vez que se invoca la funci&amp;oacute;n &lt;code&gt;MyApp.Address.changeset/2&lt;/code&gt; , debe devolver un conjunto de cambios. Este conjunto de cambios se aplicar&amp;aacute; a su Repo con la acci&amp;oacute;n adecuada en consecuencia.</target>
        </trans-unit>
        <trans-unit id="290663b1782b5ce0b5e5b56fd01c5c1316fbf708" translate="yes" xml:space="preserve">
          <source>Every time the &lt;code&gt;fetch&lt;/code&gt; callback is invoked, it is done from a separate process. Given those processes run asynchronously, it is often necessary to guarantee they have been shutdown at the end of every test. This can be done by using ExUnit's &lt;code&gt;on_exit&lt;/code&gt; hook plus &lt;code&gt;fetchers_pids&lt;/code&gt; function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e1b63ef1a964c3fad03cd79a94213f2054d50df" translate="yes" xml:space="preserve">
          <source>Every time there is a new message, you would append it to the &lt;code&gt;@messages&lt;/code&gt; assign and re-render all messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0635cb9ca58a4094467b83d74344825171cb1066" translate="yes" xml:space="preserve">
          <source>Every time you join a channel, you need to choose which particular topic you want to listen to. The topic is just an identifier, but by convention it is often made of two parts: &lt;code&gt;&quot;topic:subtopic&quot;&lt;/code&gt;. Using the &lt;code&gt;&quot;topic:subtopic&quot;&lt;/code&gt; approach pairs nicely with the &lt;a href=&quot;phoenix.socket#channel/2&quot;&gt;&lt;code&gt;Phoenix.Socket.channel/2&lt;/code&gt;&lt;/a&gt; allowing you to match on all topics starting with a given prefix:</source>
          <target state="translated">Cada vez que te unes a un canal, debes elegir qu&amp;eacute; tema en particular quieres escuchar. El tema es solo un identificador, pero por convenci&amp;oacute;n a menudo se compone de dos partes: &lt;code&gt;&quot;topic:subtopic&quot;&lt;/code&gt; . El uso del enfoque &lt;code&gt;&quot;topic:subtopic&quot;&lt;/code&gt; se combina muy bien con &lt;a href=&quot;phoenix.socket#channel/2&quot;&gt; &lt;code&gt;Phoenix.Socket.channel/2&lt;/code&gt; ,&lt;/a&gt; lo que le permite hacer coincidir todos los temas que comienzan con un prefijo determinado:</target>
        </trans-unit>
        <trans-unit id="76c3074c4726c5b0a0c12202067bba3916d6bea0" translate="yes" xml:space="preserve">
          <source>Every time you join a channel, you need to choose which particular topic you want to listen to. The topic is just an identifier, but by convention it is often made of two parts: &lt;code&gt;&quot;topic:subtopic&quot;&lt;/code&gt;. Using the &lt;code&gt;&quot;topic:subtopic&quot;&lt;/code&gt; approach pairs nicely with the &lt;a href=&quot;phoenix.socket#channel/3&quot;&gt;&lt;code&gt;Phoenix.Socket.channel/3&lt;/code&gt;&lt;/a&gt; allowing you to match on all topics starting with a given prefix by using a splat (the &lt;code&gt;*&lt;/code&gt; character) as the last character in the topic pattern:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="682f1b801bb2578a3d62730460ad8900a34791db" translate="yes" xml:space="preserve">
          <source>Examining Routes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="654d7a479004b2b26e7de7b5ed9cd79a331ded80" translate="yes" xml:space="preserve">
          <source>Example Usage</source>
          <target state="translated">Ejemplo de uso</target>
        </trans-unit>
        <trans-unit id="5d036abf17a95029249be5aac0478db70ae0589a" translate="yes" xml:space="preserve">
          <source>Example of generated files:</source>
          <target state="translated">Ejemplo de archivos generados:</target>
        </trans-unit>
        <trans-unit id="f6ebfe315ec41fe5880d8cb59f91359c8d74ad8b" translate="yes" xml:space="preserve">
          <source>Example: Adding a comment to a post</source>
          <target state="translated">Ejemplo:Agregar un comentario a un post</target>
        </trans-unit>
        <trans-unit id="09f5a191bd1aa3c4c2a2bf0180871d036a7576ef" translate="yes" xml:space="preserve">
          <source>Example: Adding tags to a post</source>
          <target state="translated">Ejemplo:Agregar etiquetas a un mensaje</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="d566c7c0b5a5e7655a937e7a2e0f690197fca27b" translate="yes" xml:space="preserve">
          <source>Examples and detailed documentation for each of those are available in the &lt;a href=&quot;ecto.query&quot;&gt;&lt;code&gt;Ecto.Query&lt;/code&gt;&lt;/a&gt; module. Functions supported in queries are listed in &lt;a href=&quot;ecto.query.api&quot;&gt;&lt;code&gt;Ecto.Query.API&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">En el m&amp;oacute;dulo &lt;a href=&quot;ecto.query&quot;&gt; &lt;code&gt;Ecto.Query&lt;/code&gt; hay&lt;/a&gt; ejemplos y documentaci&amp;oacute;n detallada para cada uno de ellos . Las funciones admitidas en las consultas se enumeran en &lt;a href=&quot;ecto.query.api&quot;&gt; &lt;code&gt;Ecto.Query.API&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0cad0d61f681eb1c78a7b0c3f38376aef13625b3" translate="yes" xml:space="preserve">
          <source>Except expression returns only unique rows as if each query returned distinct results. This may cause performance penalty. If you need just to take the difference of multiple result sets without removing duplicate rows consider using &lt;a href=&quot;#except_all/2&quot;&gt;&lt;code&gt;except_all/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Excepto que la expresi&amp;oacute;n devuelve solo filas &amp;uacute;nicas como si cada consulta arrojara resultados distintos. Esto puede causar una penalizaci&amp;oacute;n del rendimiento. Si solo necesita tomar la diferencia de varios conjuntos de resultados sin eliminar filas duplicadas, considere usar &lt;a href=&quot;#except_all/2&quot;&gt; &lt;code&gt;except_all/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9fd0138bf7042fceaf302abbce31b378dd7675d9" translate="yes" xml:space="preserve">
          <source>Exception actions are functions that can be triggered by the error page, it is basically a list of maps defining a &lt;code&gt;label&lt;/code&gt; and a &lt;code&gt;handler&lt;/code&gt; to be executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c64d530f7d597c09275505d5c9c0d4f66100c4ec" translate="yes" xml:space="preserve">
          <source>Exception raised when a template cannot be found.</source>
          <target state="translated">Excepción planteada cuando no se puede encontrar una plantilla.</target>
        </trans-unit>
        <trans-unit id="4bfb3c666085af96fb301a2c7a36585a27fc21e9" translate="yes" xml:space="preserve">
          <source>Exception raised when no route is found.</source>
          <target state="translated">Excepción planteada cuando no se encuentra ninguna ruta.</target>
        </trans-unit>
        <trans-unit id="edaffb4e607a48e8d13f8aaef5358d5af5c6588b" translate="yes" xml:space="preserve">
          <source>Exception raised when the URI is malformed on matching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd3dfbe79fda3a9d92de67b1bd4f1dc9f60ab723" translate="yes" xml:space="preserve">
          <source>Exceptions</source>
          <target state="translated">Exceptions</target>
        </trans-unit>
        <trans-unit id="e61e0d78bf2564fbb3047a564384748705a23809" translate="yes" xml:space="preserve">
          <source>Exceptions during connected render:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="119db8230eac960cae56a2a3ca8a57446a92b51a" translate="yes" xml:space="preserve">
          <source>Exceptions during disconnected render:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e3d75bbaed299f1252375875124b45bcba439c" translate="yes" xml:space="preserve">
          <source>Exceptions on events (&lt;code&gt;handle_info&lt;/code&gt;, &lt;code&gt;handle_event&lt;/code&gt;, etc)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f96c9a7121b72610eba85c9c28bd3012612ebfae" translate="yes" xml:space="preserve">
          <source>Exceptions on mount</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bc817333cbc1bf3d1de15d9550396d9326905ac" translate="yes" xml:space="preserve">
          <source>Excluded hosts tuple</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eab5b7fe3dcdd0495cd43577dcd643b59994032" translate="yes" xml:space="preserve">
          <source>Executes a previously prepared query</source>
          <target state="translated">Ejecuta una consulta previamente preparada</target>
        </trans-unit>
        <trans-unit id="d81e8be29cc9dcb9a67e4318db7a32eb8dbb7f4a" translate="yes" xml:space="preserve">
          <source>Executes a previously prepared query.</source>
          <target state="translated">Ejecuta una consulta previamente preparada.</target>
        </trans-unit>
        <trans-unit id="0020e8f63dedbf5b6f61e98b567f1e0eaed81a9d" translate="yes" xml:space="preserve">
          <source>Exit reasons when stopping a channel</source>
          <target state="translated">Razones de salida al detener un canal</target>
        </trans-unit>
        <trans-unit id="8db046f31b1079906be240e807a41ffe4cfff43f" translate="yes" xml:space="preserve">
          <source>Expected scenarios</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edcdd1f5abd2799866e34eea3610d6b92c1f5229" translate="yes" xml:space="preserve">
          <source>Expression examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bbb977db38c4f253c4cea64b8d8a87132fc3861" translate="yes" xml:space="preserve">
          <source>Expressions example</source>
          <target state="translated">Ejemplo de expresiones</target>
        </trans-unit>
        <trans-unit id="3ee48fdc5db523f40497a2ed53ecc18e5f483f7e" translate="yes" xml:space="preserve">
          <source>Expressions examples</source>
          <target state="translated">Ejemplos de expresiones</target>
        </trans-unit>
        <trans-unit id="512ffac0536256b0a077954b2b56ec3d00cd8027" translate="yes" xml:space="preserve">
          <source>Extend presence information with additional data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93374886ac70b6fcf67cc4422c2dd8f97aa99cba" translate="yes" xml:space="preserve">
          <source>External values and Elixir expressions can be injected into a query expression with &lt;code&gt;^&lt;/code&gt;:</source>
          <target state="translated">Los valores externos y las expresiones de Elixir se pueden inyectar en una expresi&amp;oacute;n de consulta con &lt;code&gt;^&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f4ee136a95ce0e250b26a775c6a4f304eb49e9fb" translate="yes" xml:space="preserve">
          <source>External vs internal data</source>
          <target state="translated">Datos externos vs.internos</target>
        </trans-unit>
        <trans-unit id="6511da3c8f61a40e2990f69eb890c195756508e6" translate="yes" xml:space="preserve">
          <source>Extracting tag values from Plug.Conn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d55c1fe9b22bbea495440d9e994c00b34d01cff" translate="yes" xml:space="preserve">
          <source>Extracts connection information from &lt;code&gt;conn&lt;/code&gt; and returns a map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44e6613f45ea30af9e65d715a73b23d35854f291" translate="yes" xml:space="preserve">
          <source>Extracts the resource name from an alias</source>
          <target state="translated">Extrae el nombre del recurso de un alias</target>
        </trans-unit>
        <trans-unit id="b9a7f83f64bd9961bbffb73d9a101603d5fc422d" translate="yes" xml:space="preserve">
          <source>Extracts the resource name from an alias.</source>
          <target state="translated">Extrae el nombre del recurso de un alias.</target>
        </trans-unit>
        <trans-unit id="f06ac061a76b4ebd4a18e48b816bda1ba2a2c77c" translate="yes" xml:space="preserve">
          <source>Extracts the set&amp;rsquo;s elements from ets into a mergeable list</source>
          <target state="translated">Extrae los elementos del conjunto de ets en una lista fusionable</target>
        </trans-unit>
        <trans-unit id="3b06a14d516933eb29357d012c46511d38c29b2b" translate="yes" xml:space="preserve">
          <source>Extracts the set&amp;rsquo;s elements from ets into a mergeable list.</source>
          <target state="translated">Extrae los elementos del conjunto de ets en una lista fusionable.</target>
        </trans-unit>
        <trans-unit id="3e4e6627a5b44408d225b0820df0658946bef555" translate="yes" xml:space="preserve">
          <source>Extracts the set's elements from ets into a mergeable list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03688ba6aa340b87549088aa5739944cb6b1dc73" translate="yes" xml:space="preserve">
          <source>FAQ</source>
          <target state="translated">FAQ</target>
        </trans-unit>
        <trans-unit id="c6ddde0f8bb7bc8c99d7a19d12b92c112294da97" translate="yes" xml:space="preserve">
          <source>Fails if the result is not safe. In such cases, you can invoke &lt;a href=&quot;#html_escape/1&quot;&gt;&lt;code&gt;html_escape/1&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#raw/1&quot;&gt;&lt;code&gt;raw/1&lt;/code&gt;&lt;/a&gt; accordingly before.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd676bc8d0bb7e9a6ce51caa1747e0a5855e3e9e" translate="yes" xml:space="preserve">
          <source>Fetchable fields</source>
          <target state="translated">Campos recuperables</target>
        </trans-unit>
        <trans-unit id="e284d893dbc745af72e66058a0b6fcabca9a0795" translate="yes" xml:space="preserve">
          <source>Fetches a change from the given changeset</source>
          <target state="translated">Obtiene un cambio del conjunto de cambios dados</target>
        </trans-unit>
        <trans-unit id="df9d063215383f5d43ff6bd8f28d50b17f990df3" translate="yes" xml:space="preserve">
          <source>Fetches a change from the given changeset.</source>
          <target state="translated">Obtiene un cambio del conjunto de cambios dado.</target>
        </trans-unit>
        <trans-unit id="fcadf1bd67677a18f8d7729c638f9317d92bc9ab" translate="yes" xml:space="preserve">
          <source>Fetches a single result from the query</source>
          <target state="translated">Obtiene un único resultado de la consulta</target>
        </trans-unit>
        <trans-unit id="6b017414662aa05a81aef4aa976822b02de76df8" translate="yes" xml:space="preserve">
          <source>Fetches a single result from the query.</source>
          <target state="translated">Obtiene un único resultado de la consulta.</target>
        </trans-unit>
        <trans-unit id="08719e85d959bee2a1ad16c16f9a61c7c481cd87" translate="yes" xml:space="preserve">
          <source>Fetches a single struct from the data store where the primary key matches the given id</source>
          <target state="translated">Busca una única estructura del almacén de datos donde la clave primaria coincide con la identificación dada</target>
        </trans-unit>
        <trans-unit id="0bd85e97f228082f7016f38d8dc8a785d578d92e" translate="yes" xml:space="preserve">
          <source>Fetches a single struct from the data store where the primary key matches the given id.</source>
          <target state="translated">Busca una única estructura del almacén de datos donde la clave primaria coincide con la identificación dada.</target>
        </trans-unit>
        <trans-unit id="11876e00e55507ddc1f33effa9a28d5147b077b6" translate="yes" xml:space="preserve">
          <source>Fetches all entries from the data store matching the given query</source>
          <target state="translated">Busca todas las entradas del almacén de datos que coincidan con la consulta dada</target>
        </trans-unit>
        <trans-unit id="d5e5f6e8487bddc32e7596312ed1bb5dac35bd0a" translate="yes" xml:space="preserve">
          <source>Fetches all entries from the data store matching the given query.</source>
          <target state="translated">Busca todas las entradas del almacén de datos que coincidan con la consulta dada.</target>
        </trans-unit>
        <trans-unit id="3163fd5d81253261c2a50f52a695753603eb3406" translate="yes" xml:space="preserve">
          <source>Fetches cookies from the request headers</source>
          <target state="translated">Busca galletas en los encabezados de las solicitudes</target>
        </trans-unit>
        <trans-unit id="0fe8d31a288e49b7e5cacce395d79fb5e4019e40" translate="yes" xml:space="preserve">
          <source>Fetches cookies from the request headers.</source>
          <target state="translated">Busca galletas en los encabezados de las solicitudes.</target>
        </trans-unit>
        <trans-unit id="64380f0b804c02ac2677f51e3be474a17762a74b" translate="yes" xml:space="preserve">
          <source>Fetches query parameters from the query string</source>
          <target state="translated">Busca los parámetros de consulta de la cadena de consulta</target>
        </trans-unit>
        <trans-unit id="39f3908de6fa352816ba9add06ec6c62e6ec9216" translate="yes" xml:space="preserve">
          <source>Fetches query parameters from the query string.</source>
          <target state="translated">Busca los parámetros de consulta de la cadena de consulta.</target>
        </trans-unit>
        <trans-unit id="72610977b91bc4b48f625242dcbbf84a8ecf4f4c" translate="yes" xml:space="preserve">
          <source>Fetches the LiveView and merges with the controller flash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03d548c192ce1d24785783d7cd261cf87725704e" translate="yes" xml:space="preserve">
          <source>Fetches the flash storage</source>
          <target state="translated">Busca el almacenamiento de la memoria flash</target>
        </trans-unit>
        <trans-unit id="0d58eda1295145111b598fd2ee9110335edd72a9" translate="yes" xml:space="preserve">
          <source>Fetches the flash storage.</source>
          <target state="translated">Busca el almacenamiento de flash.</target>
        </trans-unit>
        <trans-unit id="faff5731b0098ef6d06e0e3b0ab84e1f24767239" translate="yes" xml:space="preserve">
          <source>Fetches the given field from changes or from the data</source>
          <target state="translated">Recupera el campo dado a partir de los cambios o de los datos</target>
        </trans-unit>
        <trans-unit id="00c47ed90a14976a1fe975f63cadebf282fe500b" translate="yes" xml:space="preserve">
          <source>Fetches the given field from changes or from the data.</source>
          <target state="translated">Recupera el campo dado a partir de los cambios o de los datos.</target>
        </trans-unit>
        <trans-unit id="274968e4217f4aac81cf7e7d092480224b04e65a" translate="yes" xml:space="preserve">
          <source>Fetches the session from the session store. Will also fetch cookies</source>
          <target state="translated">Busca la sesión en la tienda de sesiones.También va a buscar galletas</target>
        </trans-unit>
        <trans-unit id="0b70c54cb87368611ee01ded3dee3728ea2684c7" translate="yes" xml:space="preserve">
          <source>Fetches the session from the session store. Will also fetch cookies.</source>
          <target state="translated">Busca la sesión en la tienda de sesiones.También va a buscar galletas.</target>
        </trans-unit>
        <trans-unit id="0eb0f2ebbd898fe11ee1adea5bfdeebe9c932ccf" translate="yes" xml:space="preserve">
          <source>Fetching Presence Information</source>
          <target state="translated">Obtención de información sobre la presencia</target>
        </trans-unit>
        <trans-unit id="b7725b2aa5514d3fb80276bbee807899c2709959" translate="yes" xml:space="preserve">
          <source>Ff there is no such row, instead return default (which must be of the same type as value). Both offset and default are evaluated with respect to the current row. If omitted, offset defaults to 1 and default to null.</source>
          <target state="translated">Si no existe tal fila,en su lugar se devuelve el valor por defecto (que debe ser del mismo tipo que el valor).Tanto el offset como el default se evalúan con respecto a la fila actual.Si se omite,el offset por defecto es 1 y el defecto es nulo.</target>
        </trans-unit>
        <trans-unit id="9f345d16da1171009c2d07d7e162059e89a99f42" translate="yes" xml:space="preserve">
          <source>Fields that are not present in the schema (or &lt;code&gt;types&lt;/code&gt; map) are ignored. If any of the values has invalid type, an error is raised.</source>
          <target state="translated">Los campos que no est&amp;aacute;n presentes en el esquema (o mapa de &lt;code&gt;types&lt;/code&gt; ) se ignoran. Si alguno de los valores tiene un tipo no v&amp;aacute;lido, se genera un error.</target>
        </trans-unit>
        <trans-unit id="f315ee9e3108a80c179abb06fe33569d756f7ff5" translate="yes" xml:space="preserve">
          <source>File handling</source>
          <target state="translated">Manejo de archivos</target>
        </trans-unit>
        <trans-unit id="b563507a845353e1d9b91b6064b7fe3ba43015a7" translate="yes" xml:space="preserve">
          <source>Filtering associations</source>
          <target state="translated">Asociaciones de filtrado</target>
        </trans-unit>
        <trans-unit id="7dcc155505178bbe138e3135c40148f03651670f" translate="yes" xml:space="preserve">
          <source>Filters out those present on downed replicas.</source>
          <target state="translated">Filtra los presentes en las réplicas caídas.</target>
        </trans-unit>
        <trans-unit id="282e4e63202755b322d3a8585cfcb3887e04ec08" translate="yes" xml:space="preserve">
          <source>Finally customize LiveView to use it in your &lt;code&gt;assets/js/app.js&lt;/code&gt;, right before the &lt;code&gt;liveSocket.connect()&lt;/code&gt; call:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e9555e0facd6e903d9ec04caa3ca1e02ec43549" translate="yes" xml:space="preserve">
          <source>Finally, &lt;code&gt;options&lt;/code&gt; is a keyword list of options given to the &lt;code&gt;Repo&lt;/code&gt; operation that triggered the adapter call. Any option is allowed, as this is a mechanism to allow users of Ecto to customize how the adapter behaves per operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2346c7af5d6980b8986c812d4411f43cd6d5d34" translate="yes" xml:space="preserve">
          <source>Finally, Phoenix ships with a &lt;a href=&quot;mix.tasks.phx.routes&quot;&gt;&lt;code&gt;mix phx.routes&lt;/code&gt;&lt;/a&gt; task that nicely formats all routes in a given router. We can use it to verify all routes included in the router above:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e5a408906e0f613586519b719c8fb8988afdde0" translate="yes" xml:space="preserve">
          <source>Finally, Phoenix ships with a &lt;code&gt;mix phx.routes&lt;/code&gt; task that nicely formats all routes in a given router. We can use it to verify all routes included in the router above:</source>
          <target state="translated">Finalmente, Phoenix incluye una tarea &lt;code&gt;mix phx.routes&lt;/code&gt; que formatea todas las rutas en un enrutador determinado. Podemos usarlo para verificar todas las rutas incluidas en el enrutador anterior:</target>
        </trans-unit>
        <trans-unit id="f99f4376e4980be4bbc9016c10d32de768a5d866" translate="yes" xml:space="preserve">
          <source>Finally, a diff of presence join and leave events will be sent to the client as they happen in real-time with the &quot;presence_diff&quot; event. The diff structure will be a map of &lt;code&gt;:joins&lt;/code&gt; and &lt;code&gt;:leaves&lt;/code&gt; of the form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef21b0ab2a337cbb5d3cb905bb5c0c2daaee7d04" translate="yes" xml:space="preserve">
          <source>Finally, a diff of presence join and leave events will be sent to the client as they happen in real-time with the &amp;ldquo;presence_diff&amp;rdquo; event. The diff structure will be a map of &lt;code&gt;:joins&lt;/code&gt; and &lt;code&gt;:leaves&lt;/code&gt; of the form:</source>
          <target state="translated">Por &amp;uacute;ltimo, se enviar&amp;aacute; al cliente una diferencia de eventos de entrada y salida de presencia a medida que suceden en tiempo real con el evento de diferencia de presencia. La estructura de diferencias ser&amp;aacute; un mapa de &lt;code&gt;:joins&lt;/code&gt; y &lt;code&gt;:leaves&lt;/code&gt; de la forma:</target>
        </trans-unit>
        <trans-unit id="8d783e0fbd65008c8d3daf828f44798d62b28819" translate="yes" xml:space="preserve">
          <source>Finally, a general &lt;code&gt;match&lt;/code&gt; function is also supported:</source>
          <target state="translated">Finalmente, tambi&amp;eacute;n se admite una funci&amp;oacute;n de &lt;code&gt;match&lt;/code&gt; general :</target>
        </trans-unit>
        <trans-unit id="cbd538abc008943a66a235a940fcc360a92892be" translate="yes" xml:space="preserve">
          <source>Finally, controllers are plugs too, so we can do:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b46f1f43d8d8a7d1e56f9f95c1017883c532945" translate="yes" xml:space="preserve">
          <source>Finally, ensure you have placed a CSRF meta tag inside the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; tag in your layout (&lt;code&gt;lib/my_app_web/templates/layout/root.html.leex&lt;/code&gt;), before &lt;code&gt;app.js&lt;/code&gt; is included like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="371bdbfa9b024c89cc2bf0370822b67c2b7ebd0c" translate="yes" xml:space="preserve">
          <source>Finally, every time a message is pushed to the channel, a reference is returned. We can use this reference to assert a particular reply was sent from the server:</source>
          <target state="translated">Finalmente,cada vez que un mensaje es empujado al canal,una referencia es devuelta.Podemos usar esta referencia para afirmar que una respuesta en particular fue enviada desde el servidor:</target>
        </trans-unit>
        <trans-unit id="0fba42c006127501a9d4eee7b63ae677c340c271" translate="yes" xml:space="preserve">
          <source>Finally, for the simple cases, preloading can also be done after a collection was fetched:</source>
          <target state="translated">Por último,para los casos sencillos,la precarga también puede hacerse después de que se haya recogido una colección:</target>
        </trans-unit>
        <trans-unit id="b9c2275b05254f6a0d55c69f791dee63e59b770f" translate="yes" xml:space="preserve">
          <source>Finally, if the values are a list or a map, we use the keys for grouping:</source>
          <target state="translated">Finalmente,si los valores son una lista o un mapa,usamos las teclas para agrupar:</target>
        </trans-unit>
        <trans-unit id="b286b8732a55a3c412fbebef0eb11876e873f238" translate="yes" xml:space="preserve">
          <source>Finally, if we happen to have another repo called &lt;code&gt;OurCustom.Repo&lt;/code&gt; that we want to create the database for, we can run this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be70f9966d578a92f0d14739730beade1450e72e" translate="yes" xml:space="preserve">
          <source>Finally, if you need an escape hatch, Ecto provides fragments (see &lt;a href=&quot;ecto.query.api#fragment/1&quot;&gt;&lt;code&gt;Ecto.Query.API.fragment/1&lt;/code&gt;&lt;/a&gt;) to inject SQL (and non-SQL) fragments into queries. Also, most adapters provide direct APIs for queries, like &lt;code&gt;Ecto.Adapters.SQL.query/4&lt;/code&gt;, allowing developers to completely bypass Ecto queries.</source>
          <target state="translated">Finalmente, si necesita una trampilla de escape, Ecto proporciona fragmentos (consulte &lt;a href=&quot;ecto.query.api#fragment/1&quot;&gt; &lt;code&gt;Ecto.Query.API.fragment/1&lt;/code&gt; &lt;/a&gt; ) para inyectar fragmentos SQL (y no SQL) en consultas. Adem&amp;aacute;s, la mayor&amp;iacute;a de los adaptadores proporcionan API directas para consultas, como &lt;code&gt;Ecto.Adapters.SQL.query/4&lt;/code&gt; , lo que permite a los desarrolladores omitir por completo las consultas de Ecto.</target>
        </trans-unit>
        <trans-unit id="c676eb935e678c18bf53e1829daa12f72d228abc" translate="yes" xml:space="preserve">
          <source>Finally, if you visit &lt;a href=&quot;http://localhost:4000/users/new&quot;&gt;http://localhost:4000/users/new&lt;/a&gt; and attempt to save an empty email address, you'll see the proper validation error message. If you enter valid information, the data will be casted and persisted properly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c54bd870ba91bed90da9cf9fe6df9617b5f4d992" translate="yes" xml:space="preserve">
          <source>Finally, let's define in the same file the action we redirect to, which simply renders the index, but now under a new address:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb326081c925d409dc6bd594e7dc1cace66c40ec" translate="yes" xml:space="preserve">
          <source>Finally, note that &lt;a href=&quot;#c:preload/1&quot;&gt;&lt;code&gt;preload/1&lt;/code&gt;&lt;/a&gt; must return an updated &lt;code&gt;list_of_assigns&lt;/code&gt;, keeping the assigns in the same order as they were given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e3918893207e1a11baa9a23cc96cc1200d507b6" translate="yes" xml:space="preserve">
          <source>Finally, note that you can optionally assert on the path you are being redirected to by passing a third argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1c37bfd43a0c8a580f8703749716c5f562cabd0" translate="yes" xml:space="preserve">
          <source>Finally, open up the new file in &lt;code&gt;priv/repo/migrations&lt;/code&gt; to ensure the &lt;code&gt;views&lt;/code&gt; attribute will have a default value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5211a28dd43f79dbabf7887d2a6fa7e2af5965c5" translate="yes" xml:space="preserve">
          <source>Finally, schemas can also have virtual fields by passing the &lt;code&gt;virtual: true&lt;/code&gt; option. These fields are not persisted to the database and can optionally not be type checked by declaring type &lt;code&gt;:any&lt;/code&gt;.</source>
          <target state="translated">Finalmente, los esquemas tambi&amp;eacute;n pueden tener campos virtuales pasando la opci&amp;oacute;n &lt;code&gt;virtual: true&lt;/code&gt; . Estos campos no se conservan en la base de datos y, opcionalmente, no se pueden verificar el tipo declarando type &lt;code&gt;:any&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1fa6676483e22da547429578149cf2518f2c1700" translate="yes" xml:space="preserve">
          <source>Finally, there is a &lt;code&gt;lib/hello_web/gettext.ex&lt;/code&gt; file which provides internationalization through &lt;a href=&quot;https://hexdocs.pm/gettext/Gettext.html&quot;&gt;Gettext&lt;/a&gt;. If you are not worried about internationalization, you can safely skip this file and its contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3c3d8b92a64a4d3df3c071e9b5af6207dda5c2c" translate="yes" xml:space="preserve">
          <source>Finally, we recommend developers to invoke &lt;a href=&quot;#delete_csrf_token/0&quot;&gt;&lt;code&gt;delete_csrf_token/0&lt;/code&gt;&lt;/a&gt; every time after they log a user in, to avoid CSRF fixation attacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c43349bb4ac520e541fbd1852e3cd8d312b498b" translate="yes" xml:space="preserve">
          <source>Find plug Plug.Session in your endpoint.ex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b73ca976670bde4f271b308abb888552353aeaf5" translate="yes" xml:space="preserve">
          <source>First &lt;a href=&quot;#c:mount/1&quot;&gt;&lt;code&gt;mount/1&lt;/code&gt;&lt;/a&gt; is called only with the socket. &lt;code&gt;mount/1&lt;/code&gt; can be used to set any initial state. Then &lt;a href=&quot;#c:update/2&quot;&gt;&lt;code&gt;update/2&lt;/code&gt;&lt;/a&gt; is invoked with all of the assigns given to &lt;code&gt;live_component/3&lt;/code&gt;. The default implementation of &lt;a href=&quot;#c:update/2&quot;&gt;&lt;code&gt;update/2&lt;/code&gt;&lt;/a&gt; simply merges all assigns into the socket. Then, after the component is updated, &lt;a href=&quot;#c:render/1&quot;&gt;&lt;code&gt;render/1&lt;/code&gt;&lt;/a&gt; is called with all assigns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fb913814f9b7285d0192f83ab9917d27d52ce09" translate="yes" xml:space="preserve">
          <source>First &lt;code&gt;priv/static&lt;/code&gt; which should look similar to this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7cede9ba10374814edb7d62667128e5b3c78ad0" translate="yes" xml:space="preserve">
          <source>First add &lt;code&gt;nprogress&lt;/code&gt; as a dependency in your &lt;code&gt;assets/package.json&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="500092afa233e9b7ad3757e9635614d60d69c53f" translate="yes" xml:space="preserve">
          <source>First, let&amp;rsquo;s fetch the post with all existing comments:</source>
          <target state="translated">Primero, busquemos la publicaci&amp;oacute;n con todos los comentarios existentes:</target>
        </trans-unit>
        <trans-unit id="a5e339d4995b9e83dffba1422acecfda7bc67bf4" translate="yes" xml:space="preserve">
          <source>First, let's fetch the post with all existing comments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b50d8bca129a23480c52a1cafd6c77d1ebfc656" translate="yes" xml:space="preserve">
          <source>First, we imported &lt;code&gt;Ecto.Query&lt;/code&gt;, which imports the &lt;code&gt;from&lt;/code&gt; macro of Ecto's Query DSL. Next, we built a query which selects all the email addresses in our users table. Let's try another example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e459a6ded02965db8df0071fdfd3d7b1875edfa" translate="yes" xml:space="preserve">
          <source>First, when invoking the LiveView socket, you need to declare the &lt;code&gt;connect_info&lt;/code&gt; you want to receive. Typically, it includes at least the session but it may include other keys, such as &lt;code&gt;:peer_data&lt;/code&gt;. See &lt;a href=&quot;../phoenix/phoenix.endpoint#socket/3&quot;&gt;&lt;code&gt;Phoenix.Endpoint.socket/3&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee8bc1d6f4e54cdc9694ec216fc67ec9e5fb51a3" translate="yes" xml:space="preserve">
          <source>Flash Messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db0a693e52d129229b723bca090f9d3722799b28" translate="yes" xml:space="preserve">
          <source>Floats: &lt;code&gt;1.0&lt;/code&gt;, &lt;code&gt;2.0&lt;/code&gt;, &lt;code&gt;3.0&lt;/code&gt;</source>
          <target state="translated">Flotadores: &lt;code&gt;1.0&lt;/code&gt; , &lt;code&gt;2.0&lt;/code&gt; , &lt;code&gt;3.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2e24e66624310195aa269428d97e5d4fa35caf29" translate="yes" xml:space="preserve">
          <source>Focus and Blur Events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc842ed4801897e6ac162506660d498d3b515aec" translate="yes" xml:space="preserve">
          <source>Focus and blur events may be bound to DOM elements that emit such events, using the &lt;code&gt;phx-blur&lt;/code&gt;, and &lt;code&gt;phx-focus&lt;/code&gt; bindings, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24c5b95a720b25dc4f067d270d142d5db32666a5" translate="yes" xml:space="preserve">
          <source>Focus/Blur Events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed803ddcc9363811db01399b52e2893f0aedd1d" translate="yes" xml:space="preserve">
          <source>Follow the Phoenix Framework on &lt;a href=&quot;https://twitter.com/elixirphoenix&quot;&gt;Twitter&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc10d408aec45d7fef9a9b92519db1255ca722e4" translate="yes" xml:space="preserve">
          <source>Follows the redirect from a &lt;code&gt;render_*&lt;/code&gt; action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d702e59f6da409d30f01ac24ca19a1531facd89" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;has_many :through&lt;/code&gt; - it behaves similarly to a regular &lt;code&gt;has_many&lt;/code&gt; but note that the IDs received are of the last association. Imagine for example a post has many comments and each comment has an author. Therefore, a post may have many comments_authors, written as &lt;code&gt;has_many :comments_authors, through: [:comments, :author]&lt;/code&gt;. When preloading authors with a custom function via &lt;code&gt;:comments_authors&lt;/code&gt;, the function will receive the IDs of the authors as the last step</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad82d88c263f197ac3ab09327378400e810ffc46" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;has_many :through&lt;/code&gt; - it behaves similarly to a regular &lt;code&gt;has_many&lt;/code&gt; but note that the IDs received are the ones from the closest parent and not the furthest one. Imagine for example a post has many comments and each comment has an author. Therefore, a post may have many comments_authors, written as &lt;code&gt;has_many :comments_authors, through: [:comments, :author]&lt;/code&gt;. When preloading authors with a custom function via &lt;code&gt;:comments_authors&lt;/code&gt;, the function will receive the IDs of the comments and not of the posts. That&amp;rsquo;s because through associations are still loaded step by step</source>
          <target state="translated">Para &lt;code&gt;has_many :through&lt;/code&gt; : se comporta de manera similar a un &lt;code&gt;has_many&lt;/code&gt; normal, pero tenga en cuenta que los ID recibidos son los del padre m&amp;aacute;s cercano y no el m&amp;aacute;s lejano. Imagine, por ejemplo, que una publicaci&amp;oacute;n tiene muchos comentarios y cada comentario tiene un autor. Por lo tanto, una publicaci&amp;oacute;n puede tener muchos comments_authors, escritos como &lt;code&gt;has_many :comments_authors, through: [:comments, :author]&lt;/code&gt; . Al precargar autores con una funci&amp;oacute;n personalizada a trav&amp;eacute;s de &lt;code&gt;:comments_authors&lt;/code&gt; , la funci&amp;oacute;n recibir&amp;aacute; los ID de los comentarios y no de las publicaciones. Eso es porque a trav&amp;eacute;s de asociaciones todav&amp;iacute;a se cargan paso a paso</target>
        </trans-unit>
        <trans-unit id="ffb76a65010dd96e5304011352d8d89308a77ae9" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;has_many&lt;/code&gt; and &lt;code&gt;belongs_to&lt;/code&gt; - the function receives the IDs of the parent association and it must return a list of maps or structs with the associated entries. The associated map/struct must contain the &quot;foreign_key&quot; field. For example, if a post has many comments, when preloading the comments with a custom function, the function will receive a list of &quot;post_ids&quot; as argument and it must return maps or structs representing the comments. The maps/structs must include the &lt;code&gt;:post_id&lt;/code&gt; field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63600b6a2d1ec5af0fc9e5cad2bc261fd1af2888" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;has_many&lt;/code&gt; and &lt;code&gt;belongs_to&lt;/code&gt; - the function receives the IDs of the parent association and it must return a list of maps or structs with the associated entries. The associated map/struct must contain the &amp;ldquo;foreign_key&amp;rdquo; field. For example, if a post has many comments, when preloading the comments with a custom function, the function will receive a list of &amp;ldquo;post_ids&amp;rdquo; as argument and it must return maps or structs representing the comments. The maps/structs must include the &lt;code&gt;:post_id&lt;/code&gt; field</source>
          <target state="translated">Para &lt;code&gt;has_many&lt;/code&gt; y &lt;code&gt;belongs_to&lt;/code&gt; : la funci&amp;oacute;n recibe los ID de la asociaci&amp;oacute;n principal y debe devolver una lista de mapas o estructuras con las entradas asociadas. El mapa / estructura asociado debe contener el campo &quot;Foreign_key&quot;. Por ejemplo, si una publicaci&amp;oacute;n tiene muchos comentarios, al precargar los comentarios con una funci&amp;oacute;n personalizada, la funci&amp;oacute;n recibir&amp;aacute; una lista de &quot;post_ids&quot; como argumento y debe devolver mapas o estructuras que representen los comentarios. Los mapas / estructuras deben incluir el campo &lt;code&gt;:post_id&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c8a4d730c3f703463989c4fcb32605397783f881" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;many_to_many&lt;/code&gt; - the function receives the IDs of the parent association and it must return a tuple with the parent id as first element and the association map or struct as second. For example, if a post has many tags, when preloading the tags with a custom function, the function will receive a list of &quot;post_ids&quot; as argument and it must return a tuple in the format of &lt;code&gt;{post_id, tag}&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="354d0273d07d15de05f231450470ee0eae6bac34" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;many_to_many&lt;/code&gt; - the function receives the IDs of the parent association and it must return a tuple with the parent id as first element and the association map or struct as second. For example, if a post has many tags, when preloading the tags with a custom function, the function will receive a list of &amp;ldquo;post_ids&amp;rdquo; as argument and it must return a tuple in the format of &lt;code&gt;{post_id, tag}&lt;/code&gt;</source>
          <target state="translated">Para &lt;code&gt;many_to_many&lt;/code&gt; : la funci&amp;oacute;n recibe los ID de la asociaci&amp;oacute;n principal y debe devolver una tupla con la identificaci&amp;oacute;n principal como primer elemento y el mapa de asociaci&amp;oacute;n o estructura como segundo. Por ejemplo, si una publicaci&amp;oacute;n tiene muchas etiquetas, al precargar las etiquetas con una funci&amp;oacute;n personalizada, la funci&amp;oacute;n recibir&amp;aacute; una lista de &quot;post_ids&quot; como argumento y debe devolver una tupla con el formato &lt;code&gt;{post_id, tag}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ab02655daa3427bb066f0ca4f1a125c696573e23" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;{:array, CustomType}&lt;/code&gt; or &lt;code&gt;{:map, CustomType}&lt;/code&gt; the returned keyword list will be erased and the default error will be shown.</source>
          <target state="translated">Para &lt;code&gt;{:array, CustomType}&lt;/code&gt; o &lt;code&gt;{:map, CustomType}&lt;/code&gt; la lista de palabras clave devuelta se borrar&amp;aacute; y se mostrar&amp;aacute; el error predeterminado.</target>
        </trans-unit>
        <trans-unit id="bf7cc044c113cf8e5e48b53bc0a83f10daddc97b" translate="yes" xml:space="preserve">
          <source>For a complete guide on HTTPS and best pratices, see &lt;a href=&quot;https&quot;&gt;our Plug HTTPS Guide&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20523aba079cc2fef42cacf60a4081c3373e6471" translate="yes" xml:space="preserve">
          <source>For a given topic, the client may only establish a single channel subscription. When attempting to create a duplicate subscription, &lt;a href=&quot;#dispatch/3&quot;&gt;&lt;code&gt;dispatch/3&lt;/code&gt;&lt;/a&gt; will close the existing channel, log a warning, and spawn a new channel for the topic. When sending the &lt;code&gt;&quot;phx_close&quot;&lt;/code&gt; event from the closed channel, the message will contain the &lt;code&gt;ref&lt;/code&gt; the client sent when joining. This allows the client to uniquely identify &lt;code&gt;&quot;phx_close&quot;&lt;/code&gt; and &lt;code&gt;&quot;phx_error&quot;&lt;/code&gt; messages when force-closing a channel on duplicate joins.</source>
          <target state="translated">Para un tema determinado, el cliente solo puede establecer una suscripci&amp;oacute;n de un solo canal. Al intentar crear una suscripci&amp;oacute;n duplicada, &lt;a href=&quot;#dispatch/3&quot;&gt; &lt;code&gt;dispatch/3&lt;/code&gt; &lt;/a&gt; cerrar&amp;aacute; el canal existente, registrar&amp;aacute; una advertencia y generar&amp;aacute; un nuevo canal para el tema. Al enviar el evento &lt;code&gt;&quot;phx_close&quot;&lt;/code&gt; desde el canal cerrado, el mensaje contendr&amp;aacute; la &lt;code&gt;ref&lt;/code&gt; erencia que envi&amp;oacute; el cliente al unirse. Esto permite al cliente identificar de forma &amp;uacute;nica los &lt;code&gt;&quot;phx_close&quot;&lt;/code&gt; y &lt;code&gt;&quot;phx_error&quot;&lt;/code&gt; cuando se fuerza el cierre de un canal en combinaciones duplicadas.</target>
        </trans-unit>
        <trans-unit id="4bade354c9ba82812949a02768fabd726d9aaec1" translate="yes" xml:space="preserve">
          <source>For a keyword query the &lt;code&gt;:join&lt;/code&gt; keyword can be changed to &lt;code&gt;:inner_join&lt;/code&gt;, &lt;code&gt;:left_join&lt;/code&gt;, &lt;code&gt;:right_join&lt;/code&gt;, &lt;code&gt;:cross_join&lt;/code&gt;, &lt;code&gt;:full_join&lt;/code&gt;, &lt;code&gt;:inner_lateral_join&lt;/code&gt; or &lt;code&gt;:left_lateral_join&lt;/code&gt;. &lt;code&gt;:join&lt;/code&gt; is equivalent to &lt;code&gt;:inner_join&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97fb5f4da825119777d3cd4c3b7b5a1dc6727a3a" translate="yes" xml:space="preserve">
          <source>For a list of valid content mime-types, please see the &lt;a href=&quot;https://github.com/elixir-plug/mime/blob/master/priv/mime.types&quot;&gt;mime.types&lt;/a&gt; documentation from the mime type library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13fa3b4c889e783b80aba2740c5d064e7244dcf1" translate="yes" xml:space="preserve">
          <source>For a post to match in the above example it must be visited at least as much as the average post in all categories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="092362cd5c107f7d58b5a88b716fd6f320a6243c" translate="yes" xml:space="preserve">
          <source>For a regular application:</source>
          <target state="translated">Para una aplicación regular:</target>
        </trans-unit>
        <trans-unit id="673a530e87febb813a7a46d378a8f00c25c57993" translate="yes" xml:space="preserve">
          <source>For actual upserts, where an insert or update may happen, the situation is slightly more complex, as the database does not actually inform us if an insert or update happened. Let&amp;rsquo;s insert a post with the same title but use a query to update the body column in case of conflicts:</source>
          <target state="translated">Para las actualizaciones reales, donde puede ocurrir una inserci&amp;oacute;n o actualizaci&amp;oacute;n, la situaci&amp;oacute;n es un poco m&amp;aacute;s compleja, ya que la base de datos en realidad no nos informa si ocurri&amp;oacute; una inserci&amp;oacute;n o actualizaci&amp;oacute;n. Insertemos una publicaci&amp;oacute;n con el mismo t&amp;iacute;tulo pero usemos una consulta para actualizar la columna del cuerpo en caso de conflictos:</target>
        </trans-unit>
        <trans-unit id="32ff300c68a5dfad5204cf92bbf5f1e21f8c1612" translate="yes" xml:space="preserve">
          <source>For actual upserts, where an insert or update may happen, the situation is slightly more complex, as the database does not actually inform us if an insert or update happened. Let's insert a post with the same title but use a query to update the body column in case of conflicts:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3c16917a25c77cede6337fcf8da5b4b380b867e" translate="yes" xml:space="preserve">
          <source>For all kinds of page loading events, all but &lt;code&gt;&quot;element&quot;&lt;/code&gt; will receive an additional &lt;code&gt;to&lt;/code&gt; key in the info metadata pointing to the href associated with the page load.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a13facc0573c1f5cd17a8b774fa022f5c62da50" translate="yes" xml:space="preserve">
          <source>For an umbrella application:</source>
          <target state="translated">Para una solicitud general:</target>
        </trans-unit>
        <trans-unit id="962775a35a8e3effc603b8ed3f7045d2def77954" translate="yes" xml:space="preserve">
          <source>For associations with cardinality one, &lt;code&gt;nil&lt;/code&gt; can be used to remove the existing entry. For associations with many entries, an empty list may be given instead.</source>
          <target state="translated">Para asociaciones con cardinalidad uno, se puede usar &lt;code&gt;nil&lt;/code&gt; para eliminar la entrada existente. Para asociaciones con muchas entradas, se puede proporcionar una lista vac&amp;iacute;a en su lugar.</target>
        </trans-unit>
        <trans-unit id="0d675f9e27fb9e8e0ca2759e0f26a064b102571e" translate="yes" xml:space="preserve">
          <source>For both suites we&amp;rsquo;ve specified ceritifcate curves secp256r1, ecp384r1 and secp521r1. Since OWASP doesn&amp;rsquo;t perscribe curves we&amp;rsquo;ve based the selection on the following Mozilla recommendations: https://wiki.mozilla.org/Security/Server_Side_TLS#Cipher_names_correspondence_table</source>
          <target state="translated">Para ambas suites, hemos especificado las curvas ceritifcadas secp256r1, ecp384r1 y secp521r1. Dado que OWASP no describe las curvas, hemos basado la selecci&amp;oacute;n en las siguientes recomendaciones de Mozilla: https://wiki.mozilla.org/Security/Server_Side_TLS#Cipher_names_correspondence_table</target>
        </trans-unit>
        <trans-unit id="eb99d644dfcf16338551e4823aea9b3594dc6c41" translate="yes" xml:space="preserve">
          <source>For both suites we've specified certificate curves secp256r1, ecp384r1 and secp521r1. Since OWASP doesn't prescribe curves we've based the selection on &lt;a href=&quot;https://wiki.mozilla.org/Security/Server_Side_TLS#Cipher_names_correspondence_table&quot;&gt;Mozilla's recommendations&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f6bbe3b038afe3e8f9ff34c83ffef5985f40d11" translate="yes" xml:space="preserve">
          <source>For calendar types with and without microseconds, the precision is enforced when persisting to the DB. For example, casting &lt;code&gt;~T[09:00:00]&lt;/code&gt; as &lt;code&gt;:time_usec&lt;/code&gt; will succeed and result in &lt;code&gt;~T[09:00:00.000000]&lt;/code&gt;, but persisting a type without microseconds as &lt;code&gt;:time_usec&lt;/code&gt; will fail. Similarly, casting &lt;code&gt;~T[09:00:00.000000]&lt;/code&gt; as &lt;code&gt;:time&lt;/code&gt; will succeed, but persisting will not. This is the same behaviour as seen in other types, where casting has to be done explicitly and is never performed implicitly when loading from or dumping to the database.</source>
          <target state="translated">Para los tipos de calendario con y sin microsegundos, la precisi&amp;oacute;n se aplica cuando se persiste en la base de datos. Por ejemplo, la conversi&amp;oacute;n de &lt;code&gt;~T[09:00:00]&lt;/code&gt; como &lt;code&gt;:time_usec&lt;/code&gt; tendr&amp;aacute; &amp;eacute;xito y dar&amp;aacute; como resultado &lt;code&gt;~T[09:00:00.000000]&lt;/code&gt; , pero la persistencia de un tipo sin microsegundos como &lt;code&gt;:time_usec&lt;/code&gt; fallar&amp;aacute;. De manera similar, la conversi&amp;oacute;n de &lt;code&gt;~T[09:00:00.000000]&lt;/code&gt; como &lt;code&gt;:time&lt;/code&gt; tendr&amp;aacute; &amp;eacute;xito, pero la persistencia no. Este es el mismo comportamiento que se ve en otros tipos, donde la conversi&amp;oacute;n debe realizarse expl&amp;iacute;citamente y nunca se realiza impl&amp;iacute;citamente al cargar o volcar a la base de datos.</target>
        </trans-unit>
        <trans-unit id="2973a602c365a52563d58be264616b79cb7c18bd" translate="yes" xml:space="preserve">
          <source>For convenience, trims whitespace at the end of the token. Returns &lt;code&gt;false&lt;/code&gt; if the token is invalid.</source>
          <target state="translated">Para mayor comodidad, recorta los espacios en blanco al final de la ficha. Devuelve &lt;code&gt;false&lt;/code&gt; si el token no es v&amp;aacute;lido.</target>
        </trans-unit>
        <trans-unit id="a4f08b434d1b24246ad947903380678d6f4a6b89" translate="yes" xml:space="preserve">
          <source>For details, see &lt;a href=&quot;https://hexdocs.pm/telemetry/&quot;&gt;the telemetry documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48ba684854b00976fec853af461168b1953a4696" translate="yes" xml:space="preserve">
          <source>For developers interested in real-time visualizations for their Telemetry metrics, you may be interested in installing &lt;a href=&quot;https://hexdocs.pm/phoenix_live_dashboard&quot;&gt;&lt;code&gt;LiveDashboard&lt;/code&gt;&lt;/a&gt;. LiveDashboard acts as a Telemetry.Metrics reporter to render your data as beautiful, real-time charts on the dashboard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="514d7ef5662d3b01249f86c0c31d4d15ac5d464f" translate="yes" xml:space="preserve">
          <source>For dynamically configuring the endpoint, such as loading data from environment variables or configuration files, Phoenix invokes the &lt;code&gt;init/2&lt;/code&gt; callback on the endpoint, passing a &lt;code&gt;:supervivsor&lt;/code&gt; atom as first argument and the endpoint configuration as second.</source>
          <target state="translated">Para configurar din&amp;aacute;micamente el punto final, como cargar datos de variables de entorno o archivos de configuraci&amp;oacute;n, Phoenix invoca la devoluci&amp;oacute;n &lt;code&gt;init/2&lt;/code&gt; llamada init / 2 en el punto final, pasando a &lt;code&gt;:supervivsor&lt;/code&gt; atom como primer argumento y la configuraci&amp;oacute;n del punto final como segundo.</target>
        </trans-unit>
        <trans-unit id="2f8c675d666ad72551f01bb83bb87c5a8e014d43" translate="yes" xml:space="preserve">
          <source>For dynamically configuring the endpoint, such as loading data from environment variables or configuration files, Phoenix invokes the &lt;code&gt;init/2&lt;/code&gt; callback on the endpoint, passing the atom &lt;code&gt;:supervisor&lt;/code&gt; as the first argument and the endpoint configuration as second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5709951e137fc3ffdad400784eca314b6bb7339b" translate="yes" xml:space="preserve">
          <source>For each LiveView in the root of a template, &lt;a href=&quot;#c:mount/3&quot;&gt;&lt;code&gt;mount/3&lt;/code&gt;&lt;/a&gt; is invoked twice: once to do the initial page load and again to establish the live socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83f8140a10617f209a9bbd2bf22394889c256c68" translate="yes" xml:space="preserve">
          <source>For each file under the given input path, Phoenix will generate a digest and also compress in &lt;code&gt;.gz&lt;/code&gt; format. The filename and its digest will be used to generate the cache manifest file. It also avoids duplication, checking for already digested files.</source>
          <target state="translated">Para cada archivo bajo la ruta de entrada dada, Phoenix generar&amp;aacute; un resumen y tambi&amp;eacute;n comprimir&amp;aacute; en formato &lt;code&gt;.gz&lt;/code&gt; . El nombre del archivo y su resumen se utilizar&amp;aacute;n para generar el archivo de manifiesto de cach&amp;eacute;. Tambi&amp;eacute;n evita la duplicaci&amp;oacute;n, comprobando archivos ya digeridos.</target>
        </trans-unit>
        <trans-unit id="18d9a991082460c8bd6c583a8988c97a924a27a3" translate="yes" xml:space="preserve">
          <source>For each message received from the client, the transport must call &lt;a href=&quot;#c:handle_in/2&quot;&gt;&lt;code&gt;handle_in/2&lt;/code&gt;&lt;/a&gt; on the socket. For each informational message the transport receives, it should call &lt;a href=&quot;#c:handle_info/2&quot;&gt;&lt;code&gt;handle_info/2&lt;/code&gt;&lt;/a&gt; on the socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="447756883e51de19d636b53e26dcc7baf4d56194" translate="yes" xml:space="preserve">
          <source>For each request, Phoenix checks if any of the modules previously compiled requires recompilation via &lt;code&gt;__phoenix_recompile__?/0&lt;/code&gt; and then calls &lt;code&gt;mix compile&lt;/code&gt; for sources exclusive to the &lt;code&gt;web&lt;/code&gt; directory.</source>
          <target state="translated">Para cada solicitud, Phoenix verifica si alguno de los m&amp;oacute;dulos compilados previamente requiere recompilaci&amp;oacute;n a trav&amp;eacute;s de &lt;code&gt;__phoenix_recompile__?/0&lt;/code&gt; y luego llama a &lt;code&gt;mix compile&lt;/code&gt; para fuentes exclusivas del directorio &lt;code&gt;web&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d6fc0dc53e4e25ba42c0881b47aaaa466ec949e0" translate="yes" xml:space="preserve">
          <source>For each request, Phoenix goes through all modules and checks if any of them implement a &lt;code&gt;__phoenix_recompile__?/0&lt;/code&gt; function. If they do and it returns true, the module source file is touched, forcing it to be recompiled. For this functionality to work, Phoenix requires you to add the &lt;code&gt;:phoenix&lt;/code&gt; compiler to your list of compilers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="358da0baaab9435646b120f9050f3589abaf1432" translate="yes" xml:space="preserve">
          <source>For encoding and decoding of embeds, please read the docs for &lt;a href=&quot;#embeds_one/3&quot;&gt;&lt;code&gt;embeds_one/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Para codificar y decodificar incrustaciones, lea los documentos de &lt;a href=&quot;#embeds_one/3&quot;&gt; &lt;code&gt;embeds_one/3&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="24fd662edb2d9324292b3a643376afdaa9efedac" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;field :foo, :string&lt;/code&gt; behaves the same for every field. On the other hand, &lt;code&gt;field :foo, Ecto.Enum, values: [:foo, :bar, :baz]&lt;/code&gt; will likely have a different set of values per field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f485276f616bd26adc829af0ee47c57b85d1ff61" translate="yes" xml:space="preserve">
          <source>For example, PostgreSQL will store embeds on top of JSONB columns, which means types in embedded schemas won&amp;rsquo;t go through the usual dump-&amp;gt;DB-&amp;gt;load cycle but rather encode-&amp;gt;DB-&amp;gt;decode-&amp;gt;cast. This means that, when using embedded schemas with databases like PG or MySQL, make sure all of your types can be JSON encoded/decoded correctly. Ecto provides this guarantee for all built-in types.</source>
          <target state="translated">Por ejemplo, PostgreSQL almacenar&amp;aacute; incrustaciones en la parte superior de las columnas JSONB, lo que significa que los tipos en esquemas incrustados no pasar&amp;aacute;n por el ciclo habitual de volcado-&amp;gt; DB-&amp;gt; carga, sino codificar-&amp;gt; DB-&amp;gt; decodificar-&amp;gt; emitir. Esto significa que, cuando utilice esquemas integrados con bases de datos como PG o MySQL, aseg&amp;uacute;rese de que todos sus tipos puedan codificarse / descodificarse JSON correctamente. Ecto ofrece esta garant&amp;iacute;a para todos los modelos integrados.</target>
        </trans-unit>
        <trans-unit id="99769121a189d81523d323cd7f2adb019f95f488" translate="yes" xml:space="preserve">
          <source>For example, PostgreSQL will store embeds on top of JSONB columns, which means types in embedded schemas won't go through the usual dump-&amp;gt;DB-&amp;gt;load cycle but rather encode-&amp;gt;DB-&amp;gt;decode-&amp;gt;cast. This means that, when using embedded schemas with databases like PG or MySQL, make sure all of your types can be JSON encoded/decoded correctly. Ecto provides this guarantee for all built-in types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62d7117a3b1a1721c1d5300823fd83a08ec0eb56" translate="yes" xml:space="preserve">
          <source>For example, a developer using MySQL may write:</source>
          <target state="translated">Por ejemplo,un desarrollador que utiliza MySQL puede escribir:</target>
        </trans-unit>
        <trans-unit id="7c337aa19ed63d216ce92de1e0fb06effb6d7cd3" translate="yes" xml:space="preserve">
          <source>For example, assuming the &lt;code&gt;conditions&lt;/code&gt; variable defined in the previous section, the following is forbidden because it is not at the root of a &lt;code&gt;where&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17b027db9ca188624206f2420c11e61eb142d7dd" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;:on_conflict&lt;/code&gt; is set to &lt;code&gt;:nothing&lt;/code&gt;, Postgres will return 0 if no new entry was added while MySQL will still return the amount of entries attempted to be inserted, even if no entry was added. Even worse, if &lt;code&gt;:on_conflict&lt;/code&gt; is query, MySQL will return the number of attempted entries plus the number of entries modified by the UPDATE query.</source>
          <target state="translated">Por ejemplo, si &lt;code&gt;:on_conflict&lt;/code&gt; se establece en &lt;code&gt;:nothing&lt;/code&gt; , Postgres devolver&amp;aacute; 0 si no se agreg&amp;oacute; ninguna entrada nueva, mientras que MySQL a&amp;uacute;n devolver&amp;aacute; la cantidad de entradas que se intent&amp;oacute; insertar, incluso si no se agreg&amp;oacute; ninguna entrada. Peor a&amp;uacute;n, si &lt;code&gt;:on_conflict&lt;/code&gt; es consulta, MySQL devolver&amp;aacute; el n&amp;uacute;mero de entradas intentadas m&amp;aacute;s el n&amp;uacute;mero de entradas modificadas por la consulta UPDATE.</target>
        </trans-unit>
        <trans-unit id="3ad70964b6903a03710c190caf3acb0e49049573" translate="yes" xml:space="preserve">
          <source>For example, if a plug called &lt;code&gt;my_plug&lt;/code&gt; needs to store a &lt;code&gt;:hello&lt;/code&gt; key, it would store it as &lt;code&gt;:my_plug_hello&lt;/code&gt;:</source>
          <target state="translated">Por ejemplo, si un enchufe llamado &lt;code&gt;my_plug&lt;/code&gt; necesita almacenar una clave &lt;code&gt;:hello&lt;/code&gt; , la almacenar&amp;iacute;a como &lt;code&gt;:my_plug_hello&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c680c9e8f22ccafd93e44ffae3a885cef74b7437" translate="yes" xml:space="preserve">
          <source>For example, if some plug needs to store a &lt;code&gt;:hello&lt;/code&gt; key, it should do so as &lt;code&gt;:plug_hello&lt;/code&gt;:</source>
          <target state="translated">Por ejemplo, si alg&amp;uacute;n enchufe necesita almacenar una clave &lt;code&gt;:hello&lt;/code&gt; , deber&amp;iacute;a hacerlo como &lt;code&gt;:plug_hello&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="82eebeb72ec6bad21c5433a1a0c1a4c3b29d9905" translate="yes" xml:space="preserve">
          <source>For example, if the following &lt;a href=&quot;https://hexdocs.pm/telemetry_metrics/Telemetry.Metrics.html#summary/2&quot;&gt;&lt;code&gt;Telemetry.Metrics.summary/2&lt;/code&gt;&lt;/a&gt; call is added to the &lt;code&gt;metrics/0&lt;/code&gt; function of your Telemetry supervisor:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="006def01634026aded69a8ee382525c00514fe89" translate="yes" xml:space="preserve">
          <source>For example, if the following input triggered a change event:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e00b78c86932b468ed1c0282ff390e363c8b55c0" translate="yes" xml:space="preserve">
          <source>For example, if you are building an application where a user may belong to one or more organizations, when accessing the organization page, you may want to check that the user has access to it like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e32ff022a18e7a5dfb1a6022b7b3dbe20b34556" translate="yes" xml:space="preserve">
          <source>For example, if you are rendering SVG, the SVG will be interpreted as HTML. This may work just fine for most components but you may run into corner cases. For example, the &lt;code&gt;&amp;lt;image&amp;gt;&lt;/code&gt; SVG tag may be rewritten to the &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tag, since &lt;code&gt;&amp;lt;image&amp;gt;&lt;/code&gt; is an obsolete HTML tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b67a51b0929c3bd20516b18e930c9d65453e2f33" translate="yes" xml:space="preserve">
          <source>For example, if you are running your application behind a proxy, the browser will send a request to the proxy with &lt;code&gt;www.example.com&lt;/code&gt; but the proxy will request you using an internal IP. In such cases, it is common for proxies to attach information such as &lt;code&gt;&quot;x-forwarded-host&quot; that contains the original
host.

This may also happen on redirects. If you have a POST request to&lt;/code&gt;foo.example.com&lt;code&gt;that redirects with status&lt;/code&gt;bar.example.com&lt;code&gt;with status 407. The token and
the server will be running on different versions.

You can pass the&lt;/code&gt;:allow_hosts&lt;code&gt;option to control any host that you may want
to allow. The values in&lt;/code&gt;:allow_hosts&lt;code&gt;may either be a full host name or a
host suffix. For example:&lt;/code&gt;[&amp;ldquo;www.example.com&amp;rdquo;, &amp;ldquo;.subdomain.example.com&amp;rdquo;]&lt;code&gt;will allow the exact host of&lt;/code&gt;&amp;rdquo;www.example.com&amp;rdquo;&lt;code&gt;and any host that ends with&lt;/code&gt;&amp;rdquo;.subdomain.example.com&amp;rdquo;&lt;code&gt;.

## Options

  *&lt;/code&gt;:session_key&lt;code&gt;- the name of the key in session to store the token under
  *&lt;/code&gt;:allow_hosts&lt;code&gt;- a list with hosts to allow on cross-host tokens
  *&lt;/code&gt;:with&lt;code&gt;- should be one of&lt;/code&gt;:exception&lt;code&gt;or&lt;/code&gt;:clear_session&lt;code&gt;. Defaults to&lt;/code&gt;:exception&lt;code&gt;.
    *&lt;/code&gt;:exception&lt;code&gt;-  for invalid requests, this plug will raise
    [&lt;/code&gt;Plug.CSRFProtection.InvalidCSRFTokenError&lt;code&gt;](Plug.CSRFProtection.InvalidCSRFTokenError.html).
    *&lt;/code&gt;:clear_session&lt;code&gt;-  for invalid requests, this plug will set an empty
    session for only this request. Also any changes to the session during this
    request will be ignored.

## Disabling

You may disable this plug by doing&lt;/code&gt;Plug.Conn.put_private(conn, :plug_skip_csrf_protection, true)&lt;code&gt;. This was made
available for disabling [&lt;/code&gt;Plug.CSRFProtection&lt;code&gt;](Plug.CSRFProtection.html#content) in tests and not for dynamically
skipping [&lt;/code&gt;Plug.CSRFProtection&lt;code&gt;](Plug.CSRFProtection.html#content) in production code. If you want specific routes to
skip [&lt;/code&gt;Plug.CSRFProtection&lt;code&gt;](Plug.CSRFProtection.html#content), then use a different stack of plugs for that route that
does not include [&lt;/code&gt;Plug.CSRFProtection`](Plug.CSRFProtection.html#content). ## Examples plug Plug.Session, &amp;hellip; plug :fetch_session plug Plug.CSRFProtection</source>
          <target state="translated">Por ejemplo, si est&amp;aacute; ejecutando su aplicaci&amp;oacute;n detr&amp;aacute;s de un proxy, el navegador enviar&amp;aacute; una solicitud al proxy con &lt;code&gt;www.example.com&lt;/code&gt; pero el proxy le solicitar&amp;aacute; que utilice una IP interna. En tales casos, es com&amp;uacute;n que los proxies adjunten informaci&amp;oacute;n como &lt;code&gt;&quot;x-forwarded-host&quot; that contains the original host. This may also happen on redirects. If you have a POST request to&lt;/code&gt; foo.example.com &lt;code&gt;that redirects with status&lt;/code&gt; barra de estado.example.com &lt;code&gt;with status 407. The token and the server will be running on different versions. You can pass the&lt;/code&gt; &lt;code&gt;option to control any host that you may want to allow. The values in&lt;/code&gt; : allow_hosts para controlar cualquier host que desee permitir. Los valores en : allow_hosts &lt;code&gt;may either be a full host name or a host suffix. For example:&lt;/code&gt; [&quot;Www.example.com&quot;, &quot;.subdomain.example.com&quot;] &lt;code&gt;will allow the exact host of&lt;/code&gt; &quot;www.example.com&quot; &lt;code&gt;and any host that ends with&lt;/code&gt; &quot;.subdomain.example.com&quot; &lt;code&gt;. ## Options *&lt;/code&gt; : session_key &lt;code&gt;- the name of the key in session to store the token under *&lt;/code&gt; : allow_hosts &lt;code&gt;- a list with hosts to allow on cross-host tokens *&lt;/code&gt; : with &lt;code&gt;- should be one of&lt;/code&gt; : excepci&amp;oacute;n &lt;code&gt;or&lt;/code&gt; : clear_session &lt;code&gt;. Defaults to&lt;/code&gt; : excepci&amp;oacute;n &lt;code&gt;. *&lt;/code&gt; : excepci&amp;oacute;n &lt;code&gt;- for invalid requests, this plug will raise [&lt;/code&gt; Plug.CSRFProtection.InvalidCSRFTokenError &lt;code&gt;](Plug.CSRFProtection.InvalidCSRFTokenError.html). *&lt;/code&gt; : clear_session &lt;code&gt;- for invalid requests, this plug will set an empty session for only this request. Also any changes to the session during this request will be ignored. ## Disabling You may disable this plug by doing&lt;/code&gt; Plug.Conn.put_private (conn,: plug_skip_csrf_protection, true) &lt;code&gt;. This was made available for disabling [&lt;/code&gt; Plug.CSRFProtection &lt;code&gt;](Plug.CSRFProtection.html#content) in tests and not for dynamically skipping [&lt;/code&gt; Plug.CSRFProtection &lt;code&gt;](Plug.CSRFProtection.html#content) in production code. If you want specific routes to skip [&lt;/code&gt; Plug.CSRFProtection &lt;code&gt;](Plug.CSRFProtection.html#content), then use a different stack of plugs for that route that does not include [&lt;/code&gt; Plug.CSRFProtection`] (Plug.CSRFProtection.html # contenido). ## Ejemplos plug Plug.Session,&amp;hellip; plug: fetch_session plug Plug.CSRFProtection</target>
        </trans-unit>
        <trans-unit id="0e91726d425116538b0449faff1e3e0fef303282" translate="yes" xml:space="preserve">
          <source>For example, if you are running your application behind a proxy, the browser will send a request to the proxy with &lt;code&gt;www.example.com&lt;/code&gt; but the proxy will request you using an internal IP. In such cases, it is common for proxies to attach information such as &lt;code&gt;&quot;x-forwarded-host&quot;&lt;/code&gt; that contains the original host.</source>
          <target state="translated">Por ejemplo, si est&amp;aacute; ejecutando su aplicaci&amp;oacute;n detr&amp;aacute;s de un proxy, el navegador enviar&amp;aacute; una solicitud al proxy con &lt;code&gt;www.example.com&lt;/code&gt; pero el proxy le solicitar&amp;aacute; que utilice una IP interna. En tales casos, es com&amp;uacute;n que los proxies adjunten informaci&amp;oacute;n como &lt;code&gt;&quot;x-forwarded-host&quot;&lt;/code&gt; que contiene el host original.</target>
        </trans-unit>
        <trans-unit id="f1191fda5c146bc7cb8bf9725ef9a87de1ba7566" translate="yes" xml:space="preserve">
          <source>For example, if you are using Phoenix with Gettext and you want to localize the list of months, you can pass &lt;code&gt;:options&lt;/code&gt; to the &lt;code&gt;:month&lt;/code&gt; key:</source>
          <target state="translated">Por ejemplo, si est&amp;aacute; utilizando Phoenix con Gettext y desea localizar la lista de meses, puede pasar &lt;code&gt;:options&lt;/code&gt; a la tecla: &lt;code&gt;:month&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f5c675e9e5c373385484112272b4a043bbd839e6" translate="yes" xml:space="preserve">
          <source>For example, if you don&amp;rsquo;t need all fields to be returned as part of a struct, you can filter it to include only certain fields by using &lt;a href=&quot;#struct/2&quot;&gt;&lt;code&gt;struct/2&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Por ejemplo, si no necesita que todos los campos se devuelvan como parte de una estructura, puede filtrarlo para incluir solo ciertos campos utilizando &lt;a href=&quot;#struct/2&quot;&gt; &lt;code&gt;struct/2&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="cc5dc01c081354dfaf44b568f55f3ebe9329dee7" translate="yes" xml:space="preserve">
          <source>For example, if you don&amp;rsquo;t need all fields to be returned or neither need a struct, you can use &lt;a href=&quot;#map/2&quot;&gt;&lt;code&gt;map/2&lt;/code&gt;&lt;/a&gt; to achieve both:</source>
          <target state="translated">Por ejemplo, si no necesita que se devuelvan todos los campos o ninguno necesita una estructura, puede usar &lt;a href=&quot;#map/2&quot;&gt; &lt;code&gt;map/2&lt;/code&gt; &lt;/a&gt; para lograr ambos:</target>
        </trans-unit>
        <trans-unit id="c811ae0696ce6f951b2bc3002197b8ae16be70c6" translate="yes" xml:space="preserve">
          <source>For example, if you don't need all fields to be returned as part of a struct, you can filter it to include only certain fields by using &lt;a href=&quot;#struct/2&quot;&gt;&lt;code&gt;struct/2&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1352717ed362aac86319e5ca0446d68b801172fa" translate="yes" xml:space="preserve">
          <source>For example, if you don't need all fields to be returned or neither need a struct, you can use &lt;a href=&quot;#map/2&quot;&gt;&lt;code&gt;map/2&lt;/code&gt;&lt;/a&gt; to achieve both:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faabac0b1b9774ddff9e4dfa11ab8cece152fb06" translate="yes" xml:space="preserve">
          <source>For example, if you perform user authentication and confirmation on every HTTP request via Plugs, such as this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="046786477a40d0ce576e85622a62582fe169703c" translate="yes" xml:space="preserve">
          <source>For example, if you want to provide your own date structures, the type function should return &lt;code&gt;:date&lt;/code&gt;.</source>
          <target state="translated">Por ejemplo, si desea proporcionar sus propias estructuras de fechas, la funci&amp;oacute;n de tipo deber&amp;iacute;a devolver &lt;code&gt;:date&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63f893c204bf57366a50335dff3f7ef0e2a67659" translate="yes" xml:space="preserve">
          <source>For example, if you want to render the &quot;test.html&quot; template from inside our layout, you can invoke &lt;code&gt;render/3&lt;/code&gt; directly from the layout:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a490502a537fa70cbfe7862a7fdc9d9d25a4ab0" translate="yes" xml:space="preserve">
          <source>For example, if your database does not support autoincrementing primary keys and requires something like UUID or a RecordID, you can configure and use &lt;code&gt;:binary_id&lt;/code&gt; as your primary key type as follows:</source>
          <target state="translated">Por ejemplo, si su base de datos no admite el aumento autom&amp;aacute;tico de claves primarias y requiere algo como UUID o RecordID, puede configurar y usar &lt;code&gt;:binary_id&lt;/code&gt; como su tipo de clave primaria de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="84cde3c3ecfdee20a150817b154d085461422ad2" translate="yes" xml:space="preserve">
          <source>For example, imagine a user has many addresses relationship where post data is sent as follows</source>
          <target state="translated">Por ejemplo,imaginemos que un usuario tiene muchas direcciones en relación con las cuales se envían datos postales de la siguiente manera</target>
        </trans-unit>
        <trans-unit id="df1b9f8c3f5e06f384cb183c3f248319b297f218" translate="yes" xml:space="preserve">
          <source>For example, imagine a user with id &lt;code&gt;123&lt;/code&gt; online from two different devices, as well as a user with id &lt;code&gt;456&lt;/code&gt; online from just one device. The following presence information might be returned:</source>
          <target state="translated">Por ejemplo, imagine un usuario con id &lt;code&gt;123&lt;/code&gt; en l&amp;iacute;nea desde dos dispositivos diferentes, as&amp;iacute; como un usuario con id &lt;code&gt;456&lt;/code&gt; en l&amp;iacute;nea desde un solo dispositivo. Es posible que se devuelva la siguiente informaci&amp;oacute;n de presencia:</target>
        </trans-unit>
        <trans-unit id="886c455d893cac0662c17c0b5a315859b743e334" translate="yes" xml:space="preserve">
          <source>For example, imagine creating a resource and replying with the created record:</source>
          <target state="translated">Por ejemplo,imaginemos que se crea un recurso y se responde con el registro creado:</target>
        </trans-unit>
        <trans-unit id="533f158f4a4f3c3fed2c4251950886b68baf1969" translate="yes" xml:space="preserve">
          <source>For example, imagine you are testing an authentication plug in isolation, but you need to invoke the Endpoint plugs and &lt;code&gt;:browser&lt;/code&gt; pipeline of your Router for session and flash related dependencies:</source>
          <target state="translated">Por ejemplo, imagine que est&amp;aacute; probando un complemento de autenticaci&amp;oacute;n de forma aislada, pero necesita invocar los complementos de Endpoint y &lt;code&gt;:browser&lt;/code&gt; canalizaci&amp;oacute;n del navegador de su enrutador para las dependencias relacionadas con la sesi&amp;oacute;n y flash:</target>
        </trans-unit>
        <trans-unit id="24497d20f39de0bd9301b7b9d03a2a9115d64d94" translate="yes" xml:space="preserve">
          <source>For example, imagine you are testing an authentication plug in isolation, but you need to invoke the Endpoint plugs and router pipelines to set up session and flash related dependencies. One option is to invoke an existing route that uses the proper pipelines. You can do so by passing the connection and the router name to &lt;code&gt;bypass_through&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="312cb0dfd039de29c00e0856eca1a9c8f1e81784" translate="yes" xml:space="preserve">
          <source>For example, imagine you have a &lt;code&gt;UserTable&lt;/code&gt; LiveView to show all users in the system and you define it in the router as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aac8a83570404c4e6f7c186ab35c3410f263360e" translate="yes" xml:space="preserve">
          <source>For example, imagine you have a blog. The URL for a single post is: &quot;/blog/posts/:post_id&quot;. In the post page, you have comments and they are paginated. You use &lt;a href=&quot;phoenix.liveview.helpers#live_patch/2&quot;&gt;&lt;code&gt;live_patch/2&lt;/code&gt;&lt;/a&gt; to update the shown comments every time the user paginates, updating the URL to &quot;/blog/posts/:post_id?page=X&quot;. In this example, you will access &lt;code&gt;&quot;post_id&quot;&lt;/code&gt; on &lt;a href=&quot;phoenix.liveview#c:mount/3&quot;&gt;&lt;code&gt;mount/3&lt;/code&gt;&lt;/a&gt; and the page of comments on &lt;a href=&quot;phoenix.liveview#c:handle_params/3&quot;&gt;&lt;code&gt;handle_params/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d35abbc4af6b641142df2d7b6e8cb714b2e59096" translate="yes" xml:space="preserve">
          <source>For example, imagine you have a set of conditions you want to build your query on:</source>
          <target state="translated">Por ejemplo,imagina que tienes un conjunto de condiciones sobre las que quieres construir tu consulta:</target>
        </trans-unit>
        <trans-unit id="516ae4f5f949a9c47d47f2088c9c4b9dee4d07e3" translate="yes" xml:space="preserve">
          <source>For example, in &lt;code&gt;lib/hello_web/router.ex&lt;/code&gt; we could change the action name in the default route that Phoenix gives us in a new app from index:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0265adc038f7ef1d21b2a50447a6f63af71366e" translate="yes" xml:space="preserve">
          <source>For example, in a template you may write:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f5586e5ae6cb9013888e85871da5acf72d0949" translate="yes" xml:space="preserve">
          <source>For example, let's rewrite the &lt;code&gt;show&lt;/code&gt; action from &lt;code&gt;PageController&lt;/code&gt; to return text instead. For that, we could do the following.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a53e369f8b4df3920a8220219a3d7f53280435" translate="yes" xml:space="preserve">
          <source>For example, let's say two users try to leave the organization at the same time. In this case, both of them see the &quot;Leave&quot; button, but our &lt;code&gt;leave&lt;/code&gt; function call will succeed only for one of them:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eebd42f8b90a67c493e81c5b014f284666e7e5e" translate="yes" xml:space="preserve">
          <source>For example, one could set the accepts header for json requests as follows:</source>
          <target state="translated">Por ejemplo,se podría establecer el encabezamiento de aceptación de las solicitudes de json de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="a0404b9a4be72b8fa2ca4aa38b64953ae3c079e9" translate="yes" xml:space="preserve">
          <source>For example, the following &lt;code&gt;:banner&lt;/code&gt; option:</source>
          <target state="translated">Por ejemplo, la siguiente &lt;code&gt;:banner&lt;/code&gt; opci&amp;oacute;n de banner :</target>
        </trans-unit>
        <trans-unit id="83e3418ad418cbae8b838f55a7f3c5eff7a23b6e" translate="yes" xml:space="preserve">
          <source>For example, the following is forbidden because it is not at the root of a &lt;code&gt;where&lt;/code&gt;:</source>
          <target state="translated">Por ejemplo, lo siguiente est&amp;aacute; prohibido porque no est&amp;aacute; en la ra&amp;iacute;z de un &lt;code&gt;where&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="dca79318412c2101b9352f778075ffdd922f7e05" translate="yes" xml:space="preserve">
          <source>For example, the markup for a controlled input for phone-number formatting could be written like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6471f878df0f8a31f0a9c6ed9c1a0970d2b7f6cc" translate="yes" xml:space="preserve">
          <source>For example, the route above will match on the path &lt;code&gt;&quot;/api/v1/pages/:id&quot;&lt;/code&gt; and the named route will be &lt;code&gt;api_v1_page_path&lt;/code&gt;, as expected from the values given to &lt;a href=&quot;#scope/2&quot;&gt;&lt;code&gt;scope/2&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">Por ejemplo, la ruta anterior coincidir&amp;aacute; con la ruta &lt;code&gt;&quot;/api/v1/pages/:id&quot;&lt;/code&gt; y la ruta nombrada ser&amp;aacute; &lt;code&gt;api_v1_page_path&lt;/code&gt; , como se esperaba a partir de los valores dados a la opci&amp;oacute;n &lt;a href=&quot;#scope/2&quot;&gt; &lt;code&gt;scope/2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d2fc813eb5dfb8f4978194599eab4ecab416b2e4" translate="yes" xml:space="preserve">
          <source>For example, the route:</source>
          <target state="translated">Por ejemplo,la ruta:</target>
        </trans-unit>
        <trans-unit id="250e5a7518c50a847597afadb1487eab6b2f819d" translate="yes" xml:space="preserve">
          <source>For example, this schema specification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33fc1b541955c11c7a3a376c9e4b58f9c57708b1" translate="yes" xml:space="preserve">
          <source>For example, to avoid validating an email until the field is blurred, while validating the username at most every 2 seconds after a user changes the field:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10a90aa8783fdb171b94edeeedb9421523ade4a7" translate="yes" xml:space="preserve">
          <source>For example, to get all posts while running the &quot;lower(?)&quot; function in the database where &lt;code&gt;p.title&lt;/code&gt; is interpolated in place of &lt;code&gt;?&lt;/code&gt;, one can write:</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
