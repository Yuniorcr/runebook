<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="elisp">
    <body>
      <group id="elisp">
        <trans-unit id="23f6b5abc1ef17571fdf5c06f953e5d8690ca2f7" translate="yes" xml:space="preserve">
          <source>Each property has a name and a value. Both of these can be any Lisp object, but the name is normally a symbol. Typically each property name symbol is used for a particular purpose; for instance, the text property &lt;code&gt;face&lt;/code&gt; specifies the faces for displaying the character (see &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;). The usual way to access the property list is to specify a name and ask what value corresponds to it.</source>
          <target state="translated">Cada propiedad tiene un nombre y un valor. Ambos pueden ser cualquier objeto Lisp, pero el nombre es normalmente un s&amp;iacute;mbolo. Normalmente, cada s&amp;iacute;mbolo de nombre de propiedad se utiliza para un prop&amp;oacute;sito particular; por ejemplo, la propiedad de texto &lt;code&gt;face&lt;/code&gt; especifica las caras para mostrar el car&amp;aacute;cter (ver &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Propiedades especiales&lt;/a&gt; ). La forma habitual de acceder a la lista de propiedades es especificar un nombre y preguntar qu&amp;eacute; valor le corresponde.</target>
        </trans-unit>
        <trans-unit id="1c1fea8ac4dca56f1c610d54d8aaf271e1962df6" translate="yes" xml:space="preserve">
          <source>Each signal has a standard effect on the subprocess. Most signals kill the subprocess, but some stop (or resume) execution instead. Most signals can optionally be handled by programs; if the program handles the signal, then we can say nothing in general about its effects.</source>
          <target state="translated">Cada señal tiene un efecto estándar en el subproceso.La mayoría de las señales matan el subproceso,pero algunas de ellas detienen (o reanudan)la ejecución.La mayoría de las señales pueden ser manejadas opcionalmente por programas;si el programa maneja la señal,entonces no podemos decir nada en general sobre sus efectos.</target>
        </trans-unit>
        <trans-unit id="c047bfaf3c4495ab37b9bd7458af73d1c3930d11" translate="yes" xml:space="preserve">
          <source>Each special form has its own rules for which arguments are evaluated and which are used without evaluation. Whether a particular argument is evaluated may depend on the results of evaluating other arguments.</source>
          <target state="translated">Cada forma especial tiene sus propias reglas para evaluar los argumentos y que se utilizan sin evaluación.El hecho de que un argumento en particular sea evaluado puede depender de los resultados de la evaluación de otros argumentos.</target>
        </trans-unit>
        <trans-unit id="72dd71100c38a66ebf0fcfa852239a90749b52f5" translate="yes" xml:space="preserve">
          <source>Each specification in &lt;var&gt;specs&lt;/var&gt; is a property list with contents depending on image type. All specifications must at least contain the properties &lt;code&gt;:type &lt;var&gt;type&lt;/var&gt;&lt;/code&gt; and either &lt;code&gt;:file&amp;nbsp;&lt;var&gt;file&lt;/var&gt;&lt;/code&gt; or &lt;code&gt;:data&amp;nbsp;&lt;var&gt;data&lt;/var&gt;&lt;/code&gt;, where &lt;var&gt;type&lt;/var&gt; is a symbol specifying the image type, e.g., &lt;code&gt;xbm&lt;/code&gt;, &lt;var&gt;file&lt;/var&gt; is the file to load the image from, and &lt;var&gt;data&lt;/var&gt; is a string containing the actual image data. The first specification in the list whose &lt;var&gt;type&lt;/var&gt; is supported, and &lt;var&gt;file&lt;/var&gt; exists, is used to construct the image specification to be returned. If no specification is satisfied, &lt;code&gt;nil&lt;/code&gt; is returned.</source>
          <target state="translated">Cada especificaci&amp;oacute;n en &lt;var&gt;specs&lt;/var&gt; es una lista de propiedades con contenido que depende del tipo de imagen. Todas las especificaciones deben contener al menos las propiedades &lt;code&gt;:type &lt;var&gt;type&lt;/var&gt;&lt;/code&gt; y ya sea &lt;code&gt;:file&amp;nbsp;&lt;var&gt;file&lt;/var&gt;&lt;/code&gt; o &lt;code&gt;:data&amp;nbsp;&lt;var&gt;data&lt;/var&gt;&lt;/code&gt; , donde &lt;var&gt;type&lt;/var&gt; es un s&amp;iacute;mbolo que especifica el tipo de imagen, por ejemplo, &lt;code&gt;xbm&lt;/code&gt; , &lt;var&gt;file&lt;/var&gt; es el archivo desde el cual cargar la imagen y &lt;var&gt;data&lt;/var&gt; es una cadena que contiene los datos de la imagen real. La primera especificaci&amp;oacute;n de la lista cuyo &lt;var&gt;type&lt;/var&gt; es compatible y el &lt;var&gt;file&lt;/var&gt; existe, se utiliza para construir la especificaci&amp;oacute;n de imagen que se devolver&amp;aacute;. Si se cumple ninguna especificaci&amp;oacute;n, &lt;code&gt;nil&lt;/code&gt; es regresado.</target>
        </trans-unit>
        <trans-unit id="dbf7a48962876ca66372154f2f1def78d7d85188" translate="yes" xml:space="preserve">
          <source>Each symbol has a property list for recording miscellaneous information.</source>
          <target state="translated">Cada símbolo tiene una lista de propiedades para registrar información diversa.</target>
        </trans-unit>
        <trans-unit id="52fbede7ba5a23a939caafe5e9932ca45c34d031" translate="yes" xml:space="preserve">
          <source>Each symbol has four components (or &amp;ldquo;cells&amp;rdquo;), each of which references another object:</source>
          <target state="translated">Cada s&amp;iacute;mbolo tiene cuatro componentes (o &quot;celdas&quot;), cada uno de los cuales hace referencia a otro objeto:</target>
        </trans-unit>
        <trans-unit id="be67417f8b53a64af086e681886ca9f4c3c8fb8d" translate="yes" xml:space="preserve">
          <source>Each symbol&amp;rsquo;s properties and property values are stored in the symbol&amp;rsquo;s property list cell (see &lt;a href=&quot;symbol-components#Symbol-Components&quot;&gt;Symbol Components&lt;/a&gt;), in the form of a property list (see &lt;a href=&quot;property-lists#Property-Lists&quot;&gt;Property Lists&lt;/a&gt;).</source>
          <target state="translated">Las propiedades y los valores de propiedad de cada s&amp;iacute;mbolo se almacenan en la celda de la lista de propiedades del s&amp;iacute;mbolo (consulte &lt;a href=&quot;symbol-components#Symbol-Components&quot;&gt;Componentes del s&amp;iacute;mbolo&lt;/a&gt; ), en forma de lista de propiedades (consulte &lt;a href=&quot;property-lists#Property-Lists&quot;&gt;Listas de propiedades&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="82a1accf94b0791d1a997333410db664204fd93c" translate="yes" xml:space="preserve">
          <source>Each syntax class is designated by a mnemonic character, which serves as the name of the class when you need to specify a class. Usually, this designator character is one that is often assigned that class; however, its meaning as a designator is unvarying and independent of what syntax that character currently has. Thus, &amp;lsquo;</source>
          <target state="translated">Cada clase de sintaxis est&amp;aacute; designada por un car&amp;aacute;cter mnem&amp;oacute;nico, que sirve como el nombre de la clase cuando necesita especificar una clase. Por lo general, este car&amp;aacute;cter designador es uno al que a menudo se le asigna esa clase; sin embargo, su significado como designador es invariable e independiente de la sintaxis que ese car&amp;aacute;cter tenga actualmente. As&amp;iacute;, '</target>
        </trans-unit>
        <trans-unit id="20c83e6b7e66f23e9b34223f18b5c3c8faeecf1b" translate="yes" xml:space="preserve">
          <source>Each terminal has a list of associated parameters. These &lt;em&gt;terminal parameters&lt;/em&gt; are mostly a convenient way of storage for terminal-local variables, but some terminal parameters have a special meaning.</source>
          <target state="translated">Cada terminal tiene una lista de par&amp;aacute;metros asociados. Estos &lt;em&gt;par&amp;aacute;metros de terminal&lt;/em&gt; son principalmente una forma conveniente de almacenamiento para variables locales de terminal, pero algunos par&amp;aacute;metros de terminal tienen un significado especial.</target>
        </trans-unit>
        <trans-unit id="3a95c9cc702f0dae817aad9ce2f5bcddea359025" translate="yes" xml:space="preserve">
          <source>Each terminal type can have its own Lisp library that Emacs loads when run on that type of terminal. The library&amp;rsquo;s name is constructed by concatenating the value of the variable &lt;code&gt;term-file-prefix&lt;/code&gt; and the terminal type (specified by the environment variable &lt;code&gt;TERM&lt;/code&gt;). Normally, &lt;code&gt;term-file-prefix&lt;/code&gt; has the value &lt;code&gt;&quot;term/&quot;&lt;/code&gt;; changing this is not recommended. If there is an entry matching &lt;code&gt;TERM&lt;/code&gt; in the &lt;code&gt;term-file-aliases&lt;/code&gt; association list, Emacs uses the associated value in place of &lt;code&gt;TERM&lt;/code&gt;. Emacs finds the file in the normal manner, by searching the &lt;code&gt;load-path&lt;/code&gt; directories, and trying the &amp;lsquo;</source>
          <target state="translated">Cada tipo de terminal puede tener su propia biblioteca Lisp que Emacs carga cuando se ejecuta en ese tipo de terminal. El nombre de la biblioteca se construye concatenando el valor de la variable &lt;code&gt;term-file-prefix&lt;/code&gt; y el tipo de terminal (especificado por la variable de entorno &lt;code&gt;TERM&lt;/code&gt; ). Normalmente, &lt;code&gt;term-file-prefix&lt;/code&gt; tiene el valor &lt;code&gt;&quot;term/&quot;&lt;/code&gt; ; No se recomienda cambiar esto. Si hay una entrada que coincide con &lt;code&gt;TERM&lt;/code&gt; en la lista de asociaciones &lt;code&gt;term-file-aliases&lt;/code&gt; , Emacs usa el valor asociado en lugar de &lt;code&gt;TERM&lt;/code&gt; . Emacs encuentra el archivo de la manera normal, buscando en los directorios de la &lt;code&gt;load-path&lt;/code&gt; y probando el '</target>
        </trans-unit>
        <trans-unit id="abf9852196e45b8ddf01ffeb0a06d4b366da14b5" translate="yes" xml:space="preserve">
          <source>Each time a generic function is called, it builds the &lt;em&gt;effective method&lt;/em&gt; which will handle this invocation by combining the applicable methods defined for the function. The process of finding the applicable methods and producing the effective method is called &lt;em&gt;dispatch&lt;/em&gt;. The applicable methods are those all of whose specializers are compatible with the actual arguments of the call. Since all of the arguments must be compatible with the specializers, they all determine whether a method is applicable. Methods that explicitly specialize more than one argument are called &lt;em&gt;multiple-dispatch methods&lt;/em&gt;.</source>
          <target state="translated">Cada vez que se llama a una funci&amp;oacute;n gen&amp;eacute;rica, construye el &lt;em&gt;m&amp;eacute;todo eficaz&lt;/em&gt; que manejar&amp;aacute; esta invocaci&amp;oacute;n combinando los m&amp;eacute;todos aplicables definidos para la funci&amp;oacute;n. El proceso de encontrar los m&amp;eacute;todos aplicables y producir el m&amp;eacute;todo eficaz se denomina &lt;em&gt;env&amp;iacute;o&lt;/em&gt; . Los m&amp;eacute;todos aplicables son aquellos cuyos especialistas son compatibles con los argumentos reales de la llamada. Dado que todos los argumentos deben ser compatibles con los especialistas, todos determinan si un m&amp;eacute;todo es aplicable. Los m&amp;eacute;todos que se especializan expl&amp;iacute;citamente en m&amp;aacute;s de un argumento se denominan &lt;em&gt;m&amp;eacute;todos de env&amp;iacute;o m&amp;uacute;ltiple&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="47a0fbac78b3eea53dfbeb6288c7d952fd355c24" translate="yes" xml:space="preserve">
          <source>Each time a question is asked, the user may enter</source>
          <target state="translated">Cada vez que se hace una pregunta,el usuario puede introducir</target>
        </trans-unit>
        <trans-unit id="aad2a9d470474da5d8494a55e6808054f9e31862" translate="yes" xml:space="preserve">
          <source>Each time you use</source>
          <target state="translated">Cada vez que usas</target>
        </trans-unit>
        <trans-unit id="ef5f67cf376cd71cde435468e95d944f3c241104" translate="yes" xml:space="preserve">
          <source>Each variable on this list can have properties &lt;code&gt;overlay-arrow-string&lt;/code&gt; and &lt;code&gt;overlay-arrow-bitmap&lt;/code&gt; that specify an overlay arrow string (for text terminals) or fringe bitmap (for graphical terminals) to display at the corresponding overlay arrow position. If either property is not set, the default &lt;code&gt;overlay-arrow-string&lt;/code&gt; or &lt;code&gt;overlay-arrow&lt;/code&gt; fringe indicator is used.</source>
          <target state="translated">Cada variable de esta lista puede tener propiedades &lt;code&gt;overlay-arrow-string&lt;/code&gt; y &lt;code&gt;overlay-arrow-bitmap&lt;/code&gt; que especifican una cadena de flechas superpuestas (para terminales de texto) o un mapa de bits de franjas (para terminales gr&amp;aacute;ficos) para mostrar en la posici&amp;oacute;n de la flecha superpuesta correspondiente. Si no se establece ninguna de las propiedades, se utiliza el indicador de franja de &lt;code&gt;overlay-arrow-string&lt;/code&gt; o &lt;code&gt;overlay-arrow&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4ef6f686fb9bcdcb38b76a946d731d5b21776b57" translate="yes" xml:space="preserve">
          <source>Each warning has a &lt;em&gt;warning type&lt;/em&gt; to classify it. The type is a list of symbols. The first symbol should be the custom group that you use for the program&amp;rsquo;s user options. For example, byte compiler warnings use the warning type &lt;code&gt;(bytecomp)&lt;/code&gt;. You can also subcategorize the warnings, if you wish, by using more symbols in the list.</source>
          <target state="translated">Cada advertencia tiene un &lt;em&gt;tipo de advertencia&lt;/em&gt; para clasificarla. El tipo es una lista de s&amp;iacute;mbolos. El primer s&amp;iacute;mbolo debe ser el grupo personalizado que utiliza para las opciones de usuario del programa. Por ejemplo, las advertencias del compilador de bytes utilizan el tipo de advertencia &lt;code&gt;(bytecomp)&lt;/code&gt; . Tambi&amp;eacute;n puede subcategorizar las advertencias, si lo desea, utilizando m&amp;aacute;s s&amp;iacute;mbolos en la lista.</target>
        </trans-unit>
        <trans-unit id="c7b05419563012fae186137d3649c98f1f79fa29" translate="yes" xml:space="preserve">
          <source>Each window belongs to exactly one frame (see &lt;a href=&quot;frames#Frames&quot;&gt;Frames&lt;/a&gt;).</source>
          <target state="translated">Cada ventana pertenece exactamente a un marco (ver &lt;a href=&quot;frames#Frames&quot;&gt;Marcos&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="3dbb592ccdc83f880aa1c33595a352f03e950a3c" translate="yes" xml:space="preserve">
          <source>Each window can specify a display table, and so can each buffer. The window&amp;rsquo;s display table, if there is one, takes precedence over the buffer&amp;rsquo;s display table. If neither exists, Emacs tries to use the standard display table; if that is &lt;code&gt;nil&lt;/code&gt;, Emacs uses the usual character display conventions (see &lt;a href=&quot;usual-display#Usual-Display&quot;&gt;Usual Display&lt;/a&gt;).</source>
          <target state="translated">Cada ventana puede especificar una tabla de visualizaci&amp;oacute;n, y tambi&amp;eacute;n cada b&amp;uacute;fer. La tabla de visualizaci&amp;oacute;n de la ventana, si la hay, tiene prioridad sobre la tabla de visualizaci&amp;oacute;n del b&amp;uacute;fer. Si no existe ninguno, Emacs intenta utilizar la tabla de visualizaci&amp;oacute;n est&amp;aacute;ndar; si es &lt;code&gt;nil&lt;/code&gt; , Emacs usa las convenciones habituales de visualizaci&amp;oacute;n de caracteres (consulte &lt;a href=&quot;usual-display#Usual-Display&quot;&gt;Visualizaci&amp;oacute;n habitual&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="377bae922cb141c720011b4887600679610fc2e2" translate="yes" xml:space="preserve">
          <source>Each window displays the contents of a buffer.</source>
          <target state="translated">Cada ventana muestra el contenido de un buffer.</target>
        </trans-unit>
        <trans-unit id="36e2e629a25c4f98d548b38fe566963d0bf5edbb" translate="yes" xml:space="preserve">
          <source>Each window has its own location of point.</source>
          <target state="translated">Cada ventana tiene su propia ubicación de punto.</target>
        </trans-unit>
        <trans-unit id="471c73409475e7e93e86c9bda3823fa89d907def" translate="yes" xml:space="preserve">
          <source>Each window has its own value of point (see &lt;a href=&quot;point#Point&quot;&gt;Point&lt;/a&gt;), independent of the value of point in other windows displaying the same buffer. This makes it useful to have multiple windows showing one buffer.</source>
          <target state="translated">Cada ventana tiene su propio valor de punto (ver &lt;a href=&quot;point#Point&quot;&gt;Punto&lt;/a&gt; ), independiente del valor de punto en otras ventanas que muestran el mismo b&amp;uacute;fer. Esto hace que sea &amp;uacute;til tener varias ventanas que muestren un b&amp;uacute;fer.</target>
        </trans-unit>
        <trans-unit id="21af55b760406410c2ff15a1789fb087e13f691d" translate="yes" xml:space="preserve">
          <source>Each window maintains a marker used to keep track of a buffer position that specifies where in the buffer display should start. This position is called the &lt;em&gt;display-start&lt;/em&gt; position of the window (or just the &lt;em&gt;start&lt;/em&gt;). The character after this position is the one that appears at the upper left corner of the window. It is usually, but not inevitably, at the beginning of a text line.</source>
          <target state="translated">Cada ventana mantiene un marcador que se utiliza para realizar un seguimiento de la posici&amp;oacute;n del b&amp;uacute;fer que especifica d&amp;oacute;nde debe comenzar la visualizaci&amp;oacute;n del b&amp;uacute;fer. Esta posici&amp;oacute;n se llama la posici&amp;oacute;n de &lt;em&gt;inicio de visualizaci&amp;oacute;n&lt;/em&gt; de la ventana (o simplemente el &lt;em&gt;inicio&lt;/em&gt; ). El car&amp;aacute;cter que sigue a esta posici&amp;oacute;n es el que aparece en la esquina superior izquierda de la ventana. Por lo general, pero no inevitablemente, al principio de una l&amp;iacute;nea de texto.</target>
        </trans-unit>
        <trans-unit id="fce687f2b757b30204db6be7e540c24d557b9814" translate="yes" xml:space="preserve">
          <source>Each window remembers in a list the buffers it has previously displayed, and the order in which these buffers were removed from it. This history is used, for example, by &lt;code&gt;replace-buffer-in-windows&lt;/code&gt; (see &lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;Buffers and Windows&lt;/a&gt;), and when quitting windows (see &lt;a href=&quot;quitting-windows#Quitting-Windows&quot;&gt;Quitting Windows&lt;/a&gt;). The list is automatically maintained by Emacs, but you can use the following functions to explicitly inspect or alter it:</source>
          <target state="translated">Cada ventana recuerda en una lista los b&amp;uacute;feres que ha mostrado anteriormente y el orden en que se eliminaron estos b&amp;uacute;feres. Este historial se utiliza, por ejemplo, por &lt;code&gt;replace-buffer-in-windows&lt;/code&gt; (consulte &lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;B&amp;uacute;feres y ventanas&lt;/a&gt; ) y al salir de Windows (consulte &lt;a href=&quot;quitting-windows#Quitting-Windows&quot;&gt;Salir de Windows&lt;/a&gt; ). Emacs mantiene autom&amp;aacute;ticamente la lista, pero puede utilizar las siguientes funciones para inspeccionarla o modificarla de forma expl&amp;iacute;cita:</target>
        </trans-unit>
        <trans-unit id="8aecaaf814d79e70608c06de7e5e42031379d48e" translate="yes" xml:space="preserve">
          <source>Each window remembers the buffers displayed in it.</source>
          <target state="translated">Cada ventana recuerda los buffers que se muestran en ella.</target>
        </trans-unit>
        <trans-unit id="6813d6d7a333036a4e7f2011729ff7b5325fc05c" translate="yes" xml:space="preserve">
          <source>Eager macro-expansion skipped due to cycle&amp;hellip;</source>
          <target state="translated">Se omiti&amp;oacute; la macroexpansi&amp;oacute;n ansiosa debido al ciclo ...</target>
        </trans-unit>
        <trans-unit id="c7819a9a17cb6e9b801c22d26ce09956afd86797" translate="yes" xml:space="preserve">
          <source>Easier construction of list structure.</source>
          <target state="translated">Una construcción más fácil de la estructura de la lista.</target>
        </trans-unit>
        <trans-unit id="62982c50a7c0a185c8095d28e3fa75a7344df943" translate="yes" xml:space="preserve">
          <source>Easy Menu</source>
          <target state="translated">Menú fácil</target>
        </trans-unit>
        <trans-unit id="e669883509d7784c6369e20b9c8e23e7a2ae19ce" translate="yes" xml:space="preserve">
          <source>Echo Area Customization</source>
          <target state="translated">Personalización de la zona de eco</target>
        </trans-unit>
        <trans-unit id="e3ef941690c36ee5499f59f47789430e59decd21" translate="yes" xml:space="preserve">
          <source>Echo area messages are logged for the user.</source>
          <target state="translated">Los mensajes del área de eco se registran para el usuario.</target>
        </trans-unit>
        <trans-unit id="d0d356e2906e1462d5588304b1489624265299d3" translate="yes" xml:space="preserve">
          <source>Edebug</source>
          <target state="translated">Edebug</target>
        </trans-unit>
        <trans-unit id="de72542989794bf4f9b5288408d18fa3b9d956e8" translate="yes" xml:space="preserve">
          <source>Edebug Breakpoints</source>
          <target state="translated">Edebug Breakpoints</target>
        </trans-unit>
        <trans-unit id="b8aee5a6d2c322bc3ab9fb40d52ca9936fbddd0c" translate="yes" xml:space="preserve">
          <source>Edebug Display Update</source>
          <target state="translated">Actualización de la pantalla de Edebug</target>
        </trans-unit>
        <trans-unit id="bc18eb808760456413933f510d2a752bd1e8d6ab" translate="yes" xml:space="preserve">
          <source>Edebug Execution Modes</source>
          <target state="translated">Modos de ejecución de Edebug</target>
        </trans-unit>
        <trans-unit id="db5fcd0b8950d84b987ca870e92762ff16aec921" translate="yes" xml:space="preserve">
          <source>Edebug Options</source>
          <target state="translated">Opciones de Edebug</target>
        </trans-unit>
        <trans-unit id="ff142d85d91b23e86bff42fd24362bcde946851e" translate="yes" xml:space="preserve">
          <source>Edebug Recursive Edit</source>
          <target state="translated">Edebug Edición Recursiva</target>
        </trans-unit>
        <trans-unit id="fa24aa898a4d87754b34d172971d0b2fd796309e" translate="yes" xml:space="preserve">
          <source>Edebug Views</source>
          <target state="translated">Vistas de Edebug</target>
        </trans-unit>
        <trans-unit id="aaaaaf87ac09329f2cde58c88e53a15cfbfc4fd2" translate="yes" xml:space="preserve">
          <source>Edebug also has a coverage testing feature (see &lt;a href=&quot;coverage-testing#Coverage-Testing&quot;&gt;Coverage Testing&lt;/a&gt;). These features partly duplicate each other, and it would be cleaner to combine them.</source>
          <target state="translated">Edebug tambi&amp;eacute;n tiene una funci&amp;oacute;n de prueba de cobertura (consulte &lt;a href=&quot;coverage-testing#Coverage-Testing&quot;&gt;Prueba de cobertura&lt;/a&gt; ). Estas caracter&amp;iacute;sticas se duplican parcialmente entre s&amp;iacute;, y ser&amp;iacute;a m&amp;aacute;s limpio combinarlas.</target>
        </trans-unit>
        <trans-unit id="5994b668cd44159515a3e4ba54f24512ebee8719" translate="yes" xml:space="preserve">
          <source>Edebug always stops or pauses at a breakpoint, except when the Edebug mode is Go-nonstop. In that mode, it ignores breakpoints entirely.</source>
          <target state="translated">Edebug siempre se detiene o hace una pausa en un punto de ruptura,excepto cuando el modo Edebug es Go-nonstop.En ese modo,ignora por completo los puntos de ruptura.</target>
        </trans-unit>
        <trans-unit id="8ac07564c784bdf322cd2d256e04366eca19af10" translate="yes" xml:space="preserve">
          <source>Edebug and Macros</source>
          <target state="translated">Edebug y Macros</target>
        </trans-unit>
        <trans-unit id="2334c070b2d93786e0f9d4e0e6ef1389b7e33bc2" translate="yes" xml:space="preserve">
          <source>Edebug binds &lt;code&gt;debug-on-error&lt;/code&gt; to this value, if &lt;code&gt;debug-on-error&lt;/code&gt; was previously &lt;code&gt;nil&lt;/code&gt;. See &lt;a href=&quot;trapping-errors#Trapping-Errors&quot;&gt;Trapping Errors&lt;/a&gt;.</source>
          <target state="translated">Edebug vincula el &lt;code&gt;debug-on-error&lt;/code&gt; a este valor, si el &lt;code&gt;debug-on-error&lt;/code&gt; era previamente &lt;code&gt;nil&lt;/code&gt; . Consulte &lt;a href=&quot;trapping-errors#Trapping-Errors&quot;&gt;Captura de errores&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f770030db08cea088bd08663ed881e1cd0f21f55" translate="yes" xml:space="preserve">
          <source>Edebug binds &lt;code&gt;debug-on-quit&lt;/code&gt; to this value, if &lt;code&gt;debug-on-quit&lt;/code&gt; was previously &lt;code&gt;nil&lt;/code&gt;. See &lt;a href=&quot;trapping-errors#Trapping-Errors&quot;&gt;Trapping Errors&lt;/a&gt;.</source>
          <target state="translated">Edebug vincula &lt;code&gt;debug-on-quit&lt;/code&gt; a este valor, si antes &lt;code&gt;debug-on-quit&lt;/code&gt; era &lt;code&gt;nil&lt;/code&gt; . Consulte &lt;a href=&quot;trapping-errors#Trapping-Errors&quot;&gt;Captura de errores&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="581bbe1c7b1bf43b35887b695cec303d8cc475a0" translate="yes" xml:space="preserve">
          <source>Edebug can record an execution trace, storing it in a buffer named</source>
          <target state="translated">Edebug puede grabar un rastro de ejecución,almacenándolo en un buffer llamado</target>
        </trans-unit>
        <trans-unit id="20366c58a50ec9fdef7674ad425cec8c20ee076b" translate="yes" xml:space="preserve">
          <source>Edebug cannot save and restore the value of &lt;code&gt;unread-command-events&lt;/code&gt;. Entering Edebug while this variable has a nontrivial value can interfere with execution of the program you are debugging.</source>
          <target state="translated">Edebug no puede guardar y restaurar el valor de &lt;code&gt;unread-command-events&lt;/code&gt; . Entrar en Edebug mientras esta variable tiene un valor no trivial puede interferir con la ejecuci&amp;oacute;n del programa que est&amp;aacute; depurando.</target>
        </trans-unit>
        <trans-unit id="16918456881c20d67309bd633563ae947d9b3b7b" translate="yes" xml:space="preserve">
          <source>Edebug is a source-level debugger for Emacs Lisp programs, with which you can:</source>
          <target state="translated">Edebug es un depurador a nivel de código fuente para los programas Emacs Lisp,con el que puedes:</target>
        </trans-unit>
        <trans-unit id="789c782ce1bff1de5d155e3b1f0f895fb82a5514" translate="yes" xml:space="preserve">
          <source>Edebug knows how to instrument all the standard special forms, &lt;code&gt;interactive&lt;/code&gt; forms with an expression argument, anonymous lambda expressions, and other defining forms. However, Edebug cannot determine on its own what a user-defined macro will do with the arguments of a macro call, so you must provide that information using Edebug specifications; for details, see &lt;a href=&quot;edebug-and-macros#Edebug-and-Macros&quot;&gt;Edebug and Macros&lt;/a&gt;.</source>
          <target state="translated">Edebug sabe c&amp;oacute;mo instrumentar todas las formas especiales est&amp;aacute;ndar, formas &lt;code&gt;interactive&lt;/code&gt; con un argumento de expresi&amp;oacute;n, expresiones lambda an&amp;oacute;nimas y otras formas definitorias. Sin embargo, Edebug no puede determinar por s&amp;iacute; solo qu&amp;eacute; har&amp;aacute; una macro definida por el usuario con los argumentos de una llamada de macro, por lo que debe proporcionar esa informaci&amp;oacute;n utilizando las especificaciones de Edebug; para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte &lt;a href=&quot;edebug-and-macros#Edebug-and-Macros&quot;&gt;Edebug y Macros&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1207a8c1131590d2c1fba8e8a08045f9810e7ded" translate="yes" xml:space="preserve">
          <source>Edebug provides rudimentary coverage testing and display of execution frequency.</source>
          <target state="translated">Edebug proporciona pruebas de cobertura rudimentarias y muestra la frecuencia de ejecución.</target>
        </trans-unit>
        <trans-unit id="36c74f738d92fd5a51f36c24f8a45083919a4383" translate="yes" xml:space="preserve">
          <source>Edebug specifications provide the power of regular expression matching, plus some context-free grammar constructs: the matching of sublists with balanced parentheses, recursive processing of forms, and recursion via indirect specifications.</source>
          <target state="translated">Las especificaciones de Edebug proporcionan el poder de la coincidencia de expresiones regulares,además de algunas construcciones gramaticales sin contexto:la coincidencia de sublistas con paréntesis equilibrados,el procesamiento recursivo de formas y la recursividad a través de especificaciones indirectas.</target>
        </trans-unit>
        <trans-unit id="f06b5c4b7654995d8c103e8f7c041be09dabee12" translate="yes" xml:space="preserve">
          <source>Edebug supports evaluation of expressions containing references to lexically bound symbols created by the following constructs in</source>
          <target state="translated">Edebug apoya la evaluación de las expresiones que contienen referencias a los símbolos léxicos creados por las siguientes construcciones en</target>
        </trans-unit>
        <trans-unit id="92e9b4ffd97bcf6f208e24140d67894084ea0be2" translate="yes" xml:space="preserve">
          <source>Edebug supports several execution modes for running the program you are debugging. We call these alternatives &lt;em&gt;Edebug execution modes&lt;/em&gt;; do not confuse them with major or minor modes. The current Edebug execution mode determines how far Edebug continues execution before stopping&amp;mdash;whether it stops at each stop point, or continues to the next breakpoint, for example&amp;mdash;and how much Edebug displays the progress of the evaluation before it stops.</source>
          <target state="translated">Edebug admite varios modos de ejecuci&amp;oacute;n para ejecutar el programa que est&amp;aacute; depurando. A estas alternativas las llamamos &lt;em&gt;modos de ejecuci&amp;oacute;n Edebug&lt;/em&gt; ; no los confunda con modos mayores o menores. El modo de ejecuci&amp;oacute;n actual de Edebug determina hasta qu&amp;eacute; punto Edebug contin&amp;uacute;a la ejecuci&amp;oacute;n antes de detenerse, ya sea que se detenga en cada punto de parada o contin&amp;uacute;e hasta el siguiente punto de interrupci&amp;oacute;n, por ejemplo, y cu&amp;aacute;nto Edebug muestra el progreso de la evaluaci&amp;oacute;n antes de que se detenga.</target>
        </trans-unit>
        <trans-unit id="f7233d448eb4726f6f80864ae5edc50a6ac1b407" translate="yes" xml:space="preserve">
          <source>Edebug tries to be transparent to the program you are debugging, but it does not succeed completely. Edebug also tries to be transparent when you evaluate expressions with</source>
          <target state="translated">Edebug intenta ser transparente al programa que está depurando,pero no lo consigue del todo.Edebug también intenta ser transparente cuando evalúa expresiones con</target>
        </trans-unit>
        <trans-unit id="33534c2c4e6a92bffabc52624dabaee51456428a" translate="yes" xml:space="preserve">
          <source>Edebug uses the following specifications for &lt;code&gt;defun&lt;/code&gt; and the associated argument list and &lt;code&gt;interactive&lt;/code&gt; specifications. It is necessary to handle interactive forms specially since an expression argument is actually evaluated outside of the function body. (The specification for &lt;code&gt;defmacro&lt;/code&gt; is very similar to that for &lt;code&gt;defun&lt;/code&gt;, but allows for the &lt;code&gt;declare&lt;/code&gt; statement.)</source>
          <target state="translated">Edebug utiliza las siguientes especificaciones para &lt;code&gt;defun&lt;/code&gt; y la lista de argumentos asociada y &lt;code&gt;interactive&lt;/code&gt; especificaciones interactivas . Es necesario manejar formas interactivas especialmente porque un argumento de expresi&amp;oacute;n se eval&amp;uacute;a fuera del cuerpo de la funci&amp;oacute;n. (La especificaci&amp;oacute;n de &lt;code&gt;defmacro&lt;/code&gt; es muy similar a la de &lt;code&gt;defun&lt;/code&gt; , pero permite la declaraci&amp;oacute;n &lt;code&gt;declare&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="28e944e5aaec320c912fa03faba41f7a60142004" translate="yes" xml:space="preserve">
          <source>Edebug&amp;rsquo;s behavior may also be changed on a per-definition basis by adding an entry to this alist, with a key of your choice and three functions. Then set the &lt;code&gt;edebug-behavior&lt;/code&gt; symbol property of an instrumented definition to the key of the new entry, and Edebug will call the new functions in place of its own for that definition.</source>
          <target state="translated">El comportamiento de Edebug tambi&amp;eacute;n puede cambiarse por definici&amp;oacute;n agregando una entrada a esta lista, con una clave de su elecci&amp;oacute;n y tres funciones. Luego, establezca la propiedad de s&amp;iacute;mbolo de &lt;code&gt;edebug-behavior&lt;/code&gt; de una definici&amp;oacute;n instrumentada en la clave de la nueva entrada, y Edebug llamar&amp;aacute; a las nuevas funciones en lugar de las suyas propias para esa definici&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="2f53d1947915ed6dc821d423e99aa65ab03bb93d" translate="yes" xml:space="preserve">
          <source>Edebug&amp;rsquo;s step mode stops execution when the next stop point is reached. There are three other ways to stop Edebug execution once it has started: breakpoints, the global break condition, and source breakpoints.</source>
          <target state="translated">El modo de pasos de Edebug detiene la ejecuci&amp;oacute;n cuando se alcanza el siguiente punto de parada. Hay otras tres formas de detener la ejecuci&amp;oacute;n de Edebug una vez que ha comenzado: puntos de interrupci&amp;oacute;n, la condici&amp;oacute;n de interrupci&amp;oacute;n global y puntos de interrupci&amp;oacute;n de origen.</target>
        </trans-unit>
        <trans-unit id="5301648dcf6b53cefc9ed52999aaa92d4603cae0" translate="yes" xml:space="preserve">
          <source>Edit</source>
          <target state="translated">Edit</target>
        </trans-unit>
        <trans-unit id="26e19fa6a6a51a98d665a3d92cdd6e86ab35a512" translate="yes" xml:space="preserve">
          <source>Edit the replacement for this question in the minibuffer.</source>
          <target state="translated">Edita el reemplazo de esta pregunta en el minibú.</target>
        </trans-unit>
        <trans-unit id="acd754eaa0be450083a7a0239c06b5b27192bf9c" translate="yes" xml:space="preserve">
          <source>Editing Types</source>
          <target state="translated">Tipos de edición</target>
        </trans-unit>
        <trans-unit id="7599687cce12a98db349160bf1999a82904d7cae" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;nil&lt;/code&gt;, which means the click occurred on buffer text, or a cons cell of the form (&lt;var&gt;string&lt;/var&gt; . &lt;var&gt;string-pos&lt;/var&gt;) if there is a string from a text property or an overlay at the click position.</source>
          <target state="translated">O &lt;code&gt;nil&lt;/code&gt; , que significa que el clic se produjo en el texto del b&amp;uacute;fer, o una celda de contras del formulario ( &lt;var&gt;string&lt;/var&gt; . &lt;var&gt;string-pos&lt;/var&gt; ) si hay una cadena de una propiedad de texto o una superposici&amp;oacute;n en la posici&amp;oacute;n del clic.</target>
        </trans-unit>
        <trans-unit id="d7baec04849ab97493d5ac11cfad3d5209b1d2ba" translate="yes" xml:space="preserve">
          <source>Either a list of the form &lt;code&gt;(&lt;var&gt;key-file&lt;/var&gt; &lt;var&gt;cert-file&lt;/var&gt;)&lt;/code&gt;, naming the certificate key file and certificate file itself, or &lt;code&gt;t&lt;/code&gt;, meaning to query &lt;code&gt;auth-source&lt;/code&gt; for this information (see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/auth/Help-for-users.html#Help-for-users&quot;&gt;auth-source&lt;/a&gt; in</source>
          <target state="translated">O bien una lista del formulario &lt;code&gt;(&lt;var&gt;key-file&lt;/var&gt; &lt;var&gt;cert-file&lt;/var&gt;)&lt;/code&gt; , nombrando el archivo de claves de certificado y el archivo de certificado en s&amp;iacute;, o &lt;code&gt;t&lt;/code&gt; , es decir, consultar &lt;code&gt;auth-source&lt;/code&gt; para esta informaci&amp;oacute;n (ver &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/auth/Help-for-users.html#Help-for-users&quot;&gt;auth-source&lt;/a&gt; en</target>
        </trans-unit>
        <trans-unit id="865508465ca5b2bcd7d2f81973321df89ed12307" translate="yes" xml:space="preserve">
          <source>Elements 1, 2, and 6 are ignored in a state which you pass as an argument to &lt;code&gt;parse-partial-sexp&lt;/code&gt; to continue parsing. Elements 9 and 10 are mainly used internally by the parser code.</source>
          <target state="translated">Los elementos 1, 2 y 6 se ignoran en un estado que se pasa como argumento a &lt;code&gt;parse-partial-sexp&lt;/code&gt; para continuar con el an&amp;aacute;lisis. Los elementos 9 y 10 se utilizan principalmente internamente en el c&amp;oacute;digo del analizador.</target>
        </trans-unit>
        <trans-unit id="78699cbfd109ddf450b59043223813a8b7eeccec" translate="yes" xml:space="preserve">
          <source>Elements read from this list are normally recorded by the record-keeping features (see &lt;a href=&quot;recording-input#Recording-Input&quot;&gt;Recording Input&lt;/a&gt;) and while defining a keyboard macro (see &lt;a href=&quot;keyboard-macros#Keyboard-Macros&quot;&gt;Keyboard Macros&lt;/a&gt;). However, an element of the form &lt;code&gt;(no-record&amp;nbsp;.&amp;nbsp;&lt;var&gt;event&lt;/var&gt;)&lt;/code&gt; causes &lt;var&gt;event&lt;/var&gt; to be processed normally without recording it.</source>
          <target state="translated">Los elementos le&amp;iacute;dos de esta lista se registran normalmente mediante las funciones de mantenimiento de registros (consulte &lt;a href=&quot;recording-input#Recording-Input&quot;&gt;Entrada de grabaci&amp;oacute;n&lt;/a&gt; ) y al definir una macro de teclado (consulte &lt;a href=&quot;keyboard-macros#Keyboard-Macros&quot;&gt;Macros de teclado&lt;/a&gt; ). Sin embargo, un elemento del formulario &lt;code&gt;(no-record&amp;nbsp;.&amp;nbsp;&lt;var&gt;event&lt;/var&gt;)&lt;/code&gt; hace que el &lt;var&gt;event&lt;/var&gt; o se procese normalmente sin registrarlo.</target>
        </trans-unit>
        <trans-unit id="545b0cb131beb226cbb616788142dc984df9548a" translate="yes" xml:space="preserve">
          <source>Eliminating an asynchronous subprocess.</source>
          <target state="translated">Eliminando un subproceso asíncrono.</target>
        </trans-unit>
        <trans-unit id="b99aea41be1dd6682aef77fdd05c13425b490b64" translate="yes" xml:space="preserve">
          <source>Eliminating symbolic links from a file name.</source>
          <target state="translated">Eliminando los enlaces simbólicos de un nombre de archivo.</target>
        </trans-unit>
        <trans-unit id="e75efa6670a36f5ce5a2c336a74d40c2b84e641a" translate="yes" xml:space="preserve">
          <source>Elisp</source>
          <target state="translated">Elisp</target>
        </trans-unit>
        <trans-unit id="11961af86ac0a289f5a8c470c62e5aff16dc0f5c" translate="yes" xml:space="preserve">
          <source>Emacs Display</source>
          <target state="translated">Pantalla de Emacs</target>
        </trans-unit>
        <trans-unit id="1d24b3a1a3bb63bf22f3f35dd8bdc416f585ca87" translate="yes" xml:space="preserve">
          <source>Emacs Dynamic Modules</source>
          <target state="translated">Módulos dinámicos del Emacs</target>
        </trans-unit>
        <trans-unit id="9ef54a3413b4b5d1c94937992e5a38fa19928278" translate="yes" xml:space="preserve">
          <source>Emacs EasyPG Assistant Manual</source>
          <target state="translated">Manual del Asistente Emacs EasyPG</target>
        </trans-unit>
        <trans-unit id="7d69c84368b765ad9cf1f68ed28726d76d0a1f4f" translate="yes" xml:space="preserve">
          <source>Emacs Lisp</source>
          <target state="translated">Emacs Lisp</target>
        </trans-unit>
        <trans-unit id="f364876c0176165f21f9725c4e1f6ba2004826f7" translate="yes" xml:space="preserve">
          <source>Emacs Lisp has a &lt;em&gt;compiler&lt;/em&gt; that translates functions written in Lisp into a special representation called &lt;em&gt;byte-code&lt;/em&gt; that can be executed more efficiently. The compiler replaces Lisp function definitions with byte-code. When a byte-code function is called, its definition is evaluated by the &lt;em&gt;byte-code interpreter&lt;/em&gt;.</source>
          <target state="translated">Emacs Lisp tiene un &lt;em&gt;compilador&lt;/em&gt; que traduce funciones escritas en Lisp en una representaci&amp;oacute;n especial llamada &lt;em&gt;c&amp;oacute;digo byte&lt;/em&gt; que se puede ejecutar de manera m&amp;aacute;s eficiente. El compilador reemplaza las definiciones de funciones Lisp con c&amp;oacute;digo de bytes. Cuando se llama a una funci&amp;oacute;n de c&amp;oacute;digo de &lt;em&gt;bytes, el int&amp;eacute;rprete de c&amp;oacute;digo de bytes&lt;/em&gt; eval&amp;uacute;a su definici&amp;oacute;n .</target>
        </trans-unit>
        <trans-unit id="15dbc9ab10d150d57c606c833f2449026acec815" translate="yes" xml:space="preserve">
          <source>Emacs Lisp has several interfaces for loading. For example, &lt;code&gt;autoload&lt;/code&gt; creates a placeholder object for a function defined in a file; trying to call the autoloading function loads the file to get the function&amp;rsquo;s real definition (see &lt;a href=&quot;autoload#Autoload&quot;&gt;Autoload&lt;/a&gt;). &lt;code&gt;require&lt;/code&gt; loads a file if it isn&amp;rsquo;t already loaded (see &lt;a href=&quot;named-features#Named-Features&quot;&gt;Named Features&lt;/a&gt;). Ultimately, all these facilities call the &lt;code&gt;load&lt;/code&gt; function to do the work.</source>
          <target state="translated">Emacs Lisp tiene varias interfaces para cargar. Por ejemplo, la &lt;code&gt;autoload&lt;/code&gt; crea un objeto de marcador de posici&amp;oacute;n para una funci&amp;oacute;n definida en un archivo; al intentar llamar a la funci&amp;oacute;n de carga autom&amp;aacute;tica, se carga el archivo para obtener la definici&amp;oacute;n real de la funci&amp;oacute;n (ver &lt;a href=&quot;autoload#Autoload&quot;&gt;Carga autom&amp;aacute;tica&lt;/a&gt; ). &lt;code&gt;require&lt;/code&gt; carga un archivo si a&amp;uacute;n no est&amp;aacute; cargado (consulte &lt;a href=&quot;named-features#Named-Features&quot;&gt;Funciones con nombre&lt;/a&gt; ). En &amp;uacute;ltima instancia, todas estas instalaciones llaman a la funci&amp;oacute;n de &lt;code&gt;load&lt;/code&gt; para hacer el trabajo.</target>
        </trans-unit>
        <trans-unit id="53311aa3b6248b8318ac6ffa867ca69521b615e7" translate="yes" xml:space="preserve">
          <source>Emacs Lisp is not at all influenced by Scheme; but the GNU project has an implementation of Scheme, called Guile. We use it in all new GNU software that calls for extensibility.</source>
          <target state="translated">Emacs Lisp no está en absoluto influenciado por Scheme;pero el proyecto GNU tiene una implementación de Scheme,llamada Guile.Lo usamos en todo el nuevo software de GNU que requiere extensibilidad.</target>
        </trans-unit>
        <trans-unit id="5eb9e6bbd184c8e8d87bab48605f13c2f0e69a4c" translate="yes" xml:space="preserve">
          <source>Emacs Lisp mutexes are of a type called &lt;em&gt;recursive&lt;/em&gt;, which means that a thread can re-acquire a mutex it owns any number of times. A mutex keeps a count of how many times it has been acquired, and each acquisition of a mutex must be paired with a release. The last release by a thread of a mutex reverts it to the unowned state, potentially allowing another thread to acquire the mutex.</source>
          <target state="translated">Los mutex de Emacs Lisp son de un tipo llamado &lt;em&gt;recursivo&lt;/em&gt; , lo que significa que un hilo puede volver a adquirir un mutex que posee cualquier n&amp;uacute;mero de veces. Un mutex lleva un recuento de cu&amp;aacute;ntas veces se ha adquirido y cada adquisici&amp;oacute;n de un mutex debe emparejarse con una versi&amp;oacute;n. La &amp;uacute;ltima versi&amp;oacute;n de un subproceso de un mutex lo revierte al estado sin propietario, permitiendo potencialmente que otro subproceso adquiera el mutex.</target>
        </trans-unit>
        <trans-unit id="5dacb820cefb1440695d68c57f34587912fb0410" translate="yes" xml:space="preserve">
          <source>Emacs Lisp programs can open stream (TCP) and datagram (UDP) network connections (see &lt;a href=&quot;datagrams#Datagrams&quot;&gt;Datagrams&lt;/a&gt;) to other processes on the same machine or other machines. A network connection is handled by Lisp much like a subprocess, and is represented by a process object. However, the process you are communicating with is not a child of the Emacs process, has no process</source>
          <target state="translated">Los programas Emacs Lisp pueden abrir conexiones de red de flujo (TCP) y datagrama (UDP) (ver &lt;a href=&quot;datagrams#Datagrams&quot;&gt;Datagramas&lt;/a&gt; ) a otros procesos en la misma m&amp;aacute;quina o en otras m&amp;aacute;quinas. Lisp maneja una conexi&amp;oacute;n de red como un subproceso, y est&amp;aacute; representada por un objeto de proceso. Sin embargo, el proceso con el que se est&amp;aacute; comunicando no es hijo del proceso de Emacs, no tiene proceso</target>
        </trans-unit>
        <trans-unit id="7228b1f4138d429db1308081a4746c06528fb743" translate="yes" xml:space="preserve">
          <source>Emacs Lisp provides a general-purpose hash table data type, along with a series of functions for operating on them. Hash tables have a special printed representation, which consists of &amp;lsquo;</source>
          <target state="translated">Emacs Lisp proporciona un tipo de datos de tabla hash de prop&amp;oacute;sito general, junto con una serie de funciones para operar en ellos. Las tablas hash tienen una representaci&amp;oacute;n impresa especial, que consiste en '</target>
        </trans-unit>
        <trans-unit id="ffe36d47af16b167f8af8d65f4621660e0a3fa30" translate="yes" xml:space="preserve">
          <source>Emacs Lisp provides a limited form of concurrency, called &lt;em&gt;threads&lt;/em&gt;. All the threads in a given instance of Emacs share the same memory. Concurrency in Emacs Lisp is &amp;ldquo;mostly cooperative&amp;rdquo;, meaning that Emacs will only switch execution between threads at well-defined times. However, the Emacs thread support has been designed in a way to later allow more fine-grained concurrency, and correct programs should not rely on cooperative threading.</source>
          <target state="translated">Emacs Lisp proporciona una forma limitada de concurrencia, denominada &lt;em&gt;hilos&lt;/em&gt; . Todos los hilos en una instancia dada de Emacs comparten la misma memoria. La concurrencia en Emacs Lisp es &quot;principalmente cooperativa&quot;, lo que significa que Emacs solo cambiar&amp;aacute; la ejecuci&amp;oacute;n entre subprocesos en momentos bien definidos. Sin embargo, el soporte de subprocesos de Emacs ha sido dise&amp;ntilde;ado de una manera para permitir posteriormente una concurrencia m&amp;aacute;s detallada, y los programas correctos no deben depender del subproceso cooperativo.</target>
        </trans-unit>
        <trans-unit id="3523135daa3b21509914424f92d7c0654029826d" translate="yes" xml:space="preserve">
          <source>Emacs Lisp provides a rich set of the data types. Some of them, like cons cells, integers and strings, are common to nearly all Lisp dialects. Some others, like markers and buffers, are quite special and needed to provide the basic support to write editor commands in Lisp. To implement such a variety of object types and provide an efficient way to pass objects between the subsystems of an interpreter, there is a set of C data structures and a special type to represent the pointers to all of them, which is known as &lt;em&gt;tagged pointer&lt;/em&gt;.</source>
          <target state="translated">Emacs Lisp proporciona un rico conjunto de tipos de datos. Algunos de ellos, como las celdas de cons, n&amp;uacute;meros enteros y cadenas, son comunes a casi todos los dialectos Lisp. Algunos otros, como marcadores y b&amp;uacute;feres, son bastante especiales y necesarios para proporcionar el soporte b&amp;aacute;sico para escribir comandos de editor en Lisp. Para implementar tal variedad de tipos de objetos y proporcionar una forma eficiente de pasar objetos entre los subsistemas de un int&amp;eacute;rprete, existe un conjunto de estructuras de datos C y un tipo especial para representar los punteros a todos ellos, que se conoce como &lt;em&gt;puntero etiquetado.&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="a0792e8235851678da162077315383848bc5c350" translate="yes" xml:space="preserve">
          <source>Emacs Lisp provides primitives to create and control threads, and also to create and control mutexes and condition variables, useful for thread synchronization.</source>
          <target state="translated">Emacs Lisp proporciona primitivas para crear y controlar hilos,y también para crear y controlar mutexes y variables de condición,útiles para la sincronización de los hilos.</target>
        </trans-unit>
        <trans-unit id="07838ca0f24b0415a3b2a5ec64b19ae909fd062f" translate="yes" xml:space="preserve">
          <source>Emacs Lisp provides several kinds of control structure, including other varieties of sequencing, conditionals, iteration, and (controlled) jumps&amp;mdash;all discussed below. The built-in control structures are special forms since their subforms are not necessarily evaluated or not evaluated sequentially. You can use macros to define your own control structure constructs (see &lt;a href=&quot;macros#Macros&quot;&gt;Macros&lt;/a&gt;).</source>
          <target state="translated">Emacs Lisp proporciona varios tipos de estructura de control, incluidas otras variedades de secuenciaci&amp;oacute;n, condicionales, iteraci&amp;oacute;n y saltos (controlados), todos discutidos a continuaci&amp;oacute;n. Las estructuras de control integradas son formas especiales ya que sus subformularios no se eval&amp;uacute;an necesariamente o no se eval&amp;uacute;an secuencialmente. Puede utilizar macros para definir sus propias construcciones de estructura de control (consulte &lt;a href=&quot;macros#Macros&quot;&gt;Macros&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="5eced44d6f227b201299c5badcb9e4e4043498ff" translate="yes" xml:space="preserve">
          <source>Emacs Lisp provides the traditional four arithmetic operations (addition, subtraction, multiplication, and division), as well as remainder and modulus functions, and functions to add or subtract 1. Except for &lt;code&gt;%&lt;/code&gt;, each of these functions accepts both integer and floating-point arguments, and returns a floating-point number if any argument is floating point.</source>
          <target state="translated">Emacs Lisp proporciona las cuatro operaciones aritm&amp;eacute;ticas tradicionales (suma, resta, multiplicaci&amp;oacute;n y divisi&amp;oacute;n), as&amp;iacute; como funciones de m&amp;oacute;dulo y resto, y funciones para sumar o restar 1. Excepto &lt;code&gt;%&lt;/code&gt; , cada una de estas funciones acepta tanto enteros como de coma flotante argumentos y devuelve un n&amp;uacute;mero de punto flotante si alg&amp;uacute;n argumento es de punto flotante.</target>
        </trans-unit>
        <trans-unit id="c75c0672f1103474c697e0414e0d81f059ae0283" translate="yes" xml:space="preserve">
          <source>Emacs Lisp represents many special objects and constructs via special hash notations.</source>
          <target state="translated">Emacs Lisp representa muchos objetos y construcciones especiales a través de notaciones hash especiales.</target>
        </trans-unit>
        <trans-unit id="c4181f7e2dd76cd593dd2b4c56244fb6dc36cf72" translate="yes" xml:space="preserve">
          <source>Emacs Lisp supports nonlocal exits, whereby program control is transfered from one point in a program to another remote point. See &lt;a href=&quot;nonlocal-exits#Nonlocal-Exits&quot;&gt;Nonlocal Exits&lt;/a&gt;. Thus, Lisp functions called by your module might exit nonlocally by calling &lt;code&gt;signal&lt;/code&gt; or &lt;code&gt;throw&lt;/code&gt;, and your module functions must handle such nonlocal exits properly. Such handling is needed because C programs will not automatically release resources and perform other cleanups in these cases; your module code must itself do it. The module</source>
          <target state="translated">Emacs Lisp admite salidas no locales, por lo que el control del programa se transfiere de un punto en un programa a otro punto remoto. Ver &lt;a href=&quot;nonlocal-exits#Nonlocal-Exits&quot;&gt;salidas no locales&lt;/a&gt; . Por lo tanto, las funciones Lisp llamadas por su m&amp;oacute;dulo pueden salir de forma no local llamando a &lt;code&gt;signal&lt;/code&gt; o &lt;code&gt;throw&lt;/code&gt; , y las funciones de su m&amp;oacute;dulo deben manejar dichas salidas no locales correctamente. Dicho manejo es necesario porque los programas C no liberar&amp;aacute;n recursos autom&amp;aacute;ticamente ni realizar&amp;aacute;n otras limpiezas en estos casos; el c&amp;oacute;digo de su m&amp;oacute;dulo debe hacerlo &amp;eacute;l mismo. El m&amp;oacute;dulo</target>
        </trans-unit>
        <trans-unit id="8984f14f223609c734113eaabdefa7eec293526d" translate="yes" xml:space="preserve">
          <source>Emacs Lisp treats &lt;code&gt;-0.0&lt;/code&gt; as numerically equal to ordinary zero with respect to numeric comparisons like &lt;code&gt;=&lt;/code&gt;. This follows the</source>
          <target state="translated">Emacs Lisp trata &lt;code&gt;-0.0&lt;/code&gt; como num&amp;eacute;ricamente igual al cero ordinario con respecto a comparaciones num&amp;eacute;ricas como &lt;code&gt;=&lt;/code&gt; . Esto sigue el</target>
        </trans-unit>
        <trans-unit id="b22e8745733f1044e0e8e778b087514ab35866de" translate="yes" xml:space="preserve">
          <source>Emacs Lisp uses two kinds of storage for user-created Lisp objects: &lt;em&gt;normal storage&lt;/em&gt; and &lt;em&gt;pure storage&lt;/em&gt;. Normal storage is where all the new data created during an Emacs session are kept (see &lt;a href=&quot;garbage-collection#Garbage-Collection&quot;&gt;Garbage Collection&lt;/a&gt;). Pure storage is used for certain data in the preloaded standard Lisp files&amp;mdash;data that should never change during actual use of Emacs.</source>
          <target state="translated">Emacs Lisp utiliza dos tipos de almacenamiento para objetos Lisp creados por el usuario: &lt;em&gt;almacenamiento normal&lt;/em&gt; y &lt;em&gt;almacenamiento puro&lt;/em&gt; . El almacenamiento normal es donde se guardan todos los datos nuevos creados durante una sesi&amp;oacute;n de Emacs (ver &lt;a href=&quot;garbage-collection#Garbage-Collection&quot;&gt;Recolecci&amp;oacute;n de basura&lt;/a&gt; ). El almacenamiento puro se usa para ciertos datos en los archivos Lisp est&amp;aacute;ndar precargados, datos que nunca deber&amp;iacute;an cambiar durante el uso real de Emacs.</target>
        </trans-unit>
        <trans-unit id="9930d40258feb9fa1a5853262c7e1ecbe82780b6" translate="yes" xml:space="preserve">
          <source>Emacs also attempts to load a second init file, called the &lt;em&gt;early init file&lt;/em&gt;, if it exists. This is a file named</source>
          <target state="translated">Emacs tambi&amp;eacute;n intenta cargar un segundo archivo de inicio, llamado &lt;em&gt;archivo de inicio temprano&lt;/em&gt; , si existe. Este es un archivo llamado</target>
        </trans-unit>
        <trans-unit id="f438beb0b54269588c167da980a7fc150f86a60f" translate="yes" xml:space="preserve">
          <source>Emacs also defines &lt;em&gt;raw syntax descriptors&lt;/em&gt;, which are used to describe syntax classes at a lower level. See &lt;a href=&quot;syntax-table-internals#Syntax-Table-Internals&quot;&gt;Syntax Table Internals&lt;/a&gt;.</source>
          <target state="translated">Emacs tambi&amp;eacute;n define &lt;em&gt;descriptores de sintaxis en bruto&lt;/em&gt; , que se utilizan para describir clases de sintaxis en un nivel inferior. Consulte &lt;a href=&quot;syntax-table-internals#Syntax-Table-Internals&quot;&gt;Elementos internos de la tabla de sintaxis&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b081e88746f63937ab843405b000899eb6e7ac41" translate="yes" xml:space="preserve">
          <source>Emacs also provides explicit intervals as a presentation feature; see &lt;a href=&quot;overlays#Overlays&quot;&gt;Overlays&lt;/a&gt;.</source>
          <target state="translated">Emacs tambi&amp;eacute;n proporciona intervalos expl&amp;iacute;citos como caracter&amp;iacute;stica de presentaci&amp;oacute;n; consulte &lt;a href=&quot;overlays#Overlays&quot;&gt;Superposiciones&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d6037f3bcf19731d59e4737efeb909a4477fe1f5" translate="yes" xml:space="preserve">
          <source>Emacs also runs the hook &lt;code&gt;window-selection-change-functions&lt;/code&gt; whenever the redisplay routine detects that another window has been selected since last redisplay. See &lt;a href=&quot;window-hooks#Window-Hooks&quot;&gt;Window Hooks&lt;/a&gt;, for a detailed explanation. &lt;code&gt;window-state-change-functions&lt;/code&gt; (described in the same section) is another abnormal hook run after a different window has been selected but is triggered by other window changes as well.</source>
          <target state="translated">Emacs tambi&amp;eacute;n ejecuta el hook &lt;code&gt;window-selection-change-functions&lt;/code&gt; siempre que la rutina de volver a mostrar detecta que se ha seleccionado otra ventana desde la &amp;uacute;ltima vez que se volvi&amp;oacute; a mostrar. Consulte &lt;a href=&quot;window-hooks#Window-Hooks&quot;&gt;Ganchos de ventana&lt;/a&gt; para obtener una explicaci&amp;oacute;n detallada. &lt;code&gt;window-state-change-functions&lt;/code&gt; (descrita en la misma secci&amp;oacute;n) es otra ejecuci&amp;oacute;n de gancho anormal despu&amp;eacute;s de que se ha seleccionado una ventana diferente, pero tambi&amp;eacute;n se activa por otros cambios de ventana.</target>
        </trans-unit>
        <trans-unit id="4fa081728575b5af47f34cfa1d0d81f4cfadd8e1" translate="yes" xml:space="preserve">
          <source>Emacs applications have the same sort of race-condition issues that other applications do. For example, even when &lt;code&gt;(file-readable-p &quot;foo.txt&quot;)&lt;/code&gt; returns &lt;code&gt;t&lt;/code&gt;, it could be that</source>
          <target state="translated">Las aplicaciones de Emacs tienen el mismo tipo de problemas de condici&amp;oacute;n de carrera que otras aplicaciones. Por ejemplo, incluso cuando &lt;code&gt;(file-readable-p &quot;foo.txt&quot;)&lt;/code&gt; devuelve &lt;code&gt;t&lt;/code&gt; , podr&amp;iacute;a ser que</target>
        </trans-unit>
        <trans-unit id="7834c231794da13a4ac8440585e75335487d24af" translate="yes" xml:space="preserve">
          <source>Emacs attempts to infer the coding systems of the files and network connections it accesses. See &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;. If Emacs infers incorrectly, or if the other parties to the network connection disagree with Emacs&amp;rsquo;s inferences, the resulting system could be unreliable. Also, even when it infers correctly, Emacs often can use bytes that other programs cannot. For example, although to Emacs the null byte is just a character like any other, many other applications treat it as a string terminator and mishandle strings or files containing null bytes.</source>
          <target state="translated">Emacs intenta inferir los sistemas de codificaci&amp;oacute;n de los archivos y las conexiones de red a las que accede. Consulte &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Sistemas de codificaci&amp;oacute;n&lt;/a&gt; . Si Emacs infiere incorrectamente, o si las otras partes de la conexi&amp;oacute;n de red no est&amp;aacute;n de acuerdo con las inferencias de Emacs, el sistema resultante podr&amp;iacute;a no ser confiable. Adem&amp;aacute;s, incluso cuando infiere correctamente, Emacs a menudo puede usar bytes que otros programas no pueden. Por ejemplo, aunque para Emacs el byte nulo es solo un car&amp;aacute;cter como cualquier otro, muchas otras aplicaciones lo tratan como un terminador de cadena y manejan mal las cadenas o archivos que contienen bytes nulos.</target>
        </trans-unit>
        <trans-unit id="c00bcea23c0da23f92989ded99bb44ac6e6e81dc" translate="yes" xml:space="preserve">
          <source>Emacs auth-source Library</source>
          <target state="translated">Biblioteca de la fuente automática de Emacs</target>
        </trans-unit>
        <trans-unit id="9f846cfde8ec0bbf0a7662f71e026a3be4a6b612" translate="yes" xml:space="preserve">
          <source>Emacs automatically saves and restores the match data when it runs process filter functions (see &lt;a href=&quot;filter-functions#Filter-Functions&quot;&gt;Filter Functions&lt;/a&gt;) and process sentinels (see &lt;a href=&quot;sentinels#Sentinels&quot;&gt;Sentinels&lt;/a&gt;).</source>
          <target state="translated">Emacs guarda y restaura autom&amp;aacute;ticamente los datos de coincidencia cuando ejecuta funciones de filtro de proceso (ver &lt;a href=&quot;filter-functions#Filter-Functions&quot;&gt;Funciones de filtro&lt;/a&gt; ) y centinelas de proceso (ver &lt;a href=&quot;sentinels#Sentinels&quot;&gt;Sentinels&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="67baa3b59c5cfd5117efdc499dc974b7501e0ed6" translate="yes" xml:space="preserve">
          <source>Emacs becomes &lt;em&gt;idle&lt;/em&gt; when it starts waiting for user input, and it remains idle until the user provides some input. If a timer is set for five seconds of idleness, it runs approximately five seconds after Emacs first becomes idle. Even if &lt;var&gt;repeat&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this timer will not run again as long as Emacs remains idle, because the duration of idleness will continue to increase and will not go down to five seconds again.</source>
          <target state="translated">Emacs se vuelve &lt;em&gt;inactivo&lt;/em&gt; cuando comienza a esperar la entrada del usuario, y permanece inactivo hasta que el usuario proporciona alguna entrada. Si un temporizador est&amp;aacute; configurado para cinco segundos de inactividad, se ejecuta aproximadamente cinco segundos despu&amp;eacute;s de que Emacs se vuelve inactivo por primera vez. Incluso si la &lt;var&gt;repeat&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; , este temporizador no volver&amp;aacute; a funcionar mientras Emacs permanezca inactivo, porque la duraci&amp;oacute;n de inactividad seguir&amp;aacute; aumentando y no volver&amp;aacute; a bajar a cinco segundos.</target>
        </trans-unit>
        <trans-unit id="b099356ce36c80ba26fa8fbfb26af1e5b452e4c1" translate="yes" xml:space="preserve">
          <source>Emacs binds &lt;code&gt;inhibit-quit&lt;/code&gt; to &lt;code&gt;t&lt;/code&gt; before calling the timer function, because quitting out of many timer functions can leave things in an inconsistent state. This is normally unproblematical because most timer functions don&amp;rsquo;t do a lot of work. Indeed, for a timer to call a function that takes substantial time to run is likely to be annoying. If a timer function needs to allow quitting, it should use &lt;code&gt;with-local-quit&lt;/code&gt; (see &lt;a href=&quot;quitting#Quitting&quot;&gt;Quitting&lt;/a&gt;). For example, if a timer function calls &lt;code&gt;accept-process-output&lt;/code&gt; to receive output from an external process, that call should be wrapped inside &lt;code&gt;with-local-quit&lt;/code&gt;, to ensure that</source>
          <target state="translated">Emacs vincula &lt;code&gt;inhibit-quit&lt;/code&gt; a &lt;code&gt;t&lt;/code&gt; antes de llamar a la funci&amp;oacute;n del temporizador, porque salir de muchas funciones del temporizador puede dejar las cosas en un estado inconsistente. Esto normalmente no presenta problemas porque la mayor&amp;iacute;a de las funciones del temporizador no hacen mucho trabajo. De hecho, es probable que un temporizador llame a una funci&amp;oacute;n que requiere mucho tiempo para ejecutarse. Si una funci&amp;oacute;n de temporizador necesita permitir salir, deber&amp;iacute;a usar &lt;code&gt;with-local-quit&lt;/code&gt; (ver &lt;a href=&quot;quitting#Quitting&quot;&gt;Salir&lt;/a&gt; ). Por ejemplo, si una funci&amp;oacute;n de temporizador llama a &lt;code&gt;accept-process-output&lt;/code&gt; para recibir la salida de un proceso externo, esa llamada debe incluirse dentro &lt;code&gt;with-local-quit&lt;/code&gt; , para garantizar que</target>
        </trans-unit>
        <trans-unit id="8f454504a503845ea061d18fe9395a3a052cad4b" translate="yes" xml:space="preserve">
          <source>Emacs buffers and strings support a large repertoire of characters from many different scripts, allowing users to type and display text in almost any known written language.</source>
          <target state="translated">Las memorias intermedias y las cadenas del Emacs soportan un amplio repertorio de caracteres de muchos guiones diferentes,lo que permite a los usuarios escribir y mostrar el texto en casi cualquier idioma escrito conocido.</target>
        </trans-unit>
        <trans-unit id="cba03acb1e83d7835328c3a29d040dd5bf043a93" translate="yes" xml:space="preserve">
          <source>Emacs buffers are implemented using an invisible &lt;em&gt;gap&lt;/em&gt; to make insertion and deletion faster. Insertion works by filling in part of the gap, and deletion adds to the gap. Of course, this means that the gap must first be moved to the locus of the insertion or deletion. Emacs moves the gap only when you try to insert or delete. This is why your first editing command in one part of a large buffer, after previously editing in another far-away part, sometimes involves a noticeable delay.</source>
          <target state="translated">Los b&amp;uacute;feres de Emacs se implementan utilizando un &lt;em&gt;espacio&lt;/em&gt; invisible para agilizar la inserci&amp;oacute;n y eliminaci&amp;oacute;n. La inserci&amp;oacute;n funciona llenando parte del espacio y la eliminaci&amp;oacute;n se suma al espacio. Por supuesto, esto significa que el espacio debe moverse primero al lugar de la inserci&amp;oacute;n o eliminaci&amp;oacute;n. Emacs mueve el espacio solo cuando intenta insertar o eliminar. Esta es la raz&amp;oacute;n por la que su primer comando de edici&amp;oacute;n en una parte de un b&amp;uacute;fer grande, despu&amp;eacute;s de editar previamente en otra parte lejana, a veces implica un retraso notable.</target>
        </trans-unit>
        <trans-unit id="c8540d4172ad8a5276f664cef2b5ef4bc08d72c8" translate="yes" xml:space="preserve">
          <source>Emacs caches images so that it can display them again more efficiently. When Emacs displays an image, it searches the image cache for an existing image specification &lt;code&gt;equal&lt;/code&gt; to the desired specification. If a match is found, the image is displayed from the cache. Otherwise, Emacs loads the image normally.</source>
          <target state="translated">Emacs almacena en cach&amp;eacute; las im&amp;aacute;genes para poder mostrarlas nuevamente de manera m&amp;aacute;s eficiente. Cuando Emacs muestra una imagen, busca en la cach&amp;eacute; de im&amp;aacute;genes una especificaci&amp;oacute;n de imagen existente &lt;code&gt;equal&lt;/code&gt; a la especificaci&amp;oacute;n deseada. Si se encuentra una coincidencia, la imagen se muestra desde la cach&amp;eacute;. De lo contrario, Emacs carga la imagen normalmente.</target>
        </trans-unit>
        <trans-unit id="ac8f11976d61b957a0c5a1b9f2a8f7cf546ad3fc" translate="yes" xml:space="preserve">
          <source>Emacs calls this function when it loads a module. If a module does not export a function named &lt;code&gt;emacs_module_init&lt;/code&gt;, trying to load the module will signal an error. The initialization function should return zero if the initialization succeeds, non-zero otherwise. In the latter case, Emacs will signal an error, and the loading of the module will fail. If the user presses</source>
          <target state="translated">Emacs llama a esta funci&amp;oacute;n cuando carga un m&amp;oacute;dulo. Si un m&amp;oacute;dulo no exporta una funci&amp;oacute;n llamada &lt;code&gt;emacs_module_init&lt;/code&gt; , intentar cargar el m&amp;oacute;dulo indicar&amp;aacute; un error. La funci&amp;oacute;n de inicializaci&amp;oacute;n deber&amp;iacute;a devolver cero si la inicializaci&amp;oacute;n tiene &amp;eacute;xito, distinto de cero en caso contrario. En el &amp;uacute;ltimo caso, Emacs se&amp;ntilde;alar&amp;aacute; un error y la carga del m&amp;oacute;dulo fallar&amp;aacute;. Si el usuario presiona</target>
        </trans-unit>
        <trans-unit id="d051a4f7d40fc5ccdbaf1d90ed27d0d62480fbe8" translate="yes" xml:space="preserve">
          <source>Emacs calls this hook immediately after it finishes applying file-local variables stored in &lt;code&gt;file-local-variables-alist&lt;/code&gt;.</source>
          <target state="translated">Emacs llama a este gancho inmediatamente despu&amp;eacute;s de que termina de aplicar las variables locales de &lt;code&gt;file-local-variables-alist&lt;/code&gt; almacenadas en file-local-variables-alist .</target>
        </trans-unit>
        <trans-unit id="56083beaeb39428f247633ac12153adf7d4a8c85" translate="yes" xml:space="preserve">
          <source>Emacs calls this hook immediately before applying file-local variables stored in &lt;code&gt;file-local-variables-alist&lt;/code&gt;.</source>
          <target state="translated">Emacs llama a este gancho inmediatamente antes de aplicar las variables locales de &lt;code&gt;file-local-variables-alist&lt;/code&gt; almacenadas en file-local-variables-alist .</target>
        </trans-unit>
        <trans-unit id="994084f8ffd608b58932604d3ee3fde3154ef225" translate="yes" xml:space="preserve">
          <source>Emacs calls this low-level primitive to load a module from the specified &lt;var&gt;file&lt;/var&gt; and perform the necessary initialization of the module. This is the primitive which makes sure the module exports the &lt;code&gt;plugin_is_GPL_compatible&lt;/code&gt; symbol, calls the module&amp;rsquo;s &lt;code&gt;emacs_module_init&lt;/code&gt; function, and signals an error if that function returns an error indication, or if the use typed</source>
          <target state="translated">Emacs llama a esta primitiva de bajo nivel para cargar un m&amp;oacute;dulo desde el &lt;var&gt;file&lt;/var&gt; especificado y realizar la inicializaci&amp;oacute;n necesaria del m&amp;oacute;dulo. Esta es la primitiva que asegura que el m&amp;oacute;dulo exporta el s&amp;iacute;mbolo &lt;code&gt;plugin_is_GPL_compatible&lt;/code&gt; , llama a la funci&amp;oacute;n &lt;code&gt;emacs_module_init&lt;/code&gt; del m&amp;oacute;dulo y se&amp;ntilde;ala un error si esa funci&amp;oacute;n devuelve una indicaci&amp;oacute;n de error, o si se escribe el uso</target>
        </trans-unit>
        <trans-unit id="2fe40b51a3b73298470a39c542e0813062a24338" translate="yes" xml:space="preserve">
          <source>Emacs can also load compiled dynamic modules: shared libraries that provide additional functionality for use in Emacs Lisp programs, just like a package written in Emacs Lisp would. When a dynamic module is loaded, Emacs calls a specially-named initialization function which the module needs to implement, and which exposes the additional functions and variables to Emacs Lisp programs.</source>
          <target state="translated">Emacs también puede cargar módulos dinámicos compilados:librerías compartidas que proporcionan funcionalidad adicional para su uso en programas Emacs Lisp,tal y como lo haría un paquete escrito en Emacs Lisp.Cuando se carga un módulo dinámico,Emacs llama a una función de inicialización especialmente nombrada que el módulo necesita implementar,y que expone las funciones y variables adicionales a los programas Emacs Lisp.</target>
        </trans-unit>
        <trans-unit id="3d190adff472803f8e07de877cbb7a54e73c7af8" translate="yes" xml:space="preserve">
          <source>Emacs can be compiled with built-in libxml2 support.</source>
          <target state="translated">El Emacs puede ser compilado con el soporte incorporado de libxml2.</target>
        </trans-unit>
        <trans-unit id="0d7e97dad016edbcfcb35167d07ce396bac6195d" translate="yes" xml:space="preserve">
          <source>Emacs can call this function at any time that it does redisplay or operates on menu data structures, so you should write it so it can safely be called at any time.</source>
          <target state="translated">Emacs puede llamar a esta función en cualquier momento en que se redistribuya u opere en estructuras de datos de menú,por lo que debe escribirla para que pueda ser llamada con seguridad en cualquier momento.</target>
        </trans-unit>
        <trans-unit id="da4487959604530250a24a92c5028e4b5764b43d" translate="yes" xml:space="preserve">
          <source>Emacs can communicate with serial ports. For interactive use,</source>
          <target state="translated">Los Emacs pueden comunicarse con los puertos serie.Para uso interactivo,</target>
        </trans-unit>
        <trans-unit id="40194130dc989f8e2573473aabb240f1bb557d6d" translate="yes" xml:space="preserve">
          <source>Emacs can convert between its internal representation of a character and the character&amp;rsquo;s codepoint in a specific charset. The following two functions support these conversions.</source>
          <target state="translated">Emacs puede convertir entre su representaci&amp;oacute;n interna de un personaje y el punto de c&amp;oacute;digo del personaje en un juego de caracteres espec&amp;iacute;fico. Las siguientes dos funciones apoyan estas conversiones.</target>
        </trans-unit>
        <trans-unit id="1317571357b6546c95aaab3bc497c2a51ff101b2" translate="yes" xml:space="preserve">
          <source>Emacs can convert unibyte text to multibyte; it can also convert multibyte text to unibyte, provided that the multibyte text contains only</source>
          <target state="translated">Emacs puede convertir el texto de unibyte en multibyte;también puede convertir el texto de multibyte en unibyte,siempre que el texto de multibyte contenga sólo</target>
        </trans-unit>
        <trans-unit id="560e70e6f372c6b3af7521a52ce8cab0bbbfe965" translate="yes" xml:space="preserve">
          <source>Emacs can copy the original file into a backup file, and then overwrite the original file with new contents. After this procedure, any other names (i.e., hard links) of the original file continue to refer to the current (updated) version of the file. The file&amp;rsquo;s owner and group will be unchanged.</source>
          <target state="translated">Emacs puede copiar el archivo original en un archivo de respaldo y luego sobrescribir el archivo original con contenido nuevo. Despu&amp;eacute;s de este procedimiento, cualquier otro nombre (es decir, v&amp;iacute;nculos f&amp;iacute;sicos) del archivo original continuar&amp;aacute; haciendo referencia a la versi&amp;oacute;n actual (actualizada) del archivo. El propietario y el grupo del archivo no se modificar&amp;aacute;n.</target>
        </trans-unit>
        <trans-unit id="0f833cba56a479063ae8f2626b69d0324b51cffa" translate="yes" xml:space="preserve">
          <source>Emacs can create encrypted network connections, using either built-in or external support. The built-in support uses the GnuTLS Transport Layer Security Library; see &lt;a href=&quot;https://www.gnu.org/software/gnutls/&quot;&gt;the GnuTLS project page&lt;/a&gt;. If your Emacs was compiled with GnuTLS support, the function &lt;code&gt;gnutls-available-p&lt;/code&gt; is defined and returns non-&lt;code&gt;nil&lt;/code&gt;. For more details, see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs-gnutls/index.html#Top&quot;&gt;Overview&lt;/a&gt; in</source>
          <target state="translated">Emacs puede crear conexiones de red cifradas, utilizando soporte integrado o externo. El soporte integrado utiliza la biblioteca de seguridad de la capa de transporte GnuTLS; consulte &lt;a href=&quot;https://www.gnu.org/software/gnutls/&quot;&gt;la p&amp;aacute;gina del proyecto GnuTLS&lt;/a&gt; . Si su Emacs fue compilado con soporte GnuTLS, la funci&amp;oacute;n &lt;code&gt;gnutls-available-p&lt;/code&gt; est&amp;aacute; definida y devuelve un valor no &lt;code&gt;nil&lt;/code&gt; . Para obtener m&amp;aacute;s detalles, consulte &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs-gnutls/index.html#Top&quot;&gt;Descripci&amp;oacute;n general&lt;/a&gt; en</target>
        </trans-unit>
        <trans-unit id="6be55ca6ff3d86e43d75b0ff1dc1e469e9a9cf2b" translate="yes" xml:space="preserve">
          <source>Emacs can display a number of different image formats. Some of these image formats are supported only if particular support libraries are installed. On some platforms, Emacs can load support libraries on demand; if so, the variable &lt;code&gt;dynamic-library-alist&lt;/code&gt; can be used to modify the set of known names for these dynamic libraries. See &lt;a href=&quot;dynamic-libraries#Dynamic-Libraries&quot;&gt;Dynamic Libraries&lt;/a&gt;.</source>
          <target state="translated">Emacs puede mostrar varios formatos de imagen diferentes. Algunos de estos formatos de imagen son compatibles solo si se instalan bibliotecas de soporte espec&amp;iacute;ficas. En algunas plataformas, Emacs puede cargar bibliotecas de soporte a pedido; si es as&amp;iacute;, la variable &lt;code&gt;dynamic-library-alist&lt;/code&gt; se puede usar para modificar el conjunto de nombres conocidos para estas bibliotecas din&amp;aacute;micas. Consulte &lt;a href=&quot;dynamic-libraries#Dynamic-Libraries&quot;&gt;Bibliotecas din&amp;aacute;micas&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="78c99b060b46e1017b43612a4ede9c782ecfe198" translate="yes" xml:space="preserve">
          <source>Emacs can display text written in scripts, such as Arabic, Farsi, and Hebrew, whose natural ordering for horizontal text display runs from right to left. Furthermore, segments of Latin script and digits embedded in right-to-left text are displayed left-to-right, while segments of right-to-left script embedded in left-to-right text (e.g., Arabic or Hebrew text in comments or strings in a program source file) are appropriately displayed right-to-left. We call such mixtures of left-to-right and right-to-left text &lt;em&gt;bidirectional text&lt;/em&gt;. This section describes the facilities and options for editing and displaying bidirectional text.</source>
          <target state="translated">Emacs puede mostrar texto escrito en escrituras, como &amp;aacute;rabe, farsi y hebreo, cuyo orden natural para la visualizaci&amp;oacute;n de texto horizontal va de derecha a izquierda. Adem&amp;aacute;s, los segmentos de escritura latina y los d&amp;iacute;gitos incrustados en el texto de derecha a izquierda se muestran de izquierda a derecha, mientras que los segmentos de escritura de derecha a izquierda incrustados en el texto de izquierda a derecha (p. Ej., Texto &amp;aacute;rabe o hebreo en los comentarios) o cadenas en un archivo fuente de programa) se muestran apropiadamente de derecha a izquierda. Llamamos a estas mezclas de texto de izquierda a derecha y de derecha a izquierda texto &lt;em&gt;bidireccional&lt;/em&gt; . Esta secci&amp;oacute;n describe las funciones y opciones para editar y mostrar texto bidireccional.</target>
        </trans-unit>
        <trans-unit id="d60d2c50a0da2b1a3348170ffd2cb951a2fa1252" translate="yes" xml:space="preserve">
          <source>Emacs can do various things while idle: garbage collect, autosave or handle data from a subprocess. But these interludes during idleness do not interfere with idle timers, because they do not reset the clock of idleness to zero. An idle timer set for 600 seconds will run when ten minutes have elapsed since the last user command was finished, even if subprocess output has been accepted thousands of times within those ten minutes, and even if there have been garbage collections and autosaves.</source>
          <target state="translated">Los Emacs pueden hacer varias cosas mientras están inactivos:recoger basura,guardar o manejar datos de un subproceso.Pero estos interludios durante la inactividad no interfieren con los temporizadores de inactividad,porque no reajustan el reloj de la inactividad a cero.Un temporizador de inactividad establecido para 600 segundos se ejecutará cuando hayan transcurrido diez minutos desde que se terminó el último comando de usuario,incluso si la salida del subproceso ha sido aceptada miles de veces dentro de esos diez minutos,e incluso si ha habido recogida de basura y auto-guardado.</target>
        </trans-unit>
        <trans-unit id="e9d06e075d964cd9d7cd802340a86c56af0e03e1" translate="yes" xml:space="preserve">
          <source>Emacs can indicate the buffer boundaries&amp;mdash;that is, the first and last line in the buffer&amp;mdash;with angle icons when they appear on the screen. In addition, Emacs can display an up-arrow in the fringe to show that there is text above the screen, and a down-arrow to show there is text below the screen.</source>
          <target state="translated">Emacs puede indicar los l&amp;iacute;mites del b&amp;uacute;fer, es decir, la primera y la &amp;uacute;ltima l&amp;iacute;nea del b&amp;uacute;fer, con iconos de &amp;aacute;ngulo cuando aparecen en la pantalla. Adem&amp;aacute;s, Emacs puede mostrar una flecha hacia arriba en el margen para mostrar que hay texto encima de la pantalla y una flecha hacia abajo para mostrar que hay texto debajo de la pantalla.</target>
        </trans-unit>
        <trans-unit id="ee1ad9463e5b5996bde82c33ca18ac71261e7508" translate="yes" xml:space="preserve">
          <source>Emacs can list the names of the files in a directory as a Lisp list, or display the names in a buffer using the &lt;code&gt;ls&lt;/code&gt; shell command. In the latter case, it can optionally display information about each file, depending on the options passed to the &lt;code&gt;ls&lt;/code&gt; command.</source>
          <target state="translated">Emacs puede listar los nombres de los archivos en un directorio como una lista Lisp, o mostrar los nombres en un b&amp;uacute;fer usando el &lt;code&gt;ls&lt;/code&gt; shell. En el &amp;uacute;ltimo caso, opcionalmente puede mostrar informaci&amp;oacute;n sobre cada archivo, dependiendo de las opciones pasadas al comando &lt;code&gt;ls&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f742b9d1b7ebfbe69cdd55b7429ce465962460bb" translate="yes" xml:space="preserve">
          <source>Emacs can make use of scalable fonts, but by default it does not use them.</source>
          <target state="translated">Emacs puede hacer uso de fuentes escalables,pero por defecto no las utiliza.</target>
        </trans-unit>
        <trans-unit id="acd5f593fd50d61539d462200b38d12727a40b86" translate="yes" xml:space="preserve">
          <source>Emacs can optionally create &lt;em&gt;lexical bindings&lt;/em&gt;. A lexical binding has &lt;em&gt;lexical scope&lt;/em&gt;, meaning that any reference to the variable must be located textually within the binding construct&lt;a href=&quot;#FOOT9&quot; name=&quot;DOCF9&quot;&gt;&lt;sup&gt;9&lt;/sup&gt;&lt;/a&gt;. It also has &lt;em&gt;indefinite extent&lt;/em&gt;, meaning that under some circumstances the binding can live on even after the binding construct has finished executing, by means of special objects called &lt;em&gt;closures&lt;/em&gt;.</source>
          <target state="translated">Opcionalmente, Emacs puede crear &lt;em&gt;enlaces l&amp;eacute;xicos&lt;/em&gt; . Un enlace l&amp;eacute;xico tiene &lt;em&gt;alcance l&amp;eacute;xico&lt;/em&gt; , lo que significa que cualquier referencia a la variable debe ubicarse textualmente dentro de la construcci&amp;oacute;n de enlace &lt;a href=&quot;#FOOT9&quot; name=&quot;DOCF9&quot;&gt;&lt;sup&gt;9&lt;/sup&gt;&lt;/a&gt; . Tambi&amp;eacute;n tiene &lt;em&gt;un alcance indefinido&lt;/em&gt; , lo que significa que, en algunas circunstancias, el enlace puede seguir vivo incluso despu&amp;eacute;s de que la construcci&amp;oacute;n de enlace haya terminado de ejecutarse, mediante objetos especiales llamados &lt;em&gt;cierres&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="da39689f87fe15efb9007a8a526db9cb76639bf0" translate="yes" xml:space="preserve">
          <source>Emacs can rename the original file so that it becomes a backup file, and then write the buffer being saved into a new file. After this procedure, any other names (i.e., hard links) of the original file now refer to the backup file. The new file is owned by the user doing the editing, and its group is the default for new files written by the user in that directory.</source>
          <target state="translated">Emacs puede renombrar el archivo original para que se convierta en un archivo de respaldo,y luego escribir el buffer que se está guardando en un nuevo archivo.Después de este procedimiento,cualquier otro nombre (es decir,enlaces duros)del archivo original ahora se refiere al archivo de respaldo.El nuevo archivo es propiedad del usuario que lo edita,y su grupo es el predeterminado para los nuevos archivos escritos por el usuario en ese directorio.</target>
        </trans-unit>
        <trans-unit id="92347b1446515a39aef2cc0d76e15aad335abd34" translate="yes" xml:space="preserve">
          <source>Emacs can revert buffers automatically. It does that by default for buffers visiting files. The following describes how to add support for auto-reverting new types of buffers.</source>
          <target state="translated">Los Emacs pueden revertir los buffers automáticamente.Lo hace por defecto para los buffers que visitan los archivos.A continuación se describe cómo añadir soporte para la auto-reversión de nuevos tipos de búferes.</target>
        </trans-unit>
        <trans-unit id="71141f928dc729ca46b6a67b62e6c7f381518108" translate="yes" xml:space="preserve">
          <source>Emacs can send commands to many other applications, and applications should take care that strings sent as operands of these commands are not misinterpreted as directives. For example, when using a shell command to rename a file &lt;var&gt;a&lt;/var&gt; to &lt;var&gt;b&lt;/var&gt;, do not simply use the string &lt;code&gt;mv &lt;var&gt;a&lt;/var&gt; &lt;var&gt;b&lt;/var&gt;&lt;/code&gt;, because either file name might start with &amp;lsquo;</source>
          <target state="translated">Emacs puede enviar comandos a muchas otras aplicaciones, y las aplicaciones deben tener cuidado de que las cadenas enviadas como operandos de estos comandos no se malinterpreten como directivas. Por ejemplo, cuando use un comando de shell para cambiar el nombre de un archivo &lt;var&gt;a&lt;/var&gt; a &lt;var&gt;b&lt;/var&gt; , no use simplemente la cadena &lt;code&gt;mv &lt;var&gt;a&lt;/var&gt; &lt;var&gt;b&lt;/var&gt;&lt;/code&gt; , porque cualquiera de los nombres de archivo puede comenzar con '</target>
        </trans-unit>
        <trans-unit id="218f4eed23a4dbb836c096575e0773d62ff23a72" translate="yes" xml:space="preserve">
          <source>Emacs can use coding systems to decode keyboard input and encode terminal output. This is useful for terminals that transmit or display text using a particular encoding, such as Latin-1. Emacs does not set &lt;code&gt;last-coding-system-used&lt;/code&gt; when encoding or decoding terminal I/O.</source>
          <target state="translated">Emacs puede usar sistemas de codificaci&amp;oacute;n para decodificar la entrada del teclado y codificar la salida del terminal. Esto es &amp;uacute;til para terminales que transmiten o muestran texto usando una codificaci&amp;oacute;n particular, como Latin-1. Emacs no establece &lt;code&gt;last-coding-system-used&lt;/code&gt; al codificar o decodificar la E / S del terminal.</target>
        </trans-unit>
        <trans-unit id="1bb61c2a56d75a77f080b03fed07e83ed98821b1" translate="yes" xml:space="preserve">
          <source>Emacs cannot display the cursor when point is in the middle of a sequence of text that has the &lt;code&gt;display&lt;/code&gt; or &lt;code&gt;composition&lt;/code&gt; property, or is invisible. Therefore, after a command finishes and returns to the command loop, if point is within such a sequence, the command loop normally moves point to the edge of the sequence, making this sequence effectively intangible.</source>
          <target state="translated">Emacs no puede mostrar el cursor cuando el punto est&amp;aacute; en medio de una secuencia de texto que tiene la propiedad de &lt;code&gt;display&lt;/code&gt; o &lt;code&gt;composition&lt;/code&gt; , o es invisible. Por lo tanto, despu&amp;eacute;s de que un comando finaliza y regresa al ciclo de comando, si el punto est&amp;aacute; dentro de dicha secuencia, el ciclo de comando normalmente mueve el punto al borde de la secuencia, lo que hace que esta secuencia sea efectivamente intangible.</target>
        </trans-unit>
        <trans-unit id="d95b6dc098f282945ce76e8834176a488e9fb089" translate="yes" xml:space="preserve">
          <source>Emacs cannot run timers at any arbitrary point in a Lisp program; it can run them only when Emacs could accept output from a subprocess: namely, while waiting or inside certain primitive functions such as &lt;code&gt;sit-for&lt;/code&gt; or &lt;code&gt;read-event&lt;/code&gt; which &lt;em&gt;can&lt;/em&gt; wait. Therefore, a timer&amp;rsquo;s execution may be delayed if Emacs is busy. However, the time of execution is very precise if Emacs is idle.</source>
          <target state="translated">Emacs no puede ejecutar temporizadores en ning&amp;uacute;n punto arbitrario en un programa Lisp; puede ejecutarlos s&amp;oacute;lo cuando Emacs podr&amp;iacute;a aceptar la salida de un subproceso: es decir, mientras espera o dentro de ciertas funciones primitivas como &lt;code&gt;sit-for&lt;/code&gt; o &lt;code&gt;read-event&lt;/code&gt; que &lt;em&gt;pueden&lt;/em&gt; esperar. Por lo tanto, la ejecuci&amp;oacute;n de un temporizador puede retrasarse si Emacs est&amp;aacute; ocupado. Sin embargo, el tiempo de ejecuci&amp;oacute;n es muy preciso si Emacs est&amp;aacute; inactivo.</target>
        </trans-unit>
        <trans-unit id="4eff4458427c41b7747ae4a55172d7cdb18689c2" translate="yes" xml:space="preserve">
          <source>Emacs character codes are a superset of the Unicode standard. Values 0 through &lt;code&gt;#x10FFFF&lt;/code&gt; (1114111) correspond to Unicode characters of the same codepoint; values &lt;code&gt;#x110000&lt;/code&gt; (1114112) through &lt;code&gt;#x3FFF7F&lt;/code&gt; (4194175) represent characters that are not unified with Unicode; and values &lt;code&gt;#x3FFF80&lt;/code&gt; (4194176) through &lt;code&gt;#x3FFFFF&lt;/code&gt; (4194303) represent eight-bit raw bytes.</source>
          <target state="translated">Los c&amp;oacute;digos de caracteres de Emacs son un superconjunto del est&amp;aacute;ndar Unicode. Los valores de 0 a &lt;code&gt;#x10FFFF&lt;/code&gt; (1114111) corresponden a caracteres Unicode del mismo punto de c&amp;oacute;digo; los valores &lt;code&gt;#x110000&lt;/code&gt; (1114112) a &lt;code&gt;#x3FFF7F&lt;/code&gt; (4194175) representan caracteres que no est&amp;aacute;n unificados con Unicode; y los valores &lt;code&gt;#x3FFF80&lt;/code&gt; (4194176) a &lt;code&gt;#x3FFFFF&lt;/code&gt; (4194303) representan bytes sin formato de ocho bits.</target>
        </trans-unit>
        <trans-unit id="0831640b8122043518cd95fedf37a5e6306aceac" translate="yes" xml:space="preserve">
          <source>Emacs chooses the representation for a string based on the text from which it is constructed. The general rule is to convert unibyte text to multibyte text when combining it with other multibyte text, because the multibyte representation is more general and can hold whatever characters the unibyte text has.</source>
          <target state="translated">Emacs escoge la representación de una cadena basada en el texto a partir del cual se construye.La regla general es convertir el texto unibyte en texto multibyte cuando se combina con otro texto multibyte,porque la representación multibyte es más general y puede contener los caracteres que tenga el texto unibyte.</target>
        </trans-unit>
        <trans-unit id="f5ad25f8a992cb50da24bbff67e7ee574b817186" translate="yes" xml:space="preserve">
          <source>Emacs contains many keymaps, but at any time only a few keymaps are &lt;em&gt;active&lt;/em&gt;. When Emacs receives user input, it translates the input event (see &lt;a href=&quot;translation-keymaps#Translation-Keymaps&quot;&gt;Translation Keymaps&lt;/a&gt;), and looks for a key binding in the active keymaps.</source>
          <target state="translated">Emacs contiene muchos mapas de teclas, pero en cualquier momento solo unos pocos est&amp;aacute;n &lt;em&gt;activos&lt;/em&gt; . Cuando Emacs recibe la entrada del usuario, traduce el evento de entrada (consulte &lt;a href=&quot;translation-keymaps#Translation-Keymaps&quot;&gt;Mapas de teclas de traducci&amp;oacute;n&lt;/a&gt; ) y busca una combinaci&amp;oacute;n de teclas en los mapas de teclas activos.</target>
        </trans-unit>
        <trans-unit id="0b3d328f50bd5f37c94e899d7045b2092adf4eb5" translate="yes" xml:space="preserve">
          <source>Emacs cooperates with the window system by arranging to select frames as the server and window manager request. When a window system informs Emacs that one of its frames has been selected, Emacs internally generates a &lt;em&gt;focus-in&lt;/em&gt; event. When an Emacs frame is displayed on a text-terminal emulator, such as &lt;code&gt;xterm&lt;/code&gt;, which supports reporting of focus-change notification, the focus-in and focus-out events are available even for text-mode frames. Focus events are normally handled by &lt;code&gt;handle-focus-in&lt;/code&gt;.</source>
          <target state="translated">Emacs coopera con el sistema de ventanas organizando la selecci&amp;oacute;n de marcos como el servidor y el administrador de ventanas lo solicitan. Cuando un sistema de ventanas informa a Emacs que uno de sus marcos ha sido seleccionado, Emacs genera internamente un evento de &lt;em&gt;enfoque&lt;/em&gt; . Cuando se muestra un marco de Emacs en un emulador de terminal de texto, como &lt;code&gt;xterm&lt;/code&gt; , que admite informes de notificaci&amp;oacute;n de cambio de enfoque, los eventos de enfoque hacia adentro y hacia afuera est&amp;aacute;n disponibles incluso para marcos en modo texto. Los eventos de enfoque normalmente se manejan mediante &lt;code&gt;handle-focus-in&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="decb92d5658870e3309626c9af67cdd848bae26b" translate="yes" xml:space="preserve">
          <source>Emacs creates the initial frame before it reads your init file. After reading that file, Emacs checks &lt;code&gt;initial-frame-alist&lt;/code&gt;, and applies the parameter settings in the altered value to the already created initial frame.</source>
          <target state="translated">Emacs crea el marco inicial antes de leer su archivo de inicio. Despu&amp;eacute;s de leer ese archivo, Emacs verifica &lt;code&gt;initial-frame-alist&lt;/code&gt; y aplica la configuraci&amp;oacute;n de los par&amp;aacute;metros en el valor alterado al marco inicial ya creado.</target>
        </trans-unit>
        <trans-unit id="23a93d1bd02e3ce484932a878d36df2e6d418cc6" translate="yes" xml:space="preserve">
          <source>Emacs defines four types of array, all one-dimensional: &lt;em&gt;strings&lt;/em&gt; (see &lt;a href=&quot;string-type#String-Type&quot;&gt;String Type&lt;/a&gt;), &lt;em&gt;vectors&lt;/em&gt; (see &lt;a href=&quot;vector-type#Vector-Type&quot;&gt;Vector Type&lt;/a&gt;), &lt;em&gt;bool-vectors&lt;/em&gt; (see &lt;a href=&quot;bool_002dvector-type#Bool_002dVector-Type&quot;&gt;Bool-Vector Type&lt;/a&gt;), and &lt;em&gt;char-tables&lt;/em&gt; (see &lt;a href=&quot;char_002dtable-type#Char_002dTable-Type&quot;&gt;Char-Table Type&lt;/a&gt;). Vectors and char-tables can hold elements of any type, but strings can only hold characters, and bool-vectors can only hold &lt;code&gt;t&lt;/code&gt; and &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Emacs define cuatro tipos de matriz, todo lo que uno-dimensional: &lt;em&gt;cadenas&lt;/em&gt; (v&amp;eacute;ase &lt;a href=&quot;string-type#String-Type&quot;&gt;Tipo String&lt;/a&gt; ), &lt;em&gt;vectores&lt;/em&gt; (v&amp;eacute;ase &lt;a href=&quot;vector-type#Vector-Type&quot;&gt;Vector Tipo&lt;/a&gt; ), &lt;em&gt;bool-vectores&lt;/em&gt; (ver &lt;a href=&quot;bool_002dvector-type#Bool_002dVector-Type&quot;&gt;Bool-Vector Tipo&lt;/a&gt; ), y &lt;em&gt;Char-mesas&lt;/em&gt; (ver &lt;a href=&quot;char_002dtable-type#Char_002dTable-Type&quot;&gt;tabla de caracteres Tipo&lt;/a&gt; ). Vectores y Char-tablas pueden contener elementos de cualquier tipo, pero las cuerdas s&amp;oacute;lo pueden contener caracteres, y bool-vectores s&amp;oacute;lo pueden contener &lt;code&gt;t&lt;/code&gt; y &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3fb6415278ac71d7c8b8f161cc54b4109a3c312b" translate="yes" xml:space="preserve">
          <source>Emacs defines four types of array: strings, vectors, bool-vectors, and char-tables.</source>
          <target state="translated">Emacs define cuatro tipos de arreglos:cuerdas,vectores,bool-vectores y tablas de caracteres.</target>
        </trans-unit>
        <trans-unit id="69b92bb4de9ad4e6aed0127a5eb28f648d0f341c" translate="yes" xml:space="preserve">
          <source>Emacs defines several special character sets. The character set &lt;code&gt;unicode&lt;/code&gt; includes all the characters whose Emacs code points are in the range &lt;code&gt;0..#x10FFFF&lt;/code&gt;. The character set &lt;code&gt;emacs&lt;/code&gt; includes all</source>
          <target state="translated">Emacs define varios conjuntos de caracteres especiales. El juego de caracteres &lt;code&gt;unicode&lt;/code&gt; incluye todos los caracteres cuyos puntos de c&amp;oacute;digo Emacs est&amp;aacute;n en el rango &lt;code&gt;0..#x10FFFF&lt;/code&gt; . El conjunto de caracteres &lt;code&gt;emacs&lt;/code&gt; incluye todos</target>
        </trans-unit>
        <trans-unit id="e38592f3457c7cc383975bc89f28f869224040ae" translate="yes" xml:space="preserve">
          <source>Emacs displays each slice as a separate image, and allows more intuitive scrolling up/down, instead of jumping up/down the entire image when paging through a buffer that displays (large) images.</source>
          <target state="translated">Emacs muestra cada porción como una imagen separada,y permite un desplazamiento más intuitivo hacia arriba/abajo,en lugar de saltar hacia arriba/abajo toda la imagen cuando se busca a través de un buffer que muestra imágenes (grandes).</target>
        </trans-unit>
        <trans-unit id="7dd49b156766b4330d659f8045f63c75d768b611" translate="yes" xml:space="preserve">
          <source>Emacs displays the cursor, by default as a rectangular block, in each window at the position of that window&amp;rsquo;s point. When the user switches to another buffer in a window, Emacs moves that window&amp;rsquo;s cursor to where point is in that buffer. If the exact position of point is hidden behind some display element, such as a display string or an image, Emacs displays the cursor immediately before or after that display element.</source>
          <target state="translated">Emacs muestra el cursor, por defecto como un bloque rectangular, en cada ventana en la posici&amp;oacute;n del punto de esa ventana. Cuando el usuario cambia a otro b&amp;uacute;fer en una ventana, Emacs mueve el cursor de esa ventana a donde est&amp;aacute; el punto en ese b&amp;uacute;fer. Si la posici&amp;oacute;n exacta del punto est&amp;aacute; oculta detr&amp;aacute;s de alg&amp;uacute;n elemento de visualizaci&amp;oacute;n, como una cadena de visualizaci&amp;oacute;n o una imagen, Emacs muestra el cursor inmediatamente antes o despu&amp;eacute;s de ese elemento de visualizaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="90854d4c059273c80e35dfc3fee7ae76a16735a5" translate="yes" xml:space="preserve">
          <source>Emacs displays the keyboard menu with the map&amp;rsquo;s overall prompt string, followed by the alternatives (the item strings of the map&amp;rsquo;s bindings), in the echo area. If the bindings don&amp;rsquo;t all fit at once, the user can type</source>
          <target state="translated">Emacs muestra el men&amp;uacute; del teclado con la cadena de solicitud general del mapa, seguida de las alternativas (las cadenas de elementos de las vinculaciones del mapa), en el &amp;aacute;rea de eco. Si los enlaces no encajan todos a la vez, el usuario puede escribir</target>
        </trans-unit>
        <trans-unit id="8ee3e83e047b26f1bb5a4d367cc4242225a8e766" translate="yes" xml:space="preserve">
          <source>Emacs does not keep a queue of multiple reasons to call the sentinel of one process; it records just the current status and the fact that there has been a change. Therefore two changes in status, coming in quick succession, can call the sentinel just once. However, process termination will always run the sentinel exactly once. This is because the process status can&amp;rsquo;t change again after termination.</source>
          <target state="translated">Emacs no mantiene una cola de m&amp;uacute;ltiples razones para llamar al centinela de un proceso; registra solo el estado actual y el hecho de que ha habido un cambio. Por lo tanto, dos cambios de estado, que vienen en r&amp;aacute;pida sucesi&amp;oacute;n, pueden llamar al centinela solo una vez. Sin embargo, la terminaci&amp;oacute;n del proceso siempre ejecutar&amp;aacute; el centinela exactamente una vez. Esto se debe a que el estado del proceso no puede volver a cambiar despu&amp;eacute;s de la terminaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="dc4de755cdb7678344be0c9f2ef7ced9da16c291" translate="yes" xml:space="preserve">
          <source>Emacs explicitly checks for an expression as shown above in your init file; your login name must appear in the expression as a Lisp string constant. You can also use the Customize interface. Other methods of setting &lt;code&gt;inhibit-startup-echo-area-message&lt;/code&gt; to the same value do not inhibit the startup message. This way, you can easily inhibit the message for yourself if you wish, but thoughtless copying of your init file will not inhibit the message for someone else.</source>
          <target state="translated">Emacs comprueba expl&amp;iacute;citamente una expresi&amp;oacute;n como se muestra arriba en su archivo init; su nombre de inicio de sesi&amp;oacute;n debe aparecer en la expresi&amp;oacute;n como una constante de cadena Lisp. Tambi&amp;eacute;n puede utilizar la interfaz Personalizar. Otros m&amp;eacute;todos de establecer &lt;code&gt;inhibit-startup-echo-area-message&lt;/code&gt; con el mismo valor no inhiben el mensaje de inicio. De esta manera, puede inhibir f&amp;aacute;cilmente el mensaje por s&amp;iacute; mismo si lo desea, pero la copia irreflexiva de su archivo init no inhibir&amp;aacute; el mensaje para otra persona.</target>
        </trans-unit>
        <trans-unit id="42f3639833a767a937f1dcec0ae3d27fe7d4f78c" translate="yes" xml:space="preserve">
          <source>Emacs explicitly checks for output from the process before running the process sentinel. Once the sentinel runs due to process termination, no further output can arrive from the process.</source>
          <target state="translated">Emacs comprueba explícitamente la salida del proceso antes de ejecutar el proceso centinela.Una vez que el centinela se ejecuta debido a la terminación del proceso,no puede llegar ninguna otra salida del proceso.</target>
        </trans-unit>
        <trans-unit id="a4e4a4a8604d8c5f44f50b7eaee3b67be7cc2ae6" translate="yes" xml:space="preserve">
          <source>Emacs functions that add a new element to a history list can also delete old elements if the list gets too long. The variable &lt;code&gt;history-length&lt;/code&gt; specifies the maximum length for most history lists. To specify a different maximum length for a particular history list, put the length in the &lt;code&gt;history-length&lt;/code&gt; property of the history list symbol. The variable &lt;code&gt;history-delete-duplicates&lt;/code&gt; specifies whether to delete duplicates in history.</source>
          <target state="translated">Las funciones de Emacs que agregan un nuevo elemento a una lista hist&amp;oacute;rica tambi&amp;eacute;n pueden eliminar elementos antiguos si la lista es demasiado larga. La variable &lt;code&gt;history-length&lt;/code&gt; especifica la longitud m&amp;aacute;xima para la mayor&amp;iacute;a de las listas de historial. Para especificar una longitud m&amp;aacute;xima diferente para una lista de historial en particular, coloque la longitud en la propiedad &lt;code&gt;history-length&lt;/code&gt; del s&amp;iacute;mbolo de la lista de historial. La variable &lt;code&gt;history-delete-duplicates&lt;/code&gt; especifica si se eliminar&amp;aacute;n los duplicados en el historial.</target>
        </trans-unit>
        <trans-unit id="4716416f00dd279f5dd607a085f5d6d79ec84a0c" translate="yes" xml:space="preserve">
          <source>Emacs guarantees that the maximum required value of &lt;code&gt;*count&lt;/code&gt; never exceeds &lt;code&gt;min (PTRDIFF_MAX, SIZE_MAX) / sizeof
(emacs_limb_t)&lt;/code&gt;, so you can use &lt;code&gt;malloc (*count * sizeof *magnitude)&lt;/code&gt; to allocate the &lt;code&gt;magnitude&lt;/code&gt; array without worrying about integer overflow in the size calculation.</source>
          <target state="translated">Emacs garantiza que el valor m&amp;aacute;ximo requerido de &lt;code&gt;*count&lt;/code&gt; nunca excede &lt;code&gt;min (PTRDIFF_MAX, SIZE_MAX) / sizeof (emacs_limb_t)&lt;/code&gt; , por lo que puede usar &lt;code&gt;malloc (*count * sizeof *magnitude)&lt;/code&gt; para asignar la matriz de &lt;code&gt;magnitude&lt;/code&gt; sin preocuparse por el desbordamiento de enteros en el tama&amp;ntilde;o c&amp;aacute;lculo.</target>
        </trans-unit>
        <trans-unit id="6b7b23ca683cca53cbcc351dc973d57c5ba2c383" translate="yes" xml:space="preserve">
          <source>Emacs has built-in support for computing &lt;em&gt;cryptographic hashes&lt;/em&gt;. A cryptographic hash, or &lt;em&gt;checksum&lt;/em&gt;, is a digital fingerprint of a piece of data (e.g., a block of text) which can be used to check that you have an unaltered copy of that data.</source>
          <target state="translated">Emacs tiene soporte incorporado para computar &lt;em&gt;hashes criptogr&amp;aacute;ficos&lt;/em&gt; . Un hash criptogr&amp;aacute;fico, o &lt;em&gt;suma de comprobaci&amp;oacute;n&lt;/em&gt; , es una huella digital de un dato (p. Ej., Un bloque de texto) que se puede utilizar para comprobar que tiene una copia inalterada de esos datos.</target>
        </trans-unit>
        <trans-unit id="eca0f5332e43d15251cecdd9558e33fbb26dcd5c" translate="yes" xml:space="preserve">
          <source>Emacs has built-in support for this. To begin profiling, type</source>
          <target state="translated">Emacs tiene un soporte incorporado para esto.Para empezar a hacer el perfil,escriba</target>
        </trans-unit>
        <trans-unit id="e59efddf97737e44b038590b93e7af92d497ee8e" translate="yes" xml:space="preserve">
          <source>Emacs has customization and other variables with similar considerations. For example, if the variable &lt;code&gt;shell-file-name&lt;/code&gt; specifies a shell with nonstandard behavior, an Emacs-based application may misbehave.</source>
          <target state="translated">Emacs tiene personalizaci&amp;oacute;n y otras variables con consideraciones similares. Por ejemplo, si la variable &lt;code&gt;shell-file-name&lt;/code&gt; especifica un shell con comportamiento no est&amp;aacute;ndar, una aplicaci&amp;oacute;n basada en Emacs puede comportarse mal.</target>
        </trans-unit>
        <trans-unit id="d0db7329b8249a3f26dde80ed9599e46ebd35d35" translate="yes" xml:space="preserve">
          <source>Emacs has several functions that deal with passwords, e.g., &lt;code&gt;read-passwd&lt;/code&gt;. See &lt;a href=&quot;reading-a-password#Reading-a-Password&quot;&gt;Reading a Password&lt;/a&gt;. Although these functions do not attempt to broadcast passwords to the world, their implementations are not proof against determined attackers with access to Emacs internals. For example, even if Elisp code uses &lt;code&gt;clear-string&lt;/code&gt; to scrub a password from its memory after using it, remnants of the password may still reside in the garbage-collected free list. See &lt;a href=&quot;modifying-strings#Modifying-Strings&quot;&gt;Modifying Strings&lt;/a&gt;.</source>
          <target state="translated">Emacs tiene varias funciones que se ocupan de las contrase&amp;ntilde;as, por ejemplo, &lt;code&gt;read-passwd&lt;/code&gt; . Consulte &lt;a href=&quot;reading-a-password#Reading-a-Password&quot;&gt;Leer una contrase&amp;ntilde;a&lt;/a&gt; . Aunque estas funciones no intentan difundir contrase&amp;ntilde;as al mundo, sus implementaciones no son a prueba de atacantes determinados con acceso a los componentes internos de Emacs. Por ejemplo, incluso si el c&amp;oacute;digo de Elisp usa &lt;code&gt;clear-string&lt;/code&gt; para borrar una contrase&amp;ntilde;a de su memoria despu&amp;eacute;s de usarla, los restos de la contrase&amp;ntilde;a a&amp;uacute;n pueden residir en la lista libre de basura recolectada. Consulte &lt;a href=&quot;modifying-strings#Modifying-Strings&quot;&gt;Modificaci&amp;oacute;n de cadenas&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2d4202fc4d0303db75d85aad9409b4fc14f3d791" translate="yes" xml:space="preserve">
          <source>Emacs ignores all face attributes from the &lt;code&gt;mouse-face&lt;/code&gt; property that alter the text size (e.g., &lt;code&gt;:height&lt;/code&gt;, &lt;code&gt;:weight&lt;/code&gt;, and &lt;code&gt;:slant&lt;/code&gt;). Those attributes are always the same as for the unhighlighted text.</source>
          <target state="translated">Emacs ignora todos los atributos de la cara de la &lt;code&gt;mouse-face&lt;/code&gt; propiedad que alteran el tama&amp;ntilde;o del texto (por ejemplo, &lt;code&gt;:height&lt;/code&gt; , &lt;code&gt;:weight&lt;/code&gt; , y &lt;code&gt;:slant&lt;/code&gt; ). Esos atributos son siempre los mismos que para el texto sin resaltar.</target>
        </trans-unit>
        <trans-unit id="5faa39e22b5b9e6b70fa340f3f937b1c558d41df" translate="yes" xml:space="preserve">
          <source>Emacs includes a standard macro called &lt;code&gt;with-temp-buffer&lt;/code&gt; which expands into more or less the code shown above (see &lt;a href=&quot;current-buffer#Definition-of-with_002dtemp_002dbuffer&quot;&gt;Current Buffer&lt;/a&gt;). Several of the macros defined in this manual use &lt;code&gt;unwind-protect&lt;/code&gt; in this way.</source>
          <target state="translated">Emacs incluye una macro est&amp;aacute;ndar llamada &lt;code&gt;with-temp-buffer&lt;/code&gt; que se expande en m&amp;aacute;s o menos el c&amp;oacute;digo mostrado arriba (ver &lt;a href=&quot;current-buffer#Definition-of-with_002dtemp_002dbuffer&quot;&gt;Current Buffer&lt;/a&gt; ). Varias de las macros definidas en este manual utilizan &lt;code&gt;unwind-protect&lt;/code&gt; esta manera.</target>
        </trans-unit>
        <trans-unit id="3be04959a4a73f5846094512fe21b66b28793a3e" translate="yes" xml:space="preserve">
          <source>Emacs is able to display native widgets, such as GTK+ WebKit widgets, in Emacs buffers when it was built with the necessary support libraries and is running on a graphical terminal. To test whether Emacs supports display of embedded widgets, check that the &lt;code&gt;xwidget-internal&lt;/code&gt; feature is available (see &lt;a href=&quot;named-features#Named-Features&quot;&gt;Named Features&lt;/a&gt;).</source>
          <target state="translated">Emacs es capaz de mostrar widgets nativos, como los widgets GTK + WebKit, en b&amp;uacute;feres de Emacs cuando se cre&amp;oacute; con las bibliotecas de soporte necesarias y se ejecuta en una terminal gr&amp;aacute;fica. Para probar si Emacs admite la visualizaci&amp;oacute;n de widgets incrustados, verifique que la &lt;code&gt;xwidget-internal&lt;/code&gt; est&amp;eacute; disponible (consulte &lt;a href=&quot;named-features#Named-Features&quot;&gt;Funciones nombradas&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="7fb6e43305b1bbb4090ee8b7af8d46e47a9b6d11" translate="yes" xml:space="preserve">
          <source>Emacs is able to send &lt;em&gt;notifications&lt;/em&gt; on systems that support the freedesktop.org Desktop Notifications Specification and on MS-Windows. In order to use this functionality on POSIX hosts, Emacs must have been compiled with D-Bus support, and the &lt;code&gt;notifications&lt;/code&gt; library must be loaded. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/dbus/index.html#Top&quot;&gt;D-Bus&lt;/a&gt; in</source>
          <target state="translated">Emacs puede enviar &lt;em&gt;notificaciones&lt;/em&gt; en sistemas que admiten la Especificaci&amp;oacute;n de notificaciones de escritorio de freedesktop.org y en MS-Windows. Para usar esta funcionalidad en hosts POSIX, Emacs debe haber sido compilado con soporte D-Bus y la biblioteca de &lt;code&gt;notifications&lt;/code&gt; debe estar cargada. Ver &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/dbus/index.html#Top&quot;&gt;D-Bus&lt;/a&gt; en</target>
        </trans-unit>
        <trans-unit id="6c82d7724892492c38f9593a41f14fcca5af203f" translate="yes" xml:space="preserve">
          <source>Emacs is displaying the frame on a character-based terminal.</source>
          <target state="translated">Emacs está mostrando el cuadro en una terminal basada en caracteres.</target>
        </trans-unit>
        <trans-unit id="b2182126d9b9ddba21c09d5684ccb269a6e78276" translate="yes" xml:space="preserve">
          <source>Emacs is displaying the frame using MS-DOS direct screen writes.</source>
          <target state="translated">Emacs está mostrando el cuadro usando escritura de pantalla directa de MS-DOS.</target>
        </trans-unit>
        <trans-unit id="44765627efc8f89010449c0a9f3da8feaa76db08" translate="yes" xml:space="preserve">
          <source>Emacs is displaying the frame using X.</source>
          <target state="translated">Emacs está mostrando el cuadro usando X.</target>
        </trans-unit>
        <trans-unit id="a8e2a9a4a27495372ade66bfe4b5f63886de526b" translate="yes" xml:space="preserve">
          <source>Emacs is displaying the frame using native MS-Windows GUI.</source>
          <target state="translated">Emacs está mostrando el marco usando la GUI nativa de MS-Windows.</target>
        </trans-unit>
        <trans-unit id="b071b69063db39e82ec151d3de36f4c8c4a353c8" translate="yes" xml:space="preserve">
          <source>Emacs is displaying the frame using the Nextstep interface (used on GNUstep and macOS).</source>
          <target state="translated">Emacs está mostrando el marco usando la interfaz Nextstep (usada en GNUstep y macOS).</target>
        </trans-unit>
        <trans-unit id="5afc383039e5d768bd41d71e6c4706685d7421aa" translate="yes" xml:space="preserve">
          <source>Emacs is usually able to display images when it is run on a graphical terminal. Images cannot be displayed in a text terminal, on certain graphical terminals that lack the support for this, or if Emacs is compiled without image support. You can use the function &lt;code&gt;display-images-p&lt;/code&gt; to determine if images can in principle be displayed (see &lt;a href=&quot;display-feature-testing#Display-Feature-Testing&quot;&gt;Display Feature Testing&lt;/a&gt;).</source>
          <target state="translated">Emacs generalmente puede mostrar im&amp;aacute;genes cuando se ejecuta en un terminal gr&amp;aacute;fico. Las im&amp;aacute;genes no se pueden mostrar en un terminal de texto, en ciertos terminales gr&amp;aacute;ficos que carecen de soporte para esto, o si Emacs est&amp;aacute; compilado sin soporte de im&amp;aacute;genes. Puede utilizar la funci&amp;oacute;n &lt;code&gt;display-images-p&lt;/code&gt; para determinar si, en principio, se pueden mostrar im&amp;aacute;genes (consulte &lt;a href=&quot;display-feature-testing#Display-Feature-Testing&quot;&gt;Prueba de&lt;/a&gt; funciones de pantalla ).</target>
        </trans-unit>
        <trans-unit id="20d5a3e06646c394cc0872c5421edf765dc41006" translate="yes" xml:space="preserve">
          <source>Emacs keeps a flag called the &lt;em&gt;modified flag&lt;/em&gt; for each buffer, to record whether you have changed the text of the buffer. This flag is set to &lt;code&gt;t&lt;/code&gt; whenever you alter the contents of the buffer, and cleared to &lt;code&gt;nil&lt;/code&gt; when you save it. Thus, the flag shows whether there are unsaved changes. The flag value is normally shown in the mode line (see &lt;a href=&quot;mode-line-variables#Mode-Line-Variables&quot;&gt;Mode Line Variables&lt;/a&gt;), and controls saving (see &lt;a href=&quot;saving-buffers#Saving-Buffers&quot;&gt;Saving Buffers&lt;/a&gt;) and auto-saving (see &lt;a href=&quot;auto_002dsaving#Auto_002dSaving&quot;&gt;Auto-Saving&lt;/a&gt;).</source>
          <target state="translated">Emacs mantiene una bandera llamada bandera &lt;em&gt;modificada&lt;/em&gt; para cada b&amp;uacute;fer, para registrar si ha cambiado el texto del b&amp;uacute;fer. Este indicador se establece en &lt;code&gt;t&lt;/code&gt; cada vez que modifica el contenido del b&amp;uacute;fer y se borra en &lt;code&gt;nil&lt;/code&gt; cuando lo guarda. Por lo tanto, la bandera muestra si hay cambios sin guardar. El valor de la bandera normalmente se muestra en la l&amp;iacute;nea de modo (ver &lt;a href=&quot;mode-line-variables#Mode-Line-Variables&quot;&gt;Variables de la l&amp;iacute;nea de modo&lt;/a&gt; ) y controla el guardado (ver &lt;a href=&quot;saving-buffers#Saving-Buffers&quot;&gt;Guardar b&amp;uacute;fer&lt;/a&gt; ) y el guardado autom&amp;aacute;tico (ver &lt;a href=&quot;auto_002dsaving#Auto_002dSaving&quot;&gt;Guardar autom&amp;aacute;ticamente&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="1f6508afe4f7364bb84162c55aa6ec1f7edc81cf" translate="yes" xml:space="preserve">
          <source>Emacs keeps track of the start and end positions of the segments of text found during a search; this is called the &lt;em&gt;match data&lt;/em&gt;. Thanks to the match data, you can search for a complex pattern, such as a date in a mail message, and then extract parts of the match under control of the pattern.</source>
          <target state="translated">Emacs realiza un seguimiento de las posiciones inicial y final de los segmentos de texto encontrados durante una b&amp;uacute;squeda; esto se llama &lt;em&gt;datos de coincidencia&lt;/em&gt; . Gracias a los datos de coincidencia, puede buscar un patr&amp;oacute;n complejo, como una fecha en un mensaje de correo, y luego extraer partes de la coincidencia bajo el control del patr&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="0c6690bad1ceee8d9ed2098cbf0d23d2306a9b37" translate="yes" xml:space="preserve">
          <source>Emacs modifies every event it reads according to &lt;code&gt;extra-keyboard-modifiers&lt;/code&gt;, then translates it through &lt;code&gt;keyboard-translate-table&lt;/code&gt; (if applicable), before returning it from &lt;code&gt;read-event&lt;/code&gt;.</source>
          <target state="translated">Emacs modifica cada evento que lee de acuerdo con &lt;code&gt;extra-keyboard-modifiers&lt;/code&gt; , luego lo traduce a trav&amp;eacute;s de &lt;code&gt;keyboard-translate-table&lt;/code&gt; (si corresponde), antes de devolverlo desde &lt;code&gt;read-event&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="33e146ce39af7a489cb361dbc1e37c600789da32" translate="yes" xml:space="preserve">
          <source>Emacs never auto-adjusts the margins of any window after splitting or resizing it. It is the sole responsibility of any application setting this parameter to adjust the margins of this window as well as those of any new window that inherits this window&amp;rsquo;s margins due to a split. Both &lt;code&gt;window-configuration-change-hook&lt;/code&gt; and &lt;code&gt;window-size-change-functions&lt;/code&gt; (see &lt;a href=&quot;window-hooks#Window-Hooks&quot;&gt;Window Hooks&lt;/a&gt;) should be employed for this purpose.</source>
          <target state="translated">Emacs nunca ajusta autom&amp;aacute;ticamente los m&amp;aacute;rgenes de ninguna ventana despu&amp;eacute;s de dividirla o redimensionarla. Es responsabilidad exclusiva de cualquier aplicaci&amp;oacute;n que establezca este par&amp;aacute;metro ajustar los m&amp;aacute;rgenes de esta ventana, as&amp;iacute; como los de cualquier ventana nueva que herede los m&amp;aacute;rgenes de esta ventana debido a una divisi&amp;oacute;n. Tanto &lt;code&gt;window-configuration-change-hook&lt;/code&gt; y &lt;code&gt;window-size-change-functions&lt;/code&gt; (v&amp;eacute;ase &lt;a href=&quot;window-hooks#Window-Hooks&quot;&gt;Ventana Hooks&lt;/a&gt; ) deben ser empleados para este prop&amp;oacute;sito.</target>
        </trans-unit>
        <trans-unit id="731a5ccd4e119c3981a91156e4befc06a7253914" translate="yes" xml:space="preserve">
          <source>Emacs never reorders the text of a unibyte buffer, even if &lt;code&gt;bidi-display-reordering&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt; in the buffer. This is because unibyte buffers contain raw bytes, not characters, and thus lack the directionality properties required for reordering. Therefore, to test whether text in a buffer will be reordered for display, it is not enough to test the value of &lt;code&gt;bidi-display-reordering&lt;/code&gt; alone. The correct test is this:</source>
          <target state="translated">Emacs nunca reordena el texto de un b&amp;uacute;fer unibyte, incluso si &lt;code&gt;bidi-display-reordering&lt;/code&gt; no es &lt;code&gt;nil&lt;/code&gt; en el b&amp;uacute;fer. Esto se debe a que los b&amp;uacute;feres de unibyte contienen bytes sin procesar, no caracteres y, por lo tanto, carecen de las propiedades de direccionalidad necesarias para el reordenamiento. Por lo tanto, para probar si el texto en un b&amp;uacute;fer se reordenar&amp;aacute; para su visualizaci&amp;oacute;n, no es suficiente probar el valor de &lt;code&gt;bidi-display-reordering&lt;/code&gt; solo. La prueba correcta es esta:</target>
        </trans-unit>
        <trans-unit id="4d8a849bf06a7f6bc35485cd61775d653a4c2cd3" translate="yes" xml:space="preserve">
          <source>Emacs normally displays an error message when an error is signaled and not handled with &lt;code&gt;condition-case&lt;/code&gt;. While Edebug is active and executing instrumented code, it normally responds to all unhandled errors. You can customize this with the options &lt;code&gt;edebug-on-error&lt;/code&gt; and &lt;code&gt;edebug-on-quit&lt;/code&gt;; see &lt;a href=&quot;edebug-options#Edebug-Options&quot;&gt;Edebug Options&lt;/a&gt;.</source>
          <target state="translated">Emacs normalmente muestra un mensaje de error cuando se se&amp;ntilde;ala un error y no se maneja con &lt;code&gt;condition-case&lt;/code&gt; . Mientras Edebug est&amp;aacute; activo y ejecutando c&amp;oacute;digo instrumentado, normalmente responde a todos los errores no manejados. Puede personalizar esto con las opciones &lt;code&gt;edebug-on-error&lt;/code&gt; y &lt;code&gt;edebug-on-quit&lt;/code&gt; ; consulte &lt;a href=&quot;edebug-options#Edebug-Options&quot;&gt;Opciones de Edebug&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b6da4556a5726903beca496cf1774233562b267a" translate="yes" xml:space="preserve">
          <source>Emacs normally tries to redisplay the screen whenever it waits for input. With the following function, you can request an immediate attempt to redisplay, in the middle of Lisp code, without actually waiting for input.</source>
          <target state="translated">El Emacs normalmente intenta volver a mostrar la pantalla siempre que espera a que le den una entrada.Con la siguiente función,puede solicitar un intento inmediato de volver a mostrar,en medio del código de Lisp,sin esperar realmente a que se introduzcan datos.</target>
        </trans-unit>
        <trans-unit id="b3b77106c4f5fd19224cba19e42352426a30909e" translate="yes" xml:space="preserve">
          <source>Emacs notification</source>
          <target state="translated">Notificación al Emacs</target>
        </trans-unit>
        <trans-unit id="0d1349dea05c4f3f5117321a3ea3fe785f781605" translate="yes" xml:space="preserve">
          <source>Emacs often accesses the network, and you may want to configure it to avoid network accesses that it would normally do. For example, unless you set &lt;code&gt;tramp-mode&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;, file names using a certain syntax are interpreted as being network files, and are retrieved across the network. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/tramp/index.html#Top&quot;&gt;The Tramp Manual&lt;/a&gt; in</source>
          <target state="translated">Emacs a menudo accede a la red y es posible que desee configurarlo para evitar accesos a la red que normalmente har&amp;iacute;a. Por ejemplo, a menos que establezca &lt;code&gt;tramp-mode&lt;/code&gt; en &lt;code&gt;nil&lt;/code&gt; , los nombres de archivo que utilizan una determinada sintaxis se interpretan como archivos de red y se recuperan a trav&amp;eacute;s de la red. Ver &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/tramp/index.html#Top&quot;&gt;el manual del vagabundo&lt;/a&gt; en</target>
        </trans-unit>
        <trans-unit id="f28e36da35b0898ac321f9cb68d8a14bca74d8ce" translate="yes" xml:space="preserve">
          <source>Emacs often accesses the network, and you may want to configure it to avoid network accesses that it would normally do. For example, unless you set &lt;code&gt;tramp-mode&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;, file names using a certain syntax are interpreted as being network files, and are retrieved across the network. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/tramp/index.html#Top&quot;&gt;The Tramp Manual&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="581d858cf52872c9ad790c13ebef480b2798de3d" translate="yes" xml:space="preserve">
          <source>Emacs performs several steps to convert the data in a buffer (text, text properties, and possibly other information) to and from a representation suitable for storing into a file. This section describes the fundamental functions that perform this &lt;em&gt;format conversion&lt;/em&gt;, namely &lt;code&gt;insert-file-contents&lt;/code&gt; for reading a file into a buffer, and &lt;code&gt;write-region&lt;/code&gt; for writing a buffer into a file.</source>
          <target state="translated">Emacs realiza varios pasos para convertir los datos en un b&amp;uacute;fer (texto, propiedades del texto y posiblemente otra informaci&amp;oacute;n) hacia y desde una representaci&amp;oacute;n adecuada para almacenar en un archivo. Esta secci&amp;oacute;n describe las funciones fundamentales que realizan esta &lt;em&gt;conversi&amp;oacute;n de formato&lt;/em&gt; , a saber, &lt;code&gt;insert-file-contents&lt;/code&gt; de archivo para leer un archivo en un b&amp;uacute;fer y &lt;code&gt;write-region&lt;/code&gt; de escritura para escribir un b&amp;uacute;fer en un archivo.</target>
        </trans-unit>
        <trans-unit id="7ea6c4b1c250da2cff334a5b4482f568269fcc53" translate="yes" xml:space="preserve">
          <source>Emacs periodically saves all files that you are visiting; this is called &lt;em&gt;auto-saving&lt;/em&gt;. Auto-saving prevents you from losing more than a limited amount of work if the system crashes. By default, auto-saves happen every 300 keystrokes, or after around 30 seconds of idle time. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Auto-Save.html#Auto-Save&quot;&gt;Auto-Saving: Protection Against Disasters&lt;/a&gt; in</source>
          <target state="translated">Emacs guarda peri&amp;oacute;dicamente todos los archivos que est&amp;aacute; visitando; esto se denomina &lt;em&gt;guardado autom&amp;aacute;tico&lt;/em&gt; . El guardado autom&amp;aacute;tico evita que pierda m&amp;aacute;s de una cantidad limitada de trabajo si el sistema falla. De forma predeterminada, los guardados autom&amp;aacute;ticos se realizan cada 300 pulsaciones de teclas o despu&amp;eacute;s de unos 30 segundos de inactividad. Consulte &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Auto-Save.html#Auto-Save&quot;&gt;Ahorro autom&amp;aacute;tico: Protecci&amp;oacute;n contra desastres&lt;/a&gt; en</target>
        </trans-unit>
        <trans-unit id="b0b9c6f31488f83183798bedef49f3e9859cb9fa" translate="yes" xml:space="preserve">
          <source>Emacs periodically saves all files that you are visiting; this is called &lt;em&gt;auto-saving&lt;/em&gt;. Auto-saving prevents you from losing more than a limited amount of work if the system crashes. By default, auto-saves happen every 300 keystrokes, or after around 30 seconds of idle time. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Auto-Save.html#Auto-Save&quot;&gt;Auto-Saving: Protection Against Disasters&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df11fc994e2c3039bdad35c40cb0169c3b1f9d1d" translate="yes" xml:space="preserve">
          <source>Emacs provides a primitive that applications can use to detect instances of text whose bidirectional properties were overridden so as to make a left-to-right character display as if it were a right-to-left character, or vise versa.</source>
          <target state="translated">Emacs proporciona una primitiva que las aplicaciones pueden utilizar para detectar instancias de texto cuyas propiedades bidireccionales fueron anuladas para hacer que un carácter de izquierda a derecha se visualice como si fuera un carácter de derecha a izquierda,o viceversa.</target>
        </trans-unit>
        <trans-unit id="61baf7ab83dc2d8df21e9d0bdf661236de4fd609" translate="yes" xml:space="preserve">
          <source>Emacs provides a standard way to distribute Emacs Lisp code to users. A &lt;em&gt;package&lt;/em&gt; is a collection of one or more files, formatted and bundled in such a way that users can easily download, install, uninstall, and upgrade it.</source>
          <target state="translated">Emacs proporciona una forma est&amp;aacute;ndar de distribuir el c&amp;oacute;digo Emacs Lisp a los usuarios. Un &lt;em&gt;paquete&lt;/em&gt; es una colecci&amp;oacute;n de uno o m&amp;aacute;s archivos, formateados y empaquetados de tal manera que los usuarios pueden descargarlo, instalarlo, desinstalarlo y actualizarlo f&amp;aacute;cilmente.</target>
        </trans-unit>
        <trans-unit id="8ada8068790b12baa9e1062244390495c315ecb6" translate="yes" xml:space="preserve">
          <source>Emacs provides a variety of built-in help functions, all accessible to the user as subcommands of the prefix</source>
          <target state="translated">Emacs proporciona una variedad de funciones de ayuda incorporadas,todas accesibles al usuario como subcomandos del prefijo</target>
        </trans-unit>
        <trans-unit id="43fb2f0b6d17066c5bd67b780eb98dc2c0cc5b60" translate="yes" xml:space="preserve">
          <source>Emacs provides access to variables in the operating system environment through various functions. These variables include the name of the system, the user&amp;rsquo;s</source>
          <target state="translated">Emacs proporciona acceso a variables en el entorno del sistema operativo a trav&amp;eacute;s de varias funciones. Estas variables incluyen el nombre del sistema, el usuario</target>
        </trans-unit>
        <trans-unit id="1d40bc6da91c5927b0dc8f18ad6ea9527ed5df47" translate="yes" xml:space="preserve">
          <source>Emacs provides another facility for such modes: you can quickly swap buffer text between two buffers with &lt;code&gt;buffer-swap-text&lt;/code&gt;. This function is very fast because it doesn&amp;rsquo;t move any text, it only changes the internal data structures of the buffer object to point to a different chunk of text. Using it, you can pretend that a group of two or more buffers are actually a single virtual buffer that holds the contents of all the individual buffers together.</source>
          <target state="translated">Emacs proporciona otra facilidad para tales modos: puede intercambiar r&amp;aacute;pidamente texto de b&amp;uacute;fer entre dos b&amp;uacute;feres con &lt;code&gt;buffer-swap-text&lt;/code&gt; . Esta funci&amp;oacute;n es muy r&amp;aacute;pida porque no mueve ning&amp;uacute;n texto, solo cambia las estructuras de datos internas del objeto de b&amp;uacute;fer para apuntar a un fragmento de texto diferente. Al usarlo, puede pretender que un grupo de dos o m&amp;aacute;s b&amp;uacute;feres es en realidad un solo b&amp;uacute;fer virtual que mantiene el contenido de todos los b&amp;uacute;feres individuales juntos.</target>
        </trans-unit>
        <trans-unit id="e9aaccb8205c4eac21637c315bcf99abffe5c37c" translate="yes" xml:space="preserve">
          <source>Emacs provides miscellaneous functions for finding the height and width of a window. The return value of many of these functions can be specified either in units of pixels or in units of lines and columns. On a graphical display, the latter actually correspond to the height and width of a default character specified by the frame&amp;rsquo;s default font as returned by &lt;code&gt;frame-char-height&lt;/code&gt; and &lt;code&gt;frame-char-width&lt;/code&gt; (see &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Frame Font&lt;/a&gt;). Thus, if a window is displaying text with a different font or size, the reported line height and column width for that window may differ from the actual number of text lines or columns displayed within it.</source>
          <target state="translated">Emacs proporciona varias funciones para encontrar la altura y el ancho de una ventana. El valor de retorno de muchas de estas funciones se puede especificar en unidades de p&amp;iacute;xeles o en unidades de l&amp;iacute;neas y columnas. En una pantalla gr&amp;aacute;fica, este &amp;uacute;ltimo corresponde en realidad a la altura y el ancho de un car&amp;aacute;cter predeterminado especificado por la fuente predeterminada del marco como lo devuelve &lt;code&gt;frame-char-height&lt;/code&gt; y &lt;code&gt;frame-char-width&lt;/code&gt; (ver &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Fuente del marco&lt;/a&gt; ). Por lo tanto, si una ventana muestra texto con una fuente o tama&amp;ntilde;o diferente, la altura de l&amp;iacute;nea y el ancho de columna informados para esa ventana pueden diferir del n&amp;uacute;mero real de l&amp;iacute;neas de texto o columnas que se muestran en ella.</target>
        </trans-unit>
        <trans-unit id="b1632c6565185e45338eacdf43142cda2977a1ea" translate="yes" xml:space="preserve">
          <source>Emacs provides several functions and primitives that return time, both elapsed and processor time, used by the Emacs process.</source>
          <target state="translated">Emacs proporciona varias funciones y primitivas que devuelven el tiempo,tanto el transcurrido como el del procesador,utilizado por el proceso Emacs.</target>
        </trans-unit>
        <trans-unit id="d46d6363e5a83deb2eb9ea6abf1be5990c469397" translate="yes" xml:space="preserve">
          <source>Emacs provides several primitives for accessing system processes. Not all platforms support these primitives; on those which don&amp;rsquo;t, these primitives return &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Emacs proporciona varias primitivas para acceder a los procesos del sistema. No todas las plataformas admiten estas primitivas; en los que no lo hacen, estos primitivos devuelven &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5dd098d236b6bd1b23e380080511f9e6289ec9ef" translate="yes" xml:space="preserve">
          <source>Emacs provides support for polymorphism. Like other Lisp environments, notably Common Lisp and its Common Lisp Object System (</source>
          <target state="translated">Emacs proporciona apoyo para el polimorfismo.Al igual que otros entornos de Lisp,en particular Common Lisp y su sistema de objetos Common Lisp (</target>
        </trans-unit>
        <trans-unit id="7e45b2565d3c6a45ec4a8ebbbda4c0e8bb3d845c" translate="yes" xml:space="preserve">
          <source>Emacs reads the file &lt;var&gt;filename&lt;/var&gt; from the</source>
          <target state="translated">Emacs lee el &lt;var&gt;filename&lt;/var&gt; del archivo del</target>
        </trans-unit>
        <trans-unit id="fa5f4104a9e9a2467fbc95628bbe7588c1e30307" translate="yes" xml:space="preserve">
          <source>Emacs redisplays only when it pauses. Usually, when you continue execution, the program re-enters Edebug at a breakpoint or after stepping, without pausing or reading input in between. In such cases, Emacs never gets a chance to redisplay the outside configuration. Consequently, what you see is the same window configuration as the last time Edebug was active, with no interruption.</source>
          <target state="translated">El Emacs sólo lo muestra cuando se detiene.Normalmente,cuando continúa la ejecución,el programa vuelve a entrar en Edebug en un punto de ruptura o después de un paso,sin pausa o lectura de entrada en medio.En tales casos,Emacs nunca tiene la oportunidad de volver a mostrar la configuración externa.En consecuencia,lo que se ve es la misma configuración de ventana que la última vez que Edebug estuvo activo,sin ninguna interrupción.</target>
        </trans-unit>
        <trans-unit id="f46dd8612b39986c03b492b88b8edc942b92aa81" translate="yes" xml:space="preserve">
          <source>Emacs represents each terminal as a &lt;em&gt;terminal object&lt;/em&gt; data type (see &lt;a href=&quot;terminal-type#Terminal-Type&quot;&gt;Terminal Type&lt;/a&gt;). On GNU and Unix systems, Emacs can use multiple terminals simultaneously in each session. On other systems, it can only use a single terminal. Each terminal object has the following attributes:</source>
          <target state="translated">Emacs representa cada terminal como un tipo de datos de &lt;em&gt;objeto de terminal&lt;/em&gt; (consulte &lt;a href=&quot;terminal-type#Terminal-Type&quot;&gt;Tipo de terminal&lt;/a&gt; ). En sistemas GNU y Unix, Emacs puede usar m&amp;uacute;ltiples terminales simult&amp;aacute;neamente en cada sesi&amp;oacute;n. En otros sistemas, solo puede utilizar un &amp;uacute;nico terminal. Cada objeto terminal tiene los siguientes atributos:</target>
        </trans-unit>
        <trans-unit id="aa45d2f9f0d5f594df92c4785fdb9ba7d0be0018" translate="yes" xml:space="preserve">
          <source>Emacs signals an error if &lt;var&gt;key&lt;/var&gt; is not a string or a vector.</source>
          <target state="translated">Emacs se&amp;ntilde;ala un error si la &lt;var&gt;key&lt;/var&gt; no es una cadena o un vector.</target>
        </trans-unit>
        <trans-unit id="5a189e87eddfeb2b6f9c9a05136525e5f7f54d44" translate="yes" xml:space="preserve">
          <source>Emacs sometimes generates &lt;em&gt;mouse motion&lt;/em&gt; events to describe motion of the mouse without any button activity. Mouse motion events are represented by lists that look like this:</source>
          <target state="translated">Emacs veces genera &lt;em&gt;el movimiento del rat&amp;oacute;n&lt;/em&gt; eventos para describir el movimiento del rat&amp;oacute;n sin ninguna actividad bot&amp;oacute;n. Los eventos de movimiento del mouse est&amp;aacute;n representados por listas que se ven as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="8cea986d9dde8997ae558d2415d06c4c0c311a90" translate="yes" xml:space="preserve">
          <source>Emacs stores the overlays of each buffer in two lists, divided around an arbitrary center position. One list extends backwards through the buffer from that center position, and the other extends forwards from that center position. The center position can be anywhere in the buffer.</source>
          <target state="translated">Emacs almacena las superposiciones de cada buffer en dos listas,divididas alrededor de una posición central arbitraria.Una lista se extiende hacia atrás a través de la memoria intermedia desde esa posición central,y la otra se extiende hacia adelante desde esa posición central.La posición central puede estar en cualquier lugar de la memoria intermedia.</target>
        </trans-unit>
        <trans-unit id="ad62c31e598a9d1f29a369781541a612009842a4" translate="yes" xml:space="preserve">
          <source>Emacs supplies two predefined values for this variable: &lt;code&gt;window-adjust-process-window-size-smallest&lt;/code&gt;, which returns the smallest of all the dimensions of the windows that display a process&amp;rsquo;s buffer; and &lt;code&gt;window-adjust-process-window-size-largest&lt;/code&gt;, which returns the largest dimensions. For more complex strategies, write your own function.</source>
          <target state="translated">Emacs proporciona dos valores predefinidos para esta variable: &lt;code&gt;window-adjust-process-window-size-smallest&lt;/code&gt; , que devuelve la m&amp;aacute;s peque&amp;ntilde;a de todas las dimensiones de las ventanas que muestran el b&amp;uacute;fer de un proceso; y &lt;code&gt;window-adjust-process-window-size-largest&lt;/code&gt; , que devuelve las dimensiones m&amp;aacute;s grandes. Para estrategias m&amp;aacute;s complejas, escriba su propia funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="61355fb31d5f838a8163a1a0717a06fbd8117c67" translate="yes" xml:space="preserve">
          <source>Emacs supports four kinds of mouse events: click events, drag events, button-down events, and motion events. All mouse events are represented as lists. The &lt;small&gt;CAR&lt;/small&gt; of the list is the event type; this says which mouse button was involved, and which modifier keys were used with it. The event type can also distinguish double or triple button presses (see &lt;a href=&quot;repeat-events#Repeat-Events&quot;&gt;Repeat Events&lt;/a&gt;). The rest of the list elements give position and time information.</source>
          <target state="translated">Emacs admite cuatro tipos de eventos de mouse: eventos de clic, eventos de arrastre, eventos de botones y eventos de movimiento. Todos los eventos del mouse se representan como listas. El &lt;small&gt;CAR&lt;/small&gt; de la lista es el tipo de evento; esto dice qu&amp;eacute; bot&amp;oacute;n del mouse estaba involucrado y qu&amp;eacute; teclas modificadoras se usaron con &amp;eacute;l. El tipo de evento tambi&amp;eacute;n puede distinguir las pulsaciones de botones dobles o triples (consulte &lt;a href=&quot;repeat-events#Repeat-Events&quot;&gt;Repetir eventos&lt;/a&gt; ). El resto de los elementos de la lista proporcionan informaci&amp;oacute;n sobre la posici&amp;oacute;n y el tiempo.</target>
        </trans-unit>
        <trans-unit id="6218bcff746da87fbb66fbec9ddb8a018bc5f549" translate="yes" xml:space="preserve">
          <source>Emacs supports saving state via a hook called &lt;code&gt;emacs-save-session-functions&lt;/code&gt;. Emacs runs this hook when the session manager tells it that the window system is shutting down. The functions are called with no arguments, and with the current buffer set to a temporary buffer. Each function can use &lt;code&gt;insert&lt;/code&gt; to add Lisp code to this buffer. At the end, Emacs saves the buffer in a file, called the &lt;em&gt;session file&lt;/em&gt;.</source>
          <target state="translated">Emacs soporta guardar el estado a trav&amp;eacute;s de un gancho llamado &lt;code&gt;emacs-save-session-functions&lt;/code&gt; . Emacs ejecuta este gancho cuando el administrador de sesiones le dice que el sistema de ventanas se est&amp;aacute; cerrando. Las funciones se llaman sin argumentos y con el b&amp;uacute;fer actual establecido en un b&amp;uacute;fer temporal. Cada funci&amp;oacute;n puede usar &lt;code&gt;insert&lt;/code&gt; ar para agregar c&amp;oacute;digo Lisp a este b&amp;uacute;fer. Al final, Emacs guarda el b&amp;uacute;fer en un archivo, llamado &lt;em&gt;archivo de sesi&amp;oacute;n&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="1ffa17ed9364f5575c0082d461c8f0e3489ecac2" translate="yes" xml:space="preserve">
          <source>Emacs supports several comment styles simultaneously in any one syntax table. A comment style is a set of flags &amp;lsquo;</source>
          <target state="translated">Emacs admite varios estilos de comentarios simult&amp;aacute;neamente en cualquier tabla de sintaxis. Un estilo de comentario es un conjunto de banderas '</target>
        </trans-unit>
        <trans-unit id="374f9fc9c7b543e09273805eabd95e1a26d66453" translate="yes" xml:space="preserve">
          <source>Emacs supports several common cryptographic hash algorithms: MD5, SHA-1, SHA-2, SHA-224, SHA-256, SHA-384 and SHA-512. MD5 is the oldest of these algorithms, and is commonly used in &lt;em&gt;message digests&lt;/em&gt; to check the integrity of messages transmitted over a network. MD5 and SHA-1 are not collision resistant (i.e., it is possible to deliberately design different pieces of data which have the same MD5 or SHA-1 hash), so you should not use them for anything security-related. For security-related applications you should use the other hash types, such as SHA-2 (e.g. &lt;code&gt;sha256&lt;/code&gt; or &lt;code&gt;sha512&lt;/code&gt;).</source>
          <target state="translated">Emacs admite varios algoritmos hash criptogr&amp;aacute;ficos comunes: MD5, SHA-1, SHA-2, SHA-224, SHA-256, SHA-384 y SHA-512. MD5 es el m&amp;aacute;s antiguo de estos algoritmos y se usa com&amp;uacute;nmente en &lt;em&gt;res&amp;uacute;menes de mensajes&lt;/em&gt; para verificar la integridad de los mensajes transmitidos a trav&amp;eacute;s de una red. MD5 y SHA-1 no son resistentes a colisiones (es decir, es posible dise&amp;ntilde;ar deliberadamente diferentes piezas de datos que tengan el mismo hash MD5 o SHA-1), por lo que no debe usarlos para nada relacionado con la seguridad. Para las aplicaciones relacionadas con la seguridad, debe utilizar otros tipos de hash, como SHA-2 (por ejemplo, &lt;code&gt;sha256&lt;/code&gt; o &lt;code&gt;sha512&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="b7e49d60042c70b0537fcee92a3c84a52f433f6c" translate="yes" xml:space="preserve">
          <source>Emacs supports the X Session Management Protocol, which is used to suspend and restart applications. In the X Window System, a program called the &lt;em&gt;session manager&lt;/em&gt; is responsible for keeping track of the applications that are running. When the X server shuts down, the session manager asks applications to save their state, and delays the actual shutdown until they respond. An application can also cancel the shutdown.</source>
          <target state="translated">Emacs admite el protocolo de administraci&amp;oacute;n de sesiones X, que se utiliza para suspender y reiniciar aplicaciones. En el sistema X Window, un programa llamado &lt;em&gt;administrador de sesiones&lt;/em&gt; es responsable de realizar un seguimiento de las aplicaciones que se est&amp;aacute;n ejecutando. Cuando el servidor X se apaga, el administrador de sesiones pide a las aplicaciones que guarden su estado y retrasa el apagado real hasta que responden. Una aplicaci&amp;oacute;n tambi&amp;eacute;n puede cancelar el cierre.</target>
        </trans-unit>
        <trans-unit id="89f5a42afa1af03f9d3097e4024bf58ff39a6001" translate="yes" xml:space="preserve">
          <source>Emacs then searches every Lisp file in the content directory for autoload magic comments (see &lt;a href=&quot;autoload#Autoload&quot;&gt;Autoload&lt;/a&gt;). These autoload definitions are saved to a file named</source>
          <target state="translated">Luego, Emacs busca en cada archivo Lisp en el directorio de contenido los comentarios m&amp;aacute;gicos de carga autom&amp;aacute;tica (consulte &lt;a href=&quot;autoload#Autoload&quot;&gt;Carga autom&amp;aacute;tica&lt;/a&gt; ). Estas definiciones de carga autom&amp;aacute;tica se guardan en un archivo llamado</target>
        </trans-unit>
        <trans-unit id="642da26f6d818f57222aa0ba6201c9a5f8e43253" translate="yes" xml:space="preserve">
          <source>Emacs tries to load the library from the files in the order they appear in the list; if none is found, the Emacs session won&amp;rsquo;t have access to that library, and the features it provides will be unavailable.</source>
          <target state="translated">Emacs intenta cargar la biblioteca desde los archivos en el orden en que aparecen en la lista; si no se encuentra ninguno, la sesi&amp;oacute;n de Emacs no tendr&amp;aacute; acceso a esa biblioteca y las funciones que proporciona no estar&amp;aacute;n disponibles.</target>
        </trans-unit>
        <trans-unit id="6ec424687522d88149cabb8e9ff0c17e4a8a1445" translate="yes" xml:space="preserve">
          <source>Emacs uses the word &amp;ldquo;window&amp;rdquo; with a different meaning than in graphical desktop environments and window systems, such as the X Window System. When Emacs is run on X, each of its graphical X windows is an Emacs frame (containing one or more Emacs windows). When Emacs is run on a text terminal, the frame fills the entire terminal screen.</source>
          <target state="translated">Emacs usa la palabra &amp;ldquo;ventana&amp;rdquo; con un significado diferente al de los entornos gr&amp;aacute;ficos de escritorio y los sistemas de ventanas, como el sistema X Window. Cuando Emacs se ejecuta en X, cada una de sus ventanas X gr&amp;aacute;ficas es un marco de Emacs (que contiene una o m&amp;aacute;s ventanas de Emacs). Cuando Emacs se ejecuta en un terminal de texto, el marco ocupa toda la pantalla del terminal.</target>
        </trans-unit>
        <trans-unit id="6739d8fc92b7ea45c67f23811c8b9230bc3d4cae" translate="yes" xml:space="preserve">
          <source>Emacs uses this function internally when it loads directory variables from a &lt;code&gt;.dir-locals.el&lt;/code&gt; file. In that case, the optional argument &lt;var&gt;mtime&lt;/var&gt; holds the file modification time (as returned by &lt;code&gt;file-attributes&lt;/code&gt;). Emacs uses this time to check stored local variables are still valid. If you are assigning a class directly, not via a file, this argument should be &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Emacs usa esta funci&amp;oacute;n internamente cuando carga variables de directorio desde un archivo &lt;code&gt;.dir-locals.el&lt;/code&gt; . En ese caso, el argumento opcional &lt;var&gt;mtime&lt;/var&gt; contiene el tiempo de modificaci&amp;oacute;n del archivo (como lo devuelven &lt;code&gt;file-attributes&lt;/code&gt; ). Emacs utiliza este tiempo para comprobar que las variables locales almacenadas siguen siendo v&amp;aacute;lidas. Si est&amp;aacute; asignando una clase directamente, no a trav&amp;eacute;s de un archivo, este argumento debe ser &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8a5eb29ea0683f15f88a024cecd03f16a4045817" translate="yes" xml:space="preserve">
          <source>Emacs uses two variables to store the prefix argument: &lt;code&gt;prefix-arg&lt;/code&gt; and &lt;code&gt;current-prefix-arg&lt;/code&gt;. Commands such as &lt;code&gt;universal-argument&lt;/code&gt; that set up prefix arguments for other commands store them in &lt;code&gt;prefix-arg&lt;/code&gt;. In contrast, &lt;code&gt;current-prefix-arg&lt;/code&gt; conveys the prefix argument to the current command, so setting it has no effect on the prefix arguments for future commands.</source>
          <target state="translated">Emacs usa dos variables para almacenar el argumento del prefijo: &lt;code&gt;prefix-arg&lt;/code&gt; y &lt;code&gt;current-prefix-arg&lt;/code&gt; . Los comandos como &lt;code&gt;universal-argument&lt;/code&gt; que configuran argumentos de prefijo para otros comandos los almacenan en &lt;code&gt;prefix-arg&lt;/code&gt; . Por el contrario, &lt;code&gt;current-prefix-arg&lt;/code&gt; transmite el argumento de prefijo al comando actual, por lo que establecerlo no tiene ning&amp;uacute;n efecto sobre los argumentos de prefijo para comandos futuros.</target>
        </trans-unit>
        <trans-unit id="8322177991ff5a69ef8d70459eeede0c94874d69" translate="yes" xml:space="preserve">
          <source>Emacs usually shows a &lt;em&gt;menu bar&lt;/em&gt; at the top of each frame. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Menu-Bars.html#Menu-Bars&quot;&gt;Menu Bars&lt;/a&gt; in</source>
          <target state="translated">Emacs generalmente muestra una &lt;em&gt;barra de men&amp;uacute;&lt;/em&gt; en la parte superior de cada marco. Ver &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Menu-Bars.html#Menu-Bars&quot;&gt;barras de men&amp;uacute;&lt;/a&gt; en</target>
        </trans-unit>
        <trans-unit id="e20a8acad14546f712103458a94a51e9b75b1006" translate="yes" xml:space="preserve">
          <source>Emacs usually shows a &lt;em&gt;menu bar&lt;/em&gt; at the top of each frame. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Menu-Bars.html#Menu-Bars&quot;&gt;Menu Bars&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0558f3f8ca5ebcf9982d4420378522febddf9f12" translate="yes" xml:space="preserve">
          <source>Emacs versions before Emacs 22 did not have &lt;code&gt;delay-mode-hooks&lt;/code&gt;. Versions before 24 did not have &lt;code&gt;change-major-mode-after-body-hook&lt;/code&gt;. When user-implemented major modes do not use &lt;code&gt;run-mode-hooks&lt;/code&gt; and have not been updated to use these newer features, they won&amp;rsquo;t entirely follow these conventions: they may run the parent&amp;rsquo;s mode hook too early, or fail to run &lt;code&gt;after-change-major-mode-hook&lt;/code&gt;. If you encounter such a major mode, please correct it to follow these conventions.</source>
          <target state="translated">Las versiones de Emacs anteriores a Emacs 22 no ten&amp;iacute;an &lt;code&gt;delay-mode-hooks&lt;/code&gt; . Las versiones anteriores a la 24 no ten&amp;iacute;an &lt;code&gt;change-major-mode-after-body-hook&lt;/code&gt; . Cuando los modos principales implementados por el usuario no usan &lt;code&gt;run-mode-hooks&lt;/code&gt; y no se han actualizado para usar estas funciones m&amp;aacute;s nuevas, no seguir&amp;aacute;n por completo estas convenciones: pueden ejecutar el gancho del modo principal demasiado pronto o no se pueden ejecutar &lt;code&gt;after-change-major-mode-hook&lt;/code&gt; . Si encuentra un modo tan importante, corr&amp;iacute;jalo para seguir estas convenciones.</target>
        </trans-unit>
        <trans-unit id="2175b4ca0a4ab5a7e1e6f75b7a977f193cc85367" translate="yes" xml:space="preserve">
          <source>Emacs will fail to decode</source>
          <target state="translated">El Emacs no podrá decodificar</target>
        </trans-unit>
        <trans-unit id="d4d48520a4e7157f1ff4ee50b46e94eaf663e2aa" translate="yes" xml:space="preserve">
          <source>Emacs will try to keep the position ratios of a child frame unaltered if that frame has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;keep-ratio&lt;/code&gt; parameter (see &lt;a href=&quot;frame-interaction-parameters#Frame-Interaction-Parameters&quot;&gt;Frame Interaction Parameters&lt;/a&gt;) and its parent frame is resized.</source>
          <target state="translated">Emacs intentar&amp;aacute; mantener inalteradas las proporciones de posici&amp;oacute;n de un marco hijo si ese marco tiene un par&amp;aacute;metro de &lt;code&gt;keep-ratio&lt;/code&gt; no sea &lt;code&gt;nil&lt;/code&gt; (consulte &lt;a href=&quot;frame-interaction-parameters#Frame-Interaction-Parameters&quot;&gt;Par&amp;aacute;metros de interacci&amp;oacute;n de marcos&lt;/a&gt; ) y su marco padre cambia de tama&amp;ntilde;o.</target>
        </trans-unit>
        <trans-unit id="b154a9be9b6bdf586b186816066bb36a405e4a4a" translate="yes" xml:space="preserve">
          <source>Emacs will try to keep the width and height ratio of a child frame unaltered if that frame has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;keep-ratio&lt;/code&gt; parameter (see &lt;a href=&quot;frame-interaction-parameters#Frame-Interaction-Parameters&quot;&gt;Frame Interaction Parameters&lt;/a&gt;) and its parent frame is resized.</source>
          <target state="translated">Emacs intentar&amp;aacute; mantener inalterada la proporci&amp;oacute;n de ancho y alto de un marco hijo si ese marco tiene un par&amp;aacute;metro de &lt;code&gt;keep-ratio&lt;/code&gt; no sea &lt;code&gt;nil&lt;/code&gt; (consulte &lt;a href=&quot;frame-interaction-parameters#Frame-Interaction-Parameters&quot;&gt;Par&amp;aacute;metros de interacci&amp;oacute;n de marcos&lt;/a&gt; ) y su marco padre cambia de tama&amp;ntilde;o.</target>
        </trans-unit>
        <trans-unit id="8f2ef7c37339106b409b42bf4c03ccef1510f3a8" translate="yes" xml:space="preserve">
          <source>Emacs works with several window systems, most notably the X Window System. Both Emacs and X use the term &amp;ldquo;window&amp;rdquo;, but use it differently. An Emacs frame is a single window as far as X is concerned; the individual Emacs windows are not known to X at all.</source>
          <target state="translated">Emacs trabaja con varios sistemas de ventanas, sobre todo el sistema X Window. Tanto Emacs como X usan el t&amp;eacute;rmino &quot;ventana&quot;, pero lo usan de manera diferente. Un marco de Emacs es una ventana &amp;uacute;nica en lo que respecta a X; X no conoce las ventanas individuales de Emacs.</target>
        </trans-unit>
        <trans-unit id="3e023f4f3837dfad4265ed79f1fcd67f57a3591f" translate="yes" xml:space="preserve">
          <source>Emacs&amp;rsquo;s Widget for Object Collections.</source>
          <target state="translated">Widget de Emacs para colecciones de objetos.</target>
        </trans-unit>
        <trans-unit id="259a61bf42871d8fc1aec61faab84f39ed26f1e8" translate="yes" xml:space="preserve">
          <source>Emacs&amp;rsquo;s advice system provides two sets of primitives for that: the core set, for function values held in variables and object fields (with the corresponding primitives being &lt;code&gt;add-function&lt;/code&gt; and &lt;code&gt;remove-function&lt;/code&gt;) and another set layered on top of it for named functions (with the main primitives being &lt;code&gt;advice-add&lt;/code&gt; and &lt;code&gt;advice-remove&lt;/code&gt;).</source>
          <target state="translated">El sistema de consejos de Emacs proporciona dos conjuntos de primitivas para eso: el conjunto b&amp;aacute;sico, para los valores de funci&amp;oacute;n que se encuentran en las variables y los campos de objeto (con las primitivas correspondientes que son &lt;code&gt;add-function&lt;/code&gt; y &lt;code&gt;remove-function&lt;/code&gt; ) y otro conjunto superpuesto para funciones con nombre ( siendo las principales primitivas &lt;code&gt;advice-add&lt;/code&gt; y &lt;code&gt;advice-remove&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="7eb4cad6bae56a3671fe38d9c59df33108242d4f" translate="yes" xml:space="preserve">
          <source>Emacs.&lt;var&gt;class&lt;/var&gt;</source>
          <target state="translated">Emacs.&lt;var&gt;class&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="772ce1b98bdf9ba1f907e4ebaefb6456ad036e1b" translate="yes" xml:space="preserve">
          <source>Emacs.&lt;var&gt;class&lt;/var&gt;.&lt;var&gt;subclass&lt;/var&gt;</source>
          <target state="translated">Emacs.&lt;var&gt;class&lt;/var&gt;.&lt;var&gt;subclass&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="14cd681004a41ed10438de0371e7e1d227d03f61" translate="yes" xml:space="preserve">
          <source>Embedded Native Widgets</source>
          <target state="translated">Widgets nativos incorporados</target>
        </trans-unit>
        <trans-unit id="9a7852d05e7baac38409e4f91c01b6dd940846da" translate="yes" xml:space="preserve">
          <source>Embedding breakpoints in source code.</source>
          <target state="translated">Incrustando puntos de ruptura en el código fuente.</target>
        </trans-unit>
        <trans-unit id="54cf6d6905ae6cd8bd43fbae70d64742d978021f" translate="yes" xml:space="preserve">
          <source>Emboss edge-detection uses a matrix of</source>
          <target state="translated">La detección de bordes en relieve utiliza una matriz de</target>
        </trans-unit>
        <trans-unit id="db0b559f4d5ae5e124f4899b893fbf4e32a596af" translate="yes" xml:space="preserve">
          <source>Empty matches do count, except that &lt;code&gt;split-string&lt;/code&gt; will not look for a final empty match when it already reached the end of the string using a non-empty match or when &lt;var&gt;string&lt;/var&gt; is empty:</source>
          <target state="translated">Las coincidencias vac&amp;iacute;as cuentan, excepto que &lt;code&gt;split-string&lt;/code&gt; no buscar&amp;aacute; una coincidencia vac&amp;iacute;a final cuando ya haya alcanzado el final de la cadena utilizando una coincidencia no vac&amp;iacute;a o cuando la &lt;var&gt;string&lt;/var&gt; est&amp;eacute; vac&amp;iacute;a:</target>
        </trans-unit>
        <trans-unit id="9d433804d09a2b55eeb29add415a821fb9c7f1c0" translate="yes" xml:space="preserve">
          <source>Emulating Mode Line Formatting</source>
          <target state="translated">Emulando el formato de la línea de modo</target>
        </trans-unit>
        <trans-unit id="16f497122ec781967c9cd6bac0e6090a9d12ada1" translate="yes" xml:space="preserve">
          <source>Enabling Auto Compression mode appends the suffixes in &lt;code&gt;jka-compr-load-suffixes&lt;/code&gt; to this list and disabling Auto Compression mode removes them again. The standard value of &lt;code&gt;load-file-rep-suffixes&lt;/code&gt; if Auto Compression mode is disabled is &lt;code&gt;(&quot;&quot;)&lt;/code&gt;. Given that the standard value of &lt;code&gt;jka-compr-load-suffixes&lt;/code&gt; is &lt;code&gt;(&quot;.gz&quot;)&lt;/code&gt;, the standard value of &lt;code&gt;load-file-rep-suffixes&lt;/code&gt; if Auto Compression mode is enabled is &lt;code&gt;(&quot;&quot; &quot;.gz&quot;)&lt;/code&gt;.</source>
          <target state="translated">Habilitar el modo de Auto Compresi&amp;oacute;n agrega los sufijos en &lt;code&gt;jka-compr-load-suffixes&lt;/code&gt; a esta lista y deshabilitar el modo de Auto Compresi&amp;oacute;n los elimina nuevamente. El valor est&amp;aacute;ndar de &lt;code&gt;load-file-rep-suffixes&lt;/code&gt; si el modo Auto Compression est&amp;aacute; desactivado es &lt;code&gt;(&quot;&quot;)&lt;/code&gt; . Dado que el valor est&amp;aacute;ndar de &lt;code&gt;jka-compr-load-suffixes&lt;/code&gt; es &lt;code&gt;(&quot;.gz&quot;)&lt;/code&gt; , el valor est&amp;aacute;ndar de &lt;code&gt;load-file-rep-suffixes&lt;/code&gt; si el modo de compresi&amp;oacute;n autom&amp;aacute;tica est&amp;aacute; habilitado es &lt;code&gt;(&quot;&quot; &quot;.gz&quot;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="97ea443a6ca1abd46f75c2ad8f1c051cf1f2375b" translate="yes" xml:space="preserve">
          <source>Enabling or disabling a minor mode twice in direct succession should not fail and should do the same thing as enabling or disabling it only once. In other words, the minor mode command should be idempotent.</source>
          <target state="translated">La activación o desactivación de un modo menor dos veces en sucesión directa no debe fallar y debe hacer lo mismo que la activación o desactivación de una sola vez.En otras palabras,el comando del modo menor debe ser idempotente.</target>
        </trans-unit>
        <trans-unit id="a3b1c1ae369f1075ad679993e89089772fd41d3c" translate="yes" xml:space="preserve">
          <source>Encoded text is not really text, as far as Emacs is concerned, but rather a sequence of raw 8-bit bytes. We call buffers and strings that hold encoded text &lt;em&gt;unibyte&lt;/em&gt; buffers and strings, because Emacs treats them as a sequence of individual bytes. Usually, Emacs displays unibyte buffers and strings as octal codes such as &lt;code&gt;\237&lt;/code&gt;. We recommend that you never use unibyte buffers and strings except for manipulating encoded text or binary non-text data.</source>
          <target state="translated">El texto codificado no es realmente texto, en lo que respecta a Emacs, sino m&amp;aacute;s bien una secuencia de bytes sin procesar de 8 bits. Llamamos b&amp;uacute;feres y cadenas que contienen cadenas y b&amp;uacute;feres &lt;em&gt;unibyte de&lt;/em&gt; texto codificado , porque Emacs los trata como una secuencia de bytes individuales. Por lo general, Emacs muestra b&amp;uacute;feres y cadenas unibyte como c&amp;oacute;digos octales como &lt;code&gt;\237&lt;/code&gt; . Recomendamos que nunca use cadenas y b&amp;uacute;feres unibyte, excepto para manipular texto codificado o datos binarios que no son de texto.</target>
        </trans-unit>
        <trans-unit id="bd7313ce1d017669659ef7e4ce9d21c10a5d020c" translate="yes" xml:space="preserve">
          <source>Encoding and I/O</source>
          <target state="translated">Codificación y E/S</target>
        </trans-unit>
        <trans-unit id="02f30c7d0f91b7195ed0ae6309a8ca548b2049c4" translate="yes" xml:space="preserve">
          <source>Encoding buffer text and then decoding the result can also fail to reproduce the original text. For instance, if you encode a character with a coding system which does not support that character, the result is unpredictable, and thus decoding it using the same coding system may produce a different text. Currently, Emacs can&amp;rsquo;t report errors that result from encoding unsupported characters.</source>
          <target state="translated">Codificar el texto del b&amp;uacute;fer y luego decodificar el resultado tambi&amp;eacute;n puede fallar al reproducir el texto original. Por ejemplo, si codifica un car&amp;aacute;cter con un sistema de codificaci&amp;oacute;n que no admite ese car&amp;aacute;cter, el resultado es impredecible y, por lo tanto, decodificarlo utilizando el mismo sistema de codificaci&amp;oacute;n puede producir un texto diferente. Actualmente, Emacs no puede reportar errores que resulten de la codificaci&amp;oacute;n de caracteres no admitidos.</target>
        </trans-unit>
        <trans-unit id="0d4bbb47556074532bed047220c876c7fbf6d672" translate="yes" xml:space="preserve">
          <source>Encoding or decoding text without doing I/O.</source>
          <target state="translated">Codificando o decodificando el texto sin hacer I/O.</target>
        </trans-unit>
        <trans-unit id="c49dfe38fa95a2d94187448bdd45b6ceb51fea26" translate="yes" xml:space="preserve">
          <source>End of buffer</source>
          <target state="translated">Fin del buffer</target>
        </trans-unit>
        <trans-unit id="22ed4aff93c21533cf773a985fc18a0a9d6075db" translate="yes" xml:space="preserve">
          <source>End of file during parsing</source>
          <target state="translated">Fin del archivo durante el análisis</target>
        </trans-unit>
        <trans-unit id="51a24f40f1dfdda0623dab9d3238f372be53712c" translate="yes" xml:space="preserve">
          <source>End the current subpath by connecting it back to its initial point. A line is drawn along the connection.</source>
          <target state="translated">Termina el actual subpath conectándolo de nuevo a su punto inicial.Se dibuja una línea a lo largo de la conexión.</target>
        </trans-unit>
        <trans-unit id="d83d52673aa258dada627130abd13b94143274cf" translate="yes" xml:space="preserve">
          <source>Ensuring you have tested all branches in your code.</source>
          <target state="translated">Asegurándose de que ha probado todas las ramas de su código.</target>
        </trans-unit>
        <trans-unit id="766315a2e77f28f51bb4338a661aed5831816a7e" translate="yes" xml:space="preserve">
          <source>Enter a recursive edit to deal with this question&amp;mdash;instead of any other action that would normally be taken.</source>
          <target state="translated">Ingrese una edici&amp;oacute;n recursiva para tratar esta pregunta, en lugar de cualquier otra acci&amp;oacute;n que normalmente se tomar&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="596cbfc7aa5284414bc7f90512c8bc54b1c78c11" translate="yes" xml:space="preserve">
          <source>Entering a recursive edit, and why you usually shouldn&amp;rsquo;t.</source>
          <target state="translated">Entrar en una edici&amp;oacute;n recursiva y por qu&amp;eacute; normalmente no deber&amp;iacute;a hacerlo.</target>
        </trans-unit>
        <trans-unit id="93c491ff8b6ed99eb7d8c488249b40da813b3e66" translate="yes" xml:space="preserve">
          <source>Entering it at a certain point in the program.</source>
          <target state="translated">Introduciéndolo en un punto determinado del programa.</target>
        </trans-unit>
        <trans-unit id="d14d5f3e4385e31fcb77f0c423677755e926fcc3" translate="yes" xml:space="preserve">
          <source>Entering it when a certain function is called.</source>
          <target state="translated">Introduciéndolo cuando se llama a una determinada función.</target>
        </trans-unit>
        <trans-unit id="ec57cd29307aa24142772c0c32253ccfca258554" translate="yes" xml:space="preserve">
          <source>Entering it when a variable is modified.</source>
          <target state="translated">Introduciéndolo cuando se modifica una variable.</target>
        </trans-unit>
        <trans-unit id="b4fb292744685eab3a4922e2a5ddda019c43db2a" translate="yes" xml:space="preserve">
          <source>Entering the Debugger on a Function Call</source>
          <target state="translated">Introducir el depurador en una llamada de función</target>
        </trans-unit>
        <trans-unit id="281d5c4d3f2ee8f959289903ff6d4cf7b9296934" translate="yes" xml:space="preserve">
          <source>Entering the Debugger on an Error</source>
          <target state="translated">Introducir el depurador en un error</target>
        </trans-unit>
        <trans-unit id="844887075a6009589b0868071d101e40cc28f3a9" translate="yes" xml:space="preserve">
          <source>Entering the debugger when a variable is modified</source>
          <target state="translated">Al entrar en el depurador cuando se modifica una variable</target>
        </trans-unit>
        <trans-unit id="9a16ed8e32b37737effa3241044834a8eb948bb3" translate="yes" xml:space="preserve">
          <source>Entering the debugger when an error happens.</source>
          <target state="translated">Entrar en el depurador cuando ocurre un error.</target>
        </trans-unit>
        <trans-unit id="09d7bf61bea73a703c7ae9aa3e0658c116885966" translate="yes" xml:space="preserve">
          <source>Entries in &lt;code&gt;local-function-key-map&lt;/code&gt; are ignored if they conflict with bindings made in the minor mode, local, or global keymaps. I.e., the remapping only applies if the original key sequence would otherwise not have any binding.</source>
          <target state="translated">Las entradas en &lt;code&gt;local-function-key-map&lt;/code&gt; se ignoran si entran en conflicto con las vinculaciones realizadas en los mapas de teclas del modo menor, local o global. Es decir, la reasignaci&amp;oacute;n solo se aplica si la secuencia de teclas original no tendr&amp;iacute;a ning&amp;uacute;n v&amp;iacute;nculo.</target>
        </trans-unit>
        <trans-unit id="8254ab2eb5612dc4ce1c103171c6b702da77f34a" translate="yes" xml:space="preserve">
          <source>Entry to Edebug for displaying something also saves and restores the following data (though some of them are deliberately not restored if an error or quit signal occurs).</source>
          <target state="translated">La entrada a Edebug para mostrar algo también guarda y restaura los siguientes datos (aunque algunos de ellos no se restauran deliberadamente si se produce un error o una señal de salida).</target>
        </trans-unit>
        <trans-unit id="79b3814747436fa5e36b284727f17f4584b2be36" translate="yes" xml:space="preserve">
          <source>Entry to the minibuffer binds this variable to the value of &lt;code&gt;minibuffer-help-form&lt;/code&gt; (see &lt;a href=&quot;minibuffer-misc#Definition-of-minibuffer_002dhelp_002dform&quot;&gt;Definition of minibuffer-help-form&lt;/a&gt;).</source>
          <target state="translated">La entrada al minib&amp;uacute;fer vincula esta variable al valor de &lt;code&gt;minibuffer-help-form&lt;/code&gt; (ver &lt;a href=&quot;minibuffer-misc#Definition-of-minibuffer_002dhelp_002dform&quot;&gt;Definici&amp;oacute;n de minibuffer-help-form&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="8403ba2a4a5aa9baffc30d3d46a39f555141e42f" translate="yes" xml:space="preserve">
          <source>Environment and configuration variables</source>
          <target state="translated">Variables de entorno y configuración</target>
        </trans-unit>
        <trans-unit id="c4de2199d0374144093362250edf386e9f468abf" translate="yes" xml:space="preserve">
          <source>Equality Predicates</source>
          <target state="translated">La igualdad predice</target>
        </trans-unit>
        <trans-unit id="834c979ef344d5fe417d910f8b66468831446066" translate="yes" xml:space="preserve">
          <source>Equality and inequality predicates.</source>
          <target state="translated">La igualdad y la desigualdad predicen.</target>
        </trans-unit>
        <trans-unit id="c8d0f04136312386813886250977d18ad026a2f1" translate="yes" xml:space="preserve">
          <source>Equivalent to &amp;lsquo;</source>
          <target state="translated">Equivalente a '</target>
        </trans-unit>
        <trans-unit id="fa647c1ab7e45907989ea68b5acf3879755d28ca" translate="yes" xml:space="preserve">
          <source>Error Messages</source>
          <target state="translated">Mensajes de error</target>
        </trans-unit>
        <trans-unit id="5a760c7fc538e175f1cfc5267b17003886b1f1cb" translate="yes" xml:space="preserve">
          <source>Error Symbols and Condition Names</source>
          <target state="translated">Símbolos de error y nombres de condición</target>
        </trans-unit>
        <trans-unit id="1f7f4fdf201c7b5f16e21bf03e3078b9a1c7771e" translate="yes" xml:space="preserve">
          <source>Error and warning messages from byte compilation are printed in a buffer named</source>
          <target state="translated">Los mensajes de error y de advertencia de la compilación de bytes se imprimen en un buffer llamado</target>
        </trans-unit>
        <trans-unit id="dfccb975dbeae0442fb778b970540719d3134c8b" translate="yes" xml:space="preserve">
          <source>Error signaling and handling have some resemblance to &lt;code&gt;throw&lt;/code&gt; and &lt;code&gt;catch&lt;/code&gt; (see &lt;a href=&quot;catch-and-throw#Catch-and-Throw&quot;&gt;Catch and Throw&lt;/a&gt;), but they are entirely separate facilities. An error cannot be caught by a &lt;code&gt;catch&lt;/code&gt;, and a &lt;code&gt;throw&lt;/code&gt; cannot be handled by an error handler (though using &lt;code&gt;throw&lt;/code&gt; when there is no suitable &lt;code&gt;catch&lt;/code&gt; signals an error that can be handled).</source>
          <target state="translated">La se&amp;ntilde;alizaci&amp;oacute;n y el manejo de errores tienen cierta semejanza con &lt;code&gt;throw&lt;/code&gt; y &lt;code&gt;catch&lt;/code&gt; (ver &lt;a href=&quot;catch-and-throw#Catch-and-Throw&quot;&gt;Atrapar y lanzar&lt;/a&gt; ), pero son instalaciones completamente separadas. Un error no puede ser detectado por una &lt;code&gt;catch&lt;/code&gt; , y un &lt;code&gt;throw&lt;/code&gt; no puede ser manejado por un manejador de errores (aunque usar &lt;code&gt;throw&lt;/code&gt; cuando no hay una &lt;code&gt;catch&lt;/code&gt; adecuada indica un error que se puede manejar).</target>
        </trans-unit>
        <trans-unit id="805e86a8cbf628e38e4c45612c005a504009e79a" translate="yes" xml:space="preserve">
          <source>Errors</source>
          <target state="translated">Errors</target>
        </trans-unit>
        <trans-unit id="9d0a10c2c2e113d5312e59894e38cc94f35e4f65" translate="yes" xml:space="preserve">
          <source>Errors in finalizers are printed to &lt;code&gt;*Messages*&lt;/code&gt;. Emacs runs a given finalizer object&amp;rsquo;s associated function exactly once, even if that function fails.</source>
          <target state="translated">Los errores en los finalizadores se imprimen en &lt;code&gt;*Messages*&lt;/code&gt; . Emacs ejecuta la funci&amp;oacute;n asociada de un objeto finalizador dado exactamente una vez, incluso si esa funci&amp;oacute;n falla.</target>
        </trans-unit>
        <trans-unit id="4db567f1da446be4a0e532bab664141df98a3c4f" translate="yes" xml:space="preserve">
          <source>Escape-syntax characters: &amp;lsquo;</source>
          <target state="translated">Caracteres de sintaxis de escape: '</target>
        </trans-unit>
        <trans-unit id="cf82113fd70beadf20192ff3e6d4d74b99c817ff" translate="yes" xml:space="preserve">
          <source>Establishing a local binding saves away the variable&amp;rsquo;s previous value (or lack of one). We say that the previous value is &lt;em&gt;shadowed&lt;/em&gt;. Both global and local values may be shadowed. If a local binding is in effect, using &lt;code&gt;setq&lt;/code&gt; on the local variable stores the specified value in the local binding. When that local binding is no longer in effect, the previously shadowed value (or lack of one) comes back.</source>
          <target state="translated">Establecer un enlace local guarda el valor anterior de la variable (o la falta de uno). Decimos que el valor anterior est&amp;aacute; &lt;em&gt;sombreado&lt;/em&gt; . Se pueden sombrear tanto los valores globales como los locales. Si hay un enlace local en vigor, el uso de &lt;code&gt;setq&lt;/code&gt; en la variable local almacena el valor especificado en el enlace local. Cuando ese enlace local ya no est&amp;aacute; en vigor, el valor previamente sombreado (o la falta de uno) regresa.</target>
        </trans-unit>
        <trans-unit id="e7b08833a45efab519f57833aec45127debfcb2b" translate="yes" xml:space="preserve">
          <source>Eval</source>
          <target state="translated">Eval</target>
        </trans-unit>
        <trans-unit id="51e8465ca0546c95a84fea0ae32a522b14322458" translate="yes" xml:space="preserve">
          <source>Eval:</source>
          <target state="translated">Eval:</target>
        </trans-unit>
        <trans-unit id="017bb101654ddccd6af97e1fb1a4a04d0dd0c6b5" translate="yes" xml:space="preserve">
          <source>Evaluate &lt;var&gt;bindings&lt;/var&gt; to a list of bindings as in &lt;code&gt;rx-let&lt;/code&gt;, and evaluate &lt;var&gt;body&lt;/var&gt; with those bindings in effect for calls to &lt;code&gt;rx-to-string&lt;/code&gt;.</source>
          <target state="translated">Eval&amp;uacute;e los &lt;var&gt;bindings&lt;/var&gt; a una lista de enlaces como en &lt;code&gt;rx-let&lt;/code&gt; , y eval&amp;uacute;e el &lt;var&gt;body&lt;/var&gt; con esos enlaces en efecto para las llamadas a &lt;code&gt;rx-to-string&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1b9783654f5c1c6a7ce0d518a3c7753257a3b28" translate="yes" xml:space="preserve">
          <source>Evaluate &lt;var&gt;expression&lt;/var&gt; to determine its value, &lt;var&gt;expval&lt;/var&gt;. Find the first clause in &lt;var&gt;clauses&lt;/var&gt; whose &lt;var&gt;pattern&lt;/var&gt; matches &lt;var&gt;expval&lt;/var&gt; and pass control to that clause&amp;rsquo;s &lt;var&gt;body-forms&lt;/var&gt;.</source>
          <target state="translated">Evaluar &lt;var&gt;expression&lt;/var&gt; para determinar su valor, &lt;var&gt;expval&lt;/var&gt; . Busque la primera cl&amp;aacute;usula en &lt;var&gt;clauses&lt;/var&gt; cuyo &lt;var&gt;pattern&lt;/var&gt; coincida con &lt;var&gt;expval&lt;/var&gt; y pase el control a las &lt;var&gt;body-forms&lt;/var&gt; esa cl&amp;aacute;usula .</target>
        </trans-unit>
        <trans-unit id="7acc8ce084889c04ea391fe80485a1141d6aba72" translate="yes" xml:space="preserve">
          <source>Evaluate &lt;var&gt;form&lt;/var&gt; and return its value, but inform coverage testing that &lt;var&gt;form&lt;/var&gt;&amp;rsquo;s value should always be the same.</source>
          <target state="translated">Eval&amp;uacute;e el &lt;var&gt;form&lt;/var&gt; ulario y devuelva su valor, pero informe a las pruebas de cobertura de que el valor del &lt;var&gt;form&lt;/var&gt; ulario siempre debe ser el mismo.</target>
        </trans-unit>
        <trans-unit id="a7a2ac4cbdbdccec325f508d425bb5f51d47991d" translate="yes" xml:space="preserve">
          <source>Evaluate &lt;var&gt;form&lt;/var&gt;, a Lisp expression, find the first &lt;var&gt;tag&lt;/var&gt; that matches it, and process its associated data layout specification &lt;var&gt;spec&lt;/var&gt;. Matching can occur in one of three ways:</source>
          <target state="translated">Eval&amp;uacute;e la &lt;var&gt;form&lt;/var&gt; a , una expresi&amp;oacute;n Lisp, busque la primera &lt;var&gt;tag&lt;/var&gt; que coincida con ella y procese su especificaci&amp;oacute;n de &lt;var&gt;spec&lt;/var&gt; dise&amp;ntilde;o de datos asociada . El emparejamiento puede ocurrir de una de estas tres formas:</target>
        </trans-unit>
        <trans-unit id="0a7f623e6b41e2cb816551108409e841a3217f90" translate="yes" xml:space="preserve">
          <source>Evaluate &lt;var&gt;form&lt;/var&gt;, a Lisp expression, for side-effect only. If the field name is specified, the value is bound to that field name.</source>
          <target state="translated">Eval&amp;uacute;e la &lt;var&gt;form&lt;/var&gt; a , una expresi&amp;oacute;n Lisp, solo para efectos secundarios. Si se especifica el nombre de campo, el valor est&amp;aacute; vinculado a ese nombre de campo.</target>
        </trans-unit>
        <trans-unit id="580ad2e14e2540c83fc1feadb6dbd64861f6a26e" translate="yes" xml:space="preserve">
          <source>Evaluate &lt;var&gt;form&lt;/var&gt;, informing coverage testing that &lt;var&gt;form&lt;/var&gt; should never return. If it ever does return, you get a run-time error.</source>
          <target state="translated">Eval&amp;uacute;e el &lt;var&gt;form&lt;/var&gt; ulario , informando a las pruebas de cobertura que el &lt;var&gt;form&lt;/var&gt; ulario nunca debe regresar. Si alguna vez regresa, obtendr&amp;aacute; un error de tiempo de ejecuci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="bba9f3f9dd3f430bb8581d609be73110636f4819" translate="yes" xml:space="preserve">
          <source>Evaluate expression &lt;var&gt;exp&lt;/var&gt; in the context of Edebug itself (&lt;code&gt;eval-expression&lt;/code&gt;).</source>
          <target state="translated">Evaluar expresi&amp;oacute;n &lt;var&gt;exp&lt;/var&gt; en el contexto de Edebug en s&amp;iacute; ( &lt;code&gt;eval-expression&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="853e1525137800a049ad2ae06d42889f8357df2d" translate="yes" xml:space="preserve">
          <source>Evaluate expression &lt;var&gt;exp&lt;/var&gt; in the context outside of Edebug (&lt;code&gt;edebug-eval-expression&lt;/code&gt;). That is, Edebug tries to minimize its interference with the evaluation.</source>
          <target state="translated">Eval&amp;uacute;e la expresi&amp;oacute;n &lt;var&gt;exp&lt;/var&gt; en el contexto fuera de Edebug ( &lt;code&gt;edebug-eval-expression&lt;/code&gt; ). Es decir, Edebug intenta minimizar su interferencia con la evaluaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="948bb7c2498b0b3612f9c4b4ad2d6630a5510c14" translate="yes" xml:space="preserve">
          <source>Evaluate the expression before point, in the context outside of Edebug (&lt;code&gt;edebug-eval-last-sexp&lt;/code&gt;).</source>
          <target state="translated">Eval&amp;uacute;e la expresi&amp;oacute;n antes del punto, en el contexto fuera de Edebug ( &lt;code&gt;edebug-eval-last-sexp&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f35818f832835c32b6fe2916269847d4edffa88c" translate="yes" xml:space="preserve">
          <source>Evaluate the expression before point, in the context outside of Edebug (&lt;code&gt;edebug-eval-last-sexp&lt;/code&gt;). With the prefix argument of zero (</source>
          <target state="translated">Eval&amp;uacute;e la expresi&amp;oacute;n antes del punto, en el contexto fuera de Edebug ( &lt;code&gt;edebug-eval-last-sexp&lt;/code&gt; ). Con el prefijo argumento de cero (</target>
        </trans-unit>
        <trans-unit id="231434026214c54f3d660e740912041c85fdfd39" translate="yes" xml:space="preserve">
          <source>Evaluate the expression before point, in the outside context, and insert the value in the buffer (&lt;code&gt;edebug-eval-print-last-sexp&lt;/code&gt;). With prefix argument of zero (</source>
          <target state="translated">Eval&amp;uacute;e la expresi&amp;oacute;n antes del punto, en el contexto externo, e inserte el valor en el b&amp;uacute;fer ( &lt;code&gt;edebug-eval-print-last-sexp&lt;/code&gt; ). Con argumento prefijo de cero (</target>
        </trans-unit>
        <trans-unit id="78278047bd4e3ea382ac8201e93db09cc8442bfd" translate="yes" xml:space="preserve">
          <source>Evaluate the interactive &lt;var&gt;spec&lt;/var&gt; just like an interactive call to a function with such a spec would, and then return the corresponding list of arguments that was built. E.g., &lt;code&gt;(advice-eval-interactive-spec &quot;r\nP&quot;)&lt;/code&gt; will return a list of three elements, containing the boundaries of the region and the current prefix argument.</source>
          <target state="translated">Eval&amp;uacute;e la &lt;var&gt;spec&lt;/var&gt; interactiva como lo har&amp;iacute;a una llamada interactiva a una funci&amp;oacute;n con dicha especificaci&amp;oacute;n, y luego devuelva la lista correspondiente de argumentos que se construy&amp;oacute;. Por ejemplo, &lt;code&gt;(advice-eval-interactive-spec &quot;r\nP&quot;)&lt;/code&gt; devolver&amp;aacute; una lista de tres elementos, que contienen los l&amp;iacute;mites de la regi&amp;oacute;n y el argumento del prefijo actual.</target>
        </trans-unit>
        <trans-unit id="c6f78c01d4848979b5b7c68ca6a35ed06ed99671" translate="yes" xml:space="preserve">
          <source>Evaluates &lt;var&gt;expr&lt;/var&gt; to get &lt;var&gt;exprval&lt;/var&gt; and matches if &lt;var&gt;exprval&lt;/var&gt; matches &lt;var&gt;pattern&lt;/var&gt;. (It is called &lt;code&gt;let&lt;/code&gt; because &lt;var&gt;pattern&lt;/var&gt; can bind symbols to values using &lt;var&gt;symbol&lt;/var&gt;.)</source>
          <target state="translated">Eval&amp;uacute;a &lt;var&gt;expr&lt;/var&gt; para obtener &lt;var&gt;exprval&lt;/var&gt; y coincide si &lt;var&gt;exprval&lt;/var&gt; coincide con el &lt;var&gt;pattern&lt;/var&gt; . (Se llama &lt;code&gt;let&lt;/code&gt; porque el &lt;var&gt;pattern&lt;/var&gt; puede vincular s&amp;iacute;mbolos a valores usando &lt;var&gt;symbol&lt;/var&gt; ).</target>
        </trans-unit>
        <trans-unit id="87d131c3ebb6c4f0c9cfdfe39480aa9ad4b173d6" translate="yes" xml:space="preserve">
          <source>Evaluating Macro Arguments Repeatedly</source>
          <target state="translated">Evaluando los macro argumentos repetidamente</target>
        </trans-unit>
        <trans-unit id="24421971dc29c855ec4d191995ceb56afdbc89a7" translate="yes" xml:space="preserve">
          <source>Evaluating Macro Arguments in Expansion</source>
          <target state="translated">Evaluación de los macroargumentos en la expansión</target>
        </trans-unit>
        <trans-unit id="2f1f505e20fcaf20af4daf55e87911ae35f25363" translate="yes" xml:space="preserve">
          <source>Evaluating a form may also make changes that persist; these changes are called &lt;em&gt;side effects&lt;/em&gt;. An example of a form that produces a side effect is &lt;code&gt;(setq foo 1)&lt;/code&gt;.</source>
          <target state="translated">La evaluaci&amp;oacute;n de un formulario tambi&amp;eacute;n puede generar cambios que persisten; estos cambios se denominan &lt;em&gt;efectos secundarios&lt;/em&gt; . Un ejemplo de una forma que produce un efecto secundario es &lt;code&gt;(setq foo 1)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2d61c182c806f0223ae98daf21330e85c522ce20" translate="yes" xml:space="preserve">
          <source>Evaluating body form &lt;code&gt;(list&amp;nbsp;e-num&amp;nbsp;o-num)&lt;/code&gt; signals error. To distinguish between sub-patterns, you can use another symbol, identical in name in all sub-patterns but differing in value. Reworking the above example:</source>
          <target state="translated">La evaluaci&amp;oacute;n de la forma del cuerpo &lt;code&gt;(list&amp;nbsp;e-num&amp;nbsp;o-num)&lt;/code&gt; indica error. Para distinguir entre subpatrones, puede utilizar otro s&amp;iacute;mbolo, id&amp;eacute;ntico en nombre en todos los subpatrones pero de diferente valor. Reelaboraci&amp;oacute;n del ejemplo anterior:</target>
        </trans-unit>
        <trans-unit id="3ae5bcbdd398a604619aaaeb51aa862b049a9d28" translate="yes" xml:space="preserve">
          <source>Evaluating expressions within Edebug.</source>
          <target state="translated">Evaluando las expresiones dentro de Edebug.</target>
        </trans-unit>
        <trans-unit id="b918e0a59fc48b390462dde69196db2b275b9e40" translate="yes" xml:space="preserve">
          <source>Evaluating forms in the order they appear is the most common way control passes from one form to another. In some contexts, such as in a function body, this happens automatically. Elsewhere you must use a control structure construct to do this: &lt;code&gt;progn&lt;/code&gt;, the simplest control construct of Lisp.</source>
          <target state="translated">Evaluar los formularios en el orden en que aparecen es la forma m&amp;aacute;s com&amp;uacute;n en que el control pasa de un formulario a otro. En algunos contextos, como en el cuerpo de una funci&amp;oacute;n, esto sucede autom&amp;aacute;ticamente. En otro lugar, debe usar una construcci&amp;oacute;n de estructura de control para hacer esto: &lt;code&gt;progn&lt;/code&gt; , la construcci&amp;oacute;n de control m&amp;aacute;s simple de Lisp.</target>
        </trans-unit>
        <trans-unit id="1f02356dc5a053f01ce62f7ea573a8acd290011b" translate="yes" xml:space="preserve">
          <source>Evaluating the preceding forms and typing, in any order,</source>
          <target state="translated">Evaluando las formas precedentes y tecleando,en cualquier orden,</target>
        </trans-unit>
        <trans-unit id="98fece8fcee58d0d1df092488c54d0e087d2e152" translate="yes" xml:space="preserve">
          <source>Evaluating this form in the buffer</source>
          <target state="translated">Evaluar esta forma en el buffer</target>
        </trans-unit>
        <trans-unit id="dcb390f68e265f8b977b81b6d105d4c08a08a6cb" translate="yes" xml:space="preserve">
          <source>Evaluating this form will usually display</source>
          <target state="translated">La evaluación de este formulario suele mostrar</target>
        </trans-unit>
        <trans-unit id="ff7513853508e7c6e3aa07908df2a450a026eb88" translate="yes" xml:space="preserve">
          <source>Evaluation</source>
          <target state="translated">Evaluation</target>
        </trans-unit>
        <trans-unit id="8ffcdfee5e7d21cf68ca5efead83afea63f2d8a0" translate="yes" xml:space="preserve">
          <source>Evaluation During Compilation</source>
          <target state="translated">Evaluación durante la compilación</target>
        </trans-unit>
        <trans-unit id="799e512ae5e7e3f329c10fa852a14d221c737ffd" translate="yes" xml:space="preserve">
          <source>Evaluation List Buffer</source>
          <target state="translated">Buffer de la lista de evaluación</target>
        </trans-unit>
        <trans-unit id="bb51b95ce0002371cb5ea49458cb059c57d93de5" translate="yes" xml:space="preserve">
          <source>Evaluation Notation</source>
          <target state="translated">Notación de evaluación</target>
        </trans-unit>
        <trans-unit id="9f0ba46ba13ef1f25d98af8b19fda50c29d37fe0" translate="yes" xml:space="preserve">
          <source>Evaluation in textual order.</source>
          <target state="translated">Evaluación en orden textual.</target>
        </trans-unit>
        <trans-unit id="29381319eaf57dc01242c3c13cbf345a9abbd540" translate="yes" xml:space="preserve">
          <source>Evaluation in the scheme of things.</source>
          <target state="translated">Evaluación en el esquema de las cosas.</target>
        </trans-unit>
        <trans-unit id="9a643d0c7814edf34f1de3bc48ce98cb63357e3a" translate="yes" xml:space="preserve">
          <source>Evaluation is a recursive process, and evaluating a form often involves evaluating parts within that form. For instance, when you evaluate a &lt;em&gt;function call&lt;/em&gt; form such as &lt;code&gt;(car x)&lt;/code&gt;, Emacs first evaluates the argument (the subform &lt;code&gt;x&lt;/code&gt;). After evaluating the argument, Emacs &lt;em&gt;executes&lt;/em&gt; the function (&lt;code&gt;car&lt;/code&gt;), and if the function is written in Lisp, execution works by evaluating the &lt;em&gt;body&lt;/em&gt; of the function (in this example, however, &lt;code&gt;car&lt;/code&gt; is not a Lisp function; it is a primitive function implemented in C). See &lt;a href=&quot;functions#Functions&quot;&gt;Functions&lt;/a&gt;, for more information about functions and function calls.</source>
          <target state="translated">La evaluaci&amp;oacute;n es un proceso recursivo y la evaluaci&amp;oacute;n de un formulario a menudo implica la evaluaci&amp;oacute;n de partes dentro de ese formulario. Por ejemplo, cuando eval&amp;uacute;a una forma de &lt;em&gt;llamada de funci&amp;oacute;n&lt;/em&gt; como &lt;code&gt;(car x)&lt;/code&gt; , Emacs primero eval&amp;uacute;a el argumento (la subformulario &lt;code&gt;x&lt;/code&gt; ). Despu&amp;eacute;s de evaluar el argumento, Emacs &lt;em&gt;ejecuta&lt;/em&gt; la funci&amp;oacute;n ( &lt;code&gt;car&lt;/code&gt; ), y si la funci&amp;oacute;n est&amp;aacute; escrita en Lisp, la ejecuci&amp;oacute;n funciona evaluando el &lt;em&gt;cuerpo&lt;/em&gt; de la funci&amp;oacute;n (en este ejemplo, sin embargo, &lt;code&gt;car&lt;/code&gt; no es una funci&amp;oacute;n Lisp; es una funci&amp;oacute;n primitiva implementado en C). Consulte &lt;a href=&quot;functions#Functions&quot;&gt;Funciones&lt;/a&gt; , para obtener m&amp;aacute;s informaci&amp;oacute;n sobre funciones y llamadas a funciones.</target>
        </trans-unit>
        <trans-unit id="d705973d35f23ad5de4704455dc325a9d4eb170b" translate="yes" xml:space="preserve">
          <source>Evaluation of Function Forms</source>
          <target state="translated">Evaluación de las formas de función</target>
        </trans-unit>
        <trans-unit id="5ce5fe6e895057f002660fd14290d646f73a8b54" translate="yes" xml:space="preserve">
          <source>Evaluation of the expression &lt;code&gt;(indent-relative nil)&lt;/code&gt; produces the following:</source>
          <target state="translated">La evaluaci&amp;oacute;n de la expresi&amp;oacute;n &lt;code&gt;(indent-relative nil)&lt;/code&gt; produce lo siguiente:</target>
        </trans-unit>
        <trans-unit id="7438669b48311d2f5b2747b9726e0fd9a708feb9" translate="yes" xml:space="preserve">
          <source>Evaluation of the macro call begins like evaluation of a function call except for one crucial difference: the macro arguments are the actual expressions appearing in the macro call. They are not evaluated before they are given to the macro definition. By contrast, the arguments of a function are results of evaluating the elements of the function call list.</source>
          <target state="translated">La evaluación de la llamada de macro comienza como la evaluación de una llamada de función,excepto por una diferencia crucial:los argumentos de macro son las expresiones reales que aparecen en la llamada de macro.No se evalúan antes de que se den a la definición de macro.Por el contrario,los argumentos de una función son los resultados de la evaluación de los elementos de la lista de llamada de la función.</target>
        </trans-unit>
        <trans-unit id="90d64dd1d645e502be2e3c08d30a8451f928949d" translate="yes" xml:space="preserve">
          <source>Evaluation takes place in a context called the &lt;em&gt;environment&lt;/em&gt;, which consists of the current values and bindings of all Lisp variables (see &lt;a href=&quot;variables#Variables&quot;&gt;Variables&lt;/a&gt;).&lt;a href=&quot;#FOOT7&quot; name=&quot;DOCF7&quot;&gt;&lt;sup&gt;7&lt;/sup&gt;&lt;/a&gt; Whenever a form refers to a variable without creating a new binding for it, the variable evaluates to the value given by the current environment. Evaluating a form may also temporarily alter the environment by binding variables (see &lt;a href=&quot;local-variables#Local-Variables&quot;&gt;Local Variables&lt;/a&gt;).</source>
          <target state="translated">La evaluaci&amp;oacute;n se lleva a cabo en un contexto llamado &lt;em&gt;entorno&lt;/em&gt; , que consta de los valores actuales y los enlaces de todas las variables Lisp (ver &lt;a href=&quot;variables#Variables&quot;&gt;Variables&lt;/a&gt; ). &lt;a href=&quot;#FOOT7&quot; name=&quot;DOCF7&quot;&gt;&lt;sup&gt;7&lt;/sup&gt;&lt;/a&gt; Siempre que un formulario se refiere a una variable sin crear un nuevo enlace para ella, la variable se eval&amp;uacute;a seg&amp;uacute;n el valor dado por el entorno actual. La evaluaci&amp;oacute;n de un formulario tambi&amp;eacute;n puede alterar temporalmente el entorno vinculando variables (consulte &lt;a href=&quot;local-variables#Local-Variables&quot;&gt;Variables locales&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="89441f5a56c1206182a2982f8b08988bca88d4b7" translate="yes" xml:space="preserve">
          <source>Even after a window is deleted, it continues to exist as a Lisp object, until there are no more references to it. Window deletion can be reversed, by restoring a saved window configuration (see &lt;a href=&quot;window-configurations#Window-Configurations&quot;&gt;Window Configurations&lt;/a&gt;).</source>
          <target state="translated">Incluso despu&amp;eacute;s de eliminar una ventana, contin&amp;uacute;a existiendo como un objeto Lisp, hasta que no haya m&amp;aacute;s referencias a ella. La eliminaci&amp;oacute;n de la ventana se puede revertir restaurando una configuraci&amp;oacute;n de ventana guardada (consulte &lt;a href=&quot;window-configurations#Window-Configurations&quot;&gt;Configuraciones de ventana&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="7f71e452bdad7f804fdef6528245b229c6279394" translate="yes" xml:space="preserve">
          <source>Even if &lt;var&gt;update&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;window-end&lt;/code&gt; does not attempt to scroll the display if point has moved off the screen, the way real redisplay would do. It does not alter the &lt;code&gt;window-start&lt;/code&gt; value. In effect, it reports where the displayed text will end if scrolling is not required. Note that the position it returns might be only partially visible.</source>
          <target state="translated">Incluso si la &lt;var&gt;update&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;window-end&lt;/code&gt; no intenta desplazarse por la pantalla si el punto se ha movido fuera de la pantalla, como lo har&amp;iacute;a la pantalla real. No altera el valor de &lt;code&gt;window-start&lt;/code&gt; la ventana . En efecto, informa d&amp;oacute;nde terminar&amp;aacute; el texto mostrado si no es necesario desplazarse. Tenga en cuenta que la posici&amp;oacute;n que devuelve puede ser solo parcialmente visible.</target>
        </trans-unit>
        <trans-unit id="85d0a91348426929c95737dda6bb8f3081e1106c" translate="yes" xml:space="preserve">
          <source>Even if you do not use &lt;code&gt;make-temp-file&lt;/code&gt; to create the temporary file, you should still use this variable to decide which directory to put the file in. However, if you expect the file to be small, you should use &lt;code&gt;small-temporary-file-directory&lt;/code&gt; first if that is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Incluso si no usa &lt;code&gt;make-temp-file&lt;/code&gt; para crear el archivo temporal, debe usar esta variable para decidir en qu&amp;eacute; directorio colocar el archivo. Sin embargo, si espera que el archivo sea peque&amp;ntilde;o, debe usar &lt;code&gt;small-temporary-file-directory&lt;/code&gt; primero si no es- &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="029e5f7d89c36acc32829e229969b89a54ce98c6" translate="yes" xml:space="preserve">
          <source>Even more powerful is &lt;code&gt;redraw-display&lt;/code&gt;:</source>
          <target state="translated">A&amp;uacute;n m&amp;aacute;s potente es &lt;code&gt;redraw-display&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="432fa854d420fdda2cde68b3678fc84324738837" translate="yes" xml:space="preserve">
          <source>Even though the code letter doesn&amp;rsquo;t use a prompt string, you must follow it with a newline if it is not the last code character in the string.</source>
          <target state="translated">Aunque la letra del c&amp;oacute;digo no usa una cadena de solicitud, debe seguirla con una nueva l&amp;iacute;nea si no es el &amp;uacute;ltimo car&amp;aacute;cter de c&amp;oacute;digo en la cadena.</target>
        </trans-unit>
        <trans-unit id="85560a7fc3cf7e747fea690e0afc513f6846e642" translate="yes" xml:space="preserve">
          <source>Even though this is not a normal hook, you can use &lt;code&gt;add-hook&lt;/code&gt; and &lt;code&gt;remove-hook&lt;/code&gt; to manipulate the list. See &lt;a href=&quot;hooks#Hooks&quot;&gt;Hooks&lt;/a&gt;.</source>
          <target state="translated">Aunque este no es un gancho normal, puede usar &lt;code&gt;add-hook&lt;/code&gt; y &lt;code&gt;remove-hook&lt;/code&gt; para manipular la lista. Ver &lt;a href=&quot;hooks#Hooks&quot;&gt;Ganchos&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="37dfaec8f5a98d8e1a6fff0d00abd7c86770b663" translate="yes" xml:space="preserve">
          <source>Even when lexical binding is enabled, certain variables will continue to be dynamically bound. These are called &lt;em&gt;special variables&lt;/em&gt;. Every variable that has been defined with &lt;code&gt;defvar&lt;/code&gt;, &lt;code&gt;defcustom&lt;/code&gt; or &lt;code&gt;defconst&lt;/code&gt; is a special variable (see &lt;a href=&quot;defining-variables#Defining-Variables&quot;&gt;Defining Variables&lt;/a&gt;). All other variables are subject to lexical binding.</source>
          <target state="translated">Incluso cuando la vinculaci&amp;oacute;n l&amp;eacute;xica est&amp;aacute; habilitada, ciertas variables continuar&amp;aacute;n vinculadas din&amp;aacute;micamente. Se denominan &lt;em&gt;variables especiales&lt;/em&gt; . Cada variable que se ha definido con &lt;code&gt;defvar&lt;/code&gt; , &lt;code&gt;defcustom&lt;/code&gt; o &lt;code&gt;defconst&lt;/code&gt; es una variable especial (consulte &lt;a href=&quot;defining-variables#Defining-Variables&quot;&gt;Definici&amp;oacute;n de variables&lt;/a&gt; ). Todas las dem&amp;aacute;s variables est&amp;aacute;n sujetas a vinculaci&amp;oacute;n l&amp;eacute;xica.</target>
        </trans-unit>
        <trans-unit id="1a444451a6bf3653aee29ba02a88a7a4286cfd3c" translate="yes" xml:space="preserve">
          <source>Event Examples</source>
          <target state="translated">Ejemplos de eventos</target>
        </trans-unit>
        <trans-unit id="04a0457b5051e01d35a084a34427af2e0f933cb3" translate="yes" xml:space="preserve">
          <source>Events processed immediately and individually.</source>
          <target state="translated">Eventos procesados de forma inmediata e individual.</target>
        </trans-unit>
        <trans-unit id="dfd77cb42dcfdf913a9b2993fc51c80aff807ab1" translate="yes" xml:space="preserve">
          <source>Events read from this list are not normally added to the current command&amp;rsquo;s key sequence (as returned by, e.g., &lt;code&gt;this-command-keys&lt;/code&gt;), as the events will already have been added once as they were read for the first time. An element of the form &lt;code&gt;(t&amp;nbsp;.&amp;nbsp;&lt;var&gt;event&lt;/var&gt;)&lt;/code&gt; forces &lt;var&gt;event&lt;/var&gt; to be added to the current command&amp;rsquo;s key sequence.</source>
          <target state="translated">Los eventos le&amp;iacute;dos de esta lista normalmente no se agregan a la secuencia de teclas del comando actual (como lo devuelve, por ejemplo, &lt;code&gt;this-command-keys&lt;/code&gt; ), ya que los eventos ya se habr&amp;aacute;n agregado una vez cuando se leyeron por primera vez. Un elemento de la forma &lt;code&gt;(t&amp;nbsp;.&amp;nbsp;&lt;var&gt;event&lt;/var&gt;)&lt;/code&gt; obliga a que el &lt;var&gt;event&lt;/var&gt; o se agregue a la secuencia de teclas del comando actual.</target>
        </trans-unit>
        <trans-unit id="a4137474199ffe7887e4815646c84fc0febba656" translate="yes" xml:space="preserve">
          <source>Every button has a &lt;em&gt;button type&lt;/em&gt;, which defines default values for the button&amp;rsquo;s properties. Button types are arranged in a hierarchy, with specialized types inheriting from more general types, so that it&amp;rsquo;s easy to define special-purpose types of buttons for specific tasks.</source>
          <target state="translated">Cada bot&amp;oacute;n tiene un &lt;em&gt;tipo de bot&amp;oacute;n&lt;/em&gt; , que define valores predeterminados para las propiedades del bot&amp;oacute;n. Los tipos de botones est&amp;aacute;n organizados en una jerarqu&amp;iacute;a, con tipos especializados que heredan de tipos m&amp;aacute;s generales, por lo que es f&amp;aacute;cil definir tipos de botones con fines especiales para tareas espec&amp;iacute;ficas.</target>
        </trans-unit>
        <trans-unit id="dd5e71774a4e19fa74784e55cff6c970e9e3dc4c" translate="yes" xml:space="preserve">
          <source>Every coding system specifies a particular set of character code conversions, but the coding system &lt;code&gt;undecided&lt;/code&gt; is special: it leaves the choice unspecified, to be chosen heuristically for each file, based on the file&amp;rsquo;s data. The coding system &lt;code&gt;prefer-utf-8&lt;/code&gt; is like &lt;code&gt;undecided&lt;/code&gt;, but it prefers to choose &lt;code&gt;utf-8&lt;/code&gt; when possible.</source>
          <target state="translated">Cada sistema de codificaci&amp;oacute;n especifica un conjunto particular de conversiones de c&amp;oacute;digo de caracteres, pero el sistema de codificaci&amp;oacute;n &lt;code&gt;undecided&lt;/code&gt; es especial: deja la opci&amp;oacute;n sin especificar, para ser elegido heur&amp;iacute;sticamente para cada archivo, en base a los datos del archivo. El sistema de codificaci&amp;oacute;n &lt;code&gt;prefer-utf-8&lt;/code&gt; es como &lt;code&gt;undecided&lt;/code&gt; , pero prefiere elegir &lt;code&gt;utf-8&lt;/code&gt; cuando sea posible.</target>
        </trans-unit>
        <trans-unit id="bc949dcffe18c4c6f376934cb6d379922c86061f" translate="yes" xml:space="preserve">
          <source>Every dynamic module should export a C-callable function named &lt;code&gt;emacs_module_init&lt;/code&gt;, which Emacs will call as part of the call to &lt;code&gt;load&lt;/code&gt; or &lt;code&gt;require&lt;/code&gt; which loads the module. It should also export a symbol named &lt;code&gt;plugin_is_GPL_compatible&lt;/code&gt; to indicate that its code is released under the GPL or compatible license; Emacs will signal an error if your program tries to load modules that don&amp;rsquo;t export such a symbol.</source>
          <target state="translated">Cada m&amp;oacute;dulo din&amp;aacute;mico debe exportar una funci&amp;oacute;n C-invocable llamada &lt;code&gt;emacs_module_init&lt;/code&gt; , que Emacs llamar&amp;aacute; como parte de la llamada para &lt;code&gt;load&lt;/code&gt; o &lt;code&gt;require&lt;/code&gt; que carga el m&amp;oacute;dulo. Tambi&amp;eacute;n deber&amp;iacute;a exportar un s&amp;iacute;mbolo llamado &lt;code&gt;plugin_is_GPL_compatible&lt;/code&gt; para indicar que su c&amp;oacute;digo se publica bajo la GPL o licencia compatible; Emacs se&amp;ntilde;alar&amp;aacute; un error si su programa intenta cargar m&amp;oacute;dulos que no exportan tal s&amp;iacute;mbolo.</target>
        </trans-unit>
        <trans-unit id="5f7cc4e86bc2ba0c7806f0619e98d104b5a79730" translate="yes" xml:space="preserve">
          <source>Every error specifies an error message, one way or another. The message should state what is wrong (&amp;ldquo;File does not exist&amp;rdquo;), not how things ought to be (&amp;ldquo;File must exist&amp;rdquo;). The convention in Emacs Lisp is that error messages should start with a capital letter, but should not end with any sort of punctuation.</source>
          <target state="translated">Cada error especifica un mensaje de error, de una forma u otra. El mensaje debe indicar qu&amp;eacute; est&amp;aacute; mal (&quot;El archivo no existe&quot;), no c&amp;oacute;mo deber&amp;iacute;an ser las cosas (&quot;El archivo debe existir&quot;). La convenci&amp;oacute;n en Emacs Lisp es que los mensajes de error deben comenzar con una letra may&amp;uacute;scula, pero no deben terminar con ning&amp;uacute;n tipo de puntuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="79a80a71bc9146d2a7362b5b3df1e59c55f3d35d" translate="yes" xml:space="preserve">
          <source>Every event has an &lt;em&gt;event type&lt;/em&gt;, which classifies the event for key binding purposes. For a keyboard event, the event type equals the event value; thus, the event type for a character is the character, and the event type for a function key symbol is the symbol itself. For events that are lists, the event type is the symbol in the &lt;small&gt;CAR&lt;/small&gt; of the list. Thus, the event type is always a symbol or a character.</source>
          <target state="translated">Cada evento tiene un &lt;em&gt;tipo de evento&lt;/em&gt; , que clasifica el evento con fines de vinculaci&amp;oacute;n de claves. Para un evento de teclado, el tipo de evento es igual al valor del evento; por lo tanto, el tipo de evento para un car&amp;aacute;cter es el car&amp;aacute;cter y el tipo de evento para un s&amp;iacute;mbolo de tecla de funci&amp;oacute;n es el s&amp;iacute;mbolo mismo. Para los eventos que son listas, el tipo de evento es el s&amp;iacute;mbolo en el &lt;small&gt;CAR&lt;/small&gt; de la lista. Por tanto, el tipo de evento es siempre un s&amp;iacute;mbolo o un car&amp;aacute;cter.</target>
        </trans-unit>
        <trans-unit id="2c51bf37d933cb478063153751844a975d4a56fa" translate="yes" xml:space="preserve">
          <source>Every frame has a &lt;code&gt;name&lt;/code&gt; parameter; this serves as the default for the frame title which window systems typically display at the top of the frame. You can specify a name explicitly by setting the &lt;code&gt;name&lt;/code&gt; frame property.</source>
          <target state="translated">Cada cuadro tiene un par&amp;aacute;metro de &lt;code&gt;name&lt;/code&gt; ; esto sirve como valor predeterminado para el t&amp;iacute;tulo del marco que los sistemas de ventanas suelen mostrar en la parte superior del marco. Puede especificar un nombre expl&amp;iacute;citamente estableciendo la propiedad del marco de &lt;code&gt;name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="be6e27f4ca0ea0fc906e0595ff83ffbfacac687a" translate="yes" xml:space="preserve">
          <source>Every function added with &lt;code&gt;add-function&lt;/code&gt; can be accompanied by an association list of properties &lt;var&gt;props&lt;/var&gt;. Currently only two of those properties have a special meaning:</source>
          <target state="translated">Cada funci&amp;oacute;n a&amp;ntilde;adida con &lt;code&gt;add-function&lt;/code&gt; puede ser acompa&amp;ntilde;ado por una lista de asociaci&amp;oacute;n de las propiedades de &lt;var&gt;props&lt;/var&gt; . Actualmente, solo dos de esas propiedades tienen un significado especial:</target>
        </trans-unit>
        <trans-unit id="17f75ba86886ee6d09b995da57d98781626b332d" translate="yes" xml:space="preserve">
          <source>Every major mode command begins by calling this function, which has the effect of switching to Fundamental mode and erasing most of the effects of the previous major mode. To ensure that this does its job, the variables that major modes set should not be marked permanent.</source>
          <target state="translated">Cada comando del modo principal comienza llamando a esta función,que tiene el efecto de cambiar al modo fundamental y borrar la mayoría de los efectos del modo principal anterior.Para asegurar que esto haga su trabajo,las variables que los modos principales establecen no deben ser marcadas como permanentes.</target>
        </trans-unit>
        <trans-unit id="55faf3a67a23e694ebebf47d4073204f615bb078" translate="yes" xml:space="preserve">
          <source>Every major mode command is supposed to run a normal hook called the &lt;em&gt;mode hook&lt;/em&gt; as one of the last steps of initialization. This makes it easy for a user to customize the behavior of the mode, by overriding the buffer-local variable assignments already made by the mode. Most minor mode functions also run a mode hook at the end. But hooks are used in other contexts too. For example, the hook &lt;code&gt;suspend-hook&lt;/code&gt; runs just before Emacs suspends itself (see &lt;a href=&quot;suspending-emacs#Suspending-Emacs&quot;&gt;Suspending Emacs&lt;/a&gt;).</source>
          <target state="translated">Every major mode command is supposed to run a normal hook called the &lt;em&gt;mode hook&lt;/em&gt; as one of the last steps of initialization. This makes it easy for a user to customize the behavior of the mode, by overriding the buffer-local variable assignments already made by the mode. Most minor mode functions also run a mode hook at the end. But hooks are used in other contexts too. For example, the hook &lt;code&gt;suspend-hook&lt;/code&gt; runs just before Emacs suspends itself (see &lt;a href=&quot;suspending-emacs#Suspending-Emacs&quot;&gt;Suspending Emacs&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="672f6ad74690ed9ca85e43781c95747abb81b4ff" translate="yes" xml:space="preserve">
          <source>Every major mode command should finish by running the mode-independent normal hook &lt;code&gt;change-major-mode-after-body-hook&lt;/code&gt;, its mode hook, and the normal hook &lt;code&gt;after-change-major-mode-hook&lt;/code&gt;. It does this by calling &lt;code&gt;run-mode-hooks&lt;/code&gt;. If the major mode is a derived mode, that is if it calls another major mode (the parent mode) in its body, it should do this inside &lt;code&gt;delay-mode-hooks&lt;/code&gt; so that the parent won&amp;rsquo;t run these hooks itself. Instead, the derived mode&amp;rsquo;s call to &lt;code&gt;run-mode-hooks&lt;/code&gt; runs the parent&amp;rsquo;s mode hook too. See &lt;a href=&quot;major-mode-conventions#Major-Mode-Conventions&quot;&gt;Major Mode Conventions&lt;/a&gt;.</source>
          <target state="translated">Every major mode command should finish by running the mode-independent normal hook &lt;code&gt;change-major-mode-after-body-hook&lt;/code&gt; , its mode hook, and the normal hook &lt;code&gt;after-change-major-mode-hook&lt;/code&gt; . It does this by calling &lt;code&gt;run-mode-hooks&lt;/code&gt; . If the major mode is a derived mode, that is if it calls another major mode (the parent mode) in its body, it should do this inside &lt;code&gt;delay-mode-hooks&lt;/code&gt; so that the parent won&amp;rsquo;t run these hooks itself. Instead, the derived mode&amp;rsquo;s call to &lt;code&gt;run-mode-hooks&lt;/code&gt; runs the parent&amp;rsquo;s mode hook too. See &lt;a href=&quot;major-mode-conventions#Major-Mode-Conventions&quot;&gt;Major Mode Conventions&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1c9653498e3b20cbe78e73bc0fdc2179df100df9" translate="yes" xml:space="preserve">
          <source>Every object belongs to at least one type. Objects of the same type have similar structures and may usually be used in the same contexts. Types can overlap, and objects can belong to two or more types. Consequently, we can ask whether an object belongs to a particular type, but not for &lt;em&gt;the&lt;/em&gt; type of an object.</source>
          <target state="translated">Every object belongs to at least one type. Objects of the same type have similar structures and may usually be used in the same contexts. Types can overlap, and objects can belong to two or more types. Consequently, we can ask whether an object belongs to a particular type, but not for &lt;em&gt;the&lt;/em&gt; type of an object.</target>
        </trans-unit>
        <trans-unit id="741e3f11f682581bbfa9d4ff31815dc0fd76e81e" translate="yes" xml:space="preserve">
          <source>Every prefix of &lt;var&gt;key&lt;/var&gt; must be a prefix key (i.e., bound to a keymap) or undefined; otherwise an error is signaled. If some prefix of &lt;var&gt;key&lt;/var&gt; is undefined, then &lt;code&gt;define-key&lt;/code&gt; defines it as a prefix key so that the rest of &lt;var&gt;key&lt;/var&gt; can be defined as specified.</source>
          <target state="translated">Every prefix of &lt;var&gt;key&lt;/var&gt; must be a prefix key (i.e., bound to a keymap) or undefined; otherwise an error is signaled. If some prefix of &lt;var&gt;key&lt;/var&gt; is undefined, then &lt;code&gt;define-key&lt;/code&gt; defines it as a prefix key so that the rest of &lt;var&gt;key&lt;/var&gt; can be defined as specified.</target>
        </trans-unit>
        <trans-unit id="15e2f567ff3384e03f5cd1704a548718ea84af68" translate="yes" xml:space="preserve">
          <source>Every process also has a property list that you can use to store miscellaneous values associated with the process.</source>
          <target state="translated">Cada proceso también tiene una lista de propiedades que se puede utilizar para almacenar diversos valores asociados con el proceso.</target>
        </trans-unit>
        <trans-unit id="9348b58eef15df85250fac36cefc612c81471e8c" translate="yes" xml:space="preserve">
          <source>Every successful search sets the match data. Therefore, you should query the match data immediately after searching, before calling any other function that might perform another search. Alternatively, you may save and restore the match data (see &lt;a href=&quot;saving-match-data#Saving-Match-Data&quot;&gt;Saving Match Data&lt;/a&gt;) around the call to functions that could perform another search. Or use the functions that explicitly do not modify the match data; e.g., &lt;code&gt;string-match-p&lt;/code&gt;.</source>
          <target state="translated">Every successful search sets the match data. Therefore, you should query the match data immediately after searching, before calling any other function that might perform another search. Alternatively, you may save and restore the match data (see &lt;a href=&quot;saving-match-data#Saving-Match-Data&quot;&gt;Saving Match Data&lt;/a&gt;) around the call to functions that could perform another search. Or use the functions that explicitly do not modify the match data; e.g., &lt;code&gt;string-match-p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cf2a849c7b6f42e5bfdaf89a7b78d380bfa41cce" translate="yes" xml:space="preserve">
          <source>Every warning has a textual message, which explains the problem for the user, and a &lt;em&gt;severity level&lt;/em&gt; which is a symbol. Here are the possible severity levels, in order of decreasing severity, and their meanings:</source>
          <target state="translated">Every warning has a textual message, which explains the problem for the user, and a &lt;em&gt;severity level&lt;/em&gt; which is a symbol. Here are the possible severity levels, in order of decreasing severity, and their meanings:</target>
        </trans-unit>
        <trans-unit id="b06efe9605d2c90f007fc010872332a9b840961c" translate="yes" xml:space="preserve">
          <source>Examining Buffer Contents</source>
          <target state="translated">Examinar el contenido de la memoria intermedia</target>
        </trans-unit>
        <trans-unit id="45de05e58932916bd458b107b6343320f7d62237" translate="yes" xml:space="preserve">
          <source>Examining Text Near Point</source>
          <target state="translated">Examinando el texto de punto cercano</target>
        </trans-unit>
        <trans-unit id="0ef602781fba6e74f50b4c878856bf68c5243da7" translate="yes" xml:space="preserve">
          <source>Examining Text Properties</source>
          <target state="translated">Examinar las propiedades del texto</target>
        </trans-unit>
        <trans-unit id="ffc4525aba86e7e1e32a1dab1de11593e19e93f5" translate="yes" xml:space="preserve">
          <source>Examining and changing text in buffers.</source>
          <target state="translated">Examinando y cambiando el texto en los buffers.</target>
        </trans-unit>
        <trans-unit id="56da633be7707f1febca2c7cdb6540149025c566" translate="yes" xml:space="preserve">
          <source>Examining text in a general fashion.</source>
          <target state="translated">Examinando el texto de manera general.</target>
        </trans-unit>
        <trans-unit id="7fcc7cce4f2ee556e73fd69281d3f8ec3d660954" translate="yes" xml:space="preserve">
          <source>Examining text in the vicinity of point.</source>
          <target state="translated">Examinando el texto en las proximidades del punto.</target>
        </trans-unit>
        <trans-unit id="1810f73a9a2cf8433323cb7d681a9b461da5f4b3" translate="yes" xml:space="preserve">
          <source>Examining values of variables whose names are known only at run time.</source>
          <target state="translated">Examinando los valores de las variables cuyos nombres sólo se conocen en tiempo de ejecución.</target>
        </trans-unit>
        <trans-unit id="000637ace4c7e7e66d920473418818b732694e21" translate="yes" xml:space="preserve">
          <source>Example of using Ewoc.</source>
          <target state="translated">Ejemplo de uso de Ewoc.</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="42589f3ebaf21a748c64768b7db98352cce25abd" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;(= 42)&lt;/code&gt; In this example, the function is &lt;code&gt;=&lt;/code&gt;, &lt;var&gt;n&lt;/var&gt; is one, and the actual function call becomes: &lt;code&gt;(=&amp;nbsp;42&amp;nbsp;&lt;var&gt;expval&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="translated">Example: &lt;code&gt;(= 42)&lt;/code&gt; In this example, the function is &lt;code&gt;=&lt;/code&gt; , &lt;var&gt;n&lt;/var&gt; is one, and the actual function call becomes: &lt;code&gt;(=&amp;nbsp;42&amp;nbsp;&lt;var&gt;expval&lt;/var&gt;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c88d90029667f9c1b344d2029b2e93ff4a4a6be8" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;(lambda (n) (= 42 n))&lt;/code&gt;</source>
          <target state="translated">Example: &lt;code&gt;(lambda (n) (= 42 n))&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6ad16a009e86ef75fd3de8e2ad5f092a5fca883d" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;integerp&lt;/code&gt;</source>
          <target state="translated">Example: &lt;code&gt;integerp&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="24b7ed5ddb195050534d0fab31090b455e27e26a" translate="yes" xml:space="preserve">
          <source>Example: Advantage Over &lt;code&gt;cl-case&lt;/code&gt;</source>
          <target state="translated">Example: Advantage Over &lt;code&gt;cl-case&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3ad7525bc727bae6ac350fa4ed968eaf0ca64284" translate="yes" xml:space="preserve">
          <source>Example: Reformulation with &lt;code&gt;pcase&lt;/code&gt;</source>
          <target state="translated">Example: Reformulation with &lt;code&gt;pcase&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7e097d720176885bcac5b1b5a1c82a40e2515d3c" translate="yes" xml:space="preserve">
          <source>Example: Using &lt;code&gt;and&lt;/code&gt;</source>
          <target state="translated">Example: Using &lt;code&gt;and&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="08d2dd1f8c7a3d92fa37946a0f154ebb3d4070aa" translate="yes" xml:space="preserve">
          <source>Examples in this manual indicate printed text with &amp;lsquo;</source>
          <target state="translated">Examples in this manual indicate printed text with &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="03eb4cb803b87579b4c90d6f201fca238d7fda68" translate="yes" xml:space="preserve">
          <source>Examples of Lisp code are formatted like this: &lt;code&gt;(list 1 2 3)&lt;/code&gt;. Names that represent metasyntactic variables, or arguments to a function being described, are formatted like this: &lt;var&gt;first-number&lt;/var&gt;.</source>
          <target state="translated">Examples of Lisp code are formatted like this: &lt;code&gt;(list 1 2 3)&lt;/code&gt; . Names that represent metasyntactic variables, or arguments to a function being described, are formatted like this: &lt;var&gt;first-number&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="9994e088a00d8a86302cb44924d52af48350bbaf" translate="yes" xml:space="preserve">
          <source>Examples of Using interactive</source>
          <target state="translated">Ejemplos de uso de la tecnología interactiva</target>
        </trans-unit>
        <trans-unit id="94acd1dafcec67a5c71f53fbacda5ace7493adce" translate="yes" xml:space="preserve">
          <source>Examples of catch and throw</source>
          <target state="translated">Ejemplos de atrapar y lanzar</target>
        </trans-unit>
        <trans-unit id="924f7fb06848c12124360cb9472532a6fc0fd107" translate="yes" xml:space="preserve">
          <source>Examples of how to read interactive arguments.</source>
          <target state="translated">Ejemplos de cómo leer los argumentos interactivos.</target>
        </trans-unit>
        <trans-unit id="0bf2185579aee4ae51b375504b158484ef051f7f" translate="yes" xml:space="preserve">
          <source>Examples of the lists for mouse events.</source>
          <target state="translated">Ejemplos de las listas de eventos del ratón.</target>
        </trans-unit>
        <trans-unit id="0856690c7b7cf58d003b7c079a6b26fd94d77bca" translate="yes" xml:space="preserve">
          <source>Examples to explain the precedence of action functions.</source>
          <target state="translated">Ejemplos para explicar la precedencia de las funciones de acción.</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="ea83b89ce972bd83b6987e662353810d2585216a" translate="yes" xml:space="preserve">
          <source>Except where noted, these functions also accept internal windows as arguments. Resizing an internal window causes its child windows to be resized to fit the same space.</source>
          <target state="translated">Excepto donde se indique,estas funciones también aceptan ventanas internas como argumentos.Cambiar el tamaño de una ventana interna hace que sus ventanas hijas se ajusten al mismo espacio.</target>
        </trans-unit>
        <trans-unit id="514c2777c3336bd01dec12407d7149cf0ec4b13b" translate="yes" xml:space="preserve">
          <source>Excess Close Parentheses</source>
          <target state="translated">Exceso de paréntesis cerrados</target>
        </trans-unit>
        <trans-unit id="4329f0811884f882f9183865d3de5482e9905a4d" translate="yes" xml:space="preserve">
          <source>Excess Open Parentheses</source>
          <target state="translated">Exceso de paréntesis abiertos</target>
        </trans-unit>
        <trans-unit id="6996ee18eb4fe50e65e1865f16079fb735e17b31" translate="yes" xml:space="preserve">
          <source>Exclude minibuffer-only frames.</source>
          <target state="translated">Excluye los marcos de sólo minibuffer.</target>
        </trans-unit>
        <trans-unit id="102dbcf894945a5c748834e8214903c96d894d18" translate="yes" xml:space="preserve">
          <source>Excursions</source>
          <target state="translated">Excursions</target>
        </trans-unit>
        <trans-unit id="a4832fdf2fe9ae09bb2f1073e96b0875872b2167" translate="yes" xml:space="preserve">
          <source>Execute &lt;code&gt;(require '&lt;var&gt;feature&lt;/var&gt;)&lt;/code&gt; when your saved customizations set the value of this item. &lt;var&gt;feature&lt;/var&gt; should be a symbol.</source>
          <target state="translated">Execute &lt;code&gt;(require '&lt;var&gt;feature&lt;/var&gt;)&lt;/code&gt; when your saved customizations set the value of this item. &lt;var&gt;feature&lt;/var&gt; should be a symbol.</target>
        </trans-unit>
        <trans-unit id="e05b25ea5b95dc62329004b221749a289d2253d2" translate="yes" xml:space="preserve">
          <source>Execute &lt;var&gt;body&lt;/var&gt; once for each element of &lt;var&gt;list&lt;/var&gt;, on each iteration performing a destructuring binding of variables in &lt;var&gt;pattern&lt;/var&gt; to the values of the corresponding subfields of the element of &lt;var&gt;list&lt;/var&gt;. The bindings are performed as if by &lt;code&gt;pcase-let&lt;/code&gt;. When &lt;var&gt;pattern&lt;/var&gt; is a simple variable, this ends up being equivalent to &lt;code&gt;dolist&lt;/code&gt; (see &lt;a href=&quot;iteration#Iteration&quot;&gt;Iteration&lt;/a&gt;).</source>
          <target state="translated">Execute &lt;var&gt;body&lt;/var&gt; once for each element of &lt;var&gt;list&lt;/var&gt; , on each iteration performing a destructuring binding of variables in &lt;var&gt;pattern&lt;/var&gt; to the values of the corresponding subfields of the element of &lt;var&gt;list&lt;/var&gt; . The bindings are performed as if by &lt;code&gt;pcase-let&lt;/code&gt; . When &lt;var&gt;pattern&lt;/var&gt; is a simple variable, this ends up being equivalent to &lt;code&gt;dolist&lt;/code&gt; (see &lt;a href=&quot;iteration#Iteration&quot;&gt;Iteration&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="f5bd2d24d188437ee6eefc900e5ffaee2dccd4a0" translate="yes" xml:space="preserve">
          <source>Execute &lt;var&gt;body&lt;/var&gt; pretending it does not modify the buffer. This includes checking whether the buffer&amp;rsquo;s file is locked (see &lt;a href=&quot;file-locks#File-Locks&quot;&gt;File Locks&lt;/a&gt;), running buffer modification hooks (see &lt;a href=&quot;change-hooks#Change-Hooks&quot;&gt;Change Hooks&lt;/a&gt;), etc. Note that if &lt;var&gt;body&lt;/var&gt; actually modifies the buffer text, its undo data may become corrupted.</source>
          <target state="translated">Execute &lt;var&gt;body&lt;/var&gt; pretending it does not modify the buffer. This includes checking whether the buffer&amp;rsquo;s file is locked (see &lt;a href=&quot;file-locks#File-Locks&quot;&gt;File Locks&lt;/a&gt;), running buffer modification hooks (see &lt;a href=&quot;change-hooks#Change-Hooks&quot;&gt;Change Hooks&lt;/a&gt;), etc. Note that if &lt;var&gt;body&lt;/var&gt; actually modifies the buffer text, its undo data may become corrupted.</target>
        </trans-unit>
        <trans-unit id="cde77cd352d5005fa89463ae64af4ea589ac7e5d" translate="yes" xml:space="preserve">
          <source>Execute &lt;var&gt;body&lt;/var&gt;, but give up after &lt;var&gt;seconds&lt;/var&gt; seconds. If &lt;var&gt;body&lt;/var&gt; finishes before the time is up, &lt;code&gt;with-timeout&lt;/code&gt; returns the value of the last form in &lt;var&gt;body&lt;/var&gt;. If, however, the execution of &lt;var&gt;body&lt;/var&gt; is cut short by the timeout, then &lt;code&gt;with-timeout&lt;/code&gt; executes all the &lt;var&gt;timeout-forms&lt;/var&gt; and returns the value of the last of them.</source>
          <target state="translated">Execute &lt;var&gt;body&lt;/var&gt; , but give up after &lt;var&gt;seconds&lt;/var&gt; seconds. If &lt;var&gt;body&lt;/var&gt; finishes before the time is up, &lt;code&gt;with-timeout&lt;/code&gt; returns the value of the last form in &lt;var&gt;body&lt;/var&gt; . If, however, the execution of &lt;var&gt;body&lt;/var&gt; is cut short by the timeout, then &lt;code&gt;with-timeout&lt;/code&gt; executes all the &lt;var&gt;timeout-forms&lt;/var&gt; and returns the value of the last of them.</target>
        </trans-unit>
        <trans-unit id="fd13bad071682649e8d24fe41b2c2501dc4dc2ba" translate="yes" xml:space="preserve">
          <source>Executing &lt;code&gt;throw&lt;/code&gt; exits all Lisp constructs up to the matching &lt;code&gt;catch&lt;/code&gt;, including function calls. When binding constructs such as &lt;code&gt;let&lt;/code&gt; or function calls are exited in this way, the bindings are unbound, just as they are when these constructs exit normally (see &lt;a href=&quot;local-variables#Local-Variables&quot;&gt;Local Variables&lt;/a&gt;). Likewise, &lt;code&gt;throw&lt;/code&gt; restores the buffer and position saved by &lt;code&gt;save-excursion&lt;/code&gt; (see &lt;a href=&quot;excursions#Excursions&quot;&gt;Excursions&lt;/a&gt;), and the narrowing status saved by &lt;code&gt;save-restriction&lt;/code&gt;. It also runs any cleanups established with the &lt;code&gt;unwind-protect&lt;/code&gt; special form when it exits that form (see &lt;a href=&quot;cleanups#Cleanups&quot;&gt;Cleanups&lt;/a&gt;).</source>
          <target state="translated">Executing &lt;code&gt;throw&lt;/code&gt; exits all Lisp constructs up to the matching &lt;code&gt;catch&lt;/code&gt; , including function calls. When binding constructs such as &lt;code&gt;let&lt;/code&gt; or function calls are exited in this way, the bindings are unbound, just as they are when these constructs exit normally (see &lt;a href=&quot;local-variables#Local-Variables&quot;&gt;Local Variables&lt;/a&gt;). Likewise, &lt;code&gt;throw&lt;/code&gt; restores the buffer and position saved by &lt;code&gt;save-excursion&lt;/code&gt; (see &lt;a href=&quot;excursions#Excursions&quot;&gt;Excursions&lt;/a&gt;), and the narrowing status saved by &lt;code&gt;save-restriction&lt;/code&gt; . It also runs any cleanups established with the &lt;code&gt;unwind-protect&lt;/code&gt; special form when it exits that form (see &lt;a href=&quot;cleanups#Cleanups&quot;&gt;Cleanups&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="d74bb2e60e4d3fb084ead764f7b15124485c059e" translate="yes" xml:space="preserve">
          <source>Executing a program can also try adding suffixes to the specified name:</source>
          <target state="translated">Al ejecutar un programa también se puede intentar añadir sufijos al nombre especificado:</target>
        </trans-unit>
        <trans-unit id="ebee3b642b4f0ebb9781d2c0a16802f1c2e57b30" translate="yes" xml:space="preserve">
          <source>Executing commands within Edebug can change the key sequence that would be returned by &lt;code&gt;this-command-keys&lt;/code&gt;, and there is no way to reset the key sequence from Lisp.</source>
          <target state="translated">Executing commands within Edebug can change the key sequence that would be returned by &lt;code&gt;this-command-keys&lt;/code&gt; , and there is no way to reset the key sequence from Lisp.</target>
        </trans-unit>
        <trans-unit id="1e481e9e93ff9fde3c47da4e2f9bd0a8821d11ef" translate="yes" xml:space="preserve">
          <source>Executing the function itself evaluates its body; this does involve symbol function indirection when calling &lt;code&gt;erste&lt;/code&gt;.</source>
          <target state="translated">Executing the function itself evaluates its body; this does involve symbol function indirection when calling &lt;code&gt;erste&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="14e5e55e3c46fc56ef37e001f4826a1009a88b69" translate="yes" xml:space="preserve">
          <source>Execution modes, stopping more or less often.</source>
          <target state="translated">Modos de ejecución,parando más o menos a menudo.</target>
        </trans-unit>
        <trans-unit id="97b908e56c8affb6f198ab184ff139df70822588" translate="yes" xml:space="preserve">
          <source>Exit the debugger and continue execution. This resumes execution of the program as if the debugger had never been entered (aside from any side-effects that you caused by changing variable values or data structures while inside the debugger).</source>
          <target state="translated">Salga del depurador y continúe la ejecución.Esto reanuda la ejecución del programa como si nunca se hubiera introducido el depurador (aparte de cualquier efecto secundario que haya causado al cambiar los valores de las variables o las estructuras de datos mientras estaba dentro del depurador).</target>
        </trans-unit>
        <trans-unit id="4da4762e60930fee76bfddad9df8fddb66bc010b" translate="yes" xml:space="preserve">
          <source>Exited</source>
          <target state="translated">Exited</target>
        </trans-unit>
        <trans-unit id="8999a6a28c3f6fde180e5adb92439670504be038" translate="yes" xml:space="preserve">
          <source>Exiting Emacs irreversibly.</source>
          <target state="translated">Salir del Emacs de forma irreversible.</target>
        </trans-unit>
        <trans-unit id="e40779f9dbf7b9155821dddbd56974aefa46b434" translate="yes" xml:space="preserve">
          <source>Exiting Emacs reversibly.</source>
          <target state="translated">Salir del Emacs de forma reversible.</target>
        </trans-unit>
        <trans-unit id="2a714eb1094cc86f04db1a930bf20e2cc4723b6e" translate="yes" xml:space="preserve">
          <source>Expand all the forms abbreviated with &amp;ldquo;...&amp;rdquo; in the frame at point.</source>
          <target state="translated">Expand all the forms abbreviated with &amp;ldquo;...&amp;rdquo; in the frame at point.</target>
        </trans-unit>
        <trans-unit id="c39165889ae82de3f3543cbdf660f6e4a5da6438" translate="yes" xml:space="preserve">
          <source>Expanding</source>
          <target state="translated">Expanding</target>
        </trans-unit>
        <trans-unit id="4c742e3f2d52d838216750f0562eaf969f0a39f0" translate="yes" xml:space="preserve">
          <source>Expansion of a Macro Call</source>
          <target state="translated">Expansión de una macro llamada</target>
        </trans-unit>
        <trans-unit id="6ca590c42a4d990c1e2fa2ffaa567f1164a66dcf" translate="yes" xml:space="preserve">
          <source>Explanation of terms we use in this manual.</source>
          <target state="translated">Explicación de los términos que usamos en este manual.</target>
        </trans-unit>
        <trans-unit id="5fdf6d25bdf76c29c879fee3e893bfe3162da24c" translate="yes" xml:space="preserve">
          <source>Explicit Encoding and Decoding</source>
          <target state="translated">Codificación y descodificación explícita</target>
        </trans-unit>
        <trans-unit id="2bdf1bdb932b1c4ad868d411e4ded7400f765e63" translate="yes" xml:space="preserve">
          <source>Explicit Entry to the Debugger</source>
          <target state="translated">Entrada explícita en el depurador</target>
        </trans-unit>
        <trans-unit id="9a007c1d995b6d8073a9bc77022ebe07a3a0f5f8" translate="yes" xml:space="preserve">
          <source>Explicit Nonlocal Exits: catch and throw</source>
          <target state="translated">Salidas explícitas no locales:atrapar y tirar</target>
        </trans-unit>
        <trans-unit id="1ad1ce0b3e7833459b128fbf4ce571d7a46890bd" translate="yes" xml:space="preserve">
          <source>Explicit control structures make possible an order of execution other than sequential.</source>
          <target state="translated">Las estructuras de control explícitas hacen posible un orden de ejecución que no sea secuencial.</target>
        </trans-unit>
        <trans-unit id="088345198c12c42185dc050f609431188d5e2c78" translate="yes" xml:space="preserve">
          <source>Explicitly displaying text in the echo area.</source>
          <target state="translated">Mostrando explícitamente el texto en el área de eco.</target>
        </trans-unit>
        <trans-unit id="a689623f299989df674feba29e4f28665efe9319" translate="yes" xml:space="preserve">
          <source>Explicitly rounding floating-point numbers.</source>
          <target state="translated">Redondeando explícitamente los números de puntos flotantes.</target>
        </trans-unit>
        <trans-unit id="6efc43ab25f6f82b115afa6cd6647daff5d515b8" translate="yes" xml:space="preserve">
          <source>Expression prefixes: &amp;lsquo;</source>
          <target state="translated">Expression prefixes: &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="3ded6265cc857e0826a7951dc567e485d9688f10" translate="yes" xml:space="preserve">
          <source>Expressions whose values are displayed each time you enter Edebug.</source>
          <target state="translated">Expresiones cuyos valores se muestran cada vez que se entra en Edebug.</target>
        </trans-unit>
        <trans-unit id="828741415e596cc1348b75ea71ac729d3cf9801c" translate="yes" xml:space="preserve">
          <source>Extended File Attributes</source>
          <target state="translated">Atributos de los archivos extendidos</target>
        </trans-unit>
        <trans-unit id="faef1b43d6020947447489d47a97113bf052f09e" translate="yes" xml:space="preserve">
          <source>Extended Menu Items</source>
          <target state="translated">Elementos del menú ampliado</target>
        </trans-unit>
        <trans-unit id="79403e6568f432fc5806885c7a96d9f746bf269e" translate="yes" xml:space="preserve">
          <source>Extended file attributes for access control.</source>
          <target state="translated">Atributos de archivo ampliados para el control de acceso.</target>
        </trans-unit>
        <trans-unit id="c69f5fcd1e924179660b0f849a1edfca16c76ff3" translate="yes" xml:space="preserve">
          <source>Extending pcase</source>
          <target state="translated">Extendiendo el maletín</target>
        </trans-unit>
        <trans-unit id="dcbd361d67335f13d72aa72e80e9b5074251cb85" translate="yes" xml:space="preserve">
          <source>Extending the concept of variables.</source>
          <target state="translated">Extendiendo el concepto de variables.</target>
        </trans-unit>
        <trans-unit id="f26cbcbfd3a60f50e69a2203bf39a117b6f7edba" translate="yes" xml:space="preserve">
          <source>External Border</source>
          <target state="translated">Frontera exterior</target>
        </trans-unit>
        <trans-unit id="559369521d2b02178eca19a89ab3af270c529587" translate="yes" xml:space="preserve">
          <source>External borders don&amp;rsquo;t exist on text terminal frames. For graphical frames, their display can be suppressed by setting the &lt;code&gt;override-redirect&lt;/code&gt; or &lt;code&gt;undecorated&lt;/code&gt; frame parameter (see &lt;a href=&quot;management-parameters#Management-Parameters&quot;&gt;Management Parameters&lt;/a&gt;).</source>
          <target state="translated">External borders don&amp;rsquo;t exist on text terminal frames. For graphical frames, their display can be suppressed by setting the &lt;code&gt;override-redirect&lt;/code&gt; or &lt;code&gt;undecorated&lt;/code&gt; frame parameter (see &lt;a href=&quot;management-parameters#Management-Parameters&quot;&gt;Management Parameters&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="c0b99104aa13dc6a254700daf612011b95c664e0" translate="yes" xml:space="preserve">
          <source>Extra characters used in variable and command names along with word constituents. Examples include the characters &amp;lsquo;</source>
          <target state="translated">Extra characters used in variable and command names along with word constituents. Examples include the characters &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="11971c4e6df4236f6e2a88fa65abcd7f3fc95e4e" translate="yes" xml:space="preserve">
          <source>Extra options affecting how buffers are displayed.</source>
          <target state="translated">Opciones adicionales que afectan a la forma en que se muestran los buffers.</target>
        </trans-unit>
        <trans-unit id="62794c2ea3b2113cb2c52f416844469a23bd3da4" translate="yes" xml:space="preserve">
          <source>Extracting the pieces of a list.</source>
          <target state="translated">Extrayendo los pedazos de una lista.</target>
        </trans-unit>
        <trans-unit id="e1a1e9d545fa6732404318124fd97eb48df0b89c" translate="yes" xml:space="preserve">
          <source>Extraction of multiple values stored in an object is known as &lt;em&gt;destructuring&lt;/em&gt;. Using &lt;code&gt;pcase&lt;/code&gt; patterns allows to perform &lt;em&gt;destructuring binding&lt;/em&gt;, which is similar to a local binding (see &lt;a href=&quot;local-variables#Local-Variables&quot;&gt;Local Variables&lt;/a&gt;), but gives values to multiple elements of a variable by extracting those values from an object of compatible structure.</source>
          <target state="translated">Extraction of multiple values stored in an object is known as &lt;em&gt;destructuring&lt;/em&gt;. Using &lt;code&gt;pcase&lt;/code&gt; patterns allows to perform &lt;em&gt;destructuring binding&lt;/em&gt;, which is similar to a local binding (see &lt;a href=&quot;local-variables#Local-Variables&quot;&gt;Local Variables&lt;/a&gt;), but gives values to multiple elements of a variable by extracting those values from an object of compatible structure.</target>
        </trans-unit>
        <trans-unit id="e69f20e9f683920d3fb4329abd951e878b1f9372" translate="yes" xml:space="preserve">
          <source>F</source>
          <target state="translated">F</target>
        </trans-unit>
        <trans-unit id="88bfad9cfffeafd299a44d4daf979d57419a2621" translate="yes" xml:space="preserve">
          <source>F1</source>
          <target state="translated">F1</target>
        </trans-unit>
        <trans-unit id="b9c7614215c5bf3f22e0dd38d8c9a197b4432459" translate="yes" xml:space="preserve">
          <source>F11</source>
          <target state="translated">F11</target>
        </trans-unit>
        <trans-unit id="be3d820f356c0030f50fa290b419eb634ad7d08d" translate="yes" xml:space="preserve">
          <source>F3</source>
          <target state="translated">F3</target>
        </trans-unit>
        <trans-unit id="0b240bd1aef549aae787777e72c514ed278b4c9e" translate="yes" xml:space="preserve">
          <source>FIXME</source>
          <target state="translated">FIXME</target>
        </trans-unit>
        <trans-unit id="feab40e1fca77c7360ccca1481bb8ba5f919ce3a" translate="yes" xml:space="preserve">
          <source>FOO</source>
          <target state="translated">FOO</target>
        </trans-unit>
        <trans-unit id="d6cb99b2aaf9660672f786dca68ea38e17d6e0b1" translate="yes" xml:space="preserve">
          <source>FOO:</source>
          <target state="translated">FOO:</target>
        </trans-unit>
        <trans-unit id="e106961d692013d7e77bf986ab4ba215e15a1efd" translate="yes" xml:space="preserve">
          <source>Face Attribute Functions</source>
          <target state="translated">Funciones de los atributos del rostro</target>
        </trans-unit>
        <trans-unit id="654864cf31f7692b390d6c92e9df53f991dd3be1" translate="yes" xml:space="preserve">
          <source>Face Attributes</source>
          <target state="translated">Atributos de la cara</target>
        </trans-unit>
        <trans-unit id="d5e1cfea3023a6e8aa7a2742fbea8b8f08c0752f" translate="yes" xml:space="preserve">
          <source>Face Remapping</source>
          <target state="translated">Remodelación de la cara</target>
        </trans-unit>
        <trans-unit id="fdbb8fef1941523eb44ab9acd11a20e97debad36" translate="yes" xml:space="preserve">
          <source>Faces</source>
          <target state="translated">Faces</target>
        </trans-unit>
        <trans-unit id="819ff0ee4f320c1983239b6c9cbfadace5356c75" translate="yes" xml:space="preserve">
          <source>Faces for Font Lock</source>
          <target state="translated">Caras para Font Lock</target>
        </trans-unit>
        <trans-unit id="f16ad3d9b8a81e142c7177a85f1722ea3c8ecb24" translate="yes" xml:space="preserve">
          <source>Faces that are defined by default.</source>
          <target state="translated">Caras que están definidas por defecto.</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Features</target>
        </trans-unit>
        <trans-unit id="b332d3834aba40f3287a2b6bec41f4773cb1f1e7" translate="yes" xml:space="preserve">
          <source>Features for controlling the screen display.</source>
          <target state="translated">Características para controlar la visualización de la pantalla.</target>
        </trans-unit>
        <trans-unit id="b9ae81895850ce8ada8529e0f5da57ea2c7986e1" translate="yes" xml:space="preserve">
          <source>Fields are added in a most to least significant order, so if the adjustment described above happens, it happens before adding days, hours, minutes or seconds.</source>
          <target state="translated">Los campos se añaden en un orden de mayor a menor importancia,por lo que si se produce el ajuste descrito anteriormente,se produce antes de añadir días,horas,minutos o segundos.</target>
        </trans-unit>
        <trans-unit id="84a27191b9d9fa3be49740ecbafdc1df51bea9cb" translate="yes" xml:space="preserve">
          <source>File Attributes</source>
          <target state="translated">Atributos de los archivos</target>
        </trans-unit>
        <trans-unit id="634af05bec00faebb5b301b9d511d8f08119591f" translate="yes" xml:space="preserve">
          <source>File Format Conversion</source>
          <target state="translated">Conversión del formato de archivo</target>
        </trans-unit>
        <trans-unit id="394286763d09a40da21d7cdc6d10dc5ed278d4c0" translate="yes" xml:space="preserve">
          <source>File Local Variables</source>
          <target state="translated">Archivar las variables locales</target>
        </trans-unit>
        <trans-unit id="6945b1782b048888e914cc457381bec7925fce8d" translate="yes" xml:space="preserve">
          <source>File Locks</source>
          <target state="translated">Bloqueos de archivos</target>
        </trans-unit>
        <trans-unit id="8b6acea7a6a01e7f88e54a9260ec2af3a5357533" translate="yes" xml:space="preserve">
          <source>File Name Completion</source>
          <target state="translated">Nombre del archivo Completado</target>
        </trans-unit>
        <trans-unit id="7451ac3d98ad2761e27cb7d7298ba6cd2cd31381" translate="yes" xml:space="preserve">
          <source>File Name Components</source>
          <target state="translated">Componentes del nombre del archivo</target>
        </trans-unit>
        <trans-unit id="6e75764f6be72d64faaa7cd05889744083a1ffec" translate="yes" xml:space="preserve">
          <source>File Names</source>
          <target state="translated">Nombres de archivos</target>
        </trans-unit>
        <trans-unit id="30fb1a4fd7f24b635466fa19633b5ffc1d1351f4" translate="yes" xml:space="preserve">
          <source>File local variables</source>
          <target state="translated">Archivar las variables locales</target>
        </trans-unit>
        <trans-unit id="142ecb52f059b39536000c672c2af8e5e50fb47f" translate="yes" xml:space="preserve">
          <source>File mode specification error</source>
          <target state="translated">Error de especificación del modo de archivo</target>
        </trans-unit>
        <trans-unit id="41c49533612d0c04bef768e396e0a06eacbe8ed3" translate="yes" xml:space="preserve">
          <source>File notifications.</source>
          <target state="translated">Notificaciones de archivo.</target>
        </trans-unit>
        <trans-unit id="abef62b2302277610c559dcbd2657a6f25e0cf68" translate="yes" xml:space="preserve">
          <source>File passwd is write-protected; try to save anyway? (yes or no)</source>
          <target state="translated">La contraseña del archivo está protegida contra escritura;¿intenta guardarla de todas formas? (sí o no)</target>
        </trans-unit>
        <trans-unit id="0fa423ea7a3de0b12d21f012b22a7141624872d0" translate="yes" xml:space="preserve">
          <source>File sizes, modification times, etc.</source>
          <target state="translated">Tamaño de los archivos,tiempos de modificación,etc.</target>
        </trans-unit>
        <trans-unit id="33af16411a6a89fe3e0022fccba0ce8d9a48c5c8" translate="yes" xml:space="preserve">
          <source>Filenames containing &amp;lsquo;</source>
          <target state="translated">Filenames containing &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="6ce6c512ea433a7fc5c8841628e7696cd0ff7f2b" translate="yes" xml:space="preserve">
          <source>Files</source>
          <target state="translated">Files</target>
        </trans-unit>
        <trans-unit id="b82fb55310cb97d45bdeb83d3caf9294bba6b7ec" translate="yes" xml:space="preserve">
          <source>Files and Secondary Storage</source>
          <target state="translated">Archivos y almacenamiento secundario</target>
        </trans-unit>
        <trans-unit id="2b3e8a94ab0ab81e327337eb1fcbbfd8f921ecea" translate="yes" xml:space="preserve">
          <source>Files are generally referred to by their names, in Emacs as elsewhere. File names in Emacs are represented as strings. The functions that operate on a file all expect a file name argument.</source>
          <target state="translated">Los archivos se denominan generalmente por sus nombres,en el Emacs como en otros lugares.Los nombres de los archivos en Emacs se representan como cadenas.Todas las funciones que operan en un archivo esperan un argumento de nombre de archivo.</target>
        </trans-unit>
        <trans-unit id="98325be45e57b01ea42841fb2dc63e31875877c1" translate="yes" xml:space="preserve">
          <source>Filling</source>
          <target state="translated">Filling</target>
        </trans-unit>
        <trans-unit id="8bfde07209f239be1569e3c825b6748d05c9a119" translate="yes" xml:space="preserve">
          <source>Filter functions accept output from the process.</source>
          <target state="translated">Las funciones de filtro aceptan la salida del proceso.</target>
        </trans-unit>
        <trans-unit id="9f75d8a170ee3ebac199d6e0e7cd5fd77da7cf96" translate="yes" xml:space="preserve">
          <source>Filters can get unibyte or multibyte strings.</source>
          <target state="translated">Los filtros pueden obtener cadenas de unibyte o multibyte.</target>
        </trans-unit>
        <trans-unit id="aba4d2683351badc888e236a277c1fd78263060b" translate="yes" xml:space="preserve">
          <source>Finalizer Type</source>
          <target state="translated">Tipo de finalizador</target>
        </trans-unit>
        <trans-unit id="a8947680fe3863262f3ab5559d9bd7d760ac2651" translate="yes" xml:space="preserve">
          <source>Finally you can toggle the display of scroll bars on all frames by customizing the variables &lt;code&gt;scroll-bar-mode&lt;/code&gt; and &lt;code&gt;horizontal-scroll-bar-mode&lt;/code&gt;.</source>
          <target state="translated">Finally you can toggle the display of scroll bars on all frames by customizing the variables &lt;code&gt;scroll-bar-mode&lt;/code&gt; and &lt;code&gt;horizontal-scroll-bar-mode&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="74d402c732ad516d11a21de33899809c80cdeff8" translate="yes" xml:space="preserve">
          <source>Finally, &lt;var&gt;function-list&lt;/var&gt; is a list of functions for the mode command to call for additional setup. It calls these functions just before it runs the mode hook variable &lt;code&gt;&lt;var&gt;mode&lt;/var&gt;-hook&lt;/code&gt;.</source>
          <target state="translated">Finally, &lt;var&gt;function-list&lt;/var&gt; is a list of functions for the mode command to call for additional setup. It calls these functions just before it runs the mode hook variable &lt;code&gt;&lt;var&gt;mode&lt;/var&gt;-hook&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c55ab6d71a9ad314809822d8b9060ed2f5013cf1" translate="yes" xml:space="preserve">
          <source>Finally, Emacs runs a normal hook that generalizes the behavior of &lt;code&gt;window-state-change-functions&lt;/code&gt;.</source>
          <target state="translated">Finally, Emacs runs a normal hook that generalizes the behavior of &lt;code&gt;window-state-change-functions&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="408f1373e50d76e430a57c26aa76f5dbd3e9c977" translate="yes" xml:space="preserve">
          <source>Finally, a newline can have a &lt;code&gt;line-spacing&lt;/code&gt; text or overlay property that can enlarge the default frame line spacing and the buffer local &lt;code&gt;line-spacing&lt;/code&gt; variable: if its value is larger than the buffer or frame defaults, that larger value is used instead, for the display line ending in that newline.</source>
          <target state="translated">Finally, a newline can have a &lt;code&gt;line-spacing&lt;/code&gt; text or overlay property that can enlarge the default frame line spacing and the buffer local &lt;code&gt;line-spacing&lt;/code&gt; variable: if its value is larger than the buffer or frame defaults, that larger value is used instead, for the display line ending in that newline.</target>
        </trans-unit>
        <trans-unit id="0a8ca0bbf8ca5c11ee4c822e14ac4b1cc54e98f6" translate="yes" xml:space="preserve">
          <source>Finally, and optionally, the &lt;code&gt;jsonrpc-connection&lt;/code&gt; subclass should implement the &lt;code&gt;jsonrpc-shutdown&lt;/code&gt; and &lt;code&gt;jsonrpc-running-p&lt;/code&gt; methods if these concepts apply to the transport. If they do, then any system resources (e.g. processes, timers, etc.) used to listen for messages on the wire should be released in &lt;code&gt;jsonrpc-shutdown&lt;/code&gt;, i.e. they should only be needed while &lt;code&gt;jsonrpc-running-p&lt;/code&gt; is non-nil.</source>
          <target state="translated">Finally, and optionally, the &lt;code&gt;jsonrpc-connection&lt;/code&gt; subclass should implement the &lt;code&gt;jsonrpc-shutdown&lt;/code&gt; and &lt;code&gt;jsonrpc-running-p&lt;/code&gt; methods if these concepts apply to the transport. If they do, then any system resources (e.g. processes, timers, etc.) used to listen for messages on the wire should be released in &lt;code&gt;jsonrpc-shutdown&lt;/code&gt; , i.e. they should only be needed while &lt;code&gt;jsonrpc-running-p&lt;/code&gt; is non-nil.</target>
        </trans-unit>
        <trans-unit id="88b4ea5530a97f6f8fc1e3e4b10461e76b40fcec" translate="yes" xml:space="preserve">
          <source>Finally, here is an example of a stream that is a function, named &lt;code&gt;useless-stream&lt;/code&gt;. Before we use the stream, we initialize the variable &lt;code&gt;useless-list&lt;/code&gt; to a list of characters. Then each call to the function &lt;code&gt;useless-stream&lt;/code&gt; obtains the next character in the list or unreads a character by adding it to the front of the list.</source>
          <target state="translated">Finally, here is an example of a stream that is a function, named &lt;code&gt;useless-stream&lt;/code&gt; . Before we use the stream, we initialize the variable &lt;code&gt;useless-list&lt;/code&gt; to a list of characters. Then each call to the function &lt;code&gt;useless-stream&lt;/code&gt; obtains the next character in the list or unreads a character by adding it to the front of the list.</target>
        </trans-unit>
        <trans-unit id="e17f52480988f71b0601586b82009b1463b6a040" translate="yes" xml:space="preserve">
          <source>Finally, here is the major mode command for Lisp mode:</source>
          <target state="translated">Por último,aquí está el comando de modo principal para el modo Lisp:</target>
        </trans-unit>
        <trans-unit id="860e5e3571f2ad47db3311a1348d075142701f7d" translate="yes" xml:space="preserve">
          <source>Finally, in many cases some conflicts will remain despite all efforts to restructure the grammar. Do not despair: while the parser cannot be made more clever, you can make the lexer as smart as you want. So, the solution is then to look at the tokens involved in the conflict and to split one of those tokens into 2 (or more) different tokens. E.g., if the grammar needs to distinguish between two incompatible uses of the token &lt;code&gt;&quot;begin&quot;&lt;/code&gt;, make the lexer return different tokens (say &lt;code&gt;&quot;begin-fun&quot;&lt;/code&gt; and &lt;code&gt;&quot;begin-plain&quot;&lt;/code&gt;) depending on which kind of &lt;code&gt;&quot;begin&quot;&lt;/code&gt; it finds. This pushes the work of distinguishing the different cases to the lexer, which will thus have to look at the surrounding text to find ad-hoc clues.</source>
          <target state="translated">Finally, in many cases some conflicts will remain despite all efforts to restructure the grammar. Do not despair: while the parser cannot be made more clever, you can make the lexer as smart as you want. So, the solution is then to look at the tokens involved in the conflict and to split one of those tokens into 2 (or more) different tokens. E.g., if the grammar needs to distinguish between two incompatible uses of the token &lt;code&gt;&quot;begin&quot;&lt;/code&gt; , make the lexer return different tokens (say &lt;code&gt;&quot;begin-fun&quot;&lt;/code&gt; and &lt;code&gt;&quot;begin-plain&quot;&lt;/code&gt; ) depending on which kind of &lt;code&gt;&quot;begin&quot;&lt;/code&gt; it finds. This pushes the work of distinguishing the different cases to the lexer, which will thus have to look at the surrounding text to find ad-hoc clues.</target>
        </trans-unit>
        <trans-unit id="9a2f5d53696c836d007bdbba2afcc8145ab8a69a" translate="yes" xml:space="preserve">
          <source>Finally, in the following example, only two of the three possible matches pass the predicate &lt;code&gt;test&lt;/code&gt; (the string &amp;lsquo;</source>
          <target state="translated">Finally, in the following example, only two of the three possible matches pass the predicate &lt;code&gt;test&lt;/code&gt; (the string &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="85ffc0c0143744d4e2b8094b05c47afef3598d23" translate="yes" xml:space="preserve">
          <source>Finally, the &lt;code&gt;svg-image&lt;/code&gt; takes an SVG object as its argument and returns an image object suitable for use in functions like &lt;code&gt;insert-image&lt;/code&gt;.</source>
          <target state="translated">Finalmente, &lt;code&gt;svg-image&lt;/code&gt; toma un objeto SVG como argumento y devuelve un objeto de imagen adecuado para su uso en funciones como &lt;code&gt;insert-image&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="324c545c922d562bc07d2165d05858f4c2204358" translate="yes" xml:space="preserve">
          <source>Finally, the &lt;em&gt;global keymap&lt;/em&gt; contains key bindings that are defined regardless of the current buffer, such as</source>
          <target state="translated">Finalmente, el &lt;em&gt;mapa de&lt;/em&gt; teclas &lt;em&gt;global&lt;/em&gt; contiene &lt;em&gt;combinaciones de&lt;/em&gt; teclas que se definen independientemente del b&amp;uacute;fer actual, como</target>
        </trans-unit>
        <trans-unit id="d5747d76af22cde76df111b9171bbfe1ef0d9121" translate="yes" xml:space="preserve">
          <source>Finally, the last part of the pattern matches any additional whitespace beyond the minimum needed to end a sentence.</source>
          <target state="translated">Por último,la última parte del patrón coincide con cualquier espacio en blanco adicional más allá del mínimo necesario para terminar una frase.</target>
        </trans-unit>
        <trans-unit id="51d9683535aae8eb5ee805c7c7cb6e34929d338c" translate="yes" xml:space="preserve">
          <source>Finally, this function passes the string through &lt;code&gt;substitute-command-keys&lt;/code&gt; to substitute key bindings (see &lt;a href=&quot;keys-in-documentation#Keys-in-Documentation&quot;&gt;Keys in Documentation&lt;/a&gt;). It skips this step if &lt;var&gt;verbatim&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Finalmente, esta funci&amp;oacute;n pasa la cadena a trav&amp;eacute;s &lt;code&gt;substitute-command-keys&lt;/code&gt; sustituci&amp;oacute;n para sustituir las combinaciones de teclas (consulte las &lt;a href=&quot;keys-in-documentation#Keys-in-Documentation&quot;&gt;teclas en la documentaci&amp;oacute;n&lt;/a&gt; ). Omite este paso si &lt;var&gt;verbatim&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7ca4154f841daffd43e50a5f7de86f96c33aadc3" translate="yes" xml:space="preserve">
          <source>Finally, unless &lt;var&gt;verbatim&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function calls &lt;code&gt;substitute-command-keys&lt;/code&gt;. The result is the documentation string to return.</source>
          <target state="translated">Finalmente, a menos que &lt;var&gt;verbatim&lt;/var&gt; sea ​​no- &lt;code&gt;nil&lt;/code&gt; , esta funci&amp;oacute;n llama &lt;code&gt;substitute-command-keys&lt;/code&gt; . El resultado es la cadena de documentaci&amp;oacute;n que se devolver&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="62487a369295a12ce9fd6f501b0a5a07e8d954e7" translate="yes" xml:space="preserve">
          <source>Finally, we evaluate the following:</source>
          <target state="translated">Finalmente,evaluamos lo siguiente:</target>
        </trans-unit>
        <trans-unit id="c9414bf74a898debd0d63dd3bc6a719232ad7a25" translate="yes" xml:space="preserve">
          <source>Finally, we show the use of a function as an output stream. The function &lt;code&gt;eat-output&lt;/code&gt; takes each character that it is given and conses it onto the front of the list &lt;code&gt;last-output&lt;/code&gt; (see &lt;a href=&quot;building-lists#Building-Lists&quot;&gt;Building Lists&lt;/a&gt;). At the end, the list contains all the characters output, but in reverse order.</source>
          <target state="translated">Finalmente, mostramos el uso de una funci&amp;oacute;n como flujo de salida. La funci&amp;oacute;n &lt;code&gt;eat-output&lt;/code&gt; toma cada car&amp;aacute;cter que se le da y lo coloca al frente de la lista &lt;code&gt;last-output&lt;/code&gt; (ver &lt;a href=&quot;building-lists#Building-Lists&quot;&gt;Creaci&amp;oacute;n de listas&lt;/a&gt; ). Al final, la lista contiene todos los caracteres de salida, pero en orden inverso.</target>
        </trans-unit>
        <trans-unit id="647199d379e204b551bb8caf6eee952a5a23099d" translate="yes" xml:space="preserve">
          <source>Finally, you can write a module that will work with older versions of Emacs, by comparing the size of the environment passed by Emacs with known sizes, like this:</source>
          <target state="translated">Por último,puedes escribir un módulo que funcione con versiones antiguas de Emacs,comparando el tamaño del entorno pasado por Emacs con tamaños conocidos,como este:</target>
        </trans-unit>
        <trans-unit id="7e2eb9516a141724f8015ce1c62ea5bd295c5971" translate="yes" xml:space="preserve">
          <source>Finally, you may want to change how the key is presented. By default, the key is simply shown as a &lt;code&gt;const&lt;/code&gt;, since the user cannot change the special keys specified with the &lt;code&gt;:options&lt;/code&gt; keyword. However, you may want to use a more specialized type for presenting the key, like &lt;code&gt;function-item&lt;/code&gt; if you know it is a symbol with a function binding. This is done by using a customization type specification instead of a symbol for the key.</source>
          <target state="translated">Por &amp;uacute;ltimo, es posible que desee cambiar la forma en que se presenta la clave. Por defecto, la clave simplemente se muestra como una &lt;code&gt;const&lt;/code&gt; ante , ya que el usuario no puede cambiar las claves especiales especificadas con la palabra clave &lt;code&gt;:options&lt;/code&gt; . Sin embargo, es posible que desee utilizar un tipo m&amp;aacute;s especializado para presentar la clave, como &lt;code&gt;function-item&lt;/code&gt; si sabe que es un s&amp;iacute;mbolo con un enlace de funci&amp;oacute;n. Esto se hace usando una especificaci&amp;oacute;n de tipo de personalizaci&amp;oacute;n en lugar de un s&amp;iacute;mbolo para la clave.</target>
        </trans-unit>
        <trans-unit id="6139bc12e79d6ddfa470ee70765f39ffc7d5d3f7" translate="yes" xml:space="preserve">
          <source>Finally, you should bind the Lisp function to a symbol, so that Lisp code could call your function by name. For that, use the module</source>
          <target state="translated">Por último,debería vincular la función Lisp a un símbolo,para que el código Lisp pueda llamar a su función por su nombre.Para ello,utilice el módulo</target>
        </trans-unit>
        <trans-unit id="f12091ef2518a74b62d963c79a01a261eecf14dd" translate="yes" xml:space="preserve">
          <source>Find text by calling &lt;var&gt;function&lt;/var&gt;, and highlight the matches it finds using &lt;code&gt;font-lock-keyword-face&lt;/code&gt;.</source>
          <target state="translated">Busque texto llamando a la &lt;var&gt;function&lt;/var&gt; y resalte las coincidencias que encuentre usando &lt;code&gt;font-lock-keyword-face&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8cb62b760103f3a5ef30dca2a1575326a388a92" translate="yes" xml:space="preserve">
          <source>Finding All Frames</source>
          <target state="translated">Encontrar todos los marcos</target>
        </trans-unit>
        <trans-unit id="a8cd235836e49a75690240ec59ef6b0111bd200d" translate="yes" xml:space="preserve">
          <source>Finding a key&amp;rsquo;s binding in one keymap.</source>
          <target state="translated">Encontrar la vinculaci&amp;oacute;n de una tecla en un mapa de teclas.</target>
        </trans-unit>
        <trans-unit id="a67031d1c0586751352731157ea673a33fc1c359" translate="yes" xml:space="preserve">
          <source>Finding a library to load.</source>
          <target state="translated">Encontrar una biblioteca para cargar.</target>
        </trans-unit>
        <trans-unit id="ab6f2de981c47e18ec86a3accd270c86a07d11d8" translate="yes" xml:space="preserve">
          <source>Finding out how to use a mode.</source>
          <target state="translated">Averiguar cómo usar un modo.</target>
        </trans-unit>
        <trans-unit id="0d0744b64ec0a329edc14df06db4976aa9a1b6db" translate="yes" xml:space="preserve">
          <source>Finding out which part of the text matched, after a string or regexp search.</source>
          <target state="translated">Averiguar qué parte del texto coincide,después de una búsqueda de cadena o regexp.</target>
        </trans-unit>
        <trans-unit id="27eab570847d4819c36162c48efadc0e3c73b621" translate="yes" xml:space="preserve">
          <source>Finding the Parse State for a Position</source>
          <target state="translated">Encontrar el Estado de Parse para una posición</target>
        </trans-unit>
        <trans-unit id="3195ca9dd575bda2ce1d7ab996bdec288335a881" translate="yes" xml:space="preserve">
          <source>Finding the best available font for a face.</source>
          <target state="translated">Encontrar la mejor fuente disponible para una cara.</target>
        </trans-unit>
        <trans-unit id="75464c6f702ec7d0a0ab3508c4d05f31a92e0c06" translate="yes" xml:space="preserve">
          <source>Finding the completions for a given file name.</source>
          <target state="translated">Encontrar las terminaciones para un nombre de archivo determinado.</target>
        </trans-unit>
        <trans-unit id="7e13eb28305d03d9b543ab78212d5a631cf6470c" translate="yes" xml:space="preserve">
          <source>Finding the marker&amp;rsquo;s buffer or character position.</source>
          <target state="translated">Encontrar el b&amp;uacute;fer o la posici&amp;oacute;n del car&amp;aacute;cter del marcador.</target>
        </trans-unit>
        <trans-unit id="23b8f2102b2b397aff77e6066d02a87e98e53ab4" translate="yes" xml:space="preserve">
          <source>Finding the modifier keys in an event symbol. Event types.</source>
          <target state="translated">Encontrar las teclas modificadoras en un símbolo de evento.Tipos de eventos.</target>
        </trans-unit>
        <trans-unit id="b33cfe3f2c7699c5039e1b04ea03cad84c95d16c" translate="yes" xml:space="preserve">
          <source>Finding the name and user id of the user.</source>
          <target state="translated">Encontrar el nombre y la identificación del usuario.</target>
        </trans-unit>
        <trans-unit id="bf7ab483bdaaa051136602ca4b6d78f94660a87a" translate="yes" xml:space="preserve">
          <source>Finding which file defined a certain symbol.</source>
          <target state="translated">Encontrar qué archivo definió un determinado símbolo.</target>
        </trans-unit>
        <trans-unit id="5a96053867634128a72855dbe818f35bd9b03414" translate="yes" xml:space="preserve">
          <source>First, &lt;code&gt;let&lt;/code&gt; evaluates &lt;code&gt;(list&amp;nbsp;&quot;149&quot;&amp;nbsp;'default)&lt;/code&gt; to get &lt;code&gt;(&quot;149&quot;&amp;nbsp;default)&lt;/code&gt;, the &lt;var&gt;exprval&lt;/var&gt;, and then tries to match &lt;var&gt;exprval&lt;/var&gt; against pattern &lt;code&gt;val&lt;/code&gt;. Since that is a &lt;var&gt;symbol&lt;/var&gt; pattern, it matches unconditionally and additionally binds &lt;code&gt;val&lt;/code&gt; to &lt;var&gt;exprval&lt;/var&gt;. Now that &lt;code&gt;let&lt;/code&gt; has matched, &lt;code&gt;or&lt;/code&gt; matches.</source>
          <target state="translated">Primero, &lt;code&gt;let&lt;/code&gt; eval&amp;uacute;e &lt;code&gt;(list&amp;nbsp;&quot;149&quot;&amp;nbsp;'default)&lt;/code&gt; para obtener &lt;code&gt;(&quot;149&quot;&amp;nbsp;default)&lt;/code&gt; , el &lt;var&gt;exprval&lt;/var&gt; , y luego intenta hacer coincidir &lt;var&gt;exprval&lt;/var&gt; con el patr&amp;oacute;n &lt;code&gt;val&lt;/code&gt; . Dado que ese es un patr&amp;oacute;n de &lt;var&gt;symbol&lt;/var&gt; , coincide incondicionalmente y, adem&amp;aacute;s, une &lt;code&gt;val&lt;/code&gt; a &lt;var&gt;exprval&lt;/var&gt; . Ahora que &lt;code&gt;let&lt;/code&gt; ha igualado, &lt;code&gt;or&lt;/code&gt; partidos.</target>
        </trans-unit>
        <trans-unit id="1a5d8cc1e281a98d0c6c309e36c19d33c4d11f54" translate="yes" xml:space="preserve">
          <source>First, &lt;code&gt;pred&lt;/code&gt; matches if &lt;code&gt;(integerp&amp;nbsp;&lt;var&gt;expval&lt;/var&gt;)&lt;/code&gt; evaluates to non-&lt;code&gt;nil&lt;/code&gt;. Next, &lt;code&gt;n&lt;/code&gt; is a &lt;var&gt;symbol&lt;/var&gt; pattern that matches anything and binds &lt;code&gt;n&lt;/code&gt; to &lt;var&gt;expval&lt;/var&gt;. Lastly, &lt;code&gt;guard&lt;/code&gt; matches if the boolean expression &lt;code&gt;(&amp;lt;=&amp;nbsp;-9&amp;nbsp;n&amp;nbsp;9)&lt;/code&gt; (note the reference to &lt;code&gt;n&lt;/code&gt;) evaluates to non-&lt;code&gt;nil&lt;/code&gt;. If all these sub-patterns match, &lt;code&gt;and&lt;/code&gt; matches.</source>
          <target state="translated">Primero, &lt;code&gt;pred&lt;/code&gt; coincide con si &lt;code&gt;(integerp&amp;nbsp;&lt;var&gt;expval&lt;/var&gt;)&lt;/code&gt; eval&amp;uacute;a como no &lt;code&gt;nil&lt;/code&gt; . A continuaci&amp;oacute;n, &lt;code&gt;n&lt;/code&gt; es un patr&amp;oacute;n de &lt;var&gt;symbol&lt;/var&gt; que coincide con cualquier cosa y une &lt;code&gt;n&lt;/code&gt; a &lt;var&gt;expval&lt;/var&gt; . Por &amp;uacute;ltimo, &lt;code&gt;guard&lt;/code&gt; coincide si la expresi&amp;oacute;n booleana &lt;code&gt;(&amp;lt;=&amp;nbsp;-9&amp;nbsp;n&amp;nbsp;9)&lt;/code&gt; (observe la referencia &lt;code&gt;n&lt;/code&gt; ) se eval&amp;uacute;a como no- &lt;code&gt;nil&lt;/code&gt; . Si todos estos subpatrones coinciden, &lt;code&gt;and&lt;/code&gt; coincide.</target>
        </trans-unit>
        <trans-unit id="5602cfe37b2d2e8488d61df67b252418140d07f1" translate="yes" xml:space="preserve">
          <source>First, it checks whether Transient Mark mode is enabled and the region is active. If so, it calls &lt;code&gt;indent-region&lt;/code&gt; to indent all the text in the region (see &lt;a href=&quot;region-indent#Region-Indent&quot;&gt;Region Indent&lt;/a&gt;).</source>
          <target state="translated">Primero, verifica si el modo Transient Mark est&amp;aacute; habilitado y la regi&amp;oacute;n est&amp;aacute; activa. Si es as&amp;iacute;, llama a &lt;code&gt;indent-region&lt;/code&gt; para aplicar sangr&amp;iacute;a a todo el texto de la regi&amp;oacute;n (consulte &lt;a href=&quot;region-indent#Region-Indent&quot;&gt;Sangr&amp;iacute;a de regi&amp;oacute;n&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="5cc90ac529a1a596c4f7b306925e3c27b2eadc5e" translate="yes" xml:space="preserve">
          <source>First, such buffers must have a suitable &lt;code&gt;revert-buffer-function&lt;/code&gt; and &lt;code&gt;buffer-stale-function&lt;/code&gt; defined.</source>
          <target state="translated">En primer lugar, tales tampones deben tener una adecuada &lt;code&gt;revert-buffer-function&lt;/code&gt; y &lt;code&gt;buffer-stale-function&lt;/code&gt; definida.</target>
        </trans-unit>
        <trans-unit id="0fc3309066ed5f2ff1aa4525ffedf257cd1d0f93" translate="yes" xml:space="preserve">
          <source>First, this command expands any abbrev before point, unless &lt;var&gt;arg&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;. (Interactively, &lt;var&gt;arg&lt;/var&gt; is the prefix argument.) Then it inserts a hyphen before point, to indicate the start of the next abbrev to be expanded. The actual expansion removes the hyphen.</source>
          <target state="translated">Primero, este comando expande cualquier abreviatura antes del punto, a menos que &lt;var&gt;arg&lt;/var&gt; no sea &lt;code&gt;nil&lt;/code&gt; . (Interactivamente, &lt;var&gt;arg&lt;/var&gt; es el argumento de prefijo). Luego inserta un gui&amp;oacute;n antes del punto, para indicar el comienzo de la siguiente abreviatura que se expandir&amp;aacute;. La expansi&amp;oacute;n real elimina el gui&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="a774409a00c21de377cf8ed5c6a56b8547973042" translate="yes" xml:space="preserve">
          <source>Flag</source>
          <target state="translated">Flag</target>
        </trans-unit>
        <trans-unit id="668fcf1810b2ce389d0b1a207b70b01210d0ace2" translate="yes" xml:space="preserve">
          <source>Flag the current frame like</source>
          <target state="translated">Marque el cuadro actual como</target>
        </trans-unit>
        <trans-unit id="6a56cfecdba7ea96836380ed1e69b4a44f61a462" translate="yes" xml:space="preserve">
          <source>Flag the current frame so that the debugger will be entered when the frame is exited. Frames flagged in this way are marked with stars in the backtrace buffer.</source>
          <target state="translated">Marque el cuadro actual para que el depurador entre cuando salga del cuadro.Los cuadros marcados de esta manera están marcados con estrellas en el buffer de rastreo.</target>
        </trans-unit>
        <trans-unit id="8493365622f8f23a430a6e553cd0fa55fbb91b58" translate="yes" xml:space="preserve">
          <source>Flag to set &lt;code&gt;coding-system&lt;/code&gt; of the process buffer from the coding system used to decode process output.</source>
          <target state="translated">Bandera para establecer &lt;code&gt;coding-system&lt;/code&gt; de codificaci&amp;oacute;n del b&amp;uacute;fer de proceso del sistema de codificaci&amp;oacute;n utilizado para decodificar la salida del proceso.</target>
        </trans-unit>
        <trans-unit id="d15cd35cc1267b2e5feff273e3273e81715a547f" translate="yes" xml:space="preserve">
          <source>Floating-Point Basics</source>
          <target state="translated">Conceptos básicos de punto flotante</target>
        </trans-unit>
        <trans-unit id="bdb039dcc477ba3def70845b9d2585d93f962bc6" translate="yes" xml:space="preserve">
          <source>Floating-Point Type</source>
          <target state="translated">Tipo de punto flotante</target>
        </trans-unit>
        <trans-unit id="438bbb63180abb99b9a1a681f77aa34c104b3d49" translate="yes" xml:space="preserve">
          <source>Floating-point numbers are the computer equivalent of scientific notation; you can think of a floating-point number as a fraction together with a power of ten. The precise number of significant figures and the range of possible exponents is machine-specific; Emacs uses the C data type &lt;code&gt;double&lt;/code&gt; to store the value, and internally this records a power of 2 rather than a power of 10.</source>
          <target state="translated">Los n&amp;uacute;meros de coma flotante son el equivalente inform&amp;aacute;tico de la notaci&amp;oacute;n cient&amp;iacute;fica; puede pensar en un n&amp;uacute;mero de punto flotante como una fracci&amp;oacute;n junto con una potencia de diez. El n&amp;uacute;mero exacto de cifras significativas y el rango de posibles exponentes es espec&amp;iacute;fico de la m&amp;aacute;quina; Emacs usa el tipo de datos C &lt;code&gt;double&lt;/code&gt; para almacenar el valor, e internamente esto registra una potencia de 2 en lugar de una potencia de 10.</target>
        </trans-unit>
        <trans-unit id="bab4f9b32cf539639489e8df679cc5fcd42c2607" translate="yes" xml:space="preserve">
          <source>Floating-point numbers are useful for representing numbers that are not integral. The range of floating-point numbers is the same as the range of the C data type &lt;code&gt;double&lt;/code&gt; on the machine you are using. On all computers supported by Emacs, this is</source>
          <target state="translated">Los n&amp;uacute;meros de coma flotante son &amp;uacute;tiles para representar n&amp;uacute;meros que no son integrales. El rango de n&amp;uacute;meros de punto flotante es el mismo que el rango del tipo de datos C &lt;code&gt;double&lt;/code&gt; en la m&amp;aacute;quina que est&amp;aacute; utilizando. En todas las computadoras compatibles con Emacs, esto es</target>
        </trans-unit>
        <trans-unit id="6fb0f1fe4e017c28f8eea1d36230c9eb45418e19" translate="yes" xml:space="preserve">
          <source>Floating-point value.</source>
          <target state="translated">Valor de punto flotante.</target>
        </trans-unit>
        <trans-unit id="81c6e47ced4689fc9b50ffb6c5d899c6c3458d6a" translate="yes" xml:space="preserve">
          <source>Focus Events</source>
          <target state="translated">Eventos de enfoque</target>
        </trans-unit>
        <trans-unit id="1e645b972bad2a1f5548e11a059f25456c18a168" translate="yes" xml:space="preserve">
          <source>Focus events are represented in Lisp as lists that look like this:</source>
          <target state="translated">Los eventos de enfoque están representados en Lisp como listas que se parecen a esto:</target>
        </trans-unit>
        <trans-unit id="17682d88592b02229ac424a4f95bc51968287272" translate="yes" xml:space="preserve">
          <source>Folding or wrapping long text lines.</source>
          <target state="translated">Doblar o envolver líneas de texto largas.</target>
        </trans-unit>
        <trans-unit id="16be6fc4be7857cb1d203506b203e9ae71dbe2e1" translate="yes" xml:space="preserve">
          <source>Font Lock Basics</source>
          <target state="translated">Fundamentos de la cerradura de la fuente</target>
        </trans-unit>
        <trans-unit id="efe3d0b886a6e6756ec774cf390598b0e5ff9f14" translate="yes" xml:space="preserve">
          <source>Font Lock Mode</source>
          <target state="translated">Modo de bloqueo de fuentes</target>
        </trans-unit>
        <trans-unit id="8bf72cf6fee44ae0e97096fd69d4ebe9361c9ec8" translate="yes" xml:space="preserve">
          <source>Font Lock Multiline</source>
          <target state="translated">Font Lock Multiline</target>
        </trans-unit>
        <trans-unit id="ab0acf1261e924742450fde03462e9eccf261b91" translate="yes" xml:space="preserve">
          <source>Font Lock mode (see &lt;a href=&quot;font-lock-mode#Font-Lock-Mode&quot;&gt;Font Lock Mode&lt;/a&gt;) works in most buffers by dynamically updating the &lt;code&gt;face&lt;/code&gt; property of characters based on the context.</source>
          <target state="translated">El modo de bloqueo de fuente (consulte &lt;a href=&quot;font-lock-mode#Font-Lock-Mode&quot;&gt;Modo de bloqueo de fuente&lt;/a&gt; ) funciona en la mayor&amp;iacute;a de los b&amp;uacute;feres actualizando din&amp;aacute;micamente la propiedad de la &lt;code&gt;face&lt;/code&gt; de los caracteres seg&amp;uacute;n el contexto.</target>
        </trans-unit>
        <trans-unit id="c6ae546df279ab14850a00208c2542e4e12f0d10" translate="yes" xml:space="preserve">
          <source>Font Lock mode can highlight using any face, but Emacs defines several faces specifically for Font Lock to use to highlight text. These &lt;em&gt;Font Lock faces&lt;/em&gt; are listed below. They can also be used by major modes for syntactic highlighting outside of Font Lock mode (see &lt;a href=&quot;major-mode-conventions#Major-Mode-Conventions&quot;&gt;Major Mode Conventions&lt;/a&gt;).</source>
          <target state="translated">El modo Font Lock puede resaltar usando cualquier cara, pero Emacs define varias caras espec&amp;iacute;ficamente para que Font Lock las utilice para resaltar texto. Estas &lt;em&gt;caras de Font Lock&lt;/em&gt; se enumeran a continuaci&amp;oacute;n. Tambi&amp;eacute;n se pueden utilizar en los modos principales para el resaltado sint&amp;aacute;ctico fuera del modo Bloqueo de fuente (consulte &lt;a href=&quot;major-mode-conventions#Major-Mode-Conventions&quot;&gt;Convenciones del modo principal&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="d3a49e72d5752fd0a1f1609dc66d91f9adac11be" translate="yes" xml:space="preserve">
          <source>Font Lock mode finds text to highlight in two ways: through syntactic parsing based on the syntax table, and through searching (usually for regular expressions). Syntactic fontification happens first; it finds comments and string constants and highlights them. Search-based fontification happens second.</source>
          <target state="translated">El modo Font Lock encuentra el texto a resaltar de dos maneras:a través del análisis sintáctico basado en la tabla de sintaxis,y a través de la búsqueda (normalmente de expresiones regulares).La fontificación sintáctica ocurre primero;encuentra comentarios y constantes de cadena y los resalta.La fontificación basada en la búsqueda ocurre en segundo lugar.</target>
        </trans-unit>
        <trans-unit id="f2a4b0d06bd26c4094acc6d06be6c29713210fab" translate="yes" xml:space="preserve">
          <source>Font Selection</source>
          <target state="translated">Selección de fuentes</target>
        </trans-unit>
        <trans-unit id="1870afcff000c92cc31bceeb4d9b4496c9271455" translate="yes" xml:space="preserve">
          <source>Font Type</source>
          <target state="translated">Tipo de fuente</target>
        </trans-unit>
        <trans-unit id="97f6e4b3b5283deebf4eb8440ae1032cce6d2c82" translate="yes" xml:space="preserve">
          <source>Font and Color Parameters</source>
          <target state="translated">Parámetros de fuente y color</target>
        </trans-unit>
        <trans-unit id="617a7feac03d690c7d634c9921443adedf9077eb" translate="yes" xml:space="preserve">
          <source>Font family name (a string). See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Fonts.html#Fonts&quot;&gt;Fonts&lt;/a&gt; in</source>
          <target state="translated">Nombre de la familia de fuentes (una cadena). Ver &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Fonts.html#Fonts&quot;&gt;fuentes&lt;/a&gt; en</target>
        </trans-unit>
        <trans-unit id="d98ba0cd2d45c74c9105fe36f65c1febba92edd8" translate="yes" xml:space="preserve">
          <source>Font family name (a string). See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Fonts.html#Fonts&quot;&gt;Fonts&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6b554a056e5bc46e18cdfad97f7433899edd323" translate="yes" xml:space="preserve">
          <source>Font selection first finds the best available matches for the first attribute in the list; then, among the fonts which are best in that way, it searches for the best matches in the second attribute, and so on.</source>
          <target state="translated">La selección de fuentes encuentra primero las mejores coincidencias disponibles para el primer atributo de la lista;luego,entre las fuentes que son mejores en ese sentido,busca las mejores coincidencias en el segundo atributo,y así sucesivamente.</target>
        </trans-unit>
        <trans-unit id="a89193453fac12819a631009c0355f965f7d396b" translate="yes" xml:space="preserve">
          <source>Font slant&amp;mdash;one of the symbols &lt;code&gt;italic&lt;/code&gt;, &lt;code&gt;oblique&lt;/code&gt;, &lt;code&gt;normal&lt;/code&gt;, &lt;code&gt;reverse-italic&lt;/code&gt;, or &lt;code&gt;reverse-oblique&lt;/code&gt;. On text terminals that support variable-brightness text, slanted text is displayed as half-bright.</source>
          <target state="translated">Fuente inclinada: uno de los s&amp;iacute;mbolos es &lt;code&gt;italic&lt;/code&gt; , &lt;code&gt;oblique&lt;/code&gt; , &lt;code&gt;normal&lt;/code&gt; , &lt;code&gt;reverse-italic&lt;/code&gt; &lt;code&gt;reverse-oblique&lt;/code&gt; o oblicua inversa . En los terminales de texto que admiten texto con brillo variable, el texto inclinado se muestra medio brillante.</target>
        </trans-unit>
        <trans-unit id="121db6402441bd0541f0b53862701a0d2fbef923" translate="yes" xml:space="preserve">
          <source>Font weight&amp;mdash;one of the symbols (from densest to faintest) &lt;code&gt;ultra-bold&lt;/code&gt;, &lt;code&gt;extra-bold&lt;/code&gt;, &lt;code&gt;bold&lt;/code&gt;, &lt;code&gt;semi-bold&lt;/code&gt;, &lt;code&gt;normal&lt;/code&gt;, &lt;code&gt;semi-light&lt;/code&gt;, &lt;code&gt;light&lt;/code&gt;, &lt;code&gt;extra-light&lt;/code&gt;, or &lt;code&gt;ultra-light&lt;/code&gt;. On text terminals which support variable-brightness text, any weight greater than normal is displayed as extra bright, and any weight less than normal is displayed as half-bright.</source>
          <target state="translated">Peso de fuente: uno de los s&amp;iacute;mbolos (del m&amp;aacute;s denso al m&amp;aacute;s tenue) &lt;code&gt;ultra-bold&lt;/code&gt; , &lt;code&gt;extra-bold&lt;/code&gt; , &lt;code&gt;bold&lt;/code&gt; , &lt;code&gt;semi-bold&lt;/code&gt; , &lt;code&gt;normal&lt;/code&gt; , &lt;code&gt;semi-light&lt;/code&gt; , &lt;code&gt;light&lt;/code&gt; , &lt;code&gt;extra-light&lt;/code&gt; o &lt;code&gt;ultra-light&lt;/code&gt; . En los terminales de texto que admiten texto con brillo variable, cualquier peso mayor de lo normal se muestra como extra brillante y cualquier peso menor de lo normal se muestra como medio brillante.</target>
        </trans-unit>
        <trans-unit id="8c2ebf48420ae343561df753e43b69aad019c4ec" translate="yes" xml:space="preserve">
          <source>Fontification based on regexps.</source>
          <target state="translated">Fontificación basada en regexps.</target>
        </trans-unit>
        <trans-unit id="0a19191afa15ace9553b653b0ab1817384edcea4" translate="yes" xml:space="preserve">
          <source>Fontification based on syntax tables.</source>
          <target state="translated">Fontificación basada en tablas de sintaxis.</target>
        </trans-unit>
        <trans-unit id="d990de39c1d8401b13a944ac86e95f418f2b1274" translate="yes" xml:space="preserve">
          <source>Fontification will call &lt;var&gt;function&lt;/var&gt; repeatedly with the same limit, and with point where the previous invocation left it, until &lt;var&gt;function&lt;/var&gt; fails. On failure, &lt;var&gt;function&lt;/var&gt; need not reset point in any particular way.</source>
          <target state="translated">Fontification llamar&amp;aacute; a la &lt;var&gt;function&lt;/var&gt; repetidamente con el mismo l&amp;iacute;mite, y con el punto donde lo dej&amp;oacute; la invocaci&amp;oacute;n anterior, hasta que la &lt;var&gt;function&lt;/var&gt; falle. En caso de falla, la &lt;var&gt;function&lt;/var&gt; no necesita restablecer el punto de ninguna manera en particular.</target>
        </trans-unit>
        <trans-unit id="f6a9f42468c4ad6da6bdd3029c4061af9efedf85" translate="yes" xml:space="preserve">
          <source>Fonts and colors for the frame text.</source>
          <target state="translated">Fuentes y colores para el texto del marco.</target>
        </trans-unit>
        <trans-unit id="370c5f43426613481fdfffd5afd2ec8451dd4bee" translate="yes" xml:space="preserve">
          <source>Fonts for displaying text.</source>
          <target state="translated">Fuentes para mostrar el texto.</target>
        </trans-unit>
        <trans-unit id="6b4cad525641bf7699e6ab0211542150965ffbb4" translate="yes" xml:space="preserve">
          <source>Fontset-&lt;var&gt;n&lt;/var&gt;</source>
          <target state="translated">Fontset-&lt;var&gt;n&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="4a83fc4223f6f835230963f891f5894b226b7af2" translate="yes" xml:space="preserve">
          <source>Fontsets</source>
          <target state="translated">Fontsets</target>
        </trans-unit>
        <trans-unit id="0c6aa77e19ef0b153d085a45f431eea8c9bf5723" translate="yes" xml:space="preserve">
          <source>Fontsets can specify a font on a per-character basis; when the fontset does that, this function&amp;rsquo;s value may not be accurate.</source>
          <target state="translated">Los conjuntos de fuentes pueden especificar una fuente por car&amp;aacute;cter; cuando el conjunto de fuentes hace eso, el valor de esta funci&amp;oacute;n puede no ser exacto.</target>
        </trans-unit>
        <trans-unit id="201a6b3053cc1422d2c3670b62616221d2290929" translate="yes" xml:space="preserve">
          <source>Foo</source>
          <target state="translated">Foo</target>
        </trans-unit>
        <trans-unit id="222782d2ff4c7cc6cf5c4bdeffe7941e2dd46d68" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;:before&lt;/code&gt; advice, being outermost means that this advice will be run first, before any other advice, whereas being innermost means that it will run right before the original function, with no other advice run between itself and the original function. Similarly, for &lt;code&gt;:after&lt;/code&gt; advice innermost means that it will run right after the original function, with no other advice run in between, whereas outermost means that it will be run right at the end after all other advice. An innermost &lt;code&gt;:override&lt;/code&gt; piece of advice will only override the original function and other pieces of advice will apply to it, whereas an outermost &lt;code&gt;:override&lt;/code&gt; piece of advice will override not only the original function but all other advice applied to it as well.</source>
          <target state="translated">Para &lt;code&gt;:before&lt;/code&gt; consejo, ser m&amp;aacute;s externo significa que este consejo se ejecutar&amp;aacute; primero, antes que cualquier otro consejo, mientras que ser m&amp;aacute;s interno significa que se ejecutar&amp;aacute; justo antes de la funci&amp;oacute;n original, sin que se ejecuten otros consejos entre &amp;eacute;l y la funci&amp;oacute;n original. De manera similar, para &lt;code&gt;:after&lt;/code&gt; consejo, el m&amp;aacute;s interno significa que se ejecutar&amp;aacute; inmediatamente despu&amp;eacute;s de la funci&amp;oacute;n original, sin que se ejecute ning&amp;uacute;n otro consejo en el medio, mientras que el m&amp;aacute;s externo significa que se ejecutar&amp;aacute; justo al final despu&amp;eacute;s de todos los dem&amp;aacute;s consejos. Un consejo m&amp;aacute;s interno &lt;code&gt;:override&lt;/code&gt; solo anular&amp;aacute; la funci&amp;oacute;n original y se le aplicar&amp;aacute;n otros consejos, mientras que un consejo m&amp;aacute;s externo &lt;code&gt;:override&lt;/code&gt; anular&amp;aacute; no solo la funci&amp;oacute;n original sino tambi&amp;eacute;n todos los dem&amp;aacute;s consejos que se le apliquen.</target>
        </trans-unit>
        <trans-unit id="780a29736b25c508c29c6a3dedd3caa74f5f9492" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;equal&lt;/code&gt;, equality is defined recursively; for example, given two cons cells &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt;, &lt;code&gt;(equal &lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; returns &lt;code&gt;t&lt;/code&gt; if and only if both the expressions below return &lt;code&gt;t&lt;/code&gt;:</source>
          <target state="translated">Por &lt;code&gt;equal&lt;/code&gt; , la igualdad se define de forma recursiva; por ejemplo, dados dos cons cells &lt;var&gt;x&lt;/var&gt; y &lt;var&gt;y&lt;/var&gt; , &lt;code&gt;(equal &lt;var&gt;x&lt;/var&gt; &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; vuelve &lt;code&gt;t&lt;/code&gt; si y s&amp;oacute;lo si tanto las expresiones siguientes retorno &lt;code&gt;t&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8361c92b5f57d869af5b95ec47c3be590e320ff7" translate="yes" xml:space="preserve">
          <source>For A, because symbol &lt;code&gt;st&lt;/code&gt; is mentioned twice, the second mention becomes an equality test using &lt;code&gt;eq&lt;/code&gt;. On the other hand, B uses two separate symbols, &lt;code&gt;s1&lt;/code&gt; and &lt;code&gt;s2&lt;/code&gt;, both of which become independent bindings.</source>
          <target state="translated">Para A, debido a que el s&amp;iacute;mbolo &lt;code&gt;st&lt;/code&gt; se menciona dos veces, la segunda menci&amp;oacute;n se convierte en una prueba de igualdad usando la &lt;code&gt;eq&lt;/code&gt; . Por otro lado, B usa dos s&amp;iacute;mbolos separados, &lt;code&gt;s1&lt;/code&gt; y &lt;code&gt;s2&lt;/code&gt; , los cuales se convierten en enlaces independientes.</target>
        </trans-unit>
        <trans-unit id="b11610eb910bc3e09bb05d152b90cc4ed3de8e14" translate="yes" xml:space="preserve">
          <source>For Emacs Lisp mode, &lt;code&gt;imenu-generic-expression&lt;/code&gt; could look like this:</source>
          <target state="translated">Para el modo Emacs Lisp, &lt;code&gt;imenu-generic-expression&lt;/code&gt; podr&amp;iacute;a verse as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="4afc5c50d3365855eb6afc17378478bbb50beccb" translate="yes" xml:space="preserve">
          <source>For PBM images, specify image type &lt;code&gt;pbm&lt;/code&gt;. Color, gray-scale and monochromatic images are supported. For mono PBM images, two additional image properties are supported.</source>
          <target state="translated">Para im&amp;aacute;genes PBM, especifique el tipo de imagen &lt;code&gt;pbm&lt;/code&gt; . Se admiten im&amp;aacute;genes en color, escala de grises y monocrom&amp;aacute;ticas. Para im&amp;aacute;genes mono PBM, se admiten dos propiedades de imagen adicionales.</target>
        </trans-unit>
        <trans-unit id="e4029ea038ac2bc1533dfd42dca15945911a6e65" translate="yes" xml:space="preserve">
          <source>For a connection, &lt;var&gt;remote-address&lt;/var&gt; is the address to connect to. It overrides &lt;var&gt;family&lt;/var&gt;, &lt;var&gt;host&lt;/var&gt; and &lt;var&gt;service&lt;/var&gt;, so you might as well not specify them.</source>
          <target state="translated">Para una conexi&amp;oacute;n, &lt;var&gt;remote-address&lt;/var&gt; es la direcci&amp;oacute;n a la que conectarse. Anula la &lt;var&gt;family&lt;/var&gt; , el &lt;var&gt;host&lt;/var&gt; y el &lt;var&gt;service&lt;/var&gt; , por lo que es mejor que no los especifique.</target>
        </trans-unit>
        <trans-unit id="8dd44b177320bc6af9a166a79a69645b4af9478f" translate="yes" xml:space="preserve">
          <source>For a datagram server, &lt;var&gt;remote-address&lt;/var&gt; specifies the initial setting of the remote datagram address.</source>
          <target state="translated">Para un servidor de datagramas, &lt;var&gt;remote-address&lt;/var&gt; especifica la configuraci&amp;oacute;n inicial de la direcci&amp;oacute;n del datagrama remoto.</target>
        </trans-unit>
        <trans-unit id="1ec8cb627d21e3d182615eec57f529138243db39" translate="yes" xml:space="preserve">
          <source>For a drag event, the name of the symbol &lt;var&gt;event-type&lt;/var&gt; contains the prefix &amp;lsquo;</source>
          <target state="translated">Para un evento de arrastre, el nombre del &lt;var&gt;event-type&lt;/var&gt; s&amp;iacute;mbolo contiene el prefijo '</target>
        </trans-unit>
        <trans-unit id="c1a7557f2039cefe1324f701825e904b7b74f01b" translate="yes" xml:space="preserve">
          <source>For a few commands, these properties are present by default (you can remove them in your init file if you wish).</source>
          <target state="translated">Para algunos comandos,estas propiedades están presentes por defecto (puede eliminarlas en su archivo de inicio si lo desea).</target>
        </trans-unit>
        <trans-unit id="f158e15a661272a4f668cbe2ebc4100e6331ea32" translate="yes" xml:space="preserve">
          <source>For a fixed-size field, the length &lt;var&gt;len&lt;/var&gt; is given as an integer specifying the number of bytes in the field.</source>
          <target state="translated">Para un campo de tama&amp;ntilde;o fijo, la longitud &lt;var&gt;len&lt;/var&gt; se da como un n&amp;uacute;mero entero que especifica el n&amp;uacute;mero de bytes en el campo.</target>
        </trans-unit>
        <trans-unit id="94bf6db303e72a344c395d7b32f9f6b6c3a5e4f2" translate="yes" xml:space="preserve">
          <source>For a frame on a graphical terminal the following function returns the sizes of the areas described above:</source>
          <target state="translated">En el caso de un marco en un terminal gráfico,la siguiente función devuelve los tamaños de las áreas descritas anteriormente:</target>
        </trans-unit>
        <trans-unit id="f9a4455cc0875a8bb40f0c436c07d787c88d64b1" translate="yes" xml:space="preserve">
          <source>For a leaf window and windows showing a tooltip, this is the buffer, as a Lisp object, that the window is displaying. For an internal (&amp;ldquo;parent&amp;rdquo;) window, this is its first child window. For a pseudo window showing a menu or tool bar this is &lt;code&gt;nil&lt;/code&gt;. It is also &lt;code&gt;nil&lt;/code&gt; for a window that has been deleted.</source>
          <target state="translated">Para una ventana de hoja y ventanas que muestran una informaci&amp;oacute;n sobre herramientas, este es el b&amp;uacute;fer, como un objeto Lisp, que muestra la ventana. Para una ventana interna (&quot;principal&quot;), esta es su primera ventana secundaria. Para una pseudo ventana que muestra un men&amp;uacute; o una barra de herramientas, esto es &lt;code&gt;nil&lt;/code&gt; . Tambi&amp;eacute;n es &lt;code&gt;nil&lt;/code&gt; para una ventana que se ha eliminado.</target>
        </trans-unit>
        <trans-unit id="e541a81b69fdfc92f78d919c17ef443858ce2a88" translate="yes" xml:space="preserve">
          <source>For a more complete list of contributors, please see the relevant change log entries in the Emacs source repository.</source>
          <target state="translated">Para una lista más completa de colaboradores,por favor vea las entradas relevantes del registro de cambios en el repositorio de fuentes de Emacs.</target>
        </trans-unit>
        <trans-unit id="da33f8ed197d7dcafe1f10cf24364a3e44b8c16e" translate="yes" xml:space="preserve">
          <source>For a more elaborate example of using &lt;code&gt;defvar&lt;/code&gt; without a value, see &lt;a href=&quot;using-lexical-binding#Local-defvar-example&quot;&gt;Local defvar example&lt;/a&gt;.</source>
          <target state="translated">Para obtener un ejemplo m&amp;aacute;s elaborado del uso de &lt;code&gt;defvar&lt;/code&gt; sin un valor, consulte el &lt;a href=&quot;using-lexical-binding#Local-defvar-example&quot;&gt;ejemplo de defvar local&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1fba15c59889a0f613ee7b6254fb4cdcc2bf5070" translate="yes" xml:space="preserve">
          <source>For a more realistic example where you might use this, consider that you have a buffer where certain sections represent URLs, and these are tagged with &lt;code&gt;shr-url&lt;/code&gt;.</source>
          <target state="translated">Para obtener un ejemplo m&amp;aacute;s realista en el que puede usar esto, considere que tiene un b&amp;uacute;fer en el que ciertas secciones representan URL y estas est&amp;aacute;n etiquetadas con &lt;code&gt;shr-url&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="874be1ffef73392c67ae3ceb4571855edc9b38ac" translate="yes" xml:space="preserve">
          <source>For a more strict function (that will error out upon invalid input), this function can be used instead. It can parse all variants of the ISO 8601 standard, so in addition to the formats mentioned above, it also parses things like &amp;ldquo;1998W45-3&amp;rdquo; (week number) and &amp;ldquo;1998-245&amp;rdquo; (ordinal day number). To parse durations, there&amp;rsquo;s &lt;code&gt;iso8601-parse-duration&lt;/code&gt;, and to parse intervals, there&amp;rsquo;s &lt;code&gt;iso8601-parse-interval&lt;/code&gt;. All these functions return decoded time structures, except the final one, which returns three of them (the start, the end, and the duration).</source>
          <target state="translated">Para una funci&amp;oacute;n m&amp;aacute;s estricta (que producir&amp;aacute; un error en una entrada no v&amp;aacute;lida), esta funci&amp;oacute;n se puede utilizar en su lugar. Puede analizar todas las variantes del est&amp;aacute;ndar ISO 8601, por lo que adem&amp;aacute;s de los formatos mencionados anteriormente, tambi&amp;eacute;n analiza cosas como &amp;ldquo;1998W45-3&amp;rdquo; (n&amp;uacute;mero de semana) y &amp;ldquo;1998-245&amp;rdquo; (n&amp;uacute;mero de d&amp;iacute;a ordinal). Para analizar duraciones, hay &lt;code&gt;iso8601-parse-duration&lt;/code&gt; , y para analizar intervalos, hay &lt;code&gt;iso8601-parse-interval&lt;/code&gt; . Todas estas funciones devuelven estructuras de tiempo decodificadas, excepto la final, que devuelve tres de ellas (el inicio, el final y la duraci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="b1f0f2adf942c9d2dc3309bacacd2243cf7604e2" translate="yes" xml:space="preserve">
          <source>For a network process, the values include (see &lt;code&gt;make-network-process&lt;/code&gt; for a complete list):</source>
          <target state="translated">Para un proceso de red, los valores incluyen (consulte &lt;code&gt;make-network-process&lt;/code&gt; para obtener una lista completa):</target>
        </trans-unit>
        <trans-unit id="f153e1c5645a5e23d096b21d21ce109610d96b4d" translate="yes" xml:space="preserve">
          <source>For a network, serial, or pipe connection, &lt;code&gt;process-status&lt;/code&gt; returns one of the symbols &lt;code&gt;open&lt;/code&gt;, &lt;code&gt;stop&lt;/code&gt;, or &lt;code&gt;closed&lt;/code&gt;. The latter means that the other side closed the connection, or Emacs did &lt;code&gt;delete-process&lt;/code&gt;. The value &lt;code&gt;stop&lt;/code&gt; means that &lt;code&gt;stop-process&lt;/code&gt; was called on the connection.</source>
          <target state="translated">Para una conexi&amp;oacute;n de red, serie o tuber&amp;iacute;a, &lt;code&gt;process-status&lt;/code&gt; devuelve uno de los s&amp;iacute;mbolos &lt;code&gt;open&lt;/code&gt; , &lt;code&gt;stop&lt;/code&gt; o &lt;code&gt;closed&lt;/code&gt; . Esto &amp;uacute;ltimo significa que el otro lado cerr&amp;oacute; la conexi&amp;oacute;n, o Emacs &lt;code&gt;delete-process&lt;/code&gt; . El valor &lt;code&gt;stop&lt;/code&gt; significa que se llam&amp;oacute; a &lt;code&gt;stop-process&lt;/code&gt; en la conexi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="6d196b666ddfa5e2c84615cae0e329a107522c93" translate="yes" xml:space="preserve">
          <source>For a normal hook, hook functions should be designed so that the order in which they are executed does not matter. Any dependence on the order is asking for trouble. However, the order is predictable: normally, &lt;var&gt;function&lt;/var&gt; goes at the front of the hook list, so it is executed first (barring another &lt;code&gt;add-hook&lt;/code&gt; call).</source>
          <target state="translated">Para un gancho normal, las funciones de gancho deben dise&amp;ntilde;arse de modo que el orden en el que se ejecuten no importe. Cualquier dependencia del orden est&amp;aacute; buscando problemas. Sin embargo, el orden es predecible: normalmente, la &lt;var&gt;function&lt;/var&gt; va al principio de la lista de ganchos, por lo que se ejecuta primero (salvo otra llamada de &lt;code&gt;add-hook&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="07239215f7db505c2e2bbfc3f9963a1fb0a6ddbd" translate="yes" xml:space="preserve">
          <source>For a normal, non-child frame this function returns a cons of the pixel coordinates of its outer position (see &lt;a href=&quot;frame-layout#Frame-Layout&quot;&gt;Frame Layout&lt;/a&gt;) with respect to the origin &lt;code&gt;(0, 0)&lt;/code&gt; of its display. For a child frame (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;) this function returns the pixel coordinates of its outer position with respect to an origin &lt;code&gt;(0, 0)&lt;/code&gt; at the native position of &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s parent.</source>
          <target state="translated">Para un marco normal, no secundario, esta funci&amp;oacute;n devuelve una desventaja de las coordenadas de p&amp;iacute;xeles de su posici&amp;oacute;n exterior (ver &lt;a href=&quot;frame-layout#Frame-Layout&quot;&gt;Disposici&amp;oacute;n del marco&lt;/a&gt; ) con respecto al origen &lt;code&gt;(0, 0)&lt;/code&gt; de su visualizaci&amp;oacute;n. Para un marco secundario (consulte &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Fotogramas&lt;/a&gt; secundarios ), esta funci&amp;oacute;n devuelve las coordenadas de p&amp;iacute;xeles de su posici&amp;oacute;n exterior con respecto a un origen &lt;code&gt;(0, 0)&lt;/code&gt; en la posici&amp;oacute;n nativa del &lt;var&gt;frame&lt;/var&gt; principal.</target>
        </trans-unit>
        <trans-unit id="7555a3f0929878def60a2a8b52d9653acbc69538" translate="yes" xml:space="preserve">
          <source>For a particular frame, the value specified here may be overridden by that frame&amp;rsquo;s &lt;code&gt;auto-hide-function&lt;/code&gt; frame parameter (see &lt;a href=&quot;frame-interaction-parameters#Frame-Interaction-Parameters&quot;&gt;Frame Interaction Parameters&lt;/a&gt;).</source>
          <target state="translated">Para un marco en particular, el valor especificado aqu&amp;iacute; puede ser anulado por el par&amp;aacute;metro de marco de &lt;code&gt;auto-hide-function&lt;/code&gt; ese marco (consulte &lt;a href=&quot;frame-interaction-parameters#Frame-Interaction-Parameters&quot;&gt;Par&amp;aacute;metros de interacci&amp;oacute;n de marcos&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="e684da989eacfd97b2925e7be52fae8c01f15e86" translate="yes" xml:space="preserve">
          <source>For a related feature, see &lt;a href=&quot;init-file#Init-File&quot;&gt;window-setup-hook&lt;/a&gt;.</source>
          <target state="translated">Para una funci&amp;oacute;n relacionada, consulte &lt;a href=&quot;init-file#Init-File&quot;&gt;window-setup-hook&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f64cde43e52e64458ff57aaae7a20c71fc92b47a" translate="yes" xml:space="preserve">
          <source>For a remote &lt;var&gt;filename&lt;/var&gt;, this function returns a file name which could be used directly as an argument of a remote process (see &lt;a href=&quot;asynchronous-processes#Asynchronous-Processes&quot;&gt;Asynchronous Processes&lt;/a&gt;, and see &lt;a href=&quot;synchronous-processes#Synchronous-Processes&quot;&gt;Synchronous Processes&lt;/a&gt;), and as the program to run on the remote host. If &lt;var&gt;filename&lt;/var&gt; is local, this function returns it unchanged.</source>
          <target state="translated">Para un &lt;var&gt;filename&lt;/var&gt; remoto , esta funci&amp;oacute;n devuelve un nombre de archivo que podr&amp;iacute;a usarse directamente como argumento de un proceso remoto (consulte &lt;a href=&quot;asynchronous-processes#Asynchronous-Processes&quot;&gt;Procesos as&amp;iacute;ncronos&lt;/a&gt; y &lt;a href=&quot;synchronous-processes#Synchronous-Processes&quot;&gt;Procesos s&amp;iacute;ncronos&lt;/a&gt; ) y como el programa que se ejecutar&amp;aacute; en el host remoto. Si el &lt;var&gt;filename&lt;/var&gt; es local, esta funci&amp;oacute;n lo devuelve sin cambios.</target>
        </trans-unit>
        <trans-unit id="2e2af02388fcb473348e3e1783b1223ba2413713" translate="yes" xml:space="preserve">
          <source>For a serial connection, see &lt;code&gt;make-serial-process&lt;/code&gt; and &lt;code&gt;serial-process-configure&lt;/code&gt; for the list of keys. For a pipe connection, see &lt;code&gt;make-pipe-process&lt;/code&gt; for the list of keys.</source>
          <target state="translated">Para una conexi&amp;oacute;n en serie, consulte &lt;code&gt;make-serial-process&lt;/code&gt; y &lt;code&gt;serial-process-configure&lt;/code&gt; para ver la lista de claves. Para una conexi&amp;oacute;n de tuber&amp;iacute;a, consulte &lt;code&gt;make-pipe-process&lt;/code&gt; para obtener la lista de claves.</target>
        </trans-unit>
        <trans-unit id="506e52ccaad624a03a5a25b690b4ec879ceb8066" translate="yes" xml:space="preserve">
          <source>For a server process, &lt;var&gt;local-address&lt;/var&gt; is the address to listen on. It overrides &lt;var&gt;family&lt;/var&gt;, &lt;var&gt;host&lt;/var&gt; and &lt;var&gt;service&lt;/var&gt;, so you might as well not specify them.</source>
          <target state="translated">Para un proceso de servidor, &lt;var&gt;local-address&lt;/var&gt; es la direcci&amp;oacute;n para escuchar. Anula la &lt;var&gt;family&lt;/var&gt; , el &lt;var&gt;host&lt;/var&gt; y el &lt;var&gt;service&lt;/var&gt; , por lo que es mejor que no los especifique.</target>
        </trans-unit>
        <trans-unit id="063ae54c86a72f6dd2b6ef0b2c53785caaf880ca" translate="yes" xml:space="preserve">
          <source>For a server process, the options specified with &lt;code&gt;make-network-process&lt;/code&gt; are not inherited by the client connections, so you will need to set the necessary options for each child connection as it is created.</source>
          <target state="translated">Para un proceso de servidor, las opciones especificadas con &lt;code&gt;make-network-process&lt;/code&gt; no son heredadas por las conexiones de cliente, por lo que deber&amp;aacute; configurar las opciones necesarias para cada conexi&amp;oacute;n secundaria a medida que se crea.</target>
        </trans-unit>
        <trans-unit id="ab0e9166dd05d405f2aa575ede5d0ec4d4aa5de5" translate="yes" xml:space="preserve">
          <source>For a single-file package, &lt;var&gt;file&lt;/var&gt; is the package Lisp file; for a multi-file package, it is the package tar file. You can also sign the archive&amp;rsquo;s contents file in the same way. Make the</source>
          <target state="translated">Para un paquete de un solo archivo, el &lt;var&gt;file&lt;/var&gt; es el archivo Lisp del paquete; para un paquete de varios archivos, es el archivo tar del paquete. Tambi&amp;eacute;n puede firmar el archivo de contenido del archivo de la misma manera. Hacer el</target>
        </trans-unit>
        <trans-unit id="cddac283c6fbad067cde2e91d582a0863ab1f67d" translate="yes" xml:space="preserve">
          <source>For additional safety, &lt;code&gt;read-circle&lt;/code&gt; is temporarily bound to &lt;code&gt;nil&lt;/code&gt; when Emacs reads file-local variables (see &lt;a href=&quot;input-functions#Input-Functions&quot;&gt;Input Functions&lt;/a&gt;). This prevents the Lisp reader from recognizing circular and shared Lisp structures (see &lt;a href=&quot;circular-objects#Circular-Objects&quot;&gt;Circular Objects&lt;/a&gt;).</source>
          <target state="translated">Para mayor seguridad, &lt;code&gt;read-circle&lt;/code&gt; est&amp;aacute; temporalmente vinculado a &lt;code&gt;nil&lt;/code&gt; cuando Emacs lee variables locales de archivo (ver &lt;a href=&quot;input-functions#Input-Functions&quot;&gt;Funciones de entrada&lt;/a&gt; ). Esto evita que el lector Lisp reconozca estructuras Lisp circulares y compartidas (consulte &lt;a href=&quot;circular-objects#Circular-Objects&quot;&gt;Objetos circulares&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="ef6f908916c2213a58292c4ccfef487ba3e9d216" translate="yes" xml:space="preserve">
          <source>For an alternative facility for destructuring binding, see &lt;a href=&quot;sequence-functions#seq_002dlet&quot;&gt;seq-let&lt;/a&gt;.</source>
          <target state="translated">Para obtener una instalaci&amp;oacute;n alternativa para desestructurar la uni&amp;oacute;n, consulte &lt;a href=&quot;sequence-functions#seq_002dlet&quot;&gt;seq-let&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c326acf6241c7c0809b501cb8dd76fd10d776f0d" translate="yes" xml:space="preserve">
          <source>For an example of an application using this transport scheme on top of JSONRPC, see the &lt;a href=&quot;https://microsoft.github.io/language-server-protocol/specification&quot;&gt;Language Server Protocol&lt;/a&gt;.</source>
          <target state="translated">Para ver un ejemplo de una aplicaci&amp;oacute;n que utiliza este esquema de transporte sobre JSONRPC, consulte el &lt;a href=&quot;https://microsoft.github.io/language-server-protocol/specification&quot;&gt;Protocolo del servidor de idiomas&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6412f08014b3c59973f751a0a41329ada671054a" translate="yes" xml:space="preserve">
          <source>For an interesting example of using &lt;code&gt;apply&lt;/code&gt;, see &lt;a href=&quot;mapping-functions#Definition-of-mapcar&quot;&gt;Definition of mapcar&lt;/a&gt;.</source>
          <target state="translated">Para ver un ejemplo interesante del uso de &lt;code&gt;apply&lt;/code&gt; , consulte &lt;a href=&quot;mapping-functions#Definition-of-mapcar&quot;&gt;Definici&amp;oacute;n de mapcar&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2ac62ffb11b1205cd2ec0e3eeb9745d1fcc6ad4f" translate="yes" xml:space="preserve">
          <source>For any other non-&lt;code&gt;nil&lt;/code&gt; action code, the</source>
          <target state="translated">Para cualquier otro c&amp;oacute;digo de acci&amp;oacute;n que no sea &lt;code&gt;nil&lt;/code&gt; , el</target>
        </trans-unit>
        <trans-unit id="f5267fdc1484269b536d70f99bea2db606a9c39b" translate="yes" xml:space="preserve">
          <source>For any two integers &lt;var&gt;dividend&lt;/var&gt; and &lt;var&gt;divisor&lt;/var&gt;,</source>
          <target state="translated">Para dos enteros, &lt;var&gt;dividend&lt;/var&gt; o y &lt;var&gt;divisor&lt;/var&gt; ,</target>
        </trans-unit>
        <trans-unit id="a72da2a1bc658d9b10287fe8776144e018a0887d" translate="yes" xml:space="preserve">
          <source>For any two numbers &lt;var&gt;dividend&lt;/var&gt; and &lt;var&gt;divisor&lt;/var&gt;,</source>
          <target state="translated">Para dos n&amp;uacute;meros cualesquiera &lt;var&gt;dividend&lt;/var&gt; o y &lt;var&gt;divisor&lt;/var&gt; ,</target>
        </trans-unit>
        <trans-unit id="5efb7641f20d02b2baa5f784be6822d9efd593f5" translate="yes" xml:space="preserve">
          <source>For background, See &lt;a href=&quot;pattern_002dmatching-conditional#Pattern_002dMatching-Conditional&quot;&gt;Pattern-Matching Conditional&lt;/a&gt;.</source>
          <target state="translated">Para m&amp;aacute;s informaci&amp;oacute;n, consulte &lt;a href=&quot;pattern_002dmatching-conditional#Pattern_002dMatching-Conditional&quot;&gt;Condicional de coincidencia de patrones&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c3502c2bb302e63d8fdc434b18b9e68b88f911a8" translate="yes" xml:space="preserve">
          <source>For backward compatibility, if &lt;var&gt;code-point&lt;/var&gt; doesn&amp;rsquo;t fit in a Lisp fixnum (see &lt;a href=&quot;integer-basics#Integer-Basics&quot;&gt;most-positive-fixnum&lt;/a&gt;), it can be specified as a cons cell &lt;code&gt;(&lt;var&gt;high&lt;/var&gt; . &lt;var&gt;low&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;low&lt;/var&gt; are the lower 16 bits of the value and &lt;var&gt;high&lt;/var&gt; are the high 16 bits. This usage is obsolescent.</source>
          <target state="translated">Para compatibilidad hacia atr&amp;aacute;s, si &lt;var&gt;code-point&lt;/var&gt; no cabe en un Lisp fixnum (ver &lt;a href=&quot;integer-basics#Integer-Basics&quot;&gt;m&amp;aacute;s-positivo-fixnum&lt;/a&gt; ), se puede especificar como una c&amp;eacute;lula contras &lt;code&gt;(&lt;var&gt;high&lt;/var&gt; . &lt;var&gt;low&lt;/var&gt;)&lt;/code&gt; , donde &lt;var&gt;low&lt;/var&gt; son los 16 bits m&amp;aacute;s bajos del valor y la &lt;var&gt;high&lt;/var&gt; son los 16 bits altos. Este uso es obsoleto.</target>
        </trans-unit>
        <trans-unit id="47a69e571816bd3e5633261d32fa1543fdceb651" translate="yes" xml:space="preserve">
          <source>For backward compatibility, there are obsolete aliases &lt;code&gt;x-get-selection&lt;/code&gt; and &lt;code&gt;x-set-selection&lt;/code&gt;, which were the names of &lt;code&gt;gui-get-selection&lt;/code&gt; and &lt;code&gt;gui-set-selection&lt;/code&gt; before Emacs 25.1.</source>
          <target state="translated">Para compatibilidad con versiones anteriores, hay alias obsoletos &lt;code&gt;x-get-selection&lt;/code&gt; y &lt;code&gt;x-set-selection&lt;/code&gt; , que eran los nombres de &lt;code&gt;gui-get-selection&lt;/code&gt; y &lt;code&gt;gui-set-selection&lt;/code&gt; antes de Emacs 25.1.</target>
        </trans-unit>
        <trans-unit id="121e05938fd78cea0604b54505c7ff8a45f6a892" translate="yes" xml:space="preserve">
          <source>For best results, make this variable buffer-local, so that it will disappear after doing its job and will not interfere with the subsequent major mode. See &lt;a href=&quot;hooks#Hooks&quot;&gt;Hooks&lt;/a&gt;.</source>
          <target state="translated">Para obtener los mejores resultados, haga que esta variable sea local al b&amp;uacute;fer, de modo que desaparezca despu&amp;eacute;s de hacer su trabajo y no interfiera con el modo principal posterior. Ver &lt;a href=&quot;hooks#Hooks&quot;&gt;Ganchos&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6ce34402ffe1794374d65dd17b0aaf42c8292bb4" translate="yes" xml:space="preserve">
          <source>For buffers not visiting a file to be restored, the major mode must define a function to do the job, and that function must be listed in the alist &lt;code&gt;desktop-buffer-mode-handlers&lt;/code&gt;.</source>
          <target state="translated">Para que los b&amp;uacute;feres que no visitan un archivo se restauren, el modo principal debe definir una funci&amp;oacute;n para hacer el trabajo, y esa funci&amp;oacute;n debe estar listada en la lista &lt;code&gt;desktop-buffer-mode-handlers&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e1e2d59e0ba5fd511d731e5a3da89d45abb82eca" translate="yes" xml:space="preserve">
          <source>For buffers not visiting a file to have their state saved, the major mode must bind the buffer local variable &lt;code&gt;desktop-save-buffer&lt;/code&gt; to a non-&lt;code&gt;nil&lt;/code&gt; value.</source>
          <target state="translated">Para que los b&amp;uacute;feres que no visitan un archivo tengan su estado guardado, el modo principal debe vincular la variable local del b&amp;uacute;fer &lt;code&gt;desktop-save-buffer&lt;/code&gt; a un valor que no sea &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b39dd696e09f4d3cfe391ed2d07e39f2ea51797c" translate="yes" xml:space="preserve">
          <source>For clickable text buttons that send the user to a different buffer or location.</source>
          <target state="translated">Para los botones de texto en los que se puede hacer clic y que envían al usuario a un búfer o ubicación diferente.</target>
        </trans-unit>
        <trans-unit id="9783294e746a5ee573ba95bc5e33919cf41c465b" translate="yes" xml:space="preserve">
          <source>For clicks on a marginal area or on a fringe, this is the buffer position of the first visible character in the corresponding line in the window. For clicks on the mode line, the header line or the tab line, this is &lt;code&gt;nil&lt;/code&gt;. For other events, it is the buffer position closest to the click.</source>
          <target state="translated">Para los clics en un &amp;aacute;rea marginal o en un margen, esta es la posici&amp;oacute;n de b&amp;uacute;fer del primer car&amp;aacute;cter visible en la l&amp;iacute;nea correspondiente en la ventana. Para los clics en la l&amp;iacute;nea de modo, la l&amp;iacute;nea de encabezado o la l&amp;iacute;nea de tabulaci&amp;oacute;n, esto es &lt;code&gt;nil&lt;/code&gt; . Para otros eventos, es la posici&amp;oacute;n del b&amp;uacute;fer m&amp;aacute;s cercana al clic.</target>
        </trans-unit>
        <trans-unit id="fb91260615c03a6f98320ec1431d1a615f829940" translate="yes" xml:space="preserve">
          <source>For clicks on a scroll bar, &lt;var&gt;position&lt;/var&gt; has this form:</source>
          <target state="translated">Para los clics en una barra de desplazamiento, la &lt;var&gt;position&lt;/var&gt; tiene esta forma:</target>
        </trans-unit>
        <trans-unit id="91f14921ea0887e603038510bd522b9f359946e5" translate="yes" xml:space="preserve">
          <source>For commands to display documentation strings, see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Help.html#Help&quot;&gt;Help&lt;/a&gt; in</source>
          <target state="translated">Para obtener comandos para mostrar cadenas de documentaci&amp;oacute;n, consulte la &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Help.html#Help&quot;&gt;Ayuda&lt;/a&gt; en</target>
        </trans-unit>
        <trans-unit id="ead2df90c6ccf9b8d39bf9f95b755b0f11d30a67" translate="yes" xml:space="preserve">
          <source>For commands to display documentation strings, see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Help.html#Help&quot;&gt;Help&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f041697205704c9b82f5ea10802566a0ac769ba2" translate="yes" xml:space="preserve">
          <source>For compatibility with previous versions of Emacs, &lt;code&gt;window-height&lt;/code&gt; is an alias for &lt;code&gt;window-total-height&lt;/code&gt;, and &lt;code&gt;window-width&lt;/code&gt; is an alias for &lt;code&gt;window-body-width&lt;/code&gt;. These aliases are considered obsolete and will be removed in the future.</source>
          <target state="translated">Por compatibilidad con versiones anteriores de Emacs, &lt;code&gt;window-height&lt;/code&gt; es un alias de &lt;code&gt;window-total-height&lt;/code&gt; y &lt;code&gt;window-width&lt;/code&gt; es un alias de &lt;code&gt;window-body-width&lt;/code&gt; . Estos alias se consideran obsoletos y se eliminar&amp;aacute;n en el futuro.</target>
        </trans-unit>
        <trans-unit id="6aeb0736165542de00797d9e9036075c849b9f1d" translate="yes" xml:space="preserve">
          <source>For compatibility, &lt;var&gt;predicate&lt;/var&gt; can also be one of the symbols &lt;code&gt;executable&lt;/code&gt;, &lt;code&gt;readable&lt;/code&gt;, &lt;code&gt;writable&lt;/code&gt;, &lt;code&gt;exists&lt;/code&gt;, or a list of one or more of these symbols.</source>
          <target state="translated">Por motivos de compatibilidad, el &lt;var&gt;predicate&lt;/var&gt; tambi&amp;eacute;n puede ser uno de los s&amp;iacute;mbolos &lt;code&gt;executable&lt;/code&gt; , &lt;code&gt;readable&lt;/code&gt; , &lt;code&gt;writable&lt;/code&gt; , &lt;code&gt;exists&lt;/code&gt; o una lista de uno o m&amp;aacute;s de estos s&amp;iacute;mbolos.</target>
        </trans-unit>
        <trans-unit id="66900f3ecb19bc7a744771fb6d1b592b9c854053" translate="yes" xml:space="preserve">
          <source>For consistency, you should also specify that element of the history as the initial minibuffer contents, using the &lt;var&gt;initial&lt;/var&gt; argument to the minibuffer input function (see &lt;a href=&quot;initial-input#Initial-Input&quot;&gt;Initial Input&lt;/a&gt;).</source>
          <target state="translated">Para mantener la coherencia, tambi&amp;eacute;n debe especificar ese elemento del historial como el contenido inicial del minib&amp;uacute;fer, utilizando el argumento &lt;var&gt;initial&lt;/var&gt; de la funci&amp;oacute;n de entrada del minib&amp;uacute;fer (consulte &lt;a href=&quot;initial-input#Initial-Input&quot;&gt;Entrada inicial&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="74c62700c6d87541270a5795bc335f128345e975" translate="yes" xml:space="preserve">
          <source>For convenience, the &lt;code&gt;jsonrpc&lt;/code&gt; library comes with a built-in &lt;code&gt;jsonrpc-process-connection&lt;/code&gt; transport implementation that can talk to local subprocesses (using the standard input and standard output); or TCP hosts (using sockets); or any other remote endpoint that Emacs&amp;rsquo;s process object can represent (see &lt;a href=&quot;processes#Processes&quot;&gt;Processes&lt;/a&gt;).</source>
          <target state="translated">Para mayor comodidad, la biblioteca &lt;code&gt;jsonrpc&lt;/code&gt; viene con una implementaci&amp;oacute;n de transporte &lt;code&gt;jsonrpc-process-connection&lt;/code&gt; incorporada que puede comunicarse con los subprocesos locales (utilizando la entrada y la salida est&amp;aacute;ndar); o hosts TCP (usando sockets); o cualquier otro extremo remoto que pueda representar el objeto de proceso de Emacs (ver &lt;a href=&quot;processes#Processes&quot;&gt;Procesos&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="043b52ca73b98f1cccd797380f813644ed89dd0c" translate="yes" xml:space="preserve">
          <source>For convenience, there are two sorts of button-creation functions, those that add button properties to an existing region of a buffer, called &lt;code&gt;make-...button&lt;/code&gt;, and those that also insert the button text, called &lt;code&gt;insert-...button&lt;/code&gt;.</source>
          <target state="translated">Para mayor comodidad, existen dos tipos de funciones de creaci&amp;oacute;n de botones, aquellas que agregan propiedades de bot&amp;oacute;n a una regi&amp;oacute;n existente de un b&amp;uacute;fer, llamadas &lt;code&gt;make-...button&lt;/code&gt; , y aquellas que tambi&amp;eacute;n insertan el texto del bot&amp;oacute;n, llamadas &lt;code&gt;insert-...button&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="54dc6f12eb601168a1ac37613145f57827189341" translate="yes" xml:space="preserve">
          <source>For details, see &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Syntax Class Table&lt;/a&gt;. Please note that &lt;code&gt;(syntax punctuation)&lt;/code&gt; is &lt;em&gt;not&lt;/em&gt; equivalent to the character class &lt;code&gt;punctuation&lt;/code&gt;. Corresponding string regexp: &amp;lsquo;</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Tabla de clases de sintaxis&lt;/a&gt; . Tenga en cuenta que &lt;code&gt;(syntax punctuation)&lt;/code&gt; &lt;em&gt;no&lt;/em&gt; es equivalente a la &lt;code&gt;punctuation&lt;/code&gt; clase de caracteres . Regexp de cadena correspondiente: '</target>
        </trans-unit>
        <trans-unit id="734002e9a587e32b29f5a860c41732ff384a5177" translate="yes" xml:space="preserve">
          <source>For difficult cases, you can add do-nothing macros to your code to give advice to the test coverage tool.</source>
          <target state="translated">Para casos difíciles,puede agregar macros de &quot;no hacer nada&quot; a su código para dar consejos a la herramienta de cobertura de pruebas.</target>
        </trans-unit>
        <trans-unit id="11e3a73ca5000b7c31eb2b1c1d6daf9a7ff26858" translate="yes" xml:space="preserve">
          <source>For dimmed-out text. For example, it is used for the ignored part of a filename in the minibuffer (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Minibuffer-File.html#Minibuffer-File&quot;&gt;Minibuffers for File Names&lt;/a&gt; in</source>
          <target state="translated">Para texto atenuado. Por ejemplo, se utiliza para la parte ignorada de un nombre de archivo en el minib&amp;uacute;fer (consulte &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Minibuffer-File.html#Minibuffer-File&quot;&gt;Minib&amp;uacute;feres para nombres de archivo&lt;/a&gt; en</target>
        </trans-unit>
        <trans-unit id="4d503e2485ae52061b643d80981a73e2c3d9d84f" translate="yes" xml:space="preserve">
          <source>For dimmed-out text. For example, it is used for the ignored part of a filename in the minibuffer (see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Minibuffer-File.html#Minibuffer-File&quot;&gt;Minibuffers for File Names&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5592d06734e01b56669b7b1caf8a3c141e8d7c72" translate="yes" xml:space="preserve">
          <source>For each &lt;var&gt;package&lt;/var&gt;, which is a symbol, there are one or more elements that contain a package version &lt;var&gt;pversion&lt;/var&gt; with an associated Emacs version &lt;var&gt;eversion&lt;/var&gt;. These versions are strings. For example, the MH-E package updates this alist with the following:</source>
          <target state="translated">Para cada &lt;var&gt;package&lt;/var&gt; , que es un s&amp;iacute;mbolo, hay uno o m&amp;aacute;s elementos que contienen una &lt;var&gt;pversion&lt;/var&gt; de versi&amp;oacute;n de paquete con una &lt;var&gt;eversion&lt;/var&gt; versi&amp;oacute;n de Emacs asociada . Estas versiones son cadenas. Por ejemplo, el paquete MH-E actualiza esta lista con lo siguiente:</target>
        </trans-unit>
        <trans-unit id="585b81ea7d737603e85999c64cc945eb2153ae26" translate="yes" xml:space="preserve">
          <source>For each directory in &lt;code&gt;load-path&lt;/code&gt;, Emacs then checks to see if it contains a file</source>
          <target state="translated">Para cada directorio en &lt;code&gt;load-path&lt;/code&gt; , Emacs luego verifica si contiene un archivo</target>
        </trans-unit>
        <trans-unit id="d779a4ebd64888b38cfe346c6e444aa365dc3c8d" translate="yes" xml:space="preserve">
          <source>For each internal window, the screen areas of the immediate children are arranged either vertically or horizontally (never both). If the child windows are arranged one above the other, they are said to form a &lt;em&gt;vertical combination&lt;/em&gt;; if they are arranged side by side, they are said to form a &lt;em&gt;horizontal combination&lt;/em&gt;. Consider the following example:</source>
          <target state="translated">Para cada ventana interna, las &amp;aacute;reas de la pantalla de los elementos secundarios inmediatos se organizan vertical u horizontalmente (nunca ambas). Si las ventanas secundarias est&amp;aacute;n dispuestas una encima de la otra, se dice que forman una &lt;em&gt;combinaci&amp;oacute;n vertical&lt;/em&gt; ; si est&amp;aacute;n dispuestos uno al lado del otro, se dice que forman una &lt;em&gt;combinaci&amp;oacute;n horizontal&lt;/em&gt; . Considere el siguiente ejemplo:</target>
        </trans-unit>
        <trans-unit id="743c690cc98b53d8a1c6cfd4427025d5e238101a" translate="yes" xml:space="preserve">
          <source>For efficiency this function might return a value that is &lt;code&gt;eq&lt;/code&gt; to &lt;var&gt;time&lt;/var&gt;, or that otherwise shares structure with &lt;var&gt;time&lt;/var&gt;.</source>
          <target state="translated">Por razones de eficiencia, esta funci&amp;oacute;n puede devolver un valor &lt;code&gt;eq&lt;/code&gt; uivalente al &lt;var&gt;time&lt;/var&gt; , o que de otro modo comparte estructura con el &lt;var&gt;time&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="c8a1f0205dc400cc4bfe8517f02f340b224dbb0d" translate="yes" xml:space="preserve">
          <source>For efficiency, Emacs does not continuously recompute each window&amp;rsquo;s mode line and header line. It does so when circumstances appear to call for it&amp;mdash;for instance, if you change the window configuration, switch buffers, narrow or widen the buffer, scroll, or modify the buffer. If you alter any of the variables referenced by &lt;code&gt;mode-line-format&lt;/code&gt; or &lt;code&gt;header-line-format&lt;/code&gt; (see &lt;a href=&quot;mode-line-variables#Mode-Line-Variables&quot;&gt;Mode Line Variables&lt;/a&gt;), or any other data structures that affect how text is displayed (see &lt;a href=&quot;display#Display&quot;&gt;Display&lt;/a&gt;), you should use the function &lt;code&gt;force-mode-line-update&lt;/code&gt; to update the display.</source>
          <target state="translated">Para mayor eficiencia, Emacs no recalcula continuamente la l&amp;iacute;nea de modo y la l&amp;iacute;nea de encabezado de cada ventana. Lo hace cuando las circunstancias parecen requerirlo, por ejemplo, si cambia la configuraci&amp;oacute;n de la ventana, cambia de b&amp;uacute;fer, reduce o ampl&amp;iacute;a el b&amp;uacute;fer, desplaza o modifica el b&amp;uacute;fer. Si modifica cualquiera de las variables a las que hace referencia el &lt;code&gt;mode-line-format&lt;/code&gt; o el formato de l&amp;iacute;nea de &lt;code&gt;header-line-format&lt;/code&gt; (consulte &lt;a href=&quot;mode-line-variables#Mode-Line-Variables&quot;&gt;Variables de l&amp;iacute;nea de modo&lt;/a&gt; ), o cualquier otra estructura de datos que afecte la forma en que se muestra el texto (consulte &lt;a href=&quot;display#Display&quot;&gt;Pantalla&lt;/a&gt; ), debe usar la funci&amp;oacute;n &lt;code&gt;force-mode-line-update&lt;/code&gt; para actualizar la pantalla.</target>
        </trans-unit>
        <trans-unit id="f6f082c77d40eec0a94cd546026872b5e62ed240" translate="yes" xml:space="preserve">
          <source>For efficiency, we recommend writing these functions so that they usually assign faces to around 400 to 600 characters at each call.</source>
          <target state="translated">Para una mayor eficiencia,recomendamos escribir estas funciones de manera que normalmente asignen caras a unos 400 a 600 caracteres en cada llamada.</target>
        </trans-unit>
        <trans-unit id="b45b099ef44308af9850ef419b10729db525c224" translate="yes" xml:space="preserve">
          <source>For elements whose &lt;var&gt;matcher&lt;/var&gt; is a function, the function should ensure that submatch 0 covers the whole relevant multiline construct, even if only a small subpart will be highlighted. It is often just as easy to add the &lt;code&gt;font-lock-multiline&lt;/code&gt; property by hand.</source>
          <target state="translated">Para los elementos cuyo &lt;var&gt;matcher&lt;/var&gt; es una funci&amp;oacute;n, la funci&amp;oacute;n debe garantizar que el subcoincidencia 0 cubra toda la construcci&amp;oacute;n multil&amp;iacute;nea relevante, incluso si solo se resaltar&amp;aacute; una peque&amp;ntilde;a subparte. A menudo es igual de f&amp;aacute;cil agregar la propiedad &lt;code&gt;font-lock-multiline&lt;/code&gt; a mano.</target>
        </trans-unit>
        <trans-unit id="dc3c09a115b4ee611eb7505826a4fa0c2a8495d8" translate="yes" xml:space="preserve">
          <source>For example</source>
          <target state="translated">Por ejemplo</target>
        </trans-unit>
        <trans-unit id="1da55473e7e0bd5ddce679a996ae1f4bc172ce33" translate="yes" xml:space="preserve">
          <source>For example &lt;code&gt;(168 . mute-acute)&lt;/code&gt; defines a system-specific key (used by HP X servers) whose numeric code is -2**28 + 168.</source>
          <target state="translated">Por ejemplo, &lt;code&gt;(168 . mute-acute)&lt;/code&gt; define una clave espec&amp;iacute;fica del sistema (utilizada por los servidores HP X) cuyo c&amp;oacute;digo num&amp;eacute;rico es -2 ** 28 + 168.</target>
        </trans-unit>
        <trans-unit id="6db6725e9e7d5c088630e348048d1e73fc7657d3" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="translated">Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="67c7bfe6911146baef42ccf95311646fa6de1225" translate="yes" xml:space="preserve">
          <source>For example, &amp;lsquo;</source>
          <target state="translated">Por ejemplo, '</target>
        </trans-unit>
        <trans-unit id="744b687fbce69d0c70cd3e18220f9dacadd484ee" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;((top . left) (t . right))&lt;/code&gt; places the top angle bitmap in left fringe, and the bottom angle bitmap as well as both arrow bitmaps in right fringe. To show the angle bitmaps in the left fringe, and no arrow bitmaps, use &lt;code&gt;((top .  left) (bottom . left))&lt;/code&gt;.</source>
          <target state="translated">Por ejemplo, &lt;code&gt;((top . left) (t . right))&lt;/code&gt; coloca el mapa de bits del &amp;aacute;ngulo superior en el margen izquierdo y el mapa de bits del &amp;aacute;ngulo inferior, as&amp;iacute; como ambos mapas de bits de flechas en el margen derecho. Para mostrar los mapas de bits de &amp;aacute;ngulos en el margen izquierdo, y sin mapas de bits de flechas, utilice &lt;code&gt;((top . left) (bottom . left))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f964fb57ecfe5d927e9308065e31b4bf29558753" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;(format-mode-line header-line-format)&lt;/code&gt; returns the text that would appear in the selected window&amp;rsquo;s header line (&lt;code&gt;&quot;&quot;&lt;/code&gt; if it has no header line). &lt;code&gt;(format-mode-line header-line-format
'header-line)&lt;/code&gt; returns the same text, with each character carrying the face that it will have in the header line itself, and also redraws the header line.</source>
          <target state="translated">Por ejemplo, &lt;code&gt;(format-mode-line header-line-format)&lt;/code&gt; devuelve el texto que aparecer&amp;iacute;a en la l&amp;iacute;nea de encabezado de la ventana seleccionada ( &lt;code&gt;&quot;&quot;&lt;/code&gt; si no tiene l&amp;iacute;nea de encabezado). &lt;code&gt;(format-mode-line header-line-format 'header-line)&lt;/code&gt; devuelve el mismo texto, con cada car&amp;aacute;cter que lleva la cara que tendr&amp;aacute; en la l&amp;iacute;nea del encabezado, y tambi&amp;eacute;n vuelve a dibujar la l&amp;iacute;nea del encabezado.</target>
        </trans-unit>
        <trans-unit id="efc83ffc3386e01c1e8ade2e8cd7e012a462a074" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;(list integer string function)&lt;/code&gt; describes a list of three elements; the first element must be an integer, the second a string, and the third a function.</source>
          <target state="translated">Por ejemplo, &lt;code&gt;(list integer string function)&lt;/code&gt; describe una lista de tres elementos; el primer elemento debe ser un n&amp;uacute;mero entero, el segundo una cadena y el tercero una funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="3ef44bbdb2e48aa8186cb898c6acf5f8c9242879" translate="yes" xml:space="preserve">
          <source>For example, VT100 terminals send</source>
          <target state="translated">Por ejemplo,los terminales VT100 envían</target>
        </trans-unit>
        <trans-unit id="23ba4f1aaf8956b33e5b48d8206686c31ca1190c" translate="yes" xml:space="preserve">
          <source>For example, after evaluating &lt;code&gt;(fac 5)&lt;/code&gt; with a source breakpoint, and setting &lt;code&gt;edebug-test-coverage&lt;/code&gt; to &lt;code&gt;t&lt;/code&gt;, when the breakpoint is reached, the frequency data looks like this:</source>
          <target state="translated">Por ejemplo, despu&amp;eacute;s de evaluar &lt;code&gt;(fac 5)&lt;/code&gt; con un punto de interrupci&amp;oacute;n de la fuente y establecer &lt;code&gt;edebug-test-coverage&lt;/code&gt; en &lt;code&gt;t&lt;/code&gt; , cuando se alcanza el punto de interrupci&amp;oacute;n, los datos de frecuencia se ven as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="a05e8356c63b07a3e3fc9b2fa536ac0bcc4967b7" translate="yes" xml:space="preserve">
          <source>For example, an argument list that looks like this:</source>
          <target state="translated">Por ejemplo,una lista de argumentos como esta:</target>
        </trans-unit>
        <trans-unit id="05d69093edb129241b3a840cf6b1b328b6242dcb" translate="yes" xml:space="preserve">
          <source>For example, characters with different coding points but the same meaning might be considered as equal, like different grave accent Unicode characters:</source>
          <target state="translated">Por ejemplo,los caracteres con diferentes puntos de codificación pero con el mismo significado podrían considerarse iguales,como los caracteres Unicode con diferente acento grave:</target>
        </trans-unit>
        <trans-unit id="27adeb48c032951b6d20992076af3c8afa49c305" translate="yes" xml:space="preserve">
          <source>For example, from the following we deduce that any attempt to read a file in</source>
          <target state="translated">Por ejemplo,de lo siguiente deducimos que cualquier intento de leer un archivo en</target>
        </trans-unit>
        <trans-unit id="0273d690dd99e985b0b2971241e85b32b497db6a" translate="yes" xml:space="preserve">
          <source>For example, given a macro defined as follows:</source>
          <target state="translated">Por ejemplo,dada una macro definida de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="db74331eb04a1de8dbcacf0c70f3b3441856bf28" translate="yes" xml:space="preserve">
          <source>For example, here are the file attributes for</source>
          <target state="translated">Por ejemplo,aquí están los atributos del archivo para</target>
        </trans-unit>
        <trans-unit id="005c7abc213860be7f588f0de309060be8ddf15b" translate="yes" xml:space="preserve">
          <source>For example, here is how Emacs sets the parent of &lt;code&gt;help-mode-map&lt;/code&gt;, such that it inherits from both &lt;code&gt;button-buffer-map&lt;/code&gt; and &lt;code&gt;special-mode-map&lt;/code&gt;:</source>
          <target state="translated">Por ejemplo, as&amp;iacute; es como Emacs establece el padre de &lt;code&gt;help-mode-map&lt;/code&gt; , de modo que hereda tanto de &lt;code&gt;button-buffer-map&lt;/code&gt; como de &lt;code&gt;special-mode-map&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8b9b4bb05ac508d1f9ca72c94fdcaa4c15ce5531" translate="yes" xml:space="preserve">
          <source>For example, here is how Info mode handles</source>
          <target state="translated">Por ejemplo,así es como el modo Info maneja</target>
        </trans-unit>
        <trans-unit id="965efa71bb0bbcfbc42c969ae3abf4c71959d610" translate="yes" xml:space="preserve">
          <source>For example, here is how pcvs enables</source>
          <target state="translated">Por ejemplo,así es como el pcvs permite</target>
        </trans-unit>
        <trans-unit id="ef5d21db3ba65b99f498854b10fea91677ea3a8d" translate="yes" xml:space="preserve">
          <source>For example, here is how to construct a display table that mimics the effect of setting &lt;code&gt;ctl-arrow&lt;/code&gt; to a non-&lt;code&gt;nil&lt;/code&gt; value (see &lt;a href=&quot;glyphs#Glyphs&quot;&gt;Glyphs&lt;/a&gt;, for the function &lt;code&gt;make-glyph-code&lt;/code&gt;):</source>
          <target state="translated">Por ejemplo, a continuaci&amp;oacute;n se explica c&amp;oacute;mo construir una tabla de visualizaci&amp;oacute;n que imite el efecto de establecer &lt;code&gt;ctl-arrow&lt;/code&gt; en un valor que no sea &lt;code&gt;nil&lt;/code&gt; (ver &lt;a href=&quot;glyphs#Glyphs&quot;&gt;Glyphs&lt;/a&gt; , para la funci&amp;oacute;n &lt;code&gt;make-glyph-code&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="595d53d45350a65aafc72a30d20894f7a9984264" translate="yes" xml:space="preserve">
          <source>For example, here is how to set the &lt;code&gt;comment&lt;/code&gt; and &lt;code&gt;face&lt;/code&gt; properties of a range of text:</source>
          <target state="translated">Por ejemplo, a continuaci&amp;oacute;n se explica c&amp;oacute;mo establecer las propiedades de &lt;code&gt;comment&lt;/code&gt; y &lt;code&gt;face&lt;/code&gt; de un rango de texto:</target>
        </trans-unit>
        <trans-unit id="74a09f53a928afdb5314957c2f2bf981977e0431" translate="yes" xml:space="preserve">
          <source>For example, here we make an invisible buffer for temporary use, and make sure to kill it before finishing:</source>
          <target state="translated">Por ejemplo,aquí hacemos un buffer invisible para uso temporal,y nos aseguramos de matarlo antes de terminar:</target>
        </trans-unit>
        <trans-unit id="c5f653d685daad8272ec011f525c34b0738959db" translate="yes" xml:space="preserve">
          <source>For example, here&amp;rsquo;s the definition of the standard face &lt;code&gt;highlight&lt;/code&gt;:</source>
          <target state="translated">Por ejemplo, aqu&amp;iacute; est&amp;aacute; la definici&amp;oacute;n del &lt;code&gt;highlight&lt;/code&gt; facial est&amp;aacute;ndar :</target>
        </trans-unit>
        <trans-unit id="395ba922e8b33bcf9d38dae422d749535c7b11b4" translate="yes" xml:space="preserve">
          <source>For example, if &lt;var&gt;name&lt;/var&gt; is &lt;code&gt;(a b 2 c)&lt;/code&gt;, that means to find field &lt;code&gt;c&lt;/code&gt; in the third element of subfield &lt;code&gt;b&lt;/code&gt; of field &lt;code&gt;a&lt;/code&gt;. (This corresponds to &lt;code&gt;struct.a.b[2].c&lt;/code&gt; in C.)</source>
          <target state="translated">Por ejemplo, si el &lt;var&gt;name&lt;/var&gt; es &lt;code&gt;(a b 2 c)&lt;/code&gt; , eso significa buscar el campo &lt;code&gt;c&lt;/code&gt; en el tercer elemento del subcampo &lt;code&gt;b&lt;/code&gt; del campo &lt;code&gt;a&lt;/code&gt; . (Esto corresponde a &lt;code&gt;struct.a.b[2].c&lt;/code&gt; en C.)</target>
        </trans-unit>
        <trans-unit id="0ff800dd3253158d07e32e80e98d75b35fc7a3ef" translate="yes" xml:space="preserve">
          <source>For example, if Font-Lock mode is enabled, you might get results like these:</source>
          <target state="translated">Por ejemplo,si se activa el modo de bloqueo de fuentes,podría obtener resultados como estos:</target>
        </trans-unit>
        <trans-unit id="df6fc5dabfc94afe09280ab88b14c7122922b50e" translate="yes" xml:space="preserve">
          <source>For example, if point is 1 and you set the start of the window to 37, the start of the next line, point will be above the top of the window. The display routines will automatically move point if it is still 1 when redisplay occurs. Here is an example:</source>
          <target state="translated">Por ejemplo,si el punto es 1 y fijas el comienzo de la ventana en 37,el comienzo de la siguiente línea,el punto estará por encima de la parte superior de la ventana.Las rutinas de visualización moverán automáticamente el punto si todavía es 1 cuando se produce la redistribución.He aquí un ejemplo:</target>
        </trans-unit>
        <trans-unit id="bb0699bd8f47a3e8cccd5e7fd0f027e76b217cb4" translate="yes" xml:space="preserve">
          <source>For example, if the current buffer name is &amp;lsquo;</source>
          <target state="translated">Por ejemplo, si el nombre del b&amp;uacute;fer actual es '</target>
        </trans-unit>
        <trans-unit id="adb2b1888f6b5b7287616e1bc0062845ce891f7f" translate="yes" xml:space="preserve">
          <source>For example, if we distribute version 1.3 of the superfrobnicator as a multi-file package, the tar file would be</source>
          <target state="translated">Por ejemplo,si distribuimos la versión 1.3 del superfrobnicator como un paquete de varios archivos,el archivo tar sería</target>
        </trans-unit>
        <trans-unit id="129a058c7280c246533530a1fd820643df60b883" translate="yes" xml:space="preserve">
          <source>For example, if you call &lt;code&gt;read-key-sequence&lt;/code&gt; and then click the mouse on the window&amp;rsquo;s mode line, you get two events, like this:</source>
          <target state="translated">Por ejemplo, si llama a &lt;code&gt;read-key-sequence&lt;/code&gt; y luego hace clic con el mouse en la l&amp;iacute;nea de modo de la ventana, obtendr&amp;aacute; dos eventos, como este:</target>
        </trans-unit>
        <trans-unit id="d09e7149c4c55ac025b6b60f987664076f98cc22" translate="yes" xml:space="preserve">
          <source>For example, if you plan to sort all the lines in the region by the first word on each line starting with the letter &amp;lsquo;</source>
          <target state="translated">Por ejemplo, si planea ordenar todas las l&amp;iacute;neas de la regi&amp;oacute;n por la primera palabra de cada l&amp;iacute;nea que comience con la letra '</target>
        </trans-unit>
        <trans-unit id="485357f2c908b453f13370041021bdb6b189d1b3" translate="yes" xml:space="preserve">
          <source>For example, in</source>
          <target state="translated">Por ejemplo,en</target>
        </trans-unit>
        <trans-unit id="68c35d1e3bb1c66f44569c82c8af6a96b625a484" translate="yes" xml:space="preserve">
          <source>For example, in the standard syntax table, the entry for &amp;lsquo;</source>
          <target state="translated">Por ejemplo, en la tabla de sintaxis est&amp;aacute;ndar, la entrada para '</target>
        </trans-unit>
        <trans-unit id="49538d0b2708caa4cbfe7507522436cff4c2aa9b" translate="yes" xml:space="preserve">
          <source>For example, punctuation and whitespace characters might be ignored for sorting (see &lt;a href=&quot;sequence-functions#Sequence-Functions&quot;&gt;Sequence Functions&lt;/a&gt;):</source>
          <target state="translated">Por ejemplo, los caracteres de puntuaci&amp;oacute;n y espacios en blanco pueden ignorarse para la clasificaci&amp;oacute;n (consulte &lt;a href=&quot;sequence-functions#Sequence-Functions&quot;&gt;Funciones de secuencia&lt;/a&gt; ):</target>
        </trans-unit>
        <trans-unit id="2166ab4db5dbdc8250f642388719feb57292d22d" translate="yes" xml:space="preserve">
          <source>For example, setting this variable is useful to get a backtrace from code evaluated by emacsclient&amp;rsquo;s</source>
          <target state="translated">Por ejemplo, establecer esta variable es &amp;uacute;til para obtener un seguimiento del c&amp;oacute;digo evaluado por emacsclient</target>
        </trans-unit>
        <trans-unit id="5420205529242dca31bafacc450a37a00adac6c1" translate="yes" xml:space="preserve">
          <source>For example, suppose My mode provides a special command &lt;code&gt;my-kill-line&lt;/code&gt;, which should be invoked instead of &lt;code&gt;kill-line&lt;/code&gt;. To establish this, its mode keymap should contain the following remapping:</source>
          <target state="translated">Por ejemplo, supongamos que My mode proporciona un comando especial &lt;code&gt;my-kill-line&lt;/code&gt; , que deber&amp;iacute;a invocarse en lugar de &lt;code&gt;kill-line&lt;/code&gt; . Para establecer esto, su mapa de teclas de modo debe contener la siguiente reasignaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="6735e17f34be2237ed73b289e8fd1588a3f7c8b3" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;shell-command-on-region&lt;/code&gt; command uses &lt;code&gt;call-shell-region&lt;/code&gt; in a manner similar to this:</source>
          <target state="translated">Por ejemplo, el &lt;code&gt;shell-command-on-region&lt;/code&gt; usa &lt;code&gt;call-shell-region&lt;/code&gt; de una manera similar a esta:</target>
        </trans-unit>
        <trans-unit id="27ee27aae03dd0ad802396582186884cc3bbd399" translate="yes" xml:space="preserve">
          <source>For example, the following code adds two fontification patterns for C mode: one to fontify the word &amp;lsquo;</source>
          <target state="translated">Por ejemplo, el siguiente c&amp;oacute;digo agrega dos patrones de fontificaci&amp;oacute;n para el modo C: uno para fontificar la palabra '</target>
        </trans-unit>
        <trans-unit id="175738e16217893190fe59a465d2f0cbf4a51eae" translate="yes" xml:space="preserve">
          <source>For example, the following code would assign an italicized green face to the text between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;:</source>
          <target state="translated">Por ejemplo, el siguiente c&amp;oacute;digo asignar&amp;iacute;a una cara verde en cursiva al texto entre el &lt;var&gt;start&lt;/var&gt; y el &lt;var&gt;end&lt;/var&gt; :</target>
        </trans-unit>
        <trans-unit id="fe4398851e7138b4cfe9a97b657ef55520230c8a" translate="yes" xml:space="preserve">
          <source>For example, the function that implements numeric prefix arguments reads any number of digits. When it finds a non-digit event, it must unread the event so that it can be read normally by the command loop. Likewise, incremental search uses this feature to unread events with no special meaning in a search, because these events should exit the search and then execute normally.</source>
          <target state="translated">Por ejemplo,la función que implementa argumentos de prefijos numéricos lee cualquier número de dígitos.Cuando encuentra un evento sin dígitos,debe desleer el evento para que pueda ser leído normalmente por el bucle de comandos.De igual modo,la búsqueda incremental utiliza esta función para desleer eventos sin un significado especial en una búsqueda,ya que estos eventos deben salir de la búsqueda y luego ejecutarse normalmente.</target>
        </trans-unit>
        <trans-unit id="384f2d22a8a927ed244f80bc1dc93234f2018dcb" translate="yes" xml:space="preserve">
          <source>For example, the regular expression &amp;lsquo;</source>
          <target state="translated">Por ejemplo, la expresi&amp;oacute;n regular '</target>
        </trans-unit>
        <trans-unit id="b2ef5659cb8be7a6b60ecf6bbc0af64c87f3fe3c" translate="yes" xml:space="preserve">
          <source>For example, the syntax descriptor for the character &amp;lsquo;</source>
          <target state="translated">Por ejemplo, el descriptor de sintaxis del car&amp;aacute;cter '</target>
        </trans-unit>
        <trans-unit id="4585c648d09853d23b2922efeb34fb0dcfabedb0" translate="yes" xml:space="preserve">
          <source>For example, the usual way to show what percentage of a buffer is above the top of the window is to use a list like this: &lt;code&gt;(-3 &quot;%p&quot;)&lt;/code&gt;.</source>
          <target state="translated">Por ejemplo, la forma habitual de mostrar qu&amp;eacute; porcentaje de un b&amp;uacute;fer est&amp;aacute; por encima de la parte superior de la ventana es usar una lista como esta: &lt;code&gt;(-3 &quot;%p&quot;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bbd366bf7da22ebc87b5581744b6af4853c2f8fd" translate="yes" xml:space="preserve">
          <source>For example, this expression tests whether &lt;code&gt;x&lt;/code&gt; is either &lt;code&gt;nil&lt;/code&gt; or the integer zero:</source>
          <target state="translated">Por ejemplo, esta expresi&amp;oacute;n prueba si &lt;code&gt;x&lt;/code&gt; es &lt;code&gt;nil&lt;/code&gt; o el entero cero:</target>
        </trans-unit>
        <trans-unit id="2c848e5dda222b3589fe7c48d05f8bcd6f0e6905" translate="yes" xml:space="preserve">
          <source>For example, this redefines</source>
          <target state="translated">Por ejemplo,esto redefine</target>
        </trans-unit>
        <trans-unit id="8b0e6046e3d16467ee010606573cdfcbd88b269c" translate="yes" xml:space="preserve">
          <source>For example, to find the buffer position of column &lt;var&gt;col&lt;/var&gt; of screen line &lt;var&gt;line&lt;/var&gt; of a certain window, pass the window&amp;rsquo;s display start location as &lt;var&gt;from&lt;/var&gt; and the window&amp;rsquo;s upper-left coordinates as &lt;var&gt;frompos&lt;/var&gt;. Pass the buffer&amp;rsquo;s &lt;code&gt;(point-max)&lt;/code&gt; as &lt;var&gt;to&lt;/var&gt;, to limit the scan to the end of the accessible portion of the buffer, and pass &lt;var&gt;line&lt;/var&gt; and &lt;var&gt;col&lt;/var&gt; as &lt;var&gt;topos&lt;/var&gt;. Here&amp;rsquo;s a function that does this:</source>
          <target state="translated">Por ejemplo, para encontrar la posici&amp;oacute;n en el b&amp;uacute;fer de la columna &lt;var&gt;col&lt;/var&gt; de la l&amp;iacute;nea de la pantalla &lt;var&gt;line&lt;/var&gt; de una cierta ventana, pasar a la ubicaci&amp;oacute;n de inicio de visualizaci&amp;oacute;n de la ventana, ya &lt;var&gt;from&lt;/var&gt; las coordenadas superior izquierda de la ventana como &lt;var&gt;frompos&lt;/var&gt; . Pase el b&amp;uacute;fer &lt;code&gt;(point-max)&lt;/code&gt; como &lt;var&gt;to&lt;/var&gt; limitar el escaneo al final de la parte accesible del b&amp;uacute;fer, y pase la &lt;var&gt;line&lt;/var&gt; y la &lt;var&gt;col&lt;/var&gt; umna como &lt;var&gt;topos&lt;/var&gt; . Aqu&amp;iacute; hay una funci&amp;oacute;n que hace esto:</target>
        </trans-unit>
        <trans-unit id="9e942398938b535914ef7e95735c0d1f57c8343d" translate="yes" xml:space="preserve">
          <source>For example, to match &lt;var&gt;expval&lt;/var&gt; that must be a list of two elements whose first element is a specific string and the second element is any value, you can write a core pattern:</source>
          <target state="translated">Por ejemplo, para hacer coincidir &lt;var&gt;expval&lt;/var&gt; que debe ser una lista de dos elementos cuyo primer elemento es una cadena espec&amp;iacute;fica y el segundo elemento es cualquier valor, puede escribir un patr&amp;oacute;n central:</target>
        </trans-unit>
        <trans-unit id="8647d2af0d56d8b4d684ccdc41d0e7ef012c977f" translate="yes" xml:space="preserve">
          <source>For example, to specify a list whose first element must be &lt;code&gt;baz&lt;/code&gt; and whose remaining arguments should be zero or more of &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;bar&lt;/code&gt;, use this customization type:</source>
          <target state="translated">Por ejemplo, para especificar una lista cuyo primer elemento debe ser &lt;code&gt;baz&lt;/code&gt; y cuyos argumentos restantes deben ser cero o m&amp;aacute;s de &lt;code&gt;foo&lt;/code&gt; y &lt;code&gt;bar&lt;/code&gt; , use este tipo de personalizaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="3fced1f25af160096cf3380284c60e8f0069d9a0" translate="yes" xml:space="preserve">
          <source>For example, using 4-bit binary numbers, the bitwise AND of 13 and 12 is 12: 1101 combined with 1100 produces 1100. In both the binary numbers, the leftmost two bits are both 1 so the leftmost two bits of the returned value are both 1. However, for the rightmost two bits, each is 0 in at least one of the arguments, so the rightmost two bits of the returned value are both 0.</source>
          <target state="translated">Por ejemplo,usando números binarios de 4 bits,el AND de 13 y 12 es 12:1101 combinado con 1100 produce 1100.En ambos números binarios,los dos bits más a la izquierda son ambos 1,por lo que los dos bits más a la izquierda del valor devuelto son ambos 1.Sin embargo,para los dos bits más a la derecha,cada uno es 0 en al menos uno de los argumentos,por lo que los dos bits más a la derecha del valor devuelto son ambos 0.</target>
        </trans-unit>
        <trans-unit id="a991b30b321a789877e152611b03f5b1bbf24c9c" translate="yes" xml:space="preserve">
          <source>For example, when a function is called, its argument variables receive local values, which are the actual arguments supplied to the function call; these local bindings take effect within the body of the function. To take another example, the &lt;code&gt;let&lt;/code&gt; special form explicitly establishes local bindings for specific variables, which take effect only within the body of the &lt;code&gt;let&lt;/code&gt; form.</source>
          <target state="translated">Por ejemplo, cuando se llama a una funci&amp;oacute;n, sus variables de argumento reciben valores locales, que son los argumentos reales proporcionados a la llamada a la funci&amp;oacute;n; estos enlaces locales surten efecto dentro del cuerpo de la funci&amp;oacute;n. Para tomar otro ejemplo, la forma especial &lt;code&gt;let&lt;/code&gt; establece expl&amp;iacute;citamente enlaces locales para variables espec&amp;iacute;ficas, que tienen efecto solo dentro del cuerpo de la forma &lt;code&gt;let&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="302d045a398db08075b269c868fcbd268402b1ec" translate="yes" xml:space="preserve">
          <source>For example, you could define &lt;code&gt;name&lt;/code&gt; to mean &lt;code&gt;(one-or-more letter)&lt;/code&gt;, and &lt;code&gt;(quoted &lt;var&gt;x&lt;/var&gt;)&lt;/code&gt; to mean &lt;code&gt;(seq ?' &lt;var&gt;x&lt;/var&gt; ?')&lt;/code&gt; for any &lt;var&gt;x&lt;/var&gt;. These forms could then be used in &lt;code&gt;rx&lt;/code&gt; expressions like any other: &lt;code&gt;(rx (quoted name))&lt;/code&gt; would match a nonempty sequence of letters inside single quotes.</source>
          <target state="translated">Por ejemplo, podr&amp;iacute;a definir &lt;code&gt;name&lt;/code&gt; para que signifique &lt;code&gt;(one-or-more letter)&lt;/code&gt; y &lt;code&gt;(quoted &lt;var&gt;x&lt;/var&gt;)&lt;/code&gt; signifique &lt;code&gt;(seq ?' &lt;var&gt;x&lt;/var&gt; ?')&lt;/code&gt; Para cualquier &lt;var&gt;x&lt;/var&gt; . Estas formas podr&amp;iacute;an usarse en expresiones &lt;code&gt;rx&lt;/code&gt; como cualquier otra: &lt;code&gt;(rx (quoted name))&lt;/code&gt; coincidir&amp;iacute;a con una secuencia no vac&amp;iacute;a de letras entre comillas simples.</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="14b38a77b4f2c99de9b60a13e177bd689dcadc7c" translate="yes" xml:space="preserve">
          <source>For examples of key sequences written in string and vector representations, &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Init-Rebinding.html#Init-Rebinding&quot;&gt;Init Rebinding&lt;/a&gt; in</source>
          <target state="translated">Para ver ejemplos de secuencias de teclas escritas en representaciones de cadenas y vectores, &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Init-Rebinding.html#Init-Rebinding&quot;&gt;Init Rebinding&lt;/a&gt; en</target>
        </trans-unit>
        <trans-unit id="625c3178d4b4c643caa32d52e1c5638502985dcf" translate="yes" xml:space="preserve">
          <source>For examples of key sequences written in string and vector representations, &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Init-Rebinding.html#Init-Rebinding&quot;&gt;Init Rebinding&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="756ed62664ef2f85085fafd6014de3a11655e566" translate="yes" xml:space="preserve">
          <source>For flexibility, the</source>
          <target state="translated">Para la flexibilidad,el</target>
        </trans-unit>
        <trans-unit id="885fd45c866065f1ec4b303a41cc5a28f9d59115" translate="yes" xml:space="preserve">
          <source>For frames with an internal menu or tool bar, the frame&amp;rsquo;s native height cannot be told exactly before the frame has been actually drawn. This means that in general you cannot use the native size to specify the initial size of a frame. As soon as you know the native size of a visible frame, you can calculate its outer size (see &lt;a href=&quot;frame-layout#Frame-Layout&quot;&gt;Frame Layout&lt;/a&gt;) by adding in the remaining components from the return value of &lt;code&gt;frame-geometry&lt;/code&gt;. For invisible frames or for frames that have yet to be created, however, the outer size can only be estimated. This also means that calculating an exact initial position of a frame specified via offsets from the right or bottom edge of the screen (see &lt;a href=&quot;frame-position#Frame-Position&quot;&gt;Frame Position&lt;/a&gt;) is impossible.</source>
          <target state="translated">Para los marcos con un men&amp;uacute; interno o una barra de herramientas, la altura nativa del marco no se puede decir exactamente antes de que el marco se haya dibujado realmente. Esto significa que, en general, no puede utilizar el tama&amp;ntilde;o nativo para especificar el tama&amp;ntilde;o inicial de un marco. Tan pronto como conozca el tama&amp;ntilde;o nativo de un marco visible, puede calcular su tama&amp;ntilde;o exterior (consulte &lt;a href=&quot;frame-layout#Frame-Layout&quot;&gt;Disposici&amp;oacute;n del marco&lt;/a&gt; ) agregando los componentes restantes del valor de retorno de &lt;code&gt;frame-geometry&lt;/code&gt; del marco . Sin embargo, para los marcos invisibles o para los marcos que a&amp;uacute;n no se han creado, el tama&amp;ntilde;o exterior solo se puede estimar. Esto tambi&amp;eacute;n significa que es imposible calcular una posici&amp;oacute;n inicial exacta de un marco especificado mediante desplazamientos desde el borde derecho o inferior de la pantalla (ver &lt;a href=&quot;frame-position#Frame-Position&quot;&gt;Posici&amp;oacute;n del marco&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="2f94eeb4c257732d5e9d9e2db099193ac251cd9c" translate="yes" xml:space="preserve">
          <source>For functions and variables related to visiting files in buffers, see &lt;a href=&quot;visiting-files#Visiting-Files&quot;&gt;Visiting Files&lt;/a&gt; and &lt;a href=&quot;saving-buffers#Saving-Buffers&quot;&gt;Saving Buffers&lt;/a&gt;. For functions and variables related to the display of buffers in windows, see &lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;Buffers and Windows&lt;/a&gt;.</source>
          <target state="translated">Para conocer las funciones y variables relacionadas con la visita de archivos en b&amp;uacute;fer, consulte &lt;a href=&quot;visiting-files#Visiting-Files&quot;&gt;Visitar archivos&lt;/a&gt; y &lt;a href=&quot;saving-buffers#Saving-Buffers&quot;&gt;Guardar b&amp;uacute;fer&lt;/a&gt; . Para conocer las funciones y variables relacionadas con la visualizaci&amp;oacute;n de b&amp;uacute;feres en ventanas, consulte &lt;a href=&quot;buffers-and-windows#Buffers-and-Windows&quot;&gt;B&amp;uacute;feres y ventanas&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="096e441f5d07c9aeca48a8c3b6c68d8259beb478" translate="yes" xml:space="preserve">
          <source>For good performance, it&amp;rsquo;s very important to use the &lt;var&gt;limit&lt;/var&gt; argument to these functions, especially the ones that search for a single property&amp;mdash;otherwise, they may spend a long time scanning to the end of the buffer, if the property you are interested in does not change.</source>
          <target state="translated">Para un buen rendimiento, es muy importante utilizar el argumento &lt;var&gt;limit&lt;/var&gt; para estas funciones, especialmente las que buscan una sola propiedad; de lo contrario, pueden pasar mucho tiempo escaneando hasta el final del b&amp;uacute;fer, si la propiedad que le interesa no lo hace. Sin cambio.</target>
        </trans-unit>
        <trans-unit id="c636758eb9f2ccf22d584f3ccf22195b5beb19a7" translate="yes" xml:space="preserve">
          <source>For graphical terminals, note that on multi-monitor setups this refers to the height for all physical monitors associated with &lt;var&gt;display&lt;/var&gt;. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</source>
          <target state="translated">Para terminales gr&amp;aacute;ficos, tenga en cuenta que en configuraciones de varios monitores esto se refiere a la altura de todos los monitores f&amp;iacute;sicos asociados con la &lt;var&gt;display&lt;/var&gt; . Consulte &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;M&amp;uacute;ltiples terminales&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4b8896e43509c656a91f644b662d9fd3b6c48f29" translate="yes" xml:space="preserve">
          <source>For graphical terminals, note that on multi-monitor setups this refers to the pixel height for all physical monitors associated with &lt;var&gt;display&lt;/var&gt;. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</source>
          <target state="translated">Para terminales gr&amp;aacute;ficos, tenga en cuenta que en configuraciones de varios monitores, esto se refiere a la altura de p&amp;iacute;xeles de todos los monitores f&amp;iacute;sicos asociados con la &lt;var&gt;display&lt;/var&gt; . Consulte &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;M&amp;uacute;ltiples terminales&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d5ab03b3e614eac3a7bbaa567f279a4f1f9d057d" translate="yes" xml:space="preserve">
          <source>For graphical terminals, note that on multi-monitor setups this refers to the pixel width for all physical monitors associated with &lt;var&gt;display&lt;/var&gt;. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</source>
          <target state="translated">Para terminales gr&amp;aacute;ficos, tenga en cuenta que en configuraciones de varios monitores esto se refiere al ancho de p&amp;iacute;xel de todos los monitores f&amp;iacute;sicos asociados con la &lt;var&gt;display&lt;/var&gt; . Consulte &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;M&amp;uacute;ltiples terminales&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9af87cec8b479351a811ac8aa5c236492c607087" translate="yes" xml:space="preserve">
          <source>For graphical terminals, note that on multi-monitor setups this refers to the width for all physical monitors associated with &lt;var&gt;display&lt;/var&gt;. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</source>
          <target state="translated">Para terminales gr&amp;aacute;ficos, tenga en cuenta que en configuraciones de varios monitores esto se refiere al ancho de todos los monitores f&amp;iacute;sicos asociados con la &lt;var&gt;display&lt;/var&gt; . Consulte &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;M&amp;uacute;ltiples terminales&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="632f51d2e3c1de25d6cd1469e9b63dd75f33b29f" translate="yes" xml:space="preserve">
          <source>For higher-level input facilities, see &lt;a href=&quot;minibuffers#Minibuffers&quot;&gt;Minibuffers&lt;/a&gt;.</source>
          <target state="translated">Para &lt;a href=&quot;minibuffers#Minibuffers&quot;&gt;funciones de&lt;/a&gt; entrada de nivel superior, consulte Minib&amp;uacute;feres .</target>
        </trans-unit>
        <trans-unit id="9da377bf3a4e5ee235e3f1dc396f7d2833196cf1" translate="yes" xml:space="preserve">
          <source>For historical compatibility reasons, &amp;lsquo;</source>
          <target state="translated">Por razones hist&amp;oacute;ricas de compatibilidad, '</target>
        </trans-unit>
        <trans-unit id="65628619bb4b16082341e795ef37116997318974" translate="yes" xml:space="preserve">
          <source>For historical reasons, Emacs does not run a separate hook whenever a window gets selected. Applications and internal routines often temporarily select a window to perform a few actions on it. They do that either to simplify coding&amp;mdash;because many functions by default operate on the selected window when no &lt;var&gt;window&lt;/var&gt; argument is specified&amp;mdash;or because some functions did not (and still do not) take a window as argument and always operate(d) on the selected window instead. Running a hook every time a window gets selected for a short time and once more when the previously selected window gets restored is not useful.</source>
          <target state="translated">Por razones hist&amp;oacute;ricas, Emacs no ejecuta un gancho separado cada vez que se selecciona una ventana. Las aplicaciones y las rutinas internas a menudo seleccionan temporalmente una ventana para realizar algunas acciones en ella. Lo hacen para simplificar la codificaci&amp;oacute;n, porque muchas funciones por defecto operan en la ventana seleccionada cuando no se especifica ning&amp;uacute;n argumento de &lt;var&gt;window&lt;/var&gt; , o porque algunas funciones no tomaron (y a&amp;uacute;n no lo hacen) una ventana como argumento y siempre operan (d) en el ventana seleccionada en su lugar. Ejecutar un gancho cada vez que se selecciona una ventana por un corto tiempo y una vez m&amp;aacute;s cuando se restaura la ventana previamente seleccionada no es &amp;uacute;til.</target>
        </trans-unit>
        <trans-unit id="00ffbca2eef06914871b856c4d2841fd46e63245" translate="yes" xml:space="preserve">
          <source>For historical reasons, Emacs treats the</source>
          <target state="translated">Por razones históricas,Emacs trata el</target>
        </trans-unit>
        <trans-unit id="046929ea68cbb73ffed966af9cb9c86855132a7b" translate="yes" xml:space="preserve">
          <source>For image types whose support libraries are statically linked, this function always returns &lt;code&gt;t&lt;/code&gt;. For image types whose support libraries are dynamically loaded, it returns &lt;code&gt;t&lt;/code&gt; if the library could be loaded and &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">Para los tipos de im&amp;aacute;genes cuyas bibliotecas de soporte est&amp;aacute;n vinculadas est&amp;aacute;ticamente, esta funci&amp;oacute;n siempre devuelve &lt;code&gt;t&lt;/code&gt; . Para los tipos de im&amp;aacute;genes cuyas bibliotecas de soporte se cargan din&amp;aacute;micamente, devuelve &lt;code&gt;t&lt;/code&gt; si la biblioteca podr&amp;iacute;a cargarse y &lt;code&gt;nil&lt;/code&gt; en caso contrario.</target>
        </trans-unit>
        <trans-unit id="d115e12f0efdfbb2d9aaf8b6529a43e7a2fbef42" translate="yes" xml:space="preserve">
          <source>For information about how &lt;code&gt;load&lt;/code&gt; is used in building Emacs, see &lt;a href=&quot;building-emacs#Building-Emacs&quot;&gt;Building Emacs&lt;/a&gt;.</source>
          <target state="translated">Para obtener informaci&amp;oacute;n sobre c&amp;oacute;mo se usa la &lt;code&gt;load&lt;/code&gt; en la construcci&amp;oacute;n de Emacs, consulte &lt;a href=&quot;building-emacs#Building-Emacs&quot;&gt;Construir Emacs&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fb864d046c9d6a21427cb9289d67ab5c533404eb" translate="yes" xml:space="preserve">
          <source>For information about other concatenation functions, see the description of &lt;code&gt;mapconcat&lt;/code&gt; in &lt;a href=&quot;mapping-functions#Mapping-Functions&quot;&gt;Mapping Functions&lt;/a&gt;, &lt;code&gt;vconcat&lt;/code&gt; in &lt;a href=&quot;vector-functions#Vector-Functions&quot;&gt;Vector Functions&lt;/a&gt;, and &lt;code&gt;append&lt;/code&gt; in &lt;a href=&quot;building-lists#Building-Lists&quot;&gt;Building Lists&lt;/a&gt;. For concatenating individual command-line arguments into a string to be used as a shell command, see &lt;a href=&quot;shell-arguments#Shell-Arguments&quot;&gt;combine-and-quote-strings&lt;/a&gt;.</source>
          <target state="translated">Para obtener informaci&amp;oacute;n sobre otras funciones de concatenaci&amp;oacute;n, consulte la descripci&amp;oacute;n de &lt;code&gt;mapconcat&lt;/code&gt; en &lt;a href=&quot;mapping-functions#Mapping-Functions&quot;&gt;Mapping Functions&lt;/a&gt; , &lt;code&gt;vconcat&lt;/code&gt; en &lt;a href=&quot;vector-functions#Vector-Functions&quot;&gt;Vector Functions&lt;/a&gt; y &lt;code&gt;append&lt;/code&gt; en &lt;a href=&quot;building-lists#Building-Lists&quot;&gt;Building Lists&lt;/a&gt; . Para concatenar argumentos de l&amp;iacute;nea de comandos individuales en una cadena para usarla como comando de shell, consulte &lt;a href=&quot;shell-arguments#Shell-Arguments&quot;&gt;combinar-y-comillas-cadenas&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="562de7ef6e5c5372cd8038579b0b5fa9de52b85c" translate="yes" xml:space="preserve">
          <source>For instance, here&amp;rsquo;s a closure that removes itself from a hook after being run once:</source>
          <target state="translated">Por ejemplo, aqu&amp;iacute; hay un cierre que se quita a s&amp;iacute; mismo de un gancho despu&amp;eacute;s de ejecutarse una vez:</target>
        </trans-unit>
        <trans-unit id="44d3371577866cddaf4db74fddddccf76614f5ae" translate="yes" xml:space="preserve">
          <source>For instance, if you want &amp;ldquo;same time next month&amp;rdquo;, you could say:</source>
          <target state="translated">Por ejemplo, si desea &quot;a la misma hora el pr&amp;oacute;ximo mes&quot;, podr&amp;iacute;a decir:</target>
        </trans-unit>
        <trans-unit id="3865a9fa40f6a3d2713ffd26e08118fa4e6f6eac" translate="yes" xml:space="preserve">
          <source>For instance, if you want to make the</source>
          <target state="translated">Por ejemplo,si quieres hacer el</target>
        </trans-unit>
        <trans-unit id="e191e46f09a5a6a356d408b941943f636d82eff7" translate="yes" xml:space="preserve">
          <source>For instance, in old versions of Emacs the &lt;code&gt;sit-for&lt;/code&gt; function accepted three arguments, like this</source>
          <target state="translated">Por ejemplo, en versiones antiguas de Emacs, la funci&amp;oacute;n &lt;code&gt;sit-for&lt;/code&gt; aceptaba tres argumentos, como este</target>
        </trans-unit>
        <trans-unit id="30920d93fa04181e77388625fe59f18dfff55497" translate="yes" xml:space="preserve">
          <source>For instance, suppose &lt;code&gt;load-path&lt;/code&gt; is set to</source>
          <target state="translated">Por ejemplo, suponga que &lt;code&gt;load-path&lt;/code&gt; se establece en</target>
        </trans-unit>
        <trans-unit id="128598d10cceac7cba1f49e0a7362870b28df10f" translate="yes" xml:space="preserve">
          <source>For instance, this changes the default fontset to use a font of which family name is &amp;lsquo;</source>
          <target state="translated">Por ejemplo, esto cambia el conjunto de fuentes predeterminado para usar una fuente cuyo apellido sea '</target>
        </trans-unit>
        <trans-unit id="c0e75d5266c7e5f456b09b17569d8f50669d4c79" translate="yes" xml:space="preserve">
          <source>For instance, to display an arrow in the left fringe, using the &lt;code&gt;warning&lt;/code&gt; face, you could say something like:</source>
          <target state="translated">Por ejemplo, para mostrar una flecha en el margen izquierdo, usando la cara de &lt;code&gt;warning&lt;/code&gt; , podr&amp;iacute;a decir algo como:</target>
        </trans-unit>
        <trans-unit id="2cec329c05b78c603818950c0fa31246f51373c3" translate="yes" xml:space="preserve">
          <source>For instance, to increase the year in a decoded time, you could say:</source>
          <target state="translated">Por ejemplo,para aumentar el año en un tiempo decodificado,se podría decir:</target>
        </trans-unit>
        <trans-unit id="a4eb2b60c2dd5ee8e2d11c45799591a9a142fb00" translate="yes" xml:space="preserve">
          <source>For interactive development of regular expressions, you can use the</source>
          <target state="translated">Para el desarrollo interactivo de las expresiones regulares,se puede utilizar el</target>
        </trans-unit>
        <trans-unit id="1227c8ac2d428a960d30b6659ad99b5189b10660" translate="yes" xml:space="preserve">
          <source>For interactive use, Emacs provides two commands which always split the selected window. These call &lt;code&gt;split-window&lt;/code&gt; internally.</source>
          <target state="translated">Para uso interactivo, Emacs proporciona dos comandos que siempre dividen la ventana seleccionada. Estos llaman &lt;code&gt;split-window&lt;/code&gt; internamente.</target>
        </trans-unit>
        <trans-unit id="4fd869c535f12482bfdf3b13eeadecad9584228d" translate="yes" xml:space="preserve">
          <source>For its working, &lt;code&gt;replace-buffer-contents&lt;/code&gt; needs to compare the contents of the original buffer with that of &lt;var&gt;source&lt;/var&gt; which is a costly operation if the buffers are huge and there is a high number of differences between them. In order to keep &lt;code&gt;replace-buffer-contents&lt;/code&gt;&amp;rsquo;s runtime in bounds, it has two optional arguments.</source>
          <target state="translated">Para su funcionamiento, &lt;code&gt;replace-buffer-contents&lt;/code&gt; necesita comparar el contenido del b&amp;uacute;fer original con el de la &lt;var&gt;source&lt;/var&gt; cual es una operaci&amp;oacute;n costosa si los b&amp;uacute;feres son enormes y hay una gran cantidad de diferencias entre ellos. Para mantener el tiempo de ejecuci&amp;oacute;n de &lt;code&gt;replace-buffer-contents&lt;/code&gt; dentro de los l&amp;iacute;mites, tiene dos argumentos opcionales.</target>
        </trans-unit>
        <trans-unit id="a5ea8f4d1afb6f7f3e89cf1a3d588341e3fb83bf" translate="yes" xml:space="preserve">
          <source>For key lookup, only the event type matters: two events of the same type necessarily run the same command. The command can access the full values of these events using the &amp;lsquo;</source>
          <target state="translated">Para la b&amp;uacute;squeda de claves, solo importa el tipo de evento: dos eventos del mismo tipo ejecutan necesariamente el mismo comando. El comando puede acceder a los valores completos de estos eventos usando el '</target>
        </trans-unit>
        <trans-unit id="edcd252dab164457f78c494eb745e585735056e9" translate="yes" xml:space="preserve">
          <source>For letters, the basic code itself indicates upper versus lower case; for digits and punctuation, the shift key selects an entirely different character with a different basic code. In order to keep within the</source>
          <target state="translated">En el caso de las letras,el propio código básico indica mayúsculas frente a minúsculas;en el caso de los dígitos y la puntuación,la tecla de mayúsculas y minúsculas selecciona un carácter totalmente diferente con un código básico distinto.Con el fin de mantener dentro de la</target>
        </trans-unit>
        <trans-unit id="d761f0e8822448b6dc970fbe8b9a8dc3b66c9b19" translate="yes" xml:space="preserve">
          <source>For mechanisms to add user-defined extensions to the &lt;code&gt;rx&lt;/code&gt; notation, see &lt;a href=&quot;extending-rx#Extending-Rx&quot;&gt;Extending Rx&lt;/a&gt;.</source>
          <target state="translated">Para conocer los mecanismos para agregar extensiones definidas por el usuario a la notaci&amp;oacute;n &lt;code&gt;rx&lt;/code&gt; , consulte &lt;a href=&quot;extending-rx#Extending-Rx&quot;&gt;Ampliaci&amp;oacute;n de Rx&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a396e4435f09e1fcfcd85ad1599a0c2f4e045ad7" translate="yes" xml:space="preserve">
          <source>For more coarse-grained suppression of compiler warnings, you can use the &lt;code&gt;with-no-warnings&lt;/code&gt; construct:</source>
          <target state="translated">Para una supresi&amp;oacute;n m&amp;aacute;s detallada de las advertencias del compilador, puede usar la construcci&amp;oacute;n &lt;code&gt;with-no-warnings&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="51d6ec0ae56211f45b2f4f741eaeaa54ee2c5ff1" translate="yes" xml:space="preserve">
          <source>For more control over the expansion, the &lt;code&gt;gv-define-expander&lt;/code&gt; macro can be used. For instance, a settable &lt;code&gt;substring&lt;/code&gt; could be implemented this way:</source>
          <target state="translated">Para tener m&amp;aacute;s control sobre la expansi&amp;oacute;n, se puede utilizar la macro &lt;code&gt;gv-define-expander&lt;/code&gt; . Por ejemplo, una &lt;code&gt;substring&lt;/code&gt; configurable podr&amp;iacute;a implementarse de esta manera:</target>
        </trans-unit>
        <trans-unit id="524ad0277d25c2a67f3998052801445b5918661a" translate="yes" xml:space="preserve">
          <source>For more information about currently defined categories, run the command</source>
          <target state="translated">Para más información sobre las categorías definidas actualmente,ejecute el comando</target>
        </trans-unit>
        <trans-unit id="b5c46c52685405cf067e15388e386b840ba65dc7" translate="yes" xml:space="preserve">
          <source>For more information about general sequence and array predicates, see &lt;a href=&quot;sequences-arrays-vectors#Sequences-Arrays-Vectors&quot;&gt;Sequences Arrays Vectors&lt;/a&gt;, and &lt;a href=&quot;arrays#Arrays&quot;&gt;Arrays&lt;/a&gt;.</source>
          <target state="translated">Para obtener m&amp;aacute;s informaci&amp;oacute;n acerca de los predicados generales de secuencia y matriz, consulte &lt;a href=&quot;sequences-arrays-vectors#Sequences-Arrays-Vectors&quot;&gt;Secuencias, matrices&lt;/a&gt; , vectores y &lt;a href=&quot;arrays#Arrays&quot;&gt;matrices&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="db111e5010118b2c0af6eaa6bee37a4412fe7c17" translate="yes" xml:space="preserve">
          <source>For most image types, the value of a &lt;code&gt;:data&lt;/code&gt; property should be a string containing the image data. Some image types do not support &lt;code&gt;:data&lt;/code&gt;; for some others, &lt;code&gt;:data&lt;/code&gt; alone is not enough, so you need to use other image properties along with &lt;code&gt;:data&lt;/code&gt;. See the following subsections for details.</source>
          <target state="translated">Para la mayor&amp;iacute;a de los tipos de im&amp;aacute;genes, el valor de una propiedad &lt;code&gt;:data&lt;/code&gt; debe ser una cadena que contenga los datos de la imagen. Algunos tipos de im&amp;aacute;genes no admiten &lt;code&gt;:data&lt;/code&gt; ; para otros ,: los &lt;code&gt;:data&lt;/code&gt; s&amp;iacute; solos no son suficientes, por lo que debe utilizar otras propiedades de la imagen junto con &lt;code&gt;:data&lt;/code&gt; . Consulte las siguientes subsecciones para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="1ef84bfa8f9cff2af4cd7df121bd6682024ceda1" translate="yes" xml:space="preserve">
          <source>For most purposes, you can think of the current binding as the innermost local binding, or the global binding if there is no local binding. To be more precise, a rule called the &lt;em&gt;scoping rule&lt;/em&gt; determines where in a program a local binding takes effect. The default scoping rule in Emacs Lisp is called &lt;em&gt;dynamic scoping&lt;/em&gt;, which simply states that the current binding at any given point in the execution of a program is the most recently-created binding for that variable that still exists. For details about dynamic scoping, and an alternative scoping rule called &lt;em&gt;lexical scoping&lt;/em&gt;, See &lt;a href=&quot;variable-scoping#Variable-Scoping&quot;&gt;Variable Scoping&lt;/a&gt;.</source>
          <target state="translated">Para la mayor&amp;iacute;a de los prop&amp;oacute;sitos, puede pensar en el enlace actual como el enlace local m&amp;aacute;s interno, o el enlace global si no hay un enlace local. Para ser m&amp;aacute;s precisos, una regla llamada regla de &lt;em&gt;alcance&lt;/em&gt; determina en qu&amp;eacute; parte de un programa tiene efecto un enlace local. La regla de alcance predeterminada en Emacs Lisp se llama &lt;em&gt;alcance din&amp;aacute;mico&lt;/em&gt; , que simplemente establece que el enlace actual en cualquier punto dado en la ejecuci&amp;oacute;n de un programa es el enlace creado m&amp;aacute;s recientemente para esa variable que todav&amp;iacute;a existe. Para obtener detalles sobre el alcance din&amp;aacute;mico y una regla de alcance alternativa llamada &lt;em&gt;alcance l&amp;eacute;xico&lt;/em&gt; , consulte &lt;a href=&quot;variable-scoping#Variable-Scoping&quot;&gt;Alcance variable&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="89f804faf672e4d150387c9abaf8964a26ecd02a" translate="yes" xml:space="preserve">
          <source>For on-demand loading of external libraries which are known in advance to be required by certain Emacs primitives, see &lt;a href=&quot;dynamic-libraries#Dynamic-Libraries&quot;&gt;Dynamic Libraries&lt;/a&gt;.</source>
          <target state="translated">Para la carga bajo demanda de bibliotecas externas que se sabe de antemano que son requeridas por ciertas primitivas de Emacs, consulte &lt;a href=&quot;dynamic-libraries#Dynamic-Libraries&quot;&gt;Bibliotecas din&amp;aacute;micas&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b86b2bc573dc8ed225848ddb470b4ae1aa78a403" translate="yes" xml:space="preserve">
          <source>For other concatenation functions, see &lt;code&gt;mapconcat&lt;/code&gt; in &lt;a href=&quot;mapping-functions#Mapping-Functions&quot;&gt;Mapping Functions&lt;/a&gt;, &lt;code&gt;concat&lt;/code&gt; in &lt;a href=&quot;creating-strings#Creating-Strings&quot;&gt;Creating Strings&lt;/a&gt;, and &lt;code&gt;append&lt;/code&gt; in &lt;a href=&quot;building-lists#Building-Lists&quot;&gt;Building Lists&lt;/a&gt;.</source>
          <target state="translated">Para otras funciones de concatenaci&amp;oacute;n, consulte &lt;code&gt;mapconcat&lt;/code&gt; en &lt;a href=&quot;mapping-functions#Mapping-Functions&quot;&gt;Funciones de mapeo&lt;/a&gt; , &lt;code&gt;concat&lt;/code&gt; en &lt;a href=&quot;creating-strings#Creating-Strings&quot;&gt;Creaci&amp;oacute;n de cadenas&lt;/a&gt; y &lt;code&gt;append&lt;/code&gt; en &lt;a href=&quot;building-lists#Building-Lists&quot;&gt;Listas de construcci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a6cbbd948804398001fb9ec5cd695738cd21d0f5" translate="yes" xml:space="preserve">
          <source>For performance reasons, stack-allocated strings are limited to</source>
          <target state="translated">Por razones de rendimiento,las cuerdas apiladas se limitan a</target>
        </trans-unit>
        <trans-unit id="a60122d601392756258517760482e4ba7a25429e" translate="yes" xml:space="preserve">
          <source>For performance, the operating system may cache or alias changes made by these functions instead of writing them immediately to secondary storage. See &lt;a href=&quot;files-and-storage#Files-and-Storage&quot;&gt;Files and Storage&lt;/a&gt;.</source>
          <target state="translated">Para mejorar el rendimiento, el sistema operativo puede almacenar en cach&amp;eacute; o alias los cambios realizados por estas funciones en lugar de escribirlos inmediatamente en el almacenamiento secundario. Consulte &lt;a href=&quot;files-and-storage#Files-and-Storage&quot;&gt;Archivos y almacenamiento&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="faf441b6a95cda64d0224c1f65fb2e965874dda2" translate="yes" xml:space="preserve">
          <source>For performance, the operating system may not write the backup file&amp;rsquo;s contents to secondary storage immediately, or may alias the backup data with the original until one or the other is later modified. See &lt;a href=&quot;files-and-storage#Files-and-Storage&quot;&gt;Files and Storage&lt;/a&gt;.</source>
          <target state="translated">Para mejorar el rendimiento, es posible que el sistema operativo no escriba el contenido del archivo de copia de seguridad en el almacenamiento secundario inmediatamente, o puede crear un alias de los datos de la copia de seguridad con el original hasta que se modifique uno u otro. Consulte &lt;a href=&quot;files-and-storage#Files-and-Storage&quot;&gt;Archivos y almacenamiento&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="da6be8c7db7588c481d6d3eeb3044b3834dbeafd" translate="yes" xml:space="preserve">
          <source>For programming languages, an important feature of a major mode is to provide automatic indentation. There are two parts: one is to decide what is the right indentation of a line, and the other is to decide when to reindent a line. By default, Emacs reindents a line whenever you type a character in &lt;code&gt;electric-indent-chars&lt;/code&gt;, which by default only includes Newline. Major modes can add chars to &lt;code&gt;electric-indent-chars&lt;/code&gt; according to the syntax of the language.</source>
          <target state="translated">Para los lenguajes de programaci&amp;oacute;n, una caracter&amp;iacute;stica importante de un modo principal es proporcionar sangr&amp;iacute;a autom&amp;aacute;tica. Hay dos partes: una es decidir cu&amp;aacute;l es la sangr&amp;iacute;a correcta de una l&amp;iacute;nea y la otra es decidir cu&amp;aacute;ndo volver a sangrar una l&amp;iacute;nea. Por defecto, Emacs reinventa una l&amp;iacute;nea cada vez que escribe un car&amp;aacute;cter en &lt;code&gt;electric-indent-chars&lt;/code&gt; , que por defecto solo incluye Newline. Los modos principales pueden agregar caracteres a los caracteres &lt;code&gt;electric-indent-chars&lt;/code&gt; acuerdo con la sintaxis del lenguaje.</target>
        </trans-unit>
        <trans-unit id="ddab071833859a06b07541c99492d90ddd4fc900" translate="yes" xml:space="preserve">
          <source>For purposes of evaluation, the array is a constant&amp;mdash;i.e., it evaluates to itself.</source>
          <target state="translated">Para prop&amp;oacute;sitos de evaluaci&amp;oacute;n, la matriz es una constante, es decir, se eval&amp;uacute;a a s&amp;iacute; misma.</target>
        </trans-unit>
        <trans-unit id="8d5a0c7b7da7f4d2d585a62d2acde8ed3120c9fb" translate="yes" xml:space="preserve">
          <source>For relative time values, Emacs considers a month to be exactly thirty days, and a year to be exactly 365.25 days.</source>
          <target state="translated">Para valores relativos de tiempo,Emacs considera que un mes es exactamente treinta días,y un año es exactamente 365,25 días.</target>
        </trans-unit>
        <trans-unit id="90054c0c3e1da561a0a9026341ea698f8915bbc4" translate="yes" xml:space="preserve">
          <source>For replacing display specifications, &lt;em&gt;the text that has the property&lt;/em&gt; means all the consecutive characters that have the same Lisp object as their &lt;code&gt;display&lt;/code&gt; property; these characters are replaced as a single unit. If two characters have different Lisp objects as their &lt;code&gt;display&lt;/code&gt; properties (i.e., objects which are not &lt;code&gt;eq&lt;/code&gt;), they are handled separately.</source>
          <target state="translated">Para reemplazar las especificaciones de visualizaci&amp;oacute;n, &lt;em&gt;el texto que tiene la propiedad&lt;/em&gt; significa todos los caracteres consecutivos que tienen el mismo objeto Lisp como propiedad de &lt;code&gt;display&lt;/code&gt; ; estos caracteres se reemplazan como una sola unidad. Si dos personajes tienen diferentes objetos Lisp como propiedades de &lt;code&gt;display&lt;/code&gt; (es decir, objetos que no son &lt;code&gt;eq&lt;/code&gt; ), se manejan por separado.</target>
        </trans-unit>
        <trans-unit id="e2f9af1a35a2660fd8409da9cb1f927de77abafd" translate="yes" xml:space="preserve">
          <source>For representing control characters to be found in files or strings, we recommend the &amp;lsquo;</source>
          <target state="translated">Para representar caracteres de control que se encuentran en archivos o cadenas, recomendamos el '</target>
        </trans-unit>
        <trans-unit id="8fe2d9b8dc77be3c74c45be6d83fd5245b7aadc8" translate="yes" xml:space="preserve">
          <source>For some languages, upper and lower case letters are not in one-to-one correspondence. There may be two different lower case letters with the same upper case equivalent. In these cases, you need to specify the maps for both lower case and upper case.</source>
          <target state="translated">En algunos idiomas,las letras mayúsculas y minúsculas no están en correspondencia con el uno a uno.Puede haber dos letras minúsculas diferentes con el mismo equivalente en mayúsculas.En estos casos,es necesario especificar los mapas tanto para las minúsculas como para las mayúsculas.</target>
        </trans-unit>
        <trans-unit id="c71d3f2b7e58f202f82ff156034a0110342e4f42" translate="yes" xml:space="preserve">
          <source>For some purposes, it does not matter whether a list is proper, circular or dotted. If a program doesn&amp;rsquo;t look far enough down the list to see the &lt;small&gt;CDR&lt;/small&gt; of the final cons cell, it won&amp;rsquo;t care. However, some functions that operate on lists demand proper lists and signal errors if given a dotted list. Most functions that try to find the end of a list enter infinite loops if given a circular list.</source>
          <target state="translated">Para algunos prop&amp;oacute;sitos, no importa si una lista es adecuada, circular o con puntos. Si un programa no busca lo suficiente en la lista para ver el &lt;small&gt;CDR&lt;/small&gt; de la celda de contras final, no le importar&amp;aacute;. Sin embargo, algunas funciones que operan en listas exigen listas adecuadas y se&amp;ntilde;alan errores si se les da una lista de puntos. La mayor&amp;iacute;a de las funciones que intentan encontrar el final de una lista entran en bucles infinitos si se les da una lista circular.</target>
        </trans-unit>
        <trans-unit id="d500549849bc15bef76128691a5baf2432335f7d" translate="yes" xml:space="preserve">
          <source>For some purposes, the nondirectory part is further subdivided into the name proper and the &lt;em&gt;version number&lt;/em&gt;. On most systems, only backup files have version numbers in their names.</source>
          <target state="translated">Para algunos prop&amp;oacute;sitos, la parte que no es del directorio se subdivide en el nombre propiamente dicho y el &lt;em&gt;n&amp;uacute;mero de versi&amp;oacute;n&lt;/em&gt; . En la mayor&amp;iacute;a de los sistemas, solo los archivos de respaldo tienen n&amp;uacute;meros de versi&amp;oacute;n en sus nombres.</target>
        </trans-unit>
        <trans-unit id="112d87a662d1681332b9049c4a51e3d53eb7aa11" translate="yes" xml:space="preserve">
          <source>For stretches of text that should temporarily stand out. For example, it is commonly assigned to the &lt;code&gt;mouse-face&lt;/code&gt; property for cursor highlighting (see &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;).</source>
          <target state="translated">Para tramos de texto que deber&amp;iacute;an destacarse temporalmente. Por ejemplo, normalmente se asigna a la propiedad de la &lt;code&gt;mouse-face&lt;/code&gt; del rat&amp;oacute;n para resaltar el cursor (consulte &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Propiedades especiales&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="42c65b3d7d99521ed4092ae00fce87c47ab3b0ba" translate="yes" xml:space="preserve">
          <source>For symbols in special obarrays, which are not used for ordinary purposes, it may make sense to use the property list cell in a nonstandard fashion; in fact, the abbrev mechanism does so (see &lt;a href=&quot;abbrevs#Abbrevs&quot;&gt;Abbrevs&lt;/a&gt;).</source>
          <target state="translated">Para s&amp;iacute;mbolos en obarrays especiales, que no se usan para prop&amp;oacute;sitos ordinarios, puede tener sentido usar la celda de lista de propiedades de una manera no est&amp;aacute;ndar; de hecho, el mecanismo de abreviaturas lo hace (ver &lt;a href=&quot;abbrevs#Abbrevs&quot;&gt;Abreviaturas&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="a852800d4f26ade1bdda0b79a03c7fc24d024ed5" translate="yes" xml:space="preserve">
          <source>For syntactic analysis, such as in indentation, often the useful thing is to compute the syntactic state corresponding to a given buffer position. This function does that conveniently.</source>
          <target state="translated">Para el análisis sintáctico,como en el caso de la indentación,a menudo lo útil es calcular el estado sintáctico correspondiente a una posición de amortiguación determinada.Esta función lo hace convenientemente.</target>
        </trans-unit>
        <trans-unit id="0ca28c3cc32b5a56a828f789e939bb88d8e4bc04" translate="yes" xml:space="preserve">
          <source>For technical reasons, a unibyte and a multibyte string are &lt;code&gt;equal&lt;/code&gt; if and only if they contain the same sequence of character codes and all these codes are either in the range 0 through 127 (</source>
          <target state="translated">Por razones t&amp;eacute;cnicas, una cadena unibyte y multibyte son &lt;code&gt;equal&lt;/code&gt; si y solo si contienen la misma secuencia de c&amp;oacute;digos de caracteres y todos estos c&amp;oacute;digos est&amp;aacute;n en el rango de 0 a 127 (</target>
        </trans-unit>
        <trans-unit id="45642cd47dfa6bf8d29ea83a9bea3bad88b8f0bd" translate="yes" xml:space="preserve">
          <source>For text concerning errors, warnings, or successes. For example, these are used for messages in</source>
          <target state="translated">Para el texto relativo a los errores,advertencias o éxitos.Por ejemplo,se utilizan para los mensajes en</target>
        </trans-unit>
        <trans-unit id="6e07008dae896457b72d081a4580cd31c5207a4e" translate="yes" xml:space="preserve">
          <source>For text matching (respectively) permanent search matches, interactive search matches, and lazy highlighting other matches than the current interactive one.</source>
          <target state="translated">Para la coincidencia de texto (respectivamente)las coincidencias de búsqueda permanente,las coincidencias de búsqueda interactiva y el resaltado perezoso de otras coincidencias que no sean la interactiva actual.</target>
        </trans-unit>
        <trans-unit id="199754d5171ec2cef7de10ed893154f11d501bd8" translate="yes" xml:space="preserve">
          <source>For that reason, it is better to avoid binding commands to key sequences where the end of the key sequence is a prefix of a key translation. The main such problematic suffixes/prefixes are</source>
          <target state="translated">Por esa razón,es mejor evitar vincular los comandos a las secuencias de teclas donde el final de la secuencia de teclas es un prefijo de la traducción de una tecla.Los principales sufijos/prefijos problemáticos de este tipo son</target>
        </trans-unit>
        <trans-unit id="f10e2ee38beb0efc1d5476196bbcfc128749e76f" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;(eval &lt;var&gt;form&lt;/var&gt;)&lt;/code&gt; forms used in a bindat specification, the &lt;var&gt;form&lt;/var&gt; can access and update these dynamically bound variables during evaluation:</source>
          <target state="translated">Para los &lt;code&gt;(eval &lt;var&gt;form&lt;/var&gt;)&lt;/code&gt; ( formulario de evaluaci&amp;oacute;n ) utilizados en una especificaci&amp;oacute;n bindat, el &lt;var&gt;form&lt;/var&gt; ulario puede acceder y actualizar estas variables vinculadas din&amp;aacute;micamente durante la evaluaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="ea753a8ffd58775e7c0c7c0606c76821fe2cfcae" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;pop&lt;/code&gt; macro, which removes the first element from a list, See &lt;a href=&quot;list-elements#List-Elements&quot;&gt;List Elements&lt;/a&gt;.</source>
          <target state="translated">Para la macro &lt;code&gt;pop&lt;/code&gt; , que elimina el primer elemento de una lista, consulte &lt;a href=&quot;list-elements#List-Elements&quot;&gt;Elementos de la lista&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ef8376493cc4d066a996040b4337c10b4a0cd3a5" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;push&lt;/code&gt; macro, which adds an element to a list, See &lt;a href=&quot;list-variables#List-Variables&quot;&gt;List Variables&lt;/a&gt;.</source>
          <target state="translated">Para la macro de &lt;code&gt;push&lt;/code&gt; , que agrega un elemento a una lista, consulte &lt;a href=&quot;list-variables#List-Variables&quot;&gt;Variables de lista&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0f3fe319bd30de7f1551c3b872e3e4bba5b856b1" translate="yes" xml:space="preserve">
          <source>For the better understanding of what stable sort is, consider the following vector example. After sorting, all items whose &lt;code&gt;car&lt;/code&gt; is 8 are grouped at the beginning of &lt;code&gt;vector&lt;/code&gt;, but their relative order is preserved. All items whose &lt;code&gt;car&lt;/code&gt; is 9 are grouped at the end of &lt;code&gt;vector&lt;/code&gt;, but their relative order is also preserved:</source>
          <target state="translated">Para comprender mejor qu&amp;eacute; es la ordenaci&amp;oacute;n estable, considere el siguiente ejemplo de vector. Despu&amp;eacute;s de ordenar, todos los elementos cuyo &lt;code&gt;car&lt;/code&gt; es 8 se agrupan al principio del &lt;code&gt;vector&lt;/code&gt; , pero se conserva su orden relativo. Todos los elementos cuyo &lt;code&gt;car&lt;/code&gt; es 9 se agrupan al final del &lt;code&gt;vector&lt;/code&gt; , pero tambi&amp;eacute;n se conserva su orden relativo:</target>
        </trans-unit>
        <trans-unit id="87d8274e9315f6d205c44c909122fe4b2bcd2515" translate="yes" xml:space="preserve">
          <source>For the common case of all backups going into one directory, the alist should contain a single element pairing &amp;lsquo;</source>
          <target state="translated">Para el caso com&amp;uacute;n de todas las copias de seguridad que van a un directorio, la lista debe contener un solo emparejamiento de elementos '</target>
        </trans-unit>
        <trans-unit id="397056acd2602b1eb8236b9ebdd8ab76eec096da" translate="yes" xml:space="preserve">
          <source>For the customization option &lt;var&gt;symbol&lt;/var&gt;, add &lt;var&gt;value&lt;/var&gt; to the list of reasonable values.</source>
          <target state="translated">Para el &lt;var&gt;symbol&lt;/var&gt; opci&amp;oacute;n de personalizaci&amp;oacute;n , agregue &lt;var&gt;value&lt;/var&gt; a la lista de valores razonables.</target>
        </trans-unit>
        <trans-unit id="4a38dedbdf3df9cf3e1410eb6cee8a459e8d9366" translate="yes" xml:space="preserve">
          <source>For the following functions, X and Y coordinates are reported in integer character units, i.e., numbers of lines and columns respectively. On a graphical display, each &amp;ldquo;line&amp;rdquo; and &amp;ldquo;column&amp;rdquo; corresponds to the height and width of the default character specified by the frame&amp;rsquo;s default font (see &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Frame Font&lt;/a&gt;).</source>
          <target state="translated">Para las siguientes funciones, las coordenadas X e Y se informan en unidades de caracteres enteros, es decir, n&amp;uacute;meros de l&amp;iacute;neas y columnas respectivamente. En una pantalla gr&amp;aacute;fica, cada &quot;l&amp;iacute;nea&quot; y &quot;columna&quot; corresponde a la altura y el ancho del car&amp;aacute;cter predeterminado especificado por la fuente predeterminada del marco (ver &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Fuente del marco&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="25a6d2221bff01069101fec57cebeb42f17550b9" translate="yes" xml:space="preserve">
          <source>For the full list of the possible states, see the manual page of the &lt;code&gt;ps&lt;/code&gt; command.</source>
          <target state="translated">Para obtener la lista completa de los posibles estados, consulte la p&amp;aacute;gina del manual del comando &lt;code&gt;ps&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e75de6ea26daa8fe7f4c02ce82f35f330195a3b1" translate="yes" xml:space="preserve">
          <source>For the most part, &amp;lsquo;</source>
          <target state="translated">En su mayor parte, '</target>
        </trans-unit>
        <trans-unit id="8f083f87437f8af6d0e911df4fe787b5367ecfff" translate="yes" xml:space="preserve">
          <source>For the next three functions, the optional argument &lt;var&gt;table&lt;/var&gt; defaults to the current buffer&amp;rsquo;s category table.</source>
          <target state="translated">Para las siguientes tres funciones, la &lt;var&gt;table&lt;/var&gt; argumentos opcional toma como valor predeterminado la tabla de categor&amp;iacute;as del b&amp;uacute;fer actual.</target>
        </trans-unit>
        <trans-unit id="0de287c6c6b45bac437b1271e755cca625f2d489" translate="yes" xml:space="preserve">
          <source>For the remaining character sets, those that you don&amp;rsquo;t specify explicitly, Emacs chooses a font based on &lt;var&gt;fontpattern&lt;/var&gt;: it replaces &amp;lsquo;</source>
          <target state="translated">Para los conjuntos de caracteres restantes, aquellos que no especifica expl&amp;iacute;citamente, Emacs elige una fuente basada en el &lt;var&gt;fontpattern&lt;/var&gt; de fuente : reemplaza '</target>
        </trans-unit>
        <trans-unit id="a906a8f725709d4b0de4a96ab4461367a34e3920" translate="yes" xml:space="preserve">
          <source>For the size parameters, the value must be an integer. The position parameter names &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;top&lt;/code&gt; are not totally accurate, because some values indicate the position of the right or bottom edges instead. The &lt;var&gt;value&lt;/var&gt; possibilities for the position parameters are: an integer, a list &lt;code&gt;(+ &lt;var&gt;pos&lt;/var&gt;)&lt;/code&gt;, or a list &lt;code&gt;(- &lt;var&gt;pos&lt;/var&gt;)&lt;/code&gt;; as previously described (see &lt;a href=&quot;position-parameters#Position-Parameters&quot;&gt;Position Parameters&lt;/a&gt;).</source>
          <target state="translated">Para los par&amp;aacute;metros de tama&amp;ntilde;o, el valor debe ser un n&amp;uacute;mero entero. Los nombres de los par&amp;aacute;metros de posici&amp;oacute;n &lt;code&gt;left&lt;/code&gt; y &lt;code&gt;top&lt;/code&gt; no son totalmente precisos, porque algunos valores indican la posici&amp;oacute;n de los bordes derecho o inferior. Las posibilidades de &lt;var&gt;value&lt;/var&gt; para los par&amp;aacute;metros de posici&amp;oacute;n son: un n&amp;uacute;mero entero, una lista &lt;code&gt;(+ &lt;var&gt;pos&lt;/var&gt;)&lt;/code&gt; o una lista &lt;code&gt;(- &lt;var&gt;pos&lt;/var&gt;)&lt;/code&gt; ; como se describi&amp;oacute; anteriormente (ver &lt;a href=&quot;position-parameters#Position-Parameters&quot;&gt;Par&amp;aacute;metros de posici&amp;oacute;n&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="bd63f6190989b582ea9c376026bf123ee7491af3" translate="yes" xml:space="preserve">
          <source>For the vector, it is even simpler because you don&amp;rsquo;t need setq:</source>
          <target state="translated">Para el vector, es a&amp;uacute;n m&amp;aacute;s simple porque no necesita setq:</target>
        </trans-unit>
        <trans-unit id="2ffffe0d3dd28ebd8002e469cb5d2dfd42923c8e" translate="yes" xml:space="preserve">
          <source>For these reasons, advice should be reserved for the cases where you cannot modify a function&amp;rsquo;s behavior in any other way. If it is possible to do the same thing via a hook, that is preferable (see &lt;a href=&quot;hooks#Hooks&quot;&gt;Hooks&lt;/a&gt;). If you simply want to change what a particular key does, it may be better to write a new command, and remap the old command&amp;rsquo;s key bindings to the new one (see &lt;a href=&quot;remapping-commands#Remapping-Commands&quot;&gt;Remapping Commands&lt;/a&gt;).</source>
          <target state="translated">Por estas razones, el consejo debe reservarse para los casos en los que no pueda modificar el comportamiento de una funci&amp;oacute;n de ninguna otra manera. Si es posible hacer lo mismo mediante un gancho, es preferible (ver &lt;a href=&quot;hooks#Hooks&quot;&gt;Ganchos&lt;/a&gt; ). Si simplemente desea cambiar lo que hace una tecla en particular, puede ser mejor escribir un nuevo comando y reasignar las combinaciones de teclas del comando anterior al nuevo (consulte &lt;a href=&quot;remapping-commands#Remapping-Commands&quot;&gt;Reasignaci&amp;oacute;n de comandos&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="9b52907f69d9a50e4ec7ab8929f4201bc2b2e2e4" translate="yes" xml:space="preserve">
          <source>For this function to work, point must be somewhere between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;.</source>
          <target state="translated">Para que esta funci&amp;oacute;n funcione, el punto debe estar en alg&amp;uacute;n lugar entre el &lt;var&gt;start&lt;/var&gt; y el &lt;var&gt;end&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="b964418f003633de4c03a4cd9b1087f166bf72e2" translate="yes" xml:space="preserve">
          <source>For this reason, this function is seldom useful if you need to determine more than just the fact that a file is or isn&amp;rsquo;t a symbolic link. If you actually need the file name of the link target, use &lt;code&gt;file-chase-links&lt;/code&gt; or &lt;code&gt;file-truename&lt;/code&gt;, described in &lt;a href=&quot;truenames#Truenames&quot;&gt;Truenames&lt;/a&gt;.</source>
          <target state="translated">Por esta raz&amp;oacute;n, esta funci&amp;oacute;n rara vez es &amp;uacute;til si necesita determinar algo m&amp;aacute;s que el hecho de que un archivo es o no es un enlace simb&amp;oacute;lico. Si realmente necesita el nombre de archivo del destino del enlace, use &lt;code&gt;file-chase-links&lt;/code&gt; o &lt;code&gt;file-truename&lt;/code&gt; , que se describen en &lt;a href=&quot;truenames#Truenames&quot;&gt;Truenames&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="19381c88cff85e8267de9ed9e5513028e6adebad" translate="yes" xml:space="preserve">
          <source>For yanking, one entry in the kill ring is designated the front of the ring. Some yank commands rotate the ring by designating a different element as the front. But this virtual rotation doesn&amp;rsquo;t change the list itself&amp;mdash;the most recent entry always comes first in the list.</source>
          <target state="translated">Para tirar, una entrada en el anillo de la muerte se designa como el frente del anillo. Algunos comandos de tir&amp;oacute;n rotan el anillo designando un elemento diferente como el frente. Pero esta rotaci&amp;oacute;n virtual no cambia la lista en s&amp;iacute;; la entrada m&amp;aacute;s reciente siempre aparece primero en la lista.</target>
        </trans-unit>
        <trans-unit id="fa1a0f8f3b130a55ce024bebdfbd50a7e2e42d15" translate="yes" xml:space="preserve">
          <source>Force &lt;var&gt;thunk&lt;/var&gt; to perform the evaluation of the forms specified in the &lt;code&gt;thunk-delay&lt;/code&gt; that created the thunk. The result of the evaluation of the last form is returned. The &lt;var&gt;thunk&lt;/var&gt; also &amp;ldquo;remembers&amp;rdquo; that it has been forced: Any further calls of &lt;code&gt;thunk-force&lt;/code&gt; with the same &lt;var&gt;thunk&lt;/var&gt; will just return the same result without evaluating the forms again.</source>
          <target state="translated">Forzar &lt;var&gt;thunk&lt;/var&gt; para realizar la evaluaci&amp;oacute;n de los formularios especificados en el &lt;code&gt;thunk-delay&lt;/code&gt; que cre&amp;oacute; el procesador. Se devuelve el resultado de la evaluaci&amp;oacute;n del &amp;uacute;ltimo formulario. El &lt;var&gt;thunk&lt;/var&gt; tambi&amp;eacute;n &quot;recuerda&quot; que ha sido forzado: cualquier llamada adicional de &lt;code&gt;thunk-force&lt;/code&gt; con el mismo &lt;var&gt;thunk&lt;/var&gt; devolver&amp;aacute; el mismo resultado sin evaluar los formularios nuevamente.</target>
        </trans-unit>
        <trans-unit id="d8311d282a06bf7c13df916c21ae0692e8509152" translate="yes" xml:space="preserve">
          <source>Forcing Redisplay</source>
          <target state="translated">Forzar la reedición</target>
        </trans-unit>
        <trans-unit id="50fe9b523b09e3d4f5eb9578dd9aa2cded42eb5b" translate="yes" xml:space="preserve">
          <source>Forcing redisplay.</source>
          <target state="translated">Forzar la redistribución.</target>
        </trans-unit>
        <trans-unit id="54e5928d6cbe4200cfedd66bfae0116254371dd3" translate="yes" xml:space="preserve">
          <source>Foreground color, a string. The value can be a system-defined color name, or a hexadecimal color specification. See &lt;a href=&quot;color-names#Color-Names&quot;&gt;Color Names&lt;/a&gt;. On black-and-white displays, certain shades of gray are implemented by stipple patterns.</source>
          <target state="translated">Color de primer plano, una cuerda. El valor puede ser un nombre de color definido por el sistema o una especificaci&amp;oacute;n de color hexadecimal. Consulte &lt;a href=&quot;color-names#Color-Names&quot;&gt;Nombres de colores&lt;/a&gt; . En las pantallas en blanco y negro, ciertos tonos de gris se implementan mediante patrones de punteado.</target>
        </trans-unit>
        <trans-unit id="d9151cf0df95ff2f005ffb2dbfff11e476773720" translate="yes" xml:space="preserve">
          <source>Format of Descriptions</source>
          <target state="translated">Formato de las descripciones</target>
        </trans-unit>
        <trans-unit id="690ff78b94f5f2ab90ba941868039323171c46a4" translate="yes" xml:space="preserve">
          <source>Format of GnuTLS Cryptography Inputs</source>
          <target state="translated">Formato de las entradas de criptografía GnuTLS</target>
        </trans-unit>
        <trans-unit id="3b30bd7322a19ebf11a0420fbb9d0d2e2a952c4c" translate="yes" xml:space="preserve">
          <source>Format of Keymaps</source>
          <target state="translated">Formato de los mapas de teclas</target>
        </trans-unit>
        <trans-unit id="ffba191c046f0f3d86eca0356dcfa6c942799127" translate="yes" xml:space="preserve">
          <source>Formatted Text Properties</source>
          <target state="translated">Propiedades del texto formateado</target>
        </trans-unit>
        <trans-unit id="46ced2475097f609a37fcad0f6e2c12ef6e35700" translate="yes" xml:space="preserve">
          <source>Formatting Strings</source>
          <target state="translated">Formateo de cuerdas</target>
        </trans-unit>
        <trans-unit id="08ddf2db0601ff64b5999d791aceb04902f2ab24" translate="yes" xml:space="preserve">
          <source>Formatting custom &lt;code&gt;format&lt;/code&gt; specifications.</source>
          <target state="translated">Formateo de especificaciones de &lt;code&gt;format&lt;/code&gt; o personalizado .</target>
        </trans-unit>
        <trans-unit id="85e179fd2599024e08f48eaf746a1effe699c9af" translate="yes" xml:space="preserve">
          <source>Formatting is often useful for computing messages to be displayed. In fact, the functions &lt;code&gt;message&lt;/code&gt; and &lt;code&gt;error&lt;/code&gt; provide the same formatting feature described here; they differ from &lt;code&gt;format-message&lt;/code&gt; only in how they use the result of formatting.</source>
          <target state="translated">El formateo suele ser &amp;uacute;til para calcular los mensajes que se van a mostrar. De hecho, el &lt;code&gt;message&lt;/code&gt; funciones y el &lt;code&gt;error&lt;/code&gt; proporcionan la misma caracter&amp;iacute;stica de formato que se describe aqu&amp;iacute;; se diferencian de &lt;code&gt;format-message&lt;/code&gt; s&amp;oacute;lo en c&amp;oacute;mo utilizan el resultado del formateo.</target>
        </trans-unit>
        <trans-unit id="1e169267238c8a26c2ddbb83e054dfbd79640e6b" translate="yes" xml:space="preserve">
          <source>Formatting text as the mode line would.</source>
          <target state="translated">Formateando el texto como lo haría la línea de modo.</target>
        </trans-unit>
        <trans-unit id="3c6860ed0688d49392f43c31b5e487af200d8da8" translate="yes" xml:space="preserve">
          <source>Forms that call functions.</source>
          <target state="translated">Formas que llaman a las funciones.</target>
        </trans-unit>
        <trans-unit id="a61c89f45d054dc7a27512e0b0970e65fadc39de" translate="yes" xml:space="preserve">
          <source>Forms that call macros.</source>
          <target state="translated">Formas que se llaman macros.</target>
        </trans-unit>
        <trans-unit id="99a2a5d26385032afad4033277b91f1c2729bb11" translate="yes" xml:space="preserve">
          <source>Forms that evaluate to themselves.</source>
          <target state="translated">Formas que se evalúan a sí mismas.</target>
        </trans-unit>
        <trans-unit id="ba4e72261283258434788542ba397135c10f39d8" translate="yes" xml:space="preserve">
          <source>Forward</source>
          <target state="translated">Forward</target>
        </trans-unit>
        <trans-unit id="03ff98c7185813598af4b44b2a4f969fae61d671" translate="yes" xml:space="preserve">
          <source>Four special values for &lt;code&gt;direction&lt;/code&gt; entries allow to implicitly specify the selected frame&amp;rsquo;s main window as the reference window: &lt;code&gt;leftmost&lt;/code&gt;, &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;rightmost&lt;/code&gt; and &lt;code&gt;bottom&lt;/code&gt;. This means that instead of, for example, &lt;code&gt;(direction&amp;nbsp;.&amp;nbsp;left)&amp;nbsp;(window&amp;nbsp;.&amp;nbsp;main)&lt;/code&gt; one can just specify &lt;code&gt;(direction&amp;nbsp;.&amp;nbsp;leftmost)&lt;/code&gt;. An existing &lt;code&gt;window&lt;/code&gt;&lt;var&gt;alist&lt;/var&gt; entry is ignored in such cases.</source>
          <target state="translated">Cuatro valores especiales para las entradas de &lt;code&gt;direction&lt;/code&gt; permiten especificar impl&amp;iacute;citamente la ventana principal del marco seleccionado como ventana de referencia: &lt;code&gt;leftmost&lt;/code&gt; , &lt;code&gt;top&lt;/code&gt; , &lt;code&gt;rightmost&lt;/code&gt; e &lt;code&gt;bottom&lt;/code&gt; . Esto significa que en lugar de, por ejemplo, &lt;code&gt;(direction&amp;nbsp;.&amp;nbsp;left)&amp;nbsp;(window&amp;nbsp;.&amp;nbsp;main)&lt;/code&gt; uno puede simplemente especificar &lt;code&gt;(direction&amp;nbsp;.&amp;nbsp;leftmost)&lt;/code&gt; . En tales casos, se ignora &lt;var&gt;alist&lt;/var&gt; entrada de lista de &lt;code&gt;window&lt;/code&gt; existente .</target>
        </trans-unit>
        <trans-unit id="f8be388d8709a99dab45a803379f214da551553c" translate="yes" xml:space="preserve">
          <source>Four-byte vector representing an Internet address. For example: &lt;code&gt;[127 0 0 1]&lt;/code&gt; for localhost.</source>
          <target state="translated">Vector de cuatro bytes que representa una direcci&amp;oacute;n de Internet. Por ejemplo: &lt;code&gt;[127 0 0 1]&lt;/code&gt; para localhost.</target>
        </trans-unit>
        <trans-unit id="b64b0ae712554037fe6db96671213dc347089595" translate="yes" xml:space="preserve">
          <source>Fractional seconds as a number of nanoseconds. For timestamps returned by &lt;code&gt;extract_time&lt;/code&gt;, this is always nonnegative and less than one billion. (Although POSIX requires the type of &lt;code&gt;tv_nsec&lt;/code&gt; to be &lt;code&gt;long&lt;/code&gt;, the type is &lt;code&gt;long long&lt;/code&gt; on some nonstandard platforms.)</source>
          <target state="translated">Segundos fraccionarios expresados ​​en nanosegundos. Para las marcas de tiempo devueltas por &lt;code&gt;extract_time&lt;/code&gt; , esto siempre es no negativo y menos de mil millones. (Aunque POSIX requiere que el tipo de &lt;code&gt;tv_nsec&lt;/code&gt; sea &lt;code&gt;long&lt;/code&gt; , el tipo es &lt;code&gt;long long&lt;/code&gt; en algunas plataformas no est&amp;aacute;ndar).</target>
        </trans-unit>
        <trans-unit id="7635f609fc39a6b2309200df6c13ba7f981e6e93" translate="yes" xml:space="preserve">
          <source>Frame Configuration Type</source>
          <target state="translated">Tipo de configuración del cuadro</target>
        </trans-unit>
        <trans-unit id="b3375a4b79b653dfb166deb920a1a8a07454332b" translate="yes" xml:space="preserve">
          <source>Frame Configurations</source>
          <target state="translated">Configuraciones del marco</target>
        </trans-unit>
        <trans-unit id="2628654f3592f30e3e183e8fe28ea0baef770932" translate="yes" xml:space="preserve">
          <source>Frame Font</source>
          <target state="translated">Fuente del marco</target>
        </trans-unit>
        <trans-unit id="48a4e1fb6a458c2e798e7f81d3081543b9b437d1" translate="yes" xml:space="preserve">
          <source>Frame Geometry</source>
          <target state="translated">Geometría del marco</target>
        </trans-unit>
        <trans-unit id="3f455212bef49865fcc51892b83fce71911f1680" translate="yes" xml:space="preserve">
          <source>Frame Interaction Parameters</source>
          <target state="translated">Parámetros de interacción del cuadro</target>
        </trans-unit>
        <trans-unit id="b00c42c9c273b5bc922c8b715a7c39b737a31f0e" translate="yes" xml:space="preserve">
          <source>Frame Layout</source>
          <target state="translated">Diseño del marco</target>
        </trans-unit>
        <trans-unit id="ee5af9328eadec13e19d54784546362006d1c6a2" translate="yes" xml:space="preserve">
          <source>Frame Layouts with Side Windows</source>
          <target state="translated">Diseños de marcos con ventanas laterales</target>
        </trans-unit>
        <trans-unit id="2def4ca016ae808f491d5589a4d3596db373a3bd" translate="yes" xml:space="preserve">
          <source>Frame Parameters</source>
          <target state="translated">Parámetros del cuadro</target>
        </trans-unit>
        <trans-unit id="3795259ac55a38a9c80dc78cb37d9173d40c7749" translate="yes" xml:space="preserve">
          <source>Frame Position</source>
          <target state="translated">Posición del cuadro</target>
        </trans-unit>
        <trans-unit id="8b0227b2f358f622998d1841dc8551f0359eac0d" translate="yes" xml:space="preserve">
          <source>Frame Size</source>
          <target state="translated">Tamaño del cuadro</target>
        </trans-unit>
        <trans-unit id="b7ac3c8ffea3811343eb8213490bb38d98fb19f5" translate="yes" xml:space="preserve">
          <source>Frame Titles</source>
          <target state="translated">Títulos de los marcos</target>
        </trans-unit>
        <trans-unit id="9c5749558dd4c5bf4399310cd20ad88f7947524b" translate="yes" xml:space="preserve">
          <source>Frame Type</source>
          <target state="translated">Tipo de cuadro</target>
        </trans-unit>
        <trans-unit id="e7c9cb1f7a76750767299beca11d5593148f6bbd" translate="yes" xml:space="preserve">
          <source>Frame parameters exist mostly for the sake of graphical displays. Most frame parameters have no effect when applied to a frame on a text terminal; only the &lt;code&gt;height&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;title&lt;/code&gt;, &lt;code&gt;menu-bar-lines&lt;/code&gt;, &lt;code&gt;buffer-list&lt;/code&gt; and &lt;code&gt;buffer-predicate&lt;/code&gt; parameters do something special. If the terminal supports colors, the parameters &lt;code&gt;foreground-color&lt;/code&gt;, &lt;code&gt;background-color&lt;/code&gt;, &lt;code&gt;background-mode&lt;/code&gt; and &lt;code&gt;display-type&lt;/code&gt; are also meaningful. If the terminal supports frame transparency, the parameter &lt;code&gt;alpha&lt;/code&gt; is also meaningful.</source>
          <target state="translated">Los par&amp;aacute;metros del marco existen principalmente por el bien de las pantallas gr&amp;aacute;ficas. La mayor&amp;iacute;a de los par&amp;aacute;metros de marco no tienen ning&amp;uacute;n efecto cuando se aplican a un marco en un terminal de texto; s&amp;oacute;lo los par&amp;aacute;metros &lt;code&gt;height&lt;/code&gt; , &lt;code&gt;width&lt;/code&gt; , &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;title&lt;/code&gt; , &lt;code&gt;menu-bar-lines&lt;/code&gt; , &lt;code&gt;buffer-list&lt;/code&gt; y &lt;code&gt;buffer-predicate&lt;/code&gt; hacen algo especial. Si el terminal admite colores, los par&amp;aacute;metros &lt;code&gt;foreground-color&lt;/code&gt; , &lt;code&gt;background-color&lt;/code&gt; , &lt;code&gt;background-mode&lt;/code&gt; y &lt;code&gt;display-type&lt;/code&gt; tambi&amp;eacute;n son significativos. Si el terminal admite la transparencia del marco, el par&amp;aacute;metro &lt;code&gt;alpha&lt;/code&gt; tambi&amp;eacute;n es significativo.</target>
        </trans-unit>
        <trans-unit id="0eaf8dac44f190c3faaf3c94ff99cbda42392375" translate="yes" xml:space="preserve">
          <source>Frame parameters usually specify frame sizes in character units. On graphical displays, the &lt;code&gt;default&lt;/code&gt; face determines the actual pixel sizes of these character units (see &lt;a href=&quot;face-attributes#Face-Attributes&quot;&gt;Face Attributes&lt;/a&gt;).</source>
          <target state="translated">Los par&amp;aacute;metros de marco suelen especificar tama&amp;ntilde;os de marco en unidades de caracteres. En las pantallas gr&amp;aacute;ficas, la cara &lt;code&gt;default&lt;/code&gt; determina los tama&amp;ntilde;os de p&amp;iacute;xeles reales de estas unidades de caracteres (consulte &lt;a href=&quot;face-attributes#Face-Attributes&quot;&gt;Atributos de caras&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="e93788474e90074ae4a2304390f95b4eaa4aa995" translate="yes" xml:space="preserve">
          <source>Frame&amp;rsquo;s size.</source>
          <target state="translated">Tama&amp;ntilde;o del cuadro.</target>
        </trans-unit>
        <trans-unit id="e3e7a3833d19706ebf33b2c3baf8e05deeed7bca" translate="yes" xml:space="preserve">
          <source>Frames</source>
          <target state="translated">Frames</target>
        </trans-unit>
        <trans-unit id="1016cca46904e2542be02bd1ee40819628cf410e" translate="yes" xml:space="preserve">
          <source>Frames are listed from topmost (first) to bottommost (last). As a special case, if &lt;var&gt;display&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; and specifies a live frame, it returns the child frames of that frame in Z (stacking) order.</source>
          <target state="translated">Los fotogramas se enumeran desde el m&amp;aacute;s alto (primero) hasta el m&amp;aacute;s bajo (&amp;uacute;ltimo). Como caso especial, si la &lt;var&gt;display&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; y especifica un fotograma en vivo, devuelve los fotogramas secundarios de ese fotograma en orden Z (apilamiento).</target>
        </trans-unit>
        <trans-unit id="e869c0a12c0ebdcb83032af0ab6e9b29aa99d134" translate="yes" xml:space="preserve">
          <source>Frames have no read syntax. They print in hash notation, giving the frame&amp;rsquo;s title, plus its address in core (useful to identify the frame uniquely).</source>
          <target state="translated">Los marcos no tienen sintaxis de lectura. Se imprimen en notaci&amp;oacute;n hash, dando el t&amp;iacute;tulo del marco, m&amp;aacute;s su direcci&amp;oacute;n en el n&amp;uacute;cleo (&amp;uacute;til para identificar el marco de forma &amp;uacute;nica).</target>
        </trans-unit>
        <trans-unit id="e8c12e749eac8bfa8e0b8a6b5ce728ac241d622d" translate="yes" xml:space="preserve">
          <source>Frames last until explicitly deleted.</source>
          <target state="translated">Los marcos duran hasta que se eliminan explícitamente.</target>
        </trans-unit>
        <trans-unit id="aa0f21fa248066fad343c13774776ce1ec7db69f" translate="yes" xml:space="preserve">
          <source>Frames may be visible or invisible, or icons.</source>
          <target state="translated">Los marcos pueden ser visibles o invisibles,o iconos.</target>
        </trans-unit>
        <trans-unit id="0a7705c02c88885a265e66e6bb596b4a0e5c62bd" translate="yes" xml:space="preserve">
          <source>Fringe Bitmaps</source>
          <target state="translated">Fringe Bitmaps</target>
        </trans-unit>
        <trans-unit id="1aceb2d056e100bb87ff7213c426cc3f95936843" translate="yes" xml:space="preserve">
          <source>Fringe Cursors</source>
          <target state="translated">Cursores de la franja</target>
        </trans-unit>
        <trans-unit id="0416d0190cff216cfabfea78b591f9bda7805597" translate="yes" xml:space="preserve">
          <source>Fringe Indicators</source>
          <target state="translated">Indicadores de franjas</target>
        </trans-unit>
        <trans-unit id="5fd5c0c63bf89cdc3cf251efbc18952a6efcce45" translate="yes" xml:space="preserve">
          <source>Fringe Size and Position</source>
          <target state="translated">Tamaño y posición del flequillo</target>
        </trans-unit>
        <trans-unit id="60d9defe1a472be58d3446f380572d057a4539e8" translate="yes" xml:space="preserve">
          <source>Fringes</source>
          <target state="translated">Fringes</target>
        </trans-unit>
        <trans-unit id="a6c57f8a9bfb2be0237a1ce84804479a5b55ef2a" translate="yes" xml:space="preserve">
          <source>Frobnicate and bifurcate flanges</source>
          <target state="translated">Frobnicar y bifurcar las bridas</target>
        </trans-unit>
        <trans-unit id="7d7a9a3b073942c9c4a39433167a05cedca55794" translate="yes" xml:space="preserve">
          <source>Frobnicate buffer:</source>
          <target state="translated">Buffer Frobnicate:</target>
        </trans-unit>
        <trans-unit id="ae12ce3903efdf6296129a3285e0ae497ae13b29" translate="yes" xml:space="preserve">
          <source>From the past subsections we already know that &lt;code&gt;display-buffer&lt;/code&gt; must be supplied with a number of display actions (see &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;Choosing Window&lt;/a&gt;) in order to display a buffer. In a completely uncustomized Emacs, these actions are specified by &lt;code&gt;display-buffer-fallback-action&lt;/code&gt; in the following order of precedence: Reuse a window, pop up a new window on the same frame, use a window previously showing the buffer, use some window and pop up a new frame. (Note that the remaining actions named by &lt;code&gt;display-buffer-fallback-action&lt;/code&gt; are void in an uncustomized Emacs).</source>
          <target state="translated">De las subsecciones pasadas ya sabemos que &lt;code&gt;display-buffer&lt;/code&gt; debe ser provisto con una serie de acciones de visualizaci&amp;oacute;n (ver &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;Elecci&amp;oacute;n de ventana&lt;/a&gt; ) para mostrar un b&amp;uacute;fer. En un Emacs completamente no personalizado, estas acciones se especifican mediante &lt;code&gt;display-buffer-fallback-action&lt;/code&gt; en el siguiente orden de precedencia: reutilizar una ventana, abrir una nueva ventana en el mismo marco, usar una ventana que muestra previamente el b&amp;uacute;fer, usar alguna ventana y aparece un nuevo marco. (Tenga en cuenta que las acciones restantes nombradas por &lt;code&gt;display-buffer-fallback-action&lt;/code&gt; son nulas en un Emacs no personalizado).</target>
        </trans-unit>
        <trans-unit id="c4d63e4c56f1d2b74aaf3de1c3943ce348748d84" translate="yes" xml:space="preserve">
          <source>From:</source>
          <target state="translated">From:</target>
        </trans-unit>
        <trans-unit id="0ebe3e47a285e380363401a28eb7f3dddc4e9c33" translate="yes" xml:space="preserve">
          <source>Full-height and full-width frames are more similar to maximized frames in this regard. However, these typically display an external border which might be absent with maximized frames. Hence the heights of maximized and full-height frames and the widths of maximized and full-width frames often differ by a few pixels.</source>
          <target state="translated">Los marcos de altura y anchura completa son más similares a los marcos maximizados en este sentido.Sin embargo,estos típicamente muestran un borde externo que podría estar ausente con los marcos maximizados.Por lo tanto,la altura de los marcos maximizados y de altura completa y el ancho de los marcos maximizados y de ancho completo a menudo difieren en unos pocos píxeles.</target>
        </trans-unit>
        <trans-unit id="0227794e334ddbac1cacd5653be8fdf6837f6bbe" translate="yes" xml:space="preserve">
          <source>Full-screen on macOS hides both the tool-bar and the menu-bar, however both will be displayed if the mouse pointer is moved to the top of the screen.</source>
          <target state="translated">La pantalla completa de MacOS oculta tanto la barra de herramientas como la barra de menú,sin embargo ambas se mostrarán si se mueve el puntero del ratón a la parte superior de la pantalla.</target>
        </trans-unit>
        <trans-unit id="f1e410ad1472b42cb42cc98962428637290b6706" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">Function</target>
        </trans-unit>
        <trans-unit id="a3593edc88e17616adbb4037346eb999d6ceb735" translate="yes" xml:space="preserve">
          <source>Function Keys</source>
          <target state="translated">Teclas de función</target>
        </trans-unit>
        <trans-unit id="760cf6a6d209c21ac6c4fd1b396c72c47be7d5a6" translate="yes" xml:space="preserve">
          <source>Function Type</source>
          <target state="translated">Tipo de función</target>
        </trans-unit>
        <trans-unit id="edb917120f9cb05f9cf4013067ef2c91be5076f9" translate="yes" xml:space="preserve">
          <source>Function arguments, e.g., the &lt;var&gt;time&lt;/var&gt; argument to &lt;code&gt;current-time-string&lt;/code&gt;, accept a more-general &lt;em&gt;time value&lt;/em&gt; format, which can be a Lisp timestamp, &lt;code&gt;nil&lt;/code&gt; for the current time, a single floating-point number for seconds, or a list &lt;code&gt;(&lt;var&gt;high&lt;/var&gt; &lt;var&gt;low&lt;/var&gt; &lt;var&gt;micro&lt;/var&gt;)&lt;/code&gt; or &lt;code&gt;(&lt;var&gt;high&lt;/var&gt;
&lt;var&gt;low&lt;/var&gt;)&lt;/code&gt; that is a truncated list timestamp with missing elements taken to be zero.</source>
          <target state="translated">Argumentos de la funci&amp;oacute;n, por ejemplo, el &lt;var&gt;time&lt;/var&gt; argumento para &lt;code&gt;current-time-string&lt;/code&gt; , aceptan una m&amp;aacute;s general &lt;em&gt;valor de tiempo&lt;/em&gt; de formato, que puede ser una marca de tiempo Lisp, &lt;code&gt;nil&lt;/code&gt; para la hora actual, un n&amp;uacute;mero de coma flotante &amp;uacute;nico para los segundos, o una lista &lt;code&gt;(&lt;var&gt;high&lt;/var&gt; &lt;var&gt;low&lt;/var&gt; &lt;var&gt;micro&lt;/var&gt;)&lt;/code&gt; o &lt;code&gt;(&lt;var&gt;high&lt;/var&gt; &lt;var&gt;low&lt;/var&gt;)&lt;/code&gt; que es una marca de tiempo de lista truncada con elementos faltantes que se toman como cero.</target>
        </trans-unit>
        <trans-unit id="b933407dd477578aff5c3408d8b3e8fdaf706985" translate="yes" xml:space="preserve">
          <source>Function calls (see &lt;a href=&quot;functions#Functions&quot;&gt;Functions&lt;/a&gt;).</source>
          <target state="translated">Llamadas a funciones (ver &lt;a href=&quot;functions#Functions&quot;&gt;Funciones&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="1af483dbbd3691ff179fefeb552423fd10c4d63c" translate="yes" xml:space="preserve">
          <source>Function keys &amp;ndash; keys with names, not symbols.</source>
          <target state="translated">Teclas de funci&amp;oacute;n: teclas con nombres, no s&amp;iacute;mbolos.</target>
        </trans-unit>
        <trans-unit id="c28f90844ff41af6464401dafa16370f6a7ddc41" translate="yes" xml:space="preserve">
          <source>Function of one argument (the response to &lt;var&gt;capability-command&lt;/var&gt;), which returns either &lt;code&gt;nil&lt;/code&gt;, or the command to activate</source>
          <target state="translated">Funci&amp;oacute;n de un argumento (la respuesta al &lt;var&gt;capability-command&lt;/var&gt; ), que devuelve &lt;code&gt;nil&lt;/code&gt; o el comando para activar</target>
        </trans-unit>
        <trans-unit id="2599b4160212dbdafa79551462c78d2a10591f78" translate="yes" xml:space="preserve">
          <source>Function to call to quit the current buffer.</source>
          <target state="translated">Función para llamar a abandonar el buffer actual.</target>
        </trans-unit>
        <trans-unit id="2692d9c0a34514bfbf97445668a3984d5bef3f10" translate="yes" xml:space="preserve">
          <source>Function to call when an action is invoked. The notification &lt;var&gt;id&lt;/var&gt; and the &lt;var&gt;key&lt;/var&gt; of the action are passed as arguments to the function.</source>
          <target state="translated">Funci&amp;oacute;n para llamar cuando se invoca una acci&amp;oacute;n. El &lt;var&gt;id&lt;/var&gt; notificaci&amp;oacute;n y la &lt;var&gt;key&lt;/var&gt; de la acci&amp;oacute;n se pasan como argumentos a la funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="665a4b2f050f5cc458f3cc402b354ab096def6f3" translate="yes" xml:space="preserve">
          <source>Function to call when the notification has been closed by timeout or by the user. The function receive the notification &lt;var&gt;id&lt;/var&gt; and the closing &lt;var&gt;reason&lt;/var&gt; as arguments:</source>
          <target state="translated">Funci&amp;oacute;n para llamar cuando la notificaci&amp;oacute;n ha sido cerrada por timeout o por el usuario. La funci&amp;oacute;n recibe el &lt;var&gt;id&lt;/var&gt; notificaci&amp;oacute;n y el &lt;var&gt;reason&lt;/var&gt; cierre como argumentos:</target>
        </trans-unit>
        <trans-unit id="ab32b13d036c7de39a76ff893bf8bd1e2f72feca" translate="yes" xml:space="preserve">
          <source>Function to use for declaring that a region&amp;rsquo;s fontification is out of date. It takes two arguments, the beginning and end of the region. The default value of this variable is &lt;code&gt;font-lock-after-change-function&lt;/code&gt;.</source>
          <target state="translated">Funci&amp;oacute;n a utilizar para declarar que la fontificaci&amp;oacute;n de una regi&amp;oacute;n est&amp;aacute; desactualizada. Se necesitan dos argumentos, el principio y el final de la regi&amp;oacute;n. El valor predeterminado de esta variable es &lt;code&gt;font-lock-after-change-function&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="45c03975934a7989defa092bb01160d6a6d14561" translate="yes" xml:space="preserve">
          <source>Function to use for fontifying a region. It should take two arguments, the beginning and end of the region, and an optional third argument &lt;var&gt;verbose&lt;/var&gt;. If &lt;var&gt;verbose&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the function should print status messages. The default value is &lt;code&gt;font-lock-default-fontify-region&lt;/code&gt;.</source>
          <target state="translated">Funci&amp;oacute;n a utilizar para fontificar una regi&amp;oacute;n. Debe tomar dos argumentos, el principio y el final de la regi&amp;oacute;n, y un tercer argumento &lt;var&gt;verbose&lt;/var&gt; opcional . Si &lt;var&gt;verbose&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; , la funci&amp;oacute;n deber&amp;iacute;a imprimir mensajes de estado. El valor predeterminado es &lt;code&gt;font-lock-default-fontify-region&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8989f04b34b16d9a2aa0d821237abfc63224442a" translate="yes" xml:space="preserve">
          <source>Function to use for fontifying the buffer. The default value is &lt;code&gt;font-lock-default-fontify-buffer&lt;/code&gt;.</source>
          <target state="translated">Funci&amp;oacute;n a utilizar para fontificar el b&amp;uacute;fer. El valor predeterminado es &lt;code&gt;font-lock-default-fontify-buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f0d73e2fdb1863b97c8fd3e0f73627aa524fcd58" translate="yes" xml:space="preserve">
          <source>Function to use for making sure a region of the current buffer has been fontified. It is called with two arguments, the beginning and end of the region. The default value of this variable is a function that calls &lt;code&gt;font-lock-default-fontify-buffer&lt;/code&gt; if the buffer is not fontified; the effect is to make sure the entire accessible portion of the buffer is fontified.</source>
          <target state="translated">Funci&amp;oacute;n que se utilizar&amp;aacute; para asegurarse de que se haya fuenteificado una regi&amp;oacute;n del b&amp;uacute;fer actual. Se llama con dos argumentos, el principio y el final de la regi&amp;oacute;n. El valor predeterminado de esta variable es una funci&amp;oacute;n que llama a &lt;code&gt;font-lock-default-fontify-buffer&lt;/code&gt; si el b&amp;uacute;fer no est&amp;aacute; fontificado; el efecto es asegurarse de que toda la parte accesible del b&amp;uacute;fer est&amp;eacute; fontificada.</target>
        </trans-unit>
        <trans-unit id="0ef6fffab83d22c64fb8b7e968c6d90ca33655e7" translate="yes" xml:space="preserve">
          <source>Function to use for unfontifying a region. It should take two arguments, the beginning and end of the region. The default value is &lt;code&gt;font-lock-default-unfontify-region&lt;/code&gt;.</source>
          <target state="translated">Funci&amp;oacute;n que se utilizar&amp;aacute; para eliminar la fuente de una regi&amp;oacute;n. Deber&amp;iacute;a tomar dos argumentos, el principio y el final de la regi&amp;oacute;n. El valor predeterminado es &lt;code&gt;font-lock-default-unfontify-region&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="13e180d67a77c305f9559009ded2e991db88b38d" translate="yes" xml:space="preserve">
          <source>Function to use for unfontifying the buffer. This is used when turning off Font Lock mode. The default value is &lt;code&gt;font-lock-default-unfontify-buffer&lt;/code&gt;.</source>
          <target state="translated">Funci&amp;oacute;n que se utilizar&amp;aacute; para eliminar la fuente del b&amp;uacute;fer. Se utiliza al desactivar el modo de bloqueo de fuentes. El valor predeterminado es &lt;code&gt;font-lock-default-unfontify-buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29ac7b1b85bc7c68994dfadb32cfe581e050f9d7" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;bool&lt;/em&gt;&lt;strong&gt;copy_string_contents&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value &lt;var&gt;arg&lt;/var&gt;, char *&lt;var&gt;buf&lt;/var&gt;, ptrdiff_t *&lt;var&gt;len&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;bool &lt;/em&gt;&lt;strong&gt;copy_string_contents &lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value &lt;var&gt;arg&lt;/var&gt; , char * &lt;var&gt;buf&lt;/var&gt; , ptrdiff_t * &lt;var&gt;len&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="43209e42da44d5222b0c0bfa936fe69a5420310a" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;bool&lt;/em&gt;&lt;strong&gt;eq&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value &lt;var&gt;val1&lt;/var&gt;, emacs_value &lt;var&gt;val2&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;bool &lt;/em&gt;&lt;strong&gt;eq &lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value &lt;var&gt;val1&lt;/var&gt; , emacs_value &lt;var&gt;val2&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0a083631728d88f085771468c6029fc24c1f37a8" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;bool&lt;/em&gt;&lt;strong&gt;extract_big_integer&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value &lt;var&gt;arg&lt;/var&gt;, int *&lt;var&gt;sign&lt;/var&gt;, ptrdiff_t *&lt;var&gt;count&lt;/var&gt;, emacs_limb_t *&lt;var&gt;magnitude&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;bool &lt;/em&gt;&lt;strong&gt;extract_big_integer &lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value &lt;var&gt;arg&lt;/var&gt; , int * &lt;var&gt;sign&lt;/var&gt; , ptrdiff_t * &lt;var&gt;count&lt;/var&gt; , emacs_limb_t * &lt;var&gt;magnitude&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f4ddf8e81ae981c10ee9c4e6dee208d399cff2e9" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;bool&lt;/em&gt;&lt;strong&gt;is_not_nil&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value &lt;var&gt;val&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;bool &lt;/em&gt;&lt;strong&gt;is_not_nil &lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value &lt;var&gt;val&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="105efe21e95eddae77100b88bc0691a1b98616da" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;bool&lt;/em&gt;&lt;strong&gt;should_quit&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;bool &lt;/em&gt;&lt;strong&gt;should_quit &lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="46496808f25e805ece88233ae0979c6b0e67bbb9" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;double&lt;/em&gt;&lt;strong&gt;extract_float&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value &lt;var&gt;arg&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;double &lt;/em&gt;&lt;strong&gt;extract_float &lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value &lt;var&gt;arg&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="806aa18554b1b3b36361414dc4393f02345f2b77" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;emacs_finalizer&lt;/em&gt;&lt;strong&gt;get_user_finalizer&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value val)&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;emacs_finalizer &lt;/em&gt;&lt;strong&gt;get_user_finalizer &lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value val)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f92f9adbb019f4be1ff6bccd71fa37a1e9f0752d" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;emacs_value&lt;/em&gt;&lt;strong&gt;funcall&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value &lt;var&gt;func&lt;/var&gt;, ptrdiff_t &lt;var&gt;nargs&lt;/var&gt;, emacs_value *&lt;var&gt;args&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;emacs_value &lt;/em&gt;&lt;strong&gt;funcall &lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value &lt;var&gt;func&lt;/var&gt; , ptrdiff_t &lt;var&gt;nargs&lt;/var&gt; , emacs_value * &lt;var&gt;args&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5fe746a0b8a5af7907e36602dcb7cce31e68cffe" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;emacs_value&lt;/em&gt;&lt;strong&gt;intern&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, const char *name)&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;emacs_value &lt;/em&gt;&lt;strong&gt;intern &lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , const char * name)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="69366add43b68eb7557dd679115032d775dfbad4" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;emacs_value&lt;/em&gt;&lt;strong&gt;make_big_integer&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, int sign, ptrdiff_t count, const emacs_limb_t *magnitude)&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;emacs_value &lt;/em&gt;&lt;strong&gt;make_big_integer &lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , int sign, ptrdiff_t count, const emacs_limb_t * magnitude)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="86c526521a5e403b8f09c2f18f99a105ccb08944" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;emacs_value&lt;/em&gt;&lt;strong&gt;make_float&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, double &lt;var&gt;d&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;emacs_value &lt;/em&gt;&lt;strong&gt;make_float &lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , double &lt;var&gt;d&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bc9949f3e2b70023f22e3482180edb77f785724c" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;emacs_value&lt;/em&gt;&lt;strong&gt;make_function&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, ptrdiff_t &lt;var&gt;min_arity&lt;/var&gt;, ptrdiff_t &lt;var&gt;max_arity&lt;/var&gt;, subr &lt;var&gt;func&lt;/var&gt;, const char *&lt;var&gt;docstring&lt;/var&gt;, void *&lt;var&gt;data&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;emacs_value &lt;/em&gt;&lt;strong&gt;make_function &lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , ptrdiff_t &lt;var&gt;min_arity&lt;/var&gt; , ptrdiff_t &lt;var&gt;max_arity&lt;/var&gt; , subr &lt;var&gt;func&lt;/var&gt; , const char * &lt;var&gt;docstring&lt;/var&gt; , void * &lt;var&gt;data&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8f238a989184ce744dc0dae5aa6c965a18a3a354" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;emacs_value&lt;/em&gt;&lt;strong&gt;make_global_ref&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value &lt;var&gt;value&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;emacs_value &lt;/em&gt;&lt;strong&gt;make_global_ref &lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value &lt;var&gt;value&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d34b56badd48e7a7cf5498a40e61664a4221c33b" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;emacs_value&lt;/em&gt;&lt;strong&gt;make_integer&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, intmax_t &lt;var&gt;n&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;emacs_value &lt;/em&gt;&lt;strong&gt;make_integer &lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , intmax_t &lt;var&gt;n&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="efccd097e1691267c5cfc08bc051b9cf98d81271" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;emacs_value&lt;/em&gt;&lt;strong&gt;make_string&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, const char *&lt;var&gt;str&lt;/var&gt;, ptrdiff_t &lt;var&gt;strlen&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;emacs_value &lt;/em&gt;&lt;strong&gt;make_string &lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , const char * &lt;var&gt;str&lt;/var&gt; , ptrdiff_t &lt;var&gt;strlen&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bf62b723d8f9b3fb90335a5aa55f3134e61cc766" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;emacs_value&lt;/em&gt;&lt;strong&gt;make_time&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, struct timespec &lt;var&gt;time&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;emacs_value &lt;/em&gt;&lt;strong&gt;make_time &lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , struct timespec &lt;var&gt;time&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="31a94d5c82e3002103ed7286a113a6d5cd089bb8" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;emacs_value&lt;/em&gt;&lt;strong&gt;make_user_ptr&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_finalizer &lt;var&gt;fin&lt;/var&gt;, void *&lt;var&gt;ptr&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;emacs_value &lt;/em&gt;&lt;strong&gt;make_user_ptr &lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_finalizer &lt;var&gt;fin&lt;/var&gt; , void * &lt;var&gt;ptr&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1652df41489e8d88823b9838de59907c2468860b" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;emacs_value&lt;/em&gt;&lt;strong&gt;module_func&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, ptrdiff_t &lt;var&gt;nargs&lt;/var&gt;, emacs_value *&lt;var&gt;args&lt;/var&gt;, void *&lt;var&gt;data&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;emacs_value &lt;/em&gt;&lt;strong&gt;module_func &lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , ptrdiff_t &lt;var&gt;nargs&lt;/var&gt; , emacs_value * &lt;var&gt;args&lt;/var&gt; , void * &lt;var&gt;data&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ce19e0806cf91f917cda3b2a89173ee7dc9a6b19" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;emacs_value&lt;/em&gt;&lt;strong&gt;type_of&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value &lt;code&gt;object&lt;/code&gt;)&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;emacs_value &lt;/em&gt;&lt;strong&gt;type_of &lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , &lt;code&gt;object&lt;/code&gt; emacs_value )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3280286f69bb3ae9c426a405ae63213dd06d0a85" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;emacs_value&lt;/em&gt;&lt;strong&gt;vec_get&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value &lt;var&gt;vector&lt;/var&gt;, ptrdiff_t &lt;var&gt;index&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;emacs_value &lt;/em&gt;&lt;strong&gt;vec_get &lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value &lt;var&gt;vector&lt;/var&gt; , ptrdiff_t &lt;var&gt;index&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c2496c321ce0a12883501e61880954b51415ef01" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;enum&lt;/em&gt;&lt;strong&gt;emacs_funcall_exit&lt;/strong&gt;&lt;em&gt;non_local_exit_check (emacs_env *&lt;var&gt;env&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;enum &lt;/em&gt;&lt;strong&gt;emacs_funcall_exit &lt;/strong&gt;&lt;em&gt;non_local_exit_check (emacs_env * &lt;var&gt;env&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="250199de739b457ef5e93610db2ca9333416587c" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;enum&lt;/em&gt;&lt;strong&gt;emacs_funcall_exit&lt;/strong&gt;&lt;em&gt;non_local_exit_get (emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value *&lt;var&gt;symbol&lt;/var&gt;, emacs_value *&lt;var&gt;data&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;enum &lt;/em&gt;&lt;strong&gt;emacs_funcall_exit &lt;/strong&gt;&lt;em&gt;non_local_exit_get (emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value * &lt;var&gt;symbol&lt;/var&gt; , emacs_value * &lt;var&gt;data&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5f3c781b29789dfa749cbb1d1693af71aa8277c2" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;enum&lt;/em&gt;&lt;strong&gt;emacs_process_input_result&lt;/strong&gt;&lt;em&gt;process_input (emacs_env *&lt;var&gt;env&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;enum &lt;/em&gt;&lt;strong&gt;emacs_process_input_result &lt;/strong&gt;&lt;em&gt;process_input (emacs_env * &lt;var&gt;env&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="15caa6ab5c37f9ed8c30fc5192ab79385790c989" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;int&lt;/em&gt;&lt;strong&gt;emacs_module_init&lt;/strong&gt;&lt;em&gt;(struct emacs_runtime *&lt;var&gt;runtime&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;int &lt;/em&gt;&lt;strong&gt;emacs_module_init &lt;/strong&gt;&lt;em&gt;(struct emacs_runtime * &lt;var&gt;runtime&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ea173b2b82b3bd673c8e85458c9503487035efe6" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;intmax_t&lt;/em&gt;&lt;strong&gt;extract_integer&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value &lt;var&gt;arg&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;intmax_t &lt;/em&gt;&lt;strong&gt;extract_integer &lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value &lt;var&gt;arg&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4a5a11128abdaf3c29ce5252b15b3e9c9a7f9fbb" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;ptrdiff_t&lt;/em&gt;&lt;strong&gt;vec_size&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value &lt;var&gt;vector&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;ptrdiff_t &lt;/em&gt;&lt;strong&gt;vec_size &lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value &lt;var&gt;vector&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5795593173edce0d076b2301ab601e1a95b34ab3" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;struct&lt;/em&gt;&lt;strong&gt;timespec&lt;/strong&gt;&lt;em&gt;extract_time (emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value &lt;var&gt;time&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;struct &lt;/em&gt;&lt;strong&gt;timespec &lt;/strong&gt;&lt;em&gt;extract_time (emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value &lt;var&gt;time&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a04e17cbd62c2f9d6a93b6044fd6de96f73193a6" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;void&lt;/em&gt;&lt;strong&gt;*get_user_ptr&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value val)&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;void &lt;/em&gt;&lt;strong&gt;* get_user_ptr &lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value val)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5cb40a95e6fdb40bbfdcb3f14ef923602f71cad3" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;void&lt;/em&gt;&lt;strong&gt;free_global_ref&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value &lt;var&gt;global_value&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;void &lt;/em&gt;&lt;strong&gt;free_global_ref &lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value &lt;var&gt;global_value&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4460a463b7a8fa974d526e5f4101013d6894d26f" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;void&lt;/em&gt;&lt;strong&gt;non_local_exit_clear&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;void &lt;/em&gt;&lt;strong&gt;non_local_exit_clear &lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="123e5abbfa3ddcfb3452326c55c6fea0835adde4" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;void&lt;/em&gt;&lt;strong&gt;non_local_exit_signal&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value &lt;var&gt;error&lt;/var&gt;, emacs_value &lt;var&gt;data&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;void &lt;/em&gt;&lt;strong&gt;non_local_exit_signal &lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value &lt;var&gt;error&lt;/var&gt; , emacs_value &lt;var&gt;data&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2998af0b6fdbee388b2efab4a316d0972913ffa0" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;void&lt;/em&gt;&lt;strong&gt;non_local_exit_throw&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value &lt;var&gt;tag&lt;/var&gt;, emacs_value &lt;var&gt;value&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;void &lt;/em&gt;&lt;strong&gt;non_local_exit_throw &lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , &lt;var&gt;tag&lt;/var&gt; emacs_value, &lt;var&gt;value&lt;/var&gt; emacs_value )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0a6378174934b410fac15b7e06748ff0c46e5b8a" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;void&lt;/em&gt;&lt;strong&gt;set_user_finalizer&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value &lt;var&gt;val&lt;/var&gt;, emacs_finalizer &lt;var&gt;fin&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;void &lt;/em&gt;&lt;strong&gt;set_user_finalizer &lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value &lt;var&gt;val&lt;/var&gt; , emacs_finalizer &lt;var&gt;fin&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="848f2eb81bc2abc617b2bdd0e787737a3c29494b" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;void&lt;/em&gt;&lt;strong&gt;set_user_ptr&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value &lt;var&gt;value&lt;/var&gt;, void *&lt;var&gt;ptr&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;void &lt;/em&gt;&lt;strong&gt;set_user_ptr &lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value &lt;var&gt;value&lt;/var&gt; , void * &lt;var&gt;ptr&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d5f89a3e79a0b41ba6e1b673b9e5def02dde99dc" translate="yes" xml:space="preserve">
          <source>Function: &lt;em&gt;void&lt;/em&gt;&lt;strong&gt;vec_set&lt;/strong&gt;&lt;em&gt;(emacs_env *&lt;var&gt;env&lt;/var&gt;, emacs_value &lt;var&gt;vector&lt;/var&gt;, ptrdiff_t &lt;var&gt;index&lt;/var&gt;, emacs_value &lt;var&gt;value&lt;/var&gt;)&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;void &lt;/em&gt;&lt;strong&gt;vec_set &lt;/strong&gt;&lt;em&gt;(emacs_env * &lt;var&gt;env&lt;/var&gt; , emacs_value &lt;var&gt;vector&lt;/var&gt; , ptrdiff_t &lt;var&gt;index&lt;/var&gt; , emacs_value &lt;var&gt;value&lt;/var&gt; )&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c1d791c892cb854a1ab849fac40b8468ef31039b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;%&lt;/strong&gt;&lt;em&gt;dividend divisor&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;divisor &lt;/em&gt;&lt;strong&gt;% &lt;/strong&gt;&lt;em&gt;dividendo&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c5b18f8fd8b0717a513da835a9bab575062081b0" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;&amp;gt;&lt;/strong&gt;&lt;em&gt;number-or-marker &amp;amp;rest number-or-markers&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;&amp;gt; &lt;/strong&gt;&lt;em&gt;n&amp;uacute;mero-o-marcador y resto-n&amp;uacute;mero-o-marcadores&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f54f4af95eb930cb5a4378a94ca2e92e5c0c6ce2" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;&amp;gt;=&lt;/strong&gt;&lt;em&gt;number-or-marker &amp;amp;rest number-or-markers&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;&amp;gt; = &lt;/strong&gt;&lt;em&gt;n&amp;uacute;mero-o-marcador y resto-n&amp;uacute;mero-o-marcadores&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cb3fb7d841b16b297ea22eae4c2b7494c003c3ad" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;&amp;lt;&lt;/strong&gt;&lt;em&gt;number-or-marker &amp;amp;rest number-or-markers&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;&amp;lt; &lt;/strong&gt;&lt;em&gt;n&amp;uacute;mero-o-marcador y resto-n&amp;uacute;mero-o-marcadores&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3dd193607cabcb8340d5c70c2fb735a092f7a886" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;&amp;lt;=&lt;/strong&gt;&lt;em&gt;number-or-marker &amp;amp;rest number-or-markers&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;&amp;lt;= &lt;/strong&gt;&lt;em&gt;n&amp;uacute;mero-o-marcador y resto-n&amp;uacute;mero-o-marcadores&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="12612370492685d7458881bae8ab851336e5f836" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;*&lt;/strong&gt;&lt;em&gt;&amp;amp;rest numbers-or-markers&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;* &lt;/strong&gt;&lt;em&gt;y n&amp;uacute;meros de descanso o marcadores&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9f84436671ab7cbd9448b03e2fe260eb3839c121" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;+&lt;/strong&gt;&lt;em&gt;&amp;amp;rest numbers-or-markers&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;+ &lt;/strong&gt;&lt;em&gt;y resto de n&amp;uacute;meros o marcadores&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b4622f3cebc989e3592888396fca10a463f08e83" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;-&lt;/strong&gt;&lt;em&gt;&amp;amp;optional number-or-marker &amp;amp;rest more-numbers-or-markers&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;- &lt;/strong&gt;&lt;em&gt;y n&amp;uacute;mero-o-marcador opcional y resto m&amp;aacute;s-n&amp;uacute;meros-o-marcadores&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6eb4aa1563e7358026ec57258beb186f2b9b212b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;/&lt;/strong&gt;&lt;em&gt;number &amp;amp;rest divisors&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;/ &lt;/strong&gt;&lt;em&gt;divisores de n&amp;uacute;mero y descanso&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="076c46093eb01acd7ee61ea40851f41483a1e2cc" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;/=&lt;/strong&gt;&lt;em&gt;number-or-marker1 number-or-marker2&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;/ = &lt;/strong&gt;&lt;em&gt;n&amp;uacute;mero-o-marcador1 n&amp;uacute;mero-o-marcador2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9fda0e26f46e9f40e25b97f61dfc989122b0b0e9" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;1+&lt;/strong&gt;&lt;em&gt;number-or-marker&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;1+ &lt;/strong&gt;&lt;em&gt;n&amp;uacute;mero o marcador&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9ca4668dd4a486043993458ff7027542eca00f1b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;1-&lt;/strong&gt;&lt;em&gt;number-or-marker&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;1- &lt;/strong&gt;&lt;em&gt;n&amp;uacute;mero o marcador&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="673f310a5e054265dee2baa2faefdc1daea9d19d" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;=&lt;/strong&gt;&lt;em&gt;number-or-marker &amp;amp;rest number-or-markers&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;= &lt;/strong&gt;&lt;em&gt;n&amp;uacute;mero-o-marcador y resto-n&amp;uacute;mero-o-marcadores&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="15660b1074ccfbafe711667eb02f31ce70c45534" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;Snarf-documentation&lt;/strong&gt;&lt;em&gt;filename&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;nombre de archivo de &lt;/em&gt;&lt;strong&gt;documentaci&amp;oacute;n Snarf&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="77a46a42adbb10113fb1b6acea2a498bc9117402" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;abbrev-expansion&lt;/strong&gt;&lt;em&gt;abbrev &amp;amp;optional table&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;abrev-expansi&amp;oacute;n &lt;/strong&gt;&lt;em&gt;abrev y tabla opcional&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ca0e02a5a5ae7bb3eeae0906eed53ed1bbc088a9" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;abbrev-get&lt;/strong&gt;&lt;em&gt;abbrev prop&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;abbrev-get &lt;/strong&gt;&lt;em&gt;abbrev prop&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fbe9898616465dfd7eee5e3befdff9b1b7fc4f78" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;abbrev-insert&lt;/strong&gt;&lt;em&gt;abbrev &amp;amp;optional name start end&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;abbrev-insert &lt;/strong&gt;&lt;em&gt;abbrev &amp;amp; opcional name start end&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="05dd83f623c276f330db0a2b68227f250e2c8fc1" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;abbrev-put&lt;/strong&gt;&lt;em&gt;abbrev prop val&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;abbrev-put &lt;/strong&gt;&lt;em&gt;abbrev prop val&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="41adef79f28e09e25f992373945fe1334afed74c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;abbrev-symbol&lt;/strong&gt;&lt;em&gt;abbrev &amp;amp;optional table&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;abrev-s&amp;iacute;mbolo &lt;/strong&gt;&lt;em&gt;abrev y tabla opcional&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="add9f8e7576e279a97bce948454dd529fa92734d" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;abbrev-table-get&lt;/strong&gt;&lt;em&gt;table prop&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;abbrev-table-get &lt;/strong&gt;&lt;em&gt;table prop&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="274d77f3e845519adec06a38928af2a5861c1467" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;abbrev-table-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;abbrev-table-p &lt;/strong&gt;&lt;em&gt;objeto&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="509039c0b8ae1626f5c308473f97d52640dcffea" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;abbrev-table-put&lt;/strong&gt;&lt;em&gt;table prop val&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;abbrev-table-put &lt;/strong&gt;&lt;em&gt;table prop val&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2e88c141f0cee16cb883616ac8c23e605a46c157" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;abbreviate-file-name&lt;/strong&gt;&lt;em&gt;filename&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;abreviate-file-name &lt;/strong&gt;&lt;em&gt;filename&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="53988ea2de9bf1e2000f9f490c4e287009eb9563" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;abs&lt;/strong&gt;&lt;em&gt;number&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;n&amp;uacute;mero &lt;/em&gt;&lt;strong&gt;abs&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4ef7e8af7f2674eed6c9add53bec94c999e16cc3" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;accept-change-group&lt;/strong&gt;&lt;em&gt;handle&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;aceptar-cambiar-grupo &lt;/strong&gt;&lt;em&gt;manejar&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b61fe4be9450b4478d86aa7f2c8d6666ca4c335a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;accept-process-output&lt;/strong&gt;&lt;em&gt;&amp;amp;optional process seconds millisec just-this-one&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;aceptar-proceso-salida &lt;/strong&gt;&lt;em&gt;y proceso opcional segundos milisegundos solo-este-uno&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="77bfba268562aeedbcc567d0156de532e93cc598" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;access-file&lt;/strong&gt;&lt;em&gt;filename string&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;cadena de nombre de &lt;/em&gt;&lt;strong&gt;archivo de acceso a archivo&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="94a7443266e7f0cd0769b54d0a023e51908e48c5" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;accessible-keymaps&lt;/strong&gt;&lt;em&gt;keymap &amp;amp;optional prefix&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;mapa de teclas de mapas de teclas accesibles &lt;/strong&gt;&lt;em&gt;y prefijo opcional&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="99d1773492edc65a1e4d4101e9af52d0e4ebcac9" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;acos&lt;/strong&gt;&lt;em&gt;arg&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;acos &lt;/strong&gt;&lt;em&gt;arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="359c3af0b85dce98d26212a265804a71f3b327ed" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;activate-change-group&lt;/strong&gt;&lt;em&gt;handle&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;activar-cambiar-grupo &lt;/strong&gt;&lt;em&gt;manejar&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d8e06cd3ec808ed952ab178271d7443dcf4a538a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;active-minibuffer-window&lt;/strong&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;active-minibuffer-window&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="953f6635af7d1642eb26aa42cdf537faa7b40e50" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;add-face-text-property&lt;/strong&gt;&lt;em&gt;start end face &amp;amp;optional appendp object&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;add-face-text-property &lt;/strong&gt;&lt;em&gt;start end face y objeto appendp opcional&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dd381e5c98bd7eb6505076a8d913a11a30730429" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;add-hook&lt;/strong&gt;&lt;em&gt;hook function &amp;amp;optional depth local&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: funci&amp;oacute;n &lt;strong&gt;de gancho add-hook &lt;/strong&gt;&lt;em&gt;y profundidad local opcional&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b68f9a3c00473be99f1930ec81233e79a5b81661" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;add-text-properties&lt;/strong&gt;&lt;em&gt;start end props &amp;amp;optional object&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;add-text-properties &lt;/strong&gt;&lt;em&gt;start end props &amp;amp; optional object&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e86f0e066f0c0211d38fc23f7fa3b65e0f45b80a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;add-to-history&lt;/strong&gt;&lt;em&gt;history-var newelt &amp;amp;optional maxelt keep-all&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;add-to-history &lt;/strong&gt;&lt;em&gt;history-var newelt &amp;amp; opcional maxelt keep-all&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d4565f852f8c5f0f3662f27084d667f63990815a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;add-to-invisibility-spec&lt;/strong&gt;&lt;em&gt;element&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;complemento a la invisibilidad de las especificaciones &lt;/strong&gt;&lt;em&gt;elemento&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b0136fcb21e768536bf154e06b83fbc26ea0c436" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;add-to-list&lt;/strong&gt;&lt;em&gt;symbol element &amp;amp;optional append compare-fn&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;elemento de s&amp;iacute;mbolo de &lt;/em&gt;&lt;strong&gt;agregar a la lista &lt;/strong&gt;&lt;em&gt;y agregar opcionalmente comparar-fn&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2e68e013c38485c87a82c737f9a93fb3766d2e4f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;add-to-ordered-list&lt;/strong&gt;&lt;em&gt;symbol element &amp;amp;optional order&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;elemento de s&amp;iacute;mbolo de &lt;/em&gt;&lt;strong&gt;agregar a la lista ordenada &lt;/strong&gt;&lt;em&gt;y orden opcional&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f2f73c558244dab072ebd4a857a53e530a675420" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;add-variable-watcher&lt;/strong&gt;&lt;em&gt;symbol watch-function&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;add-variable-watcher &lt;/strong&gt;&lt;em&gt;symbol watch-function&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2e737df9537a502421509e0b982d4e8a69e9ae25" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;adjust-window-trailing-edge&lt;/strong&gt;&lt;em&gt;window delta &amp;amp;optional horizontal pixelwise&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;ajustar el &lt;/strong&gt;&lt;em&gt;delta de la ventana del &lt;/em&gt;&lt;strong&gt;borde posterior de la &lt;/strong&gt;&lt;em&gt;ventana y el p&amp;iacute;xel horizontal opcional&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0a03a2d3067c2c487ad56571c539c8c18dd6aa93" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;advice-add&lt;/strong&gt;&lt;em&gt;symbol where function &amp;amp;optional props&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;s&amp;iacute;mbolo de &lt;/em&gt;&lt;strong&gt;consejo-agregar &lt;/strong&gt;&lt;em&gt;donde la funci&amp;oacute;n y los accesorios opcionales&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="34a24f2b4e69600effe8558ce547e4c14aae67f5" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;advice-eval-interactive-spec&lt;/strong&gt;&lt;em&gt;spec&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;advice-eval-interactive-spec &lt;/strong&gt;&lt;em&gt;spec&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0977ae87353d9e8482219dadc924900c613027d7" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;advice-function-mapc&lt;/strong&gt;&lt;em&gt;f function-def&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;advice-function-mapc &lt;/strong&gt;&lt;em&gt;f function-def&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7afbb1c06dc6b32625b8a429e078205b952c57c4" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;advice-function-member-p&lt;/strong&gt;&lt;em&gt;advice function-def&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;asesoramiento-funci&amp;oacute;n-miembro-p &lt;/strong&gt;&lt;em&gt;asesoramiento funci&amp;oacute;n-def&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c174211b70406fcf10d6edf2032714767f01569c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;advice-mapc&lt;/strong&gt;&lt;em&gt;function symbol&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;s&amp;iacute;mbolo de funci&amp;oacute;n de &lt;/em&gt;&lt;strong&gt;asesoramiento-mapc&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3a160119c6132fd2ae34cb3730cd450afdd4eb3a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;advice-member-p&lt;/strong&gt;&lt;em&gt;function symbol&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;asesoramiento-miembro-p &lt;/strong&gt;&lt;em&gt;s&amp;iacute;mbolo de funci&amp;oacute;n&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9d843324b80794950f554af4867420fd0b491f22" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;advice-remove&lt;/strong&gt;&lt;em&gt;symbol function&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;funci&amp;oacute;n de s&amp;iacute;mbolo de &lt;/em&gt;&lt;strong&gt;aviso-eliminaci&amp;oacute;n&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3d1c39005211e777d3c66ade79300389ba19534a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;after-find-file&lt;/strong&gt;&lt;em&gt;&amp;amp;optional error warn noauto after-find-file-from-revert-buffer nomodes&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;after-find-file &lt;/strong&gt;&lt;em&gt;y error opcional advierten noauto after-find-file-from-revert-buffer nomodes&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6e850b484835785042b4a33b36759b6bb9948943" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;alist-get&lt;/strong&gt;&lt;em&gt;key alist &amp;amp;optional default remove testfn&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;alist-get &lt;/strong&gt;&lt;em&gt;key alist y eliminaci&amp;oacute;n predeterminada opcional testfn&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0806197d3cc28021277a6f7a9b0d18bb6915cba4" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;all-completions&lt;/strong&gt;&lt;em&gt;string collection &amp;amp;optional predicate&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;colecci&amp;oacute;n de cadenas de &lt;/em&gt;&lt;strong&gt;todas las terminaciones &lt;/strong&gt;&lt;em&gt;y predicado opcional&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a7c8c2289593bd666923f67da5649b016add8893" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;all-threads&lt;/strong&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;todos los hilos&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="62b811abbd0e6fd55453507578a60daf3efdd5e2" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;append&lt;/strong&gt;&lt;em&gt;&amp;amp;rest sequences&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;agregar &lt;/strong&gt;&lt;em&gt;y descansar secuencias&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="685848e651a9b657fe399dc2ee123889410b06e3" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;apply-partially&lt;/strong&gt;&lt;em&gt;func &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;aplicar-parcialmente &lt;/strong&gt;&lt;em&gt;func &amp;amp; rest args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8cb3e9dea1c22f6f264810319e6ad738a5d69971" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;apply&lt;/strong&gt;&lt;em&gt;function &amp;amp;rest arguments&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;aplicar &lt;/strong&gt;&lt;em&gt;argumentos de funci&amp;oacute;n y descanso&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ae394c13f973ed82b3e262c675db73972a06adde" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;aref&lt;/strong&gt;&lt;em&gt;arr index&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;aref &lt;/strong&gt;&lt;em&gt;arr index&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9e64eea934ac20aa0d2ccf8e7fed61fc45f32ae3" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;arrayp&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;objeto &lt;/em&gt;&lt;strong&gt;arrayp&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d7f7340f1861f47fbcf07c149610ed64d854cccc" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;aset&lt;/strong&gt;&lt;em&gt;array index object&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;aset &lt;/strong&gt;&lt;em&gt;objeto &amp;iacute;ndice de matriz&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2a07af217548ae5263016b27748ad1c755d9e42a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;ash&lt;/strong&gt;&lt;em&gt;integer1 count&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;ash &lt;/strong&gt;&lt;em&gt;integer1 count&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f5cfc164b82bdd3b33d533b5a21347b3d74cd612" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;asin&lt;/strong&gt;&lt;em&gt;arg&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;asin &lt;/strong&gt;&lt;em&gt;arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d2d6f8925f184501ac2514c7caeabe2d2447422a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;ask-user-about-lock&lt;/strong&gt;&lt;em&gt;file other-user&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;ask-user-about-lock &lt;/strong&gt;&lt;em&gt;file other-user&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2de941f15f7b2e0bba2d2f2477b93871730dfe28" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;ask-user-about-supersession-threat&lt;/strong&gt;&lt;em&gt;filename&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;ask-user-about-supersession-amenaza &lt;/strong&gt;&lt;em&gt;nombre de archivo&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3e3dddf98e0c8ce1a2c7a522d4602f077c4817ab" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;assoc-default&lt;/strong&gt;&lt;em&gt;key alist &amp;amp;optional test default&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;lista de teclas &lt;/em&gt;&lt;strong&gt;assoc-default &lt;/strong&gt;&lt;em&gt;y prueba opcional predeterminada&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cd41237ac600d80d3785527bbf6f7165f06fc135" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;assoc-delete-all&lt;/strong&gt;&lt;em&gt;key alist &amp;amp;optional test&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;lista de teclas assoc-delete-all &lt;/strong&gt;&lt;em&gt;y prueba opcional&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5eea2cb7c500f44d8ed58b7535d3d2c849fcb72d" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;assoc-string&lt;/strong&gt;&lt;em&gt;key alist &amp;amp;optional case-fold&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;lista de teclas de &lt;/em&gt;&lt;strong&gt;cadena &lt;/strong&gt;&lt;em&gt;asociada y pliegue de caja opcional&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e444cc49745e6039bac4ea7bb00b8760dbc7de85" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;assoc&lt;/strong&gt;&lt;em&gt;key alist &amp;amp;optional testfn&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;lista de claves &lt;/em&gt;&lt;strong&gt;asociadas &lt;/strong&gt;&lt;em&gt;y testfn opcional&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="239ea4015b314d56fb63ccbab0f4fc2de49a168f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;assq-delete-all&lt;/strong&gt;&lt;em&gt;key alist&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;assq-delete-all &lt;/strong&gt;&lt;em&gt;key alist&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b3e2ab89d97305342a57961b5d864853ced83e28" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;assq&lt;/strong&gt;&lt;em&gt;key alist&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;assq &lt;/strong&gt;&lt;em&gt;key &lt;/em&gt;&lt;strong&gt;alist&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b2aea059a0d7f8476141fd937bf1aaf5702451cc" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;atan&lt;/strong&gt;&lt;em&gt;y &amp;amp;optional x&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;atan &lt;/strong&gt;&lt;em&gt;y y opcional x&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e3c17221dde759a5e3575970a605d2a3e2ecb322" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;atom&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;objeto &lt;/em&gt;&lt;strong&gt;atom&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c4a5318e6dd8e86460d3287e020d65f08d56761f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;auto-save-file-name-p&lt;/strong&gt;&lt;em&gt;filename&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;auto-save-file-name-p &lt;/strong&gt;&lt;em&gt;filename&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a45e65f2ad7e289d0f2e7b052dc7033ab56a9488" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;autoload-do-load&lt;/strong&gt;&lt;em&gt;autoload &amp;amp;optional name macro-only&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;autoload-do-load &lt;/strong&gt;&lt;em&gt;autoload y nombre opcional solo macro&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9bcc17624d066bb39ec0a10b6ee8cb0b717df9fe" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;autoload&lt;/strong&gt;&lt;em&gt;function filename &amp;amp;optional docstring interactive type&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;autoload&lt;/strong&gt;&lt;em&gt;function filename &amp;amp;optional docstring interactive type&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2dd6ebdf8c4bbd24dc0b202900e686bd4ef0b934" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;autoloadp&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;autoloadp&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="25871f854fbeddc919a99cee9f1478060b5227db" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;backtrace-debug&lt;/strong&gt;&lt;em&gt;level flag&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;backtrace-debug&lt;/strong&gt;&lt;em&gt;level flag&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f1bfcee75f6be560f58743876efc19d7b1084c19" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;backtrace-frame&lt;/strong&gt;&lt;em&gt;frame-number &amp;amp;optional base&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;backtrace-frame&lt;/strong&gt;&lt;em&gt;frame-number &amp;amp;optional base&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="53daa33b72ee12831288c7dac28606cb0327e76e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;backtrace&lt;/strong&gt;</source>
          <target state="translated">Function: &lt;strong&gt;backtrace&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="131b40239bc16fc9212d7f437e20b6c20068addf" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;backup-buffer&lt;/strong&gt;</source>
          <target state="translated">Function: &lt;strong&gt;backup-buffer&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e1c5efaea3e860c5ebd7129d05cde63e7c0bda96" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;backup-file-name-p&lt;/strong&gt;&lt;em&gt;filename&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;backup-file-name-p&lt;/strong&gt;&lt;em&gt;filename&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9d4115caf626a72b2e5c2e0648d93a81ed356cd7" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;backward-prefix-chars&lt;/strong&gt;</source>
          <target state="translated">Function: &lt;strong&gt;backward-prefix-chars&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b88b5bfff69b86626c1c3a70a20ee3a792e06aa5" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;backward-word-strictly&lt;/strong&gt;&lt;em&gt;&amp;amp;optional count&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;backward-word-strictly&lt;/strong&gt;&lt;em&gt;&amp;amp;optional count&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="16ea05dcad961cd644a66c3eac32113074a9c690" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;barf-if-buffer-read-only&lt;/strong&gt;&lt;em&gt;&amp;amp;optional position&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;barf-if-buffer-read-only&lt;/strong&gt;&lt;em&gt;&amp;amp;optional position&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="69729dae5c8ac8b858b65ceb0bb2c48aab9a8e39" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;base64-decode-string&lt;/strong&gt;&lt;em&gt;string &amp;amp;optional base64url&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;base64-decode-string&lt;/strong&gt;&lt;em&gt;string &amp;amp;optional base64url&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b00edb6416a8bab975c2b26f9fdb30ae0d15525c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;base64-encode-string&lt;/strong&gt;&lt;em&gt;string &amp;amp;optional no-line-break&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;base64-encode-string&lt;/strong&gt;&lt;em&gt;string &amp;amp;optional no-line-break&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e3e143ea36d12eaa70b2fca8d8067c4c57e5bcb7" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;base64url-encode-string&lt;/strong&gt;&lt;em&gt;string &amp;amp;optional no-pad&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;base64url-encode-string&lt;/strong&gt;&lt;em&gt;string &amp;amp;optional no-pad&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="502c313c6cc48b783b00781dea93cd5cd8433d20" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;batch-byte-compile&lt;/strong&gt;&lt;em&gt;&amp;amp;optional noforce&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;batch-byte-compile&lt;/strong&gt;&lt;em&gt;&amp;amp;optional noforce&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ab89670592e1d6b6b9440f7820bb8fb26632f386" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;beep&lt;/strong&gt;&lt;em&gt;&amp;amp;optional do-not-terminate&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;beep&lt;/strong&gt;&lt;em&gt;&amp;amp;optional do-not-terminate&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6273a498025b29bd7d9a8184945cc88fd76b1c8b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bidi-find-overridden-directionality&lt;/strong&gt;&lt;em&gt;from to &amp;amp;optional object&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;bidi-find-overridden-directionality&lt;/strong&gt;&lt;em&gt;from to &amp;amp;optional object&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="174beea5b65772f0c690611ea4c86a51786f110b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bidi-string-mark-left-to-right&lt;/strong&gt;&lt;em&gt;string&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;bidi-string-mark-left-to-right&lt;/strong&gt;&lt;em&gt;string&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="56774e34cb951af8612601ccda8e628c07085c80" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bignump&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;bignump&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="aee0ddae4c2d01b37c319b39675454a74c5e3756" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bindat-get-field&lt;/strong&gt;&lt;em&gt;struct &amp;amp;rest name&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;bindat-get-field&lt;/strong&gt;&lt;em&gt;struct &amp;amp;rest name&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8661379acb672e89fc6786773783f4035a5e2d7a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bindat-ip-to-string&lt;/strong&gt;&lt;em&gt;ip&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;bindat-ip-to-string&lt;/strong&gt;&lt;em&gt;ip&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="313d20a7f51e0c756d97d20c79e0fab2e0062c5b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bindat-length&lt;/strong&gt;&lt;em&gt;spec struct&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;bindat-length&lt;/strong&gt;&lt;em&gt;spec struct&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bcfa80aa0cd096410642a04ebd9d63dcf821c98e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bindat-pack&lt;/strong&gt;&lt;em&gt;spec struct &amp;amp;optional bindat-raw bindat-idx&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;bindat-pack&lt;/strong&gt;&lt;em&gt;spec struct &amp;amp;optional bindat-raw bindat-idx&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9c39da3f53b4c7c9fada690b5290ce87496af432" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bindat-unpack&lt;/strong&gt;&lt;em&gt;spec bindat-raw &amp;amp;optional bindat-idx&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;bindat-unpack&lt;/strong&gt;&lt;em&gt;spec bindat-raw &amp;amp;optional bindat-idx&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="14d6231efdd46c46683ca9fd42ac584c6eab262f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bitmap-spec-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;bitmap-spec-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="33f6df1d1f12a61e4f5c9fb7e353e63cb1b7303c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bobp&lt;/strong&gt;</source>
          <target state="translated">Function: &lt;strong&gt;bobp&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f95a13f4f7713a06dfeb5b616fe25d005531f18b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bolp&lt;/strong&gt;</source>
          <target state="translated">Function: &lt;strong&gt;bolp&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cf11ebf627ce9b13fbaebc9f63f13cd2ead96088" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bool-vector-count-consecutive&lt;/strong&gt;&lt;em&gt;a b i&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;bool-vector-count-consecutive&lt;/strong&gt;&lt;em&gt;a b i&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="109f1f4a3a6504eb7b376d51a67171e8e8eecd06" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bool-vector-count-population&lt;/strong&gt;&lt;em&gt;a&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;bool-vector-count-population&lt;/strong&gt;&lt;em&gt;a&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2ebd08cb45eb4d3110ca15806108143f8e950460" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bool-vector-exclusive-or&lt;/strong&gt;&lt;em&gt;a b &amp;amp;optional c&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;bool-vector-exclusive-or&lt;/strong&gt;&lt;em&gt;a b &amp;amp;optional c&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="246d1b242787c8af9c656851739d05d1cffa4ebd" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bool-vector-intersection&lt;/strong&gt;&lt;em&gt;a b &amp;amp;optional c&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;bool-vector-intersection&lt;/strong&gt;&lt;em&gt;a b &amp;amp;optional c&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d0e3fce4270209a102734690cfa709018fab0f98" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bool-vector-not&lt;/strong&gt;&lt;em&gt;a &amp;amp;optional b&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;bool-vector-not&lt;/strong&gt;&lt;em&gt;a &amp;amp;optional b&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6732e4b0a85990ee32be720e711cd64ea2e8bdb3" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bool-vector-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;bool-vector-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="55168ada494c82e0b7f718e23d9e830dee8557ac" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bool-vector-set-difference&lt;/strong&gt;&lt;em&gt;a b &amp;amp;optional c&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;bool-vector-set-difference&lt;/strong&gt;&lt;em&gt;a b &amp;amp;optional c&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="12f9e56dbe8024c15162eb83a99abfd3fbb34e88" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bool-vector-subsetp&lt;/strong&gt;&lt;em&gt;a b&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;bool-vector-subsetp&lt;/strong&gt;&lt;em&gt;a b&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4e465262a9d0edb9a4325997854ecbe635d203b4" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bool-vector-union&lt;/strong&gt;&lt;em&gt;a b &amp;amp;optional c&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;bool-vector-union&lt;/strong&gt;&lt;em&gt;a b &amp;amp;optional c&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c9d36db9eb4751a9be4d3d13f0d92487c020ca0a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bool-vector&lt;/strong&gt;&lt;em&gt;&amp;amp;rest objects&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;bool-vector&lt;/strong&gt;&lt;em&gt;&amp;amp;rest objects&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="14b6580f1de56e0b35115e844658bf51519c7195" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;booleanp&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;booleanp&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="015300599d04983874d9fbd2d64cac46d359c4df" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;boundp&lt;/strong&gt;&lt;em&gt;variable&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;boundp&lt;/strong&gt;&lt;em&gt;variable&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fa96a4d675e94c373ad136e7914966a49dbddc40" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;buffer-base-buffer&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;buffer-base-buffer&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="30b0cd18a017c9c767c4f91441b4d5f80dbb27cb" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;buffer-chars-modified-tick&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;buffer-chars-modified-tick&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0443bfd1aafd5fb44360b0fa616a0c3d7abe7a3a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;buffer-end&lt;/strong&gt;&lt;em&gt;flag&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;buffer-end&lt;/strong&gt;&lt;em&gt;flag&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a305c9472a806f5d996a6a4e3196954831ec9f0b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;buffer-file-name&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;buffer-file-name&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4a588ee8706783f01d6774d66e016ce1907ee5c5" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;buffer-hash&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer-or-name&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;buffer-hash&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer-or-name&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3c8cbfa11b12c59b8fb8db20cea27dbec8dddf58" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;buffer-list&lt;/strong&gt;&lt;em&gt;&amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;buffer-list&lt;/strong&gt;&lt;em&gt;&amp;amp;optional frame&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5ca67bf70826116169e721edc84594fe5147bad1" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;buffer-live-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;buffer-live-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f8dd2e9588a43afbb497aa44486ef9ff4765e112" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;buffer-local-value&lt;/strong&gt;&lt;em&gt;variable buffer&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;buffer-local-value&lt;/strong&gt;&lt;em&gt;variable buffer&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ce7a0d5828c58d2679728d56b544ac143e00c13f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;buffer-local-variables&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;buffer-local-variables&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2361533430ee22ffd5fbaa9060b081d67c613fa1" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;buffer-modified-p&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;buffer-modified-p&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b440756221715880ae125e3e0875f94aa1b5b441" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;buffer-modified-tick&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;buffer-modified-tick&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6f13793e7de251b0b3f7b9fb488f0b93db11bbdf" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;buffer-name&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;buffer-name&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="051f9f2ce3fe25bda59e56824b2cf327bad985d3" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;buffer-narrowed-p&lt;/strong&gt;</source>
          <target state="translated">Function: &lt;strong&gt;buffer-narrowed-p&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="be9a6e1469db9cd48289d3ee62ea1a4a9ae1a14a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;buffer-size&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;buffer-size&lt;/strong&gt;&lt;em&gt;&amp;amp;optional buffer&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="82509c27cdfb038cedd2cdf951cc2734d4c980c1" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;buffer-string&lt;/strong&gt;</source>
          <target state="translated">Function: &lt;strong&gt;buffer-string&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="17016db07a116a15ab5e40bf753899eff9d5a069" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;buffer-substring-no-properties&lt;/strong&gt;&lt;em&gt;start end&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;buffer-substring-no-properties&lt;/strong&gt;&lt;em&gt;start end&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="31d80d0da447e850d905aa6c5c7387be81590fcf" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;buffer-substring-with-bidi-context&lt;/strong&gt;&lt;em&gt;start end &amp;amp;optional no-properties&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;buffer-substring-with-bidi-context&lt;/strong&gt;&lt;em&gt;start end &amp;amp;optional no-properties&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="46a5fbf3089f710234647453da78389ad538460e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;buffer-substring&lt;/strong&gt;&lt;em&gt;start end&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;buffer-substring&lt;/strong&gt;&lt;em&gt;start end&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4ab8f55221eb9ae34e31fcedba33c52146cc259f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;buffer-swap-text&lt;/strong&gt;&lt;em&gt;buffer&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;buffer-swap-text&lt;/strong&gt;&lt;em&gt;buffer&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2a873b81a04afe17fdd2452b1ef8f1481328d86a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bufferp&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;bufferp&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e61da70f8396c27b6ea9303ac9a498891355c382" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;bufferpos-to-filepos&lt;/strong&gt;&lt;em&gt;position &amp;amp;optional quality coding-system&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;bufferpos-to-filepos&lt;/strong&gt;&lt;em&gt;position &amp;amp;optional quality coding-system&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1aae739e73cab112d9cb7859964cb6e80d307bbe" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;butlast&lt;/strong&gt;&lt;em&gt;x &amp;amp;optional n&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;butlast&lt;/strong&gt;&lt;em&gt;x &amp;amp;optional n&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0f6fcb0726c12ad91cb45f3e4fbeccbd519826a9" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;button-activate&lt;/strong&gt;&lt;em&gt;button &amp;amp;optional use-mouse-action&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;button-activate&lt;/strong&gt;&lt;em&gt;button &amp;amp;optional use-mouse-action&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ca9452480ff3f1e9d2a339fac689785df2396af9" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;button-at&lt;/strong&gt;&lt;em&gt;pos&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;button-at&lt;/strong&gt;&lt;em&gt;pos&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f51a047ff418564c15fbb3a5aa5a3e6452a1bdd4" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;button-end&lt;/strong&gt;&lt;em&gt;button&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;button-end&lt;/strong&gt;&lt;em&gt;button&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6e52df647fabf94c621851bd41ba7de3686f04e5" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;button-get&lt;/strong&gt;&lt;em&gt;button prop&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;button-get&lt;/strong&gt;&lt;em&gt;button prop&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7403216f1bac8fb74966974ca1e2a03d1ab0ca52" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;button-has-type-p&lt;/strong&gt;&lt;em&gt;button type&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;button-has-type-p&lt;/strong&gt;&lt;em&gt;button type&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f23376ac82096363c6d97867068ad30f6a9beaeb" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;button-label&lt;/strong&gt;&lt;em&gt;button&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;button-label&lt;/strong&gt;&lt;em&gt;button&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="93158304b6700c969fbb97bdc3d2059b07b38479" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;button-put&lt;/strong&gt;&lt;em&gt;button prop val&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;button-put&lt;/strong&gt;&lt;em&gt;button prop val&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8e51aa27bd72f552fea52cdaf01c0e2a99eafce4" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;button-start&lt;/strong&gt;&lt;em&gt;button&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;button-start&lt;/strong&gt;&lt;em&gt;button&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fb745763f947d23f7f02548b039b9b0b06a5ed1b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;button-type-get&lt;/strong&gt;&lt;em&gt;type prop&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;button-type-get&lt;/strong&gt;&lt;em&gt;type prop&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b86a8e6f9f1ed2d38223af842fedd8a8a772e814" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;button-type-put&lt;/strong&gt;&lt;em&gt;type prop val&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;button-type-put&lt;/strong&gt;&lt;em&gt;type prop val&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9e2da9a762553d3872d08ca4fa6edd1143809040" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;button-type-subtype-p&lt;/strong&gt;&lt;em&gt;type supertype&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;button-type-subtype-p&lt;/strong&gt;&lt;em&gt;type supertype&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="afa4c3b3d69c1615a40e9eda6618bf16b1f9fa7a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;button-type&lt;/strong&gt;&lt;em&gt;button&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;button-type&lt;/strong&gt;&lt;em&gt;button&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="33d5ca8cef956ebbd0376b69d71c1018242bf98d" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;byte-code-function-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;byte-code-function-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f7ccd7da8afeba0ab4a2651f17fb68ce02186f44" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;byte-compile&lt;/strong&gt;&lt;em&gt;symbol&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;byte-compile&lt;/strong&gt;&lt;em&gt;symbol&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4c97893403e189c5afc92eb46dcb634eeca63eba" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;byte-to-position&lt;/strong&gt;&lt;em&gt;byte-position&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;byte-to-position&lt;/strong&gt;&lt;em&gt;byte-position&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b0ee476c873d1696c33d9137e7b4d7fbafc86a64" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;byte-to-string&lt;/strong&gt;&lt;em&gt;byte&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;byte-to-string&lt;/strong&gt;&lt;em&gt;byte&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="34aee39d08024d3c82e4a99ab8586244c3453c5c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;caar&lt;/strong&gt;&lt;em&gt;cons-cell&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;caar&lt;/strong&gt;&lt;em&gt;cons-cell&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1c1be267e9d9904b4842e45fac881df3ea9ee781" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;cadr&lt;/strong&gt;&lt;em&gt;cons-cell&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;cadr&lt;/strong&gt;&lt;em&gt;cons-cell&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dd0cf7d1ef7edafb7f4d58c7fb2c4dfa8e40249f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;call-interactively&lt;/strong&gt;&lt;em&gt;command &amp;amp;optional record-flag keys&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;call-interactively&lt;/strong&gt;&lt;em&gt;command &amp;amp;optional record-flag keys&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="70eb9ec601554f2c6a1eae0d4237acc70e23f4ff" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;call-process-region&lt;/strong&gt;&lt;em&gt;start end program &amp;amp;optional delete destination display &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;call-process-region&lt;/strong&gt;&lt;em&gt;start end program &amp;amp;optional delete destination display &amp;amp;rest args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9365262957294c1bcc5562ff05953f8f9a75af4e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;call-process-shell-command&lt;/strong&gt;&lt;em&gt;command &amp;amp;optional infile destination display&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;call-process-shell-command&lt;/strong&gt;&lt;em&gt;command &amp;amp;optional infile destination display&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="234a7c69afb454fee73bf056731bbba0e1b8ad62" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;call-process&lt;/strong&gt;&lt;em&gt;program &amp;amp;optional infile destination display &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;call-process&lt;/strong&gt;&lt;em&gt;program &amp;amp;optional infile destination display &amp;amp;rest args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9631a8956c2209172b946e088f1d4d19888300ab" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;call-shell-region&lt;/strong&gt;&lt;em&gt;start end command &amp;amp;optional delete destination&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;call-shell-region&lt;/strong&gt;&lt;em&gt;start end command &amp;amp;optional delete destination&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="550062a7c1554f6b94d87fd8f85f7e5b078c83c9" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;called-interactively-p&lt;/strong&gt;&lt;em&gt;kind&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;called-interactively-p&lt;/strong&gt;&lt;em&gt;kind&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="66277dfa7cb1220ff14e4fd9e8eb5c5d3f96849b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;cancel-change-group&lt;/strong&gt;&lt;em&gt;handle&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;cancel-change-group&lt;/strong&gt;&lt;em&gt;handle&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2775faf1bf3f7c4a57b1cdfa7bced6f68da5f8dd" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;cancel-timer&lt;/strong&gt;&lt;em&gt;timer&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;cancel-timer&lt;/strong&gt;&lt;em&gt;timer&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="852307446d52147294fb5e73102228a3c74dd7e6" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;capitalize&lt;/strong&gt;&lt;em&gt;string-or-char&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;capitalize&lt;/strong&gt;&lt;em&gt;string-or-char&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6c004eb4846b6c84e18ba1845f08f5c7b43ef391" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;car-safe&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;car-safe&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d70f4229ec1ac5395ecaca935a9eb158d493d596" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;car&lt;/strong&gt;&lt;em&gt;cons-cell&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;car&lt;/strong&gt;&lt;em&gt;cons-cell&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3936a03b2f6902b4e1b3f9cdb1531ba75c7fdc9f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;case-table-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;case-table-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f6c80d2bde519e96a1579fa2e654beeb480a019c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;category-docstring&lt;/strong&gt;&lt;em&gt;category &amp;amp;optional table&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;category-docstring&lt;/strong&gt;&lt;em&gt;category &amp;amp;optional table&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="070e8c8e7664306ae6871b597ba1e1ec5a2d9f45" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;category-set-mnemonics&lt;/strong&gt;&lt;em&gt;category-set&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;category-set-mnemonics&lt;/strong&gt;&lt;em&gt;category-set&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7c698443236912bb108079102c13ea723d947934" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;category-table-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;category-table-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5e92b685cd7c3a22a24f78e6056be4628b96bd9e" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;category-table&lt;/strong&gt;</source>
          <target state="translated">Function: &lt;strong&gt;category-table&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a7e66dc454d4d853a9310418f8a332bb82a23437" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;cdar&lt;/strong&gt;&lt;em&gt;cons-cell&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;cdar&lt;/strong&gt;&lt;em&gt;cons-cell&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="16622ba509a2c267ee58ef2ea832f27fa9c15608" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;cddr&lt;/strong&gt;&lt;em&gt;cons-cell&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;cddr&lt;/strong&gt;&lt;em&gt;cons-cell&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f10afae7b007b51a030ab5fc705e6bac1ef7a5df" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;cdr-safe&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;cdr-safe&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="047f4689447b96857a8947da4cba0269e448a6d0" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;cdr&lt;/strong&gt;&lt;em&gt;cons-cell&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;cdr&lt;/strong&gt;&lt;em&gt;cons-cell&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="60c77f25bf6184d810695988dec19771d2976e6f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;ceiling&lt;/strong&gt;&lt;em&gt;number &amp;amp;optional divisor&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;ceiling&lt;/strong&gt;&lt;em&gt;number &amp;amp;optional divisor&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="852ffa748551d3f9377a2bef50e6bd61d6f777d2" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;char-after&lt;/strong&gt;&lt;em&gt;&amp;amp;optional position&lt;/em&gt;</source>
          <target state="translated">Function: &lt;strong&gt;char-after&lt;/strong&gt;&lt;em&gt;&amp;amp;optional position&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dea239d2c680d7781cdc8ab2943bd00f710fb846" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;char-before&lt;/strong&gt;&lt;em&gt;&amp;amp;optional position&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;char-before &lt;/strong&gt;&lt;em&gt;y posici&amp;oacute;n opcional&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0a206b520bc6631f48b86177f0a53d3b646edf28" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;char-category-set&lt;/strong&gt;&lt;em&gt;char&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;char-category-set &lt;/strong&gt;&lt;em&gt;char&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="630a918840f55a66b9568d9e9c4feaa333dde02a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;char-charset&lt;/strong&gt;&lt;em&gt;character &amp;amp;optional restriction&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;car&amp;aacute;cter char-charset &lt;/strong&gt;&lt;em&gt;y restricci&amp;oacute;n opcional&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2753b71977cc335c4845e0c8ca9a11e22dfdc6f7" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;char-code-property-description&lt;/strong&gt;&lt;em&gt;prop value&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;valor de &lt;/em&gt;&lt;strong&gt;propiedad char-code-property-description&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c5cc1d800868abd6aabd731dcd6bd832791c3d1a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;char-displayable-p&lt;/strong&gt;&lt;em&gt;char&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;char-Displayable-p &lt;/strong&gt;&lt;em&gt;char&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e60536f10c7d06039df977083bcf87c9234e96ee" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;char-equal&lt;/strong&gt;&lt;em&gt;character1 character2&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;char-equal &lt;/strong&gt;&lt;em&gt;character1 character2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7d95d1f5b01d5c8b438cd5fecf47d85bbbb1ec36" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;char-from-name&lt;/strong&gt;&lt;em&gt;string &amp;amp;optional ignore-case&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;char-from-name &lt;/strong&gt;&lt;em&gt;string &amp;amp; opcional ignore-case&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4c40d317b8cc626c35194e60bd40385ac0639016" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;char-or-string-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;char-o cadena-p- &lt;/strong&gt;&lt;em&gt;objeto&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c897d63f806af28afb4cd60c3b96ad98b8eec58b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;char-syntax&lt;/strong&gt;&lt;em&gt;character&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;char-sintaxis de &lt;/strong&gt;&lt;em&gt;car&amp;aacute;cter&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bd4c50fa276c601b56559c709ed5079269d00f03" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;char-table-extra-slot&lt;/strong&gt;&lt;em&gt;char-table n&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;char-table-extra-slot &lt;/strong&gt;&lt;em&gt;char-table n&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7dcb199fd0da9d3bcb0a1bdc4287df214f46b2b8" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;char-table-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;char-table-p &lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="42c7484134ef84c8e29ffb12bec1f7670d494138" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;char-table-parent&lt;/strong&gt;&lt;em&gt;char-table&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;char-table-parent &lt;/strong&gt;&lt;em&gt;char-table&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="785b5330bbfc8af5f6a6b5d277eace49d768b8c7" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;char-table-range&lt;/strong&gt;&lt;em&gt;char-table range&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;rango &lt;/strong&gt;&lt;em&gt;de tabla de caracteres rango de tabla de caracteres&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1d30fab06f4240d0098779781b5cc71828316051" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;char-table-subtype&lt;/strong&gt;&lt;em&gt;char-table&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;char-table-subtype &lt;/strong&gt;&lt;em&gt;char-table&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f64a2fc8b8fcc9100bba6396e9e3af39c89be4f2" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;char-to-string&lt;/strong&gt;&lt;em&gt;character&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;char-a-cadena de &lt;/strong&gt;&lt;em&gt;caracteres&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dc564b1d5ffdddfb9ab7d2ebef9e0a5b1aa1ccf9" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;char-width&lt;/strong&gt;&lt;em&gt;char&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;char-width &lt;/strong&gt;&lt;em&gt;char&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e9823c73fc58ec1b90bc60c496b9503895558b9b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;characterp&lt;/strong&gt;&lt;em&gt;charcode&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;characterp &lt;/strong&gt;&lt;em&gt;charcode&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6d5a77b0c220e9a44df58e66ac5918c3c26f19d7" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;charset-after&lt;/strong&gt;&lt;em&gt;&amp;amp;optional pos&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;charset-after &lt;/strong&gt;&lt;em&gt;&amp;amp; pos opcional&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d6ec702c076c38a6163e8c24e48449e2eb5b3be3" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;charset-plist&lt;/strong&gt;&lt;em&gt;charset&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;charset-plist &lt;/strong&gt;&lt;em&gt;charset&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fc570a269b2d36d3ed29317490ff3bbf1fa9c48b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;charset-priority-list&lt;/strong&gt;&lt;em&gt;&amp;amp;optional highestp&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;charset-priority-list &lt;/strong&gt;&lt;em&gt;y highp opcional&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0de4a58f17ffccd5bbb338fcb332677631602c64" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;charsetp&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;objeto &lt;/em&gt;&lt;strong&gt;charsetp&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ac3f930abaa34eee0d80761a890cc69ec044a1ec" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;check-coding-system&lt;/strong&gt;&lt;em&gt;coding-system&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;sistema de &lt;/strong&gt;&lt;em&gt;codificaci&amp;oacute;n del &lt;/em&gt;&lt;strong&gt;sistema de &lt;/strong&gt;&lt;em&gt;codificaci&amp;oacute;n de &lt;/em&gt;&lt;strong&gt;verificaci&amp;oacute;n&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="206b61972e1cd69d6fd67557025bbeeed96cac1f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;check-coding-systems-region&lt;/strong&gt;&lt;em&gt;start end coding-system-list&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;check-coding-systems-region &lt;/strong&gt;&lt;em&gt;start end coding-system-list&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="91b99c57992a4a4782e83da9223b3d24a7d89b60" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;cl-call-next-method&lt;/strong&gt;&lt;em&gt;&amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;cl-call-next-method &lt;/strong&gt;&lt;em&gt;&amp;amp; rest args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="df2781c0e34245e14e02e966b85cb332d6a423df" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;cl-next-method-p&lt;/strong&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;cl-next-method-p&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c1adb23327f964787a36bf908dab545d3b70dfe7" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;cl-old-struct-compat-mode&lt;/strong&gt;&lt;em&gt;arg&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;cl-old-struct-compat-mode &lt;/strong&gt;&lt;em&gt;arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d16ddc1de231afc2e9248a4e1ea784ce180f3c02" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;clear-abbrev-table&lt;/strong&gt;&lt;em&gt;abbrev-table&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;clear-abbrev-table &lt;/strong&gt;&lt;em&gt;abbrev-table&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="510e0d836cb736fdfbc94a7120108dbed5ba2f91" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;clear-image-cache&lt;/strong&gt;&lt;em&gt;&amp;amp;optional filter&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;clear-image-cache &lt;/strong&gt;&lt;em&gt;y filtro opcional&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1c77b6351969085039d88c7fc4d46a5178c1dd2d" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;clear-string&lt;/strong&gt;&lt;em&gt;string&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;cuerdas clara &lt;/strong&gt;&lt;em&gt;cadena de&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6a92634f360f3680b8fb3e5393f46f344d5d52d1" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;clear-this-command-keys&lt;/strong&gt;&lt;em&gt;&amp;amp;optional keep-record&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;borrar-este-comando-teclas &lt;/strong&gt;&lt;em&gt;y mantener registro opcional&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4e9dd1050590e6addc4705a9bd7eb9df90342c18" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;clear-visited-file-modtime&lt;/strong&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;clear-visitado-file-modtime&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f70e48348e40392e9abcb306f0be5781c3e11576" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;clrhash&lt;/strong&gt;&lt;em&gt;table&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;clrhash &lt;/strong&gt;&lt;em&gt;table&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8804c3c324daeb306700917ab50868f5b465a046" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;coding-system-aliases&lt;/strong&gt;&lt;em&gt;coding-system&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;coding-system-aliases &lt;/strong&gt;&lt;em&gt;coding-system&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c1a39a870eddcfc28d4942774e92efc8b4a10bea" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;coding-system-change-eol-conversion&lt;/strong&gt;&lt;em&gt;coding-system eol-type&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;codificaci&amp;oacute;n-sistema-cambio-eol-conversi&amp;oacute;n &lt;/strong&gt;&lt;em&gt;sistema de codificaci&amp;oacute;n eol-tipo&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="82f31a8a0f8e7e788d29de18dc980e769f83d18a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;coding-system-change-text-conversion&lt;/strong&gt;&lt;em&gt;eol-coding text-coding&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;codificaci&amp;oacute;n-sistema-cambio-texto-conversi&amp;oacute;n &lt;/strong&gt;&lt;em&gt;eol-codificaci&amp;oacute;n codificaci&amp;oacute;n de texto&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6b7654eafa6d18c7d1ecfe3e4a54f1930473562c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;coding-system-charset-list&lt;/strong&gt;&lt;em&gt;coding-system&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;coding-system-charset-list &lt;/strong&gt;&lt;em&gt;coding-system&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="39050a32add1c2bac04d9ec861e401892c6703af" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;coding-system-eol-type&lt;/strong&gt;&lt;em&gt;coding-system&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;sistema de codificaci&amp;oacute;n-eol-type &lt;/strong&gt;&lt;em&gt;coding-system&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3af6b192767b0133fa9fcaf65e7308889037e7d9" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;coding-system-get&lt;/strong&gt;&lt;em&gt;coding-system property&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;coding-system-get &lt;/strong&gt;&lt;em&gt;coding-system property&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f21feb8d79eee772fbe4876d618a8d135c32ff28" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;coding-system-list&lt;/strong&gt;&lt;em&gt;&amp;amp;optional base-only&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;lista del sistema de codificaci&amp;oacute;n &lt;/strong&gt;&lt;em&gt;y solo base opcional&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="007f2122b415f91848394d123fd820fddb095d69" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;coding-system-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;coding-system-p &lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c77afd26a17ef925845d1adee2cb7c1b2a72aa0f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;coding-system-priority-list&lt;/strong&gt;&lt;em&gt;&amp;amp;optional highestp&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;codificaci&amp;oacute;n-sistema-lista de prioridades &lt;/strong&gt;&lt;em&gt;y m&amp;aacute;xima opcional&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7fa31a6eb99f0ec5fca182026aec3ed0183b02dd" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;color-defined-p&lt;/strong&gt;&lt;em&gt;color &amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;color-definido-p &lt;/strong&gt;&lt;em&gt;color y marco opcional&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2c41a0d861ac96e508b0e6dd027c853ac61af998" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;color-gray-p&lt;/strong&gt;&lt;em&gt;color &amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;color-gray-p &lt;/strong&gt;&lt;em&gt;color y marco opcional&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="383d8f151d9c6e2fdf4eb766e8bf0af363ed57de" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;color-supported-p&lt;/strong&gt;&lt;em&gt;color &amp;amp;optional frame background-p&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;color-compatible-p &lt;/strong&gt;&lt;em&gt;color y marco opcional background-p&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="eb8619c981a9f5fe568c8c16410b4fb8ad906fc5" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;color-values&lt;/strong&gt;&lt;em&gt;color &amp;amp;optional frame&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;color-valores &lt;/strong&gt;&lt;em&gt;color y marco opcional&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="93c8d5283a0ea48b5baf4802cc68ce67657d777b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;combine-and-quote-strings&lt;/strong&gt;&lt;em&gt;list-of-strings &amp;amp;optional separator&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;combine-and-quote-strings &lt;/strong&gt;&lt;em&gt;lista-de-cadenas y separador opcional&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d009ccf2578d55b4e4b3e24acab3b674978014c6" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;command-execute&lt;/strong&gt;&lt;em&gt;command &amp;amp;optional record-flag keys special&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;comando de ejecuci&amp;oacute;n de &lt;/strong&gt;&lt;em&gt;comando y teclas de marca de registro opcionales especiales&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5bcf8a07b4ff2a897699c39c949a6409512702a9" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;command-line&lt;/strong&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;l&amp;iacute;nea de comandos&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3ff87fadb9c25755ba3d36c9e1016fe1e035d12d" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;command-remapping&lt;/strong&gt;&lt;em&gt;command &amp;amp;optional position keymaps&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;comando de reasignaci&amp;oacute;n de &lt;/strong&gt;&lt;em&gt;comandos y mapas de teclas de posici&amp;oacute;n opcionales&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="63b31f007940028bcce0a08f659253a5120fffec" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;commandp&lt;/strong&gt;&lt;em&gt;object &amp;amp;optional for-call-interactively&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;objeto &lt;/em&gt;&lt;strong&gt;commandp &lt;/strong&gt;&lt;em&gt;y opcional para-llamar-interactivamente&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="510d7d51a6e89a973dc14422468e094eaedf968c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;compare-buffer-substrings&lt;/strong&gt;&lt;em&gt;buffer1 start1 end1 buffer2 start2 end2&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;compare-buffer-substrings &lt;/strong&gt;&lt;em&gt;buffer1 start1 end1 buffer2 start2 end2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1b6173f21800b523f55448aebe48b82d8b22cbf0" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;compare-strings&lt;/strong&gt;&lt;em&gt;string1 start1 end1 string2 start2 end2 &amp;amp;optional ignore-case&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;compare-strings &lt;/strong&gt;&lt;em&gt;string1 start1 end1 string2 start2 end2 &amp;amp; opcional ignore-case&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6dc4c1c1c5f1cf83d3b13d266d00d135565de254" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;compare-window-configurations&lt;/strong&gt;&lt;em&gt;config1 config2&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;compare-window-configurations &lt;/strong&gt;&lt;em&gt;config1 config2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a0cf9fedd16b4129623a54b829a6c002f5980549" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;completing-read&lt;/strong&gt;&lt;em&gt;prompt collection &amp;amp;optional predicate require-match initial history default inherit-input-method&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;completar-leer &lt;/strong&gt;&lt;em&gt;colecci&amp;oacute;n de solicitudes y predicado opcional require-match historial inicial predeterminado m&amp;eacute;todo de entrada-herencia&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2129decdf67dc031053e8a71f391381ee473af4f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;completion-boundaries&lt;/strong&gt;&lt;em&gt;string collection predicate suffix&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;Sufijo de &lt;/strong&gt;&lt;em&gt;predicado de colecci&amp;oacute;n de cadenas de &lt;/em&gt;&lt;strong&gt;l&amp;iacute;mites de finalizaci&amp;oacute;n&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="08d5e7d770839a0dbe79925dde4a6a49b953f67b" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;completion-in-region&lt;/strong&gt;&lt;em&gt;start end collection &amp;amp;optional predicate&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;colecci&amp;oacute;n de finalizaci&amp;oacute;n de inicio de finalizaci&amp;oacute;n &lt;/em&gt;&lt;strong&gt;en la regi&amp;oacute;n &lt;/strong&gt;&lt;em&gt;y predicado opcional&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6b8ba41f6e31c78bbe14e0cfabbcb1c0ebaa5e77" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;completion-table-dynamic&lt;/strong&gt;&lt;em&gt;function &amp;amp;optional switch-buffer&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;funci&amp;oacute;n &lt;/em&gt;&lt;strong&gt;din&amp;aacute;mica de tabla de finalizaci&amp;oacute;n &lt;/strong&gt;&lt;em&gt;y b&amp;uacute;fer de conmutaci&amp;oacute;n opcional&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="39c868ffddcf76664f7de7242111e1918eeb3e6f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;completion-table-with-cache&lt;/strong&gt;&lt;em&gt;function &amp;amp;optional ignore-case&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: funci&amp;oacute;n de &lt;strong&gt;completar tabla con cach&amp;eacute; &lt;/strong&gt;&lt;em&gt;y caso de ignorar opcional&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="41d3ad27e6f106d353942d0bbbbafdd2a1729570" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;compute-motion&lt;/strong&gt;&lt;em&gt;from frompos to topos width offsets window&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;calcular el movimiento &lt;/strong&gt;&lt;em&gt;de frompos topos width offsets window&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d0ec4c3c3b5dd9a931c901db0c0de27c54c88e95" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;concat&lt;/strong&gt;&lt;em&gt;&amp;amp;rest sequences&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;secuencias &lt;/em&gt;&lt;strong&gt;concat &lt;/strong&gt;&lt;em&gt;y rest&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5e7ece7c729afe9c73fcc33c835a6b92ac7f07ab" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;condition-mutex&lt;/strong&gt;&lt;em&gt;cond&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;condition-mutex &lt;/strong&gt;&lt;em&gt;cond&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3d89d8512d16f66078415a3a4cb543c3e4decbe6" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;condition-name&lt;/strong&gt;&lt;em&gt;cond&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;condici&amp;oacute;n-nombre &lt;/strong&gt;&lt;em&gt;cond&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fe44c0c8569659d65c34234b7970cd329b801130" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;condition-notify&lt;/strong&gt;&lt;em&gt;cond &amp;amp;optional all&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;condici&amp;oacute;n-notificar &lt;/strong&gt;&lt;em&gt;cond y opcional todo&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ce35400508b6409e9e8108d55d433fe59956735a" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;condition-variable-p&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;estado-variable-p &lt;/strong&gt;&lt;em&gt;objeto&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d0d19927b8e21c4cb7947dc4bda9a62c92a00600" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;condition-wait&lt;/strong&gt;&lt;em&gt;cond&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;condici&amp;oacute;n-espera &lt;/strong&gt;&lt;em&gt;cond&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="36512be769d3f34ad0369d23681de343c600f8c8" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;connection-local-set-profile-variables&lt;/strong&gt;&lt;em&gt;profile variables&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;variables de &lt;/strong&gt;&lt;em&gt;perfil de variables de perfil de &lt;/em&gt;&lt;strong&gt;conexi&amp;oacute;n-local-conjunto-perfil&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fd5a0a1ac941b2c02354964ff7671be4ad8b7c62" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;connection-local-set-profiles&lt;/strong&gt;&lt;em&gt;criteria &amp;amp;rest profiles&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;criterios de &lt;/em&gt;&lt;strong&gt;conexi&amp;oacute;n-local-set-perfiles &lt;/strong&gt;&lt;em&gt;y perfiles de descanso&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="827ee66319f0fc56426e64a3250cf202da4da54f" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;cons&lt;/strong&gt;&lt;em&gt;object1 object2&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;cons &lt;/strong&gt;&lt;em&gt;object1 object2&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9bd4149ba1de415f88c7767745a65ccd544a8142" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;consp&lt;/strong&gt;&lt;em&gt;object&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;em&gt;objeto &lt;/em&gt;&lt;strong&gt;consp&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dc978d1967d4905ba71e5d7faedb79b0ca5010f0" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;constrain-to-field&lt;/strong&gt;&lt;em&gt;new-pos old-pos &amp;amp;optional escape-from-edge only-in-line inhibit-capture-property&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;restringir a campo &lt;/strong&gt;&lt;em&gt;nueva posici&amp;oacute;n antigua posici&amp;oacute;n y propiedad de inhibici&amp;oacute;n de captura opcional de escape desde el borde solo en l&amp;iacute;nea&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5161e78605a25c810f76bba1161723d912d1f341" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;continue-process&lt;/strong&gt;&lt;em&gt;&amp;amp;optional process current-group&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;proceso continuo &lt;/strong&gt;&lt;em&gt;y grupo actual de proceso opcional&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="66beb41618980a6b6bb7cffb5ee53d36cc1aa64c" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;controlling-tty-p&lt;/strong&gt;&lt;em&gt;&amp;amp;optional tty&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;control-tty-p &lt;/strong&gt;&lt;em&gt;y tty opcional&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d35524ae2027978f244f886ccdc5de018541aa96" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;convert-standard-filename&lt;/strong&gt;&lt;em&gt;filename&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;convert-standard-filename &lt;/strong&gt;&lt;em&gt;filename&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1b6f1526053f78c7107eb0eb92cab40b1cc36642" translate="yes" xml:space="preserve">
          <source>Function: &lt;strong&gt;coordinates-in-window-p&lt;/strong&gt;&lt;em&gt;coordinates window&lt;/em&gt;</source>
          <target state="translated">Funci&amp;oacute;n: &lt;strong&gt;ventana de &lt;/strong&gt;&lt;em&gt;coordenadas &lt;/em&gt;&lt;strong&gt;coordenadas-en-ventana-p&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
