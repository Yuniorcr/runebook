<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="elisp">
    <body>
      <group id="elisp">
        <trans-unit id="ded2b381f768b0426ee02fc11e7b1ea526d86382" translate="yes" xml:space="preserve">
          <source>M-p</source>
          <target state="translated">M-p</target>
        </trans-unit>
        <trans-unit id="0f8046567a7777233033e7c62fcbaaf077eb077a" translate="yes" xml:space="preserve">
          <source>M-r</source>
          <target state="translated">M-r</target>
        </trans-unit>
        <trans-unit id="0006025ee1ee308621c9836f080cfbad730b00dd" translate="yes" xml:space="preserve">
          <source>M-s</source>
          <target state="translated">M-s</target>
        </trans-unit>
        <trans-unit id="e2dbd97a24cfd42feafe4155928e5e36e05f30f3" translate="yes" xml:space="preserve">
          <source>M-v</source>
          <target state="translated">M-v</target>
        </trans-unit>
        <trans-unit id="5516e58102890d870825312fe7edb083af235de4" translate="yes" xml:space="preserve">
          <source>M-x</source>
          <target state="translated">M-x</target>
        </trans-unit>
        <trans-unit id="e96ee2840300f270b45095c2f0ec40521a00cde5" translate="yes" xml:space="preserve">
          <source>M-x &lt;var&gt;command&lt;/var&gt;</source>
          <target state="translated">&lt;var&gt;command&lt;/var&gt; mx</target>
        </trans-unit>
        <trans-unit id="30b1c3d10bd4ea36dfe161af71f9b59cff94dfbf" translate="yes" xml:space="preserve">
          <source>M-x &lt;var&gt;command&lt;/var&gt;RET</source>
          <target state="translated">&lt;var&gt;command&lt;/var&gt; Mx RET</target>
        </trans-unit>
        <trans-unit id="c8f918be9ef0d86eff9e8b262b173a76afb5d823" translate="yes" xml:space="preserve">
          <source>M-x apropos RET x-pointer RET</source>
          <target state="translated">M-x a propósito de RET x-pointer RET</target>
        </trans-unit>
        <trans-unit id="19d036c0bdece7df51bbb22b25a57a912bb781fc" translate="yes" xml:space="preserve">
          <source>M-x customize</source>
          <target state="translated">M-x personalizar</target>
        </trans-unit>
        <trans-unit id="350cf2e68d92268174ae9d7178734cce54adaa8c" translate="yes" xml:space="preserve">
          <source>M-x describe-categories RET</source>
          <target state="translated">M-x describe-categorías RET</target>
        </trans-unit>
        <trans-unit id="28a7266291890a298f219fa24bf612c876e68a3a" translate="yes" xml:space="preserve">
          <source>M-x dired-default-directory-on-left</source>
          <target state="translated">M-x dired-default-directory-on-left</target>
        </trans-unit>
        <trans-unit id="d0dbe2e240aeb6f1a78c981c88c230cc06b9fce7" translate="yes" xml:space="preserve">
          <source>M-x edebug-all-defs</source>
          <target state="translated">M-x edebug-all-defs</target>
        </trans-unit>
        <trans-unit id="c71a2298fbf3e6b350d972a5f6758ef0c7f37945" translate="yes" xml:space="preserve">
          <source>M-x edebug-all-forms</source>
          <target state="translated">M-x edebug-all-forms</target>
        </trans-unit>
        <trans-unit id="66031655733aef9ceba93288111a34d690630332" translate="yes" xml:space="preserve">
          <source>M-x edebug-backtrace-hide-instrumentation</source>
          <target state="translated">M-x edebug-backtrace-instrumentación de cuero</target>
        </trans-unit>
        <trans-unit id="f849db42cc80a644b891cceb796496aea5a33446" translate="yes" xml:space="preserve">
          <source>M-x edebug-backtrace-show-instrumentation</source>
          <target state="translated">M-x edebug-backtrace-show-instrumentación</target>
        </trans-unit>
        <trans-unit id="0e0239d280915da82047b3562e0edc1ef7e13f61" translate="yes" xml:space="preserve">
          <source>M-x edebug-eval-top-level-form</source>
          <target state="translated">M-x edebug-eval-top-level-form</target>
        </trans-unit>
        <trans-unit id="95fa4b4069fcd95b6d5ac0204ea4c9cff0ee6f75" translate="yes" xml:space="preserve">
          <source>M-x edit-tab-stops</source>
          <target state="translated">M-x edit-tab-stops</target>
        </trans-unit>
        <trans-unit id="924625b2d7b939bdd69c369a8e0e7552d4621132" translate="yes" xml:space="preserve">
          <source>M-x list-colors-display</source>
          <target state="translated">M-x lista de colores de la pantalla</target>
        </trans-unit>
        <trans-unit id="2d76ea9e63fcbb859b33f48edd7feb794a1730b1" translate="yes" xml:space="preserve">
          <source>M-x list-processes</source>
          <target state="translated">Procesos de la lista M-x</target>
        </trans-unit>
        <trans-unit id="84edc9f7052f2c9a7f036d7890685dfe8db762ec" translate="yes" xml:space="preserve">
          <source>M-x load-library RET package-x RET</source>
          <target state="translated">M-x carga-biblioteca paquete RET-x RET</target>
        </trans-unit>
        <trans-unit id="b609619759aa9b92d26776cb6f14ab4bcfcc31de" translate="yes" xml:space="preserve">
          <source>M-x profiler-&amp;hellip;</source>
          <target state="translated">Mx profiler-&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="0773bdccb110b28fb0a67898b66d8dd11444e9cc" translate="yes" xml:space="preserve">
          <source>M-x profiler-report</source>
          <target state="translated">Informe del perfilador M-x</target>
        </trans-unit>
        <trans-unit id="4f21aa5941ccf75086060a4caa6ef135d1f402a8" translate="yes" xml:space="preserve">
          <source>M-x profiler-start</source>
          <target state="translated">M-x profiler-start</target>
        </trans-unit>
        <trans-unit id="7f9fd75200c3ba11f87c5df3770346f3beaa6c06" translate="yes" xml:space="preserve">
          <source>M-x profiler-stop</source>
          <target state="translated">M-x profiler-stop</target>
        </trans-unit>
        <trans-unit id="e1f1559513ee5a73bed6212288039c357856e5b7" translate="yes" xml:space="preserve">
          <source>M-x python-mode</source>
          <target state="translated">Modo pitón M-x</target>
        </trans-unit>
        <trans-unit id="9a178593a35bbea7f02403c42d651edd7a1bdd3d" translate="yes" xml:space="preserve">
          <source>M-x re-builder</source>
          <target state="translated">Reconstructor M-x</target>
        </trans-unit>
        <trans-unit id="02844767c038cdd2dda139c1d2eab250404388db" translate="yes" xml:space="preserve">
          <source>M-x report-emacs-bug</source>
          <target state="translated">M-x report-emacs-bug</target>
        </trans-unit>
        <trans-unit id="4a8d44402484cf1af704bb5188c0b2f67fd9deae" translate="yes" xml:space="preserve">
          <source>M-x serial-term</source>
          <target state="translated">M-x plazo de serie</target>
        </trans-unit>
        <trans-unit id="d262f66141e61698a64505a1167b86f852cd6537" translate="yes" xml:space="preserve">
          <source>M-x set-visited-file-name</source>
          <target state="translated">M-x set-visited-file-name</target>
        </trans-unit>
        <trans-unit id="ddd4cde942039a43aa69d7aaf7874a8689013014" translate="yes" xml:space="preserve">
          <source>M-x shell</source>
          <target state="translated">La cáscara de M-x</target>
        </trans-unit>
        <trans-unit id="aeb29959992cb9268370a1bd309d2ce9f465185c" translate="yes" xml:space="preserve">
          <source>M-x testcover-mark-all</source>
          <target state="translated">M-x testcover-mark-all</target>
        </trans-unit>
        <trans-unit id="e8f70ba057d5e0dc5100fc76829c8002a8f06257" translate="yes" xml:space="preserve">
          <source>M-x testcover-next-mark</source>
          <target state="translated">M-x testcover-nextmark</target>
        </trans-unit>
        <trans-unit id="91f5f461f2c3a31e68b3789ab862a2b579739b85" translate="yes" xml:space="preserve">
          <source>M-x testcover-start RET&lt;var&gt;file&lt;/var&gt;RET</source>
          <target state="translated">Mx testcover-start RET &lt;var&gt;file&lt;/var&gt; RET</target>
        </trans-unit>
        <trans-unit id="0cb1249115b25aa2690a25b8910733c67b4a92a4" translate="yes" xml:space="preserve">
          <source>M-x untabify</source>
          <target state="translated">M-x untabify</target>
        </trans-unit>
        <trans-unit id="8938bda20b679e9984362cfe3b0025e2957609de" translate="yes" xml:space="preserve">
          <source>M-x update-directory-autoloads</source>
          <target state="translated">M-x update-directory-autoloads</target>
        </trans-unit>
        <trans-unit id="17a3a65ded9cf97168d2d48abac758964baf3233" translate="yes" xml:space="preserve">
          <source>M-x update-file-autoloads</source>
          <target state="translated">M-x update-file-autoloads</target>
        </trans-unit>
        <trans-unit id="157b9065ca9092b93a2cd86b2065b6f97cb3c423" translate="yes" xml:space="preserve">
          <source>M-x widget-browse RET binary-tree-of-string RET</source>
          <target state="translated">M-x widget-browse RET binario-árbol de cuerdas RET</target>
        </trans-unit>
        <trans-unit id="3aa424326e8c65a4310c522189aff3bdb49730f9" translate="yes" xml:space="preserve">
          <source>M-xelp-instrument-listRET nil RET</source>
          <target state="translated">M-xelp-instrumento-lista RET nil RET</target>
        </trans-unit>
        <trans-unit id="d61a0439c16b301031a2c72fbbf40aec0781473a" translate="yes" xml:space="preserve">
          <source>M-xelp-results</source>
          <target state="translated">M-xelp-results</target>
        </trans-unit>
        <trans-unit id="4cb98f7867f1180986c1b84ef1785ff0b2c4dc15" translate="yes" xml:space="preserve">
          <source>M-xlist-buffers</source>
          <target state="translated">M-xlist-buffers</target>
        </trans-unit>
        <trans-unit id="05b684cd2cc4407a760fc4776a9afa8ac8eaddb7" translate="yes" xml:space="preserve">
          <source>M-xlist-tags</source>
          <target state="translated">M-xlist-tags</target>
        </trans-unit>
        <trans-unit id="7555a33395fef6db20d121fb58c3221aa124e48c" translate="yes" xml:space="preserve">
          <source>M-y</source>
          <target state="translated">M-y</target>
        </trans-unit>
        <trans-unit id="db42242da8c9daf4dc32a3e8f6a8c77ab461abee" translate="yes" xml:space="preserve">
          <source>MENU-BAR</source>
          <target state="translated">MENU-BAR</target>
        </trans-unit>
        <trans-unit id="40bb78ac4a8f75b73057a2a259dcfa335c88dad4" translate="yes" xml:space="preserve">
          <source>META</source>
          <target state="translated">META</target>
        </trans-unit>
        <trans-unit id="2d4aa5a5271bf55bf5139dda546f0f30ba06a6bd" translate="yes" xml:space="preserve">
          <source>MIME</source>
          <target state="translated">MIME</target>
        </trans-unit>
        <trans-unit id="240ac4da20e27f25d9defe42a63eca4461adbce9" translate="yes" xml:space="preserve">
          <source>MS-DOS and MS-Windows systems usually lack the standard Unix program &lt;code&gt;ls&lt;/code&gt;, so this function emulates the standard Unix program &lt;code&gt;ls&lt;/code&gt; with Lisp code.</source>
          <target state="translated">Los sistemas MS-DOS y MS-Windows generalmente carecen del programa Unix est&amp;aacute;ndar &lt;code&gt;ls&lt;/code&gt; , por lo que esta funci&amp;oacute;n emula el programa Unix est&amp;aacute;ndar &lt;code&gt;ls&lt;/code&gt; con c&amp;oacute;digo Lisp.</target>
        </trans-unit>
        <trans-unit id="a6a56e5df064567806bfd2d02ec60d53d177da70" translate="yes" xml:space="preserve">
          <source>MS-DOS doesn&amp;rsquo;t support asynchronous subprocesses, so this option doesn&amp;rsquo;t work there.</source>
          <target state="translated">MS-DOS no admite subprocesos asincr&amp;oacute;nicos, por lo que esta opci&amp;oacute;n no funciona all&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="660bf78961f4ec6bd8bd8b37a3b0b2769db2b14a" translate="yes" xml:space="preserve">
          <source>Macro</source>
          <target state="translated">Macro</target>
        </trans-unit>
        <trans-unit id="0d2da2eb949e2df3a96a434a98613935cdfa18a4" translate="yes" xml:space="preserve">
          <source>Macro Type</source>
          <target state="translated">Tipo de macro</target>
        </trans-unit>
        <trans-unit id="3764e4ae50932da915ec9a84fd2ba1b1c33188ce" translate="yes" xml:space="preserve">
          <source>Macro calls (see &lt;a href=&quot;macros#Macros&quot;&gt;Macros&lt;/a&gt;).</source>
          <target state="translated">Llamadas a macros (ver &lt;a href=&quot;macros#Macros&quot;&gt;Macros&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="730c77b761075cf87c04f675fec25c96f12254c7" translate="yes" xml:space="preserve">
          <source>Macro expansion can have counterintuitive consequences. This section describes some important consequences that can lead to trouble, and rules to follow to avoid trouble.</source>
          <target state="translated">La macroexpansión puede tener consecuencias contrarias a la intuición.Esta sección describe algunas consecuencias importantes que pueden llevar a problemas,y las reglas a seguir para evitarlos.</target>
        </trans-unit>
        <trans-unit id="7c8148b5f3e72ae81e30a87c1414a699978cee33" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;1value&lt;/strong&gt;&lt;em&gt;form&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;1value &lt;/strong&gt;&lt;em&gt;forma&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f625904d011437c920c24217d1112932e75fdede" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;EMACS_LIMB_MAX&lt;/strong&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;EMACS_LIMB_MAX&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f63e91ed8761158e2824094f3c035978e33f0b75" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;add-function&lt;/strong&gt;&lt;em&gt;where place function &amp;amp;optional props&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;agregar funci&amp;oacute;n &lt;/strong&gt;&lt;em&gt;donde colocar la funci&amp;oacute;n y los accesorios opcionales&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5429d225c6285d485886a63d9a654b44fd9af85a" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;cl-defgeneric&lt;/strong&gt;&lt;em&gt;name arguments [documentation] [options-and-methods&amp;hellip;] &amp;amp;rest body&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;cl-defgeneric&lt;/strong&gt;&lt;em&gt;name arguments [documentation] [options-and-methods&amp;hellip;] &amp;amp;rest body&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ba5cedae4a4b306427387f90edd4dbd185e02578" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;cl-defmethod&lt;/strong&gt;&lt;em&gt;name [qualifier] arguments [&amp;amp;context (expr spec)&amp;hellip;] &amp;amp;rest [docstring] body&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;cl-defmethod&lt;/strong&gt;&lt;em&gt;name [qualifier] arguments [&amp;amp;context (expr spec)&amp;hellip;] &amp;amp;rest [docstring] body&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1ff2b909c891d19da7650f8ccd70d4ff20d5f0ef" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;combine-after-change-calls&lt;/strong&gt;&lt;em&gt;body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;combine-after-change-calls&lt;/strong&gt;&lt;em&gt;body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6ee51599c974e6734d6444e666498d94c6309037" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;combine-change-calls&lt;/strong&gt;&lt;em&gt;beg end body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;combine-change-calls&lt;/strong&gt;&lt;em&gt;beg end body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3aee740831df3fe36c5e3627bd95688debd9b10c" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;condition-case-unless-debug&lt;/strong&gt;&lt;em&gt;var protected-form handlers&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;condition-case-unless-debug&lt;/strong&gt;&lt;em&gt;var protected-form handlers&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="be46ac442c6b283fe5303544430db1733ede80cf" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;declare-function&lt;/strong&gt;&lt;em&gt;function file &amp;amp;optional arglist fileonly&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;declare-function&lt;/strong&gt;&lt;em&gt;function file &amp;amp;optional arglist fileonly&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="62a5106ba44b52792efba46fd9abcd6f50d2a690" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;declare&lt;/strong&gt;&lt;em&gt;specs&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;declare&lt;/strong&gt;&lt;em&gt;specs&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="aad917e7e24305c69cc7b616287145940c7bc611" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;def-edebug-spec&lt;/strong&gt;&lt;em&gt;macro specification&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;def-edebug-spec&lt;/strong&gt;&lt;em&gt;macro specification&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e8850ae7654fdd0f9e7e3643b836d299119c8eb3" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;defcustom&lt;/strong&gt;&lt;em&gt;option standard doc [keyword value]&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;defcustom&lt;/strong&gt;&lt;em&gt;option standard doc [keyword value]&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5434cd21483dbb5ef69be871541753221bd178a5" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;defface&lt;/strong&gt;&lt;em&gt;face spec doc [keyword value]&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;defface&lt;/strong&gt;&lt;em&gt;face spec doc [keyword value]&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="14c7fabc7b52a8375cc5c9e142c3ac122d2ea4bc" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;defgroup&lt;/strong&gt;&lt;em&gt;group members doc [keyword value]&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;defgroup&lt;/strong&gt;&lt;em&gt;group members doc [keyword value]&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="28b55593ba483070425de7736987bf774bd2c491" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;defimage&lt;/strong&gt;&lt;em&gt;symbol specs &amp;amp;optional doc&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;defimage&lt;/strong&gt;&lt;em&gt;symbol specs &amp;amp;optional doc&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fea6bef8b59da7c79bbd75395190d7484736ecf9" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;define-advice&lt;/strong&gt;&lt;em&gt;symbol (where lambda-list &amp;amp;optional name depth) &amp;amp;rest body&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;define-advice&lt;/strong&gt;&lt;em&gt;symbol (where lambda-list &amp;amp;optional name depth) &amp;amp;rest body&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="70852342716d3e0bca8b4f3d79c1ec5991f6b9cc" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;define-alternatives&lt;/strong&gt;&lt;em&gt;command &amp;amp;rest customizations&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;define-alternatives&lt;/strong&gt;&lt;em&gt;command &amp;amp;rest customizations&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="af424b3d2ee378903109c9532c12c3d915726f60" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;define-derived-mode&lt;/strong&gt;&lt;em&gt;variant parent name docstring keyword-args&amp;hellip; body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;define-derived-mode&lt;/strong&gt;&lt;em&gt;variant parent name docstring keyword-args&amp;hellip; body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d039443b2fcf2ccb94276b2881ba59ab7c4bef6e" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;define-generic-mode&lt;/strong&gt;&lt;em&gt;mode comment-list keyword-list font-lock-list auto-mode-list function-list &amp;amp;optional docstring&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;define-generic-mode&lt;/strong&gt;&lt;em&gt;mode comment-list keyword-list font-lock-list auto-mode-list function-list &amp;amp;optional docstring&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3be7a42eb17b3b478f941dfaad3f2a091b3d9de0" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;define-globalized-minor-mode&lt;/strong&gt;&lt;em&gt;global-mode mode turn-on keyword-args&amp;hellip; body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;define-globalized-minor-mode&lt;/strong&gt;&lt;em&gt;global-mode mode turn-on keyword-args&amp;hellip; body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c3698aa5f5a4cf22d04e63dba4fd63eeab2b198c" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;define-inline&lt;/strong&gt;&lt;em&gt;name args [doc] [declare] body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;define-inline&lt;/strong&gt;&lt;em&gt;name args [doc] [declare] body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1872fe945d43990f77596fefa545da1cad14ecf2" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;define-minor-mode&lt;/strong&gt;&lt;em&gt;mode doc [init-value [lighter [keymap]]] keyword-args&amp;hellip; body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;define-minor-mode&lt;/strong&gt;&lt;em&gt;mode doc [init-value [lighter [keymap]]] keyword-args&amp;hellip; body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e428f2f8e85f45dc22b5c0ef48e7d972c7378dba" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;define-obsolete-face-alias&lt;/strong&gt;&lt;em&gt;obsolete-face current-face when&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;define-obsolete-face-alias&lt;/strong&gt;&lt;em&gt;obsolete-face current-face when&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="803af6ea30a01f534dc197a816a8b6feeabe7985" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;define-obsolete-function-alias&lt;/strong&gt;&lt;em&gt;obsolete-name current-name when &amp;amp;optional doc&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;define-obsolete-function-alias&lt;/strong&gt;&lt;em&gt;obsolete-name current-name when &amp;amp;optional doc&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c1c5b6a54e8e1d18babd8fbf3277042db07db8a8" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;define-obsolete-variable-alias&lt;/strong&gt;&lt;em&gt;obsolete-name current-name &amp;amp;optional when docstring&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;define-obsolete-variable-alias&lt;/strong&gt;&lt;em&gt;obsolete-name current-name &amp;amp;optional when docstring&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="10f5376be352b9daee65a34b48f0eb2a91bc607c" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;defmacro&lt;/strong&gt;&lt;em&gt;name args [doc] [declare] body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;defmacro&lt;/strong&gt;&lt;em&gt;name args [doc] [declare] body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="78c0fc24e6b16b98abe1b0908482cec19956ca6f" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;defsubst&lt;/strong&gt;&lt;em&gt;name args [doc] [declare] [interactive] body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;defsubst&lt;/strong&gt;&lt;em&gt;name args [doc] [declare] [interactive] body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1683d10fb7854b9d19dee990d4fa2a5c7aa5855c" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;deftheme&lt;/strong&gt;&lt;em&gt;theme &amp;amp;optional doc&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;deftheme&lt;/strong&gt;&lt;em&gt;theme &amp;amp;optional doc&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8f549c138328cc6f82aa82edd990d79c318eb798" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;defun&lt;/strong&gt;&lt;em&gt;name args [doc] [declare] [interactive] body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;defun&lt;/strong&gt;&lt;em&gt;name args [doc] [declare] [interactive] body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="10c945e44b82a451a5291eaa330f70caa9d10af2" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;defvar-local&lt;/strong&gt;&lt;em&gt;variable value &amp;amp;optional docstring&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;defvar-local&lt;/strong&gt;&lt;em&gt;variable value &amp;amp;optional docstring&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cc1f8d335ca6f3d1108310f49f1d7c79312c2310" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;delay-mode-hooks&lt;/strong&gt;&lt;em&gt;body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;delay-mode-hooks&lt;/strong&gt;&lt;em&gt;body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="236c5615e3d9ad7c6a4ecbd45a98af3f3547666f" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;dolist-with-progress-reporter&lt;/strong&gt;&lt;em&gt;(var count [result]) reporter-or-message body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;dolist-with-progress-reporter&lt;/strong&gt;&lt;em&gt;(var count [result]) reporter-or-message body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="af38a7273fecb69f9c319a26123467a4b36e125d" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;dolist&lt;/strong&gt;&lt;em&gt;(var list [result]) body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;dolist&lt;/strong&gt;&lt;em&gt;(var list [result]) body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f09315db5afa839072a62fbc1535685142261f35" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;dotimes-with-progress-reporter&lt;/strong&gt;&lt;em&gt;(var count [result]) reporter-or-message body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;dotimes-with-progress-reporter&lt;/strong&gt;&lt;em&gt;(var count [result]) reporter-or-message body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7f92ffa9680e321f5b7958eb9df3da33cc00a96e" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;dotimes&lt;/strong&gt;&lt;em&gt;(var count [result]) body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;dotimes&lt;/strong&gt;&lt;em&gt;(var count [result]) body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="27132dd2125d6a24d297f0e928ce24fd5c66c2a4" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;easy-menu-define&lt;/strong&gt;&lt;em&gt;symbol maps doc menu&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;easy-menu-define&lt;/strong&gt;&lt;em&gt;symbol maps doc menu&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4202975359e6a5a35e94aebc824c1980bfa133ab" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;edebug-tracing&lt;/strong&gt;&lt;em&gt;string body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;edebug-tracing&lt;/strong&gt;&lt;em&gt;string body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="97209372ca87135e65cd9c81713566e0e5ffbbed" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;file-name-quote&lt;/strong&gt;&lt;em&gt;name&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;file-name-quote&lt;/strong&gt;&lt;em&gt;name&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d492c007d3e41ed8529a79c7de06f64a383b0bb4" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;file-name-quoted-p&lt;/strong&gt;&lt;em&gt;name&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;file-name-quoted-p&lt;/strong&gt;&lt;em&gt;name&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="84eef64536eebdfb99700969216aebc1568b1a93" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;file-name-unquote&lt;/strong&gt;&lt;em&gt;name&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;file-name-unquote&lt;/strong&gt;&lt;em&gt;name&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="726f23b904d3162d0b6b2ce258aedc6f34085b01" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;gv-define-expander&lt;/strong&gt;&lt;em&gt;name handler&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;gv-define-expander&lt;/strong&gt;&lt;em&gt;name handler&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3e8e8e6f9fb8ae64c4b81b0efb77b3aec46b1848" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;gv-define-setter&lt;/strong&gt;&lt;em&gt;name arglist &amp;amp;rest body&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;gv-define-setter&lt;/strong&gt;&lt;em&gt;name arglist &amp;amp;rest body&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1ba4267fb86a2133c14e3991e850bf82e933e6cf" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;gv-define-simple-setter&lt;/strong&gt;&lt;em&gt;name setter &amp;amp;optional fix-return&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;gv-define-simple-setter&lt;/strong&gt;&lt;em&gt;name setter &amp;amp;optional fix-return&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fe36114bc819fefed7ef2aa455dfe1201e1f3794" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;gv-letplace&lt;/strong&gt;&lt;em&gt;(getter setter) place &amp;amp;rest body&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;gv-letplace&lt;/strong&gt;&lt;em&gt;(getter setter) place &amp;amp;rest body&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4d988bb7298849df77bbbf913cc1608cf1c65a48" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;ignore-error&lt;/strong&gt;&lt;em&gt;condition body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;ignore-error&lt;/strong&gt;&lt;em&gt;condition body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c0a70bba890a42f68ebbfdbefb8d53b65ab046ba" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;ignore-errors&lt;/strong&gt;&lt;em&gt;body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;ignore-errors&lt;/strong&gt;&lt;em&gt;body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8d8cf7a6718df181f54afa400b67ca2ca8fa1da3" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;inline-const-p&lt;/strong&gt;&lt;em&gt;expression&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;inline-const-p&lt;/strong&gt;&lt;em&gt;expression&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a2f83ce40aaee4b4c13e471e1088895be676b70e" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;inline-const-val&lt;/strong&gt;&lt;em&gt;expression&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;inline-const-val&lt;/strong&gt;&lt;em&gt;expression&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="53a8c04b7bc095c6f92dc2e1ef62aceb2230f983" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;inline-error&lt;/strong&gt;&lt;em&gt;format &amp;amp;rest args&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;inline-error&lt;/strong&gt;&lt;em&gt;format &amp;amp;rest args&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="18c258c00d0a0eefa18864e32e22a05027f102ed" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;inline-letevals&lt;/strong&gt;&lt;em&gt;(bindings&amp;hellip;) body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;inline-letevals&lt;/strong&gt;&lt;em&gt;(bindings&amp;hellip;) body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7ea22905659127e33e1bae1fa9ee88c436a06ea8" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;inline-quote&lt;/strong&gt;&lt;em&gt;expression&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;inline-quote&lt;/strong&gt;&lt;em&gt;expression&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="591cc65dde8d823c972143bbff5028af79cbb9db" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;iter-defun&lt;/strong&gt;&lt;em&gt;name args [doc] [declare] [interactive] body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;iter-defun&lt;/strong&gt;&lt;em&gt;name args [doc] [declare] [interactive] body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5dec5c51dc2ec952f84f4bbfed169751066042a1" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;iter-do&lt;/strong&gt;&lt;em&gt;(var iterator) body &amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;iter-do&lt;/strong&gt;&lt;em&gt;(var iterator) body &amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6af415e6cbf9f96bba0dce565e09bab755f1b4a1" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;iter-lambda&lt;/strong&gt;&lt;em&gt;args [doc] [interactive] body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;iter-lambda&lt;/strong&gt;&lt;em&gt;args [doc] [interactive] body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d034239c1317860ddb076eb18efff19e3bf9b86f" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;iter-yield-from&lt;/strong&gt;&lt;em&gt;iterator&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;iter-yield-from&lt;/strong&gt;&lt;em&gt;iterator&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8295211938d4a3f738add01d06599196ba528680" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;iter-yield&lt;/strong&gt;&lt;em&gt;value&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;iter-yield&lt;/strong&gt;&lt;em&gt;value&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fb4abdbc2718878523fc62e401ee9bbb454e720e" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;lambda&lt;/strong&gt;&lt;em&gt;args [doc] [interactive] body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;lambda&lt;/strong&gt;&lt;em&gt;args [doc] [interactive] body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="97e12fdbcb9c7d29cfa4fb4a4d5bebd3b572b4be" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;lazy-completion-table&lt;/strong&gt;&lt;em&gt;var fun&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;lazy-completion-table&lt;/strong&gt;&lt;em&gt;var fun&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a13b390be25a1fbc366c265b47e90db671786c62" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;let-alist&lt;/strong&gt;&lt;em&gt;alist body&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;let-alist&lt;/strong&gt;&lt;em&gt;alist body&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0ff539998c76c30f04c81c659cfe2406d40230c9" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;make-help-screen&lt;/strong&gt;&lt;em&gt;fname help-line help-text help-map&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;make-help-screen&lt;/strong&gt;&lt;em&gt;fname help-line help-text help-map&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bcb098a03ed9e790b3a8274d37d20c47f9829b78" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;minibuffer-with-setup-hook&lt;/strong&gt;&lt;em&gt;function &amp;amp;rest body&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;minibuffer-with-setup-hook&lt;/strong&gt;&lt;em&gt;function &amp;amp;rest body&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8438b00f04bfd18b4b0ae35e53a7cc991b2b59c9" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;noreturn&lt;/strong&gt;&lt;em&gt;form&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;noreturn&lt;/strong&gt;&lt;em&gt;form&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cec782422ca74e562fbd1f338919db0b374e18fc" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;pcase-defmacro&lt;/strong&gt;&lt;em&gt;name args [doc] &amp;amp;rest body&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;pcase-defmacro&lt;/strong&gt;&lt;em&gt;name args [doc] &amp;amp;rest body&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cbac1c3a887c3fb24e6cc7cf54c7c2199087fe99" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;pcase-dolist&lt;/strong&gt;&lt;em&gt;(pattern list) body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;pcase-dolist&lt;/strong&gt;&lt;em&gt;(pattern list) body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0c05dbc3c6db6b261f36f043c6e80c8f33eda5de" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;pcase-let*&lt;/strong&gt;&lt;em&gt;bindings body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;pcase-let*&lt;/strong&gt;&lt;em&gt;bindings body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bb51fe5b0cf3705a47723c876b1e4bcd04dc577a" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;pcase-let&lt;/strong&gt;&lt;em&gt;bindings body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;pcase-let&lt;/strong&gt;&lt;em&gt;bindings body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ca87b97e541c841df38930296559cb00658e2768" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;pcase&lt;/strong&gt;&lt;em&gt;expression &amp;amp;rest clauses&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;pcase&lt;/strong&gt;&lt;em&gt;expression &amp;amp;rest clauses&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="983e88ae1faa1be0650589312d5418fdde60f1bc" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;pop&lt;/strong&gt;&lt;em&gt;listname&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;pop&lt;/strong&gt;&lt;em&gt;listname&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8e0e2b6a982aeda0e4decaf96d35ea59a59bd598" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;provide-theme&lt;/strong&gt;&lt;em&gt;theme&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;provide-theme&lt;/strong&gt;&lt;em&gt;theme&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1dc602f484a77596e515278730a111ba18108235" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;push&lt;/strong&gt;&lt;em&gt;element listname&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;push&lt;/strong&gt;&lt;em&gt;element listname&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f156a8123bbcf74aa52f2b693a342c402f146879" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;remove-function&lt;/strong&gt;&lt;em&gt;place function&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;remove-function&lt;/strong&gt;&lt;em&gt;place function&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dade05721b4bb5b2388ba9e36428808b0bd35b85" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;rx-define&lt;/strong&gt;&lt;em&gt;name [arglist] rx-form&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;rx-define&lt;/strong&gt;&lt;em&gt;name [arglist] rx-form&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="96bddb173e4fc87b0212f01a02bc2ff46662fd79" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;rx-let-eval&lt;/strong&gt;&lt;em&gt;bindings body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;rx-let-eval&lt;/strong&gt;&lt;em&gt;bindings body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0f690b0183cee377b178ae7b310b55bed43dc046" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;rx-let&lt;/strong&gt;&lt;em&gt;(bindings&amp;hellip;) body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;rx-let&lt;/strong&gt;&lt;em&gt;(bindings&amp;hellip;) body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6b7d03766c09f7e22083ae5f1e5632dbe96a4075" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;rx&lt;/strong&gt;&lt;em&gt;rx-expr&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;rx&lt;/strong&gt;&lt;em&gt;rx-expr&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7e38445717db19d10c7b2ff0da1e3c8e5606a741" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;save-mark-and-excursion&lt;/strong&gt;&lt;em&gt;body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;save-mark-and-excursion&lt;/strong&gt;&lt;em&gt;body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d9f08975e9fff445dfb403167bb2325ccb174e76" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;save-match-data&lt;/strong&gt;&lt;em&gt;body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;save-match-data&lt;/strong&gt;&lt;em&gt;body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="92793bf9d32a9540658805cb43a3ae0efa7f3128" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;save-selected-window&lt;/strong&gt;&lt;em&gt;forms&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;save-selected-window&lt;/strong&gt;&lt;em&gt;forms&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e56a36e57644762b26c7a8043ad96444679ee21f" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;save-window-excursion&lt;/strong&gt;&lt;em&gt;forms&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;save-window-excursion&lt;/strong&gt;&lt;em&gt;forms&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="12a277b9203d5ab428dff62199f053203e4f9360" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;seq-doseq&lt;/strong&gt;&lt;em&gt;(var sequence) body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;seq-doseq&lt;/strong&gt;&lt;em&gt;(var sequence) body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b835674eb567909d999b1d3adb5b36f56b21eb76" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;seq-let&lt;/strong&gt;&lt;em&gt;var-sequence val-sequence body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;seq-let&lt;/strong&gt;&lt;em&gt;var-sequence val-sequence body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e1c8aece33f7cb04f9bb4e8e78e941ba25f10c8a" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;setf&lt;/strong&gt;&lt;em&gt;[place form]&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;setf&lt;/strong&gt;&lt;em&gt;[place form]&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9ae20fe71c0e147bb6bc4871d96f5e92f5c5660a" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;setq-local&lt;/strong&gt;&lt;em&gt;&amp;amp;rest pairs&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;setq-local&lt;/strong&gt;&lt;em&gt;&amp;amp;rest pairs&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7fc00650723cfa16788a6eb8c490f8e2cbe554c7" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;thunk-delay&lt;/strong&gt;&lt;em&gt;forms&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;thunk-delay&lt;/strong&gt;&lt;em&gt;forms&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f74169099eddfe8865dcdf5990bc129a1fdc6673" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;thunk-let*&lt;/strong&gt;&lt;em&gt;(bindings&amp;hellip;) forms&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;thunk-let*&lt;/strong&gt;&lt;em&gt;(bindings&amp;hellip;) forms&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2a1e217877c5526cceda285dd42d4924b08e82f6" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;thunk-let&lt;/strong&gt;&lt;em&gt;(bindings&amp;hellip;) forms&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;thunk-let&lt;/strong&gt;&lt;em&gt;(bindings&amp;hellip;) forms&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="766201ee854ac160680cf24ccec173e582e1a7ed" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;track-mouse&lt;/strong&gt;&lt;em&gt;body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;track-mouse&lt;/strong&gt;&lt;em&gt;body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="feb84a0ba8e8559be9ca8af3789ff323f8333f22" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;unless&lt;/strong&gt;&lt;em&gt;condition forms&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;unless&lt;/strong&gt;&lt;em&gt;condition forms&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d5aff66224e617a69f0607a954cf4ce95d91c0fc" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;when&lt;/strong&gt;&lt;em&gt;condition then-forms&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;when&lt;/strong&gt;&lt;em&gt;condition then-forms&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f205733ce1922f5715da64c2f9555232afd3f01c" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;while-no-input&lt;/strong&gt;&lt;em&gt;body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;while-no-input&lt;/strong&gt;&lt;em&gt;body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f712914bd7ea1c83173b9e57d39ac648cc864f03" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;with-case-table&lt;/strong&gt;&lt;em&gt;table body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;with-case-table&lt;/strong&gt;&lt;em&gt;table body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="756ee1443c1beb536eabc9fa307af9516c8aef78" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;with-coding-priority&lt;/strong&gt;&lt;em&gt;coding-systems &amp;amp;rest body&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;with-coding-priority&lt;/strong&gt;&lt;em&gt;coding-systems &amp;amp;rest body&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b0626d3bcff6d0f9b11bce251e24405f3aef3212" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;with-connection-local-variables&lt;/strong&gt;&lt;em&gt;&amp;amp;rest body&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;with-connection-local-variables&lt;/strong&gt;&lt;em&gt;&amp;amp;rest body&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e90a90d3854565590ceddc4b00fa70821a122a93" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;with-current-buffer-window&lt;/strong&gt;&lt;em&gt;buffer-or-name action quit-function &amp;amp;rest body&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;with-current-buffer-window&lt;/strong&gt;&lt;em&gt;buffer-or-name action quit-function &amp;amp;rest body&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6e67efe0226ce402a3b6577c2572b74269dde5f8" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;with-current-buffer&lt;/strong&gt;&lt;em&gt;buffer-or-name body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;with-current-buffer&lt;/strong&gt;&lt;em&gt;buffer-or-name body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a213d0fd2a350c51fd6e821ffbef2c3c4e957b3f" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;with-demoted-errors&lt;/strong&gt;&lt;em&gt;format body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;with-demoted-errors&lt;/strong&gt;&lt;em&gt;format body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="92216dc544bae7ab562994e1580bab8f27e5c500" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;with-displayed-buffer-window&lt;/strong&gt;&lt;em&gt;buffer-or-name action quit-function &amp;amp;rest body&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;with-displayed-buffer-window&lt;/strong&gt;&lt;em&gt;buffer-or-name action quit-function &amp;amp;rest body&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="02e7d013fbb53c92f365f47d71935d53a79d3a44" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;with-eval-after-load&lt;/strong&gt;&lt;em&gt;library body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;with-eval-after-load&lt;/strong&gt;&lt;em&gt;library body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3ef9c7bbb2f8fd032cb894c0974bac62ca556b08" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;with-file-modes&lt;/strong&gt;&lt;em&gt;mode body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;with-file-modes&lt;/strong&gt;&lt;em&gt;mode body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2e1ad0b0fa15e75e81fefccc043649d47a0ec7e8" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;with-help-window&lt;/strong&gt;&lt;em&gt;buffer-or-name body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;with-help-window&lt;/strong&gt;&lt;em&gt;buffer-or-name body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fe85851374c7d77e353d19f39d6c72494baf5727" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;with-local-quit&lt;/strong&gt;&lt;em&gt;body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;with-local-quit&lt;/strong&gt;&lt;em&gt;body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bf3fce278bf45ed1fb14e057cc0160271c67cbe1" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;with-mutex&lt;/strong&gt;&lt;em&gt;mutex body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;with-mutex&lt;/strong&gt;&lt;em&gt;mutex body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b5ce9ef0c5615794d7bdaada637134dc5ef72f95" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;with-output-to-string&lt;/strong&gt;&lt;em&gt;body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;with-output-to-string&lt;/strong&gt;&lt;em&gt;body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="145e9acb2514daffd471084b4b74175db21ac6c3" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;with-output-to-temp-buffer&lt;/strong&gt;&lt;em&gt;buffer-name body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;con &lt;/strong&gt;&lt;em&gt;cuerpo de nombre de b&amp;uacute;fer de &lt;/em&gt;&lt;strong&gt;salida a b&amp;uacute;fer temporal &lt;/strong&gt;&lt;em&gt;&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="014aa5fdf2960526d77b8827eae2e874906c5c72" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;with-selected-window&lt;/strong&gt;&lt;em&gt;window forms&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;em&gt;formularios de &lt;/em&gt;&lt;strong&gt;ventana con &lt;/strong&gt;&lt;em&gt;ventana &lt;/em&gt;&lt;strong&gt;seleccionada &lt;/strong&gt;&lt;em&gt;...&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a68f1966ed297f73ea9922e372523354a6209aeb" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;with-silent-modifications&lt;/strong&gt;&lt;em&gt;body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;em&gt;cuerpo con &lt;/em&gt;&lt;strong&gt;modificaciones silenciosas &lt;/strong&gt;&lt;em&gt;...&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1b76c740d791472ee05bb84bd685f4830fbd0565" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;with-syntax-table&lt;/strong&gt;&lt;em&gt;table body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;em&gt;cuerpo de tabla &lt;/em&gt;&lt;strong&gt;with-syntax-table &lt;/strong&gt;&lt;em&gt;&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7179c68d1d61234db5bb28f842f04ab503193f52" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;with-temp-buffer-window&lt;/strong&gt;&lt;em&gt;buffer-or-name action quit-function body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;con-temp-buffer-window &lt;/strong&gt;&lt;em&gt;buffer-or-name action quit-function body&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cb335e848f2b8117c60546cedb994f0aab8f2d72" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;with-temp-buffer&lt;/strong&gt;&lt;em&gt;body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;con &lt;/strong&gt;&lt;em&gt;cuerpo de &lt;/em&gt;&lt;strong&gt;b&amp;uacute;fer temporal &lt;/strong&gt;&lt;em&gt;&amp;hellip;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="68e9e5f62833f7dad75fa42c04a754f63c197fe2" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;with-temp-file&lt;/strong&gt;&lt;em&gt;file body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;con &lt;/strong&gt;&lt;em&gt;el cuerpo del archivo &lt;/em&gt;&lt;strong&gt;temporal &lt;/strong&gt;&lt;em&gt;...&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6e02315ac7e8b3f0ae1f5ca75a9f6f493bcaeceb" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;with-temp-message&lt;/strong&gt;&lt;em&gt;message &amp;amp;rest body&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;mensaje con &lt;/strong&gt;&lt;em&gt;mensaje &lt;/em&gt;&lt;strong&gt;temporal &lt;/strong&gt;&lt;em&gt;y cuerpo de descanso&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="87f26c950e83c00d565896bc264176d651cbc638" translate="yes" xml:space="preserve">
          <source>Macro: &lt;strong&gt;with-timeout&lt;/strong&gt;&lt;em&gt;(seconds timeout-forms&amp;hellip;) body&amp;hellip;&lt;/em&gt;</source>
          <target state="translated">Macro: &lt;strong&gt;sin tiempo de espera &lt;/strong&gt;&lt;em&gt;(segundos formas de tiempo de espera ...) cuerpo ...&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="899bd694d29ace1be956ab35177075021977560b" translate="yes" xml:space="preserve">
          <source>Macros</source>
          <target state="translated">Macros</target>
        </trans-unit>
        <trans-unit id="b7ffee61760e61c23c93306e84f4ed865540a241" translate="yes" xml:space="preserve">
          <source>Macros and Byte Compilation</source>
          <target state="translated">Compilación de macros y bytes</target>
        </trans-unit>
        <trans-unit id="e9174412561f9b06e7358a460619f423a936460d" translate="yes" xml:space="preserve">
          <source>Macros are a way to extend the Lisp language.</source>
          <target state="translated">Las macros son una forma de extender el lenguaje de Lisp.</target>
        </trans-unit>
        <trans-unit id="df1edfc722b17bf0432a6a39f4d123de99bb02e1" translate="yes" xml:space="preserve">
          <source>Macros can do this because they operate on the unevaluated expressions for the arguments, not on the argument values as functions do. They can therefore construct an expansion containing these argument expressions or parts of them.</source>
          <target state="translated">Las macros pueden hacer esto porque operan sobre las expresiones no evaluadas de los argumentos,no sobre los valores de los argumentos como lo hacen las funciones.Por lo tanto,pueden construir una expansión que contenga estas expresiones de los argumentos o partes de ellos.</target>
        </trans-unit>
        <trans-unit id="86ad4286948aac2e22fb320469457597f40e25e9" translate="yes" xml:space="preserve">
          <source>Macros like &lt;code&gt;save-window-excursion&lt;/code&gt;, &lt;code&gt;with-selected-window&lt;/code&gt; or &lt;code&gt;with-current-buffer&lt;/code&gt; can be used when running window change functions.</source>
          <target state="translated">Se pueden usar macros como &lt;code&gt;save-window-excursion&lt;/code&gt; , &lt;code&gt;with-selected-window&lt;/code&gt; o &lt;code&gt;with-current-buffer&lt;/code&gt; al ejecutar funciones de cambio de ventana.</target>
        </trans-unit>
        <trans-unit id="8609149c2452193a39482806645c173c455fdb7e" translate="yes" xml:space="preserve">
          <source>Macros often need to construct large list structures from a mixture of constants and nonconstant parts. To make this easier, use the &amp;lsquo;</source>
          <target state="translated">Las macros a menudo necesitan construir grandes estructuras de listas a partir de una mezcla de constantes y partes no constantes. Para hacer esto m&amp;aacute;s f&amp;aacute;cil, use el '</target>
        </trans-unit>
        <trans-unit id="e02a2089bfc650b4d78c5778356a47b4f6c929d4" translate="yes" xml:space="preserve">
          <source>Maintaining Undo Lists</source>
          <target state="translated">Mantenimiento de las listas de cosas que no se deben hacer</target>
        </trans-unit>
        <trans-unit id="b4800c1dbe2e7fe97716c9f437b2d989b0114297" translate="yes" xml:space="preserve">
          <source>Maintaining a public package archive entails a degree of responsibility. When Emacs users install packages from your archive, those packages can cause Emacs to run arbitrary code with the permissions of the installing user. (This is true for Emacs code in general, not just for packages.) So you should ensure that your archive is well-maintained and keep the hosting system secure.</source>
          <target state="translated">Mantener un archivo público de paquetes implica un grado de responsabilidad.Cuando los usuarios de Emacs instalan paquetes de su archivo,esos paquetes pueden hacer que Emacs ejecute un código arbitrario con los permisos del usuario que lo instala.(Esto es cierto para el código de Emacs en general,no sólo para los paquetes.)Así que deberías asegurarte de que tu archivo está bien mantenido y mantener el sistema de alojamiento seguro.</target>
        </trans-unit>
        <trans-unit id="c19746ba61877a021e38d926e000d62be983a896" translate="yes" xml:space="preserve">
          <source>Maintaining package archives.</source>
          <target state="translated">Manteniendo los archivos de los paquetes.</target>
        </trans-unit>
        <trans-unit id="606cf8196868e5f549fd1168472b48701f267c5f" translate="yes" xml:space="preserve">
          <source>Major Mode Conventions</source>
          <target state="translated">Convenciones del modo principal</target>
        </trans-unit>
        <trans-unit id="bb282fd14bccfc29a60ab093b4041c44964f43f9" translate="yes" xml:space="preserve">
          <source>Major Mode Examples</source>
          <target state="translated">Ejemplos de modos principales</target>
        </trans-unit>
        <trans-unit id="a8b5ad1cdceba549e2a4b89898c34005d52785df" translate="yes" xml:space="preserve">
          <source>Major Modes</source>
          <target state="translated">Modos principales</target>
        </trans-unit>
        <trans-unit id="cd5fed78b53dc008bcaa949f077e4002fa314735" translate="yes" xml:space="preserve">
          <source>Major and Minor Modes</source>
          <target state="translated">Modos Mayor y Menor</target>
        </trans-unit>
        <trans-unit id="e37f2a35397994a75b440b8e162b38fe39bb718b" translate="yes" xml:space="preserve">
          <source>Major modes for editing text should not define</source>
          <target state="translated">Los principales modos de edición de texto no deben definir</target>
        </trans-unit>
        <trans-unit id="4fa4f3d22c7a7ae10c0e45ce33e8b5151b9a09b1" translate="yes" xml:space="preserve">
          <source>Major modes should not alter options that are primarily a matter of user preference, such as whether Auto-Fill mode is enabled. Leave this to each user to decide. However, a major mode should customize other variables so that Auto-Fill mode will work usefully &lt;em&gt;if&lt;/em&gt; the user decides to use it.</source>
          <target state="translated">Los modos principales no deben alterar las opciones que son principalmente una cuesti&amp;oacute;n de preferencia del usuario, como si el modo Auto-Fill est&amp;aacute; habilitado. Deje que cada usuario decida. Sin embargo, un modo principal deber&amp;iacute;a personalizar otras variables para que el modo Auto-Fill funcione de manera &amp;uacute;til &lt;em&gt;si&lt;/em&gt; el usuario decide usarlo.</target>
        </trans-unit>
        <trans-unit id="d5246cd7371de3f7eda0f9bf9b7e1bf7a313c280" translate="yes" xml:space="preserve">
          <source>Major modes should run their mode hook using this function. It is similar to &lt;code&gt;run-hooks&lt;/code&gt; (see &lt;a href=&quot;hooks#Hooks&quot;&gt;Hooks&lt;/a&gt;), but it also runs &lt;code&gt;change-major-mode-after-body-hook&lt;/code&gt;, &lt;code&gt;hack-local-variables&lt;/code&gt; (when the buffer is visiting a file) (see &lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;File Local Variables&lt;/a&gt;), and &lt;code&gt;after-change-major-mode-hook&lt;/code&gt;. The last thing it does is to evaluate any &lt;code&gt;:after-hook&lt;/code&gt; forms declared by parent modes (see &lt;a href=&quot;derived-modes#Derived-Modes&quot;&gt;Derived Modes&lt;/a&gt;).</source>
          <target state="translated">Los modos principales deben ejecutar su gancho de modo utilizando esta funci&amp;oacute;n. Es similar a &lt;code&gt;run-hooks&lt;/code&gt; (ver &lt;a href=&quot;hooks#Hooks&quot;&gt;Hooks&lt;/a&gt; ), pero tambi&amp;eacute;n ejecuta &lt;code&gt;change-major-mode-after-body-hook&lt;/code&gt; , &lt;code&gt;hack-local-variables&lt;/code&gt; (cuando el b&amp;uacute;fer est&amp;aacute; visitando un archivo) (ver &lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;File Local Variables&lt;/a&gt; ), y &lt;code&gt;after-change-major-mode-hook&lt;/code&gt; . Lo &amp;uacute;ltimo que hace es evaluar cualquier formulario &lt;code&gt;:after-hook&lt;/code&gt; declarado por los modos padre (ver &lt;a href=&quot;derived-modes#Derived-Modes&quot;&gt;Modos derivados&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="2923364acdd14ce08c91c050cf84d8d42591bb6e" translate="yes" xml:space="preserve">
          <source>Major modes specialize Emacs for editing or interacting with particular kinds of text. Each buffer has exactly one major mode at a time. Every major mode is associated with a &lt;em&gt;major mode command&lt;/em&gt;, whose name should end in &amp;lsquo;</source>
          <target state="translated">Los modos principales especializan a Emacs para editar o interactuar con tipos particulares de texto. Cada b&amp;uacute;fer tiene exactamente un modo principal a la vez. Cada modo mayor est&amp;aacute; asociado con un &lt;em&gt;comando de modo mayor&lt;/em&gt; , cuyo nombre debe terminar en '</target>
        </trans-unit>
        <trans-unit id="38d00cb263c96ca2a52e27564fd94babb43bab35" translate="yes" xml:space="preserve">
          <source>Make a finalizer that will run &lt;var&gt;function&lt;/var&gt;. &lt;var&gt;function&lt;/var&gt; will be called after garbage collection when the returned finalizer object becomes unreachable. If the finalizer object is reachable only through references from finalizer objects, it does not count as reachable for the purpose of deciding whether to run &lt;var&gt;function&lt;/var&gt;. &lt;var&gt;function&lt;/var&gt; will be run once per finalizer object.</source>
          <target state="translated">Haga un finalizador que &lt;var&gt;function&lt;/var&gt; . &lt;var&gt;function&lt;/var&gt; se llamar&amp;aacute; despu&amp;eacute;s de la recolecci&amp;oacute;n de basura cuando el objeto finalizador devuelto se vuelva inalcanzable. Si el objeto finalizador es accesible solo a trav&amp;eacute;s de referencias de objetos finalizadores, no cuenta como accesible para el prop&amp;oacute;sito de decidir si ejecutar la &lt;var&gt;function&lt;/var&gt; . &lt;var&gt;function&lt;/var&gt; se ejecutar&amp;aacute; una vez por cada objeto del finalizador.</target>
        </trans-unit>
        <trans-unit id="7d05b1ed3c0802c954e67c3ed43ecc3f76f2dcb8" translate="yes" xml:space="preserve">
          <source>Make a new condition variable associated with &lt;var&gt;mutex&lt;/var&gt;. If &lt;var&gt;name&lt;/var&gt; is specified, it is a name given to the condition variable. It must be a string. The name is for debugging purposes only; it has no meaning to Emacs.</source>
          <target state="translated">Cree una nueva variable de condici&amp;oacute;n asociada con &lt;var&gt;mutex&lt;/var&gt; . Si se especifica &lt;var&gt;name&lt;/var&gt; , es un nombre dado a la variable de condici&amp;oacute;n. Debe ser una cuerda. El nombre es solo para fines de depuraci&amp;oacute;n; no tiene ning&amp;uacute;n significado para Emacs.</target>
        </trans-unit>
        <trans-unit id="1c29998a0cfecf6c2e9ce2a81215d8045a8a6c92" translate="yes" xml:space="preserve">
          <source>Make numbered backups if the visited file already has numbered backups; otherwise, do not. This is the default.</source>
          <target state="translated">Haga copias de seguridad numeradas si el archivo visitado ya tiene copias de seguridad numeradas;de lo contrario,no lo haga.Este es el valor predeterminado.</target>
        </trans-unit>
        <trans-unit id="2da90c1787d3c7d351f1c46baa7a638097f08e65" translate="yes" xml:space="preserve">
          <source>Make numbered backups.</source>
          <target state="translated">Haga copias de seguridad numeradas.</target>
        </trans-unit>
        <trans-unit id="711b2ff4a299052a936b40c6f84cbfef1eba50db" translate="yes" xml:space="preserve">
          <source>Make sure &lt;code&gt;jit-lock-contextually&lt;/code&gt; is set and rely on it doing its job. This will only rehighlight the part of the construct that follows the actual change, and will do it after a short delay. This only works if the highlighting of the various parts of your multiline construct never depends on text in subsequent lines. Since &lt;code&gt;jit-lock-contextually&lt;/code&gt; is activated by default, this can be an attractive solution.</source>
          <target state="translated">Aseg&amp;uacute;rese de que &lt;code&gt;jit-lock-contextually&lt;/code&gt; est&amp;eacute; configurado y conf&amp;iacute;e en que har&amp;aacute; su trabajo. Esto solo volver&amp;aacute; a resaltar la parte de la construcci&amp;oacute;n que sigue al cambio real y lo har&amp;aacute; despu&amp;eacute;s de un breve retraso. Esto solo funciona si el resaltado de las distintas partes de su construcci&amp;oacute;n multil&amp;iacute;nea nunca depende del texto en las l&amp;iacute;neas siguientes. Dado que &lt;code&gt;jit-lock-contextually&lt;/code&gt; est&amp;aacute; activado por defecto, esta puede ser una soluci&amp;oacute;n atractiva.</target>
        </trans-unit>
        <trans-unit id="b6a7dff46b149b27821f54fd9ae7b59aa7b81e46" translate="yes" xml:space="preserve">
          <source>Make the &lt;code&gt;rx&lt;/code&gt; definitions in &lt;var&gt;bindings&lt;/var&gt; available locally for &lt;code&gt;rx&lt;/code&gt; macro invocations in &lt;var&gt;body&lt;/var&gt;, which is then evaluated.</source>
          <target state="translated">Haga que las definiciones de &lt;code&gt;rx&lt;/code&gt; en los &lt;var&gt;bindings&lt;/var&gt; est&amp;eacute;n disponibles localmente para las invocaciones de macros de &lt;code&gt;rx&lt;/code&gt; en el &lt;var&gt;body&lt;/var&gt; , que luego se eval&amp;uacute;a.</target>
        </trans-unit>
        <trans-unit id="7cbe1d5e07a300b4e199aa52e31ab4c25575ef27" translate="yes" xml:space="preserve">
          <source>Making Backup Files</source>
          <target state="translated">Hacer copias de seguridad de los archivos</target>
        </trans-unit>
        <trans-unit id="d519807d2832f393ececd53cc3b5b0781e852aed" translate="yes" xml:space="preserve">
          <source>Making Buttons</source>
          <target state="translated">Haciendo botones</target>
        </trans-unit>
        <trans-unit id="6bc49c91daf67a006b0afd80b17ad707dc94b52d" translate="yes" xml:space="preserve">
          <source>Making Certain File Names &amp;ldquo;Magic&amp;rdquo;</source>
          <target state="translated">Hacer que ciertos nombres de archivos sean &amp;ldquo;m&amp;aacute;gicos&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="c34b468d532d0ce0f0dafb7d482d36723b3412cd" translate="yes" xml:space="preserve">
          <source>Making Certain File Names “Magic”</source>
          <target state="translated">Hacer que ciertos nombres de archivos sean &quot;mágicos&quot;</target>
        </trans-unit>
        <trans-unit id="c51c6eff7a755274f117eedefbb312175db7a807" translate="yes" xml:space="preserve">
          <source>Making a command distinguish interactive calls.</source>
          <target state="translated">Haciendo que un comando distinga las llamadas interactivas.</target>
        </trans-unit>
        <trans-unit id="7318dd947ef8c106ed8ecd66b4999fa87252517d" translate="yes" xml:space="preserve">
          <source>Making a frame the child of another.</source>
          <target state="translated">Haciendo un marco el hijo de otro.</target>
        </trans-unit>
        <trans-unit id="a4f8e97640cd04a362c1fe6f0e955802fe3826fe" translate="yes" xml:space="preserve">
          <source>Making a frame visible usually makes all its child frames (and their descendants) visible as well (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;).</source>
          <target state="translated">Hacer que un marco sea visible generalmente hace que todos sus marcos secundarios (y sus descendientes) tambi&amp;eacute;n sean visibles (consulte &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Marcos&lt;/a&gt; secundarios ).</target>
        </trans-unit>
        <trans-unit id="681222f25961ab30aded517088045711c219585c" translate="yes" xml:space="preserve">
          <source>Making a function inline often makes its function calls run faster. But it also has disadvantages. For one thing, it reduces flexibility; if you change the definition of the function, calls already inlined still use the old definition until you recompile them.</source>
          <target state="translated">Hacer una función en línea a menudo hace que sus llamadas de función se ejecuten más rápido.Pero también tiene desventajas.Por un lado,reduce la flexibilidad;si cambias la definición de la función,las llamadas ya inline siguen usando la antigua definición hasta que las recompongas.</target>
        </trans-unit>
        <trans-unit id="f2089d7853bf8479df80e0abc427bb46a0ae24ca" translate="yes" xml:space="preserve">
          <source>Making a simple menu.</source>
          <target state="translated">Haciendo un simple menú.</target>
        </trans-unit>
        <trans-unit id="8439e43257d843b9c56d5b30e329b96824cfd5a0" translate="yes" xml:space="preserve">
          <source>Making a trace buffer is not the same thing as using trace execution mode (see &lt;a href=&quot;edebug-execution-modes#Edebug-Execution-Modes&quot;&gt;Edebug Execution Modes&lt;/a&gt;).</source>
          <target state="translated">Hacer un b&amp;uacute;fer de seguimiento no es lo mismo que usar el modo de ejecuci&amp;oacute;n de seguimiento (consulte &lt;a href=&quot;edebug-execution-modes#Edebug-Execution-Modes&quot;&gt;Modos de ejecuci&amp;oacute;n de Edebug&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="e9a2a5554b24dffde38c378df6b1ed44b56af090" translate="yes" xml:space="preserve">
          <source>Making a variable buffer-local within a &lt;code&gt;let&lt;/code&gt;-binding for that variable does not work reliably, unless the buffer in which you do this is not current either on entry to or exit from the &lt;code&gt;let&lt;/code&gt;. This is because &lt;code&gt;let&lt;/code&gt; does not distinguish between different kinds of bindings; it knows only which variable the binding was made for.</source>
          <target state="translated">Hacer una variable buffer-local dentro de un &lt;code&gt;let&lt;/code&gt; -binding para esa variable no funciona de manera confiable, a menos que el b&amp;uacute;fer en el que haga esto no sea actual ni en la entrada ni en la salida de &lt;code&gt;let&lt;/code&gt; . Esto se debe a que &lt;code&gt;let&lt;/code&gt; no distingue entre diferentes tipos de enlaces; solo sabe para qu&amp;eacute; variable se hizo el enlace.</target>
        </trans-unit>
        <trans-unit id="1a77df4e83035e98ff42ae3948f6a82cd13e6bb3" translate="yes" xml:space="preserve">
          <source>Making and Deleting Numbered Backup Files</source>
          <target state="translated">Hacer y borrar archivos de respaldo numerados</target>
        </trans-unit>
        <trans-unit id="502cd69036f8965c9870fb3f5a0ea43cc7a0e64d" translate="yes" xml:space="preserve">
          <source>Making elements that match multiline constructs work properly has two aspects: correct &lt;em&gt;identification&lt;/em&gt; and correct &lt;em&gt;rehighlighting&lt;/em&gt;. The first means that Font Lock finds all multiline constructs. The second means that Font Lock will correctly rehighlight all the relevant text when a multiline construct is changed&amp;mdash;for example, if some of the text that was previously part of a multiline construct ceases to be part of it. The two aspects are closely related, and often getting one of them to work will appear to make the other also work. However, for reliable results you must attend explicitly to both aspects.</source>
          <target state="translated">Hacer que los elementos que coincidan con construcciones multil&amp;iacute;nea funcionen correctamente tiene dos aspectos: &lt;em&gt;identificaci&amp;oacute;n&lt;/em&gt; correcta y &lt;em&gt;realce&lt;/em&gt; correcto . El primero significa que Font Lock encuentra todas las construcciones multil&amp;iacute;nea. El segundo significa que Font Lock volver&amp;aacute; a resaltar correctamente todo el texto relevante cuando se cambie una construcci&amp;oacute;n multil&amp;iacute;nea, por ejemplo, si parte del texto que anteriormente formaba parte de una construcci&amp;oacute;n multil&amp;iacute;nea deja de ser parte de ella. Los dos aspectos est&amp;aacute;n estrechamente relacionados y, a menudo, hacer que uno de ellos funcione har&amp;aacute; que el otro tambi&amp;eacute;n funcione. Sin embargo, para obtener resultados fiables debe prestar atenci&amp;oacute;n expl&amp;iacute;citamente a ambos aspectos.</target>
        </trans-unit>
        <trans-unit id="098d22cd28360badafbde33dc08e76c95b4320aa" translate="yes" xml:space="preserve">
          <source>Making empty markers or markers at certain places.</source>
          <target state="translated">Haciendo marcadores vacíos o marcadores en ciertos lugares.</target>
        </trans-unit>
        <trans-unit id="525dbea9386c59969f103c79f75f5f87fc2f3fcd" translate="yes" xml:space="preserve">
          <source>Making keymaps active is not the only way to use them. Keymaps are also used in other ways, such as for translating events within &lt;code&gt;read-key-sequence&lt;/code&gt;. See &lt;a href=&quot;translation-keymaps#Translation-Keymaps&quot;&gt;Translation Keymaps&lt;/a&gt;.</source>
          <target state="translated">Hacer que los mapas de teclas est&amp;eacute;n activos no es la &amp;uacute;nica forma de usarlos. Los mapas de teclas tambi&amp;eacute;n se utilizan de otras formas, como para traducir eventos dentro &lt;code&gt;read-key-sequence&lt;/code&gt; . Consulte &lt;a href=&quot;translation-keymaps#Translation-Keymaps&quot;&gt;Mapas de teclas de traducci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="541485b8dffefaa5c41c8732b845592eb77e4506" translate="yes" xml:space="preserve">
          <source>Making multiple system-level windows.</source>
          <target state="translated">Haciendo múltiples ventanas a nivel de sistema.</target>
        </trans-unit>
        <trans-unit id="7aea42fe562cd12b8ebe2dbf3e921b54d524ae69" translate="yes" xml:space="preserve">
          <source>Making printable descriptions of non-printing characters and key sequences.</source>
          <target state="translated">Haciendo descripciones imprimibles de caracteres no imprimibles y secuencias de teclas.</target>
        </trans-unit>
        <trans-unit id="a8c2048498ddf380173f943840a29bb5648daa3a" translate="yes" xml:space="preserve">
          <source>Making variables and faces customizable.</source>
          <target state="translated">Haciendo que las variables y las caras sean personalizables.</target>
        </trans-unit>
        <trans-unit id="f955f72d31d474b19bd9671e9ef2cb781d7e8a14" translate="yes" xml:space="preserve">
          <source>Making windows atomic (see &lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;Atomic Windows&lt;/a&gt;) avoids breaking an existing window composition when popping up a new window. The new window will pop up outside the composition instead.</source>
          <target state="translated">Hacer que las ventanas sean at&amp;oacute;micas (consulte &lt;a href=&quot;atomic-windows#Atomic-Windows&quot;&gt;Ventanas at&amp;oacute;micas&lt;/a&gt; ) evita romper la composici&amp;oacute;n de una ventana existente al abrir una nueva ventana. La nueva ventana aparecer&amp;aacute; fuera de la composici&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="e6360d86a643276430e992495fad2c7dbbc295a9" translate="yes" xml:space="preserve">
          <source>Managing Overlays</source>
          <target state="translated">Manejo de superposiciones</target>
        </trans-unit>
        <trans-unit id="debda63f7ddcebd0c0dfe38a3022559f7abc90ec" translate="yes" xml:space="preserve">
          <source>Managing a Fixed-Size Ring of Objects</source>
          <target state="translated">Gestión de un anillo de objetos de tamaño fijo</target>
        </trans-unit>
        <trans-unit id="fdce057e8f54be9a848c2533b0fadb72cdfd78bc" translate="yes" xml:space="preserve">
          <source>Managing a fixed-size ring of objects.</source>
          <target state="translated">Manejando un anillo de objetos de tamaño fijo.</target>
        </trans-unit>
        <trans-unit id="75bd65a788f8528d79762b0605df956da0550547" translate="yes" xml:space="preserve">
          <source>Manipulating Buttons</source>
          <target state="translated">Manipulación de botones</target>
        </trans-unit>
        <trans-unit id="e43177bf40b32f1208c84ad9ee839111b074ef8c" translate="yes" xml:space="preserve">
          <source>Manipulating windows and displaying buffers.</source>
          <target state="translated">Manipular las ventanas y mostrar los buffers.</target>
        </trans-unit>
        <trans-unit id="4e836fdc2572ab23d5dc8c36bd613ac6b0f82d63" translate="yes" xml:space="preserve">
          <source>Manual</source>
          <target state="translated">Manual</target>
        </trans-unit>
        <trans-unit id="7492182c02f487bb6ba19f1d0693155fc4bbcfd0" translate="yes" xml:space="preserve">
          <source>Many 32-bit operating systems are limited to system times containing 32 bits of information in their seconds component; these systems typically handle only the times from 1901-12-13 20:45:52 through 2038-01-19 03:14:07 Universal Time. However, 64-bit and some 32-bit operating systems have larger seconds components, and can represent times far in the past or future.</source>
          <target state="translated">Muchos sistemas operativos de 32 bits están limitados a tiempos de sistema que contienen 32 bits de información en su componente de segundos;estos sistemas típicamente manejan sólo los tiempos desde 1901-12-13 20:45:52 hasta 2038-01-19 03:14:07 Tiempo Universal.Sin embargo,los sistemas operativos de 64 y algunos de 32 bits tienen componentes de segundos más grandes,y pueden representar tiempos lejanos en el pasado o el futuro.</target>
        </trans-unit>
        <trans-unit id="79e5ea61e3cd212d27c82f4613eb12341df1f45d" translate="yes" xml:space="preserve">
          <source>Many alists use lists with two elements, instead of cons cells. For example,</source>
          <target state="translated">Muchas listas usan listas con dos elementos,en lugar de células de contras.Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="cb227181787da48817c942e26d864e081c59be50" translate="yes" xml:space="preserve">
          <source>Many efforts in the design of &lt;code&gt;display-buffer&lt;/code&gt; have been given to maintain compatibility with code that uses older options like &lt;code&gt;pop-up-windows&lt;/code&gt;, &lt;code&gt;pop-up-frames&lt;/code&gt;, &lt;code&gt;pop-up-frame-alist&lt;/code&gt;, &lt;code&gt;same-window-buffer-names&lt;/code&gt; and &lt;code&gt;same-window-regexps&lt;/code&gt;. Lisp Programs and users should refrain from using these options. Above we already warned against customizing &lt;code&gt;pop-up-frame-alist&lt;/code&gt;. Here we describe how to convert the remaining options to use display actions instead.</source>
          <target state="translated">Se han realizado muchos esfuerzos en el dise&amp;ntilde;o de &lt;code&gt;display-buffer&lt;/code&gt; para mantener la compatibilidad con el c&amp;oacute;digo que usa opciones m&amp;aacute;s antiguas como &lt;code&gt;pop-up-windows&lt;/code&gt; , &lt;code&gt;pop-up-frames&lt;/code&gt; , &lt;code&gt;pop-up-frame-alist&lt;/code&gt; , &lt;code&gt;same-window-buffer-names&lt;/code&gt; y &lt;code&gt;same-window-regexps&lt;/code&gt; . Los programas Lisp y los usuarios deben abstenerse de utilizar estas opciones. Anteriormente ya advertimos contra la personalizaci&amp;oacute;n de &lt;code&gt;pop-up-frame-alist&lt;/code&gt; . Aqu&amp;iacute; describimos c&amp;oacute;mo convertir las opciones restantes para usar acciones de visualizaci&amp;oacute;n en su lugar.</target>
        </trans-unit>
        <trans-unit id="4b9ab87576a609558bdd9e7bef4e47ebe7d12419" translate="yes" xml:space="preserve">
          <source>Many filter functions sometimes (or always) insert the output in the process&amp;rsquo;s buffer, mimicking the actions of the default filter. Such filter functions need to make sure that they save the current buffer, select the correct buffer (if different) before inserting output, and then restore the original buffer. They should also check whether the buffer is still alive, update the process marker, and in some cases update the value of point. Here is how to do these things:</source>
          <target state="translated">Muchas funciones de filtro a veces (o siempre) insertan la salida en el b&amp;uacute;fer del proceso, imitando las acciones del filtro predeterminado. Estas funciones de filtro deben asegurarse de guardar el b&amp;uacute;fer actual, seleccionar el b&amp;uacute;fer correcto (si es diferente) antes de insertar la salida y luego restaurar el b&amp;uacute;fer original. Tambi&amp;eacute;n deben verificar si el b&amp;uacute;fer todav&amp;iacute;a est&amp;aacute; activo, actualizar el marcador de proceso y, en algunos casos, actualizar el valor del punto. A continuaci&amp;oacute;n, se explica c&amp;oacute;mo hacer estas cosas:</target>
        </trans-unit>
        <trans-unit id="bd93bafe41da62c5221706aaaa782fac79369062" translate="yes" xml:space="preserve">
          <source>Many functions are provided to look at the characters around point. Several simple functions are described here. See also &lt;code&gt;looking-at&lt;/code&gt; in &lt;a href=&quot;regexp-search#Regexp-Search&quot;&gt;Regexp Search&lt;/a&gt;.</source>
          <target state="translated">Se proporcionan muchas funciones para ver los personajes alrededor del punto. Aqu&amp;iacute; se describen varias funciones simples. Consulte tambi&amp;eacute;n la &lt;code&gt;looking-at&lt;/code&gt; en &lt;a href=&quot;regexp-search#Regexp-Search&quot;&gt;Regexp Search&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="99061e430b89d1f2aeaea52a5d8f4cb245b9c411" translate="yes" xml:space="preserve">
          <source>Many functions build lists, as lists reside at the very heart of Lisp. &lt;code&gt;cons&lt;/code&gt; is the fundamental list-building function; however, it is interesting to note that &lt;code&gt;list&lt;/code&gt; is used more times in the source code for Emacs than &lt;code&gt;cons&lt;/code&gt;.</source>
          <target state="translated">Muchas funciones crean listas, ya que las listas residen en el coraz&amp;oacute;n de Lisp. &lt;code&gt;cons&lt;/code&gt; es la funci&amp;oacute;n fundamental de creaci&amp;oacute;n de listas; sin embargo, es interesante notar que &lt;code&gt;list&lt;/code&gt; se usa m&amp;aacute;s veces en el c&amp;oacute;digo fuente de Emacs que &lt;code&gt;cons&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b118195a9372d8b227bd6e9ed5773cbb28b54e10" translate="yes" xml:space="preserve">
          <source>Many functions like &lt;code&gt;current-time&lt;/code&gt; and &lt;code&gt;file-attributes&lt;/code&gt; return &lt;em&gt;Lisp timestamp&lt;/em&gt; values that count seconds, and that can represent absolute time by counting seconds since the &lt;em&gt;epoch&lt;/em&gt; of 1970-01-01 00:00:00 UTC.</source>
          <target state="translated">Muchas funciones como &lt;code&gt;current-time&lt;/code&gt; y &lt;code&gt;file-attributes&lt;/code&gt; devuelven valores de &lt;em&gt;marca de tiempo Lisp&lt;/em&gt; que cuentan los segundos, y que pueden representar el tiempo absoluto contando los segundos desde la &lt;em&gt;&amp;eacute;poca&lt;/em&gt; de 1970-01-01 00:00:00 UTC.</target>
        </trans-unit>
        <trans-unit id="802952a287eebffddbd929e1038f8cdef315746b" translate="yes" xml:space="preserve">
          <source>Many functions that interact with process objects, (for instance, &lt;code&gt;process-datagram-address&lt;/code&gt;) rely on them at least having a socket before they can return a useful value. These functions will block until the socket has achieved the desired status. The recommended way of interacting with asynchronous sockets is to place a sentinel on the process, and not try to interact with it before it has changed status to &amp;lsquo;</source>
          <target state="translated">Muchas funciones que interact&amp;uacute;an con objetos de proceso (por ejemplo, &lt;code&gt;process-datagram-address&lt;/code&gt; ) dependen de que al menos tengan un conector antes de que puedan devolver un valor &amp;uacute;til. Estas funciones se bloquear&amp;aacute;n hasta que el enchufe haya alcanzado el estado deseado. La forma recomendada de interactuar con sockets asincr&amp;oacute;nicos es colocar un centinela en el proceso y no intentar interactuar con &amp;eacute;l antes de que haya cambiado de estado a '</target>
        </trans-unit>
        <trans-unit id="34060d8cea305615df58234c0c74340b92bdbb96" translate="yes" xml:space="preserve">
          <source>Many of the examples in this manual print text when they are evaluated. If you execute example code in a Lisp Interaction buffer (such as the buffer</source>
          <target state="translated">Muchos de los ejemplos de este manual se imprimen en el texto cuando se evalúan.Si ejecuta el código de ejemplo en una memoria intermedia de interacción Lisp (como la memoria intermedia</target>
        </trans-unit>
        <trans-unit id="2cb6eeef569da5d2926960dd49593235b8a4de19" translate="yes" xml:space="preserve">
          <source>Many of the file functions take one or more arguments that are file names. A file name is a string. Most of these functions expand file name arguments using the function &lt;code&gt;expand-file-name&lt;/code&gt;, so that</source>
          <target state="translated">Muchas de las funciones de archivo toman uno o m&amp;aacute;s argumentos que son nombres de archivo. Un nombre de archivo es una cadena. La mayor&amp;iacute;a de estas funciones expanden los argumentos del nombre de archivo usando la funci&amp;oacute;n &lt;code&gt;expand-file-name&lt;/code&gt; , de modo que</target>
        </trans-unit>
        <trans-unit id="856002faf420bf01c022be5d9fd84713d7c5ea95" translate="yes" xml:space="preserve">
          <source>Many of the functions described in this chapter accept markers for arguments in place of numbers. (See &lt;a href=&quot;markers#Markers&quot;&gt;Markers&lt;/a&gt;.) Since the actual arguments to such functions may be either numbers or markers, we often give these arguments the name &lt;var&gt;number-or-marker&lt;/var&gt;. When the argument value is a marker, its position value is used and its buffer is ignored.</source>
          <target state="translated">Muchas de las funciones descritas en este cap&amp;iacute;tulo aceptan marcadores para argumentos en lugar de n&amp;uacute;meros. (Ver &lt;a href=&quot;markers#Markers&quot;&gt;Marcadores&lt;/a&gt; ). Dado que los argumentos reales para tales funciones pueden ser n&amp;uacute;meros o marcadores, a menudo les damos a estos argumentos el nombre de &lt;var&gt;number-or-marker&lt;/var&gt; . Cuando el valor del argumento es un marcador, se usa su valor de posici&amp;oacute;n y se ignora su b&amp;uacute;fer.</target>
        </trans-unit>
        <trans-unit id="ede60666649bf60156d4a427812b20ad852466a6" translate="yes" xml:space="preserve">
          <source>Many of the specialized editing and I/O facilities of Emacs accept only strings. For example, you cannot insert a vector of characters into a buffer the way you can insert a string. See &lt;a href=&quot;strings-and-characters#Strings-and-Characters&quot;&gt;Strings and Characters&lt;/a&gt;.</source>
          <target state="translated">Muchas de las funciones de edici&amp;oacute;n y E / S especializadas de Emacs aceptan s&amp;oacute;lo cadenas. Por ejemplo, no puede insertar un vector de caracteres en un b&amp;uacute;fer de la misma manera que puede insertar una cadena. Consulte &lt;a href=&quot;strings-and-characters#Strings-and-Characters&quot;&gt;Caracteres y cadenas&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3629e89080e09e327cdd6dfb7f47d74e11faec96" translate="yes" xml:space="preserve">
          <source>Many of the standard Emacs functions manipulate or test the characters in the current buffer; a whole chapter in this manual is devoted to describing these functions (see &lt;a href=&quot;text#Text&quot;&gt;Text&lt;/a&gt;).</source>
          <target state="translated">Muchas de las funciones est&amp;aacute;ndar de Emacs manipulan o prueban los caracteres en el b&amp;uacute;fer actual; un cap&amp;iacute;tulo completo de este manual est&amp;aacute; dedicado a describir estas funciones (ver &lt;a href=&quot;text#Text&quot;&gt;Texto&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="d945fb20602aed4abd69b2e84e025e54ece264be" translate="yes" xml:space="preserve">
          <source>Many of the valid output streams are also valid as input streams. The difference between input and output streams is therefore more a matter of how you use a Lisp object, than of different types of object.</source>
          <target state="translated">Muchos de los flujos de salida válidos también son válidos como flujos de entrada.Por lo tanto,la diferencia entre las corrientes de entrada y de salida es más una cuestión de cómo se utiliza un objeto Lisp,que de los diferentes tipos de objeto.</target>
        </trans-unit>
        <trans-unit id="f337e3c741b2e5363e4452e88afb97f9e466bc3f" translate="yes" xml:space="preserve">
          <source>Many overlay properties have special meanings; here is a table of them:</source>
          <target state="translated">Muchas propiedades de superposición tienen significados especiales;aquí hay una tabla de ellas:</target>
        </trans-unit>
        <trans-unit id="28669a5c2141fd75140a0f1efc7ec3dc89659c90" translate="yes" xml:space="preserve">
          <source>Many text-related functions operate on a region of text defined by two buffer positions passed in arguments named &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;. These arguments should be either markers (see &lt;a href=&quot;markers#Markers&quot;&gt;Markers&lt;/a&gt;) or numeric character positions (see &lt;a href=&quot;positions#Positions&quot;&gt;Positions&lt;/a&gt;). The order of these arguments does not matter; it is all right for &lt;var&gt;start&lt;/var&gt; to be the end of the region and &lt;var&gt;end&lt;/var&gt; the beginning. For example, &lt;code&gt;(delete-region 1
10)&lt;/code&gt; and &lt;code&gt;(delete-region 10 1)&lt;/code&gt; are equivalent. An &lt;code&gt;args-out-of-range&lt;/code&gt; error is signaled if either &lt;var&gt;start&lt;/var&gt; or &lt;var&gt;end&lt;/var&gt; is outside the accessible portion of the buffer. In an interactive call, point and the mark are used for these arguments.</source>
          <target state="translated">Muchas funciones relacionadas con el texto operan en una regi&amp;oacute;n de texto definida por dos posiciones de b&amp;uacute;fer pasadas en argumentos denominados &lt;var&gt;start&lt;/var&gt; y &lt;var&gt;end&lt;/var&gt; . Estos argumentos deben ser marcadores (consulte &lt;a href=&quot;markers#Markers&quot;&gt;Marcadores&lt;/a&gt; ) o posiciones de caracteres num&amp;eacute;ricos (consulte &lt;a href=&quot;positions#Positions&quot;&gt;Posiciones&lt;/a&gt; ). El orden de estos argumentos no importa; Est&amp;aacute; bien que el &lt;var&gt;start&lt;/var&gt; sea ​​el final de la regi&amp;oacute;n y el &lt;var&gt;end&lt;/var&gt; el comienzo. Por ejemplo, &lt;code&gt;(delete-region 1 10)&lt;/code&gt; y &lt;code&gt;(delete-region 10 1)&lt;/code&gt; son equivalentes. Se &lt;code&gt;args-out-of-range&lt;/code&gt; error de argumentos fuera de rango si el &lt;var&gt;start&lt;/var&gt; o el &lt;var&gt;end&lt;/var&gt; est&amp;aacute; fuera de la parte accesible del b&amp;uacute;fer. En una llamada interactiva, el punto y la marca se utilizan para estos argumentos.</target>
        </trans-unit>
        <trans-unit id="6ed3e3bf0cc6abbeb7fc11924e0595f7cbb9b258" translate="yes" xml:space="preserve">
          <source>Many window-systems are not able to change the opacity (see &lt;a href=&quot;font-and-color-parameters#Font-and-Color-Parameters&quot;&gt;Font and Color Parameters&lt;/a&gt;) of child frames.</source>
          <target state="translated">Muchos sistemas de ventanas no pueden cambiar la opacidad (ver &lt;a href=&quot;font-and-color-parameters#Font-and-Color-Parameters&quot;&gt;Par&amp;aacute;metros de fuente y color&lt;/a&gt; ) de los marcos secundarios.</target>
        </trans-unit>
        <trans-unit id="213b455d1f0caf22fcf0e2374a037400baed7c91" translate="yes" xml:space="preserve">
          <source>Mapping Functions</source>
          <target state="translated">Funciones de mapeo</target>
        </trans-unit>
        <trans-unit id="7b7987be97e32819225bc7a4606b16bf612de0b6" translate="yes" xml:space="preserve">
          <source>Mapping for such special cases are taken from &lt;code&gt;special-uppercase&lt;/code&gt;, &lt;code&gt;special-lowercase&lt;/code&gt; and &lt;code&gt;special-titlecase&lt;/code&gt; See &lt;a href=&quot;character-properties#Character-Properties&quot;&gt;Character Properties&lt;/a&gt;.</source>
          <target state="translated">Mapeo para estos casos especiales se toman de &lt;code&gt;special-uppercase&lt;/code&gt; , &lt;code&gt;special-lowercase&lt;/code&gt; y &lt;code&gt;special-titlecase&lt;/code&gt; Ver &lt;a href=&quot;character-properties#Character-Properties&quot;&gt;Propiedades de car&amp;aacute;cter&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f093ddf02abeed7e13d39bb01f441baf4324273f" translate="yes" xml:space="preserve">
          <source>Margins for Filling</source>
          <target state="translated">Márgenes de llenado</target>
        </trans-unit>
        <trans-unit id="e693e76b5d2e33add6fdff9ff18a57f6b466043e" translate="yes" xml:space="preserve">
          <source>Mark set</source>
          <target state="translated">Juego de marcas</target>
        </trans-unit>
        <trans-unit id="40c9d9aab143333b8799668f89011a977e366648" translate="yes" xml:space="preserve">
          <source>Mark the function or macro as obsolete, similar to a call to &lt;code&gt;make-obsolete&lt;/code&gt; (see &lt;a href=&quot;obsolete-functions#Obsolete-Functions&quot;&gt;Obsolete Functions&lt;/a&gt;). &lt;var&gt;current-name&lt;/var&gt; should be a symbol (in which case the warning message says to use that instead), a string (specifying the warning message), or &lt;code&gt;nil&lt;/code&gt; (in which case the warning message gives no extra details). &lt;var&gt;when&lt;/var&gt; should be a string indicating when the function or macro was first made obsolete.</source>
          <target state="translated">Marque la funci&amp;oacute;n o macro como obsoleta, similar a una llamada a &lt;code&gt;make-obsolete&lt;/code&gt; (consulte &lt;a href=&quot;obsolete-functions#Obsolete-Functions&quot;&gt;Funciones obsoletas&lt;/a&gt; ). &lt;var&gt;current-name&lt;/var&gt; debe ser un s&amp;iacute;mbolo (en cuyo caso el mensaje de advertencia dice que lo use en su lugar), una cadena (especificando el mensaje de advertencia) o &lt;code&gt;nil&lt;/code&gt; (en cuyo caso el mensaje de advertencia no da detalles adicionales). &lt;var&gt;when&lt;/var&gt; deber&amp;iacute;a ser una cadena que indique cu&amp;aacute;ndo la funci&amp;oacute;n o macro se volvi&amp;oacute; obsoleta por primera vez.</target>
        </trans-unit>
        <trans-unit id="75ec2d229775005fdc921c3a210ff1b8c8b13b6e" translate="yes" xml:space="preserve">
          <source>Marker Insertion Types</source>
          <target state="translated">Tipos de inserción de marcadores</target>
        </trans-unit>
        <trans-unit id="20a369b8d549cf56bd368b32f6f9b7f7febde165" translate="yes" xml:space="preserve">
          <source>Marker Type</source>
          <target state="translated">Tipo de marcador</target>
        </trans-unit>
        <trans-unit id="c64fa883b0b011047af44d0deea4165129c087b1" translate="yes" xml:space="preserve">
          <source>Markers</source>
          <target state="translated">Markers</target>
        </trans-unit>
        <trans-unit id="3a15c9c37c23f1de054f9f2fb2d0661fb9245c11" translate="yes" xml:space="preserve">
          <source>Markers have no read syntax. They print in hash notation, giving the current character position and the name of the buffer.</source>
          <target state="translated">Los marcadores no tienen sintaxis de lectura.Se imprimen en notación hash,dando la posición actual del carácter y el nombre del buffer.</target>
        </trans-unit>
        <trans-unit id="90ec4189b2e9a955fa94b8f4c8d3ea5a03189fdd" translate="yes" xml:space="preserve">
          <source>Markers pointing into any sort records are left with no useful position after &lt;code&gt;sort-subr&lt;/code&gt; returns.</source>
          <target state="translated">Los marcadores que apuntan a cualquier registro de clasificaci&amp;oacute;n no tienen una posici&amp;oacute;n &amp;uacute;til despu&amp;eacute;s de que &lt;code&gt;sort-subr&lt;/code&gt; regrese.</target>
        </trans-unit>
        <trans-unit id="c6e97fbd0e2de79918f6c8ca8bf38d32ac3071bf" translate="yes" xml:space="preserve">
          <source>Markers represent positions and update automatically when the text is changed.</source>
          <target state="translated">Los marcadores representan posiciones y se actualizan automáticamente cuando se cambia el texto.</target>
        </trans-unit>
        <trans-unit id="c3ffcb290c16e09210daad56e90773ef95a42fa0" translate="yes" xml:space="preserve">
          <source>Marking multiline chunks with a text property.</source>
          <target state="translated">Marcando trozos multilínea con una propiedad de texto.</target>
        </trans-unit>
        <trans-unit id="adb842e548d37ba30e15d8d71ecca123602b790c" translate="yes" xml:space="preserve">
          <source>Marks the selected window as non-dedicated and proceeds.</source>
          <target state="translated">Marca la ventana seleccionada como no dedicada y procede.</target>
        </trans-unit>
        <trans-unit id="63136e6c72133709fdd14fe590280a9e7adfb5ae" translate="yes" xml:space="preserve">
          <source>Match &lt;var&gt;rx&lt;/var&gt;, with &lt;code&gt;zero-or-more&lt;/code&gt;, &lt;code&gt;0+&lt;/code&gt;, &lt;code&gt;one-or-more&lt;/code&gt;, &lt;code&gt;1+&lt;/code&gt;, &lt;code&gt;zero-or-one&lt;/code&gt;, &lt;code&gt;opt&lt;/code&gt; and &lt;code&gt;optional&lt;/code&gt; using greedy matching. This is the default.</source>
          <target state="translated">Coincidir con &lt;var&gt;rx&lt;/var&gt; , con &lt;code&gt;zero-or-more&lt;/code&gt; , &lt;code&gt;0+&lt;/code&gt; , &lt;code&gt;one-or-more&lt;/code&gt; , &lt;code&gt;1+&lt;/code&gt; , &lt;code&gt;zero-or-one&lt;/code&gt; , &lt;code&gt;opt&lt;/code&gt; ar y &lt;code&gt;optional&lt;/code&gt; usando la coincidencia codiciosa. Este es el predeterminado.</target>
        </trans-unit>
        <trans-unit id="2e1d4ec9e304a391aeeff942a7e3f04f60b8de56" translate="yes" xml:space="preserve">
          <source>Match &lt;var&gt;rx&lt;/var&gt;, with &lt;code&gt;zero-or-more&lt;/code&gt;, &lt;code&gt;0+&lt;/code&gt;, &lt;code&gt;one-or-more&lt;/code&gt;, &lt;code&gt;1+&lt;/code&gt;, &lt;code&gt;zero-or-one&lt;/code&gt;, &lt;code&gt;opt&lt;/code&gt; and &lt;code&gt;optional&lt;/code&gt; using non-greedy matching.</source>
          <target state="translated">Coincidir con &lt;var&gt;rx&lt;/var&gt; , con &lt;code&gt;zero-or-more&lt;/code&gt; , &lt;code&gt;0+&lt;/code&gt; , &lt;code&gt;one-or-more&lt;/code&gt; , &lt;code&gt;1+&lt;/code&gt; , &lt;code&gt;zero-or-one&lt;/code&gt; , &lt;code&gt;opt&lt;/code&gt; ar y &lt;code&gt;optional&lt;/code&gt; utilizando la coincidencia no codiciosa.</target>
        </trans-unit>
        <trans-unit id="71abe0286e229c1d876f4a021f7e016ea6b1fc99" translate="yes" xml:space="preserve">
          <source>Match a character from a named character class:</source>
          <target state="translated">Coincide con un personaje de una clase de personaje con nombre:</target>
        </trans-unit>
        <trans-unit id="ad6d6fc231dbd73dfc165b65f61e36d58bad1af7" translate="yes" xml:space="preserve">
          <source>Match a character in category &lt;var&gt;category&lt;/var&gt;, which is either one of the names below or its category character.</source>
          <target state="translated">Coincide con un personaje en la categor&amp;iacute;a de &lt;var&gt;category&lt;/var&gt; , que es uno de los nombres a continuaci&amp;oacute;n o su car&amp;aacute;cter de categor&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="de8031dd3712abe87445e83aadf5d0e6910dc120" translate="yes" xml:space="preserve">
          <source>Match a character included in all of the &lt;var&gt;charset&lt;/var&gt;s. Each &lt;var&gt;charset&lt;/var&gt; can be a character, a single-character string, an &lt;code&gt;any&lt;/code&gt; form without character classes, or an &lt;code&gt;intersection&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt; or &lt;code&gt;not&lt;/code&gt; form whose arguments are also &lt;var&gt;charset&lt;/var&gt;s.</source>
          <target state="translated">Coincide con un personaje incluido en todos los &lt;var&gt;charset&lt;/var&gt; de caracteres . Cada &lt;var&gt;charset&lt;/var&gt; puede ser un car&amp;aacute;cter, una cadena de un solo car&amp;aacute;cter, un &lt;code&gt;any&lt;/code&gt; forma sin clases de personajes, o un &lt;code&gt;intersection&lt;/code&gt; , &lt;code&gt;or&lt;/code&gt; o &lt;code&gt;not&lt;/code&gt; forma cuyos argumentos son tambi&amp;eacute;n &lt;var&gt;charset&lt;/var&gt; s.</target>
        </trans-unit>
        <trans-unit id="1d6ce8155afacb2f041062878ec1c97fa63888c6" translate="yes" xml:space="preserve">
          <source>Match a character not included in &lt;var&gt;charspec&lt;/var&gt;. &lt;var&gt;charspec&lt;/var&gt; can be a character, a single-character string, an &lt;code&gt;any&lt;/code&gt;, &lt;code&gt;not&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt;, &lt;code&gt;intersection&lt;/code&gt;, &lt;code&gt;syntax&lt;/code&gt; or &lt;code&gt;category&lt;/code&gt; form, or a character class. If &lt;var&gt;charspec&lt;/var&gt; is an &lt;code&gt;or&lt;/code&gt; form, its arguments have the same restrictions as those of &lt;code&gt;intersection&lt;/code&gt;; see below. Corresponding string regexp: &amp;lsquo;</source>
          <target state="translated">Coincide con un car&amp;aacute;cter no incluido en &lt;var&gt;charspec&lt;/var&gt; . &lt;var&gt;charspec&lt;/var&gt; puede ser un car&amp;aacute;cter, una cadena de un solo car&amp;aacute;cter, una &lt;code&gt;any&lt;/code&gt; , &lt;code&gt;not&lt;/code&gt; , &lt;code&gt;or&lt;/code&gt; , &lt;code&gt;intersection&lt;/code&gt; , &lt;code&gt;syntax&lt;/code&gt; o la &lt;code&gt;category&lt;/code&gt; la forma, o una clase de caracteres. Si &lt;var&gt;charspec&lt;/var&gt; es una forma &lt;code&gt;or&lt;/code&gt; , sus argumentos tienen las mismas restricciones que los de &lt;code&gt;intersection&lt;/code&gt; ; vea abajo. Regexp de cadena correspondiente: '</target>
        </trans-unit>
        <trans-unit id="20528df965fcdab88638f3141ed3bb0a4816a094" translate="yes" xml:space="preserve">
          <source>Match a character with syntax &lt;var&gt;syntax&lt;/var&gt;, being one of the following names:</source>
          <target state="translated">Coincide con un car&amp;aacute;cter con sintaxis de &lt;var&gt;syntax&lt;/var&gt; , siendo uno de los siguientes nombres:</target>
        </trans-unit>
        <trans-unit id="d97d65b8ec18624513dc0b5597c7a311786d6e2f" translate="yes" xml:space="preserve">
          <source>Match a single character from one of the &lt;var&gt;set&lt;/var&gt;s. Each &lt;var&gt;set&lt;/var&gt; is a character, a string representing the set of its characters, a range or a character class (see below). A range is either a hyphen-separated string like &lt;code&gt;&quot;A-Z&quot;&lt;/code&gt;, or a cons of characters like &lt;code&gt;(?A . ?Z)&lt;/code&gt;.</source>
          <target state="translated">Coincide con un solo car&amp;aacute;cter de uno de los &lt;var&gt;set&lt;/var&gt; . Cada &lt;var&gt;set&lt;/var&gt; es un car&amp;aacute;cter, una cadena que representa el conjunto de sus caracteres, un rango o una clase de caracteres (ver m&amp;aacute;s abajo). Un rango es una cadena separada por guiones como &lt;code&gt;&quot;A-Z&quot;&lt;/code&gt; , o contras de caracteres como &lt;code&gt;(?A . ?Z)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2dd2fbec99fc2ab616903412ba0cff721c4c9e90" translate="yes" xml:space="preserve">
          <source>Match alphabetic characters and digits. More precisely, match characters whose Unicode &amp;lsquo;</source>
          <target state="translated">Coincide con caracteres alfab&amp;eacute;ticos y d&amp;iacute;gitos. M&amp;aacute;s precisamente, haga coincidir los caracteres cuyo Unicode '</target>
        </trans-unit>
        <trans-unit id="82708ce98f9d023741d282ec7721747edbd6f773" translate="yes" xml:space="preserve">
          <source>Match alphabetic characters. More precisely, match characters whose Unicode &amp;lsquo;</source>
          <target state="translated">Coincidir con los caracteres alfab&amp;eacute;ticos. M&amp;aacute;s precisamente, haga coincidir los caracteres cuyo Unicode '</target>
        </trans-unit>
        <trans-unit id="8bb62c1f38a88090666bab18fcce11f7a820ad8a" translate="yes" xml:space="preserve">
          <source>Match any</source>
          <target state="translated">Coincide con cualquier</target>
        </trans-unit>
        <trans-unit id="c6bedd2c326b64596143cbeea5bbc65702a26806" translate="yes" xml:space="preserve">
          <source>Match any character except a newline. Corresponding string regexp: &amp;lsquo;</source>
          <target state="translated">Coincide con cualquier car&amp;aacute;cter excepto una nueva l&amp;iacute;nea. Regexp de cadena correspondiente: '</target>
        </trans-unit>
        <trans-unit id="cc22989554162915a08cc2b0ae06291b07457a73" translate="yes" xml:space="preserve">
          <source>Match any character except whitespace,</source>
          <target state="translated">Coincide con cualquier personaje excepto con el espacio en blanco,</target>
        </trans-unit>
        <trans-unit id="7e7f303c256818204aa47a2cf16fd245fafcb2e6" translate="yes" xml:space="preserve">
          <source>Match any character that has whitespace syntax (see &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Syntax Class Table&lt;/a&gt;).</source>
          <target state="translated">Coincide con cualquier car&amp;aacute;cter que tenga sintaxis de espacios en blanco (consulte &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Tabla de clases de sintaxis&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="20fbfb2c118e7dfaf594921c0c9ef8d863759b77" translate="yes" xml:space="preserve">
          <source>Match any character that has word syntax (see &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Syntax Class Table&lt;/a&gt;).</source>
          <target state="translated">Coincide con cualquier car&amp;aacute;cter que tenga sintaxis de palabras (consulte &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Tabla de clases de sintaxis&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="68242dc98a557b85cf91e4b3c6ac38743362dde2" translate="yes" xml:space="preserve">
          <source>Match any character whose code is in the range 0&amp;ndash;31.</source>
          <target state="translated">Coincide con cualquier car&amp;aacute;cter cuyo c&amp;oacute;digo est&amp;eacute; en el rango 0&amp;ndash;31.</target>
        </trans-unit>
        <trans-unit id="a9facac9ba78f72ef2c064b0654d33707cf5d808" translate="yes" xml:space="preserve">
          <source>Match any character. Corresponding string regexp: &amp;lsquo;</source>
          <target state="translated">Match any character. Corresponding string regexp: &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="d134eaf7cc09f30a884da1beb70b95fea1c42f48" translate="yes" xml:space="preserve">
          <source>Match any non-</source>
          <target state="translated">Coincide con cualquier no-</target>
        </trans-unit>
        <trans-unit id="ef8bad91a3175348513872b6c54736f0c4acdee3" translate="yes" xml:space="preserve">
          <source>Match any punctuation character. (At present, for multibyte characters, anything that has non-word syntax.)</source>
          <target state="translated">Coincide con cualquier carácter de puntuación.(En la actualidad,para los caracteres multibyte,cualquier cosa que no tenga sintaxis de palabras.)</target>
        </trans-unit>
        <trans-unit id="b234e5cee3141027589e4ab45ac9e2ef3aef0df9" translate="yes" xml:space="preserve">
          <source>Match anything lower-case, as determined by the current case table. If &lt;code&gt;case-fold-search&lt;/code&gt; is non-nil, this also matches any upper-case letter.</source>
          <target state="translated">Match anything lower-case, as determined by the current case table. If &lt;code&gt;case-fold-search&lt;/code&gt; is non-nil, this also matches any upper-case letter.</target>
        </trans-unit>
        <trans-unit id="b2217b7ab7ecff3396b14564129755a0ed8ebb52" translate="yes" xml:space="preserve">
          <source>Match anything upper-case, as determined by the current case table. If &lt;code&gt;case-fold-search&lt;/code&gt; is non-nil, this also matches any lower-case letter.</source>
          <target state="translated">Match anything upper-case, as determined by the current case table. If &lt;code&gt;case-fold-search&lt;/code&gt; is non-nil, this also matches any lower-case letter.</target>
        </trans-unit>
        <trans-unit id="407d34a704815e72fde4647d011a88e9c5656f33" translate="yes" xml:space="preserve">
          <source>Match anywhere but at the beginning or end of a word. Corresponding string regexp: &amp;lsquo;</source>
          <target state="translated">Match anywhere but at the beginning or end of a word. Corresponding string regexp: &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="a152ee853f24a37ea457df3b8d2fdc8d7fc9b34c" translate="yes" xml:space="preserve">
          <source>Match at point. Corresponding string regexp: &amp;lsquo;</source>
          <target state="translated">Match at point. Corresponding string regexp: &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="f259a5bdb641748dc6291dbf1194b2479f6cc58c" translate="yes" xml:space="preserve">
          <source>Match at the beginning of a line. Corresponding string regexp: &amp;lsquo;</source>
          <target state="translated">Match at the beginning of a line. Corresponding string regexp: &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="381a3b6056cd0802e4c2d50199de3b52bc4cc745" translate="yes" xml:space="preserve">
          <source>Match at the beginning of a symbol. Corresponding string regexp: &amp;lsquo;</source>
          <target state="translated">Match at the beginning of a symbol. Corresponding string regexp: &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="06202c9463fb84fe0562bd42d6d713a2880e374b" translate="yes" xml:space="preserve">
          <source>Match at the beginning of a word. Corresponding string regexp: &amp;lsquo;</source>
          <target state="translated">Match at the beginning of a word. Corresponding string regexp: &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="96950b0283f2ce0a0d3b906dc2439e842ea803e8" translate="yes" xml:space="preserve">
          <source>Match at the beginning or end of a word. Corresponding string regexp: &amp;lsquo;</source>
          <target state="translated">Match at the beginning or end of a word. Corresponding string regexp: &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="44efaac71dd0cf46b4e63e407bdb35817ac76578" translate="yes" xml:space="preserve">
          <source>Match at the end of a line. Corresponding string regexp: &amp;lsquo;</source>
          <target state="translated">Match at the end of a line. Corresponding string regexp: &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="290249cf5c2235f1cd6f27816d45a80df534d2c5" translate="yes" xml:space="preserve">
          <source>Match at the end of a symbol. Corresponding string regexp: &amp;lsquo;</source>
          <target state="translated">Match at the end of a symbol. Corresponding string regexp: &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="e8ba6be4fdd0b132f04646bba49b7c6fc783a283" translate="yes" xml:space="preserve">
          <source>Match at the end of a word. Corresponding string regexp: &amp;lsquo;</source>
          <target state="translated">Match at the end of a word. Corresponding string regexp: &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="c43211f21a3160a9d519576413e4b08b88f31ae7" translate="yes" xml:space="preserve">
          <source>Match at the end of the string or buffer being matched against. Corresponding string regexp: &amp;lsquo;</source>
          <target state="translated">Match at the end of the string or buffer being matched against. Corresponding string regexp: &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="8efde31ba8632a39a1c15dd9f32b844f802c7c3d" translate="yes" xml:space="preserve">
          <source>Match at the start of the string or buffer being matched against. Corresponding string regexp: &amp;lsquo;</source>
          <target state="translated">Match at the start of the string or buffer being matched against. Corresponding string regexp: &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="b731924293870a882dd28691dfcda9844f7ce67b" translate="yes" xml:space="preserve">
          <source>Match exactly one of the &lt;var&gt;rx&lt;/var&gt;s. If all arguments are strings, characters, or &lt;code&gt;or&lt;/code&gt; forms so constrained, the longest possible match will always be used. Otherwise, either the longest match or the first (in left-to-right order) will be used. Without arguments, the expression will not match anything at all. Corresponding string regexp: &amp;lsquo;</source>
          <target state="translated">Match exactly one of the &lt;var&gt;rx&lt;/var&gt; s. If all arguments are strings, characters, or &lt;code&gt;or&lt;/code&gt; forms so constrained, the longest possible match will always be used. Otherwise, either the longest match or the first (in left-to-right order) will be used. Without arguments, the expression will not match anything at all. Corresponding string regexp: &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="7248472c4540b5bb98fb3d7078116ee5540becd2" translate="yes" xml:space="preserve">
          <source>Match horizontal whitespace. More precisely, match characters whose Unicode &amp;lsquo;</source>
          <target state="translated">Match horizontal whitespace. More precisely, match characters whose Unicode &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="39ffee8a3eb0d7a19803afa6abf19912b7bfc01e" translate="yes" xml:space="preserve">
          <source>Match the &lt;var&gt;rx&lt;/var&gt;s &lt;var&gt;n&lt;/var&gt; or more times. Greedy. Corresponding string regexp: &amp;lsquo;</source>
          <target state="translated">Match the &lt;var&gt;rx&lt;/var&gt; s &lt;var&gt;n&lt;/var&gt; or more times. Greedy. Corresponding string regexp: &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="88b7d7bd4b35ad1b528a3b8246e2f6305909616e" translate="yes" xml:space="preserve">
          <source>Match the &lt;var&gt;rx&lt;/var&gt;s at least &lt;var&gt;n&lt;/var&gt; but no more than &lt;var&gt;m&lt;/var&gt; times. Greedy. Corresponding string regexp: &amp;lsquo;</source>
          <target state="translated">Match the &lt;var&gt;rx&lt;/var&gt; s at least &lt;var&gt;n&lt;/var&gt; but no more than &lt;var&gt;m&lt;/var&gt; times. Greedy. Corresponding string regexp: &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="de1b336fa7f4a968c25a0903b00419f673937ea9" translate="yes" xml:space="preserve">
          <source>Match the &lt;var&gt;rx&lt;/var&gt;s exactly &lt;var&gt;n&lt;/var&gt; times. Corresponding string regexp: &amp;lsquo;</source>
          <target state="translated">Match the &lt;var&gt;rx&lt;/var&gt; s exactly &lt;var&gt;n&lt;/var&gt; times. Corresponding string regexp: &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="54969cf7c5583dafecdf62c967082837d0ecd45e" translate="yes" xml:space="preserve">
          <source>Match the &lt;var&gt;rx&lt;/var&gt;s in sequence. Without arguments, the expression matches the empty string. Corresponding string regexp: &amp;lsquo;</source>
          <target state="translated">Match the &lt;var&gt;rx&lt;/var&gt; s in sequence. Without arguments, the expression matches the empty string. Corresponding string regexp: &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="812a5d6c5321c4869a91d7591bbf90a4ff04128c" translate="yes" xml:space="preserve">
          <source>Match the &lt;var&gt;rx&lt;/var&gt;s once or an empty string. Greedy by default. Corresponding string regexp: &amp;lsquo;</source>
          <target state="translated">Match the &lt;var&gt;rx&lt;/var&gt; s once or an empty string. Greedy by default. Corresponding string regexp: &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="9d0e81755a90f55e663c35482e9b674dfc7de4d6" translate="yes" xml:space="preserve">
          <source>Match the &lt;var&gt;rx&lt;/var&gt;s once or an empty string. Greedy. Corresponding string regexp: &amp;lsquo;</source>
          <target state="translated">Match the &lt;var&gt;rx&lt;/var&gt; s once or an empty string. Greedy. Corresponding string regexp: &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="fd8b263c55e5ec0df49c18d0e47fbf0a1224d33d" translate="yes" xml:space="preserve">
          <source>Match the &lt;var&gt;rx&lt;/var&gt;s one or more times. Greedy by default. Corresponding string regexp: &amp;lsquo;</source>
          <target state="translated">Match the &lt;var&gt;rx&lt;/var&gt; s one or more times. Greedy by default. Corresponding string regexp: &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="2490a514c7217f45471d9b7c69875762fbd73841" translate="yes" xml:space="preserve">
          <source>Match the &lt;var&gt;rx&lt;/var&gt;s one or more times. Greedy. Corresponding string regexp: &amp;lsquo;</source>
          <target state="translated">Match the &lt;var&gt;rx&lt;/var&gt; s one or more times. Greedy. Corresponding string regexp: &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="5f0c30af008a7a0ac54edf6206107e136e38294e" translate="yes" xml:space="preserve">
          <source>Match the &lt;var&gt;rx&lt;/var&gt;s one or more times. Non-greedy. Corresponding string regexp: &amp;lsquo;</source>
          <target state="translated">Match the &lt;var&gt;rx&lt;/var&gt; s one or more times. Non-greedy. Corresponding string regexp: &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="83cd886da13deacda47e2fa48ca143a7370599e2" translate="yes" xml:space="preserve">
          <source>Match the &lt;var&gt;rx&lt;/var&gt;s or an empty string. Non-greedy. Corresponding string regexp: &amp;lsquo;</source>
          <target state="translated">Match the &lt;var&gt;rx&lt;/var&gt; s or an empty string. Non-greedy. Corresponding string regexp: &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="3ab134fd7cf12648498ed41926f7c6ef78bd3c0f" translate="yes" xml:space="preserve">
          <source>Match the &lt;var&gt;rx&lt;/var&gt;s zero or more times. Greedy by default. Corresponding string regexp: &amp;lsquo;</source>
          <target state="translated">Match the &lt;var&gt;rx&lt;/var&gt; s zero or more times. Greedy by default. Corresponding string regexp: &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="d5a7ac9731ccc96d5cf2d592aa59dafb6c31bd41" translate="yes" xml:space="preserve">
          <source>Match the &lt;var&gt;rx&lt;/var&gt;s zero or more times. Greedy. Corresponding string regexp: &amp;lsquo;</source>
          <target state="translated">Match the &lt;var&gt;rx&lt;/var&gt; s zero or more times. Greedy. Corresponding string regexp: &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="f105243e42ef3ab66e32f5d3b154f392aaed42cc" translate="yes" xml:space="preserve">
          <source>Match the &lt;var&gt;rx&lt;/var&gt;s zero or more times. Non-greedy. Corresponding string regexp: &amp;lsquo;</source>
          <target state="translated">Match the &lt;var&gt;rx&lt;/var&gt; s zero or more times. Non-greedy. Corresponding string regexp: &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="5fe3267ec0ff2cb20b90f39f1574039c8a4d6b35" translate="yes" xml:space="preserve">
          <source>Match the &lt;var&gt;rx&lt;/var&gt;s, making the matched text and position accessible in the match data. The first group in a regexp is numbered 1; subsequent groups will be numbered one higher than the previous group. Corresponding string regexp: &amp;lsquo;</source>
          <target state="translated">Match the &lt;var&gt;rx&lt;/var&gt; s, making the matched text and position accessible in the match data. The first group in a regexp is numbered 1; subsequent groups will be numbered one higher than the previous group. Corresponding string regexp: &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="d7ef5aa9b8bbb06530907d3195d5d192d80e7284" translate="yes" xml:space="preserve">
          <source>Match the character &amp;lsquo;</source>
          <target state="translated">Match the character &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="40ed76ce7b1c68d6b3c8c8bd4b855cfc96f6c033" translate="yes" xml:space="preserve">
          <source>Match the digits &amp;lsquo;</source>
          <target state="translated">Match the digits &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="365ffcf90847f5dfedeacb92fb74bfd5ac33dc8a" translate="yes" xml:space="preserve">
          <source>Match the hexadecimal digits &amp;lsquo;</source>
          <target state="translated">Match the hexadecimal digits &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="4a6978bcd14cd4f93782a8738d7349ba0d760be5" translate="yes" xml:space="preserve">
          <source>Match the literal string that is the result from evaluating the Lisp expression &lt;var&gt;expr&lt;/var&gt;. The evaluation takes place at call time, in the current lexical environment.</source>
          <target state="translated">Match the literal string that is the result from evaluating the Lisp expression &lt;var&gt;expr&lt;/var&gt; . The evaluation takes place at call time, in the current lexical environment.</target>
        </trans-unit>
        <trans-unit id="1b502a84ddadc23f3da402b6793e0b908501bce7" translate="yes" xml:space="preserve">
          <source>Match the rx form that is the result from evaluating the Lisp expression &lt;var&gt;expr&lt;/var&gt;. The evaluation takes place at macro-expansion time for &lt;code&gt;rx&lt;/code&gt;, at call time for &lt;code&gt;rx-to-string&lt;/code&gt;, in the current global environment.</source>
          <target state="translated">Match the rx form that is the result from evaluating the Lisp expression &lt;var&gt;expr&lt;/var&gt; . The evaluation takes place at macro-expansion time for &lt;code&gt;rx&lt;/code&gt; , at call time for &lt;code&gt;rx-to-string&lt;/code&gt; , in the current global environment.</target>
        </trans-unit>
        <trans-unit id="3205c51d28824b4cbb8711f257894d8bb4c2f6f1" translate="yes" xml:space="preserve">
          <source>Match the string &amp;lsquo;</source>
          <target state="translated">Match the string &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="7b75719d500955e334549481f6c7ea7b50a1ad73" translate="yes" xml:space="preserve">
          <source>Match the string regexp that is the result from evaluating the Lisp expression &lt;var&gt;expr&lt;/var&gt;. The evaluation takes place at call time, in the current lexical environment.</source>
          <target state="translated">Match the string regexp that is the result from evaluating the Lisp expression &lt;var&gt;expr&lt;/var&gt; . The evaluation takes place at call time, in the current lexical environment.</target>
        </trans-unit>
        <trans-unit id="ae757acb76ba91417eef2b42ffb76c4521c4b810" translate="yes" xml:space="preserve">
          <source>Match the text previously matched by group number &lt;var&gt;n&lt;/var&gt;. &lt;var&gt;n&lt;/var&gt; must be in the range 1&amp;ndash;9. Corresponding string regexp: &amp;lsquo;</source>
          <target state="translated">Match the text previously matched by group number &lt;var&gt;n&lt;/var&gt; . &lt;var&gt;n&lt;/var&gt; must be in the range 1&amp;ndash;9. Corresponding string regexp: &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="a9d49dbe39ad1efa260b09b12e904b32531ad43c" translate="yes" xml:space="preserve">
          <source>Match whitespace or a character matched by &lt;code&gt;graph&lt;/code&gt;.</source>
          <target state="translated">Match whitespace or a character matched by &lt;code&gt;graph&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="54273900d77a58b496b801254cfc591edb749bf9" translate="yes" xml:space="preserve">
          <source>Matches any &lt;var&gt;expval&lt;/var&gt;, and additionally let-binds &lt;var&gt;symbol&lt;/var&gt; to &lt;var&gt;expval&lt;/var&gt;, such that this binding is available to &lt;var&gt;body-forms&lt;/var&gt; (see &lt;a href=&quot;dynamic-binding#Dynamic-Binding&quot;&gt;Dynamic Binding&lt;/a&gt;).</source>
          <target state="translated">Matches any &lt;var&gt;expval&lt;/var&gt; , and additionally let-binds &lt;var&gt;symbol&lt;/var&gt; to &lt;var&gt;expval&lt;/var&gt; , such that this binding is available to &lt;var&gt;body-forms&lt;/var&gt; (see &lt;a href=&quot;dynamic-binding#Dynamic-Binding&quot;&gt;Dynamic Binding&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="132befd5d9407a174f4ad033d6cea023a4b37857" translate="yes" xml:space="preserve">
          <source>Matches any &lt;var&gt;expval&lt;/var&gt;. This is also known as &lt;em&gt;don&amp;rsquo;t care&lt;/em&gt; or &lt;em&gt;wildcard&lt;/em&gt;.</source>
          <target state="translated">Matches any &lt;var&gt;expval&lt;/var&gt; . This is also known as &lt;em&gt;don&amp;rsquo;t care&lt;/em&gt; or &lt;em&gt;wildcard&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="282c53348f7fcd0ad68d33bb9c7f6cccc54a4565" translate="yes" xml:space="preserve">
          <source>Matches if &lt;var&gt;boolean-expression&lt;/var&gt; evaluates to non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Matches if &lt;var&gt;boolean-expression&lt;/var&gt; evaluates to non- &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="257d039f7b35b3e0442ca76380b5ef90a0d77303" translate="yes" xml:space="preserve">
          <source>Matches if &lt;var&gt;expval&lt;/var&gt; equals &lt;var&gt;val&lt;/var&gt;. The comparison is done as if by &lt;code&gt;equal&lt;/code&gt; (see &lt;a href=&quot;equality-predicates#Equality-Predicates&quot;&gt;Equality Predicates&lt;/a&gt;).</source>
          <target state="translated">Matches if &lt;var&gt;expval&lt;/var&gt; equals &lt;var&gt;val&lt;/var&gt; . The comparison is done as if by &lt;code&gt;equal&lt;/code&gt; (see &lt;a href=&quot;equality-predicates#Equality-Predicates&quot;&gt;Equality Predicates&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="0b1481ca7fe064087aacfb37775ecc46665629cf" translate="yes" xml:space="preserve">
          <source>Matches if &lt;var&gt;expval&lt;/var&gt; equals the literal object. This is a special case of &lt;code&gt;'&lt;var&gt;val&lt;/var&gt;&lt;/code&gt;, above, possible because literal objects of these types are self-quoting.</source>
          <target state="translated">Matches if &lt;var&gt;expval&lt;/var&gt; equals the literal object. This is a special case of &lt;code&gt;'&lt;var&gt;val&lt;/var&gt;&lt;/code&gt; , above, possible because literal objects of these types are self-quoting.</target>
        </trans-unit>
        <trans-unit id="978883ed6eed2d6a28b654dbedeb42b8609b3fad" translate="yes" xml:space="preserve">
          <source>Matches if &lt;var&gt;expval&lt;/var&gt; is a cons cell whose &lt;code&gt;car&lt;/code&gt; matches &lt;var&gt;qpat1&lt;/var&gt; and whose &lt;code&gt;cdr&lt;/code&gt; matches &lt;var&gt;qpat2&lt;/var&gt;. This readily generalizes to lists as in &lt;code&gt;(&lt;var&gt;qpat1&lt;/var&gt;&amp;nbsp;&lt;var&gt;qpat2&lt;/var&gt;&amp;nbsp;&amp;hellip;)&lt;/code&gt;.</source>
          <target state="translated">Matches if &lt;var&gt;expval&lt;/var&gt; is a cons cell whose &lt;code&gt;car&lt;/code&gt; matches &lt;var&gt;qpat1&lt;/var&gt; and whose &lt;code&gt;cdr&lt;/code&gt; matches &lt;var&gt;qpat2&lt;/var&gt; . This readily generalizes to lists as in &lt;code&gt;(&lt;var&gt;qpat1&lt;/var&gt;&amp;nbsp;&lt;var&gt;qpat2&lt;/var&gt;&amp;nbsp;&amp;hellip;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8d421ecc7a203998190360c012b97d967bb56647" translate="yes" xml:space="preserve">
          <source>Matches if &lt;var&gt;expval&lt;/var&gt; is a vector of length &lt;var&gt;m&lt;/var&gt; whose &lt;code&gt;0&lt;/code&gt;..&lt;code&gt;(&lt;var&gt;m&lt;/var&gt;-1)&lt;/code&gt;th elements match &lt;var&gt;qpat1&lt;/var&gt;, &lt;var&gt;qpat2&lt;/var&gt; &amp;hellip; &lt;var&gt;qpatm&lt;/var&gt;, respectively.</source>
          <target state="translated">Matches if &lt;var&gt;expval&lt;/var&gt; is a vector of length &lt;var&gt;m&lt;/var&gt; whose &lt;code&gt;0&lt;/code&gt; .. &lt;code&gt;(&lt;var&gt;m&lt;/var&gt;-1)&lt;/code&gt; th elements match &lt;var&gt;qpat1&lt;/var&gt; , &lt;var&gt;qpat2&lt;/var&gt; &amp;hellip; &lt;var&gt;qpatm&lt;/var&gt; , respectively.</target>
        </trans-unit>
        <trans-unit id="7ae908cffb91a06454159f03a0002153cc9d96fb" translate="yes" xml:space="preserve">
          <source>Matches if &lt;var&gt;function&lt;/var&gt; called on &lt;var&gt;expval&lt;/var&gt; returns a value that matches &lt;var&gt;pattern&lt;/var&gt;. &lt;var&gt;function&lt;/var&gt; can take one of the forms described for &lt;code&gt;pred&lt;/code&gt;, above. Unlike &lt;code&gt;pred&lt;/code&gt;, however, &lt;code&gt;app&lt;/code&gt; tests the result against &lt;var&gt;pattern&lt;/var&gt;, rather than against a boolean truth value.</source>
          <target state="translated">Matches if &lt;var&gt;function&lt;/var&gt; called on &lt;var&gt;expval&lt;/var&gt; returns a value that matches &lt;var&gt;pattern&lt;/var&gt; . &lt;var&gt;function&lt;/var&gt; can take one of the forms described for &lt;code&gt;pred&lt;/code&gt; , above. Unlike &lt;code&gt;pred&lt;/code&gt; , however, &lt;code&gt;app&lt;/code&gt; tests the result against &lt;var&gt;pattern&lt;/var&gt; , rather than against a boolean truth value.</target>
        </trans-unit>
        <trans-unit id="739f57f309dcf068954c6199fcd5d3b33f050610" translate="yes" xml:space="preserve">
          <source>Matches if the corresponding element of &lt;var&gt;expval&lt;/var&gt; is &lt;code&gt;equal&lt;/code&gt; to the specified literal object.</source>
          <target state="translated">Matches if the corresponding element of &lt;var&gt;expval&lt;/var&gt; is &lt;code&gt;equal&lt;/code&gt; to the specified literal object.</target>
        </trans-unit>
        <trans-unit id="674ff3b825d9ae7d265a12ff2ae08223fcb7d64f" translate="yes" xml:space="preserve">
          <source>Matches if the corresponding element of &lt;var&gt;expval&lt;/var&gt; matches &lt;var&gt;pattern&lt;/var&gt;. Note that &lt;var&gt;pattern&lt;/var&gt; is any kind that &lt;code&gt;pcase&lt;/code&gt; supports. (In the example above, &lt;code&gt;second-elem&lt;/code&gt; is a &lt;var&gt;symbol&lt;/var&gt; core pattern; it therefore matches anything, and let-binds &lt;code&gt;second-elem&lt;/code&gt;.)</source>
          <target state="translated">Matches if the corresponding element of &lt;var&gt;expval&lt;/var&gt; matches &lt;var&gt;pattern&lt;/var&gt; . Note that &lt;var&gt;pattern&lt;/var&gt; is any kind that &lt;code&gt;pcase&lt;/code&gt; supports. (In the example above, &lt;code&gt;second-elem&lt;/code&gt; is a &lt;var&gt;symbol&lt;/var&gt; core pattern; it therefore matches anything, and let-binds &lt;code&gt;second-elem&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="1308a03f9d82916c80a7d812b1deda28157315b6" translate="yes" xml:space="preserve">
          <source>Matches if the predicate &lt;var&gt;function&lt;/var&gt; returns non-&lt;code&gt;nil&lt;/code&gt; when called on &lt;var&gt;expval&lt;/var&gt;. the predicate &lt;var&gt;function&lt;/var&gt; can have one of the following forms:</source>
          <target state="translated">Matches if the predicate &lt;var&gt;function&lt;/var&gt; returns non- &lt;code&gt;nil&lt;/code&gt; when called on &lt;var&gt;expval&lt;/var&gt; . the predicate &lt;var&gt;function&lt;/var&gt; can have one of the following forms:</target>
        </trans-unit>
        <trans-unit id="6d30d930e31b7cc8d8611f9ee7e28b703c1f1f15" translate="yes" xml:space="preserve">
          <source>Matches strings against the regexp &lt;var&gt;rx-expr&lt;/var&gt;&amp;hellip;, using the &lt;code&gt;rx&lt;/code&gt; regexp notation (see &lt;a href=&quot;rx-notation#Rx-Notation&quot;&gt;Rx Notation&lt;/a&gt;), as if by &lt;code&gt;string-match&lt;/code&gt;.</source>
          <target state="translated">Matches strings against the regexp &lt;var&gt;rx-expr&lt;/var&gt; &amp;hellip;, using the &lt;code&gt;rx&lt;/code&gt; regexp notation (see &lt;a href=&quot;rx-notation#Rx-Notation&quot;&gt;Rx Notation&lt;/a&gt;), as if by &lt;code&gt;string-match&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4c220368bb4219d0ac89ca454946be8bddd2829b" translate="yes" xml:space="preserve">
          <source>Matching single characters</source>
          <target state="translated">Los caracteres individuales que coinciden</target>
        </trans-unit>
        <trans-unit id="0c2d501ea6626d380ec030a4b996efde369c2ab2" translate="yes" xml:space="preserve">
          <source>Measuring the resources that your code uses.</source>
          <target state="translated">Midiendo los recursos que utiliza su código.</target>
        </trans-unit>
        <trans-unit id="03a68b7d8b854f2e082850074e2a8ddc1224e602" translate="yes" xml:space="preserve">
          <source>Memory Usage</source>
          <target state="translated">Uso de la memoria</target>
        </trans-unit>
        <trans-unit id="3b9c0cfb66cbc7f431d2be01c6c671bec7a34644" translate="yes" xml:space="preserve">
          <source>Menu Bar</source>
          <target state="translated">Barra de menú</target>
        </trans-unit>
        <trans-unit id="16caad169ee406031f21f23e1b6301b797fa0084" translate="yes" xml:space="preserve">
          <source>Menu Example</source>
          <target state="translated">Ejemplo de menú</target>
        </trans-unit>
        <trans-unit id="b12062efe3af477059c284119d8434d41ae242a3" translate="yes" xml:space="preserve">
          <source>Menu Keymaps</source>
          <target state="translated">Mapas de menú</target>
        </trans-unit>
        <trans-unit id="6fb0b0290e8b0a35d56be9fedd24c4318262e46c" translate="yes" xml:space="preserve">
          <source>Menu Separators</source>
          <target state="translated">Separadores de menú</target>
        </trans-unit>
        <trans-unit id="15c6cdd8a7fcc3254e0110b90d40dcb9521b5c10" translate="yes" xml:space="preserve">
          <source>Menus and the Keyboard</source>
          <target state="translated">Los menús y el teclado</target>
        </trans-unit>
        <trans-unit id="7ed3131770bb3cf28e7cdf82c3c9fbd8d687f5e1" translate="yes" xml:space="preserve">
          <source>Menus and the Mouse</source>
          <target state="translated">Los menús y el ratón</target>
        </trans-unit>
        <trans-unit id="c18bb98ae36a93e8052f0d6c9f161d8d49feaa19" translate="yes" xml:space="preserve">
          <source>Messages like &amp;lsquo;</source>
          <target state="translated">Messages like &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="8d546a6dea9ff90d517b51c25b35319931ae4e04" translate="yes" xml:space="preserve">
          <source>Meta</source>
          <target state="translated">Meta</target>
        </trans-unit>
        <trans-unit id="7d26ac8fefd98dd2e2239d0d83cfc7025404ed00" translate="yes" xml:space="preserve">
          <source>Meta-Character Syntax</source>
          <target state="translated">Sintaxis de los metacaracteres</target>
        </trans-unit>
        <trans-unit id="25523a0222c9047ee4b9673f05cad4ee5f070cad" translate="yes" xml:space="preserve">
          <source>Method definitions can make use of a new argument-list keyword, &lt;code&gt;&amp;amp;context&lt;/code&gt;, which introduces extra specializers that test the environment at the time the method is run. This keyword should appear after the list of required arguments, but before any &lt;code&gt;&amp;amp;rest&lt;/code&gt; or &lt;code&gt;&amp;amp;optional&lt;/code&gt; keywords. The &lt;code&gt;&amp;amp;context&lt;/code&gt; specializers look much like regular argument specializers&amp;mdash;(&lt;var&gt;expr&lt;/var&gt;&lt;var&gt;spec&lt;/var&gt;)&amp;mdash;except that &lt;var&gt;expr&lt;/var&gt; is an expression to be evaluated in the current context, and the &lt;var&gt;spec&lt;/var&gt; is a value to compare against. For example, &lt;code&gt;&amp;amp;context (overwrite-mode (eql t))&lt;/code&gt; will make the method applicable only when &lt;code&gt;overwrite-mode&lt;/code&gt; is turned on. The &lt;code&gt;&amp;amp;context&lt;/code&gt; keyword can be followed by any number of context specializers. Because the context specializers are not part of the generic function&amp;rsquo;s argument signature, they may be omitted in methods that don&amp;rsquo;t require them.</source>
          <target state="translated">Method definitions can make use of a new argument-list keyword, &lt;code&gt;&amp;amp;context&lt;/code&gt; , which introduces extra specializers that test the environment at the time the method is run. This keyword should appear after the list of required arguments, but before any &lt;code&gt;&amp;amp;rest&lt;/code&gt; or &lt;code&gt;&amp;amp;optional&lt;/code&gt; keywords. The &lt;code&gt;&amp;amp;context&lt;/code&gt; specializers look much like regular argument specializers&amp;mdash;( &lt;var&gt;expr&lt;/var&gt; &lt;var&gt;spec&lt;/var&gt; )&amp;mdash;except that &lt;var&gt;expr&lt;/var&gt; is an expression to be evaluated in the current context, and the &lt;var&gt;spec&lt;/var&gt; is a value to compare against. For example, &lt;code&gt;&amp;amp;context (overwrite-mode (eql t))&lt;/code&gt; will make the method applicable only when &lt;code&gt;overwrite-mode&lt;/code&gt; is turned on. The &lt;code&gt;&amp;amp;context&lt;/code&gt; keyword can be followed by any number of context specializers. Because the context specializers are not part of the generic function&amp;rsquo;s argument signature, they may be omitted in methods that don&amp;rsquo;t require them.</target>
        </trans-unit>
        <trans-unit id="3814dd76362cfffd02ba4b1937ed1c2c87e7844e" translate="yes" xml:space="preserve">
          <source>Microsoft Windows NT, 9X and later. The value of &lt;code&gt;system-type&lt;/code&gt; is always &lt;code&gt;windows-nt&lt;/code&gt;, e.g., even on Windows 10.</source>
          <target state="translated">Microsoft Windows NT, 9X and later. The value of &lt;code&gt;system-type&lt;/code&gt; is always &lt;code&gt;windows-nt&lt;/code&gt; , e.g., even on Windows 10.</target>
        </trans-unit>
        <trans-unit id="2767e46afcc3ac1795e792eb132101e2b44c1778" translate="yes" xml:space="preserve">
          <source>Microsoft&amp;rsquo;s DOS. Emacs compiled with DJGPP for MS-DOS binds &lt;code&gt;system-type&lt;/code&gt; to &lt;code&gt;ms-dos&lt;/code&gt; even when you run it on MS-Windows.</source>
          <target state="translated">Microsoft&amp;rsquo;s DOS. Emacs compiled with DJGPP for MS-DOS binds &lt;code&gt;system-type&lt;/code&gt; to &lt;code&gt;ms-dos&lt;/code&gt; even when you run it on MS-Windows.</target>
        </trans-unit>
        <trans-unit id="f9c9c8db7156a7448700d445deeeb649c319eb70" translate="yes" xml:space="preserve">
          <source>Minibuffer Commands</source>
          <target state="translated">Comandos del minibúster</target>
        </trans-unit>
        <trans-unit id="b66e5aaaf448e820ada310fc0fc7cfcb0f0786b0" translate="yes" xml:space="preserve">
          <source>Minibuffer Commands that Do Completion</source>
          <target state="translated">Los comandos del minibúster que hacen la finalización</target>
        </trans-unit>
        <trans-unit id="6a3f154cb3d12adeba658562da192d175d080908" translate="yes" xml:space="preserve">
          <source>Minibuffer Contents</source>
          <target state="translated">Contenido del Minibuffer</target>
        </trans-unit>
        <trans-unit id="c9ecc01b5e1b40232e2354f19e5d6b7647cfab66" translate="yes" xml:space="preserve">
          <source>Minibuffer History</source>
          <target state="translated">Historia del minibús</target>
        </trans-unit>
        <trans-unit id="5711d65bace0facc4ca32fe822109910ac6088d3" translate="yes" xml:space="preserve">
          <source>Minibuffer Miscellany</source>
          <target state="translated">Miscelánea de Minibuffer</target>
        </trans-unit>
        <trans-unit id="7af96936c990ed708387e7161673b6638521b972" translate="yes" xml:space="preserve">
          <source>Minibuffer Windows</source>
          <target state="translated">Ventanas del minibúfer</target>
        </trans-unit>
        <trans-unit id="d3a911d1b2be32f6461ffe02d45b48c543df77a1" translate="yes" xml:space="preserve">
          <source>Minibuffer commands that do completion.</source>
          <target state="translated">Los comandos del minibúfer que hacen la finalización.</target>
        </trans-unit>
        <trans-unit id="d54ac200a7fb55100cb14bfbd0ecda71c040d192" translate="yes" xml:space="preserve">
          <source>Minibuffer input is a special kind of recursive editing. It has a few special wrinkles, such as enabling display of the minibuffer and the minibuffer window, but fewer than you might suppose. Certain keys behave differently in the minibuffer, but that is only because of the minibuffer&amp;rsquo;s local map; if you switch windows, you get the usual Emacs commands.</source>
          <target state="translated">Minibuffer input is a special kind of recursive editing. It has a few special wrinkles, such as enabling display of the minibuffer and the minibuffer window, but fewer than you might suppose. Certain keys behave differently in the minibuffer, but that is only because of the minibuffer&amp;rsquo;s local map; if you switch windows, you get the usual Emacs commands.</target>
        </trans-unit>
        <trans-unit id="367762892b20350b19f7bd8cd60d6489ac911db6" translate="yes" xml:space="preserve">
          <source>Minibuffers</source>
          <target state="translated">Minibuffers</target>
        </trans-unit>
        <trans-unit id="edccf3bc0f1044797feeb7318644812ec8808a04" translate="yes" xml:space="preserve">
          <source>Minibuffers and Frames</source>
          <target state="translated">Minibuffers y marcos</target>
        </trans-unit>
        <trans-unit id="a6078aaad32f5816f061d4e9117bdbc1d7ee3400" translate="yes" xml:space="preserve">
          <source>Minimum value of &lt;code&gt;hscroll&lt;/code&gt;, set by the user via &lt;code&gt;set-window-hscroll&lt;/code&gt; (see &lt;a href=&quot;horizontal-scrolling#Horizontal-Scrolling&quot;&gt;Horizontal Scrolling&lt;/a&gt;). When only the current line is hscrolled, this describes the horizontal scrolling of lines other than the current one.</source>
          <target state="translated">Minimum value of &lt;code&gt;hscroll&lt;/code&gt; , set by the user via &lt;code&gt;set-window-hscroll&lt;/code&gt; (see &lt;a href=&quot;horizontal-scrolling#Horizontal-Scrolling&quot;&gt;Horizontal Scrolling&lt;/a&gt;). When only the current line is hscrolled, this describes the horizontal scrolling of lines other than the current one.</target>
        </trans-unit>
        <trans-unit id="64f24a9a0dc69d512190fb4f05f76bebd963ffc9" translate="yes" xml:space="preserve">
          <source>Minor Modes</source>
          <target state="translated">Modos menores</target>
        </trans-unit>
        <trans-unit id="63be5c97e7240142a22356e2f1777fc2c8d3904a" translate="yes" xml:space="preserve">
          <source>Minor modes may bind commands to key sequences consisting of</source>
          <target state="translated">Los modos menores pueden unir comandos a secuencias de teclas que consisten en</target>
        </trans-unit>
        <trans-unit id="8df431838fe5f9e1d63617cd34c66e591a88b4ec" translate="yes" xml:space="preserve">
          <source>Misc Network Facilities</source>
          <target state="translated">Instalaciones de redes diversas</target>
        </trans-unit>
        <trans-unit id="8e515a2e618367c7a4a06c28d8c1be931f8c03d1" translate="yes" xml:space="preserve">
          <source>Miscellaneous Convenience Functions for Modules</source>
          <target state="translated">Funciones de conveniencia miscelánea para los módulos</target>
        </trans-unit>
        <trans-unit id="7a052e4f76928458969464505a52746d5a78fea2" translate="yes" xml:space="preserve">
          <source>Miscellaneous Edebug Commands</source>
          <target state="translated">Varios comandos de Edebug</target>
        </trans-unit>
        <trans-unit id="a47827783224a9ce5dd490948eb1ebddc3b4d684" translate="yes" xml:space="preserve">
          <source>Miscellaneous Event Input Features</source>
          <target state="translated">Características de entrada de eventos misceláneos</target>
        </trans-unit>
        <trans-unit id="b29522452ab33d2ad0ba96dda015a6308c7b2c75" translate="yes" xml:space="preserve">
          <source>Miscellaneous System Events</source>
          <target state="translated">Diversos eventos del sistema</target>
        </trans-unit>
        <trans-unit id="03e893e20e6aedf9fdd003184f4239c14fa31543" translate="yes" xml:space="preserve">
          <source>Miscellaneous commands.</source>
          <target state="translated">Comandos misceláneos.</target>
        </trans-unit>
        <trans-unit id="513913e8f1b8df71a57aef2147717f04b5a5ff53" translate="yes" xml:space="preserve">
          <source>Miscellaneous.</source>
          <target state="translated">Miscellaneous.</target>
        </trans-unit>
        <trans-unit id="b841515cb79574557871d33c6c685c8b786e812e" translate="yes" xml:space="preserve">
          <source>Mode Hooks</source>
          <target state="translated">Ganchos de modo</target>
        </trans-unit>
        <trans-unit id="1660228964a84777507d5db30661351095dda9bc" translate="yes" xml:space="preserve">
          <source>Mode Line Basics</source>
          <target state="translated">Conceptos básicos de la línea de modo</target>
        </trans-unit>
        <trans-unit id="92a5ca248b99dee1b2ae58ed98e940b4cbfc322d" translate="yes" xml:space="preserve">
          <source>Mode Line Format</source>
          <target state="translated">Formato de línea de modo</target>
        </trans-unit>
        <trans-unit id="1a4b9da8f1b1256a549fb046003a7eb28cd18a68" translate="yes" xml:space="preserve">
          <source>Mode line construct for miscellaneous information. By default, this shows the information specified by &lt;code&gt;global-mode-string&lt;/code&gt;.</source>
          <target state="translated">Mode line construct for miscellaneous information. By default, this shows the information specified by &lt;code&gt;global-mode-string&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="79f5b225cffab11e22dc40b6f05abef1d33d1561" translate="yes" xml:space="preserve">
          <source>Modes</source>
          <target state="translated">Modes</target>
        </trans-unit>
        <trans-unit id="72b2168254baad89e5c1ab9acb3b6040544bd8fb" translate="yes" xml:space="preserve">
          <source>Modes derived from Tabulated List mode should call this after setting the above variables (in particular, only after setting &lt;code&gt;tabulated-list-format&lt;/code&gt;).</source>
          <target state="translated">Modes derived from Tabulated List mode should call this after setting the above variables (in particular, only after setting &lt;code&gt;tabulated-list-format&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f37280f5c8b796776063d76ead3db5950069843b" translate="yes" xml:space="preserve">
          <source>Modes for program source code should set this to &lt;code&gt;left-to-right&lt;/code&gt;. Prog mode does this by default, so modes derived from Prog mode do not need to set this explicitly (see &lt;a href=&quot;basic-major-modes#Basic-Major-Modes&quot;&gt;Basic Major Modes&lt;/a&gt;).</source>
          <target state="translated">Modes for program source code should set this to &lt;code&gt;left-to-right&lt;/code&gt; . Prog mode does this by default, so modes derived from Prog mode do not need to set this explicitly (see &lt;a href=&quot;basic-major-modes#Basic-Major-Modes&quot;&gt;Basic Major Modes&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="b5803becd9e65746e44a5fb6727af1b147951979" translate="yes" xml:space="preserve">
          <source>Modes such as Dired and Rmail make buffers read-only when altering the contents with the usual editing commands would probably be a mistake.</source>
          <target state="translated">Modos como Dired y Rmail hacen que los buffers sean de sólo lectura cuando se altera el contenido con los comandos de edición habituales,probablemente sería un error.</target>
        </trans-unit>
        <trans-unit id="3e0d60bdae51618466cc5411408a226c74100aa3" translate="yes" xml:space="preserve">
          <source>Modes such as Dired mode, in which the text being edited does not consist of a file&amp;rsquo;s contents but can be regenerated in some other fashion, can give this variable a buffer-local value that is a special function to regenerate the contents.</source>
          <target state="translated">Modes such as Dired mode, in which the text being edited does not consist of a file&amp;rsquo;s contents but can be regenerated in some other fashion, can give this variable a buffer-local value that is a special function to regenerate the contents.</target>
        </trans-unit>
        <trans-unit id="2a24cfeea8738c2ef8dbe6b0b8299a0d52050626" translate="yes" xml:space="preserve">
          <source>Modes that other modes are often derived from.</source>
          <target state="translated">Modos de los que a menudo se derivan otros modos.</target>
        </trans-unit>
        <trans-unit id="9b381b9e6c64fcffa354dbacacd2ce3c1b8c0754" translate="yes" xml:space="preserve">
          <source>Modifying Existing List Structure</source>
          <target state="translated">Modificación de la estructura de la lista existente</target>
        </trans-unit>
        <trans-unit id="c3379a41bf4759b0d4c70d3387480936a6059e23" translate="yes" xml:space="preserve">
          <source>Modifying List Variables</source>
          <target state="translated">Modificación de las variables de la lista</target>
        </trans-unit>
        <trans-unit id="df42359d215a53db6ed9a7c4b8cbe68fd027284d" translate="yes" xml:space="preserve">
          <source>Modifying Menus</source>
          <target state="translated">Modificación de los menús</target>
        </trans-unit>
        <trans-unit id="06b27e179bc67d2eb79dac2d1e6d2015650bd5ca" translate="yes" xml:space="preserve">
          <source>Modifying Strings</source>
          <target state="translated">Modificación de las cuerdas</target>
        </trans-unit>
        <trans-unit id="8e9379a55961a6ef4c12aeb1fda47c055107980d" translate="yes" xml:space="preserve">
          <source>Modifying and Translating Input Events</source>
          <target state="translated">Modificando y traduciendo los eventos de entrada</target>
        </trans-unit>
        <trans-unit id="0c57ccfc431bc2516e5717214f07522071c88c48" translate="yes" xml:space="preserve">
          <source>Modifying lists stored in variables.</source>
          <target state="translated">Modificar las listas almacenadas en las variables.</target>
        </trans-unit>
        <trans-unit id="0a7be6ae1c4a45d3076b49b4bc3c1a4ee48cb902" translate="yes" xml:space="preserve">
          <source>Modifying text is not allowed in a read-only buffer.</source>
          <target state="translated">No se permite modificar el texto en un buffer de sólo lectura.</target>
        </trans-unit>
        <trans-unit id="23f3dc3212ed2957d48473bfbcff7fdc730bbb06" translate="yes" xml:space="preserve">
          <source>Module Initialization Code</source>
          <target state="translated">Código de inicialización del módulo</target>
        </trans-unit>
        <trans-unit id="71d4613afbc49b703267c29c22712c23464539a5" translate="yes" xml:space="preserve">
          <source>Module functions including the &lt;code&gt;emacs_module_init&lt;/code&gt; function (see &lt;a href=&quot;module-initialization#module-initialization-function&quot;&gt;module initialization function&lt;/a&gt;) may only interact with Emacs by calling environment functions from some live &lt;code&gt;emacs_env&lt;/code&gt; pointer while being called directly or indirectly from Emacs. In other words, if a module function wants to call Lisp functions or Emacs primitives, convert &lt;code&gt;emacs_value&lt;/code&gt; objects to and from C datatypes (see &lt;a href=&quot;module-values#Module-Values&quot;&gt;Module Values&lt;/a&gt;), or interact with Emacs in any other way, some call from Emacs to &lt;code&gt;emacs_module_init&lt;/code&gt; or to a module function must be in the call stack. Module function may not interact with Emacs while garbage collection is running; see &lt;a href=&quot;garbage-collection#Garbage-Collection&quot;&gt;Garbage Collection&lt;/a&gt;. They may only interact with Emacs from Lisp interpreter threads (including the main thread) created by Emacs; see &lt;a href=&quot;threads#Threads&quot;&gt;Threads&lt;/a&gt;. The</source>
          <target state="translated">Las funciones del m&amp;oacute;dulo, incluida la funci&amp;oacute;n &lt;code&gt;emacs_module_init&lt;/code&gt; (ver &lt;a href=&quot;module-initialization#module-initialization-function&quot;&gt;funci&amp;oacute;n de inicializaci&amp;oacute;n del m&amp;oacute;dulo&lt;/a&gt; ) solo pueden interactuar con Emacs llamando a las funciones de entorno desde alg&amp;uacute;n puntero &lt;code&gt;emacs_env&lt;/code&gt; en vivo mientras se las llama directa o indirectamente desde Emacs. En otras palabras, si una funci&amp;oacute;n de m&amp;oacute;dulo quiere llamar a funciones Lisp o primitivas de Emacs, convertir objetos &lt;code&gt;emacs_value&lt;/code&gt; ay desde tipos de datos C (ver &lt;a href=&quot;module-values#Module-Values&quot;&gt;Valores del m&amp;oacute;dulo&lt;/a&gt; ), o interactuar con Emacs de cualquier otra forma, algunos llaman de Emacs a &lt;code&gt;emacs_module_init&lt;/code&gt; oa un m&amp;oacute;dulo la funci&amp;oacute;n debe estar en la pila de llamadas. La funci&amp;oacute;n del m&amp;oacute;dulo puede no interactuar con Emacs mientras se ejecuta la recolecci&amp;oacute;n de basura; ver &lt;a href=&quot;garbage-collection#Garbage-Collection&quot;&gt;Recolecci&amp;oacute;n de basura&lt;/a&gt;. Solo pueden interactuar con Emacs desde los hilos del int&amp;eacute;rprete Lisp (incluido el hilo principal) creados por Emacs; ver &lt;a href=&quot;threads#Threads&quot;&gt;Hilos&lt;/a&gt; . los</target>
        </trans-unit>
        <trans-unit id="aa62ecac906e7dae2c8e2d7e79864dfd62f36887" translate="yes" xml:space="preserve">
          <source>Module functions use the type &lt;code&gt;emacs_value&lt;/code&gt; to communicate Lisp objects between Emacs and the module (see &lt;a href=&quot;module-values#Module-Values&quot;&gt;Module Values&lt;/a&gt;). The</source>
          <target state="translated">Las funciones del m&amp;oacute;dulo usan el tipo &lt;code&gt;emacs_value&lt;/code&gt; para comunicar objetos Lisp entre Emacs y el m&amp;oacute;dulo (ver &lt;a href=&quot;module-values#Module-Values&quot;&gt;Valores del m&amp;oacute;dulo&lt;/a&gt; ). los</target>
        </trans-unit>
        <trans-unit id="53078183c7061fe0cd9edd96cc36e5ce37d0a31b" translate="yes" xml:space="preserve">
          <source>Modules can create &lt;code&gt;user-ptr&lt;/code&gt; Lisp objects that embed pointers to C struct&amp;rsquo;s defined by the module. This is useful for keeping around complex data structures created by a module, to be passed back to the module&amp;rsquo;s functions. User-ptr objects can also have associated &lt;em&gt;finalizers&lt;/em&gt; &amp;ndash; functions to be run when the object is GC&amp;rsquo;ed; this is useful for freeing any resources allocated for the underlying data structure, such as memory, open file descriptors, etc. See &lt;a href=&quot;module-values#Module-Values&quot;&gt;Module Values&lt;/a&gt;.</source>
          <target state="translated">Los m&amp;oacute;dulos pueden crear objetos Lisp &lt;code&gt;user-ptr&lt;/code&gt; que incrustan punteros a estructuras C definidas por el m&amp;oacute;dulo. Esto es &amp;uacute;til para mantener estructuras de datos complejas creadas por un m&amp;oacute;dulo, para volver a pasar a las funciones del m&amp;oacute;dulo. Los objetos User-ptr tambi&amp;eacute;n pueden tener &lt;em&gt;finalizadores&lt;/em&gt; asociados : funciones que se ejecutar&amp;aacute;n cuando el objeto sea GC'ed; esto es &amp;uacute;til para liberar los recursos asignados para la estructura de datos subyacente, como la memoria, los descriptores de archivos abiertos, etc. Consulte &lt;a href=&quot;module-values#Module-Values&quot;&gt;Valores del m&amp;oacute;dulo&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cdaf1615e9fcf09128f766c4a11eb97589359016" translate="yes" xml:space="preserve">
          <source>Modules provide additional Lisp primitives.</source>
          <target state="translated">Los módulos proporcionan primitivos adicionales de Lisp.</target>
        </trans-unit>
        <trans-unit id="6ec2f205aeddb216abff070de47e318b831ed982" translate="yes" xml:space="preserve">
          <source>More commonly, a face is referred to via a &lt;em&gt;face name&lt;/em&gt;: a Lisp symbol associated with a set of face attributes&lt;a href=&quot;#FOOT22&quot; name=&quot;DOCF22&quot;&gt;&lt;sup&gt;22&lt;/sup&gt;&lt;/a&gt;. Named faces are defined using the &lt;code&gt;defface&lt;/code&gt; macro (see &lt;a href=&quot;defining-faces#Defining-Faces&quot;&gt;Defining Faces&lt;/a&gt;). Emacs comes with several standard named faces (see &lt;a href=&quot;basic-faces#Basic-Faces&quot;&gt;Basic Faces&lt;/a&gt;).</source>
          <target state="translated">M&amp;aacute;s com&amp;uacute;nmente, se hace referencia a una &lt;em&gt;cara&lt;/em&gt; a trav&amp;eacute;s de un &lt;em&gt;nombre de cara&lt;/em&gt; : un s&amp;iacute;mbolo Lisp asociado con un conjunto de atributos de cara &lt;a href=&quot;#FOOT22&quot; name=&quot;DOCF22&quot;&gt;&lt;sup&gt;22&lt;/sup&gt;&lt;/a&gt; . Las caras con nombre se definen mediante la macro &lt;code&gt;defface&lt;/code&gt; (consulte &lt;a href=&quot;defining-faces#Defining-Faces&quot;&gt;Definici&amp;oacute;n de caras&lt;/a&gt; ). Emacs viene con varias caras est&amp;aacute;ndar con nombre (consulte &lt;a href=&quot;basic-faces#Basic-Faces&quot;&gt;Caras b&amp;aacute;sicas&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="b94de5ef15a44f90d2da93f96e38f761c889651d" translate="yes" xml:space="preserve">
          <source>More complex menu item definitions.</source>
          <target state="translated">Definiciones de elementos del menú más complejas.</target>
        </trans-unit>
        <trans-unit id="754bbd6d917505e0487bb8bfca83939b74396492" translate="yes" xml:space="preserve">
          <source>More generally,</source>
          <target state="translated">Más en general,</target>
        </trans-unit>
        <trans-unit id="d436056747a2fab716975cd61c740bc6fb24a4a3" translate="yes" xml:space="preserve">
          <source>More generally, &lt;code&gt;listname&lt;/code&gt; can be a generalized variable. In that case, this macro does the equivalent of &lt;code&gt;(setf&amp;nbsp;&lt;var&gt;listname&lt;/var&gt;&amp;nbsp;(cons&amp;nbsp;&lt;var&gt;element&lt;/var&gt;&amp;nbsp;&lt;var&gt;listname&lt;/var&gt;))&lt;/code&gt;. See &lt;a href=&quot;generalized-variables#Generalized-Variables&quot;&gt;Generalized Variables&lt;/a&gt;.</source>
          <target state="translated">De manera m&amp;aacute;s general, &lt;code&gt;listname&lt;/code&gt; puede ser una variable generalizada. En ese caso, esta macro hace el equivalente de &lt;code&gt;(setf&amp;nbsp;&lt;var&gt;listname&lt;/var&gt;&amp;nbsp;(cons&amp;nbsp;&lt;var&gt;element&lt;/var&gt;&amp;nbsp;&lt;var&gt;listname&lt;/var&gt;))&lt;/code&gt; . Consulte &lt;a href=&quot;generalized-variables#Generalized-Variables&quot;&gt;Variables generalizadas&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="55172490781de7bea7e9de094ce64599830a7212" translate="yes" xml:space="preserve">
          <source>More generally, &lt;var&gt;listname&lt;/var&gt; can be a generalized variable. In that case, this macro saves into &lt;var&gt;listname&lt;/var&gt; using &lt;code&gt;setf&lt;/code&gt;. See &lt;a href=&quot;generalized-variables#Generalized-Variables&quot;&gt;Generalized Variables&lt;/a&gt;.</source>
          <target state="translated">De manera m&amp;aacute;s general, &lt;var&gt;listname&lt;/var&gt; puede ser una variable generalizada. En ese caso, esta macro guarda en &lt;var&gt;listname&lt;/var&gt; usando &lt;code&gt;setf&lt;/code&gt; . Consulte &lt;a href=&quot;generalized-variables#Generalized-Variables&quot;&gt;Variables generalizadas&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d7ab2fa4e143762f1cbf98c94412199e5e759c95" translate="yes" xml:space="preserve">
          <source>More generally, &lt;var&gt;mode-line-string&lt;/var&gt; can be any mode line construct. It appears in the mode line when the value of &lt;var&gt;minor-mode-variable&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, and not otherwise. These strings should begin with spaces so that they don&amp;rsquo;t run together. Conventionally, the &lt;var&gt;minor-mode-variable&lt;/var&gt; for a specific mode is set to a non-&lt;code&gt;nil&lt;/code&gt; value when that minor mode is activated.</source>
          <target state="translated">De manera m&amp;aacute;s general, &lt;var&gt;mode-line-string&lt;/var&gt; puede ser cualquier construcci&amp;oacute;n de l&amp;iacute;nea de modo. Aparece en la l&amp;iacute;nea de modo cuando el valor de &lt;var&gt;minor-mode-variable&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; , y no de otro modo. Estas cadenas deben comenzar con espacios para que no se junten. Convencionalmente, la &lt;var&gt;minor-mode-variable&lt;/var&gt; de modo menor para un modo espec&amp;iacute;fico se establece en un valor no &lt;code&gt;nil&lt;/code&gt; cuando se activa ese modo menor.</target>
        </trans-unit>
        <trans-unit id="759e70a01a264315afd54c72c902aa5e03d4acbc" translate="yes" xml:space="preserve">
          <source>More generally, the final argument to &lt;code&gt;append&lt;/code&gt; may be any Lisp object. The final argument is not copied or converted; it becomes the &lt;small&gt;CDR&lt;/small&gt; of the last cons cell in the new list. If the final argument is itself a list, then its elements become in effect elements of the result list. If the final element is not a list, the result is a dotted list since its final &lt;small&gt;CDR&lt;/small&gt; is not &lt;code&gt;nil&lt;/code&gt; as required in a proper list (see &lt;a href=&quot;cons-cells#Cons-Cells&quot;&gt;Cons Cells&lt;/a&gt;).</source>
          <target state="translated">De manera m&amp;aacute;s general, el argumento final para &lt;code&gt;append&lt;/code&gt; puede ser cualquier objeto Lisp. El argumento final no se copia ni se convierte; se convierte en el &lt;small&gt;CDR&lt;/small&gt; de la &amp;uacute;ltima celda de contras de la nueva lista. Si el argumento final es en s&amp;iacute; mismo una lista, entonces sus elementos se convierten en elementos de efecto de la lista de resultados. Si el elemento final no es una lista, el resultado es una lista de puntos, ya que su &lt;small&gt;CDR&lt;/small&gt; final no es &lt;code&gt;nil&lt;/code&gt; como se requiere en una lista adecuada (ver &lt;a href=&quot;cons-cells#Cons-Cells&quot;&gt;Celdas de contras&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="5c06fdd4f23cd4daee8d294f03b24245dc305ec4" translate="yes" xml:space="preserve">
          <source>More generally, you can use the variable &lt;code&gt;buffer-invisibility-spec&lt;/code&gt; to control which values of the &lt;code&gt;invisible&lt;/code&gt; property make text invisible. This permits you to classify the text into different subsets in advance, by giving them different &lt;code&gt;invisible&lt;/code&gt; values, and subsequently make various subsets visible or invisible by changing the value of &lt;code&gt;buffer-invisibility-spec&lt;/code&gt;.</source>
          <target state="translated">De manera m&amp;aacute;s general, puede usar la variable &lt;code&gt;buffer-invisibility-spec&lt;/code&gt; para controlar qu&amp;eacute; valores de la propiedad &lt;code&gt;invisible&lt;/code&gt; hacen que el texto sea invisible. Esto le permite clasificar el texto en diferentes subconjuntos de antemano, d&amp;aacute;ndoles diferentes valores &lt;code&gt;invisible&lt;/code&gt; s , y posteriormente hacer visibles o invisibles varios subconjuntos cambiando el valor de &lt;code&gt;buffer-invisibility-spec&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="60a18e357538be44773938629786b367e89b0ffd" translate="yes" xml:space="preserve">
          <source>More individual control is possible by using a cons cell: In that case the frame&amp;rsquo;s width ratio is preserved if the &lt;small&gt;CAR&lt;/small&gt; of the cell is either &lt;code&gt;t&lt;/code&gt; or &lt;code&gt;width-only&lt;/code&gt;. The height ratio is preserved if the &lt;small&gt;CAR&lt;/small&gt; of the cell is either &lt;code&gt;t&lt;/code&gt; or &lt;code&gt;height-only&lt;/code&gt;. The left position ratio is preserved if the &lt;small&gt;CDR&lt;/small&gt; of the cell is either &lt;code&gt;t&lt;/code&gt; or &lt;code&gt;left-only&lt;/code&gt;. The top position ratio is preserved if the &lt;small&gt;CDR&lt;/small&gt; of the cell is either &lt;code&gt;t&lt;/code&gt; or &lt;code&gt;top-only&lt;/code&gt;.</source>
          <target state="translated">Es posible un control m&amp;aacute;s individual mediante el uso de una celda de contras: en ese caso, la relaci&amp;oacute;n de ancho del marco se conserva si el &lt;small&gt;CAR&lt;/small&gt; de la celda es &lt;code&gt;t&lt;/code&gt; o &lt;code&gt;width-only&lt;/code&gt; . La relaci&amp;oacute;n de altura se conserva si el &lt;small&gt;CAR&lt;/small&gt; de la celda es &lt;code&gt;t&lt;/code&gt; o &lt;code&gt;height-only&lt;/code&gt; . La relaci&amp;oacute;n de la posici&amp;oacute;n izquierda se conserva si la &lt;small&gt;CDR&lt;/small&gt; de la celda es &lt;code&gt;t&lt;/code&gt; o &lt;code&gt;left-only&lt;/code&gt; . La relaci&amp;oacute;n de la posici&amp;oacute;n superior se conserva si la &lt;small&gt;CDR&lt;/small&gt; de la celda es &lt;code&gt;t&lt;/code&gt; o &lt;code&gt;top-only&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2d35b8a3c91aa8470e9a099d606cc2c1c7acaba3" translate="yes" xml:space="preserve">
          <source>More precisely, we should now have a Lisp function (a lambda expression), a byte-code function, a primitive function, a Lisp macro, a special form, or an autoload object. Each of these types is a case described in one of the following sections. If the object is not one of these types, Emacs signals an &lt;code&gt;invalid-function&lt;/code&gt; error.</source>
          <target state="translated">M&amp;aacute;s precisamente, ahora deber&amp;iacute;amos tener una funci&amp;oacute;n Lisp (una expresi&amp;oacute;n lambda), una funci&amp;oacute;n de c&amp;oacute;digo byte, una funci&amp;oacute;n primitiva, una macro Lisp, una forma especial o un objeto de carga autom&amp;aacute;tica. Cada uno de estos tipos es un caso descrito en una de las siguientes secciones. Si el objeto no es uno de estos tipos, Emacs indica un error de &lt;code&gt;invalid-function&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5d1907fa94271e60953cb92c6af32f80577dca2a" translate="yes" xml:space="preserve">
          <source>Most Emacs Lisp file-manipulation functions get errors when used on files that are directories. For example, you cannot delete a directory with &lt;code&gt;delete-file&lt;/code&gt;. These special functions exist to create and delete directories.</source>
          <target state="translated">La mayor&amp;iacute;a de las funciones de manipulaci&amp;oacute;n de archivos de Emacs Lisp obtienen errores cuando se utilizan en archivos que son directorios. Por ejemplo, no puede eliminar un directorio con &lt;code&gt;delete-file&lt;/code&gt; . Estas funciones especiales existen para crear y eliminar directorios.</target>
        </trans-unit>
        <trans-unit id="09eed349899d3e99c3026461a2438ccf55662d6f" translate="yes" xml:space="preserve">
          <source>Most Emacs commands can use a &lt;em&gt;prefix argument&lt;/em&gt;, a number specified before the command itself. (Don&amp;rsquo;t confuse prefix arguments with prefix keys.) The prefix argument is at all times represented by a value, which may be &lt;code&gt;nil&lt;/code&gt;, meaning there is currently no prefix argument. Each command may use the prefix argument or ignore it.</source>
          <target state="translated">La mayor&amp;iacute;a de los comandos de Emacs pueden usar un &lt;em&gt;argumento de prefijo&lt;/em&gt; , un n&amp;uacute;mero especificado antes del comando en s&amp;iacute;. (No confunda los argumentos de prefijo con las claves de prefijo). El argumento de prefijo est&amp;aacute; representado en todo momento por un valor, que puede ser &lt;code&gt;nil&lt;/code&gt; , lo que significa que actualmente no hay ning&amp;uacute;n argumento de prefijo. Cada comando puede usar el argumento de prefijo o ignorarlo.</target>
        </trans-unit>
        <trans-unit id="964d2f546749ab746319cf9bf92a58945c9983a6" translate="yes" xml:space="preserve">
          <source>Most Lisp code should not use this macro; &lt;code&gt;save-selected-window&lt;/code&gt; is typically sufficient. In particular, this macro cannot reliably prevent the code in &lt;var&gt;forms&lt;/var&gt; from opening new windows, because new windows might be opened in other frames (see &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;Choosing Window&lt;/a&gt;), and &lt;code&gt;save-window-excursion&lt;/code&gt; only saves and restores the window configuration on the current frame.</source>
          <target state="translated">La mayor parte del c&amp;oacute;digo Lisp no deber&amp;iacute;a utilizar esta macro; &lt;code&gt;save-selected-window&lt;/code&gt; suele ser suficiente. En particular, esta macro no puede evitar de manera confiable que el c&amp;oacute;digo de los &lt;var&gt;forms&lt;/var&gt; abra nuevas ventanas, porque es posible que se abran nuevas ventanas en otros marcos (consulte &lt;a href=&quot;choosing-window#Choosing-Window&quot;&gt;Elegir ventana&lt;/a&gt; ), y &lt;code&gt;save-window-excursion&lt;/code&gt; solo guarda y restaura la configuraci&amp;oacute;n de la ventana en el marco actual.</target>
        </trans-unit>
        <trans-unit id="fe2ae73f5ba28b3bd7e0ab7c9daa9a827c4bf56e" translate="yes" xml:space="preserve">
          <source>Most applications should not use recursive editing, except as part of using the minibuffer. Usually it is more convenient for the user if you change the major mode of the current buffer temporarily to a special major mode, which should have a command to go back to the previous mode. (The</source>
          <target state="translated">La mayoría de las aplicaciones no deben utilizar la edición recursiva,excepto como parte del uso del minibúfer.Por lo general,es más conveniente para el usuario si cambia temporalmente el modo principal del buffer actual a un modo principal especial,que debería tener un comando para volver al modo anterior.(El</target>
        </trans-unit>
        <trans-unit id="1eaf100a3aafa712a449e3207bf7cabe96c9c0ab" translate="yes" xml:space="preserve">
          <source>Most buffers have an &lt;em&gt;undo list&lt;/em&gt;, which records all changes made to the buffer&amp;rsquo;s text so that they can be undone. (The buffers that don&amp;rsquo;t have one are usually special-purpose buffers for which Emacs assumes that undoing is not useful. In particular, any buffer whose name begins with a space has its undo recording off by default; see &lt;a href=&quot;buffer-names#Buffer-Names&quot;&gt;Buffer Names&lt;/a&gt;.) All the primitives that modify the text in the buffer automatically add elements to the front of the undo list, which is in the variable &lt;code&gt;buffer-undo-list&lt;/code&gt;.</source>
          <target state="translated">La mayor&amp;iacute;a de los b&amp;uacute;feres tienen una &lt;em&gt;lista de deshacer&lt;/em&gt; , que registra todos los cambios realizados en el texto del b&amp;uacute;fer para que puedan deshacerse. (Los b&amp;uacute;feres que no tienen uno suelen ser b&amp;uacute;feres de prop&amp;oacute;sito especial para los que Emacs asume que deshacer no es &amp;uacute;til. En particular, cualquier b&amp;uacute;fer cuyo nombre comience con un espacio tiene su registro de deshacer desactivado de forma predeterminada; consulte &lt;a href=&quot;buffer-names#Buffer-Names&quot;&gt;Nombres de b&amp;uacute;fer&lt;/a&gt; ). las primitivas que modifican el texto en el b&amp;uacute;fer a&amp;ntilde;aden elementos autom&amp;aacute;ticamente al principio de la lista de deshacer, que est&amp;aacute; en la variable &lt;code&gt;buffer-undo-list&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b6dcfcc1ab586c7c06232994a3f579a591ce8d2a" translate="yes" xml:space="preserve">
          <source>Most control constructs affect only the flow of control within the construct itself. The function &lt;code&gt;throw&lt;/code&gt; is the exception to this rule of normal program execution: it performs a nonlocal exit on request. (There are other exceptions, but they are for error handling only.) &lt;code&gt;throw&lt;/code&gt; is used inside a &lt;code&gt;catch&lt;/code&gt;, and jumps back to that &lt;code&gt;catch&lt;/code&gt;. For example:</source>
          <target state="translated">La mayor&amp;iacute;a de los constructos de control afectan solo el flujo de control dentro del propio constructo. La funci&amp;oacute;n &lt;code&gt;throw&lt;/code&gt; es la excepci&amp;oacute;n a esta regla de ejecuci&amp;oacute;n normal del programa: realiza una salida no local a pedido. (Hay otras excepciones, pero son solo para el manejo de errores). &lt;code&gt;throw&lt;/code&gt; se usa dentro de una &lt;code&gt;catch&lt;/code&gt; y regresa a esa &lt;code&gt;catch&lt;/code&gt; . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="72373bc3f93b6102b1ff980fc9edb816c70fbcbd" translate="yes" xml:space="preserve">
          <source>Most errors are signaled automatically within Lisp primitives which you call for other purposes, such as if you try to take the &lt;small&gt;CAR&lt;/small&gt; of an integer or move forward a character at the end of the buffer. You can also signal errors explicitly with the functions &lt;code&gt;error&lt;/code&gt; and &lt;code&gt;signal&lt;/code&gt;.</source>
          <target state="translated">La mayor&amp;iacute;a de los errores se se&amp;ntilde;alan autom&amp;aacute;ticamente dentro de las primitivas Lisp a las que llama con otros fines, como si intenta tomar el &lt;small&gt;CAR&lt;/small&gt; de un entero o avanzar un car&amp;aacute;cter al final del b&amp;uacute;fer. Tambi&amp;eacute;n puede se&amp;ntilde;alar errores expl&amp;iacute;citamente con las funciones &lt;code&gt;error&lt;/code&gt; y &lt;code&gt;signal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="266fa78b8886478b8a397f099e61b861826a3118" translate="yes" xml:space="preserve">
          <source>Most keyboards also have &lt;em&gt;function keys&lt;/em&gt;&amp;mdash;keys that have names or symbols that are not characters. Function keys are represented in Emacs Lisp as symbols; the symbol&amp;rsquo;s name is the function key&amp;rsquo;s label, in lower case. For example, pressing a key labeled</source>
          <target state="translated">La mayor&amp;iacute;a de los teclados tambi&amp;eacute;n tienen &lt;em&gt;teclas de funci&amp;oacute;n, teclas&lt;/em&gt; que tienen nombres o s&amp;iacute;mbolos que no son caracteres. Las teclas de funci&amp;oacute;n se representan en Emacs Lisp como s&amp;iacute;mbolos; el nombre del s&amp;iacute;mbolo es la etiqueta de la tecla de funci&amp;oacute;n, en min&amp;uacute;sculas. Por ejemplo, presionando una tecla etiquetada</target>
        </trans-unit>
        <trans-unit id="9f00659321a54a5b7e744a95bacbe846e1ba78fa" translate="yes" xml:space="preserve">
          <source>Most minor modes implement features that are independent of the major mode, and can thus be used with most major modes. For example, Auto Fill mode works with any major mode that permits text insertion. A few minor modes, however, are specific to a particular major mode. For example, Diff Auto Refine mode is a minor mode that is intended to be used only with Diff mode.</source>
          <target state="translated">La mayoría de los modos menores implementan características que son independientes del modo mayor,y por lo tanto pueden ser utilizados con la mayoría de los modos mayores.Por ejemplo,el modo de llenado automático funciona con cualquier modo mayor que permita la inserción de texto.Sin embargo,algunos modos menores son específicos de un modo mayor en particular.Por ejemplo,el modo de Refinado automático de Diff es un modo menor que está pensado para ser usado sólo con el modo Diff.</target>
        </trans-unit>
        <trans-unit id="c397a5c428cdfab905c1bb14033fe204e686e090" translate="yes" xml:space="preserve">
          <source>Most needs are satisfied by these two ways that backtracking is automatically disabled, but occasionally it is useful to explicitly disable backtracking by using the &lt;code&gt;gate&lt;/code&gt; specification. This is useful when you know that no higher alternatives could apply. See the example of the &lt;code&gt;let&lt;/code&gt; specification.</source>
          <target state="translated">La mayor&amp;iacute;a de las necesidades se satisfacen con estas dos formas en las que el retroceso se deshabilita autom&amp;aacute;ticamente, pero en ocasiones es &amp;uacute;til deshabilitarlo expl&amp;iacute;citamente mediante la especificaci&amp;oacute;n de &lt;code&gt;gate&lt;/code&gt; . Esto es &amp;uacute;til cuando sabe que no se pueden aplicar alternativas superiores. Vea el ejemplo de la especificaci&amp;oacute;n &lt;code&gt;let&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cc4ca8d6208ffb0d4a36e05a18b9c69498324dc6" translate="yes" xml:space="preserve">
          <source>Most of the Lisp functions for reading text take an &lt;em&gt;input stream&lt;/em&gt; as an argument. The input stream specifies where or how to get the characters of the text to be read. Here are the possible types of input stream:</source>
          <target state="translated">La mayor&amp;iacute;a de las funciones Lisp para leer texto toman un &lt;em&gt;flujo de entrada&lt;/em&gt; como argumento. El flujo de entrada especifica d&amp;oacute;nde o c&amp;oacute;mo hacer que se lean los caracteres del texto. Estos son los posibles tipos de flujo de entrada:</target>
        </trans-unit>
        <trans-unit id="f7fb5ab8ace2fa15e51d35ce50aee4d936080390" translate="yes" xml:space="preserve">
          <source>Most of the commands in this section return values that are not meaningful. All the functions that do filling take note of the current left margin, current right margin, and current justification style (see &lt;a href=&quot;margins#Margins&quot;&gt;Margins&lt;/a&gt;). If the current justification style is &lt;code&gt;none&lt;/code&gt;, the filling functions don&amp;rsquo;t actually do anything.</source>
          <target state="translated">La mayor&amp;iacute;a de los comandos de esta secci&amp;oacute;n devuelven valores que no son significativos. Todas las funciones que rellenan toman nota del margen izquierdo actual, el margen derecho actual y el estilo de justificaci&amp;oacute;n actual (ver &lt;a href=&quot;margins#Margins&quot;&gt;M&amp;aacute;rgenes&lt;/a&gt; ). Si el estilo de justificaci&amp;oacute;n actual es &lt;code&gt;none&lt;/code&gt; , las funciones de relleno no hacen nada.</target>
        </trans-unit>
        <trans-unit id="cbad2a18a2d91f80015c7e2ea18ca8a1aab103fa" translate="yes" xml:space="preserve">
          <source>Most of the functions below take a name and sometimes an obarray as arguments. A &lt;code&gt;wrong-type-argument&lt;/code&gt; error is signaled if the name is not a string, or if the obarray is not a vector.</source>
          <target state="translated">La mayor&amp;iacute;a de las funciones siguientes toman un nombre y, a veces, una matriz como argumentos. Se indica un error de &lt;code&gt;wrong-type-argument&lt;/code&gt; incorrecto si el nombre no es una cadena, o si el obarray no es un vector.</target>
        </trans-unit>
        <trans-unit id="68726f32511ba6a9522b1792a27d11825f7b4a12" translate="yes" xml:space="preserve">
          <source>Most of the functions described below became available in Emacs 25, the first Emacs release that supported dynamic modules. For the few functions that became available in later Emacs releases, we mention the first Emacs version that supported them.</source>
          <target state="translated">La mayoría de las funciones que se describen a continuación pasaron a estar disponibles en Emacs 25,la primera versión de Emacs que soportaba módulos dinámicos.En cuanto a las pocas funciones que estuvieron disponibles en versiones posteriores de Emacs,mencionamos la primera versión de Emacs que las soportaba.</target>
        </trans-unit>
        <trans-unit id="b3d67ad5f3eb4dfd9ab8ef87986f724f3ad34348" translate="yes" xml:space="preserve">
          <source>Most of the hooks in Emacs are &lt;em&gt;normal hooks&lt;/em&gt;. These variables contain lists of functions to be called with no arguments. By convention, whenever the hook name ends in &amp;lsquo;</source>
          <target state="translated">La mayor&amp;iacute;a de los ganchos en Emacs son &lt;em&gt;ganchos normales&lt;/em&gt; . Estas variables contienen listas de funciones a llamar sin argumentos. Por convenci&amp;oacute;n, siempre que el nombre del gancho termine en '</target>
        </trans-unit>
        <trans-unit id="fbcca09d8ca07315a2c9111b156bdf457cc5150a" translate="yes" xml:space="preserve">
          <source>Most of the kill commands are primarily for interactive use, and are not described here. What we do describe are the functions provided for use in writing such commands. You can use these functions to write commands for killing text. When you need to delete text for internal purposes within a Lisp function, you should normally use deletion functions, so as not to disturb the kill ring contents. See &lt;a href=&quot;deletion#Deletion&quot;&gt;Deletion&lt;/a&gt;.</source>
          <target state="translated">La mayor&amp;iacute;a de los comandos kill son principalmente para uso interactivo y no se describen aqu&amp;iacute;. Lo que describimos son las funciones proporcionadas para su uso al escribir dichos comandos. Puede utilizar estas funciones para escribir comandos para matar texto. Cuando necesite eliminar texto para fines internos dentro de una funci&amp;oacute;n Lisp, normalmente debe usar funciones de eliminaci&amp;oacute;n, para no perturbar el contenido del kill ring. Ver &lt;a href=&quot;deletion#Deletion&quot;&gt;eliminaci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cc3c2124fc3bae720b8252b979a43c48fb44d9b9" translate="yes" xml:space="preserve">
          <source>Most of the time, functions are called when their names are written in Lisp expressions in Lisp programs. However, you can construct or obtain a function object at run time and then call it with the primitive functions &lt;code&gt;funcall&lt;/code&gt; and &lt;code&gt;apply&lt;/code&gt;. See &lt;a href=&quot;calling-functions#Calling-Functions&quot;&gt;Calling Functions&lt;/a&gt;.</source>
          <target state="translated">La mayor&amp;iacute;a de las veces, las funciones se llaman cuando sus nombres est&amp;aacute;n escritos en expresiones Lisp en programas Lisp. Sin embargo, puede construir u obtener un objeto de funci&amp;oacute;n en tiempo de ejecuci&amp;oacute;n y luego llamarlo con las funciones primitivas &lt;code&gt;funcall&lt;/code&gt; y &lt;code&gt;apply&lt;/code&gt; . Consulte &lt;a href=&quot;calling-functions#Calling-Functions&quot;&gt;Funciones de llamada&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ad2a15ba084ba8bc4aa18e87ac5aa225a45b1c5d" translate="yes" xml:space="preserve">
          <source>Most of the time, it&amp;rsquo;s not useful to distinguish the two. So normally &lt;code&gt;local-function-key-map&lt;/code&gt; (see &lt;a href=&quot;translation-keymaps#Translation-Keymaps&quot;&gt;Translation Keymaps&lt;/a&gt;) is set up to map &lt;code&gt;tab&lt;/code&gt; into 9. Thus, a key binding for character code 9 (the character</source>
          <target state="translated">La mayor&amp;iacute;a de las veces, no es &amp;uacute;til distinguir los dos. Por lo tanto &lt;code&gt;local-function-key-map&lt;/code&gt; &lt;a href=&quot;translation-keymaps#Translation-Keymaps&quot;&gt;teclas de &lt;/a&gt;funci&amp;oacute;n local (consulte Mapas de teclas de traducci&amp;oacute;n ) se configura para asignar la &lt;code&gt;tab&lt;/code&gt; a 9. Por lo tanto, una combinaci&amp;oacute;n de teclas para el c&amp;oacute;digo de car&amp;aacute;cter 9 (el car&amp;aacute;cter</target>
        </trans-unit>
        <trans-unit id="abe6f1d63c7f88d045c5b31ba7795c4ed74c53bd" translate="yes" xml:space="preserve">
          <source>Most of these error symbols are defined in C (mainly</source>
          <target state="translated">La mayoría de estos símbolos de error se definen en C (principalmente</target>
        </trans-unit>
        <trans-unit id="49da26863e7f22566b2cf4a25068c25f6cd2d052" translate="yes" xml:space="preserve">
          <source>Most of these variables have names ending with &amp;lsquo;</source>
          <target state="translated">La mayor&amp;iacute;a de estas variables tienen nombres que terminan con '</target>
        </trans-unit>
        <trans-unit id="9c4e0cce8a81ef3708db9a9d44182e2b8fe94a9d" translate="yes" xml:space="preserve">
          <source>Most often, forms are evaluated automatically, by virtue of their occurrence in a program being run. On rare occasions, you may need to write code that evaluates a form that is computed at run time, such as after reading a form from text being edited or getting one from a property list. On these occasions, use the &lt;code&gt;eval&lt;/code&gt; function. Often &lt;code&gt;eval&lt;/code&gt; is not needed and something else should be used instead. For example, to get the value of a variable, while &lt;code&gt;eval&lt;/code&gt; works, &lt;code&gt;symbol-value&lt;/code&gt; is preferable; or rather than store expressions in a property list that then need to go through &lt;code&gt;eval&lt;/code&gt;, it is better to store functions instead that are then passed to &lt;code&gt;funcall&lt;/code&gt;.</source>
          <target state="translated">La mayor&amp;iacute;a de las veces, los formularios se eval&amp;uacute;an autom&amp;aacute;ticamente, en virtud de su aparici&amp;oacute;n en un programa en ejecuci&amp;oacute;n. En raras ocasiones, es posible que deba escribir c&amp;oacute;digo que eval&amp;uacute;e un formulario que se calcula en tiempo de ejecuci&amp;oacute;n, como despu&amp;eacute;s de leer un formulario a partir del texto que se est&amp;aacute; editando u obtener uno de una lista de propiedades. En estas ocasiones, use la funci&amp;oacute;n &lt;code&gt;eval&lt;/code&gt; . A menudo, &lt;code&gt;eval&lt;/code&gt; no es necesario y se debe usar otra cosa en su lugar. Por ejemplo, para obtener el valor de una variable, mientras &lt;code&gt;eval&lt;/code&gt; funciona, es preferible &lt;code&gt;symbol-value&lt;/code&gt; ; o en lugar de almacenar expresiones en una lista de propiedades que luego deben pasar por &lt;code&gt;eval&lt;/code&gt; , es mejor almacenar funciones que luego se pasan a &lt;code&gt;funcall&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aa3d06d22c97d444806afc27e617f43b0ad086a7" translate="yes" xml:space="preserve">
          <source>Most often, the &lt;var&gt;types&lt;/var&gt; in a &lt;code&gt;set&lt;/code&gt; are &lt;code&gt;const&lt;/code&gt; types, as shown here:</source>
          <target state="translated">La mayor&amp;iacute;a de las veces, los &lt;var&gt;types&lt;/var&gt; de un &lt;code&gt;set&lt;/code&gt; son tipos &lt;code&gt;const&lt;/code&gt; antes , como se muestra aqu&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="2104b44b9ba0cc9d20b66b199ac691005bd0bed2" translate="yes" xml:space="preserve">
          <source>Most uses of &lt;code&gt;eval-and-compile&lt;/code&gt; are fairly sophisticated.</source>
          <target state="translated">La mayor&amp;iacute;a de los usos de &lt;code&gt;eval-and-compile&lt;/code&gt; son bastante sofisticados.</target>
        </trans-unit>
        <trans-unit id="81869f1759c2b1872ff235184d70faf9f4fd2d64" translate="yes" xml:space="preserve">
          <source>Most window systems use a desktop metaphor. Part of this metaphor is the idea that system-level windows (representing, e.g., Emacs frames) are stacked in a notional third dimension perpendicular to the screen surface. The order induced by stacking is total and usually referred to as stacking (or Z-) order. Where the areas of two windows overlap, the one higher up in that order will (partially) cover the one underneath.</source>
          <target state="translated">La mayoría de los sistemas de ventanas usan una metáfora de escritorio.Parte de esta metáfora es la idea de que las ventanas a nivel de sistema (representando,por ejemplo,los marcos de Emacs)están apiladas en una nocional tercera dimensión perpendicular a la superficie de la pantalla.El orden inducido por el apilamiento es total y se suele denominar orden de apilamiento (o Z-).Cuando las áreas de dos ventanas se superponen,la que está más arriba en ese orden cubrirá (parcialmente)la que está debajo.</target>
        </trans-unit>
        <trans-unit id="0a9fbf9f714ce6a3a5ea4ced3ed7f3d62099211d" translate="yes" xml:space="preserve">
          <source>Most window-systems clip a child frame at the native edges (see &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Frame Geometry&lt;/a&gt;) of its parent frame&amp;mdash;everything outside these edges is usually invisible. A child frame&amp;rsquo;s &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;top&lt;/code&gt; parameters specify a position relative to the top-left corner of its parent&amp;rsquo;s native frame. When the parent frame is resized, this position remains conceptually unaltered.</source>
          <target state="translated">La mayor&amp;iacute;a de los sistemas de ventanas recortan un marco secundario en los bordes nativos (consulte &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Geometr&amp;iacute;a del marco&lt;/a&gt; ) de su marco principal; todo lo que se encuentra fuera de estos bordes suele ser invisible. Los par&amp;aacute;metros &lt;code&gt;left&lt;/code&gt; y &lt;code&gt;top&lt;/code&gt; un marco secundario especifican una posici&amp;oacute;n relativa a la esquina superior izquierda del marco nativo de su padre. Cuando se cambia el tama&amp;ntilde;o del marco principal, esta posici&amp;oacute;n permanece conceptualmente inalterada.</target>
        </trans-unit>
        <trans-unit id="852329adec48160b733c7ed9efcc2bd1ea539df5" translate="yes" xml:space="preserve">
          <source>Mostly, however, this function is called automatically at an appropriate time.</source>
          <target state="translated">Sin embargo,en la mayoría de los casos,esta función se llama automáticamente en el momento apropiado.</target>
        </trans-unit>
        <trans-unit id="e040db2b7f1361a938099464de9858040e353ddb" translate="yes" xml:space="preserve">
          <source>Motion</source>
          <target state="translated">Motion</target>
        </trans-unit>
        <trans-unit id="4c333f9eac917041de2dbe5d4e12612fb84fb008" translate="yes" xml:space="preserve">
          <source>Motion Commands Based on Parsing</source>
          <target state="translated">Comandos de movimiento basados en el análisis</target>
        </trans-unit>
        <trans-unit id="e8a12b0b4cf9966d415d89a1d69b08c8352f976f" translate="yes" xml:space="preserve">
          <source>Motion Events</source>
          <target state="translated">Eventos de movimiento</target>
        </trans-unit>
        <trans-unit id="91315d6877510cf4da5e405826b3221c94135c3e" translate="yes" xml:space="preserve">
          <source>Motion and Syntax</source>
          <target state="translated">Movimiento y sintaxis</target>
        </trans-unit>
        <trans-unit id="e092df3cd889f7ec86f740980f392f5d6e8af02e" translate="yes" xml:space="preserve">
          <source>Motion by Characters</source>
          <target state="translated">Movimiento de los personajes</target>
        </trans-unit>
        <trans-unit id="d2ce7e2f90144ab22f36527dc8781160c756549d" translate="yes" xml:space="preserve">
          <source>Motion by Screen Lines</source>
          <target state="translated">Movimiento por las líneas de la pantalla</target>
        </trans-unit>
        <trans-unit id="4dce4bd28a86b1ce27d0bd612a7561462c7cc60b" translate="yes" xml:space="preserve">
          <source>Motion by Text Lines</source>
          <target state="translated">Movimiento por líneas de texto</target>
        </trans-unit>
        <trans-unit id="2d29ecb574b2bce083871d9d9c13f5b680f74abd" translate="yes" xml:space="preserve">
          <source>Motion by Words</source>
          <target state="translated">Movimiento por las palabras</target>
        </trans-unit>
        <trans-unit id="633150abc226c78ac7b073c2e31944ab3ddd0ae8" translate="yes" xml:space="preserve">
          <source>Motion functions change the value of point, either relative to the current value of point, relative to the beginning or end of the buffer, or relative to the edges of the selected window. See &lt;a href=&quot;point#Point&quot;&gt;Point&lt;/a&gt;.</source>
          <target state="translated">Las funciones de movimiento cambian el valor del punto, ya sea en relaci&amp;oacute;n con el valor actual del punto, en relaci&amp;oacute;n al principio o al final del b&amp;uacute;fer, o en relaci&amp;oacute;n con los bordes de la ventana seleccionada. Ver &lt;a href=&quot;point#Point&quot;&gt;punto&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="013a79eacf73d8474d69b249a7fcb74f3bc7d072" translate="yes" xml:space="preserve">
          <source>Motion functions that work by parsing.</source>
          <target state="translated">Funciones de movimiento que funcionan por análisis.</target>
        </trans-unit>
        <trans-unit id="37802ebb8eb19a12e9b66522e9d801b5abfc80a9" translate="yes" xml:space="preserve">
          <source>Motion to an End of the Buffer</source>
          <target state="translated">Moción para el fin del buffer</target>
        </trans-unit>
        <trans-unit id="48637a9a84940dbd837461865518bd9300ca2cf2" translate="yes" xml:space="preserve">
          <source>Mouse Dragging Parameters</source>
          <target state="translated">Parámetros de arrastre del ratón</target>
        </trans-unit>
        <trans-unit id="b239ecd4f1b125963a812db57dc3cec60573502b" translate="yes" xml:space="preserve">
          <source>Mouse Events</source>
          <target state="translated">Eventos del ratón</target>
        </trans-unit>
        <trans-unit id="99a6a713af3081ea16c4b4ba861aeaea079ffefd" translate="yes" xml:space="preserve">
          <source>Mouse Position</source>
          <target state="translated">Posición del ratón</target>
        </trans-unit>
        <trans-unit id="c15f4049211f898d49c97d76dd71469c52292f33" translate="yes" xml:space="preserve">
          <source>Mouse Tracking</source>
          <target state="translated">Rastreo de ratones</target>
        </trans-unit>
        <trans-unit id="4a803cb0d07554c2f9f3761b9162a772b63c4e18" translate="yes" xml:space="preserve">
          <source>Mouse Window Auto-selection</source>
          <target state="translated">Auto-selección de la ventana del ratón</target>
        </trans-unit>
        <trans-unit id="f47c56f8e3df66caa71e2d0ce49ed9adb3c1a9bd" translate="yes" xml:space="preserve">
          <source>Mouse auto-selection can be used to emulate a focus follows mouse policy for child frames (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;) which usually are not tracked by the window manager. This requires to set the value of &lt;code&gt;focus-follows-mouse&lt;/code&gt; (see &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;) to a non-&lt;code&gt;nil&lt;/code&gt; value. If the value of &lt;code&gt;focus-follows-mouse&lt;/code&gt; is &lt;code&gt;auto-raise&lt;/code&gt;, entering a child frame with the mouse will raise it automatically above all other child frames of that frame&amp;rsquo;s parent frame.</source>
          <target state="translated">La selecci&amp;oacute;n autom&amp;aacute;tica del mouse se puede usar para emular un enfoque que sigue la pol&amp;iacute;tica del mouse para marcos secundarios (consulte &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Marcos&lt;/a&gt; secundarios ) que generalmente no son rastreados por el administrador de ventanas. Esto requiere establecer el valor de &lt;code&gt;focus-follows-mouse&lt;/code&gt; (ver &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt; ) en un valor que no sea &lt;code&gt;nil&lt;/code&gt; . Si el valor de &lt;code&gt;focus-follows-mouse&lt;/code&gt; se &lt;code&gt;auto-raise&lt;/code&gt; , ingresar un marco secundario con el mouse lo elevar&amp;aacute; autom&amp;aacute;ticamente por encima de todos los dem&amp;aacute;s marcos secundarios del marco principal de ese marco.</target>
        </trans-unit>
        <trans-unit id="2df64335cf98c72ba6ba9a9e8bb30c7f288e379f" translate="yes" xml:space="preserve">
          <source>Mouse auto-selection selects the minibuffer window only if it is active, and never deselects the active minibuffer window.</source>
          <target state="translated">La selección automática del ratón selecciona la ventana del minibúfer sólo si está activa,y nunca deselecciona la ventana del minibúfer activo.</target>
        </trans-unit>
        <trans-unit id="e56ccfe134223b80437e24ef8272e7c77b397941" translate="yes" xml:space="preserve">
          <source>Move back to the previous place that a question was asked about.</source>
          <target state="translated">Vuelve al lugar anterior sobre el que se hizo la pregunta.</target>
        </trans-unit>
        <trans-unit id="fcfc1a5d81c2fd67d3d58302e0edda1d94a48c17" translate="yes" xml:space="preserve">
          <source>Move point back to the current stop point in the source code buffer (&lt;code&gt;edebug-where&lt;/code&gt;).</source>
          <target state="translated">Mover el punto de regreso al punto de parada actual en el b&amp;uacute;fer de c&amp;oacute;digo fuente ( &lt;code&gt;edebug-where&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e8011edd1eeb2660ed2ab6bdc47c4b387b009944" translate="yes" xml:space="preserve">
          <source>Move point to &lt;var&gt;limit&lt;/var&gt; (or the end of the accessible portion of the buffer) and return &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Mueva el punto al &lt;var&gt;limit&lt;/var&gt; (o al final de la parte accesible del b&amp;uacute;fer) y devuelva &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="97b7fff41223832602e81589fc86fce13dac6227" translate="yes" xml:space="preserve">
          <source>Move point to the next breakpoint in the current definition (&lt;code&gt;edebug-next-breakpoint&lt;/code&gt;).</source>
          <target state="translated">Mover el punto al siguiente punto de interrupci&amp;oacute;n en la definici&amp;oacute;n actual ( &lt;code&gt;edebug-next-breakpoint&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ef08217195a398b9b9595051fd75d3bbcfe68238" translate="yes" xml:space="preserve">
          <source>Move the pen to the first point in &lt;var&gt;points&lt;/var&gt;. Additional points are connected with lines. &lt;var&gt;points&lt;/var&gt; is a list of X/Y coordinate pairs. Subsequent &lt;code&gt;moveto&lt;/code&gt; commands represent the start of a new &lt;em&gt;subpath&lt;/em&gt;.</source>
          <target state="translated">Mueva el bol&amp;iacute;grafo al primer punto en &lt;var&gt;points&lt;/var&gt; . Los puntos adicionales est&amp;aacute;n conectados con l&amp;iacute;neas. &lt;var&gt;points&lt;/var&gt; es una lista de pares de coordenadas X / Y. Los siguientes comandos &lt;code&gt;moveto&lt;/code&gt; representan el inicio de un nuevo &lt;em&gt;subtrayecto&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="f66eccc892556cafb6abe680c2768bcdf1cc6f5c" translate="yes" xml:space="preserve">
          <source>Move to first non-blank character.</source>
          <target state="translated">Muévete al primer personaje no en blanco.</target>
        </trans-unit>
        <trans-unit id="77f061b9a5f55737090245a4c987a501fd31859d" translate="yes" xml:space="preserve">
          <source>Move to the &lt;var&gt;n&lt;/var&gt;th next button, or &lt;var&gt;n&lt;/var&gt;th previous button if &lt;var&gt;n&lt;/var&gt; is negative. If &lt;var&gt;n&lt;/var&gt; is zero, move to the start of any button at point. If &lt;var&gt;wrap&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, moving past either end of the buffer continues from the other end. If &lt;var&gt;display-message&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the button&amp;rsquo;s help-echo string is displayed. Any button with a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;skip&lt;/code&gt; property is skipped over. Returns the button found, and signals an error if no buttons can be found. If &lt;var&gt;no-error&lt;/var&gt; in non-&lt;code&gt;nil&lt;/code&gt;, return nil instead of signaling the error.</source>
          <target state="translated">Vaya al &lt;var&gt;n&lt;/var&gt; - &amp;eacute;simo bot&amp;oacute;n siguiente, o al &lt;var&gt;n&lt;/var&gt; - &amp;eacute;simo bot&amp;oacute;n anterior si &lt;var&gt;n&lt;/var&gt; es negativo. Si &lt;var&gt;n&lt;/var&gt; es cero, mu&amp;eacute;vase al inicio de cualquier bot&amp;oacute;n en el punto. Si el &lt;var&gt;wrap&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; , pasar por cualquier extremo del b&amp;uacute;fer contin&amp;uacute;a desde el otro extremo. Si &lt;var&gt;display-message&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; , se muestra la cadena de eco de ayuda del bot&amp;oacute;n. Se &lt;code&gt;skip&lt;/code&gt; cualquier bot&amp;oacute;n con una propiedad de omisi&amp;oacute;n que no sea &lt;code&gt;nil&lt;/code&gt; . Devuelve el bot&amp;oacute;n encontrado y se&amp;ntilde;ala un error si no se pueden encontrar botones. Si &lt;var&gt;no-error&lt;/var&gt; en un valor no &lt;code&gt;nil&lt;/code&gt; , devuelve nil en lugar de se&amp;ntilde;alar el error.</target>
        </trans-unit>
        <trans-unit id="43a8000e954824d989286ea299c734a6c7cfc47e" translate="yes" xml:space="preserve">
          <source>Move to the &lt;var&gt;n&lt;/var&gt;th previous button, or &lt;var&gt;n&lt;/var&gt;th next button if &lt;var&gt;n&lt;/var&gt; is negative. If &lt;var&gt;n&lt;/var&gt; is zero, move to the start of any button at point. If &lt;var&gt;wrap&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, moving past either end of the buffer continues from the other end. If &lt;var&gt;display-message&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the button&amp;rsquo;s help-echo string is displayed. Any button with a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;skip&lt;/code&gt; property is skipped over. Returns the button found, and signals an error if no buttons can be found. If &lt;var&gt;no-error&lt;/var&gt; in non-&lt;code&gt;nil&lt;/code&gt;, return nil instead of signaling the error.</source>
          <target state="translated">Mover a la &lt;var&gt;n&lt;/var&gt; &amp;ordm; bot&amp;oacute;n anterior, o &lt;var&gt;n&lt;/var&gt; &amp;ordm; bot&amp;oacute;n siguiente si &lt;var&gt;n&lt;/var&gt; es negativo. Si &lt;var&gt;n&lt;/var&gt; es cero, mu&amp;eacute;vase al inicio de cualquier bot&amp;oacute;n en el punto. Si el &lt;var&gt;wrap&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; , pasar por cualquier extremo del b&amp;uacute;fer contin&amp;uacute;a desde el otro extremo. Si &lt;var&gt;display-message&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; , se muestra la cadena de eco de ayuda del bot&amp;oacute;n. Se &lt;code&gt;skip&lt;/code&gt; cualquier bot&amp;oacute;n con una propiedad de omisi&amp;oacute;n que no sea &lt;code&gt;nil&lt;/code&gt; . Devuelve el bot&amp;oacute;n encontrado y se&amp;ntilde;ala un error si no se pueden encontrar botones. Si &lt;var&gt;no-error&lt;/var&gt; en un valor no &lt;code&gt;nil&lt;/code&gt; , devuelve nil en lugar de se&amp;ntilde;alar el error.</target>
        </trans-unit>
        <trans-unit id="82c00742d33b45dc4a64242477e55b1102b66060" translate="yes" xml:space="preserve">
          <source>Move to the beginning of the frame, or to the beginning of the previous frame.</source>
          <target state="translated">Muévete al principio del cuadro,o al principio del cuadro anterior.</target>
        </trans-unit>
        <trans-unit id="f893b5353d62ff9e12c35b7fb0f50fcaa8318d21" translate="yes" xml:space="preserve">
          <source>Move to the beginning of the next frame.</source>
          <target state="translated">Pasa al principio del siguiente cuadro.</target>
        </trans-unit>
        <trans-unit id="f297af264dbf0d0932fcc470cbe1fecf16841cb6" translate="yes" xml:space="preserve">
          <source>Moving Marker Positions</source>
          <target state="translated">Posiciones de marcadores móviles</target>
        </trans-unit>
        <trans-unit id="0bd65246c05a2e512da13871350157d560493acf" translate="yes" xml:space="preserve">
          <source>Moving around the existing windows.</source>
          <target state="translated">Moviéndose alrededor de las ventanas existentes.</target>
        </trans-unit>
        <trans-unit id="2450710a86f0e38a5a79572127c7c737f5ad650e" translate="yes" xml:space="preserve">
          <source>Moving by parsing lists and sexps.</source>
          <target state="translated">Moverse analizando las listas y las listas de precios.</target>
        </trans-unit>
        <trans-unit id="bcf6a5cad29fb42b7bcbea23a358b3e4f0f14190" translate="yes" xml:space="preserve">
          <source>Moving in terms of characters.</source>
          <target state="translated">Moviéndose en términos de personajes.</target>
        </trans-unit>
        <trans-unit id="5a0a7594babae65e9fe76da6d52f721490d43cae" translate="yes" xml:space="preserve">
          <source>Moving in terms of lines as displayed.</source>
          <target state="translated">Moviéndose en términos de líneas como se muestra.</target>
        </trans-unit>
        <trans-unit id="13133c035ed058b88d7defb0074a4f22a2f70555" translate="yes" xml:space="preserve">
          <source>Moving in terms of lines of text.</source>
          <target state="translated">Moverse en términos de líneas de texto.</target>
        </trans-unit>
        <trans-unit id="26b889272e175455d666cb66239aca23e15df9b4" translate="yes" xml:space="preserve">
          <source>Moving in terms of words.</source>
          <target state="translated">Moviéndose en términos de palabras.</target>
        </trans-unit>
        <trans-unit id="53e7a90c8dae3998834ecec2913e2cd430599962" translate="yes" xml:space="preserve">
          <source>Moving over Balanced Expressions</source>
          <target state="translated">Moviéndose sobre las expresiones equilibradas</target>
        </trans-unit>
        <trans-unit id="8693a264fbf00aa36cb635bdd23ca472a4fefbca" translate="yes" xml:space="preserve">
          <source>Moving over characters with certain syntaxes.</source>
          <target state="translated">Moverse sobre los personajes con ciertas sintaxis.</target>
        </trans-unit>
        <trans-unit id="042aaa586f3cf81580cc5e1f174b18fabcc9a6c1" translate="yes" xml:space="preserve">
          <source>Moving text up and down through the window.</source>
          <target state="translated">Moviendo el texto hacia arriba y hacia abajo a través de la ventana.</target>
        </trans-unit>
        <trans-unit id="e0d03b42d9316b69bb4bfb00e411362bd9b92f0d" translate="yes" xml:space="preserve">
          <source>Moving the contents sideways on the window.</source>
          <target state="translated">Moviendo el contenido de lado en la ventana.</target>
        </trans-unit>
        <trans-unit id="16062acc29ac83c08f815d725d13ca53166d371d" translate="yes" xml:space="preserve">
          <source>Moving the contents up and down on the window.</source>
          <target state="translated">Moviendo el contenido arriba y abajo en la ventana.</target>
        </trans-unit>
        <trans-unit id="7d1c895a6a69bb551cb3ab05a9436825b15affd7" translate="yes" xml:space="preserve">
          <source>Moving the marker to a new buffer or position.</source>
          <target state="translated">Mover el marcador a un nuevo buffer o posición.</target>
        </trans-unit>
        <trans-unit id="ef6300d4905ba5885914045db1c0057a8e7f4297" translate="yes" xml:space="preserve">
          <source>Moving the mouse before releasing the button.</source>
          <target state="translated">Mover el ratón antes de soltar el botón.</target>
        </trans-unit>
        <trans-unit id="96d5ebfd5d41e3ac266699afa4c07f17d42dc6a2" translate="yes" xml:space="preserve">
          <source>Moving the mouse between frames.</source>
          <target state="translated">Moviendo el ratón entre los cuadros.</target>
        </trans-unit>
        <trans-unit id="1a17774ff24591b3f0339a2975566bc3052acf2a" translate="yes" xml:space="preserve">
          <source>Moving to the beginning or end of the buffer.</source>
          <target state="translated">Moviéndose al principio o al final del buffer.</target>
        </trans-unit>
        <trans-unit id="6bc8df29048775edb3b67797f960add5fb20f24e" translate="yes" xml:space="preserve">
          <source>Multi-Frame Images</source>
          <target state="translated">Imágenes de múltiples cuadros</target>
        </trans-unit>
        <trans-unit id="075c17f7c3e017a54cdac2a44040577e98923617" translate="yes" xml:space="preserve">
          <source>Multi-file Packages</source>
          <target state="translated">Paquetes de varios archivos</target>
        </trans-unit>
        <trans-unit id="5dd969976c5aa3ebe5d20441de8bf258343ebb9c" translate="yes" xml:space="preserve">
          <source>Multiline Font Lock Constructs</source>
          <target state="translated">El bloqueo de la fuente multilínea construye</target>
        </trans-unit>
        <trans-unit id="850c8a0b5e9ff569211d95d52d7ed685c25d8241" translate="yes" xml:space="preserve">
          <source>Multiple Terminals</source>
          <target state="translated">Múltiples terminales</target>
        </trans-unit>
        <trans-unit id="0b79f8e4890c8608e67c29a1e344d765772f2753" translate="yes" xml:space="preserve">
          <source>Mutability</source>
          <target state="translated">Mutability</target>
        </trans-unit>
        <trans-unit id="ad5e52be06b8d534aed54257f0dbf7aa8ff2ec03" translate="yes" xml:space="preserve">
          <source>Mutex Type</source>
          <target state="translated">Tipo de Mutex</target>
        </trans-unit>
        <trans-unit id="dd060da851122b430bf0f99b458f73ce7b008e14" translate="yes" xml:space="preserve">
          <source>Mutex objects have no read syntax. They print in hash notation, giving the name of the mutex (if it has been given a name) or its address in core:</source>
          <target state="translated">Los objetos mutex no tienen sintaxis de lectura.Se imprimen en notación hash,dando el nombre del mutex (si se le ha dado un nombre)o su dirección en el núcleo:</target>
        </trans-unit>
        <trans-unit id="82f2c9599c5c14be2ce92b9de958cb57db81b38f" translate="yes" xml:space="preserve">
          <source>Mutexes</source>
          <target state="translated">Mutexes</target>
        </trans-unit>
        <trans-unit id="5255835bbfa8722501d3084e2ba916530d5a554c" translate="yes" xml:space="preserve">
          <source>Mutexes allow exclusive access to data.</source>
          <target state="translated">Los Mutex permiten el acceso exclusivo a los datos.</target>
        </trans-unit>
        <trans-unit id="b51a60734da64be0e618bacbea2865a8a7dcd669" translate="yes" xml:space="preserve">
          <source>N</source>
          <target state="translated">N</target>
        </trans-unit>
        <trans-unit id="ad4ff2f947bcd2ef0dc89fd3a7ca83591ba37e18" translate="yes" xml:space="preserve">
          <source>NS builds consider the tool bar to be a decoration, and therefore hide it on an undecorated frame.</source>
          <target state="translated">Los constructores de NS consideran la barra de herramientas como un adorno,y por lo tanto la esconden en un marco no decorado.</target>
        </trans-unit>
        <trans-unit id="e97a54619a408647abe8729216664f6e3b8d47e9" translate="yes" xml:space="preserve">
          <source>NS builds do not clip child frames at the parent frame&amp;rsquo;s edges, allowing them to be positioned so they do not obscure the parent frame while still being visible themselves.</source>
          <target state="translated">Las compilaciones NS no recortan los marcos secundarios en los bordes del marco principal, lo que les permite colocarlos de manera que no oculten el marco principal mientras siguen siendo visibles.</target>
        </trans-unit>
        <trans-unit id="eef19c54306daa69eda49c0272623bdb5e2b341f" translate="yes" xml:space="preserve">
          <source>NULL</source>
          <target state="translated">NULL</target>
        </trans-unit>
        <trans-unit id="93ba4abc16637fa77fe2aca725d91f288b90cfbb" translate="yes" xml:space="preserve">
          <source>NaCl</source>
          <target state="translated">NaCl</target>
        </trans-unit>
        <trans-unit id="f7fd9c68f804acda665d2ab082217bb1583318f2" translate="yes" xml:space="preserve">
          <source>NaN</source>
          <target state="translated">NaN</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="33b8ab26e443037c1b6a008d5daac383b918372d" translate="yes" xml:space="preserve">
          <source>Name of the physical monitor as &lt;var&gt;string&lt;/var&gt;.</source>
          <target state="translated">Nombre del monitor f&amp;iacute;sico como &lt;var&gt;string&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="33fc3e5c2e89aacc9b50f1169d442c12bb23fe2c" translate="yes" xml:space="preserve">
          <source>Naming Backup Files</source>
          <target state="translated">Nombrar los archivos de respaldo</target>
        </trans-unit>
        <trans-unit id="e93d31d911fab1a3e2aba574d0e113197a0b7e55" translate="yes" xml:space="preserve">
          <source>Naming a Function</source>
          <target state="translated">Nombrar una función</target>
        </trans-unit>
        <trans-unit id="697edbe4acd10b9466b672837ee81bd016c23b79" translate="yes" xml:space="preserve">
          <source>Narrow</source>
          <target state="translated">Narrow</target>
        </trans-unit>
        <trans-unit id="8ecb67c30433187282f082e25e52e62490e245cc" translate="yes" xml:space="preserve">
          <source>Narrowing</source>
          <target state="translated">Narrowing</target>
        </trans-unit>
        <trans-unit id="ba453f44e68e8506ff49aa121453956a2b98d6dd" translate="yes" xml:space="preserve">
          <source>Narrowing is specified with two buffer positions, which become the beginning and end of the accessible portion. For most editing commands and primitives, these positions replace the values of the beginning and end of the buffer. While narrowing is in effect, no text outside the accessible portion is displayed, and point cannot move outside the accessible portion. Note that narrowing does not alter actual buffer positions (see &lt;a href=&quot;point#Point&quot;&gt;Point&lt;/a&gt;); it only determines which positions are considered the accessible portion of the buffer. Most functions refuse to operate on text that is outside the accessible portion.</source>
          <target state="translated">El estrechamiento se especifica con dos posiciones de b&amp;uacute;fer, que se convierten en el principio y el final de la parte accesible. Para la mayor&amp;iacute;a de los comandos de edici&amp;oacute;n y primitivas, estas posiciones reemplazan los valores del principio y final del b&amp;uacute;fer. Mientras el estrechamiento est&amp;aacute; en efecto, no se muestra ning&amp;uacute;n texto fuera de la parte accesible y el punto no puede moverse fuera de la parte accesible. Tenga en cuenta que el estrechamiento no altera las posiciones reales del b&amp;uacute;fer (ver &lt;a href=&quot;point#Point&quot;&gt;Punto&lt;/a&gt; ); solo determina qu&amp;eacute; posiciones se consideran la parte accesible del b&amp;uacute;fer. La mayor&amp;iacute;a de las funciones se niegan a operar en texto que est&amp;aacute; fuera de la parte accesible.</target>
        </trans-unit>
        <trans-unit id="7bdf9620ee53a876bad1749f32c91f0860d2de5f" translate="yes" xml:space="preserve">
          <source>Native Frame</source>
          <target state="translated">Marco nativo</target>
        </trans-unit>
        <trans-unit id="bd2f2298f83f47b01df37aff3486ab3d7c655bdf" translate="yes" xml:space="preserve">
          <source>Naturally, Emacs will never signal &lt;code&gt;new-error&lt;/code&gt; on its own; only an explicit call to &lt;code&gt;signal&lt;/code&gt; (see &lt;a href=&quot;signaling-errors#Definition-of-signal&quot;&gt;Definition of signal&lt;/a&gt;) in your code can do this:</source>
          <target state="translated">Naturalmente, Emacs nunca se&amp;ntilde;alar&amp;aacute; un &lt;code&gt;new-error&lt;/code&gt; por s&amp;iacute; solo; solo una llamada expl&amp;iacute;cita a la &lt;code&gt;signal&lt;/code&gt; (ver &lt;a href=&quot;signaling-errors#Definition-of-signal&quot;&gt;Definici&amp;oacute;n de se&amp;ntilde;al&lt;/a&gt; ) en su c&amp;oacute;digo puede hacer esto:</target>
        </trans-unit>
        <trans-unit id="3d596b97b9719e1805fb3852fa7a7684551f102c" translate="yes" xml:space="preserve">
          <source>Negative parameter values position the right edge of the outer frame by &lt;var&gt;-x&lt;/var&gt; pixels left from the right edge of the screen (or the parent frame&amp;rsquo;s native rectangle) and the bottom edge by &lt;var&gt;-y&lt;/var&gt; pixels up from the bottom edge of the screen (or the parent frame&amp;rsquo;s native rectangle).</source>
          <target state="translated">Los valores de par&amp;aacute;metro negativos colocan el borde derecho del marco exterior en &lt;var&gt;-x&lt;/var&gt; p&amp;iacute;xeles a la izquierda del borde derecho de la pantalla (o el rect&amp;aacute;ngulo nativo del marco principal) y el borde inferior en &lt;var&gt;-y&lt;/var&gt; p&amp;iacute;xeles hacia arriba desde el borde inferior de la pantalla (o el rect&amp;aacute;ngulo nativo del marco principal).</target>
        </trans-unit>
        <trans-unit id="5806a4fdd1b51a9d2dde88f7b0063ac5bf8c2a79" translate="yes" xml:space="preserve">
          <source>Negative values never indicate an offset from the right or bottom edge of &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s display or parent frame. Rather, they mean that &lt;var&gt;frame&lt;/var&gt;&amp;rsquo;s outer position is on the left and/or above the origin of its display or the native position of its parent frame. This usually means that &lt;var&gt;frame&lt;/var&gt; is only partially visible (or completely invisible). However, on systems where the display&amp;rsquo;s origin does not coincide with its top-left corner, the frame may be visible on a secondary monitor.</source>
          <target state="translated">Los valores negativos nunca indican un desplazamiento desde el borde derecho o inferior de la pantalla del &lt;var&gt;frame&lt;/var&gt; o del marco principal. M&amp;aacute;s bien, quieren decir que la posici&amp;oacute;n exterior del &lt;var&gt;frame&lt;/var&gt; est&amp;aacute; a la izquierda y / o arriba del origen de su visualizaci&amp;oacute;n o la posici&amp;oacute;n nativa de su marco padre. Esto generalmente significa que el &lt;var&gt;frame&lt;/var&gt; es solo parcialmente visible (o completamente invisible). Sin embargo, en sistemas donde el origen de la pantalla no coincide con su esquina superior izquierda, el marco puede ser visible en un monitor secundario.</target>
        </trans-unit>
        <trans-unit id="50f671274ba560467341410034be03976b38330e" translate="yes" xml:space="preserve">
          <source>Nested association lists is supported:</source>
          <target state="translated">Se apoyan las listas de asociaciones anidadas:</target>
        </trans-unit>
        <trans-unit id="c347c211993fddc45bd180abc87a138a590651c8" translate="yes" xml:space="preserve">
          <source>Nested use of several change groups for the same buffer works as you would expect. Non-nested use of change groups for the same buffer will get Emacs confused, so don&amp;rsquo;t let it happen; the first change group you start for any given buffer should be the last one finished.</source>
          <target state="translated">El uso anidado de varios grupos de cambios para el mismo b&amp;uacute;fer funciona como era de esperar. El uso no anidado de grupos de cambio para el mismo b&amp;uacute;fer confundir&amp;aacute; a Emacs, as&amp;iacute; que no permita que suceda; el primer grupo de cambios que inicie para cualquier b&amp;uacute;fer determinado debe ser el &amp;uacute;ltimo en finalizar.</target>
        </trans-unit>
        <trans-unit id="d179e139906d2dd2f78172ff8723394a1290a6a3" translate="yes" xml:space="preserve">
          <source>Nesting &lt;code&gt;let-alist&lt;/code&gt; inside each other is allowed, but the code in the inner &lt;code&gt;let-alist&lt;/code&gt; can&amp;rsquo;t access the variables bound by the outer &lt;code&gt;let-alist&lt;/code&gt;.</source>
          <target state="translated">Se &lt;code&gt;let-alist&lt;/code&gt; anidar let-alist dentro de otro, pero el c&amp;oacute;digo en el &lt;code&gt;let-alist&lt;/code&gt; interno no puede acceder a las variables limitadas por el &lt;code&gt;let-alist&lt;/code&gt; externo .</target>
        </trans-unit>
        <trans-unit id="f4512de22f11934fdb81d9289bb39ac4b395feae" translate="yes" xml:space="preserve">
          <source>Network Connections</source>
          <target state="translated">Conexiones de la red</target>
        </trans-unit>
        <trans-unit id="1a2ceca984e39b172fda21e503d83194676acb77" translate="yes" xml:space="preserve">
          <source>Network Options</source>
          <target state="translated">Opciones de la red</target>
        </trans-unit>
        <trans-unit id="92a0a91f7ea484b5d2e0caa0572673102ce764e4" translate="yes" xml:space="preserve">
          <source>Network Servers</source>
          <target state="translated">Servidores de red</target>
        </trans-unit>
        <trans-unit id="5e5da2cd3c810a62709e4258b89df7da017dd9e1" translate="yes" xml:space="preserve">
          <source>Network access</source>
          <target state="translated">Acceso a la red</target>
        </trans-unit>
        <trans-unit id="4db16d13f459789c5e4f3a0b0eb58ac0b72836a4" translate="yes" xml:space="preserve">
          <source>Network connections and servers are created by calling &lt;code&gt;make-network-process&lt;/code&gt; with an argument list consisting of keyword/argument pairs, for example &lt;code&gt;:server t&lt;/code&gt; to create a server process, or &lt;code&gt;:type 'datagram&lt;/code&gt; to create a datagram connection. See &lt;a href=&quot;low_002dlevel-network#Low_002dLevel-Network&quot;&gt;Low-Level Network&lt;/a&gt;, for details. You can also use the &lt;code&gt;open-network-stream&lt;/code&gt; function described below.</source>
          <target state="translated">Las conexiones de red y los servidores se crean llamando a &lt;code&gt;make-network-process&lt;/code&gt; con una lista de argumentos que consta de pares de palabras clave / argumentos, por ejemplo &lt;code&gt;:server t&lt;/code&gt; para crear un proceso de servidor, o &lt;code&gt;:type 'datagram&lt;/code&gt; para crear una conexi&amp;oacute;n de datagrama. Consulte &lt;a href=&quot;low_002dlevel-network#Low_002dLevel-Network&quot;&gt;Red de bajo nivel&lt;/a&gt; para obtener m&amp;aacute;s detalles. Tambi&amp;eacute;n puede utilizar la funci&amp;oacute;n de &lt;code&gt;open-network-stream&lt;/code&gt; describe a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="03c2b7b3aa6dd8790276a40fdff32df5fbd4ba6e" translate="yes" xml:space="preserve">
          <source>Network servers let Emacs accept net connections.</source>
          <target state="translated">Los servidores de red permiten a Emacs aceptar conexiones de red.</target>
        </trans-unit>
        <trans-unit id="f7f37df5443218422ad6ebd50122d98556ecefca" translate="yes" xml:space="preserve">
          <source>Never add an autoload &lt;em&gt;comment&lt;/em&gt; to silence a compiler warning in another file. In the file that produces the warning, use &lt;code&gt;(defvar foo)&lt;/code&gt; to silence an undefined variable warning, and &lt;code&gt;declare-function&lt;/code&gt; (see &lt;a href=&quot;declaring-functions#Declaring-Functions&quot;&gt;Declaring Functions&lt;/a&gt;) to silence an undefined function warning; or require the relevant library; or use an explicit autoload &lt;em&gt;statement&lt;/em&gt;.</source>
          <target state="translated">Nunca agregue un &lt;em&gt;comentario de&lt;/em&gt; carga autom&amp;aacute;tica para silenciar una advertencia del compilador en otro archivo. En el archivo que produce la advertencia, use &lt;code&gt;(defvar foo)&lt;/code&gt; para silenciar una advertencia de variable indefinida y &lt;code&gt;declare-function&lt;/code&gt; (vea &lt;a href=&quot;declaring-functions#Declaring-Functions&quot;&gt;Declarar funciones&lt;/a&gt; ) para silenciar una advertencia de funci&amp;oacute;n indefinida; o requerir la biblioteca correspondiente; o utilice una &lt;em&gt;declaraci&amp;oacute;n de&lt;/em&gt; carga autom&amp;aacute;tica expl&amp;iacute;cita .</target>
        </trans-unit>
        <trans-unit id="9c2964759b06a2623b93cf7c65f17e2ef21aa268" translate="yes" xml:space="preserve">
          <source>Next in precedence are keymaps specified by enabled minor modes. These keymaps, if any, are specified by the variables &lt;code&gt;emulation-mode-map-alists&lt;/code&gt;, &lt;code&gt;minor-mode-overriding-map-alist&lt;/code&gt;, and &lt;code&gt;minor-mode-map-alist&lt;/code&gt;. See &lt;a href=&quot;controlling-active-maps#Controlling-Active-Maps&quot;&gt;Controlling Active Maps&lt;/a&gt;.</source>
          <target state="translated">Los siguientes en prioridad son los mapas de teclas especificados por los modos menores habilitados. Estos mapas de teclas, si los hay, se especifican mediante las variables &lt;code&gt;emulation-mode-map-alists&lt;/code&gt; , &lt;code&gt;minor-mode-overriding-map-alist&lt;/code&gt; overriding-map-alist y &lt;code&gt;minor-mode-map-alist&lt;/code&gt; . Consulte &lt;a href=&quot;controlling-active-maps#Controlling-Active-Maps&quot;&gt;Control de mapas activos&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cf11fa80110f5add1f6e8df89357b576825e8423" translate="yes" xml:space="preserve">
          <source>Next in precedence is the buffer&amp;rsquo;s &lt;em&gt;local keymap&lt;/em&gt;, containing key bindings specific to the buffer. The minibuffer also has a local keymap (see &lt;a href=&quot;intro-to-minibuffers#Intro-to-Minibuffers&quot;&gt;Intro to Minibuffers&lt;/a&gt;). If there is a &lt;code&gt;local-map&lt;/code&gt; text or overlay property at point, that specifies the local keymap to use, in place of the buffer&amp;rsquo;s default local keymap.</source>
          <target state="translated">El siguiente en precedencia es el &lt;em&gt;mapa de&lt;/em&gt; teclas &lt;em&gt;local&lt;/em&gt; del b&amp;uacute;fer , que contiene las combinaciones de teclas espec&amp;iacute;ficas del b&amp;uacute;fer. El minib&amp;uacute;fer tambi&amp;eacute;n tiene un &lt;a href=&quot;intro-to-minibuffers#Intro-to-Minibuffers&quot;&gt;mapa de teclas&lt;/a&gt; local (consulte Introducci&amp;oacute;n a los minib&amp;uacute;feres ). Si hay un texto de &lt;code&gt;local-map&lt;/code&gt; o una propiedad de superposici&amp;oacute;n en el punto, eso especifica el mapa de teclado local a usar, en lugar del mapa de teclado local predeterminado del b&amp;uacute;fer.</target>
        </trans-unit>
        <trans-unit id="ea6e9f5900f2c58fe85d30179802bd1c82319521" translate="yes" xml:space="preserve">
          <source>Next to every menu bar item, Emacs displays a key binding that runs the same command (if such a key binding exists). This serves as a convenient hint for users who do not know the key binding. If a command has multiple bindings, Emacs normally displays the first one it finds. You can specify one particular key binding by assigning an &lt;code&gt;:advertised-binding&lt;/code&gt; symbol property to the command. See &lt;a href=&quot;keys-in-documentation#Keys-in-Documentation&quot;&gt;Keys in Documentation&lt;/a&gt;.</source>
          <target state="translated">Junto a cada elemento de la barra de men&amp;uacute;, Emacs muestra un enlace de teclas que ejecuta el mismo comando (si existe dicho enlace de teclas). Esto sirve como una sugerencia conveniente para los usuarios que no conocen la vinculaci&amp;oacute;n de teclas. Si un comando tiene m&amp;uacute;ltiples enlaces, Emacs normalmente muestra el primero que encuentra. Puede especificar una vinculaci&amp;oacute;n de teclas en particular asignando una propiedad de s&amp;iacute;mbolo de &lt;code&gt;:advertised-binding&lt;/code&gt; al comando. Consulte las &lt;a href=&quot;keys-in-documentation#Keys-in-Documentation&quot;&gt;claves en la documentaci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="27f58e46bfcfa765f0350cd6b6821ef674d81fef" translate="yes" xml:space="preserve">
          <source>Next we define the menu items:</source>
          <target state="translated">A continuación definimos los elementos del menú:</target>
        </trans-unit>
        <trans-unit id="71ae8da1cccbc9f22418d39bfa80cb8b8749d267" translate="yes" xml:space="preserve">
          <source>Next, Emacs adds any extra load directories that you specify using the</source>
          <target state="translated">A continuación,Emacs añade cualquier directorio de carga extra que se especifique usando el</target>
        </trans-unit>
        <trans-unit id="d62380513230c1ed3241e1f5ee2099ae36407b91" translate="yes" xml:space="preserve">
          <source>Next, we call &lt;code&gt;(split-window W3 nil 'left)&lt;/code&gt;, passing the internal window &lt;var&gt;W3&lt;/var&gt; as the argument. The result:</source>
          <target state="translated">A continuaci&amp;oacute;n, llamamos &lt;code&gt;(split-window W3 nil 'left)&lt;/code&gt; , pasando la ventana interna &lt;var&gt;W3&lt;/var&gt; como argumento. El resultado:</target>
        </trans-unit>
        <trans-unit id="b961cdbb90d8271bcd99e03aa14df9f662fda815" translate="yes" xml:space="preserve">
          <source>Next, write an initialization function for the module.</source>
          <target state="translated">A continuación,escriba una función de inicialización para el módulo.</target>
        </trans-unit>
        <trans-unit id="e71dbb9278b56b980f41278b5bdbd5ad829743eb" translate="yes" xml:space="preserve">
          <source>Next: stop at the next stop point encountered after an expression (&lt;code&gt;edebug-next-mode&lt;/code&gt;). Also see &lt;code&gt;edebug-forward-sexp&lt;/code&gt; in &lt;a href=&quot;jumping#Jumping&quot;&gt;Jumping&lt;/a&gt;.</source>
          <target state="translated">Siguiente: det&amp;eacute;ngase en el siguiente punto de parada encontrado despu&amp;eacute;s de una expresi&amp;oacute;n ( &lt;code&gt;edebug-next-mode&lt;/code&gt; ). Consulte tambi&amp;eacute;n &lt;code&gt;edebug-forward-sexp&lt;/code&gt; en &lt;a href=&quot;jumping#Jumping&quot;&gt;Jumping&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1e86fd1a5ff5402fe649662053b5f46f96ea16c3" translate="yes" xml:space="preserve">
          <source>No argument is matched but backtracking through the gate is disabled while matching the remainder of the specifications at this level. This is primarily used to generate more specific syntax error messages. See &lt;a href=&quot;backtracking#Backtracking&quot;&gt;Backtracking&lt;/a&gt;, for more details. Also see the &lt;code&gt;let&lt;/code&gt; example.</source>
          <target state="translated">Ning&amp;uacute;n argumento coincide, pero el retroceso a trav&amp;eacute;s de la puerta est&amp;aacute; deshabilitado mientras se igualan el resto de las especificaciones en este nivel. Esto se utiliza principalmente para generar mensajes de error de sintaxis m&amp;aacute;s espec&amp;iacute;ficos. Consulte &lt;a href=&quot;backtracking#Backtracking&quot;&gt;Retroceso&lt;/a&gt; para obtener m&amp;aacute;s detalles. Vea tambi&amp;eacute;n el ejemplo de &lt;code&gt;let&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5cadafbd2e7190a2f1d2b8eedb1454e2868f07a2" translate="yes" xml:space="preserve">
          <source>No catch for tag</source>
          <target state="translated">No hay trampa para la etiqueta</target>
        </trans-unit>
        <trans-unit id="bbeb07f8bf2d7e3c732cf8947945435e8e59adfe" translate="yes" xml:space="preserve">
          <source>No obarray contains all symbols; in fact, some symbols are not in any obarray. They are called &lt;em&gt;uninterned symbols&lt;/em&gt;. An uninterned symbol has the same four cells as other symbols; however, the only way to gain access to it is by finding it in some other object or as the value of a variable.</source>
          <target state="translated">Ning&amp;uacute;n obarray contiene todos los s&amp;iacute;mbolos; de hecho, algunos s&amp;iacute;mbolos no est&amp;aacute;n en ning&amp;uacute;n orden. Se llaman &lt;em&gt;s&amp;iacute;mbolos no internados&lt;/em&gt; . Un s&amp;iacute;mbolo no internado tiene las mismas cuatro celdas que otros s&amp;iacute;mbolos; sin embargo, la &amp;uacute;nica forma de acceder a &amp;eacute;l es encontr&amp;aacute;ndolo en alg&amp;uacute;n otro objeto o como el valor de una variable.</target>
        </trans-unit>
        <trans-unit id="8838111d4610c90296b30fc380a23778ca2a7a0e" translate="yes" xml:space="preserve">
          <source>No text is inserted.</source>
          <target state="translated">No se inserta ningún texto.</target>
        </trans-unit>
        <trans-unit id="de830dc532a97e327dc9112b349772dda4316853" translate="yes" xml:space="preserve">
          <source>Non-</source>
          <target state="translated">Non-</target>
        </trans-unit>
        <trans-unit id="dd3e47873c08c1cbf08bc18047d3d358e469fc94" translate="yes" xml:space="preserve">
          <source>Non-&lt;code&gt;nil&lt;/code&gt; if IPv6 is supported.</source>
          <target state="translated">No es &lt;code&gt;nil&lt;/code&gt; si se admite IPv6.</target>
        </trans-unit>
        <trans-unit id="c137cc4db2df7f4be1c8cd466be3bbfbab527f39" translate="yes" xml:space="preserve">
          <source>Non-&lt;code&gt;nil&lt;/code&gt; if datagrams are supported.</source>
          <target state="translated">No es &lt;code&gt;nil&lt;/code&gt; si se admiten datagramas.</target>
        </trans-unit>
        <trans-unit id="85ba9cd318b20fd143c7eef7c3f80b8dac2a20df" translate="yes" xml:space="preserve">
          <source>Non-&lt;code&gt;nil&lt;/code&gt; if inside a string. More precisely, this is the character that will terminate the string, or &lt;code&gt;t&lt;/code&gt; if a generic string delimiter character should terminate it.</source>
          <target state="translated">No &lt;code&gt;nil&lt;/code&gt; si est&amp;aacute; dentro de una cuerda. M&amp;aacute;s precisamente, este es el car&amp;aacute;cter que terminar&amp;aacute; la cadena, o &lt;code&gt;t&lt;/code&gt; si un car&amp;aacute;cter delimitador de cadena gen&amp;eacute;rico debe terminarla.</target>
        </trans-unit>
        <trans-unit id="9c329207815f864cfe40c306c4b2308f01044b65" translate="yes" xml:space="preserve">
          <source>Non-&lt;code&gt;nil&lt;/code&gt; if local (a.k.a. &amp;ldquo;UNIX domain&amp;rdquo;) sockets are supported.</source>
          <target state="translated">No es &lt;code&gt;nil&lt;/code&gt; si se admiten sockets locales (tambi&amp;eacute;n conocidos como &quot;dominio UNIX&quot;).</target>
        </trans-unit>
        <trans-unit id="5b4d81358027d2cd5d76892ec114515c0d94000f" translate="yes" xml:space="preserve">
          <source>Non-&lt;code&gt;nil&lt;/code&gt; if non-blocking connect is supported.</source>
          <target state="translated">No &lt;code&gt;nil&lt;/code&gt; si se admite la conexi&amp;oacute;n sin bloqueo.</target>
        </trans-unit>
        <trans-unit id="6a0195fbc2801af663ba0ec5723eebf901180bde" translate="yes" xml:space="preserve">
          <source>Non-&lt;code&gt;nil&lt;/code&gt; if the system can select the port for a server.</source>
          <target state="translated">No es &lt;code&gt;nil&lt;/code&gt; si el sistema puede seleccionar el puerto para un servidor.</target>
        </trans-unit>
        <trans-unit id="298a4e63bde074768d01508f47e1e3a7d52b639a" translate="yes" xml:space="preserve">
          <source>Non-&lt;code&gt;nil&lt;/code&gt; if this window is dedicated to its buffer.</source>
          <target state="translated">No &lt;code&gt;nil&lt;/code&gt; si esta ventana est&amp;aacute; dedicada a su b&amp;uacute;fer.</target>
        </trans-unit>
        <trans-unit id="2d45527490c53e7bb3fcf4095792dbed717b907d" translate="yes" xml:space="preserve">
          <source>Non-&lt;code&gt;nil&lt;/code&gt; means current value of &lt;code&gt;start&lt;/code&gt; was the beginning of a line when it was chosen.</source>
          <target state="translated">No &lt;code&gt;nil&lt;/code&gt; significa que el valor actual de &lt;code&gt;start&lt;/code&gt; era el comienzo de una l&amp;iacute;nea cuando se eligi&amp;oacute;.</target>
        </trans-unit>
        <trans-unit id="97e7e8cff888f916fc069faab013939aece0c530" translate="yes" xml:space="preserve">
          <source>Non-&lt;code&gt;nil&lt;/code&gt; means that regular expression matching for the sake of &lt;code&gt;font-lock-keywords&lt;/code&gt; should be case-insensitive.</source>
          <target state="translated">No &lt;code&gt;nil&lt;/code&gt; significa que la coincidencia de expresiones regulares por el bien de &lt;code&gt;font-lock-keywords&lt;/code&gt; no debe distinguir may&amp;uacute;sculas de min&amp;uacute;sculas.</target>
        </trans-unit>
        <trans-unit id="17f14e42cfe6c0c5fa4278037593c1cf2a9f7e46" translate="yes" xml:space="preserve">
          <source>Non-&lt;code&gt;nil&lt;/code&gt;&lt;var&gt;region-noncontiguous-p&lt;/var&gt; means that the region between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; is composed of noncontiguous pieces. The most common example of this is a rectangular region, where the pieces are separated by newline characters.</source>
          <target state="translated">Non- &lt;code&gt;nil&lt;/code&gt; &lt;var&gt;region-noncontiguous-p&lt;/var&gt; significa que la regi&amp;oacute;n entre el &lt;var&gt;start&lt;/var&gt; y el &lt;var&gt;end&lt;/var&gt; se compone de piezas no contiguas. El ejemplo m&amp;aacute;s com&amp;uacute;n de esto es una regi&amp;oacute;n rectangular, donde las piezas est&amp;aacute;n separadas por caracteres de nueva l&amp;iacute;nea.</target>
        </trans-unit>
        <trans-unit id="5d29f2d794a4e41245bc116e7d56afd0854763f8" translate="yes" xml:space="preserve">
          <source>Non-ASCII Characters</source>
          <target state="translated">Personajes no ASCII</target>
        </trans-unit>
        <trans-unit id="9a1964e6f1fd92781e6b1f5855e1a8b90a085deb" translate="yes" xml:space="preserve">
          <source>Non-ASCII Characters in Strings</source>
          <target state="translated">Los personajes no ASCII en las cuerdas</target>
        </trans-unit>
        <trans-unit id="ee03ca40fe0fddf419289b00e54d3e235f27f181" translate="yes" xml:space="preserve">
          <source>Non-ASCII text in buffers and strings.</source>
          <target state="translated">Texto no ASCII en buffers y cadenas.</target>
        </trans-unit>
        <trans-unit id="6371bd35cb6aae61f199a61590cfd0399446eef8" translate="yes" xml:space="preserve">
          <source>Non-ASCII text written to the standard output or error descriptors is by default encoded using &lt;code&gt;locale-coding-system&lt;/code&gt; (see &lt;a href=&quot;locales#Locales&quot;&gt;Locales&lt;/a&gt;) if it is non-&lt;code&gt;nil&lt;/code&gt;; this can be overridden by binding &lt;code&gt;coding-system-for-write&lt;/code&gt; to a coding system of you choice (see &lt;a href=&quot;explicit-encoding#Explicit-Encoding&quot;&gt;Explicit Encoding&lt;/a&gt;).</source>
          <target state="translated">El texto que no es ASCII escrito en la salida est&amp;aacute;ndar o en los descriptores de error se codifica de forma predeterminada mediante el sistema de codificaci&amp;oacute;n &lt;code&gt;locale-coding-system&lt;/code&gt; (consulte &lt;a href=&quot;locales#Locales&quot;&gt;Locales&lt;/a&gt; ) si no es &lt;code&gt;nil&lt;/code&gt; ; esto se puede anular vinculando &lt;code&gt;coding-system-for-write&lt;/code&gt; a un sistema de codificaci&amp;oacute;n de su elecci&amp;oacute;n (consulte &lt;a href=&quot;explicit-encoding#Explicit-Encoding&quot;&gt;Codificaci&amp;oacute;n expl&amp;iacute;cita&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="8f9dde119327e925337a2b9bade0b26729d73142" translate="yes" xml:space="preserve">
          <source>Non-constant variables whose value can &lt;em&gt;not&lt;/em&gt; be an arbitrary Lisp object.</source>
          <target state="translated">Variables no constantes cuyo valor &lt;em&gt;no&lt;/em&gt; puede ser un objeto Lisp arbitrario.</target>
        </trans-unit>
        <trans-unit id="ba5ac4c4b4eca5c161d4957f66dd2e8e98dbac8b" translate="yes" xml:space="preserve">
          <source>Non-printing control flag. When it is used, other specifiers must be given in the order of decreasing size, i.e., years before days, hours before minutes, etc. Nothing will be produced in the result string to the left of &amp;lsquo;</source>
          <target state="translated">Bandera de control de no impresi&amp;oacute;n. Cuando se usa, se deben dar otros especificadores en orden decreciente de tama&amp;ntilde;o, es decir, a&amp;ntilde;os antes de d&amp;iacute;as, horas antes de minutos, etc. No se producir&amp;aacute; nada en la cadena de resultados a la izquierda de '</target>
        </trans-unit>
        <trans-unit id="0978c4a08e7aa3c2e4530a665830e83fac749d6d" translate="yes" xml:space="preserve">
          <source>Non-zero if communication with the subprocess uses a pty; zero if it uses a pipe.</source>
          <target state="translated">No cero si la comunicación con el subproceso utiliza un pty;cero si utiliza un tubo.</target>
        </trans-unit>
        <trans-unit id="5f22d5c13ab24217b6cce33d3adbd30e573e6278" translate="yes" xml:space="preserve">
          <source>Non-zero if this window is a &lt;em&gt;pseudo window&lt;/em&gt;. A pseudo window is either a window used to display the menu bar or the tool bar (when Emacs uses toolkits that don&amp;rsquo;t display their own menu bar and tool bar) or the tab bar or a window showing a tooltip on a tooltip frame. Pseudo windows are in general not accessible from Lisp code.</source>
          <target state="translated">Distinto de cero si esta ventana es una &lt;em&gt;pseudoventana&lt;/em&gt; . Una pseudo ventana es una ventana que se usa para mostrar la barra de men&amp;uacute; o la barra de herramientas (cuando Emacs usa conjuntos de herramientas que no muestran su propia barra de men&amp;uacute; y barra de herramientas) o la barra de pesta&amp;ntilde;as o una ventana que muestra una informaci&amp;oacute;n sobre herramientas en un marco de informaci&amp;oacute;n sobre herramientas. En general, las pseudo ventanas no son accesibles desde el c&amp;oacute;digo Lisp.</target>
        </trans-unit>
        <trans-unit id="54314d871cb31d9ea8c00c7bd36602724ec562af" translate="yes" xml:space="preserve">
          <source>Non-zero if this window is a minibuffer window, a window showing the minibuffer or the echo area.</source>
          <target state="translated">No cero si esta ventana es una ventana del minibúfer,una ventana que muestra el minibúfer o el área de eco.</target>
        </trans-unit>
        <trans-unit id="0ba1c3d1e346952de45a35d971ea7bad1bf252e0" translate="yes" xml:space="preserve">
          <source>Non-zero means the cursor in this window is logically off. This is used for blinking the cursor.</source>
          <target state="translated">No cero significa que el cursor en esta ventana está lógicamente apagado.Esto se utiliza para hacer parpadear el cursor.</target>
        </trans-unit>
        <trans-unit id="16075a3db57978fdbecdd0a45ee972e34d651059" translate="yes" xml:space="preserve">
          <source>Non-zero means this window&amp;rsquo;s mode line needs to be updated.</source>
          <target state="translated">No cero significa que la l&amp;iacute;nea de modo de esta ventana debe actualizarse.</target>
        </trans-unit>
        <trans-unit id="71fab370af08ad66d6e2717a8c670408d7a79d19" translate="yes" xml:space="preserve">
          <source>None of the above functions suppress quitting.</source>
          <target state="translated">Ninguna de las funciones anteriores suprime el abandono del trabajo.</target>
        </trans-unit>
        <trans-unit id="9bfc03cabd4be3ad4520d8a6d451463b5aa1986e" translate="yes" xml:space="preserve">
          <source>None of the arguments is instrumented.</source>
          <target state="translated">Ninguno de los argumentos está instrumentado.</target>
        </trans-unit>
        <trans-unit id="2df251e672be89a4e3f1f02e5d89d7600b0e8d4d" translate="yes" xml:space="preserve">
          <source>None of these three functions will make a frame smaller than needed to display all of its windows together with their scroll bars, fringes, margins, dividers, mode and header lines. This contrasts with requests by the window manager triggered, for example, by dragging the external border of a frame with the mouse. Such requests are always honored by clipping, if necessary, portions that cannot be displayed at the right, bottom corner of the frame. The parameters &lt;code&gt;min-width&lt;/code&gt; and &lt;code&gt;min-height&lt;/code&gt; (see &lt;a href=&quot;size-parameters#Size-Parameters&quot;&gt;Size Parameters&lt;/a&gt;) can be used to obtain a similar behavior when changing the frame size from within Emacs.</source>
          <target state="translated">Ninguna de estas tres funciones har&amp;aacute; que un marco sea m&amp;aacute;s peque&amp;ntilde;o de lo necesario para mostrar todas sus ventanas junto con sus barras de desplazamiento, franjas, m&amp;aacute;rgenes, divisores, modo y l&amp;iacute;neas de encabezado. Esto contrasta con las solicitudes del administrador de ventanas activadas, por ejemplo, al arrastrar el borde externo de un marco con el mouse. Estas solicitudes siempre se cumplen recortando, si es necesario, las partes que no se pueden mostrar en la esquina inferior derecha del marco. Los par&amp;aacute;metros &lt;code&gt;min-width&lt;/code&gt; y &lt;code&gt;min-height&lt;/code&gt; (ver &lt;a href=&quot;size-parameters#Size-Parameters&quot;&gt;Par&amp;aacute;metros de tama&amp;ntilde;o&lt;/a&gt; ) pueden usarse para obtener un comportamiento similar al cambiar el tama&amp;ntilde;o del marco desde dentro de Emacs.</target>
        </trans-unit>
        <trans-unit id="a13391618a7eb550b931b1ca7f5e7dea3f609549" translate="yes" xml:space="preserve">
          <source>Nonlocal Exits</source>
          <target state="translated">Salidas no locales</target>
        </trans-unit>
        <trans-unit id="04cfa77523068f9d99f2dadfb2d56696bd61d7b4" translate="yes" xml:space="preserve">
          <source>Nonlocal Exits in Modules</source>
          <target state="translated">Salidas no locales en los módulos</target>
        </trans-unit>
        <trans-unit id="989a5aecc184b93ecbd769ecbad5acdea9c400aa" translate="yes" xml:space="preserve">
          <source>Nonlocal exits for the program&amp;rsquo;s own purposes.</source>
          <target state="translated">Salidas no locales para fines propios del programa.</target>
        </trans-unit>
        <trans-unit id="9fd8001fd6d82a32c9adc0fec8386196b8416cea" translate="yes" xml:space="preserve">
          <source>Nonprinting Characters in Strings</source>
          <target state="translated">Caracteres sin impresión en las cuerdas</target>
        </trans-unit>
        <trans-unit id="f8770b24b50ea318a926e10ce75d22b10fca1574" translate="yes" xml:space="preserve">
          <source>Normally all the elements are markers or &lt;code&gt;nil&lt;/code&gt;, but if &lt;var&gt;integers&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that means to use integers instead of markers. (In that case, the buffer itself is appended as an additional element at the end of the list, to facilitate complete restoration of the match data.) If the last match was done on a string with &lt;code&gt;string-match&lt;/code&gt;, then integers are always used, since markers can&amp;rsquo;t point into a string.</source>
          <target state="translated">Normalmente, todos los elementos son marcadores o &lt;code&gt;nil&lt;/code&gt; , pero si &lt;var&gt;integers&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; , eso significa utilizar n&amp;uacute;meros enteros en lugar de marcadores. (En ese caso, el b&amp;uacute;fer en s&amp;iacute; mismo se agrega como un elemento adicional al final de la lista, para facilitar la restauraci&amp;oacute;n completa de los datos de coincidencia). Si la &amp;uacute;ltima coincidencia se realiz&amp;oacute; en una cadena con &lt;code&gt;string-match&lt;/code&gt; , siempre se usan enteros , ya que los marcadores no pueden apuntar a una cadena.</target>
        </trans-unit>
        <trans-unit id="192d978732b9939fab239d8824137b1ba2ec3243" translate="yes" xml:space="preserve">
          <source>Normally any upper case event is converted to lower case if the original event is undefined and the lower case equivalent is defined. The argument &lt;var&gt;dont-downcase-last&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, means do not convert the last event to lower case. This is appropriate for reading a key sequence to be defined.</source>
          <target state="translated">Normalmente, cualquier evento en may&amp;uacute;sculas se convierte a min&amp;uacute;sculas si el evento original no est&amp;aacute; definido y se define el equivalente en min&amp;uacute;sculas. El argumento &lt;var&gt;dont-downcase-last&lt;/var&gt; , si no es &lt;code&gt;nil&lt;/code&gt; , significa que no convierte el &amp;uacute;ltimo evento a min&amp;uacute;sculas. Esto es apropiado para leer una secuencia de teclas por definir.</target>
        </trans-unit>
        <trans-unit id="dad78cd65a27cbbd2fd73355d58cb98bdd207435" translate="yes" xml:space="preserve">
          <source>Normally completion operates on the whole string, so for all normal collections, this will always return &lt;code&gt;(0 . (length
&lt;var&gt;suffix&lt;/var&gt;))&lt;/code&gt;. But more complex completion such as completion on files is done one field at a time. For example, completion of &lt;code&gt;&quot;/usr/sh&quot;&lt;/code&gt; will include &lt;code&gt;&quot;/usr/share/&quot;&lt;/code&gt; but not &lt;code&gt;&quot;/usr/share/doc&quot;&lt;/code&gt; even if &lt;code&gt;&quot;/usr/share/doc&quot;&lt;/code&gt; exists. Also &lt;code&gt;all-completions&lt;/code&gt; on &lt;code&gt;&quot;/usr/sh&quot;&lt;/code&gt; will not include &lt;code&gt;&quot;/usr/share/&quot;&lt;/code&gt; but only &lt;code&gt;&quot;share/&quot;&lt;/code&gt;. So if &lt;var&gt;string&lt;/var&gt; is &lt;code&gt;&quot;/usr/sh&quot;&lt;/code&gt; and &lt;var&gt;suffix&lt;/var&gt; is &lt;code&gt;&quot;e/doc&quot;&lt;/code&gt;, &lt;code&gt;completion-boundaries&lt;/code&gt; will return &lt;code&gt;(5 . 1)&lt;/code&gt; which tells us that the &lt;var&gt;collection&lt;/var&gt; will only return completion information that pertains to the area after &lt;code&gt;&quot;/usr/&quot;&lt;/code&gt; and before &lt;code&gt;&quot;/doc&quot;&lt;/code&gt;.</source>
          <target state="translated">Normalmente, la finalizaci&amp;oacute;n opera en toda la cadena, por lo que para todas las colecciones normales, siempre devolver&amp;aacute; &lt;code&gt;(0 . (length &lt;var&gt;suffix&lt;/var&gt;))&lt;/code&gt; . Pero la finalizaci&amp;oacute;n m&amp;aacute;s compleja, como la finalizaci&amp;oacute;n de archivos, se realiza un campo a la vez. Por ejemplo, completar &lt;code&gt;&quot;/usr/sh&quot;&lt;/code&gt; incluir&amp;aacute; &lt;code&gt;&quot;/usr/share/&quot;&lt;/code&gt; pero no &lt;code&gt;&quot;/usr/share/doc&quot;&lt;/code&gt; incluso si &lt;code&gt;&quot;/usr/share/doc&quot;&lt;/code&gt; existe. Adem&amp;aacute;s, &lt;code&gt;all-completions&lt;/code&gt; en &lt;code&gt;&quot;/usr/sh&quot;&lt;/code&gt; no incluir&amp;aacute;n &lt;code&gt;&quot;/usr/share/&quot;&lt;/code&gt; sino solo &lt;code&gt;&quot;share/&quot;&lt;/code&gt; . Entonces, si la &lt;var&gt;string&lt;/var&gt; es &lt;code&gt;&quot;/usr/sh&quot;&lt;/code&gt; y el &lt;var&gt;suffix&lt;/var&gt; es &lt;code&gt;&quot;e/doc&quot;&lt;/code&gt; , &lt;code&gt;completion-boundaries&lt;/code&gt; devolver&amp;aacute;n &lt;code&gt;(5 . 1)&lt;/code&gt; que nos dice que la &lt;var&gt;collection&lt;/var&gt; solo devolver&amp;aacute; la informaci&amp;oacute;n de finalizaci&amp;oacute;n que pertenece al &amp;aacute;rea despu&amp;eacute;s de &lt;code&gt;&quot;/usr/&quot;&lt;/code&gt; y antes de &lt;code&gt;&quot;/doc&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eef86229b8453b39f2aa268e50526cd24df0ce4f" translate="yes" xml:space="preserve">
          <source>Normally the frame parameter &lt;code&gt;vertical-scroll-bars&lt;/code&gt; controls whether the windows in the frame have vertical scroll bars, and whether they are on the left or right. The frame parameter &lt;code&gt;scroll-bar-width&lt;/code&gt; specifies how wide they are (&lt;code&gt;nil&lt;/code&gt; meaning the default).</source>
          <target state="translated">Normalmente, el par&amp;aacute;metro de marco &lt;code&gt;vertical-scroll-bars&lt;/code&gt; controla si las ventanas del marco tienen barras de desplazamiento verticales y si est&amp;aacute;n a la izquierda oa la derecha. El par&amp;aacute;metro de marco &lt;code&gt;scroll-bar-width&lt;/code&gt; especifica qu&amp;eacute; tan anchos son ( &lt;code&gt;nil&lt;/code&gt; significa el valor predeterminado).</target>
        </trans-unit>
        <trans-unit id="b67289438b7d78753fd70ed6a9106b4a91cda89b" translate="yes" xml:space="preserve">
          <source>Normally the menu bar shows global items followed by items defined by the local maps.</source>
          <target state="translated">Normalmente la barra de menú muestra elementos globales seguidos de elementos definidos por los mapas locales.</target>
        </trans-unit>
        <trans-unit id="b4ce40396bab6737ba31fe0b078bdd852088010f" translate="yes" xml:space="preserve">
          <source>Normally the strings in this menu are determined automatically from the choices; however, you can specify different strings for the menu by including the &lt;code&gt;:tag&lt;/code&gt; keyword in the alternatives. For example, if an integer stands for a number of spaces, while a string is text to use verbatim, you might write the customization type this way,</source>
          <target state="translated">Normalmente, las cadenas de este men&amp;uacute; se determinan autom&amp;aacute;ticamente a partir de las opciones; sin embargo, puede especificar diferentes cadenas para el men&amp;uacute; incluyendo la palabra clave &lt;code&gt;:tag&lt;/code&gt; en las alternativas. Por ejemplo, si un n&amp;uacute;mero entero representa un n&amp;uacute;mero de espacios, mientras que una cadena es texto para usarlo literalmente, puede escribir el tipo de personalizaci&amp;oacute;n de esta manera,</target>
        </trans-unit>
        <trans-unit id="62b64002f4f8b319511bb978309afeb856e1036e" translate="yes" xml:space="preserve">
          <source>Normally this function returns a list of coding systems that could handle decoding the text that was scanned. They are listed in order of decreasing priority. But if &lt;var&gt;highest&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then the return value is just one coding system, the one that is highest in priority.</source>
          <target state="translated">Normalmente, esta funci&amp;oacute;n devuelve una lista de sistemas de codificaci&amp;oacute;n que podr&amp;iacute;an manejar la decodificaci&amp;oacute;n del texto que se escane&amp;oacute;. Se enumeran en orden de prioridad decreciente. Pero si el valor &lt;var&gt;highest&lt;/var&gt; es no &lt;code&gt;nil&lt;/code&gt; , entonces el valor de retorno es solo un sistema de codificaci&amp;oacute;n, el que tiene la prioridad m&amp;aacute;s alta.</target>
        </trans-unit>
        <trans-unit id="ab4019dfe8ddc7d2f4af3e844b877df3f30a8685" translate="yes" xml:space="preserve">
          <source>Normally you add events to the front of this list, so that the events most recently unread will be reread first.</source>
          <target state="translated">Normalmente se añaden eventos al principio de esta lista,de modo que los eventos no leídos más recientemente se releen primero.</target>
        </trans-unit>
        <trans-unit id="9b2e214efb7720744217eac6eff20d8f98ffd008" translate="yes" xml:space="preserve">
          <source>Normally you do not need to set the stipple attribute, because it is used automatically to handle certain shades of gray.</source>
          <target state="translated">Normalmente no es necesario establecer el atributo stipple,porque se utiliza automáticamente para manejar ciertos tonos de gris.</target>
        </trans-unit>
        <trans-unit id="c998bbdbb3cbe3ac5764a0951dbc909e2665a30b" translate="yes" xml:space="preserve">
          <source>Normally you don&amp;rsquo;t specify the name explicitly, and Emacs computes the frame name automatically based on a template stored in the variable &lt;code&gt;frame-title-format&lt;/code&gt;. Emacs recomputes the name each time the frame is redisplayed.</source>
          <target state="translated">Normalmente, no especifica el nombre expl&amp;iacute;citamente, y Emacs calcula el nombre del marco autom&amp;aacute;ticamente bas&amp;aacute;ndose en una plantilla almacenada en la variable &lt;code&gt;frame-title-format&lt;/code&gt; . Emacs vuelve a calcular el nombre cada vez que se vuelve a mostrar el marco.</target>
        </trans-unit>
        <trans-unit id="802f45620f0b9ed768e00202f167ac521857caf7" translate="yes" xml:space="preserve">
          <source>Normally you should not change the value of this variable.</source>
          <target state="translated">Normalmente no se debe cambiar el valor de esta variable.</target>
        </trans-unit>
        <trans-unit id="7a23d4c059b6f9f25f5adc759fee5b9b134865c2" translate="yes" xml:space="preserve">
          <source>Normally, &lt;code&gt;add-to-history&lt;/code&gt; removes duplicate members from the history list if &lt;code&gt;history-delete-duplicates&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;. However, if &lt;var&gt;keep-all&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that says not to remove duplicates, and to add &lt;var&gt;newelt&lt;/var&gt; to the list even if it is empty.</source>
          <target state="translated">Normalmente, &lt;code&gt;add-to-history&lt;/code&gt; elimina miembros duplicados de la lista del historial si &lt;code&gt;history-delete-duplicates&lt;/code&gt; no es &lt;code&gt;nil&lt;/code&gt; . Sin embargo, si &lt;var&gt;keep-all&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; , eso dice que no se deben eliminar los duplicados y agregar &lt;var&gt;newelt&lt;/var&gt; a la lista incluso si est&amp;aacute; vac&amp;iacute;a.</target>
        </trans-unit>
        <trans-unit id="84a125fd6e14f51bb1790a0c3b9796a123e66347" translate="yes" xml:space="preserve">
          <source>Normally, &lt;code&gt;define-abbrev&lt;/code&gt; sets the variable &lt;code&gt;abbrevs-changed&lt;/code&gt; to &lt;code&gt;t&lt;/code&gt;, if it actually changes the abbrev. This is so that some commands will offer to save the abbrevs. It does not do this for a system abbrev, since those aren&amp;rsquo;t saved anyway.</source>
          <target state="translated">Normalmente, &lt;code&gt;define-abbrev&lt;/code&gt; establece la variable &lt;code&gt;abbrevs-changed&lt;/code&gt; en &lt;code&gt;t&lt;/code&gt; , si realmente cambia la abreviatura. Esto es para que algunos comandos ofrezcan guardar las abreviaturas. No hace esto para una abreviatura del sistema, ya que de todos modos no se guardan.</target>
        </trans-unit>
        <trans-unit id="970594f1826445de648390764f7d9d23076e7277" translate="yes" xml:space="preserve">
          <source>Normally, &lt;code&gt;emacs_value&lt;/code&gt; objects have a rather short lifetime: it ends when the &lt;code&gt;emacs_env&lt;/code&gt; pointer used for their creation goes out of scope. Occasionally, you may need to create &lt;em&gt;global references&lt;/em&gt;: &lt;code&gt;emacs_value&lt;/code&gt; objects that live as long as you wish. Use the following two functions to manage such objects.</source>
          <target state="translated">Normalmente, los objetos &lt;code&gt;emacs_value&lt;/code&gt; tienen una vida &amp;uacute;til bastante corta: finaliza cuando el puntero &lt;code&gt;emacs_env&lt;/code&gt; utilizado para su creaci&amp;oacute;n se sale de su alcance. Ocasionalmente, es posible que deba crear &lt;em&gt;referencias globales&lt;/em&gt; : objetos &lt;code&gt;emacs_value&lt;/code&gt; que vivan todo el tiempo que desee. Utilice las dos funciones siguientes para gestionar dichos objetos.</target>
        </trans-unit>
        <trans-unit id="39b787a71e5fbae9edb48d71ec234482e20b431b" translate="yes" xml:space="preserve">
          <source>Normally, &lt;code&gt;map-y-or-n-p&lt;/code&gt; binds &lt;code&gt;cursor-in-echo-area&lt;/code&gt; while prompting. But if &lt;var&gt;no-cursor-in-echo-area&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it does not do that.</source>
          <target state="translated">Normalmente, &lt;code&gt;map-y-or-n-p&lt;/code&gt; enlaza el &lt;code&gt;cursor-in-echo-area&lt;/code&gt; mientras lo solicita. Pero si &lt;var&gt;no-cursor-in-echo-area&lt;/var&gt; es no- &lt;code&gt;nil&lt;/code&gt; , no hace eso.</target>
        </trans-unit>
        <trans-unit id="b1b62f370a1c1a6e7086ac926443ce71d3d50fde" translate="yes" xml:space="preserve">
          <source>Normally, &lt;code&gt;md5&lt;/code&gt; signals an error if the text can&amp;rsquo;t be encoded using the specified or chosen coding system. However, if &lt;var&gt;noerror&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it silently uses &lt;code&gt;raw-text&lt;/code&gt; coding instead.</source>
          <target state="translated">Normalmente, &lt;code&gt;md5&lt;/code&gt; indica un error si el texto no se puede codificar utilizando el sistema de codificaci&amp;oacute;n especificado o elegido. Sin embargo, si &lt;var&gt;noerror&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; , en su lugar utiliza silenciosamente codificaci&amp;oacute;n de &lt;code&gt;raw-text&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4c4fc931c5f12a4d2220d2a0743fc463a725a420" translate="yes" xml:space="preserve">
          <source>Normally, &lt;code&gt;revert-buffer&lt;/code&gt; asks for confirmation before it changes the buffer; but if the argument &lt;var&gt;noconfirm&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;revert-buffer&lt;/code&gt; does not ask for confirmation.</source>
          <target state="translated">Normalmente, &lt;code&gt;revert-buffer&lt;/code&gt; solicita confirmaci&amp;oacute;n antes de cambiar el b&amp;uacute;fer; pero si el argumento &lt;var&gt;noconfirm&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; , revert &lt;code&gt;revert-buffer&lt;/code&gt; no solicita confirmaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="c7a8f6a1665078c7e303220251e8e70e9878aff0" translate="yes" xml:space="preserve">
          <source>Normally, &lt;code&gt;transpose-regions&lt;/code&gt; relocates markers with the transposed text; a marker previously positioned within one of the two transposed portions moves along with that portion, thus remaining between the same two characters in their new position. However, if &lt;var&gt;leave-markers&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;transpose-regions&lt;/code&gt; does not do this&amp;mdash;it leaves all markers unrelocated.</source>
          <target state="translated">Normalmente, &lt;code&gt;transpose-regions&lt;/code&gt; reubican los marcadores con el texto transpuesto; un marcador previamente colocado dentro de una de las dos partes transpuestas se mueve junto con esa parte, quedando as&amp;iacute; entre los mismos dos caracteres en su nueva posici&amp;oacute;n. Sin embargo, si &lt;var&gt;leave-markers&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;transpose-regions&lt;/code&gt; no hacen esto; deja todos los marcadores sin reubicar.</target>
        </trans-unit>
        <trans-unit id="c224a495efc6cae4ffaacc3200216d71860a3648" translate="yes" xml:space="preserve">
          <source>Normally, &lt;code&gt;write-region&lt;/code&gt; displays the message &amp;lsquo;</source>
          <target state="translated">Normalmente, &lt;code&gt;write-region&lt;/code&gt; muestra el mensaje '</target>
        </trans-unit>
        <trans-unit id="a463efccfae5102145810b771db2db6ac9df4444" translate="yes" xml:space="preserve">
          <source>Normally, &lt;var&gt;keymap&lt;/var&gt; is used just once, to look up the very next key. If the optional argument &lt;var&gt;keep-pred&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, the map stays active as long as the user types keys defined in &lt;var&gt;keymap&lt;/var&gt;; when the user types a key that is not in &lt;var&gt;keymap&lt;/var&gt;, the transient keymap is deactivated and normal key lookup continues for that key.</source>
          <target state="translated">Normalmente, el &lt;var&gt;keymap&lt;/var&gt; se usa solo una vez, para buscar la siguiente tecla. Si el argumento opcional &lt;var&gt;keep-pred&lt;/var&gt; es &lt;code&gt;t&lt;/code&gt; , el mapa permanece activo mientras las teclas de tipos de usuario definidos en el &lt;var&gt;keymap&lt;/var&gt; ; cuando el usuario escribe una tecla que no est&amp;aacute; en el &lt;var&gt;keymap&lt;/var&gt; teclas , el mapa de teclas transitorio se desactiva y la b&amp;uacute;squeda de teclas normal contin&amp;uacute;a para esa tecla.</target>
        </trans-unit>
        <trans-unit id="f65ffe59e12caca0f23c215b2caa4e497fa21c12" translate="yes" xml:space="preserve">
          <source>Normally, Emacs uses the face specs of each face to automatically calculate its attributes on each frame (see &lt;a href=&quot;defining-faces#Defining-Faces&quot;&gt;Defining Faces&lt;/a&gt;). The function &lt;code&gt;set-face-attribute&lt;/code&gt; can override this calculation by directly assigning attributes to a face, either on a specific frame or for all frames. This function is mostly intended for internal usage.</source>
          <target state="translated">Normalmente, Emacs usa las especificaciones de caras de cada cara para calcular autom&amp;aacute;ticamente sus atributos en cada cuadro (ver &lt;a href=&quot;defining-faces#Defining-Faces&quot;&gt;Definici&amp;oacute;n de caras&lt;/a&gt; ). La funci&amp;oacute;n &lt;code&gt;set-face-attribute&lt;/code&gt; puede anular este c&amp;aacute;lculo asignando atributos directamente a una cara, ya sea en un marco espec&amp;iacute;fico o para todos los marcos. Esta funci&amp;oacute;n est&amp;aacute; pensada principalmente para uso interno.</target>
        </trans-unit>
        <trans-unit id="56d71e2eece71984f9cf83046339cf5cde803b82" translate="yes" xml:space="preserve">
          <source>Normally, a face is declared just once, using &lt;code&gt;defface&lt;/code&gt;, and any further changes to its appearance are applied using the Customize framework (e.g., via the Customize user interface or via the &lt;code&gt;custom-set-faces&lt;/code&gt; function; see &lt;a href=&quot;applying-customizations#Applying-Customizations&quot;&gt;Applying Customizations&lt;/a&gt;), or by face remapping (see &lt;a href=&quot;face-remapping#Face-Remapping&quot;&gt;Face Remapping&lt;/a&gt;). In the rare event that you need to change a face spec directly from Lisp, you can use the &lt;code&gt;face-spec-set&lt;/code&gt; function.</source>
          <target state="translated">Normalmente, una cara se declara solo una vez, usando &lt;code&gt;defface&lt;/code&gt; , y cualquier cambio adicional en su apariencia se aplica usando el marco de personalizaci&amp;oacute;n (por ejemplo, a trav&amp;eacute;s de la interfaz de usuario Personalizar o mediante la funci&amp;oacute;n de &lt;code&gt;custom-set-faces&lt;/code&gt; ; consulte &lt;a href=&quot;applying-customizations#Applying-Customizations&quot;&gt;Aplicaci&amp;oacute;n de personalizaciones&lt;/a&gt; ) o reasignaci&amp;oacute;n de rostros (consulte &lt;a href=&quot;face-remapping#Face-Remapping&quot;&gt;Remapeado de rostros&lt;/a&gt; ). En el raro caso de que necesite cambiar una especificaci&amp;oacute;n de rostro directamente desde Lisp, puede utilizar la funci&amp;oacute;n de &lt;code&gt;face-spec-set&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef564d0438f8b582059c4f06fa6f5901a7eb5fe3" translate="yes" xml:space="preserve">
          <source>Normally, a newline is automatically inserted after the header, the footer and every node&amp;rsquo;s textual description. If &lt;var&gt;nosep&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, no newline is inserted. This may be useful for displaying an entire ewoc on a single line, for example, or for making nodes invisible by arranging for &lt;var&gt;pretty-printer&lt;/var&gt; to do nothing for those nodes.</source>
          <target state="translated">Normalmente, una nueva l&amp;iacute;nea se inserta autom&amp;aacute;ticamente despu&amp;eacute;s del encabezado, el pie de p&amp;aacute;gina y la descripci&amp;oacute;n textual de cada nodo. Si &lt;var&gt;nosep&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; , no se inserta una nueva l&amp;iacute;nea. Esto puede ser &amp;uacute;til para mostrar un ewoc completo en una sola l&amp;iacute;nea, por ejemplo, o para hacer que los nodos sean invisibles al hacer que &lt;var&gt;pretty-printer&lt;/var&gt; no haga nada por esos nodos.</target>
        </trans-unit>
        <trans-unit id="78ecfe635d86fae4e7dabe6c5a40c28ac6789c76" translate="yes" xml:space="preserve">
          <source>Normally, a red highlight indicates the form was never completely evaluated; a brown highlight means it always evaluated to the same value (meaning there has been little testing of what is done with the result). However, the red highlight is skipped for forms that can&amp;rsquo;t possibly complete their evaluation, such as &lt;code&gt;error&lt;/code&gt;. The brown highlight is skipped for forms that are expected to always evaluate to the same value, such as &lt;code&gt;(setq x 14)&lt;/code&gt;.</source>
          <target state="translated">Normalmente, un resaltado rojo indica que el formulario nunca se evalu&amp;oacute; por completo; un resaltado marr&amp;oacute;n significa que siempre se evalu&amp;oacute; con el mismo valor (lo que significa que ha habido pocas pruebas de lo que se hizo con el resultado). Sin embargo, el resaltado rojo se omite para los formularios que no pueden completar su evaluaci&amp;oacute;n, como un &lt;code&gt;error&lt;/code&gt; . El resaltado marr&amp;oacute;n se omite para los formularios que se espera que siempre se eval&amp;uacute;en con el mismo valor, como &lt;code&gt;(setq x 14)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b7854440eb6b90acf05dcac089bc58cb02d3786d" translate="yes" xml:space="preserve">
          <source>Normally, commands specify which representation to use for the prefix argument, either numeric or raw, in the &lt;code&gt;interactive&lt;/code&gt; specification. (See &lt;a href=&quot;using-interactive#Using-Interactive&quot;&gt;Using Interactive&lt;/a&gt;.) Alternatively, functions may look at the value of the prefix argument directly in the variable &lt;code&gt;current-prefix-arg&lt;/code&gt;, but this is less clean.</source>
          <target state="translated">Normalmente, los comandos especifican qu&amp;eacute; representaci&amp;oacute;n usar para el argumento de prefijo, ya sea num&amp;eacute;rico o sin formato, en la especificaci&amp;oacute;n &lt;code&gt;interactive&lt;/code&gt; . (Consulte &lt;a href=&quot;using-interactive#Using-Interactive&quot;&gt;Uso de Interactive&lt;/a&gt; ). Alternativamente, las funciones pueden mirar el valor del argumento prefijo directamente en la variable &lt;code&gt;current-prefix-arg&lt;/code&gt; , pero esto es menos claro.</target>
        </trans-unit>
        <trans-unit id="0922fd40705d46e517e311d0b4534c4d4aea3a25" translate="yes" xml:space="preserve">
          <source>Normally, deleting a large amount of text from a buffer inhibits further auto-saving of that buffer because it has shrunk. However, &lt;code&gt;erase-buffer&lt;/code&gt; does not do this, the idea being that the future text is not really related to the former text, and its size should not be compared with that of the former text.</source>
          <target state="translated">Normalmente, eliminar una gran cantidad de texto de un b&amp;uacute;fer inhibe el guardado autom&amp;aacute;tico adicional de ese b&amp;uacute;fer porque se ha reducido. Sin embargo, &lt;code&gt;erase-buffer&lt;/code&gt; no hace esto, la idea es que el texto futuro no est&amp;aacute; realmente relacionado con el texto anterior, y su tama&amp;ntilde;o no debe compararse con el del texto anterior.</target>
        </trans-unit>
        <trans-unit id="2b35691422f5a8a262ba1ccbae353a8209b947f0" translate="yes" xml:space="preserve">
          <source>Normally, displaying a long message resizes the echo area to display the entire message. But if the variable &lt;code&gt;message-truncate-lines&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the echo area does not resize, and the message is truncated to fit it.</source>
          <target state="translated">Normalmente, mostrar un mensaje largo cambia el tama&amp;ntilde;o del &amp;aacute;rea de eco para mostrar el mensaje completo. Pero si la variable &lt;code&gt;message-truncate-lines&lt;/code&gt; no es &lt;code&gt;nil&lt;/code&gt; , el &amp;aacute;rea de eco no cambia de tama&amp;ntilde;o y el mensaje se trunca para ajustarse a ella.</target>
        </trans-unit>
        <trans-unit id="f23d4ac50b4b0692f85e2c612a9dbf51f5ee0c69" translate="yes" xml:space="preserve">
          <source>Normally, each entry in a &lt;code&gt;list&lt;/code&gt; or &lt;code&gt;vector&lt;/code&gt; type specification describes a single element type. But when an entry contains &lt;code&gt;:inline t&lt;/code&gt;, the value it matches is merged directly into the containing sequence. For example, if the entry matches a list with three elements, those become three elements of the overall sequence. This is analogous to &amp;lsquo;</source>
          <target state="translated">Normalmente, cada entrada en una &lt;code&gt;list&lt;/code&gt; a o especificaci&amp;oacute;n de tipo de &lt;code&gt;vector&lt;/code&gt; describe un solo tipo de elemento. Pero cuando una entrada contiene &lt;code&gt;:inline t&lt;/code&gt; , el valor que coincide se fusiona directamente en la secuencia contenedora. Por ejemplo, si la entrada coincide con una lista con tres elementos, esos se convierten en tres elementos de la secuencia general. Esto es an&amp;aacute;logo a '</target>
        </trans-unit>
        <trans-unit id="467a0b75a915def14074129749af0e39f8c66a1c" translate="yes" xml:space="preserve">
          <source>Normally, each frame has its own minibuffer window at the bottom, which is used whenever that frame is selected. You can get that window with the function &lt;code&gt;minibuffer-window&lt;/code&gt; (see &lt;a href=&quot;minibuffer-windows#Minibuffer-Windows&quot;&gt;Minibuffer Windows&lt;/a&gt;).</source>
          <target state="translated">Normalmente, cada cuadro tiene su propia ventana de minib&amp;uacute;fer en la parte inferior, que se utiliza siempre que se selecciona ese cuadro. Puede obtener esa ventana con la funci&amp;oacute;n &lt;code&gt;minibuffer-window&lt;/code&gt; (consulte &lt;a href=&quot;minibuffer-windows#Minibuffer-Windows&quot;&gt;Ventanas de minib&amp;uacute;fer&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="f47235bc295fc9ef73d437c414c49bbdf12a693c" translate="yes" xml:space="preserve">
          <source>Normally, elements of &lt;code&gt;font-lock-keywords&lt;/code&gt; should not match across multiple lines; that doesn&amp;rsquo;t work reliably, because Font Lock usually scans just part of the buffer, and it can miss a multi-line construct that crosses the line boundary where the scan starts. (The scan normally starts at the beginning of a line.)</source>
          <target state="translated">Normalmente, los elementos de &lt;code&gt;font-lock-keywords&lt;/code&gt; no deben coincidir en varias l&amp;iacute;neas; eso no funciona de manera confiable, porque Font Lock generalmente escanea solo parte del b&amp;uacute;fer y puede perder una construcci&amp;oacute;n de varias l&amp;iacute;neas que cruza el l&amp;iacute;mite de l&amp;iacute;nea donde comienza el escaneo. (El escaneo normalmente comienza al comienzo de una l&amp;iacute;nea).</target>
        </trans-unit>
        <trans-unit id="d12bd9c60258b05b553df099e61b1e0db5cc0eb0" translate="yes" xml:space="preserve">
          <source>Normally, errors caught by &lt;code&gt;condition-case&lt;/code&gt; never invoke the debugger. The &lt;code&gt;condition-case&lt;/code&gt; gets a chance to handle the error before the debugger gets a chance.</source>
          <target state="translated">Normalmente, los errores detectados por &lt;code&gt;condition-case&lt;/code&gt; nunca invocan al depurador. El &lt;code&gt;condition-case&lt;/code&gt; tiene la oportunidad de manejar el error antes de que el depurador tenga la oportunidad.</target>
        </trans-unit>
        <trans-unit id="54a2bd94783a47980369965cd627bee242490611" translate="yes" xml:space="preserve">
          <source>Normally, if &lt;var&gt;character&lt;/var&gt; is an</source>
          <target state="translated">Normalmente, si el &lt;var&gt;character&lt;/var&gt; es un</target>
        </trans-unit>
        <trans-unit id="d50713f555db79e954a816742203790399e0673d" translate="yes" xml:space="preserve">
          <source>Normally, if &lt;var&gt;element&lt;/var&gt; is added, it is added to the front of &lt;var&gt;symbol&lt;/var&gt;, but if the optional argument &lt;var&gt;append&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it is added at the end.</source>
          <target state="translated">Normalmente, si se agrega un &lt;var&gt;element&lt;/var&gt; o , se agrega al frente del &lt;var&gt;symbol&lt;/var&gt; , pero si el argumento opcional &lt;var&gt;append&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; , se agrega al final.</target>
        </trans-unit>
        <trans-unit id="d6187789e5ea59be13e6c842c07c9deb29b1d4bb" translate="yes" xml:space="preserve">
          <source>Normally, it is not necessary to manipulate fonts directly. In case you need to do so, this section explains how.</source>
          <target state="translated">Normalmente,no es necesario manipular las fuentes directamente.En caso de que sea necesario hacerlo,esta sección explica cómo.</target>
        </trans-unit>
        <trans-unit id="becd1bd4e621ec277e1f58244c23bb4b5b4c4b17" translate="yes" xml:space="preserve">
          <source>Normally, it modifies a category set by adding &lt;var&gt;category&lt;/var&gt; to it. But if &lt;var&gt;reset&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then it deletes &lt;var&gt;category&lt;/var&gt; instead.</source>
          <target state="translated">Normalmente, modifica un conjunto de &lt;var&gt;category&lt;/var&gt; a&amp;ntilde;adi&amp;eacute;ndole una categor&amp;iacute;a . Pero si &lt;var&gt;reset&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; , entonces borra la &lt;var&gt;category&lt;/var&gt; lugar.</target>
        </trans-unit>
        <trans-unit id="33a09b1e73b35c5e6e469be538e26ad9f62399d8" translate="yes" xml:space="preserve">
          <source>Normally, prefer &lt;code&gt;intptr_t&lt;/code&gt; for internal representations of pointers, or for integers bounded only by the number of objects that can exist at any given time or by the total number of bytes that can be allocated. However, prefer &lt;code&gt;uintptr_t&lt;/code&gt; to represent pointer arithmetic that could cross page boundaries. For example, on a machine with a 32-bit address space an array could cross the 0x7fffffff/0x80000000 boundary, which would cause an integer overflow when adding 1 to &lt;code&gt;(intptr_t) 0x7fffffff&lt;/code&gt;.</source>
          <target state="translated">Normalmente, prefiera &lt;code&gt;intptr_t&lt;/code&gt; para representaciones internas de punteros, o para enteros limitados solo por el n&amp;uacute;mero de objetos que pueden existir en un momento dado o por el n&amp;uacute;mero total de bytes que se pueden asignar. Sin embargo, prefiera &lt;code&gt;uintptr_t&lt;/code&gt; para representar la aritm&amp;eacute;tica de puntero que podr&amp;iacute;a cruzar los l&amp;iacute;mites de la p&amp;aacute;gina. Por ejemplo, en una m&amp;aacute;quina con un espacio de direcciones de 32 bits, una matriz podr&amp;iacute;a cruzar el l&amp;iacute;mite 0x7fffffff / 0x80000000, lo que provocar&amp;iacute;a un desbordamiento de enteros al agregar 1 a &lt;code&gt;(intptr_t) 0x7fffffff&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1e6c689be8312b59b07bf40709097a3c5731537c" translate="yes" xml:space="preserve">
          <source>Normally, repetition forms are greedy, in that they attempt to match as many times as possible. Some forms are non-greedy; they try to match as few times as possible (see &lt;a href=&quot;regexp-special#Non_002dgreedy-repetition&quot;&gt;Non-greedy repetition&lt;/a&gt;).</source>
          <target state="translated">Normalmente, las formas de repetici&amp;oacute;n son codiciosas, ya que intentan coincidir tantas veces como sea posible. Algunas formas no son codiciosas; intentan hacer coincidir el menor n&amp;uacute;mero de veces posible (consulte &lt;a href=&quot;regexp-special#Non_002dgreedy-repetition&quot;&gt;Repetici&amp;oacute;n no codiciosa&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="8afe6491950d0be63d8da54adfd8c5f2338d800f" translate="yes" xml:space="preserve">
          <source>Normally, the</source>
          <target state="translated">Normalmente,el</target>
        </trans-unit>
        <trans-unit id="30802bf54b72f5663b6407f90667f9e51d089434" translate="yes" xml:space="preserve">
          <source>Normally, the argument expressions are not evaluated as part of computing the macro expansion, but instead appear as part of the expansion, so they are computed when the expansion is evaluated.</source>
          <target state="translated">Normalmente,las expresiones de los argumentos no se evalúan como parte del cálculo de la macroexpansión,sino que aparecen como parte de la expansión,por lo que se calculan cuando se evalúa la expansión.</target>
        </trans-unit>
        <trans-unit id="629b571150fb4d121b8cb2e6cf7f1cf6cc68f709" translate="yes" xml:space="preserve">
          <source>Normally, the buffer displayed in the selected window is the current buffer, but this is not always so: a Lisp program can temporarily designate any buffer as current in order to operate on its contents, without changing what is displayed on the screen. The most basic function for designating a current buffer is &lt;code&gt;set-buffer&lt;/code&gt;.</source>
          <target state="translated">Normalmente, el b&amp;uacute;fer que se muestra en la ventana seleccionada es el b&amp;uacute;fer actual, pero esto no siempre es as&amp;iacute;: un programa Lisp puede designar temporalmente cualquier b&amp;uacute;fer como actual para operar con su contenido, sin cambiar lo que se muestra en la pantalla. La funci&amp;oacute;n m&amp;aacute;s b&amp;aacute;sica para designar un b&amp;uacute;fer actual es &lt;code&gt;set-buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1ef79e40f4fe75ea19a532d8a9828e867c6dc545" translate="yes" xml:space="preserve">
          <source>Normally, the cursor is displayed at the beginning or the end of any overlay and text property strings present at the current buffer position. You can place the cursor on any desired character of these strings by giving that character a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;cursor&lt;/code&gt; text property. In addition, if the value of the &lt;code&gt;cursor&lt;/code&gt; property is an integer, it specifies the number of buffer&amp;rsquo;s character positions, starting with the position where the overlay or the &lt;code&gt;display&lt;/code&gt; property begins, for which the cursor should be displayed on that character. Specifically, if the value of the &lt;code&gt;cursor&lt;/code&gt; property of a character is the number &lt;var&gt;n&lt;/var&gt;, the cursor will be displayed on this character for any buffer position in the range &lt;code&gt;[&lt;var&gt;ovpos&lt;/var&gt;..&lt;var&gt;ovpos&lt;/var&gt;+&lt;var&gt;n&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;ovpos&lt;/var&gt; is the overlay&amp;rsquo;s starting position given by &lt;code&gt;overlay-start&lt;/code&gt; (see &lt;a href=&quot;managing-overlays#Managing-Overlays&quot;&gt;Managing Overlays&lt;/a&gt;), or the position where the &lt;code&gt;display&lt;/code&gt; text property begins in the buffer.</source>
          <target state="translated">Normalmente, el cursor se muestra al principio o al final de cualquier superposici&amp;oacute;n y cadenas de propiedades de texto presentes en la posici&amp;oacute;n actual del b&amp;uacute;fer. Puede colocar el cursor en cualquier car&amp;aacute;cter deseado de estas cadenas d&amp;aacute;ndole a ese car&amp;aacute;cter una propiedad de texto de &lt;code&gt;cursor&lt;/code&gt; que no sea &lt;code&gt;nil&lt;/code&gt; . Adem&amp;aacute;s, si el valor de la propiedad del &lt;code&gt;cursor&lt;/code&gt; es un n&amp;uacute;mero entero, especifica el n&amp;uacute;mero de posiciones de car&amp;aacute;cter del b&amp;uacute;fer, comenzando con la posici&amp;oacute;n donde comienza la superposici&amp;oacute;n o la propiedad de &lt;code&gt;display&lt;/code&gt; , para lo cual el cursor debe mostrarse en ese car&amp;aacute;cter. Espec&amp;iacute;ficamente, si el valor de la propiedad del &lt;code&gt;cursor&lt;/code&gt; de un car&amp;aacute;cter es el n&amp;uacute;mero &lt;var&gt;n&lt;/var&gt; , el cursor se mostrar&amp;aacute; en este car&amp;aacute;cter para cualquier posici&amp;oacute;n del b&amp;uacute;fer en el rango &lt;code&gt;[&lt;var&gt;ovpos&lt;/var&gt;..&lt;var&gt;ovpos&lt;/var&gt;+&lt;var&gt;n&lt;/var&gt;)&lt;/code&gt; &lt;var&gt;ovpos&lt;/var&gt; .. &lt;var&gt;ovpos&lt;/var&gt; + &lt;var&gt;n&lt;/var&gt; ) , donde &lt;var&gt;ovpos&lt;/var&gt; es la posici&amp;oacute;n inicial de la superposici&amp;oacute;n dada por &lt;code&gt;overlay-start&lt;/code&gt; (consulte&lt;a href=&quot;managing-overlays#Managing-Overlays&quot;&gt; Gesti&amp;oacute;n de superposiciones&lt;/a&gt; ), o la posici&amp;oacute;n dondecomienza la propiedad de texto de &lt;code&gt;display&lt;/code&gt; en el b&amp;uacute;fer.</target>
        </trans-unit>
        <trans-unit id="6e260092c506bb0904c31069887686f085d03db5" translate="yes" xml:space="preserve">
          <source>Normally, the keymap &lt;code&gt;query-replace-map&lt;/code&gt; defines the possible user responses for queries. The argument &lt;var&gt;map&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, specifies a keymap to use instead of &lt;code&gt;query-replace-map&lt;/code&gt;.</source>
          <target state="translated">Normalmente, el &lt;code&gt;query-replace-map&lt;/code&gt; teclas query-replace-map define las posibles respuestas del usuario a las consultas. El &lt;var&gt;map&lt;/var&gt; a de argumentos , si no es &lt;code&gt;nil&lt;/code&gt; , especifica un mapa de teclas para usar en lugar de &lt;code&gt;query-replace-map&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c9bc529dca0e2a9cf79b4d035ef919efc70874fc" translate="yes" xml:space="preserve">
          <source>Normally, the specified buffer is put at the front of the buffer list&amp;mdash;both the global buffer list and the selected frame&amp;rsquo;s buffer list (see &lt;a href=&quot;buffer-list#Buffer-List&quot;&gt;Buffer List&lt;/a&gt;). However, this is not done if the optional argument &lt;var&gt;norecord&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Normalmente, el b&amp;uacute;fer especificado se coloca al principio de la lista de b&amp;uacute;fer, tanto la lista de b&amp;uacute;fer global como la lista de b&amp;uacute;fer del marco seleccionado (ver &lt;a href=&quot;buffer-list#Buffer-List&quot;&gt;Lista de b&amp;uacute;fer&lt;/a&gt; ). Sin embargo, esto no se hace si el argumento opcional &lt;var&gt;norecord&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7936ac8e02ea68233dc9ba1fd5cca740f87f5020" translate="yes" xml:space="preserve">
          <source>Normally, the variables &lt;code&gt;window-min-height&lt;/code&gt; and &lt;code&gt;window-min-width&lt;/code&gt; specify the smallest allowable window size (see &lt;a href=&quot;window-sizes#Window-Sizes&quot;&gt;Window Sizes&lt;/a&gt;). However, if the optional argument &lt;var&gt;ignore&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function ignores &lt;code&gt;window-min-height&lt;/code&gt; and &lt;code&gt;window-min-width&lt;/code&gt;, as well as &lt;code&gt;window-size-fixed&lt;/code&gt;. Instead, it considers the minimum-height window to be one consisting of a header and a mode line, a horizontal scrollbar and a bottom divider (if any), plus a text area one line tall; and a minimum-width window as one consisting of fringes, margins, a scroll bar and a right divider (if any), plus a text area two columns wide.</source>
          <target state="translated">Normalmente, las variables &lt;code&gt;window-min-height&lt;/code&gt; y &lt;code&gt;window-min-width&lt;/code&gt; especifican el tama&amp;ntilde;o de ventana m&amp;aacute;s peque&amp;ntilde;o permitido (consulte &lt;a href=&quot;window-sizes#Window-Sizes&quot;&gt;Tama&amp;ntilde;os de ventana&lt;/a&gt; ). Sin embargo, si el argumento opcional &lt;var&gt;ignore&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; , esta funci&amp;oacute;n ignora &lt;code&gt;window-min-height&lt;/code&gt; y &lt;code&gt;window-min-width&lt;/code&gt; , as&amp;iacute; como &lt;code&gt;window-size-fixed&lt;/code&gt; . En su lugar, considera que la ventana de altura m&amp;iacute;nima es una que consta de un encabezado y una l&amp;iacute;nea de modo, una barra de desplazamiento horizontal y un divisor inferior (si lo hay), m&amp;aacute;s un &amp;aacute;rea de texto de una l&amp;iacute;nea de altura; y una ventana de ancho m&amp;iacute;nimo como una que consta de franjas, m&amp;aacute;rgenes, una barra de desplazamiento y un divisor derecho (si lo hubiera), m&amp;aacute;s un &amp;aacute;rea de texto de dos columnas de ancho.</target>
        </trans-unit>
        <trans-unit id="c5713371bb37a8cdef55c3106ef4460970d0eab6" translate="yes" xml:space="preserve">
          <source>Normally, this command puts point before the inserted text, and the mark after it. However, if the optional second argument &lt;var&gt;beforep&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it puts the mark before and point after.</source>
          <target state="translated">Normalmente, este comando coloca el punto antes del texto insertado y la marca despu&amp;eacute;s de &amp;eacute;l. Sin embargo, si el segundo argumento opcional &lt;var&gt;beforep&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; , coloca la marca antes y el punto despu&amp;eacute;s.</target>
        </trans-unit>
        <trans-unit id="3d42087a0d42cd57b27861aa1a1b4a750c8b489d" translate="yes" xml:space="preserve">
          <source>Normally, this command reinitializes the buffer&amp;rsquo;s major and minor modes using &lt;code&gt;normal-mode&lt;/code&gt;. But if &lt;var&gt;preserve-modes&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the modes remain unchanged.</source>
          <target state="translated">Normalmente, este comando reinicializa los modos mayor y menor del b&amp;uacute;fer usando &lt;code&gt;normal-mode&lt;/code&gt; . Pero si &lt;var&gt;preserve-modes&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; , los modos permanecen sin cambios.</target>
        </trans-unit>
        <trans-unit id="aa1a4bffdaf1e62a462694623e95b20201dc51ec" translate="yes" xml:space="preserve">
          <source>Normally, this function asks the user for confirmation if there already is a buffer visiting &lt;var&gt;filename&lt;/var&gt;. If &lt;var&gt;no-query&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, that prevents asking this question. If there already is a buffer visiting &lt;var&gt;filename&lt;/var&gt;, and the user confirms or &lt;var&gt;no-query&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function makes the new buffer name unique by appending a number inside of &amp;lsquo;</source>
          <target state="translated">Normalmente, esta funci&amp;oacute;n solicita al usuario confirmaci&amp;oacute;n si ya hay un &lt;var&gt;filename&lt;/var&gt; visita del b&amp;uacute;fer . Si &lt;var&gt;no-query&lt;/var&gt; es no- &lt;code&gt;nil&lt;/code&gt; , eso evita hacer esta pregunta. Si ya hay un &lt;var&gt;filename&lt;/var&gt; visita el b&amp;uacute;fer y el usuario confirma o &lt;var&gt;no-query&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; , esta funci&amp;oacute;n hace que el nuevo nombre del b&amp;uacute;fer sea &amp;uacute;nico agregando un n&amp;uacute;mero dentro de '</target>
        </trans-unit>
        <trans-unit id="64fcbebdb92f9124f1312a1ae2441a038070f262" translate="yes" xml:space="preserve">
          <source>Normally, this function inserts newline characters into the encoded text, to avoid overlong lines. However, if the optional argument &lt;var&gt;no-line-break&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, these newlines are not added, so the output is just one long line.</source>
          <target state="translated">Normalmente, esta funci&amp;oacute;n inserta caracteres de nueva l&amp;iacute;nea en el texto codificado para evitar l&amp;iacute;neas demasiado largas. Sin embargo, si el argumento opcional &lt;var&gt;no-line-break&lt;/var&gt; es no- &lt;code&gt;nil&lt;/code&gt; , estas nuevas l&amp;iacute;neas no se agregan, por lo que la salida es solo una l&amp;iacute;nea larga.</target>
        </trans-unit>
        <trans-unit id="f43ac9933802532b28a287e5f45c7854bcc33b0b" translate="yes" xml:space="preserve">
          <source>Normally, this function inserts newline characters into the encoded text, to avoid overlong lines. However, if the optional argument &lt;var&gt;no-line-break&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, these newlines are not added, so the result string is just one long line.</source>
          <target state="translated">Normalmente, esta funci&amp;oacute;n inserta caracteres de nueva l&amp;iacute;nea en el texto codificado para evitar l&amp;iacute;neas demasiado largas. Sin embargo, si el argumento opcional &lt;var&gt;no-line-break&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; , estas nuevas l&amp;iacute;neas no se agregan, por lo que la cadena de resultado es solo una l&amp;iacute;nea larga.</target>
        </trans-unit>
        <trans-unit id="d37dcdec76f9e6b7d0121007f21ec47b7057c83e" translate="yes" xml:space="preserve">
          <source>Normally, this function signals an error if you attempt to delete the sole active terminal, but if &lt;var&gt;force&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, you are allowed to do so. Emacs automatically calls this function when the last frame on a terminal is deleted (see &lt;a href=&quot;deleting-frames#Deleting-Frames&quot;&gt;Deleting Frames&lt;/a&gt;).</source>
          <target state="translated">Normalmente, esta funci&amp;oacute;n indica un error si intenta eliminar el &amp;uacute;nico terminal activo, pero si la &lt;var&gt;force&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; , puede hacerlo. Emacs llama autom&amp;aacute;ticamente a esta funci&amp;oacute;n cuando se elimina el &amp;uacute;ltimo fotograma de un terminal (consulte &lt;a href=&quot;deleting-frames#Deleting-Frames&quot;&gt;Eliminaci&amp;oacute;n de fotogramas&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="6dd336d19d532b36fa2861068df8621fa7546f25" translate="yes" xml:space="preserve">
          <source>Normally, well-designed Lisp programs should not use &lt;code&gt;with-eval-after-load&lt;/code&gt;. If you need to examine and set the variables defined in another library (those meant for outside use), you can do it immediately&amp;mdash;there is no need to wait until the library is loaded. If you need to call functions defined by that library, you should load the library, preferably with &lt;code&gt;require&lt;/code&gt; (see &lt;a href=&quot;named-features#Named-Features&quot;&gt;Named Features&lt;/a&gt;).</source>
          <target state="translated">Normalmente, los programas Lisp bien dise&amp;ntilde;ados no deber&amp;iacute;an usarse &lt;code&gt;with-eval-after-load&lt;/code&gt; . Si necesita examinar y establecer las variables definidas en otra biblioteca (aquellas destinadas a uso externo), puede hacerlo de inmediato; no es necesario esperar hasta que se cargue la biblioteca. Si necesita llamar a funciones definidas por esa biblioteca, debe cargar la biblioteca, preferiblemente con &lt;code&gt;require&lt;/code&gt; (ver &lt;a href=&quot;named-features#Named-Features&quot;&gt;Funciones nombradas&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="32213d153ad203f84c268998070d9c91fd7446c2" translate="yes" xml:space="preserve">
          <source>Normally, when &lt;var&gt;tree&lt;/var&gt; is anything other than a cons cell, &lt;code&gt;copy-tree&lt;/code&gt; simply returns &lt;var&gt;tree&lt;/var&gt;. However, if &lt;var&gt;vecp&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it copies vectors too (and operates recursively on their elements).</source>
          <target state="translated">Normalmente, cuando &lt;var&gt;tree&lt;/var&gt; es una celda de contras, &lt;code&gt;copy-tree&lt;/code&gt; simplemente devuelve &lt;var&gt;tree&lt;/var&gt; . Sin embargo, si &lt;var&gt;vecp&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; , tambi&amp;eacute;n copia los vectores (y opera recursivamente en sus elementos).</target>
        </trans-unit>
        <trans-unit id="a3c03c3e2f02de6a73dd67dd8665632ac3ecb4d6" translate="yes" xml:space="preserve">
          <source>Normally, you specify the Edebug execution mode by typing a command to continue the program in a certain mode. Here is a table of these commands; all except for</source>
          <target state="translated">Normalmente,se especifica el modo de ejecución de Edebug tecleando un comando para continuar el programa en un determinado modo.Aquí hay una tabla de estos comandos;todos excepto</target>
        </trans-unit>
        <trans-unit id="28a2d6a083bc6ad019b2a98e4e29d81c91548221" translate="yes" xml:space="preserve">
          <source>Not all convenient formats are strings. If &lt;var&gt;time&lt;/var&gt; is a number (integer or floating point), that specifies a relative time measured in seconds. The result of &lt;code&gt;encode-time&lt;/code&gt; can also be used to specify an absolute value for &lt;var&gt;time&lt;/var&gt;.</source>
          <target state="translated">Not all convenient formats are strings. If &lt;var&gt;time&lt;/var&gt; is a number (integer or floating point), that specifies a relative time measured in seconds. The result of &lt;code&gt;encode-time&lt;/code&gt; can also be used to specify an absolute value for &lt;var&gt;time&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="cb74d9cca41ce9c386501e0756ab5861fff45519" translate="yes" xml:space="preserve">
          <source>Not all grammars are accepted:</source>
          <target state="translated">No todas las gramáticas son aceptadas:</target>
        </trans-unit>
        <trans-unit id="99f0e2cc9f83cb30e3ae050f9b9f847c4120fdb6" translate="yes" xml:space="preserve">
          <source>Not every string is a valid regular expression. For example, a string that ends inside a character alternative without a terminating &amp;lsquo;</source>
          <target state="translated">Not every string is a valid regular expression. For example, a string that ends inside a character alternative without a terminating &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="43ff9e862a86dab0a657fc6384f26e1419f49f75" translate="yes" xml:space="preserve">
          <source>Not used by core Emacs features.</source>
          <target state="translated">No es usado por las características del núcleo del Emacs.</target>
        </trans-unit>
        <trans-unit id="c7c5413b8718cba59a931876fd41b752eae55f77" translate="yes" xml:space="preserve">
          <source>Notation for describing functions, variables, etc.</source>
          <target state="translated">Notación para describir funciones,variables,etc.</target>
        </trans-unit>
        <trans-unit id="4c3b785fe5302404be7fd8ebefe6a435a4164b8b" translate="yes" xml:space="preserve">
          <source>Note also that &lt;code&gt;expand-file-name&lt;/code&gt; does not follow symbolic links at any level. This results in a difference between the way &lt;code&gt;file-truename&lt;/code&gt; and &lt;code&gt;expand-file-name&lt;/code&gt; treat &amp;lsquo;</source>
          <target state="translated">Note also that &lt;code&gt;expand-file-name&lt;/code&gt; does not follow symbolic links at any level. This results in a difference between the way &lt;code&gt;file-truename&lt;/code&gt; and &lt;code&gt;expand-file-name&lt;/code&gt; treat &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="e8c1e3068af42529c71ce3761f404a8c7cb2b54f" translate="yes" xml:space="preserve">
          <source>Note also that the native position of a frame usually remains unaltered on its display when removing or adding the window manager decorations by changing the frame&amp;rsquo;s &lt;code&gt;override-redirect&lt;/code&gt; or &lt;code&gt;undecorated&lt;/code&gt; parameter (see &lt;a href=&quot;management-parameters#Management-Parameters&quot;&gt;Management Parameters&lt;/a&gt;).</source>
          <target state="translated">Note also that the native position of a frame usually remains unaltered on its display when removing or adding the window manager decorations by changing the frame&amp;rsquo;s &lt;code&gt;override-redirect&lt;/code&gt; or &lt;code&gt;undecorated&lt;/code&gt; parameter (see &lt;a href=&quot;management-parameters#Management-Parameters&quot;&gt;Management Parameters&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="e06a1498bcc4e46f5b08f1b485bfe2d29db14c40" translate="yes" xml:space="preserve">
          <source>Note also that this translation is done before the characters are supplied to input methods (see &lt;a href=&quot;input-methods#Input-Methods&quot;&gt;Input Methods&lt;/a&gt;). Use &lt;code&gt;translation-table-for-input&lt;/code&gt; (see &lt;a href=&quot;translation-of-characters#Translation-of-Characters&quot;&gt;Translation of Characters&lt;/a&gt;), if you want to translate characters after input methods operate.</source>
          <target state="translated">Note also that this translation is done before the characters are supplied to input methods (see &lt;a href=&quot;input-methods#Input-Methods&quot;&gt;Input Methods&lt;/a&gt;). Use &lt;code&gt;translation-table-for-input&lt;/code&gt; (see &lt;a href=&quot;translation-of-characters#Translation-of-Characters&quot;&gt;Translation of Characters&lt;/a&gt;), if you want to translate characters after input methods operate.</target>
        </trans-unit>
        <trans-unit id="f37c9faec19e5f322f365ce34f1cd5f26d62fd9b" translate="yes" xml:space="preserve">
          <source>Note also that under certain circumstances &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; and &lt;code&gt;switch-to-next-buffer&lt;/code&gt; may ignore this option, for example, when there is only one buffer left these functions can switch to.</source>
          <target state="translated">Note also that under certain circumstances &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; and &lt;code&gt;switch-to-next-buffer&lt;/code&gt; may ignore this option, for example, when there is only one buffer left these functions can switch to.</target>
        </trans-unit>
        <trans-unit id="e43f096d72c1fa7eda8bb11cbb26469630c96a62" translate="yes" xml:space="preserve">
          <source>Note also that window managers usually do not ask for resizing a frame when they change the number of lines occupied by an external menu or tool bar. Typically, such &amp;ldquo;wrappings&amp;rdquo; occur when a user shrinks a frame horizontally, making it impossible to display all elements of its menu or tool bar. They may also result from a change of the major mode altering the number of items of a menu or tool bar. Any such wrappings may implicitly alter the number of lines of a frame&amp;rsquo;s text area and are unaffected by the setting of this option.</source>
          <target state="translated">Note also that window managers usually do not ask for resizing a frame when they change the number of lines occupied by an external menu or tool bar. Typically, such &amp;ldquo;wrappings&amp;rdquo; occur when a user shrinks a frame horizontally, making it impossible to display all elements of its menu or tool bar. They may also result from a change of the major mode altering the number of items of a menu or tool bar. Any such wrappings may implicitly alter the number of lines of a frame&amp;rsquo;s text area and are unaffected by the setting of this option.</target>
        </trans-unit>
        <trans-unit id="c02c5b53625103bbcd1e981469317bde4d2eff01" translate="yes" xml:space="preserve">
          <source>Note also the function &lt;code&gt;window-largest-empty-rectangle&lt;/code&gt; (see &lt;a href=&quot;coordinates-and-windows#Coordinates-and-Windows&quot;&gt;Coordinates and Windows&lt;/a&gt;) which can be used to inscribe a child frame in the largest empty area of an existing window. This can be useful to avoid that a child frame obscures any text shown in that window.</source>
          <target state="translated">Note also the function &lt;code&gt;window-largest-empty-rectangle&lt;/code&gt; (see &lt;a href=&quot;coordinates-and-windows#Coordinates-and-Windows&quot;&gt;Coordinates and Windows&lt;/a&gt;) which can be used to inscribe a child frame in the largest empty area of an existing window. This can be useful to avoid that a child frame obscures any text shown in that window.</target>
        </trans-unit>
        <trans-unit id="ac296846d6e88621711014648ad3889107526b49" translate="yes" xml:space="preserve">
          <source>Note also, that positions specified relative to the right/bottom edge of a display, workarea or parent frame as well as floating-point offsets are stored internally as integer offsets relative to the left/top edge of the display, workarea or parent frame edge. They are also returned as such by functions like &lt;code&gt;frame-parameters&lt;/code&gt; and restored as such by the desktop saving routines.</source>
          <target state="translated">Note also, that positions specified relative to the right/bottom edge of a display, workarea or parent frame as well as floating-point offsets are stored internally as integer offsets relative to the left/top edge of the display, workarea or parent frame edge. They are also returned as such by functions like &lt;code&gt;frame-parameters&lt;/code&gt; and restored as such by the desktop saving routines.</target>
        </trans-unit>
        <trans-unit id="4ee808f9b4d3b62c6e1c4ae8210950ef2323557e" translate="yes" xml:space="preserve">
          <source>Note also, that the combined action alist may contain duplicate entries and entries for the same key with different values. As a rule, action functions always use the first association of a key they find. Hence, the association an action function uses is not necessarily the association provided by the display action that specified that action function,</source>
          <target state="translated">Obsérvese también que la lista de acciones combinadas puede contener entradas duplicadas y entradas para la misma clave con valores diferentes.Por regla general,las funciones de acción siempre utilizan la primera asociación de una clave que encuentran.Por consiguiente,la asociación que utiliza una función de acción no es necesariamente la que proporciona la acción de visualización que especificó esa función de acción,</target>
        </trans-unit>
        <trans-unit id="e5cf53f2f379d0df5750245ed5d07f62c700d148" translate="yes" xml:space="preserve">
          <source>Note how both &lt;code&gt;and&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt; sub-patterns finish in the same way: by trying (always successfully) to match against the &lt;var&gt;symbol&lt;/var&gt; pattern &lt;code&gt;val&lt;/code&gt;, in the process binding &lt;code&gt;val&lt;/code&gt;. Thus, &lt;code&gt;or&lt;/code&gt; always matches and control always passes to the body form (line 9). Because that is the last body form in a successfully matched &lt;code&gt;pcase&lt;/code&gt; clause, it is the value of &lt;code&gt;pcase&lt;/code&gt; and likewise the return value of &lt;code&gt;grok/pcase&lt;/code&gt; (see &lt;a href=&quot;what-is-a-function#What-Is-a-Function&quot;&gt;What Is a Function&lt;/a&gt;).</source>
          <target state="translated">Note how both &lt;code&gt;and&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt; sub-patterns finish in the same way: by trying (always successfully) to match against the &lt;var&gt;symbol&lt;/var&gt; pattern &lt;code&gt;val&lt;/code&gt; , in the process binding &lt;code&gt;val&lt;/code&gt; . Thus, &lt;code&gt;or&lt;/code&gt; always matches and control always passes to the body form (line 9). Because that is the last body form in a successfully matched &lt;code&gt;pcase&lt;/code&gt; clause, it is the value of &lt;code&gt;pcase&lt;/code&gt; and likewise the return value of &lt;code&gt;grok/pcase&lt;/code&gt; (see &lt;a href=&quot;what-is-a-function#What-Is-a-Function&quot;&gt;What Is a Function&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="da5b870679158a8dc429765e73588de68e861a6b" translate="yes" xml:space="preserve">
          <source>Note that &amp;lsquo;</source>
          <target state="translated">Tenga en cuenta que '</target>
        </trans-unit>
        <trans-unit id="5a8aa4751bb1c982814a77bf1d580dce6aad70e9" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;(car foo)&lt;/code&gt; is not executed if &lt;code&gt;(consp foo)&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;, thus avoiding an error.</source>
          <target state="translated">Note that &lt;code&gt;(car foo)&lt;/code&gt; is not executed if &lt;code&gt;(consp foo)&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt; , thus avoiding an error.</target>
        </trans-unit>
        <trans-unit id="82cc38abe8d3c167aceee216d425c0ab550d1382" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;(delq 'c sample-list)&lt;/code&gt; modifies &lt;code&gt;sample-list&lt;/code&gt; to splice out the third element, but &lt;code&gt;(delq 'a sample-list)&lt;/code&gt; does not splice anything&amp;mdash;it just returns a shorter list. Don&amp;rsquo;t assume that a variable which formerly held the argument &lt;var&gt;list&lt;/var&gt; now has fewer elements, or that it still holds the original list! Instead, save the result of &lt;code&gt;delq&lt;/code&gt; and use that. Most often we store the result back into the variable that held the original list:</source>
          <target state="translated">Note that &lt;code&gt;(delq 'c sample-list)&lt;/code&gt; modifies &lt;code&gt;sample-list&lt;/code&gt; to splice out the third element, but &lt;code&gt;(delq 'a sample-list)&lt;/code&gt; does not splice anything&amp;mdash;it just returns a shorter list. Don&amp;rsquo;t assume that a variable which formerly held the argument &lt;var&gt;list&lt;/var&gt; now has fewer elements, or that it still holds the original list! Instead, save the result of &lt;code&gt;delq&lt;/code&gt; and use that. Most often we store the result back into the variable that held the original list:</target>
        </trans-unit>
        <trans-unit id="88ce8d10722b09594fee9067ec46be961db1010b" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;ad-activate&lt;/code&gt; had a global effect: it activated all pieces of advice enabled for that specified function. If you wanted to only activate or deactivate a particular piece, you needed to &lt;em&gt;enable&lt;/em&gt; or &lt;em&gt;disable&lt;/em&gt; it with &lt;code&gt;ad-enable-advice&lt;/code&gt; and &lt;code&gt;ad-disable-advice&lt;/code&gt;. The new mechanism does away with this distinction.</source>
          <target state="translated">Note that &lt;code&gt;ad-activate&lt;/code&gt; had a global effect: it activated all pieces of advice enabled for that specified function. If you wanted to only activate or deactivate a particular piece, you needed to &lt;em&gt;enable&lt;/em&gt; or &lt;em&gt;disable&lt;/em&gt; it with &lt;code&gt;ad-enable-advice&lt;/code&gt; and &lt;code&gt;ad-disable-advice&lt;/code&gt; . The new mechanism does away with this distinction.</target>
        </trans-unit>
        <trans-unit id="a8b9b0264afaff2247ccc31f5609c567f52bbb12" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;display-buffer-reuse-window&lt;/code&gt; appears redundant in the customization of &lt;code&gt;display-buffer-base-action&lt;/code&gt; because it is already part of &lt;code&gt;display-buffer-fallback-action&lt;/code&gt; and should be tried there anyway. However, that would fail because due to the precedence of &lt;code&gt;display-buffer-base-action&lt;/code&gt; over &lt;code&gt;display-buffer-fallback-action&lt;/code&gt;, at that time &lt;code&gt;display-buffer-pop-up-frame&lt;/code&gt; would have already won the race. In fact, this:</source>
          <target state="translated">Note that &lt;code&gt;display-buffer-reuse-window&lt;/code&gt; appears redundant in the customization of &lt;code&gt;display-buffer-base-action&lt;/code&gt; because it is already part of &lt;code&gt;display-buffer-fallback-action&lt;/code&gt; and should be tried there anyway. However, that would fail because due to the precedence of &lt;code&gt;display-buffer-base-action&lt;/code&gt; over &lt;code&gt;display-buffer-fallback-action&lt;/code&gt; , at that time &lt;code&gt;display-buffer-pop-up-frame&lt;/code&gt; would have already won the race. In fact, this:</target>
        </trans-unit>
        <trans-unit id="420700b2d9abe3e5aa5c3ba405713ee29ec392d5" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;eval-expression-debug-on-error&lt;/code&gt; overrides this variable in some cases; see below.</source>
          <target state="translated">Note that &lt;code&gt;eval-expression-debug-on-error&lt;/code&gt; overrides this variable in some cases; see below.</target>
        </trans-unit>
        <trans-unit id="bcbdaf4d50a8c86ab39d55059a3ac469c00b587e" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;expand-file-name&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; expand environment variables; only &lt;code&gt;substitute-in-file-name&lt;/code&gt; does that:</source>
          <target state="translated">Note that &lt;code&gt;expand-file-name&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; expand environment variables; only &lt;code&gt;substitute-in-file-name&lt;/code&gt; does that:</target>
        </trans-unit>
        <trans-unit id="ab80ac2f4a9d468cbc4712bf3ee278edec445477" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;let&lt;/code&gt; bindings are treated specially by the Emacs Lisp implementation. There is no way to duplicate this unwinding and rewinding behavior other than by using &lt;code&gt;let&lt;/code&gt;. For example, a manual implementation of &lt;code&gt;let&lt;/code&gt; written using &lt;code&gt;unwind-protect&lt;/code&gt; cannot arrange for variable values to be thread-specific.</source>
          <target state="translated">Note that &lt;code&gt;let&lt;/code&gt; bindings are treated specially by the Emacs Lisp implementation. There is no way to duplicate this unwinding and rewinding behavior other than by using &lt;code&gt;let&lt;/code&gt; . For example, a manual implementation of &lt;code&gt;let&lt;/code&gt; written using &lt;code&gt;unwind-protect&lt;/code&gt; cannot arrange for variable values to be thread-specific.</target>
        </trans-unit>
        <trans-unit id="89f00f3fb6940c8e5695af8eb8543d457737771c" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;macroexpand&lt;/code&gt; does not look at the subexpressions of &lt;var&gt;form&lt;/var&gt; (although some macro definitions may do so). Even if they are macro calls themselves, &lt;code&gt;macroexpand&lt;/code&gt; does not expand them.</source>
          <target state="translated">Note that &lt;code&gt;macroexpand&lt;/code&gt; does not look at the subexpressions of &lt;var&gt;form&lt;/var&gt; (although some macro definitions may do so). Even if they are macro calls themselves, &lt;code&gt;macroexpand&lt;/code&gt; does not expand them.</target>
        </trans-unit>
        <trans-unit id="d670e88e4393319b698452d1022060ef368672e8" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;nil&lt;/code&gt;, being both a valid alist and a valid plist, represents &lt;code&gt;{}&lt;/code&gt;, the empty JSON object; not &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, or an empty array, all of which are different JSON values.</source>
          <target state="translated">Note that &lt;code&gt;nil&lt;/code&gt; , being both a valid alist and a valid plist, represents &lt;code&gt;{}&lt;/code&gt; , the empty JSON object; not &lt;code&gt;null&lt;/code&gt; , &lt;code&gt;false&lt;/code&gt; , or an empty array, all of which are different JSON values.</target>
        </trans-unit>
        <trans-unit id="9fa6019796c4614fd1ce6adb41579f6d542fd75e" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;set-window-hscroll&lt;/code&gt; may appear not to work if you test it by evaluating a call with</source>
          <target state="translated">Note that &lt;code&gt;set-window-hscroll&lt;/code&gt; may appear not to work if you test it by evaluating a call with</target>
        </trans-unit>
        <trans-unit id="2ea6c975bcb32bc398a9332341b86368aab4d1e0" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;sort-columns&lt;/code&gt; rejects text that contains tabs, because tabs could be split across the specified columns. Use</source>
          <target state="translated">Note that &lt;code&gt;sort-columns&lt;/code&gt; rejects text that contains tabs, because tabs could be split across the specified columns. Use</target>
        </trans-unit>
        <trans-unit id="e14386726913a3c2fd59bf734e821066eca6e0b8" translate="yes" xml:space="preserve">
          <source>Note that &lt;var&gt;condition&lt;/var&gt; will only be evaluated when redisplay examines the text where this display spec is located, so this feature is best suited for conditions that are relatively stable, i.e. yield, for each particular buffer position, the same results on every evaluation. If the results change for the same text location, e.g., if the result depends on the position of point, then the conditional specification might not do what you want, because redisplay examines only those parts of buffer text where it has reasons to assume that something changed since the last display cycle.</source>
          <target state="translated">Note that &lt;var&gt;condition&lt;/var&gt; will only be evaluated when redisplay examines the text where this display spec is located, so this feature is best suited for conditions that are relatively stable, i.e. yield, for each particular buffer position, the same results on every evaluation. If the results change for the same text location, e.g., if the result depends on the position of point, then the conditional specification might not do what you want, because redisplay examines only those parts of buffer text where it has reasons to assume that something changed since the last display cycle.</target>
        </trans-unit>
        <trans-unit id="11c86dc7160f3159d0caf4f8ca652e035830aeb9" translate="yes" xml:space="preserve">
          <source>Note that &lt;var&gt;row&lt;/var&gt; is counted from the top of the text area. If the window given by &lt;var&gt;position&lt;/var&gt; possesses a header line (see &lt;a href=&quot;header-lines#Header-Lines&quot;&gt;Header Lines&lt;/a&gt;) or a tab line, they are &lt;em&gt;not&lt;/em&gt; included in the &lt;var&gt;row&lt;/var&gt; count.</source>
          <target state="translated">Note that &lt;var&gt;row&lt;/var&gt; is counted from the top of the text area. If the window given by &lt;var&gt;position&lt;/var&gt; possesses a header line (see &lt;a href=&quot;header-lines#Header-Lines&quot;&gt;Header Lines&lt;/a&gt;) or a tab line, they are &lt;em&gt;not&lt;/em&gt; included in the &lt;var&gt;row&lt;/var&gt; count.</target>
        </trans-unit>
        <trans-unit id="36140c7862902330c0ed8b4c4f62d98557115715" translate="yes" xml:space="preserve">
          <source>Note that C code cannot call functions by name unless they are defined in C. The way to call a function written in Lisp is to use &lt;code&gt;Ffuncall&lt;/code&gt;, which embodies the Lisp function &lt;code&gt;funcall&lt;/code&gt;. Since the Lisp function &lt;code&gt;funcall&lt;/code&gt; accepts an unlimited number of arguments, in C it takes two: the number of Lisp-level arguments, and a one-dimensional array containing their values. The first Lisp-level argument is the Lisp function to call, and the rest are the arguments to pass to it.</source>
          <target state="translated">Note that C code cannot call functions by name unless they are defined in C. The way to call a function written in Lisp is to use &lt;code&gt;Ffuncall&lt;/code&gt; , which embodies the Lisp function &lt;code&gt;funcall&lt;/code&gt; . Since the Lisp function &lt;code&gt;funcall&lt;/code&gt; accepts an unlimited number of arguments, in C it takes two: the number of Lisp-level arguments, and a one-dimensional array containing their values. The first Lisp-level argument is the Lisp function to call, and the rest are the arguments to pass to it.</target>
        </trans-unit>
        <trans-unit id="e556b978b826723508b3c9b15f0f641cf8aad16e" translate="yes" xml:space="preserve">
          <source>Note that Emacs automatically saves and restores the match data while executing filter functions. See &lt;a href=&quot;match-data#Match-Data&quot;&gt;Match Data&lt;/a&gt;.</source>
          <target state="translated">Note that Emacs automatically saves and restores the match data while executing filter functions. See &lt;a href=&quot;match-data#Match-Data&quot;&gt;Match Data&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="849766f54cbb0ac387cb87a85961815edd45103c" translate="yes" xml:space="preserve">
          <source>Note that Emacs automatically saves and restores the match data while executing sentinels. See &lt;a href=&quot;match-data#Match-Data&quot;&gt;Match Data&lt;/a&gt;.</source>
          <target state="translated">Note that Emacs automatically saves and restores the match data while executing sentinels. See &lt;a href=&quot;match-data#Match-Data&quot;&gt;Match Data&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="fd5df05fa87dff11a9d0af24fb74e840bb6e9f14" translate="yes" xml:space="preserve">
          <source>Note that Emacs sometimes uses non-numeric priority values for some of its internal overlays, so do not try to do arithmetic on the priority of an overlay (unless it is one that you created). In particular, the overlay used for showing the region uses a priority value of the form &lt;code&gt;(&lt;var&gt;primary&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;secondary&lt;/var&gt;)&lt;/code&gt;, where the &lt;var&gt;primary&lt;/var&gt; value is used as described above, and &lt;var&gt;secondary&lt;/var&gt; is the fallback value used when &lt;var&gt;primary&lt;/var&gt; and the nesting considerations fail to resolve the precedence between overlays. However, you are advised not to design Lisp programs based on this implementation detail; if you need to put overlays in priority order, use the &lt;var&gt;sorted&lt;/var&gt; argument of &lt;code&gt;overlays-at&lt;/code&gt;. See &lt;a href=&quot;finding-overlays#Finding-Overlays&quot;&gt;Finding Overlays&lt;/a&gt;.</source>
          <target state="translated">Note that Emacs sometimes uses non-numeric priority values for some of its internal overlays, so do not try to do arithmetic on the priority of an overlay (unless it is one that you created). In particular, the overlay used for showing the region uses a priority value of the form &lt;code&gt;(&lt;var&gt;primary&lt;/var&gt;&amp;nbsp;.&amp;nbsp;&lt;var&gt;secondary&lt;/var&gt;)&lt;/code&gt; , where the &lt;var&gt;primary&lt;/var&gt; value is used as described above, and &lt;var&gt;secondary&lt;/var&gt; is the fallback value used when &lt;var&gt;primary&lt;/var&gt; and the nesting considerations fail to resolve the precedence between overlays. However, you are advised not to design Lisp programs based on this implementation detail; if you need to put overlays in priority order, use the &lt;var&gt;sorted&lt;/var&gt; argument of &lt;code&gt;overlays-at&lt;/code&gt; . See &lt;a href=&quot;finding-overlays#Finding-Overlays&quot;&gt;Finding Overlays&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1d3be1a87b3711b91ae65cc80a7d5b435901ca0c" translate="yes" xml:space="preserve">
          <source>Note that Emacs tries to expand macros when loading an uncompiled Lisp file. This is not always possible, but if it is, it speeds up subsequent execution. See &lt;a href=&quot;how-programs-do-loading#How-Programs-Do-Loading&quot;&gt;How Programs Do Loading&lt;/a&gt;.</source>
          <target state="translated">Note that Emacs tries to expand macros when loading an uncompiled Lisp file. This is not always possible, but if it is, it speeds up subsequent execution. See &lt;a href=&quot;how-programs-do-loading#How-Programs-Do-Loading&quot;&gt;How Programs Do Loading&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="0b3adfb09c7f22559fa8fff3314fa3e947a0a9c9" translate="yes" xml:space="preserve">
          <source>Note that a frame cannot be deleted as long as its minibuffer serves as surrogate minibuffer for another frame (see &lt;a href=&quot;minibuffers-and-frames#Minibuffers-and-Frames&quot;&gt;Minibuffers and Frames&lt;/a&gt;). Normally, you cannot delete a frame if all other frames are invisible, but if &lt;var&gt;force&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then you are allowed to do so.</source>
          <target state="translated">Note that a frame cannot be deleted as long as its minibuffer serves as surrogate minibuffer for another frame (see &lt;a href=&quot;minibuffers-and-frames#Minibuffers-and-Frames&quot;&gt;Minibuffers and Frames&lt;/a&gt;). Normally, you cannot delete a frame if all other frames are invisible, but if &lt;var&gt;force&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , then you are allowed to do so.</target>
        </trans-unit>
        <trans-unit id="6c88bb0b96b0659e2468d8c7144a4535dc553f33" translate="yes" xml:space="preserve">
          <source>Note that a sublist specification written as &lt;code&gt;(specs .  nil)&lt;/code&gt; is equivalent to &lt;code&gt;(specs)&lt;/code&gt;, and &lt;code&gt;(specs .
(sublist-elements&amp;hellip;))&lt;/code&gt; is equivalent to &lt;code&gt;(specs
sublist-elements&amp;hellip;)&lt;/code&gt;.</source>
          <target state="translated">Note that a sublist specification written as &lt;code&gt;(specs . nil)&lt;/code&gt; is equivalent to &lt;code&gt;(specs)&lt;/code&gt; , and &lt;code&gt;(specs . (sublist-elements&amp;hellip;))&lt;/code&gt; is equivalent to &lt;code&gt;(specs sublist-elements&amp;hellip;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b700a940d8e3ee969e5d08838da33d645a36c49b" translate="yes" xml:space="preserve">
          <source>Note that a symbol used as a function name may also be used as a variable; these two uses of a symbol are independent and do not conflict. (This is not the case in some dialects of Lisp, like Scheme.)</source>
          <target state="translated">Obsérvese que un símbolo utilizado como nombre de una función también puede utilizarse como una variable;estos dos usos de un símbolo son independientes y no entran en conflicto.(Este no es el caso en algunos dialectos de Lisp,como Scheme.)</target>
        </trans-unit>
        <trans-unit id="0e7d278c76ca3c97b7fc7f52a288a7ed8d2b5fc0" translate="yes" xml:space="preserve">
          <source>Note that all functions described below will respect the adherence of frames (and all other window-system windows) to their respective z-group (see &lt;a href=&quot;position-parameters#Position-Parameters&quot;&gt;Position Parameters&lt;/a&gt;). For example, you usually cannot lower a frame below that of the desktop window and you cannot raise a frame whose &lt;code&gt;z-group&lt;/code&gt; parameter is &lt;code&gt;nil&lt;/code&gt; above the window-system&amp;rsquo;s taskbar or tooltip window.</source>
          <target state="translated">Note that all functions described below will respect the adherence of frames (and all other window-system windows) to their respective z-group (see &lt;a href=&quot;position-parameters#Position-Parameters&quot;&gt;Position Parameters&lt;/a&gt;). For example, you usually cannot lower a frame below that of the desktop window and you cannot raise a frame whose &lt;code&gt;z-group&lt;/code&gt; parameter is &lt;code&gt;nil&lt;/code&gt; above the window-system&amp;rsquo;s taskbar or tooltip window.</target>
        </trans-unit>
        <trans-unit id="1eca8603245bea5b809eedfce8382a27e1e6ac6e" translate="yes" xml:space="preserve">
          <source>Note that among the internal functions listed here, &lt;code&gt;display-buffer--maybe-same-window&lt;/code&gt; is effectively ignored while &lt;code&gt;display-buffer--maybe-pop-up-frame-or-window&lt;/code&gt; actually runs &lt;code&gt;display-buffer-pop-up-window&lt;/code&gt;.</source>
          <target state="translated">Note that among the internal functions listed here, &lt;code&gt;display-buffer--maybe-same-window&lt;/code&gt; is effectively ignored while &lt;code&gt;display-buffer--maybe-pop-up-frame-or-window&lt;/code&gt; actually runs &lt;code&gt;display-buffer-pop-up-window&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d006d7d82c4cf8967401facb8495eb53ce2b548" translate="yes" xml:space="preserve">
          <source>Note that any functions added to these hooks by your initial file are usually not run for the initial frame, since Emacs reads the initial file only after creating that frame. However, if the initial frame is specified to use a separate minibuffer frame (see &lt;a href=&quot;minibuffers-and-frames#Minibuffers-and-Frames&quot;&gt;Minibuffers and Frames&lt;/a&gt;), the functions will be run for both, the minibuffer-less and the minibuffer frame.</source>
          <target state="translated">Note that any functions added to these hooks by your initial file are usually not run for the initial frame, since Emacs reads the initial file only after creating that frame. However, if the initial frame is specified to use a separate minibuffer frame (see &lt;a href=&quot;minibuffers-and-frames#Minibuffers-and-Frames&quot;&gt;Minibuffers and Frames&lt;/a&gt;), the functions will be run for both, the minibuffer-less and the minibuffer frame.</target>
        </trans-unit>
        <trans-unit id="6b08f2421a6c05a0ee00e59222f1df594f4fd0e9" translate="yes" xml:space="preserve">
          <source>Note that any non-&lt;code&gt;nil&lt;/code&gt; symbol might be used as an event or an event type; &lt;code&gt;eventp&lt;/code&gt; cannot distinguish whether a symbol is intended by Lisp code to be used as an event.</source>
          <target state="translated">Note that any non- &lt;code&gt;nil&lt;/code&gt; symbol might be used as an event or an event type; &lt;code&gt;eventp&lt;/code&gt; cannot distinguish whether a symbol is intended by Lisp code to be used as an event.</target>
        </trans-unit>
        <trans-unit id="d1591e27e69961a04460b2fe1820737613f07080" translate="yes" xml:space="preserve">
          <source>Note that case conversion is not a one-to-one mapping of codepoints and length of the result may differ from length of the argument. Furthermore, because passing a character forces return type to be a character, functions are unable to perform proper substitution and result may differ compared to treating a one-character string. For example:</source>
          <target state="translated">Obsérvese que la conversión de casos no es un mapeo unívoco de los puntos de código y la longitud del resultado puede diferir de la longitud del argumento.Además,como al pasar un carácter se fuerza a que el tipo de retorno sea un carácter,las funciones no pueden realizar una sustitución adecuada y el resultado puede diferir en comparación con el tratamiento de una cadena de un carácter.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="ce70eb5a1727174c7a315b786b751a0ce2e6823e" translate="yes" xml:space="preserve">
          <source>Note that display tables affect how the mode line is displayed, so if you want to force redisplay of the mode line using a new display table, call &lt;code&gt;force-mode-line-update&lt;/code&gt; (see &lt;a href=&quot;mode-line-format#Mode-Line-Format&quot;&gt;Mode Line Format&lt;/a&gt;).</source>
          <target state="translated">Note that display tables affect how the mode line is displayed, so if you want to force redisplay of the mode line using a new display table, call &lt;code&gt;force-mode-line-update&lt;/code&gt; (see &lt;a href=&quot;mode-line-format#Mode-Line-Format&quot;&gt;Mode Line Format&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="3e027fd5d05afab1bae33a36130ab5cf384d7efa" translate="yes" xml:space="preserve">
          <source>Note that elements of &lt;code&gt;minor-mode-map-alist&lt;/code&gt; do not have the same structure as elements of &lt;code&gt;minor-mode-alist&lt;/code&gt;. The map must be the &lt;small&gt;CDR&lt;/small&gt; of the element; a list with the map as the second element will not do. The &lt;small&gt;CDR&lt;/small&gt; can be either a keymap (a list) or a symbol whose function definition is a keymap.</source>
          <target state="translated">Note that elements of &lt;code&gt;minor-mode-map-alist&lt;/code&gt; do not have the same structure as elements of &lt;code&gt;minor-mode-alist&lt;/code&gt; . The map must be the &lt;small&gt;CDR&lt;/small&gt; of the element; a list with the map as the second element will not do. The &lt;small&gt;CDR&lt;/small&gt; can be either a keymap (a list) or a symbol whose function definition is a keymap.</target>
        </trans-unit>
        <trans-unit id="5c6f5e6a17b21c98d8da299e04e71ec5bc5fccaa" translate="yes" xml:space="preserve">
          <source>Note that for &lt;code&gt;nthcdr&lt;/code&gt;, the list argument of the function must itself be a valid &lt;var&gt;place&lt;/var&gt; form. For example, &lt;code&gt;(setf (nthcdr
0 foo) 7)&lt;/code&gt; will set &lt;code&gt;foo&lt;/code&gt; itself to 7.</source>
          <target state="translated">Note that for &lt;code&gt;nthcdr&lt;/code&gt; , the list argument of the function must itself be a valid &lt;var&gt;place&lt;/var&gt; form. For example, &lt;code&gt;(setf (nthcdr 0 foo) 7)&lt;/code&gt; will set &lt;code&gt;foo&lt;/code&gt; itself to 7.</target>
        </trans-unit>
        <trans-unit id="b7031d4a6bb1fd17ff90dc3b21b4c28dae0691db" translate="yes" xml:space="preserve">
          <source>Note that hyphen (&lt;code&gt;-&lt;/code&gt;) is special in strings in this construct, since it acts as a range separator. To include a hyphen, add it as a separate character or single-character string. Corresponding string regexp: &amp;lsquo;</source>
          <target state="translated">Note that hyphen ( &lt;code&gt;-&lt;/code&gt; ) is special in strings in this construct, since it acts as a range separator. To include a hyphen, add it as a separate character or single-character string. Corresponding string regexp: &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="71a252b7e10406a1efe10d060f22023cc1adeb54" translate="yes" xml:space="preserve">
          <source>Note that if Emacs already has a buffer visiting the same file non-literally, it will not visit the same file literally, but instead just switch to the existing buffer. If you want to be sure of accessing a file&amp;rsquo;s contents literally, you should create a temporary buffer and then read the file contents into it using &lt;code&gt;insert-file-contents-literally&lt;/code&gt; (see &lt;a href=&quot;reading-from-files#Reading-from-Files&quot;&gt;Reading from Files&lt;/a&gt;).</source>
          <target state="translated">Note that if Emacs already has a buffer visiting the same file non-literally, it will not visit the same file literally, but instead just switch to the existing buffer. If you want to be sure of accessing a file&amp;rsquo;s contents literally, you should create a temporary buffer and then read the file contents into it using &lt;code&gt;insert-file-contents-literally&lt;/code&gt; (see &lt;a href=&quot;reading-from-files#Reading-from-Files&quot;&gt;Reading from Files&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="7aabecd82de173080e0d6a40e3c8b6bd5b301744" translate="yes" xml:space="preserve">
          <source>Note that if the string to be displayed in the margin doesn&amp;rsquo;t specify a face, its face is determined using the same rules and priorities as it is for strings displayed in the text area (see &lt;a href=&quot;displaying-faces#Displaying-Faces&quot;&gt;Displaying Faces&lt;/a&gt;). If this results in undesirable &amp;ldquo;leaking&amp;rdquo; of faces into the margin, make sure the string has an explicit face specified for it.</source>
          <target state="translated">Note that if the string to be displayed in the margin doesn&amp;rsquo;t specify a face, its face is determined using the same rules and priorities as it is for strings displayed in the text area (see &lt;a href=&quot;displaying-faces#Displaying-Faces&quot;&gt;Displaying Faces&lt;/a&gt;). If this results in undesirable &amp;ldquo;leaking&amp;rdquo; of faces into the margin, make sure the string has an explicit face specified for it.</target>
        </trans-unit>
        <trans-unit id="d4e506505176e0289fea2ef20ed99c25d90708a5" translate="yes" xml:space="preserve">
          <source>Note that if the text also has a &lt;code&gt;height&lt;/code&gt; display specification, which was specified before (i.e. to the left of) &lt;code&gt;raise&lt;/code&gt;, the latter will affect the amount of raising or lowering in pixels, because that is based on the height of the text being raised. Therefore, if you want to display a sub- or superscript that is smaller than the normal text height, consider specifying &lt;code&gt;raise&lt;/code&gt; before &lt;code&gt;height&lt;/code&gt;.</source>
          <target state="translated">Note that if the text also has a &lt;code&gt;height&lt;/code&gt; display specification, which was specified before (i.e. to the left of) &lt;code&gt;raise&lt;/code&gt; , the latter will affect the amount of raising or lowering in pixels, because that is based on the height of the text being raised. Therefore, if you want to display a sub- or superscript that is smaller than the normal text height, consider specifying &lt;code&gt;raise&lt;/code&gt; before &lt;code&gt;height&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f83321e2dc6362ff6bb142d1319ba7d1841f375" translate="yes" xml:space="preserve">
          <source>Note that image types &lt;code&gt;pbm&lt;/code&gt; and &lt;code&gt;xbm&lt;/code&gt; do not need entries in this variable because they do not depend on external libraries and are always available in Emacs.</source>
          <target state="translated">Note that image types &lt;code&gt;pbm&lt;/code&gt; and &lt;code&gt;xbm&lt;/code&gt; do not need entries in this variable because they do not depend on external libraries and are always available in Emacs.</target>
        </trans-unit>
        <trans-unit id="2b90bd2256efbea7d91a8f1731d6cbc9dc04839d" translate="yes" xml:space="preserve">
          <source>Note that in contrast to &lt;code&gt;or&lt;/code&gt;, both arguments are always evaluated.</source>
          <target state="translated">Note that in contrast to &lt;code&gt;or&lt;/code&gt; , both arguments are always evaluated.</target>
        </trans-unit>
        <trans-unit id="f1d398c647559c7e5536cae0d92bd8598b1b5529" translate="yes" xml:space="preserve">
          <source>Note that in the third example, the function returned</source>
          <target state="translated">Obsérvese que en el tercer ejemplo,la función devolvió</target>
        </trans-unit>
        <trans-unit id="f10b1133c79e4544a6c4fd2a1bf8f43bddfa17d8" translate="yes" xml:space="preserve">
          <source>Note that keymaps and keyboard macros (strings and vectors) are not valid functions, so a symbol with a keymap, string, or vector as its function definition is invalid as a function. It is, however, valid as a key binding. If the definition is a keyboard macro, then the symbol is also valid as an argument to &lt;code&gt;command-execute&lt;/code&gt; (see &lt;a href=&quot;interactive-call#Interactive-Call&quot;&gt;Interactive Call&lt;/a&gt;).</source>
          <target state="translated">Note that keymaps and keyboard macros (strings and vectors) are not valid functions, so a symbol with a keymap, string, or vector as its function definition is invalid as a function. It is, however, valid as a key binding. If the definition is a keyboard macro, then the symbol is also valid as an argument to &lt;code&gt;command-execute&lt;/code&gt; (see &lt;a href=&quot;interactive-call#Interactive-Call&quot;&gt;Interactive Call&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="f7ca497421798c821a09facd3f3452f27743e204" translate="yes" xml:space="preserve">
          <source>Note that negative values do not permit to align the right or bottom edge of &lt;var&gt;frame&lt;/var&gt; exactly at the right or bottom edge of its display or parent frame. Neither do they allow to specify a position that does not lie within the edges of the display or parent frame. The frame parameters &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;top&lt;/code&gt; (see &lt;a href=&quot;position-parameters#Position-Parameters&quot;&gt;Position Parameters&lt;/a&gt;) allow to do that, but may still fail to provide good results for the initial or a new frame.</source>
          <target state="translated">Note that negative values do not permit to align the right or bottom edge of &lt;var&gt;frame&lt;/var&gt; exactly at the right or bottom edge of its display or parent frame. Neither do they allow to specify a position that does not lie within the edges of the display or parent frame. The frame parameters &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;top&lt;/code&gt; (see &lt;a href=&quot;position-parameters#Position-Parameters&quot;&gt;Position Parameters&lt;/a&gt;) allow to do that, but may still fail to provide good results for the initial or a new frame.</target>
        </trans-unit>
        <trans-unit id="6bb86bc06ff9fe96cf961221500aba7002f6114c" translate="yes" xml:space="preserve">
          <source>Note that on multi-monitor displays (see &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;), the window manager might position the frame differently than specified by the positional parameters in &lt;var&gt;parameters&lt;/var&gt; (see &lt;a href=&quot;position-parameters#Position-Parameters&quot;&gt;Position Parameters&lt;/a&gt;). For example, some window managers have a policy of displaying the frame on the monitor that contains the largest part of the window (a.k.a. the &lt;em&gt;dominating&lt;/em&gt; monitor).</source>
          <target state="translated">Note that on multi-monitor displays (see &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;), the window manager might position the frame differently than specified by the positional parameters in &lt;var&gt;parameters&lt;/var&gt; (see &lt;a href=&quot;position-parameters#Position-Parameters&quot;&gt;Position Parameters&lt;/a&gt;). For example, some window managers have a policy of displaying the frame on the monitor that contains the largest part of the window (a.k.a. the &lt;em&gt;dominating&lt;/em&gt; monitor).</target>
        </trans-unit>
        <trans-unit id="451dabba0c45d6a9da92c12dfcbef25151b92f65" translate="yes" xml:space="preserve">
          <source>Note that once you have defined a face (usually with &lt;code&gt;defface&lt;/code&gt;), you cannot later undefine this face safely, except by restarting Emacs.</source>
          <target state="translated">Note that once you have defined a face (usually with &lt;code&gt;defface&lt;/code&gt; ), you cannot later undefine this face safely, except by restarting Emacs.</target>
        </trans-unit>
        <trans-unit id="8be3a3df08c2c43245d05ddcd5d07fbab7b209b4" translate="yes" xml:space="preserve">
          <source>Note that property lists are similar to association lists in several respects. A property list behaves like an association list in which each key can occur only once. See &lt;a href=&quot;property-lists#Property-Lists&quot;&gt;Property Lists&lt;/a&gt;, for a comparison of property lists and association lists.</source>
          <target state="translated">Note that property lists are similar to association lists in several respects. A property list behaves like an association list in which each key can occur only once. See &lt;a href=&quot;property-lists#Property-Lists&quot;&gt;Property Lists&lt;/a&gt;, for a comparison of property lists and association lists.</target>
        </trans-unit>
        <trans-unit id="cf01d48b51913f0cf00ab32bac6c884aa95173f2" translate="yes" xml:space="preserve">
          <source>Note that providing such an entry alone does not necessarily make the window as tall as specified by its value. To actually resize an existing window or make a new window as tall as specified by that value, a &lt;code&gt;window-height&lt;/code&gt; entry specifying that value should be provided as well. Such a &lt;code&gt;window-height&lt;/code&gt; entry can, however, specify a completely different value or ask the window height to be fit to that of its buffer in which case the &lt;code&gt;window-min-height&lt;/code&gt; entry provides the guaranteed minimum height of the window used.</source>
          <target state="translated">Note that providing such an entry alone does not necessarily make the window as tall as specified by its value. To actually resize an existing window or make a new window as tall as specified by that value, a &lt;code&gt;window-height&lt;/code&gt; entry specifying that value should be provided as well. Such a &lt;code&gt;window-height&lt;/code&gt; entry can, however, specify a completely different value or ask the window height to be fit to that of its buffer in which case the &lt;code&gt;window-min-height&lt;/code&gt; entry provides the guaranteed minimum height of the window used.</target>
        </trans-unit>
        <trans-unit id="a8d1c86e0cb1777d5c4381401ecb75f9d100b2f8" translate="yes" xml:space="preserve">
          <source>Note that references to &lt;code&gt;foo&lt;/code&gt; in &lt;var&gt;body&lt;/var&gt; access the buffer-local binding of buffer &amp;lsquo;</source>
          <target state="translated">Note that references to &lt;code&gt;foo&lt;/code&gt; in &lt;var&gt;body&lt;/var&gt; access the buffer-local binding of buffer &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="944ce22b3c1e0e4361ff98e0b47922f894f4954d" translate="yes" xml:space="preserve">
          <source>Note that remapping only takes place through active keymaps; for example, putting a remapping in a prefix keymap like &lt;code&gt;ctl-x-map&lt;/code&gt; typically has no effect, as such keymaps are not themselves active. In addition, remapping only works through a single level; in the following example,</source>
          <target state="translated">Note that remapping only takes place through active keymaps; for example, putting a remapping in a prefix keymap like &lt;code&gt;ctl-x-map&lt;/code&gt; typically has no effect, as such keymaps are not themselves active. In addition, remapping only works through a single level; in the following example,</target>
        </trans-unit>
        <trans-unit id="aa44f3362212f49d475dc95b39b81576e77893a3" translate="yes" xml:space="preserve">
          <source>Note that setting this variable to a non-&lt;code&gt;nil&lt;/code&gt; value does not change the fact that auto-saving is different from saving the buffer; e.g., the hooks described in &lt;a href=&quot;saving-buffers#Saving-Buffers&quot;&gt;Saving Buffers&lt;/a&gt; are &lt;em&gt;not&lt;/em&gt; run when a buffer is auto-saved.</source>
          <target state="translated">Note that setting this variable to a non- &lt;code&gt;nil&lt;/code&gt; value does not change the fact that auto-saving is different from saving the buffer; e.g., the hooks described in &lt;a href=&quot;saving-buffers#Saving-Buffers&quot;&gt;Saving Buffers&lt;/a&gt; are &lt;em&gt;not&lt;/em&gt; run when a buffer is auto-saved.</target>
        </trans-unit>
        <trans-unit id="ce4d07d18464ef749e1edb147a33de09d0f7af7e" translate="yes" xml:space="preserve">
          <source>Note that several rings in Emacs, like the kill ring and the mark ring, are actually implemented as simple lists, &lt;em&gt;not&lt;/em&gt; using the &lt;code&gt;ring&lt;/code&gt; package; thus the following functions won&amp;rsquo;t work on them.</source>
          <target state="translated">Note that several rings in Emacs, like the kill ring and the mark ring, are actually implemented as simple lists, &lt;em&gt;not&lt;/em&gt; using the &lt;code&gt;ring&lt;/code&gt; package; thus the following functions won&amp;rsquo;t work on them.</target>
        </trans-unit>
        <trans-unit id="ada2f27c9ba203cc421e71266f32365f19ed4b0f" translate="yes" xml:space="preserve">
          <source>Note that since &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; is called by &lt;code&gt;bury-buffer&lt;/code&gt;, &lt;code&gt;replace-buffer-in-windows&lt;/code&gt; and &lt;code&gt;quit-restore-window&lt;/code&gt; as well, customizing this option may also affect the behavior of Emacs when a window is quit or a buffer gets buried or killed.</source>
          <target state="translated">Note that since &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; is called by &lt;code&gt;bury-buffer&lt;/code&gt; , &lt;code&gt;replace-buffer-in-windows&lt;/code&gt; and &lt;code&gt;quit-restore-window&lt;/code&gt; as well, customizing this option may also affect the behavior of Emacs when a window is quit or a buffer gets buried or killed.</target>
        </trans-unit>
        <trans-unit id="df75894a436d2ac6f25b076d7908978b97f93102" translate="yes" xml:space="preserve">
          <source>Note that since this is a function, it can only return non-&lt;code&gt;nil&lt;/code&gt; for variables which are permanently special, but not for those that are only special in the current lexical scope.</source>
          <target state="translated">Note that since this is a function, it can only return non- &lt;code&gt;nil&lt;/code&gt; for variables which are permanently special, but not for those that are only special in the current lexical scope.</target>
        </trans-unit>
        <trans-unit id="2fac15f40439742424e3aa18f0429ca4f01e2aaf" translate="yes" xml:space="preserve">
          <source>Note that sometimes selecting a window is not enough to show it, or make its frame the top-most frame on display: you may also need to raise the frame or make sure input focus is directed to that frame. See &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;.</source>
          <target state="translated">Note that sometimes selecting a window is not enough to show it, or make its frame the top-most frame on display: you may also need to raise the frame or make sure input focus is directed to that frame. See &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1028e973fd6d45e7d7652a7eded330cbb5470222" translate="yes" xml:space="preserve">
          <source>Note that space properties are treated as paragraph separators for the purposes of reordering bidirectional text for display. See &lt;a href=&quot;bidirectional-display#Bidirectional-Display&quot;&gt;Bidirectional Display&lt;/a&gt;, for the details.</source>
          <target state="translated">Note that space properties are treated as paragraph separators for the purposes of reordering bidirectional text for display. See &lt;a href=&quot;bidirectional-display#Bidirectional-Display&quot;&gt;Bidirectional Display&lt;/a&gt;, for the details.</target>
        </trans-unit>
        <trans-unit id="7cb5ad3eb4a2271a938c9aa7f77ae8d741838eaf" translate="yes" xml:space="preserve">
          <source>Note that specifying a value, even &lt;code&gt;nil&lt;/code&gt;, marks the variable as special permanently. Whereas if &lt;var&gt;value&lt;/var&gt; is omitted then the variable is only marked special locally (i.e. within the current lexical scope, or file if at the top-level). This can be useful for suppressing byte compilation warnings, see &lt;a href=&quot;compiler-errors#Compiler-Errors&quot;&gt;Compiler Errors&lt;/a&gt;.</source>
          <target state="translated">Note that specifying a value, even &lt;code&gt;nil&lt;/code&gt; , marks the variable as special permanently. Whereas if &lt;var&gt;value&lt;/var&gt; is omitted then the variable is only marked special locally (i.e. within the current lexical scope, or file if at the top-level). This can be useful for suppressing byte compilation warnings, see &lt;a href=&quot;compiler-errors#Compiler-Errors&quot;&gt;Compiler Errors&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="d0bceaee80bf44f350b2b336e7bdc4aca04effe6" translate="yes" xml:space="preserve">
          <source>Note that storing a new binding for</source>
          <target state="translated">Tenga en cuenta que el almacenamiento de una nueva encuadernación para</target>
        </trans-unit>
        <trans-unit id="ca0f3720c830567e36124202fdc192dd9c282156" translate="yes" xml:space="preserve">
          <source>Note that storing new values into the &lt;small&gt;CDR&lt;/small&gt;s of cons cells in this list does &lt;em&gt;not&lt;/em&gt; change the buffer-local values of the variables.</source>
          <target state="translated">Note that storing new values into the &lt;small&gt;CDR&lt;/small&gt;s of cons cells in this list does &lt;em&gt;not&lt;/em&gt; change the buffer-local values of the variables.</target>
        </trans-unit>
        <trans-unit id="bcb5445ab75b38c5ccd760396b2859fa80f84f86" translate="yes" xml:space="preserve">
          <source>Note that text in paragraphs whose base direction is right-to-left (see &lt;a href=&quot;bidirectional-display#Bidirectional-Display&quot;&gt;Bidirectional Display&lt;/a&gt;) moves in the opposite direction: e.g., it moves to the right when &lt;code&gt;scroll-left&lt;/code&gt; is invoked with a positive value of &lt;var&gt;count&lt;/var&gt;.</source>
          <target state="translated">Note that text in paragraphs whose base direction is right-to-left (see &lt;a href=&quot;bidirectional-display#Bidirectional-Display&quot;&gt;Bidirectional Display&lt;/a&gt;) moves in the opposite direction: e.g., it moves to the right when &lt;code&gt;scroll-left&lt;/code&gt; is invoked with a positive value of &lt;var&gt;count&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="643a90b7cc572aa8f24a2a4aeec18309319e74d7" translate="yes" xml:space="preserve">
          <source>Note that the</source>
          <target state="translated">Tenga en cuenta que el</target>
        </trans-unit>
        <trans-unit id="e36a773ef709e536a82e2d886a7cd51f572df233" translate="yes" xml:space="preserve">
          <source>Note that the &amp;lsquo;</source>
          <target state="translated">Tenga en cuenta que el '</target>
        </trans-unit>
        <trans-unit id="a6469f422f7ec9a279d6ed4b82f424847330e523" translate="yes" xml:space="preserve">
          <source>Note that the argument &lt;code&gt;(assq 'handler list)&lt;/code&gt; appears in the expansion.</source>
          <target state="translated">Note that the argument &lt;code&gt;(assq 'handler list)&lt;/code&gt; appears in the expansion.</target>
        </trans-unit>
        <trans-unit id="4368eeb627f6bc57851f8ed6589cb35a499c91b1" translate="yes" xml:space="preserve">
          <source>Note that the arguments can be the results of other function calls, as in this example:</source>
          <target state="translated">Tenga en cuenta que los argumentos pueden ser el resultado de otras llamadas a funciones,como en este ejemplo:</target>
        </trans-unit>
        <trans-unit id="60b6c61854c649097ce19157cbb7f0ddb8c5eefa" translate="yes" xml:space="preserve">
          <source>Note that the docstrings mention &lt;var&gt;args&lt;/var&gt; (in this case, only one: &lt;code&gt;n&lt;/code&gt;) in the usual way, and also mention &lt;code&gt;EXPVAL&lt;/code&gt; by convention. The first rewrite (i.e., &lt;var&gt;body&lt;/var&gt; for &lt;code&gt;less-than&lt;/code&gt;) uses one core pattern: &lt;code&gt;pred&lt;/code&gt;. The second uses two core patterns: &lt;code&gt;and&lt;/code&gt; and &lt;code&gt;pred&lt;/code&gt;, as well as the newly-defined pattern &lt;code&gt;less-than&lt;/code&gt;. Both use a single backquote construct (see &lt;a href=&quot;backquote#Backquote&quot;&gt;Backquote&lt;/a&gt;).</source>
          <target state="translated">Note that the docstrings mention &lt;var&gt;args&lt;/var&gt; (in this case, only one: &lt;code&gt;n&lt;/code&gt; ) in the usual way, and also mention &lt;code&gt;EXPVAL&lt;/code&gt; by convention. The first rewrite (i.e., &lt;var&gt;body&lt;/var&gt; for &lt;code&gt;less-than&lt;/code&gt; ) uses one core pattern: &lt;code&gt;pred&lt;/code&gt; . The second uses two core patterns: &lt;code&gt;and&lt;/code&gt; and &lt;code&gt;pred&lt;/code&gt; , as well as the newly-defined pattern &lt;code&gt;less-than&lt;/code&gt; . Both use a single backquote construct (see &lt;a href=&quot;backquote#Backquote&quot;&gt;Backquote&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="c2edb0886e867e4ca5989b4ab0140428caf42280" translate="yes" xml:space="preserve">
          <source>Note that the documentation strings for Emacs are not the same thing as the Emacs manual. Manuals have their own source files, written in the Texinfo language; documentation strings are specified in the definitions of the functions and variables they apply to. A collection of documentation strings is not sufficient as a manual because a good manual is not organized in that fashion; it is organized in terms of topics of discussion.</source>
          <target state="translated">Tengan en cuenta que las cadenas de documentación del Emacs no son lo mismo que el manual del Emacs.Los manuales tienen sus propios archivos fuente,escritos en el lenguaje Texinfo;las cadenas de documentación se especifican en las definiciones de las funciones y variables a las que se aplican.Una colección de cadenas de documentación no es suficiente como manual porque un buen manual no está organizado de esa manera;está organizado en términos de temas de discusión.</target>
        </trans-unit>
        <trans-unit id="fca742cf8fd5cf459a0d4b4751312094297df69c" translate="yes" xml:space="preserve">
          <source>Note that the effect of restacking will only hold as long as neither of the involved frames is iconified or made invisible. You can use the &lt;code&gt;z-group&lt;/code&gt; (see &lt;a href=&quot;position-parameters#Position-Parameters&quot;&gt;Position Parameters&lt;/a&gt;) frame parameter to add a frame to a group of frames permanently shown above or below other frames. As long as a frame belongs to one of these groups, restacking it will only affect its relative stacking position within that group. The effect of restacking frames belonging to different z-groups is undefined. You can list frames in their current stacking order with the function &lt;code&gt;frame-list-z-order&lt;/code&gt; (see &lt;a href=&quot;finding-all-frames#Finding-All-Frames&quot;&gt;Finding All Frames&lt;/a&gt;).</source>
          <target state="translated">Note that the effect of restacking will only hold as long as neither of the involved frames is iconified or made invisible. You can use the &lt;code&gt;z-group&lt;/code&gt; (see &lt;a href=&quot;position-parameters#Position-Parameters&quot;&gt;Position Parameters&lt;/a&gt;) frame parameter to add a frame to a group of frames permanently shown above or below other frames. As long as a frame belongs to one of these groups, restacking it will only affect its relative stacking position within that group. The effect of restacking frames belonging to different z-groups is undefined. You can list frames in their current stacking order with the function &lt;code&gt;frame-list-z-order&lt;/code&gt; (see &lt;a href=&quot;finding-all-frames#Finding-All-Frames&quot;&gt;Finding All Frames&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="2582678e0a51538e9f647014c2a05c8ea4765da3" translate="yes" xml:space="preserve">
          <source>Note that the first &lt;var&gt;form&lt;/var&gt; is evaluated, then the first &lt;var&gt;symbol&lt;/var&gt; is set, then the second &lt;var&gt;form&lt;/var&gt; is evaluated, then the second &lt;var&gt;symbol&lt;/var&gt; is set, and so on:</source>
          <target state="translated">Note that the first &lt;var&gt;form&lt;/var&gt; is evaluated, then the first &lt;var&gt;symbol&lt;/var&gt; is set, then the second &lt;var&gt;form&lt;/var&gt; is evaluated, then the second &lt;var&gt;symbol&lt;/var&gt; is set, and so on:</target>
        </trans-unit>
        <trans-unit id="9173ba72010925230c9678e4a9c448ec671403eb" translate="yes" xml:space="preserve">
          <source>Note that the first read skips a space. Reading skips any amount of whitespace preceding the significant text.</source>
          <target state="translated">Observe que la primera lectura se salta un espacio.La lectura se salta cualquier cantidad de espacio en blanco que preceda al texto significativo.</target>
        </trans-unit>
        <trans-unit id="5b4a82bbf9da4eb3b066c08dd5991f582e95b2ff" translate="yes" xml:space="preserve">
          <source>Note that the function specified by this option is called only if the specified frame contains just one live window and there is at least one other frame on the same terminal.</source>
          <target state="translated">Tenga en cuenta que la función especificada por esta opción sólo se llama si el marco especificado contiene sólo una ventana en vivo y hay al menos otro marco en el mismo terminal.</target>
        </trans-unit>
        <trans-unit id="43a4f6baecfda8409de3b10f1d269557bab73567" translate="yes" xml:space="preserve">
          <source>Note that the handling of &lt;code&gt;command-switch-alist&lt;/code&gt; doesn&amp;rsquo;t treat equals signs in &lt;var&gt;option&lt;/var&gt; specially. That is, if there&amp;rsquo;s an option like &lt;code&gt;--name=value&lt;/code&gt; on the command line, then only a &lt;code&gt;command-switch-alist&lt;/code&gt; member whose &lt;code&gt;car&lt;/code&gt; is literally &lt;code&gt;--name=value&lt;/code&gt; will match this option. If you want to parse such options, you need to use &lt;code&gt;command-line-functions&lt;/code&gt; instead (see below).</source>
          <target state="translated">Note that the handling of &lt;code&gt;command-switch-alist&lt;/code&gt; doesn&amp;rsquo;t treat equals signs in &lt;var&gt;option&lt;/var&gt; specially. That is, if there&amp;rsquo;s an option like &lt;code&gt;--name=value&lt;/code&gt; on the command line, then only a &lt;code&gt;command-switch-alist&lt;/code&gt; member whose &lt;code&gt;car&lt;/code&gt; is literally &lt;code&gt;--name=value&lt;/code&gt; will match this option. If you want to parse such options, you need to use &lt;code&gt;command-line-functions&lt;/code&gt; instead (see below).</target>
        </trans-unit>
        <trans-unit id="10d410d8d2209e47d081d1091cbeb510cad74888" translate="yes" xml:space="preserve">
          <source>Note that the meaning of &lt;code&gt;nil&lt;/code&gt; differs slightly from that of the &lt;var&gt;all-frames&lt;/var&gt; argument to &lt;code&gt;next-window&lt;/code&gt; (see &lt;a href=&quot;cyclic-window-ordering#Cyclic-Window-Ordering&quot;&gt;Cyclic Window Ordering&lt;/a&gt;).</source>
          <target state="translated">Note that the meaning of &lt;code&gt;nil&lt;/code&gt; differs slightly from that of the &lt;var&gt;all-frames&lt;/var&gt; argument to &lt;code&gt;next-window&lt;/code&gt; (see &lt;a href=&quot;cyclic-window-ordering#Cyclic-Window-Ordering&quot;&gt;Cyclic Window Ordering&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="46305bb5f2b4deb49120db52fdc405524ee1ca0b" translate="yes" xml:space="preserve">
          <source>Note that the minibuffer window used by a frame need not be part of that frame&amp;mdash;a frame that has no minibuffer of its own necessarily uses some other frame&amp;rsquo;s minibuffer window. The minibuffer window of a minibuffer-less frame can be changed by setting that frame&amp;rsquo;s &lt;code&gt;minibuffer&lt;/code&gt; frame parameter (see &lt;a href=&quot;buffer-parameters#Buffer-Parameters&quot;&gt;Buffer Parameters&lt;/a&gt;).</source>
          <target state="translated">Note that the minibuffer window used by a frame need not be part of that frame&amp;mdash;a frame that has no minibuffer of its own necessarily uses some other frame&amp;rsquo;s minibuffer window. The minibuffer window of a minibuffer-less frame can be changed by setting that frame&amp;rsquo;s &lt;code&gt;minibuffer&lt;/code&gt; frame parameter (see &lt;a href=&quot;buffer-parameters#Buffer-Parameters&quot;&gt;Buffer Parameters&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="29787cca83afbad5cb5731b6b829bddd7a5a6e3f" translate="yes" xml:space="preserve">
          <source>Note that the open and close parentheses remain in the list. The Lisp reader encountered the open parenthesis, decided that it ended the input, and unread it. Another attempt to read from the stream at this point would read &amp;lsquo;</source>
          <target state="translated">Note that the open and close parentheses remain in the list. The Lisp reader encountered the open parenthesis, decided that it ended the input, and unread it. Another attempt to read from the stream at this point would read &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="59f13de0f3c2b965927d50d1e0831d83e4c0b4e3" translate="yes" xml:space="preserve">
          <source>Note that the option &lt;code&gt;fit-window-to-buffer-horizontally&lt;/code&gt; must have a non-&lt;code&gt;nil&lt;/code&gt; value in order to allow horizontal adjustment of windows. Entries are also added that ask for preserving the height of side windows at the top and bottom of the frame and the width of side windows at the left or right of the frame. To assure that side windows retain their respective sizes when maximizing the frame, the variable &lt;code&gt;window-resize-pixelwise&lt;/code&gt; is set to a non-&lt;code&gt;nil&lt;/code&gt; value. See &lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;Resizing Windows&lt;/a&gt;.</source>
          <target state="translated">Note that the option &lt;code&gt;fit-window-to-buffer-horizontally&lt;/code&gt; must have a non- &lt;code&gt;nil&lt;/code&gt; value in order to allow horizontal adjustment of windows. Entries are also added that ask for preserving the height of side windows at the top and bottom of the frame and the width of side windows at the left or right of the frame. To assure that side windows retain their respective sizes when maximizing the frame, the variable &lt;code&gt;window-resize-pixelwise&lt;/code&gt; is set to a non- &lt;code&gt;nil&lt;/code&gt; value. See &lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;Resizing Windows&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="9a70f1cf74ad105152fa3a136ffd4bd441d193a1" translate="yes" xml:space="preserve">
          <source>Note that the second argument is always the list of &lt;em&gt;all&lt;/em&gt; action alist entries specified by the sources named above. Hence, the first element of that list is the first action alist entry specified by &lt;code&gt;display-buffer-overriding-action&lt;/code&gt;, if any. Its last element is the last alist entry of &lt;code&gt;display-buffer-base-action&lt;/code&gt;, if any (the action alist of &lt;code&gt;display-buffer-fallback-action&lt;/code&gt; is empty).</source>
          <target state="translated">Note that the second argument is always the list of &lt;em&gt;all&lt;/em&gt; action alist entries specified by the sources named above. Hence, the first element of that list is the first action alist entry specified by &lt;code&gt;display-buffer-overriding-action&lt;/code&gt; , if any. Its last element is the last alist entry of &lt;code&gt;display-buffer-base-action&lt;/code&gt; , if any (the action alist of &lt;code&gt;display-buffer-fallback-action&lt;/code&gt; is empty).</target>
        </trans-unit>
        <trans-unit id="074011f5871b6c0968cba6e5251ad570a7913126" translate="yes" xml:space="preserve">
          <source>Note that the term &amp;ldquo;command&amp;rdquo;, in this context, refers to an interactively callable function (or function-like object), or a keyboard macro. It does not refer to the key sequence used to invoke a command (see &lt;a href=&quot;keymaps#Keymaps&quot;&gt;Keymaps&lt;/a&gt;).</source>
          <target state="translated">Note that the term &amp;ldquo;command&amp;rdquo;, in this context, refers to an interactively callable function (or function-like object), or a keyboard macro. It does not refer to the key sequence used to invoke a command (see &lt;a href=&quot;keymaps#Keymaps&quot;&gt;Keymaps&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="2b48ed316676b2a77757a76ff8c81c0c3beb1931" translate="yes" xml:space="preserve">
          <source>Note that the time returned by this function excludes the time Emacs was not using the processor, and if the Emacs process has several threads, the returned value is the sum of the processor times used up by all Emacs threads.</source>
          <target state="translated">Tenga en cuenta que el tiempo devuelto por esta función excluye el tiempo en que Emacs no estaba utilizando el procesador,y si el proceso de Emacs tiene varios hilos,el valor devuelto es la suma de los tiempos de procesador utilizados por todos los hilos de Emacs.</target>
        </trans-unit>
        <trans-unit id="87ffd6d39e1afd8a7828b54719c1a46abb2defc0" translate="yes" xml:space="preserve">
          <source>Note that the user-level incremental search feature handles case distinctions differently. When the search string contains only lower case letters, the search ignores case, but when the search string contains one or more upper case letters, the search becomes case-sensitive. But this has nothing to do with the searching functions used in Lisp code. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Incremental-Search.html#Incremental-Search&quot;&gt;Incremental Search&lt;/a&gt; in</source>
          <target state="translated">Note that the user-level incremental search feature handles case distinctions differently. When the search string contains only lower case letters, the search ignores case, but when the search string contains one or more upper case letters, the search becomes case-sensitive. But this has nothing to do with the searching functions used in Lisp code. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Incremental-Search.html#Incremental-Search&quot;&gt;Incremental Search&lt;/a&gt; in</target>
        </trans-unit>
        <trans-unit id="aa30ecc6a9801e96a10f51cc845ae8140b1365d1" translate="yes" xml:space="preserve">
          <source>Note that the user-level incremental search feature handles case distinctions differently. When the search string contains only lower case letters, the search ignores case, but when the search string contains one or more upper case letters, the search becomes case-sensitive. But this has nothing to do with the searching functions used in Lisp code. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Incremental-Search.html#Incremental-Search&quot;&gt;Incremental Search&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f06cef1accb1f0afe0d8f8b378512094228d0996" translate="yes" xml:space="preserve">
          <source>Note that the value of the &lt;code&gt;window-atom&lt;/code&gt; parameter does not really matter as long as it is non-&lt;code&gt;nil&lt;/code&gt;. The values assigned by &lt;code&gt;display-buffer-in-atom-window&lt;/code&gt; just allow for easy retrieval of the original and the new window after that function has been applied. Note also that the &lt;code&gt;window-atom&lt;/code&gt; parameter is the only window parameter assigned by &lt;code&gt;display-buffer-in-atom-window&lt;/code&gt;. Further parameters have to be set by the application explicitly via a &lt;code&gt;window-parameters&lt;/code&gt; entry in &lt;var&gt;alist&lt;/var&gt;.</source>
          <target state="translated">Note that the value of the &lt;code&gt;window-atom&lt;/code&gt; parameter does not really matter as long as it is non- &lt;code&gt;nil&lt;/code&gt; . The values assigned by &lt;code&gt;display-buffer-in-atom-window&lt;/code&gt; just allow for easy retrieval of the original and the new window after that function has been applied. Note also that the &lt;code&gt;window-atom&lt;/code&gt; parameter is the only window parameter assigned by &lt;code&gt;display-buffer-in-atom-window&lt;/code&gt; . Further parameters have to be set by the application explicitly via a &lt;code&gt;window-parameters&lt;/code&gt; entry in &lt;var&gt;alist&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="3fb6d667bc03880b5ccfb18ddea5d35e1c03ca93" translate="yes" xml:space="preserve">
          <source>Note that the value of this variable is ignored when &lt;code&gt;make-process&lt;/code&gt; is called with a non-&lt;code&gt;nil&lt;/code&gt; value of the &lt;code&gt;:stderr&lt;/code&gt; parameter; in that case, Emacs will communicate with the process using pipes. It is also ignored if ptys are unavailable (MS-Windows).</source>
          <target state="translated">Note that the value of this variable is ignored when &lt;code&gt;make-process&lt;/code&gt; is called with a non- &lt;code&gt;nil&lt;/code&gt; value of the &lt;code&gt;:stderr&lt;/code&gt; parameter; in that case, Emacs will communicate with the process using pipes. It is also ignored if ptys are unavailable (MS-Windows).</target>
        </trans-unit>
        <trans-unit id="4a97b13e6f37fae9d240fea05dd6e0d29f53c80f" translate="yes" xml:space="preserve">
          <source>Note that the values of the above two variables take effect at display time, so let-binding them around code which produces echo-area messages will not work. If you want to prevent resizing of minibuffer windows when displaying long messages, bind the &lt;code&gt;message-truncate-lines&lt;/code&gt; variable instead (see &lt;a href=&quot;echo-area-customization#Echo-Area-Customization&quot;&gt;Echo Area Customization&lt;/a&gt;).</source>
          <target state="translated">Note that the values of the above two variables take effect at display time, so let-binding them around code which produces echo-area messages will not work. If you want to prevent resizing of minibuffer windows when displaying long messages, bind the &lt;code&gt;message-truncate-lines&lt;/code&gt; variable instead (see &lt;a href=&quot;echo-area-customization#Echo-Area-Customization&quot;&gt;Echo Area Customization&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="cc4faf74f63a3bd8358aed546107967e25cd284b" translate="yes" xml:space="preserve">
          <source>Note that there is no conflict between the variable named &lt;code&gt;list&lt;/code&gt; used in this example and the function named &lt;code&gt;list&lt;/code&gt; described below; any symbol can serve both purposes.</source>
          <target state="translated">Note that there is no conflict between the variable named &lt;code&gt;list&lt;/code&gt; used in this example and the function named &lt;code&gt;list&lt;/code&gt; described below; any symbol can serve both purposes.</target>
        </trans-unit>
        <trans-unit id="f915f57254052f46a7173c363fa3e8ad81bbb90f" translate="yes" xml:space="preserve">
          <source>Note that these are the actual outer edges of the window, including any header line, mode line, scroll bar, fringes, window divider and display margins. On a text terminal, if the window has a neighbor on its right, its right edge includes the separator line between the window and its neighbor.</source>
          <target state="translated">Observe que estos son los bordes exteriores reales de la ventana,incluyendo cualquier línea de encabezamiento,línea de modo,barra de desplazamiento,franjas,divisor de ventana y márgenes de visualización.En un terminal de texto,si la ventana tiene un vecino a su derecha,su borde derecho incluye la línea separadora entre la ventana y su vecino.</target>
        </trans-unit>
        <trans-unit id="3e29252ca0099b32f668a2f0acad91a2370dc400" translate="yes" xml:space="preserve">
          <source>Note that these meanings differ slightly from those of the &lt;var&gt;all-frames&lt;/var&gt; argument to &lt;code&gt;next-window&lt;/code&gt; (see &lt;a href=&quot;cyclic-window-ordering#Cyclic-Window-Ordering&quot;&gt;Cyclic Window Ordering&lt;/a&gt;). This function may be changed in a future version of Emacs to eliminate this discrepancy.</source>
          <target state="translated">Note that these meanings differ slightly from those of the &lt;var&gt;all-frames&lt;/var&gt; argument to &lt;code&gt;next-window&lt;/code&gt; (see &lt;a href=&quot;cyclic-window-ordering#Cyclic-Window-Ordering&quot;&gt;Cyclic Window Ordering&lt;/a&gt;). This function may be changed in a future version of Emacs to eliminate this discrepancy.</target>
        </trans-unit>
        <trans-unit id="aeecc111a3fa90e2f602220a93eb501df7032c35" translate="yes" xml:space="preserve">
          <source>Note that these two map variables do affect the execution of key sequences entered using the menu bar, even if they do not affect the menu bar display. So if a menu bar key sequence comes in, you should clear the variables before looking up and executing that key sequence. Modes that use the variables would typically do this anyway; normally they respond to events that they do not handle by &amp;ldquo;unreading&amp;rdquo; them and exiting.</source>
          <target state="translated">Note that these two map variables do affect the execution of key sequences entered using the menu bar, even if they do not affect the menu bar display. So if a menu bar key sequence comes in, you should clear the variables before looking up and executing that key sequence. Modes that use the variables would typically do this anyway; normally they respond to events that they do not handle by &amp;ldquo;unreading&amp;rdquo; them and exiting.</target>
        </trans-unit>
        <trans-unit id="e346e2d0ff56f6335dc3e655ea9c25b7e0e40014" translate="yes" xml:space="preserve">
          <source>Note that this argument does not have the same meaning as in other functions which scan all live windows (see &lt;a href=&quot;cyclic-window-ordering#Cyclic-Window-Ordering&quot;&gt;Cyclic Window Ordering&lt;/a&gt;). Specifically, the meanings of &lt;code&gt;t&lt;/code&gt; and &lt;code&gt;nil&lt;/code&gt; here are the opposite of what they are in those other functions.</source>
          <target state="translated">Note that this argument does not have the same meaning as in other functions which scan all live windows (see &lt;a href=&quot;cyclic-window-ordering#Cyclic-Window-Ordering&quot;&gt;Cyclic Window Ordering&lt;/a&gt;). Specifically, the meanings of &lt;code&gt;t&lt;/code&gt; and &lt;code&gt;nil&lt;/code&gt; here are the opposite of what they are in those other functions.</target>
        </trans-unit>
        <trans-unit id="894d286209e758f0c8e4e2de8dc595b49367a3dd" translate="yes" xml:space="preserve">
          <source>Note that this does not tell you whether the display you are using really supports that color. When using X, you can ask for any defined color on any kind of display, and you will get some result&amp;mdash;typically, the closest it can do. To determine whether a frame can really display a certain color, use &lt;code&gt;color-supported-p&lt;/code&gt; (see below).</source>
          <target state="translated">Note that this does not tell you whether the display you are using really supports that color. When using X, you can ask for any defined color on any kind of display, and you will get some result&amp;mdash;typically, the closest it can do. To determine whether a frame can really display a certain color, use &lt;code&gt;color-supported-p&lt;/code&gt; (see below).</target>
        </trans-unit>
        <trans-unit id="9c87143dafdf2015bda6be19171c454f6308b5a5" translate="yes" xml:space="preserve">
          <source>Note that this function disregards the minibuffer window (see &lt;a href=&quot;minibuffer-windows#Minibuffer-Windows&quot;&gt;Minibuffer Windows&lt;/a&gt;). Hence, with &lt;var&gt;side&lt;/var&gt; equal to &lt;code&gt;bottom&lt;/code&gt; it may return &lt;code&gt;t&lt;/code&gt; also when the minibuffer window appears right below &lt;var&gt;window&lt;/var&gt;.</source>
          <target state="translated">Note that this function disregards the minibuffer window (see &lt;a href=&quot;minibuffer-windows#Minibuffer-Windows&quot;&gt;Minibuffer Windows&lt;/a&gt;). Hence, with &lt;var&gt;side&lt;/var&gt; equal to &lt;code&gt;bottom&lt;/code&gt; it may return &lt;code&gt;t&lt;/code&gt; also when the minibuffer window appears right below &lt;var&gt;window&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="3c74267c9a9889a0868c5053a41c16d0ecce8ab6" translate="yes" xml:space="preserve">
          <source>Note that this function doesn&amp;rsquo;t account for the visual width of characters on display, like the number of visual columns taken by a tab character or an image. If you need the coordinates in canonical character units, use &lt;code&gt;posn-col-row&lt;/code&gt; instead.</source>
          <target state="translated">Note that this function doesn&amp;rsquo;t account for the visual width of characters on display, like the number of visual columns taken by a tab character or an image. If you need the coordinates in canonical character units, use &lt;code&gt;posn-col-row&lt;/code&gt; instead.</target>
        </trans-unit>
        <trans-unit id="998f1206a8bc180e46c0f799b8b5a670212afaad" translate="yes" xml:space="preserve">
          <source>Note that this function has an ambiguity if the found element is identical to &lt;var&gt;default&lt;/var&gt;, as in that case it cannot be known whether an element was found or not.</source>
          <target state="translated">Note that this function has an ambiguity if the found element is identical to &lt;var&gt;default&lt;/var&gt; , as in that case it cannot be known whether an element was found or not.</target>
        </trans-unit>
        <trans-unit id="6df96098672080fc58058b91a33fcbca6a21515b" translate="yes" xml:space="preserve">
          <source>Note that this function has to retrieve the dimensions of each line of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s glyph matrix via &lt;code&gt;window-lines-pixel-dimensions&lt;/code&gt; (see &lt;a href=&quot;size-of-displayed-text#Size-of-Displayed-Text&quot;&gt;Size of Displayed Text&lt;/a&gt;). Hence, this function may also return &lt;code&gt;nil&lt;/code&gt; when the current glyph matrix of &lt;var&gt;window&lt;/var&gt; is not up-to-date.</source>
          <target state="translated">Note that this function has to retrieve the dimensions of each line of &lt;var&gt;window&lt;/var&gt; &amp;rsquo;s glyph matrix via &lt;code&gt;window-lines-pixel-dimensions&lt;/code&gt; (see &lt;a href=&quot;size-of-displayed-text#Size-of-Displayed-Text&quot;&gt;Size of Displayed Text&lt;/a&gt;). Hence, this function may also return &lt;code&gt;nil&lt;/code&gt; when the current glyph matrix of &lt;var&gt;window&lt;/var&gt; is not up-to-date.</target>
        </trans-unit>
        <trans-unit id="c5054dbcacc1045ce838f26e3713bfdb492fb165" translate="yes" xml:space="preserve">
          <source>Note that this function might return inaccurate results in some situations, such as the following:</source>
          <target state="translated">Obsérvese que esta función puede dar resultados inexactos en algunas situaciones,como las siguientes:</target>
        </trans-unit>
        <trans-unit id="28e1bb3bf31dd9667c950f330d082131ff2cc74a" translate="yes" xml:space="preserve">
          <source>Note that this function only changes the buffer contents; it does not alter &lt;code&gt;tabulated-list-entries&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que esta funci&amp;oacute;n solo cambia el contenido del b&amp;uacute;fer; no altera &lt;code&gt;tabulated-list-entries&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6f915802707d0be2b41295f510d267fae8df11a6" translate="yes" xml:space="preserve">
          <source>Note that this function returns only IPv4 information.</source>
          <target state="translated">Tenga en cuenta que esta función sólo devuelve información IPv4.</target>
        </trans-unit>
        <trans-unit id="20b5e54b67d99f5fc2e693cae10cc92ff59c28aa" translate="yes" xml:space="preserve">
          <source>Note that this incorporates the submenu keymap, which is the value of the variable &lt;code&gt;menu-bar-replace-menu&lt;/code&gt;, rather than the symbol &lt;code&gt;menu-bar-replace-menu&lt;/code&gt; itself. Using that symbol in the parent menu item would be meaningless because &lt;code&gt;menu-bar-replace-menu&lt;/code&gt; is not a command.</source>
          <target state="translated">Tenga en cuenta que esto incorpora el mapa de teclas del submen&amp;uacute;, que es el valor de la variable &lt;code&gt;menu-bar-replace-menu&lt;/code&gt; , en lugar del s&amp;iacute;mbolo &lt;code&gt;menu-bar-replace-menu&lt;/code&gt; s&amp;iacute;. Usar ese s&amp;iacute;mbolo en el elemento del men&amp;uacute; principal no tendr&amp;iacute;a sentido porque &lt;code&gt;menu-bar-replace-menu&lt;/code&gt; no es un comando.</target>
        </trans-unit>
        <trans-unit id="aa1d2cd987fde9747e5aba9be8d033f0786b741e" translate="yes" xml:space="preserve">
          <source>Note that this option does not distinguish &amp;ldquo;sloppy&amp;rdquo; focus (where the frame that previously had focus retains focus as long as the mouse pointer does not move into another window manager window) from &amp;ldquo;strict&amp;rdquo; focus (where a frame immediately loses focus when it&amp;rsquo;s left by the mouse pointer). Neither does it recognize whether your window manager supports delayed focusing or auto-raising where you can explicitly specify the time until a new frame gets focus or is auto-raised.</source>
          <target state="translated">Tenga en cuenta que esta opci&amp;oacute;n no distingue el enfoque &quot;descuidado&quot; (donde el marco que anteriormente ten&amp;iacute;a el enfoque conserva el enfoque siempre que el puntero del mouse no se mueva a otra ventana del administrador de ventanas) del enfoque &quot;estricto&quot; (donde un marco pierde el enfoque inmediatamente cuando est&amp;aacute; dejado por el puntero del mouse). Tampoco reconoce si su administrador de ventanas admite el enfoque retardado o el aumento autom&amp;aacute;tico, donde puede especificar expl&amp;iacute;citamente el tiempo hasta que un nuevo marco se enfoca o se eleva autom&amp;aacute;ticamente.</target>
        </trans-unit>
        <trans-unit id="a7ad66f5d269e6734f06cb2f3c0014bbfb55b77d" translate="yes" xml:space="preserve">
          <source>Note that this translation is the first thing that happens to a character after it is read from the terminal. Record-keeping features such as &lt;code&gt;recent-keys&lt;/code&gt; and dribble files record the characters after translation.</source>
          <target state="translated">Tenga en cuenta que esta traducci&amp;oacute;n es lo primero que le sucede a un car&amp;aacute;cter despu&amp;eacute;s de que se lee desde la terminal. Las funciones de mantenimiento de registros, como &lt;code&gt;recent-keys&lt;/code&gt; y los archivos de goteo, registran los caracteres despu&amp;eacute;s de la traducci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="8b01ecccbe829efd57fc886cd453e999a2cf9884" translate="yes" xml:space="preserve">
          <source>Note that this variable applies only to events that really come from the keyboard, and has no effect on mouse events or any other events.</source>
          <target state="translated">Tenga en cuenta que esta variable se aplica sólo a los eventos que realmente vienen del teclado,y no tiene ningún efecto sobre los eventos del ratón o cualquier otro evento.</target>
        </trans-unit>
        <trans-unit id="879e8333c0e4e7f970d5416ebcdb0f1f832c6b93" translate="yes" xml:space="preserve">
          <source>Note that unlike &lt;code&gt;reverse&lt;/code&gt;, this function doesn&amp;rsquo;t work with strings. Although you can alter string data by using &lt;code&gt;aset&lt;/code&gt;, it is strongly encouraged to treat strings as immutable even when they are mutable. See &lt;a href=&quot;mutability#Mutability&quot;&gt;Mutability&lt;/a&gt;.</source>
          <target state="translated">Tenga en cuenta que, a diferencia de &lt;code&gt;reverse&lt;/code&gt; , esta funci&amp;oacute;n no funciona con cadenas. Aunque puede alterar los datos de la cadena utilizando un &lt;code&gt;aset&lt;/code&gt; , se recomienda encarecidamente tratar las cadenas como inmutables incluso cuando son mutables. Ver &lt;a href=&quot;mutability#Mutability&quot;&gt;mutabilidad&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="95e0f840e124ea1d4b479e3c1de97bffda6d36fe" translate="yes" xml:space="preserve">
          <source>Note that unlike dynamic variables which are tied to the symbol object itself, the relationship between lexical variables and symbols is only present in the interpreter (or compiler). Therefore, functions which take a symbol argument (like &lt;code&gt;symbol-value&lt;/code&gt;, &lt;code&gt;boundp&lt;/code&gt;, and &lt;code&gt;set&lt;/code&gt;) can only retrieve or modify a variable&amp;rsquo;s dynamic binding (i.e., the contents of its symbol&amp;rsquo;s value cell).</source>
          <target state="translated">Tenga en cuenta que, a diferencia de las variables din&amp;aacute;micas que est&amp;aacute;n vinculadas al objeto de s&amp;iacute;mbolo en s&amp;iacute;, la relaci&amp;oacute;n entre las variables l&amp;eacute;xicas y los s&amp;iacute;mbolos solo est&amp;aacute; presente en el int&amp;eacute;rprete (o compilador). Por lo tanto, las funciones que toman un argumento de s&amp;iacute;mbolo (como &lt;code&gt;symbol-value&lt;/code&gt; , &lt;code&gt;boundp&lt;/code&gt; y &lt;code&gt;set&lt;/code&gt; ) solo pueden recuperar o modificar el enlace din&amp;aacute;mico de una variable (es decir, el contenido de la celda de valor de su s&amp;iacute;mbolo).</target>
        </trans-unit>
        <trans-unit id="b42ea23442a5852b3e3945f946840be547f84efc" translate="yes" xml:space="preserve">
          <source>Note that using &lt;code&gt;mode-line&lt;/code&gt;, &lt;code&gt;mode-line-inactive&lt;/code&gt;, or &lt;code&gt;header-line&lt;/code&gt; as &lt;var&gt;face&lt;/var&gt; will actually redisplay the mode line or the header line, respectively, using the current definitions of the corresponding face, in addition to returning the formatted string. (Other faces do not cause redisplay.)</source>
          <target state="translated">Tenga en cuenta que usar &lt;code&gt;mode-line&lt;/code&gt; , &lt;code&gt;mode-line-inactive&lt;/code&gt; o &lt;code&gt;header-line&lt;/code&gt; como &lt;var&gt;face&lt;/var&gt; realidad volver&amp;aacute; a mostrar la l&amp;iacute;nea de modo o la l&amp;iacute;nea de encabezado, respectivamente, usando las definiciones actuales de la cara correspondiente, adem&amp;aacute;s de devolver la cadena formateada. (Otras caras no provocan una nueva visualizaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="da7485093f3e51570042141c7d27e976a6d49566" translate="yes" xml:space="preserve">
          <source>Note that versions of Windows before W2K support only &lt;code&gt;:icon&lt;/code&gt; and &lt;code&gt;:tip&lt;/code&gt;. The other parameters can be passed, but they will be ignored on those old systems.</source>
          <target state="translated">Tenga en cuenta que las versiones de Windows anteriores a W2K solo admiten &lt;code&gt;:icon&lt;/code&gt; y &lt;code&gt;:tip&lt;/code&gt; . Los otros par&amp;aacute;metros se pueden pasar, pero se ignorar&amp;aacute;n en esos sistemas antiguos.</target>
        </trans-unit>
        <trans-unit id="32213ce9630018bd32281e740807f4edfc3f4d49" translate="yes" xml:space="preserve">
          <source>Note that void is not the same as &lt;code&gt;nil&lt;/code&gt; or the symbol &lt;code&gt;void&lt;/code&gt;. The symbols &lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;void&lt;/code&gt; are Lisp objects, and can be stored into a function cell just as any other object can be (and they can be valid functions if you define them in turn with &lt;code&gt;defun&lt;/code&gt;). A void function cell contains no object whatsoever.</source>
          <target state="translated">Tenga en cuenta que void no es lo mismo que &lt;code&gt;nil&lt;/code&gt; o el s&amp;iacute;mbolo &lt;code&gt;void&lt;/code&gt; . Los s&amp;iacute;mbolos &lt;code&gt;nil&lt;/code&gt; y &lt;code&gt;void&lt;/code&gt; son objetos Lisp y pueden almacenarse en una celda de funci&amp;oacute;n como cualquier otro objeto (y pueden ser funciones v&amp;aacute;lidas si las define a su vez con &lt;code&gt;defun&lt;/code&gt; ). Una celda de funci&amp;oacute;n nula no contiene ning&amp;uacute;n objeto.</target>
        </trans-unit>
        <trans-unit id="c55ed2cdfec3c287af375d8415ca35326ee5ad2a" translate="yes" xml:space="preserve">
          <source>Note that we didn&amp;rsquo;t care to specify a &lt;code&gt;reusable-frames&lt;/code&gt; action alist entry in our specification of &lt;code&gt;display-buffer-alist&lt;/code&gt;. &lt;code&gt;display-buffer&lt;/code&gt; always takes the first one it finds&amp;mdash;in our case the one specified by &lt;code&gt;display-buffer-base-action&lt;/code&gt;. If we wanted to use a different specification, for example, to exclude iconified frames showing</source>
          <target state="translated">Tenga en cuenta que no nos import&amp;oacute; especificar una entrada de lista de acciones de &lt;code&gt;reusable-frames&lt;/code&gt; en nuestra especificaci&amp;oacute;n de &lt;code&gt;display-buffer-alist&lt;/code&gt; . &lt;code&gt;display-buffer&lt;/code&gt; siempre toma el primero que encuentra, en nuestro caso el especificado por &lt;code&gt;display-buffer-base-action&lt;/code&gt; . Si quisi&amp;eacute;ramos utilizar una especificaci&amp;oacute;n diferente, por ejemplo, para excluir los marcos iconificados que muestran</target>
        </trans-unit>
        <trans-unit id="695d219c90e242ce9ab38b41dd5442dca50f0c95" translate="yes" xml:space="preserve">
          <source>Note that we do not quote the &lt;code&gt;lambda&lt;/code&gt; form.</source>
          <target state="translated">Tenga en cuenta que no citamos la forma &lt;code&gt;lambda&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="27279efa933392e2845851f38f8ebb1579dfb1cb" translate="yes" xml:space="preserve">
          <source>Note that we never modify the data in each node, which is fixed when the ewoc is created to be either &lt;code&gt;nil&lt;/code&gt; or an index into the vector &lt;code&gt;colorcomp-data&lt;/code&gt;, the actual color components.</source>
          <target state="translated">Tenga en cuenta que nunca modificamos los datos en cada nodo, que se fija cuando se crea el ewoc para que sea &lt;code&gt;nil&lt;/code&gt; o un &amp;iacute;ndice en el vector &lt;code&gt;colorcomp-data&lt;/code&gt; , los componentes de color reales.</target>
        </trans-unit>
        <trans-unit id="e11f9f08db090622f4787f9d406b1aa205d88060" translate="yes" xml:space="preserve">
          <source>Note that when a frame is not large enough to accommodate a change of any of the parameters listed above, Emacs may try to enlarge the frame even if this option is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que cuando un marco no es lo suficientemente grande para adaptarse a un cambio de cualquiera de los par&amp;aacute;metros enumerados anteriormente, Emacs puede intentar ampliar el marco incluso si esta opci&amp;oacute;n no es &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="93e5de1e980991d9fdbf3fb24041ced46918aafe" translate="yes" xml:space="preserve">
          <source>Note that when a frame&amp;rsquo;s pixel size is not a multiple of its character size, at least one window may get resized pixelwise even if this option is &lt;code&gt;nil&lt;/code&gt;. The default value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta que cuando el tama&amp;ntilde;o de p&amp;iacute;xel de un marco no es un m&amp;uacute;ltiplo del tama&amp;ntilde;o de su car&amp;aacute;cter, al menos una ventana puede cambiar de tama&amp;ntilde;o en p&amp;iacute;xeles incluso si esta opci&amp;oacute;n es &lt;code&gt;nil&lt;/code&gt; . El valor predeterminado es &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0488512718b2693ed44b51fbae789514d6f0a966" translate="yes" xml:space="preserve">
          <source>Note that when evaluating under lexical binding the result is a closure object (see &lt;a href=&quot;closures#Closures&quot;&gt;Closures&lt;/a&gt;).</source>
          <target state="translated">Tenga en cuenta que cuando se eval&amp;uacute;a bajo enlace l&amp;eacute;xico, el resultado es un objeto de cierre (consulte &lt;a href=&quot;closures#Closures&quot;&gt;Cierres&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="2b2dcc95bd27b61f320e52671bde8d565c5541e0" translate="yes" xml:space="preserve">
          <source>Note that window change functions provide no information about which windows have been deleted since the last time they were run. If necessary, applications should remember any window showing a specific buffer in a local variable of that buffer and update it in a function run by the default values of any of the hooks that are run when a window buffer change was detected.</source>
          <target state="translated">Tenga en cuenta que las funciones de cambio de ventana no proporcionan información sobre qué ventanas se han eliminado desde la última vez que se ejecutaron.Si es necesario,las aplicaciones deberían recordar cualquier ventana que muestre un buffer específico en una variable local de ese buffer y actualizarla en una función ejecutada por los valores por defecto de cualquiera de los ganchos que se ejecuten cuando se detecte un cambio de buffer de ventana.</target>
        </trans-unit>
        <trans-unit id="b1db01bbe0bf3270ff266bbfef6dae125e24f80a" translate="yes" xml:space="preserve">
          <source>Note that with multiple monitors, the origin of the display does not necessarily coincide with the top-left corner of the entire usable display area of the terminal. Hence the absolute position of a frame can be negative in such an environment even when that frame is completely visible.</source>
          <target state="translated">Tenga en cuenta que con monitores múltiples,el origen de la pantalla no coincide necesariamente con la esquina superior izquierda de toda el área de pantalla utilizable de la terminal.Por lo tanto,la posición absoluta de un cuadro puede ser negativa en un entorno así,incluso cuando ese cuadro es completamente visible.</target>
        </trans-unit>
        <trans-unit id="c81d4cca0834a0ff81c0a8aba5344f507503f4ac" translate="yes" xml:space="preserve">
          <source>Note that you cannot specify a hash table whose initial contents include objects that have no read syntax, such as buffers and frames. Such objects may be added to the hash table after it is created.</source>
          <target state="translated">Tenga en cuenta que no puede especificar una tabla hash cuyo contenido inicial incluya objetos que no tengan sintaxis de lectura,como buffers y marcos.Tales objetos pueden ser añadidos a la tabla hash después de su creación.</target>
        </trans-unit>
        <trans-unit id="df97661ee2013a21758ac0f65cab67196b09b407" translate="yes" xml:space="preserve">
          <source>Note that you could implement an equivalent test by using &lt;code&gt;intern&lt;/code&gt; to get an &lt;code&gt;emacs_value&lt;/code&gt; representing &lt;code&gt;nil&lt;/code&gt;, then use &lt;code&gt;eq&lt;/code&gt;, described above, to test for equality. But using this function is more convenient.</source>
          <target state="translated">Tenga en cuenta que puede implementar una prueba equivalente usando &lt;code&gt;intern&lt;/code&gt; para obtener un &lt;code&gt;emacs_value&lt;/code&gt; que represente &lt;code&gt;nil&lt;/code&gt; , luego use &lt;code&gt;eq&lt;/code&gt; , descrito anteriormente, para probar la igualdad. Pero usar esta funci&amp;oacute;n es m&amp;aacute;s conveniente.</target>
        </trans-unit>
        <trans-unit id="8085c903afbf6def946357e85a074fc45d960104" translate="yes" xml:space="preserve">
          <source>Note that you may reenter the same Edebug level several times if, for example, an instrumented function is called several times from one command.</source>
          <target state="translated">Tenga en cuenta que puede volver a entrar en el mismo nivel de Edebug varias veces si,por ejemplo,se llama varias veces a una función instrumentada desde un comando.</target>
        </trans-unit>
        <trans-unit id="9728aac91e0d5d7d3233a093047d1e3cf2f7b5fb" translate="yes" xml:space="preserve">
          <source>Note that, unlike in message-based OO languages, such as C</source>
          <target state="translated">Nótese que,a diferencia de los lenguajes OO basados en mensajes,como el C</target>
        </trans-unit>
        <trans-unit id="906465653e9352a3acf19ee4e06fa8005cc8906b" translate="yes" xml:space="preserve">
          <source>Note the call to &lt;code&gt;maybe_quit&lt;/code&gt; inside the loop: this function checks whether the user pressed</source>
          <target state="translated">Tenga en cuenta la llamada a &lt;code&gt;maybe_quit&lt;/code&gt; dentro del bucle: esta funci&amp;oacute;n verifica si el usuario presion&amp;oacute;</target>
        </trans-unit>
        <trans-unit id="18449a6bba4a3bf6dccfca75e5c0114afa84bfeb" translate="yes" xml:space="preserve">
          <source>Note the symbols which the bindings are made for; these appear inside square brackets, in the key sequence being defined. In some cases, this symbol is the same as the command name; sometimes it is different. These symbols are treated as function keys, but they are not real function keys on the keyboard. They do not affect the functioning of the menu itself, but they are echoed in the echo area when the user selects from the menu, and they appear in the output of &lt;code&gt;where-is&lt;/code&gt; and &lt;code&gt;apropos&lt;/code&gt;.</source>
          <target state="translated">Tenga en cuenta los s&amp;iacute;mbolos para los que est&amp;aacute;n hechas las encuadernaciones; estos aparecen entre corchetes, en la secuencia de teclas que se define. En algunos casos, este s&amp;iacute;mbolo es el mismo que el nombre del comando; a veces es diferente. Estos s&amp;iacute;mbolos se tratan como teclas de funci&amp;oacute;n, pero no son teclas de funci&amp;oacute;n reales del teclado. No afectan el funcionamiento del men&amp;uacute; en s&amp;iacute;, pero se repiten en el &amp;aacute;rea de eco cuando el usuario selecciona desde el men&amp;uacute;, y aparecen en la salida de &lt;code&gt;where-is&lt;/code&gt; y a &lt;code&gt;apropos&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="090bff393075f6b58e2d0efa3893f085f97dd09d" translate="yes" xml:space="preserve">
          <source>Note: If the replacement is a string, it will be placed in a temporary buffer so that &lt;code&gt;replace-buffer-contents&lt;/code&gt; can operate on it. Therefore, if you already have the replacement in a buffer, it makes no sense to convert it to a string using &lt;code&gt;buffer-substring&lt;/code&gt; or similar.</source>
          <target state="translated">Nota: Si el reemplazo es una cadena, se colocar&amp;aacute; en un b&amp;uacute;fer temporal para que &lt;code&gt;replace-buffer-contents&lt;/code&gt; pueda operar en &amp;eacute;l. Por lo tanto, si ya tiene el reemplazo en un b&amp;uacute;fer, no tiene sentido convertirlo en una cadena usando &lt;code&gt;buffer-substring&lt;/code&gt; o similar.</target>
        </trans-unit>
        <trans-unit id="15b8243f03b0e985c78ff44d43c977a16ec664d5" translate="yes" xml:space="preserve">
          <source>Note: The interactive spec of &lt;var&gt;function&lt;/var&gt; will apply to the combined function and should hence obey the calling convention of the combined function rather than that of &lt;var&gt;function&lt;/var&gt;. In many cases, it makes no difference since they are identical, but it does matter for &lt;code&gt;:around&lt;/code&gt;, &lt;code&gt;:filter-args&lt;/code&gt;, and &lt;code&gt;:filter-return&lt;/code&gt;, where &lt;var&gt;function&lt;/var&gt; receives different arguments than the original function stored in &lt;var&gt;place&lt;/var&gt;.</source>
          <target state="translated">Nota: La especificaci&amp;oacute;n interactiva de la &lt;var&gt;function&lt;/var&gt; se aplicar&amp;aacute; a la funci&amp;oacute;n combinada y, por lo tanto, debe obedecer la convenci&amp;oacute;n de llamada de la funci&amp;oacute;n combinada en lugar de la de la &lt;var&gt;function&lt;/var&gt; . En muchos casos, no hace ninguna diferencia, ya que son id&amp;eacute;nticos, pero importa de &lt;code&gt;:around&lt;/code&gt; , &lt;code&gt;:filter-args&lt;/code&gt; , y &lt;code&gt;:filter-return&lt;/code&gt; , donde &lt;var&gt;function&lt;/var&gt; recibe diferentes argumentos de la funci&amp;oacute;n original almacenado en &lt;var&gt;place&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="086829d75bac2c9e339b5bb59f87867c9bac04d0" translate="yes" xml:space="preserve">
          <source>Note: face remapping is non-recursive. If &lt;var&gt;remapping&lt;/var&gt; references the same face name &lt;var&gt;face&lt;/var&gt;, either directly or via the &lt;code&gt;:inherit&lt;/code&gt; attribute of some other face in &lt;var&gt;remapping&lt;/var&gt;, that reference uses the normal definition of &lt;var&gt;face&lt;/var&gt;. For instance, if the &lt;code&gt;mode-line&lt;/code&gt; face is remapped using this entry in &lt;code&gt;face-remapping-alist&lt;/code&gt;:</source>
          <target state="translated">Nota: la reasignaci&amp;oacute;n de rostros no es recursiva. Si la &lt;var&gt;remapping&lt;/var&gt; referencia al mismo nombre de &lt;var&gt;face&lt;/var&gt; , ya sea directamente o mediante el atributo &lt;code&gt;:inherit&lt;/code&gt; de alguna otra cara en la &lt;var&gt;remapping&lt;/var&gt; , esa referencia utiliza la definici&amp;oacute;n normal de &lt;var&gt;face&lt;/var&gt; . Por ejemplo, si la cara de la &lt;code&gt;mode-line&lt;/code&gt; se reasigna utilizando esta entrada en &lt;code&gt;face-remapping-alist&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="48c1f7cc7802f63e35b4a25aa793c719285304f9" translate="yes" xml:space="preserve">
          <source>Note: the properties &lt;code&gt;composition&lt;/code&gt;, &lt;code&gt;display&lt;/code&gt;, &lt;code&gt;invisible&lt;/code&gt; and &lt;code&gt;intangible&lt;/code&gt; can also cause point to move to an acceptable place, after each Emacs command. See &lt;a href=&quot;adjusting-point#Adjusting-Point&quot;&gt;Adjusting Point&lt;/a&gt;.</source>
          <target state="translated">Nota: las propiedades &lt;code&gt;composition&lt;/code&gt; , &lt;code&gt;display&lt;/code&gt; , &lt;code&gt;invisible&lt;/code&gt; e &lt;code&gt;intangible&lt;/code&gt; tambi&amp;eacute;n pueden hacer que el punto se mueva a un lugar aceptable, despu&amp;eacute;s de cada comando de Emacs. Consulte &lt;a href=&quot;adjusting-point#Adjusting-Point&quot;&gt;Punto de ajuste&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e6cd208317b8407557bf5e9e8a5213d6396ae797" translate="yes" xml:space="preserve">
          <source>Notice how those lexers return the empty string when in front of parentheses. This is because SMIE automatically takes care of the parentheses defined in the syntax table. More specifically if the lexer returns &lt;code&gt;nil&lt;/code&gt; or an empty string, SMIE tries to handle the corresponding text as a sexp according to syntax tables.</source>
          <target state="translated">Observe c&amp;oacute;mo esos lexers devuelven la cadena vac&amp;iacute;a cuando est&amp;aacute;n delante de par&amp;eacute;ntesis. Esto se debe a que SMIE se encarga autom&amp;aacute;ticamente de los par&amp;eacute;ntesis definidos en la tabla de sintaxis. M&amp;aacute;s espec&amp;iacute;ficamente, si el lexer devuelve &lt;code&gt;nil&lt;/code&gt; o una cadena vac&amp;iacute;a, SMIE intenta manejar el texto correspondiente como sexp de acuerdo con las tablas de sintaxis.</target>
        </trans-unit>
        <trans-unit id="1e7899e05f54c7cf4e3b193d5da99af8fc028b7c" translate="yes" xml:space="preserve">
          <source>Notice that all functions are allowed to overwrite the match data unless they&amp;rsquo;re explicitly documented not to do so. A consequence is that functions that are run implicitly in the background (see &lt;a href=&quot;timers#Timers&quot;&gt;Timers&lt;/a&gt;, and &lt;a href=&quot;idle-timers#Idle-Timers&quot;&gt;Idle Timers&lt;/a&gt;) should likely save and restore the match data explicitly.</source>
          <target state="translated">Tenga en cuenta que todas las funciones pueden sobrescribir los datos de coincidencia a menos que est&amp;eacute;n documentadas expl&amp;iacute;citamente para no hacerlo. Una consecuencia es que las funciones que se ejecutan impl&amp;iacute;citamente en segundo plano (consulte &lt;a href=&quot;timers#Timers&quot;&gt;Temporizadores&lt;/a&gt; y &lt;a href=&quot;idle-timers#Idle-Timers&quot;&gt;temporizadores inactivos&lt;/a&gt; ) probablemente deber&amp;iacute;an guardar y restaurar los datos de coincidencia expl&amp;iacute;citamente.</target>
        </trans-unit>
        <trans-unit id="7bf3df555a929d338861ed3b64bf8199a25afe42" translate="yes" xml:space="preserve">
          <source>Notification severity level, one of &lt;code&gt;info&lt;/code&gt;, &lt;code&gt;warning&lt;/code&gt;, or &lt;code&gt;error&lt;/code&gt;. If given, the value determines the icon displayed to the left of the notification title, but only if the &lt;code&gt;:title&lt;/code&gt; parameter (see below) is also specified and is a string.</source>
          <target state="translated">Nivel de gravedad de la notificaci&amp;oacute;n, uno de &lt;code&gt;info&lt;/code&gt; rmaci&amp;oacute;n , &lt;code&gt;warning&lt;/code&gt; o &lt;code&gt;error&lt;/code&gt; . Si se proporciona, el valor determina el icono que se muestra a la izquierda del t&amp;iacute;tulo de la notificaci&amp;oacute;n, pero solo si el par&amp;aacute;metro &lt;code&gt;:title&lt;/code&gt; (ver m&amp;aacute;s abajo) tambi&amp;eacute;n se especifica y es una cadena.</target>
        </trans-unit>
        <trans-unit id="864d97d356a80a5cd27ad60eb5336174f9507562" translate="yes" xml:space="preserve">
          <source>Notifications on File Changes</source>
          <target state="translated">Notificaciones sobre cambios en los archivos</target>
        </trans-unit>
        <trans-unit id="e3768fb5cf0372c526b5e173f1befdd62061f9c9" translate="yes" xml:space="preserve">
          <source>Notify &lt;var&gt;cond&lt;/var&gt;. The mutex with &lt;var&gt;cond&lt;/var&gt; must be held before calling this. Ordinarily a single waiting thread is woken by &lt;code&gt;condition-notify&lt;/code&gt;; but if &lt;var&gt;all&lt;/var&gt; is not &lt;code&gt;nil&lt;/code&gt;, then all threads waiting on &lt;var&gt;cond&lt;/var&gt; are notified.</source>
          <target state="translated">Notificar &lt;var&gt;cond&lt;/var&gt; . El mutex con &lt;var&gt;cond&lt;/var&gt; debe mantenerse antes de llamar a esto. Normalmente, un solo hilo en espera se despierta mediante &lt;code&gt;condition-notify&lt;/code&gt; ; pero si no &lt;var&gt;all&lt;/var&gt; es &lt;code&gt;nil&lt;/code&gt; , se notifican todos los subprocesos que esperan en &lt;var&gt;cond&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="f36fcd20d98f1c2ef6f745daf470b6fc6dd07587" translate="yes" xml:space="preserve">
          <source>Novice Emacs Lisp programmers often try to use the mark for the wrong purposes. The mark saves a location for the user&amp;rsquo;s convenience. An editing command should not alter the mark unless altering the mark is part of the user-level functionality of the command. (And, in that case, this effect should be documented.) To remember a location for internal use in the Lisp program, store it in a Lisp variable. For example:</source>
          <target state="translated">Los programadores novatos de Emacs Lisp a menudo intentan usar la marca para prop&amp;oacute;sitos incorrectos. La marca guarda una ubicaci&amp;oacute;n para comodidad del usuario. Un comando de edici&amp;oacute;n no debe alterar la marca a menos que alterar la marca sea parte de la funcionalidad del comando a nivel de usuario. (Y, en ese caso, este efecto debe documentarse.) Para recordar una ubicaci&amp;oacute;n para uso interno en el programa Lisp, gu&amp;aacute;rdelo en una variable Lisp. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="93fe86956bd461c4f9006b03bcbecd888324bf7d" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s change the argument given to &lt;code&gt;catch2&lt;/code&gt;:</source>
          <target state="translated">Ahora cambiemos el argumento dado a &lt;code&gt;catch2&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7551c107ba5514ae35edf328fbdb7f4e01b52801" translate="yes" xml:space="preserve">
          <source>Now that &lt;code&gt;app&lt;/code&gt; has matched, all &lt;code&gt;and&lt;/code&gt; sub-patterns have matched, and so &lt;code&gt;and&lt;/code&gt; matches. Likewise, once &lt;code&gt;and&lt;/code&gt; has matched, &lt;code&gt;or&lt;/code&gt; matches and does not proceed to try sub-pattern &lt;code&gt;let&lt;/code&gt; (line 8).</source>
          <target state="translated">Ahora que &lt;code&gt;app&lt;/code&gt; ha igualado, todo &lt;code&gt;and&lt;/code&gt; sub-patrones han emparejado, y as&amp;iacute; &lt;code&gt;and&lt;/code&gt; partidos. Del mismo modo, una vez &lt;code&gt;and&lt;/code&gt; ha coincidido, &lt;code&gt;or&lt;/code&gt; coincide y no procede a probar el subpatr&amp;oacute;n &lt;code&gt;let&lt;/code&gt; (l&amp;iacute;nea 8).</target>
        </trans-unit>
        <trans-unit id="8bf81c47d3466cac8f8f1e05225e708ff47181f9" translate="yes" xml:space="preserve">
          <source>Now we can put the output in the proper order by reversing the list:</source>
          <target state="translated">Ahora podemos poner la salida en el orden correcto invirtiendo la lista:</target>
        </trans-unit>
        <trans-unit id="5d2c4f3b6b617ec480f6e2553990ecdaa4eb658c" translate="yes" xml:space="preserve">
          <source>Now we create a hard link, by calling &lt;code&gt;add-name-to-file&lt;/code&gt;, then list the files again. This shows two names for one file,</source>
          <target state="translated">Ahora creamos un enlace f&amp;iacute;sico, llamando a &lt;code&gt;add-name-to-file&lt;/code&gt; , luego listamos los archivos nuevamente. Esto muestra dos nombres para un archivo,</target>
        </trans-unit>
        <trans-unit id="07f78a209cc321ded7c29827738886e3593f46f8" translate="yes" xml:space="preserve">
          <source>Now we read using the stream thus constructed:</source>
          <target state="translated">Ahora leemos usando la corriente así construida:</target>
        </trans-unit>
        <trans-unit id="429cf392dcfad2eb5b3fb43671b8d50dc62f2be6" translate="yes" xml:space="preserve">
          <source>Now we show a use of a marker as an output stream. Initially, the marker is in buffer &lt;code&gt;foo&lt;/code&gt;, between the &amp;lsquo;</source>
          <target state="translated">Ahora mostramos el uso de un marcador como flujo de salida. Inicialmente, el marcador est&amp;aacute; en el b&amp;uacute;fer &lt;code&gt;foo&lt;/code&gt; , entre el '</target>
        </trans-unit>
        <trans-unit id="6fb2e1a0ad356df5d65425e68c286f81f8d8b450" translate="yes" xml:space="preserve">
          <source>Now you can go to the beginning of the defun and type</source>
          <target state="translated">Ahora puedes ir al principio de la defuncion y escribir</target>
        </trans-unit>
        <trans-unit id="e23718dfb830dd77b88fcfc0d1b3bea6a5e6fca3" translate="yes" xml:space="preserve">
          <source>Now, when enlarging a window vertically, Emacs tries to obtain the corresponding space from its lower sibling, provided such a window exists. In our scenario, enlarging &lt;var&gt;W4&lt;/var&gt; will steal space from &lt;var&gt;W3&lt;/var&gt;.</source>
          <target state="translated">Ahora, al ampliar una ventana verticalmente, Emacs intenta obtener el espacio correspondiente de su hermano menor, siempre que exista dicha ventana. En nuestro escenario, la ampliaci&amp;oacute;n de &lt;var&gt;W4&lt;/var&gt; le robar&amp;aacute; espacio a &lt;var&gt;W3&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="9e06af5545a3e4354b7d4ee0852c0eed7a91cb67" translate="yes" xml:space="preserve">
          <source>Number of seconds to pause when a breakpoint is reached and the execution mode is trace or continue. See &lt;a href=&quot;edebug-execution-modes#Edebug-Execution-Modes&quot;&gt;Edebug Execution Modes&lt;/a&gt;.</source>
          <target state="translated">N&amp;uacute;mero de segundos para pausar cuando se alcanza un punto de interrupci&amp;oacute;n y el modo de ejecuci&amp;oacute;n es rastrear o continuar. Consulte &lt;a href=&quot;edebug-execution-modes#Edebug-Execution-Modes&quot;&gt;Modos de ejecuci&amp;oacute;n de Edebug&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="322456515cb687e293b524d7ce7beddddcb9bc80" translate="yes" xml:space="preserve">
          <source>Number of spaces</source>
          <target state="translated">Número de espacios</target>
        </trans-unit>
        <trans-unit id="7e53821f70ae16079c4a6a64c52a91fae645bc5f" translate="yes" xml:space="preserve">
          <source>Numbers</source>
          <target state="translated">Numbers</target>
        </trans-unit>
        <trans-unit id="7e3c0a7716da4e48fa5db56b8609023d7442bc77" translate="yes" xml:space="preserve">
          <source>Numbers and arithmetic functions.</source>
          <target state="translated">Números y funciones aritméticas.</target>
        </trans-unit>
        <trans-unit id="f004d111f9eecf4e07d15edb9e80b8c6a0bb7fb8" translate="yes" xml:space="preserve">
          <source>Numbers controlling how to compose characters.</source>
          <target state="translated">Números que controlan cómo componer los personajes.</target>
        </trans-unit>
        <trans-unit id="4632fc07fc740627ec8979b8ae726d58ce6441a0" translate="yes" xml:space="preserve">
          <source>Numbers with fractional parts and with a large range.</source>
          <target state="translated">Números con partes fraccionadas y con un gran alcance.</target>
        </trans-unit>
        <trans-unit id="238f75d73961cd8ec3a93e41f8eca572c815790b" translate="yes" xml:space="preserve">
          <source>Numbers without fractional parts.</source>
          <target state="translated">Números sin partes fraccionadas.</target>
        </trans-unit>
        <trans-unit id="30a62380404b3b267a5c4e21b5e111455d09031e" translate="yes" xml:space="preserve">
          <source>Numeric</source>
          <target state="translated">Numeric</target>
        </trans-unit>
        <trans-unit id="f72c4497b8297399ea538316ed693eb0b0f69dbb" translate="yes" xml:space="preserve">
          <source>Numeric Conversions</source>
          <target state="translated">Conversiones numéricas</target>
        </trans-unit>
        <trans-unit id="08a914cde05039694ef0194d9ee79ff9a79dde33" translate="yes" xml:space="preserve">
          <source>O</source>
          <target state="translated">O</target>
        </trans-unit>
        <trans-unit id="a7947cd1693d4f1df0716adaabddf52493ff1007" translate="yes" xml:space="preserve">
          <source>O P</source>
          <target state="translated">O P</target>
        </trans-unit>
        <trans-unit id="c363dc3457ef24cf6ba8971bbc948dded316392b" translate="yes" xml:space="preserve">
          <source>Obarrays are also a kind of hash table, but they are a different type of object and are used only for recording interned symbols (see &lt;a href=&quot;creating-symbols#Creating-Symbols&quot;&gt;Creating Symbols&lt;/a&gt;).</source>
          <target state="translated">Los obarrays tambi&amp;eacute;n son una especie de tabla hash, pero son un tipo diferente de objeto y se usan solo para registrar s&amp;iacute;mbolos internos (ver &lt;a href=&quot;creating-symbols#Creating-Symbols&quot;&gt;Creaci&amp;oacute;n de s&amp;iacute;mbolos&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="6f56ee4a102e69c064a8440479a96623086d8758" translate="yes" xml:space="preserve">
          <source>Object Internals</source>
          <target state="translated">Internos de los objetos</target>
        </trans-unit>
        <trans-unit id="9101d7a347d0a3885fc114e1cef91162863e5343" translate="yes" xml:space="preserve">
          <source>Objects holding information about types.</source>
          <target state="translated">Objetos que contienen información sobre los tipos.</target>
        </trans-unit>
        <trans-unit id="d2b0ba186e391135f71f9fbac7110335d650cacf" translate="yes" xml:space="preserve">
          <source>Objects that have no read syntax are presented like this (see &lt;a href=&quot;printed-representation#Printed-Representation&quot;&gt;Printed Representation&lt;/a&gt;).</source>
          <target state="translated">Los objetos que no tienen sintaxis de lectura se presentan as&amp;iacute; (consulte &lt;a href=&quot;printed-representation#Printed-Representation&quot;&gt;Representaci&amp;oacute;n impresa&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="d7717e27b11c625514b5d6b2df3dc3a2a3bbea53" translate="yes" xml:space="preserve">
          <source>Obtain rudimentary coverage testing and frequency counts.</source>
          <target state="translated">Obtener pruebas de cobertura rudimentarias y recuentos de frecuencia.</target>
        </trans-unit>
        <trans-unit id="523942562b4a55d93a983d95b45b7177c8e4772d" translate="yes" xml:space="preserve">
          <source>Obtaining random integers, predictable or not.</source>
          <target state="translated">Obtención de números enteros aleatorios,predecibles o no.</target>
        </trans-unit>
        <trans-unit id="46a01ce0f03ec80a793aa30a264989482df496b0" translate="yes" xml:space="preserve">
          <source>Obviously, this does not actually modify &lt;code&gt;previous-line&lt;/code&gt;. For that the old advice needed:</source>
          <target state="translated">Obviamente, esto en realidad no modifica &lt;code&gt;previous-line&lt;/code&gt; . Para eso necesitaba el viejo consejo:</target>
        </trans-unit>
        <trans-unit id="264277b0376bfa4b86c520e9ec23072a05a7fe4d" translate="yes" xml:space="preserve">
          <source>Occasionally problems result from the fact that a macro call is expanded each time it is evaluated in an interpreted function, but is expanded only once (during compilation) for a compiled function. If the macro definition has side effects, they will work differently depending on how many times the macro is expanded.</source>
          <target state="translated">Ocasionalmente los problemas resultan del hecho de que una llamada macro se expande cada vez que se evalúa en una función interpretada,pero se expande sólo una vez (durante la compilación)para una función compilada.Si la definición de macro tiene efectos secundarios,éstos funcionarán de manera diferente dependiendo de cuántas veces se expanda la macro.</target>
        </trans-unit>
        <trans-unit id="bce973a751cd4a03300fce0010a6712f601f9f80" translate="yes" xml:space="preserve">
          <source>Occasionally you will want to test explicitly whether a library has already been loaded. If the library uses &lt;code&gt;provide&lt;/code&gt; to provide a named feature, you can use &lt;code&gt;featurep&lt;/code&gt; earlier in the file to test whether the &lt;code&gt;provide&lt;/code&gt; call has been executed before (see &lt;a href=&quot;named-features#Named-Features&quot;&gt;Named Features&lt;/a&gt;). Alternatively, you could use something like this:</source>
          <target state="translated">Ocasionalmente, querr&amp;aacute; probar expl&amp;iacute;citamente si ya se ha cargado una biblioteca. Si la biblioteca usa &lt;code&gt;provide&lt;/code&gt; para proporcionar una funci&amp;oacute;n con nombre, puede usar &lt;code&gt;featurep&lt;/code&gt; anteriormente en el archivo para probar si la llamada de &lt;code&gt;provide&lt;/code&gt; se ha ejecutado antes (consulte &lt;a href=&quot;named-features#Named-Features&quot;&gt;Funciones con nombre&lt;/a&gt; ). Alternativamente, puede usar algo como esto:</target>
        </trans-unit>
        <trans-unit id="3bce6877b2fad79bb26a891e5eaabc5fa131f26b" translate="yes" xml:space="preserve">
          <source>Occasionally, Emacs needs to hold and manipulate encoded text or binary non-text data in its buffers or strings. For example, when Emacs visits a file, it first reads the file&amp;rsquo;s text verbatim into a buffer, and only then converts it to the internal representation. Before the conversion, the buffer holds encoded text.</source>
          <target state="translated">Ocasionalmente, Emacs necesita mantener y manipular texto codificado o datos binarios que no son de texto en sus b&amp;uacute;feres o cadenas. Por ejemplo, cuando Emacs visita un archivo, primero lee el texto del archivo palabra por palabra en un b&amp;uacute;fer y solo entonces lo convierte a la representaci&amp;oacute;n interna. Antes de la conversi&amp;oacute;n, el b&amp;uacute;fer contiene texto codificado.</target>
        </trans-unit>
        <trans-unit id="3dbe249e6f95e11f5e11808a2753212c83d62b34" translate="yes" xml:space="preserve">
          <source>Occasionally, such &lt;em&gt;implied frame resizing&lt;/em&gt; may be unwanted, for example, when a frame has been maximized or made full-screen (where it&amp;rsquo;s turned off by default). In general, users can disable implied resizing with the following option:</source>
          <target state="translated">En ocasiones, este &lt;em&gt;cambio de tama&amp;ntilde;o de fotograma impl&amp;iacute;cito&lt;/em&gt; puede no ser deseado, por ejemplo, cuando un fotograma se ha maximizado o se ha convertido en pantalla completa (donde est&amp;aacute; desactivado de forma predeterminada). En general, los usuarios pueden deshabilitar el cambio de tama&amp;ntilde;o impl&amp;iacute;cito con la siguiente opci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="0aff50bf865a5c17280fbf067141c1f7c36c3a36" translate="yes" xml:space="preserve">
          <source>Occasionally, you may want to reference a variable which is only determined at run time. In that case, you cannot specify the variable name in the text of the program. You can use the &lt;code&gt;symbol-value&lt;/code&gt; function to extract the value.</source>
          <target state="translated">En ocasiones, es posible que desee hacer referencia a una variable que solo se determina en tiempo de ejecuci&amp;oacute;n. En ese caso, no puede especificar el nombre de la variable en el texto del programa. Puede utilizar la funci&amp;oacute;n &lt;code&gt;symbol-value&lt;/code&gt; para extraer el valor.</target>
        </trans-unit>
        <trans-unit id="22fc935449693a1e814188a46a216288f35c0512" translate="yes" xml:space="preserve">
          <source>Of course, if the actual value of the option fits this alternative, it will appear showing the actual value, not &lt;var&gt;default&lt;/var&gt;.</source>
          <target state="translated">Por supuesto, si el valor real de la opci&amp;oacute;n se ajusta a esta alternativa, aparecer&amp;aacute; mostrando el valor real, no el &lt;var&gt;default&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="15696db648937c4ccbe88be9cf5f24c7996a1367" translate="yes" xml:space="preserve">
          <source>Of these usual keymaps, the highest-precedence one is specified by the &lt;code&gt;keymap&lt;/code&gt; text or overlay property at point, if any. (For a mouse input event, Emacs uses the event position instead of point; see &lt;a href=&quot;searching-keymaps#Searching-Keymaps&quot;&gt;Searching Keymaps&lt;/a&gt;.)</source>
          <target state="translated">De estos mapas de teclas habituales, el de m&amp;aacute;s alta prioridad es especificado por el &lt;code&gt;keymap&lt;/code&gt; de texto o la propiedad de superposici&amp;oacute;n en el punto, en su caso. (Para un evento de entrada del mouse, Emacs usa la posici&amp;oacute;n del evento en lugar del punto; consulte &lt;a href=&quot;searching-keymaps#Searching-Keymaps&quot;&gt;B&amp;uacute;squeda de mapas de teclas&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="4dc8a5d2b3bac37c9f0883d213f98c63e2f5757f" translate="yes" xml:space="preserve">
          <source>Often &lt;code&gt;window-size-fixed&lt;/code&gt; is overly aggressive because it inhibits any attempt to explicitly resize or split an affected window as well. This may even happen after the window has been resized implicitly, for example, when deleting an adjacent window or resizing the window&amp;rsquo;s frame. The following function tries hard to never disallow resizing such a window explicitly:</source>
          <target state="translated">A menudo &lt;code&gt;window-size-fixed&lt;/code&gt; es demasiado agresivo porque inhibe cualquier intento de cambiar el tama&amp;ntilde;o o dividir expl&amp;iacute;citamente una ventana afectada tambi&amp;eacute;n. Esto puede suceder incluso despu&amp;eacute;s de que se haya cambiado el tama&amp;ntilde;o de la ventana impl&amp;iacute;citamente, por ejemplo, al eliminar una ventana adyacente o al cambiar el tama&amp;ntilde;o del marco de la ventana. La siguiente funci&amp;oacute;n se esfuerza por no permitir nunca cambiar el tama&amp;ntilde;o de dicha ventana expl&amp;iacute;citamente:</target>
        </trans-unit>
        <trans-unit id="eee3f476e8d88bba8df49970967c0f8d91d77b1e" translate="yes" xml:space="preserve">
          <source>Often we want to execute the last clause whenever none of the previous clauses was successful. To do this, we use &lt;code&gt;t&lt;/code&gt; as the &lt;var&gt;condition&lt;/var&gt; of the last clause, like this: &lt;code&gt;(t
&lt;var&gt;body-forms&lt;/var&gt;)&lt;/code&gt;. The form &lt;code&gt;t&lt;/code&gt; evaluates to &lt;code&gt;t&lt;/code&gt;, which is never &lt;code&gt;nil&lt;/code&gt;, so this clause never fails, provided the &lt;code&gt;cond&lt;/code&gt; gets to it at all. For example:</source>
          <target state="translated">A menudo queremos ejecutar la &amp;uacute;ltima cl&amp;aacute;usula siempre que ninguna de las cl&amp;aacute;usulas anteriores haya tenido &amp;eacute;xito. Para hacer esto, usamos &lt;code&gt;t&lt;/code&gt; como la &lt;var&gt;condition&lt;/var&gt; de la &amp;uacute;ltima cl&amp;aacute;usula, as&amp;iacute;: &lt;code&gt;(t &lt;var&gt;body-forms&lt;/var&gt;)&lt;/code&gt; . La forma &lt;code&gt;t&lt;/code&gt; se eval&amp;uacute;a en &lt;code&gt;t&lt;/code&gt; , que nunca es &lt;code&gt;nil&lt;/code&gt; , por lo que esta cl&amp;aacute;usula nunca falla, siempre que la &lt;code&gt;cond&lt;/code&gt; llegue a ella. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="ab20aa539406f6dcc74005792b8dba230e5c4baa" translate="yes" xml:space="preserve">
          <source>Older implementations of &lt;code&gt;display-buffer&lt;/code&gt; frequently caused users and applications to fight over the settings of user options like &lt;code&gt;pop-up-frames&lt;/code&gt; and &lt;code&gt;pop-up-windows&lt;/code&gt; (see &lt;a href=&quot;choosing-window-options#Choosing-Window-Options&quot;&gt;Choosing Window Options&lt;/a&gt;). This was one major reason for redesigning &lt;code&gt;display-buffer&lt;/code&gt;&amp;mdash;to provide a clear framework specifying what users and applications should be allowed to do.</source>
          <target state="translated">Las implementaciones m&amp;aacute;s antiguas de &lt;code&gt;display-buffer&lt;/code&gt; con frecuencia provocaban que los usuarios y las aplicaciones se pelearan por la configuraci&amp;oacute;n de las opciones del usuario, como &lt;code&gt;pop-up-frames&lt;/code&gt; &lt;code&gt;pop-up-windows&lt;/code&gt; y las ventanas emergentes (consulte &lt;a href=&quot;choosing-window-options#Choosing-Window-Options&quot;&gt;Elecci&amp;oacute;n de opciones de ventana&lt;/a&gt; ). Esta fue una de las principales razones para redise&amp;ntilde;ar &lt;code&gt;display-buffer&lt;/code&gt; proporcionar un marco claro que especifique lo que los usuarios y las aplicaciones deber&amp;iacute;an poder hacer.</target>
        </trans-unit>
        <trans-unit id="bde4db5a93db0c668793ff17fa3effb0028c7b23" translate="yes" xml:space="preserve">
          <source>Omitting the argument &lt;var&gt;end&lt;/var&gt; is equivalent to specifying &lt;code&gt;nil&lt;/code&gt;. It follows that &lt;code&gt;(substring &lt;var&gt;string&lt;/var&gt; 0)&lt;/code&gt; returns a copy of all of &lt;var&gt;string&lt;/var&gt;.</source>
          <target state="translated">Omitir el &lt;var&gt;end&lt;/var&gt; del argumento equivale a especificar &lt;code&gt;nil&lt;/code&gt; . De ello se deduce que &lt;code&gt;(substring &lt;var&gt;string&lt;/var&gt; 0)&lt;/code&gt; devuelve una copia de toda la &lt;var&gt;string&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="066afc902473c5cdc45a4d6cd87ac56bcadb3222" translate="yes" xml:space="preserve">
          <source>On GNU and Unix systems, each X display is a separate graphical terminal. When Emacs is started from within the X window system, it uses the X display specified by the &lt;code&gt;DISPLAY&lt;/code&gt; environment variable, or by the &amp;lsquo;</source>
          <target state="translated">En los sistemas GNU y Unix, cada pantalla X es un terminal gr&amp;aacute;fico independiente. Cuando Emacs se inicia desde dentro del sistema de ventanas X, usa la pantalla X especificada por la variable de entorno &lt;code&gt;DISPLAY&lt;/code&gt; , o por el '</target>
        </trans-unit>
        <trans-unit id="091b227d1e7a53734313af3b399630351b76696a" translate="yes" xml:space="preserve">
          <source>On GNU and Unix systems, you can create additional frames on any available terminal, within a single Emacs session, regardless of whether Emacs was started on a text or graphical terminal. Emacs can display on both graphical and text terminals simultaneously. This comes in handy, for instance, when you connect to the same session from several remote locations. See &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;Multiple Terminals&lt;/a&gt;.</source>
          <target state="translated">En sistemas GNU y Unix, puede crear marcos adicionales en cualquier terminal disponible, dentro de una sola sesi&amp;oacute;n de Emacs, sin importar si Emacs se inici&amp;oacute; en un terminal de texto o gr&amp;aacute;fico. Emacs puede mostrarse en terminales gr&amp;aacute;ficos y de texto simult&amp;aacute;neamente. Esto resulta &amp;uacute;til, por ejemplo, cuando se conecta a la misma sesi&amp;oacute;n desde varias ubicaciones remotas. Consulte &lt;a href=&quot;multiple-terminals#Multiple-Terminals&quot;&gt;M&amp;uacute;ltiples terminales&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="86008f191b802986f9373390d1207c585a06279d" translate="yes" xml:space="preserve">
          <source>On GNU and other POSIX-like systems, a string returned by this function always ends in a slash. On MS-DOS it can also end in a colon.</source>
          <target state="translated">En GNU y otros sistemas similares a POSIX,una cadena devuelta por esta función siempre termina en una barra.En MS-DOS también puede terminar en dos puntos.</target>
        </trans-unit>
        <trans-unit id="3ec76dde782f694fa2ff646fa44724ed20f56abf" translate="yes" xml:space="preserve">
          <source>On GNU and other POSIX-like systems, this simply returns &lt;var&gt;filename&lt;/var&gt;. On other operating systems, it may enforce system-specific file name conventions; for example, on MS-DOS this function performs a variety of changes to enforce MS-DOS file name limitations, including converting any leading &amp;lsquo;</source>
          <target state="translated">En GNU y otros sistemas similares a POSIX, esto simplemente devuelve el &lt;var&gt;filename&lt;/var&gt; . En otros sistemas operativos, puede hacer cumplir las convenciones de nombres de archivos espec&amp;iacute;ficos del sistema; por ejemplo, en MS-DOS esta funci&amp;oacute;n realiza una variedad de cambios para hacer cumplir las limitaciones de nombre de archivo de MS-DOS, incluida la conversi&amp;oacute;n de cualquier</target>
        </trans-unit>
        <trans-unit id="d87da634547b00223204825e52b32ac75a53d3aa" translate="yes" xml:space="preserve">
          <source>On GNU platforms when operating on a local file, this function is atomic: if the filesystem is simultaneously being changed by some other process, this function returns the file&amp;rsquo;s attributes either before or after the change. Otherwise this function is not atomic, and might return &lt;code&gt;nil&lt;/code&gt; if it detects the race condition, or might return a hodgepodge of the previous and current file attributes.</source>
          <target state="translated">En plataformas GNU, cuando se opera en un archivo local, esta funci&amp;oacute;n es at&amp;oacute;mica: si el sistema de archivos est&amp;aacute; siendo modificado simult&amp;aacute;neamente por alg&amp;uacute;n otro proceso, esta funci&amp;oacute;n devuelve los atributos del archivo antes o despu&amp;eacute;s del cambio. De lo contrario, esta funci&amp;oacute;n no es at&amp;oacute;mica y podr&amp;iacute;a devolver &lt;code&gt;nil&lt;/code&gt; si detecta la condici&amp;oacute;n de carrera, o podr&amp;iacute;a devolver una mezcolanza de los atributos del archivo anterior y actual.</target>
        </trans-unit>
        <trans-unit id="b8d088ebe683822c85b3d4ba7ca6f051bd5326f5" translate="yes" xml:space="preserve">
          <source>On MS-DOS and MS-Windows, these functions (like the function that actually operate on files) accept MS-DOS or MS-Windows file-name syntax, where backslashes separate the components, as well as POSIX syntax; but they always return POSIX syntax. This enables Lisp programs to specify file names in POSIX syntax and work properly on all systems without change.&lt;a href=&quot;#FOOT15&quot; name=&quot;DOCF15&quot;&gt;&lt;sup&gt;15&lt;/sup&gt;&lt;/a&gt;</source>
          <target state="translated">En MS-DOS y MS-Windows, estas funciones (como la funci&amp;oacute;n que realmente opera en archivos) aceptan la sintaxis de nombre de archivo de MS-DOS o MS-Windows, donde las barras invertidas separan los componentes, as&amp;iacute; como la sintaxis POSIX; pero siempre devuelven la sintaxis POSIX. Esto permite que los programas Lisp especifiquen nombres de archivos en la sintaxis POSIX y funcionen correctamente en todos los sistemas sin cambios. &lt;a href=&quot;#FOOT15&quot; name=&quot;DOCF15&quot;&gt;&lt;sup&gt;15&lt;/sup&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2928e4c3bab1512e37407ed35b34ba158366a196" translate="yes" xml:space="preserve">
          <source>On MS-DOS filesystems without long names this variable is always ignored.</source>
          <target state="translated">En los sistemas de archivos MS-DOS sin nombres largos esta variable siempre es ignorada.</target>
        </trans-unit>
        <trans-unit id="e12a5b8ff044d26de039b2ea5eb8fbb324b2d8e4" translate="yes" xml:space="preserve">
          <source>On MS-DOS, Emacs sets the &lt;code&gt;TERM&lt;/code&gt; environment variable to &amp;lsquo;</source>
          <target state="translated">En MS-DOS, Emacs establece la variable de entorno &lt;code&gt;TERM&lt;/code&gt; en '</target>
        </trans-unit>
        <trans-unit id="ec2bac6013926e2f9b7a2cc7618659e3f89fcfa1" translate="yes" xml:space="preserve">
          <source>On MS-Windows the &lt;var&gt;noactivate&lt;/var&gt; argument has no effect. However, if &lt;var&gt;frame&lt;/var&gt; is a child frame (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;), this function usually focuses &lt;var&gt;frame&lt;/var&gt; without raising it above other child frames.</source>
          <target state="translated">En MS-Windows, el argumento &lt;var&gt;noactivate&lt;/var&gt; no tiene ning&amp;uacute;n efecto. Sin embargo, si el &lt;var&gt;frame&lt;/var&gt; es un marco secundario (consulte &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Marcos&lt;/a&gt; secundarios ), esta funci&amp;oacute;n generalmente enfoca el &lt;var&gt;frame&lt;/var&gt; sin elevarlo por encima de otros marcos secundarios.</target>
        </trans-unit>
        <trans-unit id="ef4fecbe41a5626c5f763eccb62f475909804106" translate="yes" xml:space="preserve">
          <source>On Windows 2000 and later, Emacs by default uses Unicode APIs to pass file names to the OS, so the value of &lt;code&gt;file-name-coding-system&lt;/code&gt; is largely ignored. Lisp applications that need to encode or decode file names on the Lisp level should use &lt;code&gt;utf-8&lt;/code&gt; coding-system when &lt;code&gt;system-type&lt;/code&gt; is &lt;code&gt;windows-nt&lt;/code&gt;; the conversion of UTF-8 encoded file names to the encoding appropriate for communicating with the OS is performed internally by Emacs.</source>
          <target state="translated">En Windows 2000 y posteriores, Emacs usa de forma predeterminada las API Unicode para pasar nombres de archivos al sistema operativo, por lo que el valor de &lt;code&gt;file-name-coding-system&lt;/code&gt; se ignora en gran medida. Las aplicaciones Lisp que necesitan codificar o decodificar nombres de archivos en el nivel Lisp deben usar &lt;code&gt;utf-8&lt;/code&gt; coding-system cuando &lt;code&gt;system-type&lt;/code&gt; es &lt;code&gt;windows-nt&lt;/code&gt; ; Emacs realiza internamente la conversi&amp;oacute;n de nombres de archivos codificados en UTF-8 a la codificaci&amp;oacute;n adecuada para comunicarse con el sistema operativo.</target>
        </trans-unit>
        <trans-unit id="3d9d3c2776e23b63f854890fc4c9449192d7124d" translate="yes" xml:space="preserve">
          <source>On a graphical display, tiny arrow images in the window fringes indicate truncated and continued lines (see &lt;a href=&quot;fringes#Fringes&quot;&gt;Fringes&lt;/a&gt;). On a text terminal, a &amp;lsquo;</source>
          <target state="translated">En una pantalla gr&amp;aacute;fica, las im&amp;aacute;genes de flechas diminutas en los m&amp;aacute;rgenes de la ventana indican l&amp;iacute;neas truncadas y continuas (consulte &lt;a href=&quot;fringes#Fringes&quot;&gt;Franjas&lt;/a&gt; ). En una terminal de texto, un '</target>
        </trans-unit>
        <trans-unit id="80f59247bbce1d1c9f874202c878dbd846f48819" translate="yes" xml:space="preserve">
          <source>On a graphical terminal that supports extended</source>
          <target state="translated">En un terminal gráfico que soporta la ampliación</target>
        </trans-unit>
        <trans-unit id="71814826cf878c3c911d09d9a92001d4a2a4fb2c" translate="yes" xml:space="preserve">
          <source>On a graphical terminal the following two functions allow the absolute position of the mouse cursor to be retrieved and set.</source>
          <target state="translated">En un terminal gráfico,las dos funciones siguientes permiten recuperar y establecer la posición absoluta del cursor del ratón.</target>
        </trans-unit>
        <trans-unit id="da4884a418379ce0d9a42cbe8229e4ebb6fbeeba" translate="yes" xml:space="preserve">
          <source>On a graphical terminal this form &amp;ldquo;warps&amp;rdquo; the mouse cursor to the upper left corner of the glyph at the selected window&amp;rsquo;s point. A position calculated this way can be also used to show a tooltip window there.</source>
          <target state="translated">En una terminal gr&amp;aacute;fica, esta forma &quot;deforma&quot; el cursor del mouse a la esquina superior izquierda del glifo en el punto de la ventana seleccionada. Una posici&amp;oacute;n calculada de esta manera tambi&amp;eacute;n se puede usar para mostrar una ventana de informaci&amp;oacute;n sobre herramientas all&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="c638ecc2a4ea2d5a12f6c70496e911bec175971e" translate="yes" xml:space="preserve">
          <source>On a graphical terminal we distinguish two types of frames: A normal &lt;em&gt;top-level frame&lt;/em&gt; is a frame whose window-system window is a child of the window-system&amp;rsquo;s root window for that terminal. A child frame is a frame whose window-system window is the child of the window-system window of another Emacs frame. See &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;.</source>
          <target state="translated">En una terminal gr&amp;aacute;fica distinguimos dos tipos de marcos: Un &lt;em&gt;marco&lt;/em&gt; normal &lt;em&gt;de nivel superior&lt;/em&gt; es un marco cuya ventana del sistema de ventanas es un elemento secundario de la ventana ra&amp;iacute;z del sistema de ventanas para esa terminal. Un marco hijo es un marco cuya ventana del sistema de ventanas es el hijo de la ventana del sistema de ventanas de otro marco de Emacs. Consulte &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Marcos secundarios&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c566ed32a5007176cbb7b1c85495717dc12a7b9d" translate="yes" xml:space="preserve">
          <source>On a text terminal frame both values are zero.</source>
          <target state="translated">En un marco terminal de texto ambos valores son cero.</target>
        </trans-unit>
        <trans-unit id="a9edfd72a3d801155297af0b22f3986badadf241" translate="yes" xml:space="preserve">
          <source>On a text terminal, all frames are considered visible for the purposes of this function, even though only one frame is displayed. See &lt;a href=&quot;raising-and-lowering#Raising-and-Lowering&quot;&gt;Raising and Lowering&lt;/a&gt;.</source>
          <target state="translated">En un terminal de texto, todos los marcos se consideran visibles para los fines de esta funci&amp;oacute;n, aunque solo se muestre un marco. Consulte &lt;a href=&quot;raising-and-lowering#Raising-and-Lowering&quot;&gt;Elevaci&amp;oacute;n y descenso&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5c4eb786d6a56a9b0991f45bcfa777150db81f17" translate="yes" xml:space="preserve">
          <source>On each frame, the frame parameter &lt;code&gt;tool-bar-lines&lt;/code&gt; controls how many lines&amp;rsquo; worth of height to reserve for the tool bar. A zero value suppresses the tool bar. If the value is nonzero, and &lt;code&gt;auto-resize-tool-bars&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the tool bar expands and contracts automatically as needed to hold the specified contents. If the value is &lt;code&gt;grow-only&lt;/code&gt;, the tool bar expands automatically, but does not contract automatically.</source>
          <target state="translated">En cada cuadro, el par&amp;aacute;metro de cuadro &lt;code&gt;tool-bar-lines&lt;/code&gt; controla cu&amp;aacute;ntas l&amp;iacute;neas de altura se reservan para la barra de herramientas. Un valor cero suprime la barra de herramientas. Si el valor es distinto de cero, y &lt;code&gt;auto-resize-tool-bars&lt;/code&gt; no es &lt;code&gt;nil&lt;/code&gt; , la barra de herramientas se expande y contrae autom&amp;aacute;ticamente seg&amp;uacute;n sea necesario para contener el contenido especificado. Si el valor es &lt;code&gt;grow-only&lt;/code&gt; , la barra de herramientas se expande autom&amp;aacute;ticamente, pero no se contrae autom&amp;aacute;ticamente.</target>
        </trans-unit>
        <trans-unit id="a47451314dff3dd8ebd99643acb7f9a5e541559a" translate="yes" xml:space="preserve">
          <source>On graphical displays, Emacs draws &lt;em&gt;fringes&lt;/em&gt; next to each window: thin vertical strips down the sides which can display bitmaps indicating truncation, continuation, horizontal scrolling, and so on.</source>
          <target state="translated">En las pantallas gr&amp;aacute;ficas, Emacs dibuja &lt;em&gt;franjas&lt;/em&gt; junto a cada ventana: delgadas franjas verticales a los lados que pueden mostrar mapas de bits que indican truncamiento, continuaci&amp;oacute;n, desplazamiento horizontal, etc.</target>
        </trans-unit>
        <trans-unit id="bc01dccb2a56362cf18d4aefcda75bb95fe48802" translate="yes" xml:space="preserve">
          <source>On graphical systems, the position of a normal top-level frame is specified as the absolute position of its outer frame (see &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Frame Geometry&lt;/a&gt;). The position of a child frame (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;) is specified via pixel offsets of its outer edges relative to the native position of its parent frame.</source>
          <target state="translated">En los sistemas gr&amp;aacute;ficos, la posici&amp;oacute;n de un marco normal de nivel superior se especifica como la posici&amp;oacute;n absoluta de su marco exterior (consulte &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Geometr&amp;iacute;a del marco&lt;/a&gt; ). La posici&amp;oacute;n de un marco secundario (consulte &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Fotogramas&lt;/a&gt; secundarios ) se especifica mediante desplazamientos de p&amp;iacute;xeles de sus bordes exteriores en relaci&amp;oacute;n con la posici&amp;oacute;n nativa de su marco principal.</target>
        </trans-unit>
        <trans-unit id="ec338cdd1a9ff313906eec5d348a8022f6c825b7" translate="yes" xml:space="preserve">
          <source>On graphical terminals, you can specify the line spacing for all lines in a frame, using the &lt;code&gt;line-spacing&lt;/code&gt; frame parameter (see &lt;a href=&quot;layout-parameters#Layout-Parameters&quot;&gt;Layout Parameters&lt;/a&gt;). However, if the default value of &lt;code&gt;line-spacing&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it overrides the frame&amp;rsquo;s &lt;code&gt;line-spacing&lt;/code&gt; parameter. An integer specifies the number of pixels put below lines. A floating-point number specifies the spacing relative to the frame&amp;rsquo;s default line height.</source>
          <target state="translated">En terminales gr&amp;aacute;ficos, puede especificar el espaciado de l&amp;iacute;nea para todas las l&amp;iacute;neas de un marco, utilizando el par&amp;aacute;metro de marco de &lt;code&gt;line-spacing&lt;/code&gt; (consulte &lt;a href=&quot;layout-parameters#Layout-Parameters&quot;&gt;Par&amp;aacute;metros de dise&amp;ntilde;o&lt;/a&gt; ). Sin embargo, si el valor predeterminado del &lt;code&gt;line-spacing&lt;/code&gt; no es &lt;code&gt;nil&lt;/code&gt; , anula el par&amp;aacute;metro de &lt;code&gt;line-spacing&lt;/code&gt; del marco . Un entero especifica la cantidad de p&amp;iacute;xeles colocados debajo de las l&amp;iacute;neas. Un n&amp;uacute;mero de punto flotante especifica el espaciado relativo a la altura de l&amp;iacute;nea predeterminada del marco.</target>
        </trans-unit>
        <trans-unit id="b46ca9680188aa91809e991a0175bded9c6cfada" translate="yes" xml:space="preserve">
          <source>On match, the clause&amp;rsquo;s body forms can reference the set of symbols the pattern let-binds. When &lt;var&gt;seqpat&lt;/var&gt; is &lt;code&gt;and&lt;/code&gt;, this set is the union of all the symbols each of its sub-patterns let-binds. This makes sense because, for &lt;code&gt;and&lt;/code&gt; to match, all the sub-patterns must match.</source>
          <target state="translated">En la coincidencia, las formas del cuerpo de la cl&amp;aacute;usula pueden hacer referencia al conjunto de s&amp;iacute;mbolos que el patr&amp;oacute;n permite enlazar. Cuando &lt;var&gt;seqpat&lt;/var&gt; es &lt;code&gt;and&lt;/code&gt; , este conjunto es la uni&amp;oacute;n de todos los s&amp;iacute;mbolos de cada uno de sus subpatrones let-bind. Esto tiene sentido porque, para &lt;code&gt;and&lt;/code&gt; para coincidir, todos los subpatrones deben coincidir.</target>
        </trans-unit>
        <trans-unit id="c2fe00d1b0cab19cc3dbd01c42a2c9d3f1167cf5" translate="yes" xml:space="preserve">
          <source>On most systems, the directory part is everything up to and including the last slash (backslash is also allowed in input on MS-DOS or MS-Windows); the nondirectory part is the rest.</source>
          <target state="translated">En la mayoría de los sistemas,la parte del directorio es todo hasta e incluyendo la última barra (la barra invertida también está permitida en la entrada en MS-DOS o MS-Windows);la parte no relacionada con el directorio es el resto.</target>
        </trans-unit>
        <trans-unit id="d9f9275391241753a0fc3733e8b2d3b0ad7002b2" translate="yes" xml:space="preserve">
          <source>On most systems, this function works by running a directory listing program whose name is in the variable &lt;code&gt;insert-directory-program&lt;/code&gt;. If &lt;var&gt;wildcard&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it also runs the shell specified by &lt;code&gt;shell-file-name&lt;/code&gt;, to expand the wildcards.</source>
          <target state="translated">En la mayor&amp;iacute;a de los sistemas, esta funci&amp;oacute;n funciona ejecutando un programa de lista de directorios cuyo nombre est&amp;aacute; en la variable &lt;code&gt;insert-directory-program&lt;/code&gt; . Si el &lt;var&gt;wildcard&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; , tambi&amp;eacute;n ejecuta el shell especificado por &lt;code&gt;shell-file-name&lt;/code&gt; , para expandir los comodines.</target>
        </trans-unit>
        <trans-unit id="6d4535f8da402c43490a2180be3f0732c9111726" translate="yes" xml:space="preserve">
          <source>On multi-monitor displays it is possible to use the command &lt;code&gt;make-frame-on-monitor&lt;/code&gt; to make frames on the specified monitor.</source>
          <target state="translated">En pantallas de varios monitores, es posible utilizar el comando &lt;code&gt;make-frame-on-monitor&lt;/code&gt; para crear fotogramas en el monitor especificado.</target>
        </trans-unit>
        <trans-unit id="424aff0ac8fca763b6c89e454a579a4f615d419e" translate="yes" xml:space="preserve">
          <source>On some multi-monitor setups, a single X display outputs to more than one physical monitor. You can use the functions &lt;code&gt;display-monitor-attributes-list&lt;/code&gt; and &lt;code&gt;frame-monitor-attributes&lt;/code&gt; to obtain information about such setups.</source>
          <target state="translated">En algunas configuraciones de varios monitores, una sola pantalla X emite a m&amp;aacute;s de un monitor f&amp;iacute;sico. Puede utilizar las funciones &lt;code&gt;display-monitor-attributes-list&lt;/code&gt; y &lt;code&gt;frame-monitor-attributes&lt;/code&gt; para obtener informaci&amp;oacute;n sobre dichas configuraciones.</target>
        </trans-unit>
        <trans-unit id="25a3df6f65657e687d2e69c45bc13942a081601f" translate="yes" xml:space="preserve">
          <source>On some operating systems, an absolute file name begins with a device name. On such systems, &lt;var&gt;filename&lt;/var&gt; has no relative equivalent based on &lt;var&gt;directory&lt;/var&gt; if they start with two different device names. In this case, &lt;code&gt;file-relative-name&lt;/code&gt; returns &lt;var&gt;filename&lt;/var&gt; in absolute form.</source>
          <target state="translated">En algunos sistemas operativos, un nombre de archivo absoluto comienza con un nombre de dispositivo. En tales sistemas, el &lt;var&gt;filename&lt;/var&gt; no tiene un equivalente relativo basado en el &lt;var&gt;directory&lt;/var&gt; si comienzan con dos nombres de dispositivo diferentes. En este caso, &lt;code&gt;file-relative-name&lt;/code&gt; &lt;var&gt;filename&lt;/var&gt; devuelve el nombre del archivo en forma absoluta.</target>
        </trans-unit>
        <trans-unit id="213a628dbf886420d394fb191adc21bae49c70bf" translate="yes" xml:space="preserve">
          <source>On some operating systems, each file can be associated with arbitrary &lt;em&gt;extended file attributes&lt;/em&gt;. At present, Emacs supports querying and setting two specific sets of extended file attributes: Access Control Lists (ACLs) and SELinux contexts. These extended file attributes are used, on some systems, to impose more sophisticated file access controls than the basic Unix-style permissions discussed in the previous sections.</source>
          <target state="translated">En algunos sistemas operativos, cada archivo se puede asociar con &lt;em&gt;atributos de archivo extendidos&lt;/em&gt; arbitrarios . En la actualidad, Emacs admite la consulta y configuraci&amp;oacute;n de dos conjuntos espec&amp;iacute;ficos de atributos de archivo extendidos: Listas de control de acceso (ACL) y contextos SELinux. Estos atributos de archivo extendidos se utilizan, en algunos sistemas, para imponer controles de acceso a archivos m&amp;aacute;s sofisticados que los permisos b&amp;aacute;sicos de estilo Unix discutidos en las secciones anteriores.</target>
        </trans-unit>
        <trans-unit id="73e008db2f82ffdcf0d72c8e1923a9faeb539e93" translate="yes" xml:space="preserve">
          <source>On some operating systems, more complex sets of access permissions can be specified, via mechanisms such as Access Control Lists (ACLs). See &lt;a href=&quot;extended-attributes#Extended-Attributes&quot;&gt;Extended Attributes&lt;/a&gt;, for how to query and set those permissions.</source>
          <target state="translated">En algunos sistemas operativos, se pueden especificar conjuntos m&amp;aacute;s complejos de permisos de acceso mediante mecanismos como las listas de control de acceso (ACL). Consulte &lt;a href=&quot;extended-attributes#Extended-Attributes&quot;&gt;Atributos extendidos&lt;/a&gt; , para saber c&amp;oacute;mo consultar y establecer esos permisos.</target>
        </trans-unit>
        <trans-unit id="c32f84426cac9a32d45d101e0d8f5f9e2996aa5c" translate="yes" xml:space="preserve">
          <source>On some systems, when Emacs reads the output from a subprocess, the output data is read in very small blocks, potentially resulting in very poor performance. This behavior can be remedied to some extent by setting the variable &lt;code&gt;process-adaptive-read-buffering&lt;/code&gt; to a non-&lt;code&gt;nil&lt;/code&gt; value (the default), as it will automatically delay reading from such processes, thus allowing them to produce more output before Emacs tries to read it.</source>
          <target state="translated">En algunos sistemas, cuando Emacs lee la salida de un subproceso, los datos de salida se leen en bloques muy peque&amp;ntilde;os, lo que puede resultar en un rendimiento muy deficiente. Este comportamiento puede remediarse hasta cierto punto estableciendo la variable &lt;code&gt;process-adaptive-read-buffering&lt;/code&gt; en un valor que no sea &lt;code&gt;nil&lt;/code&gt; (el predeterminado), ya que retrasar&amp;aacute; autom&amp;aacute;ticamente la lectura de dichos procesos, lo que les permitir&amp;aacute; producir m&amp;aacute;s resultados antes de que Emacs lo intente. para leerlo.</target>
        </trans-unit>
        <trans-unit id="819b49b75e3e8487d55fbdd732a2765e416d401d" translate="yes" xml:space="preserve">
          <source>On success, it returns a list of a binary string (the output) and the IV used.</source>
          <target state="translated">Al tener éxito,devuelve una lista de una cadena binaria (la salida)y la intravenosa utilizada.</target>
        </trans-unit>
        <trans-unit id="5b8c9a445132c5cf6d56dccf077cd1f1c5b172c2" translate="yes" xml:space="preserve">
          <source>On text terminals, it is possible to &lt;em&gt;suspend Emacs&lt;/em&gt;, which means stopping Emacs temporarily and returning control to its superior process, which is usually the shell. This allows you to resume editing later in the same Emacs process, with the same buffers, the same kill ring, the same undo history, and so on. To resume Emacs, use the appropriate command in the parent shell&amp;mdash;most likely &lt;code&gt;fg&lt;/code&gt;.</source>
          <target state="translated">En terminales de texto, es posible &lt;em&gt;suspender Emacs&lt;/em&gt; , lo que significa detener Emacs temporalmente y devolver el control a su proceso superior, que suele ser el shell. Esto le permite reanudar la edici&amp;oacute;n m&amp;aacute;s tarde en el mismo proceso de Emacs, con los mismos b&amp;uacute;feres, el mismo kill ring, el mismo historial de deshacer, etc. Para reanudar Emacs, use el comando apropiado en el shell padre, probablemente &lt;code&gt;fg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77e13395725f09ad2c8856d110ef6337fce6ac46" translate="yes" xml:space="preserve">
          <source>On text terminals, suspending and resuming Emacs normally also refreshes the screen. Some terminal emulators record separate contents for display-oriented programs such as Emacs and for ordinary sequential display. If you are using such a terminal, you might want to inhibit the redisplay on resumption.</source>
          <target state="translated">En los terminales de texto,suspender y reanudar el Emacs normalmente también refresca la pantalla.Algunos emuladores de terminales registran contenidos separados para programas orientados a la pantalla como el Emacs y para la pantalla secuencial ordinaria.Si está utilizando un terminal de este tipo,puede que quiera inhibir la redistribución de la pantalla al reanudarla.</target>
        </trans-unit>
        <trans-unit id="20d88ccd4c937138f50db938fd11563e2dd25a8e" translate="yes" xml:space="preserve">
          <source>On text terminals, the line spacing cannot be altered.</source>
          <target state="translated">En los terminales de texto,el espacio entre líneas no puede ser alterado.</target>
        </trans-unit>
        <trans-unit id="e069fc175afc43cf759588b838318611f81e51ce" translate="yes" xml:space="preserve">
          <source>On the other hand, &lt;code&gt;assq&lt;/code&gt; is not usually useful in alists where the keys may not be symbols:</source>
          <target state="translated">Por otro lado, &lt;code&gt;assq&lt;/code&gt; no suele ser &amp;uacute;til en listas donde las claves pueden no ser s&amp;iacute;mbolos:</target>
        </trans-unit>
        <trans-unit id="2812f8f2bcfa7413b908d5f9a288205c2972743e" translate="yes" xml:space="preserve">
          <source>On the other hand, the order of &lt;em&gt;bindings&lt;/em&gt; is unspecified: in the following example, either 1 or 2 might be printed.</source>
          <target state="translated">Por otro lado, el orden de las &lt;em&gt;encuadernaciones&lt;/em&gt; no est&amp;aacute; especificado: en el siguiente ejemplo, se puede imprimir 1 o 2.</target>
        </trans-unit>
        <trans-unit id="5f85ff0be4cebfcaf47b004ec226b3b02a71dc33" translate="yes" xml:space="preserve">
          <source>On the whole, Emacs follows the Unicode Standard in its implementation of character properties. In particular, Emacs supports the &lt;a href=&quot;https://www.unicode.org/reports/tr23/&quot;&gt;Unicode Character Property Model&lt;/a&gt;, and the Emacs character property database is derived from the Unicode Character Database (</source>
          <target state="translated">En general, Emacs sigue el est&amp;aacute;ndar Unicode en su implementaci&amp;oacute;n de las propiedades de los caracteres. En particular, Emacs admite el &lt;a href=&quot;https://www.unicode.org/reports/tr23/&quot;&gt;modelo de propiedades de caracteres Unicode&lt;/a&gt; , y la base de datos de propiedades de caracteres de Emacs se deriva de la base de datos de caracteres Unicode (</target>
        </trans-unit>
        <trans-unit id="0df1af20ccce16453cf49d86077bec23de12dd86" translate="yes" xml:space="preserve">
          <source>On window systems that support it, Emacs tries by default to make the text size of a frame measured in pixels a multiple of the frame&amp;rsquo;s character size. This, however, usually means that a frame can be resized only in character size increments when dragging its external borders. It also may break attempts to truly maximize the frame or making it &amp;ldquo;fullheight&amp;rdquo; or &amp;ldquo;fullwidth&amp;rdquo; (see &lt;a href=&quot;size-parameters#Size-Parameters&quot;&gt;Size Parameters&lt;/a&gt;) leaving some empty space below and/or on the right of the frame. The following option may help in that case.</source>
          <target state="translated">En los sistemas de ventanas que lo soportan, Emacs intenta por defecto hacer que el tama&amp;ntilde;o del texto de un marco medido en p&amp;iacute;xeles sea un m&amp;uacute;ltiplo del tama&amp;ntilde;o del car&amp;aacute;cter del marco. Sin embargo, esto generalmente significa que un marco se puede cambiar de tama&amp;ntilde;o solo en incrementos de tama&amp;ntilde;o de car&amp;aacute;cter al arrastrar sus bordes externos. Tambi&amp;eacute;n puede romper los intentos de maximizar realmente el marco o convertirlo en &quot;altura completa&quot; o &quot;ancho completo&quot; (ver &lt;a href=&quot;size-parameters#Size-Parameters&quot;&gt;Par&amp;aacute;metros de tama&amp;ntilde;o&lt;/a&gt; ) dejando un espacio vac&amp;iacute;o debajo y / o a la derecha del marco. La siguiente opci&amp;oacute;n puede ayudar en ese caso.</target>
        </trans-unit>
        <trans-unit id="841d1d478ab20c6c338cac784c3bcdb7e40083b9" translate="yes" xml:space="preserve">
          <source>On window systems, you can also enable auto-raising (on frame selection) or auto-lowering (on frame deselection) using frame parameters. See &lt;a href=&quot;management-parameters#Management-Parameters&quot;&gt;Management Parameters&lt;/a&gt;.</source>
          <target state="translated">En los sistemas de ventanas, tambi&amp;eacute;n puede habilitar la elevaci&amp;oacute;n autom&amp;aacute;tica (en la selecci&amp;oacute;n del marco) o la bajada autom&amp;aacute;tica (en la deselecci&amp;oacute;n del marco) utilizando par&amp;aacute;metros de marco. Consulte &lt;a href=&quot;management-parameters#Management-Parameters&quot;&gt;Par&amp;aacute;metros de gesti&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="77c8d598496ec2e71e45a895d0ca263179948375" translate="yes" xml:space="preserve">
          <source>On-demand loading of support libraries.</source>
          <target state="translated">Carga a petición de las bibliotecas de apoyo.</target>
        </trans-unit>
        <trans-unit id="ad07b4aac29586e1b0b7c1f1bda28884c7ab4bca" translate="yes" xml:space="preserve">
          <source>Once Emacs decides that a certain handler handles the error, it returns control to that handler. To do so, Emacs unbinds all variable bindings made by binding constructs that are being exited, and executes the cleanups of all &lt;code&gt;unwind-protect&lt;/code&gt; forms that are being exited. Once control arrives at the handler, the body of the handler executes normally.</source>
          <target state="translated">Una vez que Emacs decide que cierto manejador maneja el error, devuelve el control a ese manejador. Para hacerlo, Emacs desvincula todas las vinculaciones de variables realizadas al vincular construcciones que se est&amp;aacute;n saliendo y ejecuta las limpiezas de todas &lt;code&gt;unwind-protect&lt;/code&gt; formas de protecci&amp;oacute;n de desenrollado que se est&amp;aacute;n saliendo. Una vez que el control llega al controlador, el cuerpo del controlador se ejecuta normalmente.</target>
        </trans-unit>
        <trans-unit id="778c77b00697e4553fcdfbf4f104e11fe2eb93ee" translate="yes" xml:space="preserve">
          <source>Once a function is instrumented, any call to the function activates Edebug. Depending on which Edebug execution mode you have selected, activating Edebug may stop execution and let you step through the function, or it may update the display and continue execution while checking for debugging commands. The default execution mode is step, which stops execution. See &lt;a href=&quot;edebug-execution-modes#Edebug-Execution-Modes&quot;&gt;Edebug Execution Modes&lt;/a&gt;.</source>
          <target state="translated">Una vez que se instrumenta una funci&amp;oacute;n, cualquier llamada a la funci&amp;oacute;n activa Edebug. Dependiendo del modo de ejecuci&amp;oacute;n de Edebug que haya seleccionado, la activaci&amp;oacute;n de Edebug puede detener la ejecuci&amp;oacute;n y permitirle recorrer la funci&amp;oacute;n, o puede actualizar la pantalla y continuar la ejecuci&amp;oacute;n mientras verifica los comandos de depuraci&amp;oacute;n. El modo de ejecuci&amp;oacute;n predeterminado es paso, que detiene la ejecuci&amp;oacute;n. Consulte &lt;a href=&quot;edebug-execution-modes#Edebug-Execution-Modes&quot;&gt;Modos de ejecuci&amp;oacute;n de Edebug&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7e4ee3d26197fcab8232cca69fb16d0f05f95688" translate="yes" xml:space="preserve">
          <source>Once a series has begun, the value is a marker which points to the buffer position in the warnings buffer of the start of the series.</source>
          <target state="translated">Una vez que una serie ha comenzado,el valor es un marcador que apunta a la posición de la memoria intermedia en la memoria de advertencias del comienzo de la serie.</target>
        </trans-unit>
        <trans-unit id="36b6d567cfa67a7659808b6d1ff19d545a0d2c63" translate="yes" xml:space="preserve">
          <source>Once set up, side windows also change the behavior of the commands &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; and &lt;code&gt;switch-to-next-buffer&lt;/code&gt; (see &lt;a href=&quot;window-history#Window-History&quot;&gt;Window History&lt;/a&gt;). In particular, these commands will refrain from showing, in a side window, buffers that have not been displayed in that window before. They will also refrain from having a normal, non-side window show a buffer that has been already displayed in a side window. A notable exception to the latter rule occurs when an application, after displaying a buffer, resets that buffer&amp;rsquo;s local variables.</source>
          <target state="translated">Una vez configuradas, las ventanas laterales tambi&amp;eacute;n cambian el comportamiento de los comandos &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; y &lt;code&gt;switch-to-next-buffer&lt;/code&gt; (ver &lt;a href=&quot;window-history#Window-History&quot;&gt;Historial de ventanas&lt;/a&gt; ). En particular, estos comandos se abstendr&amp;aacute;n de mostrar, en una ventana lateral, b&amp;uacute;feres que no se hayan mostrado antes en esa ventana. Tambi&amp;eacute;n se abstendr&amp;aacute;n de que una ventana normal, no lateral, muestre un b&amp;uacute;fer que ya se ha mostrado en una ventana lateral. Una excepci&amp;oacute;n notable a la &amp;uacute;ltima regla ocurre cuando una aplicaci&amp;oacute;n, despu&amp;eacute;s de mostrar un b&amp;uacute;fer, restablece las variables locales de ese b&amp;uacute;fer.</target>
        </trans-unit>
        <trans-unit id="46c1926d71b4e8e4b97adb3110fa61cac0093fb9" translate="yes" xml:space="preserve">
          <source>Once the buffer has a suitable &lt;code&gt;revert-buffer-function&lt;/code&gt; and &lt;code&gt;buffer-stale-function&lt;/code&gt;, several problems usually remain.</source>
          <target state="translated">Una vez que el tamp&amp;oacute;n tiene un adecuado &lt;code&gt;revert-buffer-function&lt;/code&gt; y &lt;code&gt;buffer-stale-function&lt;/code&gt; , varios problemas suelen permanecer.</target>
        </trans-unit>
        <trans-unit id="59381f9a9d9f927b9e2c3c74e1d9f85d8c8d831a" translate="yes" xml:space="preserve">
          <source>Once the mark exists in a buffer, it normally never ceases to exist. However, it may become &lt;em&gt;inactive&lt;/em&gt;, if Transient Mark mode is enabled. The buffer-local variable &lt;code&gt;mark-active&lt;/code&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, means that the mark is active. A command can call the function &lt;code&gt;deactivate-mark&lt;/code&gt; to deactivate the mark directly, or it can request deactivation of the mark upon return to the editor command loop by setting the variable &lt;code&gt;deactivate-mark&lt;/code&gt; to a non-&lt;code&gt;nil&lt;/code&gt; value.</source>
          <target state="translated">Una vez que la marca existe en un b&amp;uacute;fer, normalmente nunca deja de existir. Sin embargo, puede volverse &lt;em&gt;inactivo&lt;/em&gt; si est&amp;aacute; habilitado el modo Transient Mark. La variable local de b&amp;uacute;fer &lt;code&gt;mark-active&lt;/code&gt; , si no es &lt;code&gt;nil&lt;/code&gt; , significa que la marca est&amp;aacute; activa. Un comando puede llamar a la funci&amp;oacute;n &lt;code&gt;deactivate-mark&lt;/code&gt; para desactivar la marca directamente, o puede solicitar la desactivaci&amp;oacute;n de la marca al regresar al bucle de comandos del editor estableciendo la variable &lt;code&gt;deactivate-mark&lt;/code&gt; en un valor que no sea &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="197124b549991ea7d2db5253b6de18d693ff5eb3" translate="yes" xml:space="preserve">
          <source>Once the variable has a value, you can refer to it by using the symbol itself as an expression. Thus,</source>
          <target state="translated">Una vez que la variable tiene un valor,puede referirse a ella usando el símbolo mismo como una expresión.Así,</target>
        </trans-unit>
        <trans-unit id="fd18cae1d555d9632ceb9466f9b376521bcb7fd1" translate="yes" xml:space="preserve">
          <source>Once you scroll a window as far right as it can go, back to its normal position where the total leftward scrolling is zero, attempts to scroll any farther right have no effect.</source>
          <target state="translated">Una vez que se desplaza una ventana lo más a la derecha posible,volviendo a su posición normal donde el desplazamiento total hacia la izquierda es cero,los intentos de desplazarse más a la derecha no tienen ningún efecto.</target>
        </trans-unit>
        <trans-unit id="e2ef1484d788b8e71ea675fa55e9514ec4d62317" translate="yes" xml:space="preserve">
          <source>Once your module function detected that a nonlocal exit is pending, it can either return to Emacs (after performing the necessary local cleanup), or it can attempt to recover from the nonlocal exit. The following</source>
          <target state="translated">Una vez que la función de su módulo detectó que está pendiente una salida no local,puede volver a Emacs (después de realizar la limpieza local necesaria),o puede intentar recuperarse de la salida no local.Lo siguiente</target>
        </trans-unit>
        <trans-unit id="d1513ef69753da579d30dff357ebb3c01e465563" translate="yes" xml:space="preserve">
          <source>Once your module is written, compile it to produce a shared library, according to the conventions of the underlying platform. Then place the shared library in a directory mentioned in &lt;code&gt;load-path&lt;/code&gt; (see &lt;a href=&quot;library-search#Library-Search&quot;&gt;Library Search&lt;/a&gt;), where Emacs will find it.</source>
          <target state="translated">Una vez que su m&amp;oacute;dulo est&amp;eacute; escrito, comp&amp;iacute;lelo para producir una biblioteca compartida, de acuerdo con las convenciones de la plataforma subyacente. Luego coloque la biblioteca compartida en un directorio mencionado en &lt;code&gt;load-path&lt;/code&gt; (vea &lt;a href=&quot;library-search#Library-Search&quot;&gt;B&amp;uacute;squeda de biblioteca&lt;/a&gt; ), donde Emacs la encontrar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="f3c0b70cb22f00da9b2ba81dbf3bf978932a071a" translate="yes" xml:space="preserve">
          <source>One &amp;lsquo;</source>
          <target state="translated">Uno '</target>
        </trans-unit>
        <trans-unit id="4adda958bb416b9b9ce93994e71859b6fceded90" translate="yes" xml:space="preserve">
          <source>One example of a case where this variable makes a difference is when the default font has no italic equivalent. With the default ordering, the &lt;code&gt;italic&lt;/code&gt; face will use a non-italic font that is similar to the default one. But if you put &lt;code&gt;:slant&lt;/code&gt; before &lt;code&gt;:height&lt;/code&gt;, the &lt;code&gt;italic&lt;/code&gt; face will use an italic font, even if its height is not quite right.</source>
          <target state="translated">Un ejemplo de un caso en el que esta variable marca la diferencia es cuando la fuente predeterminada no tiene equivalente en cursiva. Con el orden predeterminado, la cara en &lt;code&gt;italic&lt;/code&gt; utilizar&amp;aacute; una fuente no cursiva que es similar a la predeterminada. Pero si pones &lt;code&gt;:slant&lt;/code&gt; antes &lt;code&gt;:height&lt;/code&gt; , la cara en &lt;code&gt;italic&lt;/code&gt; usar&amp;aacute; una fuente en cursiva, incluso si su altura no es del todo correcta.</target>
        </trans-unit>
        <trans-unit id="577e046c059fefb7e07e716cb84ee3c1d1a8d0ea" translate="yes" xml:space="preserve">
          <source>One object can have multiple textual representations. For example, &amp;lsquo;</source>
          <target state="translated">Un objeto puede tener m&amp;uacute;ltiples representaciones textuales. Por ejemplo, '</target>
        </trans-unit>
        <trans-unit id="e131db88539c1a117d848bab11ab32a20ff4ae32" translate="yes" xml:space="preserve">
          <source>One of the effects of making a minor mode global is that the &lt;var&gt;mode&lt;/var&gt; variable becomes a customization variable. Toggling it through the Customize interface turns the mode on and off, and its value can be saved for future Emacs sessions (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Saving-Customizations.html#Saving-Customizations&quot;&gt;Saving Customizations&lt;/a&gt; in</source>
          <target state="translated">Uno de los efectos de hacer global un modo menor es que la variable de &lt;var&gt;mode&lt;/var&gt; convierte en una variable de personalizaci&amp;oacute;n. Al alternarlo a trav&amp;eacute;s de la interfaz Personalizar, se activa y desactiva el modo, y su valor se puede guardar para futuras sesiones de Emacs (consulte &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Saving-Customizations.html#Saving-Customizations&quot;&gt;Guardar personalizaciones&lt;/a&gt; en</target>
        </trans-unit>
        <trans-unit id="8145e40ecbe1251ccfc0d64cf4ef8a0311780a53" translate="yes" xml:space="preserve">
          <source>One of the effects of making a minor mode global is that the &lt;var&gt;mode&lt;/var&gt; variable becomes a customization variable. Toggling it through the Customize interface turns the mode on and off, and its value can be saved for future Emacs sessions (see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Saving-Customizations.html#Saving-Customizations&quot;&gt;Saving Customizations&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a45c275128e0b9c2732acf99d11b72a739cabbf7" translate="yes" xml:space="preserve">
          <source>One of the elements is &lt;code&gt;(acl . &lt;var&gt;acl&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;acl&lt;/var&gt; has the same form returned by &lt;code&gt;file-acl&lt;/code&gt;.</source>
          <target state="translated">Uno de los elementos es &lt;code&gt;(acl . &lt;var&gt;acl&lt;/var&gt;)&lt;/code&gt; , donde &lt;var&gt;acl&lt;/var&gt; tiene la misma forma devuelta por &lt;code&gt;file-acl&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="33b9427a7425593acc13906a9fe5a0f436f2867b" translate="yes" xml:space="preserve">
          <source>One of the files in the content directory must be named</source>
          <target state="translated">Uno de los archivos en el directorio de contenido debe ser nombrado</target>
        </trans-unit>
        <trans-unit id="889f4e481c60baff17ff497b3fc3a3ae3d75286d" translate="yes" xml:space="preserve">
          <source>One or more flag characters can appear immediately after the &amp;lsquo;</source>
          <target state="translated">Uno o m&amp;aacute;s caracteres de la bandera pueden aparecer inmediatamente despu&amp;eacute;s del '</target>
        </trans-unit>
        <trans-unit id="b9aff7d2a1cda9fb1100f1f1c7d6d8ce23f3a07d" translate="yes" xml:space="preserve">
          <source>One possible consequence of this process is an infinite loop, in the event that a symbol&amp;rsquo;s function cell refers to the same symbol. Otherwise, we eventually obtain a non-symbol, which ought to be a function or other suitable object.</source>
          <target state="translated">Una posible consecuencia de este proceso es un bucle infinito, en el caso de que la celda de funci&amp;oacute;n de un s&amp;iacute;mbolo se refiera al mismo s&amp;iacute;mbolo. De lo contrario, eventualmente obtenemos un no s&amp;iacute;mbolo, que deber&amp;iacute;a ser una funci&amp;oacute;n u otro objeto adecuado.</target>
        </trans-unit>
        <trans-unit id="2efc7bf28038f291b21bb7d6c5b6e4024d66a9f9" translate="yes" xml:space="preserve">
          <source>One potential reason for such a failure to instrument is that some macro definitions are not yet known to Emacs. To work around this, load the file which defines the function you are about to instrument.</source>
          <target state="translated">Una posible razón de este fracaso del instrumento es que algunas macrodefiniciones aún no son conocidas por el Emacs.Para solucionarlo,carga el archivo que define la función que estás a punto de instrumentar.</target>
        </trans-unit>
        <trans-unit id="c73c9472ca68902783f9eff8fc7a9275e411bae6" translate="yes" xml:space="preserve">
          <source>One responsibility of &lt;var&gt;from-fn&lt;/var&gt; is to make sure that the beginning of the file no longer matches &lt;var&gt;regexp&lt;/var&gt;. Otherwise it is likely to get called again. Also, &lt;var&gt;from-fn&lt;/var&gt; must not involve buffers or files other than the one being decoded, otherwise the internal buffer used for formatting might be overwritten.</source>
          <target state="translated">Una responsabilidad de &lt;var&gt;from-fn&lt;/var&gt; es asegurarse de que el comienzo del archivo ya no coincida con &lt;var&gt;regexp&lt;/var&gt; . De lo contrario, es probable que lo vuelvan a llamar. Adem&amp;aacute;s, &lt;var&gt;from-fn&lt;/var&gt; no debe incluir b&amp;uacute;feres o archivos que no sean el que se est&amp;aacute; decodificando, de lo contrario, el b&amp;uacute;fer interno utilizado para formatear podr&amp;iacute;a sobrescribirse.</target>
        </trans-unit>
        <trans-unit id="a512c4c508943629411341265b0a1b3580ada561" translate="yes" xml:space="preserve">
          <source>One special kind of side effect can&amp;rsquo;t be avoided: constructing Lisp objects. Almost all macro expansions include constructed lists; that is the whole point of most macros. This is usually safe; there is just one case where you must be careful: when the object you construct is part of a quoted constant in the macro expansion.</source>
          <target state="translated">No se puede evitar un tipo especial de efecto secundario: la construcci&amp;oacute;n de objetos Lisp. Casi todas las macro expansiones incluyen listas construidas; ese es el objetivo de la mayor&amp;iacute;a de las macros. Esto suele ser seguro; Solo hay un caso en el que debe tener cuidado: cuando el objeto que construye es parte de una constante cotizada en la expansi&amp;oacute;n macro.</target>
        </trans-unit>
        <trans-unit id="c55a9d4e3055cc50dcbf39304bdeafccb27e6553" translate="yes" xml:space="preserve">
          <source>One unusual thing about this command is that the entire line containing position &lt;var&gt;beg&lt;/var&gt;, and the entire line containing position &lt;var&gt;end&lt;/var&gt;, are included in the region sorted.</source>
          <target state="translated">Una cosa inusual acerca de este comando es que toda la l&amp;iacute;nea que contiene la posici&amp;oacute;n &lt;var&gt;beg&lt;/var&gt; , y toda la l&amp;iacute;nea que contiene la posici&amp;oacute;n &lt;var&gt;end&lt;/var&gt; , se incluyen en la regi&amp;oacute;n ordenada.</target>
        </trans-unit>
        <trans-unit id="a2d226d6e0986fd5ff1e62cb952a91648093c02f" translate="yes" xml:space="preserve">
          <source>One use for &lt;code&gt;image-flush&lt;/code&gt; is to tell Emacs about a change in an image file. If an image specification contains a &lt;code&gt;:file&lt;/code&gt; property, the image is cached based on the file&amp;rsquo;s contents when the image is first displayed. Even if the file subsequently changes, Emacs continues displaying the old version of the image. Calling &lt;code&gt;image-flush&lt;/code&gt; flushes the image from the cache, forcing Emacs to re-read the file the next time it needs to display that image.</source>
          <target state="translated">Un uso de &lt;code&gt;image-flush&lt;/code&gt; es informar a Emacs sobre un cambio en un archivo de imagen. Si una especificaci&amp;oacute;n de imagen contiene una propiedad &lt;code&gt;:file&lt;/code&gt; , la imagen se almacena en cach&amp;eacute; seg&amp;uacute;n el contenido del archivo cuando se muestra por primera vez. Incluso si el archivo cambia posteriormente, Emacs contin&amp;uacute;a mostrando la versi&amp;oacute;n anterior de la imagen. Llamar a &lt;code&gt;image-flush&lt;/code&gt; limpia la imagen del cach&amp;eacute;, lo que obliga a Emacs a volver a leer el archivo la pr&amp;oacute;xima vez que necesite mostrar esa imagen.</target>
        </trans-unit>
        <trans-unit id="6f05610b66d19812d3d46bdeffc2bf46fe230ffa" translate="yes" xml:space="preserve">
          <source>One use of &lt;code&gt;regexp-quote&lt;/code&gt; is to combine an exact string match with context described as a regular expression. For example, this searches for the string that is the value of &lt;var&gt;string&lt;/var&gt;, surrounded by whitespace:</source>
          <target state="translated">Un uso de &lt;code&gt;regexp-quote&lt;/code&gt; es combinar una coincidencia de cadena exacta con el contexto descrito como una expresi&amp;oacute;n regular. Por ejemplo, esto busca la cadena que es el valor de &lt;var&gt;string&lt;/var&gt; , rodeada por espacios en blanco:</target>
        </trans-unit>
        <trans-unit id="6b443615f7088e219757f3ce2e0767b4fb5de64b" translate="yes" xml:space="preserve">
          <source>One use of focus redirection is for frames that don&amp;rsquo;t have minibuffers. These frames use minibuffers on other frames. Activating a minibuffer on another frame redirects focus to that frame. This puts the focus on the minibuffer&amp;rsquo;s frame, where it belongs, even though the mouse remains in the frame that activated the minibuffer.</source>
          <target state="translated">Un uso de la redirecci&amp;oacute;n de enfoque es para los marcos que no tienen minib&amp;uacute;feres. Estos marcos utilizan minib&amp;uacute;feres en otros marcos. La activaci&amp;oacute;n de un minib&amp;uacute;fer en otro marco redirige el enfoque a ese marco. Esto pone el foco en el marco del minib&amp;uacute;fer, donde pertenece, aunque el mouse permanece en el marco que activ&amp;oacute; el minib&amp;uacute;fer.</target>
        </trans-unit>
        <trans-unit id="55ca5f8a1f3a2f9f4a1e3fefe222967bb4301ed6" translate="yes" xml:space="preserve">
          <source>One use of minor mode keymaps is to modify the behavior of certain self-inserting characters so that they do something else as well as self-insert. (Another way to customize &lt;code&gt;self-insert-command&lt;/code&gt; is through &lt;code&gt;post-self-insert-hook&lt;/code&gt;, see &lt;a href=&quot;commands-for-insertion#Commands-for-Insertion&quot;&gt;Commands for Insertion&lt;/a&gt;. Apart from this, the facilities for customizing &lt;code&gt;self-insert-command&lt;/code&gt; are limited to special cases, designed for abbrevs and Auto Fill mode. Do not try substituting your own definition of &lt;code&gt;self-insert-command&lt;/code&gt; for the standard one. The editor command loop handles this function specially.)</source>
          <target state="translated">Un uso de los mapas de teclas de modo menor es modificar el comportamiento de ciertos caracteres autoinsertables para que hagan otra cosa adem&amp;aacute;s de autoinsertarse. (Otra forma de personalizar &lt;code&gt;self-insert-command&lt;/code&gt; es a trav&amp;eacute;s de &lt;code&gt;post-self-insert-hook&lt;/code&gt; , consulte &lt;a href=&quot;commands-for-insertion#Commands-for-Insertion&quot;&gt;Comandos de inserci&amp;oacute;n&lt;/a&gt; . Aparte de esto, las facilidades para personalizar &lt;code&gt;self-insert-command&lt;/code&gt; autoinsertar est&amp;aacute;n limitadas a casos especiales, dise&amp;ntilde;ados para abreviaturas y Autocompletar modo. No intente sustituir su propia definici&amp;oacute;n de &lt;code&gt;self-insert-command&lt;/code&gt; por la est&amp;aacute;ndar. El ciclo de comandos del editor maneja esta funci&amp;oacute;n especialmente.)</target>
        </trans-unit>
        <trans-unit id="964a845b7c3be261e46e6c16cfdd2b39ae693122" translate="yes" xml:space="preserve">
          <source>One use of this function is in preparation for defining a longer key that uses &lt;var&gt;key&lt;/var&gt; as a prefix&amp;mdash;which would not be allowed if &lt;var&gt;key&lt;/var&gt; has a non-prefix binding. For example:</source>
          <target state="translated">Un uso de esta funci&amp;oacute;n es en preparaci&amp;oacute;n para definir una clave m&amp;aacute;s larga que usa &lt;var&gt;key&lt;/var&gt; como prefijo, lo que no estar&amp;iacute;a permitido si la &lt;var&gt;key&lt;/var&gt; tiene una vinculaci&amp;oacute;n sin prefijo. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="992da344af8495da1bf5875640a42f02ebd76cdf" translate="yes" xml:space="preserve">
          <source>One use of this function is to define function keys on terminals that have downloadable function key definitions. For example, this is how (on certain terminals) to define function key 4 to move forward four characters (by transmitting the characters</source>
          <target state="translated">Uno de los usos de esta función es definir las teclas de función en los terminales que tienen definiciones de teclas de función descargables.Por ejemplo,así es como (en ciertos terminales)se define la tecla de función 4 para avanzar cuatro caracteres (transmitiendo los caracteres</target>
        </trans-unit>
        <trans-unit id="023abc72efceee06dfb7ea03706101194c813d2e" translate="yes" xml:space="preserve">
          <source>One use of this variable is for telling &lt;code&gt;x-popup-menu&lt;/code&gt; where to pop up a menu. It is also used internally by &lt;code&gt;y-or-n-p&lt;/code&gt; (see &lt;a href=&quot;yes_002dor_002dno-queries#Yes_002dor_002dNo-Queries&quot;&gt;Yes-or-No Queries&lt;/a&gt;).</source>
          <target state="translated">Un uso de esta variable es decirle a &lt;code&gt;x-popup-menu&lt;/code&gt; d&amp;oacute;nde debe aparecer un men&amp;uacute;. Tambi&amp;eacute;n lo utiliza internamente &lt;code&gt;y-or-n-p&lt;/code&gt; (consulte Consultas de &lt;a href=&quot;yes_002dor_002dno-queries#Yes_002dor_002dNo-Queries&quot;&gt;s&amp;iacute; o no&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="bde8277d79875f5ea95a8ec30aa3980302baf104" translate="yes" xml:space="preserve">
          <source>One way or another, these mechanisms specify a Lisp value for the spacing of each line. The value is a height spec, and it translates into a Lisp value as described above. However, in this case the numeric height value specifies the line spacing, rather than the line height.</source>
          <target state="translated">De una forma u otra,estos mecanismos especifican un valor de Lisp para el espaciado de cada línea.El valor es una especificación de altura,y se traduce en un valor de Lisp como se ha descrito anteriormente.Sin embargo,en este caso el valor numérico de altura especifica el espaciado de la línea,en lugar de la altura de la línea.</target>
        </trans-unit>
        <trans-unit id="f712e3c7ea934966609bea4ea08c88d53b0d34d7" translate="yes" xml:space="preserve">
          <source>One way to avoid pathological cases like this is to think of &lt;code&gt;empty-object&lt;/code&gt; as a funny kind of constant, not as a memory allocation construct. You wouldn&amp;rsquo;t use &lt;code&gt;setcar&lt;/code&gt; on a constant such as &lt;code&gt;'(nil)&lt;/code&gt;, so naturally you won&amp;rsquo;t use it on &lt;code&gt;(empty-object)&lt;/code&gt; either.</source>
          <target state="translated">Una forma de evitar casos patol&amp;oacute;gicos como este es pensar en &lt;code&gt;empty-object&lt;/code&gt; como un tipo divertido de constante, no como una construcci&amp;oacute;n de asignaci&amp;oacute;n de memoria. No usar&amp;iacute;a &lt;code&gt;setcar&lt;/code&gt; en una constante como &lt;code&gt;'(nil)&lt;/code&gt; , por lo que, naturalmente, tampoco lo usar&amp;aacute; en &lt;code&gt;(empty-object)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="21005527907c627869027aeb58d2b47e207aa33d" translate="yes" xml:space="preserve">
          <source>One way to cope with circular structure is to set &lt;code&gt;print-length&lt;/code&gt; or &lt;code&gt;print-level&lt;/code&gt; to truncate the printing. Edebug does this for you; it binds &lt;code&gt;print-length&lt;/code&gt; and &lt;code&gt;print-level&lt;/code&gt; to the values of the variables &lt;code&gt;edebug-print-length&lt;/code&gt; and &lt;code&gt;edebug-print-level&lt;/code&gt; (so long as they have non-&lt;code&gt;nil&lt;/code&gt; values). See &lt;a href=&quot;output-variables#Output-Variables&quot;&gt;Output Variables&lt;/a&gt;.</source>
          <target state="translated">Una forma de hacer frente a la estructura circular es establecer &lt;code&gt;print-length&lt;/code&gt; &lt;code&gt;print-level&lt;/code&gt; o el nivel de impresi&amp;oacute;n para truncar la impresi&amp;oacute;n. Edebug hace esto por ti; enlaza &lt;code&gt;print-length&lt;/code&gt; y &lt;code&gt;print-level&lt;/code&gt; a los valores de las variables &lt;code&gt;edebug-print-length&lt;/code&gt; y &lt;code&gt;edebug-print-level&lt;/code&gt; (siempre que no tengan valores &lt;code&gt;nil&lt;/code&gt; ). Consulte &lt;a href=&quot;output-variables#Output-Variables&quot;&gt;Variables de salida&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fb79df4c6bc7c681333d9bd2d1fe18512e30d371" translate="yes" xml:space="preserve">
          <source>One way to ensure reliable rehighlighting of multiline Font Lock constructs is to put on them the text property &lt;code&gt;font-lock-multiline&lt;/code&gt;. It should be present and non-&lt;code&gt;nil&lt;/code&gt; for text that is part of a multiline construct.</source>
          <target state="translated">Una forma de garantizar un resaltado fiable de las construcciones de Font Lock multil&amp;iacute;nea es poner en ellas la propiedad de texto &lt;code&gt;font-lock-multiline&lt;/code&gt; . Debe estar presente y no ser &lt;code&gt;nil&lt;/code&gt; para el texto que forma parte de una construcci&amp;oacute;n de varias l&amp;iacute;neas.</target>
        </trans-unit>
        <trans-unit id="c715d20a7533e9f52b8676dee0de643ff507bb6b" translate="yes" xml:space="preserve">
          <source>One way to increase the security of your packages is to &lt;em&gt;sign&lt;/em&gt; them using a cryptographic key. If you have generated a private/public gpg key pair, you can use gpg to sign the package like this:</source>
          <target state="translated">Una forma de aumentar la seguridad de sus paquetes es &lt;em&gt;firmarlos&lt;/em&gt; con una clave criptogr&amp;aacute;fica. Si ha generado un par de claves gpg p&amp;uacute;blico / privado, puede usar gpg para firmar el paquete de esta manera:</target>
        </trans-unit>
        <trans-unit id="fbc2d56b429ee910d28dbf2fbd89ff2226fc991f" translate="yes" xml:space="preserve">
          <source>One way to represent a face is as a property list of attributes, like &lt;code&gt;(:foreground &quot;red&quot; :weight bold)&lt;/code&gt;. Such a list is called an &lt;em&gt;anonymous face&lt;/em&gt;. For example, you can assign an anonymous face as the value of the &lt;code&gt;face&lt;/code&gt; text property, and Emacs will display the underlying text with the specified attributes. See &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;.</source>
          <target state="translated">Una forma de representar una cara es como una lista de propiedades de atributos, como &lt;code&gt;(:foreground &quot;red&quot; :weight bold)&lt;/code&gt; . Esta lista se denomina &lt;em&gt;rostro an&amp;oacute;nimo&lt;/em&gt; . Por ejemplo, puede asignar una cara an&amp;oacute;nima como el valor de la propiedad del texto de la &lt;code&gt;face&lt;/code&gt; , y Emacs mostrar&amp;aacute; el texto subyacente con los atributos especificados. Ver &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;propiedades especiales&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="85f792f34f1609454c8ad7752317553e8a6aea26" translate="yes" xml:space="preserve">
          <source>One way to use &lt;code&gt;catch&lt;/code&gt; and &lt;code&gt;throw&lt;/code&gt; is to exit from a doubly nested loop. (In most languages, this would be done with a &lt;code&gt;goto&lt;/code&gt;.) Here we compute &lt;code&gt;(foo &lt;var&gt;i&lt;/var&gt; &lt;var&gt;j&lt;/var&gt;)&lt;/code&gt; for &lt;var&gt;i&lt;/var&gt; and &lt;var&gt;j&lt;/var&gt; varying from 0 to 9:</source>
          <target state="translated">Una forma de utilizar &lt;code&gt;catch&lt;/code&gt; and &lt;code&gt;throw&lt;/code&gt; es salir de un bucle doblemente anidado. (En la mayor&amp;iacute;a de los lenguajes, esto se har&amp;iacute;a con un &lt;code&gt;goto&lt;/code&gt; ). Aqu&amp;iacute; calculamos &lt;code&gt;(foo &lt;var&gt;i&lt;/var&gt; &lt;var&gt;j&lt;/var&gt;)&lt;/code&gt; para &lt;var&gt;i&lt;/var&gt; y &lt;var&gt;j&lt;/var&gt; que var&amp;iacute;an de 0 a 9:</target>
        </trans-unit>
        <trans-unit id="48d778b2ad99cdef9eebb6a0fb329935a9f7da52" translate="yes" xml:space="preserve">
          <source>One-dimensional arrays of &lt;code&gt;t&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Matrices unidimensionales de &lt;code&gt;t&lt;/code&gt; o &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6073cf4225ea4cf9fd99b377fa082aad9eea6d61" translate="yes" xml:space="preserve">
          <source>One-dimensional arrays.</source>
          <target state="translated">Matrices unidimensionales.</target>
        </trans-unit>
        <trans-unit id="be996260ce0e4df49d84c11ecb1d8434ceb9918f" translate="yes" xml:space="preserve">
          <source>One-dimensional sparse arrays indexed by characters.</source>
          <target state="translated">Matrices dispersas unidimensionales indexadas por caracteres.</target>
        </trans-unit>
        <trans-unit id="ae88654faca91364a5a35b8017f9b11dd388a0bf" translate="yes" xml:space="preserve">
          <source>Only &lt;var&gt;body-form&lt;/var&gt; is protected by the &lt;code&gt;unwind-protect&lt;/code&gt;. If any of the &lt;var&gt;cleanup-forms&lt;/var&gt; themselves exits nonlocally (via a &lt;code&gt;throw&lt;/code&gt; or an error), &lt;code&gt;unwind-protect&lt;/code&gt; is &lt;em&gt;not&lt;/em&gt; guaranteed to evaluate the rest of them. If the failure of one of the &lt;var&gt;cleanup-forms&lt;/var&gt; has the potential to cause trouble, then protect it with another &lt;code&gt;unwind-protect&lt;/code&gt; around that form.</source>
          <target state="translated">Solo la forma del &lt;var&gt;body-form&lt;/var&gt; est&amp;aacute; protegida por la &lt;code&gt;unwind-protect&lt;/code&gt; . Si alguna de las &lt;var&gt;cleanup-forms&lt;/var&gt; a s&amp;iacute; mismos salidas no local (a trav&amp;eacute;s de un &lt;code&gt;throw&lt;/code&gt; o un error), &lt;code&gt;unwind-protect&lt;/code&gt; est&amp;aacute; &lt;em&gt;no&lt;/em&gt; garantiza para evaluar el resto de ellos. Si la falla de una de las &lt;var&gt;cleanup-forms&lt;/var&gt; tiene el potencial de causar problemas, entonces prot&amp;eacute;jala con otra &lt;code&gt;unwind-protect&lt;/code&gt; alrededor de esa forma.</target>
        </trans-unit>
        <trans-unit id="5ddbb81d5905d23be7a9282a488499d00d5db21e" translate="yes" xml:space="preserve">
          <source>Only available on macOS, if non-&lt;code&gt;nil&lt;/code&gt;, set the titlebar and toolbar to be transparent. This effectively sets the background color of both to match the Emacs background color.</source>
          <target state="translated">Solo disponible en macOS, si no es &lt;code&gt;nil&lt;/code&gt; , configure la barra de t&amp;iacute;tulo y la barra de herramientas para que sean transparentes. Esto establece efectivamente el color de fondo de ambos para que coincida con el color de fondo de Emacs.</target>
        </trans-unit>
        <trans-unit id="18179e6d777e1c5274c1d80de143a1698c76c5dd" translate="yes" xml:space="preserve">
          <source>Only available on macOS, if set to &lt;code&gt;dark&lt;/code&gt; draw this frame&amp;rsquo;s window-system window using the &amp;ldquo;vibrant dark&amp;rdquo; theme, otherwise use the system default. The &amp;ldquo;vibrant dark&amp;rdquo; theme can be used to set the toolbar and scrollbars to a dark appearance when using an Emacs theme with a dark background.</source>
          <target state="translated">Solo disponible en macOS, si est&amp;aacute; configurado en &lt;code&gt;dark&lt;/code&gt; dibuje la ventana del sistema de ventanas de este marco usando el tema &quot;vibrante oscuro&quot;; de lo contrario, use el sistema predeterminado. El tema &amp;ldquo;oscuro vibrante&amp;rdquo; se puede usar para configurar la barra de herramientas y las barras de desplazamiento a una apariencia oscura cuando se usa un tema de Emacs con un fondo oscuro.</target>
        </trans-unit>
        <trans-unit id="c4e0867e177c2c0fb6455a0e2fbcd920632c9814" translate="yes" xml:space="preserve">
          <source>Only if creating a new frame fails, &lt;code&gt;display-buffer&lt;/code&gt; will apply the actions supplied by &lt;code&gt;display-buffer-fallback-action&lt;/code&gt; which means to again try reusing a window, popping up a new window and so on. A trivial way to make frame creation fail is supplied by the following form:</source>
          <target state="translated">Solo si la creaci&amp;oacute;n de un nuevo marco falla, &lt;code&gt;display-buffer&lt;/code&gt; aplicar&amp;aacute; las acciones proporcionadas por &lt;code&gt;display-buffer-fallback-action&lt;/code&gt; ,lo que significa volver a intentar reutilizar una ventana, abrir una nueva ventana y as&amp;iacute; sucesivamente. El siguiente formulario proporciona una forma trivial de hacer que falle la creaci&amp;oacute;n de marcos:</target>
        </trans-unit>
        <trans-unit id="586047e86826f6dbd9c9e2881cee476941126e1e" translate="yes" xml:space="preserve">
          <source>Only top-level values (arrays and objects) can be serialized to JSON. The subobjects within these top-level values can be of any type. Likewise, the parsing functions will only return vectors, hashtables, alists, and plists.</source>
          <target state="translated">Sólo los valores de nivel superior (matrices y objetos)pueden ser serializados a JSON.Los subobjetos dentro de estos valores de nivel superior pueden ser de cualquier tipo.De la misma manera,las funciones de análisis sintáctico sólo devolverán vectores,tablas de hachís,alistas y plistas.</target>
        </trans-unit>
        <trans-unit id="d7386c857a6085eb01544217b3270be05da5ce62" translate="yes" xml:space="preserve">
          <source>Open parenthesis characters: &amp;lsquo;</source>
          <target state="translated">Caracteres entre par&amp;eacute;ntesis abiertos: '</target>
        </trans-unit>
        <trans-unit id="7c1e62f5f482a805fbc3795b139cfba4a6ee67ba" translate="yes" xml:space="preserve">
          <source>Opening network connections.</source>
          <target state="translated">Abriendo las conexiones de la red.</target>
        </trans-unit>
        <trans-unit id="8a38f5abc74dccf57ac90365fb1a9bb0148242a3" translate="yes" xml:space="preserve">
          <source>Operating System Environment</source>
          <target state="translated">Entorno del sistema operativo</target>
        </trans-unit>
        <trans-unit id="47ccf7c0529a8c5659311c8f82bec6086b29bb6c" translate="yes" xml:space="preserve">
          <source>Operating System Interface</source>
          <target state="translated">Interfaz del sistema operativo</target>
        </trans-unit>
        <trans-unit id="686c6069aa66b3b4e21a44c27c9586de497a2f96" translate="yes" xml:space="preserve">
          <source>Operating on X11 Keysyms</source>
          <target state="translated">Operando en X11 Keysyms</target>
        </trans-unit>
        <trans-unit id="1f124ca397e717abcc79b77c1f05d2b73214fbd7" translate="yes" xml:space="preserve">
          <source>Operating on key symbols for X Windows.</source>
          <target state="translated">Operando en símbolos de teclas para X Windows.</target>
        </trans-unit>
        <trans-unit id="f100a2b248d1a840348b4d7eb2abbcfa1fd0b916" translate="yes" xml:space="preserve">
          <source>Operating on the special minibuffer windows.</source>
          <target state="translated">Operando en las ventanas especiales del minibuffer.</target>
        </trans-unit>
        <trans-unit id="30642cc8933c44209f3f574d7f685d3dbe69cad1" translate="yes" xml:space="preserve">
          <source>Operator Precedence Grammars</source>
          <target state="translated">Gramáticas de precedencia del operador</target>
        </trans-unit>
        <trans-unit id="9abbe311bb8d8a0022002079a7ed956ab53457b0" translate="yes" xml:space="preserve">
          <source>Operator precedence grammar is a very primitive technology for parsing compared to some of the more common techniques used in compilers. It has the following characteristics: its parsing power is very limited, and it is largely unable to detect syntax errors, but it has the advantage of being algorithmically efficient and able to parse forward just as well as backward. In practice that means that SMIE can use it for indentation based on backward parsing, that it can provide both &lt;code&gt;forward-sexp&lt;/code&gt; and &lt;code&gt;backward-sexp&lt;/code&gt; functionality, and that it will naturally work on syntactically incorrect code without any extra effort. The downside is that it also means that most programming languages cannot be parsed correctly using SMIE, at least not without resorting to some special tricks (see &lt;a href=&quot;smie-tricks#SMIE-Tricks&quot;&gt;SMIE Tricks&lt;/a&gt;).</source>
          <target state="translated">La gram&amp;aacute;tica de precedencia de operadores es una tecnolog&amp;iacute;a muy primitiva para analizar en comparaci&amp;oacute;n con algunas de las t&amp;eacute;cnicas m&amp;aacute;s comunes utilizadas en los compiladores. Tiene las siguientes caracter&amp;iacute;sticas: su poder de an&amp;aacute;lisis es muy limitado y en gran medida es incapaz de detectar errores de sintaxis, pero tiene la ventaja de ser algor&amp;iacute;tmicamente eficiente y capaz de analizar tanto hacia adelante como hacia atr&amp;aacute;s. En la pr&amp;aacute;ctica, eso significa que SMIE puede usarlo para la sangr&amp;iacute;a basada en el an&amp;aacute;lisis hacia atr&amp;aacute;s, que puede proporcionar la funcionalidad &lt;code&gt;forward-sexp&lt;/code&gt; y &lt;code&gt;backward-sexp&lt;/code&gt; , y que naturalmente funcionar&amp;aacute; en c&amp;oacute;digo sint&amp;aacute;cticamente incorrecto sin ning&amp;uacute;n esfuerzo adicional. La desventaja es que tambi&amp;eacute;n significa que la mayor&amp;iacute;a de los lenguajes de programaci&amp;oacute;n no se pueden analizar correctamente usando SMIE, al menos no sin recurrir a algunos trucos especiales (ver&lt;a href=&quot;smie-tricks#SMIE-Tricks&quot;&gt;Trucos SMIE&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="433ecb082f2de86ea14497d016e6339cef126f75" translate="yes" xml:space="preserve">
          <source>Option variables for customizing Edebug.</source>
          <target state="translated">Variables de opción para la personalización de Edebug.</target>
        </trans-unit>
        <trans-unit id="41725bd17665c6ac89cc5165603ca309d1ea2d7c" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;var&gt;family&lt;/var&gt; specified as symbol &lt;code&gt;ipv4&lt;/code&gt; or &lt;code&gt;ipv6&lt;/code&gt; restricts the returned information to IPv4 and IPv6 addresses respectively, independently of the value of &lt;var&gt;full&lt;/var&gt;. Specifying &lt;code&gt;ipv6&lt;/code&gt; when IPv6 support is not available will result in an error being signaled.</source>
          <target state="translated">La &lt;var&gt;family&lt;/var&gt; argumentos opcional especificada como s&amp;iacute;mbolo &lt;code&gt;ipv4&lt;/code&gt; o &lt;code&gt;ipv6&lt;/code&gt; restringe la informaci&amp;oacute;n devuelta a direcciones IPv4 e IPv6 respectivamente, independientemente del valor de &lt;var&gt;full&lt;/var&gt; . Si especifica &lt;code&gt;ipv6&lt;/code&gt; cuando no se dispone de compatibilidad con IPv6, se indicar&amp;aacute; un error.</target>
        </trans-unit>
        <trans-unit id="b0205e865ebbb646fcce5e119e547b665d053edb" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;var&gt;full&lt;/var&gt; non-&lt;code&gt;nil&lt;/code&gt; means to instead return a list of one or more elements of the form &lt;code&gt;(&lt;var&gt;ifname&lt;/var&gt;&amp;nbsp;&lt;var&gt;addr&lt;/var&gt;&amp;nbsp;&lt;var&gt;bcast&lt;/var&gt;&amp;nbsp;&lt;var&gt;netmask&lt;/var&gt;)&lt;/code&gt;. &lt;var&gt;ifname&lt;/var&gt; is a non-unique string naming the interface. &lt;var&gt;addr&lt;/var&gt;, &lt;var&gt;bcast&lt;/var&gt;, and &lt;var&gt;netmask&lt;/var&gt; are vectors of integers detailing the IP address, broadcast address, and network mask.</source>
          <target state="translated">El argumento opcional &lt;var&gt;full&lt;/var&gt; non- &lt;code&gt;nil&lt;/code&gt; significa devolver una lista de uno o m&amp;aacute;s elementos del formulario &lt;code&gt;(&lt;var&gt;ifname&lt;/var&gt;&amp;nbsp;&lt;var&gt;addr&lt;/var&gt;&amp;nbsp;&lt;var&gt;bcast&lt;/var&gt;&amp;nbsp;&lt;var&gt;netmask&lt;/var&gt;)&lt;/code&gt; . &lt;var&gt;ifname&lt;/var&gt; es una cadena no &amp;uacute;nica que nombra la interfaz. &lt;var&gt;addr&lt;/var&gt; , &lt;var&gt;bcast&lt;/var&gt; y &lt;var&gt;netmask&lt;/var&gt; son vectores de n&amp;uacute;meros enteros que detallan la direcci&amp;oacute;n IP, la direcci&amp;oacute;n de transmisi&amp;oacute;n y la m&amp;aacute;scara de red.</target>
        </trans-unit>
        <trans-unit id="3ce281c8a118cd3ed61dcec4880e6886db816d03" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;var&gt;size&lt;/var&gt; non-&lt;code&gt;nil&lt;/code&gt; means to try swapping the sizes of &lt;var&gt;window-1&lt;/var&gt; and &lt;var&gt;window-2&lt;/var&gt; as well. A value of &lt;code&gt;height&lt;/code&gt; means to swap heights only, a value of &lt;code&gt;width&lt;/code&gt; means to swap widths only, while &lt;code&gt;t&lt;/code&gt; means to swap both widths and heights, if possible. Frames are not resized by this function.</source>
          <target state="translated">El &lt;var&gt;size&lt;/var&gt; argumento opcional distinto de &lt;code&gt;nil&lt;/code&gt; significa intentar intercambiar los tama&amp;ntilde;os de &lt;var&gt;window-1&lt;/var&gt; y &lt;var&gt;window-2&lt;/var&gt; tambi&amp;eacute;n. Un valor de &lt;code&gt;height&lt;/code&gt; significa intercambiar solo alturas, un valor de &lt;code&gt;width&lt;/code&gt; significa intercambiar solo anchos, mientras que &lt;code&gt;t&lt;/code&gt; significa intercambiar anchos y alturas, si es posible. Esta funci&amp;oacute;n no cambia el tama&amp;ntilde;o de los marcos.</target>
        </trans-unit>
        <trans-unit id="ce411d37922de190b756838011d8fc8421d7f336" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;var&gt;suffix&lt;/var&gt; is a string to be displayed after &lt;var&gt;reporter&lt;/var&gt;&amp;rsquo;s main message and progress text. If &lt;var&gt;reporter&lt;/var&gt; is a non-numerical reporter, then &lt;var&gt;value&lt;/var&gt; should be &lt;code&gt;nil&lt;/code&gt;, or a string to use instead of &lt;var&gt;suffix&lt;/var&gt;.</source>
          <target state="translated">El &lt;var&gt;suffix&lt;/var&gt; argumento opcional es una cadena que se mostrar&amp;aacute; despu&amp;eacute;s del mensaje principal del &lt;var&gt;reporter&lt;/var&gt; o y del texto de progreso. Si &lt;var&gt;reporter&lt;/var&gt; es un reportero no num&amp;eacute;rico, entonces el &lt;var&gt;value&lt;/var&gt; debe ser &lt;code&gt;nil&lt;/code&gt; , o una cadena para usar en lugar del &lt;var&gt;suffix&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="a305373f5ab4c8179b157e7348094ea4ce59f3c4" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;var&gt;type&lt;/var&gt; specifies the type of the edges to return: &lt;code&gt;outer-edges&lt;/code&gt; means to return the outer edges of &lt;var&gt;frame&lt;/var&gt;, &lt;code&gt;native-edges&lt;/code&gt; (or &lt;code&gt;nil&lt;/code&gt;) means to return its native edges and &lt;code&gt;inner-edges&lt;/code&gt; means to return its inner edges.</source>
          <target state="translated">El &lt;var&gt;type&lt;/var&gt; argumento opcional especifica el tipo de los bordes a devolver: &lt;code&gt;outer-edges&lt;/code&gt; significa devolver los bordes externos del &lt;var&gt;frame&lt;/var&gt; , &lt;code&gt;native-edges&lt;/code&gt; (o &lt;code&gt;nil&lt;/code&gt; ) significa devolver sus bordes nativos y bordes &lt;code&gt;inner-edges&lt;/code&gt; significa devolver sus bordes internos.</target>
        </trans-unit>
        <trans-unit id="b389bdb03281d5aed10905c4bf13e4c443b15b78" translate="yes" xml:space="preserve">
          <source>Options for how input is processed.</source>
          <target state="translated">Opciones de cómo se procesa la entrada.</target>
        </trans-unit>
        <trans-unit id="676740d3b53e425b59a5051ef0cf6614000f6153" translate="yes" xml:space="preserve">
          <source>Ordinarily the first argument is a list &lt;code&gt;(&lt;var&gt;second&lt;/var&gt; &lt;var&gt;minute&lt;/var&gt; &lt;var&gt;hour&lt;/var&gt; &lt;var&gt;day&lt;/var&gt; &lt;var&gt;month&lt;/var&gt;
&lt;var&gt;year&lt;/var&gt; &lt;var&gt;ignored&lt;/var&gt; &lt;var&gt;dst&lt;/var&gt; &lt;var&gt;zone&lt;/var&gt;)&lt;/code&gt; that specifies a decoded time in the style of &lt;code&gt;decode-time&lt;/code&gt;, so that &lt;code&gt;(encode-time (decode-time ...))&lt;/code&gt; works. For the meanings of these list members, see the table under &lt;code&gt;decode-time&lt;/code&gt;.</source>
          <target state="translated">Normalmente, el primer argumento es una lista &lt;code&gt;(&lt;var&gt;second&lt;/var&gt; &lt;var&gt;minute&lt;/var&gt; &lt;var&gt;hour&lt;/var&gt; &lt;var&gt;day&lt;/var&gt; &lt;var&gt;month&lt;/var&gt; &lt;var&gt;year&lt;/var&gt; &lt;var&gt;ignored&lt;/var&gt; &lt;var&gt;dst&lt;/var&gt; &lt;var&gt;zone&lt;/var&gt;)&lt;/code&gt; que especifica un tiempo decodificado en el estilo de &lt;code&gt;decode-time&lt;/code&gt; , de modo que &lt;code&gt;(encode-time (decode-time ...))&lt;/code&gt; funciona. Para conocer los significados de estos miembros de la lista, consulte la tabla en &lt;code&gt;decode-time&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4c6d5310c1a644ae25978f7caf49bad39c82c0ef" translate="yes" xml:space="preserve">
          <source>Ordinarily, &lt;code&gt;fill-individual-paragraphs&lt;/code&gt; regards each change in indentation as starting a new paragraph. If &lt;code&gt;fill-individual-varying-indent&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then only separator lines separate paragraphs. That mode can handle indented paragraphs with additional indentation on the first line.</source>
          <target state="translated">Normalmente, &lt;code&gt;fill-individual-paragraphs&lt;/code&gt; considera cada cambio en la sangr&amp;iacute;a como el comienzo de un nuevo p&amp;aacute;rrafo. Si &lt;code&gt;fill-individual-varying-indent&lt;/code&gt; no es &lt;code&gt;nil&lt;/code&gt; , s&amp;oacute;lo las l&amp;iacute;neas de separaci&amp;oacute;n separan los p&amp;aacute;rrafos. Ese modo puede manejar p&amp;aacute;rrafos con sangr&amp;iacute;a con sangr&amp;iacute;a adicional en la primera l&amp;iacute;nea.</target>
        </trans-unit>
        <trans-unit id="375f3605b67b9e5591350d037468627ffa4a6244" translate="yes" xml:space="preserve">
          <source>Ordinarily, &lt;code&gt;rename-buffer&lt;/code&gt; signals an error if &lt;var&gt;newname&lt;/var&gt; is already in use. However, if &lt;var&gt;unique&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it modifies &lt;var&gt;newname&lt;/var&gt; to make a name that is not in use. Interactively, you can make &lt;var&gt;unique&lt;/var&gt; non-&lt;code&gt;nil&lt;/code&gt; with a numeric prefix argument. (This is how the command &lt;code&gt;rename-uniquely&lt;/code&gt; is implemented.)</source>
          <target state="translated">Normalmente, &lt;code&gt;rename-buffer&lt;/code&gt; indica un error si &lt;var&gt;newname&lt;/var&gt; ya est&amp;aacute; en uso. Sin embargo, si &lt;var&gt;unique&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; , modifica &lt;var&gt;newname&lt;/var&gt; para crear un nombre que no est&amp;aacute; en uso. De forma interactiva, puede hacer &lt;var&gt;unique&lt;/var&gt; no &lt;code&gt;nil&lt;/code&gt; con un argumento de prefijo num&amp;eacute;rico. (As&amp;iacute; es como se implementa el comando &lt;code&gt;rename-uniquely&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="49604b10b3ce6fc4e228c33eaf4c9eabebbafb54" translate="yes" xml:space="preserve">
          <source>Ordinarily, &lt;code&gt;unload-feature&lt;/code&gt; refuses to unload a library on which other loaded libraries depend. (A library &lt;var&gt;a&lt;/var&gt; depends on library &lt;var&gt;b&lt;/var&gt; if &lt;var&gt;a&lt;/var&gt; contains a &lt;code&gt;require&lt;/code&gt; for &lt;var&gt;b&lt;/var&gt;.) If the optional argument &lt;var&gt;force&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, dependencies are ignored and you can unload any library.</source>
          <target state="translated">Por lo general, &lt;code&gt;unload-feature&lt;/code&gt; se niega a descargar una biblioteca de la que dependen otras bibliotecas cargadas. (Una biblioteca &lt;var&gt;a&lt;/var&gt; depende de la biblioteca &lt;var&gt;b&lt;/var&gt; si &lt;var&gt;a&lt;/var&gt; contiene un &lt;code&gt;require&lt;/code&gt; para &lt;var&gt;b&lt;/var&gt; .) Si el argumento opcional &lt;var&gt;force&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; , las dependencias se ignoran y puede descargar cualquier biblioteca.</target>
        </trans-unit>
        <trans-unit id="1bfbb016c1886fa701a54a40747d69fbc68c3719" translate="yes" xml:space="preserve">
          <source>Ordinarily, functions that operate on text or move point do not care whether the text is invisible, they process invisible characters and visible characters alike. The user-level line motion commands, such as &lt;code&gt;next-line&lt;/code&gt;, &lt;code&gt;previous-line&lt;/code&gt;, ignore invisible newlines if &lt;code&gt;line-move-ignore-invisible&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt; (the default), i.e., behave like these invisible newlines didn&amp;rsquo;t exist in the buffer, but only because they are explicitly programmed to do so.</source>
          <target state="translated">Por lo general, a las funciones que operan en texto o en puntos de movimiento no les importa si el texto es invisible, procesan tanto caracteres invisibles como caracteres visibles. Los comandos de movimiento de l&amp;iacute;nea a nivel de usuario, como &lt;code&gt;next-line&lt;/code&gt; , &lt;code&gt;previous-line&lt;/code&gt; , ignoran las nuevas &lt;code&gt;line-move-ignore-invisible&lt;/code&gt; invisibles si line-move-ignore-invisible es no- &lt;code&gt;nil&lt;/code&gt; (el valor predeterminado), es decir, se comportan como si estas nuevas l&amp;iacute;neas invisibles no existieran en el b&amp;uacute;fer, pero solo porque est&amp;aacute;n programados expl&amp;iacute;citamente para hacerlo.</target>
        </trans-unit>
        <trans-unit id="2931150327a52dd944296ebe55052fed18d6a2ee" translate="yes" xml:space="preserve">
          <source>Ordinarily, this function deletes all existing frames not listed in &lt;var&gt;configuration&lt;/var&gt;. But if &lt;var&gt;nodelete&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the unwanted frames are iconified instead.</source>
          <target state="translated">Por lo general, esta funci&amp;oacute;n elimina todos los marcos existentes que no figuran en la &lt;var&gt;configuration&lt;/var&gt; . Pero si &lt;var&gt;nodelete&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; , los marcos no deseados se iconifican en su lugar.</target>
        </trans-unit>
        <trans-unit id="87302b912cb01c9639fa44884323306db9210741" translate="yes" xml:space="preserve">
          <source>Ordinary Lisp variables can be assigned any value that is a valid Lisp object. However, certain Lisp variables are not defined in Lisp, but in C. Most of these variables are defined in the C code using &lt;code&gt;DEFVAR_LISP&lt;/code&gt;. Like variables defined in Lisp, these can take on any value. However, some variables are defined using &lt;code&gt;DEFVAR_INT&lt;/code&gt; or &lt;code&gt;DEFVAR_BOOL&lt;/code&gt;. See &lt;a href=&quot;writing-emacs-primitives#Defining-Lisp-variables-in-C&quot;&gt;Writing Emacs Primitives&lt;/a&gt;, in particular the description of functions of the type &lt;code&gt;syms_of_&lt;var&gt;filename&lt;/var&gt;&lt;/code&gt;, for a brief discussion of the C implementation.</source>
          <target state="translated">A las variables Lisp ordinarias se les puede asignar cualquier valor que sea un objeto Lisp v&amp;aacute;lido. Sin embargo, ciertas variables Lisp no est&amp;aacute;n definidas en Lisp, sino en C. La mayor&amp;iacute;a de estas variables se definen en el c&amp;oacute;digo C usando &lt;code&gt;DEFVAR_LISP&lt;/code&gt; . Como las variables definidas en Lisp, estas pueden tomar cualquier valor. Sin embargo, algunas variables se definen mediante &lt;code&gt;DEFVAR_INT&lt;/code&gt; o &lt;code&gt;DEFVAR_BOOL&lt;/code&gt; . Consulte &lt;a href=&quot;writing-emacs-primitives#Defining-Lisp-variables-in-C&quot;&gt;Escritura de primitivas de Emacs&lt;/a&gt; , en particular la descripci&amp;oacute;n de funciones del tipo &lt;code&gt;syms_of_&lt;var&gt;filename&lt;/var&gt;&lt;/code&gt; , para una breve discusi&amp;oacute;n de la implementaci&amp;oacute;n de C.</target>
        </trans-unit>
        <trans-unit id="9aa2f051f923703f2af383ff67fd2ab1b21d7049" translate="yes" xml:space="preserve">
          <source>Ordinary characters &amp;ndash; keys with symbols on them.</source>
          <target state="translated">Caracteres ordinarios: teclas con s&amp;iacute;mbolos.</target>
        </trans-unit>
        <trans-unit id="ea6b2ec77fa1c5f39197cbc7ea3990c82fb9841d" translate="yes" xml:space="preserve">
          <source>Ordinary evaluation of a macro call finishes by evaluating the expansion. However, the macro expansion is not necessarily evaluated right away, or at all, because other programs also expand macro calls, and they may or may not evaluate the expansions.</source>
          <target state="translated">La evaluación ordinaria de una macro llamada termina con la evaluación de la expansión.Sin embargo,la expansión de macro no se evalúa necesariamente de inmediato,o no se evalúa en absoluto,porque otros programas también expanden las llamadas de macro,y pueden o no evaluar las expansiones.</target>
        </trans-unit>
        <trans-unit id="08b529b0be834d360e6ea5bc83de04138368fecc" translate="yes" xml:space="preserve">
          <source>Ordinary quitting gives no information about why the program was looping. To get more information, you can set the variable &lt;code&gt;debug-on-quit&lt;/code&gt; to non-&lt;code&gt;nil&lt;/code&gt;. Once you have the debugger running in the middle of the infinite loop, you can proceed from the debugger using the stepping commands. If you step through the entire loop, you may get enough information to solve the problem.</source>
          <target state="translated">El abandono ordinario no proporciona informaci&amp;oacute;n acerca de por qu&amp;eacute; el programa estaba en bucle. Para obtener m&amp;aacute;s informaci&amp;oacute;n, puede establecer la variable &lt;code&gt;debug-on-quit&lt;/code&gt; como no &lt;code&gt;nil&lt;/code&gt; . Una vez que tenga el depurador ejecut&amp;aacute;ndose en medio del bucle infinito, puede continuar desde el depurador usando los comandos paso a paso. Si recorre todo el ciclo, es posible que obtenga suficiente informaci&amp;oacute;n para resolver el problema.</target>
        </trans-unit>
        <trans-unit id="34d1e835211103e55315f8950b093575e40b4d28" translate="yes" xml:space="preserve">
          <source>Other Character Modifier Bits</source>
          <target state="translated">Otros modificadores de caracteres</target>
        </trans-unit>
        <trans-unit id="33198adc02f29100fbe001bcd24af108bb8d17c8" translate="yes" xml:space="preserve">
          <source>Other Display Specifications</source>
          <target state="translated">Otras especificaciones de la pantalla</target>
        </trans-unit>
        <trans-unit id="e1b5fab73cfe1a3afaa115ab03f0edad57c69f7f" translate="yes" xml:space="preserve">
          <source>Other Features of Argument Lists</source>
          <target state="translated">Otras características de las listas de argumentos</target>
        </trans-unit>
        <trans-unit id="4e097fdc9bb03d4937b671db92b45a0f360cd315" translate="yes" xml:space="preserve">
          <source>Other Font Lock Variables</source>
          <target state="translated">Otras variables de bloqueo de fuentes</target>
        </trans-unit>
        <trans-unit id="46737ad394242fbdb99171fff4fda522659876cd" translate="yes" xml:space="preserve">
          <source>Other Hash Table Functions</source>
          <target state="translated">Otras funciones de la mesa de hash</target>
        </trans-unit>
        <trans-unit id="56044b82f8d646d772974c14d2a91bcbcbcb3ce7" translate="yes" xml:space="preserve">
          <source>Other Image Types</source>
          <target state="translated">Otros tipos de imágenes</target>
        </trans-unit>
        <trans-unit id="edfdae8d79c7493898f253dfe960e84840b69477" translate="yes" xml:space="preserve">
          <source>Other Lisp objects are &lt;em&gt;mutable&lt;/em&gt;: it is safe to change their values via destructive operations involving side effects. For example, an existing marker can be changed by moving the marker to point to somewhere else.</source>
          <target state="translated">Otros objetos Lisp son &lt;em&gt;mutables&lt;/em&gt; : es seguro cambiar sus valores mediante operaciones destructivas que implican efectos secundarios. Por ejemplo, un marcador existente se puede cambiar moviendo el marcador para que apunte a otro lugar.</target>
        </trans-unit>
        <trans-unit id="041cab119371080f5c14fa74fa5fa41d2e6a8bf9" translate="yes" xml:space="preserve">
          <source>Other Topics Related to Functions</source>
          <target state="translated">Otros temas relacionados con las funciones</target>
        </trans-unit>
        <trans-unit id="6eb08d88c80caa45384446348816e55ba7c955ae" translate="yes" xml:space="preserve">
          <source>Other aspects of tooltip display are controlled by several customizable settings; see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Tooltips.html#Tooltips&quot;&gt;Tooltips&lt;/a&gt; in</source>
          <target state="translated">Otros aspectos de la visualizaci&amp;oacute;n de informaci&amp;oacute;n sobre herramientas se controlan mediante varias configuraciones personalizables; ver informaci&amp;oacute;n sobre &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Tooltips.html#Tooltips&quot;&gt;herramientas&lt;/a&gt; en</target>
        </trans-unit>
        <trans-unit id="2807813fd14e72f66d18c3e9088c2eaa37295f37" translate="yes" xml:space="preserve">
          <source>Other aspects of tooltip display are controlled by several customizable settings; see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Tooltips.html#Tooltips&quot;&gt;Tooltips&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a64c877816cb35a6c766c7fbbe33ffb08e05d25" translate="yes" xml:space="preserve">
          <source>Other definition types:</source>
          <target state="translated">Otros tipos de definición:</target>
        </trans-unit>
        <trans-unit id="21ad92f8be5dc4e33dd7afb9682a8336e5b8df9f" translate="yes" xml:space="preserve">
          <source>Other events the system can generate.</source>
          <target state="translated">Otros eventos que el sistema puede generar.</target>
        </trans-unit>
        <trans-unit id="d9542df9ae63b6d508bd2e2ee21aec4ef7962dc9" translate="yes" xml:space="preserve">
          <source>Other frequently used commands are</source>
          <target state="translated">Otros comandos utilizados con frecuencia son</target>
        </trans-unit>
        <trans-unit id="db54d46555d1f340a37db3a33c9204c8396d6479" translate="yes" xml:space="preserve">
          <source>Other functions to compare with this one include &lt;code&gt;make-vector&lt;/code&gt; (see &lt;a href=&quot;vectors#Vectors&quot;&gt;Vectors&lt;/a&gt;) and &lt;code&gt;make-list&lt;/code&gt; (see &lt;a href=&quot;building-lists#Building-Lists&quot;&gt;Building Lists&lt;/a&gt;).</source>
          <target state="translated">Otras funciones para comparar con esta incluyen &lt;code&gt;make-vector&lt;/code&gt; (ver &lt;a href=&quot;vectors#Vectors&quot;&gt;Vectores&lt;/a&gt; ) y &lt;code&gt;make-list&lt;/code&gt; (ver &lt;a href=&quot;building-lists#Building-Lists&quot;&gt;Listas de construcci&amp;oacute;n&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="408167f431dbe022874b25fe0cbeecaf0058b490" translate="yes" xml:space="preserve">
          <source>Other functions you can use to create buffers include &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; (see &lt;a href=&quot;temporary-displays#Temporary-Displays&quot;&gt;Temporary Displays&lt;/a&gt;) and &lt;code&gt;create-file-buffer&lt;/code&gt; (see &lt;a href=&quot;visiting-files#Visiting-Files&quot;&gt;Visiting Files&lt;/a&gt;). Starting a subprocess can also create a buffer (see &lt;a href=&quot;processes#Processes&quot;&gt;Processes&lt;/a&gt;).</source>
          <target state="translated">Otras funciones que puede utilizar para crear b&amp;uacute;feres incluyen &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; (consulte &lt;a href=&quot;temporary-displays#Temporary-Displays&quot;&gt;Pantallas temporales&lt;/a&gt; ) y &lt;code&gt;create-file-buffer&lt;/code&gt; (consulte &lt;a href=&quot;visiting-files#Visiting-Files&quot;&gt;Visitar archivos&lt;/a&gt; ). Iniciar un subproceso tambi&amp;eacute;n puede crear un b&amp;uacute;fer (ver &lt;a href=&quot;processes#Processes&quot;&gt;Procesos&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="12da01fa29e6553cd0e8cb48e03d6be151f33875" translate="yes" xml:space="preserve">
          <source>Other keyboard character events cannot fit in a string. This includes keyboard events in the range of 128 to 255.</source>
          <target state="translated">Otros eventos de caracteres del teclado no pueden caber en una cadena.Esto incluye eventos de teclado en el rango de 128 a 255.</target>
        </trans-unit>
        <trans-unit id="4ac0b6dbdd8cbd1b63c08a470ab7011f7b3c910a" translate="yes" xml:space="preserve">
          <source>Other primitives to look inside of window configurations would make sense, but are not implemented because we did not need them. See the file</source>
          <target state="translated">Otras primitivas para mirar dentro de las configuraciones de las ventanas tendrían sentido,pero no se implementan porque no las necesitábamos.Vea el archivo</target>
        </trans-unit>
        <trans-unit id="f2e96a7c2811cdfc73c1ef4d1bd1a2c29ec6dda7" translate="yes" xml:space="preserve">
          <source>Other programs can also use custom printing; see</source>
          <target state="translated">Otros programas también pueden utilizar la impresión personalizada;véase</target>
        </trans-unit>
        <trans-unit id="0656cfe9687d5b1c6eec51fbeb7667af045fb347" translate="yes" xml:space="preserve">
          <source>Other quoting constructs include &lt;code&gt;function&lt;/code&gt; (see &lt;a href=&quot;anonymous-functions#Anonymous-Functions&quot;&gt;Anonymous Functions&lt;/a&gt;), which causes an anonymous lambda expression written in Lisp to be compiled, and &amp;lsquo;</source>
          <target state="translated">Otras construcciones de citas incluyen &lt;code&gt;function&lt;/code&gt; (ver &lt;a href=&quot;anonymous-functions#Anonymous-Functions&quot;&gt;Funciones an&amp;oacute;nimas&lt;/a&gt; ), que hace que se compile una expresi&amp;oacute;n lambda an&amp;oacute;nima escrita en Lisp, y '</target>
        </trans-unit>
        <trans-unit id="d862e1f98dfca98bea09cf7215fbefad08c4cef4" translate="yes" xml:space="preserve">
          <source>Other times, after careful consideration you may conclude that those conflicts are not serious and simply resolve them via the &lt;var&gt;resolvers&lt;/var&gt; argument of &lt;code&gt;smie-bnf-&amp;gt;prec2&lt;/code&gt;. Usually this is because the grammar is simply ambiguous: the conflict does not affect the set of programs described by the grammar, but only the way those programs are parsed. This is typically the case for separators and associative infix operators, where you want to add a resolver like &lt;code&gt;'((assoc &quot;|&quot;))&lt;/code&gt;. Another case where this can happen is for the classic &lt;em&gt;dangling else&lt;/em&gt; problem, where you will use &lt;code&gt;'((assoc
&quot;else&quot; &quot;then&quot;))&lt;/code&gt;. It can also happen for cases where the conflict is real and cannot really be resolved, but it is unlikely to pose a problem in practice.</source>
          <target state="translated">Otras veces, despu&amp;eacute;s de una cuidadosa consideraci&amp;oacute;n, puede concluir que esos conflictos no son serios y simplemente resolverlos a trav&amp;eacute;s del argumento &lt;var&gt;resolvers&lt;/var&gt; de &lt;code&gt;smie-bnf-&amp;gt;prec2&lt;/code&gt; . Por lo general, esto se debe a que la gram&amp;aacute;tica es simplemente ambigua: el conflicto no afecta al conjunto de programas descritos por la gram&amp;aacute;tica, sino solo a la forma en que se analizan esos programas. Este suele ser el caso de los separadores y los operadores infijos asociativos, donde desea agregar un resolutor como &lt;code&gt;'((assoc &quot;|&quot;))&lt;/code&gt; . Otro caso en el que esto puede suceder es para el cl&amp;aacute;sico problema de &lt;em&gt;else colgante&lt;/em&gt; , donde usar&amp;aacute; &lt;code&gt;'((assoc &quot;else&quot; &quot;then&quot;))&lt;/code&gt; . Tambi&amp;eacute;n puede ocurrir en casos en los que el conflicto es real y realmente no se puede resolver, pero es poco probable que plantee un problema en la pr&amp;aacute;ctica.</target>
        </trans-unit>
        <trans-unit id="4957b132ab51bc30771f521b4940cb71793014c9" translate="yes" xml:space="preserve">
          <source>Other useful tools for debugging input and output problems are the dribble file (see &lt;a href=&quot;terminal-input#Terminal-Input&quot;&gt;Terminal Input&lt;/a&gt;) and the &lt;code&gt;open-termscript&lt;/code&gt; function (see &lt;a href=&quot;terminal-output#Terminal-Output&quot;&gt;Terminal Output&lt;/a&gt;).</source>
          <target state="translated">Otras herramientas &amp;uacute;tiles para depurar problemas de entrada y salida son el archivo dribble (ver &lt;a href=&quot;terminal-input#Terminal-Input&quot;&gt;Terminal Input&lt;/a&gt; ) y la funci&amp;oacute;n &lt;code&gt;open-termscript&lt;/code&gt; (ver &lt;a href=&quot;terminal-output#Terminal-Output&quot;&gt;Terminal Output&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="a49240e9e249989689d2ce97e9d81c517eb880e2" translate="yes" xml:space="preserve">
          <source>Other value</source>
          <target state="translated">Otro valor</target>
        </trans-unit>
        <trans-unit id="f3fdcd50495da9607d64876c8b19f3585d001e97" translate="yes" xml:space="preserve">
          <source>Otherwise the function &lt;code&gt;call-process&lt;/code&gt; does no redisplay, and the results become visible on the screen only when Emacs redisplays that buffer in the normal course of events.</source>
          <target state="translated">De lo contrario, el &lt;code&gt;call-process&lt;/code&gt; la funci&amp;oacute;n no se vuelve a mostrar y los resultados se vuelven visibles en la pantalla s&amp;oacute;lo cuando Emacs vuelve a mostrar ese b&amp;uacute;fer en el curso normal de los eventos.</target>
        </trans-unit>
        <trans-unit id="e5cf2c68d7f5c24121fcd7006c95c362d16d9910" translate="yes" xml:space="preserve">
          <source>Otherwise the value should be an alist that specifies which fringe indicators to display and where. Each element of the alist should have the form &lt;code&gt;(&lt;var&gt;indicator&lt;/var&gt; . &lt;var&gt;position&lt;/var&gt;)&lt;/code&gt;. Here, &lt;var&gt;indicator&lt;/var&gt; is one of &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;bottom&lt;/code&gt;, &lt;code&gt;up&lt;/code&gt;, &lt;code&gt;down&lt;/code&gt;, and &lt;code&gt;t&lt;/code&gt; (which covers all the icons not yet specified), while &lt;var&gt;position&lt;/var&gt; is one of &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt; and &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">De lo contrario, el valor debe ser una lista que especifique qu&amp;eacute; indicadores de franja mostrar y d&amp;oacute;nde. Cada elemento de la lista debe tener la forma &lt;code&gt;(&lt;var&gt;indicator&lt;/var&gt; . &lt;var&gt;position&lt;/var&gt;)&lt;/code&gt; . Aqu&amp;iacute;, el &lt;var&gt;indicator&lt;/var&gt; es uno de &lt;code&gt;top&lt;/code&gt; , &lt;code&gt;bottom&lt;/code&gt; , &lt;code&gt;up&lt;/code&gt; , &lt;code&gt;down&lt;/code&gt; y &lt;code&gt;t&lt;/code&gt; (que cubre todos los iconos a&amp;uacute;n no especificados), mientras que la &lt;var&gt;position&lt;/var&gt; es una de &lt;code&gt;left&lt;/code&gt; , &lt;code&gt;right&lt;/code&gt; y &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6cd6099948cb8e952f2e06ed3844cf9915b36c22" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;var&gt;window&lt;/var&gt; was previously used for displaying other buffers (see &lt;a href=&quot;window-history#Window-History&quot;&gt;Window History&lt;/a&gt;), the most recent buffer in that history will be displayed. In either case, if &lt;var&gt;window&lt;/var&gt; is not deleted, its &lt;code&gt;quit-restore&lt;/code&gt; parameter is reset to &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">De lo contrario, si la &lt;var&gt;window&lt;/var&gt; se utiliz&amp;oacute; anteriormente para mostrar otros b&amp;uacute;feres (consulte &lt;a href=&quot;window-history#Window-History&quot;&gt;Historial de ventanas&lt;/a&gt; ), se mostrar&amp;aacute; el b&amp;uacute;fer m&amp;aacute;s reciente de ese historial. En cualquier caso, si la &lt;var&gt;window&lt;/var&gt; no se elimina, su par&amp;aacute;metro de &lt;code&gt;quit-restore&lt;/code&gt; se restablece a &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b22d99af3628f670cc53b3c236b49d8671be213f" translate="yes" xml:space="preserve">
          <source>Otherwise, if the indentation function in &lt;code&gt;indent-line-function&lt;/code&gt; is &lt;code&gt;indent-to-left-margin&lt;/code&gt; (a trivial command that inserts a tab character), or if the variable &lt;code&gt;tab-always-indent&lt;/code&gt; specifies that a tab character ought to be inserted (see below), then it inserts a tab character.</source>
          <target state="translated">De lo contrario, si la funci&amp;oacute;n de &lt;code&gt;indent-line-function&lt;/code&gt; en indent-line-function es &lt;code&gt;indent-to-left-margin&lt;/code&gt; (un comando trivial que inserta un car&amp;aacute;cter de tabulaci&amp;oacute;n), o si la variable &lt;code&gt;tab-always-indent&lt;/code&gt; especifica que se debe insertar un car&amp;aacute;cter de tabulaci&amp;oacute;n ( ver m&amp;aacute;s abajo), luego inserta un car&amp;aacute;cter de tabulaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="4a70357a80ea185af667a6cf9db2f85e272ad161" translate="yes" xml:space="preserve">
          <source>Otherwise, it indents the current line; this is done by calling the function in &lt;code&gt;indent-line-function&lt;/code&gt;. If the line is already indented, and the value of &lt;code&gt;tab-always-indent&lt;/code&gt; is &lt;code&gt;complete&lt;/code&gt; (see below), it tries completing the text at point.</source>
          <target state="translated">De lo contrario, sangra la l&amp;iacute;nea actual; esto se hace llamando a la funci&amp;oacute;n en &lt;code&gt;indent-line-function&lt;/code&gt; . Si la l&amp;iacute;nea ya tiene sangr&amp;iacute;a y el valor de &lt;code&gt;tab-always-indent&lt;/code&gt; est&amp;aacute; &lt;code&gt;complete&lt;/code&gt; (ver m&amp;aacute;s abajo), intenta completar el texto en el punto.</target>
        </trans-unit>
        <trans-unit id="f0728e46990b904a5fc71835f81206fdedceb327" translate="yes" xml:space="preserve">
          <source>Otherwise, the base location should be a directory name. In this case, Emacs retrieves packages from this archive via ordinary file access. Such local archives are mainly useful for testing.</source>
          <target state="translated">De lo contrario,la ubicación base debería ser un nombre de directorio.En este caso,Emacs recupera los paquetes de este archivo a través de un acceso ordinario a los archivos.Estos archivos locales son principalmente útiles para hacer pruebas.</target>
        </trans-unit>
        <trans-unit id="45a47ab7c8110b367a5eb7d10e05ec778824df4d" translate="yes" xml:space="preserve">
          <source>Otherwise, the file modes of &lt;var&gt;newname&lt;/var&gt; are left unchanged if it is an existing file, and set to those of &lt;var&gt;oldname&lt;/var&gt;, masked by the default file permissions (see &lt;code&gt;set-default-file-modes&lt;/code&gt; below), if &lt;var&gt;newname&lt;/var&gt; is to be newly created. The Access Control List or SELinux context are not copied over in either case.</source>
          <target state="translated">De lo contrario, los modos de archivo de &lt;var&gt;newname&lt;/var&gt; no se modifican si se trata de un archivo existente, y se establecen en los de &lt;var&gt;oldname&lt;/var&gt; , enmascarados por los permisos de archivo predeterminados (ver &lt;code&gt;set-default-file-modes&lt;/code&gt; a continuaci&amp;oacute;n), si &lt;var&gt;newname&lt;/var&gt; se va a crear recientemente. La lista de control de acceso o el contexto de SELinux no se copian en ning&amp;uacute;n caso.</target>
        </trans-unit>
        <trans-unit id="81d57dfe0afd7a0985d57a78533c79c5a914182c" translate="yes" xml:space="preserve">
          <source>Otherwise, the symbol should be a predicate. The predicate is called with the argument, and if the predicate returns &lt;code&gt;nil&lt;/code&gt;, the specification fails and the argument is not instrumented.</source>
          <target state="translated">De lo contrario, el s&amp;iacute;mbolo deber&amp;iacute;a ser un predicado. El predicado se llama con el argumento y, si el predicado devuelve &lt;code&gt;nil&lt;/code&gt; , la especificaci&amp;oacute;n falla y el argumento no se instrumenta.</target>
        </trans-unit>
        <trans-unit id="763f06232ee2847cc0f578d2a2ffd866f636432a" translate="yes" xml:space="preserve">
          <source>Otherwise, the value must be a list of regular expressions. Then a scalable font is enabled for use if its name matches any regular expression in the list. For example,</source>
          <target state="translated">De lo contrario,el valor debe ser una lista de expresiones regulares.Entonces se habilita una fuente escalable para su uso si su nombre coincide con cualquier expresión regular de la lista.Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="c8f0909271c68b7b8449d51302ffcf15bff72083" translate="yes" xml:space="preserve">
          <source>Otherwise, the value should be a function which returns a list of the above form when called with no arguments.</source>
          <target state="translated">En caso contrario,el valor debe ser una función que devuelva una lista de la forma anterior cuando se llame sin argumentos.</target>
        </trans-unit>
        <trans-unit id="14d051441dd1704941ec3ffbfe4f559120510bb1" translate="yes" xml:space="preserve">
          <source>Otherwise, this returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">De lo contrario, devuelve &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="575a546ff3b142ba0fac4a6250e6ac440f035d5e" translate="yes" xml:space="preserve">
          <source>Our simple sample function, &lt;code&gt;(lambda (a b c) (+ a b c))&lt;/code&gt;, specifies three argument variables, so it must be called with three arguments: if you try to call it with only two arguments or four arguments, you get a &lt;code&gt;wrong-number-of-arguments&lt;/code&gt; error (see &lt;a href=&quot;errors#Errors&quot;&gt;Errors&lt;/a&gt;).</source>
          <target state="translated">Nuestra funci&amp;oacute;n de muestra simple, &lt;code&gt;(lambda (a b c) (+ a b c))&lt;/code&gt; , especifica tres variables de argumento, por lo que debe llamarse con tres argumentos: si intenta llamarla con solo dos argumentos o cuatro argumentos, obtiene un &lt;code&gt;wrong-number-of-arguments&lt;/code&gt; (ver &lt;a href=&quot;errors#Errors&quot;&gt;Errores&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="a9852d0d719ff08733d222f566af473ea8319ac5" translate="yes" xml:space="preserve">
          <source>Outer Border</source>
          <target state="translated">Frontera exterior</target>
        </trans-unit>
        <trans-unit id="d03df9879e63c94d1ef1ef625db82f7c6086fd99" translate="yes" xml:space="preserve">
          <source>Outer Frame</source>
          <target state="translated">Marco exterior</target>
        </trans-unit>
        <trans-unit id="d25d9ab5e677c4a9d400b4025bd92a3b5bab6708" translate="yes" xml:space="preserve">
          <source>Outer borders are never shown on text terminal frames and on frames generated by GTK+ routines. On MS-Windows, the outer border is emulated with the help of a one pixel wide external border. Non-toolkit builds on X allow to change the color of the outer border by setting the &lt;code&gt;border-color&lt;/code&gt; frame parameter (see &lt;a href=&quot;layout-parameters#Layout-Parameters&quot;&gt;Layout Parameters&lt;/a&gt;).</source>
          <target state="translated">Los bordes exteriores nunca se muestran en los marcos de terminales de texto ni en los marcos generados por las rutinas GTK +. En MS-Windows, el borde exterior se emula con la ayuda de un borde exterior de un p&amp;iacute;xel de ancho. Las construcciones que no son del kit de herramientas en X permiten cambiar el color del borde exterior estableciendo el par&amp;aacute;metro del marco del &lt;code&gt;border-color&lt;/code&gt; del borde (ver &lt;a href=&quot;layout-parameters#Layout-Parameters&quot;&gt;Par&amp;aacute;metros de dise&amp;ntilde;o&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="b23b7fca5f6573328ef2d805a7e0260cd5710efd" translate="yes" xml:space="preserve">
          <source>Output Functions</source>
          <target state="translated">Funciones de salida</target>
        </trans-unit>
        <trans-unit id="9a91268a8670899c3fa6018e379c6499b8b7af3e" translate="yes" xml:space="preserve">
          <source>Output Streams</source>
          <target state="translated">Corrientes de salida</target>
        </trans-unit>
        <trans-unit id="c32e9bc6a6bca97190de9cf86b1d5bfe5eb2f34a" translate="yes" xml:space="preserve">
          <source>Output from a subprocess can arrive only while Emacs is waiting: when reading terminal input (see the function &lt;code&gt;waiting-for-user-input-p&lt;/code&gt;), in &lt;code&gt;sit-for&lt;/code&gt; and &lt;code&gt;sleep-for&lt;/code&gt; (see &lt;a href=&quot;waiting#Waiting&quot;&gt;Waiting&lt;/a&gt;), in &lt;code&gt;accept-process-output&lt;/code&gt; (see &lt;a href=&quot;accepting-output#Accepting-Output&quot;&gt;Accepting Output&lt;/a&gt;), and in functions which send data to processes (see &lt;a href=&quot;input-to-processes#Input-to-Processes&quot;&gt;Input to Processes&lt;/a&gt;). This minimizes the problem of timing errors that usually plague parallel programming. For example, you can safely create a process and only then specify its buffer or filter function; no output can arrive before you finish, if the code in between does not call any primitive that waits.</source>
          <target state="translated">La salida de un subproceso puede llegar solo mientras Emacs est&amp;aacute; esperando: al leer la entrada de la terminal (ver la funci&amp;oacute;n &lt;code&gt;waiting-for-user-input-p&lt;/code&gt; ), en &lt;code&gt;sit-for&lt;/code&gt; y &lt;code&gt;sleep-for&lt;/code&gt; (ver &lt;a href=&quot;waiting#Waiting&quot;&gt;Waiting&lt;/a&gt; ), en &lt;code&gt;accept-process-output&lt;/code&gt; (ver &lt;a href=&quot;accepting-output#Accepting-Output&quot;&gt;Aceptar salida&lt;/a&gt; ), y en funciones que env&amp;iacute;an datos a procesos (ver &lt;a href=&quot;input-to-processes#Input-to-Processes&quot;&gt;Entrada a procesos&lt;/a&gt; ). Esto minimiza el problema de los errores de sincronizaci&amp;oacute;n que suelen afectar a la programaci&amp;oacute;n paralela. Por ejemplo, puede crear un proceso de forma segura y solo entonces especificar su funci&amp;oacute;n de b&amp;uacute;fer o filtro; ninguna salida puede llegar antes de que termine, si el c&amp;oacute;digo intermedio no llama a ninguna primitiva que espera.</target>
        </trans-unit>
        <trans-unit id="21c758cdd849bd8a6c5c89059360afc09cd26de1" translate="yes" xml:space="preserve">
          <source>Output from asynchronous subprocesses normally arrives only while Emacs is waiting for some sort of external event, such as elapsed time or terminal input. Occasionally it is useful in a Lisp program to explicitly permit output to arrive at a specific point, or even to wait until output arrives from a process.</source>
          <target state="translated">La salida de los subprocesos asíncronos normalmente llega sólo mientras el Emacs espera algún tipo de evento externo,como el tiempo transcurrido o la entrada de un terminal.En ocasiones es útil en un programa Lisp permitir explícitamente que la salida llegue a un punto específico,o incluso esperar a que llegue la salida de un proceso.</target>
        </trans-unit>
        <trans-unit id="0b9ca3340cc6c5af5f85b890299ce5ced2b68445" translate="yes" xml:space="preserve">
          <source>Output of messages into the</source>
          <target state="translated">La salida de los mensajes en el</target>
        </trans-unit>
        <trans-unit id="8c784b59ac07f59605bca80bc6385a0c8abe5d2b" translate="yes" xml:space="preserve">
          <source>Output trace information on function calls and returns.</source>
          <target state="translated">Salida de información de rastreo de llamadas y devoluciones de funciones.</target>
        </trans-unit>
        <trans-unit id="e4053b393b6a34936a44a25f539116ecb913583a" translate="yes" xml:space="preserve">
          <source>Outside Emacs, characters can be represented in many different encodings, such as ISO-8859-1, GB-2312, Big-5, etc. Emacs converts between these external encodings and its internal representation, as appropriate, when it reads text into a buffer or a string, or when it writes text to a disk file or passes it to some other process.</source>
          <target state="translated">Fuera de Emacs,los personajes pueden ser representados en muchas codificaciones diferentes,como ISO-8859-1,GB-2312,Big-5,etc.Emacs convierte entre estas codificaciones externas y su representación interna,según corresponda,cuando lee el texto en un búfer o una cadena,o cuando escribe el texto en un archivo de disco o lo pasa a algún otro proceso.</target>
        </trans-unit>
        <trans-unit id="c0a2a08afab0fbd40ca04201e1206a333c99a403" translate="yes" xml:space="preserve">
          <source>Outside of Emacs, on systems with job control, the stop character (usually</source>
          <target state="translated">Fuera del Emacs,en los sistemas con control del trabajo,el personaje de la parada (normalmente</target>
        </trans-unit>
        <trans-unit id="b22b6e787ba475871fd62e316803a0a0753ded2f" translate="yes" xml:space="preserve">
          <source>Over void parts of the window (parts that do not correspond to any of the buffer contents), the mouse pointer usually uses the &lt;code&gt;arrow&lt;/code&gt; style, but you can specify a different style (one of those above) by setting &lt;code&gt;void-text-area-pointer&lt;/code&gt;.</source>
          <target state="translated">Sobre las partes vac&amp;iacute;as de la ventana (partes que no corresponden a ninguno de los contenidos del b&amp;uacute;fer), el puntero del mouse generalmente usa el estilo de &lt;code&gt;arrow&lt;/code&gt; , pero puede especificar un estilo diferente (uno de los anteriores) configurando &lt;code&gt;void-text-area-pointer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0fea430e693a45386a3c9636b829f4fd78379194" translate="yes" xml:space="preserve">
          <source>Overall, the key-value pairs passed to &lt;var&gt;function&lt;/var&gt; describe all the values stored in &lt;var&gt;char-table&lt;/var&gt;.</source>
          <target state="translated">En general, los pares clave-valor pasados ​​a la &lt;var&gt;function&lt;/var&gt; describen todos los valores almacenados en &lt;var&gt;char-table&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="c67eb8bae9c49b877d15564d28cb90029ac13ef6" translate="yes" xml:space="preserve">
          <source>Overlay Properties</source>
          <target state="translated">Propiedades de superposición</target>
        </trans-unit>
        <trans-unit id="7e2d14eedf83ae2cc686557be0c0dade27cbfcb8" translate="yes" xml:space="preserve">
          <source>Overlay Type</source>
          <target state="translated">Tipo de superposición</target>
        </trans-unit>
        <trans-unit id="4e8e813f097ac9fdf229d20b7105e0cc57cfc922" translate="yes" xml:space="preserve">
          <source>Overlay properties are like text properties in that the properties that alter how a character is displayed can come from either source. But in most respects they are different. See &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Text Properties&lt;/a&gt;, for comparison.</source>
          <target state="translated">Las propiedades de superposici&amp;oacute;n son como propiedades de texto en el sentido de que las propiedades que alteran la forma en que se muestra un car&amp;aacute;cter pueden provenir de cualquier fuente. Pero en la mayor&amp;iacute;a de los aspectos son diferentes. Consulte &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Propiedades del texto&lt;/a&gt; para comparar.</target>
        </trans-unit>
        <trans-unit id="30f888d222b77006610001ff65a62036e76c8b9f" translate="yes" xml:space="preserve">
          <source>Overlays</source>
          <target state="translated">Overlays</target>
        </trans-unit>
        <trans-unit id="7436ded961ede3d7e72f8b002fd2f760f034b992" translate="yes" xml:space="preserve">
          <source>Overlays also support the &lt;code&gt;modification-hooks&lt;/code&gt; property, but the details are somewhat different (see &lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;Overlay Properties&lt;/a&gt;).</source>
          <target state="translated">Las superposiciones tambi&amp;eacute;n admiten la propiedadmodificaci&amp;oacute;n &lt;code&gt;modification-hooks&lt;/code&gt; , pero los detalles son algo diferentes (consulte &lt;a href=&quot;overlay-properties#Overlay-Properties&quot;&gt;Propiedades de superposici&amp;oacute;n&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="38346ff2dbbd0c10b491d604ab1d0f5bf067809c" translate="yes" xml:space="preserve">
          <source>Overriding syntax with text properties.</source>
          <target state="translated">Anulando la sintaxis con las propiedades del texto.</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="3b314bcbaf594e58e02b7f1ac94d0a07d164ad50" translate="yes" xml:space="preserve">
          <source>Overview of Markers</source>
          <target state="translated">Visión general de los marcadores</target>
        </trans-unit>
        <trans-unit id="e5dff67285e4f2b89cea9a5461f21bbf12d615e1" translate="yes" xml:space="preserve">
          <source>Overview of customizing Font Lock.</source>
          <target state="translated">Visión general de la personalización de Font Lock.</target>
        </trans-unit>
        <trans-unit id="48001e2fa21457daa7eb4268da77364c19623e16" translate="yes" xml:space="preserve">
          <source>Overview of mouse events.</source>
          <target state="translated">Resumen de los eventos del ratón.</target>
        </trans-unit>
        <trans-unit id="f42cdff5bec245ffb3bc5a0b0105f795984699c8" translate="yes" xml:space="preserve">
          <source>Overview of streams, reading and printing.</source>
          <target state="translated">Visión general de las corrientes,la lectura y la impresión.</target>
        </trans-unit>
        <trans-unit id="511993d3c99719e38a6779073019dacd7178ddb9" translate="yes" xml:space="preserve">
          <source>P</source>
          <target state="translated">P</target>
        </trans-unit>
        <trans-unit id="d613d88cb2d86f484f6f82d44ac1fc60722abe20" translate="yes" xml:space="preserve">
          <source>PDF</source>
          <target state="translated">PDF</target>
        </trans-unit>
        <trans-unit id="1d7fd5d567d57918b31b5a2025c0ead430339e0b" translate="yes" xml:space="preserve">
          <source>PF1</source>
          <target state="translated">PF1</target>
        </trans-unit>
        <trans-unit id="dde57e820d65c87a0777da46aba7cd35a0c8436a" translate="yes" xml:space="preserve">
          <source>PID</source>
          <target state="translated">PID</target>
        </trans-unit>
        <trans-unit id="0c95dc6163ff0d09e82f44e7c50db7ad6b089bf3" translate="yes" xml:space="preserve">
          <source>PM</source>
          <target state="translated">PM</target>
        </trans-unit>
        <trans-unit id="70fe60b7dfe0837f2c69677bfef128c134937b16" translate="yes" xml:space="preserve">
          <source>PNG</source>
          <target state="translated">PNG</target>
        </trans-unit>
        <trans-unit id="74235b074241ce94a5e09f007b23a0ca401ea696" translate="yes" xml:space="preserve">
          <source>POSIX Regular Expression Searching</source>
          <target state="translated">Búsqueda de expresiones regulares POSIX</target>
        </trans-unit>
        <trans-unit id="871ee878f58ebcf07fad71fd2bcebbda6088639b" translate="yes" xml:space="preserve">
          <source>POSIX specifies several environment variables that can affect how Emacs behaves. Any environment variable whose name consists entirely of uppercase ASCII letters, digits, and the underscore may affect the internal behavior of Emacs. Emacs uses several such variables, e.g., &lt;code&gt;EMACSLOADPATH&lt;/code&gt;. See &lt;a href=&quot;library-search#Library-Search&quot;&gt;Library Search&lt;/a&gt;. On some platforms some environment variables (e.g., &lt;code&gt;PATH&lt;/code&gt;, &lt;code&gt;POSIXLY_CORRECT&lt;/code&gt;, &lt;code&gt;SHELL&lt;/code&gt;, &lt;code&gt;TMPDIR&lt;/code&gt;) need to have properly-configured values in order to get standard behavior for any utility Emacs might invoke. Even seemingly-benign variables like &lt;code&gt;TZ&lt;/code&gt; may have security implications. See &lt;a href=&quot;system-environment#System-Environment&quot;&gt;System Environment&lt;/a&gt;.</source>
          <target state="translated">POSIX especifica varias variables de entorno que pueden afectar el comportamiento de Emacs. Cualquier variable de entorno cuyo nombre consista enteramente en letras ASCII may&amp;uacute;sculas, d&amp;iacute;gitos y el gui&amp;oacute;n bajo puede afectar el comportamiento interno de Emacs. Emacs usa varias de estas variables, por ejemplo, &lt;code&gt;EMACSLOADPATH&lt;/code&gt; . Consulte &lt;a href=&quot;library-search#Library-Search&quot;&gt;B&amp;uacute;squeda de biblioteca&lt;/a&gt; . En algunas plataformas, algunas variables de entorno (por ejemplo, &lt;code&gt;PATH&lt;/code&gt; , &lt;code&gt;POSIXLY_CORRECT&lt;/code&gt; , &lt;code&gt;SHELL&lt;/code&gt; , &lt;code&gt;TMPDIR&lt;/code&gt; ) necesitan tener valores configurados correctamente para obtener un comportamiento est&amp;aacute;ndar para cualquier utilidad que Emacs pueda invocar. Incluso las variables aparentemente benignas como &lt;code&gt;TZ&lt;/code&gt; pueden tener implicaciones de seguridad. Consulte &lt;a href=&quot;system-environment#System-Environment&quot;&gt;Entorno del sistema&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="31021705d55f66068349f6ead54a6f4f1f1f4e1c" translate="yes" xml:space="preserve">
          <source>Package-Requires</source>
          <target state="translated">Package-Requires</target>
        </trans-unit>
        <trans-unit id="400112f99c45dae97ae81ee287e883c5967448d7" translate="yes" xml:space="preserve">
          <source>Package-Version</source>
          <target state="translated">Package-Version</target>
        </trans-unit>
        <trans-unit id="c26ef24c1e9c01425e91a34b0caa85ab70d66bf6" translate="yes" xml:space="preserve">
          <source>Packages distributed as part of Emacs that use the &lt;code&gt;:package-version&lt;/code&gt; keyword must also update the &lt;code&gt;customize-package-emacs-version-alist&lt;/code&gt; variable.</source>
          <target state="translated">Los paquetes distribuidos como parte de Emacs que usan la palabra clave &lt;code&gt;:package-version&lt;/code&gt; tambi&amp;eacute;n deben actualizar la variable &lt;code&gt;customize-package-emacs-version-alist&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3a39b68c35be609fae3db651a70893a29f102145" translate="yes" xml:space="preserve">
          <source>Packaging</source>
          <target state="translated">Packaging</target>
        </trans-unit>
        <trans-unit id="42f9009cd9572c10d5a27ab040ba2ba3d71640ce" translate="yes" xml:space="preserve">
          <source>Packaging Basics</source>
          <target state="translated">Conceptos básicos de embalaje</target>
        </trans-unit>
        <trans-unit id="e0fb56429e1a2ef765c166a971fbafb2df17fb78" translate="yes" xml:space="preserve">
          <source>Packing and Unpacking Byte Arrays</source>
          <target state="translated">Embalaje y desembalaje de conjuntos de bytes</target>
        </trans-unit>
        <trans-unit id="7cba3e212dcc3d05c7ed8450a9553450544ee41d" translate="yes" xml:space="preserve">
          <source>PageDown</source>
          <target state="translated">PageDown</target>
        </trans-unit>
        <trans-unit id="2e2bbfe16d99367325be3ba50291408aefa81595" translate="yes" xml:space="preserve">
          <source>Paired delimiters: &amp;lsquo;</source>
          <target state="translated">Delimitadores emparejados: '</target>
        </trans-unit>
        <trans-unit id="d4c7c2e3ad59ecdbc81f52c2333acc0ab45fc3f5" translate="yes" xml:space="preserve">
          <source>Pairs of characters are compared according to their character codes. Keep in mind that lower case letters have higher numeric values in the</source>
          <target state="translated">Los pares de caracteres se comparan según sus códigos de caracteres.Tenga en cuenta que las letras minúsculas tienen valores numéricos más altos en el</target>
        </trans-unit>
        <trans-unit id="2836a2cd0203ab3c4a413cfd2f0b910b3a2b2fef" translate="yes" xml:space="preserve">
          <source>Parameters common for all frames on terminal.</source>
          <target state="translated">Parámetros comunes para todos los cuadros de la terminal.</target>
        </trans-unit>
        <trans-unit id="82045ada54eb55bca7be07c13568a28bcd4565bf" translate="yes" xml:space="preserve">
          <source>Parameters describing the X- and Y-offsets of a frame are always measured in pixels. For a normal, non-child frame they specify the frame&amp;rsquo;s outer position (see &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Frame Geometry&lt;/a&gt;) relative to its display&amp;rsquo;s origin. For a child frame (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;) they specify the frame&amp;rsquo;s outer position relative to the native position of the frame&amp;rsquo;s parent frame. (Note that none of these parameters is meaningful on TTY frames.)</source>
          <target state="translated">Los par&amp;aacute;metros que describen los desplazamientos X e Y de un fotograma siempre se miden en p&amp;iacute;xeles. Para un marco normal, no secundario, especifican la posici&amp;oacute;n exterior del marco (ver &lt;a href=&quot;frame-geometry#Frame-Geometry&quot;&gt;Geometr&amp;iacute;a del marco&lt;/a&gt; ) en relaci&amp;oacute;n con el origen de su visualizaci&amp;oacute;n. Para un marco secundario (consulte &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Marcos&lt;/a&gt; secundarios ), especifican la posici&amp;oacute;n exterior del marco en relaci&amp;oacute;n con la posici&amp;oacute;n nativa del marco principal del marco. (Tenga en cuenta que ninguno de estos par&amp;aacute;metros es significativo en tramas TTY).</target>
        </trans-unit>
        <trans-unit id="6fe4da0442db9ec376fd1ebd0885e7871dd6c06a" translate="yes" xml:space="preserve">
          <source>Parameters for interacting with other frames.</source>
          <target state="translated">Parámetros para interactuar con otros cuadros.</target>
        </trans-unit>
        <trans-unit id="187e29395efb81d6e368498d4c21b83faa4f6bac" translate="yes" xml:space="preserve">
          <source>Parameters for resizing and moving frames with the mouse.</source>
          <target state="translated">Parámetros para redimensionar y mover los cuadros con el ratón.</target>
        </trans-unit>
        <trans-unit id="3304283cc7ef5bd20c4b8b92ab9f7d659a1d933a" translate="yes" xml:space="preserve">
          <source>Parameters that affect parsing.</source>
          <target state="translated">Parámetros que afectan al análisis.</target>
        </trans-unit>
        <trans-unit id="662b563f3e8a80a489f1f7aa600b993494c4ca80" translate="yes" xml:space="preserve">
          <source>Parameters that are fundamental.</source>
          <target state="translated">Parámetros que son fundamentales.</target>
        </trans-unit>
        <trans-unit id="71dcb10469ca71f255f80878d6bb08653414646f" translate="yes" xml:space="preserve">
          <source>Parameters to Control Parsing</source>
          <target state="translated">Parámetros para controlar el análisis</target>
        </trans-unit>
        <trans-unit id="3a77d88b486083a5b1a286e032cc2eaf602cab89" translate="yes" xml:space="preserve">
          <source>Parent mode for buffers containing tabulated data.</source>
          <target state="translated">Modo padre para los buffers que contienen datos tabulados.</target>
        </trans-unit>
        <trans-unit id="00e169811424fee10d949efd728dc5985c0c3f1b" translate="yes" xml:space="preserve">
          <source>Parent type: &lt;code&gt;array&lt;/code&gt;.</source>
          <target state="translated">Tipo de padre: &lt;code&gt;array&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc475e11afc91bfdb5091ef734af47c9e9ec4c73" translate="yes" xml:space="preserve">
          <source>Parent type: &lt;code&gt;list&lt;/code&gt;.</source>
          <target state="translated">Tipo de padre: &lt;code&gt;list&lt;/code&gt; a .</target>
        </trans-unit>
        <trans-unit id="f98d45fa291377ce2d003ec40640eeb0e4c79445" translate="yes" xml:space="preserve">
          <source>Parent type: &lt;code&gt;number&lt;/code&gt;.</source>
          <target state="translated">Tipo de padre: &lt;code&gt;number&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="defc0b42f93cf65435dd3de8a8247bacb70982ad" translate="yes" xml:space="preserve">
          <source>Parent type: &lt;code&gt;sequence&lt;/code&gt;.</source>
          <target state="translated">Tipo de padre: &lt;code&gt;sequence&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1b04c0c36b344236da631ede7b83372f26428b9" translate="yes" xml:space="preserve">
          <source>Parent type: &lt;code&gt;symbol&lt;/code&gt;</source>
          <target state="translated">Tipo de padre: &lt;code&gt;symbol&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7a33d7f2f11c1fed9edd1a0648e4921a4b929017" translate="yes" xml:space="preserve">
          <source>Parent windows do not display buffers, and play little role in display except to shape their child windows. Emacs Lisp programs cannot directly manipulate parent windows; they operate on the windows at the leaves of the tree, which actually display buffers.</source>
          <target state="translated">Las ventanas de los padres no tienen amortiguadores,y juegan poco papel en la exhibición excepto para dar forma a las ventanas de sus hijos.Los programas Emacs Lisp no pueden manipular directamente las ventanas padre;operan en las ventanas de las hojas del árbol,que en realidad muestran buffers.</target>
        </trans-unit>
        <trans-unit id="a9a6581c08789385ed2a0f325a688a832347f188" translate="yes" xml:space="preserve">
          <source>Parser State</source>
          <target state="translated">Estado Parser</target>
        </trans-unit>
        <trans-unit id="4526a4b5852177789cf8e9bfecfe9da2131c54cb" translate="yes" xml:space="preserve">
          <source>Parsing Expressions</source>
          <target state="translated">Expresiones de análisis</target>
        </trans-unit>
        <trans-unit id="e231765095ab882fb7fcf938cb7f6e8c8c4b17f6" translate="yes" xml:space="preserve">
          <source>Parsing HTML and XML</source>
          <target state="translated">Análisis de HTML y XML</target>
        </trans-unit>
        <trans-unit id="fe6bf59025bd0e2925b6d89834e3acc681649e86" translate="yes" xml:space="preserve">
          <source>Parsing HTML and XML.</source>
          <target state="translated">Análisis de HTML y XML.</target>
        </trans-unit>
        <trans-unit id="08eb2ab878002b2ff0551a7f614ba8a4ce7a1b19" translate="yes" xml:space="preserve">
          <source>Parsing across a specified region.</source>
          <target state="translated">Análisis a través de una región específica.</target>
        </trans-unit>
        <trans-unit id="f40cea5e85407269571363df9bd9391ce3f4ad7b" translate="yes" xml:space="preserve">
          <source>Parsing and Formatting Times</source>
          <target state="translated">Tiempos de análisis y formato</target>
        </trans-unit>
        <trans-unit id="ac97cfccea0017cf98319b0ca0948a055efe585f" translate="yes" xml:space="preserve">
          <source>Parsing and generating JSON values</source>
          <target state="translated">Analizando y generando valores JSON</target>
        </trans-unit>
        <trans-unit id="d9c9a717935cc6b02f547040191d6f2545e876ed" translate="yes" xml:space="preserve">
          <source>Parsing and generating JSON values.</source>
          <target state="translated">Analizando y generando valores JSON.</target>
        </trans-unit>
        <trans-unit id="5217da08a22ae64804bc400d2407ec040403c3c7" translate="yes" xml:space="preserve">
          <source>Parsing balanced expressions using the syntax table.</source>
          <target state="translated">Análisis de expresiones equilibradas usando la tabla de sintaxis.</target>
        </trans-unit>
        <trans-unit id="cfd676e977daa56fd9d54f7c8b9c4143d00aec36" translate="yes" xml:space="preserve">
          <source>Parsing geometry specifications.</source>
          <target state="translated">Analizando las especificaciones de la geometría.</target>
        </trans-unit>
        <trans-unit id="094f3d7cfff68518244aec1c04b390842b32aced" translate="yes" xml:space="preserve">
          <source>Particular properties with special meanings.</source>
          <target state="translated">Propiedades particulares con significados especiales.</target>
        </trans-unit>
        <trans-unit id="7bdf4b7194fa08f8c2706fdc986660b700d98bb5" translate="yes" xml:space="preserve">
          <source>Parts of words in human languages. These are typically used in variable and command names in programs. All upper- and lower-case letters, and the digits, are typically word constituents.</source>
          <target state="translated">Partes de palabras en idiomas humanos.Se usan típicamente en los nombres de variables y comandos de los programas.Todas las letras mayúsculas y minúsculas,y los dígitos,son típicamente constituyentes de la palabra.</target>
        </trans-unit>
        <trans-unit id="3fe618d6f369040b19cdcd8393043d5b040f5577" translate="yes" xml:space="preserve">
          <source>Pattern-Matching Conditional</source>
          <target state="translated">Condición de coincidencia de patrones</target>
        </trans-unit>
        <trans-unit id="4849c1facbc8d17ea4d09ce55cc45604ad2f39f1" translate="yes" xml:space="preserve">
          <source>Pcase patterns not only express a condition on the form of the objects they can match, but they can also extract sub-fields of those objects. For example we can extract 2 elements from a list that is the value of the variable &lt;code&gt;my-list&lt;/code&gt; with the following code:</source>
          <target state="translated">Los patrones de pcase no solo expresan una condici&amp;oacute;n sobre la forma de los objetos que pueden hacer coincidir, sino que tambi&amp;eacute;n pueden extraer subcampos de esos objetos. Por ejemplo, podemos extraer 2 elementos de una lista que es el valor de la variable &lt;code&gt;my-list&lt;/code&gt; con el siguiente c&amp;oacute;digo:</target>
        </trans-unit>
        <trans-unit id="f88d30015d65ab6f358329e5144fe34af976d4ca" translate="yes" xml:space="preserve">
          <source>People are sometimes tempted to create a variable whose value is a face name. In the vast majority of cases, this is not necessary; the usual procedure is to define a face with &lt;code&gt;defface&lt;/code&gt;, and then use its name directly.</source>
          <target state="translated">Las personas a veces se sienten tentadas a crear una variable cuyo valor sea el nombre de un rostro. En la gran mayor&amp;iacute;a de los casos, esto no es necesario; el procedimiento habitual es definir una cara con &lt;code&gt;defface&lt;/code&gt; y luego usar su nombre directamente.</target>
        </trans-unit>
        <trans-unit id="16d67645704093cc2992f9742e395e378a4a7842" translate="yes" xml:space="preserve">
          <source>People do not write byte-code; that job is left to the byte compiler. But we provide a disassembler to satisfy a cat-like curiosity. The disassembler converts the byte-compiled code into human-readable form.</source>
          <target state="translated">La gente no escribe el código de bytes;ese trabajo se deja al compilador de bytes.Pero proporcionamos un desensamblador para satisfacer una curiosidad felina.El desensamblador convierte el código compilado por bytes en una forma legible para los humanos.</target>
        </trans-unit>
        <trans-unit id="d246b3473da94f1b94146151c91359171732e430" translate="yes" xml:space="preserve">
          <source>People often use &lt;code&gt;global-set-key&lt;/code&gt; in their init files (see &lt;a href=&quot;init-file#Init-File&quot;&gt;Init File&lt;/a&gt;) for simple customization. For example,</source>
          <target state="translated">Las personas a menudo usan &lt;code&gt;global-set-key&lt;/code&gt; en sus archivos de inicio (consulte &lt;a href=&quot;init-file#Init-File&quot;&gt;Archivo de inicio&lt;/a&gt; ) para una personalizaci&amp;oacute;n simple. Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="26e74f2999a60551463cceee8a64dda32c66da77" translate="yes" xml:space="preserve">
          <source>Perform &lt;var&gt;action&lt;/var&gt; if the user clicks on a button.</source>
          <target state="translated">Realice una &lt;var&gt;action&lt;/var&gt; si el usuario hace clic en un bot&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="6aa0734a37f43c716d45db437864376f51cf5a6d" translate="yes" xml:space="preserve">
          <source>Perform a quit right away. Only &lt;code&gt;y-or-n-p&lt;/code&gt; and related functions use this answer.</source>
          <target state="translated">Deje de fumar de inmediato. Solo &lt;code&gt;y-or-n-p&lt;/code&gt; y las funciones relacionadas usan esta respuesta.</target>
        </trans-unit>
        <trans-unit id="69869cd815dc383536f8d4d158ed0475269499de" translate="yes" xml:space="preserve">
          <source>Perform destructuring binding of variables according to &lt;var&gt;bindings&lt;/var&gt;, and then evaluate &lt;var&gt;body&lt;/var&gt;.</source>
          <target state="translated">Realice la desestructuraci&amp;oacute;n de la vinculaci&amp;oacute;n de variables seg&amp;uacute;n las &lt;var&gt;bindings&lt;/var&gt; y luego eval&amp;uacute;e el &lt;var&gt;body&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="c54c145e4d62a63d0c1782ba7e752fadb7b82eec" translate="yes" xml:space="preserve">
          <source>Perform the action specified by a button at location &lt;var&gt;pos&lt;/var&gt;. &lt;var&gt;pos&lt;/var&gt; may be either a buffer position or a mouse-event. If &lt;var&gt;use-mouse-action&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, or &lt;var&gt;pos&lt;/var&gt; is a mouse-event (see &lt;a href=&quot;mouse-events#Mouse-Events&quot;&gt;Mouse Events&lt;/a&gt;), try to invoke the button&amp;rsquo;s &lt;code&gt;mouse-action&lt;/code&gt; property instead of &lt;code&gt;action&lt;/code&gt;; if the button has no &lt;code&gt;mouse-action&lt;/code&gt; property, use &lt;code&gt;action&lt;/code&gt; as normal. &lt;var&gt;pos&lt;/var&gt; defaults to point, except when &lt;code&gt;push-button&lt;/code&gt; is invoked interactively as the result of a mouse-event, in which case, the mouse event&amp;rsquo;s position is used. If there&amp;rsquo;s no button at &lt;var&gt;pos&lt;/var&gt;, do nothing and return &lt;code&gt;nil&lt;/code&gt;, otherwise return &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">Realice la acci&amp;oacute;n especificada por un bot&amp;oacute;n en la posici&amp;oacute;n &lt;var&gt;pos&lt;/var&gt; . &lt;var&gt;pos&lt;/var&gt; puede ser una posici&amp;oacute;n de b&amp;uacute;fer o un evento de mouse. Si &lt;var&gt;use-mouse-action&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; , o &lt;var&gt;pos&lt;/var&gt; es un mouse-event (ver &lt;a href=&quot;mouse-events#Mouse-Events&quot;&gt;Mouse Events&lt;/a&gt; ), intente invocar la propiedad &lt;code&gt;mouse-action&lt;/code&gt; del bot&amp;oacute;n en lugar de &lt;code&gt;action&lt;/code&gt; ; si el bot&amp;oacute;n no tiene la propiedad de &lt;code&gt;mouse-action&lt;/code&gt; , use la &lt;code&gt;action&lt;/code&gt; como de costumbre. &lt;var&gt;pos&lt;/var&gt; toma por defecto el punto, excepto cuando el &lt;code&gt;push-button&lt;/code&gt; se invoca de forma interactiva como resultado de un evento del mouse, en cuyo caso, se usa la posici&amp;oacute;n del evento del mouse. Si no hay un bot&amp;oacute;n en la &lt;var&gt;pos&lt;/var&gt; ici&amp;oacute;n, no haga nada y devuelva &lt;code&gt;nil&lt;/code&gt; , de lo contrario devuelva &lt;code&gt;t&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f225f76cbcb682ebabbd6df30985ed39beadca0" translate="yes" xml:space="preserve">
          <source>Perform the specified window scroll operation, then ask the same question again. Only &lt;code&gt;y-or-n-p&lt;/code&gt; and related functions use this answer.</source>
          <target state="translated">Realice la operaci&amp;oacute;n de desplazamiento de ventana especificada, luego vuelva a hacer la misma pregunta. Solo &lt;code&gt;y-or-n-p&lt;/code&gt; y las funciones relacionadas usan esta respuesta.</target>
        </trans-unit>
        <trans-unit id="67a71f8eb164bf8cbebbd57b3abbfb3d805ffe84" translate="yes" xml:space="preserve">
          <source>Performance of Byte-Compiled Code</source>
          <target state="translated">Ejecución del código compilado por bytes</target>
        </trans-unit>
        <trans-unit id="6547e00c11db8db176592a59424033b3f90c9a4b" translate="yes" xml:space="preserve">
          <source>Piecemeal Specification</source>
          <target state="translated">Especificaciones parciales</target>
        </trans-unit>
        <trans-unit id="8a2c6ee815e7a7247ddacfd3b50b4d7a7829a89f" translate="yes" xml:space="preserve">
          <source>Pixel Specification for Spaces</source>
          <target state="translated">Especificación de los píxeles para los espacios</target>
        </trans-unit>
        <trans-unit id="e342bbd9ca43541fd7f27aae1acd3394adc60779" translate="yes" xml:space="preserve">
          <source>Place a &lt;code&gt;font-lock-multiline&lt;/code&gt; property on the construct. This will rehighlight the whole construct if any part of it is changed. In some cases you can do this automatically by setting the &lt;code&gt;font-lock-multiline&lt;/code&gt; variable, which see.</source>
          <target state="translated">Coloque una propiedad &lt;code&gt;font-lock-multiline&lt;/code&gt; en la construcci&amp;oacute;n. Esto volver&amp;aacute; a resaltar toda la construcci&amp;oacute;n si se cambia alguna parte. En algunos casos, puede hacer esto autom&amp;aacute;ticamente configurando la variable &lt;code&gt;font-lock-multiline&lt;/code&gt; , que vea.</target>
        </trans-unit>
        <trans-unit id="c235c05182119ad368fe267076dee6d0dd6a6b9c" translate="yes" xml:space="preserve">
          <source>Place a &lt;code&gt;jit-lock-defer-multiline&lt;/code&gt; property on the construct. This works only if &lt;code&gt;jit-lock-contextually&lt;/code&gt; is used, and with the same delay before rehighlighting, but like &lt;code&gt;font-lock-multiline&lt;/code&gt;, it also handles the case where highlighting depends on subsequent lines.</source>
          <target state="translated">Coloque una propiedad &lt;code&gt;jit-lock-defer-multiline&lt;/code&gt; en la construcci&amp;oacute;n. Esto solo funciona si se usa &lt;code&gt;jit-lock-contextually&lt;/code&gt; , y con el mismo retraso antes de volver a resaltar, pero como &lt;code&gt;font-lock-multiline&lt;/code&gt; , tambi&amp;eacute;n maneja el caso en el que el resaltado depende de las l&amp;iacute;neas siguientes.</target>
        </trans-unit>
        <trans-unit id="0892bc999ffda43cddb1e182b36617e30f0fe235" translate="yes" xml:space="preserve">
          <source>Playing sounds on the computer&amp;rsquo;s speaker.</source>
          <target state="translated">Reproducci&amp;oacute;n de sonidos en el altavoz de la computadora.</target>
        </trans-unit>
        <trans-unit id="061394dac9aea5d18455df9eaa1d0cd858c9f0b8" translate="yes" xml:space="preserve">
          <source>Please answer y or n.</source>
          <target state="translated">Por favor,responda sí o no.</target>
        </trans-unit>
        <trans-unit id="6a490ec11b9140306205d30629596595e9b6e94f" translate="yes" xml:space="preserve">
          <source>Please answer yes or no.</source>
          <target state="translated">Por favor,responda sí o no.</target>
        </trans-unit>
        <trans-unit id="71ece59413670b96fc75ee700d7e27c649f7e924" translate="yes" xml:space="preserve">
          <source>Please send comments and corrections using</source>
          <target state="translated">Por favor,envíe sus comentarios y correcciones usando</target>
        </trans-unit>
        <trans-unit id="f79a28423ed1ae0232efb54ad41227d0955084f3" translate="yes" xml:space="preserve">
          <source>Point</source>
          <target state="translated">Point</target>
        </trans-unit>
        <trans-unit id="f5cc952a1d9de36117c7758546bd79fa0d592285" translate="yes" xml:space="preserve">
          <source>Point (2) implies that a &lt;code&gt;:weight black&lt;/code&gt; attribute will be satisfied by any display that can display bold, as will &lt;code&gt;:foreground &quot;yellow&quot;&lt;/code&gt; as long as some yellowish color can be displayed, but &lt;code&gt;:slant italic&lt;/code&gt; will &lt;em&gt;not&lt;/em&gt; be satisfied by the tty display code&amp;rsquo;s automatic substitution of a dim face for italic.</source>
          <target state="translated">Punto (2) implica que una &lt;code&gt;:weight black&lt;/code&gt; atributo ser&amp;aacute; satisfecho por cualquier pantalla que puede mostrar en negrita, como voluntad &lt;code&gt;:foreground &quot;yellow&quot;&lt;/code&gt; , siempre y cuando un poco de color amarillento se puede mostrar, pero &lt;code&gt;:slant italic&lt;/code&gt; ser&amp;aacute; &lt;em&gt;no&lt;/em&gt; ser satisfecha por el TTY la sustituci&amp;oacute;n autom&amp;aacute;tica del c&amp;oacute;digo de visualizaci&amp;oacute;n de una cara atenuada por cursiva.</target>
        </trans-unit>
        <trans-unit id="396cf0edbfa0128fdb159e61630df3d416f1062f" translate="yes" xml:space="preserve">
          <source>Point and the mark, as two numeric arguments, smallest first. This is the only code letter that specifies two successive arguments rather than one. This will signal an error if the mark is not set in the buffer which is current when the command is invoked. No I/O.</source>
          <target state="translated">El punto y la marca,como dos argumentos numéricos,el más pequeño primero.Esta es la única letra del código que especifica dos argumentos sucesivos en lugar de uno.Esto señalará un error si la marca no se establece en la memoria intermedia que está vigente cuando se invoca el comando.No hay E/S.</target>
        </trans-unit>
        <trans-unit id="607e97203b9ceed3b508490569d375e75af49959" translate="yes" xml:space="preserve">
          <source>Pointer Shape</source>
          <target state="translated">La forma del puntero</target>
        </trans-unit>
        <trans-unit id="952493c99caa2adef127c34f7eb386dd95d6f98f" translate="yes" xml:space="preserve">
          <source>Polymorphism, Emacs-style.</source>
          <target state="translated">Polimorfismo,al estilo de Emacs.</target>
        </trans-unit>
        <trans-unit id="ed7450dfdd1d277c3cabc1ce06c43cba4a362b92" translate="yes" xml:space="preserve">
          <source>Pop-Up Menus</source>
          <target state="translated">Menús desplegables</target>
        </trans-unit>
        <trans-unit id="5307f05e0199e2333e229d7e2d00200cc6d0db03" translate="yes" xml:space="preserve">
          <source>Popping up a new window will fail if there is not enough space on the selected frame. In an uncustomized Emacs it typically fails when there are already two windows on a frame. For example, if you now type</source>
          <target state="translated">Si no hay suficiente espacio en el cuadro seleccionado,una nueva ventana fallará.En un Emacs no personalizado normalmente falla cuando ya hay dos ventanas en un marco.Por ejemplo,si ahora escribes</target>
        </trans-unit>
        <trans-unit id="a6a8cdd50e41aeb0ad1784d8f1195a61e89f7520" translate="yes" xml:space="preserve">
          <source>Position Parameters</source>
          <target state="translated">Parámetros de posición</target>
        </trans-unit>
        <trans-unit id="fcd7e6b774c8f47ead8ead0ed8f33c8f9f736a14" translate="yes" xml:space="preserve">
          <source>Position of the top-left corner and size of the work area (usable space) in pixels as &amp;lsquo;</source>
          <target state="translated">Posici&amp;oacute;n de la esquina superior izquierda y tama&amp;ntilde;o del &amp;aacute;rea de trabajo (espacio utilizable) en p&amp;iacute;xeles como '</target>
        </trans-unit>
        <trans-unit id="e7f9862a7c40fe020b33ccbf1989aac5bbb93333" translate="yes" xml:space="preserve">
          <source>Position of the top-left corner of the monitor&amp;rsquo;s screen and its size, in pixels, as &amp;lsquo;</source>
          <target state="translated">Posici&amp;oacute;n de la esquina superior izquierda de la pantalla del monitor y su tama&amp;ntilde;o, en p&amp;iacute;xeles, como '</target>
        </trans-unit>
        <trans-unit id="cd4683fadf7005eca07e4d6267ddbb19ebcb91fa" translate="yes" xml:space="preserve">
          <source>Positions</source>
          <target state="translated">Positions</target>
        </trans-unit>
        <trans-unit id="da11d4c9a25e9c8a4126db50b558133457b0ac80" translate="yes" xml:space="preserve">
          <source>Positions are usually represented as integers starting from 1, but can also be represented as &lt;em&gt;markers&lt;/em&gt;&amp;mdash;special objects that relocate automatically when text is inserted or deleted so they stay with the surrounding characters. Functions that expect an argument to be a position (an integer), but accept a marker as a substitute, normally ignore which buffer the marker points into; they convert the marker to an integer, and use that integer, exactly as if you had passed the integer as the argument, even if the marker points to the wrong buffer. A marker that points nowhere cannot convert to an integer; using it instead of an integer causes an error. See &lt;a href=&quot;markers#Markers&quot;&gt;Markers&lt;/a&gt;.</source>
          <target state="translated">Las posiciones generalmente se representan como n&amp;uacute;meros enteros a partir de 1, pero tambi&amp;eacute;n se pueden representar como &lt;em&gt;marcadores,&lt;/em&gt; objetos especiales que se reubican autom&amp;aacute;ticamente cuando se inserta o elimina texto para que permanezcan con los caracteres circundantes. Las funciones que esperan que un argumento sea una posici&amp;oacute;n (un n&amp;uacute;mero entero), pero aceptan un marcador como sustituto, normalmente ignoran a qu&amp;eacute; b&amp;uacute;fer apunta el marcador; convierten el marcador en un n&amp;uacute;mero entero y usan ese n&amp;uacute;mero entero, exactamente como si hubiera pasado el n&amp;uacute;mero entero como argumento, incluso si el marcador apunta al b&amp;uacute;fer incorrecto. Un marcador que no apunta a ninguna parte no se puede convertir en un n&amp;uacute;mero entero; usarlo en lugar de un n&amp;uacute;mero entero provoca un error. Ver &lt;a href=&quot;markers#Markers&quot;&gt;marcadores&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0d57c1560194ed5b9740be5062e662f21bf258a8" translate="yes" xml:space="preserve">
          <source>Precalculated Fontification</source>
          <target state="translated">Fontificación precalculada</target>
        </trans-unit>
        <trans-unit id="bb31a3184fc540673e8536291743e02cc7cb150c" translate="yes" xml:space="preserve">
          <source>Precautions about loading a file twice.</source>
          <target state="translated">Precauciones sobre la carga de un archivo dos veces.</target>
        </trans-unit>
        <trans-unit id="566ae5a22bce2d820a88dbf4901446093188d136" translate="yes" xml:space="preserve">
          <source>Precedence conflicts can be resolved via &lt;var&gt;resolvers&lt;/var&gt;, which is a list of &lt;em&gt;precs&lt;/em&gt; tables (see &lt;code&gt;smie-precs-&amp;gt;prec2&lt;/code&gt;): for each precedence conflict, if those &lt;code&gt;precs&lt;/code&gt; tables specify a particular constraint, then the conflict is resolved by using this constraint instead, else a conflict is reported and one of the conflicting constraints is picked arbitrarily and the others are simply ignored.</source>
          <target state="translated">Los conflictos de precedencia se pueden resolver a trav&amp;eacute;s de &lt;var&gt;resolvers&lt;/var&gt; , que es una lista de tablas de &lt;em&gt;precs&lt;/em&gt; (ver &lt;code&gt;smie-precs-&amp;gt;prec2&lt;/code&gt; ): para cada conflicto de precedencia, si esas tablas de &lt;code&gt;precs&lt;/code&gt; especifican una restricci&amp;oacute;n en particular, entonces el conflicto se resuelve usando esta restricci&amp;oacute;n en su lugar, de lo contrario, se informa de un conflicto y una de las restricciones en conflicto se elige arbitrariamente y las otras simplemente se ignoran.</target>
        </trans-unit>
        <trans-unit id="964094642c54dd1cde6edca379d013120bbe6cdf" translate="yes" xml:space="preserve">
          <source>Precedence of Action Functions</source>
          <target state="translated">Precedencia de las funciones de acción</target>
        </trans-unit>
        <trans-unit id="7f421f63196a5c9594ee21a2f12cf973d50a9e3c" translate="yes" xml:space="preserve">
          <source>Precisely what this function does depends on your operating system. The function is designed to work with the syntax of your system&amp;rsquo;s standard shell; if you use an unusual shell, you will need to redefine this function. See &lt;a href=&quot;security-considerations#Security-Considerations&quot;&gt;Security Considerations&lt;/a&gt;.</source>
          <target state="translated">Precisamente lo que hace esta funci&amp;oacute;n depende de su sistema operativo. La funci&amp;oacute;n est&amp;aacute; dise&amp;ntilde;ada para trabajar con la sintaxis del shell est&amp;aacute;ndar de su sistema; si usa un shell inusual, necesitar&amp;aacute; redefinir esta funci&amp;oacute;n. Consulte &lt;a href=&quot;security-considerations#Security-Considerations&quot;&gt;Consideraciones de seguridad&lt;/a&gt; .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
