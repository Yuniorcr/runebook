<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="elisp">
    <body>
      <group id="elisp">
        <trans-unit id="297514168ef2ea3e190861ad8aed9621b2bf0fde" translate="yes" xml:space="preserve">
          <source>The following functions replace characters within a specified region based on their character codes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef4900912dcb434358d1e1cc34146dd4ae71b7f" translate="yes" xml:space="preserve">
          <source>The following functions return a window which satisfies some criterion, without selecting it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c1b3a2ec1e9d599ce858d9c865cc30d35b9cfbd" translate="yes" xml:space="preserve">
          <source>The following functions return window positions in pixels, rather than character units. Though mostly useful on graphical displays, they can also be called on text terminals, where the screen area of each text character is taken to be one pixel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2f37ec3b726c43a4c87205d55e42808f4009de8" translate="yes" xml:space="preserve">
          <source>The following functions return window positions in pixels, relative to the origin of the display screen rather than that of the frame:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="155cd68525e1e78f8dc1877edd4a3b4cc3b3b32f" translate="yes" xml:space="preserve">
          <source>The following is a list of metadata entries that a completion function may return in response to a &lt;code&gt;metadata&lt;/code&gt; flag argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a1e6d11578135dd2c40c588ed3ccefbb4f97f26" translate="yes" xml:space="preserve">
          <source>The following is a list of properties that are meaningful for all image types (there are also properties which are meaningful only for certain image types, as documented in the following subsections):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4093aee444ad060f90230a5ef648f614d3a0ca58" translate="yes" xml:space="preserve">
          <source>The following is a list of some hook variables that let you provide functions to be called from within Emacs on suitable occasions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccb2830cf31ad8ceb9e30c7ff4ee6d68c4873ecb" translate="yes" xml:space="preserve">
          <source>The following list of conventions is only partial. Each major mode should aim for consistency in general with other Emacs major modes, as this makes Emacs as a whole more coherent. It is impossible to list here all the possible points where this issue might come up; if the Emacs developers point out an area where your major mode deviates from the usual conventions, please make it compatible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f4c46986c8a870fb9516c70d5b6f51ae0a91573" translate="yes" xml:space="preserve">
          <source>The following macro provides a convenient way to define pop-up menus and/or menu bar menus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ad57c1f83c65077036b934b7fd3727e3ea0f239" translate="yes" xml:space="preserve">
          <source>The following macros should be used in the body of a function defined by &lt;code&gt;define-inline&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61cd8af7f02eeb28f4ce378e89ac8b778f999f77" translate="yes" xml:space="preserve">
          <source>The following network options can be specified when you create a network process. Except for &lt;code&gt;:reuseaddr&lt;/code&gt;, you can also set or modify these options later, using &lt;code&gt;set-network-process-option&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd2fc598c57ec7c3805d2638d2b8b8ee1d26d24c" translate="yes" xml:space="preserve">
          <source>The following option allows to automatically select the window under the mouse pointer. This accomplishes a policy similar to that of window managers that give focus to a frame (and thus trigger its subsequent selection) whenever the mouse pointer enters its window-system window (see &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7851e2664e5c756dae87ae16e5d4cb14feb40f7" translate="yes" xml:space="preserve">
          <source>The following option specifies how to deal with a frame containing just one window that should be either quit, or whose buffer should be buried.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ada5ff929af79df9bfadbae1b79b7910e6c1c8cf" translate="yes" xml:space="preserve">
          <source>The following options affect some aspects of the startup sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1aec0ad769964195d8b0b82e98cb13200879f29" translate="yes" xml:space="preserve">
          <source>The following options provide additional control over the placement of side windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d184dd753268c287e714dc96de749f048d0308b" translate="yes" xml:space="preserve">
          <source>The following parameters are currently used by the window management code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbb0060fafb1b1a12e73884154b4dd11377c3b26" translate="yes" xml:space="preserve">
          <source>The following parameters are supported:</source>
          <target state="translated">Se admiten los siguientes par√°metros:</target>
        </trans-unit>
        <trans-unit id="4f59f6941bde6c4db5d1e3e41b34d7afbaba9370" translate="yes" xml:space="preserve">
          <source>The following piece of code demonstrates some important principles of working with iterators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4f0eab4462560047e86c6b11d762d5644d33c5b" translate="yes" xml:space="preserve">
          <source>The following predicates test whether a Lisp object is an atom, whether it is a cons cell or is a list, or whether it is the distinguished object &lt;code&gt;nil&lt;/code&gt;. (Many of these predicates can be defined in terms of the others, but they are used so often that it is worth having them.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="826b4fe071d5c29efd8caca96b29fad3a0a2f2d1" translate="yes" xml:space="preserve">
          <source>The following properties have special meaning:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebef11ee154eef7f4eb1fc917c2aac083fcb211f" translate="yes" xml:space="preserve">
          <source>The following properties have special meanings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57c6bef4e378aea04508546ae08d21653ab1f737" translate="yes" xml:space="preserve">
          <source>The following regular expression constructs match the empty string&amp;mdash;that is, they don&amp;rsquo;t use up any characters&amp;mdash;but whether they match depends on the context. For all, the beginning and end of the accessible portion of the buffer are treated as if they were the actual beginning and end of the buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab93757b1beab2aa1b514e6ad4b5403f0cf390d7" translate="yes" xml:space="preserve">
          <source>The following sample code shows a simple use of &lt;code&gt;abbrev-expand-function&lt;/code&gt;. It assumes that &lt;code&gt;foo-mode&lt;/code&gt; is a mode for editing certain files in which lines that start with &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd3bff5b4b8d36513361c4cb174579259d0a14c3" translate="yes" xml:space="preserve">
          <source>The following schematic shows the structure of a live window:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3812318991beb737b8ecfc0d3eb9bffa47526a30" translate="yes" xml:space="preserve">
          <source>The following sections describe how to create a package, and how to put it in a &lt;em&gt;package archive&lt;/em&gt; for others to download. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Packages.html#Packages&quot;&gt;Packages&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="383d4b031e697c8a763f63ab5f2f0872562209fa" translate="yes" xml:space="preserve">
          <source>The following sections describe how to create a package, and how to put it in a &lt;em&gt;package archive&lt;/em&gt; for others to download. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Packages.html#Packages&quot;&gt;Packages&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7f5eb5126f13e48e5d8a4cfa1f8a337e3e76816" translate="yes" xml:space="preserve">
          <source>The following subsections describe dynamic binding and lexical binding in greater detail, and how to enable lexical binding in Emacs Lisp programs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f427796ad98b404b1017d94a966c0d6e0b800693" translate="yes" xml:space="preserve">
          <source>The following subsections describe these tasks and the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="557e3858b495db8eb07b06d74c4bda7f399bc1fd" translate="yes" xml:space="preserve">
          <source>The following three functions are convenient subroutines for packages that define non-</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="536c73ef47f549795a27c13372e2ba64eb41c149" translate="yes" xml:space="preserve">
          <source>The following three functions are like &lt;code&gt;memq&lt;/code&gt;, &lt;code&gt;delq&lt;/code&gt; and &lt;code&gt;remq&lt;/code&gt;, but use &lt;code&gt;equal&lt;/code&gt; rather than &lt;code&gt;eq&lt;/code&gt; to compare elements. See &lt;a href=&quot;equality-predicates#Equality-Predicates&quot;&gt;Equality Predicates&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="355f4e1293b1c2362148cc63e3a7bedf8f34b49f" translate="yes" xml:space="preserve">
          <source>The following three functions take as argument a live frame which defaults to the selected one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f17162ac41b5c364770f2de0d633eda6a4b0b6a" translate="yes" xml:space="preserve">
          <source>The following three variables are used in &lt;code&gt;mode-line-modes&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29c7181d047de2cd97f0970a6987cb63e7fbbb89" translate="yes" xml:space="preserve">
          <source>The following three variables, when non-&lt;code&gt;nil&lt;/code&gt;, cause the second method to be used in certain special cases. They have no effect on the treatment of files that don&amp;rsquo;t fall into the special cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="115768852bac8cdf35b7fa82a90cdf33ddc11555" translate="yes" xml:space="preserve">
          <source>The following two &lt;code&gt;%&lt;/code&gt;-constructs are still supported, but they are obsolete, since you can get the same results with the variables &lt;code&gt;mode-name&lt;/code&gt; and &lt;code&gt;global-mode-string&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8bf40b8538d6f6330c64f3c882e6c1bcb9062c8" translate="yes" xml:space="preserve">
          <source>The following two functions are meant for modes that want to provide help without relinquishing control, such as the electric modes. Their names begin with &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1abd9368a3d734825a10efb49b4dabc426bea1a2" translate="yes" xml:space="preserve">
          <source>The following two functions are useful for combining a list of individual command-line argument strings into a single string, and taking a string apart into a list of individual command-line arguments. These functions are mainly intended for converting user input in the minibuffer, a Lisp string, into a list of string arguments to be passed to &lt;code&gt;make-process&lt;/code&gt;, &lt;code&gt;call-process&lt;/code&gt; or &lt;code&gt;start-process&lt;/code&gt;, or for converting such lists of arguments into a single Lisp string to be presented in the minibuffer or echo area. Note that if a shell is involved (e.g., if using &lt;code&gt;call-process-shell-command&lt;/code&gt;), arguments should still be protected by &lt;code&gt;shell-quote-argument&lt;/code&gt;; &lt;code&gt;combine-and-quote-strings&lt;/code&gt; is &lt;em&gt;not&lt;/em&gt; intended to protect special characters from shell evaluation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="345ce9209913e7b713026911f4f5e94a02bd44b6" translate="yes" xml:space="preserve">
          <source>The following two functions are useful when a Lisp program needs to map buffer positions to byte offsets in a file visited by the buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6e12a6446862c2522d3f1a9ffd8ddf8904cc177" translate="yes" xml:space="preserve">
          <source>The following two functions can be used to return the total size of a window in units of pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a48c7947820ecbb53fcfdd25e5c96ba5864b3d86" translate="yes" xml:space="preserve">
          <source>The following two functions can be useful when working with child and parent frames:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a83b06e67c6529bbdbddb0d5afbb5cf809d5bcc" translate="yes" xml:space="preserve">
          <source>The following two functions convert between directory names and directory file names. They do nothing special with environment variable substitutions such as &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fac544aa9936ae6c2b6929f4306babf281bddd4" translate="yes" xml:space="preserve">
          <source>The following two functions move point over a specified set of characters. For example, they are often used to skip whitespace. For related functions, see &lt;a href=&quot;motion-and-syntax#Motion-and-Syntax&quot;&gt;Motion and Syntax&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c338e0f1681bbeb0ada6c9b11a1251284be5bda" translate="yes" xml:space="preserve">
          <source>The following two functions return a mouse position list (see &lt;a href=&quot;click-events#Click-Events&quot;&gt;Click Events&lt;/a&gt;), specifying the position of a mouse event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc0b4c0c74f55c58b403e95e6a1acfb6ff12b20c" translate="yes" xml:space="preserve">
          <source>The following two functions return important information about a font.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e7e472e6478094296cd45e3d521f50016cac3a3" translate="yes" xml:space="preserve">
          <source>The following two options control whether minibuffer windows are resized automatically and how large they can get in the process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24fa8abe9618c4cb6b7db987de4f0d9cacb7fa8f" translate="yes" xml:space="preserve">
          <source>The following two regular expressions should &lt;em&gt;not&lt;/em&gt; assume the match always starts at the beginning of a line; they should not use &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc6bf9832061e83897200953f3dd12c79d5af846" translate="yes" xml:space="preserve">
          <source>The following two variables are obsoleted by &lt;code&gt;filter-buffer-substring-function&lt;/code&gt;, but are still supported for backward compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d489eae93ac203d9b2ffd3584656c2dde948029" translate="yes" xml:space="preserve">
          <source>The following values are respected:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09aa9057414e7950dd19147648c16cf90861056f" translate="yes" xml:space="preserve">
          <source>The following variables affect how certain characters are displayed on the screen. Since they change the number of columns the characters occupy, they also affect the indentation functions. They also affect how the mode line is displayed; if you want to force redisplay of the mode line using the new values, call the function &lt;code&gt;force-mode-line-update&lt;/code&gt; (see &lt;a href=&quot;mode-line-format#Mode-Line-Format&quot;&gt;Mode Line Format&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14dec20b7fbc6fcced5e5d29086ee55e867ebdd4" translate="yes" xml:space="preserve">
          <source>The following will create a linear gradient that goes from red at the start, to green 25% of the way, to blue at the end:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e95288a0f9a444d98e8a41cba18b24ae66da9ad1" translate="yes" xml:space="preserve">
          <source>The font must be an OpenType font that supports these OpenType features, provided Emacs is compiled with a library, such as &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6556801bce4e544f06ab7ea9eb5f7746cb4afd5e" translate="yes" xml:space="preserve">
          <source>The font name (a string), in either XLFD, Fontconfig, or GTK+ format. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Fonts.html#Fonts&quot;&gt;Fonts&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bc704bf2b2bbc2442021c0c06a953c0e26b4f52" translate="yes" xml:space="preserve">
          <source>The font name (a string), in either XLFD, Fontconfig, or GTK+ format. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Fonts.html#Fonts&quot;&gt;Fonts&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af0bd798857380a819581a44d67b89d6f115632d" translate="yes" xml:space="preserve">
          <source>The font name, a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7248edb376ccd7b3b10bb9e3cb840736177f911" translate="yes" xml:space="preserve">
          <source>The font size&amp;mdash;either a non-negative integer that specifies the pixel size, or a floating-point number that specifies the point size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23f58ef9a79c9daa9a087fb25286120885af393b" translate="yes" xml:space="preserve">
          <source>The font used to display the face. Its value should be a font object or a fontset. See &lt;a href=&quot;low_002dlevel-font#Low_002dLevel-Font&quot;&gt;Low-Level Font&lt;/a&gt;, for information about font objects, font specs, and font entities. See &lt;a href=&quot;fontsets#Fontsets&quot;&gt;Fontsets&lt;/a&gt;, for information about fontsets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e2495d3f6b500a7c3764a7896dc703df930eb34" translate="yes" xml:space="preserve">
          <source>The form &lt;code&gt;(+ &lt;var&gt;expr&lt;/var&gt; ...)&lt;/code&gt; adds up the value of the expressions. The form &lt;code&gt;(- &lt;var&gt;expr&lt;/var&gt; ...)&lt;/code&gt; negates or subtracts the value of the expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9074ede26f7f654c16278889f1f4de2d0cebbf4" translate="yes" xml:space="preserve">
          <source>The form &lt;var&gt;num&lt;/var&gt; specifies a fraction of the default frame font height or width. The form &lt;code&gt;(&lt;var&gt;num&lt;/var&gt;)&lt;/code&gt; specifies an absolute number of pixels. If &lt;var&gt;num&lt;/var&gt; is a symbol, &lt;var&gt;symbol&lt;/var&gt;, its buffer-local variable binding is used; that binding can be either a number or a cons cell of the forms shown above (including yet another cons cell whose &lt;code&gt;car&lt;/code&gt; is a symbol that has a buffer-local binding).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eefdf767b9da94cedb2272c4d442fd16a210f77a" translate="yes" xml:space="preserve">
          <source>The format of &lt;var&gt;local-address&lt;/var&gt; or &lt;var&gt;remote-address&lt;/var&gt; depends on the address family:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1523839ef4d5afd7ac94bcc51e58e0b20efc3f4" translate="yes" xml:space="preserve">
          <source>The format of this list is the same as what &lt;code&gt;decode-time&lt;/code&gt; accepts (see &lt;a href=&quot;time-conversion#Time-Conversion&quot;&gt;Time Conversion&lt;/a&gt;), and is described in more detail there. Any element that cannot be determined from the input will be set to &lt;code&gt;nil&lt;/code&gt;. The argument &lt;var&gt;string&lt;/var&gt; should resemble an RFC 822 (or later) or ISO 8601 string, like &amp;ldquo;Fri, 25 Mar 2016 16:24:56 +0100&amp;rdquo; or &amp;ldquo;1998-09-12T12:21:54-0200&amp;rdquo;, but this function will attempt to parse less well-formed time strings as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a420ccf20ba6d5b4c425fdd899162dfbbd53605d" translate="yes" xml:space="preserve">
          <source>The format we use for buffer contents in examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a56368511816baafb987e4550f7fd019ef9406d" translate="yes" xml:space="preserve">
          <source>The format we use for examples of errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39ba77d521c50dab220364437e7b5dabde639177" translate="yes" xml:space="preserve">
          <source>The format we use for examples of evaluation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37518e914cc1faa1cdf2b3e15db2c5a92c8aeff9" translate="yes" xml:space="preserve">
          <source>The format we use when examples print text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17e1d52af71f6c32ba5e92306abc4c53f00bf057" translate="yes" xml:space="preserve">
          <source>The former is used by overlay arrows. The latter is unused.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="203096a174bb892e518022e452e96010dd9a8b89" translate="yes" xml:space="preserve">
          <source>The forms &lt;var&gt;pre-form&lt;/var&gt; and &lt;var&gt;post-form&lt;/var&gt; can be used to initialize before, and cleanup after, &lt;var&gt;anchored-matcher&lt;/var&gt; is used. Typically, &lt;var&gt;pre-form&lt;/var&gt; is used to move point to some position relative to the match of &lt;var&gt;matcher&lt;/var&gt;, before starting with &lt;var&gt;anchored-matcher&lt;/var&gt;. &lt;var&gt;post-form&lt;/var&gt; might be used to move back, before resuming with &lt;var&gt;matcher&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceadb637a596eb2ee47bea0bcd88b1125c133ad0" translate="yes" xml:space="preserve">
          <source>The fourth argument &lt;var&gt;parents&lt;/var&gt; says whether to create parent directories if they don&amp;rsquo;t exist. Interactively, this happens by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49ca71782e46f41b945559e28fbf6e1d7928a06f" translate="yes" xml:space="preserve">
          <source>The fourth element is the buffer whose display caused the creation of this parameter. This function may delete &lt;var&gt;window&lt;/var&gt; if and only if it still shows that buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d53d197ac8b2d3804741dce6c2249997a484aa11" translate="yes" xml:space="preserve">
          <source>The fourth of these hooks is run when a &lt;em&gt;window state change&lt;/em&gt; has been detected, which means that at least one of the three preceding window changes has occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2076a0c8c9f8876e127e6de37bf8d5c9fd0314f" translate="yes" xml:space="preserve">
          <source>The frame is displayed on a GNUstep or Macintosh Cocoa graphical terminal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="367eb419b499e34c2cd9b561d4ff309824830d6d" translate="yes" xml:space="preserve">
          <source>The frame is displayed on a MS-Windows graphical terminal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd7f603302ec782d1f108752979a4bc3b06f4239" translate="yes" xml:space="preserve">
          <source>The frame is displayed on a text terminal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcb9d54a78150d03f883ce9267fb2578c072d2bd" translate="yes" xml:space="preserve">
          <source>The frame is displayed on an MS-DOS terminal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cd07edbb9f4b3175639e8806bf60c5f910fe981" translate="yes" xml:space="preserve">
          <source>The frame is displayed on an X graphical terminal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fede82ee27758855ee100077f5a256f38ab0e02a" translate="yes" xml:space="preserve">
          <source>The frame parameter &lt;code&gt;horizontal-scroll-bars&lt;/code&gt; controls whether the windows in the frame have horizontal scroll bars. The frame parameter &lt;code&gt;scroll-bar-height&lt;/code&gt; specifies how high they are (&lt;code&gt;nil&lt;/code&gt; meaning the default). See &lt;a href=&quot;layout-parameters#Layout-Parameters&quot;&gt;Layout Parameters&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="438a2d89a52bbe188d6d849c93e8088d3f1e967a" translate="yes" xml:space="preserve">
          <source>The frame that this window is on, as a Lisp object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2ddf76bbb94fa6e3bd71370e008e9006e3aab9c" translate="yes" xml:space="preserve">
          <source>The frame with input focus might not take up the entire screen, and the user might move the mouse outside the scope of the frame. Inside the &lt;code&gt;track-mouse&lt;/code&gt; special form, that produces an event like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="875b4545e11911510ae3368c34f49d2bafeade1c" translate="yes" xml:space="preserve">
          <source>The frames can be used either to represent multiple pages (this is usually the case with multi-frame TIFF files, for example), or to create animation (usually the case with multi-frame GIF files).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07c1bfad504d407e4dd4bddeff5e7e54de2cc8eb" translate="yes" xml:space="preserve">
          <source>The fringes normally appear between the display margins and the window text. If the value is non-&lt;code&gt;nil&lt;/code&gt;, they appear outside the display margins. See &lt;a href=&quot;display-margins#Display-Margins&quot;&gt;Display Margins&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10a232c8c99be2bcdac3d854a4c57a0b7926f249" translate="yes" xml:space="preserve">
          <source>The full keymap containing default global key bindings. Modes should not modify the Global map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab21d625fa99d9e8689a87a9df340768d973d686" translate="yes" xml:space="preserve">
          <source>The full name of the font, a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55c491134e3f247e07eb606aa328fc5be9cb20cc" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;accept-process-output&lt;/code&gt; returns non-&lt;code&gt;nil&lt;/code&gt; if it got output from &lt;var&gt;process&lt;/var&gt;, or from any process if &lt;var&gt;process&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;; this can occur even after a process has exited if the corresponding connection contains buffered data. The function returns &lt;code&gt;nil&lt;/code&gt; if the timeout expired or the connection was closed before output arrived.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec51fe801ce783ab41bbcfb2b068eb8495fcb6f6" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;assoc-string&lt;/code&gt; is much like &lt;code&gt;assoc&lt;/code&gt; except that it ignores certain differences between strings. See &lt;a href=&quot;text-comparison#Text-Comparison&quot;&gt;Text Comparison&lt;/a&gt;.</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;assoc-string&lt;/code&gt; es muy parecida a &lt;code&gt;assoc&lt;/code&gt; , excepto que ignora ciertas diferencias entre cadenas. Ver &lt;a href=&quot;text-comparison#Text-Comparison&quot;&gt;comparaci&amp;oacute;n de texto&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8f2e7d56e51665dc0e2c86ee380cef89f5612161" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;backtrace-frame&lt;/code&gt; is intended for use in Lisp debuggers. It returns information about what computation is happening in the stack frame &lt;var&gt;frame-number&lt;/var&gt; levels down.</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;backtrace-frame&lt;/code&gt; est&amp;aacute; pensada para su uso en depuradores Lisp. Devuelve informaci&amp;oacute;n sobre qu&amp;eacute; c&amp;aacute;lculo est&amp;aacute; sucediendo en los niveles de &lt;var&gt;frame-number&lt;/var&gt; fotogramas del marco de pila hacia abajo.</target>
        </trans-unit>
        <trans-unit id="2a41471492f0d30da94cc86b34cd0a1d952ae5da" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;backward-prefix-chars&lt;/code&gt; moves back over these characters, as well as over characters whose primary syntax class is prefix (&amp;lsquo;</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;backward-prefix-chars&lt;/code&gt; retrocede sobre estos caracteres, as&amp;iacute; como sobre caracteres cuya clase de sintaxis principal es prefijo ('</target>
        </trans-unit>
        <trans-unit id="ff9303e475f1b984abb99f23fe5e1bde3414024c" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;buffer-substring-no-properties&lt;/code&gt; does not call these functions, since it ignores text properties anyway.</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;buffer-substring-no-properties&lt;/code&gt; no llama a estas funciones, ya que ignora las propiedades del texto de todos modos.</target>
        </trans-unit>
        <trans-unit id="ab0ed3a952ff9a1871cc2361e3809682f2c953e2" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;collapse-delayed-warnings&lt;/code&gt; removes repeated entries from &lt;code&gt;delayed-warnings-list&lt;/code&gt;. The function &lt;code&gt;display-delayed-warnings&lt;/code&gt; calls &lt;code&gt;display-warning&lt;/code&gt; on each of the entries in &lt;code&gt;delayed-warnings-list&lt;/code&gt;, in turn, and then sets &lt;code&gt;delayed-warnings-list&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;collapse-delayed-warnings&lt;/code&gt; elimina las entradas repetidas de &lt;code&gt;delayed-warnings-list&lt;/code&gt; . La funci&amp;oacute;n &lt;code&gt;display-delayed-warnings&lt;/code&gt; llama a &lt;code&gt;display-warning&lt;/code&gt; en cada una de las entradas &lt;code&gt;delayed-warnings-list&lt;/code&gt; , a su vez, y luego establece &lt;code&gt;delayed-warnings-list&lt;/code&gt; en &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aca3a04eca1514a9f44c05fb78a24a6564571ff6" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;completing-read&lt;/code&gt; provides a higher-level interface for completion. A call to &lt;code&gt;completing-read&lt;/code&gt; specifies how to determine the list of valid names. The function then activates the minibuffer with a local keymap that binds a few keys to commands useful for completion. Other functions provide convenient simple interfaces for reading certain kinds of names with completion.</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;completing-read&lt;/code&gt; proporciona una interfaz de nivel superior para completar. Una llamada a &lt;code&gt;completing-read&lt;/code&gt; especifica c&amp;oacute;mo determinar la lista de nombres v&amp;aacute;lidos. Luego, la funci&amp;oacute;n activa el minib&amp;uacute;fer con un mapa de teclas local que vincula algunas teclas a comandos &amp;uacute;tiles para completar. Otras funciones proporcionan interfaces sencillas y convenientes para leer ciertos tipos de nombres con finalizaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="743a6545ecb435ebd9f3de6185649c8ee66cb997" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;completing-read&lt;/code&gt; uses &lt;code&gt;minibuffer-local-completion-map&lt;/code&gt; as the keymap if &lt;var&gt;require-match&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, and uses &lt;code&gt;minibuffer-local-must-match-map&lt;/code&gt; if &lt;var&gt;require-match&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;. See &lt;a href=&quot;completion-commands#Completion-Commands&quot;&gt;Completion Commands&lt;/a&gt;.</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;completing-read&lt;/code&gt; usa &lt;code&gt;minibuffer-local-completion-map&lt;/code&gt; como mapa de teclas si &lt;var&gt;require-match&lt;/var&gt; es &lt;code&gt;nil&lt;/code&gt; , y usa &lt;code&gt;minibuffer-local-must-match-map&lt;/code&gt; si &lt;var&gt;require-match&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; . Consulte &lt;a href=&quot;completion-commands#Completion-Commands&quot;&gt;Comandos de finalizaci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="eb114701d962dcc2e639c63a654e62af9ffd7c5a" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;coordinates-in-window-p&lt;/code&gt; does not require a frame as argument because it always uses the frame that &lt;var&gt;window&lt;/var&gt; is on.</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;coordinates-in-window-p&lt;/code&gt; no requiere un marco como argumento porque siempre usa el marco en el que &lt;var&gt;window&lt;/var&gt; encuentra la ventana .</target>
        </trans-unit>
        <trans-unit id="d5b3ded67b9cd070ced5aa2445c9069b81dfc417" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;current-kill&lt;/code&gt; rotates the yanking pointer, which designates the front of the kill ring, by &lt;var&gt;n&lt;/var&gt; places (from newer kills to older ones), and returns the text at that place in the ring.</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;current-kill&lt;/code&gt; rota el puntero yanking, que designa el frente del kill ring, &lt;var&gt;n&lt;/var&gt; lugares (desde los asesinatos m&amp;aacute;s nuevos hasta los m&amp;aacute;s antiguos), y devuelve el texto en ese lugar del ring.</target>
        </trans-unit>
        <trans-unit id="c09d1b87df08862239116751f48f0df4995d72f7" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;default-boundp&lt;/code&gt; tells you whether &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s default value is nonvoid. If &lt;code&gt;(default-boundp 'foo)&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;(default-value 'foo)&lt;/code&gt; would get an error.</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;default-boundp&lt;/code&gt; le dice si el valor predeterminado del &lt;var&gt;symbol&lt;/var&gt; es nonvoid. Si &lt;code&gt;(default-boundp 'foo)&lt;/code&gt; devuelve &lt;code&gt;nil&lt;/code&gt; , entonces &lt;code&gt;(default-value 'foo)&lt;/code&gt; obtendr&amp;iacute;a un error.</target>
        </trans-unit>
        <trans-unit id="3d944e42054c18a15837fce5fb4f736d90edcbfc" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;delete-other-windows&lt;/code&gt; (see &lt;a href=&quot;deleting-windows#Deleting-Windows&quot;&gt;Deleting Windows&lt;/a&gt;), when applied to a constituent of an atomic window, will try to make the atomic window fill its frame or main window (see &lt;a href=&quot;side-windows#Side-Windows&quot;&gt;Side Windows&lt;/a&gt;).</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;delete-other-windows&lt;/code&gt; (ver &lt;a href=&quot;deleting-windows#Deleting-Windows&quot;&gt;Eliminar ventanas&lt;/a&gt; ), cuando se aplica a un componente de una ventana at&amp;oacute;mica, intentar&amp;aacute; hacer que la ventana at&amp;oacute;mica llene su marco o ventana principal (ver &lt;a href=&quot;side-windows#Side-Windows&quot;&gt;Ventanas laterales&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="9dffa9767ac8103870c396df1d01712edad9731f" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;delete-window&lt;/code&gt; (see &lt;a href=&quot;deleting-windows#Deleting-Windows&quot;&gt;Deleting Windows&lt;/a&gt;), when applied to a constituent of an atomic window, will try to delete the entire atomic window instead.</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;delete-window&lt;/code&gt; (ver &lt;a href=&quot;deleting-windows#Deleting-Windows&quot;&gt;Eliminar Windows&lt;/a&gt; ), cuando se aplica a un componente de una ventana at&amp;oacute;mica, intentar&amp;aacute; eliminar toda la ventana at&amp;oacute;mica.</target>
        </trans-unit>
        <trans-unit id="6dbf1bcd36e45950ad0668297034db25fc20918d" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;elt&lt;/code&gt; is similar, but applies to any kind of sequence. For historical reasons, it takes its arguments in the opposite order. See &lt;a href=&quot;sequence-functions#Sequence-Functions&quot;&gt;Sequence Functions&lt;/a&gt;.</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;elt&lt;/code&gt; es similar, pero se aplica a cualquier tipo de secuencia. Por razones hist&amp;oacute;ricas, toma sus argumentos en el orden opuesto. Consulte &lt;a href=&quot;sequence-functions#Sequence-Functions&quot;&gt;Funciones de secuencia&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="53ea0623909a1543789ee0d4705170a49f5a1097" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;equal&lt;/code&gt; can also compare two window configurations; it regards configurations as unequal if they differ in any respect, even a saved point.</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;equal&lt;/code&gt; tambi&amp;eacute;n puede comparar dos configuraciones de ventana; considera que las configuraciones son desiguales si difieren en alg&amp;uacute;n aspecto, incluso en un punto guardado.</target>
        </trans-unit>
        <trans-unit id="15f22c5a8ef685b2d1157d55627f2e569a64550a" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;foo&lt;/code&gt; subtracts &lt;var&gt;integer1&lt;/var&gt; from &lt;var&gt;integer2&lt;/var&gt;, then adds all the rest of the arguments to the result. If &lt;var&gt;integer2&lt;/var&gt; is not supplied, then the number 19 is used by default.</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;foo&lt;/code&gt; resta &lt;var&gt;integer1&lt;/var&gt; de &lt;var&gt;integer2&lt;/var&gt; , luego agrega el resto de los argumentos al resultado. Si no se proporciona &lt;var&gt;integer2&lt;/var&gt; , entonces se usa el n&amp;uacute;mero 19 por defecto.</target>
        </trans-unit>
        <trans-unit id="142092b37bd14d5b1415337e59a8ef7820027ffe" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;format-spec&lt;/code&gt; described in this section performs a similar function to &lt;code&gt;format&lt;/code&gt;, except it operates on format control strings that use arbitrary specification characters.</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;format-spec&lt;/code&gt; descrita en esta secci&amp;oacute;n realiza una funci&amp;oacute;n similar a &lt;code&gt;format&lt;/code&gt; ear , excepto que opera en cadenas de control de formato que utilizan caracteres de especificaci&amp;oacute;n arbitrarios.</target>
        </trans-unit>
        <trans-unit id="580c556614ef2beffd862c0457ca3264d0d95fa2" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;frame-parameters&lt;/code&gt; returns an alist listing all the parameters of &lt;var&gt;frame&lt;/var&gt; and their values. If &lt;var&gt;frame&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or omitted, this returns the selected frame&amp;rsquo;s parameters</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;frame-parameters&lt;/code&gt; devuelve una lista con todos los par&amp;aacute;metros de &lt;var&gt;frame&lt;/var&gt; y sus valores. Si el &lt;var&gt;frame&lt;/var&gt; es &lt;code&gt;nil&lt;/code&gt; o se omite, esto devuelve los par&amp;aacute;metros del marco seleccionado</target>
        </trans-unit>
        <trans-unit id="fc4daa549e176d014e533dbad29a89e4b64d4d76" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;getx&lt;/code&gt; refers to &lt;code&gt;x&lt;/code&gt;. This is a &lt;em&gt;free&lt;/em&gt; reference, in the sense that there is no binding for &lt;code&gt;x&lt;/code&gt; within that &lt;code&gt;defun&lt;/code&gt; construct itself. When we call &lt;code&gt;getx&lt;/code&gt; from within a &lt;code&gt;let&lt;/code&gt; form in which &lt;code&gt;x&lt;/code&gt; is (dynamically) bound, it retrieves the local value (i.e., 1). But when we call &lt;code&gt;getx&lt;/code&gt; outside the &lt;code&gt;let&lt;/code&gt; form, it retrieves the global value (i.e., -99).</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;getx&lt;/code&gt; se refiere a &lt;code&gt;x&lt;/code&gt; . Esta es una referencia &lt;em&gt;libre&lt;/em&gt; , en el sentido de que no existe un v&amp;iacute;nculo para &lt;code&gt;x&lt;/code&gt; dentro de esa construcci&amp;oacute;n &lt;code&gt;defun&lt;/code&gt; . Cuando llamamos a &lt;code&gt;getx&lt;/code&gt; desde dentro de una forma &lt;code&gt;let&lt;/code&gt; en la que &lt;code&gt;x&lt;/code&gt; est&amp;aacute; vinculado (din&amp;aacute;micamente), recupera el valor local (es decir, 1). Pero cuando llamamos a &lt;code&gt;getx&lt;/code&gt; fuera de la forma &lt;code&gt;let&lt;/code&gt; , recupera el valor global (es decir, -99).</target>
        </trans-unit>
        <trans-unit id="e222099e0dbd9ca9d8f1867678a5de58c410df4b" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;insert-file-contents&lt;/code&gt; automatically recognizes file formats when it reads the specified file. It checks the text of the beginning of the file against the regular expressions of the format definitions, and if it finds a match, it calls the decoding function for that format. Then it checks all the known formats over again. It keeps checking them until none of them is applicable.</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;insert-file-contents&lt;/code&gt; reconoce autom&amp;aacute;ticamente los formatos de archivo cuando lee el archivo especificado. Comprueba el texto del principio del archivo con las expresiones regulares de las definiciones de formato y, si encuentra una coincidencia, llama a la funci&amp;oacute;n de decodificaci&amp;oacute;n para ese formato. Luego vuelve a comprobar todos los formatos conocidos. Los sigue revisando hasta que ninguno de ellos es aplicable.</target>
        </trans-unit>
        <trans-unit id="1b53622592c53b4408af724ef50deb90f84d0660" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;insert-file-contents&lt;/code&gt;:</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;insert-file-contents&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0ced44529508f6a3572121eaa375fc4ced75820b" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;insert-for-yank&lt;/code&gt; automatically sets this variable according to the &lt;var&gt;undo&lt;/var&gt; element of the &lt;code&gt;yank-handler&lt;/code&gt; text property, if there is one.</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;insert-for-yank&lt;/code&gt; establece autom&amp;aacute;ticamente esta variable de acuerdo con el elemento &lt;var&gt;undo&lt;/var&gt; de la propiedad de texto del &lt;code&gt;yank-handler&lt;/code&gt; , si existe.</target>
        </trans-unit>
        <trans-unit id="63c67cfe6f9d58e7894dfaf98f9e257cab3b6ab1" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;kill-all-local-variables&lt;/code&gt; runs this normal hook before it does anything else. This gives major modes a way to arrange for something special to be done if the user switches to a different major mode. It is also useful for buffer-specific minor modes that should be forgotten if the user changes the major mode.</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;kill-all-local-variables&lt;/code&gt; ejecuta este gancho normal antes de hacer cualquier otra cosa. Esto le da a los modos principales una forma de organizar que se haga algo especial si el usuario cambia a un modo principal diferente. Tambi&amp;eacute;n es &amp;uacute;til para modos menores espec&amp;iacute;ficos del b&amp;uacute;fer que deben olvidarse si el usuario cambia el modo mayor.</target>
        </trans-unit>
        <trans-unit id="db6ce2dd6e8f67ccadb8ee5dc896d171a780cbcc" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;macroexpand&lt;/code&gt; does not expand calls to inline functions. Normally there is no need for that, since a call to an inline function is no harder to understand than a call to an ordinary function.</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;macroexpand&lt;/code&gt; no expande las llamadas a funciones en l&amp;iacute;nea. Normalmente no es necesario, ya que una llamada a una funci&amp;oacute;n en l&amp;iacute;nea no es m&amp;aacute;s dif&amp;iacute;cil de entender que una llamada a una funci&amp;oacute;n ordinaria.</target>
        </trans-unit>
        <trans-unit id="8ca63acdedc01018b5b5ff8ef5fd299f693dc141" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;map-keymap&lt;/code&gt; calls &lt;var&gt;function&lt;/var&gt; once for each binding in &lt;var&gt;keymap&lt;/var&gt;. It passes two arguments, the event type and the value of the binding. If &lt;var&gt;keymap&lt;/var&gt; has a parent, the parent&amp;rsquo;s bindings are included as well. This works recursively: if the parent has itself a parent, then the grandparent&amp;rsquo;s bindings are also included and so on.</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;map-keymap&lt;/code&gt; llama a la &lt;var&gt;function&lt;/var&gt; una vez por cada enlace en el mapa de &lt;var&gt;keymap&lt;/var&gt; . Pasa dos argumentos, el tipo de evento y el valor del enlace. Si el &lt;var&gt;keymap&lt;/var&gt; de teclas tiene un padre, tambi&amp;eacute;n se incluyen las vinculaciones del padre. Esto funciona de forma recursiva: si el padre tiene un padre, entonces tambi&amp;eacute;n se incluyen las vinculaciones del abuelo y as&amp;iacute; sucesivamente.</target>
        </trans-unit>
        <trans-unit id="4993f97cab68094466e932cb10bb5175cf66f558" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;mapbacktrace&lt;/code&gt; calls &lt;var&gt;function&lt;/var&gt; once for each frame in the backtrace, starting at the first frame whose function is &lt;var&gt;base&lt;/var&gt; (or from the top if &lt;var&gt;base&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;).</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;mapbacktrace&lt;/code&gt; llama a la &lt;var&gt;function&lt;/var&gt; una vez para cada fotograma en el backtrace, comenzando en el primer fotograma cuya funci&amp;oacute;n es &lt;var&gt;base&lt;/var&gt; (o desde arriba si se omite la &lt;var&gt;base&lt;/var&gt; o es &lt;code&gt;nil&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ccd658c08c200f4281112668bf7e651adc648cfe" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;member&lt;/code&gt; tests to see whether &lt;var&gt;object&lt;/var&gt; is a member of &lt;var&gt;list&lt;/var&gt;, comparing members with &lt;var&gt;object&lt;/var&gt; using &lt;code&gt;equal&lt;/code&gt;. If &lt;var&gt;object&lt;/var&gt; is a member, &lt;code&gt;member&lt;/code&gt; returns a list starting with its first occurrence in &lt;var&gt;list&lt;/var&gt;. Otherwise, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">El &lt;code&gt;member&lt;/code&gt; funci&amp;oacute;n prueba para ver si el &lt;var&gt;object&lt;/var&gt; es un miembro de la &lt;var&gt;list&lt;/var&gt; a , comparando miembros con &lt;var&gt;object&lt;/var&gt; usando &lt;code&gt;equal&lt;/code&gt; . Si el &lt;var&gt;object&lt;/var&gt; es un miembro, el &lt;code&gt;member&lt;/code&gt; devuelve una lista que comienza con su primera aparici&amp;oacute;n en la &lt;var&gt;list&lt;/var&gt; a . De lo contrario, devuelve &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="836706fff80e951f88d58f54e4d11838289bf1e2" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;memql&lt;/code&gt; tests to see whether &lt;var&gt;object&lt;/var&gt; is a member of &lt;var&gt;list&lt;/var&gt;, comparing members with &lt;var&gt;object&lt;/var&gt; using &lt;code&gt;eql&lt;/code&gt;, so floating-point elements are compared by value. If &lt;var&gt;object&lt;/var&gt; is a member, &lt;code&gt;memql&lt;/code&gt; returns a list starting with its first occurrence in &lt;var&gt;list&lt;/var&gt;. Otherwise, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;memql&lt;/code&gt; prueba para ver si el &lt;var&gt;object&lt;/var&gt; es un miembro de la &lt;var&gt;list&lt;/var&gt; a , comparando miembros con &lt;var&gt;object&lt;/var&gt; usando &lt;code&gt;eql&lt;/code&gt; , por lo que los elementos de punto flotante se comparan por valor. Si el &lt;var&gt;object&lt;/var&gt; es un miembro, &lt;code&gt;memql&lt;/code&gt; devuelve una lista que comienza con su primera aparici&amp;oacute;n en la &lt;var&gt;list&lt;/var&gt; a . De lo contrario, devuelve &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2086c23f1633b32f5d281ae45401849ef50ca00d" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;process-type&lt;/code&gt; returns the symbol &lt;code&gt;serial&lt;/code&gt; for a process object representing a serial port connection.</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;process-type&lt;/code&gt; devuelve el s&amp;iacute;mbolo &lt;code&gt;serial&lt;/code&gt; para un objeto de proceso que representa una conexi&amp;oacute;n de puerto serial.</target>
        </trans-unit>
        <trans-unit id="7d5d7ee8f609d032732725e8d3c8c089bc52554d" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;push-mark&lt;/code&gt; normally &lt;em&gt;does not&lt;/em&gt; activate the mark. To do that, specify &lt;code&gt;t&lt;/code&gt; for the argument &lt;var&gt;activate&lt;/var&gt;.</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;push-mark&lt;/code&gt; normalmente &lt;em&gt;no&lt;/em&gt; activa la marca. Para hacer eso, especifique &lt;code&gt;t&lt;/code&gt; para el argumento &lt;var&gt;activate&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="e9fa560f2451740cc751b4488378f30d7e73bffc" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;read-key-sequence&lt;/code&gt; also transforms some mouse events. It converts unbound drag events into click events, and discards unbound button-down events entirely. It also reshuffles focus events and miscellaneous window events so that they never appear in a key sequence with any other events.</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;read-key-sequence&lt;/code&gt; tambi&amp;eacute;n transforma algunos eventos del mouse. Convierte los eventos de arrastre no vinculados en eventos de clic y descarta los eventos de bot&amp;oacute;n hacia abajo no vinculados por completo. Tambi&amp;eacute;n reorganiza los eventos de enfoque y los eventos de ventana varios para que nunca aparezcan en una secuencia de teclas con otros eventos.</target>
        </trans-unit>
        <trans-unit id="411c4d145671b4036ab4f7cb6fa9e30b7580ebe1" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;read-key-sequence&lt;/code&gt; ignores any button-down events that don&amp;rsquo;t have command bindings; therefore, the Emacs command loop ignores them too. This means that you need not worry about defining button-down events unless you want them to do something. The usual reason to define a button-down event is so that you can track mouse motion (by reading motion events) until the button is released. See &lt;a href=&quot;motion-events#Motion-Events&quot;&gt;Motion Events&lt;/a&gt;.</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;read-key-sequence&lt;/code&gt; ignora los eventos de botones que no tienen enlaces de comando; por lo tanto, el ciclo de comandos de Emacs tambi&amp;eacute;n los ignora. Esto significa que no debe preocuparse por definir eventos de botones a menos que desee que hagan algo. La raz&amp;oacute;n habitual para definir un evento de bot&amp;oacute;n hacia abajo es para poder seguir el movimiento del mouse (leyendo eventos de movimiento) hasta que se suelte el bot&amp;oacute;n. Consulte &lt;a href=&quot;motion-events#Motion-Events&quot;&gt;Eventos de movimiento&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="eba65b635c04edcaac2d00aa8b06564194485459" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;read-key-sequence&lt;/code&gt; suppresses quitting:</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;read-key-sequence&lt;/code&gt; suprime el abandono:</target>
        </trans-unit>
        <trans-unit id="56cd8086393902fb3f2fd966bb33828c275959f0" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;read-regexp&lt;/code&gt; may use the value of this variable to determine its list of default regular expressions. If non-&lt;code&gt;nil&lt;/code&gt;, the value of this variable should be either:</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;read-regexp&lt;/code&gt; puede usar el valor de esta variable para determinar su lista de expresiones regulares predeterminadas. Si no es &lt;code&gt;nil&lt;/code&gt; , el valor de esta variable debe ser:</target>
        </trans-unit>
        <trans-unit id="bfc9d89212eee790f8bef26e1a7f3b5f75f045d1" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;redraw-frame&lt;/code&gt; clears and redisplays the entire contents of a given frame (see &lt;a href=&quot;frames#Frames&quot;&gt;Frames&lt;/a&gt;). This is useful if the screen is corrupted.</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;redraw-frame&lt;/code&gt; borra y vuelve a mostrar todo el contenido de un marco dado (ver &lt;a href=&quot;frames#Frames&quot;&gt;Marcos&lt;/a&gt; ). Esto es &amp;uacute;til si la pantalla est&amp;aacute; da&amp;ntilde;ada.</target>
        </trans-unit>
        <trans-unit id="bbfc0c7e3b7ab2136aac8aac4311c80559dc8786" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;run-at-time&lt;/code&gt; returns a timer value that identifies the particular scheduled future action. You can use this value to call &lt;code&gt;cancel-timer&lt;/code&gt; (see below).</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;run-at-time&lt;/code&gt; devuelve un valor de temporizador que identifica la acci&amp;oacute;n futura programada en particular. Puede usar este valor para llamar a &lt;code&gt;cancel-timer&lt;/code&gt; (ver m&amp;aacute;s abajo).</target>
        </trans-unit>
        <trans-unit id="ebf16908ab8cdf77cbe0ed4cf8fac00f9d1be78c" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;run-with-idle-timer&lt;/code&gt; returns a timer value which you can use in calling &lt;code&gt;cancel-timer&lt;/code&gt; (see &lt;a href=&quot;timers#Timers&quot;&gt;Timers&lt;/a&gt;).</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;run-with-idle-timer&lt;/code&gt; devuelve un valor de temporizador que puede utilizar para llamar a &lt;code&gt;cancel-timer&lt;/code&gt; (consulte &lt;a href=&quot;timers#Timers&quot;&gt;Temporizadores&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="c8d58a42db5f4f64609112ba848f62aa4f6033e5" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;signal&lt;/code&gt; never returns.</source>
          <target state="translated">La &lt;code&gt;signal&lt;/code&gt; funci&amp;oacute;n nunca regresa.</target>
        </trans-unit>
        <trans-unit id="e957fc96b50a902c38bbd9080cce211dda054fa5" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;split-window&lt;/code&gt; (see &lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;Splitting Windows&lt;/a&gt;), when applied to a constituent of an atomic window, will try to create the new window outside of the atomic window.</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;split-window&lt;/code&gt; (ver &lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;Divisi&amp;oacute;n de ventanas&lt;/a&gt; ), cuando se aplica a un componente de una ventana at&amp;oacute;mica, intentar&amp;aacute; crear la nueva ventana fuera de la ventana at&amp;oacute;mica.</target>
        </trans-unit>
        <trans-unit id="6df956fe28921ed43fa43bd2788b8f0492e99c5e" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;substitute-key-definition&lt;/code&gt; scans a keymap for keys that have a certain binding and rebinds them with a different binding. Another feature which is cleaner and can often produce the same results is to remap one command into another (see &lt;a href=&quot;remapping-commands#Remapping-Commands&quot;&gt;Remapping Commands&lt;/a&gt;).</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;substitute-key-definition&lt;/code&gt; escanea un mapa de teclas en busca de teclas que tengan un enlace determinado y las vuelve a enlazar con un enlace diferente. Otra caracter&amp;iacute;stica que es m&amp;aacute;s limpia y que a menudo puede producir los mismos resultados es reasignar un comando a otro (consulte &lt;a href=&quot;remapping-commands#Remapping-Commands&quot;&gt;Reasignaci&amp;oacute;n de comandos&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="bc471743e21a847c0361cb115c2214f8054e6289" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;syms_of_&lt;var&gt;filename&lt;/var&gt;&lt;/code&gt; is also the place to define any C variables that are to be visible as Lisp variables. &lt;code&gt;DEFVAR_LISP&lt;/code&gt; makes a C variable of type &lt;code&gt;Lisp_Object&lt;/code&gt; visible in Lisp. &lt;code&gt;DEFVAR_INT&lt;/code&gt; makes a C variable of type &lt;code&gt;int&lt;/code&gt; visible in Lisp with a value that is always an integer. &lt;code&gt;DEFVAR_BOOL&lt;/code&gt; makes a C variable of type &lt;code&gt;int&lt;/code&gt; visible in Lisp with a value that is either &lt;code&gt;t&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt;. Note that variables defined with &lt;code&gt;DEFVAR_BOOL&lt;/code&gt; are automatically added to the list &lt;code&gt;byte-boolean-vars&lt;/code&gt; used by the byte compiler.</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;syms_of_&lt;var&gt;filename&lt;/var&gt;&lt;/code&gt; tambi&amp;eacute;n es el lugar para definir las variables C que deben ser visibles como variables Lisp. &lt;code&gt;DEFVAR_LISP&lt;/code&gt; hace que una variable C de tipo &lt;code&gt;Lisp_Object&lt;/code&gt; sea visible en Lisp. &lt;code&gt;DEFVAR_INT&lt;/code&gt; hace que una variable C de tipo &lt;code&gt;int&lt;/code&gt; sea visible en Lisp con un valor que siempre es un n&amp;uacute;mero entero. &lt;code&gt;DEFVAR_BOOL&lt;/code&gt; hace que una variable C de tipo &lt;code&gt;int&lt;/code&gt; sea visible en Lisp con un valor que sea &lt;code&gt;t&lt;/code&gt; o &lt;code&gt;nil&lt;/code&gt; . Tenga en cuenta que las variables definidas con &lt;code&gt;DEFVAR_BOOL&lt;/code&gt; se agregan autom&amp;aacute;ticamente a la lista &lt;code&gt;byte-boolean-vars&lt;/code&gt; utilizada por el compilador de bytes.</target>
        </trans-unit>
        <trans-unit id="3a8cd13dfa2e44b4ddf44780a2531422e59cdecc" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;throw&lt;/code&gt; finds the matching &lt;code&gt;catch&lt;/code&gt; based on the first argument: it searches for a &lt;code&gt;catch&lt;/code&gt; whose first argument is &lt;code&gt;eq&lt;/code&gt; to the one specified in the &lt;code&gt;throw&lt;/code&gt;. If there is more than one applicable &lt;code&gt;catch&lt;/code&gt;, the innermost one takes precedence. Thus, in the above example, the &lt;code&gt;throw&lt;/code&gt; specifies &lt;code&gt;foo&lt;/code&gt;, and the &lt;code&gt;catch&lt;/code&gt; in &lt;code&gt;foo-outer&lt;/code&gt; specifies the same symbol, so that &lt;code&gt;catch&lt;/code&gt; is the applicable one (assuming there is no other matching &lt;code&gt;catch&lt;/code&gt; in between).</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;throw&lt;/code&gt; busca la &lt;code&gt;catch&lt;/code&gt; coincidente basada en el primer argumento: busca una &lt;code&gt;catch&lt;/code&gt; cuyo primer argumento sea &lt;code&gt;eq&lt;/code&gt; al especificado en el &lt;code&gt;throw&lt;/code&gt; . Si hay m&amp;aacute;s de una &lt;code&gt;catch&lt;/code&gt; aplicable , prevalecer&amp;aacute; la m&amp;aacute;s interna. Por lo tanto, en el ejemplo anterior, el &lt;code&gt;throw&lt;/code&gt; especifica &lt;code&gt;foo&lt;/code&gt; , y el &lt;code&gt;catch&lt;/code&gt; en &lt;code&gt;foo-outer&lt;/code&gt; especifica el mismo s&amp;iacute;mbolo, de modo que &lt;code&gt;catch&lt;/code&gt; es el aplicable (asumiendo que no hay otro &lt;code&gt;catch&lt;/code&gt; coincidente en el medio).</target>
        </trans-unit>
        <trans-unit id="5661573f71139d597425c8fd348b8554cabd492f" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;tool-bar-make-keymap&lt;/code&gt;, in turn, derives the actual tool bar map dynamically from the value of the variable &lt;code&gt;tool-bar-map&lt;/code&gt;. Hence, you should normally adjust the default (global) tool bar by changing that map. Some major modes, such as Info mode, completely replace the global tool bar by making &lt;code&gt;tool-bar-map&lt;/code&gt; buffer-local and setting it to a different keymap.</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;tool-bar-make-keymap&lt;/code&gt; , a su vez, deriva el mapa real de la barra de herramientas din&amp;aacute;micamente del valor de la variable &lt;code&gt;tool-bar-map&lt;/code&gt; . Por lo tanto, normalmente deber&amp;iacute;a ajustar la barra de herramientas predeterminada (global) cambiando ese mapa. Algunos modos principales, como el modo Informaci&amp;oacute;n, reemplazan por completo la barra de herramientas global haciendo &lt;code&gt;tool-bar-map&lt;/code&gt; barra de herramientas sea local al b&amp;uacute;fer y configur&amp;aacute;ndolo en un mapa de teclas diferente.</target>
        </trans-unit>
        <trans-unit id="05e5fdd0ff72a822c0cc55151d5a6c9edaf5d75c" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;view-buffer&lt;/code&gt; does not enable View mode in buffers whose mode-class is special, because such modes usually provide their own View-like bindings.</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;view-buffer&lt;/code&gt; no habilita el modo View en b&amp;uacute;feres cuya clase de modo es especial, porque tales modos generalmente proporcionan sus propios enlaces tipo View.</target>
        </trans-unit>
        <trans-unit id="a049ee6872282215d8c5e6687a889741cbf6e11f" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;write-region&lt;/code&gt; converts the data which it writes to the appropriate file formats specified by &lt;code&gt;buffer-file-format&lt;/code&gt; and also calls the functions in the list &lt;code&gt;write-region-annotate-functions&lt;/code&gt;. See &lt;a href=&quot;format-conversion#Format-Conversion&quot;&gt;Format Conversion&lt;/a&gt;.</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;write-region&lt;/code&gt; convierte los datos que escribe a los formatos de archivo apropiados especificados por &lt;code&gt;buffer-file-format&lt;/code&gt; y tambi&amp;eacute;n llama a las funciones en la lista &lt;code&gt;write-region-annotate-functions&lt;/code&gt; . Consulte &lt;a href=&quot;format-conversion#Format-Conversion&quot;&gt;Conversi&amp;oacute;n de formato&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2746b27a56c8ff0cc634f6dc15fff67621f22f61" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;write-region&lt;/code&gt;:</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;write-region&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="37f0357f6437343569a44c1bbed9f09179966f30" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;x-get-resource&lt;/code&gt; retrieves a resource value from the X Window defaults database.</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;x-get-resource&lt;/code&gt; recupera un valor de recurso de la base de datos predeterminada de X Window.</target>
        </trans-unit>
        <trans-unit id="fb6053497d7338bd26e25c53f5d17dd9d465fac4" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;x-parse-geometry&lt;/code&gt; converts a standard X window geometry string to an alist that you can use as part of the argument to &lt;code&gt;make-frame&lt;/code&gt;.</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;x-parse-geometry&lt;/code&gt; convierte una cadena de geometr&amp;iacute;a de ventana X est&amp;aacute;ndar en una lista que puede usar como parte del argumento de &lt;code&gt;make-frame&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="765f4cca514fe5d2dfb2aca5ee2926f744c31bf9" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;y-or-n-p-with-timeout&lt;/code&gt; provides a simple way to use a timer to avoid waiting too long for an answer. See &lt;a href=&quot;yes_002dor_002dno-queries#Yes_002dor_002dNo-Queries&quot;&gt;Yes-or-No Queries&lt;/a&gt;.</source>
          <target state="translated">La funci&amp;oacute;n &lt;code&gt;y-or-n-p-with-timeout&lt;/code&gt; proporciona una forma sencilla de utilizar un temporizador para evitar esperar demasiado por una respuesta. Consulte Consultas de &lt;a href=&quot;yes_002dor_002dno-queries#Yes_002dor_002dNo-Queries&quot;&gt;s&amp;iacute; o no&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="df0ab2f26bcca2763cb6e43bfe8851ca6f1b858d" translate="yes" xml:space="preserve">
          <source>The function &lt;var&gt;fun&lt;/var&gt; was defined as an autoload.</source>
          <target state="translated">La funci&amp;oacute;n &lt;var&gt;fun&lt;/var&gt; se defini&amp;oacute; como una carga autom&amp;aacute;tica.</target>
        </trans-unit>
        <trans-unit id="54c8609b51778bf7d45e6af7c3a0089e651dafd8" translate="yes" xml:space="preserve">
          <source>The function &lt;var&gt;fun&lt;/var&gt; was defined.</source>
          <target state="translated">Se defini&amp;oacute; la funci&amp;oacute;n &lt;var&gt;fun&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="1197aefcb8e997f46503d415a6f7bd440fa422e7" translate="yes" xml:space="preserve">
          <source>The function &lt;var&gt;fun&lt;/var&gt; was previously an autoload before this library redefined it as a function. The following element is always &lt;code&gt;(defun . &lt;var&gt;fun&lt;/var&gt;)&lt;/code&gt;, which represents defining &lt;var&gt;fun&lt;/var&gt; as a function.</source>
          <target state="translated">La funci&amp;oacute;n &lt;var&gt;fun&lt;/var&gt; era previamente una carga autom&amp;aacute;tica antes de que esta biblioteca la redefiniera como funci&amp;oacute;n. El siguiente elemento es siempre &lt;code&gt;(defun . &lt;var&gt;fun&lt;/var&gt;)&lt;/code&gt; , que representa definir la &lt;var&gt;fun&lt;/var&gt; como una funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="4a8ed9e0e2bf16ef5d1d934174aa221a2fe5895d" translate="yes" xml:space="preserve">
          <source>The function &lt;var&gt;hash-fn&lt;/var&gt; should accept one argument, a key, and return an integer that is the hash code of that key. For good results, the function should use the whole range of fixnums for hash codes, including negative fixnums.</source>
          <target state="translated">La funci&amp;oacute;n &lt;var&gt;hash-fn&lt;/var&gt; debe aceptar un argumento, una clave y devolver un entero que es el c&amp;oacute;digo hash de esa clave. Para obtener buenos resultados, la funci&amp;oacute;n debe utilizar toda la gama de fixnums para c&amp;oacute;digos hash, incluidos fixnums negativos.</target>
        </trans-unit>
        <trans-unit id="bceb96a81c6ae7fe6ca85c909a8b34d1e250dcc7" translate="yes" xml:space="preserve">
          <source>The function &lt;var&gt;restore-buffer-function&lt;/var&gt; will be called with argument list</source>
          <target state="translated">La funci&amp;oacute;n &lt;var&gt;restore-buffer-function&lt;/var&gt; se llamar&amp;aacute; con la lista de argumentos</target>
        </trans-unit>
        <trans-unit id="542f7b37d57061c8a923579b6d757e44f707ccd9" translate="yes" xml:space="preserve">
          <source>The function &lt;var&gt;test-fn&lt;/var&gt; should accept two arguments, two keys, and return non-&lt;code&gt;nil&lt;/code&gt; if they are considered the same.</source>
          <target state="translated">La funci&amp;oacute;n &lt;var&gt;test-fn&lt;/var&gt; deber&amp;iacute;a aceptar dos argumentos, dos claves y devolver un valor no &lt;code&gt;nil&lt;/code&gt; si se consideran iguales.</target>
        </trans-unit>
        <trans-unit id="0267fd50dfdf570f50991445f5d60831fec0bbb2" translate="yes" xml:space="preserve">
          <source>The function calls &lt;code&gt;set-auto-mode&lt;/code&gt; to choose and set a major mode. If this does not specify a mode, the buffer stays in the major mode determined by the default value of &lt;code&gt;major-mode&lt;/code&gt; (see below).</source>
          <target state="translated">La funci&amp;oacute;n llama a &lt;code&gt;set-auto-mode&lt;/code&gt; para elegir y configurar un modo principal. Si esto no especifica un modo, el b&amp;uacute;fer permanece en el modo principal determinado por el valor predeterminado del &lt;code&gt;major-mode&lt;/code&gt; (ver m&amp;aacute;s abajo).</target>
        </trans-unit>
        <trans-unit id="b1b2ebec7b7f741cc24d28e6e32513259cab8c5e" translate="yes" xml:space="preserve">
          <source>The function cell holds a symbol&amp;rsquo;s function definition. Often, we refer to &amp;ldquo;the function &lt;code&gt;foo&lt;/code&gt;&amp;rdquo; when we really mean the function stored in the function cell of &lt;code&gt;foo&lt;/code&gt;; we make the distinction explicit only when necessary. Typically, the function cell is used to hold a function (see &lt;a href=&quot;functions#Functions&quot;&gt;Functions&lt;/a&gt;) or a macro (see &lt;a href=&quot;macros#Macros&quot;&gt;Macros&lt;/a&gt;). However, it can also be used to hold a symbol (see &lt;a href=&quot;function-indirection#Function-Indirection&quot;&gt;Function Indirection&lt;/a&gt;), keyboard macro (see &lt;a href=&quot;keyboard-macros#Keyboard-Macros&quot;&gt;Keyboard Macros&lt;/a&gt;), keymap (see &lt;a href=&quot;keymaps#Keymaps&quot;&gt;Keymaps&lt;/a&gt;), or autoload object (see &lt;a href=&quot;autoloading#Autoloading&quot;&gt;Autoloading&lt;/a&gt;). To get the contents of a symbol&amp;rsquo;s function cell, use the function &lt;code&gt;symbol-function&lt;/code&gt; (see &lt;a href=&quot;function-cells#Function-Cells&quot;&gt;Function Cells&lt;/a&gt;).</source>
          <target state="translated">La celda de funci&amp;oacute;n contiene la definici&amp;oacute;n de funci&amp;oacute;n de un s&amp;iacute;mbolo. A menudo, nos referimos a &amp;ldquo;la funci&amp;oacute;n &lt;code&gt;foo&lt;/code&gt; &amp;rdquo; cuando realmente nos referimos a la funci&amp;oacute;n almacenada en la celda de funci&amp;oacute;n de &lt;code&gt;foo&lt;/code&gt; ; hacemos la distinci&amp;oacute;n expl&amp;iacute;cita s&amp;oacute;lo cuando es necesario. Normalmente, la celda de funci&amp;oacute;n se utiliza para contener una funci&amp;oacute;n (consulte &lt;a href=&quot;functions#Functions&quot;&gt;Funciones&lt;/a&gt; ) o una macro (consulte &lt;a href=&quot;macros#Macros&quot;&gt;Macros&lt;/a&gt; ). Sin embargo, tambi&amp;eacute;n se puede utilizar para contener un s&amp;iacute;mbolo (consulte &lt;a href=&quot;function-indirection#Function-Indirection&quot;&gt;Indirecci&amp;oacute;n de funciones&lt;/a&gt; ), macro de teclado (consulte &lt;a href=&quot;keyboard-macros#Keyboard-Macros&quot;&gt;Macros de teclado&lt;/a&gt; ), mapa de &lt;a href=&quot;keymaps#Keymaps&quot;&gt;teclas&lt;/a&gt; (consulte Mapas de teclas ) u objeto de carga autom&amp;aacute;tica (consulte &lt;a href=&quot;autoloading#Autoloading&quot;&gt;Carga autom&amp;aacute;tica&lt;/a&gt; ). Para obtener el contenido de la celda de funci&amp;oacute;n de un s&amp;iacute;mbolo, use la funci&amp;oacute;n &lt;code&gt;symbol-function&lt;/code&gt; (consulte &lt;a href=&quot;function-cells#Function-Cells&quot;&gt;Celdas de funci&amp;oacute;n&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="16328c91ba726096f5314f142ff38c105df7239d" translate="yes" xml:space="preserve">
          <source>The function cell or the value cell may be &lt;em&gt;void&lt;/em&gt;, which means that the cell does not reference any object. (This is not the same thing as holding the symbol &lt;code&gt;void&lt;/code&gt;, nor the same as holding the symbol &lt;code&gt;nil&lt;/code&gt;.) Examining a function or value cell that is void results in an error, such as &amp;lsquo;</source>
          <target state="translated">La celda de funci&amp;oacute;n o la celda de valor pueden estar &lt;em&gt;anuladas&lt;/em&gt; , lo que significa que la celda no hace referencia a ning&amp;uacute;n objeto. (Esto no es lo mismo que mantener el s&amp;iacute;mbolo &lt;code&gt;void&lt;/code&gt; , ni lo mismo que mantener el s&amp;iacute;mbolo &lt;code&gt;nil&lt;/code&gt; ). Examinar una celda de funci&amp;oacute;n o valor que est&amp;aacute; vac&amp;iacute;a da como resultado un error, como '</target>
        </trans-unit>
        <trans-unit id="77d0d2f3edeb3f16b9066342192972eab714c545" translate="yes" xml:space="preserve">
          <source>The function definition of &lt;var&gt;symbol&lt;/var&gt; is used in place of &lt;var&gt;symbol&lt;/var&gt;. If that too is a symbol, then this process is repeated, any number of times. Ultimately this should lead to an object that is a keymap, a command, or a keyboard macro.</source>
          <target state="translated">La definici&amp;oacute;n de funci&amp;oacute;n de &lt;var&gt;symbol&lt;/var&gt; se usa en lugar de &lt;var&gt;symbol&lt;/var&gt; . Si eso tambi&amp;eacute;n es un s&amp;iacute;mbolo, entonces este proceso se repite, cualquier n&amp;uacute;mero de veces. En &amp;uacute;ltima instancia, esto deber&amp;iacute;a conducir a un objeto que sea un mapa de teclas, un comando o una macro de teclado.</target>
        </trans-unit>
        <trans-unit id="70e234ce635436f65ccf5ff5428cbb855d712c68" translate="yes" xml:space="preserve">
          <source>The function is called by &lt;code&gt;syntax-ppss&lt;/code&gt; (see &lt;a href=&quot;position-parse#Position-Parse&quot;&gt;Position Parse&lt;/a&gt;), and by Font Lock mode during syntactic fontification (see &lt;a href=&quot;syntactic-font-lock#Syntactic-Font-Lock&quot;&gt;Syntactic Font Lock&lt;/a&gt;). It is called with two arguments, &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, which are the starting and ending positions of the text on which it should act. It is allowed to call &lt;code&gt;syntax-ppss&lt;/code&gt; on any position before &lt;var&gt;end&lt;/var&gt;. However, it should not call &lt;code&gt;syntax-ppss-flush-cache&lt;/code&gt;; so, it is not allowed to call &lt;code&gt;syntax-ppss&lt;/code&gt; on some position and later modify the buffer at an earlier position.</source>
          <target state="translated">La funci&amp;oacute;n es llamada por &lt;code&gt;syntax-ppss&lt;/code&gt; (ver &lt;a href=&quot;position-parse#Position-Parse&quot;&gt;Position Parse&lt;/a&gt; ) y por el modo Font Lock durante la fontificaci&amp;oacute;n sint&amp;aacute;ctica (ver &lt;a href=&quot;syntactic-font-lock#Syntactic-Font-Lock&quot;&gt;Syntactic Font Lock&lt;/a&gt; ). Se llama con dos argumentos, &lt;var&gt;start&lt;/var&gt; y &lt;var&gt;end&lt;/var&gt; , que son las posiciones inicial y final del texto sobre las que debe actuar. Est&amp;aacute; permitido llamar a &lt;code&gt;syntax-ppss&lt;/code&gt; en cualquier posici&amp;oacute;n antes del &lt;var&gt;end&lt;/var&gt; . Sin embargo, no deber&amp;iacute;a llamar a &lt;code&gt;syntax-ppss-flush-cache&lt;/code&gt; ; por lo tanto, no est&amp;aacute; permitido llamar a &lt;code&gt;syntax-ppss&lt;/code&gt; en alguna posici&amp;oacute;n y luego modificar el b&amp;uacute;fer en una posici&amp;oacute;n anterior.</target>
        </trans-unit>
        <trans-unit id="7b365c1ea990ed74fa23e69f3e59bb3fef165d33" translate="yes" xml:space="preserve">
          <source>The function is called with one argument, the parse state at point returned by &lt;code&gt;parse-partial-sexp&lt;/code&gt;, and should return a face. The default value returns &lt;code&gt;font-lock-comment-face&lt;/code&gt; for comments and &lt;code&gt;font-lock-string-face&lt;/code&gt; for strings (see &lt;a href=&quot;faces-for-font-lock#Faces-for-Font-Lock&quot;&gt;Faces for Font Lock&lt;/a&gt;).</source>
          <target state="translated">La funci&amp;oacute;n se llama con un argumento, el estado de an&amp;aacute;lisis sint&amp;aacute;ctico en el punto devuelto por &lt;code&gt;parse-partial-sexp&lt;/code&gt; , y deber&amp;iacute;a devolver una cara. El valor predeterminado devuelve &lt;code&gt;font-lock-comment-face&lt;/code&gt; para los comentarios y &lt;code&gt;font-lock-string-face&lt;/code&gt; para las cadenas (consulte &lt;a href=&quot;faces-for-font-lock#Faces-for-Font-Lock&quot;&gt;Caras para el bloqueo de fuentes&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="9328a25f093f15182803d9023b33252b886864e6" translate="yes" xml:space="preserve">
          <source>The function is called with three arguments, &lt;var&gt;window&lt;/var&gt;, &lt;var&gt;object&lt;/var&gt;, and &lt;var&gt;pos&lt;/var&gt;. The second argument, &lt;var&gt;object&lt;/var&gt;, is either the overlay that had the property (for overlay buttons), or the buffer containing the button (for text property buttons). The other arguments have the same meaning as for the special text property &lt;code&gt;help-echo&lt;/code&gt;.</source>
          <target state="translated">La funci&amp;oacute;n se llama con tres argumentos, &lt;var&gt;window&lt;/var&gt; , &lt;var&gt;object&lt;/var&gt; y &lt;var&gt;pos&lt;/var&gt; . El segundo argumento, &lt;var&gt;object&lt;/var&gt; , es la superposici&amp;oacute;n que ten&amp;iacute;a la propiedad (para botones superpuestos) o el b&amp;uacute;fer que contiene el bot&amp;oacute;n (para botones de propiedades de texto). Los otros argumentos tienen el mismo significado que para la propiedad de texto especial &lt;code&gt;help-echo&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9bcf0f786e7063f34c780ba9d084a745154f7f7f" translate="yes" xml:space="preserve">
          <source>The function is called with two arguments, the severity level and its entry in &lt;code&gt;warning-levels&lt;/code&gt;. It should return a list to use as the entry (this value need not be an actual member of &lt;code&gt;warning-levels&lt;/code&gt;). By constructing this value, the function can change the severity of the warning, or specify different handling for a given severity level.</source>
          <target state="translated">La funci&amp;oacute;n se llama con dos argumentos, el nivel de gravedad y su entrada en &lt;code&gt;warning-levels&lt;/code&gt; . Debe devolver una lista para usar como entrada (este valor no necesita ser un miembro real de &lt;code&gt;warning-levels&lt;/code&gt; de advertencia ). Al construir este valor, la funci&amp;oacute;n puede cambiar la gravedad de la advertencia o especificar un manejo diferente para un nivel de gravedad determinado.</target>
        </trans-unit>
        <trans-unit id="a2a2dd9cb6611c3a2fb4ae6ecd12f7c5ac258cb7" translate="yes" xml:space="preserve">
          <source>The function is given three parameters, the standard &lt;var&gt;beg&lt;/var&gt;, &lt;var&gt;end&lt;/var&gt;, and &lt;var&gt;old-len&lt;/var&gt; from &lt;code&gt;after-change-functions&lt;/code&gt; (see &lt;a href=&quot;change-hooks#Change-Hooks&quot;&gt;Change Hooks&lt;/a&gt;). It should return either a cons of the beginning and end buffer positions (in that order) of the region to fontify, or &lt;code&gt;nil&lt;/code&gt; (which means choose the region in the standard way). This function needs to preserve point, the match-data, and the current restriction. The region it returns may start or end in the middle of a line.</source>
          <target state="translated">A la funci&amp;oacute;n se le dan tres par&amp;aacute;metros, el est&amp;aacute;ndar &lt;var&gt;beg&lt;/var&gt; , &lt;var&gt;end&lt;/var&gt; y &lt;var&gt;old-len&lt;/var&gt; de &lt;code&gt;after-change-functions&lt;/code&gt; (ver &lt;a href=&quot;change-hooks#Change-Hooks&quot;&gt;Change Hooks&lt;/a&gt; ). Deber&amp;iacute;a devolver las contras de las posiciones del b&amp;uacute;fer inicial y final (en ese orden) de la regi&amp;oacute;n a fontificar, o &lt;code&gt;nil&lt;/code&gt; (lo que significa elegir la regi&amp;oacute;n de la forma est&amp;aacute;ndar). Esta funci&amp;oacute;n necesita preservar el punto, los datos de coincidencia y la restricci&amp;oacute;n actual. La regi&amp;oacute;n que devuelve puede comenzar o terminar en medio de una l&amp;iacute;nea.</target>
        </trans-unit>
        <trans-unit id="d5d86a312c704be80fff26fc16b50d833ac4546d" translate="yes" xml:space="preserve">
          <source>The function now compares the two candidate prefixes heuristically: if the non-whitespace characters in the line 2 candidate occur in the same order in the line 1 candidate, the function returns the line 2 candidate. Otherwise, it returns the largest initial substring which is common to both candidates (which might be the empty string).</source>
          <target state="translated">La funci√≥n ahora compara los dos prefijos de los candidatos heur√≠sticamente:si los caracteres no blancos en el candidato de la l√≠nea 2 ocurren en el mismo orden en el candidato de la l√≠nea 1,la funci√≥n devuelve el candidato de la l√≠nea 2.En caso contrario,devuelve la mayor subcadena inicial que es com√∫n a ambos candidatos (que podr√≠a ser la cadena vac√≠a).</target>
        </trans-unit>
        <trans-unit id="3010538a15326f7f4a43ca9704f87dc561e6ae88" translate="yes" xml:space="preserve">
          <source>The function now has a list of regular expressions that it passes to &lt;code&gt;read-from-minibuffer&lt;/code&gt; to obtain the user&amp;rsquo;s input. The first element of the list is the default result in case of empty input. All elements of the list are available to the user as the &amp;ldquo;future minibuffer history&amp;rdquo; list (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Minibuffer-History.html#Minibuffer-History&quot;&gt;future list&lt;/a&gt; in</source>
          <target state="translated">La funci&amp;oacute;n ahora tiene una lista de expresiones regulares que pasa a &lt;code&gt;read-from-minibuffer&lt;/code&gt; para obtener la entrada del usuario. El primer elemento de la lista es el resultado predeterminado en caso de entrada vac&amp;iacute;a. Todos los elementos de la lista est&amp;aacute;n disponibles para el usuario como la lista de &quot;historial futuro del minib&amp;uacute;fer&quot; (ver &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Minibuffer-History.html#Minibuffer-History&quot;&gt;lista futura&lt;/a&gt; en</target>
        </trans-unit>
        <trans-unit id="ba7c33792fef049306216c0a9636aed9d4713b7a" translate="yes" xml:space="preserve">
          <source>The function now has a list of regular expressions that it passes to &lt;code&gt;read-from-minibuffer&lt;/code&gt; to obtain the user&amp;rsquo;s input. The first element of the list is the default result in case of empty input. All elements of the list are available to the user as the &amp;ldquo;future minibuffer history&amp;rdquo; list (see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Minibuffer-History.html#Minibuffer-History&quot;&gt;future list&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3712f3990384c32b001189f990196c3e25d4f1c" translate="yes" xml:space="preserve">
          <source>The function passed as &lt;code&gt;:request-dispatcher&lt;/code&gt; is responsible for handling the remote endpoint&amp;rsquo;s requests, which expect a reply from the local endpoint (in this case, the program you&amp;rsquo;re building). Inside that function, you may either return locally (a normal return) or non-locally (an error return). A local return value must be a Lisp object that can be serialized as JSON (see &lt;a href=&quot;parsing-json#Parsing-JSON&quot;&gt;Parsing JSON&lt;/a&gt;). This determines a success response, and the object is forwarded to the server as the JSONRPC &lt;code&gt;result&lt;/code&gt; object. A non-local return, achieved by calling the function &lt;code&gt;jsonrpc-error&lt;/code&gt;, causes an error response to be sent to the server. The details of the accompanying JSONRPC &lt;code&gt;error&lt;/code&gt; are filled out with whatever was passed to &lt;code&gt;jsonrpc-error&lt;/code&gt;. A non-local return triggered by an unexpected error of any other type also causes an error response to be sent (unless you have set &lt;code&gt;debug-on-error&lt;/code&gt;, in which case this calls the Lisp debugger, see &lt;a href=&quot;error-debugging#Error-Debugging&quot;&gt;Error Debugging&lt;/a&gt;).</source>
          <target state="translated">La funci&amp;oacute;n pasada como &lt;code&gt;:request-dispatcher&lt;/code&gt; es responsable de manejar las solicitudes del punto final remoto, que esperan una respuesta del punto final local (en este caso, el programa que est&amp;aacute; creando). Dentro de esa funci&amp;oacute;n, puede regresar localmente (una devoluci&amp;oacute;n normal) o no localmente (una devoluci&amp;oacute;n de error). Un valor de retorno local debe ser un objeto Lisp que se pueda serializar como JSON (consulte &lt;a href=&quot;parsing-json#Parsing-JSON&quot;&gt;An&amp;aacute;lisis de JSON&lt;/a&gt; ). Esto determina una respuesta de &amp;eacute;xito y el objeto se reenv&amp;iacute;a al servidor como el objeto de &lt;code&gt;result&lt;/code&gt; ado JSONRPC . Un retorno no local, logrado llamando a la funci&amp;oacute;n &lt;code&gt;jsonrpc-error&lt;/code&gt; , hace que se env&amp;iacute;e una respuesta de error al servidor. Los detalles del &lt;code&gt;error&lt;/code&gt; JSONRPC que lo acompa&amp;ntilde;a se completan con lo que se pas&amp;oacute; a &lt;code&gt;jsonrpc-error&lt;/code&gt; . Un retorno no local desencadenado por un error inesperado de cualquier otro tipo tambi&amp;eacute;n hace que se env&amp;iacute;e una respuesta de error (a menos que haya configurado &lt;code&gt;debug-on-error&lt;/code&gt; , en cuyo caso esto llama al depurador Lisp, consulte &lt;a href=&quot;error-debugging#Error-Debugging&quot;&gt;Depuraci&amp;oacute;n de errores&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="7f4f854a3fe920f9dd18f4fb474ba93f955016a3" translate="yes" xml:space="preserve">
          <source>The function returns &lt;code&gt;nil&lt;/code&gt; if images of this type are not supported. Otherwise it returns an image descriptor.</source>
          <target state="translated">La funci&amp;oacute;n devuelve &lt;code&gt;nil&lt;/code&gt; si no se admiten im&amp;aacute;genes de este tipo. De lo contrario, devuelve un descriptor de imagen.</target>
        </trans-unit>
        <trans-unit id="271e1437bfe3ecbde27422c4523f32b9c7ffd067" translate="yes" xml:space="preserve">
          <source>The function returns &lt;code&gt;t&lt;/code&gt; if it actually tried to redisplay, and &lt;code&gt;nil&lt;/code&gt; otherwise. A value of &lt;code&gt;t&lt;/code&gt; does not mean that redisplay proceeded to completion; it could have been preempted by newly arriving input.</source>
          <target state="translated">La funci&amp;oacute;n devuelve &lt;code&gt;t&lt;/code&gt; si realmente intent&amp;oacute; volver a mostrar, y &lt;code&gt;nil&lt;/code&gt; en caso contrario. Un valor de &lt;code&gt;t&lt;/code&gt; no significa que la nueva visualizaci&amp;oacute;n se haya completado; podr&amp;iacute;a haber sido reemplazado por una entrada reci&amp;eacute;n llegada.</target>
        </trans-unit>
        <trans-unit id="a2c86b439365c249c948c8efa2d07fe8ef2ae3a2" translate="yes" xml:space="preserve">
          <source>The function returns &lt;code&gt;t&lt;/code&gt; if it succeeds in setting the SELinux context of &lt;var&gt;filename&lt;/var&gt;. It returns &lt;code&gt;nil&lt;/code&gt; if the context was not set (e.g., if SELinux is disabled, or if Emacs was compiled without SELinux support).</source>
          <target state="translated">La funci&amp;oacute;n devuelve &lt;code&gt;t&lt;/code&gt; si tiene &amp;eacute;xito en establecer el contexto SELinux de &lt;var&gt;filename&lt;/var&gt; de archivo . Devuelve &lt;code&gt;nil&lt;/code&gt; si el contexto no fue establecido (por ejemplo, si SELinux est&amp;aacute; deshabilitado, o si Emacs fue compilado sin el soporte de SELinux).</target>
        </trans-unit>
        <trans-unit id="8aa3622a93da6a8f83161ce66b0a13088cd542a2" translate="yes" xml:space="preserve">
          <source>The function returns &lt;code&gt;t&lt;/code&gt; if it successfully sets the ACL of &lt;var&gt;filename&lt;/var&gt;, &lt;code&gt;nil&lt;/code&gt; otherwise.</source>
          <target state="translated">La funci&amp;oacute;n devuelve &lt;code&gt;t&lt;/code&gt; si establece correctamente la ACL de &lt;var&gt;filename&lt;/var&gt; , &lt;code&gt;nil&lt;/code&gt; en caso contrario.</target>
        </trans-unit>
        <trans-unit id="4adc69487e5f1fde8f02ec91f8b4f6899e76a34b" translate="yes" xml:space="preserve">
          <source>The function returns &lt;code&gt;t&lt;/code&gt; if the last actual modification time and Emacs&amp;rsquo;s recorded modification time are the same, &lt;code&gt;nil&lt;/code&gt; otherwise. It also returns &lt;code&gt;t&lt;/code&gt; if the buffer has no recorded last modification time, that is if &lt;code&gt;visited-file-modtime&lt;/code&gt; would return zero.</source>
          <target state="translated">La funci&amp;oacute;n devuelve &lt;code&gt;t&lt;/code&gt; si el tiempo de la &amp;uacute;ltima modificaci&amp;oacute;n real y el tiempo de modificaci&amp;oacute;n registrado de Emacs son los mismos, &lt;code&gt;nil&lt;/code&gt; en caso contrario. Tambi&amp;eacute;n devuelve &lt;code&gt;t&lt;/code&gt; si el b&amp;uacute;fer no tiene registrada la &amp;uacute;ltima hora de modificaci&amp;oacute;n, es decir, si el tiempo de modificaci&amp;oacute;n &lt;code&gt;visited-file-modtime&lt;/code&gt; devolver&amp;iacute;a cero.</target>
        </trans-unit>
        <trans-unit id="eb47fbb29639c623b56d142e3e79686425e3d118" translate="yes" xml:space="preserve">
          <source>The function returns a list of elements that look like this:</source>
          <target state="translated">La funci√≥n devuelve una lista de elementos que se parecen a esto:</target>
        </trans-unit>
        <trans-unit id="b576d5d04a96dba46391f5334628078f6e91dee5" translate="yes" xml:space="preserve">
          <source>The function returns an existing buffer if there is one; otherwise it creates a new buffer and reads the file into it. When &lt;code&gt;find-file-noselect&lt;/code&gt; uses an existing buffer, it first verifies that the file has not changed since it was last visited or saved in that buffer. If the file has changed, this function asks the user whether to reread the changed file. If the user says &amp;lsquo;</source>
          <target state="translated">La funci&amp;oacute;n devuelve un b&amp;uacute;fer existente si lo hay; de lo contrario, crea un nuevo b&amp;uacute;fer y lee el archivo en &amp;eacute;l. Cuando &lt;code&gt;find-file-noselect&lt;/code&gt; usa un b&amp;uacute;fer existente, primero verifica que el archivo no haya cambiado desde la &amp;uacute;ltima vez que se visit&amp;oacute; o se guard&amp;oacute; en ese b&amp;uacute;fer. Si el archivo ha cambiado, esta funci&amp;oacute;n pregunta al usuario si debe volver a leer el archivo modificado. Si el usuario dice '</target>
        </trans-unit>
        <trans-unit id="1501aaa047bf3d422b1edc8df28a63aa3d3d72eb" translate="yes" xml:space="preserve">
          <source>The function returns the new buffer position as its value.</source>
          <target state="translated">La funci√≥n devuelve la nueva posici√≥n del buffer como su valor.</target>
        </trans-unit>
        <trans-unit id="58c3348b08983e8a23db0b1d6c78b02a290ca8f9" translate="yes" xml:space="preserve">
          <source>The function returns the text of the &lt;var&gt;long-answer&lt;/var&gt; selected by the user, regardless of whether long or short answers were shown in the prompt and typed by the user.</source>
          <target state="translated">La funci&amp;oacute;n devuelve el texto de la &lt;var&gt;long-answer&lt;/var&gt; seleccionada por el usuario, independientemente de si las respuestas largas o cortas se mostraron en el indicador y el usuario las escribi&amp;oacute;.</target>
        </trans-unit>
        <trans-unit id="715f03109b9380bc908d0550c413f8b1448908f0" translate="yes" xml:space="preserve">
          <source>The function returns the value that &lt;var&gt;func&lt;/var&gt; returned.</source>
          <target state="translated">La funci&amp;oacute;n devuelve el valor que devolvi&amp;oacute; &lt;var&gt;func&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="0e79ba4a0ec06385532067bc2dfd92eef04abf37" translate="yes" xml:space="preserve">
          <source>The function scans text for a change in the &lt;var&gt;prop&lt;/var&gt; property, then returns the position of the change. The scan goes forward from position &lt;var&gt;pos&lt;/var&gt; in the string or buffer &lt;var&gt;object&lt;/var&gt;. In other words, this function returns the position of the first character beyond &lt;var&gt;pos&lt;/var&gt; whose &lt;var&gt;prop&lt;/var&gt; property differs from that of the character just after &lt;var&gt;pos&lt;/var&gt;.</source>
          <target state="translated">La funci&amp;oacute;n escanea el texto en busca de un cambio en la propiedad &lt;var&gt;prop&lt;/var&gt; , luego devuelve la posici&amp;oacute;n del cambio. El escaneo avanza desde la posici&amp;oacute;n &lt;var&gt;pos&lt;/var&gt; en la cadena o el &lt;var&gt;object&lt;/var&gt; b&amp;uacute;fer . En otras palabras, esta funci&amp;oacute;n devuelve la posici&amp;oacute;n del primer car&amp;aacute;cter m&amp;aacute;s all&amp;aacute; de &lt;var&gt;pos&lt;/var&gt; cuya propiedad &lt;var&gt;prop&lt;/var&gt; difiere de la del car&amp;aacute;cter justo despu&amp;eacute;s de &lt;var&gt;pos&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="bcc76f6509469249f57ba4ca3b63e8ba3ae15e54" translate="yes" xml:space="preserve">
          <source>The function scans the text forward from position &lt;var&gt;pos&lt;/var&gt; in the string or buffer &lt;var&gt;object&lt;/var&gt; until it finds a change in some text property, then returns the position of the change. In other words, it returns the position of the first character beyond &lt;var&gt;pos&lt;/var&gt; whose properties are not identical to those of the character just after &lt;var&gt;pos&lt;/var&gt;.</source>
          <target state="translated">La funci&amp;oacute;n escanea el texto hacia adelante desde la posici&amp;oacute;n &lt;var&gt;pos&lt;/var&gt; en la cadena o el &lt;var&gt;object&lt;/var&gt; b&amp;uacute;fer hasta que encuentra un cambio en alguna propiedad del texto, luego devuelve la posici&amp;oacute;n del cambio. En otras palabras, devuelve la posici&amp;oacute;n del primer car&amp;aacute;cter m&amp;aacute;s all&amp;aacute; de &lt;var&gt;pos&lt;/var&gt; cuyas propiedades no son id&amp;eacute;nticas a las del car&amp;aacute;cter inmediatamente despu&amp;eacute;s de &lt;var&gt;pos&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="b2569b6d3f2a4920cd818025751b427d49a3a937" translate="yes" xml:space="preserve">
          <source>The function searches for &lt;var&gt;image&lt;/var&gt; first using &lt;code&gt;image-load-path&lt;/code&gt;, excluding</source>
          <target state="translated">La funci&amp;oacute;n busca la &lt;var&gt;image&lt;/var&gt; n primero usando &lt;code&gt;image-load-path&lt;/code&gt; , excluyendo</target>
        </trans-unit>
        <trans-unit id="f61dc72b5ae5c926752f9b2ea93c7b17926bb658" translate="yes" xml:space="preserve">
          <source>The function should report its choice by placing the region around it. A good choice is a range of text large enough to give proper results, but not too large so that refontification becomes slow. Typical values are &lt;code&gt;mark-defun&lt;/code&gt; for programming modes or &lt;code&gt;mark-paragraph&lt;/code&gt; for textual modes.</source>
          <target state="translated">La funci&amp;oacute;n debe informar su elecci&amp;oacute;n colocando la regi&amp;oacute;n a su alrededor. Una buena opci&amp;oacute;n es un rango de texto lo suficientemente grande como para dar resultados adecuados, pero no demasiado grande para que la refontificaci&amp;oacute;n se vuelva lenta. Los valores t&amp;iacute;picos son &lt;code&gt;mark-defun&lt;/code&gt; para modos de programaci&amp;oacute;n o &lt;code&gt;mark-paragraph&lt;/code&gt; para modos textuales.</target>
        </trans-unit>
        <trans-unit id="e569deba575fd9eecea0636fcb5581d08c592fbf" translate="yes" xml:space="preserve">
          <source>The function specified by this option is called to automatically hide frames. This function is called with one argument&amp;mdash;a frame.</source>
          <target state="translated">La funci&amp;oacute;n especificada por esta opci&amp;oacute;n se llama para ocultar marcos autom&amp;aacute;ticamente. Esta funci&amp;oacute;n se llama con un argumento: un marco.</target>
        </trans-unit>
        <trans-unit id="9e523dba464ace87982922281becd877253b4c57" translate="yes" xml:space="preserve">
          <source>The function specified here is called by &lt;code&gt;bury-buffer&lt;/code&gt; (see &lt;a href=&quot;buffer-list#Buffer-List&quot;&gt;Buffer List&lt;/a&gt;) when the selected window is dedicated and shows the buffer to bury. It is also called by &lt;code&gt;quit-restore-window&lt;/code&gt; (see above) when the frame of the window to quit has been specially created for displaying that window&amp;rsquo;s buffer and the buffer is not killed.</source>
          <target state="translated">La funci&amp;oacute;n especificada aqu&amp;iacute; es llamada por &lt;code&gt;bury-buffer&lt;/code&gt; (ver &lt;a href=&quot;buffer-list#Buffer-List&quot;&gt;Lista de b&amp;uacute;fer&lt;/a&gt; ) cuando la ventana seleccionada est&amp;aacute; dedicada y muestra el b&amp;uacute;fer para enterrar. Tambi&amp;eacute;n es llamado por &lt;code&gt;quit-restore-window&lt;/code&gt; (ver arriba) cuando el marco de la ventana para salir se ha creado especialmente para mostrar el b&amp;uacute;fer de esa ventana y el b&amp;uacute;fer no se mata.</target>
        </trans-unit>
        <trans-unit id="4c5fe7b1d57c09eb96638f6d29a8d55ea70693dc" translate="yes" xml:space="preserve">
          <source>The function to call when the user invokes the button, which is passed the single argument &lt;var&gt;button&lt;/var&gt;. By default this is &lt;code&gt;ignore&lt;/code&gt;, which does nothing.</source>
          <target state="translated">La funci&amp;oacute;n a llamar cuando el usuario invoca el bot&amp;oacute;n, al que se le pasa el &lt;var&gt;button&lt;/var&gt; argumento &amp;uacute;nico . Por defecto, esto es &lt;code&gt;ignore&lt;/code&gt; , que no hace nada.</target>
        </trans-unit>
        <trans-unit id="0d346489c44defc5f50064e457e61d13f6a78be1" translate="yes" xml:space="preserve">
          <source>The function to define a new widget is called &lt;code&gt;define-widget&lt;/code&gt;. The first argument is the symbol we want to make a new widget type. The second argument is a symbol representing an existing widget, the new widget is going to be defined in terms of difference from the existing widget. For the purpose of defining new customization types, the &lt;code&gt;lazy&lt;/code&gt; widget is perfect, because it accepts a &lt;code&gt;:type&lt;/code&gt; keyword argument with the same syntax as the keyword argument to &lt;code&gt;defcustom&lt;/code&gt; with the same name. The third argument is a documentation string for the new widget. You will be able to see that string with the</source>
          <target state="translated">La funci&amp;oacute;n para definir un nuevo widget se llama &lt;code&gt;define-widget&lt;/code&gt; . El primer argumento es el s&amp;iacute;mbolo que queremos hacer un nuevo tipo de widget. El segundo argumento es un s&amp;iacute;mbolo que representa un widget existente, el nuevo widget se definir&amp;aacute; en t&amp;eacute;rminos de diferencia con el widget existente. Con el fin de definir nuevos tipos de personalizaci&amp;oacute;n, el widget &lt;code&gt;lazy&lt;/code&gt; es perfecto, porque acepta un argumento de palabra clave &lt;code&gt;:type&lt;/code&gt; con la misma sintaxis que el argumento de palabra clave para &lt;code&gt;defcustom&lt;/code&gt; con el mismo nombre. El tercer argumento es una cadena de documentaci&amp;oacute;n para el nuevo widget. Podr&amp;aacute;s ver esa cadena con el</target>
        </trans-unit>
        <trans-unit id="a3be86b3d84b881b3e6d6fe8ec9995afa24e5702" translate="yes" xml:space="preserve">
          <source>The function&amp;rsquo;s return value is the string typed by the user in the minibuffer. However, when called interactively or if the optional argument &lt;var&gt;convert&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it converts any input color name into the corresponding RGB value string and instead returns that. This function requires a valid color specification to be input. Empty color names are allowed when &lt;var&gt;allow-empty&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; and the user enters null input.</source>
          <target state="translated">El valor de retorno de la funci&amp;oacute;n es la cadena escrita por el usuario en el minib&amp;uacute;fer. Sin embargo, cuando se llama de forma interactiva o si el argumento opcional &lt;var&gt;convert&lt;/var&gt; ir no es &lt;code&gt;nil&lt;/code&gt; , convierte cualquier nombre de color de entrada en la cadena de valor RGB correspondiente y, en su lugar, lo devuelve. Esta funci&amp;oacute;n requiere la entrada de una especificaci&amp;oacute;n de color v&amp;aacute;lida. Se permiten nombres de colores vac&amp;iacute;os cuando &lt;var&gt;allow-empty&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; y el usuario ingresa una entrada nula.</target>
        </trans-unit>
        <trans-unit id="24f9a1a492a75ddcf165b535a392f152caa63130" translate="yes" xml:space="preserve">
          <source>The functions &lt;code&gt;create-image&lt;/code&gt;, &lt;code&gt;defimage&lt;/code&gt; and &lt;code&gt;find-image&lt;/code&gt; provide convenient ways to create image descriptors.</source>
          <target state="translated">Las funciones &lt;code&gt;create-image&lt;/code&gt; , &lt;code&gt;defimage&lt;/code&gt; y &lt;code&gt;find-image&lt;/code&gt; proporcionan formas convenientes de crear descriptores de im&amp;aacute;genes.</target>
        </trans-unit>
        <trans-unit id="930041ed415a386650d1c27097780e324d3d97ff" translate="yes" xml:space="preserve">
          <source>The functions &lt;code&gt;default-value&lt;/code&gt; and &lt;code&gt;setq-default&lt;/code&gt; access and change a variable&amp;rsquo;s default value regardless of whether the current buffer has a buffer-local binding. For example, you could use &lt;code&gt;setq-default&lt;/code&gt; to change the default setting of &lt;code&gt;paragraph-start&lt;/code&gt; for most buffers; and this would work even when you are in a C or Lisp mode buffer that has a buffer-local value for this variable.</source>
          <target state="translated">Las funciones &lt;code&gt;default-value&lt;/code&gt; y &lt;code&gt;setq-default&lt;/code&gt; acceden y cambian el valor predeterminado de una variable independientemente de si el b&amp;uacute;fer actual tiene un enlace local de b&amp;uacute;fer. Por ejemplo, puede usar &lt;code&gt;setq-default&lt;/code&gt; para cambiar la configuraci&amp;oacute;n predeterminada de &lt;code&gt;paragraph-start&lt;/code&gt; para la mayor&amp;iacute;a de los b&amp;uacute;feres; y esto funcionar&amp;iacute;a incluso cuando est&amp;eacute; en un b&amp;uacute;fer en modo C o Lisp que tenga un valor local de b&amp;uacute;fer para esta variable.</target>
        </trans-unit>
        <trans-unit id="54fbaadcac6b546aa87b794bc4678dae8bd49959" translate="yes" xml:space="preserve">
          <source>The functions &lt;code&gt;event-modifiers&lt;/code&gt; and &lt;code&gt;event-basic-type&lt;/code&gt; are provided to get such information conveniently.</source>
          <target state="translated">Las funciones &lt;code&gt;event-modifiers&lt;/code&gt; y &lt;code&gt;event-basic-type&lt;/code&gt; se proporcionan para obtener dicha informaci&amp;oacute;n de manera conveniente.</target>
        </trans-unit>
        <trans-unit id="f14e4ed51e1588f4afeb3f2808a8e88fb021c9e4" translate="yes" xml:space="preserve">
          <source>The functions &lt;code&gt;ffloor&lt;/code&gt;, &lt;code&gt;fceiling&lt;/code&gt;, &lt;code&gt;fround&lt;/code&gt;, and &lt;code&gt;ftruncate&lt;/code&gt; take a floating-point argument and return a floating-point result whose value is a nearby integer. &lt;code&gt;ffloor&lt;/code&gt; returns the nearest integer below; &lt;code&gt;fceiling&lt;/code&gt;, the nearest integer above; &lt;code&gt;ftruncate&lt;/code&gt;, the nearest integer in the direction towards zero; &lt;code&gt;fround&lt;/code&gt;, the nearest integer.</source>
          <target state="translated">Las funciones &lt;code&gt;ffloor&lt;/code&gt; , &lt;code&gt;fceiling&lt;/code&gt; , &lt;code&gt;fround&lt;/code&gt; y &lt;code&gt;ftruncate&lt;/code&gt; toman un argumento de punto flotante y devuelven un resultado de punto flotante cuyo valor es un entero cercano. &lt;code&gt;ffloor&lt;/code&gt; devuelve el n&amp;uacute;mero entero m&amp;aacute;s cercano a continuaci&amp;oacute;n; &lt;code&gt;fceiling&lt;/code&gt; , el n&amp;uacute;mero entero m&amp;aacute;s cercano arriba; &lt;code&gt;ftruncate&lt;/code&gt; , el n&amp;uacute;mero entero m&amp;aacute;s cercano en la direcci&amp;oacute;n hacia cero; &lt;code&gt;fround&lt;/code&gt; , el entero m&amp;aacute;s cercano.</target>
        </trans-unit>
        <trans-unit id="2c140441fed92d7b6f61e961aac8a0aa69c39764" translate="yes" xml:space="preserve">
          <source>The functions &lt;code&gt;make-progress-reporter&lt;/code&gt; and &lt;code&gt;y-or-n-p&lt;/code&gt; don&amp;rsquo;t have to do anything special to activate the message log combination feature. It operates whenever two consecutive messages are logged that share a common prefix ending in &amp;lsquo;</source>
          <target state="translated">Las funciones &lt;code&gt;make-progress-reporter&lt;/code&gt; y &lt;code&gt;y-or-n-p&lt;/code&gt; no tienen que hacer nada especial para activar la funci&amp;oacute;n de combinaci&amp;oacute;n de registro de mensajes. Funciona siempre que se registran dos mensajes consecutivos que comparten un prefijo com&amp;uacute;n que termina en '</target>
        </trans-unit>
        <trans-unit id="1da791873fb7d70506573ba68b6bb43c2ea88baa" translate="yes" xml:space="preserve">
          <source>The functions &lt;code&gt;match-data&lt;/code&gt; and &lt;code&gt;set-match-data&lt;/code&gt; read or write the entire match data, all at once.</source>
          <target state="translated">Las funciones &lt;code&gt;match-data&lt;/code&gt; y &lt;code&gt;set-match-data&lt;/code&gt; leen o escriben todos los datos de coincidencia, todo a la vez.</target>
        </trans-unit>
        <trans-unit id="9f3763eba26d0fcd98983ff84241c85f7df4ee68" translate="yes" xml:space="preserve">
          <source>The functions &lt;code&gt;mouse-position&lt;/code&gt; and &lt;code&gt;set-mouse-position&lt;/code&gt; give access to the current position of the mouse.</source>
          <target state="translated">Las funciones &lt;code&gt;mouse-position&lt;/code&gt; y &lt;code&gt;set-mouse-position&lt;/code&gt; dan acceso a la posici&amp;oacute;n actual del mouse.</target>
        </trans-unit>
        <trans-unit id="f6d9b7af5bfb64034127dfa877a8ed48be4859ab" translate="yes" xml:space="preserve">
          <source>The functions &lt;code&gt;window-next-sibling&lt;/code&gt; and &lt;code&gt;window-prev-sibling&lt;/code&gt; should not be confused with the functions &lt;code&gt;next-window&lt;/code&gt; and &lt;code&gt;previous-window&lt;/code&gt;, which return the next and previous window, respectively, in the cyclic ordering of windows (see &lt;a href=&quot;cyclic-window-ordering#Cyclic-Window-Ordering&quot;&gt;Cyclic Window Ordering&lt;/a&gt;).</source>
          <target state="translated">Las funciones &lt;code&gt;window-next-sibling&lt;/code&gt; y &lt;code&gt;window-prev-sibling&lt;/code&gt; no deben confundirse con las funciones &lt;code&gt;next-window&lt;/code&gt; y &lt;code&gt;previous-window&lt;/code&gt; , que devuelven la ventana siguiente y anterior, respectivamente, en el orden c&amp;iacute;clico de ventanas (ver &lt;a href=&quot;cyclic-window-ordering#Cyclic-Window-Ordering&quot;&gt;Orden c&amp;iacute;clico de ventanas&lt;/a&gt; ) .</target>
        </trans-unit>
        <trans-unit id="a4599c26cca67f961f777727cb6555459567d4a8" translate="yes" xml:space="preserve">
          <source>The functions &lt;code&gt;window-state-get&lt;/code&gt; and &lt;code&gt;window-state-put&lt;/code&gt; also allow to exchange the contents of two live windows. The following function does precisely that:</source>
          <target state="translated">Las funciones &lt;code&gt;window-state-get&lt;/code&gt; y &lt;code&gt;window-state-put&lt;/code&gt; tambi&amp;eacute;n permiten intercambiar el contenido de dos ventanas en vivo. La siguiente funci&amp;oacute;n hace precisamente eso:</target>
        </trans-unit>
        <trans-unit id="9fce438f0ed03253c60350ad3e2d979328b783c3" translate="yes" xml:space="preserve">
          <source>The functions and variables described in this section evaluate forms, specify limits to the evaluation process, or record recently returned values. Loading a file also does evaluation (see &lt;a href=&quot;loading#Loading&quot;&gt;Loading&lt;/a&gt;).</source>
          <target state="translated">Las funciones y variables descritas en esta secci&amp;oacute;n eval&amp;uacute;an formularios, especifican l&amp;iacute;mites al proceso de evaluaci&amp;oacute;n o registran valores devueltos recientemente. La carga de un archivo tambi&amp;eacute;n hace la evaluaci&amp;oacute;n (ver &lt;a href=&quot;loading#Loading&quot;&gt;Carga&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="8e4bd3a8ad416b6b274e61c0311ccc7aceb93329" translate="yes" xml:space="preserve">
          <source>The functions are called in the order listed, with one argument, a buffer position &lt;var&gt;pos&lt;/var&gt;. Collectively they should attempt to assign faces to the text in the current buffer starting at &lt;var&gt;pos&lt;/var&gt;.</source>
          <target state="translated">Las funciones se llaman en el orden indicado, con un argumento, una posici&amp;oacute;n de b&amp;uacute;fer &lt;var&gt;pos&lt;/var&gt; . En conjunto, deber&amp;iacute;an intentar asignar caras al texto en el b&amp;uacute;fer actual comenzando en la &lt;var&gt;pos&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="6521a8bc086f1a3f8aefcf593df4fa2328b88776" translate="yes" xml:space="preserve">
          <source>The functions below signal an error if &lt;var&gt;keymap&lt;/var&gt; is not a keymap, or if &lt;var&gt;key&lt;/var&gt; is not a string or vector representing a key sequence. You can use event types (symbols) as shorthand for events that are lists. The &lt;code&gt;kbd&lt;/code&gt; function (see &lt;a href=&quot;key-sequences#Key-Sequences&quot;&gt;Key Sequences&lt;/a&gt;) is a convenient way to specify the key sequence.</source>
          <target state="translated">Las funciones siguientes indican un error si el &lt;var&gt;keymap&lt;/var&gt; &lt;var&gt;key&lt;/var&gt; no es un mapa de teclas , o si la clave no es una cadena o vector que represente una secuencia de teclas. Puede utilizar tipos de eventos (s&amp;iacute;mbolos) como forma abreviada de eventos que son listas. La funci&amp;oacute;n &lt;code&gt;kbd&lt;/code&gt; (consulte &lt;a href=&quot;key-sequences#Key-Sequences&quot;&gt;Secuencias de teclas&lt;/a&gt; ) es una forma conveniente de especificar la secuencia de teclas.</target>
        </trans-unit>
        <trans-unit id="78ab65059bf6060d13b0ce32e999f9aebe8f6925" translate="yes" xml:space="preserve">
          <source>The functions described in this section accept a fixed set of specification characters. The next section describes a function &lt;code&gt;format-spec&lt;/code&gt; which can accept custom specification characters, such as &amp;lsquo;</source>
          <target state="translated">Las funciones descritas en esta secci&amp;oacute;n aceptan un conjunto fijo de caracteres de especificaci&amp;oacute;n. La siguiente secci&amp;oacute;n describe una funci&amp;oacute;n &lt;code&gt;format-spec&lt;/code&gt; que puede aceptar caracteres de especificaci&amp;oacute;n personalizados, como '</target>
        </trans-unit>
        <trans-unit id="e86fa617815c4b094651f86026f3ee350a021eb8" translate="yes" xml:space="preserve">
          <source>The functions described in this section control how terminal colors are used by Emacs.</source>
          <target state="translated">Las funciones descritas en esta secci√≥n controlan el uso de los colores terminales por parte de Emacs.</target>
        </trans-unit>
        <trans-unit id="f169c28c5651085613c243ee2d7b8b6a97f3524f" translate="yes" xml:space="preserve">
          <source>The functions following next return the pixel widths and heights of the native, outer and inner frame and the text area (see &lt;a href=&quot;frame-layout#Frame-Layout&quot;&gt;Frame Layout&lt;/a&gt;) of a given frame. For a text terminal, the results are in characters rather than pixels.</source>
          <target state="translated">Las funciones que siguen a continuaci&amp;oacute;n devuelven los anchos y alturas de p&amp;iacute;xeles del marco nativo, exterior e interior y el &amp;aacute;rea de texto (ver &lt;a href=&quot;frame-layout#Frame-Layout&quot;&gt;Disposici&amp;oacute;n del marco&lt;/a&gt; ) de un marco dado. Para una terminal de texto, los resultados est&amp;aacute;n en caracteres en lugar de p&amp;iacute;xeles.</target>
        </trans-unit>
        <trans-unit id="9720c55f16c083bb07299d34092580b6ec7aab89" translate="yes" xml:space="preserve">
          <source>The functions for parsing words described below use the syntax table and &lt;code&gt;char-script-table&lt;/code&gt; to decide whether a given character is part of a word. See &lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;Syntax Tables&lt;/a&gt;, and see &lt;a href=&quot;character-properties#Character-Properties&quot;&gt;Character Properties&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e553855a8b2ca8a57ae076b9aaef6d677d36c1" translate="yes" xml:space="preserve">
          <source>The functions in &lt;code&gt;quit-window-hook&lt;/code&gt; are run before doing anything else.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e800d933c2fece3683cecc14ad7da075688816e" translate="yes" xml:space="preserve">
          <source>The functions in this list could be called either when the file is visited and Emacs wants to decode its contents, and/or when the file&amp;rsquo;s buffer is about to be saved and Emacs wants to determine how to encode its contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="669d58b77eada51f85ff6d10a60632f82115668b" translate="yes" xml:space="preserve">
          <source>The functions in this section are documented mainly because you can customize the naming conventions for backup files by redefining them. If you change one, you probably need to change the rest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddf6614534160f658305998c350626e957a6f335" translate="yes" xml:space="preserve">
          <source>The functions in this section describe the basic capabilities of a particular display. Lisp programs can use them to adapt their behavior to what the display can do. For example, a program that ordinarily uses a popup menu could use the minibuffer if popup menus are not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f00c70d2142808c1b8036e8e15d164e6ace38175" translate="yes" xml:space="preserve">
          <source>The functions in this section do not actually access files, so they can operate on file names that do not refer to an existing file or directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="016907d83a21967cc3e08258bf37e7e359803f3f" translate="yes" xml:space="preserve">
          <source>The functions in this section rename, copy, delete, link, and set the modes (permissions) of files. Typically, they signal a &lt;code&gt;file-error&lt;/code&gt; error if they fail to perform their function, reporting the system-dependent error message that describes the reason for the failure. If they fail because a file is missing, they signal a &lt;code&gt;file-missing&lt;/code&gt; error instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="890b0146bfdda395f86d14be742c512118143bed" translate="yes" xml:space="preserve">
          <source>The functions in this section return unpredictable values unless otherwise stated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f48a87c01a2f7dffcffdc543703f3903c8ef0749" translate="yes" xml:space="preserve">
          <source>The functions in this section test for numbers, or for a specific type of number. The functions &lt;code&gt;integerp&lt;/code&gt; and &lt;code&gt;floatp&lt;/code&gt; can take any type of Lisp object as argument (they would not be of much use otherwise), but the &lt;code&gt;zerop&lt;/code&gt; predicate requires a number as its argument. See also &lt;code&gt;integer-or-marker-p&lt;/code&gt; and &lt;code&gt;number-or-marker-p&lt;/code&gt;, in &lt;a href=&quot;predicates-on-markers#Predicates-on-Markers&quot;&gt;Predicates on Markers&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64495a754cd6c704e9f9d907a29b2bd6ed3d60e3" translate="yes" xml:space="preserve">
          <source>The functions on this hook should generally return quickly, since they may be called very often (e.g., from &lt;code&gt;post-command-hook&lt;/code&gt;). Supplying a function for &lt;var&gt;collection&lt;/var&gt; is strongly recommended if generating the list of completions is an expensive operation. Emacs may internally call functions in &lt;code&gt;completion-at-point-functions&lt;/code&gt; many times, but care about the value of &lt;var&gt;collection&lt;/var&gt; for only some of these calls. By supplying a function for &lt;var&gt;collection&lt;/var&gt;, Emacs can defer generating completions until necessary. You can use &lt;code&gt;completion-table-dynamic&lt;/code&gt; to create a wrapper function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b93b057b358caf809f0e8e2015f2926ba7f4928" translate="yes" xml:space="preserve">
          <source>The functions should record the faces they assign by setting the &lt;code&gt;face&lt;/code&gt; property. They should also add a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;fontified&lt;/code&gt; property to all the text they have assigned faces to. That property tells redisplay that faces have been assigned to that text already.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41a0cd34297ecae8f4a088b103fb22bcddfee322" translate="yes" xml:space="preserve">
          <source>The functions that modify the contents of buffers are described in &lt;a href=&quot;text#Text&quot;&gt;Text&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f40f1de7f1f1333998ea5f91c2f809716617bf8b" translate="yes" xml:space="preserve">
          <source>The functions you use in these hooks should save and restore the match data if they do anything that uses regular expressions; otherwise, they will interfere in bizarre ways with the editing operations that call them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9072c6223cc7e87e04b922ff1eeb8eb85826e5dd" translate="yes" xml:space="preserve">
          <source>The fundamental interface to input methods is through the variable &lt;code&gt;input-method-function&lt;/code&gt;. See &lt;a href=&quot;reading-one-event#Reading-One-Event&quot;&gt;Reading One Event&lt;/a&gt;, and &lt;a href=&quot;invoking-the-input-method#Invoking-the-Input-Method&quot;&gt;Invoking the Input Method&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="864ab21bc83654287c4cd15a4aee02d9312d9750" translate="yes" xml:space="preserve">
          <source>The gap in the buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2874b04cef330c832d718bb6b17cf07f619d5cf4" translate="yes" xml:space="preserve">
          <source>The garbage collector described above is used to manage data visible from Lisp programs, as well as most of the data internally used by the Lisp interpreter. Sometimes it may be useful to allocate temporary internal objects using the C stack of the interpreter. This can help performance, as stack allocation is typically faster than using heap memory to allocate and the garbage collector to free. The downside is that using such objects after they are freed results in undefined behavior, so uses should be well thought out and carefully debugged by using the &lt;code&gt;GC_CHECK_MARKED_OBJECTS&lt;/code&gt; feature (see</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da7a69d66cc2d899f159c6785baa3eb8aa0ce902" translate="yes" xml:space="preserve">
          <source>The general sequence functions &lt;code&gt;copy-sequence&lt;/code&gt; and &lt;code&gt;length&lt;/code&gt; are often useful for objects known to be arrays. See &lt;a href=&quot;sequence-functions#Sequence-Functions&quot;&gt;Sequence Functions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74ab5893b0c67e70995b4afd47d2628e73c2db5f" translate="yes" xml:space="preserve">
          <source>The geometry of a frame depends on the toolkit that was used to build this instance of Emacs and the terminal that displays the frame. This chapter describes these dependencies and some of the functions to deal with them. Note that the &lt;var&gt;frame&lt;/var&gt; argument of all of these functions has to specify a live frame (see &lt;a href=&quot;deleting-frames#Deleting-Frames&quot;&gt;Deleting Frames&lt;/a&gt;). If omitted or &lt;code&gt;nil&lt;/code&gt;, it specifies the selected frame (see &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1b29a18ef7eb3bc56262e0c7ebd91ab2315293b" translate="yes" xml:space="preserve">
          <source>The global break condition is the simplest way to find where in your code some event occurs, but it makes code run much more slowly. So you should reset the condition to &lt;code&gt;nil&lt;/code&gt; when not using it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="677591024d62617ead5c6d0b2e26233fd0d1c3c3" translate="yes" xml:space="preserve">
          <source>The global keymap used for the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f34b8f5f97a899dc0235f5429a6468bfeef23c7c" translate="yes" xml:space="preserve">
          <source>The global value of a variable with buffer-local bindings is also called the &lt;em&gt;default&lt;/em&gt; value, because it is the value that is in effect whenever neither the current buffer nor the selected frame has its own binding for the variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48d60332f6bc67502145a457cd0abab79aebcbd7" translate="yes" xml:space="preserve">
          <source>The glyph for indicating a character displayed as an octal character code (the default is &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c3656eced1ce2d785af3b405b7e21744ff87d83" translate="yes" xml:space="preserve">
          <source>The glyph for indicating a control character (the default is &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69c90a66f7f1266d48dbdea6d60aeb7561e7e5b2" translate="yes" xml:space="preserve">
          <source>The glyph for the end of a continued line (the default is &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="306df86e6b80484f756d552795447d03999ab82a" translate="yes" xml:space="preserve">
          <source>The glyph for the end of a truncated screen line (the default for this is &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e37bea5e929c17d760a16f5f703fed0ee026e680" translate="yes" xml:space="preserve">
          <source>The glyph used to draw the border between side-by-side windows (the default is &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97cde47c6c4afb345587e69edf666417f9a205ca" translate="yes" xml:space="preserve">
          <source>The gradient created (and inserted into the SVG object) can later be used by all functions that create shapes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f64a77472c5aab1a530dafab8dc80afd47098d3" translate="yes" xml:space="preserve">
          <source>The grammar category &lt;code&gt;id&lt;/code&gt; has no right hand side: this does not mean that it can match only the empty string, since as mentioned any sequence of sexps can appear anywhere anyway.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="731ba1b7288e05cf815c9c7aa4fd003aeedac70a" translate="yes" xml:space="preserve">
          <source>The greediness of some repetition forms can be controlled using the following constructs. However, it is usually better to use the explicit non-greedy forms above when such matching is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25880d28e40fdac189e642330863b2e6c8e69129" translate="yes" xml:space="preserve">
          <source>The group ID of the effective user ID, a number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b554cee81a954e5281b1fceb788df4a63ce37792" translate="yes" xml:space="preserve">
          <source>The handler function must handle all of the above operations, and possibly others to be added in the future. It need not implement all these operations itself&amp;mdash;when it has nothing special to do for a certain operation, it can reinvoke the primitive, to handle the operation in the usual way. It should always reinvoke the primitive for an operation it does not recognize. Here&amp;rsquo;s one way to do this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c0ade08243887c3328d4d5be685acc33d281985" translate="yes" xml:space="preserve">
          <source>The handler specifies condition name &lt;code&gt;arith-error&lt;/code&gt; so that it will handle only division-by-zero errors. Other kinds of errors will not be handled (by this &lt;code&gt;condition-case&lt;/code&gt;). Thus:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e2f99bb60355a4bbc279516a684257561edba5f" translate="yes" xml:space="preserve">
          <source>The header and footer strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6adc3e0fab908b197122795c03e598c9a217b17" translate="yes" xml:space="preserve">
          <source>The height in pixels of the mode line and the header line, or -1 if not known.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e8ea212a3dcb1bbe9f9c723144aa8ee19f65b61" translate="yes" xml:space="preserve">
          <source>The height is normally the length of &lt;var&gt;bits&lt;/var&gt;. However, you can specify a different height with non-&lt;code&gt;nil&lt;/code&gt;&lt;var&gt;height&lt;/var&gt;. The width is normally 8, but you can specify a different width with non-&lt;code&gt;nil&lt;/code&gt;&lt;var&gt;width&lt;/var&gt;. The width must be an integer between 1 and 16.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52397327e47c6d0da26d3462e7bc63626661f579" translate="yes" xml:space="preserve">
          <source>The height of horizontal scroll bars, in pixels, or &lt;code&gt;nil&lt;/code&gt; meaning to use the default height.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="085e0e5d1f8cb968ce655bf2b24ca248fa12970b" translate="yes" xml:space="preserve">
          <source>The height of the default face must be specified using an integer; floating point and function values are not allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d18f875e6e2637cf49c5905a5f35264c51a521b7" translate="yes" xml:space="preserve">
          <source>The height of the font in pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcc4b1c7f0f04cad27e2f37687ce77b17aac9cc1" translate="yes" xml:space="preserve">
          <source>The height of the font. In the simplest case, this is an integer in units of 1/10 point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ed16f18e3452e0d7fb567a3976b1f69a672c4c7" translate="yes" xml:space="preserve">
          <source>The height of the line contents is the maximum height of any character or image on that display line, including the final newline if there is one. (A display line that is continued doesn&amp;rsquo;t include a final newline.) That is the default line height, if you do nothing to specify a greater height. (In the most common case, this equals the height of the corresponding frame&amp;rsquo;s default font, see &lt;a href=&quot;frame-font#Frame-Font&quot;&gt;Frame Font&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa5537f62fa0722eb0e8bcb5ec344261bd62fa37" translate="yes" xml:space="preserve">
          <source>The help character is special after prefix keys, too. If it has no binding as a subcommand of the prefix key, it runs &lt;code&gt;describe-prefix-bindings&lt;/code&gt;, which displays a list of all the subcommands of the prefix key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf1897bec9624ad141a9f5fdb49dabce4abf14b2" translate="yes" xml:space="preserve">
          <source>The high-level completion functions &lt;code&gt;read-file-name&lt;/code&gt;, &lt;code&gt;read-directory-name&lt;/code&gt;, and &lt;code&gt;read-shell-command&lt;/code&gt; are designed to read file names, directory names, and shell commands, respectively. They provide special features, including automatic insertion of the default directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc37323f324eaba3ae4eff83c852720c416eda92" translate="yes" xml:space="preserve">
          <source>The homepage for GNU Emacs is at &lt;a href=&quot;https://www.gnu.org/software/emacs/&quot;&gt;https://www.gnu.org/software/emacs/&lt;/a&gt;. For information on using Emacs, refer to the &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/emacs.html&quot;&gt;Emacs Manual&lt;/a&gt;. To view this manual in other formats, click &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/elisp.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b911bf982537bd609db0a1e22baeb6c2bb97081a" translate="yes" xml:space="preserve">
          <source>The hook functions are called both before and after each change. If the functions save the information they receive, and compare notes between calls, they can determine exactly what change has been made in the buffer text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22eea4ac020189ebcc5a0b2b55d9b0917f8943a9" translate="yes" xml:space="preserve">
          <source>The hook functions in &lt;code&gt;write-file-functions&lt;/code&gt; are also responsible for encoding the data (if desired): they must choose a suitable coding system and end-of-line conversion (see &lt;a href=&quot;lisp-and-coding-systems#Lisp-and-Coding-Systems&quot;&gt;Lisp and Coding Systems&lt;/a&gt;), perform the encoding (see &lt;a href=&quot;explicit-encoding#Explicit-Encoding&quot;&gt;Explicit Encoding&lt;/a&gt;), and set &lt;code&gt;last-coding-system-used&lt;/code&gt; to the coding system that was used (see &lt;a href=&quot;encoding-and-i_002fo#Encoding-and-I_002fO&quot;&gt;Encoding and I/O&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a83d039cd150de7d3779ef3fed719d6f59169d0d" translate="yes" xml:space="preserve">
          <source>The hook variable&amp;rsquo;s value can also be a single function&amp;mdash;either a lambda expression or a symbol with a function definition&amp;mdash;which &lt;code&gt;run-hooks&lt;/code&gt; calls. But this usage is obsolete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="917207ef55ed03cab5a1b55d69aa1063946c90b6" translate="yes" xml:space="preserve">
          <source>The horizontal scroll position is measured in units of the normal character width, which is the width of space in the default font. Thus, if the value is 5, that means the window contents are scrolled left by 5 times the normal character width. How many characters actually disappear off to the left depends on their width, and could vary from line to line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c1208df201cdc168e0e1bc7a6b67590a4982002" translate="yes" xml:space="preserve">
          <source>The hour of the day, as an integer between 0 and 23.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff593a5384b2422b04132851d0695820fe2b360f" translate="yes" xml:space="preserve">
          <source>The hyper modifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49029170f2d47fd9fece1b8af2f1320f67032a13" translate="yes" xml:space="preserve">
          <source>The idea of these variables is that you set them once and for all to the defaults you want, and then do not change them again. To specify a particular coding system for a particular operation in a Lisp program, don&amp;rsquo;t change these variables; instead, override them using &lt;code&gt;coding-system-for-read&lt;/code&gt; and &lt;code&gt;coding-system-for-write&lt;/code&gt; (see &lt;a href=&quot;specifying-coding-systems#Specifying-Coding-Systems&quot;&gt;Specifying Coding Systems&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bcbe3e1bcf694fbe61bf24fe3189fb33ab88208" translate="yes" xml:space="preserve">
          <source>The identified of the shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcfecb9412ebffc1d18084e74054383228e6b207" translate="yes" xml:space="preserve">
          <source>The image is looked for in &lt;code&gt;image-load-path&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ea3cffbf70cec22855c36d36842437f817a7f5e" translate="yes" xml:space="preserve">
          <source>The image type. See &lt;a href=&quot;image-formats#Image-Formats&quot;&gt;Image Formats&lt;/a&gt;. Every image descriptor must include this property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caab580d160dc64b9167916da831f3bf977e17a4" translate="yes" xml:space="preserve">
          <source>The indentation functions are used to examine, move to, and change whitespace that is at the beginning of a line. Some of the functions can also change whitespace elsewhere on a line. Columns and indentation count from zero at the left margin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cabff1a9cf356561844c4900ceadda4f5c31acc" translate="yes" xml:space="preserve">
          <source>The index alist can have three types of elements. Simple elements look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a2782dc40deb6629a41f6379bf7a7210bdb0f97" translate="yes" xml:space="preserve">
          <source>The index of the first character of the string is 0, the index of the second character is 1, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60e96bc26c021609e7a6560eb3d5be49e8d331cc" translate="yes" xml:space="preserve">
          <source>The initial threshold value is &lt;code&gt;GC_DEFAULT_THRESHOLD&lt;/code&gt;, defined in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fd1b2d43c07a66938f2a442d8dcfd842c600cd8" translate="yes" xml:space="preserve">
          <source>The initial value must be &lt;code&gt;nil&lt;/code&gt; except in cases where (1) the mode is preloaded in Emacs, or (2) it is painless for loading to enable the mode even though the user did not request it. For instance, if the mode has no effect unless something else is enabled, and will always be loaded by that time, enabling it by default is harmless. But these are unusual circumstances. Normally, the initial value must be &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5ea75158d88e76423df4c71cfe451830055f3b4" translate="yes" xml:space="preserve">
          <source>The initialization function should perform whatever initialization is required for the module. In addition, it can perform the following tasks:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2048f16a290b5e24dd2783eb5cab68b8c1d9c150" translate="yes" xml:space="preserve">
          <source>The input characters are generated by &lt;var&gt;function&lt;/var&gt;, which must support two kinds of calls:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d16b3143ae14de892229a66c0119a9b13c4bbc54" translate="yes" xml:space="preserve">
          <source>The input characters are read from &lt;var&gt;buffer&lt;/var&gt;, starting with the character directly after point. Point advances as characters are read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b99b6f486be0660a0034322da91996c0f39b3329" translate="yes" xml:space="preserve">
          <source>The input characters are read from the buffer that &lt;var&gt;marker&lt;/var&gt; is in, starting with the character directly after the marker. The marker position advances as characters are read. The value of point in the buffer has no effect when the stream is a marker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8b5e8488b3fb00ae952a888effb061b3b3f5bf0" translate="yes" xml:space="preserve">
          <source>The input characters are taken from &lt;var&gt;string&lt;/var&gt;, starting at the first character in the string and using as many characters as required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30d1dd399ecaac7e239b3eddf29871a33b0d6701" translate="yes" xml:space="preserve">
          <source>The input method function is not called when reading the second and subsequent events of a key sequence. Thus, these characters are not subject to input method processing. The input method function should test the values of &lt;code&gt;overriding-local-map&lt;/code&gt; and &lt;code&gt;overriding-terminal-local-map&lt;/code&gt;; if either of these variables is non-&lt;code&gt;nil&lt;/code&gt;, the input method should put its argument into a list and return that list with no further processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8c4abba5f74f931bc34d6747a6123acafdf7779" translate="yes" xml:space="preserve">
          <source>The input method function should return a list of events which should be used as input. (If the list is &lt;code&gt;nil&lt;/code&gt;, that means there is no input, so &lt;code&gt;read-event&lt;/code&gt; waits for another event.) These events are processed before the events in &lt;code&gt;unread-command-events&lt;/code&gt; (see &lt;a href=&quot;event-input-misc#Event-Input-Misc&quot;&gt;Event Input Misc&lt;/a&gt;). Events returned by the input method function are not passed to the input method function again, even if they are printing characters with no modifier bits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="539f747cb977830607d3cb710459ac2c2e5fa6fa" translate="yes" xml:space="preserve">
          <source>The inputs to GnuTLS cryptographic functions can be specified in several ways, both as primitive Emacs Lisp types or as lists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7b8358b8f766540c234e4f8211a9601148d23fb" translate="yes" xml:space="preserve">
          <source>The inserted whitespace characters inherit text properties from the surrounding text (usually, from the preceding text only). See &lt;a href=&quot;sticky-properties#Sticky-Properties&quot;&gt;Sticky Properties&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19fcbfab08e4368504efbf1b8e28b4430ed27384" translate="yes" xml:space="preserve">
          <source>The insertion functions convert text from unibyte to multibyte in order to insert in a multibyte buffer, and vice versa&amp;mdash;if the text comes from a string or from a buffer. However, they do not convert unibyte character codes 128 through 255 to multibyte characters, not even if the current buffer is a multibyte buffer. See &lt;a href=&quot;converting-representations#Converting-Representations&quot;&gt;Converting Representations&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9edd2288269cf326b182d9af537f1760ef9f7146" translate="yes" xml:space="preserve">
          <source>The integer -1 looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f33429d3899a8b5708f577a6767b2323bf9589e" translate="yes" xml:space="preserve">
          <source>The integer number of 365-day years.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0d849236066efb1e790a734829181ed8c3e9ff5" translate="yes" xml:space="preserve">
          <source>The integer number of days.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cf7a7da13ec55fcd8e83c9522a19ff613f26c8a" translate="yes" xml:space="preserve">
          <source>The integer number of hours.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb774face5c62942103b0f3a113c848cd3042edd" translate="yes" xml:space="preserve">
          <source>The integer number of minutes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cbc76323d9ab5bd63ae8f77ccce189f3b0df5e3" translate="yes" xml:space="preserve">
          <source>The integer number of seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d26badfedc58bbcef7881a113b18e385a9856fff" translate="yes" xml:space="preserve">
          <source>The intent of &lt;code&gt;key-translation-map&lt;/code&gt; is for users to map one character set to another, including ordinary characters normally bound to &lt;code&gt;self-insert-command&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20d665cdf72ab80e27c444ceb9eb5618fb5457fb" translate="yes" xml:space="preserve">
          <source>The interactive declaration is a list of the form &lt;code&gt;(interactive
&lt;var&gt;code-string&lt;/var&gt;)&lt;/code&gt;. This declares how to provide arguments if the function is used interactively. Functions with this declaration are called &lt;em&gt;commands&lt;/em&gt;; they can be called using</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae08d2dbfcabdf279e14b8cbd62c32467dc9f2d0" translate="yes" xml:space="preserve">
          <source>The interactive spec (if any). This can be a string or a Lisp expression. It is &lt;code&gt;nil&lt;/code&gt; for a function that isn&amp;rsquo;t interactive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2978362f714e301a7d1292d0bf49abf86d8926e4" translate="yes" xml:space="preserve">
          <source>The internal border is a border drawn by Emacs around the inner frame (see below). Its width is specified by the &lt;code&gt;internal-border-width&lt;/code&gt; frame parameter (see &lt;a href=&quot;layout-parameters#Layout-Parameters&quot;&gt;Layout Parameters&lt;/a&gt;). Its color is specified by the background of the &lt;code&gt;internal-border&lt;/code&gt; face.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6cb4b170f13ea9783523a2b390523918e77d98d" translate="yes" xml:space="preserve">
          <source>The interval tree which records the text properties of this buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b193cdd686eaf4559317677f35332fe025a0bac" translate="yes" xml:space="preserve">
          <source>The job of &lt;code&gt;make-temp-file&lt;/code&gt; is to prevent two different users or two different jobs from trying to use the exact same file name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d566fc76f2e6f4607003117618cbc1ab1b17dde" translate="yes" xml:space="preserve">
          <source>The key bindings are not commands, just symbols that are meaningful to the functions that use this map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bf1df2bbd01f543a3f0da8d68e7df8f3b5f2761" translate="yes" xml:space="preserve">
          <source>The key definition and lookup functions accept an alternate syntax for event types in a key sequence that is a vector: you can use a list containing modifier names plus one base event (a character or function key name). For example, &lt;code&gt;(control ?a)&lt;/code&gt; is equivalent to &lt;code&gt;?\C-a&lt;/code&gt; and &lt;code&gt;(hyper control left)&lt;/code&gt; is equivalent to &lt;code&gt;C-H-left&lt;/code&gt;. One advantage of such lists is that the precise numeric codes for the modifier bits don&amp;rsquo;t appear in compiled files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="628ce08bf218a05f5cf92a428c7d664ca579e0cc" translate="yes" xml:space="preserve">
          <source>The key sequence is translated into a command through the currently active keymaps. See &lt;a href=&quot;key-lookup#Key-Lookup&quot;&gt;Key Lookup&lt;/a&gt;, for information on how this is done. The result should be a keyboard macro or an interactively callable function. If the key is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="569f93f6d66684562d4fe017a80dce902677f074" translate="yes" xml:space="preserve">
          <source>The key sequences bound in a major mode keymap should usually start with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7950f6c49354bf68f27de0ba9e4826c034b3d35d" translate="yes" xml:space="preserve">
          <source>The key translation function receives one argument, which is the prompt that was specified in &lt;code&gt;read-key-sequence&lt;/code&gt;&amp;mdash;or &lt;code&gt;nil&lt;/code&gt; if the key sequence is being read by the editor command loop. In most cases you can ignore the prompt value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c724c94075d725787e5d581c532371826e09281" translate="yes" xml:space="preserve">
          <source>The keymap &lt;var&gt;keymap&lt;/var&gt; is active whenever &lt;var&gt;variable&lt;/var&gt; has a non-&lt;code&gt;nil&lt;/code&gt; value. Typically &lt;var&gt;variable&lt;/var&gt; is the variable that enables or disables a minor mode. See &lt;a href=&quot;keymaps-and-minor-modes#Keymaps-and-Minor-Modes&quot;&gt;Keymaps and Minor Modes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="778deedcebfd753f594652405f80825572066516" translate="yes" xml:space="preserve">
          <source>The keymap binding of a prefix key is used for looking up the event that follows the prefix key. (It may instead be a symbol whose function definition is a keymap. The effect is the same, but the symbol serves as a name for the prefix key.) Thus, the binding of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd6135585180a24face202b71c46d7d4e0321d54" translate="yes" xml:space="preserve">
          <source>The keymap defining the contents of the tab bar. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Tab-Bars.html#Tab-Bars&quot;&gt;Tab Bars&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00481501df4b455e9d0b9f4120448e983b64e522" translate="yes" xml:space="preserve">
          <source>The keymap defining the contents of the tab bar. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Tab-Bars.html#Tab-Bars&quot;&gt;Tab Bars&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbdf9f5934eb2533828d5b82e95608cabd6b6788" translate="yes" xml:space="preserve">
          <source>The keymap defining the contents of the tool bar. See &lt;a href=&quot;tool-bar#Tool-Bar&quot;&gt;Tool Bar&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e0069d3ae618f793f1fa2e4550594c9b75d2f72" translate="yes" xml:space="preserve">
          <source>The keymap for characters following</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3be0c367d559d4bcc94776ddab26cb11131700e" translate="yes" xml:space="preserve">
          <source>The keymap for translating key sequences to preferred alternatives. If there are none, then it contains an empty sparse keymap. See &lt;a href=&quot;translation-keymaps#Translation-Keymaps&quot;&gt;Translation Keymaps&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13b5ef05286cb723bbea46afe3ee9fb02d42a48b" translate="yes" xml:space="preserve">
          <source>The keymap for translating keypad and function keys. If there are none, then it contains an empty sparse keymap. See &lt;a href=&quot;translation-keymaps#Translation-Keymaps&quot;&gt;Translation Keymaps&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e7dbb9716bd01a43838b53fe70be9a55bda1567" translate="yes" xml:space="preserve">
          <source>The keymap used by Prog mode. See &lt;a href=&quot;basic-major-modes#Basic-Major-Modes&quot;&gt;Basic Major Modes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ab245ddfa519516f3703f74bf4d4e8acfbe8994" translate="yes" xml:space="preserve">
          <source>The keymap used by Special mode. See &lt;a href=&quot;basic-major-modes#Basic-Major-Modes&quot;&gt;Basic Major Modes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e1ee3684d67359a88650e4fd1514d3bc1388140" translate="yes" xml:space="preserve">
          <source>The keyword &lt;code&gt;&amp;amp;rest&lt;/code&gt; (which must be followed by a single argument name) indicates that any number of arguments can follow. The single argument name following &lt;code&gt;&amp;amp;rest&lt;/code&gt; receives, as its value, a list of all the remaining arguments passed to the function. Do not write &lt;code&gt;&amp;amp;rest&lt;/code&gt; when you call the function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a2577e25ef4336cea54dd5ba9525c1ac899432" translate="yes" xml:space="preserve">
          <source>The kill ring records killed text as strings in a list, most recent first. A short kill ring, for example, might look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5310f9fc7ac635f8fb0f1f88e49865f96859f4ff" translate="yes" xml:space="preserve">
          <source>The kind of background&amp;mdash;either &lt;code&gt;light&lt;/code&gt; or &lt;code&gt;dark&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bde2896c92556891a9a522e437678bf44d775c73" translate="yes" xml:space="preserve">
          <source>The kind of display associated with the terminal. This is the symbol returned by the function &lt;code&gt;terminal-live-p&lt;/code&gt; (i.e., &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;t&lt;/code&gt;, &lt;code&gt;w32&lt;/code&gt;, &lt;code&gt;ns&lt;/code&gt;, or &lt;code&gt;pc&lt;/code&gt;). See &lt;a href=&quot;frames#Frames&quot;&gt;Frames&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5c7577d4b10f36a18bbab67549b2c58143927c6" translate="yes" xml:space="preserve">
          <source>The kind of window system the terminal uses&amp;mdash;either &lt;code&gt;graphic&lt;/code&gt; (any graphics-capable display), &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;pc&lt;/code&gt; (for the MS-DOS console), &lt;code&gt;w32&lt;/code&gt; (for MS Windows 9X/NT/2K/XP), or &lt;code&gt;tty&lt;/code&gt; (a non-graphics-capable display). See &lt;a href=&quot;window-systems#Window-Systems&quot;&gt;window-system&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01ef18971dfd086d0f3bdf7cf4fbd00a90436fd8" translate="yes" xml:space="preserve">
          <source>The language that the font should support. The value should be a symbol whose name is a two-letter ISO-639 language name. On X, the value is matched against the &amp;ldquo;Additional Style&amp;rdquo; field of the XLFD name of a font, if it is non-empty. On MS-Windows, fonts matching the spec are required to support codepages needed for the language. Currently, only a small set of CJK languages is supported with this property: &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88a7e776b65a937667815eb3a6eaf67a01ff78ce" translate="yes" xml:space="preserve">
          <source>The last</source>
          <target state="translated">El √∫ltimo</target>
        </trans-unit>
        <trans-unit id="dccd686ce06e60750b4337124ef02d3ac122a8dc" translate="yes" xml:space="preserve">
          <source>The last form also makes sure that none of the created side windows are accessible via</source>
          <target state="translated">La √∫ltima forma tambi√©n se asegura de que ninguna de las ventanas laterales creadas sean accesibles a trav√©s de</target>
        </trans-unit>
        <trans-unit id="37be7c944a107a298305238e57bd913b69f97266" translate="yes" xml:space="preserve">
          <source>The last line of the documentation string can specify calling conventions different from the actual function arguments. Write text like this:</source>
          <target state="translated">La √∫ltima l√≠nea de la cadena de documentaci√≥n puede especificar convenciones de llamada diferentes de los argumentos de la funci√≥n real.Escriba el texto de esta manera:</target>
        </trans-unit>
        <trans-unit id="ddcb40b64096f3eaa561946b2a19e292247e85b0" translate="yes" xml:space="preserve">
          <source>The last optional item, &lt;var&gt;noerror&lt;/var&gt;, overrides the normal error when the text can&amp;rsquo;t be encoded using the specified or chosen coding system. When &lt;var&gt;noerror&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this function silently uses &lt;code&gt;raw-text&lt;/code&gt; coding instead.</source>
          <target state="translated">El &amp;uacute;ltimo elemento opcional, &lt;var&gt;noerror&lt;/var&gt; , anula el error normal cuando el texto no se puede codificar utilizando el sistema de codificaci&amp;oacute;n especificado o elegido. Cuando &lt;var&gt;noerror&lt;/var&gt; es no- &lt;code&gt;nil&lt;/code&gt; , esta funci&amp;oacute;n usa silenciosamente codificaci&amp;oacute;n de &lt;code&gt;raw-text&lt;/code&gt; lugar.</target>
        </trans-unit>
        <trans-unit id="ab880934452e3eacbf10a61506631f3e7e86eb71" translate="yes" xml:space="preserve">
          <source>The last thing &lt;code&gt;after-find-file&lt;/code&gt; does is call all the functions in the list &lt;code&gt;find-file-hook&lt;/code&gt;.</source>
          <target state="translated">Lo &amp;uacute;ltimo que hace &lt;code&gt;after-find-file&lt;/code&gt; es llamar a todas las funciones de la lista &lt;code&gt;find-file-hook&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0003f3c71cb33be508071e1a28e112d5cd1a93de" translate="yes" xml:space="preserve">
          <source>The last three elements give additional information about the font. &lt;var&gt;fixed-p&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt; if the font is fixed-pitch. &lt;var&gt;full&lt;/var&gt; is the full name of the font, and &lt;var&gt;registry-and-encoding&lt;/var&gt; is a string giving the registry and encoding of the font.</source>
          <target state="translated">Los &amp;uacute;ltimos tres elementos brindan informaci&amp;oacute;n adicional sobre la fuente. &lt;var&gt;fixed-p&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; si la fuente es de paso fijo. &lt;var&gt;full&lt;/var&gt; es el nombre completo de la fuente y &lt;var&gt;registry-and-encoding&lt;/var&gt; es una cadena que proporciona el registro y la codificaci&amp;oacute;n de la fuente.</target>
        </trans-unit>
        <trans-unit id="6c23485a20be9be1024893537c3477b18df28155" translate="yes" xml:space="preserve">
          <source>The last two values in &lt;var&gt;subexp-highlighter&lt;/var&gt;, &lt;var&gt;override&lt;/var&gt; and &lt;var&gt;laxmatch&lt;/var&gt;, are optional flags. If &lt;var&gt;override&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, this element can override existing fontification made by previous elements of &lt;code&gt;font-lock-keywords&lt;/code&gt;. If it is &lt;code&gt;keep&lt;/code&gt;, then each character is fontified if it has not been fontified already by some other element. If it is &lt;code&gt;prepend&lt;/code&gt;, the face specified by &lt;var&gt;facespec&lt;/var&gt; is added to the beginning of the &lt;code&gt;font-lock-face&lt;/code&gt; property. If it is &lt;code&gt;append&lt;/code&gt;, the face is added to the end of the &lt;code&gt;font-lock-face&lt;/code&gt; property.</source>
          <target state="translated">Los dos &amp;uacute;ltimos valores de &lt;var&gt;subexp-highlighter&lt;/var&gt; , &lt;var&gt;override&lt;/var&gt; y &lt;var&gt;laxmatch&lt;/var&gt; , son indicadores opcionales. Si &lt;var&gt;override&lt;/var&gt; es &lt;code&gt;t&lt;/code&gt; , este elemento puede reemplazar la fontificaci&amp;oacute;n existente hecha por elementos anteriores de &lt;code&gt;font-lock-keywords&lt;/code&gt; . Si se &lt;code&gt;keep&lt;/code&gt; , entonces cada car&amp;aacute;cter se fontifica si no ha sido ya fontificado por alg&amp;uacute;n otro elemento. Si se &lt;code&gt;prepend&lt;/code&gt; , la cara especificada por &lt;var&gt;facespec&lt;/var&gt; se agrega al principio de la propiedad &lt;code&gt;font-lock-face&lt;/code&gt; . Si se &lt;code&gt;append&lt;/code&gt; , se a&amp;ntilde;ade la cara hasta el final de la &lt;code&gt;font-lock-face&lt;/code&gt; la propiedad.</target>
        </trans-unit>
        <trans-unit id="992a1c51c72e3b37e35b641195dd8337943b2596" translate="yes" xml:space="preserve">
          <source>The last way to customize Imenu for a major mode is to set the variable &lt;code&gt;imenu-create-index-function&lt;/code&gt;:</source>
          <target state="translated">La &amp;uacute;ltima forma de personalizar Imenu para un modo principal es establecer la variable &lt;code&gt;imenu-create-index-function&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3ce25b448ce366df7fb622e8f8aa9485fb8699a5" translate="yes" xml:space="preserve">
          <source>The layer 2 address (Ethernet MAC address, for instance).</source>
          <target state="translated">La direcci√≥n de la capa 2 (direcci√≥n MAC de Ethernet,por ejemplo).</target>
        </trans-unit>
        <trans-unit id="a47ca85c8b203a3f800aea8cd96b6a61549d375d" translate="yes" xml:space="preserve">
          <source>The layout of side windows on the left or right of a frame is not affected by the value of this variable.</source>
          <target state="translated">La disposici√≥n de las ventanas laterales a la izquierda o a la derecha de un marco no se ve afectada por el valor de esta variable.</target>
        </trans-unit>
        <trans-unit id="6009ec89412305c052749a52bf8f3c7e8431cbcf" translate="yes" xml:space="preserve">
          <source>The layout of such a frame might appear as follows:</source>
          <target state="translated">La disposici√≥n de dicho marco podr√≠a aparecer de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="3b025a85b17d93fe80056a9fbbc6aa0c12299f7e" translate="yes" xml:space="preserve">
          <source>The least specialized major mode is called &lt;em&gt;Fundamental mode&lt;/em&gt;, which has no mode-specific definitions or variable settings.</source>
          <target state="translated">El modo principal menos especializado se llama &lt;em&gt;modo fundamental&lt;/em&gt; , que no tiene definiciones espec&amp;iacute;ficas de modo ni configuraci&amp;oacute;n de variables.</target>
        </trans-unit>
        <trans-unit id="cf0a2de49bf1a621f861fc10249ddf1c3e8e8639" translate="yes" xml:space="preserve">
          <source>The left-hand and top edges of this window, measured in pixels, relative to the top-left corner (0, 0) of the window&amp;rsquo;s native frame.</source>
          <target state="translated">Los bordes izquierdo y superior de esta ventana, medidos en p&amp;iacute;xeles, en relaci&amp;oacute;n con la esquina superior izquierda (0, 0) del marco nativo de la ventana.</target>
        </trans-unit>
        <trans-unit id="0e159da910fc18db25e6c0af5e99bdff417543a4" translate="yes" xml:space="preserve">
          <source>The left-hand edge of the window, measured in columns, relative to the leftmost column (column 0) of the window&amp;rsquo;s native frame.</source>
          <target state="translated">El borde izquierdo de la ventana, medido en columnas, en relaci&amp;oacute;n con la columna m&amp;aacute;s a la izquierda (columna 0) del marco nativo de la ventana.</target>
        </trans-unit>
        <trans-unit id="85b6183109a9a7b6efad378049191669aefc0fd8" translate="yes" xml:space="preserve">
          <source>The length of the array is fixed once you create it; you cannot change the length of an existing array.</source>
          <target state="translated">La longitud de la matriz se fija una vez que la creas;no puedes cambiar la longitud de una matriz existente.</target>
        </trans-unit>
        <trans-unit id="bb9a27d08446955ce106744ef3b710dbc15d43b6" translate="yes" xml:space="preserve">
          <source>The length of the file this buffer is visiting, when last read or saved. It can have 2 special values: -1 means auto-saving was turned off in this buffer, and -2 means don&amp;rsquo;t turn off auto-saving if buffer text shrinks a lot. This and other fields concerned with saving are not kept in the &lt;code&gt;buffer_text&lt;/code&gt; structure because indirect buffers are never saved.</source>
          <target state="translated">La longitud del archivo que est&amp;aacute; visitando este b&amp;uacute;fer, cuando fue le&amp;iacute;do o guardado por &amp;uacute;ltima vez. Puede tener 2 valores especiales: -1 significa que el guardado autom&amp;aacute;tico se desactiv&amp;oacute; en este b&amp;uacute;fer, y -2 significa que no lo desactive si el texto del b&amp;uacute;fer se reduce mucho. Este y otros campos relacionados con el guardado no se guardan en la estructura &lt;code&gt;buffer_text&lt;/code&gt; porque los buffers indirectos nunca se guardan.</target>
        </trans-unit>
        <trans-unit id="2735538fcce561a7758f21b1ebbd03c667ab66da" translate="yes" xml:space="preserve">
          <source>The length of the old text is the difference between the buffer positions before and after that text as it was before the change. As for the changed text, its length is simply the difference between the first two arguments.</source>
          <target state="translated">La longitud del texto antiguo es la diferencia entre las posiciones de la memoria intermedia antes y despu√©s de ese texto como lo era antes del cambio.En cuanto al texto modificado,su longitud es simplemente la diferencia entre los dos primeros argumentos.</target>
        </trans-unit>
        <trans-unit id="959fbf29c3f8bb0bab090fdff0de9a589ee90bcb" translate="yes" xml:space="preserve">
          <source>The license for this documentation.</source>
          <target state="translated">La licencia para esta documentaci√≥n.</target>
        </trans-unit>
        <trans-unit id="620613354f3eaf838b72f4f12e00f9803d440b0f" translate="yes" xml:space="preserve">
          <source>The line functions in the previous section count text lines, delimited only by newline characters. By contrast, these functions count screen lines, which are defined by the way the text appears on the screen. A text line is a single screen line if it is short enough to fit the width of the selected window, but otherwise it may occupy several screen lines.</source>
          <target state="translated">Las funciones de l√≠nea de la secci√≥n anterior cuentan l√≠neas de texto,delimitadas s√≥lo por caracteres de nueva l√≠nea.En cambio,estas funciones cuentan las l√≠neas de la pantalla,que se definen por la forma en que el texto aparece en la pantalla.Una l√≠nea de texto es una sola l√≠nea de la pantalla si es lo suficientemente corta como para ajustarse al ancho de la ventana seleccionada,pero en caso contrario puede ocupar varias l√≠neas de la pantalla.</target>
        </trans-unit>
        <trans-unit id="716452ebec7e673d1d9d81cc51b8547f340814e1" translate="yes" xml:space="preserve">
          <source>The line number of a certain position in the buffer, or zero. This is used for displaying the line number of point in the mode line.</source>
          <target state="translated">El n√∫mero de l√≠nea de una cierta posici√≥n en el buffer,o cero.Se utiliza para mostrar el n√∫mero de l√≠nea de un punto en la l√≠nea de modo.</target>
        </trans-unit>
        <trans-unit id="839f8d216431863a7a00ea59f4be71c60c8c2e5b" translate="yes" xml:space="preserve">
          <source>The list &lt;code&gt;(rose violet)&lt;/code&gt; is equivalent to &lt;code&gt;(rose . (violet))&lt;/code&gt;, and looks like this:</source>
          <target state="translated">La lista &lt;code&gt;(rose violet)&lt;/code&gt; es equivalente a &lt;code&gt;(rose . (violet))&lt;/code&gt; , y se ve as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="962c62424fbca05b4167123b8512730f70e28cc4" translate="yes" xml:space="preserve">
          <source>The list describes the display that &lt;var&gt;frame&lt;/var&gt; is on; if &lt;var&gt;frame&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, it applies to the selected frame&amp;rsquo;s display (see &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;).</source>
          <target state="translated">La lista describe la pantalla en la que se encuentra el &lt;var&gt;frame&lt;/var&gt; ; si se omite el &lt;var&gt;frame&lt;/var&gt; o es &lt;code&gt;nil&lt;/code&gt; , se aplica a la visualizaci&amp;oacute;n del marco seleccionado (consulte &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Enfoque de entrada&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="a5e7dd03ee241b78dea866b6e88f99a7a8764678" translate="yes" xml:space="preserve">
          <source>The list form is currently similar to how &lt;code&gt;md5&lt;/code&gt; and &lt;code&gt;secure-hash&lt;/code&gt; operate.</source>
          <target state="translated">Actualmente, el formulario de lista es similar al funcionamiento de &lt;code&gt;md5&lt;/code&gt; y &lt;code&gt;secure-hash&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1ee49ad7464cab64ae226a805d7b31a9c327b50" translate="yes" xml:space="preserve">
          <source>The list is ordered so that earlier elements correspond to more recently-shown buffers, and the first element usually corresponds to the buffer most recently removed from the window.</source>
          <target state="translated">La lista est√° ordenada de manera que los elementos anteriores corresponden a los b√∫feres m√°s recientes,y el primer elemento suele corresponder al b√∫fer m√°s recientemente retirado de la ventana.</target>
        </trans-unit>
        <trans-unit id="bf28d6cd5c13b4c859c3624b6a63099b610df792" translate="yes" xml:space="preserve">
          <source>The list of the positions of the currently open parentheses, starting with the outermost.</source>
          <target state="translated">La lista de los puestos de los par√©ntesis actualmente abiertos,empezando por el m√°s externo.</target>
        </trans-unit>
        <trans-unit id="42d7eea344ddd2896a97642d094a7e8335564359" translate="yes" xml:space="preserve">
          <source>The list returned by &lt;code&gt;buffer-list&lt;/code&gt; is constructed specifically; it is not an internal Emacs data structure, and modifying it has no effect on the order of buffers. If you want to change the order of buffers in the fundamental buffer list, here is an easy way:</source>
          <target state="translated">La lista devuelta por &lt;code&gt;buffer-list&lt;/code&gt; se construye espec&amp;iacute;ficamente; no es una estructura de datos interna de Emacs y modificarla no tiene ning&amp;uacute;n efecto en el orden de los b&amp;uacute;feres. Si desea cambiar el orden de los b&amp;uacute;feres en la lista de b&amp;uacute;fer fundamental, aqu&amp;iacute; tiene una manera f&amp;aacute;cil:</target>
        </trans-unit>
        <trans-unit id="a8c850e06ee228bef706e71be70435aebad07c66" translate="yes" xml:space="preserve">
          <source>The load functions evaluate all the expressions in a file just as the &lt;code&gt;eval-buffer&lt;/code&gt; function evaluates all the expressions in a buffer. The difference is that the load functions read and evaluate the text in the file as found on disk, not the text in an Emacs buffer.</source>
          <target state="translated">Las funciones de carga eval&amp;uacute;an todas las expresiones en un archivo al igual que la funci&amp;oacute;n &lt;code&gt;eval-buffer&lt;/code&gt; eval&amp;uacute;a todas las expresiones en un b&amp;uacute;fer. La diferencia es que las funciones de carga leen y eval&amp;uacute;an el texto en el archivo como se encuentra en el disco, no el texto en un b&amp;uacute;fer de Emacs.</target>
        </trans-unit>
        <trans-unit id="bcf097db69a4c3e2b9f156a93318f5b55b88be14" translate="yes" xml:space="preserve">
          <source>The loaded file must contain Lisp expressions, either as source code or as byte-compiled code. Each form in the file is called a &lt;em&gt;top-level form&lt;/em&gt;. There is no special format for the forms in a loadable file; any form in a file may equally well be typed directly into a buffer and evaluated there. (Indeed, most code is tested this way.) Most often, the forms are function definitions and variable definitions.</source>
          <target state="translated">El archivo cargado debe contener expresiones Lisp, ya sea como c&amp;oacute;digo fuente o como c&amp;oacute;digo compilado por bytes. Cada formulario del archivo se denomina &lt;em&gt;formulario de nivel superior&lt;/em&gt; . No existe un formato especial para los formularios en un archivo cargable; cualquier forma de un archivo puede igualmente teclearse directamente en un b&amp;uacute;fer y evaluarse all&amp;iacute;. (De hecho, la mayor parte del c&amp;oacute;digo se prueba de esta manera). Con mucha frecuencia, las formas son definiciones de funciones y definiciones de variables.</target>
        </trans-unit>
        <trans-unit id="95d55d2fde6c278fb97386c98daf3e630c566eab" translate="yes" xml:space="preserve">
          <source>The local address, in internal format.</source>
          <target state="translated">La direcci√≥n local,en formato interno.</target>
        </trans-unit>
        <trans-unit id="56aaea215b4bc49234f9ee74677196b8ffb7af78" translate="yes" xml:space="preserve">
          <source>The local keymap and variable list contain entries that individually override global bindings or values. These are used to customize the behavior of programs in different buffers, without actually changing the programs.</source>
          <target state="translated">El mapa de teclas local y la lista de variables contienen entradas que anulan individualmente los enlaces o valores globales.Se utilizan para personalizar el comportamiento de los programas en diferentes buffers,sin cambiar realmente los programas.</target>
        </trans-unit>
        <trans-unit id="8497e1e143889552fd6d29f50ee9c1a86ceb2d17" translate="yes" xml:space="preserve">
          <source>The local keymap is normally set by the buffer&amp;rsquo;s major mode, and every buffer with the same major mode shares the same local keymap. Hence, if you call &lt;code&gt;local-set-key&lt;/code&gt; (see &lt;a href=&quot;key-binding-commands#Key-Binding-Commands&quot;&gt;Key Binding Commands&lt;/a&gt;) to change the local keymap in one buffer, that also affects the local keymaps in other buffers with the same major mode.</source>
          <target state="translated">El mapa de teclas local normalmente lo establece el modo principal del b&amp;uacute;fer, y cada b&amp;uacute;fer con el mismo modo principal comparte el mismo mapa de teclado local. Por lo tanto, si llama a &lt;code&gt;local-set-key&lt;/code&gt; (consulte &lt;a href=&quot;key-binding-commands#Key-Binding-Commands&quot;&gt;Comandos de enlace de teclas&lt;/a&gt; ) para cambiar el mapa de teclas local en un b&amp;uacute;fer, eso tambi&amp;eacute;n afectar&amp;aacute; a los mapas de teclado locales en otros b&amp;uacute;feres con el mismo modo principal.</target>
        </trans-unit>
        <trans-unit id="c20827cfc5ffe09c075650e5199361a56b68cec0" translate="yes" xml:space="preserve">
          <source>The low-level mechanism for disabling a command is to put a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;disabled&lt;/code&gt; property on the Lisp symbol for the command. These properties are normally set up by the user&amp;rsquo;s init file (see &lt;a href=&quot;init-file#Init-File&quot;&gt;Init File&lt;/a&gt;) with Lisp expressions such as this:</source>
          <target state="translated">El mecanismo de bajo nivel para deshabilitar un comando es poner una propiedad &lt;code&gt;disabled&lt;/code&gt; no sea &lt;code&gt;nil&lt;/code&gt; en el s&amp;iacute;mbolo Lisp para el comando. Estas propiedades normalmente est&amp;aacute;n configuradas por el archivo de inicio del usuario (ver &lt;a href=&quot;init-file#Init-File&quot;&gt;Archivo de inicio&lt;/a&gt; ) con expresiones Lisp como esta:</target>
        </trans-unit>
        <trans-unit id="23fe2196399552d25b3c061985ee305fa84c2b18" translate="yes" xml:space="preserve">
          <source>The low-level primitives for creating buffers do not use this function, but medium-level commands such as &lt;code&gt;switch-to-buffer&lt;/code&gt; and &lt;code&gt;find-file-noselect&lt;/code&gt; use it whenever they create buffers.</source>
          <target state="translated">Las primitivas de bajo nivel para crear b&amp;uacute;feres no usan esta funci&amp;oacute;n, pero los comandos de nivel medio como &lt;code&gt;switch-to-buffer&lt;/code&gt; y &lt;code&gt;find-file-noselect&lt;/code&gt; la usan siempre que crean b&amp;uacute;feres.</target>
        </trans-unit>
        <trans-unit id="8010635f2bb24a96123a821123a02c24a306bdce" translate="yes" xml:space="preserve">
          <source>The lowest level functions for command input are &lt;code&gt;read-event&lt;/code&gt;, &lt;code&gt;read-char&lt;/code&gt;, and &lt;code&gt;read-char-exclusive&lt;/code&gt;.</source>
          <target state="translated">Las funciones de nivel m&amp;aacute;s bajo para la entrada de comandos son &lt;code&gt;read-event&lt;/code&gt; , &lt;code&gt;read-char&lt;/code&gt; y &lt;code&gt;read-char-exclusive&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="14145dceb516643fe37d9fc1ff0f68417500b0ec" translate="yes" xml:space="preserve">
          <source>The lowest-level primitive for modifying a &lt;small&gt;CDR&lt;/small&gt; is &lt;code&gt;setcdr&lt;/code&gt;:</source>
          <target state="translated">La primitiva de nivel m&amp;aacute;s bajo para modificar una &lt;small&gt;CDR&lt;/small&gt; es &lt;code&gt;setcdr&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3f8ff2bd3febbb80e6a03979190f1d4a93f85b99" translate="yes" xml:space="preserve">
          <source>The macro &lt;code&gt;condition-case-unless-debug&lt;/code&gt; provides another way to handle debugging of such forms. It behaves exactly like &lt;code&gt;condition-case&lt;/code&gt;, unless the variable &lt;code&gt;debug-on-error&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, in which case it does not handle any errors at all.</source>
          <target state="translated">La macro &lt;code&gt;condition-case-unless-debug&lt;/code&gt; proporciona otra forma de manejar la depuraci&amp;oacute;n de dichos formularios. Se comporta exactamente como &lt;code&gt;condition-case&lt;/code&gt; , a menos que la variable &lt;code&gt;debug-on-error&lt;/code&gt; no sea &lt;code&gt;nil&lt;/code&gt; , en cuyo caso no maneja ning&amp;uacute;n error en absoluto.</target>
        </trans-unit>
        <trans-unit id="69ddcd0a4bf2d4a7d5ed7f86f791b6ffe043c1a1" translate="yes" xml:space="preserve">
          <source>The macro &lt;code&gt;define-alternatives&lt;/code&gt; can be used to define &lt;em&gt;generic commands&lt;/em&gt;. These are interactive functions whose implementation can be selected from several alternatives, as a matter of user preference.</source>
          <target state="translated">La macro &lt;code&gt;define-alternatives&lt;/code&gt; se puede utilizar para definir &lt;em&gt;comandos gen&amp;eacute;ricos&lt;/em&gt; . Se trata de funciones interactivas cuya implementaci&amp;oacute;n se puede seleccionar entre varias alternativas, seg&amp;uacute;n las preferencias del usuario.</target>
        </trans-unit>
        <trans-unit id="5119a1b3dc9bf2349246f3d4b6d6761f1510e515" translate="yes" xml:space="preserve">
          <source>The macro &lt;code&gt;define-minor-mode&lt;/code&gt; offers a convenient way of implementing a mode in one self-contained definition.</source>
          <target state="translated">La macro &lt;code&gt;define-minor-mode&lt;/code&gt; ofrece una forma conveniente de implementar un modo en una definici&amp;oacute;n aut&amp;oacute;noma.</target>
        </trans-unit>
        <trans-unit id="a18ca22eed3764c8d5592c00e25721489dd6a12d" translate="yes" xml:space="preserve">
          <source>The macro &lt;code&gt;gv-letplace&lt;/code&gt; can be useful in defining macros that perform similarly to &lt;code&gt;setf&lt;/code&gt;; for example, the &lt;code&gt;incf&lt;/code&gt; macro of Common Lisp could be implemented this way:</source>
          <target state="translated">La macro &lt;code&gt;gv-letplace&lt;/code&gt; puede ser &amp;uacute;til para definir macros que funcionan de manera similar a &lt;code&gt;setf&lt;/code&gt; ; por ejemplo, la macro &lt;code&gt;incf&lt;/code&gt; de Common Lisp podr&amp;iacute;a implementarse de esta manera:</target>
        </trans-unit>
        <trans-unit id="1e1e3b145e098e8f5ecb2f49f1bfd35918691f45" translate="yes" xml:space="preserve">
          <source>The macro cannot be used to suppress file name handlers from magic file names (see &lt;a href=&quot;magic-file-names#Magic-File-Names&quot;&gt;Magic File Names&lt;/a&gt;).</source>
          <target state="translated">La macro no se puede utilizar para suprimir los controladores de nombres de archivos de los nombres de archivos m&amp;aacute;gicos (consulte &lt;a href=&quot;magic-file-names#Magic-File-Names&quot;&gt;Nombres de archivos m&amp;aacute;gicos&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="8cf63348f1b08167a736e3e7aac8f62de5938951" translate="yes" xml:space="preserve">
          <source>The macro executes &lt;var&gt;body&lt;/var&gt; normally, but arranges to call the after-change functions just once for a series of several changes&amp;mdash;if that seems safe.</source>
          <target state="translated">La macro ejecuta &lt;var&gt;body&lt;/var&gt; normalmente, pero se arregla para llamar a las funciones posteriores al cambio solo una vez para una serie de varios cambios, si eso parece seguro.</target>
        </trans-unit>
        <trans-unit id="eae48ac7e81744b77b10a9b79e04ee1eb49c6a47" translate="yes" xml:space="preserve">
          <source>The macros &lt;code&gt;push&lt;/code&gt; (see &lt;a href=&quot;list-variables#List-Variables&quot;&gt;List Variables&lt;/a&gt;) and &lt;code&gt;pop&lt;/code&gt; (see &lt;a href=&quot;list-elements#List-Elements&quot;&gt;List Elements&lt;/a&gt;) can manipulate generalized variables, not just lists. &lt;code&gt;(pop &lt;var&gt;place&lt;/var&gt;)&lt;/code&gt; removes and returns the first element of the list stored in &lt;var&gt;place&lt;/var&gt;. It is analogous to &lt;code&gt;(prog1 (car &lt;var&gt;place&lt;/var&gt;) (setf &lt;var&gt;place&lt;/var&gt; (cdr &lt;var&gt;place&lt;/var&gt;)))&lt;/code&gt;, except that it takes care to evaluate all subforms only once. &lt;code&gt;(push &lt;var&gt;x&lt;/var&gt; &lt;var&gt;place&lt;/var&gt;)&lt;/code&gt; inserts &lt;var&gt;x&lt;/var&gt; at the front of the list stored in &lt;var&gt;place&lt;/var&gt;. It is analogous to &lt;code&gt;(setf
&lt;var&gt;place&lt;/var&gt; (cons &lt;var&gt;x&lt;/var&gt; &lt;var&gt;place&lt;/var&gt;))&lt;/code&gt;, except for evaluation of the subforms. Note that &lt;code&gt;push&lt;/code&gt; and &lt;code&gt;pop&lt;/code&gt; on an &lt;code&gt;nthcdr&lt;/code&gt; place can be used to insert or delete at any position in a list.</source>
          <target state="translated">Las macros &lt;code&gt;push&lt;/code&gt; (ver &lt;a href=&quot;list-variables#List-Variables&quot;&gt;Variables de lista&lt;/a&gt; ) y &lt;code&gt;pop&lt;/code&gt; (ver &lt;a href=&quot;list-elements#List-Elements&quot;&gt;Elementos de lista&lt;/a&gt; ) pueden manipular variables generalizadas, no solo listas. &lt;code&gt;(pop &lt;var&gt;place&lt;/var&gt;)&lt;/code&gt; elimina y devuelve el primer elemento de la lista almacenado en su &lt;var&gt;place&lt;/var&gt; . Es an&amp;aacute;logo a &lt;code&gt;(prog1 (car &lt;var&gt;place&lt;/var&gt;) (setf &lt;var&gt;place&lt;/var&gt; (cdr &lt;var&gt;place&lt;/var&gt;)))&lt;/code&gt; , excepto que se ocupa de evaluar todos los subformularios solo una vez. &lt;code&gt;(push &lt;var&gt;x&lt;/var&gt; &lt;var&gt;place&lt;/var&gt;)&lt;/code&gt; inserta &lt;var&gt;x&lt;/var&gt; al principio de la lista almacenada en su &lt;var&gt;place&lt;/var&gt; . Es an&amp;aacute;logo a &lt;code&gt;(setf &lt;var&gt;place&lt;/var&gt; (cons &lt;var&gt;x&lt;/var&gt; &lt;var&gt;place&lt;/var&gt;))&lt;/code&gt; , excepto para evaluaci&amp;oacute;n de los subformularios. Tenga en cuenta que &lt;code&gt;push&lt;/code&gt; y &lt;code&gt;pop&lt;/code&gt; en una &lt;code&gt;nthcdr&lt;/code&gt; lugar puede ser utilizado para insertar o eliminar en cualquier posici&amp;oacute;n en una lista.</target>
        </trans-unit>
        <trans-unit id="09c0ddd15714530f62c1af5eecb2c98c7086baee" translate="yes" xml:space="preserve">
          <source>The macros described in this section use &lt;code&gt;pcase&lt;/code&gt; patterns to perform destructuring binding. The condition of the object to be of compatible structure means that the object must match the pattern, because only then the object&amp;rsquo;s subfields can be extracted. For example:</source>
          <target state="translated">Las macros descritas en esta secci&amp;oacute;n usan patrones &lt;code&gt;pcase&lt;/code&gt; para realizar la desestructuraci&amp;oacute;n de enlaces. La condici&amp;oacute;n de que el objeto sea de estructura compatible significa que el objeto debe coincidir con el patr&amp;oacute;n, porque solo entonces se pueden extraer los subcampos del objeto. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="f9f8d8ecb58d3451cb2b5457cb2f37a869983a68" translate="yes" xml:space="preserve">
          <source>The main reason for writing an Emacs module is to make additional functions available to Lisp programs that load the module. This subsection describes how to write such &lt;em&gt;module functions&lt;/em&gt;.</source>
          <target state="translated">La raz&amp;oacute;n principal para escribir un m&amp;oacute;dulo Emacs es hacer que las funciones adicionales est&amp;eacute;n disponibles para los programas Lisp que cargan el m&amp;oacute;dulo. Esta subsecci&amp;oacute;n describe c&amp;oacute;mo escribir dichas &lt;em&gt;funciones de m&amp;oacute;dulo&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="877426dcb86887eef639d5e653cc17f51b41fa0e" translate="yes" xml:space="preserve">
          <source>The main use of &lt;code&gt;const&lt;/code&gt; is inside of &lt;code&gt;choice&lt;/code&gt;. For example, &lt;code&gt;(choice integer (const nil))&lt;/code&gt; allows either an integer or &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">El uso principal de &lt;code&gt;const&lt;/code&gt; est&amp;aacute; dentro de la &lt;code&gt;choice&lt;/code&gt; . Por ejemplo, &lt;code&gt;(choice integer (const nil))&lt;/code&gt; permite un n&amp;uacute;mero entero o &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="26e9b14420c609493efab668d934c559a0c3429e" translate="yes" xml:space="preserve">
          <source>The main use of &lt;code&gt;current-idle-time&lt;/code&gt; is when an idle timer function wants to &amp;ldquo;take a break&amp;rdquo; for a while. It can set up another idle timer to call the same function again, after a few seconds more idleness. Here&amp;rsquo;s an example:</source>
          <target state="translated">El uso principal de &lt;code&gt;current-idle-time&lt;/code&gt; es cuando una funci&amp;oacute;n de temporizador inactivo quiere &quot;tomar un descanso&quot; por un tiempo. Puede configurar otro temporizador inactivo para volver a llamar a la misma funci&amp;oacute;n, despu&amp;eacute;s de unos segundos m&amp;aacute;s de inactividad. He aqu&amp;iacute; un ejemplo:</target>
        </trans-unit>
        <trans-unit id="530ebc1f037074c726faee61b32cae1039f33cbf" translate="yes" xml:space="preserve">
          <source>The main use of &lt;code&gt;other&lt;/code&gt; is as the last element of &lt;code&gt;choice&lt;/code&gt;. For example,</source>
          <target state="translated">El uso principal de &lt;code&gt;other&lt;/code&gt; es como &amp;uacute;ltimo elemento de &lt;code&gt;choice&lt;/code&gt; . Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="f26c01b277b5d5c1d3d508a4f0fb33a502c2a50b" translate="yes" xml:space="preserve">
          <source>The major mode command may start by calling some other major mode command (called the &lt;em&gt;parent mode&lt;/em&gt;) and then alter some of its settings. A mode that does this is called a &lt;em&gt;derived mode&lt;/em&gt;. The recommended way to define one is to use the &lt;code&gt;define-derived-mode&lt;/code&gt; macro, but this is not required. Such a mode should call the parent mode command inside a &lt;code&gt;delay-mode-hooks&lt;/code&gt; form. (Using &lt;code&gt;define-derived-mode&lt;/code&gt; does this automatically.) See &lt;a href=&quot;derived-modes#Derived-Modes&quot;&gt;Derived Modes&lt;/a&gt;, and &lt;a href=&quot;mode-hooks#Mode-Hooks&quot;&gt;Mode Hooks&lt;/a&gt;.</source>
          <target state="translated">El comando del modo principal puede comenzar llamando a otro comando del modo principal (llamado &lt;em&gt;modo principal&lt;/em&gt; ) y luego alterar algunas de sus configuraciones. Un modo que hace esto se llama &lt;em&gt;modo derivado&lt;/em&gt; . La forma recomendada de definir uno es utilizar la macro &lt;code&gt;define-derived-mode&lt;/code&gt; , pero esto no es necesario. Tal modo deber&amp;iacute;a llamar al comando del modo padre dentro de un formulario de &lt;code&gt;delay-mode-hooks&lt;/code&gt; . (El uso del modo &lt;code&gt;define-derived-mode&lt;/code&gt; hace esto autom&amp;aacute;ticamente). Consulte &lt;a href=&quot;derived-modes#Derived-Modes&quot;&gt;Modos derivados&lt;/a&gt; y &lt;a href=&quot;mode-hooks#Mode-Hooks&quot;&gt;Ganchos de modo&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5d17a35b712255a2afb0c14c8a0d624c5811e326" translate="yes" xml:space="preserve">
          <source>The major mode command should set the variable &lt;code&gt;major-mode&lt;/code&gt; to the major mode command symbol. This is how &lt;code&gt;describe-mode&lt;/code&gt; discovers which documentation to print.</source>
          <target state="translated">El comando del modo mayor debe establecer la variable &lt;code&gt;major-mode&lt;/code&gt; mayor en el s&amp;iacute;mbolo de comando del modo mayor. As&amp;iacute; es como &lt;code&gt;describe-mode&lt;/code&gt; descubre qu&amp;eacute; documentaci&amp;oacute;n imprimir.</target>
        </trans-unit>
        <trans-unit id="cc2e4f72d7acbc5634e4c8fb360f612e207aadac" translate="yes" xml:space="preserve">
          <source>The major mode command should set the variable &lt;code&gt;mode-name&lt;/code&gt; to the &amp;ldquo;pretty&amp;rdquo; name of the mode, usually a string (but see &lt;a href=&quot;mode-line-data#Mode-Line-Data&quot;&gt;Mode Line Data&lt;/a&gt;, for other possible forms). The name of the mode appears in the mode line.</source>
          <target state="translated">El comando de modo mayor debe establecer la variable &lt;code&gt;mode-name&lt;/code&gt; en el nombre &amp;ldquo;bonito&amp;rdquo; del modo, generalmente una cadena (pero vea &lt;a href=&quot;mode-line-data#Mode-Line-Data&quot;&gt;Datos de l&amp;iacute;nea de modo&lt;/a&gt; , para otras formas posibles). El nombre del modo aparece en la l&amp;iacute;nea de modo.</target>
        </trans-unit>
        <trans-unit id="e9542e90f40b187eea4684e0c6016160f19daa55" translate="yes" xml:space="preserve">
          <source>The major mode command should start by calling &lt;code&gt;kill-all-local-variables&lt;/code&gt;. This runs the normal hook &lt;code&gt;change-major-mode-hook&lt;/code&gt;, then gets rid of the buffer-local variables of the major mode previously in effect. See &lt;a href=&quot;creating-buffer_002dlocal#Creating-Buffer_002dLocal&quot;&gt;Creating Buffer-Local&lt;/a&gt;.</source>
          <target state="translated">El comando del modo principal deber&amp;iacute;a comenzar llamando a &lt;code&gt;kill-all-local-variables&lt;/code&gt; . Esto ejecuta el gancho normal &lt;code&gt;change-major-mode-hook&lt;/code&gt; , luego se deshace de las variables locales del b&amp;uacute;fer del modo principal previamente en efecto. Consulte &lt;a href=&quot;creating-buffer_002dlocal#Creating-Buffer_002dLocal&quot;&gt;Creaci&amp;oacute;n de b&amp;uacute;fer local&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d4edcb1b916452f2aa05fab479bef5803ee546f7" translate="yes" xml:space="preserve">
          <source>The major mode for a newly created buffer is set to Fundamental mode. (The default value of the variable &lt;code&gt;major-mode&lt;/code&gt; is handled at a higher level; see &lt;a href=&quot;auto-major-mode#Auto-Major-Mode&quot;&gt;Auto Major Mode&lt;/a&gt;.) If the name begins with a space, the buffer initially disables undo information recording (see &lt;a href=&quot;undo#Undo&quot;&gt;Undo&lt;/a&gt;).</source>
          <target state="translated">El modo principal para un b&amp;uacute;fer reci&amp;eacute;n creado se establece en modo fundamental. (El valor predeterminado de la variable &lt;code&gt;major-mode&lt;/code&gt; se maneja en un nivel superior; consulte &lt;a href=&quot;auto-major-mode#Auto-Major-Mode&quot;&gt;Auto Major Mode&lt;/a&gt; .) Si el nombre comienza con un espacio, el b&amp;uacute;fer inicialmente deshabilita la grabaci&amp;oacute;n de informaci&amp;oacute;n de deshacer (ver &lt;a href=&quot;undo#Undo&quot;&gt;Deshacer&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="ba726196ac6572a0dc3557cdc5106eff7f9d6ee0" translate="yes" xml:space="preserve">
          <source>The major mode for the new buffer is set to Fundamental mode. The default value of the variable &lt;code&gt;major-mode&lt;/code&gt; is handled at a higher level. See &lt;a href=&quot;auto-major-mode#Auto-Major-Mode&quot;&gt;Auto Major Mode&lt;/a&gt;.</source>
          <target state="translated">El modo principal para el nuevo b&amp;uacute;fer se establece en modo fundamental. El valor predeterminado de la variable &lt;code&gt;major-mode&lt;/code&gt; se maneja en un nivel superior. Consulte &lt;a href=&quot;auto-major-mode#Auto-Major-Mode&quot;&gt;Modo autom&amp;aacute;tico mayor&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="87268c52362ac57b90f14c23d4e6a6de48b2d02a" translate="yes" xml:space="preserve">
          <source>The major mode should usually have its own keymap, which is used as the local keymap in all buffers in that mode. The major mode command should call &lt;code&gt;use-local-map&lt;/code&gt; to install this local map. See &lt;a href=&quot;active-keymaps#Active-Keymaps&quot;&gt;Active Keymaps&lt;/a&gt;, for more information.</source>
          <target state="translated">El modo principal normalmente debe tener su propio mapa de teclas, que se utiliza como mapa de teclas local en todos los b&amp;uacute;feres de ese modo. El comando del modo principal debe llamar a &lt;code&gt;use-local-map&lt;/code&gt; para instalar este mapa local. Consulte &lt;a href=&quot;active-keymaps#Active-Keymaps&quot;&gt;Mapas de teclas activos&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="172cb58908f30e86253a48b7781eed8cfd4c158b" translate="yes" xml:space="preserve">
          <source>The major version number of Emacs, as an integer. For Emacs version 23.1, the value is 23.</source>
          <target state="translated">El n√∫mero de la versi√≥n mayor de Emacs,como un n√∫mero entero.Para la versi√≥n 23.1 de Emacs,el valor es 23.</target>
        </trans-unit>
        <trans-unit id="0d1af093b0fd27af29ab4b28e1513e6dc00a63aa" translate="yes" xml:space="preserve">
          <source>The manual should be fully correct in what it does cover, and it is therefore open to criticism on anything it says&amp;mdash;from specific examples and descriptive text, to the ordering of chapters and sections. If something is confusing, or you find that you have to look at the sources or experiment to learn something not covered in the manual, then perhaps the manual should be fixed. Please let us know.</source>
          <target state="translated">El manual debe ser completamente correcto en lo que cubre y, por lo tanto, est&amp;aacute; abierto a cr&amp;iacute;ticas sobre todo lo que dice, desde ejemplos espec&amp;iacute;ficos y texto descriptivo, hasta el orden de los cap&amp;iacute;tulos y secciones. Si algo es confuso, o si encuentra que tiene que buscar en las fuentes o experimentar para aprender algo que no est&amp;aacute; cubierto en el manual, entonces quiz&amp;aacute;s el manual deber&amp;iacute;a arreglarse. Por favor d&amp;eacute;janos saber.</target>
        </trans-unit>
        <trans-unit id="a5e22ef195f16823ddf7673778585082a4f46066" translate="yes" xml:space="preserve">
          <source>The mark for the buffer. The mark is a marker, hence it is also included on the list &lt;code&gt;markers&lt;/code&gt;. See &lt;a href=&quot;the-mark#The-Mark&quot;&gt;The Mark&lt;/a&gt;.</source>
          <target state="translated">La marca del b&amp;uacute;fer. La marca es un marcador, por lo que tambi&amp;eacute;n se incluye en los &lt;code&gt;markers&lt;/code&gt; la lista . Ver &lt;a href=&quot;the-mark#The-Mark&quot;&gt;la marca&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b258116b18e88b2e80482d5981d360a38a61fc94" translate="yes" xml:space="preserve">
          <source>The mark is active when this variable is non-&lt;code&gt;nil&lt;/code&gt;. This variable is always buffer-local in each buffer. Do &lt;em&gt;not&lt;/em&gt; use the value of this variable to decide whether a command that normally operates on text near point should operate on the region instead. Use the function &lt;code&gt;use-region-p&lt;/code&gt; for that (see &lt;a href=&quot;the-region#The-Region&quot;&gt;The Region&lt;/a&gt;).</source>
          <target state="translated">La marca est&amp;aacute; activa cuando esta variable no es &lt;code&gt;nil&lt;/code&gt; . Esta variable siempre es local al b&amp;uacute;fer en cada b&amp;uacute;fer. No &lt;em&gt;, no&lt;/em&gt; utilizar el valor de esta variable para decidir si un comando que normalmente opera en el texto cerca del punto debe operar en la regi&amp;oacute;n en su lugar. Use la funci&amp;oacute;n &lt;code&gt;use-region-p&lt;/code&gt; para eso (vea &lt;a href=&quot;the-region#The-Region&quot;&gt;La regi&amp;oacute;n&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="cf467a06fad52dab305b0df8d802a3dd9b6b7599" translate="yes" xml:space="preserve">
          <source>The mark is not active now</source>
          <target state="translated">La marca no est√° activa ahora</target>
        </trans-unit>
        <trans-unit id="2294805a57144c8f475dd286330832439e218b3b" translate="yes" xml:space="preserve">
          <source>The mark specifies a position to bound a range of text for many commands, such as &lt;code&gt;kill-region&lt;/code&gt; and &lt;code&gt;indent-rigidly&lt;/code&gt;. These commands typically act on the text between point and the mark, which is called the &lt;em&gt;region&lt;/em&gt;. If you are writing a command that operates on the region, don&amp;rsquo;t examine the mark directly; instead, use &lt;code&gt;interactive&lt;/code&gt; with the &amp;lsquo;</source>
          <target state="translated">La marca especifica una posici&amp;oacute;n para enlazar un rango de texto para muchos comandos, como &lt;code&gt;kill-region&lt;/code&gt; e &lt;code&gt;indent-rigidly&lt;/code&gt; . Estos comandos normalmente act&amp;uacute;an sobre el texto entre el punto y la marca, que se llama &lt;em&gt;regi&amp;oacute;n&lt;/em&gt; . Si est&amp;aacute; escribiendo un comando que opera en la regi&amp;oacute;n, no examine la marca directamente; en su lugar, use &lt;code&gt;interactive&lt;/code&gt; con el '</target>
        </trans-unit>
        <trans-unit id="1b1540074aa53b63216cd2456d72381dd8d0fc52" translate="yes" xml:space="preserve">
          <source>The markers that refer to this buffer. This is actually a single marker, and successive elements in its marker &lt;em&gt;chain&lt;/em&gt; (a linked list) are the other markers referring to this buffer text.</source>
          <target state="translated">Los marcadores que se refieren a este b&amp;uacute;fer. En realidad, se trata de un &amp;uacute;nico marcador, y los elementos sucesivos de su &lt;em&gt;cadena de&lt;/em&gt; marcadores (una lista enlazada) son los otros marcadores que se refieren a este texto de b&amp;uacute;fer.</target>
        </trans-unit>
        <trans-unit id="bb06b83e3da02615a4f7e9ab6d8336bdd25a1731" translate="yes" xml:space="preserve">
          <source>The matcher processes a &amp;lsquo;</source>
          <target state="translated">El comparador procesa un '</target>
        </trans-unit>
        <trans-unit id="92f6e3600296536bb76b7fcd8d76a0af6e42a364" translate="yes" xml:space="preserve">
          <source>The mathematical constant &lt;em&gt;e&lt;/em&gt; (2.71828&amp;hellip;).</source>
          <target state="translated">La constante matem&amp;aacute;tica &lt;em&gt;e&lt;/em&gt; (2.71828&amp;hellip;).</target>
        </trans-unit>
        <trans-unit id="1a3e48f3d1745f4908462da41660cc121d6d0f68" translate="yes" xml:space="preserve">
          <source>The mathematical constant &lt;em&gt;pi&lt;/em&gt; (3.14159&amp;hellip;).</source>
          <target state="translated">La constante matem&amp;aacute;tica &lt;em&gt;pi&lt;/em&gt; (3,14159&amp;hellip;).</target>
        </trans-unit>
        <trans-unit id="8e605715e3d2691c70b3f21b0b8462b89a7614e5" translate="yes" xml:space="preserve">
          <source>The maximum advance width of the font.</source>
          <target state="translated">El ancho m√°ximo de avance de la fuente.</target>
        </trans-unit>
        <trans-unit id="978782c408873797cfb6aaf7d660218a112071f9" translate="yes" xml:space="preserve">
          <source>The maximum number of changes that can be amalgamated is controlled by the &lt;code&gt;amalgamating-undo-limit&lt;/code&gt; variable. If this variable is 1, no changes are amalgamated.</source>
          <target state="translated">El n&amp;uacute;mero m&amp;aacute;ximo de cambios que se pueden fusionar se controla mediante la variable &lt;code&gt;amalgamating-undo-limit&lt;/code&gt; . Si esta variable es 1, no se amalgaman cambios.</target>
        </trans-unit>
        <trans-unit id="82b0cf778d9e1f9d0ac00a5da272e14e2306ca7f" translate="yes" xml:space="preserve">
          <source>The maximum stack size this function needs.</source>
          <target state="translated">El tama√±o m√°ximo de la pila que esta funci√≥n necesita.</target>
        </trans-unit>
        <trans-unit id="459b7d57f50aecb28cc2870ce7b74f07723e326b" translate="yes" xml:space="preserve">
          <source>The meaning of a list depends on what it contains:</source>
          <target state="translated">El significado de una lista depende de lo que contiene:</target>
        </trans-unit>
        <trans-unit id="d3fe651ac40ed9579fa5231d4fcd52354eb5372a" translate="yes" xml:space="preserve">
          <source>The meanings of these list elements are as follows:</source>
          <target state="translated">Los significados de estos elementos de la lista son los siguientes:</target>
        </trans-unit>
        <trans-unit id="12d4b0de515899d94eda4148e6b314c9f86a96b8" translate="yes" xml:space="preserve">
          <source>The menu bar (see &lt;a href=&quot;menu-bar#Menu-Bar&quot;&gt;Menu Bar&lt;/a&gt;) can be either internal (drawn by Emacs itself) or external (drawn by the toolkit). Most builds (GTK+, Lucid, Motif and MS-Windows) rely on an external menu bar. NS also uses an external menu bar which, however, is not part of the outer frame. Non-toolkit builds can provide an internal menu bar. On text terminal frames, the menu bar is part of the frame&amp;rsquo;s root window (see &lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;Windows and Frames&lt;/a&gt;). As a rule, menu bars are never shown on child frames (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;). Display of the menu bar can be suppressed by setting the &lt;code&gt;menu-bar-lines&lt;/code&gt; parameter (see &lt;a href=&quot;layout-parameters#Layout-Parameters&quot;&gt;Layout Parameters&lt;/a&gt;) to zero.</source>
          <target state="translated">La barra de men&amp;uacute; (ver &lt;a href=&quot;menu-bar#Menu-Bar&quot;&gt;Barra de men&amp;uacute;&lt;/a&gt; ) puede ser interna (dibujada por Emacs mismo) o externa (dibujada por el kit de herramientas). La mayor&amp;iacute;a de las versiones (GTK +, Lucid, Motif y MS-Windows) se basan en una barra de men&amp;uacute; externa. NS tambi&amp;eacute;n utiliza una barra de men&amp;uacute; externa que, sin embargo, no forma parte del marco exterior. Las compilaciones que no son del kit de herramientas pueden proporcionar una barra de men&amp;uacute; interna. En los marcos de terminal de texto, la barra de men&amp;uacute; es parte de la ventana ra&amp;iacute;z del marco (consulte &lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;Ventanas y marcos&lt;/a&gt; ). Como regla general, las barras de men&amp;uacute; nunca se muestran en los marcos secundarios (consulte &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Marcos&lt;/a&gt; secundarios ). La visualizaci&amp;oacute;n de la barra de men&amp;uacute; se puede suprimir estableciendo el par&amp;aacute;metro de &lt;code&gt;menu-bar-lines&lt;/code&gt; (consulte &lt;a href=&quot;layout-parameters#Layout-Parameters&quot;&gt;Par&amp;aacute;metros de dise&amp;ntilde;o&lt;/a&gt; ) en cero.</target>
        </trans-unit>
        <trans-unit id="9c36ca261c29f5622700c6f2f7d03d8bacd64def" translate="yes" xml:space="preserve">
          <source>The menu bar does not recalculate which items are enabled every time you look at a menu. This is because the X toolkit requires the whole tree of menus in advance. To force recalculation of the menu bar, call &lt;code&gt;force-mode-line-update&lt;/code&gt; (see &lt;a href=&quot;mode-line-format#Mode-Line-Format&quot;&gt;Mode Line Format&lt;/a&gt;).</source>
          <target state="translated">La barra de men&amp;uacute; no recalcula qu&amp;eacute; elementos est&amp;aacute;n habilitados cada vez que mira un men&amp;uacute;. Esto se debe a que el kit de herramientas X requiere todo el &amp;aacute;rbol de men&amp;uacute;s por adelantado. Para forzar el rec&amp;aacute;lculo de la barra de men&amp;uacute;, llame a &lt;code&gt;force-mode-line-update&lt;/code&gt; (consulte &lt;a href=&quot;mode-line-format#Mode-Line-Format&quot;&gt;Formato de l&amp;iacute;nea de modo&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="0671d125fcb3f27fb5c40fddd77a7227205c4dea" translate="yes" xml:space="preserve">
          <source>The menu bar mechanism, which lets you switch between submenus by moving the mouse, cannot look within the definition of a command to see that it calls &lt;code&gt;x-popup-menu&lt;/code&gt;. Therefore, if you try to implement a submenu using &lt;code&gt;x-popup-menu&lt;/code&gt;, it cannot work with the menu bar in an integrated fashion. This is why all menu bar submenus are implemented with menu keymaps within the parent menu, and never with &lt;code&gt;x-popup-menu&lt;/code&gt;. See &lt;a href=&quot;menu-bar#Menu-Bar&quot;&gt;Menu Bar&lt;/a&gt;.</source>
          <target state="translated">El mecanismo de la barra de men&amp;uacute;, que le permite cambiar entre submen&amp;uacute;s moviendo el mouse, no puede mirar dentro de la definici&amp;oacute;n de un comando para ver que llama a &lt;code&gt;x-popup-menu&lt;/code&gt; . Por lo tanto, si intenta implementar un submen&amp;uacute; usando &lt;code&gt;x-popup-menu&lt;/code&gt; , no puede funcionar con la barra de men&amp;uacute; de forma integrada. Esta es la raz&amp;oacute;n por la que todos los submen&amp;uacute;s de la barra de men&amp;uacute; se implementan con mapas de teclas de men&amp;uacute; dentro del men&amp;uacute; principal y nunca con &lt;code&gt;x-popup-menu&lt;/code&gt; . Ver &lt;a href=&quot;menu-bar#Menu-Bar&quot;&gt;barra de men&amp;uacute;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9fccd406d5e813b76ef7a41fe974c95db256bdc6" translate="yes" xml:space="preserve">
          <source>The menu in this example is intended for use with the mouse. If a menu is intended for use with the keyboard, that is, if it is bound to a key sequence ending with a keyboard event, then the menu items should be bound to characters or real function keys, that can be typed with the keyboard.</source>
          <target state="translated">El men√∫ de este ejemplo est√° pensado para ser usado con el rat√≥n.Si un men√∫ est√° destinado a ser utilizado con el teclado,es decir,si est√° ligado a una secuencia de teclas que termina con un evento de teclado,entonces los elementos del men√∫ deben estar ligados a caracteres o teclas de funci√≥n reales,que pueden ser tecleados con el teclado.</target>
        </trans-unit>
        <trans-unit id="884ca4e3a78e0c7d0eb618828c719ec2bc18c4b5" translate="yes" xml:space="preserve">
          <source>The menu&amp;rsquo;s items are the bindings in the keymap. Each binding associates an event type to a definition, but the event types have no significance for the menu appearance. (Usually we use pseudo-events, symbols that the keyboard cannot generate, as the event types for menu item bindings.) The menu is generated entirely from the bindings that correspond in the keymap to these events.</source>
          <target state="translated">Los elementos del men&amp;uacute; son los enlaces en el mapa de teclas. Cada enlace asocia un tipo de evento a una definici&amp;oacute;n, pero los tipos de evento no tienen importancia para la apariencia del men&amp;uacute;. (Usualmente usamos pseudoeventos, s&amp;iacute;mbolos que el teclado no puede generar, como tipos de eventos para las vinculaciones de elementos de men&amp;uacute;). El men&amp;uacute; se genera completamente a partir de las vinculaciones que corresponden en el mapa de teclas a estos eventos.</target>
        </trans-unit>
        <trans-unit id="4ffe1db1ee3430043bd7d7cfed2fce90a58b2f33" translate="yes" xml:space="preserve">
          <source>The message is &amp;lsquo;</source>
          <target state="translated">El mensaje es '</target>
        </trans-unit>
        <trans-unit id="1b4522d132316958b60412509a75ad9dd71138ff" translate="yes" xml:space="preserve">
          <source>The message is &lt;code&gt;Arithmetic range error&lt;/code&gt;.</source>
          <target state="translated">El mensaje es &lt;code&gt;Arithmetic range error&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="14845ac05edc00f5ef9aed326e6a4acbb2d66dc1" translate="yes" xml:space="preserve">
          <source>The message is the empty string. See &lt;a href=&quot;signaling-errors#Signaling-Errors&quot;&gt;Signaling Errors&lt;/a&gt;.</source>
          <target state="translated">El mensaje es la cadena vac&amp;iacute;a. Consulte &lt;a href=&quot;signaling-errors#Signaling-Errors&quot;&gt;Errores de se&amp;ntilde;alizaci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a343531eec6204803775063bd43c8b0c3b1e1d7d" translate="yes" xml:space="preserve">
          <source>The message is usually &amp;lsquo;</source>
          <target state="translated">El mensaje suele ser '</target>
        </trans-unit>
        <trans-unit id="a72cf44ed0b2379b5bd18fbbfcf576f977b2239c" translate="yes" xml:space="preserve">
          <source>The meta modifier.</source>
          <target state="translated">El meta modificador.</target>
        </trans-unit>
        <trans-unit id="b1a58020916aba3f6cdf104343f3433939d15e37" translate="yes" xml:space="preserve">
          <source>The meta variants of those characters, with codes in the range of 2**27 to 2**27+127, can also go in the string, but you must change their numeric values. You must set the 2**7 bit instead of the 2**27 bit, resulting in a value between 128 and 255. Only a unibyte string can include these codes.</source>
          <target state="translated">Las meta-variantes de esos caracteres,con c√≥digos en el rango de 2**27 a 2**27+127,tambi√©n pueden ir en la cadena,pero hay que cambiar sus valores num√©ricos.Debes establecer el bit 2**7 en lugar del bit 2**27,lo que resulta en un valor entre 128 y 255.S√≥lo una cadena de unibyte puede incluir estos c√≥digos.</target>
        </trans-unit>
        <trans-unit id="9260d6b48ff908594f1c64bdc5084fd35f5bbde1" translate="yes" xml:space="preserve">
          <source>The minibuffer&amp;rsquo;s window is normally a single line; it grows automatically if the contents require more space. Whilst the minibuffer is active, you can explicitly resize its window temporarily with the window sizing commands; the window reverts to its normal size when the minibuffer is exited. When the minibuffer is not active, you can resize its window permanently by using the window sizing commands in the frame&amp;rsquo;s other window, or dragging the mode line with the mouse. (Due to details of the current implementation, for this to work &lt;code&gt;resize-mini-windows&lt;/code&gt; must be &lt;code&gt;nil&lt;/code&gt;.) If the frame contains just a minibuffer window, you can change its size by changing the frame&amp;rsquo;s size.</source>
          <target state="translated">La ventana del minib&amp;uacute;fer es normalmente una sola l&amp;iacute;nea; crece autom&amp;aacute;ticamente si los contenidos requieren m&amp;aacute;s espacio. Mientras el minib&amp;uacute;fer est&amp;aacute; activo, puede cambiar expl&amp;iacute;citamente el tama&amp;ntilde;o de su ventana temporalmente con los comandos de tama&amp;ntilde;o de ventana; la ventana vuelve a su tama&amp;ntilde;o normal cuando se sale del minib&amp;uacute;fer. Cuando el minib&amp;uacute;fer no est&amp;aacute; activo, puede cambiar el tama&amp;ntilde;o de su ventana de forma permanente utilizando los comandos de tama&amp;ntilde;o de ventana en la otra ventana del marco o arrastrando la l&amp;iacute;nea de modo con el mouse. (Debido a los detalles de la implementaci&amp;oacute;n actual, para que esto funcione, &lt;code&gt;resize-mini-windows&lt;/code&gt; debe ser &lt;code&gt;nil&lt;/code&gt; ). Si el marco contiene solo una ventana de minib&amp;uacute;fer, puede cambiar su tama&amp;ntilde;o cambiando el tama&amp;ntilde;o del marco.</target>
        </trans-unit>
        <trans-unit id="fc66b2b22fab10f272a2733f5220517063d244a8" translate="yes" xml:space="preserve">
          <source>The minimum parenthesis depth encountered during this scan.</source>
          <target state="translated">La profundidad m√≠nima de par√©ntesis encontrada durante este escaneo.</target>
        </trans-unit>
        <trans-unit id="f63caeb9d63ae3ea523b1bd607e47fabe4f9c44a" translate="yes" xml:space="preserve">
          <source>The minor mode should, if possible, support enabling and disabling via Custom (see &lt;a href=&quot;customization#Customization&quot;&gt;Customization&lt;/a&gt;). To do this, the mode variable should be defined with &lt;code&gt;defcustom&lt;/code&gt;, usually with &lt;code&gt;:type 'boolean&lt;/code&gt;. If just setting the variable is not sufficient to enable the mode, you should also specify a &lt;code&gt;:set&lt;/code&gt; method which enables the mode by invoking the mode command. Note in the variable&amp;rsquo;s documentation string that setting the variable other than via Custom may not take effect. Also, mark the definition with an autoload cookie (see &lt;a href=&quot;autoload#autoload-cookie&quot;&gt;autoload cookie&lt;/a&gt;), and specify a &lt;code&gt;:require&lt;/code&gt; so that customizing the variable will load the library that defines the mode. For example:</source>
          <target state="translated">El modo menor deber&amp;iacute;a, si es posible, admitir la activaci&amp;oacute;n y desactivaci&amp;oacute;n a trav&amp;eacute;s de Personalizaci&amp;oacute;n (consulte &lt;a href=&quot;customization#Customization&quot;&gt;Personalizaci&amp;oacute;n&lt;/a&gt; ). Para hacer esto, la variable de modo debe definirse con &lt;code&gt;defcustom&lt;/code&gt; , generalmente con &lt;code&gt;:type 'boolean&lt;/code&gt; . Si solo establecer la variable no es suficiente para habilitar el modo, tambi&amp;eacute;n debe especificar un m&amp;eacute;todo &lt;code&gt;:set&lt;/code&gt; que habilita el modo invocando el comando de modo. Tenga en cuenta en la cadena de documentaci&amp;oacute;n de la variable que la configuraci&amp;oacute;n de la variable a trav&amp;eacute;s de Personalizado puede no tener efecto. Adem&amp;aacute;s, marque la definici&amp;oacute;n con una cookie de carga autom&amp;aacute;tica (consulte la &lt;a href=&quot;autoload#autoload-cookie&quot;&gt;cookie de carga autom&amp;aacute;tica&lt;/a&gt; ) y especifique un &lt;code&gt;:require&lt;/code&gt; para que la personalizaci&amp;oacute;n de la variable cargue la biblioteca que define el modo. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="a754ecbf865ded2f8f972fadc0f979ee00b4c003" translate="yes" xml:space="preserve">
          <source>The minor version number of Emacs, as an integer. For Emacs version 23.1, the value is 1.</source>
          <target state="translated">El n√∫mero de versi√≥n menor de Emacs,como un n√∫mero entero.Para la versi√≥n 23.1 de Emacs,el valor es 1.</target>
        </trans-unit>
        <trans-unit id="1778e11c806e3d03eed718920a2bdcbe70425f0c" translate="yes" xml:space="preserve">
          <source>The mnemonics of keyboard, terminal, and buffer coding systems.</source>
          <target state="translated">La mnemotecnia de los sistemas de codificaci√≥n de teclados,terminales y buffers.</target>
        </trans-unit>
        <trans-unit id="d4aa0cdb7029a5f2355863fdbbab99919ce6ce82" translate="yes" xml:space="preserve">
          <source>The mode can specify a local value for &lt;code&gt;eldoc-documentation-function&lt;/code&gt; to tell ElDoc mode how to handle this mode.</source>
          <target state="translated">El modo puede especificar un valor local para &lt;code&gt;eldoc-documentation-function&lt;/code&gt; para decirle al modo ElDoc c&amp;oacute;mo manejar este modo.</target>
        </trans-unit>
        <trans-unit id="354ca13496161c1669222f09fc05f88ea22e29e9" translate="yes" xml:space="preserve">
          <source>The mode can specify how to complete various keywords by adding one or more buffer-local entries to the special hook &lt;code&gt;completion-at-point-functions&lt;/code&gt;. See &lt;a href=&quot;completion-in-buffers#Completion-in-Buffers&quot;&gt;Completion in Buffers&lt;/a&gt;.</source>
          <target state="translated">El modo puede especificar c&amp;oacute;mo completar varias palabras clave agregando una o m&amp;aacute;s entradas locales del b&amp;uacute;fer a las &lt;code&gt;completion-at-point-functions&lt;/code&gt; especiales de finalizaci&amp;oacute;n en el punto del gancho . Consulte &lt;a href=&quot;completion-in-buffers#Completion-in-Buffers&quot;&gt;Finalizaci&amp;oacute;n en b&amp;uacute;feres&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9ced895ea9c1431eb7e76df2f2cbdc9e5d0836c8" translate="yes" xml:space="preserve">
          <source>The mode command should accept one optional argument. If called interactively with no prefix argument, it should toggle the mode (i.e., enable if it is disabled, and disable if it is enabled). If called interactively with a prefix argument, it should enable the mode if the argument is positive and disable it otherwise.</source>
          <target state="translated">El comando de modo deber√≠a aceptar un argumento opcional.Si se llama de forma interactiva sin el argumento del prefijo,deber√≠a conmutar el modo (es decir,activarlo si est√° desactivado y desactivarlo si est√° activado).Si se llama de forma interactiva con un argumento de prefijo,deber√≠a activar el modo si el argumento es positivo y desactivarlo en caso contrario.</target>
        </trans-unit>
        <trans-unit id="44819a97a0e2f91469bd3f92a2d58321df9329f0" translate="yes" xml:space="preserve">
          <source>The mode line contents are controlled by a data structure called a &lt;em&gt;mode line construct&lt;/em&gt;, made up of lists, strings, symbols, and numbers kept in buffer-local variables. Each data type has a specific meaning for the mode line appearance, as described below. The same data structure is used for constructing frame titles (see &lt;a href=&quot;frame-titles#Frame-Titles&quot;&gt;Frame Titles&lt;/a&gt;) and header lines (see &lt;a href=&quot;header-lines#Header-Lines&quot;&gt;Header Lines&lt;/a&gt;).</source>
          <target state="translated">El contenido de la l&amp;iacute;nea de modo est&amp;aacute; controlado por una estructura de datos llamada &lt;em&gt;construcci&amp;oacute;n de l&amp;iacute;nea de modo&lt;/em&gt; , formada por listas, cadenas, s&amp;iacute;mbolos y n&amp;uacute;meros guardados en variables locales del b&amp;uacute;fer. Cada tipo de datos tiene un significado espec&amp;iacute;fico para la apariencia de la l&amp;iacute;nea de modo, como se describe a continuaci&amp;oacute;n. La misma estructura de datos se utiliza para construir t&amp;iacute;tulos de marcos (ver &lt;a href=&quot;frame-titles#Frame-Titles&quot;&gt;T&amp;iacute;tulos de marcos&lt;/a&gt; ) y l&amp;iacute;neas de encabezado (ver &lt;a href=&quot;header-lines#Header-Lines&quot;&gt;L&amp;iacute;neas de encabezado&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="e208e76c5548c1d095dbde47ed20de1a7d12aa6a" translate="yes" xml:space="preserve">
          <source>The mode may have its own abbrev table or may share one with other related modes. If it has its own abbrev table, it should store this in a variable named &lt;code&gt;&lt;var&gt;modename&lt;/var&gt;-mode-abbrev-table&lt;/code&gt;. If the major mode command defines any abbrevs itself, it should pass &lt;code&gt;t&lt;/code&gt; for the &lt;var&gt;system-flag&lt;/var&gt; argument to &lt;code&gt;define-abbrev&lt;/code&gt;. See &lt;a href=&quot;defining-abbrevs#Defining-Abbrevs&quot;&gt;Defining Abbrevs&lt;/a&gt;.</source>
          <target state="translated">El modo puede tener su propia tabla de abreviaturas o puede compartir una con otros modos relacionados. Si tiene su propia tabla de abreviaturas, deber&amp;iacute;a almacenarla en una variable denominada &lt;code&gt;&lt;var&gt;modename&lt;/var&gt;-mode-abbrev-table&lt;/code&gt; . Si el comando del modo mayor define alguna abreviatura por s&amp;iacute; mismo, deber&amp;iacute;a pasar &lt;code&gt;t&lt;/code&gt; para el argumento del &lt;var&gt;system-flag&lt;/var&gt; del sistema a &lt;code&gt;define-abbrev&lt;/code&gt; . Consulte &lt;a href=&quot;defining-abbrevs#Defining-Abbrevs&quot;&gt;Definici&amp;oacute;n de abreviaturas&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="566eebc546ff4022d5692ebd193f3372e5deedf9" translate="yes" xml:space="preserve">
          <source>The mode may have its own syntax table or may share one with other related modes. If it has its own syntax table, it should store this in a variable named &lt;code&gt;&lt;var&gt;modename&lt;/var&gt;-mode-syntax-table&lt;/code&gt;. See &lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;Syntax Tables&lt;/a&gt;.</source>
          <target state="translated">El modo puede tener su propia tabla de sintaxis o puede compartir una con otros modos relacionados. Si tiene su propia tabla de sintaxis, deber&amp;iacute;a almacenarla en una variable denominada &lt;code&gt;&lt;var&gt;modename&lt;/var&gt;-mode-syntax-table&lt;/code&gt; . Consulte &lt;a href=&quot;syntax-tables#Syntax-Tables&quot;&gt;Tablas de sintaxis&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7febfb2248d6f317197277153f5791a4f2a7185b" translate="yes" xml:space="preserve">
          <source>The mode should specify how Imenu should find the definitions or sections of a buffer, by setting up a buffer-local value for the variable &lt;code&gt;imenu-generic-expression&lt;/code&gt;, for the two variables &lt;code&gt;imenu-prev-index-position-function&lt;/code&gt; and &lt;code&gt;imenu-extract-index-name-function&lt;/code&gt;, or for the variable &lt;code&gt;imenu-create-index-function&lt;/code&gt; (see &lt;a href=&quot;imenu#Imenu&quot;&gt;Imenu&lt;/a&gt;).</source>
          <target state="translated">El modo debe especificar c&amp;oacute;mo Imenu debe encontrar las definiciones o secciones de un b&amp;uacute;fer, configurando un valor local del b&amp;uacute;fer para la variable &lt;code&gt;imenu-generic-expression&lt;/code&gt; , para las dos variables &lt;code&gt;imenu-prev-index-position-function&lt;/code&gt; e &lt;code&gt;imenu-extract-index-name-function&lt;/code&gt; , o para la variable &lt;code&gt;imenu-create-index-function&lt;/code&gt; (ver &lt;a href=&quot;imenu#Imenu&quot;&gt;Imenu&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="e819d19cb71035bc2b05451e5471df8840dc6d69" translate="yes" xml:space="preserve">
          <source>The mode should specify how to do highlighting for Font Lock mode, by setting up a buffer-local value for the variable &lt;code&gt;font-lock-defaults&lt;/code&gt; (see &lt;a href=&quot;font-lock-mode#Font-Lock-Mode&quot;&gt;Font Lock Mode&lt;/a&gt;).</source>
          <target state="translated">El modo debe especificar c&amp;oacute;mo resaltar para el modo de bloqueo de fuente, configurando un valor local de b&amp;uacute;fer para la variable &lt;code&gt;font-lock-defaults&lt;/code&gt; (ver &lt;a href=&quot;font-lock-mode#Font-Lock-Mode&quot;&gt;Modo de bloqueo de fuente&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="41a1cfe199d882964dc064f09142206bb96f8e6c" translate="yes" xml:space="preserve">
          <source>The modification time of the visited file. It is set when the file is written or read. Before writing the buffer into a file, this field is compared to the modification time of the file to see if the file has changed on disk. See &lt;a href=&quot;buffer-modification#Buffer-Modification&quot;&gt;Buffer Modification&lt;/a&gt;.</source>
          <target state="translated">La hora de modificaci&amp;oacute;n del archivo visitado. Se establece cuando se escribe o se lee el archivo. Antes de escribir el b&amp;uacute;fer en un archivo, este campo se compara con la hora de modificaci&amp;oacute;n del archivo para ver si el archivo ha cambiado en el disco. Consulte &lt;a href=&quot;buffer-modification#Buffer-Modification&quot;&gt;Modificaci&amp;oacute;n de b&amp;uacute;fer&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4e9e26b12f5c002c1627a4d332042e4cecc33362" translate="yes" xml:space="preserve">
          <source>The modifiers list for a click event explicitly contains &lt;code&gt;click&lt;/code&gt;, but the event symbol name itself does not contain &amp;lsquo;</source>
          <target state="translated">La lista de modificadores para un evento de clic contiene expl&amp;iacute;citamente &lt;code&gt;click&lt;/code&gt; , pero el nombre del s&amp;iacute;mbolo de evento en s&amp;iacute; no contiene '</target>
        </trans-unit>
        <trans-unit id="b3b787746e135e4f51648da476a31670954846cd" translate="yes" xml:space="preserve">
          <source>The momentary display remains until the next input event. If the next input event is &lt;var&gt;char&lt;/var&gt;, &lt;code&gt;momentary-string-display&lt;/code&gt; ignores it and returns. Otherwise, that event remains buffered for subsequent use as input. Thus, typing &lt;var&gt;char&lt;/var&gt; will simply remove the string from the display, while typing (say)</source>
          <target state="translated">La pantalla moment&amp;aacute;nea permanece hasta el pr&amp;oacute;ximo evento de entrada. Si el siguiente evento de entrada es &lt;var&gt;char&lt;/var&gt; , &lt;code&gt;momentary-string-display&lt;/code&gt; lo ignora y regresa. De lo contrario, ese evento permanece almacenado en b&amp;uacute;fer para su uso posterior como entrada. Por lo tanto, escribir &lt;var&gt;char&lt;/var&gt; simplemente eliminar&amp;aacute; la cadena de la pantalla, mientras escribe (digamos)</target>
        </trans-unit>
        <trans-unit id="6ccfa1f10310929beb049fb30bcfc7d9086811f9" translate="yes" xml:space="preserve">
          <source>The month of the year, as an integer between 1 and 12.</source>
          <target state="translated">El mes del a√±o,como un n√∫mero entero entre 1 y 12.</target>
        </trans-unit>
        <trans-unit id="edb5bce3a7e2bd1bf00ac6d3a9eb55fc41355ba2" translate="yes" xml:space="preserve">
          <source>The most basic primitive for minibuffer input is &lt;code&gt;read-from-minibuffer&lt;/code&gt;, which can be used to read either a string or a Lisp object in textual form. The function &lt;code&gt;read-regexp&lt;/code&gt; is used for reading regular expressions (see &lt;a href=&quot;regular-expressions#Regular-Expressions&quot;&gt;Regular Expressions&lt;/a&gt;), which are a special kind of string. There are also specialized functions for reading commands, variables, file names, etc. (see &lt;a href=&quot;completion#Completion&quot;&gt;Completion&lt;/a&gt;).</source>
          <target state="translated">La primitiva m&amp;aacute;s b&amp;aacute;sica para la entrada del minib&amp;uacute;fer es &lt;code&gt;read-from-minibuffer&lt;/code&gt; , que se puede usar para leer una cadena o un objeto Lisp en forma textual. La funci&amp;oacute;n &lt;code&gt;read-regexp&lt;/code&gt; se usa para leer expresiones regulares (ver &lt;a href=&quot;regular-expressions#Regular-Expressions&quot;&gt;Expresiones regulares&lt;/a&gt; ), que son un tipo especial de cadena. Tambi&amp;eacute;n hay funciones especializadas para leer comandos, variables, nombres de archivos, etc. (ver &lt;a href=&quot;completion#Completion&quot;&gt;Finalizaci&amp;oacute;n&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="04571e47b6db6005c0928b2d449f301cebe34f7a" translate="yes" xml:space="preserve">
          <source>The most basic way to alter the contents of an existing string is with &lt;code&gt;aset&lt;/code&gt; (see &lt;a href=&quot;array-functions#Array-Functions&quot;&gt;Array Functions&lt;/a&gt;). &lt;code&gt;(aset &lt;var&gt;string&lt;/var&gt;
&lt;var&gt;idx&lt;/var&gt; &lt;var&gt;char&lt;/var&gt;)&lt;/code&gt; stores &lt;var&gt;char&lt;/var&gt; into &lt;var&gt;string&lt;/var&gt; at index &lt;var&gt;idx&lt;/var&gt;. Each character occupies one or more bytes, and if &lt;var&gt;char&lt;/var&gt; needs a different number of bytes from the character already present at that index, &lt;code&gt;aset&lt;/code&gt; signals an error.</source>
          <target state="translated">La forma m&amp;aacute;s b&amp;aacute;sica de alterar el contenido de una cadena existente es con un &lt;code&gt;aset&lt;/code&gt; (consulte &lt;a href=&quot;array-functions#Array-Functions&quot;&gt;Funciones de matriz&lt;/a&gt; ). &lt;code&gt;(aset &lt;var&gt;string&lt;/var&gt; &lt;var&gt;idx&lt;/var&gt; &lt;var&gt;char&lt;/var&gt;)&lt;/code&gt; almacena &lt;var&gt;char&lt;/var&gt; en &lt;var&gt;string&lt;/var&gt; en el &amp;iacute;ndice &lt;var&gt;idx&lt;/var&gt; . Cada car&amp;aacute;cter ocupa uno o m&amp;aacute;s bytes, y si &lt;var&gt;char&lt;/var&gt; necesita un n&amp;uacute;mero diferente de bytes del car&amp;aacute;cter que ya est&amp;aacute; presente en ese &amp;iacute;ndice, &lt;code&gt;aset&lt;/code&gt; indica un error.</target>
        </trans-unit>
        <trans-unit id="bf4dd793bfdf67867b9bdc6495e0ff90954bd76e" translate="yes" xml:space="preserve">
          <source>The most basic way to use the expression parser is to tell it to start at a given position with a certain state, and parse up to a specified end position.</source>
          <target state="translated">La forma m√°s b√°sica de utilizar la expresi√≥n parser es decirle que comience en una posici√≥n dada con un determinado estado,y analizar hasta una posici√≥n final especificada.</target>
        </trans-unit>
        <trans-unit id="b7f2a6fce568eb37624dbc5a896f8aecf156540b" translate="yes" xml:space="preserve">
          <source>The most common items to autoload are the interactive entry points to a library. For example, if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00ce30cf3da30f9ec9b191e1b5b38d0ab5c7d881" translate="yes" xml:space="preserve">
          <source>The most common problem in writing macros is doing some of the real work prematurely&amp;mdash;while expanding the macro, rather than in the expansion itself. For instance, one real package had this macro definition:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cf92a8ba2845654523982a452093a675127ce73" translate="yes" xml:space="preserve">
          <source>The most common reason to use &lt;code&gt;:require&lt;/code&gt; is when a variable enables a feature such as a minor mode, and just setting the variable won&amp;rsquo;t have any effect unless the code which implements the mode is loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00d251711d163f90f5dc973380466e863d64f7b0" translate="yes" xml:space="preserve">
          <source>The most common repeat events are &lt;em&gt;double-click&lt;/em&gt; events. Emacs generates a double-click event when you click a button twice; the event happens when you release the button (as is normal for all click events).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57850c0a76ab6f2efce7f9ee07926b9e3846b613" translate="yes" xml:space="preserve">
          <source>The most common use of buffer-local bindings is for major modes to change variables that control the behavior of commands. For example, C mode and Lisp mode both set the variable &lt;code&gt;paragraph-start&lt;/code&gt; to specify that only blank lines separate paragraphs. They do this by making the variable buffer-local in the buffer that is being put into C mode or Lisp mode, and then setting it to the new value for that mode. See &lt;a href=&quot;major-modes#Major-Modes&quot;&gt;Major Modes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="702580a0fb96dc0456829bb764ce3a637ffd43c4" translate="yes" xml:space="preserve">
          <source>The most common way of invoking a function is by evaluating a list. For example, evaluating the list &lt;code&gt;(concat &quot;a&quot; &quot;b&quot;)&lt;/code&gt; calls the function &lt;code&gt;concat&lt;/code&gt; with arguments &lt;code&gt;&quot;a&quot;&lt;/code&gt; and &lt;code&gt;&quot;b&quot;&lt;/code&gt;. See &lt;a href=&quot;evaluation#Evaluation&quot;&gt;Evaluation&lt;/a&gt;, for a description of evaluation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d131735a093456a7b6d24f8f667e2b2a59acf4e8" translate="yes" xml:space="preserve">
          <source>The most common way to compute the length of a list, when you are not worried that it may be circular, is with &lt;code&gt;length&lt;/code&gt;. See &lt;a href=&quot;sequence-functions#Sequence-Functions&quot;&gt;Sequence Functions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="347c946e7276a21392ff141fa45e82a75d88329c" translate="yes" xml:space="preserve">
          <source>The most general of the two facilities is controlled by the variable &lt;code&gt;format-alist&lt;/code&gt;, a list of &lt;em&gt;file format&lt;/em&gt; specifications, which describe textual representations used in files for the data in an Emacs buffer. The descriptions for reading and writing are paired, which is why we call this &amp;ldquo;round-trip&amp;rdquo; specification (see &lt;a href=&quot;format-conversion-piecemeal#Format-Conversion-Piecemeal&quot;&gt;Format Conversion Piecemeal&lt;/a&gt;, for non-paired specification).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd8ccdf82fe4e52359af0e8e7311554e454e5dd4" translate="yes" xml:space="preserve">
          <source>The most general way to check the type of an object is to call the function &lt;code&gt;type-of&lt;/code&gt;. Recall that each object belongs to one and only one primitive type; &lt;code&gt;type-of&lt;/code&gt; tells you which one (see &lt;a href=&quot;lisp-data-types#Lisp-Data-Types&quot;&gt;Lisp Data Types&lt;/a&gt;). But &lt;code&gt;type-of&lt;/code&gt; knows nothing about non-primitive types. In most cases, it is more convenient to use type predicates than &lt;code&gt;type-of&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c939ba5fb7000b3ef15a75258275fafbcfabe6bd" translate="yes" xml:space="preserve">
          <source>The most important time to enter the debugger is when a Lisp error happens. This allows you to investigate the immediate causes of the error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18cb17b94649eed8921d3ce73d54ecd88ad00023" translate="yes" xml:space="preserve">
          <source>The most simple approach to make a new atomic window is to take an existing internal window and apply the following function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1e8fa969491d0969bdb64f111c245755eef7fdd" translate="yes" xml:space="preserve">
          <source>The mutex ensures atomicity, and the loop is for robustness&amp;mdash;there may be spurious notifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20600bb0132abd59b71aa3abecbc6c3c79d7ed11" translate="yes" xml:space="preserve">
          <source>The name &lt;code&gt;easy-mmode-define-minor-mode&lt;/code&gt; is an alias for this macro.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0164386da8dab74b0dca8dc21998a6981ad8f3bc" translate="yes" xml:space="preserve">
          <source>The name &lt;var&gt;property&lt;/var&gt; is compared with the existing property names using &lt;code&gt;eq&lt;/code&gt;, so any object is a legitimate property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81686d309fb6971d2f0465f17ae4fbda5d84fd34" translate="yes" xml:space="preserve">
          <source>The name of a face from which to inherit attributes, or a list of face names. Attributes from inherited faces are merged into the face like an underlying face would be, with higher priority than underlying faces (see &lt;a href=&quot;displaying-faces#Displaying-Faces&quot;&gt;Displaying Faces&lt;/a&gt;). If the face to inherit from is &lt;code&gt;unspecified&lt;/code&gt;, it is treated the same as &lt;code&gt;nil&lt;/code&gt;, since Emacs never merges &lt;code&gt;:inherit&lt;/code&gt; attributes. If a list of faces is used, attributes from faces earlier in the list override those from later faces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f14b4e7f3d214e623215de71ea76c596c58a8147" translate="yes" xml:space="preserve">
          <source>The name of an existing buffer. By default, uses the name of the current buffer (see &lt;a href=&quot;buffers#Buffers&quot;&gt;Buffers&lt;/a&gt;). Existing, Completion, Default, Prompt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d3de7a674caef56f2edb7325689eee077d5c503" translate="yes" xml:space="preserve">
          <source>The name of the &lt;em&gt;font foundry&lt;/em&gt; for the font family specified by the &lt;code&gt;:family&lt;/code&gt; attribute (a string). See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Fonts.html#Fonts&quot;&gt;Fonts&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb8aba24892b581b6675f143c2e9d3a6e057a04b" translate="yes" xml:space="preserve">
          <source>The name of the &lt;em&gt;font foundry&lt;/em&gt; for the font family specified by the &lt;code&gt;:family&lt;/code&gt; attribute (a string). See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Fonts.html#Fonts&quot;&gt;Fonts&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d84e4020bfcfa0d5df12e11e36810c5a458fbc2c" translate="yes" xml:space="preserve">
          <source>The name of the application sending the notification. The default is &lt;code&gt;notifications-application-name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31bc03ff12180dc54cb103b5e65b3d301c362de1" translate="yes" xml:space="preserve">
          <source>The name of the command that runs in the process. This is a string that usually specifies the name of the executable file of the process, without the leading directories. However, some special system processes can report strings that do not correspond to an executable file of a program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd51404aec6b7e3516493114c0df7bd668d69bf8" translate="yes" xml:space="preserve">
          <source>The name of the device used by the terminal (e.g., &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86223234e995255179c7f5ed59ad98c61222e8f0" translate="yes" xml:space="preserve">
          <source>The name of the file visited in this buffer, or &lt;code&gt;nil&lt;/code&gt;. This is the value of the buffer-local variable &lt;code&gt;buffer-file-name&lt;/code&gt; (see &lt;a href=&quot;buffer-file-name#Buffer-File-Name&quot;&gt;Buffer File Name&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cf516df8bd70dd62a0f6c98d528269943f52170" translate="yes" xml:space="preserve">
          <source>The name of the font for displaying text in the frame. This is a string, either a valid font name for your system or the name of an Emacs fontset (see &lt;a href=&quot;fontsets#Fontsets&quot;&gt;Fontsets&lt;/a&gt;). It is equivalent to the &lt;code&gt;font&lt;/code&gt; attribute of the &lt;code&gt;default&lt;/code&gt; face.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c12d93ce989364c1c7d4f9a741900cf941c5dab1" translate="yes" xml:space="preserve">
          <source>The name of the frame. The frame name serves as a default for the frame title, if the &lt;code&gt;title&lt;/code&gt; parameter is unspecified or &lt;code&gt;nil&lt;/code&gt;. If you don&amp;rsquo;t specify a name, Emacs sets the frame name automatically (see &lt;a href=&quot;frame-titles#Frame-Titles&quot;&gt;Frame Titles&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d46a694cb309b5635ce7fcf75332cf135b35bc90" translate="yes" xml:space="preserve">
          <source>The name of the keysym that should stand for the Control modifier (respectively, for Alt, Meta, Hyper, and Super). For example, here is how to swap the Meta and Alt modifiers within Emacs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea60fe57d26ab008b617db1ef54c09ed08318866" translate="yes" xml:space="preserve">
          <source>The name of the package is the same as the base name of the file, as written on the first line. Here, it is &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e21cb3a697575e4abea29254c179c8f2f42f271b" translate="yes" xml:space="preserve">
          <source>The name of the process. If &lt;var&gt;name&lt;/var&gt; is not given, &lt;var&gt;port&lt;/var&gt; will serve as the process name as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33d6a32c269c144c63e53d0f2cba19c64ba4f020" translate="yes" xml:space="preserve">
          <source>The name of the terminal that the subprocess is using, or &lt;code&gt;nil&lt;/code&gt; if it is using pipes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb41db266496240f445c6fb5baacf0f57a720b53" translate="yes" xml:space="preserve">
          <source>The name of the variable in the C sources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4f65da0bf349454db5eb2650407f2361527b7b0" translate="yes" xml:space="preserve">
          <source>The name of the variable to be used by Lisp programs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3670965055037b4c4d3b2f88fc9e6bd05ff338ee" translate="yes" xml:space="preserve">
          <source>The name of this format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b92537c9d27af39ba1f11b476a35f30e67426f9" translate="yes" xml:space="preserve">
          <source>The name to use in the icon for this frame, when and if the icon appears. If this is &lt;code&gt;nil&lt;/code&gt;, the frame&amp;rsquo;s title is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="773601ddb143e48334daba0a066ba237e287a6d6" translate="yes" xml:space="preserve">
          <source>The name used to open the font, a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fcccebb07f7dee6937b0795494fd79034dd2f04" translate="yes" xml:space="preserve">
          <source>The named &lt;var&gt;method&lt;/var&gt; was defined by using &lt;code&gt;cl-defmethod&lt;/code&gt;, with &lt;var&gt;specializers&lt;/var&gt; as its specializers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe3c2e352de1a3150f44a8697619e4fda0c3a43a" translate="yes" xml:space="preserve">
          <source>The names &lt;small&gt;CAR&lt;/small&gt; and &lt;small&gt;CDR&lt;/small&gt; derive from the history of Lisp. The original Lisp implementation ran on an IBM 704 computer which divided words into two parts, the address and the decrement; &lt;small&gt;CAR&lt;/small&gt; was an instruction to extract the contents of the address part of a register, and &lt;small&gt;CDR&lt;/small&gt; an instruction to extract the contents of the decrement. By contrast, cons cells are named for the function &lt;code&gt;cons&lt;/code&gt; that creates them, which in turn was named for its purpose, the construction of cells.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba31422c908b55bb35be7435bbd860d86c29702f" translate="yes" xml:space="preserve">
          <source>The native position of a frame is the reference position for functions that set or return the current position of the mouse (see &lt;a href=&quot;mouse-position#Mouse-Position&quot;&gt;Mouse Position&lt;/a&gt;) and for functions dealing with the position of windows like &lt;code&gt;window-edges&lt;/code&gt;, &lt;code&gt;window-at&lt;/code&gt; or &lt;code&gt;coordinates-in-window-p&lt;/code&gt; (see &lt;a href=&quot;coordinates-and-windows#Coordinates-and-Windows&quot;&gt;Coordinates and Windows&lt;/a&gt;). It also specifies the (0, 0) origin for locating and positioning child frames within this frame (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79b45725606655f4197b9ae82b2b82dab59aede2" translate="yes" xml:space="preserve">
          <source>The native size of a frame is the size Emacs passes to the window-system or window manager when creating or resizing the frame from within Emacs. It is also the size Emacs receives from the window-system or window manager whenever these resize the frame&amp;rsquo;s window-system window, for example, after maximizing the frame by clicking on the corresponding button in the title bar or when dragging its external border with the mouse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14825e98a6bb7730ba468267f3c379f4d50eadd3" translate="yes" xml:space="preserve">
          <source>The network mask.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fc5eefdbee523b516c3a56d241e65616fe5cea8" translate="yes" xml:space="preserve">
          <source>The new command &lt;var&gt;variant&lt;/var&gt; is defined to call the function &lt;var&gt;parent&lt;/var&gt;, then override certain aspects of that parent mode:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ce6d115e553357dfd304409824efeb325dc1b14" translate="yes" xml:space="preserve">
          <source>The new definition of &lt;code&gt;for&lt;/code&gt; has a new problem: it introduces a local variable named &lt;code&gt;max&lt;/code&gt; which the user does not expect. This causes trouble in examples such as the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a336356f22c547d590556ea521f2dad738c8349" translate="yes" xml:space="preserve">
          <source>The new fontset has two names, one long and one short. The long name is &lt;var&gt;fontpattern&lt;/var&gt; in its entirety. The short name is &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3a411aa70ab9bb343c22475f4a8a3db7a1aaaa6" translate="yes" xml:space="preserve">
          <source>The new marker&amp;rsquo;s insertion type is specified by the argument &lt;var&gt;insertion-type&lt;/var&gt;. See &lt;a href=&quot;marker-insertion-types#Marker-Insertion-Types&quot;&gt;Marker Insertion Types&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e53ad877e538af9a720bbb66ac6ff5d4008840d4" translate="yes" xml:space="preserve">
          <source>The new mode has its own abbrev table, kept in the variable &lt;code&gt;&lt;var&gt;variant&lt;/var&gt;-abbrev-table&lt;/code&gt;, unless you override this using the &lt;code&gt;:abbrev-table&lt;/code&gt; keyword (see below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b817ae5e0fd787bbcf07fe3487597358970c4e96" translate="yes" xml:space="preserve">
          <source>The new mode has its own mode hook, &lt;code&gt;&lt;var&gt;variant&lt;/var&gt;-hook&lt;/code&gt;. It runs this hook, after running the hooks of its ancestor modes, with &lt;code&gt;run-mode-hooks&lt;/code&gt;, as the last thing it does, apart from running any &lt;code&gt;:after-hook&lt;/code&gt; form it may have. See &lt;a href=&quot;mode-hooks#Mode-Hooks&quot;&gt;Mode Hooks&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00570ab789edcc32fb33047192ad9e67acc9f749" translate="yes" xml:space="preserve">
          <source>The new mode has its own sparse keymap, named &lt;code&gt;&lt;var&gt;variant&lt;/var&gt;-map&lt;/code&gt;. &lt;code&gt;define-derived-mode&lt;/code&gt; makes the parent mode&amp;rsquo;s keymap the parent of the new map, unless &lt;code&gt;&lt;var&gt;variant&lt;/var&gt;-map&lt;/code&gt; is already set and already has a parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="945a91028fd0f8fc9a5b05174767e7c35cb3f960" translate="yes" xml:space="preserve">
          <source>The new mode has its own syntax table, kept in the variable &lt;code&gt;&lt;var&gt;variant&lt;/var&gt;-syntax-table&lt;/code&gt;, unless you override this using the &lt;code&gt;:syntax-table&lt;/code&gt; keyword (see below). &lt;code&gt;define-derived-mode&lt;/code&gt; makes the parent mode&amp;rsquo;s syntax-table the parent of &lt;code&gt;&lt;var&gt;variant&lt;/var&gt;-syntax-table&lt;/code&gt;, unless the latter is already set and already has a parent different from the standard syntax table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2597cc1d2ff3aeb01d30bac9fc3cde7623c9599" translate="yes" xml:space="preserve">
          <source>The new thread is created with no local variable bindings in effect. The new thread&amp;rsquo;s current buffer is inherited from the current thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8df0e83e8de1eb380770375b9be1ffb711a27047" translate="yes" xml:space="preserve">
          <source>The newest element in the ring always has index 0. Higher indices correspond to older elements. Indices are computed modulo the ring length. Index -1 corresponds to the oldest element, -2 to the next-oldest, and so forth.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e1c114485b4df403bf7d12c30cb8c0fba64430c" translate="yes" xml:space="preserve">
          <source>The newline character (character code 10) has a special effect: it ends the preceding line and starts a new line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e9517c16f2af179f8f22773bf78a93935c17bc6" translate="yes" xml:space="preserve">
          <source>The newline character is not special in the read syntax for strings; if you write a new line between the double-quotes, it becomes a character in the string. But an escaped newline&amp;mdash;one that is preceded by &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4efa69ac3b7f005e072f33b3c4d9d2015117589e" translate="yes" xml:space="preserve">
          <source>The next &lt;code&gt;pred&lt;/code&gt; (lines 4-5) evaluates &lt;code&gt;(string-match&amp;nbsp;RX&amp;nbsp;&lt;var&gt;expval&lt;/var&gt;)&lt;/code&gt; and matches if the result is non-&lt;code&gt;nil&lt;/code&gt;, which means that &lt;var&gt;expval&lt;/var&gt; has the desired form: &lt;code&gt;key:NUMBER&lt;/code&gt;. Again, failing this, &lt;code&gt;pred&lt;/code&gt; fails and &lt;code&gt;and&lt;/code&gt;, too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7694837921d35a54e56c860831d6080ffe61e74" translate="yes" xml:space="preserve">
          <source>The next and previous sibling of this window as Lisp objects. &lt;code&gt;next&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt; if the window is the right-most or bottom-most in its group; &lt;code&gt;prev&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt; if it is the left-most or top-most in its group. Whether the sibling is left/right or up/down is determined by the &lt;code&gt;horizontal&lt;/code&gt; field of the sibling&amp;rsquo;s parent: if it&amp;rsquo;s non-zero, the siblings are arranged horizontally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20020241f8b21f6f1b62e467e43654e312585449" translate="yes" xml:space="preserve">
          <source>The next four arguments to &lt;code&gt;sort-subr&lt;/code&gt; are functions that are called to move point across a sort record. They are called many times from within &lt;code&gt;sort-subr&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e6df56c6cfd59f81e1889be41424dbd8e05af1c" translate="yes" xml:space="preserve">
          <source>The next four functions all return markers with insertion type &lt;code&gt;nil&lt;/code&gt;. See &lt;a href=&quot;marker-insertion-types#Marker-Insertion-Types&quot;&gt;Marker Insertion Types&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6e450313c4033e8457df931e4950913eecef97c" translate="yes" xml:space="preserve">
          <source>The next redisplay after resumption will redraw the entire screen, unless the variable &lt;code&gt;no-redraw-on-reenter&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;. See &lt;a href=&quot;refresh-screen#Refresh-Screen&quot;&gt;Refresh Screen&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c62480706c4435432f9cbd719f04c8c0e8d4d4b" translate="yes" xml:space="preserve">
          <source>The next step is to determine precisely what is wrong. There is no way to be sure of this except by studying the program, but often the existing indentation is a clue to where the parentheses should have been. The easiest way to use this clue is to reindent with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e881ec82dc043025b05e415a53a5307e0b9d1a7c" translate="yes" xml:space="preserve">
          <source>The next subsection describes how to define your own fringe bitmaps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28f5894deb6be2c66452b9dec8f473fdb6fefb38" translate="yes" xml:space="preserve">
          <source>The next two commands are similar to &lt;code&gt;switch-to-buffer&lt;/code&gt;, except for the described features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cc9290c0d0d2e4b42ba908efb154f702ea15fc9" translate="yes" xml:space="preserve">
          <source>The next two functions either return the argument &lt;var&gt;string&lt;/var&gt;, or a newly created string with no text properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1bc1e54049d4149bb73763e09a0583d8724361a" translate="yes" xml:space="preserve">
          <source>The next two functions signal an error if the mark does not point anywhere. If Transient Mark mode is enabled and &lt;code&gt;mark-even-if-inactive&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;, they also signal an error if the mark is inactive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="377df722feabe51756819277064a7bd38601469b" translate="yes" xml:space="preserve">
          <source>The non-printable &lt;em&gt;&lt;acronym&gt;ASCII&lt;/acronym&gt; control characters&lt;/em&gt;&amp;mdash;character codes 0 through 31, as well as the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce617211fc2ab0bb06bc37aae9e870737adcb1d5" translate="yes" xml:space="preserve">
          <source>The nonce is currently unused and only some MACs support it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72d8a158209595f8bea693b50b579072c4c32b6d" translate="yes" xml:space="preserve">
          <source>The normal use of this function is to get the window system&amp;rsquo;s clipboard as the most recent kill, even if the selection belongs to another application. See &lt;a href=&quot;window-system-selections#Window-System-Selections&quot;&gt;Window System Selections&lt;/a&gt;. However, if the clipboard contents come from the current Emacs session, this function should return &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e4d1f4d52266035590d8daa8fadfd0297361c08" translate="yes" xml:space="preserve">
          <source>The normal use of this function is to put newly killed text in the window system&amp;rsquo;s clipboard. See &lt;a href=&quot;window-system-selections#Window-System-Selections&quot;&gt;Window System Selections&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe1cb8bbe65ec53be9067206dd1dfa6d2cad2dca" translate="yes" xml:space="preserve">
          <source>The normal value of this variable includes &lt;code&gt;user-error&lt;/code&gt;, as well as several errors that happen often during editing but rarely result from bugs in Lisp programs. However, &amp;ldquo;rarely&amp;rdquo; is not &amp;ldquo;never&amp;rdquo;; if your program fails with an error that matches this list, you may try changing this list to debug the error. The easiest way is usually to set &lt;code&gt;debug-ignored-errors&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="615cf55184d1614679df8cf6d2cbadac0179b9d2" translate="yes" xml:space="preserve">
          <source>The normal way to use this feature is that the &lt;code&gt;buffer-access-fontify-functions&lt;/code&gt; functions add this property, as well as others, to the characters they operate on. That way, they avoid being called over and over for the same text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bf403f55157eac254eec47b71824c0e07ba8c39" translate="yes" xml:space="preserve">
          <source>The normal way to use this function is after reading text from a file without decoding, if you decide you would rather have decoded it. Instead of deleting the text and reading it again, this time with decoding, you can call this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14a4051b3db7273c333fed729bd4705f42b76cf0" translate="yes" xml:space="preserve">
          <source>The notification &lt;var&gt;id&lt;/var&gt; that this notification replaces. &lt;var&gt;id&lt;/var&gt; must be the result of a previous &lt;code&gt;notifications-notify&lt;/code&gt; call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="235facb694a3673208a66d292afda77da06ef3e0" translate="yes" xml:space="preserve">
          <source>The notification body text. Depending on the implementation of the notification server, the text could contain HTML markups, like &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6d14187af51bbbd99a616baf65fac010ae3eeaf" translate="yes" xml:space="preserve">
          <source>The notification title.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e447b4e8d9dde9805fe495b79d88178d76f80ab4" translate="yes" xml:space="preserve">
          <source>The number and significance of the objects in &lt;var&gt;data&lt;/var&gt; depends on &lt;var&gt;error-symbol&lt;/var&gt;. For example, with a &lt;code&gt;wrong-type-argument&lt;/code&gt; error, there should be two objects in the list: a predicate that describes the type that was expected, and the object that failed to fit that type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77b891078bd95b24372c2265e2e2cd84fcd84a78" translate="yes" xml:space="preserve">
          <source>The number of &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69d9f447f26ab68125cf7f7418e7b287e062c516" translate="yes" xml:space="preserve">
          <source>The number of bits per byte, which can be 7 or 8. If &lt;var&gt;bytesize&lt;/var&gt; is not given or &lt;code&gt;nil&lt;/code&gt;, it defaults to 8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e69db1d2aafc1ecd874d0fd32605ef1930ae4340" translate="yes" xml:space="preserve">
          <source>The number of bool vector entries stored for each row; the smallest multiple of 8 greater than or equal to &lt;var&gt;width&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c696104f1d296d98cbf922f187ea8cac7fb9e83" translate="yes" xml:space="preserve">
          <source>The number of buffer objects in use. This includes killed buffers invisible to users, i.e., all buffers in &lt;code&gt;all_buffers&lt;/code&gt; list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="252d4f28db846bbf940d1217fadcdf56740580e5" translate="yes" xml:space="preserve">
          <source>The number of characters at the start and end of the text that are known to be unchanged since the last complete redisplay.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89a302eaa04563e94b2b926ac658405d57a2374e" translate="yes" xml:space="preserve">
          <source>The number of cons cells for which space has been obtained from the operating system, but that are not currently being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="928cf9ce73beb664ce217349a8d5e6418448c470" translate="yes" xml:space="preserve">
          <source>The number of cons cells in use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24f7af3992f54804406740120a68503980b1aaf3" translate="yes" xml:space="preserve">
          <source>The number of currently active &lt;code&gt;unwind-protect&lt;/code&gt; forms counts, together with the number of local variable bindings, against the limit &lt;code&gt;max-specpdl-size&lt;/code&gt; (see &lt;a href=&quot;local-variables#Definition-of-max_002dspecpdl_002dsize&quot;&gt;Local Variables&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c35725bb13e2859f8f990b1b6c1b4705566676f" translate="yes" xml:space="preserve">
          <source>The number of currently active calls to &lt;code&gt;eval&lt;/code&gt; is limited to &lt;code&gt;max-lisp-eval-depth&lt;/code&gt; (see below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26632f6fb1891fe7db7e3348f1653f11addc21e8" translate="yes" xml:space="preserve">
          <source>The number of floats for which space has been obtained from the operating system, but that are not currently being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f76646dd4182a8fa6a14d755790c6c7d2864f09c" translate="yes" xml:space="preserve">
          <source>The number of floats in use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d151b45b0c5d7e9e3c605630f35524687f27612" translate="yes" xml:space="preserve">
          <source>The number of free slots in all vector blocks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a5cbacf926b1512cd0ba23780e03b3e4a98118a" translate="yes" xml:space="preserve">
          <source>The number of intervals for which space has been obtained from the operating system, but that are not currently being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="602801cbd4078754bb74d81473f6f900a3e284ba" translate="yes" xml:space="preserve">
          <source>The number of intervals in use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92de848307ab335b54cbbb276e13709bea52b86a" translate="yes" xml:space="preserve">
          <source>The number of lines to allocate at the top of the frame for a menu bar (see &lt;a href=&quot;menu-bar#Menu-Bar&quot;&gt;Menu Bar&lt;/a&gt;). The default is one if Menu Bar mode is enabled and zero otherwise. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Menu-Bars.html#Menu-Bars&quot;&gt;Menu Bars&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f80d400cbef17969aa3cb57eca5045cef8587bc0" translate="yes" xml:space="preserve">
          <source>The number of lines to allocate at the top of the frame for a menu bar (see &lt;a href=&quot;menu-bar#Menu-Bar&quot;&gt;Menu Bar&lt;/a&gt;). The default is one if Menu Bar mode is enabled and zero otherwise. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Menu-Bars.html#Menu-Bars&quot;&gt;Menu Bars&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5827e772cc5045e135130ea07603e84be0177d9b" translate="yes" xml:space="preserve">
          <source>The number of lines to use for the tool bar (see &lt;a href=&quot;tool-bar#Tool-Bar&quot;&gt;Tool Bar&lt;/a&gt;). The default is one if Tool Bar mode is enabled and zero otherwise. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Tool-Bars.html#Tool-Bars&quot;&gt;Tool Bars&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beada725979447960084176a0763b526687ee795" translate="yes" xml:space="preserve">
          <source>The number of lines to use for the tool bar (see &lt;a href=&quot;tool-bar#Tool-Bar&quot;&gt;Tool Bar&lt;/a&gt;). The default is one if Tool Bar mode is enabled and zero otherwise. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Tool-Bars.html#Tool-Bars&quot;&gt;Tool Bars&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f4d7c21579924cbdecd9574578a0259e96375a" translate="yes" xml:space="preserve">
          <source>The number of major page faults caused by the process since its beginning. (Major page faults require a disk to be read, and are thus more expensive than minor page faults.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="190fa917612a525a4d94c58578c9ab17ff36e051" translate="yes" xml:space="preserve">
          <source>The number of minor page faults caused by the process since its beginning. (Minor page faults are those that don&amp;rsquo;t involve reading from disk.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d5ec76f037793ae468581429ef386612dd124f8" translate="yes" xml:space="preserve">
          <source>The number of minutes past the hour, as an integer between 0 and 59.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad0f8ee15c9aa29fe5fb9cbe7ca13d4d44b5ef6a" translate="yes" xml:space="preserve">
          <source>The number of names the file has (&lt;code&gt;file-attribute-link-number&lt;/code&gt;). Alternate names, also known as hard links, can be created by using the &lt;code&gt;add-name-to-file&lt;/code&gt; function (see &lt;a href=&quot;changing-files#Changing-Files&quot;&gt;Changing Files&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="325baa1e7adcb16dc50f6245d77c21d0debe4ede" translate="yes" xml:space="preserve">
          <source>The number of pixels from the top of the scroll bar to the click position. On some toolkits, including GTK+, Emacs cannot extract this data, so the value is always &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81f70c31bc5858d0b9ea55feb80b52d7b0622a5a" translate="yes" xml:space="preserve">
          <source>The number of seconds past the minute, with form described below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16f645a9b7573d7e0be85843502b2537b32b9812" translate="yes" xml:space="preserve">
          <source>The number of slots in all used vectors. Slot counts might include some or all overhead from vector headers, depending on the platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4c7e2965ba0ba590e73e99ea618e58e9f048f9a" translate="yes" xml:space="preserve">
          <source>The number of stopbits used to terminate a transmission of each byte. &lt;var&gt;stopbits&lt;/var&gt; can be 1 or 2. If &lt;var&gt;stopbits&lt;/var&gt; is not given or &lt;code&gt;nil&lt;/code&gt;, it defaults to 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="584465d6a9c8121efa55f5d37a6a82a27d12aa63" translate="yes" xml:space="preserve">
          <source>The number of string headers for which space has been obtained from the operating system, but that are not currently being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11eee3b04765f2e7c114ec5eb04da8bccc9c8d67" translate="yes" xml:space="preserve">
          <source>The number of string headers in use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2adc6fb63d1bc6a3331dbbc9b05d0c9bd724c7c7" translate="yes" xml:space="preserve">
          <source>The number of symbols for which space has been obtained from the operating system, but that are not currently being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="710444e67e6d2313474db8860db1bd9ce9d6ab60" translate="yes" xml:space="preserve">
          <source>The number of symbols in use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88b7053411bf3b3b073ba4f231a1da2711e2f38c" translate="yes" xml:space="preserve">
          <source>The number of threads in the process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d720d63753916813fff9649510319aa14c02852" translate="yes" xml:space="preserve">
          <source>The number of vector headers allocated from the vector blocks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59b6b2c7dabce2307e6e799dfef671c14314174a" translate="yes" xml:space="preserve">
          <source>The numeric prefix argument. (Note that this &amp;lsquo;</source>
          <target state="translated">El argumento del prefijo num&amp;eacute;rico. (Tenga en cuenta que este '</target>
        </trans-unit>
        <trans-unit id="839e8e25e1178c7a8e748322d0c3fe4ba4cb103f" translate="yes" xml:space="preserve">
          <source>The numeric prefix argument; but if there is no prefix argument, read a number as with</source>
          <target state="translated">El argumento del prefijo num√©rico;pero si no hay un argumento de prefijo,se lee un n√∫mero como con</target>
        </trans-unit>
        <trans-unit id="439b92119e69deb37b60614763a2c3dea4cdbbe6" translate="yes" xml:space="preserve">
          <source>The numerical priority of the process.</source>
          <target state="translated">La prioridad num√©rica del proceso.</target>
        </trans-unit>
        <trans-unit id="7fe81b17fc17a93e95e511a73b78731b8a8de04d" translate="yes" xml:space="preserve">
          <source>The numerical process group ID of the foreground process group that uses the process&amp;rsquo;s terminal.</source>
          <target state="translated">El ID num&amp;eacute;rico del grupo de procesos del grupo de procesos en primer plano que utiliza la terminal del proceso.</target>
        </trans-unit>
        <trans-unit id="6fa1cb69c8ffa6967bb6548d178d71e54c8286e1" translate="yes" xml:space="preserve">
          <source>The object &lt;code&gt;nil&lt;/code&gt;, in addition to its other meanings, may be used as a stream. It stands for the value of the variable &lt;code&gt;standard-input&lt;/code&gt; or &lt;code&gt;standard-output&lt;/code&gt;. Also, the object &lt;code&gt;t&lt;/code&gt; as a stream specifies input using the minibuffer (see &lt;a href=&quot;minibuffers#Minibuffers&quot;&gt;Minibuffers&lt;/a&gt;) or output in the echo area (see &lt;a href=&quot;the-echo-area#The-Echo-Area&quot;&gt;The Echo Area&lt;/a&gt;).</source>
          <target state="translated">El objeto &lt;code&gt;nil&lt;/code&gt; , adem&amp;aacute;s de sus otros significados, puede usarse como flujo. Representa el valor de la variable &lt;code&gt;standard-input&lt;/code&gt; &lt;code&gt;standard-output&lt;/code&gt; o salida-est&amp;aacute;ndar . Adem&amp;aacute;s, el objeto &lt;code&gt;t&lt;/code&gt; como flujo especifica la entrada usando el minib&amp;uacute;fer (ver &lt;a href=&quot;minibuffers#Minibuffers&quot;&gt;Minib&amp;uacute;feres&lt;/a&gt; ) o la salida en el &amp;aacute;rea de eco (ver &lt;a href=&quot;the-echo-area#The-Echo-Area&quot;&gt;El &amp;aacute;rea de eco&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="39f7982b68fb4ab2fb51b7f5f14923219a3d96cd" translate="yes" xml:space="preserve">
          <source>The object &lt;var&gt;name&lt;/var&gt; is a character (an integer) identifying the register.</source>
          <target state="translated">El &lt;var&gt;name&lt;/var&gt; objeto es un car&amp;aacute;cter (un n&amp;uacute;mero entero) que identifica el registro.</target>
        </trans-unit>
        <trans-unit id="6833fa0e8edf6ce4aefb60918006191561783d76" translate="yes" xml:space="preserve">
          <source>The objects returned by &lt;code&gt;current-window-configuration&lt;/code&gt; die together with the Emacs process. In order to store a window configuration on disk and read it back in another Emacs session, you can use the functions described next. These functions are also useful to clone the state of a frame into an arbitrary live window (&lt;code&gt;set-window-configuration&lt;/code&gt; effectively clones the windows of a frame into the root window of that very frame only).</source>
          <target state="translated">Los objetos devueltos por &lt;code&gt;current-window-configuration&lt;/code&gt; mueren junto con el proceso de Emacs. Para almacenar una configuraci&amp;oacute;n de ventana en el disco y volver a leerla en otra sesi&amp;oacute;n de Emacs, puede usar las funciones que se describen a continuaci&amp;oacute;n. Estas funciones tambi&amp;eacute;n son &amp;uacute;tiles para clonar el estado de un marco en una ventana en vivo arbitraria ( &lt;code&gt;set-window-configuration&lt;/code&gt; efectivamente clona las ventanas de un marco en la ventana ra&amp;iacute;z de ese mismo marco solamente).</target>
        </trans-unit>
        <trans-unit id="72b9bbaab48ff0495bbabbd0f0bb821e6641bf93" translate="yes" xml:space="preserve">
          <source>The offset in pixels from the</source>
          <target state="translated">El desplazamiento en p√≠xeles de la</target>
        </trans-unit>
        <trans-unit id="ad4a9f69cf841ef935ee2cfa1f4bc790f26c9421" translate="yes" xml:space="preserve">
          <source>The operating system groups files into directories. To specify a file, you must specify the directory and the file&amp;rsquo;s name within that directory. Therefore, Emacs considers a file name as having two main parts: the &lt;em&gt;directory name&lt;/em&gt; part, and the &lt;em&gt;nondirectory&lt;/em&gt; part (or &lt;em&gt;file name within the directory&lt;/em&gt;). Either part may be empty. Concatenating these two parts reproduces the original file name.</source>
          <target state="translated">El sistema operativo agrupa los archivos en directorios. Para especificar un archivo, debe especificar el directorio y el nombre del archivo dentro de ese directorio. Por lo tanto, Emacs considera un nombre de archivo que tiene dos partes principales: el &lt;em&gt;nombre del directorio&lt;/em&gt; parte, y la &lt;em&gt;nondirectory&lt;/em&gt; parte (o &lt;em&gt;nombre de archivo dentro del directorio&lt;/em&gt; ). Cualquiera de las partes puede estar vac&amp;iacute;a. La concatenaci&amp;oacute;n de estas dos partes reproduce el nombre del archivo original.</target>
        </trans-unit>
        <trans-unit id="97b655f463790a01acf5417028d665f4f17aa3ca" translate="yes" xml:space="preserve">
          <source>The operation for which certain handlers are presently inhibited.</source>
          <target state="translated">La operaci√≥n para la cual ciertos manipuladores est√°n actualmente inhibidos.</target>
        </trans-unit>
        <trans-unit id="a54beb7452d09412de65a317f1da762f7220f206" translate="yes" xml:space="preserve">
          <source>The operation of inserting text in a buffer also calls the functions listed in the &lt;code&gt;insert-in-front-hooks&lt;/code&gt; property of the following character and in the &lt;code&gt;insert-behind-hooks&lt;/code&gt; property of the preceding character. These functions receive two arguments, the beginning and end of the inserted text. The functions are called &lt;em&gt;after&lt;/em&gt; the actual insertion takes place.</source>
          <target state="translated">La operaci&amp;oacute;n de insertar texto en un b&amp;uacute;fer tambi&amp;eacute;n llama a las funciones enumeradas en la propiedad &lt;code&gt;insert-in-front-hooks&lt;/code&gt; del siguiente car&amp;aacute;cter y en la propiedad &lt;code&gt;insert-behind-hooks&lt;/code&gt; del car&amp;aacute;cter anterior. Estas funciones reciben dos argumentos, el principio y el final del texto insertado. Las funciones se llaman &lt;em&gt;despu&amp;eacute;s de que&lt;/em&gt; tiene lugar la inserci&amp;oacute;n real.</target>
        </trans-unit>
        <trans-unit id="0102d351953df3a2b1f375d80803fca9ebb0a776" translate="yes" xml:space="preserve">
          <source>The option &lt;code&gt;resize-mini-windows&lt;/code&gt; does not affect the behavior of minibuffer-only frames (see &lt;a href=&quot;frame-layout#Frame-Layout&quot;&gt;Frame Layout&lt;/a&gt;). The following option allows to automatically resize such frames as well.</source>
          <target state="translated">La opci&amp;oacute;n &lt;code&gt;resize-mini-windows&lt;/code&gt; no afecta el comportamiento de los marcos de solo minib&amp;uacute;fer (ver &lt;a href=&quot;frame-layout#Frame-Layout&quot;&gt;Disposici&amp;oacute;n de marcos&lt;/a&gt; ). La siguiente opci&amp;oacute;n tambi&amp;eacute;n permite cambiar autom&amp;aacute;ticamente el tama&amp;ntilde;o de dichos marcos.</target>
        </trans-unit>
        <trans-unit id="ab3586d91a06c5d8405e148f25236777a77f39af" translate="yes" xml:space="preserve">
          <source>The option &lt;code&gt;switch-to-prev-buffer-skip&lt;/code&gt; and the &lt;code&gt;buffer-predicate&lt;/code&gt; (see &lt;a href=&quot;buffer-parameters#Buffer-Parameters&quot;&gt;Buffer Parameters&lt;/a&gt;) of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s frame affect this command as they do for &lt;code&gt;switch-to-prev-buffer&lt;/code&gt;.</source>
          <target state="translated">La opci&amp;oacute;n &lt;code&gt;switch-to-prev-buffer-skip&lt;/code&gt; y el &lt;code&gt;buffer-predicate&lt;/code&gt; (ver &lt;a href=&quot;buffer-parameters#Buffer-Parameters&quot;&gt;Par&amp;aacute;metros de b&amp;uacute;fer&lt;/a&gt; ) del marco de la &lt;var&gt;window&lt;/var&gt; afectan este comando como lo hacen para &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c4c6688ae5450a1940363973e63c9245b847575d" translate="yes" xml:space="preserve">
          <source>The option &lt;code&gt;switch-to-prev-buffer-skip&lt;/code&gt; described below can be used to inhibit switching to certain buffers, for example, to those already shown in another window. Also, if &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s frame has a &lt;code&gt;buffer-predicate&lt;/code&gt; parameter (see &lt;a href=&quot;buffer-parameters#Buffer-Parameters&quot;&gt;Buffer Parameters&lt;/a&gt;), that predicate may inhibit switching to certain buffers.</source>
          <target state="translated">La opci&amp;oacute;n &lt;code&gt;switch-to-prev-buffer-skip&lt;/code&gt; que se describe a continuaci&amp;oacute;n se puede utilizar para inhibir el cambio a ciertos b&amp;uacute;feres, por ejemplo, a los que ya se muestran en otra ventana. Adem&amp;aacute;s, si el marco de la &lt;var&gt;window&lt;/var&gt; tiene un par&amp;aacute;metro de &lt;code&gt;buffer-predicate&lt;/code&gt; (consulte &lt;a href=&quot;buffer-parameters#Buffer-Parameters&quot;&gt;Par&amp;aacute;metros de b&amp;uacute;fer&lt;/a&gt; ), ese predicado puede inhibir el cambio a ciertos b&amp;uacute;feres.</target>
        </trans-unit>
        <trans-unit id="835de90b506ab91ee5ca88e6c356759c82274cd9" translate="yes" xml:space="preserve">
          <source>The optional &lt;var&gt;form&lt;/var&gt; argument specifies the timestamp form to be returned. If &lt;var&gt;form&lt;/var&gt; is the symbol &lt;code&gt;integer&lt;/code&gt;, this function returns an integer count of seconds. If &lt;var&gt;form&lt;/var&gt; is a positive integer, it specifies a clock frequency and this function returns an integer-pair timestamp &lt;code&gt;(&lt;var&gt;ticks&lt;/var&gt;
. &lt;var&gt;form&lt;/var&gt;)&lt;/code&gt;.&lt;a href=&quot;#FOOT25&quot; name=&quot;DOCF25&quot;&gt;&lt;sup&gt;25&lt;/sup&gt;&lt;/a&gt; If &lt;var&gt;form&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, this function treats it as a positive integer suitable for representing the timestamp; for example, it is treated as 1000000000 if &lt;var&gt;time&lt;/var&gt; is nil and the platform timestamp has nanosecond resolution. If &lt;var&gt;form&lt;/var&gt; is &lt;code&gt;list&lt;/code&gt;, this function returns an integer list &lt;code&gt;(&lt;var&gt;high&lt;/var&gt; &lt;var&gt;low&lt;/var&gt; &lt;var&gt;micro&lt;/var&gt; &lt;var&gt;pico&lt;/var&gt;)&lt;/code&gt;. Although an omitted or &lt;code&gt;nil&lt;/code&gt;&lt;var&gt;form&lt;/var&gt; currently acts like &lt;code&gt;list&lt;/code&gt;, this is planned to change in a future Emacs version, so callers requiring list timestamps should pass &lt;code&gt;list&lt;/code&gt; explicitly.</source>
          <target state="translated">El argumento de &lt;var&gt;form&lt;/var&gt; ulario opcional especifica el formulario de marca de tiempo que se devolver&amp;aacute;. Si &lt;var&gt;form&lt;/var&gt; es el s&amp;iacute;mbolo &lt;code&gt;integer&lt;/code&gt; , esta funci&amp;oacute;n devuelve un n&amp;uacute;mero entero de segundos. Si &lt;var&gt;form&lt;/var&gt; es un entero positivo, especifica una frecuencia de reloj y esta funci&amp;oacute;n devuelve una marca de tiempo de par de enteros &lt;code&gt;(&lt;var&gt;ticks&lt;/var&gt; . &lt;var&gt;form&lt;/var&gt;)&lt;/code&gt; . &lt;a href=&quot;#FOOT25&quot; name=&quot;DOCF25&quot;&gt;&lt;sup&gt;25&lt;/sup&gt;&lt;/a&gt; Si &lt;var&gt;form&lt;/var&gt; es &lt;code&gt;t&lt;/code&gt; , esta funci&amp;oacute;n lo trata como un entero positivo adecuado para representar la marca de tiempo; por ejemplo, se trata como 1000000000 si el &lt;var&gt;time&lt;/var&gt; es nulo y la marca de tiempo de la plataforma tiene una resoluci&amp;oacute;n de nanosegundos. Si la &lt;var&gt;form&lt;/var&gt; a es &lt;code&gt;list&lt;/code&gt; a, esta funci&amp;oacute;n devuelve una lista de enteros &lt;code&gt;(&lt;var&gt;high&lt;/var&gt; &lt;var&gt;low&lt;/var&gt; &lt;var&gt;micro&lt;/var&gt; &lt;var&gt;pico&lt;/var&gt;)&lt;/code&gt; . Aunque un omitida o &lt;code&gt;nil&lt;/code&gt; &lt;var&gt;form&lt;/var&gt; a actualmente act&amp;uacute;a como &lt;code&gt;list&lt;/code&gt; a , esto se planea cambiar en futuras versiones de Emacs, por lo que requieren las personas que llaman marcas de tiempo de la lista deber&amp;iacute;an pasar a &lt;code&gt;list&lt;/code&gt; de forma expl&amp;iacute;cita.</target>
        </trans-unit>
        <trans-unit id="173acab42d67698663274d178deb55ac822fd58b" translate="yes" xml:space="preserve">
          <source>The optional &lt;var&gt;function&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, is a function to call with no arguments, to get the user&amp;rsquo;s attention.</source>
          <target state="translated">La &lt;var&gt;function&lt;/var&gt; opcional , si no es &lt;code&gt;nil&lt;/code&gt; , es una funci&amp;oacute;n para llamar sin argumentos, para llamar la atenci&amp;oacute;n del usuario.</target>
        </trans-unit>
        <trans-unit id="426453a518362f581ab8e263e39b1b78287360b0" translate="yes" xml:space="preserve">
          <source>The optional &lt;var&gt;pred&lt;/var&gt; argument provides a predicate that controls which buffers to ask about (or to save silently if &lt;var&gt;save-silently-p&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;). If &lt;var&gt;pred&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, that means to use the value of &lt;code&gt;save-some-buffers-default-predicate&lt;/code&gt; instead of &lt;var&gt;pred&lt;/var&gt;. If the result is &lt;code&gt;nil&lt;/code&gt;, it means ask only about file-visiting buffers. If it is &lt;code&gt;t&lt;/code&gt;, that means also offer to save certain other non-file buffers&amp;mdash;those that have a non-&lt;code&gt;nil&lt;/code&gt; buffer-local value of &lt;code&gt;buffer-offer-save&lt;/code&gt; (see &lt;a href=&quot;killing-buffers#Killing-Buffers&quot;&gt;Killing Buffers&lt;/a&gt;). A user who says &amp;lsquo;</source>
          <target state="translated">El argumento &lt;var&gt;pred&lt;/var&gt; opcional proporciona un predicado que controla qu&amp;eacute; b&amp;uacute;feres preguntar (o guardar silenciosamente si &lt;var&gt;save-silently-p&lt;/var&gt; es no- &lt;code&gt;nil&lt;/code&gt; ). Si &lt;var&gt;pred&lt;/var&gt; es &lt;code&gt;nil&lt;/code&gt; , eso significa usar el valor de &lt;code&gt;save-some-buffers-default-predicate&lt;/code&gt; en lugar de &lt;var&gt;pred&lt;/var&gt; . Si el resultado es &lt;code&gt;nil&lt;/code&gt; , significa preguntar solo acerca de los b&amp;uacute;feres de visita de archivos. Si es &lt;code&gt;t&lt;/code&gt; , eso significa tambi&amp;eacute;n ofrecer guardar algunos otros b&amp;uacute;feres que no son de archivo, aquellos que tienen un valor local de &lt;code&gt;buffer-offer-save&lt;/code&gt; de b&amp;uacute;fer-oferta-guardar que no es &lt;code&gt;nil&lt;/code&gt; (ver &lt;a href=&quot;killing-buffers#Killing-Buffers&quot;&gt;Eliminaci&amp;oacute;n de b&amp;uacute;feres&lt;/a&gt; ). Un usuario que dice '</target>
        </trans-unit>
        <trans-unit id="3b490b732241cae65bd40b66849ce93f50354a12" translate="yes" xml:space="preserve">
          <source>The optional &lt;var&gt;qualifier&lt;/var&gt; allows combining several applicable methods. If it is not present, the defined method is a &lt;em&gt;primary&lt;/em&gt; method, responsible for providing the primary implementation of the generic function for the specialized arguments. You can also define &lt;em&gt;auxiliary methods&lt;/em&gt;, by using one of the following values as &lt;var&gt;qualifier&lt;/var&gt;:</source>
          <target state="translated">El &lt;var&gt;qualifier&lt;/var&gt; opcional permite combinar varios m&amp;eacute;todos aplicables. Si no est&amp;aacute; presente, el m&amp;eacute;todo definido es un m&amp;eacute;todo &lt;em&gt;principal&lt;/em&gt; , responsable de proporcionar la implementaci&amp;oacute;n principal de la funci&amp;oacute;n gen&amp;eacute;rica para los argumentos especializados. Tambi&amp;eacute;n puede definir &lt;em&gt;m&amp;eacute;todos auxiliares&lt;/em&gt; utilizando uno de los siguientes valores como &lt;var&gt;qualifier&lt;/var&gt; :</target>
        </trans-unit>
        <trans-unit id="7e8b24c5a3bacf003c936b526cc2b8bc5211832b" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;accept-default-p&lt;/var&gt; determines whether a coding system selected without user interaction is acceptable. If it&amp;rsquo;s omitted or &lt;code&gt;nil&lt;/code&gt;, such a silent selection is always acceptable. If it is non-&lt;code&gt;nil&lt;/code&gt;, it should be a function; &lt;code&gt;select-safe-coding-system&lt;/code&gt; calls this function with one argument, the base coding system of the selected coding system. If the function returns &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;select-safe-coding-system&lt;/code&gt; rejects the silently selected coding system, and asks the user to select a coding system from a list of possible candidates.</source>
          <target state="translated">El argumento opcional &lt;var&gt;accept-default-p&lt;/var&gt; determina si un sistema de codificaci&amp;oacute;n seleccionado sin la interacci&amp;oacute;n del usuario es aceptable. Si se omite o es &lt;code&gt;nil&lt;/code&gt; , esa selecci&amp;oacute;n silenciosa siempre es aceptable. Si no es &lt;code&gt;nil&lt;/code&gt; , deber&amp;iacute;a ser una funci&amp;oacute;n; &lt;code&gt;select-safe-coding-system&lt;/code&gt; llama a esta funci&amp;oacute;n con un argumento, el sistema de codificaci&amp;oacute;n base del sistema de codificaci&amp;oacute;n seleccionado. Si la funci&amp;oacute;n devuelve &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;select-safe-coding-system&lt;/code&gt; rechaza el sistema de codificaci&amp;oacute;n seleccionado silenciosamente y le pide al usuario que seleccione un sistema de codificaci&amp;oacute;n de una lista de posibles candidatos.</target>
        </trans-unit>
        <trans-unit id="e961ebb3cc87375ff53fb5dbd5c797ff74355be5" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;access-type&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, should specify the kind of access that will trigger obsolescence warnings; it can be either &lt;code&gt;get&lt;/code&gt; or &lt;code&gt;set&lt;/code&gt;.</source>
          <target state="translated">El argumento opcional &lt;var&gt;access-type&lt;/var&gt; , si no es &lt;code&gt;nil&lt;/code&gt; , debe especificar el tipo de acceso que activar&amp;aacute; las advertencias de obsolescencia; puede ser &lt;code&gt;get&lt;/code&gt; o &lt;code&gt;set&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="18e8faa626ed3c723b0d4b24ea36af13079f989a" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;action&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, should normally be a display action (described above). &lt;code&gt;display-buffer&lt;/code&gt; builds a list of action functions and an action alist, by consolidating display actions from the following sources (in order of their precedence, from highest to lowest):</source>
          <target state="translated">La &lt;var&gt;action&lt;/var&gt; argumento opcional , si no es &lt;code&gt;nil&lt;/code&gt; , normalmente deber&amp;iacute;a ser una acci&amp;oacute;n de visualizaci&amp;oacute;n (descrita anteriormente). &lt;code&gt;display-buffer&lt;/code&gt; crea una lista de funciones de acci&amp;oacute;n y una lista de acciones, consolidando las acciones de visualizaci&amp;oacute;n de las siguientes fuentes (en orden de prioridad, de mayor a menor):</target>
        </trans-unit>
        <trans-unit id="86a332db454bd3dbba8b146d609ae20fa7e68ddc" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;add&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, specifies how to add &lt;var&gt;font-spec&lt;/var&gt; to the font specifications previously set. If it is &lt;code&gt;prepend&lt;/code&gt;, &lt;var&gt;font-spec&lt;/var&gt; is prepended. If it is &lt;code&gt;append&lt;/code&gt;, &lt;var&gt;font-spec&lt;/var&gt; is appended. By default, &lt;var&gt;font-spec&lt;/var&gt; overrides the previous settings.</source>
          <target state="translated">El argumento opcional &lt;var&gt;add&lt;/var&gt; , si no es &lt;code&gt;nil&lt;/code&gt; , especifica c&amp;oacute;mo agregar &lt;var&gt;font-spec&lt;/var&gt; a las especificaciones de fuente previamente establecidas. Si se trata de &lt;code&gt;prepend&lt;/code&gt; , &lt;var&gt;font-spec&lt;/var&gt; se antepone. Si se trata de &lt;code&gt;append&lt;/code&gt; , &lt;var&gt;font-spec&lt;/var&gt; se anexa. De forma predeterminada, &lt;var&gt;font-spec&lt;/var&gt; anula la configuraci&amp;oacute;n anterior.</target>
        </trans-unit>
        <trans-unit id="f8a3ae8e924fd8f4d27674f1685f4ee6a3fbe53e" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;all-frames&lt;/var&gt; has the same meaning as in &lt;code&gt;next-window&lt;/code&gt;, like a &lt;code&gt;nil&lt;/code&gt;&lt;var&gt;minibuf&lt;/var&gt; argument to &lt;code&gt;next-window&lt;/code&gt;.</source>
          <target state="translated">El argumento opcional &lt;var&gt;all-frames&lt;/var&gt; tiene el mismo significado que en &lt;code&gt;next-window&lt;/code&gt; , como un argumento &lt;var&gt;minibuf&lt;/var&gt; &lt;code&gt;nil&lt;/code&gt; para &lt;code&gt;next-window&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="202962f0de53dff02d10a00270753bbfa1f06e86" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;all-frames&lt;/var&gt; specifies which frames to consider:</source>
          <target state="translated">El argumento opcional &lt;var&gt;all-frames&lt;/var&gt; especifica qu&amp;eacute; fotogramas se deben considerar:</target>
        </trans-unit>
        <trans-unit id="bb40d66cb55d279a86899a88dfb077d4f8e79fbc" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;base-url&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, should be a string specifying the base URL for relative URLs occurring in links.</source>
          <target state="translated">El argumento opcional &lt;var&gt;base-url&lt;/var&gt; , si no es &lt;code&gt;nil&lt;/code&gt; , debe ser una cadena que especifique la URL base para las URL relativas que aparecen en los enlaces.</target>
        </trans-unit>
        <trans-unit id="6a1907330d9a397ccfad9b3e354542f50e48a6fb" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;bury-or-kill&lt;/var&gt; specifies how to deal with &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s buffer. The following values are handled:</source>
          <target state="translated">El argumento opcional &lt;var&gt;bury-or-kill&lt;/var&gt; especifica c&amp;oacute;mo manejar el b&amp;uacute;fer de la &lt;var&gt;window&lt;/var&gt; . Se manejan los siguientes valores:</target>
        </trans-unit>
        <trans-unit id="2049134810f7e761207b9b8b3bd49725d3167d1d" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;confirm&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, says to read the password twice and insist it must be the same both times. If it isn&amp;rsquo;t the same, the user has to type it over and over until the last two times match.</source>
          <target state="translated">El argumento opcional &lt;var&gt;confirm&lt;/var&gt; , si no es &lt;code&gt;nil&lt;/code&gt; , dice que se lea la contrase&amp;ntilde;a dos veces e insista en que debe ser la misma en ambas ocasiones. Si no es el mismo, el usuario debe escribirlo una y otra vez hasta que coincidan las dos &amp;uacute;ltimas veces.</target>
        </trans-unit>
        <trans-unit id="7bc5835047d79ebfcafd196072cb522b7ad940af" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;contextual&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, forces Font Lock mode to always refontify a syntactically relevant part of the buffer, and not just the modified lines. This argument can usually be omitted.</source>
          <target state="translated">El argumento opcional &lt;var&gt;contextual&lt;/var&gt; , si no es &lt;code&gt;nil&lt;/code&gt; , fuerza al modo Font Lock a que siempre refontifique una parte sint&amp;aacute;cticamente relevante del b&amp;uacute;fer, y no solo las l&amp;iacute;neas modificadas. Este argumento generalmente se puede omitir.</target>
        </trans-unit>
        <trans-unit id="580eb5a9bd0d61ea92cc5b8878cb5564112b1db4" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;count&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, specifies a maximum number of rectangles to return. This means that the return value is a list of triples specifying rectangles with the largest rectangle first. &lt;var&gt;count&lt;/var&gt; can be also a cons cell whose car specifies the number of rectangles to return and whose &lt;small&gt;CDR&lt;/small&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, states that all rectangles returned must be disjoint.</source>
          <target state="translated">El argumento opcional &lt;var&gt;count&lt;/var&gt; , si no es &lt;code&gt;nil&lt;/code&gt; , especifica un n&amp;uacute;mero m&amp;aacute;ximo de rect&amp;aacute;ngulos para devolver. Esto significa que el valor de retorno es una lista de triples que especifican rect&amp;aacute;ngulos con el rect&amp;aacute;ngulo m&amp;aacute;s grande primero. &lt;var&gt;count&lt;/var&gt; puede ser tambi&amp;eacute;n una celda de cons cuyo coche especifica el n&amp;uacute;mero de rect&amp;aacute;ngulos a devolver y cuyo &lt;small&gt;CDR&lt;/small&gt; , si no es &lt;code&gt;nil&lt;/code&gt; , establece que todos los rect&amp;aacute;ngulos devueltos deben ser disjuntos.</target>
        </trans-unit>
        <trans-unit id="3ebdbb0e5fb0f2b384549756b4989936faa9a770" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;cur-col&lt;/var&gt; specifies the current column when the function is called. This is the window-relative horizontal coordinate of point, measured in units of font width of the frame&amp;rsquo;s default face. Providing it speeds up the function, especially in very long lines, because the function doesn&amp;rsquo;t have to go back in the buffer in order to determine the current column. Note that &lt;var&gt;cur-col&lt;/var&gt; is also counted from the visual start of the line.</source>
          <target state="translated">El argumento opcional &lt;var&gt;cur-col&lt;/var&gt; especifica la columna actual cuando se llama a la funci&amp;oacute;n. Esta es la coordenada horizontal relativa a la ventana del punto, medida en unidades de ancho de fuente de la cara predeterminada del marco. Al proporcionarla, se acelera la funci&amp;oacute;n, especialmente en l&amp;iacute;neas muy largas, porque la funci&amp;oacute;n no tiene que volver al b&amp;uacute;fer para determinar la columna actual. Tenga en cuenta que &lt;var&gt;cur-col&lt;/var&gt; tambi&amp;eacute;n se cuenta desde el inicio visual de la l&amp;iacute;nea.</target>
        </trans-unit>
        <trans-unit id="b5a3875cde45d622d71332d1342451631df66196" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;default&lt;/var&gt; is used as in &lt;code&gt;read-from-minibuffer&lt;/code&gt;, except that, if non-&lt;code&gt;nil&lt;/code&gt;, it also specifies a default value to return if the user enters null input. As in &lt;code&gt;read-from-minibuffer&lt;/code&gt; it should be a string, a list of strings, or &lt;code&gt;nil&lt;/code&gt;, which is equivalent to an empty string. When &lt;var&gt;default&lt;/var&gt; is a string, that string is the default value. When it is a list of strings, the first string is the default value. (All these strings are available to the user in the &amp;ldquo;future minibuffer history&amp;rdquo;.)</source>
          <target state="translated">El argumento opcional &lt;var&gt;default&lt;/var&gt; se usa como en &lt;code&gt;read-from-minibuffer&lt;/code&gt; , excepto que, si no es &lt;code&gt;nil&lt;/code&gt; , tambi&amp;eacute;n especifica un valor predeterminado para devolver si el usuario ingresa una entrada nula. Como en &lt;code&gt;read-from-minibuffer&lt;/code&gt; , deber&amp;iacute;a ser una cadena, una lista de cadenas o &lt;code&gt;nil&lt;/code&gt; , lo que equivale a una cadena vac&amp;iacute;a. Cuando el &lt;var&gt;default&lt;/var&gt; es una cadena, esa cadena es el valor predeterminado. Cuando es una lista de cadenas, la primera cadena es el valor predeterminado. (Todas estas cadenas est&amp;aacute;n disponibles para el usuario en el &quot;futuro historial del minib&amp;uacute;fer&quot;).</target>
        </trans-unit>
        <trans-unit id="a8b8f42a687e321f80ab76cd3bccd5897a600a30" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;default&lt;/var&gt; specifies the default password to return if the user enters empty input. If &lt;var&gt;default&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, then &lt;code&gt;read-passwd&lt;/code&gt; returns the null string in that case.</source>
          <target state="translated">El argumento opcional &lt;var&gt;default&lt;/var&gt; especifica la contrase&amp;ntilde;a predeterminada que se devolver&amp;aacute; si el usuario ingresa una entrada vac&amp;iacute;a. Si el &lt;var&gt;default&lt;/var&gt; es &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;read-passwd&lt;/code&gt; devuelve la cadena nula en ese caso.</target>
        </trans-unit>
        <trans-unit id="0048e481ce17eb199983c7400eaac1a428a4cdd4" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;defaults&lt;/var&gt; controls the default value to return if the user enters null input, and should be one of: a string; &lt;code&gt;nil&lt;/code&gt;, which is equivalent to an empty string; a list of strings; or a symbol.</source>
          <target state="translated">Los &lt;var&gt;defaults&lt;/var&gt; argumento opcional controlan el valor predeterminado que se devolver&amp;aacute; si el usuario ingresa una entrada nula y debe ser uno de los siguientes: una cadena; &lt;code&gt;nil&lt;/code&gt; , que equivale a una cadena vac&amp;iacute;a; una lista de cadenas; o un s&amp;iacute;mbolo.</target>
        </trans-unit>
        <trans-unit id="228f1c49688198d5cc5f85c1fed83e79ddfe5a7f" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;display&lt;/var&gt; in these functions specifies which display to ask the question about. It can be a display name, a frame (which designates the display that frame is on), or &lt;code&gt;nil&lt;/code&gt; (which refers to the selected frame&amp;rsquo;s display, see &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Input Focus&lt;/a&gt;).</source>
          <target state="translated">La &lt;var&gt;display&lt;/var&gt; argumento opcional en estas funciones especifica sobre qu&amp;eacute; pantalla hacer la pregunta. Puede ser un nombre para mostrar, un marco (que designa la pantalla en la que se encuentra el marco) o &lt;code&gt;nil&lt;/code&gt; (que se refiere a la pantalla del marco seleccionado, consulte &lt;a href=&quot;input-focus#Input-Focus&quot;&gt;Enfoque de entrada&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="ecafec37f62287ed8dd3cb905ab5b45b69aeeb0b" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;frame&lt;/var&gt; specifies which frames to operate on:</source>
          <target state="translated">El &lt;var&gt;frame&lt;/var&gt; argumento opcional especifica en qu&amp;eacute; marcos operar:</target>
        </trans-unit>
        <trans-unit id="26bbce4e0ce6d9c586e1c1839883be544a4991a7" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;frame&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, specifies the frame on which the fonts are to be displayed. The optional argument &lt;var&gt;num&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, should be an integer that specifies the maximum length of the returned list. The optional argument &lt;var&gt;prefer&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, should be another font spec, which is used to control the order of the returned list; the returned font entities are sorted in order of decreasing closeness to that font spec.</source>
          <target state="translated">El &lt;var&gt;frame&lt;/var&gt; argumento opcional , si no es &lt;code&gt;nil&lt;/code&gt; , especifica el marco en el que se mostrar&amp;aacute;n las fuentes. El argumento opcional &lt;var&gt;num&lt;/var&gt; , si no es &lt;code&gt;nil&lt;/code&gt; , debe ser un n&amp;uacute;mero entero que especifique la longitud m&amp;aacute;xima de la lista devuelta. El argumento opcional &lt;var&gt;prefer&lt;/var&gt; , si no es &lt;code&gt;nil&lt;/code&gt; , deber&amp;iacute;a ser otra especificaci&amp;oacute;n de fuente, que se usa para controlar el orden de la lista devuelta; las entidades de fuente devueltas se ordenan en orden decreciente de cercan&amp;iacute;a a esa especificaci&amp;oacute;n de fuente.</target>
        </trans-unit>
        <trans-unit id="160ff97d48ba4a8dfa3b003d791595b0262367a7" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;frame&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, specifies which frames to check when deciding whether the buffer is already displayed. It is equivalent to adding an element &lt;code&gt;(reusable-frames&amp;nbsp;.&amp;nbsp;&lt;var&gt;frame&lt;/var&gt;)&lt;/code&gt; to the action alist of &lt;var&gt;action&lt;/var&gt; (see &lt;a href=&quot;buffer-display-action-alists#Buffer-Display-Action-Alists&quot;&gt;Buffer Display Action Alists&lt;/a&gt;). The &lt;var&gt;frame&lt;/var&gt; argument is provided for compatibility reasons, Lisp programs should not use it.</source>
          <target state="translated">El &lt;var&gt;frame&lt;/var&gt; argumento opcional , si no es &lt;code&gt;nil&lt;/code&gt; , especifica qu&amp;eacute; marcos verificar al decidir si el b&amp;uacute;fer ya se muestra. Es equivalente a agregar un elemento &lt;code&gt;(reusable-frames&amp;nbsp;.&amp;nbsp;&lt;var&gt;frame&lt;/var&gt;)&lt;/code&gt; a la lista de &lt;var&gt;action&lt;/var&gt; de acci&amp;oacute;n (ver &lt;a href=&quot;buffer-display-action-alists#Buffer-Display-Action-Alists&quot;&gt;Alistas de acciones de visualizaci&amp;oacute;n de b&amp;uacute;fer&lt;/a&gt; ). El argumento del &lt;var&gt;frame&lt;/var&gt; se proporciona por razones de compatibilidad, los programas Lisp no deber&amp;iacute;an usarlo.</target>
        </trans-unit>
        <trans-unit id="50b9dbdcad227dd99d40dacb6820fdfcb31ad949" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;from&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, specifies the first text position to consider, and defaults to the minimum accessible position of the buffer. If &lt;var&gt;from&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, it stands for the minimum accessible position that is not a newline character. The optional argument &lt;var&gt;to&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, specifies the last text position to consider, and defaults to the maximum accessible position of the buffer. If &lt;var&gt;to&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, it stands for the maximum accessible position that is not a newline character.</source>
          <target state="translated">El argumento opcional &lt;var&gt;from&lt;/var&gt; , si no es &lt;code&gt;nil&lt;/code&gt; , especifica la primera posici&amp;oacute;n del texto a considerar y por defecto es la posici&amp;oacute;n m&amp;iacute;nima accesible del b&amp;uacute;fer. Si &lt;var&gt;from&lt;/var&gt; es &lt;code&gt;t&lt;/code&gt; , representa la posici&amp;oacute;n m&amp;iacute;nima accesible que no es un car&amp;aacute;cter de nueva l&amp;iacute;nea. El argumento opcional &lt;var&gt;to&lt;/var&gt; , si no es &lt;code&gt;nil&lt;/code&gt; , especifica la &amp;uacute;ltima posici&amp;oacute;n del texto a considerar, y por defecto es la posici&amp;oacute;n m&amp;aacute;xima accesible del b&amp;uacute;fer. Si &lt;var&gt;to&lt;/var&gt; es &lt;code&gt;t&lt;/code&gt; , representa la posici&amp;oacute;n m&amp;aacute;xima accesible que no es un car&amp;aacute;cter de nueva l&amp;iacute;nea.</target>
        </trans-unit>
        <trans-unit id="48d8b7e116733be79108fa56696b0ae152c9cd92" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;history&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, is a symbol specifying a minibuffer history list to use (see &lt;a href=&quot;minibuffer-history#Minibuffer-History&quot;&gt;Minibuffer History&lt;/a&gt;). If it is omitted or &lt;code&gt;nil&lt;/code&gt;, the history list defaults to &lt;code&gt;regexp-history&lt;/code&gt;.</source>
          <target state="translated">El &lt;var&gt;history&lt;/var&gt; argumentos opcional , si no es &lt;code&gt;nil&lt;/code&gt; , es un s&amp;iacute;mbolo que especifica una lista de historial de minib&amp;uacute;fer para usar (ver &lt;a href=&quot;minibuffer-history#Minibuffer-History&quot;&gt;Historial de minib&amp;uacute;fer&lt;/a&gt; ). Si se omite o es &lt;code&gt;nil&lt;/code&gt; , la lista del historial se establece de forma predeterminada en &lt;code&gt;regexp-history&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="54b2555eb4d6971581a755b86e550d7f706a4369" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;ignore&lt;/var&gt; has the same meaning as for the function &lt;code&gt;window-resizable&lt;/code&gt; above.</source>
          <target state="translated">El argumento opcional &lt;var&gt;ignore&lt;/var&gt; tiene el mismo significado que para la funci&amp;oacute;n &lt;code&gt;window-resizable&lt;/code&gt; anterior.</target>
        </trans-unit>
        <trans-unit id="6bdfa63738d1ccee9b5808f3f8c9f1ebe07b8e9b" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;ignore&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, means ignore restrictions imposed by fixed size windows, &lt;code&gt;window-min-height&lt;/code&gt; or &lt;code&gt;window-min-width&lt;/code&gt; settings. If &lt;var&gt;ignore&lt;/var&gt; equals &lt;code&gt;safe&lt;/code&gt;, live windows may get as small as &lt;code&gt;window-safe-min-height&lt;/code&gt; lines and &lt;code&gt;window-safe-min-width&lt;/code&gt; columns. If &lt;var&gt;ignore&lt;/var&gt; is a window, ignore restrictions for that window only. Any other non-&lt;code&gt;nil&lt;/code&gt; value means ignore all of the above restrictions for all windows.</source>
          <target state="translated">El argumento opcional &lt;var&gt;ignore&lt;/var&gt; , si no es &lt;code&gt;nil&lt;/code&gt; , significa ignorar las restricciones impuestas por las configuraciones de ventanas de tama&amp;ntilde;o fijo, &lt;code&gt;window-min-height&lt;/code&gt; o &lt;code&gt;window-min-width&lt;/code&gt; . Si &lt;var&gt;ignore&lt;/var&gt; es igual a &lt;code&gt;safe&lt;/code&gt; , las ventanas en vivo pueden volverse tan peque&amp;ntilde;as como las l&amp;iacute;neas de &lt;code&gt;window-safe-min-height&lt;/code&gt; &lt;code&gt;window-safe-min-width&lt;/code&gt; y las columnas de ancho m&amp;iacute;nimo seguro para ventanas . Si &lt;var&gt;ignore&lt;/var&gt; es una ventana, ignore las restricciones solo para esa ventana. Cualquier otro valor que no sea &lt;code&gt;nil&lt;/code&gt; significa ignorar todas las restricciones anteriores para todas las ventanas.</target>
        </trans-unit>
        <trans-unit id="f03394985cfefcfbe4bccbc2c2b7c937f24aa8ff" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;inverse&lt;/var&gt;, if &lt;code&gt;nil&lt;/code&gt;, means that the y-pixel value returned for any line specifies the distance in pixels from the left edge (body edge if &lt;var&gt;body&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;) of &lt;var&gt;window&lt;/var&gt; to the right edge of the last glyph of that line. &lt;var&gt;inverse&lt;/var&gt; non-&lt;code&gt;nil&lt;/code&gt; means that the y-pixel value returned for any line specifies the distance in pixels from the right edge of the last glyph of that line to the right edge (body edge if &lt;var&gt;body&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;) of &lt;var&gt;window&lt;/var&gt;. This is useful for determining the amount of slack space at the end of each line.</source>
          <target state="translated">El argumento opcional &lt;var&gt;inverse&lt;/var&gt; , si es &lt;code&gt;nil&lt;/code&gt; , significa que el valor de p&amp;iacute;xel y devuelto para cualquier l&amp;iacute;nea especifica la distancia en p&amp;iacute;xeles desde el borde izquierdo (borde del &lt;var&gt;body&lt;/var&gt; si el cuerpo no es &lt;code&gt;nil&lt;/code&gt; ) de la &lt;var&gt;window&lt;/var&gt; al borde derecho del &amp;uacute;ltimo glifo de ese l&amp;iacute;nea. &lt;var&gt;inverse&lt;/var&gt; non- &lt;code&gt;nil&lt;/code&gt; significa que el valor de p&amp;iacute;xel y devuelto para cualquier l&amp;iacute;nea especifica la distancia en p&amp;iacute;xeles desde el borde derecho del &amp;uacute;ltimo glifo de esa l&amp;iacute;nea hasta el borde derecho (borde del &lt;var&gt;body&lt;/var&gt; si el cuerpo es no- &lt;code&gt;nil&lt;/code&gt; ) de la &lt;var&gt;window&lt;/var&gt; . Esto es &amp;uacute;til para determinar la cantidad de espacio libre al final de cada l&amp;iacute;nea.</target>
        </trans-unit>
        <trans-unit id="36d765e78065810838fe4b4dcd7aee5e46b9c2f7" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;keymap&lt;/var&gt; specifies the keymap for the minor mode. If non-&lt;code&gt;nil&lt;/code&gt;, it should be a variable name (whose value is a keymap), a keymap, or an alist of the form</source>
          <target state="translated">El &lt;var&gt;keymap&lt;/var&gt; argumento opcional especifica el mapa de teclas para el modo menor. Si no es &lt;code&gt;nil&lt;/code&gt; , debe ser un nombre de variable (cuyo valor es un mapa de teclas), un mapa de teclas o una lista de la forma</target>
        </trans-unit>
        <trans-unit id="45c7531620e27255788236157222d029e67710a7" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;left&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt; means to return the x- and y-coordinates of the lower left corner of the leftmost character on each line. This is the value that should be used for windows that mostly display text from right to left.</source>
          <target state="translated">El argumento opcional &lt;var&gt;left&lt;/var&gt; , si no es &lt;code&gt;nil&lt;/code&gt; , significa devolver las coordenadas xey de la esquina inferior izquierda del car&amp;aacute;cter situado m&amp;aacute;s a la izquierda en cada l&amp;iacute;nea. Este es el valor que debe usarse para las ventanas que principalmente muestran texto de derecha a izquierda.</target>
        </trans-unit>
        <trans-unit id="fac44c195c8956dce4604ab79b6495b05c7787fa" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;left&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, means to return values suitable for buffers displaying right to left text. In that case, any rectangle returned is assumed to start at the left edge of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s text area.</source>
          <target state="translated">El argumento opcional &lt;var&gt;left&lt;/var&gt; , si no es &lt;code&gt;nil&lt;/code&gt; , significa devolver valores adecuados para b&amp;uacute;feres que muestran texto de derecha a izquierda. En ese caso, se asume que cualquier rect&amp;aacute;ngulo devuelto comienza en el borde izquierdo del &amp;aacute;rea de texto de la &lt;var&gt;window&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="6b9c6954a4a938b6fd1e1b213483a278916b13fe" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;locale&lt;/var&gt;, a string, overrides the setting of your current locale identifier for collation. The value is system dependent; a &lt;var&gt;locale&lt;/var&gt;&lt;code&gt;&quot;en_US.UTF-8&quot;&lt;/code&gt; is applicable on POSIX systems, while it would be, e.g., &lt;code&gt;&quot;enu_USA.1252&quot;&lt;/code&gt; on MS-Windows systems.</source>
          <target state="translated">La &lt;var&gt;locale&lt;/var&gt; argumento opcional , una cadena, anula la configuraci&amp;oacute;n de su identificador de configuraci&amp;oacute;n regional actual para la intercalaci&amp;oacute;n. El valor depende del sistema; una &lt;var&gt;locale&lt;/var&gt; &lt;code&gt;&quot;en_US.UTF-8&quot;&lt;/code&gt; es aplicable en sistemas POSIX, mientras que ser&amp;iacute;a, por ejemplo, &lt;code&gt;&quot;enu_USA.1252&quot;&lt;/code&gt; en sistemas MS-Windows.</target>
        </trans-unit>
        <trans-unit id="be924dbedb077a7596937c809656d8809cb7f780" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;locale&lt;/var&gt;, a string, overrides the setting of your current locale identifier for collation. The value is system dependent; a &lt;var&gt;locale&lt;/var&gt;&lt;code&gt;&quot;en_US.UTF-8&quot;&lt;/code&gt; is applicable on POSIX systems, while it would be, e.g., &lt;code&gt;&quot;enu_USA.1252&quot;&lt;/code&gt; on MS-Windows systems. The &lt;var&gt;locale&lt;/var&gt; value of &lt;code&gt;&quot;POSIX&quot;&lt;/code&gt; or &lt;code&gt;&quot;C&quot;&lt;/code&gt; lets &lt;code&gt;string-collate-lessp&lt;/code&gt; behave like &lt;code&gt;string-lessp&lt;/code&gt;:</source>
          <target state="translated">La &lt;var&gt;locale&lt;/var&gt; argumento opcional , una cadena, anula la configuraci&amp;oacute;n de su identificador de configuraci&amp;oacute;n regional actual para la intercalaci&amp;oacute;n. El valor depende del sistema; una &lt;var&gt;locale&lt;/var&gt; &lt;code&gt;&quot;en_US.UTF-8&quot;&lt;/code&gt; es aplicable en sistemas POSIX, mientras que ser&amp;iacute;a, por ejemplo, &lt;code&gt;&quot;enu_USA.1252&quot;&lt;/code&gt; en sistemas MS-Windows. El valor de &lt;var&gt;locale&lt;/var&gt; de &lt;code&gt;&quot;POSIX&quot;&lt;/code&gt; o &lt;code&gt;&quot;C&quot;&lt;/code&gt; permite que &lt;code&gt;string-collate-lessp&lt;/code&gt; se comporte como &lt;code&gt;string-lessp&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4edaf13bc53c89e562d674d18afa431f2d97a551" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;lockname&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, specifies the file name to use for purposes of locking and unlocking, overriding &lt;var&gt;filename&lt;/var&gt; and &lt;var&gt;visit&lt;/var&gt; for that purpose.</source>
          <target state="translated">El argumento opcional &lt;var&gt;lockname&lt;/var&gt; , si no es &lt;code&gt;nil&lt;/code&gt; , especifica el nombre del archivo que se utilizar&amp;aacute; para bloquear y desbloquear, anulando el &lt;var&gt;filename&lt;/var&gt; y la &lt;var&gt;visit&lt;/var&gt; a para ese prop&amp;oacute;sito.</target>
        </trans-unit>
        <trans-unit id="505418b83113b1a1864d4371b2abfa1905c1136b" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;maximum&lt;/var&gt; sets a limit on how many fonts to return. If it is non-&lt;code&gt;nil&lt;/code&gt;, then the return value is truncated after the first &lt;var&gt;maximum&lt;/var&gt; matching fonts. Specifying a small value for &lt;var&gt;maximum&lt;/var&gt; can make this function much faster, in cases where many fonts match the pattern.</source>
          <target state="translated">El argumento opcional &lt;var&gt;maximum&lt;/var&gt; establece un l&amp;iacute;mite sobre la cantidad de fuentes que se devolver&amp;aacute;n. Si no es &lt;code&gt;nil&lt;/code&gt; , el valor de retorno se trunca despu&amp;eacute;s del primer &lt;var&gt;maximum&lt;/var&gt; fuentes coincidentes. Especificar un valor peque&amp;ntilde;o para el &lt;var&gt;maximum&lt;/var&gt; puede hacer que esta funci&amp;oacute;n sea mucho m&amp;aacute;s r&amp;aacute;pida, en los casos en que muchas fuentes coinciden con el patr&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="e2fef78645ec648e97c68254439e56ca0814e67d" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;millisec&lt;/var&gt; specifies an additional waiting period measured in milliseconds. This adds to the period specified by &lt;var&gt;seconds&lt;/var&gt;. If the system doesn&amp;rsquo;t support waiting fractions of a second, you get an error if you specify nonzero &lt;var&gt;millisec&lt;/var&gt;.</source>
          <target state="translated">El argumento opcional &lt;var&gt;millisec&lt;/var&gt; especifica un per&amp;iacute;odo de espera adicional medido en milisegundos. Esto se suma al per&amp;iacute;odo especificado por &lt;var&gt;seconds&lt;/var&gt; . Si el sistema no admite la espera de fracciones de segundo, obtendr&amp;aacute; un error si especifica &lt;var&gt;millisec&lt;/var&gt; distintos de cero .</target>
        </trans-unit>
        <trans-unit id="a79dc72b2d8c8af7d2c6097667a6efcd584162f8" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;minibuf&lt;/var&gt; specifies whether minibuffer windows should be included in the cyclic ordering. Normally, when &lt;var&gt;minibuf&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, a minibuffer window is included only if it is currently active; this matches the behavior of</source>
          <target state="translated">El argumento opcional &lt;var&gt;minibuf&lt;/var&gt; especifica si las ventanas del minib&amp;uacute;fer deben incluirse en el orden c&amp;iacute;clico. Normalmente, cuando &lt;var&gt;minibuf&lt;/var&gt; es &lt;code&gt;nil&lt;/code&gt; , se incluye una ventana de minib&amp;uacute;fer s&amp;oacute;lo si est&amp;aacute; activa en ese momento; esto coincide con el comportamiento de</target>
        </trans-unit>
        <trans-unit id="41718d9699e86f654dd2ea26e540ead2023238f1" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;minibuffer&lt;/var&gt; specifies whether to include the minibuffer window in the returned list. If &lt;var&gt;minibuffer&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, the minibuffer window is included. If &lt;var&gt;minibuffer&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or omitted, the minibuffer window is included only if it is active. If &lt;var&gt;minibuffer&lt;/var&gt; is neither &lt;code&gt;nil&lt;/code&gt; nor &lt;code&gt;t&lt;/code&gt;, the minibuffer window is never included.</source>
          <target state="translated">El &lt;var&gt;minibuffer&lt;/var&gt; argumento opcional especifica si se debe incluir la ventana del minib&amp;uacute;fer en la lista devuelta. Si el &lt;var&gt;minibuffer&lt;/var&gt; es &lt;code&gt;t&lt;/code&gt; , se incluye la ventana del minib&amp;uacute;fer. Si el &lt;var&gt;minibuffer&lt;/var&gt; es &lt;code&gt;nil&lt;/code&gt; o se omite, la ventana del minib&amp;uacute;fer se incluye solo si est&amp;aacute; activa. Si el &lt;var&gt;minibuffer&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; ni &lt;code&gt;t&lt;/code&gt; , la ventana del minib&amp;uacute;fer nunca se incluye.</target>
        </trans-unit>
        <trans-unit id="295f0ea496d93011b8fee19529ccf2a7cf02e05c" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;mode-and-header-line&lt;/var&gt;&lt;code&gt;nil&lt;/code&gt; or omitted means to not include the height of the mode- or header-line of &lt;var&gt;window&lt;/var&gt; in the return value. If it is either the symbol &lt;code&gt;mode-line&lt;/code&gt; or &lt;code&gt;header-line&lt;/code&gt;, include only the height of that line, if present, in the return value. If it is &lt;code&gt;t&lt;/code&gt;, include the height of both, if present, in the return value.</source>
          <target state="translated">El argumento opcional &lt;var&gt;mode-and-header-line&lt;/var&gt; &lt;code&gt;nil&lt;/code&gt; u omitido significa que no se incluye la altura de la l&amp;iacute;nea mode- o header-line de la &lt;var&gt;window&lt;/var&gt; en el valor de retorno. Si es la &lt;code&gt;mode-line&lt;/code&gt; del s&amp;iacute;mbolo o la l&amp;iacute;nea de &lt;code&gt;header-line&lt;/code&gt; , incluya solo la altura de esa l&amp;iacute;nea, si est&amp;aacute; presente, en el valor de retorno. Si es &lt;code&gt;t&lt;/code&gt; , incluya la altura de ambos, si est&amp;aacute; presente, en el valor de retorno.</target>
        </trans-unit>
        <trans-unit id="e8ec5bd3618893a66ce0e97a3f3a6fa2e9be9058" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;no-activate&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, causes Emacs to update its record of installed packages without actually making them available.</source>
          <target state="translated">El argumento opcional &lt;var&gt;no-activate&lt;/var&gt; , si no es &lt;code&gt;nil&lt;/code&gt; , hace que Emacs actualice su registro de paquetes instalados sin que est&amp;eacute;n realmente disponibles.</target>
        </trans-unit>
        <trans-unit id="20709a8a77efe587a728d12e613e78b8c48774b1" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;noerror&lt;/var&gt; is obsolete, kept for backward compatibility, and has no effect.</source>
          <target state="translated">El argumento opcional &lt;var&gt;noerror&lt;/var&gt; est&amp;aacute; obsoleto, se mantiene por compatibilidad con versiones anteriores y no tiene ning&amp;uacute;n efecto.</target>
        </trans-unit>
        <trans-unit id="2b89e1f5be44e2151710c7bdac8ce82b4cbfb2b4" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;object&lt;/var&gt; specifies which text to search, and defaults to the current buffer. If &lt;var&gt;object&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it can be some other buffer, or it can be a string or a window. If it is a string, the function searches that string. If it is a window, the function searches the buffer displayed in that window. If a buffer whose text you want to examine is displayed in some window, we recommend to specify it by that window, rather than pass the buffer to the function. This is because telling the function about the window allows it to correctly account for window-specific overlays, which might change the result of the function if some text in the buffer is covered by overlays.</source>
          <target state="translated">El &lt;var&gt;object&lt;/var&gt; argumento opcional especifica qu&amp;eacute; texto buscar y toma como valor predeterminado el b&amp;uacute;fer actual. Si el &lt;var&gt;object&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; , puede ser alg&amp;uacute;n otro b&amp;uacute;fer o puede ser una cadena o una ventana. Si es una cadena, la funci&amp;oacute;n busca esa cadena. Si es una ventana, la funci&amp;oacute;n busca el b&amp;uacute;fer que se muestra en esa ventana. Si un b&amp;uacute;fer cuyo texto desea examinar se muestra en alguna ventana, recomendamos especificarlo en esa ventana, en lugar de pasar el b&amp;uacute;fer a la funci&amp;oacute;n. Esto se debe a que decirle a la funci&amp;oacute;n acerca de la ventana le permite tener en cuenta correctamente las superposiciones espec&amp;iacute;ficas de la ventana, lo que podr&amp;iacute;a cambiar el resultado de la funci&amp;oacute;n si alg&amp;uacute;n texto del b&amp;uacute;fer est&amp;aacute; cubierto por superposiciones.</target>
        </trans-unit>
        <trans-unit id="1a510836acc518a4ce80759b09b05d4c9fb80e93" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;object&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, specifies a buffer or string to act on, rather than the current buffer. If &lt;var&gt;object&lt;/var&gt; is a string, then &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; are zero-based indices into the string.</source>
          <target state="translated">El &lt;var&gt;object&lt;/var&gt; argumento opcional , si no es &lt;code&gt;nil&lt;/code&gt; , especifica un b&amp;uacute;fer o una cadena sobre la que actuar, en lugar del b&amp;uacute;fer actual. Si el &lt;var&gt;object&lt;/var&gt; es una cadena, entonces el &lt;var&gt;start&lt;/var&gt; y el &lt;var&gt;end&lt;/var&gt; son &amp;iacute;ndices de base cero en la cadena.</target>
        </trans-unit>
        <trans-unit id="6f772ffbd43b315bbe2a2d9ef65a881dd0172794" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;on-exit&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, specifies a function that is called, with no arguments, after &lt;var&gt;keymap&lt;/var&gt; is deactivated.</source>
          <target state="translated">El argumento opcional &lt;var&gt;on-exit&lt;/var&gt; , si no es &lt;code&gt;nil&lt;/code&gt; , especifica una funci&amp;oacute;n que se llama, sin argumentos, despu&amp;eacute;s de que se desactiva el &lt;var&gt;keymap&lt;/var&gt; teclas.</target>
        </trans-unit>
        <trans-unit id="59f86c6b81e54496f12f978a2ada198f4a69de49" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;only-present&lt;/var&gt; indicates how to handle specification characters in &lt;var&gt;template&lt;/var&gt; that are not found in &lt;var&gt;spec-alist&lt;/var&gt;. If it is &lt;code&gt;nil&lt;/code&gt; or omitted, the function signals an error. Otherwise, those format specifications and any occurrences of &amp;lsquo;</source>
          <target state="translated">El argumento opcional &lt;var&gt;only-present&lt;/var&gt; indica c&amp;oacute;mo manejar los caracteres de especificaci&amp;oacute;n en la &lt;var&gt;template&lt;/var&gt; que no se encuentran en &lt;var&gt;spec-alist&lt;/var&gt; . Si es &lt;code&gt;nil&lt;/code&gt; o se omite, la funci&amp;oacute;n indica un error. De lo contrario, esas especificaciones de formato y cualquier aparici&amp;oacute;n de '</target>
        </trans-unit>
        <trans-unit id="99357a38b2f2682df0548c2c500e9c64e4f6180b" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;padding&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, is a padding character added at the beginning and end of the result string, to extend it to exactly &lt;var&gt;width&lt;/var&gt; columns. The padding character is used at the end of the result if it falls short of &lt;var&gt;width&lt;/var&gt;. It is also used at the beginning of the result if one multi-column character in &lt;var&gt;string&lt;/var&gt; extends across the column &lt;var&gt;start-column&lt;/var&gt;.</source>
          <target state="translated">El &lt;var&gt;padding&lt;/var&gt; argumento opcional , si no es &lt;code&gt;nil&lt;/code&gt; , es un car&amp;aacute;cter de relleno a&amp;ntilde;adido al principio y al final de la cadena de resultados, para extenderlo exactamente a columnas de &lt;var&gt;width&lt;/var&gt; . El car&amp;aacute;cter de relleno se utiliza al final del resultado si no alcanza el &lt;var&gt;width&lt;/var&gt; . Tambi&amp;eacute;n se utiliza al principio del resultado si un car&amp;aacute;cter de varias columnas en la &lt;var&gt;string&lt;/var&gt; extiende a lo largo de la columna de &lt;var&gt;start-column&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="791557e50f0f19bd2818ee21038e7006cdf9270d" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;paren&lt;/var&gt; can be any of the following:</source>
          <target state="translated">El argumento opcional &lt;var&gt;paren&lt;/var&gt; puede ser cualquiera de los siguientes:</target>
        </trans-unit>
        <trans-unit id="9125d9631a53fcb42a447bf4efdec3689610b1c4" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;pixelwise&lt;/var&gt; non-&lt;code&gt;nil&lt;/code&gt; means to measure the new width and height in units of pixels instead. Note that if &lt;code&gt;frame-resize-pixelwise&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;, some toolkits may refuse to truly honor the request if it does not increase/decrease the frame size to a multiple of its character size.</source>
          <target state="translated">El argumento opcional &lt;var&gt;pixelwise&lt;/var&gt; no &lt;code&gt;nil&lt;/code&gt; medios para medir la nueva anchura y la altura en unidades de p&amp;iacute;xeles en lugar. Tenga en cuenta que si &lt;code&gt;frame-resize-pixelwise&lt;/code&gt; es &lt;code&gt;nil&lt;/code&gt; , algunos conjuntos de herramientas pueden negarse a cumplir verdaderamente la solicitud si no aumenta / disminuye el tama&amp;ntilde;o del marco a un m&amp;uacute;ltiplo del tama&amp;ntilde;o de su car&amp;aacute;cter.</target>
        </trans-unit>
        <trans-unit id="1a486c9457c82acbf1a6a199202ab0f46c9a5f6d" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;pixelwise&lt;/var&gt; non-&lt;code&gt;nil&lt;/code&gt; means to return the minimum size of &lt;var&gt;window&lt;/var&gt; counted in pixels.</source>
          <target state="translated">El argumento opcional &lt;var&gt;pixelwise&lt;/var&gt; no &lt;code&gt;nil&lt;/code&gt; medios para devolver el tama&amp;ntilde;o m&amp;iacute;nimo de &lt;var&gt;window&lt;/var&gt; contado en p&amp;iacute;xeles.</target>
        </trans-unit>
        <trans-unit id="58f7f9c9311afbc394002bdf8390e5e8a66c15d9" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;positions&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, is a cons cell whose &lt;small&gt;CAR&lt;/small&gt; specifies the uppermost and whose &lt;small&gt;CDR&lt;/small&gt; specifies the lowermost pixel position that must be covered by any rectangle returned. These positions measure from the start of the text area of &lt;var&gt;window&lt;/var&gt;.</source>
          <target state="translated">Las &lt;var&gt;positions&lt;/var&gt; argumentos opcionales , si no son &lt;code&gt;nil&lt;/code&gt; , es una celda de contras cuyo &lt;small&gt;CAR&lt;/small&gt; especifica la m&amp;aacute;s alta y cuya &lt;small&gt;CDR&lt;/small&gt; especifica la posici&amp;oacute;n de p&amp;iacute;xel m&amp;aacute;s baja que debe ser cubierta por cualquier rect&amp;aacute;ngulo devuelto. Estas posiciones miden desde el inicio del &amp;aacute;rea de texto de la &lt;var&gt;window&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="d4d8d2c166f79b72f18b93ddb099c08e8746fd52" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;predicate&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, specifies a function to filter the buffers that should be considered: the function will be called with every potential candidate as its argument, and should return &lt;code&gt;nil&lt;/code&gt; to reject the candidate, non-&lt;code&gt;nil&lt;/code&gt; to accept it.</source>
          <target state="translated">El &lt;var&gt;predicate&lt;/var&gt; argumento opcional , si no es &lt;code&gt;nil&lt;/code&gt; , especifica una funci&amp;oacute;n para filtrar los b&amp;uacute;feres que deben considerarse: la funci&amp;oacute;n se llamar&amp;aacute; con cada candidato potencial como su argumento, y debe devolver &lt;code&gt;nil&lt;/code&gt; para rechazar el candidato, no &lt;code&gt;nil&lt;/code&gt; para aceptarlo .</target>
        </trans-unit>
        <trans-unit id="bf6c3432c82d35a85740cbc2f62db8414db80230" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;predicate&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, specifies a predicate function for testing whether a candidate file is suitable. The predicate is passed the candidate file name as its single argument. If &lt;var&gt;predicate&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or omitted, &lt;code&gt;locate-file&lt;/code&gt; uses &lt;code&gt;file-readable-p&lt;/code&gt; as the predicate. See &lt;a href=&quot;kinds-of-files#Kinds-of-Files&quot;&gt;Kinds of Files&lt;/a&gt;, for other useful predicates, e.g., &lt;code&gt;file-executable-p&lt;/code&gt; and &lt;code&gt;file-directory-p&lt;/code&gt;.</source>
          <target state="translated">El &lt;var&gt;predicate&lt;/var&gt; argumento opcional , si no es &lt;code&gt;nil&lt;/code&gt; , especifica una funci&amp;oacute;n de predicado para probar si un archivo candidato es adecuado. Al predicado se le pasa el nombre del archivo candidato como su &amp;uacute;nico argumento. Si el &lt;var&gt;predicate&lt;/var&gt; es &lt;code&gt;nil&lt;/code&gt; o se omite, &lt;code&gt;locate-file&lt;/code&gt; usa &lt;code&gt;file-readable-p&lt;/code&gt; como predicado. Consulte &lt;a href=&quot;kinds-of-files#Kinds-of-Files&quot;&gt;Tipos de archivos&lt;/a&gt; para conocer otros predicados &amp;uacute;tiles, por ejemplo, &lt;code&gt;file-executable-p&lt;/code&gt; y &lt;code&gt;file-directory-p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1e2cb767e72f360984a732e376c1c4554ced51fa" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;preserve-size&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, will install a parameter to preserve the size of &lt;var&gt;window&lt;/var&gt; during future resize operations (see &lt;a href=&quot;preserving-window-sizes#Preserving-Window-Sizes&quot;&gt;Preserving Window Sizes&lt;/a&gt;).</source>
          <target state="translated">El argumento opcional &lt;var&gt;preserve-size&lt;/var&gt; , si no es &lt;code&gt;nil&lt;/code&gt; , instalar&amp;aacute; un par&amp;aacute;metro para preservar el tama&amp;ntilde;o de la &lt;var&gt;window&lt;/var&gt; durante futuras operaciones de cambio de tama&amp;ntilde;o (ver &lt;a href=&quot;preserving-window-sizes#Preserving-Window-Sizes&quot;&gt;Conservaci&amp;oacute;n&lt;/a&gt; del tama&amp;ntilde;o de la ventana ).</target>
        </trans-unit>
        <trans-unit id="435a1b07679e489657de30782052b8d6eab4ec8b" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;require-match&lt;/var&gt; has the same meaning as in &lt;code&gt;completing-read&lt;/code&gt;. See &lt;a href=&quot;minibuffer-completion#Minibuffer-Completion&quot;&gt;Minibuffer Completion&lt;/a&gt;.</source>
          <target state="translated">El argumento opcional &lt;var&gt;require-match&lt;/var&gt; tiene el mismo significado que &lt;code&gt;completing-read&lt;/code&gt; . Consulte &lt;a href=&quot;minibuffer-completion#Minibuffer-Completion&quot;&gt;Finalizaci&amp;oacute;n del minib&amp;uacute;fer&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e40feac3d056e5b6f3adcd167b868b54bdefa42a" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;rgb&lt;/var&gt;, if specified, is an rgb value, a list of three numbers that specify what the color actually looks like. If you do not specify &lt;var&gt;rgb&lt;/var&gt;, then this color cannot be used by &lt;code&gt;tty-color-approximate&lt;/code&gt; to approximate other colors, because Emacs will not know what it looks like.</source>
          <target state="translated">El argumento opcional &lt;var&gt;rgb&lt;/var&gt; , si se especifica, es un valor rgb, una lista de tres n&amp;uacute;meros que especifican c&amp;oacute;mo se ve realmente el color. Si no especifica &lt;var&gt;rgb&lt;/var&gt; , &lt;code&gt;tty-color-approximate&lt;/code&gt; no puede usar este color para aproximarse a otros colores, porque Emacs no sabr&amp;aacute; c&amp;oacute;mo se ve.</target>
        </trans-unit>
        <trans-unit id="905cbc5fb211abaa07ac0619c5392cdf3e417dd1" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;spec-type&lt;/var&gt; determines which spec to set. If it is omitted or &lt;code&gt;nil&lt;/code&gt; or &lt;code&gt;face-override-spec&lt;/code&gt;, this function sets the &lt;em&gt;override spec&lt;/em&gt;, which overrides face specs on &lt;var&gt;face&lt;/var&gt; of all the other types mentioned below. This is useful when calling this function outside of Custom code. If &lt;var&gt;spec-type&lt;/var&gt; is &lt;code&gt;customized-face&lt;/code&gt; or &lt;code&gt;saved-face&lt;/code&gt;, this function sets the customized spec or the saved custom spec, respectively. If it is &lt;code&gt;face-defface-spec&lt;/code&gt;, this function sets the default face spec (the same one set by &lt;code&gt;defface&lt;/code&gt;). If it is &lt;code&gt;reset&lt;/code&gt;, this function clears out all customization specs and override specs from &lt;var&gt;face&lt;/var&gt; (in this case, the value of &lt;var&gt;spec&lt;/var&gt; is ignored). The effect of any other value of &lt;var&gt;spec-type&lt;/var&gt; on the face specs is reserved for internal use, but the function will still define &lt;var&gt;face&lt;/var&gt; itself and recalculate its attributes, as described above.</source>
          <target state="translated">El argumento opcional &lt;var&gt;spec-type&lt;/var&gt; determina qu&amp;eacute; especificaci&amp;oacute;n establecer. Si se omite o es &lt;code&gt;nil&lt;/code&gt; o &lt;code&gt;face-override-spec&lt;/code&gt; , esta funci&amp;oacute;n establece la &lt;em&gt;especificaci&amp;oacute;n de invalidaci&amp;oacute;n&lt;/em&gt; , que anula las especificaciones de la &lt;var&gt;face&lt;/var&gt; en la cara de todos los dem&amp;aacute;s tipos mencionados a continuaci&amp;oacute;n. Esto es &amp;uacute;til cuando se llama a esta funci&amp;oacute;n fuera del c&amp;oacute;digo personalizado. Si &lt;var&gt;spec-type&lt;/var&gt; es &lt;code&gt;customized-face&lt;/code&gt; o cara &lt;code&gt;saved-face&lt;/code&gt; , esta funci&amp;oacute;n establece la especificaci&amp;oacute;n personalizada o la especificaci&amp;oacute;n personalizada guardada, respectivamente. Si es &lt;code&gt;face-defface-spec&lt;/code&gt; , esta funci&amp;oacute;n establece la especificaci&amp;oacute;n de rostro predeterminada (la misma establecida por &lt;code&gt;defface&lt;/code&gt; ). Si se &lt;code&gt;reset&lt;/code&gt; , esta funci&amp;oacute;n borra todas las especificaciones de personalizaci&amp;oacute;n y anula las especificaciones de la &lt;var&gt;face&lt;/var&gt; (en este caso, se ignora el valor de la &lt;var&gt;spec&lt;/var&gt; ). El efecto de cualquier otro valor de &lt;var&gt;spec-type&lt;/var&gt; de especificaci&amp;oacute;n en las especificaciones de la cara est&amp;aacute; reservado para uso interno, pero la funci&amp;oacute;n seguir&amp;aacute; definiendo la &lt;var&gt;face&lt;/var&gt; y recalcular&amp;aacute; sus atributos, como se describi&amp;oacute; anteriormente.</target>
        </trans-unit>
        <trans-unit id="d6f8de3101851c3382246237fec9a41fcf1e43cd" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;start-column&lt;/var&gt; specifies the starting column. If this is non-&lt;code&gt;nil&lt;/code&gt;, then the first &lt;var&gt;start-column&lt;/var&gt; columns of the string are omitted from the value. If one multi-column character in &lt;var&gt;string&lt;/var&gt; extends across the column &lt;var&gt;start-column&lt;/var&gt;, that character is not included.</source>
          <target state="translated">El argumento opcional &lt;var&gt;start-column&lt;/var&gt; especifica la columna inicial. Si no es &lt;code&gt;nil&lt;/code&gt; , las primeras columnas de la &lt;var&gt;start-column&lt;/var&gt; de la cadena se omiten del valor. Si un car&amp;aacute;cter de varias columnas en la &lt;var&gt;string&lt;/var&gt; extiende a lo largo de la columna de &lt;var&gt;start-column&lt;/var&gt; , ese car&amp;aacute;cter no se incluye.</target>
        </trans-unit>
        <trans-unit id="170877c661c774db6181373f0a88ba3c4809375d" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;string&lt;/var&gt; means to get a byte value from that string instead of the current buffer.</source>
          <target state="translated">La &lt;var&gt;string&lt;/var&gt; argumentos opcional significa obtener un valor de byte de esa cadena en lugar del b&amp;uacute;fer actual.</target>
        </trans-unit>
        <trans-unit id="08690ee1143f80767485ceb61e6025b4e1f6ad5a" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;suffixes&lt;/var&gt; gives the list of file-name suffixes to append to &lt;var&gt;filename&lt;/var&gt; when searching. &lt;code&gt;locate-file&lt;/code&gt; tries each possible directory with each of these suffixes. If &lt;var&gt;suffixes&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, or &lt;code&gt;(&quot;&quot;)&lt;/code&gt;, then there are no suffixes, and &lt;var&gt;filename&lt;/var&gt; is used only as-is. Typical values of &lt;var&gt;suffixes&lt;/var&gt; are &lt;code&gt;exec-suffixes&lt;/code&gt; (see &lt;a href=&quot;subprocess-creation#Subprocess-Creation&quot;&gt;Subprocess Creation&lt;/a&gt;), &lt;code&gt;load-suffixes&lt;/code&gt;, &lt;code&gt;load-file-rep-suffixes&lt;/code&gt; and the return value of the function &lt;code&gt;get-load-suffixes&lt;/code&gt; (see &lt;a href=&quot;load-suffixes#Load-Suffixes&quot;&gt;Load Suffixes&lt;/a&gt;).</source>
          <target state="translated">Los &lt;var&gt;suffixes&lt;/var&gt; argumento opcionales dan la lista de sufijos de nombre de archivo para agregar al &lt;var&gt;filename&lt;/var&gt; de archivo cuando se busca. &lt;code&gt;locate-file&lt;/code&gt; intenta cada directorio posible con cada uno de estos sufijos. Si &lt;var&gt;suffixes&lt;/var&gt; es &lt;code&gt;nil&lt;/code&gt; , o &lt;code&gt;(&quot;&quot;)&lt;/code&gt; , entonces no hay sufijos y el &lt;var&gt;filename&lt;/var&gt; se usa solo como est&amp;aacute;. Los valores t&amp;iacute;picos de los &lt;var&gt;suffixes&lt;/var&gt; son &lt;code&gt;exec-suffixes&lt;/code&gt; (ver &lt;a href=&quot;subprocess-creation#Subprocess-Creation&quot;&gt;Creaci&amp;oacute;n de subprocesos&lt;/a&gt; ), &lt;code&gt;load-suffixes&lt;/code&gt; , &lt;code&gt;load-file-rep-suffixes&lt;/code&gt; y el valor de retorno de la funci&amp;oacute;n &lt;code&gt;get-load-suffixes&lt;/code&gt; (ver &lt;a href=&quot;load-suffixes#Load-Suffixes&quot;&gt;Cargar sufijos&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="6929cd262e2ec8e57cb83b3bca611739b4dfbf41" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;translation&lt;/var&gt; specifies a translation table to use for scanning the text (see &lt;a href=&quot;translation-of-characters#Translation-of-Characters&quot;&gt;Translation of Characters&lt;/a&gt;). If it is non-&lt;code&gt;nil&lt;/code&gt;, then each character in the region is translated through this table, and the value returned describes the translated characters instead of the characters actually in the buffer.</source>
          <target state="translated">La &lt;var&gt;translation&lt;/var&gt; argumentos opcional especifica una tabla de traducci&amp;oacute;n que se utilizar&amp;aacute; para escanear el texto (consulte &lt;a href=&quot;translation-of-characters#Translation-of-Characters&quot;&gt;Traducci&amp;oacute;n de caracteres&lt;/a&gt; ). Si no es &lt;code&gt;nil&lt;/code&gt; , entonces cada car&amp;aacute;cter de la regi&amp;oacute;n se traduce a trav&amp;eacute;s de esta tabla y el valor devuelto describe los caracteres traducidos en lugar de los caracteres que se encuentran realmente en el b&amp;uacute;fer.</target>
        </trans-unit>
        <trans-unit id="c092e151609e9ec5f01fdc51239dc320c81fb40d" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;type&lt;/var&gt; is a symbol specifying the image type. If &lt;var&gt;type&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;create-image&lt;/code&gt; tries to determine the image type from the file&amp;rsquo;s first few bytes, or else from the file&amp;rsquo;s name.</source>
          <target state="translated">El &lt;var&gt;type&lt;/var&gt; argumento opcional es un s&amp;iacute;mbolo que especifica el tipo de imagen. Si se omite el &lt;var&gt;type&lt;/var&gt; o es &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;create-image&lt;/code&gt; intenta determinar el tipo de imagen a partir de los primeros bytes del archivo o, de lo contrario, del nombre del archivo.</target>
        </trans-unit>
        <trans-unit id="cffa81c7cb380096c5547dae42e6cb7a9528d1b2" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;type&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, determines the exact type of Lisp object to check for. In that case, &lt;var&gt;type&lt;/var&gt; should be one of &lt;code&gt;font-object&lt;/code&gt;, &lt;code&gt;font-spec&lt;/code&gt;, or &lt;code&gt;font-entity&lt;/code&gt;.</source>
          <target state="translated">El &lt;var&gt;type&lt;/var&gt; argumento opcional , si no es &lt;code&gt;nil&lt;/code&gt; , determina el tipo exacto de objeto Lisp a verificar. En ese caso, &lt;var&gt;type&lt;/var&gt; debe ser una de &lt;code&gt;font-object&lt;/code&gt; , &lt;code&gt;font-spec&lt;/code&gt; , o &lt;code&gt;font-entity&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc15e8d2ee27fc6994759226a8e71c2f534f8ee7" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;width&lt;/var&gt; specifies a desired font width. If it is non-&lt;code&gt;nil&lt;/code&gt;, the function only returns those fonts whose characters are (on average) &lt;var&gt;width&lt;/var&gt; times as wide as &lt;var&gt;reference-face&lt;/var&gt;.</source>
          <target state="translated">El &lt;var&gt;width&lt;/var&gt; argumento opcional especifica un ancho de fuente deseado. Si no es &lt;code&gt;nil&lt;/code&gt; , la funci&amp;oacute;n solo devuelve aquellas fuentes cuyos caracteres son (en promedio) &lt;var&gt;width&lt;/var&gt; por el ancho &lt;var&gt;reference-face&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="a4adeba927f11ca868cbbc9ac454375db4897015" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;window&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, should be a live window on the specified frame; then &lt;var&gt;window&lt;/var&gt; will be the first element in the returned list. If &lt;var&gt;window&lt;/var&gt; is omitted or &lt;code&gt;nil&lt;/code&gt;, the window selected within the frame is the first element.</source>
          <target state="translated">La &lt;var&gt;window&lt;/var&gt; argumento opcional , si no es &lt;code&gt;nil&lt;/code&gt; , debe ser una ventana en vivo en el marco especificado; entonces la &lt;var&gt;window&lt;/var&gt; ser&amp;aacute; el primer elemento en la lista devuelta. Si la &lt;var&gt;window&lt;/var&gt; se omite o es &lt;code&gt;nil&lt;/code&gt; , la ventana seleccionada dentro del marco es el primer elemento.</target>
        </trans-unit>
        <trans-unit id="fdc9182a4b3a92a29afde612fa522b47066e0b79" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;x-limit&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, specifies the maximum X coordinate beyond which text should be ignored; it is therefore also the largest value of pixel-width that the function can return. If &lt;var&gt;x-limit&lt;/var&gt;&lt;code&gt;nil&lt;/code&gt; or omitted, it means to use the pixel-width of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s body (see &lt;a href=&quot;window-sizes#Window-Sizes&quot;&gt;Window Sizes&lt;/a&gt;); this default means that text of truncated lines wider than the window will be ignored. This default is useful when the caller does not intend to change the width of &lt;var&gt;window&lt;/var&gt;. Otherwise, the caller should specify here the maximum width &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s body may assume; in particular, if truncated lines are expected and their text needs to be accounted for, &lt;var&gt;x-limit&lt;/var&gt; should be set to a large value. Since calculating the width of long lines can take some time, it&amp;rsquo;s always a good idea to make this argument as small as needed; in particular, if the buffer might contain long lines that will be truncated anyway.</source>
          <target state="translated">El argumento opcional &lt;var&gt;x-limit&lt;/var&gt; , si no es &lt;code&gt;nil&lt;/code&gt; , especifica la coordenada X m&amp;aacute;xima m&amp;aacute;s all&amp;aacute; de la cual el texto debe ignorarse; por lo tanto, tambi&amp;eacute;n es el valor m&amp;aacute;s grande de ancho de p&amp;iacute;xel que puede devolver la funci&amp;oacute;n. Si &lt;var&gt;x-limit&lt;/var&gt; &lt;code&gt;nil&lt;/code&gt; o se omite, significa utilizar el ancho de p&amp;iacute;xel del cuerpo de la &lt;var&gt;window&lt;/var&gt; (consulte &lt;a href=&quot;window-sizes#Window-Sizes&quot;&gt;Tama&amp;ntilde;os de ventana&lt;/a&gt; ); este valor predeterminado significa que el texto de las l&amp;iacute;neas truncadas m&amp;aacute;s anchas que la ventana se ignorar&amp;aacute;. Este valor predeterminado es &amp;uacute;til cuando la persona que llama no tiene la intenci&amp;oacute;n de cambiar el ancho de la &lt;var&gt;window&lt;/var&gt; . De lo contrario, la persona que llama debe especificar aqu&amp;iacute; el ancho m&amp;aacute;ximo que puede asumir el cuerpo de la &lt;var&gt;window&lt;/var&gt; ; en particular, si se esperan l&amp;iacute;neas truncadas y es necesario tener en cuenta su texto, &lt;var&gt;x-limit&lt;/var&gt; debe establecerse en un valor grande. Dado que calcular el ancho de las l&amp;iacute;neas largas puede llevar alg&amp;uacute;n tiempo, siempre es una buena idea hacer este argumento tan peque&amp;ntilde;o como sea necesario; en particular, si el b&amp;uacute;fer puede contener l&amp;iacute;neas largas que se truncar&amp;aacute;n de todos modos.</target>
        </trans-unit>
        <trans-unit id="c40e0ed4f1db150d7701a53bd11312d3806432c0" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;xrm-string&lt;/var&gt;, if not &lt;code&gt;nil&lt;/code&gt;, is a string of resource names and values, in the same format used in the</source>
          <target state="translated">El argumento opcional &lt;var&gt;xrm-string&lt;/var&gt; , si no es &lt;code&gt;nil&lt;/code&gt; , es una cadena de nombres y valores de recursos, en el mismo formato que se usa en el</target>
        </trans-unit>
        <trans-unit id="e45d1b4575d0268bdd495d97852d103f4fb454e9" translate="yes" xml:space="preserve">
          <source>The optional argument &lt;var&gt;y-limit&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, specifies the maximum Y coordinate beyond which text is to be ignored; it is therefore also the maximum pixel-height that the function can return. If &lt;var&gt;y-limit&lt;/var&gt; is nil or omitted, it means to considers all the lines of text till the buffer position specified by &lt;var&gt;to&lt;/var&gt;. Since calculating the pixel-height of a large buffer can take some time, it makes sense to specify this argument; in particular, if the caller does not know the size of the buffer.</source>
          <target state="translated">El argumento opcional &lt;var&gt;y-limit&lt;/var&gt; , si no es &lt;code&gt;nil&lt;/code&gt; , especifica la coordenada Y m&amp;aacute;xima m&amp;aacute;s all&amp;aacute; de la cual se ignorar&amp;aacute; el texto; por lo tanto, tambi&amp;eacute;n es la altura m&amp;aacute;xima de p&amp;iacute;xel que puede devolver la funci&amp;oacute;n. Si &lt;var&gt;y-limit&lt;/var&gt; es nulo o se omite, significa que considera todas las l&amp;iacute;neas de texto hasta la posici&amp;oacute;n del b&amp;uacute;fer especificada por &lt;var&gt;to&lt;/var&gt; . Dado que calcular la altura de p&amp;iacute;xel de un b&amp;uacute;fer grande puede llevar alg&amp;uacute;n tiempo, tiene sentido especificar este argumento; en particular, si la persona que llama no conoce el tama&amp;ntilde;o del b&amp;uacute;fer.</target>
        </trans-unit>
        <trans-unit id="dc3a575ab4003570a9c36540fefa7d4ef44f3823" translate="yes" xml:space="preserve">
          <source>The optional arguments &lt;var&gt;action&lt;/var&gt; and &lt;var&gt;frame&lt;/var&gt; are as for &lt;code&gt;display-buffer&lt;/code&gt;, and only used if a buffer is displayed.</source>
          <target state="translated">Los argumentos opcionales &lt;var&gt;action&lt;/var&gt; y &lt;var&gt;frame&lt;/var&gt; son como para &lt;code&gt;display-buffer&lt;/code&gt; , y solo se usan si se muestra un b&amp;uacute;fer.</target>
        </trans-unit>
        <trans-unit id="0c0042672620faa70f4c2ac1559a316ba863df5c" translate="yes" xml:space="preserve">
          <source>The optional arguments &lt;var&gt;component&lt;/var&gt; and &lt;var&gt;subclass&lt;/var&gt; add to the key and the class, respectively. You must specify both of them or neither. If you specify them, the key is &amp;lsquo;</source>
          <target state="translated">El &lt;var&gt;component&lt;/var&gt; e de argumentos opcionales y la &lt;var&gt;subclass&lt;/var&gt; suman a la clave y la clase, respectivamente. Debe especificar ambos o ninguno. Si los especifica, la clave es '</target>
        </trans-unit>
        <trans-unit id="ee91262e4675f009db2d341be5b1d60c2ec7c619" translate="yes" xml:space="preserve">
          <source>The optional arguments &lt;var&gt;min-width&lt;/var&gt; and &lt;var&gt;min-height&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, specify the minimum width and height of any rectangle returned.</source>
          <target state="translated">Los argumentos opcionales &lt;var&gt;min-width&lt;/var&gt; y &lt;var&gt;min-height&lt;/var&gt; , si no son &lt;code&gt;nil&lt;/code&gt; , especifican el ancho y alto m&amp;iacute;nimo de cualquier rect&amp;aacute;ngulo devuelto.</target>
        </trans-unit>
        <trans-unit id="372690aff6ae141943d981fae5474ab55ccff89f" translate="yes" xml:space="preserve">
          <source>The optional arguments &lt;var&gt;minibuf&lt;/var&gt; and &lt;var&gt;all-frames&lt;/var&gt; specify the windows to search, and have the same meanings as in &lt;code&gt;next-window&lt;/code&gt;.</source>
          <target state="translated">Los argumentos opcionales &lt;var&gt;minibuf&lt;/var&gt; y &lt;var&gt;all-frames&lt;/var&gt; especifican las ventanas a buscar y tienen los mismos significados que en &lt;code&gt;next-window&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2c1039de00a7678732da9114d34b59102a11647b" translate="yes" xml:space="preserve">
          <source>The optional arguments &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; are character positions specifying the portion of &lt;var&gt;object&lt;/var&gt; to compute the message digest for. If they are &lt;code&gt;nil&lt;/code&gt; or omitted, the hash is computed for the whole of &lt;var&gt;object&lt;/var&gt;.</source>
          <target state="translated">Los argumentos opcionales &lt;var&gt;start&lt;/var&gt; y &lt;var&gt;end&lt;/var&gt; son posiciones de caracteres que especifican la parte del &lt;var&gt;object&lt;/var&gt; para la que se calcula el resumen del mensaje. Si son &lt;code&gt;nil&lt;/code&gt; o se omiten, el hash se calcula para todo el &lt;var&gt;object&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="2337e7f6ede507e511fcbe99dd954146514bc80b" translate="yes" xml:space="preserve">
          <source>The optional fifth argument, &lt;var&gt;object&lt;/var&gt;, specifies the string or buffer to scan. Positions are relative to &lt;var&gt;object&lt;/var&gt;. The default for &lt;var&gt;object&lt;/var&gt; is the current buffer.</source>
          <target state="translated">El quinto argumento opcional, &lt;var&gt;object&lt;/var&gt; , especifica la cadena o el b&amp;uacute;fer a escanear. Las posiciones son relativas al &lt;var&gt;object&lt;/var&gt; . El &lt;var&gt;object&lt;/var&gt; predeterminado es el b&amp;uacute;fer actual.</target>
        </trans-unit>
        <trans-unit id="28e7ede94a8e68a6a581d0669d18f692d137189a" translate="yes" xml:space="preserve">
          <source>The optional fourth argument &lt;var&gt;pixelwise&lt;/var&gt; non-&lt;code&gt;nil&lt;/code&gt; means that &lt;var&gt;frame&lt;/var&gt; should be &lt;var&gt;height&lt;/var&gt; pixels high. Note that if &lt;code&gt;frame-resize-pixelwise&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;, some window managers may refuse to truly honor the request if it does not increase/decrease the frame height to a multiple of its character height.</source>
          <target state="translated">El cuarto argumento opcional en &lt;var&gt;pixelwise&lt;/var&gt; no &lt;code&gt;nil&lt;/code&gt; significa que el &lt;var&gt;frame&lt;/var&gt; debe tener una &lt;var&gt;height&lt;/var&gt; p&amp;iacute;xeles. Tenga en cuenta que si &lt;code&gt;frame-resize-pixelwise&lt;/code&gt; es &lt;code&gt;nil&lt;/code&gt; , algunos administradores de ventanas pueden negarse a aceptar realmente la solicitud si no aumenta / disminuye la altura del marco a un m&amp;uacute;ltiplo de la altura de su car&amp;aacute;cter.</target>
        </trans-unit>
        <trans-unit id="4cea50b6fa2e62214008b025d8e0f2e6fa48a344" translate="yes" xml:space="preserve">
          <source>The optional fourth argument &lt;var&gt;pixelwise&lt;/var&gt; non-&lt;code&gt;nil&lt;/code&gt; means that &lt;var&gt;frame&lt;/var&gt; should be &lt;var&gt;width&lt;/var&gt; pixels wide. Note that if &lt;code&gt;frame-resize-pixelwise&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;, some window managers may refuse to fully honor the request if it does not increase/decrease the frame width to a multiple of its character width.</source>
          <target state="translated">Los cuarto argumento opcional &lt;var&gt;pixelwise&lt;/var&gt; no &lt;code&gt;nil&lt;/code&gt; medios que &lt;var&gt;frame&lt;/var&gt; deben ser &lt;var&gt;width&lt;/var&gt; p&amp;iacute;xeles de ancho. Tenga en cuenta que si &lt;code&gt;frame-resize-pixelwise&lt;/code&gt; es &lt;code&gt;nil&lt;/code&gt; , algunos administradores de ventanas pueden negarse a cumplir completamente con la solicitud si no aumenta / disminuye el ancho del marco a un m&amp;uacute;ltiplo del ancho de su car&amp;aacute;cter.</target>
        </trans-unit>
        <trans-unit id="46a593eb8b77337d54dd037277b7e1d96651e2a6" translate="yes" xml:space="preserve">
          <source>The optional fourth argument &lt;var&gt;pixelwise&lt;/var&gt;, if non-&lt;code&gt;nil&lt;/code&gt;, means to interpret &lt;var&gt;size&lt;/var&gt; in units of pixels, instead of lines and columns.</source>
          <target state="translated">El cuarto argumento opcional &lt;var&gt;pixelwise&lt;/var&gt; , si no es &lt;code&gt;nil&lt;/code&gt; , significa interpretar el &lt;var&gt;size&lt;/var&gt; en unidades de p&amp;iacute;xeles, en lugar de l&amp;iacute;neas y columnas.</target>
        </trans-unit>
        <trans-unit id="c1d2d517b24a513e68638fc126f01cf14f00b2b4" translate="yes" xml:space="preserve">
          <source>The optional fourth argument &lt;var&gt;window&lt;/var&gt; specifies the window for obtaining parameters such as width, horizontal scrolling, and so on. The default is to use the selected window&amp;rsquo;s parameters.</source>
          <target state="translated">La &lt;var&gt;window&lt;/var&gt; opcional del cuarto argumento especifica la ventana para obtener par&amp;aacute;metros como ancho, desplazamiento horizontal, etc. El valor predeterminado es utilizar los par&amp;aacute;metros de la ventana seleccionada.</target>
        </trans-unit>
        <trans-unit id="32d500e9fa66e6e098845ee8a4f7df222a3a64f2" translate="yes" xml:space="preserve">
          <source>The optional second argument &lt;var&gt;size&lt;/var&gt; determines the sizes of &lt;var&gt;window&lt;/var&gt; and/or the new window. If it is omitted or &lt;code&gt;nil&lt;/code&gt;, both windows are given equal sizes; if there is an odd line, it is allocated to the new window. If &lt;var&gt;size&lt;/var&gt; is a positive number, &lt;var&gt;window&lt;/var&gt; is given &lt;var&gt;size&lt;/var&gt; lines (or columns, depending on the value of &lt;var&gt;side&lt;/var&gt;). If &lt;var&gt;size&lt;/var&gt; is a negative number, the new window is given -&lt;var&gt;size&lt;/var&gt; lines (or columns).</source>
          <target state="translated">El &lt;var&gt;size&lt;/var&gt; segundo argumento opcional determina los tama&amp;ntilde;os de la &lt;var&gt;window&lt;/var&gt; y / o la nueva ventana. Si se omite o es &lt;code&gt;nil&lt;/code&gt; , ambas ventanas tienen el mismo tama&amp;ntilde;o; si hay una l&amp;iacute;nea impar, se asigna a la nueva ventana. Si el &lt;var&gt;size&lt;/var&gt; es un n&amp;uacute;mero positivo, a la &lt;var&gt;window&lt;/var&gt; se le &lt;var&gt;size&lt;/var&gt; l&amp;iacute;neas de tama&amp;ntilde;o (o columnas, seg&amp;uacute;n el valor del &lt;var&gt;side&lt;/var&gt; ). Si el &lt;var&gt;size&lt;/var&gt; es un n&amp;uacute;mero negativo, se da la nueva ventana: l&amp;iacute;neas (o columnas) de &lt;var&gt;size&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="3ea25d87cc8b43ad9b6088e35f93a262a0c645a2" translate="yes" xml:space="preserve">
          <source>The optional string &lt;var&gt;docstring&lt;/var&gt; is the documentation string of the variable &lt;var&gt;tabname&lt;/var&gt;. The property list &lt;var&gt;props&lt;/var&gt; is applied to the abbrev table (see &lt;a href=&quot;abbrev-table-properties#Abbrev-Table-Properties&quot;&gt;Abbrev Table Properties&lt;/a&gt;).</source>
          <target state="translated">La cadena opcional &lt;var&gt;docstring&lt;/var&gt; es la cadena de documentaci&amp;oacute;n de la variable &lt;var&gt;tabname&lt;/var&gt; . Los &lt;var&gt;props&lt;/var&gt; lista de propiedades se aplican a la tabla de abreviaturas (consulte &lt;a href=&quot;abbrev-table-properties#Abbrev-Table-Properties&quot;&gt;Propiedades de&lt;/a&gt; la tabla de abreviaturas ).</target>
        </trans-unit>
        <trans-unit id="c222f8e06e9d5450826a8e535233e76c3aefd4d7" translate="yes" xml:space="preserve">
          <source>The optional third argument &lt;var&gt;side&lt;/var&gt; determines the position of the new window relative to &lt;var&gt;window&lt;/var&gt;. If it is &lt;code&gt;nil&lt;/code&gt; or &lt;code&gt;below&lt;/code&gt;, the new window is placed below &lt;var&gt;window&lt;/var&gt;. If it is &lt;code&gt;above&lt;/code&gt;, the new window is placed above &lt;var&gt;window&lt;/var&gt;. In both these cases, &lt;var&gt;size&lt;/var&gt; specifies a total window height, in lines.</source>
          <target state="translated">La tercera opcional argumento &lt;var&gt;side&lt;/var&gt; determina la posici&amp;oacute;n de la ventana de nuevo con relaci&amp;oacute;n a &lt;var&gt;window&lt;/var&gt; . Si es &lt;code&gt;nil&lt;/code&gt; o &lt;code&gt;below&lt;/code&gt; , la nueva ventana se coloca debajo de la &lt;var&gt;window&lt;/var&gt; . Si est&amp;aacute; &lt;code&gt;above&lt;/code&gt; , la nueva ventana se coloca encima de la &lt;var&gt;window&lt;/var&gt; . En ambos casos, el &lt;var&gt;size&lt;/var&gt; especifica la altura total de la ventana, en l&amp;iacute;neas.</target>
        </trans-unit>
        <trans-unit id="b1108fc16d48a052af5da3a2a313ad2178d4f97c" translate="yes" xml:space="preserve">
          <source>The optional third argument specifies the argument list of &lt;code&gt;shell-mode&lt;/code&gt;. In this case, it takes no arguments (&lt;code&gt;nil&lt;/code&gt; is different from not specifying a value). In other cases, this might be something like &lt;code&gt;(file &amp;amp;optional overwrite)&lt;/code&gt;. You don&amp;rsquo;t have to specify the argument list, but if you do the byte compiler can check that the calls match the declaration.</source>
          <target state="translated">El tercer argumento opcional especifica la lista de argumentos del &lt;code&gt;shell-mode&lt;/code&gt; . En este caso, no toma argumentos ( &lt;code&gt;nil&lt;/code&gt; es diferente de no especificar un valor). En otros casos, esto podr&amp;iacute;a ser algo como &lt;code&gt;(file &amp;amp;optional overwrite)&lt;/code&gt; . No tiene que especificar la lista de argumentos, pero si lo hace, el compilador de bytes puede verificar que las llamadas coincidan con la declaraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="c91189f64260a86a1f42683fa6c4e4a546871bd4" translate="yes" xml:space="preserve">
          <source>The order of items in the menu is the same as the order of bindings in the keymap. Since &lt;code&gt;define-key&lt;/code&gt; puts new bindings at the front, you should define the menu items starting at the bottom of the menu and moving to the top, if you care about the order. When you add an item to an existing menu, you can specify its position in the menu using &lt;code&gt;define-key-after&lt;/code&gt; (see &lt;a href=&quot;modifying-menus#Modifying-Menus&quot;&gt;Modifying Menus&lt;/a&gt;).</source>
          <target state="translated">El orden de los elementos en el men&amp;uacute; es el mismo que el orden de los enlaces en el mapa de teclas. Dado que &lt;code&gt;define-key&lt;/code&gt; coloca nuevos enlaces al frente, debe definir los elementos del men&amp;uacute; comenzando en la parte inferior del men&amp;uacute; y movi&amp;eacute;ndose hacia la parte superior, si le interesa el orden. Cuando agrega un elemento a un men&amp;uacute; existente, puede especificar su posici&amp;oacute;n en el men&amp;uacute; usando &lt;code&gt;define-key-after&lt;/code&gt; (consulte &lt;a href=&quot;modifying-menus#Modifying-Menus&quot;&gt;Modificaci&amp;oacute;n de men&amp;uacute;s&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="1eb5686cd4b85626eb2e98bbf5e87da933ba4c3c" translate="yes" xml:space="preserve">
          <source>The order of specifications in &lt;var&gt;template&lt;/var&gt; need not correspond to the order of associations in &lt;var&gt;spec-alist&lt;/var&gt;.</source>
          <target state="translated">No es necesario que el orden de las especificaciones en la &lt;var&gt;template&lt;/var&gt; corresponda con el orden de las asociaciones en la &lt;var&gt;spec-alist&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="318b3cee5109ab1253568ca38f5b8b67f4c1e472" translate="yes" xml:space="preserve">
          <source>The ordering information is stored in a hash table on &lt;var&gt;symbol&lt;/var&gt;&amp;rsquo;s &lt;code&gt;list-order&lt;/code&gt; property. &lt;var&gt;symbol&lt;/var&gt; cannot refer to a lexical variable.</source>
          <target state="translated">La informaci&amp;oacute;n del pedido se almacena en una tabla hash en el &lt;var&gt;symbol&lt;/var&gt; &amp;lsquo;s &lt;code&gt;list-order&lt;/code&gt; propiedad. &lt;var&gt;symbol&lt;/var&gt; no puede referirse a una variable l&amp;eacute;xica.</target>
        </trans-unit>
        <trans-unit id="2226d00d51a88ba323aae0098cc9991d74673a2e" translate="yes" xml:space="preserve">
          <source>The ordering is determined by a depth-first traversal of each frame&amp;rsquo;s window tree, retrieving the live windows which are the leaf nodes of the tree (see &lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;Windows and Frames&lt;/a&gt;). If the minibuffer is active, the minibuffer window is included too. The ordering is cyclic, so the last window in the sequence is followed by the first one.</source>
          <target state="translated">El orden se determina mediante un recorrido en profundidad del &amp;aacute;rbol de ventanas de cada marco, recuperando las ventanas en vivo que son los nodos hoja del &amp;aacute;rbol (consulte &lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;Ventanas y marcos&lt;/a&gt; ). Si el minib&amp;uacute;fer est&amp;aacute; activo, tambi&amp;eacute;n se incluye la ventana del minib&amp;uacute;fer. El orden es c&amp;iacute;clico, por lo que a la &amp;uacute;ltima ventana de la secuencia le sigue la primera.</target>
        </trans-unit>
        <trans-unit id="f22b797aae6cb0756380535cd8ae770baa37540b" translate="yes" xml:space="preserve">
          <source>The ordinary &lt;em&gt;Lisp debugger&lt;/em&gt; provides the ability to suspend evaluation of a form. While evaluation is suspended (a state that is commonly known as a &lt;em&gt;break&lt;/em&gt;), you may examine the run time stack, examine the values of local or global variables, or change those values. Since a break is a recursive edit, all the usual editing facilities of Emacs are available; you can even run programs that will enter the debugger recursively. See &lt;a href=&quot;recursive-editing#Recursive-Editing&quot;&gt;Recursive Editing&lt;/a&gt;.</source>
          <target state="translated">El &lt;em&gt;depurador Lisp&lt;/em&gt; ordinario proporciona la capacidad de suspender la evaluaci&amp;oacute;n de un formulario. Mientras la evaluaci&amp;oacute;n est&amp;aacute; suspendida (un estado que se conoce com&amp;uacute;nmente como &lt;em&gt;interrupci&amp;oacute;n&lt;/em&gt; ), puede examinar la pila de tiempo de ejecuci&amp;oacute;n, examinar los valores de las variables locales o globales o cambiar esos valores. Dado que una pausa es una edici&amp;oacute;n recursiva, todas las funciones de edici&amp;oacute;n habituales de Emacs est&amp;aacute;n disponibles; incluso puede ejecutar programas que entrar&amp;aacute;n en el depurador de forma recursiva. Consulte &lt;a href=&quot;recursive-editing#Recursive-Editing&quot;&gt;Edici&amp;oacute;n recursiva&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4f996d904bee479b366f2c2d0b17fcd959ce9c44" translate="yes" xml:space="preserve">
          <source>The ordinary elements of the display table are indexed by character codes; the element at index &lt;var&gt;c&lt;/var&gt; says how to display the character code &lt;var&gt;c&lt;/var&gt;. The value should be &lt;code&gt;nil&lt;/code&gt; (which means to display the character &lt;var&gt;c&lt;/var&gt; according to the usual display conventions; see &lt;a href=&quot;usual-display#Usual-Display&quot;&gt;Usual Display&lt;/a&gt;), or a vector of glyph codes (which means to display the character &lt;var&gt;c&lt;/var&gt; as those glyphs; see &lt;a href=&quot;glyphs#Glyphs&quot;&gt;Glyphs&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="623ff6e7f140985ddebe6c27ee8d097d687ce22b" translate="yes" xml:space="preserve">
          <source>The original argument list, modified with the actual connection information, is available via the &lt;code&gt;process-contact&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d6da09d571fe6e045570a75658c815203791d82" translate="yes" xml:space="preserve">
          <source>The original argument list, possibly modified by later configuration, is available via the function &lt;code&gt;process-contact&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="783a67e957204d836894a368a238fa5382b7ae1b" translate="yes" xml:space="preserve">
          <source>The other Emacs prefix keys are</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e87cdc0bc797ddea7fd188f93a5689b5c8765dd" translate="yes" xml:space="preserve">
          <source>The outer position is specified by and can be set via the &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;top&lt;/code&gt; frame parameters (see &lt;a href=&quot;position-parameters#Position-Parameters&quot;&gt;Position Parameters&lt;/a&gt;). For a normal, top-level frame these parameters usually represent its absolute position (see below) with respect to its display&amp;rsquo;s origin. For a child frame (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;) these parameters represent its position relative to the native position (see below) of its parent frame. For frames on text terminals the values of these parameters are meaningless and always zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b61b570125b083d2bf973be5f7d446a50b1ff1e" translate="yes" xml:space="preserve">
          <source>The output characters are displayed in the echo area.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f760a648322efbb4e113d3ec65ce0e0be54106de" translate="yes" xml:space="preserve">
          <source>The output characters are inserted into &lt;var&gt;buffer&lt;/var&gt; at point. Point advances as characters are inserted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="847115e1679c724c2cb4444c6559f9fe7c4d8063" translate="yes" xml:space="preserve">
          <source>The output characters are inserted into the buffer that &lt;var&gt;marker&lt;/var&gt; points into, at the marker position. The marker position advances as characters are inserted. The value of point in the buffer has no effect on printing when the stream is a marker, and this kind of printing does not move point (except that if the marker points at or before the position of point, point advances with the surrounding text, as usual).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da1c7a7c56317e365d871f2788f8d99dcda43cbf" translate="yes" xml:space="preserve">
          <source>The output characters are passed to &lt;var&gt;function&lt;/var&gt;, which is responsible for storing them away. It is called with a single character as argument, as many times as there are characters to be output, and is responsible for storing the characters wherever you want to put them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97b90b29b23cb79eed0c42878f18676a7f82018f" translate="yes" xml:space="preserve">
          <source>The output from a synchronous subprocess is generally decoded using a coding system, much like text read from a file. The input sent to a subprocess by &lt;code&gt;call-process-region&lt;/code&gt; is encoded using a coding system, much like text written into a file. See &lt;a href=&quot;coding-systems#Coding-Systems&quot;&gt;Coding Systems&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bf1d258cf8161b4fe6f560101ccee767cdb33ab" translate="yes" xml:space="preserve">
          <source>The output string need not be newly-allocated. For example, if &lt;code&gt;x&lt;/code&gt; is the string &lt;code&gt;&quot;foo&quot;&lt;/code&gt;, the expressions &lt;code&gt;(eq x
(format x))&lt;/code&gt; and &lt;code&gt;(eq x (format &quot;%s&quot; x))&lt;/code&gt; might both yield &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3615d741950845df06c53b6a7f56b4c8a5a4ebc" translate="yes" xml:space="preserve">
          <source>The output that an asynchronous subprocess writes to its standard output stream is passed to a function called the &lt;em&gt;filter function&lt;/em&gt;. The default filter function simply inserts the output into a buffer, which is called the associated buffer of the process (see &lt;a href=&quot;process-buffers#Process-Buffers&quot;&gt;Process Buffers&lt;/a&gt;). If the process has no buffer then the default filter discards the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ae9bdf1de6c1b3dee1b8c77f2a066e71cd4bda1" translate="yes" xml:space="preserve">
          <source>The output to the filter may come in chunks of any size. A program that produces the same output twice in a row may send it as one batch of 200 characters one time, and five batches of 40 characters the next. If the filter looks for certain text strings in the subprocess output, make sure to handle the case where one of these strings is split across two or more batches of output; one way to do this is to insert the received text into a temporary buffer, which can then be searched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58e6196b6fc1654a77feeadf775e93f2d335a94f" translate="yes" xml:space="preserve">
          <source>The outside window configuration is saved and restored if &lt;code&gt;edebug-save-windows&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt; (see &lt;a href=&quot;edebug-options#Edebug-Options&quot;&gt;Edebug Options&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="443f8535af5feac9009b9eb74d0bd0bbb542eca8" translate="yes" xml:space="preserve">
          <source>The overlay-arrow string is displayed in any given buffer if the value of &lt;code&gt;overlay-arrow-position&lt;/code&gt; in that buffer points into that buffer. Thus, it is possible to display multiple overlay arrow strings by creating buffer-local bindings of &lt;code&gt;overlay-arrow-position&lt;/code&gt;. However, it is usually cleaner to use &lt;code&gt;overlay-arrow-variable-list&lt;/code&gt; to achieve this result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c4e900964a2a9c8ee2b6d6918d8e7e1d4ae357a" translate="yes" xml:space="preserve">
          <source>The package&amp;rsquo;s main or only group should be a member of one or more of the standard customization groups. (To display the full list of them, use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="056f01b4a46a37e98b55727e87a95ecf4b9b9d41" translate="yes" xml:space="preserve">
          <source>The parameter&amp;rsquo;s second element is either one of the symbols &lt;code&gt;window&lt;/code&gt; or &lt;code&gt;frame&lt;/code&gt;, or a list whose elements are the buffer shown in &lt;var&gt;window&lt;/var&gt; before, that buffer&amp;rsquo;s window start and window point positions, and &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s height at that time. If that buffer is still live when &lt;var&gt;window&lt;/var&gt; is quit, then this function may reuse &lt;var&gt;window&lt;/var&gt; to display it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0a39a896d6a8873b9effa21ba5ee259cb0e77fd" translate="yes" xml:space="preserve">
          <source>The parameters described below provide support for resizing a frame by dragging its internal borders with the mouse. They also allow moving a frame with the mouse by dragging the header line of its topmost or the mode line of its bottommost window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c21c17502bd64c3a71bdbc3fc9084a51f8eb952" translate="yes" xml:space="preserve">
          <source>The parent keymap of all &lt;code&gt;local-function-key-map&lt;/code&gt; (q.v.) instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83241215538033ded1beeee2b0b4fdef97b639a3" translate="yes" xml:space="preserve">
          <source>The parsing facilities of Emacs consider a string as a single token. The usual syntactic meanings of the characters in the string are suppressed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4782b103645e67a505ec03626df6bb33c90727f" translate="yes" xml:space="preserve">
          <source>The parsing skips spaces and tabs at the beginning of &lt;var&gt;string&lt;/var&gt;, then reads as much of &lt;var&gt;string&lt;/var&gt; as it can interpret as a number in the given base. (On some systems it ignores other whitespace at the beginning, not just spaces and tabs.) If &lt;var&gt;string&lt;/var&gt; cannot be interpreted as a number, this function returns 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d08be782a53bbda1ba8dddd6886664346e48d767" translate="yes" xml:space="preserve">
          <source>The parsing technique used by SMIE does not allow tokens to behave differently in different contexts. For most programming languages, this manifests itself by precedence conflicts when converting the BNF grammar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbb6c29935ae3da3bb37e989df0289bf03fba226" translate="yes" xml:space="preserve">
          <source>The part of the scroll bar on which the click occurred. It is one of the symbols &lt;code&gt;handle&lt;/code&gt; (the scroll bar handle), &lt;code&gt;above-handle&lt;/code&gt; (the area above the handle), &lt;code&gt;below-handle&lt;/code&gt; (the area below the handle), &lt;code&gt;up&lt;/code&gt; (the up arrow at one end of the scroll bar), or &lt;code&gt;down&lt;/code&gt; (the down arrow at one end of the scroll bar).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1168a5f90813f2fcee380e2f6e20037287e336c0" translate="yes" xml:space="preserve">
          <source>The parts of a lambda expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b276da95227712619d809e264d610c7532aff153" translate="yes" xml:space="preserve">
          <source>The path to a sound file to play when the notification pops up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eb392db1262ef722d3f867992b904857965d5b1" translate="yes" xml:space="preserve">
          <source>The pcase macro</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe752af47d77462d05ad0c5ca61909d42248960" translate="yes" xml:space="preserve">
          <source>The pcase patterns that are useful for destructuring bindings are generally those described in &lt;a href=&quot;backquote-patterns#Backquote-Patterns&quot;&gt;Backquote Patterns&lt;/a&gt;, since they express a specification of the structure of objects that will match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85e5e6070e7ace2a864fd54495dc677c9fe2f335" translate="yes" xml:space="preserve">
          <source>The percentage of the CPU time used by the process since it started. The corresponding &lt;var&gt;value&lt;/var&gt; is a floating-point number between 0 and 100.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74a0e3e0b308a0aa69a778516c8eba726d6c3004" translate="yes" xml:space="preserve">
          <source>The percentage of the buffer text above the &lt;strong&gt;top&lt;/strong&gt; of window, or &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5174826a919540ce04dc971e49d9dcc6a90c357a" translate="yes" xml:space="preserve">
          <source>The percentage of the buffer text that is above the &lt;strong&gt;bottom&lt;/strong&gt; of the window (which includes the text visible in the window, as well as the text above the top), plus &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cf9d906bacdebd3353589bccc8f1c56cff833ae" translate="yes" xml:space="preserve">
          <source>The percentage of the total physical memory installed on the machine used by the process&amp;rsquo;s resident set. The value is a floating-point number between 0 and 100.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="745b0bf167534b10d93c434c0e1e395113673fc2" translate="yes" xml:space="preserve">
          <source>The percentages of text above both the &lt;strong&gt;top&lt;/strong&gt; and the &lt;strong&gt;bottom&lt;/strong&gt; of the window, separated by &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0de9363c585da842dc94d7cb92e52e9a964df31b" translate="yes" xml:space="preserve">
          <source>The pixel heights of a window&amp;rsquo;s mode and header line can be retrieved with the functions given below. Their return value is usually accurate unless the window has not been displayed before: In that case, the return value is based on an estimate of the font used for the window&amp;rsquo;s frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43c14cab8a2b2bb269e27efdcb44906c088989c3" translate="yes" xml:space="preserve">
          <source>The pixel size of the font used to open the font.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d3304078e97e6d9fcd53507ef3658705f5b3745" translate="yes" xml:space="preserve">
          <source>The pixel size of the font.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5e8626e71efeeae5801637fe0d104f5743bf82a" translate="yes" xml:space="preserve">
          <source>The pixel widths of the left and right fringes in this window. A value of -1 means use the values of the frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a476ed7f718dc326836a3ad0a813832b8273668d" translate="yes" xml:space="preserve">
          <source>The place where you insert &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="489704a85a579cab25a1f96c62ae86111efc895a" translate="yes" xml:space="preserve">
          <source>The places within a function where Edebug can stop execution are called &lt;em&gt;stop points&lt;/em&gt;. These occur both before and after each subexpression that is a list, and also after each variable reference. Here we use periods to show the stop points in the function &lt;code&gt;fac&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31d74db390eea1284d7b4e181bb2f481d81da20c" translate="yes" xml:space="preserve">
          <source>The plural &amp;ldquo;frames&amp;rdquo; in the previous paragraph is deliberate: while Emacs itself has only one selected frame, Emacs can have frames on many different terminals (recall that a connection to a window system counts as a terminal), and each terminal has its own idea of which frame has input focus. When you set the input focus to a frame, you set the focus for that frame&amp;rsquo;s terminal, but frames on other terminals may still remain focused.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce65815e1a28f37a72576e7cbec00483473f471a" translate="yes" xml:space="preserve">
          <source>The point of running a program through the shell, rather than directly with &lt;code&gt;make-process&lt;/code&gt; or &lt;code&gt;start-process&lt;/code&gt;, is so that you can employ shell features such as wildcards in the arguments. It follows that if you include any arbitrary user-specified arguments in the command, you should quote them with &lt;code&gt;shell-quote-argument&lt;/code&gt; first, so that any special shell characters do &lt;em&gt;not&lt;/em&gt; have their special shell meanings. See &lt;a href=&quot;shell-arguments#Shell-Arguments&quot;&gt;Shell Arguments&lt;/a&gt;. Of course, when executing commands based on user input you should also consider the security implications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87e05b91e6233e17b204f23015097c7049303099" translate="yes" xml:space="preserve">
          <source>The position at which the line being indented begins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45b07b40e31e169ede72cfe22029fabdc54bc98b" translate="yes" xml:space="preserve">
          <source>The position in the buffer for which the line number is known, or zero meaning none is known. If it is -1, don&amp;rsquo;t display the line number as long as the window shows that buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb41d39783192e6aaaa6d09fb0dcd6b9d067af6" translate="yes" xml:space="preserve">
          <source>The position in the string where the click occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c5737b61d1133d53c07a40026bed5c9ffc696e8" translate="yes" xml:space="preserve">
          <source>The position of a frame on its display.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="887258f07e45dd70c1b6e53e04e7f416f5a7b904" translate="yes" xml:space="preserve">
          <source>The position of point, as an integer (see &lt;a href=&quot;point#Point&quot;&gt;Point&lt;/a&gt;). No I/O.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6403590e242da2f2207180f395d2c07e997ed88a" translate="yes" xml:space="preserve">
          <source>The position of the frame on the screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="255ed0f6aab596c870f5c23defcace62009a4b51" translate="yes" xml:space="preserve">
          <source>The position of the mark, as an integer. No I/O.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5dd7b877105dceee61a4c59515a66464dc839be" translate="yes" xml:space="preserve">
          <source>The position of the tool bar when Emacs was built with GTK+. Its value can be one of &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;bottom&lt;/code&gt;&lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;. The default is &lt;code&gt;top&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02d4165115759fe0837c49ced5e39ea743ea4c2a" translate="yes" xml:space="preserve">
          <source>The position of the top left corner of the native frame specifies the &lt;em&gt;native position&lt;/em&gt; of the frame. (1)&amp;ndash;(3) in the drawing above indicate that position for the various builds:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="833e5a5239b46b2d55c382c18b023ecd55ad49ca" translate="yes" xml:space="preserve">
          <source>The position of the upper left corner of the outer frame (indicated by &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8410a3b5f6f9e6c84d904b172515815de91f0dd2" translate="yes" xml:space="preserve">
          <source>The position, in pixels, of the left outer edge of the frame with respect to the left edge of the frame&amp;rsquo;s display or parent frame. It can be specified in one of the following ways.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="159bfe6471c89158a22673c87af74200df998625" translate="yes" xml:space="preserve">
          <source>The possible values for an actual subprocess are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca9c70ab4f2597d1a37484e4797e646e200cc36c" translate="yes" xml:space="preserve">
          <source>The preceding examples all use sequencing patterns which include the &lt;var&gt;symbol&lt;/var&gt; sub-pattern in some way. Here are some important details about that usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a258153ccf268c951438b192904eade1c144e0c6" translate="yes" xml:space="preserve">
          <source>The precise effect of adding a value depends on the customization type of &lt;var&gt;symbol&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f4009f97f05ca5f3cb51352b6efa1949bc23635" translate="yes" xml:space="preserve">
          <source>The precise meaning of a value of &lt;code&gt;nil&lt;/code&gt; for this option depends on the toolkit used. Dragging the external border with the mouse is done character-wise provided the window manager is willing to process the corresponding size hints. Calling &lt;code&gt;set-frame-size&lt;/code&gt; (see below) with arguments that do not specify the frame size as an integer multiple of its character size, however, may: be ignored, cause a rounding (GTK+), or be accepted (Lucid, Motif, MS-Windows).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4aa737004ad2535ebe02bb899113024dc279e7a" translate="yes" xml:space="preserve">
          <source>The precise meaning of the event parameters and the way these parameters are used to display the help-echo text are described in &lt;a href=&quot;special-properties#Text-help_002decho&quot;&gt;Text help-echo&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c34b9bbf535e3965b815554ff0467b7f149d988d" translate="yes" xml:space="preserve">
          <source>The previous buffer is usually the buffer shown before the buffer currently shown in &lt;var&gt;window&lt;/var&gt;. However, a buffer that has been buried or killed, or has been already shown by a recent invocation of &lt;code&gt;switch-to-prev-buffer&lt;/code&gt;, does not qualify as previous buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28721bd17842d6dccb7fd270c15c4194e8d5baba" translate="yes" xml:space="preserve">
          <source>The primary use of this function is as a subroutine by constructs that define or alter functions, like &lt;code&gt;defun&lt;/code&gt; or &lt;code&gt;advice-add&lt;/code&gt; (see &lt;a href=&quot;advising-functions#Advising-Functions&quot;&gt;Advising Functions&lt;/a&gt;). You can also use it to give a symbol a function definition that is not a function, e.g., a keyboard macro (see &lt;a href=&quot;keyboard-macros#Keyboard-Macros&quot;&gt;Keyboard Macros&lt;/a&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba9b5b776cc5667a85cd400075ca47d55ca09c2c" translate="yes" xml:space="preserve">
          <source>The primitive that extracts text from the buffer along with its properties is &lt;code&gt;buffer-substring&lt;/code&gt;. Before examining the properties, this function runs the abnormal hook &lt;code&gt;buffer-access-fontify-functions&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a90a548ae4af1e7a922a25155c161c7315ce8da" translate="yes" xml:space="preserve">
          <source>The primitive way to create a byte-code object is with &lt;code&gt;make-byte-code&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4906a197371ef069deb8bf9326d82ffeae4a7205" translate="yes" xml:space="preserve">
          <source>The primitives for changing properties apply to a specified range of text in a buffer or string. The function &lt;code&gt;set-text-properties&lt;/code&gt; (see end of section) sets the entire property list of the text in that range; more often, it is useful to add, change, or delete just certain properties specified by name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86e6972405ceac8fb0c2ebcbb1d084d74c15e137" translate="yes" xml:space="preserve">
          <source>The principal function for creating a hash table is &lt;code&gt;make-hash-table&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e0ef3a61ced98eb5fb2f872d19a707b38cfe6c5" translate="yes" xml:space="preserve">
          <source>The principal purpose of coding systems is for use in reading and writing files. The function &lt;code&gt;insert-file-contents&lt;/code&gt; uses a coding system to decode the file data, and &lt;code&gt;write-region&lt;/code&gt; uses one to encode the buffer contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55a4ae7918bc297ffd67f49ed5d08ef37025a3dc" translate="yes" xml:space="preserve">
          <source>The print name cell always holds a string, and cannot be changed. Each of the other three cells can be set to any Lisp object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de95f3a3b46a96121feaa824d316764b0883107a" translate="yes" xml:space="preserve">
          <source>The print name cell holds the string that is the name of a symbol. Since symbols are represented textually by their names, it is important not to have two symbols with the same name. The Lisp reader ensures this: every time it reads a symbol, it looks for an existing symbol with the specified name before it creates a new one. To get a symbol&amp;rsquo;s name, use the function &lt;code&gt;symbol-name&lt;/code&gt; (see &lt;a href=&quot;creating-symbols#Creating-Symbols&quot;&gt;Creating Symbols&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bbc34bf200918e9a448ed9f1f2b1f066e970b26" translate="yes" xml:space="preserve">
          <source>The printed form represents up to 8 boolean values as a single character:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12644b40b0774ec2e789694cfc7abf62c019cde5" translate="yes" xml:space="preserve">
          <source>The printed representation and read syntax for a byte-code function object is like that for a vector, with an additional &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93d512217d9e0e619c1036f6280703870832034c" translate="yes" xml:space="preserve">
          <source>The printed representation for a hash table consists of &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="861954f964e54658232242a23ea2b7ee8994c956" translate="yes" xml:space="preserve">
          <source>The printed representation for floating-point numbers requires either a decimal point (with at least one digit following), an exponent, or both. For example, &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b99966b7387dd5ed35f73f081dbe0bcb6cc5e9b" translate="yes" xml:space="preserve">
          <source>The printed representation of a bool-vector is like a string, except that it begins with &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a73160413b74c1de6679be1eae2e2a5562706a0" translate="yes" xml:space="preserve">
          <source>The printed representation of a char-table is like a vector except that there is an extra &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf4d2204ede2ec7542b976b427c02ab6ac905744" translate="yes" xml:space="preserve">
          <source>The printed representation of a vector consists of a left square bracket, the elements, and a right square bracket. This is also the read syntax. Like numbers and strings, vectors are considered constants for evaluation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54bdda2e2c897bbee3fd6ea2ce6150e050bbdbf0" translate="yes" xml:space="preserve">
          <source>The printed representation of an interned symbol whose name is an empty string (see &lt;a href=&quot;symbol-type#Symbol-Type&quot;&gt;Symbol Type&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6b4f81ab9ddc9b498748d084ab114136d13e0d2" translate="yes" xml:space="preserve">
          <source>The printed representation of an uninterned symbol whose name is &lt;var&gt;foo&lt;/var&gt; is &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0d146789656a2ca889b28283579fa331b709ea3" translate="yes" xml:space="preserve">
          <source>The printed representation of records is &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06414aa54aa49ed289b3f642280e72ea07845a4c" translate="yes" xml:space="preserve">
          <source>The priority matters when two or more overlays cover the same character and both specify the same property; the one whose &lt;code&gt;priority&lt;/code&gt; value is larger overrides the other. (For the &lt;code&gt;face&lt;/code&gt; property, the higher priority overlay&amp;rsquo;s value does not completely override the other value; instead, its face attributes override the face attributes of the lower priority &lt;code&gt;face&lt;/code&gt; property.) If two overlays have the same priority value, and one is nested in the other, then the inner one will prevail over the outer one. If neither is nested in the other then you should not make assumptions about which overlay will prevail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e73afd850ba19d88fffc870b34d4546ef04a4eba" translate="yes" xml:space="preserve">
          <source>The process ID of the parent process, a number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53e1a9ea303ee6836b551778e58f2f51e300eedc" translate="yes" xml:space="preserve">
          <source>The process group ID of the process, a number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ccf440991f7f0652996b8ab7560a4dbe5b3aace" translate="yes" xml:space="preserve">
          <source>The process status, as &lt;code&gt;process-status&lt;/code&gt; should return it. This is a Lisp symbol, a cons cell, or a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69ecf0580268b93750c7e889a04309c3293a5f2b" translate="yes" xml:space="preserve">
          <source>The processes are shown in a buffer named</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c8f30c53cf4f4d39e77991527ad73dbc1793851" translate="yes" xml:space="preserve">
          <source>The product name of the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cd39baec68fc236a0a093df363f5e95bd2c4fb6" translate="yes" xml:space="preserve">
          <source>The profiler report buffer shows, on each line, a function that was called, followed by how much resources (cpu or memory) it used in absolute and percentage terms since profiling started. If a given line has a &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9d8457c45fc52a797df2f33e4e4ba6a34bec404" translate="yes" xml:space="preserve">
          <source>The prompt string can use &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ea085744f883658e286f289c21d5bb3c923b174" translate="yes" xml:space="preserve">
          <source>The proper place to use &lt;code&gt;defalias&lt;/code&gt; is where a specific function name is being defined&amp;mdash;especially where that name appears explicitly in the source file being loaded. This is because &lt;code&gt;defalias&lt;/code&gt; records which file defined the function, just like &lt;code&gt;defun&lt;/code&gt; (see &lt;a href=&quot;unloading#Unloading&quot;&gt;Unloading&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d90fe58bfa2b87a1b1cbc6838a53a60deea67366" translate="yes" xml:space="preserve">
          <source>The proper way to construct a keymap with a parent is to use &lt;code&gt;set-keymap-parent&lt;/code&gt;; if you have code that directly constructs a keymap with a parent, please convert the program to use &lt;code&gt;set-keymap-parent&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dfec31a43b4f7ab97faaddb57234977bb256c37" translate="yes" xml:space="preserve">
          <source>The property list cell normally should hold a correctly formatted property list. To get a symbol&amp;rsquo;s property list, use the function &lt;code&gt;symbol-plist&lt;/code&gt;. See &lt;a href=&quot;symbol-properties#Symbol-Properties&quot;&gt;Symbol Properties&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c911a8445b3bd7bfea7954dcdd17b841dcbd3fcb" translate="yes" xml:space="preserve">
          <source>The property&amp;rsquo;s value for the character before point applies if it is non-&lt;code&gt;nil&lt;/code&gt; and rear-sticky, and the property&amp;rsquo;s value for the character after point applies if it is non-&lt;code&gt;nil&lt;/code&gt; and front-sticky. (For mouse clicks, the position of the click is used instead of the position of point.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78c51406ca787ccde17c730ea362d97d0f2b5d6a" translate="yes" xml:space="preserve">
          <source>The purpose of &lt;code&gt;throw&lt;/code&gt; is to return from a return point previously established with &lt;code&gt;catch&lt;/code&gt;. The argument &lt;var&gt;tag&lt;/var&gt; is used to choose among the various existing return points; it must be &lt;code&gt;eq&lt;/code&gt; to the value specified in the &lt;code&gt;catch&lt;/code&gt;. If multiple return points match &lt;var&gt;tag&lt;/var&gt;, the innermost one is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a798f48d5361b3f20f9b8da5927f51db1ca4bd70" translate="yes" xml:space="preserve">
          <source>The purpose of records is to allow programmers to create objects with new types that are not built into Emacs. They are used as the underlying representation of &lt;code&gt;cl-defstruct&lt;/code&gt; and &lt;code&gt;defclass&lt;/code&gt; instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b48773be77ed3bf897730ad62b02207f496fa84" translate="yes" xml:space="preserve">
          <source>The purpose of this variable is to prevent unreasonably large images from accidentally being loaded into Emacs. It only takes effect the first time an image is loaded. Once an image is placed in the image cache, it can always be displayed, even if the value of &lt;code&gt;max-image-size&lt;/code&gt; is subsequently changed (see &lt;a href=&quot;image-cache#Image-Cache&quot;&gt;Image Cache&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b698db8f7ae03128e22b00ae5ae3b89fa737eaf" translate="yes" xml:space="preserve">
          <source>The range of values for a fixnum depends on the machine. The minimum range is -536,870,912 to 536,870,911 (30 bits; i.e., -2**29 to 2**29 - 1) but many machines provide a wider range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af85b0412ddc48c46d5b6e80df88faf36ad2e739" translate="yes" xml:space="preserve">
          <source>The range of values for a fixnum depends on the machine. The minimum range is -536,870,912 to 536,870,911 (30 bits; i.e., -2**29 to 2**29 - 1), but many machines provide a wider range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cce27534771922ba161893777df990814edba95c" translate="yes" xml:space="preserve">
          <source>The range of values for bignums is limited by the amount of main memory, by machine characteristics such as the size of the word used to represent a bignum&amp;rsquo;s exponent, and by the &lt;code&gt;integer-width&lt;/code&gt; variable. These limits are typically much more generous than the limits for fixnums. A bignum is never numerically equal to a fixnum; Emacs always represents an integer in fixnum range as a fixnum, not a bignum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88fcc9a379dd1cc063bcdc17672afd2ddd066644" translate="yes" xml:space="preserve">
          <source>The raw prefix argument value used by the previous command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="188580ce5aed7a8d00ced05add7b99d84193146d" translate="yes" xml:space="preserve">
          <source>The raw prefix argument. (Note that this &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="918eb5fe78ecdeb2b74cf1c707d70d8317c7c8ca" translate="yes" xml:space="preserve">
          <source>The raw process status, as returned by the &lt;code&gt;wait&lt;/code&gt; system call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d40522328efd69f1813ecc9395f2a99749405bb" translate="yes" xml:space="preserve">
          <source>The read syntax &lt;code&gt;#'&lt;/code&gt; is a short-hand for using &lt;code&gt;function&lt;/code&gt;. The following forms are all equivalent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0ccfae7f5d50ab8dd7bf0125292e2e7d92e715d" translate="yes" xml:space="preserve">
          <source>The read syntax and printed representation for lists are identical, and consist of a left parenthesis, an arbitrary number of elements, and a right parenthesis. Here are examples of lists:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="699968d5ddfd6c3b251c3bfee7172adb575ecba8" translate="yes" xml:space="preserve">
          <source>The read syntax for a string is a double-quote, an arbitrary number of characters, and another double-quote, &lt;code&gt;&quot;like this&quot;&lt;/code&gt;. To include a double-quote in a string, precede it with a backslash; thus, &lt;code&gt;&quot;\&quot;&quot;&lt;/code&gt; is a string containing just one double-quote character. Likewise, you can include a backslash by preceding it with another backslash, like this: &lt;code&gt;&quot;this \\ is a single embedded
backslash&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2db9c5ad71fdc5297e7b04c37c25b525f29392e3" translate="yes" xml:space="preserve">
          <source>The read syntax for floating-point numbers requires either a decimal point, an exponent, or both. Optional signs (&amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="468ea3ba2253c757dfcdac67156c541df702374c" translate="yes" xml:space="preserve">
          <source>The read syntax for integers is a sequence of (base ten) digits with an optional sign at the beginning and an optional period at the end. The printed representation produced by the Lisp interpreter never has a leading &amp;lsquo;</source>
          <target state="translated">La sintaxis de lectura para n&amp;uacute;meros enteros es una secuencia de d&amp;iacute;gitos (base diez) con un signo opcional al principio y un punto opcional al final. La representaci&amp;oacute;n impresa producida por el int&amp;eacute;rprete Lisp nunca tiene un</target>
        </trans-unit>
        <trans-unit id="a0df8f0e56b27b7fdf3f7492d928c4cf0eb4466b" translate="yes" xml:space="preserve">
          <source>The read syntax for meta characters uses &amp;lsquo;</source>
          <target state="translated">La sintaxis de lectura para metacaracteres usa '</target>
        </trans-unit>
        <trans-unit id="ef7e662450af28ad76f1d8a4260adb6e69ae8a34" translate="yes" xml:space="preserve">
          <source>The reason for a mode to change this variable instead of &lt;code&gt;revert-buffer-function&lt;/code&gt; is to avoid duplicating or replacing the rest of what &lt;code&gt;revert-buffer&lt;/code&gt; does: asking for confirmation, clearing the undo list, deciding the proper major mode, and running the hooks listed below.</source>
          <target state="translated">La raz&amp;oacute;n de un modo para cambiar esta variable en lugar de &lt;code&gt;revert-buffer-function&lt;/code&gt; es evitar duplicar o reemplazar el resto de lo que hace &lt;code&gt;revert-buffer&lt;/code&gt; : pedir confirmaci&amp;oacute;n, borrar la lista de deshacer, decidir el modo principal adecuado y ejecutar los ganchos enumerados a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="4a9fa0be0804d13fd54899e6b26f2ba4d73ac7bd" translate="yes" xml:space="preserve">
          <source>The reason for the name &lt;code&gt;lazy&lt;/code&gt; is that the other composite widgets convert their inferior widgets to internal form when the widget is instantiated in a buffer. This conversion is recursive, so the inferior widgets will convert &lt;em&gt;their&lt;/em&gt; inferior widgets. If the data structure is itself recursive, this conversion is an infinite recursion. The &lt;code&gt;lazy&lt;/code&gt; widget prevents the recursion: it convert its &lt;code&gt;:type&lt;/code&gt; argument only when needed.</source>
          <target state="translated">La raz&amp;oacute;n del nombre &lt;code&gt;lazy&lt;/code&gt; es que los otros widgets compuestos convierten sus widgets inferiores a un formato interno cuando se crea una instancia del widget en un b&amp;uacute;fer. Esta conversi&amp;oacute;n es recursiva, por lo que los widgets inferiores convertir&amp;aacute;n &lt;em&gt;sus&lt;/em&gt; widgets inferiores. Si la estructura de datos es recursiva en s&amp;iacute; misma, esta conversi&amp;oacute;n es una recursi&amp;oacute;n infinita. El widget &lt;code&gt;lazy&lt;/code&gt; evita la recursividad: convierte su argumento &lt;code&gt;:type&lt;/code&gt; solo cuando es necesario.</target>
        </trans-unit>
        <trans-unit id="97c008ed1abdd793cef86b5d0eab947dc6ccb62d" translate="yes" xml:space="preserve">
          <source>The reason for this somewhat complex behavior is that it lets users easily toggle the minor mode interactively, and also lets the minor mode be easily enabled in a mode hook, like this:</source>
          <target state="translated">La raz√≥n de este comportamiento algo complejo es que permite a los usuarios cambiar f√°cilmente el modo menor de forma interactiva,y tambi√©n permite que el modo menor se habilite f√°cilmente en un modo gancho,como este:</target>
        </trans-unit>
        <trans-unit id="ab43773cfe02cb70d41dd331c0415859809fddf1" translate="yes" xml:space="preserve">
          <source>The recommended way to add a hook function to a hook is by calling &lt;code&gt;add-hook&lt;/code&gt; (see &lt;a href=&quot;setting-hooks#Setting-Hooks&quot;&gt;Setting Hooks&lt;/a&gt;). The hook functions may be any of the valid kinds of functions that &lt;code&gt;funcall&lt;/code&gt; accepts (see &lt;a href=&quot;what-is-a-function#What-Is-a-Function&quot;&gt;What Is a Function&lt;/a&gt;). Most normal hook variables are initially void; &lt;code&gt;add-hook&lt;/code&gt; knows how to deal with this. You can add hooks either globally or buffer-locally with &lt;code&gt;add-hook&lt;/code&gt;.</source>
          <target state="translated">La forma recomendada de agregar una funci&amp;oacute;n de gancho a un gancho es llamando a &lt;code&gt;add-hook&lt;/code&gt; (ver &lt;a href=&quot;setting-hooks#Setting-Hooks&quot;&gt;Configuraci&amp;oacute;n de Hooks&lt;/a&gt; ). Las funciones de gancho pueden ser cualquiera de los tipos v&amp;aacute;lidos de funciones que acepta &lt;code&gt;funcall&lt;/code&gt; (ver &lt;a href=&quot;what-is-a-function#What-Is-a-Function&quot;&gt;&amp;iquest;Qu&amp;eacute; es una funci&amp;oacute;n?&lt;/a&gt; ). La mayor&amp;iacute;a de las variables de gancho normales son inicialmente nulas; &lt;code&gt;add-hook&lt;/code&gt; sabe c&amp;oacute;mo lidiar con esto. Puede agregar ganchos de forma global o localmente en el b&amp;uacute;fer con &lt;code&gt;add-hook&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e72e25c71fad41850c51c81a50b1cd4e2873976c" translate="yes" xml:space="preserve">
          <source>The recommended way to define a new major mode is to derive it from an existing one using &lt;code&gt;define-derived-mode&lt;/code&gt;. If there is no closely related mode, you should inherit from either &lt;code&gt;text-mode&lt;/code&gt;, &lt;code&gt;special-mode&lt;/code&gt;, or &lt;code&gt;prog-mode&lt;/code&gt;. See &lt;a href=&quot;basic-major-modes#Basic-Major-Modes&quot;&gt;Basic Major Modes&lt;/a&gt;. If none of these are suitable, you can inherit from &lt;code&gt;fundamental-mode&lt;/code&gt; (see &lt;a href=&quot;major-modes#Major-Modes&quot;&gt;Major Modes&lt;/a&gt;).</source>
          <target state="translated">La forma recomendada de definir un nuevo modo mayor es derivarlo de uno existente usando &lt;code&gt;define-derived-mode&lt;/code&gt; . Si existe un modo estrechamente relacionado No, usted debe heredar de &lt;code&gt;text-mode&lt;/code&gt; , &lt;code&gt;special-mode&lt;/code&gt; , o &lt;code&gt;prog-mode&lt;/code&gt; . Consulte &lt;a href=&quot;basic-major-modes#Basic-Major-Modes&quot;&gt;Modos b&amp;aacute;sicos principales&lt;/a&gt; . Si ninguno de estos es adecuado, puede heredar del &lt;code&gt;fundamental-mode&lt;/code&gt; (consulte &lt;a href=&quot;major-modes#Major-Modes&quot;&gt;Modos principales&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="55ee00344a022e04c610024dc173a8e737831bfc" translate="yes" xml:space="preserve">
          <source>The recommended way to use this function is to specify a name which fits the conventions of GNU and Unix systems, and pass it to &lt;code&gt;convert-standard-filename&lt;/code&gt;.</source>
          <target state="translated">La forma recomendada de utilizar esta funci&amp;oacute;n es especificar un nombre que se ajuste a las convenciones de los sistemas GNU y Unix, y pasarlo a &lt;code&gt;convert-standard-filename&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="55eca5446859f2ea52f9e345f8531406554a48b1" translate="yes" xml:space="preserve">
          <source>The redirection lasts until &lt;code&gt;redirect-frame-focus&lt;/code&gt; is called to change it.</source>
          <target state="translated">La redirecci&amp;oacute;n dura hasta que se llama a &lt;code&gt;redirect-frame-focus&lt;/code&gt; para cambiarla.</target>
        </trans-unit>
        <trans-unit id="1a588fb9e8fcf72cfed3b3eefc36b97e65fb8bbc" translate="yes" xml:space="preserve">
          <source>The reference to &lt;var&gt;variable&lt;/var&gt; must be in the &lt;var&gt;then-form&lt;/var&gt; of the &lt;code&gt;if&lt;/code&gt;, and &lt;var&gt;variable&lt;/var&gt; must appear quoted in the call to &lt;code&gt;boundp&lt;/code&gt;.</source>
          <target state="translated">La referencia a la &lt;var&gt;variable&lt;/var&gt; debe estar en la forma &lt;var&gt;then-form&lt;/var&gt; del &lt;code&gt;if&lt;/code&gt; , y la &lt;var&gt;variable&lt;/var&gt; debe aparecer entre comillas en la llamada a &lt;code&gt;boundp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e411de3f279f8655e1e219fed4c21701eca0eed7" translate="yes" xml:space="preserve">
          <source>The references to &lt;code&gt;max&lt;/code&gt; inside the body of the &lt;code&gt;for&lt;/code&gt;, which are supposed to refer to the user&amp;rsquo;s binding of &lt;code&gt;max&lt;/code&gt;, really access the binding made by &lt;code&gt;for&lt;/code&gt;.</source>
          <target state="translated">Las referencias a &lt;code&gt;max&lt;/code&gt; dentro del cuerpo de &lt;code&gt;for&lt;/code&gt; , que se supone que se refieren al enlace de &lt;code&gt;max&lt;/code&gt; del usuario , realmente acceden al enlace creado por &lt;code&gt;for&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a5e79117bc2adbb317bdcd941ebc194bbe9e52a9" translate="yes" xml:space="preserve">
          <source>The reformulation demonstrates &lt;var&gt;symbol&lt;/var&gt; binding as well as &lt;code&gt;or&lt;/code&gt;, &lt;code&gt;and&lt;/code&gt;, &lt;code&gt;pred&lt;/code&gt;, &lt;code&gt;app&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt;.</source>
          <target state="translated">La reformulaci&amp;oacute;n demuestra la vinculaci&amp;oacute;n de &lt;var&gt;symbol&lt;/var&gt; , as&amp;iacute; como &lt;code&gt;or&lt;/code&gt; , &lt;code&gt;and&lt;/code&gt; , &lt;code&gt;pred&lt;/code&gt; , &lt;code&gt;app&lt;/code&gt; y &lt;code&gt;let&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6b316e0a4b7481395ac11f35d1a9f8c1cc3b4cde" translate="yes" xml:space="preserve">
          <source>The relative pixel coordinates of the click. For clicks in the text area of a window, the coordinate origin &lt;code&gt;(0 . 0)&lt;/code&gt; is taken to be the top left corner of the text area. See &lt;a href=&quot;window-sizes#Window-Sizes&quot;&gt;Window Sizes&lt;/a&gt;. For clicks in a mode line, header line or tab line, the coordinate origin is the top left corner of the window itself. For fringes, margins, and the vertical border, &lt;var&gt;x&lt;/var&gt; does not have meaningful data. For fringes and margins, &lt;var&gt;y&lt;/var&gt; is relative to the bottom edge of the header line. In all cases, the &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; coordinates increase rightward and downward respectively.</source>
          <target state="translated">Las coordenadas de p&amp;iacute;xeles relativas del clic. Para los clics en el &amp;aacute;rea de texto de una ventana, el origen de coordenadas &lt;code&gt;(0 . 0)&lt;/code&gt; se toma como la esquina superior izquierda del &amp;aacute;rea de texto. Consulte &lt;a href=&quot;window-sizes#Window-Sizes&quot;&gt;Tama&amp;ntilde;os de ventana&lt;/a&gt; . Para los clics en una l&amp;iacute;nea de modo, l&amp;iacute;nea de encabezado o l&amp;iacute;nea de tabulaci&amp;oacute;n, el origen de coordenadas es la esquina superior izquierda de la propia ventana. Para las franjas, los m&amp;aacute;rgenes y el borde vertical, &lt;var&gt;x&lt;/var&gt; no tiene datos significativos. Para franjas y m&amp;aacute;rgenes, &lt;var&gt;y&lt;/var&gt; es relativo al borde inferior de la l&amp;iacute;nea del encabezado. En todos los casos, la &lt;var&gt;x&lt;/var&gt; y &lt;var&gt;y&lt;/var&gt; coordenadas aumentan hacia la derecha y hacia abajo respectivamente.</target>
        </trans-unit>
        <trans-unit id="6789ca1a5596f585de1cc2056e90783a15f620b8" translate="yes" xml:space="preserve">
          <source>The reliable and easy way to extract events from a key sequence so as to put them in &lt;code&gt;unread-command-events&lt;/code&gt; is to use &lt;code&gt;listify-key-sequence&lt;/code&gt; (see below).</source>
          <target state="translated">La manera confiable y f&amp;aacute;cil de extraer eventos de una secuencia de teclas para ponerlos en &lt;code&gt;unread-command-events&lt;/code&gt; es usar &lt;code&gt;listify-key-sequence&lt;/code&gt; (ver m&amp;aacute;s abajo).</target>
        </trans-unit>
        <trans-unit id="6ce491e62987f2bb55f95694ce453e7531e85c7c" translate="yes" xml:space="preserve">
          <source>The remainder of this section covers six hooks that are called during redisplay provided a significant, non-scrolling change of a window has been detected. For simplicity, these hooks and the functions they call will be collectively referred to as &lt;em&gt;window change functions&lt;/em&gt;.</source>
          <target state="translated">El resto de esta secci&amp;oacute;n cubre seis ganchos que se llaman durante la nueva visualizaci&amp;oacute;n siempre que se haya detectado un cambio significativo de una ventana que no se desplaza. Para simplificar, estos ganchos y las funciones a las que llaman se denominar&amp;aacute;n colectivamente &lt;em&gt;funciones de cambio de ventana&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="fccefbe9e1b3ac84a03c9262e101056ef8f24db4" translate="yes" xml:space="preserve">
          <source>The remaining arguments (&lt;var&gt;args&lt;/var&gt;) will be passed to the process verbatim. Emacs is not involved in processing file names that are present in &lt;var&gt;args&lt;/var&gt;. To avoid confusion, it may be best to avoid absolute file names in &lt;var&gt;args&lt;/var&gt;, but rather to specify all file names as relative to &lt;code&gt;default-directory&lt;/code&gt;. The function &lt;code&gt;file-relative-name&lt;/code&gt; is useful for constructing such relative file names. Alternatively, you can use &lt;code&gt;file-local-name&lt;/code&gt; (see &lt;a href=&quot;magic-file-names#Magic-File-Names&quot;&gt;Magic File Names&lt;/a&gt;) to obtain an absolute file name as seen from the remote host&amp;rsquo;s perspective.</source>
          <target state="translated">Los argumentos restantes ( &lt;var&gt;args&lt;/var&gt; ) se pasar&amp;aacute;n al proceso textualmente. Emacs no participa en el procesamiento de nombres de archivos que est&amp;aacute;n presentes en &lt;var&gt;args&lt;/var&gt; . Para evitar confusiones, puede ser mejor evitar los nombres de archivo absolutos en &lt;var&gt;args&lt;/var&gt; , sino especificar todos los nombres de archivo como relativos al &lt;code&gt;default-directory&lt;/code&gt; . La funci&amp;oacute;n &lt;code&gt;file-relative-name&lt;/code&gt; es &amp;uacute;til para construir tales nombres de archivos relativos. Alternativamente, puede usar &lt;code&gt;file-local-name&lt;/code&gt; (ver &lt;a href=&quot;magic-file-names#Magic-File-Names&quot;&gt;Nombres de archivos m&amp;aacute;gicos&lt;/a&gt; ) para obtener un nombre de archivo absoluto como se ve desde la perspectiva del host remoto.</target>
        </trans-unit>
        <trans-unit id="670a4e0596da84e4ab53487725c486bc97b4f1aa" translate="yes" xml:space="preserve">
          <source>The remaining arguments &lt;var&gt;parameters&lt;/var&gt; are keyword/argument pairs that are mainly relevant to encrypted connections:</source>
          <target state="translated">Los &lt;var&gt;parameters&lt;/var&gt; argumentos restantes son pares de palabras clave / argumentos que son principalmente relevantes para las conexiones cifradas:</target>
        </trans-unit>
        <trans-unit id="711c3203fb757fbb6071fddfb4565e07916d99bb" translate="yes" xml:space="preserve">
          <source>The remaining arguments control the rate of echo area updates. The progress reporter will wait for at least &lt;var&gt;min-change&lt;/var&gt; more percents of the operation to be completed before printing next message; the default is one percent. &lt;var&gt;min-time&lt;/var&gt; specifies the minimum time in seconds to pass between successive prints; the default is 0.2 seconds. (On some operating systems, the progress reporter may handle fractions of seconds with varying precision).</source>
          <target state="translated">Los argumentos restantes controlan la tasa de actualizaciones del &amp;aacute;rea de eco. El reportero de progreso esperar&amp;aacute; a que se complete al menos &lt;var&gt;min-change&lt;/var&gt; m&amp;aacute;s porcentajes de la operaci&amp;oacute;n antes de imprimir el siguiente mensaje; el valor predeterminado es el uno por ciento. &lt;var&gt;min-time&lt;/var&gt; especifica el tiempo m&amp;iacute;nimo en segundos para pasar entre impresiones sucesivas; el valor predeterminado es 0,2 segundos. (En algunos sistemas operativos, el informador de progreso puede manejar fracciones de segundos con precisi&amp;oacute;n variable).</target>
        </trans-unit>
        <trans-unit id="922b5762bb85df57750f37171cdcbbec00eba4ff" translate="yes" xml:space="preserve">
          <source>The remaining arguments should be the same arguments that might be given to the corresponding I/O primitive. Depending on the primitive, one of those arguments is selected as the &lt;em&gt;target&lt;/em&gt;. For example, if &lt;var&gt;operation&lt;/var&gt; does file I/O, whichever argument specifies the file name is the target. For subprocess primitives, the process name is the target. For &lt;code&gt;open-network-stream&lt;/code&gt;, the target is the service name or port number.</source>
          <target state="translated">Los argumentos restantes deben ser los mismos argumentos que se podr&amp;iacute;an dar a la primitiva de E / S correspondiente. Dependiendo de la primitiva, uno de esos argumentos se selecciona como &lt;em&gt;objetivo&lt;/em&gt; . Por ejemplo, si la &lt;var&gt;operation&lt;/var&gt; realiza E / S de archivo, cualquier argumento que especifique el nombre del archivo es el destino. Para las primitivas de subproceso, el nombre del proceso es el destino. Para &lt;code&gt;open-network-stream&lt;/code&gt; , el destino es el nombre del servicio o el n&amp;uacute;mero de puerto.</target>
        </trans-unit>
        <trans-unit id="3a337a486bdd471460754fa0fdb9252c1ad6a6e1" translate="yes" xml:space="preserve">
          <source>The remaining arguments, &lt;var&gt;args&lt;/var&gt;, are strings that specify command line arguments for the program.</source>
          <target state="translated">Los argumentos restantes, &lt;var&gt;args&lt;/var&gt; , son cadenas que especifican argumentos de l&amp;iacute;nea de comando para el programa.</target>
        </trans-unit>
        <trans-unit id="c5f9c78575e39313d5c394dcec0f4646b698aca7" translate="yes" xml:space="preserve">
          <source>The remaining arguments, &lt;var&gt;args&lt;/var&gt;, are strings that specify command line arguments for the program. Each string is passed to &lt;var&gt;program&lt;/var&gt; as a separate argument.</source>
          <target state="translated">Los argumentos restantes, &lt;var&gt;args&lt;/var&gt; , son cadenas que especifican argumentos de l&amp;iacute;nea de comando para el programa. Cada cadena se pasa al &lt;var&gt;program&lt;/var&gt; a como un argumento separado.</target>
        </trans-unit>
        <trans-unit id="e63ff1b06b54edf88e3df6de1b60c7d8bc9065cf" translate="yes" xml:space="preserve">
          <source>The remaining arguments, &lt;var&gt;props&lt;/var&gt;, specify additional image properties&amp;mdash;for example,</source>
          <target state="translated">Los argumentos restantes, &lt;var&gt;props&lt;/var&gt; , especifican propiedades de imagen adicionales, por ejemplo,</target>
        </trans-unit>
        <trans-unit id="fbf07a85ca35fefe0fcea21832b76725d5868901" translate="yes" xml:space="preserve">
          <source>The remaining clauses use core patterns. &lt;code&gt;(pred numberp)&lt;/code&gt; matches if &lt;code&gt;form&lt;/code&gt; is a number. On match, the body evaluates it. &lt;code&gt;(pred symbolp)&lt;/code&gt; matches if &lt;code&gt;form&lt;/code&gt; is a symbol. On match, the body looks up the symbol in &lt;code&gt;env&lt;/code&gt; and returns its association. Finally, &lt;code&gt;_&lt;/code&gt; is the catch-all pattern that matches anything, so it&amp;rsquo;s suitable for reporting syntax errors.</source>
          <target state="translated">Las cl&amp;aacute;usulas restantes utilizan patrones b&amp;aacute;sicos. &lt;code&gt;(pred numberp)&lt;/code&gt; coincide si la &lt;code&gt;form&lt;/code&gt; a es un n&amp;uacute;mero. Al coincidir, el cuerpo lo eval&amp;uacute;a. &lt;code&gt;(pred symbolp)&lt;/code&gt; coincide si la &lt;code&gt;form&lt;/code&gt; a es un s&amp;iacute;mbolo. Al coincidir, el cuerpo busca el s&amp;iacute;mbolo en &lt;code&gt;env&lt;/code&gt; y devuelve su asociaci&amp;oacute;n. Finalmente, &lt;code&gt;_&lt;/code&gt; es el patr&amp;oacute;n general que coincide con cualquier cosa, por lo que es adecuado para informar errores de sintaxis.</target>
        </trans-unit>
        <trans-unit id="169a2fbaa470aeea2e4b7eb66378820fbb16842f" translate="yes" xml:space="preserve">
          <source>The remaining elements in &lt;var&gt;menu&lt;/var&gt; are menu items.</source>
          <target state="translated">Los elementos restantes del &lt;var&gt;menu&lt;/var&gt; son elementos del men&amp;uacute;.</target>
        </trans-unit>
        <trans-unit id="4e6dd61e2904f012d61dbb3c359b6a7c4039effd" translate="yes" xml:space="preserve">
          <source>The remaining image types that Emacs can support are:</source>
          <target state="translated">El resto de tipos de im√°genes que Emacs puede soportar son:</target>
        </trans-unit>
        <trans-unit id="66a6e23b71c61a3f987d7762c7e2a5b7599aa9c3" translate="yes" xml:space="preserve">
          <source>The reordering algorithm uses the bidirectional properties of the characters stored as their &lt;code&gt;bidi-class&lt;/code&gt; property (see &lt;a href=&quot;character-properties#Character-Properties&quot;&gt;Character Properties&lt;/a&gt;). Lisp programs can change these properties by calling the &lt;code&gt;put-char-code-property&lt;/code&gt; function. However, doing this requires a thorough understanding of the</source>
          <target state="translated">El algoritmo de reordenaci&amp;oacute;n utiliza las propiedades bidireccionales de los caracteres almacenados como su propiedad de &lt;code&gt;bidi-class&lt;/code&gt; bidireccional (consulte &lt;a href=&quot;character-properties#Character-Properties&quot;&gt;Propiedades de los caracteres&lt;/a&gt; ). Los programas Lisp pueden cambiar estas propiedades llamando a la funci&amp;oacute;n &lt;code&gt;put-char-code-property&lt;/code&gt; . Sin embargo, hacer esto requiere una comprensi&amp;oacute;n profunda de los</target>
        </trans-unit>
        <trans-unit id="0e2760fb3d24d66fd982b8a9de029f1dc2534fb7" translate="yes" xml:space="preserve">
          <source>The replacement buffer in each window is chosen via &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; (see &lt;a href=&quot;window-history#Window-History&quot;&gt;Window History&lt;/a&gt;). Any dedicated window displaying &lt;var&gt;buffer-or-name&lt;/var&gt; is deleted if possible (see &lt;a href=&quot;dedicated-windows#Dedicated-Windows&quot;&gt;Dedicated Windows&lt;/a&gt;). If such a window is the only window on its frame and there are other frames on the same terminal, the frame is deleted as well. If the dedicated window is the only window on the only frame on its terminal, the buffer is replaced anyway.</source>
          <target state="translated">El b&amp;uacute;fer de reemplazo en cada ventana se elige mediante &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; (ver &lt;a href=&quot;window-history#Window-History&quot;&gt;Historial de ventanas&lt;/a&gt; ). Si es posible, se elimina cualquier ventana dedicada que muestre &lt;var&gt;buffer-or-name&lt;/var&gt; (consulte &lt;a href=&quot;dedicated-windows#Dedicated-Windows&quot;&gt;Ventanas dedicadas&lt;/a&gt; ). Si dicha ventana es la &amp;uacute;nica ventana en su marco y hay otros marcos en el mismo terminal, el marco tambi&amp;eacute;n se elimina. Si la ventana dedicada es la &amp;uacute;nica ventana en el &amp;uacute;nico marco en su terminal, el b&amp;uacute;fer se reemplaza de todos modos.</target>
        </trans-unit>
        <trans-unit id="a7bc26f1c46834e48b01bc54d1856ec2c2513fe6" translate="yes" xml:space="preserve">
          <source>The replacement is performed using &lt;code&gt;replace-buffer-contents&lt;/code&gt; (see above) which also describes the &lt;var&gt;max-secs&lt;/var&gt; and &lt;var&gt;max-costs&lt;/var&gt; arguments and the return value.</source>
          <target state="translated">El reemplazo se realiza usando &lt;code&gt;replace-buffer-contents&lt;/code&gt; (ver arriba) que tambi&amp;eacute;n describe los argumentos &lt;var&gt;max-secs&lt;/var&gt; y &lt;var&gt;max-costs&lt;/var&gt; y el valor de retorno.</target>
        </trans-unit>
        <trans-unit id="ec1321a0692fb6ebcc794193c05c46720ae0b1d2" translate="yes" xml:space="preserve">
          <source>The representation of letters, numbers and control characters.</source>
          <target state="translated">La representaci√≥n de letras,n√∫meros y caracteres de control.</target>
        </trans-unit>
        <trans-unit id="1888fa813111440fef4cca1b17158b44c62b32a0" translate="yes" xml:space="preserve">
          <source>The rest of &lt;var&gt;args&lt;/var&gt; are strings that specify command line arguments for the subprocess.</source>
          <target state="translated">El resto de &lt;var&gt;args&lt;/var&gt; son cadenas que especifican argumentos de l&amp;iacute;nea de comandos para el subproceso.</target>
        </trans-unit>
        <trans-unit id="e64cb5cbfa4900b03ef274ea22ff266b957788b6" translate="yes" xml:space="preserve">
          <source>The rest of the elements are the &lt;em&gt;body&lt;/em&gt; of the function: the Lisp code to do the work of the function (or, as a Lisp programmer would say, &amp;ldquo;a list of Lisp forms to evaluate&amp;rdquo;). The value returned by the function is the value returned by the last element of the body.</source>
          <target state="translated">El resto de los elementos son el &lt;em&gt;cuerpo&lt;/em&gt; de la funci&amp;oacute;n: el c&amp;oacute;digo Lisp para hacer el trabajo de la funci&amp;oacute;n (o, como dir&amp;iacute;a un programador Lisp, &amp;ldquo;una lista de formas Lisp para evaluar&amp;rdquo;). El valor devuelto por la funci&amp;oacute;n es el valor devuelto por el &amp;uacute;ltimo elemento del cuerpo.</target>
        </trans-unit>
        <trans-unit id="0d7105d802c517da10dece05da93fcc235f044de" translate="yes" xml:space="preserve">
          <source>The rest of this section describes several kinds of display specifications and what they mean.</source>
          <target state="translated">El resto de esta secci√≥n describe varios tipos de especificaciones de visualizaci√≥n y lo que significan.</target>
        </trans-unit>
        <trans-unit id="75d16b63e700fca272954b8d5c9cbea0eaebf3a4" translate="yes" xml:space="preserve">
          <source>The rest of this subsection describes different forms of core patterns, presents some examples, and concludes with important caveats on using the let-binding facility provided by some pattern forms. A core pattern can have the following forms:</source>
          <target state="translated">En el resto de esta subsecci√≥n se describen diferentes formas de patrones b√°sicos,se presentan algunos ejemplos y se concluye con importantes advertencias sobre el uso de la facilidad de uni√≥n que ofrecen algunas formas de patrones.Un patr√≥n central puede tener las siguientes formas:</target>
        </trans-unit>
        <trans-unit id="d3d63b344006851896165eee8891a4b8d2a80cdd" translate="yes" xml:space="preserve">
          <source>The result &lt;var&gt;prevhpos&lt;/var&gt; is the horizontal position one character back from &lt;var&gt;pos&lt;/var&gt;. The result &lt;var&gt;contin&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt; if the last line was continued after (or within) the previous character.</source>
          <target state="translated">El resultado &lt;var&gt;prevhpos&lt;/var&gt; es la posici&amp;oacute;n horizontal un car&amp;aacute;cter atr&amp;aacute;s de &lt;var&gt;pos&lt;/var&gt; . El resultado &lt;var&gt;contin&lt;/var&gt; &amp;uacute;a es &lt;code&gt;t&lt;/code&gt; si la &amp;uacute;ltima l&amp;iacute;nea contin&amp;uacute;a despu&amp;eacute;s (o dentro) del car&amp;aacute;cter anterior.</target>
        </trans-unit>
        <trans-unit id="daae51971c3e086b5b343e27b0d5f3425265bcec" translate="yes" xml:space="preserve">
          <source>The result is not &lt;code&gt;(&quot;&quot; &quot;two&quot; &quot;words&quot; &quot;&quot;)&lt;/code&gt;, which would rarely be useful. If you need such a result, use an explicit value for &lt;var&gt;separators&lt;/var&gt;:</source>
          <target state="translated">El resultado no es &lt;code&gt;(&quot;&quot; &quot;two&quot; &quot;words&quot; &quot;&quot;)&lt;/code&gt; , lo que rara vez ser&amp;iacute;a &amp;uacute;til. Si necesita ese resultado, use un valor expl&amp;iacute;cito para los &lt;var&gt;separators&lt;/var&gt; :</target>
        </trans-unit>
        <trans-unit id="b472acbf6233b1409a248f2d33fb8eb9ab0e8df6" translate="yes" xml:space="preserve">
          <source>The result must be accurate. The function may need to encode and decode a large part of the buffer, which is expensive and can be slow.</source>
          <target state="translated">El resultado debe ser exacto.La funci√≥n puede necesitar codificar y decodificar una gran parte de la memoria intermedia,lo cual es costoso y puede ser lento.</target>
        </trans-unit>
        <trans-unit id="3fc3ca66f906ee6817d9bc3b5bb03a793a75bf8c" translate="yes" xml:space="preserve">
          <source>The result of encoding is logically a sequence of bytes, but the buffer remains multibyte if it was multibyte before, and any 8-bit bytes are converted to their multibyte representation (see &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;).</source>
          <target state="translated">El resultado de la codificaci&amp;oacute;n es l&amp;oacute;gicamente una secuencia de bytes, pero el b&amp;uacute;fer permanece multibyte si antes era multibyte, y los bytes de 8 bits se convierten a su representaci&amp;oacute;n multibyte (ver &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Representaciones de texto&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="c0ac4c7f55c94e4e68eece5bab668740b85fd079" translate="yes" xml:space="preserve">
          <source>The result of encoding, and the input to decoding, are not ordinary text. They logically consist of a series of byte values; that is, a series of</source>
          <target state="translated">El resultado de la codificaci√≥n,y la entrada a la decodificaci√≥n,no son texto ordinario.Consisten l√≥gicamente en una serie de valores de bytes;es decir,una serie de</target>
        </trans-unit>
        <trans-unit id="f2f9b59d04c4a67bead42edef8ea82ec9bf8264f" translate="yes" xml:space="preserve">
          <source>The result of evaluating &lt;var&gt;form&lt;/var&gt; determines whether the item is enabled (non-&lt;code&gt;nil&lt;/code&gt; means yes). If the item is not enabled, you can&amp;rsquo;t really click on it.</source>
          <target state="translated">El resultado de evaluar la &lt;var&gt;form&lt;/var&gt; a determina si el elemento est&amp;aacute; habilitado (no &lt;code&gt;nil&lt;/code&gt; significa s&amp;iacute;). Si el elemento no est&amp;aacute; habilitado, realmente no puede hacer clic en &amp;eacute;l.</target>
        </trans-unit>
        <trans-unit id="0ef7684b6652c1f298625050dc4e7b22d73f9616" translate="yes" xml:space="preserve">
          <source>The result of evaluating &lt;var&gt;form&lt;/var&gt; determines whether the item should actually appear in the menu (non-&lt;code&gt;nil&lt;/code&gt; means yes). If the item does not appear, then the menu is displayed as if this item were not defined at all.</source>
          <target state="translated">El resultado de la &lt;var&gt;form&lt;/var&gt; a de evaluaci&amp;oacute;n determina si el elemento deber&amp;iacute;a aparecer realmente en el men&amp;uacute; (si no es &lt;code&gt;nil&lt;/code&gt; significa s&amp;iacute;). Si el elemento no aparece, el men&amp;uacute; se muestra como si este elemento no estuviera definido en absoluto.</target>
        </trans-unit>
        <trans-unit id="acbd2ddb72baf0b207a6321fedc1407724073a97" translate="yes" xml:space="preserve">
          <source>The result of this form is &lt;code&gt;t&lt;/code&gt; if it works to specify &lt;var&gt;keyword&lt;/var&gt; with value &lt;var&gt;value&lt;/var&gt; in &lt;code&gt;make-network-process&lt;/code&gt;. Here are some of the &lt;var&gt;keyword&lt;/var&gt;&amp;mdash;&lt;var&gt;value&lt;/var&gt; pairs you can test in this way.</source>
          <target state="translated">El resultado de esta forma es &lt;code&gt;t&lt;/code&gt; si funciona para especificar una &lt;var&gt;keyword&lt;/var&gt; con valor &lt;var&gt;value&lt;/var&gt; en &lt;code&gt;make-network-process&lt;/code&gt; . A continuaci&amp;oacute;n, se muestran algunos de los pares de &lt;var&gt;keyword&lt;/var&gt; y &lt;var&gt;value&lt;/var&gt; que puede probar de esta manera.</target>
        </trans-unit>
        <trans-unit id="a66be8edbff7bbe7579ce3f3a75abe46a384d47a" translate="yes" xml:space="preserve">
          <source>The result of this macro is the result returned by &lt;var&gt;body&lt;/var&gt;.</source>
          <target state="translated">El resultado de esta macro es el resultado devuelto por el &lt;var&gt;body&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="27bbea73aa5cdc064da3e057ed92e4ba32abfaad" translate="yes" xml:space="preserve">
          <source>The result of using contradictory flags (for instance, both upper and lower case) is undefined.</source>
          <target state="translated">El resultado de la utilizaci√≥n de banderas contradictorias (por ejemplo,tanto en may√∫sculas como en min√∫sculas)no est√° definido.</target>
        </trans-unit>
        <trans-unit id="46a20d33611240a9e0e5211ef91f6aa318813c3c" translate="yes" xml:space="preserve">
          <source>The resulting mouse position is constrained to the native frame of &lt;var&gt;frame&lt;/var&gt;. If &lt;var&gt;frame&lt;/var&gt; is not visible, this function does nothing. The return value is not significant.</source>
          <target state="translated">La posici&amp;oacute;n del mouse resultante est&amp;aacute; restringida al marco nativo del &lt;var&gt;frame&lt;/var&gt; . Si el &lt;var&gt;frame&lt;/var&gt; no est&amp;aacute; visible, esta funci&amp;oacute;n no hace nada. El valor de retorno no es significativo.</target>
        </trans-unit>
        <trans-unit id="27f056d37a6f909c9875b9547c995c37a964153d" translate="yes" xml:space="preserve">
          <source>The resulting mouse position is not constrained to the native frame of &lt;var&gt;frame&lt;/var&gt;. If &lt;var&gt;frame&lt;/var&gt; is not visible, this function does nothing. The return value is not significant.</source>
          <target state="translated">La posici&amp;oacute;n del mouse resultante no est&amp;aacute; restringida al marco nativo del &lt;var&gt;frame&lt;/var&gt; . Si el &lt;var&gt;frame&lt;/var&gt; no est&amp;aacute; visible, esta funci&amp;oacute;n no hace nada. El valor de retorno no es significativo.</target>
        </trans-unit>
        <trans-unit id="97e907e5a3426231ca925e4df1a09f1c6f27899f" translate="yes" xml:space="preserve">
          <source>The resulting pixel is computed from the color intensity of the color resulting from summing up the RGB values of surrounding pixels, multiplied by the specified factors, and dividing that sum by the sum of the factors&amp;rsquo; absolute values.</source>
          <target state="translated">El p&amp;iacute;xel resultante se calcula a partir de la intensidad de color del color resultante de sumar los valores RGB de los p&amp;iacute;xeles circundantes, multiplicado por los factores especificados y dividiendo esa suma por la suma de los valores absolutos de los factores.</target>
        </trans-unit>
        <trans-unit id="a850c2e30c134550ab81c49f18e64cc8581aca70" translate="yes" xml:space="preserve">
          <source>The resulting regexp is preceded by &lt;var&gt;paren&lt;/var&gt; and followed by &amp;lsquo;</source>
          <target state="translated">La &lt;var&gt;paren&lt;/var&gt; resultante est&amp;aacute; precedida por paren y seguida de '</target>
        </trans-unit>
        <trans-unit id="5cb20d9a2af4a08675a28d5ca902bb392372a3c0" translate="yes" xml:space="preserve">
          <source>The resulting regexp is surrounded by &amp;lsquo;</source>
          <target state="translated">La expresi&amp;oacute;n regular resultante est&amp;aacute; rodeada por '</target>
        </trans-unit>
        <trans-unit id="75f74b291859bcb8fbacd8a981cca3c5abbd5e9c" translate="yes" xml:space="preserve">
          <source>The return value has the form &lt;code&gt;(&lt;var&gt;left&lt;/var&gt; &lt;var&gt;top&lt;/var&gt; &lt;var&gt;right&lt;/var&gt;
&lt;var&gt;bottom&lt;/var&gt;)&lt;/code&gt;. These list elements are, respectively, the X coordinate of the leftmost column occupied by the window, the Y coordinate of the topmost row, the X coordinate one column to the right of the rightmost column, and the Y coordinate one row down from the bottommost row.</source>
          <target state="translated">El valor de retorno tiene la forma &lt;code&gt;(&lt;var&gt;left&lt;/var&gt; &lt;var&gt;top&lt;/var&gt; &lt;var&gt;right&lt;/var&gt; &lt;var&gt;bottom&lt;/var&gt;)&lt;/code&gt; . Estos elementos de la lista son, respectivamente, la coordenada X de la columna m&amp;aacute;s a la izquierda ocupada por la ventana, la coordenada Y de la fila superior, la coordenada X una columna a la derecha de la columna m&amp;aacute;s a la derecha y la coordenada Y una fila hacia abajo desde la &amp;uacute;ltima fila. fila.</target>
        </trans-unit>
        <trans-unit id="d012e9e07ddcadec4d4bdcd9c6d25ee2bd788334" translate="yes" xml:space="preserve">
          <source>The return value includes mode and header line, a horizontal scroll bar and a bottom divider, if any. If &lt;var&gt;window&lt;/var&gt; is an internal window, its pixel height is the pixel height of the screen areas spanned by its children.</source>
          <target state="translated">El valor de retorno incluye el modo y la l&amp;iacute;nea de encabezado, una barra de desplazamiento horizontal y un divisor inferior, si lo hubiera. Si la &lt;var&gt;window&lt;/var&gt; es una ventana interna, su altura en p&amp;iacute;xeles es la altura en p&amp;iacute;xeles de las &amp;aacute;reas de la pantalla abarcadas por sus elementos secundarios.</target>
        </trans-unit>
        <trans-unit id="02435ab528a9d458375ad989e9c07e91ea1d1315" translate="yes" xml:space="preserve">
          <source>The return value includes the fringes and margins of &lt;var&gt;window&lt;/var&gt; as well as any vertical dividers or scroll bars belonging to &lt;var&gt;window&lt;/var&gt;. If &lt;var&gt;window&lt;/var&gt; is an internal window, its pixel width is the width of the screen areas spanned by its children.</source>
          <target state="translated">El valor de retorno incluye las franjas y los m&amp;aacute;rgenes de la &lt;var&gt;window&lt;/var&gt; , as&amp;iacute; como los divisores verticales o barras de desplazamiento que pertenezcan a la &lt;var&gt;window&lt;/var&gt; . Si la &lt;var&gt;window&lt;/var&gt; es una ventana interna, su ancho de p&amp;iacute;xel es el ancho de las &amp;aacute;reas de la pantalla abarcadas por sus elementos secundarios.</target>
        </trans-unit>
        <trans-unit id="3a98f39fffcef1b3f518f4676f34cc9b1b32069e" translate="yes" xml:space="preserve">
          <source>The return value indicates the distance traveled. It is an integer that is zero or less.</source>
          <target state="translated">El valor de retorno indica la distancia recorrida.Es un n√∫mero entero que es cero o menos.</target>
        </trans-unit>
        <trans-unit id="3fde61c2b5f5d76aef05339847ec2609e0a0f8e5" translate="yes" xml:space="preserve">
          <source>The return value is &lt;code&gt;t&lt;/code&gt; if the function actually changed some property&amp;rsquo;s value; &lt;code&gt;nil&lt;/code&gt; otherwise (if &lt;var&gt;props&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or if no character in the specified text had any of those properties).</source>
          <target state="translated">El valor de retorno es &lt;code&gt;t&lt;/code&gt; si la funci&amp;oacute;n realmente cambi&amp;oacute; el valor de alguna propiedad; &lt;code&gt;nil&lt;/code&gt; de lo contrario (si &lt;var&gt;props&lt;/var&gt; es &lt;code&gt;nil&lt;/code&gt; o si ning&amp;uacute;n car&amp;aacute;cter en el texto especificado tiene ninguna de esas propiedades).</target>
        </trans-unit>
        <trans-unit id="90f56f2b19d2b305eccb19f73983ee226bf52495" translate="yes" xml:space="preserve">
          <source>The return value is &lt;code&gt;t&lt;/code&gt; if the function actually changed some property&amp;rsquo;s value; &lt;code&gt;nil&lt;/code&gt; otherwise (if &lt;var&gt;props&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt; or its values agree with those in the text).</source>
          <target state="translated">El valor de retorno es &lt;code&gt;t&lt;/code&gt; si la funci&amp;oacute;n realmente cambi&amp;oacute; el valor de alguna propiedad; &lt;code&gt;nil&lt;/code&gt; de lo contrario (si &lt;var&gt;props&lt;/var&gt; es &lt;code&gt;nil&lt;/code&gt; o sus valores concuerdan con los del texto).</target>
        </trans-unit>
        <trans-unit id="d966c0a5582546e03dd65e09ce5f5b7511e5eb89" translate="yes" xml:space="preserve">
          <source>The return value is &lt;var&gt;overlay&lt;/var&gt;.</source>
          <target state="translated">El valor de retorno se &lt;var&gt;overlay&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="c9c05af5fac5434c5acee584935759af38f45178" translate="yes" xml:space="preserve">
          <source>The return value is &lt;var&gt;value&lt;/var&gt; from the chosen alternative.</source>
          <target state="translated">El valor de retorno es el &lt;var&gt;value&lt;/var&gt; de la alternativa elegida.</target>
        </trans-unit>
        <trans-unit id="414de02915422d70149abb88fd20a6bbe77b52b9" translate="yes" xml:space="preserve">
          <source>The return value is a Lisp object that serves as a cookie; you can pass this object as an argument to &lt;code&gt;face-remap-remove-relative&lt;/code&gt; if you need to remove the remapping later.</source>
          <target state="translated">El valor de retorno es un objeto Lisp que sirve como cookie; puede pasar este objeto como argumento a &lt;code&gt;face-remap-remove-relative&lt;/code&gt; si necesita eliminar la reasignaci&amp;oacute;n m&amp;aacute;s tarde.</target>
        </trans-unit>
        <trans-unit id="640083b382042a0f9ab141b72092b58d3b3db8e7" translate="yes" xml:space="preserve">
          <source>The return value is a decoded time structure.</source>
          <target state="translated">El valor de retorno es una estructura temporal decodificada.</target>
        </trans-unit>
        <trans-unit id="6948835c6ed35bc81ffd72935c26a9c6a4b01e26" translate="yes" xml:space="preserve">
          <source>The return value is a list of five elements:</source>
          <target state="translated">El valor de retorno es una lista de cinco elementos:</target>
        </trans-unit>
        <trans-unit id="90615d81da8d652dcb6154d1dc922a071b14b8e3" translate="yes" xml:space="preserve">
          <source>The return value is a list of the form &lt;code&gt;(&lt;var&gt;root&lt;/var&gt; &lt;var&gt;mini&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;root&lt;/var&gt; represents the window tree of the frame&amp;rsquo;s root window, and &lt;var&gt;mini&lt;/var&gt; is the frame&amp;rsquo;s minibuffer window.</source>
          <target state="translated">El valor de retorno es una lista del formulario &lt;code&gt;(&lt;var&gt;root&lt;/var&gt; &lt;var&gt;mini&lt;/var&gt;)&lt;/code&gt; , donde &lt;var&gt;root&lt;/var&gt; representa el &amp;aacute;rbol de ventana de la ventana ra&amp;iacute;z del marco y &lt;var&gt;mini&lt;/var&gt; es la ventana del minib&amp;uacute;fer del marco.</target>
        </trans-unit>
        <trans-unit id="52c6a1791b31a7b0eaccc6801b2780ff866415de" translate="yes" xml:space="preserve">
          <source>The return value is a triple of the width and the start and end y-coordinates of the largest rectangle that can be inscribed into the empty space (space not displaying any text) of the text area of &lt;var&gt;window&lt;/var&gt;. No x-coordinates are returned by this function&amp;mdash;any such rectangle is assumed to end at the right edge of &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s text area. If no empty space can be found, the return value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">El valor de retorno es un triple del ancho y las coordenadas y de inicio y final del rect&amp;aacute;ngulo m&amp;aacute;s grande que se puede inscribir en el espacio vac&amp;iacute;o (espacio que no muestra ning&amp;uacute;n texto) del &amp;aacute;rea de texto de la &lt;var&gt;window&lt;/var&gt; . Esta funci&amp;oacute;n no devuelve coordenadas x; se supone que cualquier rect&amp;aacute;ngulo de este tipo termina en el borde derecho del &amp;aacute;rea de texto de la &lt;var&gt;window&lt;/var&gt; . Si no se puede encontrar ning&amp;uacute;n espacio vac&amp;iacute;o, el valor de retorno es &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a2e42df57a0cc7d257e5e9f1e666fc7a3621ad67" translate="yes" xml:space="preserve">
          <source>The return value is always &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">El valor de retorno es siempre &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4fc3028050b974b5c5985a3e65b383b27350e24c" translate="yes" xml:space="preserve">
          <source>The return value is always &lt;code&gt;nil&lt;/code&gt;; to make calls to &lt;code&gt;map-char-table&lt;/code&gt; useful, &lt;var&gt;function&lt;/var&gt; should have side effects. For example, here is how to examine the elements of the syntax table:</source>
          <target state="translated">El valor de retorno es siempre &lt;code&gt;nil&lt;/code&gt; ; para que las llamadas a &lt;code&gt;map-char-table&lt;/code&gt; sean &amp;uacute;tiles, la &lt;var&gt;function&lt;/var&gt; debe tener efectos secundarios. Por ejemplo, aqu&amp;iacute; se explica c&amp;oacute;mo examinar los elementos de la tabla de sintaxis:</target>
        </trans-unit>
        <trans-unit id="6e1ef02d50eb6d3d11a008ae86a182534aaddd6c" translate="yes" xml:space="preserve">
          <source>The return value is like what &lt;code&gt;insert-file-contents&lt;/code&gt; returns: a list of the absolute file name and the length of the data inserted (after conversion).</source>
          <target state="translated">El valor de retorno es como el que devuelve &lt;code&gt;insert-file-contents&lt;/code&gt; : una lista del nombre absoluto del archivo y la longitud de los datos insertados (despu&amp;eacute;s de la conversi&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="1667a16b49f259c48f935a06b46d348e1b7a9a28" translate="yes" xml:space="preserve">
          <source>The return value is never negative. It is zero when no horizontal scrolling has been done in &lt;var&gt;window&lt;/var&gt; (which is usually the case).</source>
          <target state="translated">El valor de retorno nunca es negativo. Es cero cuando no se ha realizado ning&amp;uacute;n desplazamiento horizontal en la &lt;var&gt;window&lt;/var&gt; (que suele ser el caso).</target>
        </trans-unit>
        <trans-unit id="2493392e7fec786dd0b57b9149f6a4de24a60362" translate="yes" xml:space="preserve">
          <source>The return value is the column number actually moved to.</source>
          <target state="translated">El valor de retorno es el n√∫mero de columna al que realmente se ha movido.</target>
        </trans-unit>
        <trans-unit id="728cf9e0720907dab6445cd97c1a912356f7f43f" translate="yes" xml:space="preserve">
          <source>The return value is the distance traveled, which is a nonnegative integer.</source>
          <target state="translated">El valor de retorno es la distancia recorrida,que es un entero no negativo.</target>
        </trans-unit>
        <trans-unit id="e8f11031b2e43a095f2b7b7de82a02dfcbe6b156" translate="yes" xml:space="preserve">
          <source>The return value is the matching value from &lt;var&gt;choices&lt;/var&gt;.</source>
          <target state="translated">El valor de retorno es el valor coincidente de las &lt;var&gt;choices&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="6d181ed19740d80d79cf1130d7058743bf3e3b57" translate="yes" xml:space="preserve">
          <source>The return value is the new window, &lt;code&gt;nil&lt;/code&gt; when creating that window failed.</source>
          <target state="translated">El valor de retorno es la nueva ventana, &lt;code&gt;nil&lt;/code&gt; cuando se produjo un error al crear esa ventana.</target>
        </trans-unit>
        <trans-unit id="f65065166d5e0c6aa1c92410eeb9adf0999014fa" translate="yes" xml:space="preserve">
          <source>The return value is the number of screen lines over which point was moved. The value may be less in absolute value than &lt;var&gt;count&lt;/var&gt; if the beginning or end of the buffer was reached.</source>
          <target state="translated">El valor de retorno es el n&amp;uacute;mero de l&amp;iacute;neas de pantalla sobre las que se movi&amp;oacute; el punto. El valor puede ser menor en valor absoluto que el &lt;var&gt;count&lt;/var&gt; si se alcanz&amp;oacute; el principio o el final del b&amp;uacute;fer.</target>
        </trans-unit>
        <trans-unit id="9d83169f48bfa8d22f5e0a5baa5652dbdd9ad387" translate="yes" xml:space="preserve">
          <source>The return value is the result of this rounding.</source>
          <target state="translated">El valor de retorno es el resultado de este redondeo.</target>
        </trans-unit>
        <trans-unit id="a97826aadd65e5acdd8dae2f1cc5f5396c5e9f4d" translate="yes" xml:space="preserve">
          <source>The return value is the same as if you call the low-level parsing function &lt;code&gt;parse-partial-sexp&lt;/code&gt; to parse from the beginning of the visible portion of the buffer to &lt;var&gt;pos&lt;/var&gt; (see &lt;a href=&quot;low_002dlevel-parsing#Low_002dLevel-Parsing&quot;&gt;Low-Level Parsing&lt;/a&gt;). However, &lt;code&gt;syntax-ppss&lt;/code&gt; uses caches to speed up the computation. Due to this optimization, the second value (previous complete subexpression) and sixth value (minimum parenthesis depth) in the returned parser state are not meaningful.</source>
          <target state="translated">El valor de retorno es el mismo que si llama a la funci&amp;oacute;n de an&amp;aacute;lisis de bajo nivel &lt;code&gt;parse-partial-sexp&lt;/code&gt; para analizar desde el principio de la parte visible del b&amp;uacute;fer hasta &lt;var&gt;pos&lt;/var&gt; (consulte &lt;a href=&quot;low_002dlevel-parsing#Low_002dLevel-Parsing&quot;&gt;An&amp;aacute;lisis de bajo nivel&lt;/a&gt; ). Sin embargo, &lt;code&gt;syntax-ppss&lt;/code&gt; usa cach&amp;eacute;s para acelerar el c&amp;aacute;lculo. Debido a esta optimizaci&amp;oacute;n, el segundo valor (subexpresi&amp;oacute;n completa anterior) y el sexto valor (profundidad m&amp;iacute;nima de par&amp;eacute;ntesis) en el estado del analizador devuelto no son significativos.</target>
        </trans-unit>
        <trans-unit id="e18c940c557733fa2d17296522cd2ee2f382b25f" translate="yes" xml:space="preserve">
          <source>The return value is the total amount of leftward horizontal scrolling in effect after the change&amp;mdash;just like the value returned by &lt;code&gt;window-hscroll&lt;/code&gt; (below).</source>
          <target state="translated">El valor de retorno es la cantidad total de desplazamiento horizontal hacia la izquierda en efecto despu&amp;eacute;s del cambio, al igual que el valor devuelto por &lt;code&gt;window-hscroll&lt;/code&gt; (abajo).</target>
        </trans-unit>
        <trans-unit id="d57cd36326fa59864f8c712bddff5dc5bb7f668f" translate="yes" xml:space="preserve">
          <source>The return value is the value of the last form in &lt;var&gt;body&lt;/var&gt;. The current buffer is restored even in case of an abnormal exit via &lt;code&gt;throw&lt;/code&gt; or error (see &lt;a href=&quot;nonlocal-exits#Nonlocal-Exits&quot;&gt;Nonlocal Exits&lt;/a&gt;).</source>
          <target state="translated">El valor de retorno es el valor de la &amp;uacute;ltima forma del &lt;var&gt;body&lt;/var&gt; . El b&amp;uacute;fer actual se restaura incluso en caso de una salida anormal mediante un &lt;code&gt;throw&lt;/code&gt; o un error (consulte &lt;a href=&quot;nonlocal-exits#Nonlocal-Exits&quot;&gt;Salidas no locales&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="eb0d4689de602d882bfebd89386a5243b7f33720" translate="yes" xml:space="preserve">
          <source>The return value is the value of the last form in &lt;var&gt;body&lt;/var&gt;. You can return the contents of the temporary buffer by using &lt;code&gt;(buffer-string)&lt;/code&gt; as the last form.</source>
          <target state="translated">El valor de retorno es el valor de la &amp;uacute;ltima forma del &lt;var&gt;body&lt;/var&gt; . Puede devolver el contenido del b&amp;uacute;fer temporal utilizando &lt;code&gt;(buffer-string)&lt;/code&gt; como &amp;uacute;ltima forma.</target>
        </trans-unit>
        <trans-unit id="98b96176f1db00d3485afd4a66e4aa0f4d04fd5e" translate="yes" xml:space="preserve">
          <source>The return value makes sure that all components of &lt;var&gt;window&lt;/var&gt; remain fully visible if &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s size were actually set to it. With &lt;var&gt;horizontal&lt;/var&gt;&lt;code&gt;nil&lt;/code&gt; it includes the mode and header line, the horizontal scroll bar and the bottom divider, if present. With &lt;var&gt;horizontal&lt;/var&gt; non-&lt;code&gt;nil&lt;/code&gt; it includes the margins and fringes, the vertical scroll bar and the right divider, if present.</source>
          <target state="translated">El valor de retorno asegura que todos los componentes de la &lt;var&gt;window&lt;/var&gt; permanezcan completamente visibles si el tama&amp;ntilde;o de la &lt;var&gt;window&lt;/var&gt; est&amp;aacute; realmente configurado. Con &lt;var&gt;horizontal&lt;/var&gt; &lt;code&gt;nil&lt;/code&gt; incluye el modo y la l&amp;iacute;nea de encabezado, la barra de desplazamiento horizontal y el divisor inferior, si est&amp;aacute; presente. Con &lt;var&gt;horizontal&lt;/var&gt; non- &lt;code&gt;nil&lt;/code&gt; incluye los m&amp;aacute;rgenes y franjas, la barra de desplazamiento vertical y el divisor derecho, si est&amp;aacute; presente.</target>
        </trans-unit>
        <trans-unit id="56acd2a554fb8715a71ba301e194647feef1c650" translate="yes" xml:space="preserve">
          <source>The return value of &lt;code&gt;call-process-region&lt;/code&gt; is just like that of &lt;code&gt;call-process&lt;/code&gt;: &lt;code&gt;nil&lt;/code&gt; if you told it to return without waiting; otherwise, a number or string which indicates how the subprocess terminated.</source>
          <target state="translated">El valor de retorno de &lt;code&gt;call-process-region&lt;/code&gt; es como el de &lt;code&gt;call-process&lt;/code&gt; : &lt;code&gt;nil&lt;/code&gt; si le dijo que regresara sin esperar; de lo contrario, un n&amp;uacute;mero o cadena que indica c&amp;oacute;mo termin&amp;oacute; el subproceso.</target>
        </trans-unit>
        <trans-unit id="5069facca425b351b86dde2c2ae0c0771e388177" translate="yes" xml:space="preserve">
          <source>The return value of &lt;code&gt;completion-table-dynamic&lt;/code&gt; is a function that can be used as the 2nd argument to &lt;code&gt;try-completion&lt;/code&gt; and &lt;code&gt;all-completions&lt;/code&gt;. Note that this function will always return empty metadata and trivial boundaries (see &lt;a href=&quot;#Programmed-Completion&quot;&gt;Programmed Completion&lt;/a&gt;).</source>
          <target state="translated">El valor de retorno de &lt;code&gt;completion-table-dynamic&lt;/code&gt; de finalizaci&amp;oacute;n din&amp;aacute;mica es una funci&amp;oacute;n que se puede utilizar como segundo argumento para &lt;code&gt;try-completion&lt;/code&gt; y completar &lt;code&gt;all-completions&lt;/code&gt; . Tenga en cuenta que esta funci&amp;oacute;n siempre devolver&amp;aacute; metadatos vac&amp;iacute;os y l&amp;iacute;mites triviales (consulte &lt;a href=&quot;#Programmed-Completion&quot;&gt;Finalizaci&amp;oacute;n programada&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="eb1115fc8b41440862e5616560ee61c6930b3d4e" translate="yes" xml:space="preserve">
          <source>The return value of &lt;code&gt;defun&lt;/code&gt; is undefined.</source>
          <target state="translated">El valor de retorno de &lt;code&gt;defun&lt;/code&gt; no est&amp;aacute; definido.</target>
        </trans-unit>
        <trans-unit id="a22f1787f8edaffd1df1c076115e598858217063" translate="yes" xml:space="preserve">
          <source>The return value of &lt;code&gt;indent-relative&lt;/code&gt; is unpredictable.</source>
          <target state="translated">El valor de retorno de &lt;code&gt;indent-relative&lt;/code&gt; es impredecible.</target>
        </trans-unit>
        <trans-unit id="40830d574522cf348ebff2db025053eb30711de0" translate="yes" xml:space="preserve">
          <source>The return value of &lt;code&gt;map-y-or-n-p&lt;/code&gt; is the number of objects acted on.</source>
          <target state="translated">El valor de retorno de &lt;code&gt;map-y-or-n-p&lt;/code&gt; es el n&amp;uacute;mero de objetos sobre los que se act&amp;uacute;a.</target>
        </trans-unit>
        <trans-unit id="bcb50cbd862df1ce6221c36f84f21509e97f8fb8" translate="yes" xml:space="preserve">
          <source>The return value of &lt;code&gt;momentary-string-display&lt;/code&gt; is not meaningful.</source>
          <target state="translated">El valor de retorno de &lt;code&gt;momentary-string-display&lt;/code&gt; no es significativo.</target>
        </trans-unit>
        <trans-unit id="ee4347aba22a42b7519b85d2086502c660164bde" translate="yes" xml:space="preserve">
          <source>The return value of &lt;code&gt;translate-region&lt;/code&gt; is the number of characters that were actually changed by the translation. This does not count characters that were mapped into themselves in the translation table.</source>
          <target state="translated">El valor de retorno de &lt;code&gt;translate-region&lt;/code&gt; es el n&amp;uacute;mero de caracteres que realmente cambi&amp;oacute; la traducci&amp;oacute;n. Esto no cuenta los caracteres que se asignaron a s&amp;iacute; mismos en la tabla de traducci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="ccc82eb191bcbf19332876523e72f6c383beea99" translate="yes" xml:space="preserve">
          <source>The return value of this function is &lt;code&gt;t&lt;/code&gt; if the text would be completely hidden on display, or a non-&lt;code&gt;nil&lt;/code&gt;, non-&lt;code&gt;t&lt;/code&gt; value if the text would be replaced by an ellipsis.</source>
          <target state="translated">El valor de retorno de esta funci&amp;oacute;n es &lt;code&gt;t&lt;/code&gt; si el texto estar&amp;iacute;a completamente oculto en la pantalla, o un valor no &lt;code&gt;nil&lt;/code&gt; , no &lt;code&gt;t&lt;/code&gt; si el texto fuera reemplazado por una elipsis.</target>
        </trans-unit>
        <trans-unit id="43b0ec1a11637964920ecb2540843fb9ed801524" translate="yes" xml:space="preserve">
          <source>The return value of this function. If omitted or &lt;code&gt;nil&lt;/code&gt;, return a process object. Otherwise, a cons of the form &lt;code&gt;(&lt;var&gt;process-object&lt;/var&gt;
. &lt;var&gt;plist&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;plist&lt;/var&gt; has keywords:</source>
          <target state="translated">El valor de retorno de esta funci&amp;oacute;n. Si se omite o es &lt;code&gt;nil&lt;/code&gt; , devuelve un objeto de proceso. De lo contrario, un contras de la forma &lt;code&gt;(&lt;var&gt;process-object&lt;/var&gt; . &lt;var&gt;plist&lt;/var&gt;)&lt;/code&gt; , donde &lt;var&gt;plist&lt;/var&gt; tiene palabras clave:</target>
        </trans-unit>
        <trans-unit id="6b902298331d5acafbc78a6a866439d8f418148b" translate="yes" xml:space="preserve">
          <source>The returned &lt;em&gt;prec2&lt;/em&gt; table holds constraints between pairs of tokens, and for any given pair only one constraint can be present: T1 &amp;lt; T2, T1 = T2, or T1 &amp;gt; T2.</source>
          <target state="translated">La tabla &lt;em&gt;prec2&lt;/em&gt; devuelta contiene restricciones entre pares de tokens, y para cualquier par dado, solo puede estar presente una restricci&amp;oacute;n: T1 &amp;lt;T2, T1 = T2 o T1&amp;gt; T2.</target>
        </trans-unit>
        <trans-unit id="dbc5dc6672398dd058c6b4f7b7fadc842548ff7b" translate="yes" xml:space="preserve">
          <source>The returned event may come directly from the user, or from a keyboard macro. It is not decoded by the keyboard&amp;rsquo;s input coding system (see &lt;a href=&quot;terminal-i_002fo-encoding#Terminal-I_002fO-Encoding&quot;&gt;Terminal I/O Encoding&lt;/a&gt;).</source>
          <target state="translated">El evento devuelto puede provenir directamente del usuario o de una macro de teclado. No se decodifica mediante el sistema de codificaci&amp;oacute;n de entrada del teclado (consulte &lt;a href=&quot;terminal-i_002fo-encoding#Terminal-I_002fO-Encoding&quot;&gt;Codificaci&amp;oacute;n de E / S de terminal&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="4cdf1e97bec67e330632316ef5395fcf7caf2e12" translate="yes" xml:space="preserve">
          <source>The returned regexp is ordered in such a way that it will always match the longest string possible.</source>
          <target state="translated">El regexp devuelto se ordena de tal manera que siempre coincida con la cuerda m√°s larga posible.</target>
        </trans-unit>
        <trans-unit id="efdbd6df6dfdf2a517533221caa6311ed4d1e39a" translate="yes" xml:space="preserve">
          <source>The returned string may be &lt;var&gt;string&lt;/var&gt; itself if it does not contain any special characters.</source>
          <target state="translated">La cadena devuelta puede ser una &lt;var&gt;string&lt;/var&gt; s&amp;iacute; misma si no contiene ning&amp;uacute;n car&amp;aacute;cter especial.</target>
        </trans-unit>
        <trans-unit id="fd9bc80d26777c7e0a2a7afa6c8e55fbe066df53" translate="yes" xml:space="preserve">
          <source>The returned value is a descriptor for the added watch. Its type depends on the underlying library, it cannot be assumed to be an integer as in the example below. It should be used for comparison by &lt;code&gt;equal&lt;/code&gt; only.</source>
          <target state="translated">El valor devuelto es un descriptor del reloj agregado. Su tipo depende de la biblioteca subyacente, no se puede suponer que sea un n&amp;uacute;mero entero como en el ejemplo siguiente. Debe usarse para comparaci&amp;oacute;n solo por &lt;code&gt;equal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5526f73a053a966e99ef6b773d23afe60ad9d26c" translate="yes" xml:space="preserve">
          <source>The returned value is a string.</source>
          <target state="translated">El valor devuelto es una cadena.</target>
        </trans-unit>
        <trans-unit id="265dcc02f70278df1fa86f8ca9c808c95d187ef5" translate="yes" xml:space="preserve">
          <source>The returned value is unpredictable.</source>
          <target state="translated">El valor devuelto es impredecible.</target>
        </trans-unit>
        <trans-unit id="d67d7a62afb4deb22a1a4750f3d9471f23d28534" translate="yes" xml:space="preserve">
          <source>The right way to use this variable is to bind it with &lt;code&gt;let&lt;/code&gt; for a specific I/O operation. Its global value is normally &lt;code&gt;nil&lt;/code&gt;, and you should not globally set it to any other value. Here is an example of the right way to use the variable:</source>
          <target state="translated">La forma correcta de usar esta variable es vincularla con &lt;code&gt;let&lt;/code&gt; para una operaci&amp;oacute;n de E / S espec&amp;iacute;fica. Su valor global es normalmente &lt;code&gt;nil&lt;/code&gt; y no debe establecerlo globalmente en ning&amp;uacute;n otro valor. A continuaci&amp;oacute;n, se muestra un ejemplo de la forma correcta de utilizar la variable:</target>
        </trans-unit>
        <trans-unit id="39952ca9e7a27cc76fd0f660398052f252830c23" translate="yes" xml:space="preserve">
          <source>The root window of this frame is an internal window, &lt;var&gt;W1&lt;/var&gt;. Its child windows form a horizontal combination, consisting of the live window &lt;var&gt;W2&lt;/var&gt; and the internal window &lt;var&gt;W3&lt;/var&gt;. The child windows of &lt;var&gt;W3&lt;/var&gt; form a vertical combination, consisting of the live windows &lt;var&gt;W4&lt;/var&gt; and &lt;var&gt;W5&lt;/var&gt;. Hence, the live windows in this window tree are &lt;var&gt;W2&lt;/var&gt;, &lt;var&gt;W4&lt;/var&gt;, and &lt;var&gt;W5&lt;/var&gt;.</source>
          <target state="translated">La ventana ra&amp;iacute;z de este marco es una ventana interna, &lt;var&gt;W1&lt;/var&gt; . Sus ventanas secundarias forman una combinaci&amp;oacute;n horizontal, que consta de la ventana &lt;var&gt;W2&lt;/var&gt; y la ventana interna &lt;var&gt;W3&lt;/var&gt; . Las ventanas secundarias de &lt;var&gt;W3&lt;/var&gt; forman una combinaci&amp;oacute;n vertical, que consta de las ventanas &lt;var&gt;W4&lt;/var&gt; y &lt;var&gt;W5&lt;/var&gt; . Por lo tanto, las ventanas activas en este &amp;aacute;rbol de ventanas son &lt;var&gt;W2&lt;/var&gt; , &lt;var&gt;W4&lt;/var&gt; y &lt;var&gt;W5&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="814d3881be5a72669b9ab4a2a2237b0156c64c15" translate="yes" xml:space="preserve">
          <source>The rule for finding the binding of a key sequence assumes that the intermediate bindings (found for the events before the last) are all keymaps; if this is not so, the sequence of events does not form a unit&amp;mdash;it is not really one key sequence. In other words, removing one or more events from the end of any valid key sequence must always yield a prefix key. For example,</source>
          <target state="translated">La regla para encontrar la vinculaci&amp;oacute;n de una secuencia de teclas supone que las vinculaciones intermedias (que se encuentran para los eventos anteriores al &amp;uacute;ltimo) son mapas de teclas; si no es as&amp;iacute;, la secuencia de eventos no forma una unidad, no es realmente una secuencia clave. En otras palabras, eliminar uno o m&amp;aacute;s eventos del final de cualquier secuencia de teclas v&amp;aacute;lida siempre debe producir una clave de prefijo. Por ejemplo,</target>
        </trans-unit>
        <trans-unit id="2122fb4e21ddd11686b2348d982b3ec0119e1727" translate="yes" xml:space="preserve">
          <source>The rule for indentation after &lt;code&gt;&quot;:=&quot;&lt;/code&gt; exists because otherwise SMIE would treat &lt;code&gt;&quot;:=&quot;&lt;/code&gt; as an infix operator and would align the right argument with the left one.</source>
          <target state="translated">La regla para la sangr&amp;iacute;a despu&amp;eacute;s de &lt;code&gt;&quot;:=&quot;&lt;/code&gt; existe porque, de lo contrario, SMIE tratar&amp;iacute;a &lt;code&gt;&quot;:=&quot;&lt;/code&gt; como un operador infijo y alinear&amp;iacute;a el argumento derecho con el izquierdo.</target>
        </trans-unit>
        <trans-unit id="37f434c4f0270c5122c827e81b52b88938539dd1" translate="yes" xml:space="preserve">
          <source>The rule for indentation before &lt;code&gt;&quot;begin&quot;&lt;/code&gt; is an example of the use of virtual indentation: This rule is used only when &lt;code&gt;&quot;begin&quot;&lt;/code&gt; is hanging, which can happen only when &lt;code&gt;&quot;begin&quot;&lt;/code&gt; is not at the beginning of a line. So this is not used when indenting &lt;code&gt;&quot;begin&quot;&lt;/code&gt; itself but only when indenting something relative to this &lt;code&gt;&quot;begin&quot;&lt;/code&gt;. Concretely, this rule changes the indentation from:</source>
          <target state="translated">La regla para la sangr&amp;iacute;a antes de &lt;code&gt;&quot;begin&quot;&lt;/code&gt; es un ejemplo del uso de la sangr&amp;iacute;a virtual: esta regla se usa solo cuando &lt;code&gt;&quot;begin&quot;&lt;/code&gt; est&amp;aacute; colgando, lo que puede suceder solo cuando &lt;code&gt;&quot;begin&quot;&lt;/code&gt; no est&amp;aacute; al principio de una l&amp;iacute;nea. Por lo tanto, esto no se usa cuando se aplica sangr&amp;iacute;a a &lt;code&gt;&quot;begin&quot;&lt;/code&gt; , sino solo cuando se aplica sangr&amp;iacute;a a algo relativo a este &lt;code&gt;&quot;begin&quot;&lt;/code&gt; . Concretamente, esta regla cambia la sangr&amp;iacute;a de:</target>
        </trans-unit>
        <trans-unit id="d2ae301bb08cbc756929fb8516392dcfbc907e46" translate="yes" xml:space="preserve">
          <source>The rule for indentation before &lt;code&gt;&quot;if&quot;&lt;/code&gt; is similar to the one for &lt;code&gt;&quot;begin&quot;&lt;/code&gt;, but where the purpose is to treat &lt;code&gt;&quot;else if&quot;&lt;/code&gt; as a single unit, so as to align a sequence of tests rather than indent each test further to the right. This function does this only in the case where the &lt;code&gt;&quot;if&quot;&lt;/code&gt; is not placed on a separate line, hence the &lt;code&gt;smie-rule-bolp&lt;/code&gt; test.</source>
          <target state="translated">La regla para la sangr&amp;iacute;a antes de &lt;code&gt;&quot;if&quot;&lt;/code&gt; es similar a la de &lt;code&gt;&quot;begin&quot;&lt;/code&gt; , pero donde el prop&amp;oacute;sito es tratar &lt;code&gt;&quot;else if&quot;&lt;/code&gt; como una sola unidad, para alinear una secuencia de pruebas en lugar de sangrar cada prueba m&amp;aacute;s all&amp;aacute; de la derecho. Esta funci&amp;oacute;n hace esto solo en el caso de que el &lt;code&gt;&quot;if&quot;&lt;/code&gt; no se coloque en una l&amp;iacute;nea separada, de ah&amp;iacute; la &lt;code&gt;smie-rule-bolp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3e51195c9e4bef9ac5fed369ac13d21d4ecbb83d" translate="yes" xml:space="preserve">
          <source>The rule for the token &lt;code&gt;&quot;,&quot;&lt;/code&gt; make SMIE try to be more clever when the comma separator is placed at the beginning of lines. It tries to outdent the separator so as to align the code after the comma; for example:</source>
          <target state="translated">La regla para el token &lt;code&gt;&quot;,&quot;&lt;/code&gt; hace que SMIE intente ser m&amp;aacute;s inteligente cuando el separador de coma se coloca al principio de las l&amp;iacute;neas. Intenta anular la sangr&amp;iacute;a del separador para alinear el c&amp;oacute;digo despu&amp;eacute;s de la coma; por ejemplo:</target>
        </trans-unit>
        <trans-unit id="2ea9d036c2f0944a227079154b59cbdc7f4c6f40" translate="yes" xml:space="preserve">
          <source>The rx Structured Regexp Notation</source>
          <target state="translated">La Notaci√≥n de Regexp estructurada rx</target>
        </trans-unit>
        <trans-unit id="b8ef342720c667ded9bb4a10754ff3f59b3c59dd" translate="yes" xml:space="preserve">
          <source>The safe value definitions specified with &lt;code&gt;autoload&lt;/code&gt; are copied into the package&amp;rsquo;s autoloads file (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d3cd8e2cc092de1d198d6e2528520fe0e19f022" translate="yes" xml:space="preserve">
          <source>The same alist shown above could be regarded as having the associated value in the &lt;small&gt;CDR&lt;/small&gt; of the element; the value associated with &lt;code&gt;rose&lt;/code&gt; would be the list &lt;code&gt;(red)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b598a52d532ebb9508666d7703290c6b51b2a77" translate="yes" xml:space="preserve">
          <source>The same comparison is made for the characters before the old and new locations. The result may be to execute two &lt;code&gt;point-left&lt;/code&gt; functions (which may be the same function) and/or two &lt;code&gt;point-entered&lt;/code&gt; functions (which may be the same function). In any case, all the &lt;code&gt;point-left&lt;/code&gt; functions are called first, followed by all the &lt;code&gt;point-entered&lt;/code&gt; functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76be1f3a5b9d85ac92db6757c8aa658e4c83550f" translate="yes" xml:space="preserve">
          <source>The same list represented in the second box notation looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de2afa602b0c6c3641bec0bd9db4c0990c1cd810" translate="yes" xml:space="preserve">
          <source>The same magic comment can copy any kind of form into</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a6fb3f7c0f51bfade6342cfbde9264dd003c537" translate="yes" xml:space="preserve">
          <source>The same sort of thing goes for macros and &lt;code&gt;defsubst&lt;/code&gt; functions defined locally and only for use within the file. They are needed for compiling the file, but in most cases they are not needed for execution of the compiled file. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eafcd90784684c4b6941c5a7e212f4389f29375" translate="yes" xml:space="preserve">
          <source>The scope of the &lt;code&gt;rx-let&lt;/code&gt; bindings is lexical, which means that they are not visible outside &lt;var&gt;body&lt;/var&gt; itself, even in functions called from &lt;var&gt;body&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2fa435053db7e98e5d129031c4eef40310ac931" translate="yes" xml:space="preserve">
          <source>The screen position of the left edge of the frame&amp;rsquo;s icon, in pixels, counting from the left edge of the screen. This takes effect when the frame is iconified, if the window manager supports this feature. If you specify a value for this parameter, then you must also specify a value for &lt;code&gt;icon-top&lt;/code&gt; and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e50e923623c82eb23aa190894066a65503358e35" translate="yes" xml:space="preserve">
          <source>The screen position of the top (or bottom) edge, in pixels, with respect to the top (or bottom) edge of the display or parent frame. It works just like &lt;code&gt;left&lt;/code&gt;, except vertically instead of horizontally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cda3076dfbc17092f6e7b4b160ef022e7169a19" translate="yes" xml:space="preserve">
          <source>The screen position of the top edge of the frame&amp;rsquo;s icon, in pixels, counting from the top edge of the screen. This takes effect when the frame is iconified, if the window manager supports this feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e751536ab732a9f489e9afb199afec619dbdde42" translate="yes" xml:space="preserve">
          <source>The script that the font must support (a symbol).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ca4bb9976c740ecc0981b8e9b17319d5ac9d81d" translate="yes" xml:space="preserve">
          <source>The search for an applicable handler checks all the established handlers starting with the most recently established one. Thus, if two nested &lt;code&gt;condition-case&lt;/code&gt; forms offer to handle the same error, the inner of the two gets to handle it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="473e360900bfeca8b04b8a805f75bfd348f74028" translate="yes" xml:space="preserve">
          <source>The second argument &lt;var&gt;infile&lt;/var&gt; may invoke a file name handler. The file name handler could be different from the handler chosen for the &lt;code&gt;process-file&lt;/code&gt; function itself. (For example, &lt;code&gt;default-directory&lt;/code&gt; could be on one remote host, and &lt;var&gt;infile&lt;/var&gt; on a different remote host. Or &lt;code&gt;default-directory&lt;/code&gt; could be non-special, whereas &lt;var&gt;infile&lt;/var&gt; is on a remote host.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79312a7cce37d37bed367239a38284f2028a8f95" translate="yes" xml:space="preserve">
          <source>The second argument &lt;var&gt;size&lt;/var&gt; is the size of text, in characters, following point. The function examines text only within &lt;var&gt;size&lt;/var&gt; characters after point. Normally, the buffer should be positioned at the beginning when this function is called, because one of the places for the &lt;code&gt;coding:&lt;/code&gt; tag is the first one or two lines of the file; in that case, &lt;var&gt;size&lt;/var&gt; should be the size of the buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1571642b672d840c71b1f3b7f58f82da1c8dc26" translate="yes" xml:space="preserve">
          <source>The second argument of &lt;code&gt;condition-case&lt;/code&gt; is called the &lt;em&gt;protected form&lt;/em&gt;. (In the example above, the protected form is a call to &lt;code&gt;delete-file&lt;/code&gt;.) The error handlers go into effect when this form begins execution and are deactivated when this form returns. They remain in effect for all the intervening time. In particular, they are in effect during the execution of functions called by this form, in their subroutines, and so on. This is a good thing, since, strictly speaking, errors can be signaled only by Lisp primitives (including &lt;code&gt;signal&lt;/code&gt; and &lt;code&gt;error&lt;/code&gt;) called by the protected form, not by the protected form itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="335d04a9fb11a0984d4c4b395642d49eb8062099" translate="yes" xml:space="preserve">
          <source>The second argument, &lt;var&gt;minibuf&lt;/var&gt;, says which frames to consider:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="043e175330e7a9266b5fd9e72aad0ac9c4f497a2" translate="yes" xml:space="preserve">
          <source>The second cons cell, which previously held the element &lt;code&gt;b&lt;/code&gt;, still exists and its &lt;small&gt;CAR&lt;/small&gt; is still &lt;code&gt;b&lt;/code&gt;, but it no longer forms part of this list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc4971cc83ebc92e997f73e4a1271f23051fec45" translate="yes" xml:space="preserve">
          <source>The second crucial difference between macros and functions is that the value returned by the macro body is an alternate Lisp expression, also known as the &lt;em&gt;expansion&lt;/em&gt; of the macro. The Lisp interpreter proceeds to evaluate the expansion as soon as it comes back from the macro.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1a6950eaae19621908380f623f25ce6e57c63a4" translate="yes" xml:space="preserve">
          <source>The second element is a list of symbols&amp;mdash;the argument variable names. This is called the &lt;em&gt;lambda list&lt;/em&gt;. When a Lisp function is called, the argument values are matched up against the variables in the lambda list, which are given local bindings with the values provided. See &lt;a href=&quot;local-variables#Local-Variables&quot;&gt;Local Variables&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca40c0325b239bb969d90b6c5d596d17aee4f342" translate="yes" xml:space="preserve">
          <source>The second element, &lt;var&gt;keywords-only&lt;/var&gt;, specifies the value of the variable &lt;code&gt;font-lock-keywords-only&lt;/code&gt;. If this is omitted or &lt;code&gt;nil&lt;/code&gt;, syntactic fontification (of strings and comments) is also performed. If this is non-&lt;code&gt;nil&lt;/code&gt;, syntactic fontification is not performed. See &lt;a href=&quot;syntactic-font-lock#Syntactic-Font-Lock&quot;&gt;Syntactic Font Lock&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05af5100d6bbcd92ab672dd54e8a7002bdd81fa9" translate="yes" xml:space="preserve">
          <source>The second example shows that when the final argument is a sequence but not a list, the sequence&amp;rsquo;s elements do not become elements of the resulting list. Instead, the sequence becomes the final &lt;small&gt;CDR&lt;/small&gt;, like any other non-list final argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78870468f3063c31ec99a482f80bcfe4fdf9caa7" translate="yes" xml:space="preserve">
          <source>The second item in the list, &lt;var&gt;regexp&lt;/var&gt;, is a regular expression (see &lt;a href=&quot;regular-expressions#Regular-Expressions&quot;&gt;Regular Expressions&lt;/a&gt;); anything in the buffer that it matches is considered a definition, something to mention in the buffer index. The third item, &lt;var&gt;index&lt;/var&gt;, is a non-negative integer that indicates which subexpression in &lt;var&gt;regexp&lt;/var&gt; matches the definition&amp;rsquo;s name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39db81295962c9250ac04e8024ae7b73da16e061" translate="yes" xml:space="preserve">
          <source>The second of these hooks is run when a &lt;em&gt;window size change&lt;/em&gt; has been detected which means that a window was created, assigned another buffer, or changed its total size or that of its text area.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e10a4024014db92893950553799fa332ec4eec91" translate="yes" xml:space="preserve">
          <source>The second part of the pattern matches any closing braces and quotation marks, zero or more of them, that may follow the period, question mark or exclamation mark. The &lt;code&gt;\&quot;&lt;/code&gt; is Lisp syntax for a double-quote in a string. The &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7da34c753b40326f37f6172c1b58a8c5f825b8f9" translate="yes" xml:space="preserve">
          <source>The selected frame is on a graphical display supporting such dialogs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dda9cd63960f9a91b850378b1927da3e714f3287" translate="yes" xml:space="preserve">
          <source>The selected window if it is either specified by a &lt;code&gt;previous-window&lt;/code&gt;&lt;var&gt;alist&lt;/var&gt; entry or showed &lt;var&gt;buffer&lt;/var&gt; before.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4beffd62ee0e9328af316739d55ab903054a8e51" translate="yes" xml:space="preserve">
          <source>The selected window is considered part of a group when the buffer local variable &lt;code&gt;selected-window-group-function&lt;/code&gt; is set to a function. In this case, &lt;code&gt;selected-window-group&lt;/code&gt; calls it with no arguments and returns its result (which should be the list of windows in the group).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b994494213138fb5de0429d794e7e303777bef" translate="yes" xml:space="preserve">
          <source>The selected window is the one that you edit in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8665184a4907ab2354fc3286c669e4a6527d1f62" translate="yes" xml:space="preserve">
          <source>The selected window&amp;rsquo;s mode line is usually displayed in a different color using the face &lt;code&gt;mode-line&lt;/code&gt;. Other windows&amp;rsquo; mode lines appear in the face &lt;code&gt;mode-line-inactive&lt;/code&gt; instead. See &lt;a href=&quot;faces#Faces&quot;&gt;Faces&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8000cca8be137f75ed18782493ccc880df1113c" translate="yes" xml:space="preserve">
          <source>The semantics of maximizing and iconifying child frames is highly window-system dependent. As a rule, applications should never invoke these operations on child frames. By default, invoking &lt;code&gt;iconify-frame&lt;/code&gt; on a child frame will try to iconify the top-level frame corresponding to that child frame instead. To obtain a different behavior, users may customize the option &lt;code&gt;iconify-child-frame&lt;/code&gt; described below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fdee8f54d168addba0e7230f98080d05a806af9" translate="yes" xml:space="preserve">
          <source>The sequence of calls to &lt;code&gt;select-window&lt;/code&gt; with a non-&lt;code&gt;nil&lt;/code&gt;&lt;var&gt;norecord&lt;/var&gt; argument determines an ordering of windows by their selection time. The function &lt;code&gt;get-lru-window&lt;/code&gt; can be used to retrieve the least recently selected live window (see &lt;a href=&quot;cyclic-window-ordering#Cyclic-Window-Ordering&quot;&gt;Cyclic Window Ordering&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6126ae190f28d94232911a10b32f330dbd4538f" translate="yes" xml:space="preserve">
          <source>The sequence of kills in the kill ring wraps around, so that after the oldest one comes the newest one, and before the newest one goes the oldest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d17460f17018f05e49ff10eb23d17bcf4ac2e075" translate="yes" xml:space="preserve">
          <source>The serial port can be configured at run-time, without having to close and re-open it. The function &lt;code&gt;serial-process-configure&lt;/code&gt; lets you change the speed, bytesize, and other parameters. In a terminal window created by &lt;code&gt;serial-term&lt;/code&gt;, you can click on the mode line for configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2a9ae6c941e0bf24383fb2647a4f9171e1de594" translate="yes" xml:space="preserve">
          <source>The server supports hyperlinks in the notifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1636c548d4728e3546b4e61c467b130421fb3043" translate="yes" xml:space="preserve">
          <source>The server supports images in the notifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b6b682f52a52c12c8f9b21281af0b720bd16c65" translate="yes" xml:space="preserve">
          <source>The server supports persistence of notifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21a9b47dbf0032eaa7cb77326a6a549f6f528a88" translate="yes" xml:space="preserve">
          <source>The server supports sounds on notifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32a2fb16a21966056b09359c49d25b26580e0735" translate="yes" xml:space="preserve">
          <source>The server will provide the specified actions to the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="487bc1e1eea831388d87886ebed5499c261328d4" translate="yes" xml:space="preserve">
          <source>The server will render an animation of all the frames in a given image array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d669bc7256cde6bc52048dc9f7dc18c0ff77233" translate="yes" xml:space="preserve">
          <source>The server&amp;rsquo;s process buffer value is never used directly, but the log function can retrieve it and use it to log connections by inserting text there.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4af74ba408681f224f4eae7dc1fcceae876b1eb" translate="yes" xml:space="preserve">
          <source>The server&amp;rsquo;s version number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="850499dab30d08985261f9268e55591d68aa5d33" translate="yes" xml:space="preserve">
          <source>The session ID of the process. This is a number that is the process ID of the process&amp;rsquo;s &lt;em&gt;session leader&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76fb62b9ff894328ee87291f8886595e1599a44b" translate="yes" xml:space="preserve">
          <source>The set of abbrevs currently in effect is recorded in an &lt;em&gt;abbrev table&lt;/em&gt;. Each buffer has a local abbrev table, but normally all buffers in the same major mode share one abbrev table. There is also a global abbrev table. Normally both are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13bc56e40d973a547522dffd931b5104b534cbab" translate="yes" xml:space="preserve">
          <source>The set of possible multi-event key sequences depends on the bindings for prefix keys; therefore, it can be different for different keymaps, and can change when bindings are changed. However, a one-event sequence is always a key sequence, because it does not depend on any prefix keys for its well-formedness.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea89afa3ebcf085515befba35c098def36ebf120" translate="yes" xml:space="preserve">
          <source>The set of supported &lt;code&gt;TZ&lt;/code&gt; strings is system-dependent. GNU and many other systems support the tzdata database, e.g., &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed52d340e29425d0c36d441fce1706eefbff92a9" translate="yes" xml:space="preserve">
          <source>The setf Macro</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="656aedcd7cd333555b5a910bc06a2f9bb048509a" translate="yes" xml:space="preserve">
          <source>The shell command &lt;code&gt;printenv&lt;/code&gt; prints all or part of the environment:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="697532010a390342417a302aa64e0eeb89a98cb2" translate="yes" xml:space="preserve">
          <source>The shell command &lt;code&gt;uptime&lt;/code&gt; returns similar information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c0ee07626a06ec319c5fa6dda80e5cd02b895c5" translate="yes" xml:space="preserve">
          <source>The shift modifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="526047c002039949790c223830818877585cd005" translate="yes" xml:space="preserve">
          <source>The significant way that errors are classified is by their condition names&amp;mdash;the names used to match errors with handlers. An error symbol serves only as a convenient way to specify the intended error message and list of condition names. It would be cumbersome to give &lt;code&gt;signal&lt;/code&gt; a list of condition names rather than one error symbol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="701a4ad01ef06b4bddd59b324ead42eff350dde1" translate="yes" xml:space="preserve">
          <source>The simple way to define an inline function, is to write &lt;code&gt;defsubst&lt;/code&gt; instead of &lt;code&gt;defun&lt;/code&gt;. The rest of the definition looks just the same, but using &lt;code&gt;defsubst&lt;/code&gt; says to make it inline for byte compilation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51e0da75b610832dceffa32e7fc903b0a72cc0e2" translate="yes" xml:space="preserve">
          <source>The simpler (and original) way to define a menu item is to bind some event type (it doesn&amp;rsquo;t matter what event type) to a binding like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63bdaac10002dfd9144bf4493ac37c5ee6a7227" translate="yes" xml:space="preserve">
          <source>The simplest order of execution is sequential execution: first form &lt;var&gt;a&lt;/var&gt;, then form &lt;var&gt;b&lt;/var&gt;, and so on. This is what happens when you write several forms in succession in the body of a function, or at top level in a file of Lisp code&amp;mdash;the forms are executed in the order written. We call this &lt;em&gt;textual order&lt;/em&gt;. For example, if a function body consists of two forms &lt;var&gt;a&lt;/var&gt; and &lt;var&gt;b&lt;/var&gt;, evaluation of the function evaluates first &lt;var&gt;a&lt;/var&gt; and then &lt;var&gt;b&lt;/var&gt;. The result of evaluating &lt;var&gt;b&lt;/var&gt; becomes the value of the function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e0a2f8802289814697d3ff9bc642bb98ac915eb" translate="yes" xml:space="preserve">
          <source>The simplest way to add an element to an alist is like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b58a2304ffb2d18ce86b489ba35624a904a8a1e9" translate="yes" xml:space="preserve">
          <source>The simplest way to examine text properties is to ask for the value of a particular property of a particular character. For that, use &lt;code&gt;get-text-property&lt;/code&gt;. Use &lt;code&gt;text-properties-at&lt;/code&gt; to get the entire property list of a character. See &lt;a href=&quot;property-search#Property-Search&quot;&gt;Property Search&lt;/a&gt;, for functions to examine the properties of a number of characters at once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adc76fb843de7f5b33d2478fbfc134dfe5c4dcf3" translate="yes" xml:space="preserve">
          <source>The simplest way to use a variable is &lt;em&gt;globally&lt;/em&gt;. This means that the variable has just one value at a time, and this value is in effect (at least for the moment) throughout the Lisp system. The value remains in effect until you specify a new one. When a new value replaces the old one, no trace of the old value remains in the variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b36ac08912d39209d118742c10208da562be7cf" translate="yes" xml:space="preserve">
          <source>The size of buffer&amp;rsquo;s gap. See &lt;a href=&quot;buffer-gap#Buffer-Gap&quot;&gt;Buffer Gap&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="873e96ede3bbdf4e5518603c5529cf1eece61c3f" translate="yes" xml:space="preserve">
          <source>The size of the accessible part of the current buffer; basically &lt;code&gt;(- (point-max) (point-min))&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a849ae6a00f9521aec6d2261f95fba3341d311e" translate="yes" xml:space="preserve">
          <source>The size of the file in bytes (&lt;code&gt;file-attribute-size&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f563b6a9a8db0e9d2b8a141ce4f9b7d9e8e1e86" translate="yes" xml:space="preserve">
          <source>The size of the new window can be adjusted by supplying &lt;code&gt;window-height&lt;/code&gt; and &lt;code&gt;window-width&lt;/code&gt; entries in &lt;var&gt;alist&lt;/var&gt;. If &lt;var&gt;alist&lt;/var&gt; contains a &lt;code&gt;preserve-size&lt;/code&gt; entry, Emacs will also try to preserve the size of the new window during future resize operations (see &lt;a href=&quot;preserving-window-sizes#Preserving-Window-Sizes&quot;&gt;Preserving Window Sizes&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43af7be726f5955aa5ff42c15118a19504247059" translate="yes" xml:space="preserve">
          <source>The size of the process&amp;rsquo;s &lt;em&gt;resident set&lt;/em&gt;, the number of kilobytes occupied by the process in the machine&amp;rsquo;s physical memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="576b8e3ff0609705a9b9504b486dacc40004ea6d" translate="yes" xml:space="preserve">
          <source>The sorting functions described in this section all rearrange text in a buffer. This is in contrast to the function &lt;code&gt;sort&lt;/code&gt;, which rearranges the order of the elements of a list (see &lt;a href=&quot;rearrangement#Rearrangement&quot;&gt;Rearrangement&lt;/a&gt;). The values returned by these functions are not meaningful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c3d2a4b26d988675d4c78f53514dab4c53dcc03" translate="yes" xml:space="preserve">
          <source>The sound must be stored as a file in RIFF-WAVE format (&amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0497cf1b10750bd04c03011dc18b4f0cfdc47413" translate="yes" xml:space="preserve">
          <source>The space of possible character codes is divided into various character sets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9432d6b9187cb979929edaa344995bf72578704f" translate="yes" xml:space="preserve">
          <source>The special commands of Edebug are available in the source code buffer in addition to the commands of Emacs Lisp mode. For example, you can type the Edebug command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="749a997c2ad2240b06198fe40cd85ef622970354" translate="yes" xml:space="preserve">
          <source>The special commands of these modes bind &lt;code&gt;buffer-read-only&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt; (with &lt;code&gt;let&lt;/code&gt;) or bind &lt;code&gt;inhibit-read-only&lt;/code&gt; to &lt;code&gt;t&lt;/code&gt; around the places where they themselves change the text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="388ba11e949e8870ac609c14e29761f15abdd417" translate="yes" xml:space="preserve">
          <source>The special form &lt;code&gt;interactive&lt;/code&gt; turns a Lisp function into a command. The &lt;code&gt;interactive&lt;/code&gt; form must be located at top-level in the function body, usually as the first form in the body; this applies to both lambda expressions (see &lt;a href=&quot;lambda-expressions#Lambda-Expressions&quot;&gt;Lambda Expressions&lt;/a&gt;) and &lt;code&gt;defun&lt;/code&gt; forms (see &lt;a href=&quot;defining-functions#Defining-Functions&quot;&gt;Defining Functions&lt;/a&gt;). This form does nothing during the actual execution of the function; its presence serves as a flag, telling the Emacs command loop that the function can be called interactively. The argument of the &lt;code&gt;interactive&lt;/code&gt; form specifies how the arguments for an interactive call should be read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0005a6b722d00b053f8a1c5bab2e99c2e0e932c1" translate="yes" xml:space="preserve">
          <source>The special form &lt;code&gt;quote&lt;/code&gt; returns its single argument, as written, without evaluating it. This provides a way to include constant symbols and lists, which are not self-evaluating objects, in a program. (It is not necessary to quote self-evaluating objects such as numbers, strings, and vectors.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="244f4b5640ec3dae1a8ddb2bdbc59df8cee21b33" translate="yes" xml:space="preserve">
          <source>The special form &lt;code&gt;track-mouse&lt;/code&gt; enables generation of motion events within its body. Outside of &lt;code&gt;track-mouse&lt;/code&gt; forms, Emacs does not generate events for mere motion of the mouse, and these events do not appear. See &lt;a href=&quot;mouse-tracking#Mouse-Tracking&quot;&gt;Mouse Tracking&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28ba34c98e1a089b9214cef4dc2999430a1d7a09" translate="yes" xml:space="preserve">
          <source>The special forms &lt;code&gt;defvar&lt;/code&gt; and &lt;code&gt;defconst&lt;/code&gt; also set the default value (if they set the variable at all), rather than any buffer-local value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e119bef1e610c9f0380fd95f6e4af11230682fc" translate="yes" xml:space="preserve">
          <source>The special forms &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;let*&lt;/code&gt; exist to create local bindings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67b8199effbdb879bbf1f5d04029672e2a21aec2" translate="yes" xml:space="preserve">
          <source>The special marker &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="417f26037bec7ec878e05ef7fce97d3107e1525c" translate="yes" xml:space="preserve">
          <source>The special position where editing takes place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6604b0bf24124b0211a16d199be68fe327c5aa41" translate="yes" xml:space="preserve">
          <source>The special properties &lt;code&gt;point-entered&lt;/code&gt; and &lt;code&gt;point-left&lt;/code&gt; record hook functions that report motion of point. Each time point moves, Emacs compares these two property values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84235cb39de6ef4fc27674810653ef520a1cb95c" translate="yes" xml:space="preserve">
          <source>The special return value &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cfd33d505b3e301ef67641d59464fa7fe2f87dd" translate="yes" xml:space="preserve">
          <source>The special value &lt;code&gt;child-frame&lt;/code&gt; means to make a minibuffer-only child frame (see &lt;a href=&quot;child-frames#Child-Frames&quot;&gt;Child Frames&lt;/a&gt;) whose parent becomes the frame created. As if specified as &lt;code&gt;nil&lt;/code&gt;, Emacs will set this parameter to the minibuffer window of the child frame but will not select the child frame after its creation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcdc41fab620d4b9e47384a2bf4786023f64d828" translate="yes" xml:space="preserve">
          <source>The specification for backquote below illustrates how to match dotted lists and use &lt;code&gt;nil&lt;/code&gt; to terminate recursion. It also illustrates how components of a vector may be matched. (The actual specification defined by Edebug is a little different, and does not support dotted lists because doing so causes very deep recursion that could fail.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27d6230ee26567ac631f3131ae7886bcc7a72c78" translate="yes" xml:space="preserve">
          <source>The specification string also says which fonts to use in the fontset. See below for the details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f25f9498af3ebb82fd4fd0ed6c991c529aa68e9" translate="yes" xml:space="preserve">
          <source>The specification version the server is compliant with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a30b5e6e028131d98090823da5db94954c0fdbe" translate="yes" xml:space="preserve">
          <source>The specified &lt;var&gt;alist&lt;/var&gt; is an association list of symbols and values. The following symbols have a special meaning:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e407764dfcb6e2f1247a11cf715cac7ed4f26bbf" translate="yes" xml:space="preserve">
          <source>The specified &lt;var&gt;frame&lt;/var&gt; becomes the selected frame, and its terminal becomes the selected terminal. This function then calls &lt;code&gt;select-window&lt;/code&gt; as a subroutine, passing the window selected within &lt;var&gt;frame&lt;/var&gt; as its first argument and &lt;var&gt;norecord&lt;/var&gt; as its second argument (hence, if &lt;var&gt;norecord&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, this avoids changing the order of recently selected windows and the buffer list). See &lt;a href=&quot;selecting-windows#Selecting-Windows&quot;&gt;Selecting Windows&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87e2533bf5024d0890c44a2a577f82288504b5ca" translate="yes" xml:space="preserve">
          <source>The specified functions are stored in the property list of &lt;var&gt;name&lt;/var&gt; under the property &lt;code&gt;hash-table-test&lt;/code&gt;; the property value&amp;rsquo;s form is &lt;code&gt;(&lt;var&gt;test-fn&lt;/var&gt; &lt;var&gt;hash-fn&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91455a3d8f4bdb484463e73b427656cc16a89567" translate="yes" xml:space="preserve">
          <source>The speed of the serial port in bits per second, a.k.a. &lt;em&gt;baud rate&lt;/em&gt;. The value can be any number, but most serial ports work only at a few defined values between 1200 and 115200, with 9600 being the most common value. If &lt;var&gt;speed&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the function ignores all other arguments and does not configure the port. This may be useful for special serial ports such as Bluetooth-to-serial converters, which can only be configured through &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52128a6146c27dc1c3960ab9a318c70adfaf8c01" translate="yes" xml:space="preserve">
          <source>The speed of the serial port in bits per second. This function calls &lt;code&gt;serial-process-configure&lt;/code&gt; to handle the speed; see the following documentation of that function for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbb6c823ca23a02980eeae5e0a0001e4cc0886fe" translate="yes" xml:space="preserve">
          <source>The square brackets indicate that the &lt;code&gt;&amp;amp;optional&lt;/code&gt; and &lt;code&gt;&amp;amp;rest&lt;/code&gt; clauses, and the variables that follow them, are optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81a3604cf4a5ac01501948bd0680c4975564433d" translate="yes" xml:space="preserve">
          <source>The stack frame made for the function call which enters the debugger in this way will be flagged automatically so that the debugger will be called again when the frame is exited. You can use the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a119c8d6df162a4c1cd3d34b9608179ca3eb2aa" translate="yes" xml:space="preserve">
          <source>The standard GNU Emacs Lisp directory tree contains the code for several major modes, in files such as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88217deefb3d70a4db90b540339f6b3e6d2c6eee" translate="yes" xml:space="preserve">
          <source>The standard definition of the &lt;code&gt;delete-frame&lt;/code&gt; event is to delete &lt;var&gt;frame&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03b918691e790a880d4fba6e47f98dbbdb8910de" translate="yes" xml:space="preserve">
          <source>The standard definition of this function is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6292beb7dc766e9cc6bfb7027445782776c9d55b" translate="yes" xml:space="preserve">
          <source>The standard definition of this function, on most operating systems, is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="259daec623d20179dd6c873402018404fce5ae52" translate="yes" xml:space="preserve">
          <source>The standard input for the new process comes from file &lt;var&gt;infile&lt;/var&gt; if &lt;var&gt;infile&lt;/var&gt; is not &lt;code&gt;nil&lt;/code&gt;, and from the null device otherwise. The argument &lt;var&gt;destination&lt;/var&gt; says where to put the process output. Here are the possibilities:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44c287ca4b32485d2fbd1b0533c6bc30851eaea0" translate="yes" xml:space="preserve">
          <source>The standard letter-codes for reading arguments in various ways.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f49ffda7284df4c0cd9b03dae4b8a52126166b8" translate="yes" xml:space="preserve">
          <source>The start of the documentation string is usually indented in the source file, but since these spaces come before the starting double-quote, they are not part of the string. Some people make a practice of indenting any additional lines of the string so that the text lines up in the program source. &lt;em&gt;That is a mistake.&lt;/em&gt; The indentation of the following lines is inside the string; what looks nice in the source code will look ugly when displayed by the help commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c672e151d200c22d18367c0a5d6b7e540bedaea" translate="yes" xml:space="preserve">
          <source>The state code of the process. This is a short string that encodes the scheduling state of the process. Here&amp;rsquo;s a list of the most frequently seen codes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2d7146dc12f6d9513c21cfa997b6a60f75f956d" translate="yes" xml:space="preserve">
          <source>The state of keyboard macro definition is saved and restored. While Edebug is active, &lt;code&gt;defining-kbd-macro&lt;/code&gt; is bound to &lt;code&gt;edebug-continue-kbd-macro&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c91d0e0a6d197098d1a02ec3a2503f351103980" translate="yes" xml:space="preserve">
          <source>The state of keyboard macro execution is saved and restored. While Edebug is active, &lt;code&gt;executing-kbd-macro&lt;/code&gt; is bound to &lt;code&gt;nil&lt;/code&gt; unless &lt;code&gt;edebug-continue-kbd-macro&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf9ddd67b0e2736562e5e1b48123ad8e5e1a7a7d" translate="yes" xml:space="preserve">
          <source>The state of visibility of the frame. There are three possibilities: &lt;code&gt;nil&lt;/code&gt; for invisible, &lt;code&gt;t&lt;/code&gt; for visible, and &lt;code&gt;icon&lt;/code&gt; for iconified. See &lt;a href=&quot;visibility-of-frames#Visibility-of-Frames&quot;&gt;Visibility of Frames&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e8a0a928375b331768ea9541d2c2a6c4d37acbb" translate="yes" xml:space="preserve">
          <source>The status of the subprocess belonging to the current buffer, obtained with &lt;code&gt;process-status&lt;/code&gt;. See &lt;a href=&quot;process-information#Process-Information&quot;&gt;Process Information&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="999eb55350809e41053d193b69ed4373f0358a4b" translate="yes" xml:space="preserve">
          <source>The string &lt;var&gt;buffer-name&lt;/var&gt; specifies the temporary buffer, which need not already exist. The argument must be a string, not a buffer. The buffer is erased initially (with no questions asked), and it is marked as unmodified after &lt;code&gt;with-output-to-temp-buffer&lt;/code&gt; exits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4d3cb799dfeca2e1bb98a62be5a7ac517d5ffb4" translate="yes" xml:space="preserve">
          <source>The string &lt;var&gt;lighter&lt;/var&gt; says what to display in the mode line when the mode is enabled; if it is &lt;code&gt;nil&lt;/code&gt;, the mode is not displayed in the mode line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a03446e19ee8800b453720d31c0b60da78dc7e80" translate="yes" xml:space="preserve">
          <source>The string containing the byte-code instructions.</source>
          <target state="translated">La cadena que contiene las instrucciones del c√≥digo de bytes.</target>
        </trans-unit>
        <trans-unit id="1ba6ac8d60c10283435c94518d321e4f95295bb9" translate="yes" xml:space="preserve">
          <source>The string describing the event looks like one of the following:</source>
          <target state="translated">La cadena que describe el evento se parece a una de las siguientes:</target>
        </trans-unit>
        <trans-unit id="26291a7cd459e196bf1c635f5e136cb0085033bb" translate="yes" xml:space="preserve">
          <source>The string is inserted literally.</source>
          <target state="translated">La cuerda se inserta literalmente.</target>
        </trans-unit>
        <trans-unit id="c1cb47cdeee50f6839e7f1b4e7667115d1fdbb0c" translate="yes" xml:space="preserve">
          <source>The string or comment start position. While inside a comment, this is the position where the comment began; while inside a string, this is the position where the string began. When outside of strings and comments, this element is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">La posici&amp;oacute;n de inicio de la cadena o el comentario. Mientras est&amp;aacute; dentro de un comentario, esta es la posici&amp;oacute;n donde comenz&amp;oacute; el comentario; mientras que dentro de una cuerda, esta es la posici&amp;oacute;n donde comenz&amp;oacute; la cuerda. Cuando est&amp;aacute; fuera de cadenas y comentarios, este elemento es &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="80ad211627a8eba28dd5ef9816837befb4643331" translate="yes" xml:space="preserve">
          <source>The string that this function returns is what is recorded in the symbolic link; it may or may not include any leading directories. This function does &lt;em&gt;not&lt;/em&gt; expand the link target to produce a fully-qualified file name, and in particular does not use the leading directories, if any, of the &lt;var&gt;filename&lt;/var&gt; argument if the link target is not an absolute file name. Here&amp;rsquo;s an example:</source>
          <target state="translated">La cadena que devuelve esta funci&amp;oacute;n es la que se registra en el enlace simb&amp;oacute;lico; puede incluir o no directorios principales. Esta funci&amp;oacute;n &lt;em&gt;no&lt;/em&gt; expande el destino del v&amp;iacute;nculo para producir un nombre de archivo completo y, en particular, no utiliza los directorios principales, si los hay, del argumento del &lt;var&gt;filename&lt;/var&gt; de archivo si el destino del v&amp;iacute;nculo no es un nombre de archivo absoluto. He aqu&amp;iacute; un ejemplo:</target>
        </trans-unit>
        <trans-unit id="ed696d53e7ac7bcc7d08d01175d6eb89bf0c571f" translate="yes" xml:space="preserve">
          <source>The string to be completed.</source>
          <target state="translated">La cuerda que debe ser completada.</target>
        </trans-unit>
        <trans-unit id="07cf4d672d43fc0025d53260f62ef95ec1c50b45" translate="yes" xml:space="preserve">
          <source>The string which was clicked on, including any properties.</source>
          <target state="translated">La cadena en la que se hizo clic,incluyendo cualquier propiedad.</target>
        </trans-unit>
        <trans-unit id="9e01c44c700489e51d428a65abb3864ced471545" translate="yes" xml:space="preserve">
          <source>The strings are compared by the numeric values of their characters. For instance, &lt;var&gt;str1&lt;/var&gt; is considered less than &lt;var&gt;str2&lt;/var&gt; if its first differing character has a smaller numeric value. If &lt;var&gt;ignore-case&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, characters are converted to upper-case before comparing them. Unibyte strings are converted to multibyte for comparison (see &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Text Representations&lt;/a&gt;), so that a unibyte string and its conversion to multibyte are always regarded as equal.</source>
          <target state="translated">Las cadenas se comparan por los valores num&amp;eacute;ricos de sus caracteres. Por ejemplo, &lt;var&gt;str1&lt;/var&gt; se considera menor que &lt;var&gt;str2&lt;/var&gt; si su primer car&amp;aacute;cter diferente tiene un valor num&amp;eacute;rico menor. Si &lt;var&gt;ignore-case&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; , los caracteres se convierten a may&amp;uacute;sculas antes de compararlos. Las cadenas unibyte se convierten a multibyte para compararlas (consulte &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;Representaciones de texto&lt;/a&gt; ), de modo que una cadena unibyte y su conversi&amp;oacute;n a multibyte siempre se consideran iguales.</target>
        </trans-unit>
        <trans-unit id="44b6399fd6b44ca0035a1f2fc79dfcc1e1445a5f" translate="yes" xml:space="preserve">
          <source>The strings in &lt;var&gt;list-of-strings&lt;/var&gt; that need quoting are those that include &lt;var&gt;separator&lt;/var&gt; as their substring. Quoting a string encloses it in double quotes &lt;code&gt;&quot;&amp;hellip;&quot;&lt;/code&gt;. In the simplest case, if you are consing a command from the individual command-line arguments, every argument that includes embedded blanks will be quoted.</source>
          <target state="translated">Las cadenas de la &lt;var&gt;list-of-strings&lt;/var&gt; que necesitan comillas son aquellas que incluyen &lt;var&gt;separator&lt;/var&gt; como subcadena. La cita de una cadena la encierra entre comillas dobles &lt;code&gt;&quot;&amp;hellip;&quot;&lt;/code&gt; . En el caso m&amp;aacute;s simple, si est&amp;aacute; tomando un comando de los argumentos individuales de la l&amp;iacute;nea de comandos, se citar&amp;aacute;n todos los argumentos que incluyan espacios en blanco incrustados.</target>
        </trans-unit>
        <trans-unit id="6eb3410ffb193ecb3bb6cdb461cdb85ed0d15602" translate="yes" xml:space="preserve">
          <source>The strings matching the first nine grouping constructs appearing in the entire regular expression passed to a search or matching function are assigned numbers 1 through 9 in the order that the open parentheses appear in the regular expression. So you can use &amp;lsquo;</source>
          <target state="translated">A las cadenas que coinciden con las primeras nueve construcciones de agrupaci&amp;oacute;n que aparecen en la expresi&amp;oacute;n regular completa que se pasa a una funci&amp;oacute;n de b&amp;uacute;squeda o coincidencia se les asignan los n&amp;uacute;meros del 1 al 9 en el orden en que aparecen los par&amp;eacute;ntesis abiertos en la expresi&amp;oacute;n regular. Entonces puedes usar '</target>
        </trans-unit>
        <trans-unit id="d581c2599c93c8f407b1007bbe2ce48ba6714abb" translate="yes" xml:space="preserve">
          <source>The subprocess inherits its environment from Emacs, but you can specify overrides for it with &lt;code&gt;process-environment&lt;/code&gt;. See &lt;a href=&quot;system-environment#System-Environment&quot;&gt;System Environment&lt;/a&gt;. The subprocess gets its current directory from the value of &lt;code&gt;default-directory&lt;/code&gt;.</source>
          <target state="translated">El subproceso hereda su entorno de Emacs, pero puede especificar anulaciones para &amp;eacute;l con &lt;code&gt;process-environment&lt;/code&gt; . Consulte &lt;a href=&quot;system-environment#System-Environment&quot;&gt;Entorno del sistema&lt;/a&gt; . El subproceso obtiene su directorio actual del valor de &lt;code&gt;default-directory&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="36e61db0284478d461aa89c79eac1cab50f7a0e0" translate="yes" xml:space="preserve">
          <source>The substitutions performed by &amp;lsquo;</source>
          <target state="translated">Las sustituciones realizadas por '</target>
        </trans-unit>
        <trans-unit id="8b19565b999d7f6150d2a072214b083a7f92bdb0" translate="yes" xml:space="preserve">
          <source>The subtype controls the number of &lt;em&gt;extra slots&lt;/em&gt; in the char-table. This number is specified by the subtype&amp;rsquo;s &lt;code&gt;char-table-extra-slots&lt;/code&gt; symbol property (see &lt;a href=&quot;symbol-properties#Symbol-Properties&quot;&gt;Symbol Properties&lt;/a&gt;), whose value should be an integer between 0 and 10. If the subtype has no such symbol property, the char-table has no extra slots.</source>
          <target state="translated">El subtipo controla el n&amp;uacute;mero de &lt;em&gt;ranuras adicionales&lt;/em&gt; en la tabla de caracteres. Este n&amp;uacute;mero se especifica mediante la propiedad del s&amp;iacute;mbolo &lt;code&gt;char-table-extra-slots&lt;/code&gt; del subtipo (ver &lt;a href=&quot;symbol-properties#Symbol-Properties&quot;&gt;Propiedades del s&amp;iacute;mbolo&lt;/a&gt; ), cuyo valor debe ser un n&amp;uacute;mero entero entre 0 y 10. Si el subtipo no tiene tal propiedad de s&amp;iacute;mbolo, la tabla char no tiene espacios adicionales .</target>
        </trans-unit>
        <trans-unit id="3b7c16dd882ba705b433c0230563b93def38601b" translate="yes" xml:space="preserve">
          <source>The subtype provides an easy way to tell what the char-table is for. For instance, display tables are char-tables with &lt;code&gt;display-table&lt;/code&gt; as the subtype, and syntax tables are char-tables with &lt;code&gt;syntax-table&lt;/code&gt; as the subtype. The subtype can be queried using the function &lt;code&gt;char-table-subtype&lt;/code&gt;, described below.</source>
          <target state="translated">El subtipo proporciona una manera f&amp;aacute;cil de saber para qu&amp;eacute; sirve la tabla de caracteres. Por ejemplo, las tablas de visualizaci&amp;oacute;n son char-tables con &lt;code&gt;display-table&lt;/code&gt; como subtipo, y las tablas de sintaxis son char-tables con &lt;code&gt;syntax-table&lt;/code&gt; como subtipo. El subtipo se puede consultar utilizando la funci&amp;oacute;n &lt;code&gt;char-table-subtype&lt;/code&gt; , que se describe a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="68ac4cd83ea417c1f7f9af452e5cc5b822c521ce" translate="yes" xml:space="preserve">
          <source>The sum of &lt;code&gt;utime&lt;/code&gt; and &lt;code&gt;stime&lt;/code&gt;. The corresponding &lt;var&gt;value&lt;/var&gt; is a Lisp timestamp.</source>
          <target state="translated">La suma de &lt;code&gt;utime&lt;/code&gt; y &lt;code&gt;stime&lt;/code&gt; . El &lt;var&gt;value&lt;/var&gt; correspondiente es una marca de tiempo Lisp.</target>
        </trans-unit>
        <trans-unit id="d35712cec496be81a5cc381ab6d618570491eb43" translate="yes" xml:space="preserve">
          <source>The super modifier.</source>
          <target state="translated">El s√∫per modificador.</target>
        </trans-unit>
        <trans-unit id="8e705c61a14589689176e3b34a3649287549f965" translate="yes" xml:space="preserve">
          <source>The sweep phase puts unused cons cells onto a &lt;em&gt;free list&lt;/em&gt; for future allocation; likewise for symbols and markers. It compacts the accessible strings so they occupy fewer 8k blocks; then it frees the other 8k blocks. Unreachable vectors from vector blocks are coalesced to create largest possible free areas; if a free area spans a complete 4k block, that block is freed. Otherwise, the free area is recorded in a free list array, where each entry corresponds to a free list of areas of the same size. Large vectors, buffers, and other large objects are allocated and freed individually.</source>
          <target state="translated">La fase de barrido coloca las celdas de cons no utilizadas en una &lt;em&gt;lista libre&lt;/em&gt; para su asignaci&amp;oacute;n futura; lo mismo ocurre con los s&amp;iacute;mbolos y marcadores. Compacta las cadenas accesibles para que ocupen menos bloques de 8k; luego libera los otros 8k bloques. Los vectores inalcanzables de los bloques de vectores se fusionan para crear las &amp;aacute;reas libres m&amp;aacute;s grandes posibles; si un &amp;aacute;rea libre abarca un bloque completo de 4k, ese bloque se libera. De lo contrario, el &amp;aacute;rea libre se registra en una matriz de lista libre, donde cada entrada corresponde a una lista libre de &amp;aacute;reas del mismo tama&amp;ntilde;o. Los vectores grandes, b&amp;uacute;feres y otros objetos grandes se asignan y liberan individualmente.</target>
        </trans-unit>
        <trans-unit id="80c81c27e3f0ac4ab84d01b9b6f0b0331d39a84e" translate="yes" xml:space="preserve">
          <source>The symbol &lt;code&gt;-&lt;/code&gt;. This indicates that</source>
          <target state="translated">El s&amp;iacute;mbolo &lt;code&gt;-&lt;/code&gt; . Esto indica que</target>
        </trans-unit>
        <trans-unit id="d524cc19731a4d7319fdb32e1fd42c2468c1ccdb" translate="yes" xml:space="preserve">
          <source>The symbol &lt;code&gt;undefined&lt;/code&gt; is worth special mention: it means to treat the key as undefined. Strictly speaking, the key is defined, and its binding is the command &lt;code&gt;undefined&lt;/code&gt;; but that command does the same thing that is done automatically for an undefined key: it rings the bell (by calling &lt;code&gt;ding&lt;/code&gt;) but does not signal an error.</source>
          <target state="translated">El s&amp;iacute;mbolo &lt;code&gt;undefined&lt;/code&gt; merece una menci&amp;oacute;n especial: significa tratar la clave como indefinida. Estrictamente hablando, la clave est&amp;aacute; definida y su enlace es el comando &lt;code&gt;undefined&lt;/code&gt; ; pero ese comando hace lo mismo que se hace autom&amp;aacute;ticamente para una clave indefinida: hace sonar el timbre (llamando a &lt;code&gt;ding&lt;/code&gt; ) pero no indica un error.</target>
        </trans-unit>
        <trans-unit id="262aaa6e5851917f322ee907187b949e88c9ea3d" translate="yes" xml:space="preserve">
          <source>The symbol &lt;var&gt;var&lt;/var&gt; was defined as a variable.</source>
          <target state="translated">El s&amp;iacute;mbolo &lt;var&gt;var&lt;/var&gt; se defini&amp;oacute; como variable.</target>
        </trans-unit>
        <trans-unit id="5b0a7c1e7a600f3ceec6a0c096061763b149143e" translate="yes" xml:space="preserve">
          <source>The symbol must have an Edebug specification, which is used instead. This indirection is repeated until another kind of specification is found. This allows you to inherit the specification from another macro.</source>
          <target state="translated">El s√≠mbolo debe tener una especificaci√≥n Edebug,que se utiliza en su lugar.Esta indirecta se repite hasta que se encuentra otro tipo de especificaci√≥n.Esto permite heredar la especificaci√≥n de otra macro.</target>
        </trans-unit>
        <trans-unit id="6db9e28485fd698ef52d7e3eb3a2773fea9702ff" translate="yes" xml:space="preserve">
          <source>The symbol&amp;rsquo;s current value as a variable.</source>
          <target state="translated">El valor actual del s&amp;iacute;mbolo como variable.</target>
        </trans-unit>
        <trans-unit id="a0a66fbe0304b2b0365a8eb85d918232ae7d5a27" translate="yes" xml:space="preserve">
          <source>The symbol&amp;rsquo;s function definition. It can also hold a symbol, a keymap, or a keyboard macro.</source>
          <target state="translated">Definici&amp;oacute;n de la funci&amp;oacute;n del s&amp;iacute;mbolo. Tambi&amp;eacute;n puede contener un s&amp;iacute;mbolo, un mapa de teclas o una macro de teclado.</target>
        </trans-unit>
        <trans-unit id="116bb8f437931ac9fdc82686fd01e5886bbdad99" translate="yes" xml:space="preserve">
          <source>The symbol&amp;rsquo;s name.</source>
          <target state="translated">El nombre del s&amp;iacute;mbolo.</target>
        </trans-unit>
        <trans-unit id="4815883f12f3ddda91c2ff86c5cf8ead169410ab" translate="yes" xml:space="preserve">
          <source>The symbol&amp;rsquo;s property list.</source>
          <target state="translated">Lista de propiedades del s&amp;iacute;mbolo.</target>
        </trans-unit>
        <trans-unit id="0da588e9c066744bf4c6e6a6cdf66d1b7de2d7a2" translate="yes" xml:space="preserve">
          <source>The symbol&amp;rsquo;s value is used.</source>
          <target state="translated">Se utiliza el valor del s&amp;iacute;mbolo.</target>
        </trans-unit>
        <trans-unit id="4757d314ae2103a000ffd713b4431bdf90047a13" translate="yes" xml:space="preserve">
          <source>The symbols &lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;t&lt;/code&gt; are treated specially, so that the value of &lt;code&gt;nil&lt;/code&gt; is always &lt;code&gt;nil&lt;/code&gt;, and the value of &lt;code&gt;t&lt;/code&gt; is always &lt;code&gt;t&lt;/code&gt;; you cannot set or bind them to any other values. Thus, these two symbols act like self-evaluating forms, even though &lt;code&gt;eval&lt;/code&gt; treats them like any other symbol. A symbol whose name starts with &amp;lsquo;</source>
          <target state="translated">Los s&amp;iacute;mbolos &lt;code&gt;nil&lt;/code&gt; y &lt;code&gt;t&lt;/code&gt; se tratan de forma especial, de modo que el valor de &lt;code&gt;nil&lt;/code&gt; es siempre &lt;code&gt;nil&lt;/code&gt; y el valor de &lt;code&gt;t&lt;/code&gt; siempre es &lt;code&gt;t&lt;/code&gt; ; no puede establecerlos ni vincularlos a ning&amp;uacute;n otro valor. Por lo tanto, estos dos s&amp;iacute;mbolos act&amp;uacute;an como formas de autoevaluaci&amp;oacute;n, aunque &lt;code&gt;eval&lt;/code&gt; los trata como cualquier otro s&amp;iacute;mbolo. Un s&amp;iacute;mbolo cuyo nombre comienza con '</target>
        </trans-unit>
        <trans-unit id="f0a7fe54d498086e0224f1254ce0302e2d45b30e" translate="yes" xml:space="preserve">
          <source>The symbols &lt;code&gt;user-login-name&lt;/code&gt;, &lt;code&gt;user-real-login-name&lt;/code&gt; and &lt;code&gt;user-full-name&lt;/code&gt; are variables as well as functions. The functions return the same values that the variables hold. These variables allow you to fake out Emacs by telling the functions what to return. The variables are also useful for constructing frame titles (see &lt;a href=&quot;frame-titles#Frame-Titles&quot;&gt;Frame Titles&lt;/a&gt;).</source>
          <target state="translated">Los s&amp;iacute;mbolos &lt;code&gt;user-login-name&lt;/code&gt; , &lt;code&gt;user-real-login-name&lt;/code&gt; y &lt;code&gt;user-full-name&lt;/code&gt; son variables adem&amp;aacute;s de funciones. Las funciones devuelven los mismos valores que tienen las variables. Estas variables le permiten falsificar Emacs dici&amp;eacute;ndole a las funciones qu&amp;eacute; devolver. Las variables tambi&amp;eacute;n son &amp;uacute;tiles para construir t&amp;iacute;tulos de fotogramas (consulte &lt;a href=&quot;frame-titles#Frame-Titles&quot;&gt;T&amp;iacute;tulos de fotogramas&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="0804f73f2468d63be3d44abb01edffb59c0ad975" translate="yes" xml:space="preserve">
          <source>The synchronous subprocess functions return an indication of how the process terminated.</source>
          <target state="translated">Las funciones de subprocesos sincr√≥nicos devuelven una indicaci√≥n de c√≥mo termin√≥ el proceso.</target>
        </trans-unit>
        <trans-unit id="42db7ccb5bf39d0ef36aec66fdcf39beff2dbdf3" translate="yes" xml:space="preserve">
          <source>The syntax &lt;code&gt;(rose . violet . buttercup)&lt;/code&gt; is invalid because there is nothing that it could mean. If anything, it would say to put &lt;code&gt;buttercup&lt;/code&gt; in the &lt;small&gt;CDR&lt;/small&gt; of a cons cell whose &lt;small&gt;CDR&lt;/small&gt; is already used for &lt;code&gt;violet&lt;/code&gt;.</source>
          <target state="translated">La sintaxis &lt;code&gt;(rose . violet . buttercup)&lt;/code&gt; no es v&amp;aacute;lida porque no hay nada que pueda significar. En todo caso, dir&amp;iacute;a poner &lt;code&gt;buttercup&lt;/code&gt; en la &lt;small&gt;CDR&lt;/small&gt; de una celda de contras cuya &lt;small&gt;CDR&lt;/small&gt; ya se usa para &lt;code&gt;violet&lt;/code&gt; a .</target>
        </trans-unit>
        <trans-unit id="cab7667e7d8ac62d20cdad9ef7c79cda38e5bc22" translate="yes" xml:space="preserve">
          <source>The syntax for integers in bases other than 10 consists of &amp;lsquo;</source>
          <target state="translated">La sintaxis para n&amp;uacute;meros enteros en bases distintas de 10 consiste en '</target>
        </trans-unit>
        <trans-unit id="88b43371f5f28d88c8b06cc0133c5c8be8a7772e" translate="yes" xml:space="preserve">
          <source>The syntax is changed only for &lt;var&gt;table&lt;/var&gt;, which defaults to the current buffer&amp;rsquo;s syntax table, and not in any other syntax table.</source>
          <target state="translated">La sintaxis se cambia solo para la &lt;var&gt;table&lt;/var&gt; , que por defecto es la tabla de sintaxis del b&amp;uacute;fer actual, y no en ninguna otra tabla de sintaxis.</target>
        </trans-unit>
        <trans-unit id="239ff1bb3df2ca92e1729acd450422ea90926247" translate="yes" xml:space="preserve">
          <source>The syntax of &lt;code&gt;EMACSLOADPATH&lt;/code&gt; is the same as used for &lt;code&gt;PATH&lt;/code&gt;; directories are separated by &amp;lsquo;</source>
          <target state="translated">La sintaxis de &lt;code&gt;EMACSLOADPATH&lt;/code&gt; es la misma que se utiliza para &lt;code&gt;PATH&lt;/code&gt; ; los directorios est&amp;aacute;n separados por '</target>
        </trans-unit>
        <trans-unit id="1999b037e6c53b71c64122a6e2bea19301ea2ee4" translate="yes" xml:space="preserve">
          <source>The syntax of format specifications accepted by &lt;code&gt;format-spec&lt;/code&gt; is similar, but not identical, to that accepted by &lt;code&gt;format&lt;/code&gt;. In both cases, a format specification is a sequence of characters beginning with &amp;lsquo;</source>
          <target state="translated">La sintaxis de las especificaciones de formato aceptadas por &lt;code&gt;format-spec&lt;/code&gt; es similar, pero no id&amp;eacute;ntica, a la aceptada por &lt;code&gt;format&lt;/code&gt; . En ambos casos, una especificaci&amp;oacute;n de formato es una secuencia de caracteres que comienza con '</target>
        </trans-unit>
        <trans-unit id="a7719f40601bdc59c72de428210fe56812c73911" translate="yes" xml:space="preserve">
          <source>The syntax table controls the interpretation of characters, so these functions can be used for Lisp expressions when in Lisp mode and for C expressions when in C mode. See &lt;a href=&quot;list-motion#List-Motion&quot;&gt;List Motion&lt;/a&gt;, for convenient higher-level functions for moving over balanced expressions.</source>
          <target state="translated">La tabla de sintaxis controla la interpretaci&amp;oacute;n de los caracteres, por lo que estas funciones se pueden usar para expresiones Lisp cuando est&amp;aacute; en modo Lisp y para expresiones C cuando est&amp;aacute; en modo C. Vea &lt;a href=&quot;list-motion#List-Motion&quot;&gt;List Motion&lt;/a&gt; , para funciones convenientes de alto nivel para moverse sobre expresiones balanceadas.</target>
        </trans-unit>
        <trans-unit id="1d3dd35ac27520d192421173419189f92bfde5f7" translate="yes" xml:space="preserve">
          <source>The syntax table controls word and list parsing.</source>
          <target state="translated">La tabla de sintaxis controla el an√°lisis de palabras y listas.</target>
        </trans-unit>
        <trans-unit id="1b828fe7a14532d3214216229166278069ec53be" translate="yes" xml:space="preserve">
          <source>The tab character (character code 9) displays as whitespace stretching up to the next tab stop column. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Text-Display.html#Text-Display&quot;&gt;Text Display&lt;/a&gt; in</source>
          <target state="translated">El car&amp;aacute;cter de tabulaci&amp;oacute;n (c&amp;oacute;digo de car&amp;aacute;cter 9) se muestra como un espacio en blanco que se extiende hasta la siguiente columna de tabulaci&amp;oacute;n. Ver &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Text-Display.html#Text-Display&quot;&gt;pantalla de texto&lt;/a&gt; en</target>
        </trans-unit>
        <trans-unit id="cf1dafcaadd381ea3ab28a9f4fdbcfdc0a3e6f6a" translate="yes" xml:space="preserve">
          <source>The tab character (character code 9) displays as whitespace stretching up to the next tab stop column. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Text-Display.html#Text-Display&quot;&gt;Text Display&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cdb77457b03ae8e4189510caa2d2cd8affcf775" translate="yes" xml:space="preserve">
          <source>The tail of the list, &lt;var&gt;item-property-list&lt;/var&gt;, has the form of a property list which contains other information.</source>
          <target state="translated">La cola de la lista, &lt;var&gt;item-property-list&lt;/var&gt; , tiene la forma de una lista de propiedades que contiene otra informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="7527554605fcb9db76071476569c6f6b0cf4a1ce" translate="yes" xml:space="preserve">
          <source>The term &lt;em&gt;function&lt;/em&gt; refers to all Emacs functions, whether written in Lisp or C. See &lt;a href=&quot;function-type#Function-Type&quot;&gt;Function Type&lt;/a&gt;, for information about the functions written in Lisp.</source>
          <target state="translated">El t&amp;eacute;rmino &lt;em&gt;funci&amp;oacute;n se&lt;/em&gt; refiere a todas las funciones de Emacs, ya sean escritas en Lisp o C. Vea &lt;a href=&quot;function-type#Function-Type&quot;&gt;Tipo de funci&amp;oacute;n&lt;/a&gt; , para obtener informaci&amp;oacute;n sobre las funciones escritas en Lisp.</target>
        </trans-unit>
        <trans-unit id="bd8132ad5a485b9ab38224ae63509adce1e85797" translate="yes" xml:space="preserve">
          <source>The terminal and keyboard coding systems used on the terminal. See &lt;a href=&quot;terminal-i_002fo-encoding#Terminal-I_002fO-Encoding&quot;&gt;Terminal I/O Encoding&lt;/a&gt;.</source>
          <target state="translated">El terminal y los sistemas de codificaci&amp;oacute;n del teclado utilizados en el terminal. Consulte &lt;a href=&quot;terminal-i_002fo-encoding#Terminal-I_002fO-Encoding&quot;&gt;Codificaci&amp;oacute;n de E / S de terminal&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6ad03be7d14630f60e2cb6b2a4f58289b95b8877" translate="yes" xml:space="preserve">
          <source>The terminal output functions send output to a text terminal, or keep track of output sent to the terminal. The variable &lt;code&gt;baud-rate&lt;/code&gt; tells you what Emacs thinks is the output speed of the terminal.</source>
          <target state="translated">Las funciones de salida de la terminal env&amp;iacute;an la salida a una terminal de texto o realizan un seguimiento de la salida enviada a la terminal. La &lt;code&gt;baud-rate&lt;/code&gt; variable le dice lo que Emacs piensa que es la velocidad de salida del terminal.</target>
        </trans-unit>
        <trans-unit id="3a63395bf693f4ea5dbf2a2a8a31fd4771954d08" translate="yes" xml:space="preserve">
          <source>The terms &lt;em&gt;line height&lt;/em&gt; and &lt;em&gt;canonical character height&lt;/em&gt; are sometimes used instead of &amp;ldquo;default character height&amp;rdquo;. Similarly, the terms &lt;em&gt;column width&lt;/em&gt; and &lt;em&gt;canonical character width&lt;/em&gt; are used instead of &amp;ldquo;default character width&amp;rdquo;.</source>
          <target state="translated">Los t&amp;eacute;rminos &lt;em&gt;altura de l&amp;iacute;nea&lt;/em&gt; y &lt;em&gt;altura de &lt;/em&gt;&lt;em&gt;car&amp;aacute;cter can&amp;oacute;nico&lt;/em&gt; se utilizan a veces en lugar de &quot;altura de car&amp;aacute;cter predeterminada&quot;. Del mismo modo, se utilizan los t&amp;eacute;rminos &lt;em&gt;ancho de columna&lt;/em&gt; y &lt;em&gt;ancho de &lt;/em&gt;&lt;em&gt;car&amp;aacute;cter can&amp;oacute;nico en&lt;/em&gt; lugar de &quot;ancho de car&amp;aacute;cter predeterminado&quot;.</target>
        </trans-unit>
        <trans-unit id="4e683c537d7a88f401925ed633251e10fa4e0d2a" translate="yes" xml:space="preserve">
          <source>The terms used herein, such as IV (Initialization Vector), require some familiarity with cryptography and will not be defined in detail. Please consult &lt;a href=&quot;https://www.gnutls.org/&quot;&gt;https://www.gnutls.org/&lt;/a&gt; for specific documentation which may help you understand the terminology and structure of the GnuTLS library.</source>
          <target state="translated">Los t&amp;eacute;rminos utilizados en este documento, como IV (vector de inicializaci&amp;oacute;n), requieren cierta familiaridad con la criptograf&amp;iacute;a y no se definir&amp;aacute;n en detalle. Consulte &lt;a href=&quot;https://www.gnutls.org/&quot;&gt;https://www.gnutls.org/&lt;/a&gt; para obtener documentaci&amp;oacute;n espec&amp;iacute;fica que pueda ayudarlo a comprender la terminolog&amp;iacute;a y la estructura de la biblioteca GnuTLS.</target>
        </trans-unit>
        <trans-unit id="6650dc3f7c947a7cc0f8b1e2e8887236711ab190" translate="yes" xml:space="preserve">
          <source>The test for an existing file, when &lt;var&gt;mustbenew&lt;/var&gt; is &lt;code&gt;excl&lt;/code&gt;, uses a special system feature. At least for files on a local disk, there is no chance that some other program could create a file of the same name before Emacs does, without Emacs&amp;rsquo;s noticing.</source>
          <target state="translated">La prueba para un archivo existente, cuando &lt;var&gt;mustbenew&lt;/var&gt; ser nuevo es &lt;code&gt;excl&lt;/code&gt; , utiliza una caracter&amp;iacute;stica especial del sistema. Al menos para archivos en un disco local, no hay posibilidad de que alg&amp;uacute;n otro programa pueda crear un archivo con el mismo nombre antes que Emacs, sin que Emacs se d&amp;eacute; cuenta.</target>
        </trans-unit>
        <trans-unit id="f4bec060d8606173e4510214d476948b1b689bd6" translate="yes" xml:space="preserve">
          <source>The text between point and the mark is known as &lt;em&gt;the region&lt;/em&gt;. Various functions operate on text delimited by point and the mark, but only those functions specifically related to the region itself are described here.</source>
          <target state="translated">El texto entre el punto y la marca se conoce como &lt;em&gt;regi&amp;oacute;n&lt;/em&gt; . Varias funciones operan sobre el texto delimitado por el punto y la marca, pero aqu&amp;iacute; solo se describen aquellas funciones espec&amp;iacute;ficamente relacionadas con la regi&amp;oacute;n en s&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="427235673649693cef34eec5a1c49c535c367214" translate="yes" xml:space="preserve">
          <source>The text in the minibuffer always starts with the &lt;em&gt;prompt string&lt;/em&gt;, the text that was specified by the program that is using the minibuffer to tell the user what sort of input to type. This text is marked read-only so you won&amp;rsquo;t accidentally delete or change it. It is also marked as a field (see &lt;a href=&quot;fields#Fields&quot;&gt;Fields&lt;/a&gt;), so that certain motion functions, including &lt;code&gt;beginning-of-line&lt;/code&gt;, &lt;code&gt;forward-word&lt;/code&gt;, &lt;code&gt;forward-sentence&lt;/code&gt;, and &lt;code&gt;forward-paragraph&lt;/code&gt;, stop at the boundary between the prompt and the actual text.</source>
          <target state="translated">El texto en el minib&amp;uacute;fer siempre comienza con la &lt;em&gt;cadena de solicitud&lt;/em&gt; , el texto que fue especificado por el programa que est&amp;aacute; usando el minib&amp;uacute;fer para decirle al usuario qu&amp;eacute; tipo de entrada debe escribir. Este texto est&amp;aacute; marcado como de solo lectura para que no lo borre ni lo cambie accidentalmente. Tambi&amp;eacute;n se marca como un campo (ver &lt;a href=&quot;fields#Fields&quot;&gt;campos&lt;/a&gt; ), de modo que ciertas funciones de movimiento, incluyendo &lt;code&gt;beginning-of-line&lt;/code&gt; , &lt;code&gt;forward-word&lt;/code&gt; , &lt;code&gt;forward-sentence&lt;/code&gt; , y &lt;code&gt;forward-paragraph&lt;/code&gt; , parada en el l&amp;iacute;mite entre el s&amp;iacute;mbolo y el texto real.</target>
        </trans-unit>
        <trans-unit id="e254c01685b37e41ab942a41fbf59829e6d11ec6" translate="yes" xml:space="preserve">
          <source>The text of the indirect buffer is always identical to the text of its base buffer; changes made by editing either one are visible immediately in the other. This includes the text properties as well as the characters themselves.</source>
          <target state="translated">El texto del b√∫fer indirecto es siempre id√©ntico al texto de su b√∫fer base;los cambios realizados al editar cualquiera de los dos son visibles inmediatamente en el otro.Esto incluye las propiedades del texto as√≠ como los propios caracteres.</target>
        </trans-unit>
        <trans-unit id="af246ddc000534af5859563e36f5153516e93316" translate="yes" xml:space="preserve">
          <source>The text properties &lt;code&gt;front-sticky&lt;/code&gt; and &lt;code&gt;rear-nonsticky&lt;/code&gt;, when used, take precedence over the default &lt;var&gt;nonstickiness&lt;/var&gt; specified in &lt;code&gt;text-property-default-nonsticky&lt;/code&gt;.</source>
          <target state="translated">Las propiedades de texto &lt;code&gt;front-sticky&lt;/code&gt; y &lt;code&gt;rear-nonsticky&lt;/code&gt; , cuando se utilizan, tienen prioridad sobre la no &lt;var&gt;nonstickiness&lt;/var&gt; predeterminada especificada en &lt;code&gt;text-property-default-nonsticky&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="61de37a77d48c5a03418142f4c57cbd435c8202a" translate="yes" xml:space="preserve">
          <source>The text properties in &lt;code&gt;minibuffer-prompt-properties&lt;/code&gt; are applied to the prompt. By default, this property list defines a face to use for the prompt. This face, if present, is applied to the end of the face list and merged before display.</source>
          <target state="translated">Las propiedades de texto en &lt;code&gt;minibuffer-prompt-properties&lt;/code&gt; se aplican al indicador. De forma predeterminada, esta lista de propiedades define una cara que se utilizar&amp;aacute; para el mensaje. Esta cara, si est&amp;aacute; presente, se aplica al final de la lista de caras y se fusiona antes de mostrarse.</target>
        </trans-unit>
        <trans-unit id="53d1c0b3638f705814caf89c18a7ce3da885e071" translate="yes" xml:space="preserve">
          <source>The text size of any frame can be set and retrieved with the help of the &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; frame parameters (see &lt;a href=&quot;size-parameters#Size-Parameters&quot;&gt;Size Parameters&lt;/a&gt;). The text size of the initial frame can be also set with the help of an X-style geometry specification. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Emacs-Invocation.html#Emacs-Invocation&quot;&gt;Command Line Arguments for Emacs Invocation&lt;/a&gt; in</source>
          <target state="translated">El tama&amp;ntilde;o del texto de cualquier marco se puede establecer y recuperar con la ayuda de los par&amp;aacute;metros del marco de &lt;code&gt;height&lt;/code&gt; y &lt;code&gt;width&lt;/code&gt; (consulte &lt;a href=&quot;size-parameters#Size-Parameters&quot;&gt;Par&amp;aacute;metros de tama&amp;ntilde;o&lt;/a&gt; ). El tama&amp;ntilde;o del texto del marco inicial tambi&amp;eacute;n se puede establecer con la ayuda de una especificaci&amp;oacute;n de geometr&amp;iacute;a de estilo X. Consulte &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Emacs-Invocation.html#Emacs-Invocation&quot;&gt;Argumentos de la l&amp;iacute;nea de comandos para la invocaci&amp;oacute;n de Emacs&lt;/a&gt; en</target>
        </trans-unit>
        <trans-unit id="eda7e7ff0a0945b0a426e8efa30587133000d2d3" translate="yes" xml:space="preserve">
          <source>The text size of any frame can be set and retrieved with the help of the &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; frame parameters (see &lt;a href=&quot;size-parameters#Size-Parameters&quot;&gt;Size Parameters&lt;/a&gt;). The text size of the initial frame can be also set with the help of an X-style geometry specification. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Emacs-Invocation.html#Emacs-Invocation&quot;&gt;Command Line Arguments for Emacs Invocation&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c67ee1668cafc5069fd19fd9ac4ce5d1dfafd95a" translate="yes" xml:space="preserve">
          <source>The text&amp;rsquo;s start position in the buffer.</source>
          <target state="translated">La posici&amp;oacute;n inicial del texto en el b&amp;uacute;fer.</target>
        </trans-unit>
        <trans-unit id="459ecfaa7406a56efb8cf84eab33df64259674fe" translate="yes" xml:space="preserve">
          <source>The third argument &lt;var&gt;keep-time&lt;/var&gt; non-&lt;code&gt;nil&lt;/code&gt; means to preserve the modification time of the copied files. A prefix arg makes &lt;var&gt;keep-time&lt;/var&gt; non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">El tercer argumento &lt;var&gt;keep-time&lt;/var&gt; non- &lt;code&gt;nil&lt;/code&gt; significa preservar el tiempo de modificaci&amp;oacute;n de los archivos copiados. Un prefijo arg hace &lt;var&gt;keep-time&lt;/var&gt; no sea &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da9ba46202c97f906aff04419daf0a2467b172a5" translate="yes" xml:space="preserve">
          <source>The third element is the window selected at the time the parameter was created. If this function deletes &lt;var&gt;window&lt;/var&gt;, it subsequently tries to reselect the window named by that element.</source>
          <target state="translated">El tercer elemento es la ventana seleccionada en el momento en que se cre&amp;oacute; el par&amp;aacute;metro. Si esta funci&amp;oacute;n elimina la &lt;var&gt;window&lt;/var&gt; , posteriormente intenta volver a seleccionar la ventana nombrada por ese elemento.</target>
        </trans-unit>
        <trans-unit id="290b74a62fe3a2fe85d724d61465dc891525fd6f" translate="yes" xml:space="preserve">
          <source>The third element, &lt;var&gt;case-fold&lt;/var&gt;, specifies the value of &lt;code&gt;font-lock-keywords-case-fold-search&lt;/code&gt;. If it is non-&lt;code&gt;nil&lt;/code&gt;, Font Lock mode ignores case during search-based fontification.</source>
          <target state="translated">El tercer elemento, &lt;var&gt;case-fold&lt;/var&gt; , especifica el valor de &lt;code&gt;font-lock-keywords-case-fold-search&lt;/code&gt; . Si no es &lt;code&gt;nil&lt;/code&gt; , el modo Font Lock ignora las may&amp;uacute;sculas y min&amp;uacute;sculas durante la fontificaci&amp;oacute;n basada en b&amp;uacute;squedas.</target>
        </trans-unit>
        <trans-unit id="a0049f036ce91322d4b97e568763827ed24c4fa6" translate="yes" xml:space="preserve">
          <source>The third element, &lt;var&gt;real-binding&lt;/var&gt;, can be the command to execute (in which case you get a normal menu item). It can also be a keymap, which will result in a submenu. Finally, it can be &lt;code&gt;nil&lt;/code&gt;, in which case you will get a non-selectable menu item. This is mostly useful when creating separator lines and the like.</source>
          <target state="translated">El tercer elemento, &lt;var&gt;real-binding&lt;/var&gt; , puede ser el comando a ejecutar (en cuyo caso se obtiene un elemento de men&amp;uacute; normal). Tambi&amp;eacute;n puede ser un mapa de teclas, lo que dar&amp;aacute; como resultado un submen&amp;uacute;. Finalmente, puede ser &lt;code&gt;nil&lt;/code&gt; , en cuyo caso obtendr&amp;aacute; un elemento de men&amp;uacute; no seleccionable. Esto es sobre todo &amp;uacute;til al crear l&amp;iacute;neas de separaci&amp;oacute;n y similares.</target>
        </trans-unit>
        <trans-unit id="5ded74e35ae11b189414eb3a2feeeaf0372642b2" translate="yes" xml:space="preserve">
          <source>The third of these hooks is run when a &lt;em&gt;window selection change&lt;/em&gt; has selected another window since the last redisplay.</source>
          <target state="translated">El tercero de estos ganchos se ejecuta cuando un &lt;em&gt;cambio de selecci&amp;oacute;n de ventana&lt;/em&gt; ha seleccionado otra ventana desde la &amp;uacute;ltima vez que se volvi&amp;oacute; a mostrar.</target>
        </trans-unit>
        <trans-unit id="c89651a099ca91af6c8a8b83f402ae4da806d1ff" translate="yes" xml:space="preserve">
          <source>The third part of the pattern matches the whitespace that follows the end of a sentence: the end of a line (optionally with a space), or a tab, or two spaces. The double backslashes mark the parentheses and vertical bars as regular expression syntax; the parentheses delimit a group and the vertical bars separate alternatives. The dollar sign is used to match the end of a line.</source>
          <target state="translated">La tercera parte del patr√≥n coincide con el espacio en blanco que sigue al final de una frase:el final de una l√≠nea (opcionalmente con un espacio),o una pesta√±a,o dos espacios.Las dobles barras invertidas marcan los par√©ntesis y las barras verticales como sintaxis de expresi√≥n regular;los par√©ntesis delimitan un grupo y las barras verticales separan las alternativas.El signo del d√≥lar se utiliza para hacer coincidir el final de una l√≠nea.</target>
        </trans-unit>
        <trans-unit id="607c3d642b7b987d71b42da79930af648e956246" translate="yes" xml:space="preserve">
          <source>The three Lisp modes (Lisp mode, Emacs Lisp mode, and Lisp Interaction mode) have more features than Text mode and the code is correspondingly more complicated. Here are excerpts from</source>
          <target state="translated">Los tres modos de Lisp (modo Lisp,modo Lisp de Emacs y modo Lisp Interaction)tienen m√°s caracter√≠sticas que el modo Texto y el c√≥digo es correspondientemente m√°s complicado.Aqu√≠ hay extractos de</target>
        </trans-unit>
        <trans-unit id="45ee5df28937c07f3548f70fd6cc8c94bf25c3ce" translate="yes" xml:space="preserve">
          <source>The three modes for Lisp share much of their code. For instance, each calls the following function to set various variables:</source>
          <target state="translated">Los tres modos para Lisp comparten gran parte de su c√≥digo.Por ejemplo,cada uno llama a la siguiente funci√≥n para establecer varias variables:</target>
        </trans-unit>
        <trans-unit id="54870091d56fd5e724ee385ddc157eb207f13d76" translate="yes" xml:space="preserve">
          <source>The time at which the event occurred, as an integer number of milliseconds since a system-dependent initial time.</source>
          <target state="translated">El momento en que se produjo el evento,como un n√∫mero entero de milisegundos desde un tiempo inicial dependiente del sistema.</target>
        </trans-unit>
        <trans-unit id="1ebfb539c64783c4344442794aee02ad7006a6f2" translate="yes" xml:space="preserve">
          <source>The time at which the event occurred, in milliseconds. On some toolkits, including GTK+, Emacs cannot extract this data, so the value is always &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">La hora a la que ocurri&amp;oacute; el evento, en milisegundos. En algunos kits de herramientas, incluido GTK +, Emacs no puede extraer estos datos, por lo que el valor siempre es &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="98e57126dedf2d6400ffdfdef20aa57a4ca36ef3" translate="yes" xml:space="preserve">
          <source>The time elapsed since the process started, as a Lisp timestamp.</source>
          <target state="translated">El tiempo transcurrido desde que comenz√≥ el proceso,como una marca de tiempo de Lisp.</target>
        </trans-unit>
        <trans-unit id="00b925b3b99613c5ebaf63a3e99e731129a59a23" translate="yes" xml:space="preserve">
          <source>The time of last access as a Lisp timestamp (&lt;code&gt;file-attribute-access-time&lt;/code&gt;). The timestamp is in the style of &lt;code&gt;current-time&lt;/code&gt; (see &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Time of Day&lt;/a&gt;) and is truncated to that of the filesystem&amp;rsquo;s timestamp resolution; for example, on some FAT-based filesystems, only the date of last access is recorded, so this time will always hold the midnight of the day of the last access.</source>
          <target state="translated">La hora del &amp;uacute;ltimo acceso como una marca de tiempo Lisp ( &lt;code&gt;file-attribute-access-time&lt;/code&gt; ). La marca de tiempo tiene el estilo de &lt;code&gt;current-time&lt;/code&gt; (consulte &lt;a href=&quot;time-of-day#Time-of-Day&quot;&gt;Hora del d&amp;iacute;a&lt;/a&gt; ) y est&amp;aacute; truncada a la de la resoluci&amp;oacute;n de la marca de tiempo del sistema de archivos; por ejemplo, en algunos sistemas de archivos basados ‚Äã‚Äãen FAT, solo se registra la fecha del &amp;uacute;ltimo acceso, por lo que esta hora siempre ser&amp;aacute; la medianoche del d&amp;iacute;a del &amp;uacute;ltimo acceso.</target>
        </trans-unit>
        <trans-unit id="96f255ff11207f96a6ff4be345f0df83a02d827c" translate="yes" xml:space="preserve">
          <source>The time of last modification as a Lisp timestamp (&lt;code&gt;file-attribute-modification-time&lt;/code&gt;). This is the last time when the file&amp;rsquo;s contents were modified.</source>
          <target state="translated">La hora de la &amp;uacute;ltima modificaci&amp;oacute;n como una marca de tiempo Lisp ( &lt;code&gt;file-attribute-modification-time&lt;/code&gt; ). Esta es la &amp;uacute;ltima vez que se modific&amp;oacute; el contenido del archivo.</target>
        </trans-unit>
        <trans-unit id="7647d2bb474bf5d47880005e9fa4aa2091b44379" translate="yes" xml:space="preserve">
          <source>The time of last status change as a Lisp timestamp (&lt;code&gt;file-attribute-status-change-time&lt;/code&gt;). This is the time of the last change to the file&amp;rsquo;s access mode bits, its owner and group, and other information recorded in the filesystem for the file, beyond the file&amp;rsquo;s contents.</source>
          <target state="translated">La hora del &amp;uacute;ltimo cambio de estado como una marca de tiempo Lisp ( &lt;code&gt;file-attribute-status-change-time&lt;/code&gt; ). Este es el momento del &amp;uacute;ltimo cambio en los bits del modo de acceso del archivo, su propietario y grupo, y otra informaci&amp;oacute;n registrada en el sistema de archivos para el archivo, m&amp;aacute;s all&amp;aacute; del contenido del archivo.</target>
        </trans-unit>
        <trans-unit id="24c20ed315222312a2625d91bebf7c20d8b009b0" translate="yes" xml:space="preserve">
          <source>The time to use &lt;code&gt;make-variable-buffer-local&lt;/code&gt; is when it is crucial that no two buffers ever share the same binding. For example, when a variable is used for internal purposes in a Lisp program which depends on having separate values in separate buffers, then using &lt;code&gt;make-variable-buffer-local&lt;/code&gt; can be the best solution.</source>
          <target state="translated">El momento de usar &lt;code&gt;make-variable-buffer-local&lt;/code&gt; es cuando es crucial que nunca dos b&amp;uacute;feres compartan el mismo enlace. Por ejemplo, cuando una variable se usa para prop&amp;oacute;sitos internos en un programa Lisp que depende de tener valores separados en b&amp;uacute;feres separados, entonces usar &lt;code&gt;make-variable-buffer-local&lt;/code&gt; puede ser la mejor soluci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="c627015afbabd38bf35740a5ee9f2c3cb23dc48d" translate="yes" xml:space="preserve">
          <source>The time when the buffer was last auto-saved.</source>
          <target state="translated">El momento en que el buffer fue auto-guardado por √∫ltima vez.</target>
        </trans-unit>
        <trans-unit id="1e0d0c1f4808016965104728546b5791c182f028" translate="yes" xml:space="preserve">
          <source>The time when the process was started, as a Lisp timestamp.</source>
          <target state="translated">El momento en que se inici√≥ el proceso,como una marca de tiempo de Lisp.</target>
        </trans-unit>
        <trans-unit id="802393edc2b9a42653a80bc4d4ec3e5e5f24f1f4" translate="yes" xml:space="preserve">
          <source>The timeout time in milliseconds since the display of the notification at which the notification should automatically close. If -1, the notification&amp;rsquo;s expiration time is dependent on the notification server&amp;rsquo;s settings, and may vary for the type of notification. If 0, the notification never expires. Default value is -1.</source>
          <target state="translated">El tiempo de espera en milisegundos desde la visualizaci&amp;oacute;n de la notificaci&amp;oacute;n en el que la notificaci&amp;oacute;n debe cerrarse autom&amp;aacute;ticamente. Si es -1, el tiempo de vencimiento de la notificaci&amp;oacute;n depende de la configuraci&amp;oacute;n del servidor de notificaciones y puede variar seg&amp;uacute;n el tipo de notificaci&amp;oacute;n. Si es 0, la notificaci&amp;oacute;n nunca caduca. El valor predeterminado es -1.</target>
        </trans-unit>
        <trans-unit id="5f4688992c1cae810c4b2847d1acc4a25d6a81f0" translate="yes" xml:space="preserve">
          <source>The title (only on a window system) or the name of the selected frame. See &lt;a href=&quot;basic-parameters#Basic-Parameters&quot;&gt;Basic Parameters&lt;/a&gt;.</source>
          <target state="translated">El t&amp;iacute;tulo (solo en un sistema de ventanas) o el nombre del marco seleccionado. Consulte &lt;a href=&quot;basic-parameters#Basic-Parameters&quot;&gt;Par&amp;aacute;metros b&amp;aacute;sicos&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="00a751eb6540114fecfd6321e7957f9e5fe58259" translate="yes" xml:space="preserve">
          <source>The title of the notification. If &lt;var&gt;title&lt;/var&gt; is a string, it is displayed in a larger font immediately above the body text. The title text can be up to 63 characters long; longer text will be truncated.</source>
          <target state="translated">El t&amp;iacute;tulo de la notificaci&amp;oacute;n. Si el &lt;var&gt;title&lt;/var&gt; es una cadena, se muestra en una fuente m&amp;aacute;s grande inmediatamente encima del texto del cuerpo. El texto del t&amp;iacute;tulo puede tener hasta 63 caracteres; el texto m&amp;aacute;s largo se truncar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="fb5b566b508b98eab0c7c5b9ce2a802059ff0fbe" translate="yes" xml:space="preserve">
          <source>The toggle command takes one optional (prefix) argument. If called interactively with no argument it toggles the mode on or off. A positive prefix argument enables the mode, any other prefix argument disables it. From Lisp, an argument of &lt;code&gt;toggle&lt;/code&gt; toggles the mode, whereas an omitted or &lt;code&gt;nil&lt;/code&gt; argument enables the mode. This makes it easy to enable the minor mode in a major mode hook, for example. If &lt;var&gt;doc&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, the macro supplies a default documentation string explaining the above.</source>
          <target state="translated">El comando de alternancia toma un argumento opcional (prefijo). Si se llama de forma interactiva sin argumentos, activa o desactiva el modo. Un argumento de prefijo positivo habilita el modo, cualquier otro argumento de prefijo lo deshabilita. Desde Lisp, un argumento de &lt;code&gt;toggle&lt;/code&gt; alterna el modo, mientras que un argumento omitido o &lt;code&gt;nil&lt;/code&gt; habilita el modo. Esto facilita la habilitaci&amp;oacute;n del modo menor en un gancho de modo mayor, por ejemplo. Si &lt;var&gt;doc&lt;/var&gt; es &lt;code&gt;nil&lt;/code&gt; , la macro proporciona una cadena de documentaci&amp;oacute;n predeterminada que explica lo anterior.</target>
        </trans-unit>
        <trans-unit id="ee396be1bc2edeec5a010e520887af01b2c0ec1a" translate="yes" xml:space="preserve">
          <source>The tool bar contents are controlled by a menu keymap attached to a fake function key called</source>
          <target state="translated">El contenido de la barra de herramientas se controla mediante un mapa de teclas de men√∫ adjunto a una falsa tecla de funci√≥n llamada</target>
        </trans-unit>
        <trans-unit id="c8e2bf3f449141de6022307bd19ac291ae6a42dd" translate="yes" xml:space="preserve">
          <source>The top edge of the window, measured in lines, relative to the topmost line (line 0) of the window&amp;rsquo;s native frame.</source>
          <target state="translated">El borde superior de la ventana, medido en l&amp;iacute;neas, en relaci&amp;oacute;n con la l&amp;iacute;nea superior (l&amp;iacute;nea 0) del marco nativo de la ventana.</target>
        </trans-unit>
        <trans-unit id="80ecb166938baeaaabb20112d9fe96a939c773d4" translate="yes" xml:space="preserve">
          <source>The top level variable, mode-line-format.</source>
          <target state="translated">La variable de nivel superior,formato modo-l√≠nea.</target>
        </trans-unit>
        <trans-unit id="10fcd8fbdfa1f56f99b62be921ede3801375f31b" translate="yes" xml:space="preserve">
          <source>The top-level forms in the file defining the mode should be written so that they may be evaluated more than once without adverse consequences. For instance, use &lt;code&gt;defvar&lt;/code&gt; or &lt;code&gt;defcustom&lt;/code&gt; to set mode-related variables, so that they are not reinitialized if they already have a value (see &lt;a href=&quot;defining-variables#Defining-Variables&quot;&gt;Defining Variables&lt;/a&gt;).</source>
          <target state="translated">Los formularios de nivel superior en el archivo que define el modo deben escribirse de modo que puedan evaluarse m&amp;aacute;s de una vez sin consecuencias adversas. Por ejemplo, use &lt;code&gt;defvar&lt;/code&gt; o &lt;code&gt;defcustom&lt;/code&gt; para establecer variables relacionadas con el modo, de modo que no se reinicialicen si ya tienen un valor (consulte &lt;a href=&quot;defining-variables#Defining-Variables&quot;&gt;Definici&amp;oacute;n de variables&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="e0bf6b79b51361600ab0d2d09d4929d9f08d380a" translate="yes" xml:space="preserve">
          <source>The total height of each display line consists of the height of the contents of the line, plus optional additional vertical line spacing above or below the display line.</source>
          <target state="translated">La altura total de cada l√≠nea de visualizaci√≥n consiste en la altura del contenido de la l√≠nea,m√°s un espacio vertical adicional opcional por encima o por debajo de la l√≠nea de visualizaci√≥n.</target>
        </trans-unit>
        <trans-unit id="31d0e82b6a88e74d0b24a216385d5fc85a5cec98" translate="yes" xml:space="preserve">
          <source>The total length, in pixels, of the scroll bar. On some toolkits, including GTK+, Emacs cannot extract this data, so the value is always &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">La longitud total, en p&amp;iacute;xeles, de la barra de desplazamiento. En algunos kits de herramientas, incluido GTK +, Emacs no puede extraer estos datos, por lo que el valor siempre es &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b25cf92e537fbc457f73f8b8ccd34da35b4b1e0f" translate="yes" xml:space="preserve">
          <source>The total number of cons cells that have been allocated so far in this Emacs session.</source>
          <target state="translated">El n√∫mero total de c√©lulas cons que han sido asignadas hasta ahora en esta sesi√≥n del Emacs.</target>
        </trans-unit>
        <trans-unit id="a994cddf9b826ab8c3b89d449d09ae2a9b73e706" translate="yes" xml:space="preserve">
          <source>The total number of floats that have been allocated so far in this Emacs session.</source>
          <target state="translated">El n√∫mero total de flotadores que se han asignado hasta ahora en esta sesi√≥n del Emacs.</target>
        </trans-unit>
        <trans-unit id="fdcf07b9e5a059b00bbaae5593cd683d00025222" translate="yes" xml:space="preserve">
          <source>The total number of intervals that have been allocated so far in this Emacs session.</source>
          <target state="translated">El n√∫mero total de intervalos que se han asignado hasta ahora en esta sesi√≥n del Emacs.</target>
        </trans-unit>
        <trans-unit id="614654e18f37f5b5f422dea3bbdcbb3a165f297e" translate="yes" xml:space="preserve">
          <source>The total number of string characters that have been allocated so far in this session.</source>
          <target state="translated">El n√∫mero total de caracteres de cadena que se han asignado hasta ahora en este per√≠odo de sesiones.</target>
        </trans-unit>
        <trans-unit id="abb717f47f8933d7923fb2b52cfb28bd464f36e9" translate="yes" xml:space="preserve">
          <source>The total number of strings that have been allocated so far in this Emacs session.</source>
          <target state="translated">El n√∫mero total de cuerdas que se han asignado hasta ahora en esta sesi√≥n del Emacs.</target>
        </trans-unit>
        <trans-unit id="e9b8f06e1c94173e7b8d8a404718b1b724454813" translate="yes" xml:space="preserve">
          <source>The total number of symbols that have been allocated so far in this Emacs session.</source>
          <target state="translated">El n√∫mero total de s√≠mbolos que se han asignado hasta ahora en esta sesi√≥n del Emacs.</target>
        </trans-unit>
        <trans-unit id="27a10a08d892e6a91c5cf07d46fe77aa2af1a3fa" translate="yes" xml:space="preserve">
          <source>The total number of vector cells that have been allocated so far in this Emacs session. This includes vector-like objects such as markers and overlays, plus certain objects not visible to users.</source>
          <target state="translated">El n√∫mero total de c√©lulas vectoriales que han sido asignadas hasta ahora en esta sesi√≥n del Emacs.Esto incluye objetos de tipo vectorial como marcadores y superposiciones,adem√°s de ciertos objetos no visibles para los usuarios.</target>
        </trans-unit>
        <trans-unit id="441a3e680eaafec796a9e2a7060e2a280535485a" translate="yes" xml:space="preserve">
          <source>The total size of all string data in bytes.</source>
          <target state="translated">El tama√±o total de todos los datos de la cadena en bytes.</target>
        </trans-unit>
        <trans-unit id="c7d14b13c564dd0ff16404189a2b255627fffdf3" translate="yes" xml:space="preserve">
          <source>The total width and height of the window measured in pixels.</source>
          <target state="translated">El ancho y alto total de la ventana medido en p√≠xeles.</target>
        </trans-unit>
        <trans-unit id="1ccf2de5b65512cde61e59a9ed444c1197414f54" translate="yes" xml:space="preserve">
          <source>The total width and height of the window, measured in columns and lines respectively. The values include scroll bars and fringes, dividers and/or the separator line on the right of the window (if any).</source>
          <target state="translated">El ancho y la altura totales de la ventana,medidos en columnas y l√≠neas respectivamente.Los valores incluyen barras de desplazamiento y franjas,divisores y/o la l√≠nea de separaci√≥n a la derecha de la ventana (si la hay).</target>
        </trans-unit>
        <trans-unit id="bc966a52b3595d2fcaff1f0ffe9ad07780edb9e3" translate="yes" xml:space="preserve">
          <source>The translation table &lt;var&gt;table&lt;/var&gt; is a string or a char-table; &lt;code&gt;(aref &lt;var&gt;table&lt;/var&gt; &lt;var&gt;ochar&lt;/var&gt;)&lt;/code&gt; gives the translated character corresponding to &lt;var&gt;ochar&lt;/var&gt;. If &lt;var&gt;table&lt;/var&gt; is a string, any characters with codes larger than the length of &lt;var&gt;table&lt;/var&gt; are not altered by the translation.</source>
          <target state="translated">La tabla de traducci&amp;oacute;n de &lt;var&gt;table&lt;/var&gt; es una cadena o una tabla de caracteres; &lt;code&gt;(aref &lt;var&gt;table&lt;/var&gt; &lt;var&gt;ochar&lt;/var&gt;)&lt;/code&gt; da el car&amp;aacute;cter traducido correspondiente a &lt;var&gt;ochar&lt;/var&gt; . Si la &lt;var&gt;table&lt;/var&gt; es una cadena, la traducci&amp;oacute;n no modifica ning&amp;uacute;n car&amp;aacute;cter con c&amp;oacute;digos mayores que la longitud de la &lt;var&gt;table&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="397c955cc662600cfb57e3c9c25331b73b22fe24" translate="yes" xml:space="preserve">
          <source>The two constructs described next are mostly identical to &lt;code&gt;with-temp-buffer-window&lt;/code&gt; but differ from it as specified:</source>
          <target state="translated">Las dos construcciones descritas a continuaci&amp;oacute;n son en su mayor&amp;iacute;a id&amp;eacute;nticas a &lt;code&gt;with-temp-buffer-window&lt;/code&gt; pero difieren de ella como se especifica:</target>
        </trans-unit>
        <trans-unit id="04a05211cdc885470090771446510a238e8b75f7" translate="yes" xml:space="preserve">
          <source>The type &lt;var&gt;type&lt;/var&gt; was defined.</source>
          <target state="translated">Se defini&amp;oacute; el tipo de &lt;var&gt;type&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="9989a67db7c219bdacd778e97cc75a29828fcbdc" translate="yes" xml:space="preserve">
          <source>The type of connection. Options are:</source>
          <target state="translated">El tipo de conexi√≥n.Las opciones son:</target>
        </trans-unit>
        <trans-unit id="10723b34477adf1a54c090dcb75c1b850f7f8519" translate="yes" xml:space="preserve">
          <source>The type of flow control to use for this connection, which is either &lt;code&gt;nil&lt;/code&gt; (don&amp;rsquo;t use flow control), the symbol &lt;code&gt;hw&lt;/code&gt; (use RTS/CTS hardware flow control), or the symbol &lt;code&gt;sw&lt;/code&gt; (use XON/XOFF software flow control). If &lt;var&gt;flowcontrol&lt;/var&gt; is not given, it defaults to no flow control.</source>
          <target state="translated">El tipo de control de flujo que se utilizar&amp;aacute; para esta conexi&amp;oacute;n, que es &lt;code&gt;nil&lt;/code&gt; (no use control de flujo), el s&amp;iacute;mbolo &lt;code&gt;hw&lt;/code&gt; (use control de flujo de hardware RTS / CTS) o el s&amp;iacute;mbolo &lt;code&gt;sw&lt;/code&gt; (use control de flujo de software XON / XOFF) . Si &lt;var&gt;flowcontrol&lt;/var&gt; no se da, el valor predeterminado sin control de flujo.</target>
        </trans-unit>
        <trans-unit id="824546068f92ce5ea60e0deff376010de3e1fec4" translate="yes" xml:space="preserve">
          <source>The type of icon to use for this frame. If the value is a string, that specifies a file containing a bitmap to use; &lt;code&gt;nil&lt;/code&gt; specifies no icon (in which case the window manager decides what to show); any other non-&lt;code&gt;nil&lt;/code&gt; value specifies the default Emacs icon.</source>
          <target state="translated">El tipo de icono que se utilizar&amp;aacute; para este marco. Si el valor es una cadena, eso especifica un archivo que contiene un mapa de bits para usar; &lt;code&gt;nil&lt;/code&gt; no especifica ning&amp;uacute;n icono (en cuyo caso el administrador de ventanas decide qu&amp;eacute; mostrar); cualquier otro valor que no sea &lt;code&gt;nil&lt;/code&gt; especifica el icono predeterminado de Emacs.</target>
        </trans-unit>
        <trans-unit id="77d40006d2d51026df28ce9827773f880edd24d6" translate="yes" xml:space="preserve">
          <source>The type of notification this is, a string. See the &lt;a href=&quot;https://developer.gnome.org/notification-spec/#categories&quot;&gt;Desktop Notifications Specification&lt;/a&gt; for a list of standard categories.</source>
          <target state="translated">El tipo de notificaci&amp;oacute;n es una cadena. Consulte la &lt;a href=&quot;https://developer.gnome.org/notification-spec/#categories&quot;&gt;Especificaci&amp;oacute;n de notificaciones de escritorio&lt;/a&gt; para obtener una lista de categor&amp;iacute;as est&amp;aacute;ndar.</target>
        </trans-unit>
        <trans-unit id="55bdf0d544649480b63a1172ccccf6ea3ae2d63d" translate="yes" xml:space="preserve">
          <source>The type slot should be a symbol or a type descriptor. If it&amp;rsquo;s a type descriptor, the symbol naming its type will be returned; &lt;a href=&quot;type-descriptors#Type-Descriptors&quot;&gt;Type Descriptors&lt;/a&gt;. Any other kind of object is returned as-is.</source>
          <target state="translated">La ranura de tipo debe ser un s&amp;iacute;mbolo o un descriptor de tipo. Si es un descriptor de tipo, se devolver&amp;aacute; el s&amp;iacute;mbolo que nombra su tipo; &lt;a href=&quot;type-descriptors#Type-Descriptors&quot;&gt;Descriptores de tipo&lt;/a&gt; . Cualquier otro tipo de objeto se devuelve como est&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="e025c62fbc48998b73600c44b54165169adc5d17" translate="yes" xml:space="preserve">
          <source>The type specializer, &lt;code&gt;(&lt;var&gt;arg&lt;/var&gt; &lt;var&gt;type&lt;/var&gt;)&lt;/code&gt;, can specify one of the &lt;em&gt;system types&lt;/em&gt; in the following list. When a parent type is specified, an argument whose type is any of its more specific child types, as well as grand-children, grand-grand-children, etc. will also be compatible.</source>
          <target state="translated">El especialista en tipos, &lt;code&gt;(&lt;var&gt;arg&lt;/var&gt; &lt;var&gt;type&lt;/var&gt;)&lt;/code&gt; , puede especificar uno de los &lt;em&gt;tipos de sistema&lt;/em&gt; en la siguiente lista. Cuando se especifica un tipo padre, tambi&amp;eacute;n ser&amp;aacute; compatible un argumento cuyo tipo sea cualquiera de sus tipos secundarios m&amp;aacute;s espec&amp;iacute;ficos, as&amp;iacute; como nietos, nietos, etc.</target>
        </trans-unit>
        <trans-unit id="918de08f5d10241b12396b2606b071d4bc53db4a" translate="yes" xml:space="preserve">
          <source>The type, height, and width of the cursor that was last displayed on this window.</source>
          <target state="translated">El tipo,altura y anchura del cursor que se mostr√≥ por √∫ltima vez en esta ventana.</target>
        </trans-unit>
        <trans-unit id="813fe6c3982289dedb90eb513614087f1cf82291" translate="yes" xml:space="preserve">
          <source>The types in the previous section are used for general programming purposes, and most of them are common to most Lisp dialects. Emacs Lisp provides several additional data types for purposes connected with editing.</source>
          <target state="translated">Los tipos de la secci√≥n anterior se utilizan para fines de programaci√≥n general,y la mayor√≠a de ellos son comunes a la mayor√≠a de los dialectos de Lisp.Emacs Lisp proporciona varios tipos de datos adicionales para fines relacionados con la edici√≥n.</target>
        </trans-unit>
        <trans-unit id="e4129664d859d9f2877eb29408df21ab5cb6661f" translate="yes" xml:space="preserve">
          <source>The types of this window&amp;rsquo;s vertical and horizontal scroll bars.</source>
          <target state="translated">Los tipos de barras de desplazamiento vertical y horizontal de esta ventana.</target>
        </trans-unit>
        <trans-unit id="4ebd8369f764b15f8731d7001594b37607f527c5" translate="yes" xml:space="preserve">
          <source>The underlying ACL implementation is platform-specific; on GNU/Linux and BSD, Emacs uses the POSIX ACL interface, while on MS-Windows Emacs emulates the POSIX ACL interface with native file security APIs.</source>
          <target state="translated">La implementaci√≥n de ACL subyacente es espec√≠fica de la plataforma;en GNU/Linux y BSD,Emacs utiliza la interfaz POSIX ACL,mientras que en MS-Windows Emacs emula la interfaz POSIX ACL con APIs nativas de seguridad de archivos.</target>
        </trans-unit>
        <trans-unit id="32e0037f866c0451ac34d2bce4ba7d40d8a695e5" translate="yes" xml:space="preserve">
          <source>The unibyte and multibyte text representations use different character codes. The valid character codes for unibyte representation range from 0 to &lt;code&gt;#xFF&lt;/code&gt; (255)&amp;mdash;the values that can fit in one byte. The valid character codes for multibyte representation range from 0 to &lt;code&gt;#x3FFFFF&lt;/code&gt;. In this code space, values 0 through &lt;code&gt;#x7F&lt;/code&gt; (127) are for</source>
          <target state="translated">Las representaciones de texto unibyte y multibyte utilizan c&amp;oacute;digos de caracteres diferentes. Los c&amp;oacute;digos de caracteres v&amp;aacute;lidos para la representaci&amp;oacute;n unibyte van de 0 a &lt;code&gt;#xFF&lt;/code&gt; (255), los valores que pueden caber en un byte. Los c&amp;oacute;digos de caracteres v&amp;aacute;lidos para la representaci&amp;oacute;n multibyte van de 0 a &lt;code&gt;#x3FFFFF&lt;/code&gt; . En este espacio de c&amp;oacute;digo, los valores 0 a &lt;code&gt;#x7F&lt;/code&gt; (127) son para</target>
        </trans-unit>
        <trans-unit id="9cca45442a6da20dbdae7b6615f2dc10baadc419" translate="yes" xml:space="preserve">
          <source>The unit of heap space measurement, always equal to 1024 bytes.</source>
          <target state="translated">La unidad de medida del espacio en pila,siempre igual a 1024 bytes.</target>
        </trans-unit>
        <trans-unit id="63b023b466e3bce22e9d5ba36aecbcf660e048b0" translate="yes" xml:space="preserve">
          <source>The upcase table maps each character into the corresponding upper case character.</source>
          <target state="translated">La tabla de may√∫sculas asigna cada car√°cter a la correspondiente may√∫scula.</target>
        </trans-unit>
        <trans-unit id="a0c17633f0138ef3e9286c2d1a5c0258bfdb10e0" translate="yes" xml:space="preserve">
          <source>The urgency level. It can be &lt;code&gt;low&lt;/code&gt;, &lt;code&gt;normal&lt;/code&gt;, or &lt;code&gt;critical&lt;/code&gt;.</source>
          <target state="translated">El nivel de urgencia. Puede ser &lt;code&gt;low&lt;/code&gt; , &lt;code&gt;normal&lt;/code&gt; o &lt;code&gt;critical&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ce53fb4d208bc4c27337bdd863033417c703f3c" translate="yes" xml:space="preserve">
          <source>The use of a special variable as a formal argument in a function is discouraged. Doing so gives rise to unspecified behavior when lexical binding mode is enabled (it may use lexical binding sometimes, and dynamic binding other times).</source>
          <target state="translated">Se desaconseja el uso de una variable especial como argumento formal en una funci√≥n.Al hacerlo se produce un comportamiento no especificado cuando se activa el modo de vinculaci√≥n l√©xica (puede utilizar la vinculaci√≥n l√©xica algunas veces,y la vinculaci√≥n din√°mica otras veces).</target>
        </trans-unit>
        <trans-unit id="143e85103669e6f3a73e45520cffeb3311a2e64f" translate="yes" xml:space="preserve">
          <source>The use of numbered backups ultimately leads to a large number of backup versions, which must then be deleted. Emacs can do this automatically or it can ask the user whether to delete them.</source>
          <target state="translated">El uso de copias de seguridad numeradas conduce en √∫ltima instancia a un gran n√∫mero de versiones de copia de seguridad,que luego deben ser eliminadas.Emacs puede hacer esto autom√°ticamente o puede preguntar al usuario si desea eliminarlas.</target>
        </trans-unit>
        <trans-unit id="a8707423f159b173b39f4962f0556071463cb869" translate="yes" xml:space="preserve">
          <source>The use of the &lt;var&gt;debugger-args&lt;/var&gt; is that &lt;code&gt;debug&lt;/code&gt; displays the rest of its arguments at the top of the</source>
          <target state="translated">El uso de &lt;var&gt;debugger-args&lt;/var&gt; es que &lt;code&gt;debug&lt;/code&gt; muestra el resto de sus argumentos en la parte superior de la</target>
        </trans-unit>
        <trans-unit id="511c6540e54c5649d62befa61b017dde79ffef3a" translate="yes" xml:space="preserve">
          <source>The user can add any key matching the specified key type, but you can give some keys a preferential treatment by specifying them with the &lt;code&gt;:options&lt;/code&gt; (see &lt;a href=&quot;variable-definitions#Variable-Definitions&quot;&gt;Variable Definitions&lt;/a&gt;). The specified keys will always be shown in the customize buffer (together with a suitable value), with a checkbox to include or exclude or disable the key/value pair from the alist. The user will not be able to edit the keys specified by the &lt;code&gt;:options&lt;/code&gt; keyword argument.</source>
          <target state="translated">El usuario puede agregar cualquier clave que coincida con el tipo de clave especificado, pero puede dar a algunas claves un tratamiento preferencial especific&amp;aacute;ndolas con las &lt;code&gt;:options&lt;/code&gt; (consulte &lt;a href=&quot;variable-definitions#Variable-Definitions&quot;&gt;Definiciones de variables&lt;/a&gt; ). Las claves especificadas siempre se mostrar&amp;aacute;n en el b&amp;uacute;fer de personalizaci&amp;oacute;n (junto con un valor adecuado), con una casilla de verificaci&amp;oacute;n para incluir, excluir o deshabilitar el par clave / valor de la lista. El usuario no podr&amp;aacute; editar las claves especificadas por el argumento de la palabra clave &lt;code&gt;:options&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fdfe999c9bdc85b3810a58353ece516fc9370b63" translate="yes" xml:space="preserve">
          <source>The user can type</source>
          <target state="translated">El usuario puede escribir</target>
        </trans-unit>
        <trans-unit id="fd064556685bc85b9d72d2d84d2adeec46f6b9f6" translate="yes" xml:space="preserve">
          <source>The user option &lt;code&gt;display-buffer-alist&lt;/code&gt;.</source>
          <target state="translated">La opci&amp;oacute;n de usuario &lt;code&gt;display-buffer-alist&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="51ded933043196b29f2223baab0f1acb3d9183ff" translate="yes" xml:space="preserve">
          <source>The user option &lt;code&gt;display-buffer-base-action&lt;/code&gt;.</source>
          <target state="translated">La opci&amp;oacute;n de usuario &lt;code&gt;display-buffer-base-action&lt;/code&gt; .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
