<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="elisp">
    <body>
      <group id="elisp">
        <trans-unit id="5c4c3a1951ef6f57d1c7ca838ccf2d8eb696240b" translate="yes" xml:space="preserve">
          <source>A record is considered a constant for evaluation: the result of evaluating it is the same record. This does not evaluate or even examine the slots. See &lt;a href=&quot;self_002devaluating-forms#Self_002dEvaluating-Forms&quot;&gt;Self-Evaluating Forms&lt;/a&gt;.</source>
          <target state="translated">A record is considered a constant for evaluation: the result of evaluating it is the same record. This does not evaluate or even examine the slots. See &lt;a href=&quot;self_002devaluating-forms#Self_002dEvaluating-Forms&quot;&gt;Self-Evaluating Forms&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1e8a6905d630d3404029e75db8db9a5413103c0b" translate="yes" xml:space="preserve">
          <source>A rectangle is a cons &lt;code&gt;(rect . ((&lt;var&gt;x0&lt;/var&gt; . &lt;var&gt;y0&lt;/var&gt;) . (&lt;var&gt;x1&lt;/var&gt; . &lt;var&gt;y1&lt;/var&gt;)))&lt;/code&gt; which specifies the pixel coordinates of the upper left and bottom right corners of the rectangle area.</source>
          <target state="translated">A rectangle is a cons &lt;code&gt;(rect . ((&lt;var&gt;x0&lt;/var&gt; . &lt;var&gt;y0&lt;/var&gt;) . (&lt;var&gt;x1&lt;/var&gt; . &lt;var&gt;y1&lt;/var&gt;)))&lt;/code&gt; which specifies the pixel coordinates of the upper left and bottom right corners of the rectangle area.</target>
        </trans-unit>
        <trans-unit id="760581ec68346b2eddde59f770ca37fb8b422e75" translate="yes" xml:space="preserve">
          <source>A rectangle is represented by a list of strings.</source>
          <target state="translated">Un rectángulo está representado por una lista de cuerdas.</target>
        </trans-unit>
        <trans-unit id="3346e6273038fc64f4fbb8d374b1fce2c136e83d" translate="yes" xml:space="preserve">
          <source>A region is valid if it has a non-zero size, or if the user option &lt;code&gt;use-empty-active-region&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt; (by default, it is &lt;code&gt;nil&lt;/code&gt;). The function &lt;code&gt;region-active-p&lt;/code&gt; is similar to &lt;code&gt;use-region-p&lt;/code&gt;, but considers all regions as valid. In most cases, you should not use &lt;code&gt;region-active-p&lt;/code&gt;, since if the region is empty it is often more appropriate to operate on point.</source>
          <target state="translated">A region is valid if it has a non-zero size, or if the user option &lt;code&gt;use-empty-active-region&lt;/code&gt; is non- &lt;code&gt;nil&lt;/code&gt; (by default, it is &lt;code&gt;nil&lt;/code&gt; ). The function &lt;code&gt;region-active-p&lt;/code&gt; is similar to &lt;code&gt;use-region-p&lt;/code&gt; , but considers all regions as valid. In most cases, you should not use &lt;code&gt;region-active-p&lt;/code&gt; , since if the region is empty it is often more appropriate to operate on point.</target>
        </trans-unit>
        <trans-unit id="7645bf9394c9f078e2e073f4f4aec37d09bc9f80" translate="yes" xml:space="preserve">
          <source>A register is a sort of variable used in Emacs editing that can hold a variety of different kinds of values. Each register is named by a single character. All</source>
          <target state="translated">Un registro es una especie de variable usada en la edición de Emacs que puede contener una variedad de diferentes tipos de valores.Cada registro es nombrado por un solo carácter.Todos</target>
        </trans-unit>
        <trans-unit id="7979e8220db786a30b8cd38e091bc3092e455529" translate="yes" xml:space="preserve">
          <source>A regular expression which is used to recognize files represented in this format. If &lt;code&gt;nil&lt;/code&gt;, the format is never applied automatically.</source>
          <target state="translated">A regular expression which is used to recognize files represented in this format. If &lt;code&gt;nil&lt;/code&gt; , the format is never applied automatically.</target>
        </trans-unit>
        <trans-unit id="c24b91a9f9a759a8c4432a87f2b4e9fd5d3ae1d4" translate="yes" xml:space="preserve">
          <source>A repeating timer nominally ought to run every &lt;var&gt;repeat&lt;/var&gt; seconds, but remember that any invocation of a timer can be late. Lateness of one repetition has no effect on the scheduled time of the next repetition. For instance, if Emacs is busy computing for long enough to cover three scheduled repetitions of the timer, and then starts to wait, it will immediately call the timer function three times in immediate succession (presuming no other timers trigger before or between them). If you want a timer to run again no less than &lt;var&gt;n&lt;/var&gt; seconds after the last invocation, don&amp;rsquo;t use the &lt;var&gt;repeat&lt;/var&gt; argument. Instead, the timer function should explicitly reschedule the timer.</source>
          <target state="translated">A repeating timer nominally ought to run every &lt;var&gt;repeat&lt;/var&gt; seconds, but remember that any invocation of a timer can be late. Lateness of one repetition has no effect on the scheduled time of the next repetition. For instance, if Emacs is busy computing for long enough to cover three scheduled repetitions of the timer, and then starts to wait, it will immediately call the timer function three times in immediate succession (presuming no other timers trigger before or between them). If you want a timer to run again no less than &lt;var&gt;n&lt;/var&gt; seconds after the last invocation, don&amp;rsquo;t use the &lt;var&gt;repeat&lt;/var&gt; argument. Instead, the timer function should explicitly reschedule the timer.</target>
        </trans-unit>
        <trans-unit id="e2f2ef14d718ca929e8c78fb3c4ed893768a421e" translate="yes" xml:space="preserve">
          <source>A report of data or circumstances that are inherently wrong.</source>
          <target state="translated">Un informe de datos o circunstancias que son inherentemente erróneos.</target>
        </trans-unit>
        <trans-unit id="eb8781d25e6f48f39b9f40a9a917637ab87ff6e8" translate="yes" xml:space="preserve">
          <source>A report of data or circumstances that are not inherently wrong, but raise suspicion of a possible problem.</source>
          <target state="translated">Un informe de datos o circunstancias que no son intrínsecamente erróneos,pero que hacen sospechar de un posible problema.</target>
        </trans-unit>
        <trans-unit id="d307c7cf4ee99bc6a57ebcd6b8bdb77c9921af7c" translate="yes" xml:space="preserve">
          <source>A report of information that may be useful if you are debugging.</source>
          <target state="translated">Un informe de información que puede ser útil si se está depurando.</target>
        </trans-unit>
        <trans-unit id="c2d41ababeb627cbea79a2b4774d407966246992" translate="yes" xml:space="preserve">
          <source>A request coming into the Emacs server (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Emacs-Server.html#Emacs-Server&quot;&gt;Emacs Server&lt;/a&gt; in</source>
          <target state="translated">A request coming into the Emacs server (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Emacs-Server.html#Emacs-Server&quot;&gt;Emacs Server&lt;/a&gt; in</target>
        </trans-unit>
        <trans-unit id="01669c26fabf429577d64791deb11098d9c64a06" translate="yes" xml:space="preserve">
          <source>A request coming into the Emacs server (see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Emacs-Server.html#Emacs-Server&quot;&gt;Emacs Server&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4719bdbbbee0aec61be6413a247c988307546c30" translate="yes" xml:space="preserve">
          <source>A search which fails may or may not alter the match data. In the current implementation, it does not, but we may change it in the future. Don&amp;rsquo;t try to rely on the value of the match data after a failing search.</source>
          <target state="translated">A search which fails may or may not alter the match data. In the current implementation, it does not, but we may change it in the future. Don&amp;rsquo;t try to rely on the value of the match data after a failing search.</target>
        </trans-unit>
        <trans-unit id="19f76fe6ffeea4fd01e5d22be85263b150bdcc1b" translate="yes" xml:space="preserve">
          <source>A self-evaluating form yields a value that becomes part of the program, and you should not try to modify it via &lt;code&gt;setcar&lt;/code&gt;, &lt;code&gt;aset&lt;/code&gt; or similar operations. The Lisp interpreter might unify the constants yielded by your program&amp;rsquo;s self-evaluating forms, so that these constants might share structure. See &lt;a href=&quot;mutability#Mutability&quot;&gt;Mutability&lt;/a&gt;.</source>
          <target state="translated">A self-evaluating form yields a value that becomes part of the program, and you should not try to modify it via &lt;code&gt;setcar&lt;/code&gt; , &lt;code&gt;aset&lt;/code&gt; or similar operations. The Lisp interpreter might unify the constants yielded by your program&amp;rsquo;s self-evaluating forms, so that these constants might share structure. See &lt;a href=&quot;mutability#Mutability&quot;&gt;Mutability&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="809f65864b2f06a73611f6d9773e8af0e1c6a342" translate="yes" xml:space="preserve">
          <source>A sentinel runs only while Emacs is waiting (e.g., for terminal input, or for time to elapse, or for process output). This avoids the timing errors that could result from running sentinels at random places in the middle of other Lisp programs. A program can wait, so that sentinels will run, by calling &lt;code&gt;sit-for&lt;/code&gt; or &lt;code&gt;sleep-for&lt;/code&gt; (see &lt;a href=&quot;waiting#Waiting&quot;&gt;Waiting&lt;/a&gt;), or &lt;code&gt;accept-process-output&lt;/code&gt; (see &lt;a href=&quot;accepting-output#Accepting-Output&quot;&gt;Accepting Output&lt;/a&gt;). Emacs also allows sentinels to run when the command loop is reading input. &lt;code&gt;delete-process&lt;/code&gt; calls the sentinel when it terminates a running process.</source>
          <target state="translated">A sentinel runs only while Emacs is waiting (e.g., for terminal input, or for time to elapse, or for process output). This avoids the timing errors that could result from running sentinels at random places in the middle of other Lisp programs. A program can wait, so that sentinels will run, by calling &lt;code&gt;sit-for&lt;/code&gt; or &lt;code&gt;sleep-for&lt;/code&gt; (see &lt;a href=&quot;waiting#Waiting&quot;&gt;Waiting&lt;/a&gt;), or &lt;code&gt;accept-process-output&lt;/code&gt; (see &lt;a href=&quot;accepting-output#Accepting-Output&quot;&gt;Accepting Output&lt;/a&gt;). Emacs also allows sentinels to run when the command loop is reading input. &lt;code&gt;delete-process&lt;/code&gt; calls the sentinel when it terminates a running process.</target>
        </trans-unit>
        <trans-unit id="7e6cb7e7f9dd3a2fd01fc8d41681abcaa0d49a05" translate="yes" xml:space="preserve">
          <source>A sentinel that writes the output into the buffer of the process should check whether the buffer is still alive. If it tries to insert into a dead buffer, it will get an error. If the buffer is dead, &lt;code&gt;(buffer-name (process-buffer &lt;var&gt;process&lt;/var&gt;))&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">A sentinel that writes the output into the buffer of the process should check whether the buffer is still alive. If it tries to insert into a dead buffer, it will get an error. If the buffer is dead, &lt;code&gt;(buffer-name (process-buffer &lt;var&gt;process&lt;/var&gt;))&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9064318e89e1a55faeb1389633cadc95355e58cb" translate="yes" xml:space="preserve">
          <source>A serial connection is represented by a process object, which can be used in a similar way to a subprocess or network process. You can send and receive data, and configure the serial port. A serial process object has no process ID, however, and you can&amp;rsquo;t send signals to it, and the status codes are different from other types of processes. &lt;code&gt;delete-process&lt;/code&gt; on the process object or &lt;code&gt;kill-buffer&lt;/code&gt; on the process buffer close the connection, but this does not affect the device connected to the serial port.</source>
          <target state="translated">A serial connection is represented by a process object, which can be used in a similar way to a subprocess or network process. You can send and receive data, and configure the serial port. A serial process object has no process ID, however, and you can&amp;rsquo;t send signals to it, and the status codes are different from other types of processes. &lt;code&gt;delete-process&lt;/code&gt; on the process object or &lt;code&gt;kill-buffer&lt;/code&gt; on the process buffer close the connection, but this does not affect the device connected to the serial port.</target>
        </trans-unit>
        <trans-unit id="21fa9f7da229282ff2694dd4a704dadec42a314f" translate="yes" xml:space="preserve">
          <source>A series of progress messages has successive messages like those produced by &lt;code&gt;make-progress-reporter&lt;/code&gt;. They have the form &amp;lsquo;</source>
          <target state="translated">A series of progress messages has successive messages like those produced by &lt;code&gt;make-progress-reporter&lt;/code&gt; . They have the form &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="d71f439ab0b95d0944c5e07853acd9ce8564b47a" translate="yes" xml:space="preserve">
          <source>A shell command is represented as a string; Emacs runs the command as a filter to perform the conversion.</source>
          <target state="translated">Un comando de shell se representa como una cadena;Emacs ejecuta el comando como un filtro para realizar la conversión.</target>
        </trans-unit>
        <trans-unit id="f3bb37324cc51a26f83843d1862a1fad8f6884b1" translate="yes" xml:space="preserve">
          <source>A shell command or function to decode data in this format (to convert file data into the usual Emacs data representation).</source>
          <target state="translated">Un comando o función de shell para decodificar los datos en este formato (para convertir los datos de archivo en la representación habitual de datos de Emacs).</target>
        </trans-unit>
        <trans-unit id="5ec054c18402296c7ff7d861f7941798d34c99a2" translate="yes" xml:space="preserve">
          <source>A shell command or function to encode data in this format&amp;mdash;that is, to convert the usual Emacs data representation into this format.</source>
          <target state="translated">A shell command or function to encode data in this format&amp;mdash;that is, to convert the usual Emacs data representation into this format.</target>
        </trans-unit>
        <trans-unit id="bc6de15dd942ef7840dc24baab1e8703aa52b682" translate="yes" xml:space="preserve">
          <source>A shell connection.</source>
          <target state="translated">Una conexión de la concha.</target>
        </trans-unit>
        <trans-unit id="9094c70e17d9457eebec5ed27a044e758bc6892f" translate="yes" xml:space="preserve">
          <source>A short word (e.g., &amp;lsquo;</source>
          <target state="translated">A short word (e.g., &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="ce6ed42d12370e9ea126ada03e72bd7201fc704a" translate="yes" xml:space="preserve">
          <source>A short-cut function is useful in modes such as C mode and Lisp mode, where the &lt;code&gt;indent-line-function&lt;/code&gt; must scan from the beginning of the function definition: applying it to each line would be quadratic in time. The short cut can update the scan information as it moves through the lines indenting them; this takes linear time. In a mode where indenting a line individually is fast, there is no need for a short cut.</source>
          <target state="translated">A short-cut function is useful in modes such as C mode and Lisp mode, where the &lt;code&gt;indent-line-function&lt;/code&gt; must scan from the beginning of the function definition: applying it to each line would be quadratic in time. The short cut can update the scan information as it moves through the lines indenting them; this takes linear time. In a mode where indenting a line individually is fast, there is no need for a short cut.</target>
        </trans-unit>
        <trans-unit id="dc7b14268a4f6af9d3385017ee2059ab1e06d721" translate="yes" xml:space="preserve">
          <source>A simple example.</source>
          <target state="translated">Un simple ejemplo.</target>
        </trans-unit>
        <trans-unit id="ab823a2c48df7184be7245e578393bb0a5fddeca" translate="yes" xml:space="preserve">
          <source>A simple kind of menu key binding.</source>
          <target state="translated">Un simple tipo de vinculación de teclas de menú.</target>
        </trans-unit>
        <trans-unit id="277219dee67d93e83d0e5932ad5a5a1753829752" translate="yes" xml:space="preserve">
          <source>A simple minded indentation engine.</source>
          <target state="translated">Un motor de hendidura de mente simple.</target>
        </trans-unit>
        <trans-unit id="5d11d08e977e9455c28873a94f783cd668ae1815" translate="yes" xml:space="preserve">
          <source>A simple package consists of a single Emacs Lisp source file. The file must conform to the Emacs Lisp library header conventions (see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/elisp/Library-Headers.html#Library-Headers&quot;&gt;Library Headers&lt;/a&gt;). The package&amp;rsquo;s attributes are taken from the various headers, as illustrated by the following example:</source>
          <target state="translated">Un paquete simple consta de un solo archivo fuente Emacs Lisp. El archivo debe cumplir con las convenciones de encabezado de la biblioteca Emacs Lisp (consulte &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/elisp/Library-Headers.html#Library-Headers&quot;&gt;Encabezados de la biblioteca&lt;/a&gt; ). Los atributos del paquete se toman de los distintos encabezados, como se ilustra en el siguiente ejemplo:</target>
        </trans-unit>
        <trans-unit id="520a895cdaf962be2ce3af051f139699eaa002ef" translate="yes" xml:space="preserve">
          <source>A simple way to find out which variables need a variable definition is to byte-compile the source file. See &lt;a href=&quot;byte-compilation#Byte-Compilation&quot;&gt;Byte Compilation&lt;/a&gt;. If a non-special variable is used outside of a &lt;code&gt;let&lt;/code&gt; form, the byte-compiler will warn about reference or assignment to a free variable. If a non-special variable is bound but not used within a &lt;code&gt;let&lt;/code&gt; form, the byte-compiler will warn about an unused lexical variable. The byte-compiler will also issue a warning if you use a special variable as a function argument.</source>
          <target state="translated">Una forma sencilla de averiguar qu&amp;eacute; variables necesitan una definici&amp;oacute;n de variable es compilar en bytes el archivo fuente. Consulte &lt;a href=&quot;byte-compilation#Byte-Compilation&quot;&gt;Compilaci&amp;oacute;n de bytes&lt;/a&gt; . Si se usa una variable no especial fuera de una forma &lt;code&gt;let&lt;/code&gt; , el compilador de bytes advertir&amp;aacute; sobre la referencia o asignaci&amp;oacute;n a una variable libre. Si una variable no especial est&amp;aacute; vinculada pero no se usa dentro de una forma &lt;code&gt;let&lt;/code&gt; , el compilador de bytes advertir&amp;aacute; sobre una variable l&amp;eacute;xica no utilizada. El compilador de bytes tambi&amp;eacute;n emitir&amp;aacute; una advertencia si usa una variable especial como argumento de funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="6f39c8140232b676e89b57d7d761a068ed372a35" translate="yes" xml:space="preserve">
          <source>A single X server can handle more than one display. Each X display has a three-part name, &amp;lsquo;</source>
          <target state="translated">Un solo servidor X puede manejar m&amp;aacute;s de una pantalla. Cada pantalla X tiene un nombre de tres partes, '</target>
        </trans-unit>
        <trans-unit id="32d2586e3a5876244258502d69a6f8d0bd5a0545" translate="yes" xml:space="preserve">
          <source>A single dashed line in the menu&amp;rsquo;s foreground color.</source>
          <target state="translated">Una sola l&amp;iacute;nea discontinua en el color de primer plano del men&amp;uacute;.</target>
        </trans-unit>
        <trans-unit id="0c3c5559359b2d5a679708aa8a74ccf3b71a8107" translate="yes" xml:space="preserve">
          <source>A single dashed line with a 3D raised appearance.</source>
          <target state="translated">Una sola línea de puntos con un aspecto elevado en 3D.</target>
        </trans-unit>
        <trans-unit id="17212cacb20906b6c24890be72d573523178f23c" translate="yes" xml:space="preserve">
          <source>A single dashed line with a 3D sunken appearance.</source>
          <target state="translated">Una sola línea de puntos con un aspecto hundido en 3D.</target>
        </trans-unit>
        <trans-unit id="82b9849c085f11ad9ba2a7d45a6524fef0303bac" translate="yes" xml:space="preserve">
          <source>A single evaluated expression, which is instrumented. If your macro wraps the expression with &lt;code&gt;lambda&lt;/code&gt; before it is evaluated, use &lt;code&gt;def-form&lt;/code&gt; instead. See &lt;code&gt;def-form&lt;/code&gt; below.</source>
          <target state="translated">Una &amp;uacute;nica expresi&amp;oacute;n evaluada, que est&amp;aacute; instrumentada. Si su macro envuelve la expresi&amp;oacute;n con &lt;code&gt;lambda&lt;/code&gt; antes de que sea evaluada, use &lt;code&gt;def-form&lt;/code&gt; en su lugar. Consulte &lt;code&gt;def-form&lt;/code&gt; continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="c513f75e3380a33dab37bc8aac024b117ef8a454" translate="yes" xml:space="preserve">
          <source>A single keymap directly specifies definitions for individual events. When a key sequence consists of a single event, its binding in a keymap is the keymap&amp;rsquo;s definition for that event. The binding of a longer key sequence is found by an iterative process: first find the definition of the first event (which must itself be a keymap); then find the second event&amp;rsquo;s definition in that keymap, and so on until all the events in the key sequence have been processed.</source>
          <target state="translated">Un &amp;uacute;nico mapa de teclas especifica directamente las definiciones para eventos individuales. Cuando una secuencia de teclas consta de un solo evento, su enlace en un mapa de teclas es la definici&amp;oacute;n del mapa de teclas para ese evento. La uni&amp;oacute;n de una secuencia de teclas m&amp;aacute;s larga se encuentra mediante un proceso iterativo: primero busque la definici&amp;oacute;n del primer evento (que debe ser en s&amp;iacute; mismo un mapa de teclas); luego busque la definici&amp;oacute;n del segundo evento en ese mapa de teclas, y as&amp;iacute; sucesivamente hasta que se hayan procesado todos los eventos de la secuencia de teclas.</target>
        </trans-unit>
        <trans-unit id="68df86ba1c5862318582f32a099345601694b64c" translate="yes" xml:space="preserve">
          <source>A single line in the menu&amp;rsquo;s foreground color.</source>
          <target state="translated">Una sola l&amp;iacute;nea en el color de primer plano del men&amp;uacute;.</target>
        </trans-unit>
        <trans-unit id="3641adcfa90046311ac53168ff3f79632b8c65e5" translate="yes" xml:space="preserve">
          <source>A single line with a 3D raised appearance.</source>
          <target state="translated">Una sola línea con un aspecto elevado en 3D.</target>
        </trans-unit>
        <trans-unit id="23b2b0891d5f5c8e4e993fb83b1fecf8c9b84e7c" translate="yes" xml:space="preserve">
          <source>A single line with a 3D sunken appearance. This is the default, used separators consisting of dashes only.</source>
          <target state="translated">Una sola línea con un aspecto hundido en 3D.Este es el valor predeterminado,utiliza separadores que consisten sólo en guiones.</target>
        </trans-unit>
        <trans-unit id="1f59dc4152bf6a9fe4beadc9f38421d0b0d74e59" translate="yes" xml:space="preserve">
          <source>A single unevaluated Lisp object, which is not instrumented.</source>
          <target state="translated">Un solo objeto Lisp no evaluado,que no está instrumentado.</target>
        </trans-unit>
        <trans-unit id="9bf5016aa282317531cb06fa6fb9bc5beb69e9c5" translate="yes" xml:space="preserve">
          <source>A small number of additional symbols are made read-only for various practical reasons. These include &lt;code&gt;enable-multibyte-characters&lt;/code&gt;, &lt;code&gt;most-positive-fixnum&lt;/code&gt;, &lt;code&gt;most-negative-fixnum&lt;/code&gt;, and a few others. Any attempt to set or bind these also signals a &lt;code&gt;setting-constant&lt;/code&gt; error.</source>
          <target state="translated">Una peque&amp;ntilde;a cantidad de s&amp;iacute;mbolos adicionales se hacen de solo lectura por varias razones pr&amp;aacute;cticas. Estos incluyen &lt;code&gt;enable-multibyte-characters&lt;/code&gt; , &lt;code&gt;most-positive-fixnum&lt;/code&gt; , &lt;code&gt;most-negative-fixnum&lt;/code&gt; y algunos otros. Cualquier intento de establecer o vincular estos tambi&amp;eacute;n indica un error de &lt;code&gt;setting-constant&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7f66127e9377d487c9f73a0fe060d40fd147df4f" translate="yes" xml:space="preserve">
          <source>A source-level Emacs Lisp debugger.</source>
          <target state="translated">Un depurador Emacs Lisp a nivel de fuente.</target>
        </trans-unit>
        <trans-unit id="eb28b2c1df892613561beddc4f55a0e071830859" translate="yes" xml:space="preserve">
          <source>A sparse keymap for keys that follows the</source>
          <target state="translated">Un mapa de teclas dispersas para las teclas que sigue el</target>
        </trans-unit>
        <trans-unit id="a9aac0b1d7a10812c3d23d1c071d53d1c3d93f10" translate="yes" xml:space="preserve">
          <source>A sparse keymap for subcommands of the prefix</source>
          <target state="translated">Un mapa de teclas escasas para los subcomandos del prefijo</target>
        </trans-unit>
        <trans-unit id="40c40f01737627b7bbebfaa0fb152cd44949cc13" translate="yes" xml:space="preserve">
          <source>A sparse keymap for the keys following the help character</source>
          <target state="translated">Un mapa de teclas dispersas para las teclas que siguen al personaje de ayuda</target>
        </trans-unit>
        <trans-unit id="fa46b728661fa6d918bb2c7cb51670008d478213" translate="yes" xml:space="preserve">
          <source>A sparse keymap that provides global bindings for search-related commands.</source>
          <target state="translated">Un mapa de teclas dispersas que proporciona enlaces globales para los comandos relacionados con la búsqueda.</target>
        </trans-unit>
        <trans-unit id="3a21eefa10a38bebd685a041bc883db13a690f78" translate="yes" xml:space="preserve">
          <source>A sparse keymap used by buttons.</source>
          <target state="translated">Un mapa de teclas escasas usado por los botones.</target>
        </trans-unit>
        <trans-unit id="7a6d924c29a314704225148c6f1e8e4dd9598ef6" translate="yes" xml:space="preserve">
          <source>A sparse keymap used for responses in &lt;code&gt;query-replace&lt;/code&gt; and related commands; also for &lt;code&gt;y-or-n-p&lt;/code&gt; and &lt;code&gt;map-y-or-n-p&lt;/code&gt;. The functions that use this map do not support prefix keys; they look up one event at a time. &lt;code&gt;multi-query-replace-map&lt;/code&gt; extends &lt;code&gt;query-replace-map&lt;/code&gt; for multi-buffer replacements. See &lt;a href=&quot;search-and-replace#Search-and-Replace&quot;&gt;query-replace-map&lt;/a&gt;.</source>
          <target state="translated">Un mapa de teclas disperso utilizado para respuestas en comandos de &lt;code&gt;query-replace&lt;/code&gt; y relacionados; tambi&amp;eacute;n para &lt;code&gt;y-or-n-p&lt;/code&gt; y &lt;code&gt;map-y-or-n-p&lt;/code&gt; . Las funciones que utilizan este mapa no admiten teclas de prefijo; buscan un evento a la vez. &lt;code&gt;multi-query-replace-map&lt;/code&gt; extiende &lt;code&gt;query-replace-map&lt;/code&gt; para reemplazos de m&amp;uacute;ltiples b&amp;uacute;feres. Ver &lt;a href=&quot;search-and-replace#Search-and-Replace&quot;&gt;query-replace-map&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2273ae4dbb377e2aa911010dd8b2da0b64c40b7c" translate="yes" xml:space="preserve">
          <source>A sparse keymap used for the</source>
          <target state="translated">Un escaso mapa de teclas utilizado para la</target>
        </trans-unit>
        <trans-unit id="7144fe372d5198217578856f61ea2cf40f8209ff" translate="yes" xml:space="preserve">
          <source>A sparse keymap used to map certain keys under graphical frames. The function &lt;code&gt;x-setup-function-keys&lt;/code&gt; uses this.</source>
          <target state="translated">Un mapa de teclas disperso que se utiliza para mapear ciertas teclas bajo marcos gr&amp;aacute;ficos. La funci&amp;oacute;n &lt;code&gt;x-setup-function-keys&lt;/code&gt; usa esto.</target>
        </trans-unit>
        <trans-unit id="88e891a88be3fe4e62330f9bb2210843e83520a9" translate="yes" xml:space="preserve">
          <source>A sparse keymap used while processing</source>
          <target state="translated">Un mapa de teclas escasas utilizado mientras se procesa</target>
        </trans-unit>
        <trans-unit id="765649c4f2ad56ec8ad2f598cca04c9ff7b7da2a" translate="yes" xml:space="preserve">
          <source>A sparse keymap useful for buffers containing buffers. You may want to use this as a parent keymap. See &lt;a href=&quot;buttons#Buttons&quot;&gt;Buttons&lt;/a&gt;.</source>
          <target state="translated">Un mapa de teclas disperso &amp;uacute;til para b&amp;uacute;feres que contienen b&amp;uacute;feres. Es posible que desee utilizar esto como mapa de teclas principal. Ver &lt;a href=&quot;buttons#Buttons&quot;&gt;botones&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5f4ac56519c11e0fe0577b1cad8ce3bbe4207fc9" translate="yes" xml:space="preserve">
          <source>A special feature allows you to specify expressions to evaluate if and when a file is loaded (see &lt;a href=&quot;hooks-for-loading#Hooks-for-Loading&quot;&gt;Hooks for Loading&lt;/a&gt;). That feature is not exactly a hook, but does a similar job.</source>
          <target state="translated">Una caracter&amp;iacute;stica especial le permite especificar expresiones para evaluar si se carga un archivo y cu&amp;aacute;ndo (consulte &lt;a href=&quot;hooks-for-loading#Hooks-for-Loading&quot;&gt;Ganchos para cargar&lt;/a&gt; ). Esa caracter&amp;iacute;stica no es exactamente un gancho, pero hace un trabajo similar.</target>
        </trans-unit>
        <trans-unit id="5be02abf64fa9f6d03c8545ca5b0ef5253cf8321" translate="yes" xml:space="preserve">
          <source>A special kind of key binding can be used to &lt;em&gt;remap&lt;/em&gt; one command to another, without having to refer to the key sequence(s) bound to the original command. To use this feature, make a key binding for a key sequence that starts with the dummy event &lt;code&gt;remap&lt;/code&gt;, followed by the command name you want to remap; for the binding, specify the new definition (usually a command name, but possibly any other valid definition for a key binding).</source>
          <target state="translated">Se puede utilizar un tipo especial de vinculaci&amp;oacute;n de teclas para &lt;em&gt;reasignar&lt;/em&gt; un comando a otro, sin tener que hacer referencia a las secuencias de teclas vinculadas al comando original. Para utilizar esta funci&amp;oacute;n, cree un enlace de teclas para una secuencia de teclas que comience con la &lt;code&gt;remap&lt;/code&gt; eventos ficticios , seguida del nombre del comando que desea reasignar; para el enlace, especifique la nueva definici&amp;oacute;n (normalmente un nombre de comando, pero posiblemente cualquier otra definici&amp;oacute;n v&amp;aacute;lida para un enlace de clave).</target>
        </trans-unit>
        <trans-unit id="b3b13190b49396edf46334298af39e2a2e3045a9" translate="yes" xml:space="preserve">
          <source>A specially constructed list.</source>
          <target state="translated">Una lista especialmente construida.</target>
        </trans-unit>
        <trans-unit id="cdeb8b40b772b9f3c7e2c98e3c8b8dec4698471b" translate="yes" xml:space="preserve">
          <source>A specification can have a &lt;em&gt;width&lt;/em&gt;, which is a decimal number that appears after any field number and flags. If the printed representation of the object contains fewer characters than this width, &lt;code&gt;format&lt;/code&gt; extends it with padding. Any padding introduced by the width normally consists of spaces inserted on the left:</source>
          <target state="translated">Una especificaci&amp;oacute;n puede tener un &lt;em&gt;ancho&lt;/em&gt; , que es un n&amp;uacute;mero decimal que aparece despu&amp;eacute;s de cualquier n&amp;uacute;mero de campo y banderas. Si la representaci&amp;oacute;n impresa del objeto contiene menos caracteres que este ancho, el &lt;code&gt;format&lt;/code&gt; o la ampl&amp;iacute;a con relleno. Cualquier relleno introducido por el ancho normalmente consta de espacios insertados a la izquierda:</target>
        </trans-unit>
        <trans-unit id="fffe787c50a5092035410b47c5d5ac737f027fa9" translate="yes" xml:space="preserve">
          <source>A specification list may contain sublists, which match arguments that are themselves lists, or it may contain vectors used for grouping. Sublists and groups thus subdivide the specification list into a hierarchy of levels. Specification keywords apply only to the remainder of the sublist or group they are contained in.</source>
          <target state="translated">Una lista de especificaciones puede contener sublistas,que coinciden con argumentos que son en sí mismos listas,o puede contener vectores utilizados para la agrupación.Así pues,las sublistas y los grupos subdividen la lista de especificaciones en una jerarquía de niveles.Las palabras clave de especificación se aplican únicamente al resto de la sublista o grupo en que están contenidas.</target>
        </trans-unit>
        <trans-unit id="9468aabf9aff18dfe4927c4df0cf6ef94a873fcf" translate="yes" xml:space="preserve">
          <source>A string as a mode line construct appears verbatim except for &lt;em&gt;&lt;code&gt;%&lt;/code&gt;-constructs&lt;/em&gt; in it. These stand for substitution of other data; see &lt;a href=&quot;_0025_002dconstructs#g_t_0025_002dConstructs&quot;&gt;%-Constructs&lt;/a&gt;.</source>
          <target state="translated">Una cadena como una construcci&amp;oacute;n de l&amp;iacute;nea de modo aparece literalmente excepto por &lt;em&gt; &lt;code&gt;%&lt;/code&gt; -constructs&lt;/em&gt; en ella. Estos representan la sustituci&amp;oacute;n de otros datos; ver &lt;a href=&quot;_0025_002dconstructs#g_t_0025_002dConstructs&quot;&gt;% -Constructs&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2532fec68eb63f66911855847dedf967f8f81556" translate="yes" xml:space="preserve">
          <source>A string as input will be used directly. It may be modified by the function (unlike most other Emacs Lisp functions) to reduce the chance of exposing sensitive data after the function does its work.</source>
          <target state="translated">Una cadena como entrada se usará directamente.Puede ser modificada por la función (a diferencia de la mayoría de las otras funciones de Emacs Lisp)para reducir la posibilidad de exponer datos sensibles después de que la función haga su trabajo.</target>
        </trans-unit>
        <trans-unit id="a8bebc2f246c21ea650e3cb3ac8fe99ed1f62459" translate="yes" xml:space="preserve">
          <source>A string can hold properties for the characters it contains, in addition to the characters themselves. This enables programs that copy text between strings and buffers to copy the text&amp;rsquo;s properties with no special effort. See &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Text Properties&lt;/a&gt;, for an explanation of what text properties mean. Strings with text properties use a special read and print syntax:</source>
          <target state="translated">Una cadena puede contener propiedades para los caracteres que contiene, adem&amp;aacute;s de los propios caracteres. Esto permite a los programas que copian texto entre cadenas y b&amp;uacute;feres copiar las propiedades del texto sin ning&amp;uacute;n esfuerzo especial. Consulte &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Propiedades del texto&lt;/a&gt; para obtener una explicaci&amp;oacute;n del significado de las propiedades del texto. Las cadenas con propiedades de texto utilizan una sintaxis especial de lectura e impresi&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="dfef331cf99173b597cb3a4f9ebbdb7c1f294c0a" translate="yes" xml:space="preserve">
          <source>A string containing the same byte sequence as an XBM file would contain. You must not specify &lt;code&gt;:height&lt;/code&gt; and &lt;code&gt;:width&lt;/code&gt; in this case, because omitting them is what indicates the data has the format of an XBM file. The file contents specify the height and width of the image.</source>
          <target state="translated">Una cadena que contiene la misma secuencia de bytes que contiene un archivo XBM. No debes especificar &lt;code&gt;:height&lt;/code&gt; y &lt;code&gt;:width&lt;/code&gt; en este caso, porque omitirlos es lo que indica que los datos tienen el formato de un archivo XBM. El contenido del archivo especifica la altura y el ancho de la imagen.</target>
        </trans-unit>
        <trans-unit id="b80138eb0e7d2ee11a5334072539786172a5e2bd" translate="yes" xml:space="preserve">
          <source>A string displayed by the Emacs tooltip help system; by default, &lt;code&gt;&quot;mouse-2, RET: Push this button&quot;&lt;/code&gt;. Alternatively, a function that returns, or a form that evaluates to, a string to be displayed or &lt;code&gt;nil&lt;/code&gt;. For details see &lt;a href=&quot;special-properties#Text-help_002decho&quot;&gt;Text help-echo&lt;/a&gt;.</source>
          <target state="translated">Una cadena mostrada por el sistema de ayuda de informaci&amp;oacute;n sobre herramientas de Emacs; por defecto, &lt;code&gt;&quot;mouse-2, RET: Push this button&quot;&lt;/code&gt; . Alternativamente, una funci&amp;oacute;n que devuelve, o un formulario que se eval&amp;uacute;a como, una cadena que se mostrar&amp;aacute; o &lt;code&gt;nil&lt;/code&gt; . Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte &lt;a href=&quot;special-properties#Text-help_002decho&quot;&gt;Texto de ayuda-eco&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7e28e179ae46e636da2eca587a2ddde99c5d0cd9" translate="yes" xml:space="preserve">
          <source>A string in Emacs Lisp is an array that contains an ordered sequence of characters. Strings are used as names of symbols, buffers, and files; to send messages to users; to hold text being copied between buffers; and for many other purposes. Because strings are so important, Emacs Lisp has many functions expressly for manipulating them. Emacs Lisp programs use strings more often than individual characters.</source>
          <target state="translated">Una cadena en Emacs Lisp es una matriz que contiene una secuencia ordenada de caracteres.Las cadenas se utilizan como nombres de símbolos,memorias intermedias y archivos;para enviar mensajes a los usuarios;para retener el texto que se está copiando entre las memorias intermedias;y para muchos otros fines.Debido a la importancia de las cadenas,Emacs Lisp tiene muchas funciones expresamente para manipularlas.Los programas de Emacs Lisp utilizan cadenas más a menudo que caracteres individuales.</target>
        </trans-unit>
        <trans-unit id="97d89176884a6777ab0a93f14e9b3cf203593d01" translate="yes" xml:space="preserve">
          <source>A string is a fixed sequence of characters. It is a type of sequence called a &lt;em&gt;array&lt;/em&gt;, meaning that its length is fixed and cannot be altered once it is created (see &lt;a href=&quot;sequences-arrays-vectors#Sequences-Arrays-Vectors&quot;&gt;Sequences Arrays Vectors&lt;/a&gt;). Unlike in C, Emacs Lisp strings are &lt;em&gt;not&lt;/em&gt; terminated by a distinguished character code.</source>
          <target state="translated">Una cadena es una secuencia fija de caracteres. Es un tipo de secuencia llamada &lt;em&gt;matriz&lt;/em&gt; , lo que significa que su longitud es fija y no se puede alterar una vez creada (ver &lt;a href=&quot;sequences-arrays-vectors#Sequences-Arrays-Vectors&quot;&gt;Secuencias de matrices Vectores&lt;/a&gt; ). A diferencia de C, las cadenas de Emacs Lisp &lt;em&gt;no&lt;/em&gt; terminan con un c&amp;oacute;digo de car&amp;aacute;cter distinguido.</target>
        </trans-unit>
        <trans-unit id="fe9aa772c2d97bd3d2707cc2379051eb1e145422" translate="yes" xml:space="preserve">
          <source>A string is an array of characters and a vector is an array of arbitrary objects. A bool-vector can hold only &lt;code&gt;t&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt;. These kinds of array may have any length up to the largest fixnum, subject to system architecture limits and available memory. Char-tables are sparse arrays indexed by any valid character code; they can hold arbitrary objects.</source>
          <target state="translated">Una cadena es una matriz de caracteres y un vector es una matriz de objetos arbitrarios. Un vector bool solo puede contener &lt;code&gt;t&lt;/code&gt; o &lt;code&gt;nil&lt;/code&gt; . Estos tipos de arreglos pueden tener cualquier longitud hasta el n&amp;uacute;mero fijo m&amp;aacute;s grande, sujeto a los l&amp;iacute;mites de la arquitectura del sistema y la memoria disponible. Las tablas de caracteres son matrices dispersas indexadas por cualquier c&amp;oacute;digo de car&amp;aacute;cter v&amp;aacute;lido; pueden contener objetos arbitrarios.</target>
        </trans-unit>
        <trans-unit id="2441898090949c6885e0d3b806fb9b48c4944a10" translate="yes" xml:space="preserve">
          <source>A string is text saved in the register.</source>
          <target state="translated">Una cadena es un texto guardado en el registro.</target>
        </trans-unit>
        <trans-unit id="49f6b3f288e48e7a1e61f7ccbc7a20aa90fb1620" translate="yes" xml:space="preserve">
          <source>A string or a bool-vector containing the bits of the image (plus perhaps some extra bits at the end that will not be used). It should contain at least &lt;code&gt;&lt;var&gt;stride&lt;/var&gt;&amp;nbsp;*&amp;nbsp;&lt;var&gt;height&lt;/var&gt;&lt;/code&gt; bits, where &lt;var&gt;stride&lt;/var&gt; is the smallest multiple of 8 greater than or equal to the width of the image. In this case, you should specify &lt;code&gt;:height&lt;/code&gt;, &lt;code&gt;:width&lt;/code&gt; and &lt;code&gt;:stride&lt;/code&gt;, both to indicate that the string contains just the bits rather than a whole XBM file, and to specify the size of the image.</source>
          <target state="translated">Una cadena o un vector bool que contiene los bits de la imagen (m&amp;aacute;s quiz&amp;aacute;s algunos bits adicionales al final que no se utilizar&amp;aacute;n). Debe contener al menos bits de &lt;code&gt;&lt;var&gt;stride&lt;/var&gt;&amp;nbsp;*&amp;nbsp;&lt;var&gt;height&lt;/var&gt;&lt;/code&gt; , donde &lt;var&gt;stride&lt;/var&gt; es el m&amp;uacute;ltiplo m&amp;aacute;s peque&amp;ntilde;o de 8 mayor o igual que el ancho de la imagen. En este caso, se debe especificar &lt;code&gt;:height&lt;/code&gt; , &lt;code&gt;:width&lt;/code&gt; y &lt;code&gt;:stride&lt;/code&gt; , tanto para indicar que la cadena contiene s&amp;oacute;lo los bits en lugar de un archivo XBM conjunto, y para especificar el tama&amp;ntilde;o de la imagen.</target>
        </trans-unit>
        <trans-unit id="036a59e22e9f954ee65be3ccd2c0ddd139f906a5" translate="yes" xml:space="preserve">
          <source>A string or vector as &lt;var&gt;command&lt;/var&gt; is executed with &lt;code&gt;execute-kbd-macro&lt;/code&gt;. A function is passed to &lt;code&gt;call-interactively&lt;/code&gt; (see above), along with the &lt;var&gt;record-flag&lt;/var&gt; and &lt;var&gt;keys&lt;/var&gt; arguments.</source>
          <target state="translated">Una cadena o vector como &lt;var&gt;command&lt;/var&gt; se ejecuta con &lt;code&gt;execute-kbd-macro&lt;/code&gt; . Se pasa una funci&amp;oacute;n para &lt;code&gt;call-interactively&lt;/code&gt; (ver arriba), junto con los argumentos &lt;var&gt;record-flag&lt;/var&gt; y &lt;var&gt;keys&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="fb505d9a7d4b3f1a25ce86b9d3dae98375c606b2" translate="yes" xml:space="preserve">
          <source>A string starting with two or more dashes specifies a separator line; see &lt;a href=&quot;menu-separators#Menu-Separators&quot;&gt;Menu Separators&lt;/a&gt;.</source>
          <target state="translated">Una cadena que comienza con dos o m&amp;aacute;s guiones especifica una l&amp;iacute;nea de separaci&amp;oacute;n; consulte &lt;a href=&quot;menu-separators#Menu-Separators&quot;&gt;Separadores de men&amp;uacute;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="45afeec22e5b1392a38afb3af0c622aa891ec190" translate="yes" xml:space="preserve">
          <source>A string that gives the repository branch from which Emacs was built. In the most cases this is &lt;code&gt;&quot;master&quot;&lt;/code&gt;. If Emacs was built outside revision control, the value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Una cadena que da la rama del repositorio a partir de la cual se construy&amp;oacute; Emacs. En la mayor&amp;iacute;a de los casos, esto es &lt;code&gt;&quot;master&quot;&lt;/code&gt; . Si Emacs se cre&amp;oacute; fuera del control de revisi&amp;oacute;n, el valor es &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a176c29cb00e1ce1efdc8fd4de377dd60ec1aa7c" translate="yes" xml:space="preserve">
          <source>A string that gives the repository revision from which Emacs was built. If Emacs was built outside revision control, the value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Una cadena que da la revisi&amp;oacute;n del repositorio a partir de la cual se construy&amp;oacute; Emacs. Si Emacs se cre&amp;oacute; fuera del control de revisi&amp;oacute;n, el valor es &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="32c2c310a05a2e4299069228d4059ebe12c87d4e" translate="yes" xml:space="preserve">
          <source>A string that is the name of the process&amp;rsquo;s controlling terminal. On Unix and GNU systems, this is normally the file name of the corresponding terminal device, such as</source>
          <target state="translated">Una cadena que es el nombre de la terminal de control del proceso. En sistemas Unix y GNU, este es normalmente el nombre de archivo del dispositivo terminal correspondiente, como</target>
        </trans-unit>
        <trans-unit id="a07b76952ae2e1b9491a1beda81ccc1a2fb843d7" translate="yes" xml:space="preserve">
          <source>A structure describing where the cursor is in this window.</source>
          <target state="translated">Una estructura que describe dónde está el cursor en esta ventana.</target>
        </trans-unit>
        <trans-unit id="20ca76b446ea261daca0ab9858048669216bed62" translate="yes" xml:space="preserve">
          <source>A structure describing where the cursor of this window physically is.</source>
          <target state="translated">Una estructura que describe dónde está físicamente el cursor de esta ventana.</target>
        </trans-unit>
        <trans-unit id="283fbe00ae8cce4ea280dfbb7b15b846c6c4c692" translate="yes" xml:space="preserve">
          <source>A sublist specification may be a dotted list and the corresponding list argument may then be a dotted list. Alternatively, the last &lt;small&gt;CDR&lt;/small&gt; of a dotted list specification may be another sublist specification (via a grouping or an indirect specification, e.g., &lt;code&gt;(spec .  [(more
specs&amp;hellip;)])&lt;/code&gt;) whose elements match the non-dotted list arguments. This is useful in recursive specifications such as in the backquote example. Also see the description of a &lt;code&gt;nil&lt;/code&gt; specification above for terminating such recursion.</source>
          <target state="translated">Una especificaci&amp;oacute;n de sublista puede ser una lista de puntos y el argumento de lista correspondiente puede ser una lista de puntos. Alternativamente, el &amp;uacute;ltimo &lt;small&gt;CDR&lt;/small&gt; de una especificaci&amp;oacute;n de lista punteada puede ser otra especificaci&amp;oacute;n de sublista (a trav&amp;eacute;s de una agrupaci&amp;oacute;n o una especificaci&amp;oacute;n indirecta, por ejemplo, &lt;code&gt;(spec . [(more specs&amp;hellip;)])&lt;/code&gt; ) cuyos elementos coinciden con los argumentos de la lista sin puntos. Esto es &amp;uacute;til en especificaciones recursivas como en el ejemplo de comillas inversas. Consulte tambi&amp;eacute;n la descripci&amp;oacute;n de una especificaci&amp;oacute;n &lt;code&gt;nil&lt;/code&gt; anterior para terminar dicha recursividad.</target>
        </trans-unit>
        <trans-unit id="e6bd63f0d6eed94cca2c1d7fa955eac6382d7a76" translate="yes" xml:space="preserve">
          <source>A subprocess of Emacs may be &lt;em&gt;synchronous&lt;/em&gt; or &lt;em&gt;asynchronous&lt;/em&gt;, depending on how it is created. When you create a synchronous subprocess, the Lisp program waits for the subprocess to terminate before continuing execution. When you create an asynchronous subprocess, it can run in parallel with the Lisp program. This kind of subprocess is represented within Emacs by a Lisp object which is also called a &amp;ldquo;process&amp;rdquo;. Lisp programs can use this object to communicate with the subprocess or to control it. For example, you can send signals, obtain status information, receive output from the process, or send input to it.</source>
          <target state="translated">Un subproceso de Emacs puede ser &lt;em&gt;sincr&amp;oacute;nico&lt;/em&gt; o &lt;em&gt;asincr&amp;oacute;nico&lt;/em&gt; , dependiendo de c&amp;oacute;mo se cree. Cuando crea un subproceso s&amp;iacute;ncrono, el programa Lisp espera a que el subproceso termine antes de continuar con la ejecuci&amp;oacute;n. Cuando crea un subproceso asincr&amp;oacute;nico, puede ejecutarse en paralelo con el programa Lisp. Este tipo de subproceso est&amp;aacute; representado dentro de Emacs por un objeto Lisp que tambi&amp;eacute;n se llama &quot;proceso&quot;. Los programas Lisp pueden usar este objeto para comunicarse con el subproceso o para controlarlo. Por ejemplo, puede enviar se&amp;ntilde;ales, obtener informaci&amp;oacute;n de estado, recibir la salida del proceso o enviarle una entrada.</target>
        </trans-unit>
        <trans-unit id="087de830e58dec95d6c61960121c78d539705185" translate="yes" xml:space="preserve">
          <source>A subprocess of Emacs running on the underlying OS.</source>
          <target state="translated">Un subproceso de Emacs ejecutándose en el sistema operativo subyacente.</target>
        </trans-unit>
        <trans-unit id="35507e345942623bfb6aa6be63bdded05b6c5918" translate="yes" xml:space="preserve">
          <source>A suitable kind of &lt;code&gt;file-error&lt;/code&gt; error is signaled if the file does not exist, or is not deletable. (On GNU and other POSIX-like systems, a file is deletable if its directory is writable.)</source>
          <target state="translated">Se indica un tipo adecuado de &lt;code&gt;file-error&lt;/code&gt; error de archivo si el archivo no existe o no se puede eliminar. (En GNU y otros sistemas similares a POSIX, un archivo se puede eliminar si se puede escribir en su directorio).</target>
        </trans-unit>
        <trans-unit id="58e5791b58ed962f6049e196b317aabc08f3c119" translate="yes" xml:space="preserve">
          <source>A symbol as a mode line construct stands for its value. The value of &lt;var&gt;symbol&lt;/var&gt; is used as a mode line construct, in place of &lt;var&gt;symbol&lt;/var&gt;. However, the symbols &lt;code&gt;t&lt;/code&gt; and &lt;code&gt;nil&lt;/code&gt; are ignored, as is any symbol whose value is void.</source>
          <target state="translated">Un s&amp;iacute;mbolo como construcci&amp;oacute;n de l&amp;iacute;nea de modo representa su valor. El valor de &lt;var&gt;symbol&lt;/var&gt; se utiliza como una construcci&amp;oacute;n de l&amp;iacute;nea de modo, en lugar de &lt;var&gt;symbol&lt;/var&gt; . Sin embargo, los s&amp;iacute;mbolos &lt;code&gt;t&lt;/code&gt; y &lt;code&gt;nil&lt;/code&gt; son ignorados, como es cualquier s&amp;iacute;mbolo cuyo valor es nulo.</target>
        </trans-unit>
        <trans-unit id="136dfe6f1f6290980b0a544df03bc8031bada37f" translate="yes" xml:space="preserve">
          <source>A symbol as input stream is equivalent to the symbol&amp;rsquo;s function definition (if any).</source>
          <target state="translated">Un s&amp;iacute;mbolo como flujo de entrada es equivalente a la definici&amp;oacute;n de funci&amp;oacute;n del s&amp;iacute;mbolo (si corresponde).</target>
        </trans-unit>
        <trans-unit id="11075144c8ce3c1e072d1e5adaac43cdc6ed22f8" translate="yes" xml:space="preserve">
          <source>A symbol as output stream is equivalent to the symbol&amp;rsquo;s function definition (if any).</source>
          <target state="translated">Un s&amp;iacute;mbolo como flujo de salida es equivalente a la definici&amp;oacute;n de funci&amp;oacute;n del s&amp;iacute;mbolo (si corresponde).</target>
        </trans-unit>
        <trans-unit id="bce876b9cd2acba081d2ad07d0fc80b3afe79b3c" translate="yes" xml:space="preserve">
          <source>A symbol can serve as a variable, as a function name, or to hold a property list. Or it may serve only to be distinct from all other Lisp objects, so that its presence in a data structure may be recognized reliably. In a given context, usually only one of these uses is intended. But you can use one symbol in all of these ways, independently.</source>
          <target state="translated">Un símbolo puede servir como una variable,como un nombre de función o para mantener una lista de propiedades.O puede servir sólo para diferenciarse de todos los demás objetos de Lisp,de modo que su presencia en una estructura de datos pueda reconocerse de manera fiable.En un contexto determinado,normalmente sólo se pretende uno de estos usos.Pero se puede utilizar un símbolo de todas estas formas,independientemente.</target>
        </trans-unit>
        <trans-unit id="1b40c765dfb974c4520f948565e6ea3abebbf26c" translate="yes" xml:space="preserve">
          <source>A symbol can serve as the name of a function.</source>
          <target state="translated">Un símbolo puede servir como el nombre de una función.</target>
        </trans-unit>
        <trans-unit id="2522095758f15f287bcb68febcef4a1aef3c93ca" translate="yes" xml:space="preserve">
          <source>A symbol can serve as the name of a function. This happens when the symbol&amp;rsquo;s &lt;em&gt;function cell&lt;/em&gt; (see &lt;a href=&quot;symbol-components#Symbol-Components&quot;&gt;Symbol Components&lt;/a&gt;) contains a function object (e.g., a lambda expression). Then the symbol itself becomes a valid, callable function, equivalent to the function object in its function cell.</source>
          <target state="translated">Un s&amp;iacute;mbolo puede servir como nombre de una funci&amp;oacute;n. Esto sucede cuando la &lt;em&gt;celda de funci&amp;oacute;n&lt;/em&gt; del s&amp;iacute;mbolo (consulte &lt;a href=&quot;symbol-components#Symbol-Components&quot;&gt;Componentes de s&amp;iacute;mbolo&lt;/a&gt; ) contiene un objeto de funci&amp;oacute;n (por ejemplo, una expresi&amp;oacute;n lambda). Entonces el s&amp;iacute;mbolo en s&amp;iacute; mismo se convierte en una funci&amp;oacute;n v&amp;aacute;lida, invocable, equivalente al objeto de funci&amp;oacute;n en su celda de funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="dc66ecbc9c4221d50048e15206869a3b042473a6" translate="yes" xml:space="preserve">
          <source>A symbol is a function to compute the height. It is called with the current height as argument, and should return the new height to use.</source>
          <target state="translated">Un símbolo es una función para calcular la altura.Se llama con la altura actual como argumento,y debería devolver la nueva altura para usarla.</target>
        </trans-unit>
        <trans-unit id="1735c25eacfa5dbfa81d50d3791a7b3948064021" translate="yes" xml:space="preserve">
          <source>A symbol may possess any number of &lt;em&gt;symbol properties&lt;/em&gt;, which can be used to record miscellaneous information about the symbol. For example, when a symbol has a &lt;code&gt;risky-local-variable&lt;/code&gt; property with a non-&lt;code&gt;nil&lt;/code&gt; value, that means the variable which the symbol names is a risky file-local variable (see &lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;File Local Variables&lt;/a&gt;).</source>
          <target state="translated">Un s&amp;iacute;mbolo puede poseer cualquier n&amp;uacute;mero de &lt;em&gt;propiedades&lt;/em&gt; de &lt;em&gt;s&amp;iacute;mbolo&lt;/em&gt; , que se pueden utilizar para registrar informaci&amp;oacute;n diversa sobre el s&amp;iacute;mbolo. Por ejemplo, cuando un s&amp;iacute;mbolo tiene una propiedad de &lt;code&gt;risky-local-variable&lt;/code&gt; con un valor no &lt;code&gt;nil&lt;/code&gt; , eso significa que la variable a la que el s&amp;iacute;mbolo nombra es una variable local de archivo de riesgo (consulte &lt;a href=&quot;file-local-variables#File-Local-Variables&quot;&gt;Variables locales de archivo&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="4af456786cdb930cf51a2fe8cb251937c0f92f76" translate="yes" xml:space="preserve">
          <source>A symbol name can contain any characters whatever. Most symbol names are written with letters, digits, and the punctuation characters &amp;lsquo;</source>
          <target state="translated">Un nombre de s&amp;iacute;mbolo puede contener cualquier car&amp;aacute;cter. La mayor&amp;iacute;a de los nombres de los s&amp;iacute;mbolos se escriben con letras, d&amp;iacute;gitos y los caracteres de puntuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="c152fe70962941670ef3592324bbdb47115752ec" translate="yes" xml:space="preserve">
          <source>A symbol whose name starts with a colon (&amp;lsquo;</source>
          <target state="translated">Un s&amp;iacute;mbolo cuyo nombre comienza con dos puntos ('</target>
        </trans-unit>
        <trans-unit id="3728c8c2eb3343e2a05d9141c3b791e811332750" translate="yes" xml:space="preserve">
          <source>A symbol. In other words, &lt;code&gt;(setf x y)&lt;/code&gt; is exactly equivalent to &lt;code&gt;(setq x y)&lt;/code&gt;, and &lt;code&gt;setq&lt;/code&gt; itself is strictly speaking redundant given that &lt;code&gt;setf&lt;/code&gt; exists. Most programmers will continue to prefer &lt;code&gt;setq&lt;/code&gt; for setting simple variables, though, for stylistic and historical reasons. The macro &lt;code&gt;(setf x y)&lt;/code&gt; actually expands to &lt;code&gt;(setq x y)&lt;/code&gt;, so there is no performance penalty for using it in compiled code.</source>
          <target state="translated">Un s&amp;iacute;mbolo. En otras palabras, &lt;code&gt;(setf x y)&lt;/code&gt; es exactamente equivalente a &lt;code&gt;(setq x y)&lt;/code&gt; , y &lt;code&gt;setq&lt;/code&gt; en s&amp;iacute; mismo es estrictamente hablando redundante dado que &lt;code&gt;setf&lt;/code&gt; existe. La mayor&amp;iacute;a de los programadores seguir&amp;aacute;n prefiriendo &lt;code&gt;setq&lt;/code&gt; para establecer variables simples, sin embargo, por razones estil&amp;iacute;sticas e hist&amp;oacute;ricas. La macro &lt;code&gt;(setf x y)&lt;/code&gt; realidad se expande a &lt;code&gt;(setq x y)&lt;/code&gt; , por lo que no hay ninguna penalizaci&amp;oacute;n de rendimiento por usarla en c&amp;oacute;digo compilado.</target>
        </trans-unit>
        <trans-unit id="1954d27d0637fd3ddd907ebc88c0499752335e55" translate="yes" xml:space="preserve">
          <source>A syntax table can &lt;em&gt;inherit&lt;/em&gt; from another syntax table, which is called its &lt;em&gt;parent syntax table&lt;/em&gt;. A syntax table can leave the syntax class of some characters unspecified, by giving them the &amp;ldquo;inherit&amp;rdquo; syntax class; such a character then acquires the syntax class specified by the parent syntax table (see &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Syntax Class Table&lt;/a&gt;). Emacs defines a &lt;em&gt;standard syntax table&lt;/em&gt;, which is the default parent syntax table, and is also the syntax table used by Fundamental mode.</source>
          <target state="translated">Una tabla de sintaxis puede &lt;em&gt;heredar&lt;/em&gt; de otra tabla de sintaxis, que se denomina &lt;em&gt;tabla de sintaxis principal&lt;/em&gt; . Una tabla de sintaxis puede dejar la clase de sintaxis de algunos caracteres sin especificar, d&amp;aacute;ndoles la clase de sintaxis &quot;heredada&quot;; tal car&amp;aacute;cter adquiere la clase de sintaxis especificada por la tabla de sintaxis principal (ver &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Tabla de clases de sintaxis&lt;/a&gt; ). Emacs define una &lt;em&gt;tabla de sintaxis est&amp;aacute;ndar&lt;/em&gt; , que es la tabla de sintaxis principal predeterminada, y tambi&amp;eacute;n es la tabla de sintaxis utilizada por el modo Fundamental.</target>
        </trans-unit>
        <trans-unit id="b659b2d3d03e0d7773e900b73de02d70d5ddcd88" translate="yes" xml:space="preserve">
          <source>A syntax table is a data structure which can be used to look up the &lt;em&gt;syntax class&lt;/em&gt; and other syntactic properties of each character. Syntax tables are used by Lisp programs for scanning and moving across text.</source>
          <target state="translated">Una tabla de sintaxis es una estructura de datos que se puede utilizar para buscar la &lt;em&gt;clase de sintaxis&lt;/em&gt; y otras propiedades sint&amp;aacute;cticas de cada car&amp;aacute;cter. Los programas Lisp utilizan tablas de sintaxis para escanear y desplazarse por el texto.</target>
        </trans-unit>
        <trans-unit id="611cab9bf171d524f8bb167ff2d975371afdf4c3" translate="yes" xml:space="preserve">
          <source>A terminal device displays frames.</source>
          <target state="translated">Un dispositivo terminal muestra marcos.</target>
        </trans-unit>
        <trans-unit id="154579a3c3d7f8dbf4dedff1e12b0784abbfebd3" translate="yes" xml:space="preserve">
          <source>A themable named sound from the freedesktop.org sound naming specification from &amp;lsquo;</source>
          <target state="translated">Un sonido con nombre tem&amp;aacute;tico de la especificaci&amp;oacute;n de nomenclatura de sonido de freedesktop.org de '</target>
        </trans-unit>
        <trans-unit id="26c5fb26d2d40b902e4464e332d9e274ac27ae65" translate="yes" xml:space="preserve">
          <source>A thread of Emacs Lisp execution.</source>
          <target state="translated">Un hilo de la ejecución de Emacs Lisp.</target>
        </trans-unit>
        <trans-unit id="57dfda42a48a44a57cc294b3f4f34e2af8232910" translate="yes" xml:space="preserve">
          <source>A token can be an &lt;code&gt;opener&lt;/code&gt; (something similar to an open-paren), a &lt;code&gt;closer&lt;/code&gt; (like a close-paren), or &lt;code&gt;neither&lt;/code&gt; of the two (e.g., an infix operator, or an inner token like &lt;code&gt;&quot;else&quot;&lt;/code&gt;).</source>
          <target state="translated">Una ficha puede ser un &lt;code&gt;opener&lt;/code&gt; (algo similar a un par abierto), un &lt;code&gt;closer&lt;/code&gt; (como un par cercano) o &lt;code&gt;neither&lt;/code&gt; de los dos (p. Ej., Un operador infijo o una ficha interna como &lt;code&gt;&quot;else&quot;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="0d764cf0b69eb00f7e2c9718e179e351b46213d5" translate="yes" xml:space="preserve">
          <source>A tool bar is a row of images.</source>
          <target state="translated">Una barra de herramientas es una fila de imágenes.</target>
        </trans-unit>
        <trans-unit id="b6e511e3067670e626e12e33340269d446fde317" translate="yes" xml:space="preserve">
          <source>A translation table has two extra slots. The first is either &lt;code&gt;nil&lt;/code&gt; or a translation table that performs the reverse translation; the second is the maximum number of characters to look up for translating sequences of characters (see the description of &lt;code&gt;make-translation-table-from-alist&lt;/code&gt; below).</source>
          <target state="translated">Una mesa de traducci&amp;oacute;n tiene dos espacios adicionales. La primera es &lt;code&gt;nil&lt;/code&gt; o una tabla de traducci&amp;oacute;n que realiza la traducci&amp;oacute;n inversa; el segundo es el n&amp;uacute;mero m&amp;aacute;ximo de caracteres que se deben buscar para traducir secuencias de caracteres (consulte la descripci&amp;oacute;n de &lt;code&gt;make-translation-table-from-alist&lt;/code&gt; a continuaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="fdc3d3499bd5bb07db44fa25b08d5a6a535373e6" translate="yes" xml:space="preserve">
          <source>A true mirror-image of &lt;code&gt;re-search-forward&lt;/code&gt; would require a special feature for matching regular expressions from end to beginning. It&amp;rsquo;s not worth the trouble of implementing that.</source>
          <target state="translated">Una verdadera imagen reflejada de la &lt;code&gt;re-search-forward&lt;/code&gt; adelante requerir&amp;iacute;a una caracter&amp;iacute;stica especial para hacer coincidir las expresiones regulares desde el principio hasta el final. No vale la pena implementar eso.</target>
        </trans-unit>
        <trans-unit id="d8e822f12fc2d0ada4fa0abd7fbe433aba2b4039" translate="yes" xml:space="preserve">
          <source>A type predicate function takes one argument; it returns &lt;code&gt;t&lt;/code&gt; if the argument belongs to the appropriate type, and &lt;code&gt;nil&lt;/code&gt; otherwise. Following a general Lisp convention for predicate functions, most type predicates&amp;rsquo; names end with &amp;lsquo;</source>
          <target state="translated">Una funci&amp;oacute;n de predicado de tipo toma un argumento; devuelve &lt;code&gt;t&lt;/code&gt; si el argumento pertenece al tipo apropiado y &lt;code&gt;nil&lt;/code&gt; en caso contrario. Siguiendo una convenci&amp;oacute;n Lisp general para funciones de predicado, la mayor&amp;iacute;a de los predicados de tipo 'nombres terminan con'</target>
        </trans-unit>
        <trans-unit id="0d50bc7f95aabd11c78a01358b272f4c298b3579" translate="yes" xml:space="preserve">
          <source>A type used for automatically loading seldom-used functions.</source>
          <target state="translated">Un tipo utilizado para cargar automáticamente funciones poco utilizadas.</target>
        </trans-unit>
        <trans-unit id="b25d98417944fbcf3fe27fffb07995fdd6887711" translate="yes" xml:space="preserve">
          <source>A typical value might look like this:</source>
          <target state="translated">Un valor típico podría ser así:</target>
        </trans-unit>
        <trans-unit id="7068fb3333ff355206cad1f5c8ac4e885a7b5eaa" translate="yes" xml:space="preserve">
          <source>A unique number assigned to this window when it was created.</source>
          <target state="translated">Un número único asignado a esta ventana cuando fue creada.</target>
        </trans-unit>
        <trans-unit id="1f49c36b6b4f969d94158af5c04fa459e6fb756b" translate="yes" xml:space="preserve">
          <source>A user interface for building JSONRPC applications</source>
          <target state="translated">Una interfaz de usuario para construir aplicaciones JSONRPC</target>
        </trans-unit>
        <trans-unit id="da28673ff5250624bbd9c79fdce5b46476250e40" translate="yes" xml:space="preserve">
          <source>A value of &lt;code&gt;nil&lt;/code&gt; is equivalent to .5, since its effect is to center point. This variable automatically becomes buffer-local when set in any fashion.</source>
          <target state="translated">Un valor de &lt;code&gt;nil&lt;/code&gt; equivale a .5, ya que su efecto es el punto central. Esta variable se convierte autom&amp;aacute;ticamente en local del b&amp;uacute;fer cuando se configura de cualquier manera.</target>
        </trans-unit>
        <trans-unit id="761af930570eba02ee4263e0c4625df53668e35d" translate="yes" xml:space="preserve">
          <source>A value of &lt;code&gt;nil&lt;/code&gt; says to ignore the lock and let this user edit the file anyway.</source>
          <target state="translated">Un valor de &lt;code&gt;nil&lt;/code&gt; dice que se ignore el bloqueo y que este usuario edite el archivo de todos modos.</target>
        </trans-unit>
        <trans-unit id="2614ea86270afac8b5acd08878d712db67414cd0" translate="yes" xml:space="preserve">
          <source>A value of &lt;code&gt;t&lt;/code&gt; says to grab the lock on the file. Then this user may edit the file and &lt;var&gt;other-user&lt;/var&gt; loses the lock.</source>
          <target state="translated">Un valor de &lt;code&gt;t&lt;/code&gt; dice que se debe tomar el bloqueo del archivo. Entonces este usuario puede editar el archivo y el &lt;var&gt;other-user&lt;/var&gt; pierde el bloqueo.</target>
        </trans-unit>
        <trans-unit id="0f7035c80e73faf961d120dfe6ba3e3b9a60ff4c" translate="yes" xml:space="preserve">
          <source>A value of the form &lt;code&gt;(&lt;var&gt;num&lt;/var&gt; . &lt;var&gt;expr&lt;/var&gt;)&lt;/code&gt; stands for the product of the values of &lt;var&gt;num&lt;/var&gt; and &lt;var&gt;expr&lt;/var&gt;. For example, &lt;code&gt;(2 . in)&lt;/code&gt; specifies a width of 2 inches, while &lt;code&gt;(0.5 .
&lt;var&gt;image&lt;/var&gt;)&lt;/code&gt; specifies half the width (or height) of the specified &lt;var&gt;image&lt;/var&gt; (which should be given by its image spec).</source>
          <target state="translated">Un valor de la forma &lt;code&gt;(&lt;var&gt;num&lt;/var&gt; . &lt;var&gt;expr&lt;/var&gt;)&lt;/code&gt; representa el producto de los valores de &lt;var&gt;num&lt;/var&gt; y &lt;var&gt;expr&lt;/var&gt; . Por ejemplo, &lt;code&gt;(2 . in)&lt;/code&gt; In ) especifica un ancho de 2 pulgadas, mientras que &lt;code&gt;(0.5 . &lt;var&gt;image&lt;/var&gt;)&lt;/code&gt; especifica la mitad del ancho (o alto) de la &lt;var&gt;image&lt;/var&gt; n especificada (que debe ser dada por su especificaci&amp;oacute;n de imagen).</target>
        </trans-unit>
        <trans-unit id="7d6f07646985192c4276dea56a0bd52c3ee59a86" translate="yes" xml:space="preserve">
          <source>A variable can be let-bound (see &lt;a href=&quot;local-variables#Local-Variables&quot;&gt;Local Variables&lt;/a&gt;) to a value. This makes its global value shadowed by the binding; &lt;code&gt;default-value&lt;/code&gt; will then return the value from that binding, not the global value, and &lt;code&gt;set-default&lt;/code&gt; will be prevented from setting the global value (it will change the let-bound value instead). The following two functions allow to reference the global value even if it&amp;rsquo;s shadowed by a let-binding.</source>
          <target state="translated">Una variable puede estar ligada (ver &lt;a href=&quot;local-variables#Local-Variables&quot;&gt;Variables locales&lt;/a&gt; ) a un valor. Esto hace que su valor global quede ensombrecido por la vinculaci&amp;oacute;n; &lt;code&gt;default-value&lt;/code&gt; luego devolver&amp;aacute; el valor de ese enlace, no el valor global, y &lt;code&gt;set-default&lt;/code&gt; no podr&amp;aacute; establecer el valor global (en su lugar, cambiar&amp;aacute; el valor let-bound). Las siguientes dos funciones permiten hacer referencia al valor global incluso si est&amp;aacute; sombreado por un enlace let.</target>
        </trans-unit>
        <trans-unit id="42469365ae54b87406fe0c4580eafab3e15cd7f7" translate="yes" xml:space="preserve">
          <source>A variable can have buffer-local bindings in some buffers but not in other buffers. The default binding is shared by all the buffers that don&amp;rsquo;t have their own bindings for the variable. (This includes all newly-created buffers.) If you set the variable in a buffer that does not have a buffer-local binding for it, this sets the default binding, so the new value is visible in all the buffers that see the default binding.</source>
          <target state="translated">Una variable puede tener enlaces locales de b&amp;uacute;fer en algunos b&amp;uacute;feres pero no en otros b&amp;uacute;feres. El enlace predeterminado lo comparten todos los b&amp;uacute;feres que no tienen sus propios enlaces para la variable. (Esto incluye todos los b&amp;uacute;feres reci&amp;eacute;n creados). Si configura la variable en un b&amp;uacute;fer que no tiene un enlace local de b&amp;uacute;fer, esto establece el enlace predeterminado, por lo que el nuevo valor es visible en todos los b&amp;uacute;feres que ven el valor predeterminado Uni&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="7229e30ed01c65b1f554b2be31bb3ad0ddba289e" translate="yes" xml:space="preserve">
          <source>A variable can have more than one local binding at a time (e.g., if there are nested &lt;code&gt;let&lt;/code&gt; forms that bind the variable). The &lt;em&gt;current binding&lt;/em&gt; is the local binding that is actually in effect. It determines the value returned by evaluating the variable symbol, and it is the binding acted on by &lt;code&gt;setq&lt;/code&gt;.</source>
          <target state="translated">Una variable puede tener m&amp;aacute;s de una vinculaci&amp;oacute;n local a la vez (por ejemplo, si hay formas &lt;code&gt;let&lt;/code&gt; anidadas que vinculan la variable). El &lt;em&gt;enlace actual&lt;/em&gt; es el enlace local que est&amp;aacute; realmente en efecto. Determina el valor devuelto al evaluar el s&amp;iacute;mbolo de la variable, y es la vinculaci&amp;oacute;n sobre la que act&amp;uacute;a &lt;code&gt;setq&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a1ac65fb2f3cee8bab9b33ddf4b381098337ecd1" translate="yes" xml:space="preserve">
          <source>A variable declared to be a user option (i.e., satisfying the predicate &lt;code&gt;custom-variable-p&lt;/code&gt;). This reads the variable using &lt;code&gt;read-variable&lt;/code&gt;. See &lt;a href=&quot;high_002dlevel-completion#Definition-of-read_002dvariable&quot;&gt;Definition of read-variable&lt;/a&gt;. Existing, Completion, Prompt.</source>
          <target state="translated">Una variable declarada como una opci&amp;oacute;n de usuario (es decir, que satisface el predicado &lt;code&gt;custom-variable-p&lt;/code&gt; ). Esto lee la variable usando &lt;code&gt;read-variable&lt;/code&gt; . Consulte &lt;a href=&quot;high_002dlevel-completion#Definition-of-read_002dvariable&quot;&gt;Definici&amp;oacute;n de variable de lectura&lt;/a&gt; . Existente, finalizaci&amp;oacute;n, pronto.</target>
        </trans-unit>
        <trans-unit id="714788a2d69016197f589516788c6c86a085d831" translate="yes" xml:space="preserve">
          <source>A variable definition serves three purposes. First, it informs people who read the code that the symbol is &lt;em&gt;intended&lt;/em&gt; to be used a certain way (as a variable). Second, it informs the Lisp system of this, optionally supplying an initial value and a documentation string. Third, it provides information to programming tools such as &lt;code&gt;etags&lt;/code&gt;, allowing them to find where the variable was defined.</source>
          <target state="translated">Una definici&amp;oacute;n de variable tiene tres prop&amp;oacute;sitos. En primer lugar, se informa a las personas que leen el c&amp;oacute;digo que el s&amp;iacute;mbolo est&amp;aacute; &lt;em&gt;destinado&lt;/em&gt; a ser utilizado de una manera determinada (como una variable). En segundo lugar, informa al sistema Lisp de esto, proporcionando opcionalmente un valor inicial y una cadena de documentaci&amp;oacute;n. En tercer lugar, proporciona informaci&amp;oacute;n a herramientas de programaci&amp;oacute;n como &lt;code&gt;etags&lt;/code&gt; , lo que les permite encontrar d&amp;oacute;nde se defini&amp;oacute; la variable.</target>
        </trans-unit>
        <trans-unit id="6d8469682cf6ae5ee24fbb06b606a67a9bdca6f1" translate="yes" xml:space="preserve">
          <source>A vector of elements groups the elements into a single &lt;em&gt;group specification&lt;/em&gt;. Its meaning has nothing to do with vectors.</source>
          <target state="translated">Un vector de elementos agrupa los elementos en una sola &lt;em&gt;especificaci&amp;oacute;n de grupo&lt;/em&gt; . Su significado no tiene nada que ver con los vectores.</target>
        </trans-unit>
        <trans-unit id="907ba2db0b69ea3ac390ffc8957c9f20ac952af1" translate="yes" xml:space="preserve">
          <source>A vector of glyphs for indicating the presence of invisible lines (the default is &amp;lsquo;</source>
          <target state="translated">Un vector de glifos para indicar la presencia de l&amp;iacute;neas invisibles (el valor predeterminado es '</target>
        </trans-unit>
        <trans-unit id="5b9d67749d8a12ed598e9d50f8a2fa40ed3d9434" translate="yes" xml:space="preserve">
          <source>A vector of strings or bool-vectors, each specifying one line of the image. Do specify &lt;code&gt;:height&lt;/code&gt; and &lt;code&gt;:width&lt;/code&gt;.</source>
          <target state="translated">Un vector de cadenas o vectores bool, cada uno de los cuales especifica una l&amp;iacute;nea de la imagen. Especifique &lt;code&gt;:height&lt;/code&gt; y &lt;code&gt;:width&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bfd393f14b47e46b8b1b11b3ee71f7e6e4effd32" translate="yes" xml:space="preserve">
          <source>A vector, like a string or a number, is considered a constant for evaluation: the result of evaluating it is the same vector. This does not evaluate or even examine the elements of the vector. See &lt;a href=&quot;self_002devaluating-forms#Self_002dEvaluating-Forms&quot;&gt;Self-Evaluating Forms&lt;/a&gt;. Vectors written with square brackets should not be modified via &lt;code&gt;aset&lt;/code&gt; or other destructive operations. See &lt;a href=&quot;mutability#Mutability&quot;&gt;Mutability&lt;/a&gt;.</source>
          <target state="translated">Un vector, como una cadena o un n&amp;uacute;mero, se considera una constante de evaluaci&amp;oacute;n: el resultado de evaluarlo es el mismo vector. Esto no eval&amp;uacute;a ni examina los elementos del vector. Consulte &lt;a href=&quot;self_002devaluating-forms#Self_002dEvaluating-Forms&quot;&gt;Formularios de autoevaluaci&amp;oacute;n&lt;/a&gt; . Los vectores escritos entre corchetes no deben modificarse mediante un &lt;code&gt;aset&lt;/code&gt; u otras operaciones destructivas. Ver &lt;a href=&quot;mutability#Mutability&quot;&gt;mutabilidad&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cea3cbc11949c249de3312f294eef9cb9f938425" translate="yes" xml:space="preserve">
          <source>A version number, in a form that the function &lt;code&gt;version-to-list&lt;/code&gt; understands (e.g., &amp;lsquo;</source>
          <target state="translated">Un n&amp;uacute;mero de versi&amp;oacute;n, en una forma que la funci&amp;oacute;n &lt;code&gt;version-to-list&lt;/code&gt; entienda (por ejemplo, '</target>
        </trans-unit>
        <trans-unit id="d6f9261a2dce5769b4273b16b8e7e92056f25007" translate="yes" xml:space="preserve">
          <source>A very simple parsing technique.</source>
          <target state="translated">Una técnica de análisis muy simple.</target>
        </trans-unit>
        <trans-unit id="a21b6bc0e953a05c7047f6926acdf8cdb6092af2" translate="yes" xml:space="preserve">
          <source>A visible child frame always appears on top of its parent frame thus obscuring parts of it, except on NS builds where it may be positioned beneath the parent. This is comparable to the window-system window of a top-level frame which also always appears on top of its parent window&amp;mdash;the desktop&amp;rsquo;s root window. When a parent frame is iconified or made invisible (see &lt;a href=&quot;visibility-of-frames#Visibility-of-Frames&quot;&gt;Visibility of Frames&lt;/a&gt;), its child frames are made invisible. When a parent frame is deiconified or made visible, its child frames are made visible.</source>
          <target state="translated">Un marco secundario visible siempre aparece en la parte superior de su marco principal, lo que oscurece partes de &amp;eacute;l, excepto en las compilaciones NS, donde puede colocarse debajo del principal. Esto es comparable a la ventana del sistema de ventanas de un marco de nivel superior que tambi&amp;eacute;n aparece siempre en la parte superior de su ventana principal, la ventana ra&amp;iacute;z del escritorio. Cuando un marco principal se iconifica o se vuelve invisible (consulte &lt;a href=&quot;visibility-of-frames#Visibility-of-Frames&quot;&gt;Visibilidad de los marcos&lt;/a&gt; ), sus marcos secundarios se vuelven invisibles. Cuando un marco padre se desiconifica o se hace visible, sus marcos secundarios se hacen visibles.</target>
        </trans-unit>
        <trans-unit id="3f15d83470f651a16357e3fbbafed38889367d47" translate="yes" xml:space="preserve">
          <source>A visible frame occupies a rectangular area on its terminal&amp;rsquo;s display. This area may contain a number of nested rectangles, each serving a different purpose. The drawing below sketches the layout of a frame on a graphical terminal:</source>
          <target state="translated">Un marco visible ocupa un &amp;aacute;rea rectangular en la pantalla de su terminal. Esta &amp;aacute;rea puede contener varios rect&amp;aacute;ngulos anidados, cada uno con un prop&amp;oacute;sito diferente. El siguiente dibujo esboza el dise&amp;ntilde;o de un marco en un terminal gr&amp;aacute;fico:</target>
        </trans-unit>
        <trans-unit id="9dc2f20dda99554f7dead3ef07cf05023791995d" translate="yes" xml:space="preserve">
          <source>A watch can become invalid if the file or directory it watches is deleted, or if the watcher thread exits abnormally for any other reason. Removing the watch by calling &lt;code&gt;file-notify-rm-watch&lt;/code&gt; also makes it invalid.</source>
          <target state="translated">Un reloj puede dejar de ser v&amp;aacute;lido si se elimina el archivo o directorio que observa, o si el hilo del observador sale de forma anormal por cualquier otro motivo. Quitar el reloj llamando a &lt;code&gt;file-notify-rm-watch&lt;/code&gt; tambi&amp;eacute;n lo invalida.</target>
        </trans-unit>
        <trans-unit id="efb12abaf84e2ff0588000ce76b06f219405368d" translate="yes" xml:space="preserve">
          <source>A web server providing access to a package archive must support the following queries:</source>
          <target state="translated">Un servidor web que proporcione acceso a un archivo de paquetes debe soportar las siguientes consultas:</target>
        </trans-unit>
        <trans-unit id="96a8665d6abd124bc5fe28303880a92b178554c2" translate="yes" xml:space="preserve">
          <source>A well-designed macro definition takes steps to avoid this problem by producing an expansion that evaluates the argument expressions exactly once unless repeated evaluation is part of the intended purpose of the macro. Here is a correct expansion for the &lt;code&gt;for&lt;/code&gt; macro:</source>
          <target state="translated">Una definici&amp;oacute;n de macro bien dise&amp;ntilde;ada toma medidas para evitar este problema al producir una expansi&amp;oacute;n que eval&amp;uacute;a las expresiones del argumento exactamente una vez, a menos que la evaluaci&amp;oacute;n repetida sea parte del prop&amp;oacute;sito previsto de la macro. Aqu&amp;iacute; hay una expansi&amp;oacute;n correcta para la macro &lt;code&gt;for&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b1827635d79dea77c5cd2894c432de677a45e87a" translate="yes" xml:space="preserve">
          <source>A window can get resized explicitly by using one of the functions from the preceding section or implicitly, for example, when resizing an adjacent window, when splitting or deleting a window (see &lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;Splitting Windows&lt;/a&gt;, see &lt;a href=&quot;deleting-windows#Deleting-Windows&quot;&gt;Deleting Windows&lt;/a&gt;) or when resizing the window&amp;rsquo;s frame (see &lt;a href=&quot;frame-size#Frame-Size&quot;&gt;Frame Size&lt;/a&gt;).</source>
          <target state="translated">Se puede cambiar el tama&amp;ntilde;o de una ventana expl&amp;iacute;citamente utilizando una de las funciones de la secci&amp;oacute;n anterior o impl&amp;iacute;citamente, por ejemplo, al cambiar el tama&amp;ntilde;o de una ventana adyacente, al dividir o eliminar una ventana (consulte &lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;Dividir ventanas&lt;/a&gt; , consulte &lt;a href=&quot;deleting-windows#Deleting-Windows&quot;&gt;Eliminar ventanas&lt;/a&gt; ) o al cambiar el tama&amp;ntilde;o del marco de la ventana ( consulte &lt;a href=&quot;frame-size#Frame-Size&quot;&gt;Tama&amp;ntilde;o de cuadro&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="da0f4aabb2b28d1adb4d16bd804393865c93bf0e" translate="yes" xml:space="preserve">
          <source>A window can have a &lt;em&gt;header line&lt;/em&gt; at the top, just as it can have a mode line at the bottom. The header line feature works just like the mode line feature, except that it&amp;rsquo;s controlled by &lt;code&gt;header-line-format&lt;/code&gt;:</source>
          <target state="translated">Una ventana puede tener una &lt;em&gt;l&amp;iacute;nea de encabezado&lt;/em&gt; en la parte superior, al igual que puede tener una l&amp;iacute;nea de modo en la parte inferior. La funci&amp;oacute;n de l&amp;iacute;nea de encabezado funciona igual que la funci&amp;oacute;n de l&amp;iacute;nea de modo, excepto que est&amp;aacute; controlada por el &lt;code&gt;header-line-format&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7eb040f86ff87638d96bfd4ec298244d1a1c95a8" translate="yes" xml:space="preserve">
          <source>A window is resized if and only if it has been specially created for the buffer. In particular, windows that have shown another buffer before are not resized. By default, this mode uses &lt;code&gt;fit-window-to-buffer&lt;/code&gt; (see &lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;Resizing Windows&lt;/a&gt;) for resizing. You can specify a different function by customizing the options &lt;code&gt;temp-buffer-max-height&lt;/code&gt; and &lt;code&gt;temp-buffer-max-width&lt;/code&gt; below.</source>
          <target state="translated">Una ventana cambia de tama&amp;ntilde;o si y solo si se ha creado especialmente para el b&amp;uacute;fer. En particular, las ventanas que han mostrado otro b&amp;uacute;fer antes no cambian de tama&amp;ntilde;o. De forma predeterminada, este modo utiliza &lt;code&gt;fit-window-to-buffer&lt;/code&gt; (consulte &lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;Cambiar el tama&amp;ntilde;o de las ventanas&lt;/a&gt; ) para cambiar el tama&amp;ntilde;o. Puede especificar una funci&amp;oacute;n diferente personalizando las opciones &lt;code&gt;temp-buffer-max-height&lt;/code&gt; y &lt;code&gt;temp-buffer-max-width&lt;/code&gt; a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="5b181ae523d21d580fe4dc9490e28d52beda4e36" translate="yes" xml:space="preserve">
          <source>A window showing a temporary buffer can be fitted to the size of that buffer using the following mode:</source>
          <target state="translated">Una ventana que muestre un búfer temporal puede ajustarse al tamaño de ese búfer utilizando el siguiente modo:</target>
        </trans-unit>
        <trans-unit id="10b80aceee959c8dcb16c72ed1a2553043421e82" translate="yes" xml:space="preserve">
          <source>A window that is just one line tall never displays a header line. A window that is two lines tall cannot display both a mode line and a header line at once; if it has a mode line, then it does not display a header line.</source>
          <target state="translated">Una ventana de una sola línea de altura nunca muestra una línea de encabezamiento.Una ventana de dos líneas de altura no puede mostrar a la vez una línea de modo y una línea de encabezamiento;si tiene una línea de modo,entonces no muestra una línea de encabezamiento.</target>
        </trans-unit>
        <trans-unit id="6004ea783485bff5b8ff0a2c4b58ed331fceaf67" translate="yes" xml:space="preserve">
          <source>A window that showed &lt;var&gt;buffer&lt;/var&gt; before, provided it is not the selected window.</source>
          <target state="translated">Una ventana que mostraba &lt;var&gt;buffer&lt;/var&gt; antes, siempre que no sea la ventana seleccionada.</target>
        </trans-unit>
        <trans-unit id="24fac820e9dc3bcfec792e9cbea05e313a184dd9" translate="yes" xml:space="preserve">
          <source>A working buffer for decoding.</source>
          <target state="translated">Una memoria intermedia que funciona para la decodificación.</target>
        </trans-unit>
        <trans-unit id="a0c46d9d748b73163c147c1ce7040c6c5f099f4e" translate="yes" xml:space="preserve">
          <source>A working buffer for encoding.</source>
          <target state="translated">Un buffer de trabajo para la codificación.</target>
        </trans-unit>
        <trans-unit id="616b07ea95b58bd9c829efac045d8e3b914aeaa6" translate="yes" xml:space="preserve">
          <source>A wrap prefix may also be specified for regions of text, using the &lt;code&gt;wrap-prefix&lt;/code&gt; text or overlay property. This takes precedence over the &lt;code&gt;wrap-prefix&lt;/code&gt; variable. See &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;Special Properties&lt;/a&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n se puede especificar un prefijo de ajuste para regiones de texto, utilizando el texto del &lt;code&gt;wrap-prefix&lt;/code&gt; ajuste o la propiedad de superposici&amp;oacute;n. Esto tiene prioridad sobre la variable &lt;code&gt;wrap-prefix&lt;/code&gt; . Ver &lt;a href=&quot;special-properties#Special-Properties&quot;&gt;propiedades especiales&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3b61659ac0aca26e539585c1b71cc13614c39334" translate="yes" xml:space="preserve">
          <source>A wrap-prefix may also be specified for an entire buffer using the &lt;code&gt;wrap-prefix&lt;/code&gt; buffer-local variable (however, a &lt;code&gt;wrap-prefix&lt;/code&gt; text-property takes precedence over the value of the &lt;code&gt;wrap-prefix&lt;/code&gt; variable). See &lt;a href=&quot;truncation#Truncation&quot;&gt;Truncation&lt;/a&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n se puede especificar un prefijo de ajuste para un b&amp;uacute;fer completo utilizando la variable local de b&amp;uacute;fer de &lt;code&gt;wrap-prefix&lt;/code&gt; ajuste (sin embargo, una propiedad de texto de &lt;code&gt;wrap-prefix&lt;/code&gt; de ajuste tiene prioridad sobre el valor de la variable de &lt;code&gt;wrap-prefix&lt;/code&gt; ajuste). Consulte &lt;a href=&quot;truncation#Truncation&quot;&gt;Truncamiento&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1a6a3baa60990f601b340b07ecccc1672c3cca03" translate="yes" xml:space="preserve">
          <source>A-</source>
          <target state="translated">A-</target>
        </trans-unit>
        <trans-unit id="a85e90f9835e6411e691ebde65582614cea81732" translate="yes" xml:space="preserve">
          <source>ALT</source>
          <target state="translated">ALT</target>
        </trans-unit>
        <trans-unit id="80d305c58f97edfae92a3627f5a66d9bef4d8d46" translate="yes" xml:space="preserve">
          <source>AM</source>
          <target state="translated">AM</target>
        </trans-unit>
        <trans-unit id="d93d10ff0fbef1b4aa0ddc24e10e907746d3c85a" translate="yes" xml:space="preserve">
          <source>API</source>
          <target state="translated">API</target>
        </trans-unit>
        <trans-unit id="94090230b1f8c256f7ac5dc5a70bd3b20ee4ff15" translate="yes" xml:space="preserve">
          <source>ASCII</source>
          <target state="translated">ASCII</target>
        </trans-unit>
        <trans-unit id="031fd11ba8734ab304116a023b5216306b246bee" translate="yes" xml:space="preserve">
          <source>AT</source>
          <target state="translated">AT</target>
        </trans-unit>
        <trans-unit id="99122025a15b80d993018f40997751b62445924e" translate="yes" xml:space="preserve">
          <source>AT&amp;amp;T Unix System V.</source>
          <target state="translated">Sistema Unix de AT&amp;amp;T V.</target>
        </trans-unit>
        <trans-unit id="54f90b5155803aae21271b2ad64b0075c858dfb3" translate="yes" xml:space="preserve">
          <source>Abbrev Properties</source>
          <target state="translated">Abreviatura de Propiedades</target>
        </trans-unit>
        <trans-unit id="f784445cdd616480acdfafb0159b1dd57c47999c" translate="yes" xml:space="preserve">
          <source>Abbrev Table Properties</source>
          <target state="translated">Abreviatura de las propiedades de la tabla</target>
        </trans-unit>
        <trans-unit id="2a8b96a9acfbae4f72a46878195e3d362ca12a6d" translate="yes" xml:space="preserve">
          <source>Abbrev Tables</source>
          <target state="translated">Tablas abreviadas</target>
        </trans-unit>
        <trans-unit id="a762e02aeaccf777576ff3c307e562d8de1c9496" translate="yes" xml:space="preserve">
          <source>Abbrev tables used by various major modes.</source>
          <target state="translated">Tablas abreviadas utilizadas por varios modos principales.</target>
        </trans-unit>
        <trans-unit id="49470700c92eb0723c4ce23a16459e8c3cadae63" translate="yes" xml:space="preserve">
          <source>Abbrevs</source>
          <target state="translated">Abbrevs</target>
        </trans-unit>
        <trans-unit id="0305dceae89338799d1bdcabaff23a024687a7d6" translate="yes" xml:space="preserve">
          <source>Abbrevs and Abbrev Expansion</source>
          <target state="translated">Abreviaturas y expansión de las abreviaturas</target>
        </trans-unit>
        <trans-unit id="b4aa8f55f18e483e3d99ff9bebe3bd5c52648359" translate="yes" xml:space="preserve">
          <source>Abbrevs are usually expanded by certain interactive commands, including &lt;code&gt;self-insert-command&lt;/code&gt;. This section describes the subroutines used in writing such commands, as well as the variables they use for communication.</source>
          <target state="translated">Las abreviaturas generalmente se expanden mediante ciertos comandos interactivos, incluido &lt;code&gt;self-insert-command&lt;/code&gt; autoinsertar . Esta secci&amp;oacute;n describe las subrutinas que se utilizan para escribir dichos comandos, as&amp;iacute; como las variables que utilizan para la comunicaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="1631d5afa2a3227c2b1fff62aedf669a7aee3c55" translate="yes" xml:space="preserve">
          <source>Abbrevs have properties, some of which influence the way they work. You can provide them as arguments to &lt;code&gt;define-abbrev&lt;/code&gt;, and manipulate them with the following functions:</source>
          <target state="translated">Las abreviaturas tienen propiedades, algunas de las cuales influyen en la forma en que funcionan. Puede proporcionarlos como argumentos para &lt;code&gt;define-abbrev&lt;/code&gt; y manipularlos con las siguientes funciones:</target>
        </trans-unit>
        <trans-unit id="fd64ebde815890af94b19555b946c61d882f6e1a" translate="yes" xml:space="preserve">
          <source>Abort one level back to the previous command level (&lt;code&gt;abort-recursive-edit&lt;/code&gt;).</source>
          <target state="translated">Abortar un nivel de regreso al nivel de comando anterior ( &lt;code&gt;abort-recursive-edit&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="649f859d67e712421f56a26ae61a458542dd60ea" translate="yes" xml:space="preserve">
          <source>Absolute and Relative File Names</source>
          <target state="translated">Nombres de archivos absolutos y relativos</target>
        </trans-unit>
        <trans-unit id="059d44280b6e5c431c206b204f4f62d2e05d3635" translate="yes" xml:space="preserve">
          <source>Absolute times may be specified using a string with a limited variety of formats, and are taken to be times &lt;em&gt;today&lt;/em&gt;, even if already in the past. The recognized forms are &amp;lsquo;</source>
          <target state="translated">Los tiempos absolutos pueden especificarse utilizando una cadena con una variedad limitada de formatos, y se toman como tiempos de &lt;em&gt;hoy&lt;/em&gt; , incluso si ya fueron del pasado. Las formas reconocidas son '</target>
        </trans-unit>
        <trans-unit id="c2929c3c521daab9f85d0df0bc4e1eb3e6ff7ace" translate="yes" xml:space="preserve">
          <source>Abstract Display</source>
          <target state="translated">Visualización del resumen</target>
        </trans-unit>
        <trans-unit id="0dd14bcbc9ae50a4fc5b86a822cc2f2f4d8cca03" translate="yes" xml:space="preserve">
          <source>Abstract Display Example</source>
          <target state="translated">Ejemplo de visualización de un resumen</target>
        </trans-unit>
        <trans-unit id="8ca47e66401ef945d4b28414ef0d5576741f3686" translate="yes" xml:space="preserve">
          <source>Abstract Display Functions</source>
          <target state="translated">Funciones de la pantalla de resumen</target>
        </trans-unit>
        <trans-unit id="69257aa08447c746dd43fabf319f01b5bf36c541" translate="yes" xml:space="preserve">
          <source>Accepting Output from Processes</source>
          <target state="translated">Aceptar la salida de los procesos</target>
        </trans-unit>
        <trans-unit id="b3e3bbc9103b04d543a6204da8e18664e43f77be" translate="yes" xml:space="preserve">
          <source>Access control</source>
          <target state="translated">Control de acceso</target>
        </trans-unit>
        <trans-unit id="c95b17f402b7316d8ba7de52ef60427ce9506d18" translate="yes" xml:space="preserve">
          <source>Access to Documentation Strings</source>
          <target state="translated">Acceso a las cadenas de documentación</target>
        </trans-unit>
        <trans-unit id="ad4938a0faaa972c17f8af4c4d5fdcca75e5ab35" translate="yes" xml:space="preserve">
          <source>Access to Frame Parameters</source>
          <target state="translated">Acceso a los parámetros del cuadro</target>
        </trans-unit>
        <trans-unit id="51a874cb0f96d3ea9f2ce946b1290deba1b58fd0" translate="yes" xml:space="preserve">
          <source>Access, manipulate and search the</source>
          <target state="translated">Acceder,manipular y buscar en el</target>
        </trans-unit>
        <trans-unit id="21dbc590326eedf17d212f7c64c83e8331fddf48" translate="yes" xml:space="preserve">
          <source>Accessing Elements of Lists</source>
          <target state="translated">Acceso a los elementos de las listas</target>
        </trans-unit>
        <trans-unit id="b4efd1b0aae332f4b617e49e2f68b08f45ba40e4" translate="yes" xml:space="preserve">
          <source>Accessing Function Cell Contents</source>
          <target state="translated">Acceder al contenido de las células de la función</target>
        </trans-unit>
        <trans-unit id="2ae0d4aab84373932fbdccdc1dd027efe8eb99b1" translate="yes" xml:space="preserve">
          <source>Accessing Mouse Events</source>
          <target state="translated">Acceso a los eventos del ratón</target>
        </trans-unit>
        <trans-unit id="7b70ffbc5424e39bca6adad4e4d11285e1ac347b" translate="yes" xml:space="preserve">
          <source>Accessing Other Processes</source>
          <target state="translated">Acceso a otros procesos</target>
        </trans-unit>
        <trans-unit id="8339c289bb6c2a3facc1658bda0b35c1d194fecf" translate="yes" xml:space="preserve">
          <source>Accessing Scroll Bar Events</source>
          <target state="translated">Acceder a los eventos de la barra de desplazamiento</target>
        </trans-unit>
        <trans-unit id="8eb474e9f84ed1c8d415f59983dd55f6ddf51322" translate="yes" xml:space="preserve">
          <source>Accessing Symbol Properties</source>
          <target state="translated">Acceso a las propiedades de los símbolos</target>
        </trans-unit>
        <trans-unit id="dd21e1a656d1c33e1a0961edb1425706c4dca0fb" translate="yes" xml:space="preserve">
          <source>Accessing Variable Values</source>
          <target state="translated">Acceso a los valores variables</target>
        </trans-unit>
        <trans-unit id="8572c608682fbb32c330cfe123c0c1e48efb3125" translate="yes" xml:space="preserve">
          <source>Accessing a window&amp;rsquo;s size.</source>
          <target state="translated">Accediendo al tama&amp;ntilde;o de una ventana.</target>
        </trans-unit>
        <trans-unit id="f8f65e4cb3dd5208adf445a32728a6ff8fca1a80" translate="yes" xml:space="preserve">
          <source>Accessing and changing buffer names.</source>
          <target state="translated">Acceder y cambiar los nombres de los buffers.</target>
        </trans-unit>
        <trans-unit id="3129221bf25c4d4b56aa75c86a37cdcc52d7977f" translate="yes" xml:space="preserve">
          <source>Accessing and recording terminal input.</source>
          <target state="translated">Accediendo y grabando la entrada de la terminal.</target>
        </trans-unit>
        <trans-unit id="8631d7461d61b93f0e7f285fa1d91660e92fcc8e" translate="yes" xml:space="preserve">
          <source>Accessing files.</source>
          <target state="translated">Accediendo a los archivos.</target>
        </trans-unit>
        <trans-unit id="6ab94f81e36e6a4e03c0557995d9d781180dfde7" translate="yes" xml:space="preserve">
          <source>Accessing or setting the function definition of a symbol.</source>
          <target state="translated">Acceder o configurar la definición de la función de un símbolo.</target>
        </trans-unit>
        <trans-unit id="febe729637e545444f7ff407ae1d3c58bfa2095e" translate="yes" xml:space="preserve">
          <source>Accessing other processes running on your system.</source>
          <target state="translated">Acceder a otros procesos que se ejecutan en su sistema.</target>
        </trans-unit>
        <trans-unit id="317d74ecc1929588bf8f86c73cd8f7de6158a955" translate="yes" xml:space="preserve">
          <source>Accessing property lists stored elsewhere.</source>
          <target state="translated">Acceder a listas de propiedades almacenadas en otros lugares.</target>
        </trans-unit>
        <trans-unit id="4de3522fad93f3eb20523cf511d421cb8eef7ca4" translate="yes" xml:space="preserve">
          <source>Accessing run-status and other attributes.</source>
          <target state="translated">Accediendo a run-status y otros atributos.</target>
        </trans-unit>
        <trans-unit id="e4d2ebfdc40bb29558e41e11ad7b405042d411f3" translate="yes" xml:space="preserve">
          <source>Accessing single items of match data, such as where a particular subexpression started.</source>
          <target state="translated">Acceder a elementos individuales de datos de coincidencia,como dónde comenzó una subexpresión en particular.</target>
        </trans-unit>
        <trans-unit id="e47d1cd990a7768c115296fc95220fcfe9f44b0e" translate="yes" xml:space="preserve">
          <source>Accessing symbol properties.</source>
          <target state="translated">Accediendo a las propiedades de los símbolos.</target>
        </trans-unit>
        <trans-unit id="97a8946bf0993a5ece0972055df9d2232582c889" translate="yes" xml:space="preserve">
          <source>Accessing the Entire Match Data</source>
          <target state="translated">Acceder a la totalidad de los datos del partido</target>
        </trans-unit>
        <trans-unit id="0098eec4c4a85cc7153b9941ac7e084d9e2e8113" translate="yes" xml:space="preserve">
          <source>Accessing the entire match data at once, as a list.</source>
          <target state="translated">Accediendo a todos los datos del partido de una vez,como una lista.</target>
        </trans-unit>
        <trans-unit id="6d51c3b889a7d39ffb0cd69aa7cdd6137813bf7a" translate="yes" xml:space="preserve">
          <source>Accessor functions are provided to access the elements in this list. The accessors are mentioned along with the descriptions of the elements below.</source>
          <target state="translated">Se proporcionan funciones de acceso para acceder a los elementos de esta lista.Los accesorios se mencionan junto con las descripciones de los elementos que figuran a continuación.</target>
        </trans-unit>
        <trans-unit id="a16eff51e0f2460918136851c80aba409432bd14" translate="yes" xml:space="preserve">
          <source>Accordingly, the native height of a frame may include the height of the tool bar but not that of the menu bar (Lucid, Motif, MS-Windows) or those of the menu bar and the tool bar (non-toolkit and text terminal frames).</source>
          <target state="translated">En consecuencia,la altura nativa de un marco puede incluir la altura de la barra de herramientas pero no la de la barra de menú (Lucid,Motif,MS-Windows)o las de la barra de menú y la barra de herramientas (marcos no de herramientas y terminales de texto).</target>
        </trans-unit>
        <trans-unit id="5d9540ff93a75d47409d6a0aa37491da117ecdf8" translate="yes" xml:space="preserve">
          <source>Acknowledgments</source>
          <target state="translated">Acknowledgments</target>
        </trans-unit>
        <trans-unit id="8be718ab6c21edb41bfaec3e8d4ff0416d658fc0" translate="yes" xml:space="preserve">
          <source>Action Alists for Buffer Display</source>
          <target state="translated">Alertas de acción para la visualización del buffer</target>
        </trans-unit>
        <trans-unit id="ce9f32ee0623ab47f4c96611c146ef4fcb105048" translate="yes" xml:space="preserve">
          <source>Action Functions for Buffer Display</source>
          <target state="translated">Funciones de acción para la visualización de la memoria intermedia</target>
        </trans-unit>
        <trans-unit id="bea1043802a5a73ba6a935cc95001c4084c8eed4" translate="yes" xml:space="preserve">
          <source>Active Display Table</source>
          <target state="translated">Tabla de visualización activa</target>
        </trans-unit>
        <trans-unit id="1b42bb970933421bd7fe384eb941f0b135fc8d12" translate="yes" xml:space="preserve">
          <source>Active Keymaps</source>
          <target state="translated">Mapas clave activos</target>
        </trans-unit>
        <trans-unit id="8bae209835d078ba1a2b628e6a1e2a530501a3e6" translate="yes" xml:space="preserve">
          <source>Adapting code using the old defadvice</source>
          <target state="translated">Adaptar el código usando el antiguo consejo de defensa</target>
        </trans-unit>
        <trans-unit id="fb2cba4aab141960fa84cebe7cdaa1f7b5ca40f1" translate="yes" xml:space="preserve">
          <source>Adapting code using the old defadvice.</source>
          <target state="translated">Adaptación del código usando el antiguo consejo de defensa.</target>
        </trans-unit>
        <trans-unit id="d3aca0f70608cde924c0c717aa6f76cc5b6dd2c8" translate="yes" xml:space="preserve">
          <source>Adaptive Fill Mode</source>
          <target state="translated">Modo de llenado adaptativo</target>
        </trans-unit>
        <trans-unit id="ad3177b884766938f06c1f5cfe5f60876bbecbb6" translate="yes" xml:space="preserve">
          <source>Adaptive Fill mode chooses a fill prefix from context.</source>
          <target state="translated">El modo de llenado adaptativo elige un prefijo de llenado del contexto.</target>
        </trans-unit>
        <trans-unit id="45867255fd797585e4916e018bbccee9a35d212f" translate="yes" xml:space="preserve">
          <source>Adaptive Fill mode is enabled when this variable is non-&lt;code&gt;nil&lt;/code&gt;. It is &lt;code&gt;t&lt;/code&gt; by default.</source>
          <target state="translated">El modo de llenado adaptativo est&amp;aacute; habilitado cuando esta variable no es &lt;code&gt;nil&lt;/code&gt; . Es &lt;code&gt;t&lt;/code&gt; por defecto.</target>
        </trans-unit>
        <trans-unit id="41fe7af53eab5acab9f4d23fedd7b9d027e07088" translate="yes" xml:space="preserve">
          <source>Adaptive Fill mode matches this regular expression against the text starting after the left margin whitespace (if any) on a line; the characters it matches are that line&amp;rsquo;s candidate for the fill prefix.</source>
          <target state="translated">El modo de relleno adaptativo compara esta expresi&amp;oacute;n regular con el texto que comienza despu&amp;eacute;s del espacio en blanco del margen izquierdo (si lo hay) en una l&amp;iacute;nea; los caracteres que coincide son candidatos de esa l&amp;iacute;nea para el prefijo de relleno.</target>
        </trans-unit>
        <trans-unit id="1298942391d0f9524543f2b581a0f4733a3cd521" translate="yes" xml:space="preserve">
          <source>Add &lt;var&gt;child&lt;/var&gt; to &lt;var&gt;node&lt;/var&gt;&amp;rsquo;s child list before the &lt;var&gt;before&lt;/var&gt; node. If &lt;var&gt;before&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, make &lt;var&gt;child&lt;/var&gt; the first child.</source>
          <target state="translated">A&amp;ntilde;adir &lt;var&gt;child&lt;/var&gt; a &lt;var&gt;node&lt;/var&gt; lista de elementos secundarios &amp;lsquo;s antes del &lt;var&gt;before&lt;/var&gt; nodo. Si &lt;var&gt;before&lt;/var&gt; es &lt;code&gt;nil&lt;/code&gt; , convierta al &lt;var&gt;child&lt;/var&gt; el primer ni&amp;ntilde;o.</target>
        </trans-unit>
        <trans-unit id="86a8c842c5f2e03db4ed77dc6cfb42a4e1d59a0e" translate="yes" xml:space="preserve">
          <source>Add a clipping path to &lt;var&gt;svg&lt;/var&gt;. If applied to a shape via the &lt;var&gt;:clip-path&lt;/var&gt; property, parts of that shape which lie outside of the clipping path are not drawn.</source>
          <target state="translated">Agregue un trazado de recorte a &lt;var&gt;svg&lt;/var&gt; . Si se aplica a una forma mediante la propiedad &lt;var&gt;:clip-path&lt;/var&gt; , las partes de esa forma que se encuentran fuera del trazado de recorte no se dibujan.</target>
        </trans-unit>
        <trans-unit id="ca2976f450cc856aed523c528c25b64c84e61f8c" translate="yes" xml:space="preserve">
          <source>Add a function to &lt;code&gt;font-lock-extend-region-functions&lt;/code&gt; that does the &lt;em&gt;identification&lt;/em&gt; and extends the scan so that the scanned text never starts or ends in the middle of a multiline construct.</source>
          <target state="translated">Agregue una funci&amp;oacute;n a &lt;code&gt;font-lock-extend-region-functions&lt;/code&gt; que hace la &lt;em&gt;identificaci&amp;oacute;n&lt;/em&gt; y extiende el escaneo para que el texto escaneado nunca comience o termine en medio de una construcci&amp;oacute;n de varias l&amp;iacute;neas.</target>
        </trans-unit>
        <trans-unit id="2437c12b4ee8245aff3c6e915602340a5cb79372" translate="yes" xml:space="preserve">
          <source>Add a polygon to &lt;var&gt;svg&lt;/var&gt; where &lt;var&gt;points&lt;/var&gt; is a list of X/Y pairs that describe the outer circumference of the polygon.</source>
          <target state="translated">Agregue un pol&amp;iacute;gono a &lt;var&gt;svg&lt;/var&gt; donde los &lt;var&gt;points&lt;/var&gt; son una lista de pares X / Y que describen la circunferencia exterior del pol&amp;iacute;gono.</target>
        </trans-unit>
        <trans-unit id="d0cd8a519df07a3ed1321bd58a41305e60e7eb92" translate="yes" xml:space="preserve">
          <source>Add a watch for filesystem events pertaining to &lt;var&gt;file&lt;/var&gt;. This arranges for filesystem events pertaining to &lt;var&gt;file&lt;/var&gt; to be reported to Emacs.</source>
          <target state="translated">Agregue un reloj para los eventos del sistema de archivos relacionados con el &lt;var&gt;file&lt;/var&gt; . Esto hace que los eventos del sistema de archivos pertenecientes al &lt;var&gt;file&lt;/var&gt; sean reportados a Emacs.</target>
        </trans-unit>
        <trans-unit id="e14f3bd4b7856be2d474146674d049259534d312" translate="yes" xml:space="preserve">
          <source>Add an element to &lt;code&gt;minor-mode-alist&lt;/code&gt; for each minor mode (see &lt;a href=&quot;mode-line-variables#Definition-of-minor_002dmode_002dalist&quot;&gt;Definition of minor-mode-alist&lt;/a&gt;), if you want to indicate the minor mode in the mode line. This element should be a list of the following form:</source>
          <target state="translated">Agregue un elemento a &lt;code&gt;minor-mode-alist&lt;/code&gt; para cada modo menor (consulte &lt;a href=&quot;mode-line-variables#Definition-of-minor_002dmode_002dalist&quot;&gt;Definici&amp;oacute;n de minor-mode-alist&lt;/a&gt; ), si desea indicar el modo menor en la l&amp;iacute;nea de modo. Este elemento debe ser una lista de la siguiente forma:</target>
        </trans-unit>
        <trans-unit id="7cff03d7e41619c195637edc380375b892f0845c" translate="yes" xml:space="preserve">
          <source>Add an embedded (raster) image to &lt;var&gt;svg&lt;/var&gt;. If &lt;var&gt;datap&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, &lt;var&gt;image&lt;/var&gt; should be a file name; otherwise it should be a string containing the image data as raw bytes. &lt;var&gt;image-type&lt;/var&gt; should be a</source>
          <target state="translated">Agregue una imagen incrustada (rasterizada) a &lt;var&gt;svg&lt;/var&gt; . Si &lt;var&gt;datap&lt;/var&gt; es &lt;code&gt;nil&lt;/code&gt; , la &lt;var&gt;image&lt;/var&gt; n debe ser un nombre de archivo; de lo contrario, deber&amp;iacute;a ser una cadena que contenga los datos de la imagen como bytes sin procesar. &lt;var&gt;image-type&lt;/var&gt; debe ser un</target>
        </trans-unit>
        <trans-unit id="a711fa29586567ced283637a07f291daf9eccd20" translate="yes" xml:space="preserve">
          <source>Add line breaks and indentation to the top-level Lisp form at point to make it more readable.</source>
          <target state="translated">Añade saltos de línea y sangría a la forma de ceceo de nivel superior en el punto para hacerla más legible.</target>
        </trans-unit>
        <trans-unit id="4d943f97d99246a36fad53c87be01c95f3a766cf" translate="yes" xml:space="preserve">
          <source>Add the advice &lt;var&gt;function&lt;/var&gt; to the named function &lt;var&gt;symbol&lt;/var&gt;. &lt;var&gt;where&lt;/var&gt; and &lt;var&gt;props&lt;/var&gt; have the same meaning as for &lt;code&gt;add-function&lt;/code&gt; (see &lt;a href=&quot;core-advising-primitives#Core-Advising-Primitives&quot;&gt;Core Advising Primitives&lt;/a&gt;).</source>
          <target state="translated">Agregue la &lt;var&gt;function&lt;/var&gt; aviso al &lt;var&gt;symbol&lt;/var&gt; funci&amp;oacute;n nombrada . &lt;var&gt;where&lt;/var&gt; y &lt;var&gt;props&lt;/var&gt; tienen el mismo significado que &lt;code&gt;add-function&lt;/code&gt; (consulte &lt;a href=&quot;core-advising-primitives#Core-Advising-Primitives&quot;&gt;Primitivas de asesoramiento b&amp;aacute;sico&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="83a774fd7318f04762e68de4e2b137225620ce7f" translate="yes" xml:space="preserve">
          <source>Add the custom node &lt;var&gt;tag&lt;/var&gt; to &lt;var&gt;svg&lt;/var&gt;.</source>
          <target state="translated">Agregue la &lt;var&gt;tag&lt;/var&gt; nodo personalizada a &lt;var&gt;svg&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="3861b616706cb862303f0503ef614aace33c9de7" translate="yes" xml:space="preserve">
          <source>Add the outline of a shape to &lt;var&gt;svg&lt;/var&gt; according to &lt;var&gt;commands&lt;/var&gt;, see &lt;a href=&quot;#SVG-Path-Commands&quot;&gt;SVG Path Commands&lt;/a&gt;.</source>
          <target state="translated">Agregue el contorno de una forma a &lt;var&gt;svg&lt;/var&gt; seg&amp;uacute;n los &lt;var&gt;commands&lt;/var&gt; , consulte &lt;a href=&quot;#SVG-Path-Commands&quot;&gt;Comandos de ruta SVG&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9913c193acde9c02d5ae3b24bc390ab6d78afa81" translate="yes" xml:space="preserve">
          <source>Add the specified &lt;var&gt;text&lt;/var&gt; to &lt;var&gt;svg&lt;/var&gt;.</source>
          <target state="translated">Agrega el &lt;var&gt;text&lt;/var&gt; o especificado a &lt;var&gt;svg&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="8aacc8a54a520b2ac614e1a90f78fb2eedfee11f" translate="yes" xml:space="preserve">
          <source>Add to &lt;var&gt;svg&lt;/var&gt; a circle whose center is at &lt;var&gt;x&lt;/var&gt;/&lt;var&gt;y&lt;/var&gt; and whose radius is &lt;var&gt;radius&lt;/var&gt;.</source>
          <target state="translated">Agregue a &lt;var&gt;svg&lt;/var&gt; un c&amp;iacute;rculo cuyo centro est&amp;eacute; en &lt;var&gt;x&lt;/var&gt; / &lt;var&gt;y&lt;/var&gt; y cuyo radio sea &lt;var&gt;radius&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="4fe52fae4d07b75457a9542137a4b9b5c60d0aef" translate="yes" xml:space="preserve">
          <source>Add to &lt;var&gt;svg&lt;/var&gt; a line that starts at &lt;var&gt;x1&lt;/var&gt;/&lt;var&gt;y1&lt;/var&gt; and extends to &lt;var&gt;x2&lt;/var&gt;/&lt;var&gt;y2&lt;/var&gt;.</source>
          <target state="translated">Agregue a &lt;var&gt;svg&lt;/var&gt; una l&amp;iacute;nea que comience en &lt;var&gt;x1&lt;/var&gt; / &lt;var&gt;y1&lt;/var&gt; y se extienda hasta &lt;var&gt;x2&lt;/var&gt; / &lt;var&gt;y2&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="6a286d1f3e95235d9468003833dcabc092caa2e1" translate="yes" xml:space="preserve">
          <source>Add to &lt;var&gt;svg&lt;/var&gt; a multiple-segment line (a.k.a. &amp;ldquo;polyline&amp;rdquo;) that goes through &lt;var&gt;points&lt;/var&gt;, which is a list of X/Y position pairs.</source>
          <target state="translated">Agregue a &lt;var&gt;svg&lt;/var&gt; una l&amp;iacute;nea de m&amp;uacute;ltiples segmentos (tambi&amp;eacute;n conocida como &quot;polil&amp;iacute;nea&quot;) que pase por &lt;var&gt;points&lt;/var&gt; , que es una lista de pares de posiciones X / Y.</target>
        </trans-unit>
        <trans-unit id="565a0d4084aef376e27a550cb97be439640f51cd" translate="yes" xml:space="preserve">
          <source>Add to &lt;var&gt;svg&lt;/var&gt; a rectangle whose upper left corner is at position &lt;var&gt;x&lt;/var&gt;/&lt;var&gt;y&lt;/var&gt; and whose size is &lt;var&gt;width&lt;/var&gt;/&lt;var&gt;height&lt;/var&gt;.</source>
          <target state="translated">Agregue a &lt;var&gt;svg&lt;/var&gt; un rect&amp;aacute;ngulo cuya esquina superior izquierda est&amp;eacute; en la posici&amp;oacute;n &lt;var&gt;x&lt;/var&gt; / &lt;var&gt;y&lt;/var&gt; y cuyo tama&amp;ntilde;o sea &lt;var&gt;width&lt;/var&gt; / &lt;var&gt;height&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="f117e38663daed515f31d78095890b69b59541be" translate="yes" xml:space="preserve">
          <source>Add to &lt;var&gt;svg&lt;/var&gt; an ellipse whose center is at &lt;var&gt;x&lt;/var&gt;/&lt;var&gt;y&lt;/var&gt;, and whose horizontal radius is &lt;var&gt;x-radius&lt;/var&gt; and the vertical radius is &lt;var&gt;y-radius&lt;/var&gt;.</source>
          <target state="translated">Agregue a &lt;var&gt;svg&lt;/var&gt; una elipse cuyo centro est&amp;aacute; en &lt;var&gt;x&lt;/var&gt; / &lt;var&gt;y&lt;/var&gt; , y cuyo radio horizontal es el radio &lt;var&gt;x-radius&lt;/var&gt; y el radio vertical es el radio &lt;var&gt;y-radius&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="a72995a8fcd466eb526d56641ee9c271fda926c9" translate="yes" xml:space="preserve">
          <source>Adding additional information about a function.</source>
          <target state="translated">Añadir información adicional sobre una función.</target>
        </trans-unit>
        <trans-unit id="8d9d382c9e9984ab00e1fba4ef0f8c1158adf2d5" translate="yes" xml:space="preserve">
          <source>Adding buttons to Emacs buffers.</source>
          <target state="translated">Añadiendo botones a los buffers de Emacs.</target>
        </trans-unit>
        <trans-unit id="53b2f670a3f5ad65cee3f0da686a14d79f042bed" translate="yes" xml:space="preserve">
          <source>Adding clickable buttons to Emacs buffers.</source>
          <target state="translated">Añadiendo botones sobre los que se puede hacer clic a los buffers de Emacs.</target>
        </trans-unit>
        <trans-unit id="4679096d507cd2c89ee536f4f3c0706150098e70" translate="yes" xml:space="preserve">
          <source>Adding new text to a buffer.</source>
          <target state="translated">Añadiendo nuevo texto a un buffer.</target>
        </trans-unit>
        <trans-unit id="95751041c5c1654a609b5b64e61a15f9bddb79a0" translate="yes" xml:space="preserve">
          <source>Adding to the definition of a function.</source>
          <target state="translated">Añadiendo a la definición de una función.</target>
        </trans-unit>
        <trans-unit id="58b99f3d38ede1597b9ac02693be3ab80822e821" translate="yes" xml:space="preserve">
          <source>Adding, subtracting, comparing times, etc.</source>
          <target state="translated">Sumando,restando,comparando tiempos,etc.</target>
        </trans-unit>
        <trans-unit id="500196012d89f448a3af179ba361faa20093707c" translate="yes" xml:space="preserve">
          <source>Additional Options for Displaying Buffers</source>
          <target state="translated">Opciones adicionales para la visualización de los buffers</target>
        </trans-unit>
        <trans-unit id="58c09d8cc944ca4e37be6c32b0108073f18357b2" translate="yes" xml:space="preserve">
          <source>Additional alist entries may be defined in the future.</source>
          <target state="translated">Es posible que en el futuro se definan otras entradas de la lista.</target>
        </trans-unit>
        <trans-unit id="a22e777afc57137b40767d7ea63841431e6d681d" translate="yes" xml:space="preserve">
          <source>Additional customization facilities.</source>
          <target state="translated">Instalaciones adicionales de personalización.</target>
        </trans-unit>
        <trans-unit id="d931ed9a4962a5016c462de8f0c48ae86a47f189" translate="yes" xml:space="preserve">
          <source>Additional flags each character can have.</source>
          <target state="translated">Banderas adicionales que cada personaje puede tener.</target>
        </trans-unit>
        <trans-unit id="94e8d86d4f239006083ee80460e98ca2f47369d1" translate="yes" xml:space="preserve">
          <source>Additional image properties supported for the &lt;code&gt;xbm&lt;/code&gt; image type are:</source>
          <target state="translated">Las propiedades de imagen adicionales admitidas para el tipo de imagen &lt;code&gt;xbm&lt;/code&gt; son:</target>
        </trans-unit>
        <trans-unit id="6431dff5a05dff6ce51567fbc49ea8750d45e21d" translate="yes" xml:space="preserve">
          <source>Additional keypad duplicates of keys ordinarily found elsewhere. Emacs normally translates these into the like-named non-keypad keys.</source>
          <target state="translated">Duplicados de teclado adicionales de teclas que normalmente se encuentran en otros lugares.El Emacs normalmente los traduce a las teclas sin teclado con nombres similares.</target>
        </trans-unit>
        <trans-unit id="6338a470de402714fad49d59e574ee2a004eb402" translate="yes" xml:space="preserve">
          <source>Additional relevant functions for net connections.</source>
          <target state="translated">Funciones adicionales relevantes para las conexiones de la red.</target>
        </trans-unit>
        <trans-unit id="3c7e388f967fe300edc4c7b897df6b058218b157" translate="yes" xml:space="preserve">
          <source>Additional space to leave below each text line, in pixels (a positive integer). See &lt;a href=&quot;line-height#Line-Height&quot;&gt;Line Height&lt;/a&gt;, for more information.</source>
          <target state="translated">Espacio adicional para dejar debajo de cada l&amp;iacute;nea de texto, en p&amp;iacute;xeles (un n&amp;uacute;mero entero positivo). Consulte &lt;a href=&quot;line-height#Line-Height&quot;&gt;Altura de l&amp;iacute;nea&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b1fd54e2342c288944104eeefd68ecbc3f125806" translate="yes" xml:space="preserve">
          <source>Additional typographic style information for the font, such as &amp;lsquo;</source>
          <target state="translated">Informaci&amp;oacute;n adicional de estilo tipogr&amp;aacute;fico para la fuente, como '</target>
        </trans-unit>
        <trans-unit id="ee273060f190cc74f93860343b827ad47759d5a0" translate="yes" xml:space="preserve">
          <source>Additionally, C code can modify the value of variables directly, bypassing the watchpoint mechanism.</source>
          <target state="translated">Además,el código C puede modificar el valor de las variables directamente,pasando por alto el mecanismo de vigilancia.</target>
        </trans-unit>
        <trans-unit id="a8a4e955fb763f3e97efcc9f314ccd7894853f87" translate="yes" xml:space="preserve">
          <source>Additionally, arrange to display &lt;var&gt;doc&lt;/var&gt; along with the docstring of &lt;code&gt;pcase&lt;/code&gt;. By convention, &lt;var&gt;doc&lt;/var&gt; should use &lt;code&gt;EXPVAL&lt;/code&gt; to stand for the result of evaluating &lt;var&gt;expression&lt;/var&gt; (first arg to &lt;code&gt;pcase&lt;/code&gt;).</source>
          <target state="translated">Adem&amp;aacute;s, haga arreglos para mostrar &lt;var&gt;doc&lt;/var&gt; junto con la cadena de &lt;code&gt;pcase&lt;/code&gt; de pcase . Por convenci&amp;oacute;n, &lt;var&gt;doc&lt;/var&gt; deber&amp;iacute;a usar &lt;code&gt;EXPVAL&lt;/code&gt; para representar el resultado de evaluar la &lt;var&gt;expression&lt;/var&gt; (primero arg a &lt;code&gt;pcase&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="21af65202f21fc2dc93653ae03092063c5b61dff" translate="yes" xml:space="preserve">
          <source>Additionally, conflicts can occur:</source>
          <target state="translated">Además,pueden producirse conflictos:</target>
        </trans-unit>
        <trans-unit id="e75498292efb2e16310b12aff15b14972a22b009" translate="yes" xml:space="preserve">
          <source>Additionally, the &lt;var&gt;collection&lt;/var&gt; should generally not be pre-filtered based on the current text between &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt;, because that is the responsibility of the caller of &lt;code&gt;completion-at-point-functions&lt;/code&gt; to do that according to the completion styles it decides to use.</source>
          <target state="translated">Adem&amp;aacute;s, la &lt;var&gt;collection&lt;/var&gt; generalmente no debe filtrarse previamente en funci&amp;oacute;n del texto actual entre el &lt;var&gt;start&lt;/var&gt; y el &lt;var&gt;end&lt;/var&gt; , porque es responsabilidad del llamador de las funciones de &lt;code&gt;completion-at-point-functions&lt;/code&gt; hacerlo de acuerdo con los estilos de finalizaci&amp;oacute;n que decida utilizar.</target>
        </trans-unit>
        <trans-unit id="82ec8503880130af95fe77d33f6e32d8d45be1c7" translate="yes" xml:space="preserve">
          <source>Adjustable Tab Stops</source>
          <target state="translated">La lengüeta ajustable se detiene</target>
        </trans-unit>
        <trans-unit id="cce71d8b4de0fbe7b1d1416d923c41d53c78a09c" translate="yes" xml:space="preserve">
          <source>Adjustable, typewriter-like tab stops.</source>
          <target state="translated">Paradas de pestaña ajustables,como las de una máquina de escribir.</target>
        </trans-unit>
        <trans-unit id="3b315ad397f4b4a0ed97547b767a1277549aaf87" translate="yes" xml:space="preserve">
          <source>Adjusting Point After Commands</source>
          <target state="translated">Ajustar el punto después de los comandos</target>
        </trans-unit>
        <trans-unit id="9a61906e01d69a6bb351e657b21352956d8d32ce" translate="yes" xml:space="preserve">
          <source>Adjustment of point after a command.</source>
          <target state="translated">Ajuste del punto después de una orden.</target>
        </trans-unit>
        <trans-unit id="e59f2f2723f7c1f609f3550bb2671a6cb90986fe" translate="yes" xml:space="preserve">
          <source>Advice and coding conventions for Emacs Lisp.</source>
          <target state="translated">Consejos y convenciones de codificación para Emacs Lisp.</target>
        </trans-unit>
        <trans-unit id="40d1b99315ff674405912fd3cc10e5b67c67dd32" translate="yes" xml:space="preserve">
          <source>Advising Emacs Lisp Functions</source>
          <target state="translated">Aconsejando las funciones de ceceo del Emacs</target>
        </trans-unit>
        <trans-unit id="7d52de2eb6adab7304f81575e610e6fdaba9cc2d" translate="yes" xml:space="preserve">
          <source>Advising Named Functions</source>
          <target state="translated">Aconsejando funciones nombradas</target>
        </trans-unit>
        <trans-unit id="ab277db91341f63fab17a1c61d2a97a801877f92" translate="yes" xml:space="preserve">
          <source>Advising named functions.</source>
          <target state="translated">Aconsejando funciones nombradas.</target>
        </trans-unit>
        <trans-unit id="79ba5e1b3f99abfd54ef8d839ba12bd2ac4d79cb" translate="yes" xml:space="preserve">
          <source>After</source>
          <target state="translated">After</target>
        </trans-unit>
        <trans-unit id="2001d34da0f06a489ff0edce787794897f4aeb55" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;set-text-properties&lt;/code&gt; returns, all the characters in the specified range have identical properties.</source>
          <target state="translated">Despu&amp;eacute;s de que devuelve &lt;code&gt;set-text-properties&lt;/code&gt; , todos los caracteres del rango especificado tienen propiedades id&amp;eacute;nticas.</target>
        </trans-unit>
        <trans-unit id="26622072ea6b71fa07e70b43c76041b80e7e5a30" translate="yes" xml:space="preserve">
          <source>After Emacs changes a file, there are two reasons the changes might not survive later failures of power or media, both having to do with efficiency. First, the operating system might alias written data with data already stored elsewhere on secondary storage until one file or the other is later modified; this will lose both files if the only copy on secondary storage is lost due to media failure. Second, the operating system might not write data to secondary storage immediately, which will lose the data if power is lost.</source>
          <target state="translated">Después de que Emacs cambie un archivo,hay dos razones por las que los cambios podrían no sobrevivir a posteriores fallos de energía o de los medios,ambos relacionados con la eficiencia.En primer lugar,el sistema operativo podría denominar datos escritos con datos ya almacenados en otro lugar en el almacenamiento secundario hasta que uno u otro archivo se modifique más tarde;esto hará que se pierdan ambos archivos si la única copia en el almacenamiento secundario se pierde debido a un fallo de los medios.En segundo lugar,el sistema operativo podría no escribir datos en el almacenamiento secundario inmediatamente,lo cual perdería los datos si se pierde la energía.</target>
        </trans-unit>
        <trans-unit id="9f89518425e409284cb01cc7c3c6a1775a6a510d" translate="yes" xml:space="preserve">
          <source>After Emacs reads your init file, it initializes &lt;code&gt;auto-save-list-file-name&lt;/code&gt; (if you have not already set it non-&lt;code&gt;nil&lt;/code&gt;) based on this prefix, adding the host name and process ID. If you set this to &lt;code&gt;nil&lt;/code&gt; in your init file, then Emacs does not initialize &lt;code&gt;auto-save-list-file-name&lt;/code&gt;.</source>
          <target state="translated">Despu&amp;eacute;s de que Emacs lee su archivo de inicio, inicializa &lt;code&gt;auto-save-list-file-name&lt;/code&gt; (si a&amp;uacute;n no lo ha establecido como no- &lt;code&gt;nil&lt;/code&gt; ) basado en este prefijo, agregando el nombre de host y la ID del proceso. Si establece esto en &lt;code&gt;nil&lt;/code&gt; en su archivo init, entonces Emacs no inicializa &lt;code&gt;auto-save-list-file-name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c6d6ee5d7d9a1dbc90deb665a4ae3ffff4b1c578" translate="yes" xml:space="preserve">
          <source>After Font Lock evaluates &lt;var&gt;pre-form&lt;/var&gt;, it does not search for &lt;var&gt;anchored-matcher&lt;/var&gt; beyond the end of the line. However, if &lt;var&gt;pre-form&lt;/var&gt; returns a buffer position that is greater than the position of point after &lt;var&gt;pre-form&lt;/var&gt; is evaluated, then the position returned by &lt;var&gt;pre-form&lt;/var&gt; is used as the limit of the search instead. It is generally a bad idea to return a position greater than the end of the line; in other words, the &lt;var&gt;anchored-matcher&lt;/var&gt; search should not span lines.</source>
          <target state="translated">Despu&amp;eacute;s de que Font Lock eval&amp;uacute;a el &lt;var&gt;pre-form&lt;/var&gt; ulario , no busca &lt;var&gt;anchored-matcher&lt;/var&gt; m&amp;aacute;s all&amp;aacute; del final de la l&amp;iacute;nea. Sin embargo, si el &lt;var&gt;pre-form&lt;/var&gt; ulario devuelve una posici&amp;oacute;n de b&amp;uacute;fer que es mayor que la posici&amp;oacute;n del punto despu&amp;eacute;s &lt;var&gt;pre-form&lt;/var&gt; se eval&amp;uacute;a el pre-formulario , entonces la posici&amp;oacute;n devuelta por el &lt;var&gt;pre-form&lt;/var&gt; ulario se usa como el l&amp;iacute;mite de la b&amp;uacute;squeda. Generalmente, es una mala idea devolver una posici&amp;oacute;n mayor que el final de la l&amp;iacute;nea; en otras palabras, la b&amp;uacute;squeda de &lt;var&gt;anchored-matcher&lt;/var&gt; no debe abarcar l&amp;iacute;neas.</target>
        </trans-unit>
        <trans-unit id="0d5f3b64280f526c25116915081cc07a4ccb40b7" translate="yes" xml:space="preserve">
          <source>After a &lt;em&gt;synchronous process&lt;/em&gt; is created, Emacs waits for the process to terminate before continuing. Starting Dired on GNU or Unix&lt;a href=&quot;#FOOT21&quot; name=&quot;DOCF21&quot;&gt;&lt;sup&gt;21&lt;/sup&gt;&lt;/a&gt; is an example of this: it runs &lt;code&gt;ls&lt;/code&gt; in a synchronous process, then modifies the output slightly. Because the process is synchronous, the entire directory listing arrives in the buffer before Emacs tries to do anything with it.</source>
          <target state="translated">Despu&amp;eacute;s de &lt;em&gt;que&lt;/em&gt; se crea un &lt;em&gt;proceso s&amp;iacute;ncrono&lt;/em&gt; , Emacs espera que el proceso termine antes de continuar. Iniciar Dired en GNU o Unix &lt;a href=&quot;#FOOT21&quot; name=&quot;DOCF21&quot;&gt;&lt;sup&gt;21&lt;/sup&gt;&lt;/a&gt; es un ejemplo de esto: ejecuta &lt;code&gt;ls&lt;/code&gt; en un proceso sincr&amp;oacute;nico, luego modifica ligeramente la salida. Debido a que el proceso es s&amp;iacute;ncrono, la lista completa de directorios llega al b&amp;uacute;fer antes de que Emacs intente hacer algo con &amp;eacute;l.</target>
        </trans-unit>
        <trans-unit id="79d05caca5759ed0ecaf87a1fc890988221544d6" translate="yes" xml:space="preserve">
          <source>After adding this advice, if you call &lt;code&gt;my-double&lt;/code&gt; with &amp;lsquo;</source>
          <target state="translated">Despu&amp;eacute;s de agregar este consejo, si llamas a &lt;code&gt;my-double&lt;/code&gt; con '</target>
        </trans-unit>
        <trans-unit id="b482ecda0086b5db531f75dfdba2467dc5429ef2" translate="yes" xml:space="preserve">
          <source>After an inline function is defined, its inline expansion can be performed later on in the same file, just like macros.</source>
          <target state="translated">Después de definir una función en línea,su expansión en línea puede realizarse más tarde en el mismo archivo,al igual que las macros.</target>
        </trans-unit>
        <trans-unit id="1711c03422a1600eb8ad808ec0bc8cf24123cdd2" translate="yes" xml:space="preserve">
          <source>After defining &lt;var&gt;name&lt;/var&gt; in this way, you can use it as the &lt;var&gt;test&lt;/var&gt; argument in &lt;code&gt;make-hash-table&lt;/code&gt;. When you do that, the hash table will use &lt;var&gt;test-fn&lt;/var&gt; to compare key values, and &lt;var&gt;hash-fn&lt;/var&gt; to compute a hash code from a key value.</source>
          <target state="translated">Despu&amp;eacute;s de definir el &lt;var&gt;name&lt;/var&gt; de esta manera, puede usarlo como argumento de &lt;var&gt;test&lt;/var&gt; en &lt;code&gt;make-hash-table&lt;/code&gt; . Cuando haga eso, la tabla hash usar&amp;aacute; &lt;var&gt;test-fn&lt;/var&gt; para comparar valores clave y &lt;var&gt;hash-fn&lt;/var&gt; para calcular un c&amp;oacute;digo hash a partir de un valor clave.</target>
        </trans-unit>
        <trans-unit id="cb84be952166d7a786e0f5810ef1b95aefca141b" translate="yes" xml:space="preserve">
          <source>After executing the body of the handler, the &lt;code&gt;condition-case&lt;/code&gt; returns normally, using the value of the last form in the handler body as the overall value.</source>
          <target state="translated">Despu&amp;eacute;s de ejecutar el cuerpo del manejador, &lt;code&gt;condition-case&lt;/code&gt; regresa normalmente, usando el valor de la &amp;uacute;ltima forma en el cuerpo del manejador como valor general.</target>
        </trans-unit>
        <trans-unit id="4dcf95c5a0c487e8209e489fa588abd672d9e8b8" translate="yes" xml:space="preserve">
          <source>After execution of the handler body, execution returns from the &lt;code&gt;condition-case&lt;/code&gt; form. Because the protected form is exited completely before execution of the handler, the handler cannot resume execution at the point of the error, nor can it examine variable bindings that were made within the protected form. All it can do is clean up and proceed.</source>
          <target state="translated">Despu&amp;eacute;s de la ejecuci&amp;oacute;n del cuerpo del manejador, la ejecuci&amp;oacute;n regresa del formulario de &lt;code&gt;condition-case&lt;/code&gt; . Dado que el formulario protegido se sale completamente antes de la ejecuci&amp;oacute;n del controlador, el controlador no puede reanudar la ejecuci&amp;oacute;n en el punto del error, ni puede examinar los enlaces de variables que se realizaron dentro del formulario protegido. Todo lo que puede hacer es limpiar y continuar.</target>
        </trans-unit>
        <trans-unit id="f9f96cc122b695225532f65f8c1dc5af1dd81ad0" translate="yes" xml:space="preserve">
          <source>After installation, the installed package is &lt;em&gt;loaded&lt;/em&gt;: Emacs adds the package&amp;rsquo;s content directory to &lt;code&gt;load-path&lt;/code&gt;, and evaluates the autoload definitions in</source>
          <target state="translated">Despu&amp;eacute;s de la instalaci&amp;oacute;n, se &lt;em&gt;carga el&lt;/em&gt; paquete instalado : Emacs agrega el directorio de contenido del paquete a &lt;code&gt;load-path&lt;/code&gt; y eval&amp;uacute;a las definiciones de carga autom&amp;aacute;tica en</target>
        </trans-unit>
        <trans-unit id="7d8f54422101c3e253d2eea8938b01fa0aa88a65" translate="yes" xml:space="preserve">
          <source>After moving point, you may wish to jump back to the stop point. You can do that with</source>
          <target state="translated">Después del punto de movimiento,puede que desee saltar de nuevo al punto de parada.Puedes hacerlo con</target>
        </trans-unit>
        <trans-unit id="70f30068f24e099728f9220f33c66de8c45b3661" translate="yes" xml:space="preserve">
          <source>After selecting</source>
          <target state="translated">Después de seleccionar</target>
        </trans-unit>
        <trans-unit id="6b47650b2f0eeaae057157d2f6dba970bba4bcc2" translate="yes" xml:space="preserve">
          <source>After substitution, if a &amp;lsquo;</source>
          <target state="translated">Despu&amp;eacute;s de la sustituci&amp;oacute;n, si un '</target>
        </trans-unit>
        <trans-unit id="11efe5f0fdddc5460cc69a92a923925429424bb2" translate="yes" xml:space="preserve">
          <source>After switching windows or buffers, and in some other cases, if the window start is in the middle of a line, Emacs adjusts the window start to the start of a line. This prevents certain operations from leaving the window start at a meaningless point within a line. This feature may interfere with testing some Lisp code by executing it using the commands of Lisp mode, because they trigger this readjustment. To test such code, put it into a command and bind the command to a key.</source>
          <target state="translated">Después de cambiar de ventana o de buffer,y en algunos otros casos,si el inicio de la ventana está en medio de una línea,Emacs ajusta el inicio de la ventana al inicio de una línea.Esto evita que ciertas operaciones dejen el inicio de ventana en un punto sin sentido dentro de una línea.Esta característica puede interferir con la prueba de algún código de Lisp al ejecutarlo utilizando los comandos del modo Lisp,porque desencadenan este reajuste.Para probar dicho código,póngalo en un comando y vincule el comando a una tecla.</target>
        </trans-unit>
        <trans-unit id="495827ab1d768e91f37fdef6604e6f5836895698" translate="yes" xml:space="preserve">
          <source>After that, &lt;var&gt;body&lt;/var&gt; is executed, and the connection-local variables are unwound. Example:</source>
          <target state="translated">Despu&amp;eacute;s de eso, se ejecuta &lt;var&gt;body&lt;/var&gt; y se desenrollan las variables locales de conexi&amp;oacute;n. Ejemplo:</target>
        </trans-unit>
        <trans-unit id="6ba43c834d967b77f336f5c21c19c92d28a6987a" translate="yes" xml:space="preserve">
          <source>After the &amp;lsquo;</source>
          <target state="translated">Despu&amp;eacute;s de la '</target>
        </trans-unit>
        <trans-unit id="d9009ae4cb68e38ac581c27d4e2acc4e2c297d9b" translate="yes" xml:space="preserve">
          <source>After the call to the &lt;code&gt;DEFUN&lt;/code&gt; macro, you must write the argument list for the C function, including the types for the arguments. If the primitive accepts a fixed maximum number of Lisp arguments, there must be one C argument for each Lisp argument, and each argument must be of type &lt;code&gt;Lisp_Object&lt;/code&gt;. (Various macros and functions for creating values of type &lt;code&gt;Lisp_Object&lt;/code&gt; are declared in the file</source>
          <target state="translated">Despu&amp;eacute;s de la llamada a la macro &lt;code&gt;DEFUN&lt;/code&gt; , debe escribir la lista de argumentos para la funci&amp;oacute;n C, incluidos los tipos de los argumentos. Si la primitiva acepta un n&amp;uacute;mero m&amp;aacute;ximo fijo de argumentos Lisp, debe haber un argumento C para cada argumento Lisp, y cada argumento debe ser de tipo &lt;code&gt;Lisp_Object&lt;/code&gt; . (Varias macros y funciones para crear valores de tipo &lt;code&gt;Lisp_Object&lt;/code&gt; se declaran en el archivo</target>
        </trans-unit>
        <trans-unit id="33d79aff6f896ac6094c3c7ab2c4138388d48ec5" translate="yes" xml:space="preserve">
          <source>After the command loop has translated a key sequence into a command, it invokes that command using the function &lt;code&gt;command-execute&lt;/code&gt;. If the command is a function, &lt;code&gt;command-execute&lt;/code&gt; calls &lt;code&gt;call-interactively&lt;/code&gt;, which reads the arguments and calls the command. You can also call these functions yourself.</source>
          <target state="translated">Despu&amp;eacute;s de que el ciclo de comando ha traducido una secuencia de teclas en un comando, invoca ese comando usando la funci&amp;oacute;n &lt;code&gt;command-execute&lt;/code&gt; . Si el comando es una funci&amp;oacute;n, &lt;code&gt;command-execute&lt;/code&gt; llama a &lt;code&gt;call-interactively&lt;/code&gt; , que lee los argumentos y llama al comando. Tambi&amp;eacute;n puede llamar a estas funciones usted mismo.</target>
        </trans-unit>
        <trans-unit id="eb00eb8abe509aa0e806964b17e030d795a6dcae" translate="yes" xml:space="preserve">
          <source>After the file has been loaded, the symbol should have a new function definition that is not an autoload object. The new definition is then called as if it had been there to begin with. From the user&amp;rsquo;s point of view, the function call works as expected, using the function definition in the loaded file.</source>
          <target state="translated">Una vez que se ha cargado el archivo, el s&amp;iacute;mbolo debe tener una nueva definici&amp;oacute;n de funci&amp;oacute;n que no sea un objeto de carga autom&amp;aacute;tica. La nueva definici&amp;oacute;n se llama entonces como si hubiera estado all&amp;iacute; desde el principio. Desde el punto de vista del usuario, la llamada a la funci&amp;oacute;n funciona como se esperaba, utilizando la definici&amp;oacute;n de funci&amp;oacute;n en el archivo cargado.</target>
        </trans-unit>
        <trans-unit id="5e64aa108dd56236b255a2bfaa30873fae10d663" translate="yes" xml:space="preserve">
          <source>After the lines are joined, the function &lt;code&gt;fixup-whitespace&lt;/code&gt; is responsible for deciding whether to leave a space at the junction.</source>
          <target state="translated">Despu&amp;eacute;s de unir las l&amp;iacute;neas, la funci&amp;oacute;n &lt;code&gt;fixup-whitespace&lt;/code&gt; es responsable de decidir si dejar un espacio en la uni&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="8028d1d381d5b478f2dffeace51ce5901d720198" translate="yes" xml:space="preserve">
          <source>After the terminal is initialized, this is set to the terminal-specific initialization function.</source>
          <target state="translated">Después de la inicialización de la terminal,se establece la función de inicialización específica de la terminal.</target>
        </trans-unit>
        <trans-unit id="c2df18475dff27329715d9ae9944a0845bdbbdd4" translate="yes" xml:space="preserve">
          <source>After these mandatory arguments follow the keyword arguments. The most important is &lt;code&gt;:type&lt;/code&gt;, which describes the data type we want to match with this widget. Here a &lt;code&gt;binary-tree-of-string&lt;/code&gt; is described as being either a string, or a cons-cell whose car and cdr are themselves both &lt;code&gt;binary-tree-of-string&lt;/code&gt;. Note the reference to the widget type we are currently in the process of defining. The &lt;code&gt;:tag&lt;/code&gt; attribute is a string to name the widget in the user interface, and the &lt;code&gt;:offset&lt;/code&gt; argument is there to ensure that child nodes are indented four spaces relative to the parent node, making the tree structure apparent in the customization buffer.</source>
          <target state="translated">Despu&amp;eacute;s de estos argumentos obligatorios siguen los argumentos de la palabra clave. El m&amp;aacute;s importante es &lt;code&gt;:type&lt;/code&gt; , que describe el tipo de datos que queremos hacer coincidir con este widget. Aqu&amp;iacute;, un &lt;code&gt;binary-tree-of-string&lt;/code&gt; se describe como una cadena, o como una contra-celda cuyo coche y cdr son ambos &lt;code&gt;binary-tree-of-string&lt;/code&gt; . Tenga en cuenta la referencia al tipo de widget que estamos actualmente en el proceso de definir. El atributo &lt;code&gt;:tag&lt;/code&gt; es una cadena para nombrar el widget en la interfaz de usuario, y el argumento &lt;code&gt;:offset&lt;/code&gt; est&amp;aacute; ah&amp;iacute; para garantizar que los nodos secundarios est&amp;eacute;n sangrados con cuatro espacios en relaci&amp;oacute;n con el nodo principal, lo que hace que la estructura del &amp;aacute;rbol sea evidente en el b&amp;uacute;fer de personalizaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="fdf9c94744bf9492e6805756a0c97707a0c90bae" translate="yes" xml:space="preserve">
          <source>After writing your C code for a module function, you should make a Lisp function object from it using the &lt;code&gt;make_function&lt;/code&gt; function, whose pointer is provided in the environment (recall that the pointer to the environment is returned by &lt;code&gt;get_environment&lt;/code&gt;). This is normally done in the module initialization function (see &lt;a href=&quot;module-initialization#module-initialization-function&quot;&gt;module initialization function&lt;/a&gt;), after verifying the</source>
          <target state="translated">Despu&amp;eacute;s de escribir su c&amp;oacute;digo C para una funci&amp;oacute;n de m&amp;oacute;dulo, debe crear un objeto de funci&amp;oacute;n Lisp usando la funci&amp;oacute;n &lt;code&gt;make_function&lt;/code&gt; , cuyo puntero se proporciona en el entorno (recuerde que el puntero al entorno es devuelto por &lt;code&gt;get_environment&lt;/code&gt; ). Esto normalmente se hace en la funci&amp;oacute;n de inicializaci&amp;oacute;n del m&amp;oacute;dulo (ver &lt;a href=&quot;module-initialization#module-initialization-function&quot;&gt;funci&amp;oacute;n de inicializaci&amp;oacute;n del m&amp;oacute;dulo&lt;/a&gt; ), despu&amp;eacute;s de verificar la</target>
        </trans-unit>
        <trans-unit id="01273641f1108e9334b3ff2f2de5aac2328b0349" translate="yes" xml:space="preserve">
          <source>After you activate the change group, any changes you make in that buffer become part of it. Once you have made all the desired changes in the buffer, you must &lt;em&gt;finish&lt;/em&gt; the change group. There are two ways to do this: you can either accept (and finalize) all the changes, or cancel them all.</source>
          <target state="translated">Despu&amp;eacute;s de activar el grupo de cambios, cualquier cambio que realice en ese b&amp;uacute;fer pasa a formar parte de &amp;eacute;l. Una vez que haya realizado todos los cambios deseados en el b&amp;uacute;fer, debe &lt;em&gt;finalizar&lt;/em&gt; el grupo de cambios. Hay dos formas de hacer esto: puede aceptar (y finalizar) todos los cambios o cancelarlos todos.</target>
        </trans-unit>
        <trans-unit id="156a361715177a7a195a547edfc720451b956bc1" translate="yes" xml:space="preserve">
          <source>After you create an archive, remember that it is not accessible in the Package Menu interface unless it is in &lt;code&gt;package-archives&lt;/code&gt;.</source>
          <target state="translated">Despu&amp;eacute;s de crear un archivo, recuerde que no es accesible en la interfaz del men&amp;uacute; de paquetes a menos que est&amp;eacute; en &lt;code&gt;package-archives&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e6177c7642a19bf3ac0b659b32ac63c9a38ada82" translate="yes" xml:space="preserve">
          <source>After you think you have fixed the problem, use</source>
          <target state="translated">Después de que pienses que has arreglado el problema,usa</target>
        </trans-unit>
        <trans-unit id="26afb7a30b02ada3701025dcae553b3342d65c03" translate="yes" xml:space="preserve">
          <source>Alias Menu Items</source>
          <target state="translated">Elementos del menú de Alias</target>
        </trans-unit>
        <trans-unit id="4ecfd05f5c4a9c12f77ec0ab644b70282ba9ee84" translate="yes" xml:space="preserve">
          <source>Alist with elements</source>
          <target state="translated">Alistarse con los elementos</target>
        </trans-unit>
        <trans-unit id="4a7098b2dd254466abcb5233fdc2c39c1c9bc767" translate="yes" xml:space="preserve">
          <source>Alists for fine-tuning buffer display.</source>
          <target state="translated">Alistas para ajustar la visualización del buffer.</target>
        </trans-unit>
        <trans-unit id="6a72085653e4c5be8c7640c868ef787cbcf063d1" translate="yes" xml:space="preserve">
          <source>All</source>
          <target state="translated">All</target>
        </trans-unit>
        <trans-unit id="a745dcd86b59cafb3c0ca3bc7c385a6602657fcf" translate="yes" xml:space="preserve">
          <source>All &lt;var&gt;exp&lt;/var&gt;s are evaluated first, after which they are matched against their respective &lt;var&gt;pattern&lt;/var&gt;, introducing new variable bindings that can then be used inside &lt;var&gt;body&lt;/var&gt;. The variable bindings are produced by destructuring binding of elements of &lt;var&gt;pattern&lt;/var&gt; to the values of the corresponding elements of the evaluated &lt;var&gt;exp&lt;/var&gt;.</source>
          <target state="translated">Todos los &lt;var&gt;exp&lt;/var&gt; s se eval&amp;uacute;an primero, despu&amp;eacute;s de lo cual se comparan con su &lt;var&gt;pattern&lt;/var&gt; respectivo , introduciendo nuevos enlaces de variables que luego se pueden usar dentro del &lt;var&gt;body&lt;/var&gt; . Las vinculaciones de variables se producen desestructurando la vinculaci&amp;oacute;n de elementos de &lt;var&gt;pattern&lt;/var&gt; a los valores de los elementos correspondientes de la &lt;var&gt;exp&lt;/var&gt; evaluada .</target>
        </trans-unit>
        <trans-unit id="aa4b6e4b0a07d4d70f84e83caad6fff48d32fad3" translate="yes" xml:space="preserve">
          <source>All Emacs Lisp arrays are one-dimensional. (Most other programming languages support multidimensional arrays, but they are not essential; you can get the same effect with nested one-dimensional arrays.) Each type of array has its own read syntax; see the following sections for details.</source>
          <target state="translated">Todas las matrices Emacs Lisp son unidimensionales.(La mayoría de los otros lenguajes de programación soportan matrices multidimensionales,pero no son esenciales;puedes obtener el mismo efecto con matrices unidimensionales anidadas).Cada tipo de matriz tiene su propia sintaxis de lectura;ver las siguientes secciones para más detalles.</target>
        </trans-unit>
        <trans-unit id="78dab1ef3770dfe21362526370a14bdcd828cdca" translate="yes" xml:space="preserve">
          <source>All arguments are instrumented for evaluation.</source>
          <target state="translated">Todos los argumentos están instrumentados para la evaluación.</target>
        </trans-unit>
        <trans-unit id="b6a1d847b868b0a62fa982b38796821b2fb0c23f" translate="yes" xml:space="preserve">
          <source>All arguments are numbers. Floating-point arguments can be tricky, because floating-point arithmetic is inexact. For instance, depending on the machine, it may quite well happen that &lt;code&gt;(number-sequence 0.4 0.6 0.2)&lt;/code&gt; returns the one element list &lt;code&gt;(0.4)&lt;/code&gt;, whereas &lt;code&gt;(number-sequence 0.4 0.8 0.2)&lt;/code&gt; returns a list with three elements. The &lt;var&gt;n&lt;/var&gt;th element of the list is computed by the exact formula &lt;code&gt;(+ &lt;var&gt;from&lt;/var&gt; (* &lt;var&gt;n&lt;/var&gt; &lt;var&gt;separation&lt;/var&gt;))&lt;/code&gt;. Thus, if one wants to make sure that &lt;var&gt;to&lt;/var&gt; is included in the list, one can pass an expression of this exact type for &lt;var&gt;to&lt;/var&gt;. Alternatively, one can replace &lt;var&gt;to&lt;/var&gt; with a slightly larger value (or a slightly more negative value if &lt;var&gt;separation&lt;/var&gt; is negative).</source>
          <target state="translated">Todos los argumentos son n&amp;uacute;meros. Los argumentos de coma flotante pueden ser complicados, porque la aritm&amp;eacute;tica de coma flotante es inexacta. Por ejemplo, dependiendo de la m&amp;aacute;quina, puede suceder que &lt;code&gt;(number-sequence 0.4 0.6 0.2)&lt;/code&gt; devuelva la lista de un elemento &lt;code&gt;(0.4)&lt;/code&gt; , mientras que &lt;code&gt;(number-sequence 0.4 0.8 0.2)&lt;/code&gt; devuelva una lista con tres elementos. El &lt;var&gt;n&lt;/var&gt; - &amp;eacute;simo elemento de la lista se calcula mediante la f&amp;oacute;rmula exacta &lt;code&gt;(+ &lt;var&gt;from&lt;/var&gt; (* &lt;var&gt;n&lt;/var&gt; &lt;var&gt;separation&lt;/var&gt;))&lt;/code&gt; . Por lo tanto, si uno quiere asegurarse de que &lt;var&gt;to&lt;/var&gt; est&amp;eacute; incluido en la lista, puede pasar una expresi&amp;oacute;n de este tipo exacto para &lt;var&gt;to&lt;/var&gt; . Alternativamente, uno puede reemplazar &lt;var&gt;to&lt;/var&gt; con un valor ligeramente mayor (o un valor ligeramente m&amp;aacute;s negativo si la &lt;var&gt;separation&lt;/var&gt; es negativa).</target>
        </trans-unit>
        <trans-unit id="2208c34161ce80d7a782807d1e4cec6e6a7dd001" translate="yes" xml:space="preserve">
          <source>All breakpoints in a definition are forgotten each time you reinstrument it. If you wish to make a breakpoint that won&amp;rsquo;t be forgotten, you can write a &lt;em&gt;source breakpoint&lt;/em&gt;, which is simply a call to the function &lt;code&gt;edebug&lt;/code&gt; in your source code. You can, of course, make such a call conditional. For example, in the &lt;code&gt;fac&lt;/code&gt; function, you can insert the first line as shown below, to stop when the argument reaches zero:</source>
          <target state="translated">Todos los puntos de interrupci&amp;oacute;n de una definici&amp;oacute;n se olvidan cada vez que la reinstruye. Si desea crear un punto de interrupci&amp;oacute;n que no se olvide, puede escribir un &lt;em&gt;punto de interrupci&amp;oacute;n de la fuente&lt;/em&gt; , que es simplemente una llamada a la funci&amp;oacute;n &lt;code&gt;edebug&lt;/code&gt; en su c&amp;oacute;digo fuente. Por supuesto, puede hacer que dicha llamada sea condicional. Por ejemplo, en la funci&amp;oacute;n &lt;code&gt;fac&lt;/code&gt; , puede insertar la primera l&amp;iacute;nea como se muestra a continuaci&amp;oacute;n, para que se detenga cuando el argumento llegue a cero:</target>
        </trans-unit>
        <trans-unit id="9bb2b7fe1708d34d491b12dd030e589c31b4ac12" translate="yes" xml:space="preserve">
          <source>All built-in functions do check the types of their actual arguments when appropriate, and signal a &lt;code&gt;wrong-type-argument&lt;/code&gt; error if an argument is of the wrong type. For example, here is what happens if you pass an argument to &lt;code&gt;+&lt;/code&gt; that it cannot handle:</source>
          <target state="translated">Todas las funciones integradas verifican los tipos de sus argumentos reales cuando es apropiado y se&amp;ntilde;alan un &lt;code&gt;wrong-type-argument&lt;/code&gt; incorrecto si un argumento es del tipo incorrecto. Por ejemplo, esto es lo que sucede si le pasa un argumento a &lt;code&gt;+&lt;/code&gt; que no puede manejar:</target>
        </trans-unit>
        <trans-unit id="0a8b2cb5ecd2f67ffd2840d4654471062074ad24" translate="yes" xml:space="preserve">
          <source>All buttons have a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;button&lt;/code&gt; property, which may be useful in finding regions of text that comprise buttons (which is what the standard button functions do).</source>
          <target state="translated">Todos los botones tienen una propiedad de &lt;code&gt;button&lt;/code&gt; no es &lt;code&gt;nil&lt;/code&gt; , que puede ser &amp;uacute;til para buscar regiones de texto que comprenden botones (que es lo que hacen las funciones de bot&amp;oacute;n est&amp;aacute;ndar).</target>
        </trans-unit>
        <trans-unit id="0de9e1669bff9ffa03c0a6b06c8fc7f25b299da9" translate="yes" xml:space="preserve">
          <source>All command loops, including recursive ones, set up all-purpose error handlers so that an error in a command run from the command loop will not exit the loop.</source>
          <target state="translated">Todos los bucles de comandos,incluidos los recursivos,establecen manejadores de error polivalentes para que un error en un comando ejecutado desde el bucle de comandos no salga del bucle.</target>
        </trans-unit>
        <trans-unit id="2bf532e176c9ef15e8a341ec22d44645c0ae9a2a" translate="yes" xml:space="preserve">
          <source>All connection-local variables, which are specified by &lt;code&gt;default-directory&lt;/code&gt;, are applied.</source>
          <target state="translated">Se aplican todas las variables de conexi&amp;oacute;n local, que se especifican en &lt;code&gt;default-directory&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e7f6062bb49c083289ef91ea0670a9dad56b4214" translate="yes" xml:space="preserve">
          <source>All customization types are implemented as widgets; see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/widget/index.html#Top&quot;&gt;Introduction&lt;/a&gt; in</source>
          <target state="translated">Todos los tipos de personalizaci&amp;oacute;n se implementan como widgets; ver &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/widget/index.html#Top&quot;&gt;Introducci&amp;oacute;n&lt;/a&gt; en</target>
        </trans-unit>
        <trans-unit id="dca342b020ceabede3de91c0d8473d75e1b019c2" translate="yes" xml:space="preserve">
          <source>All following elements in the specification list are optional; as soon as one does not match, Edebug stops matching at this level.</source>
          <target state="translated">Todos los siguientes elementos de la lista de especificaciones son opcionales;tan pronto como uno no coincida,Edebug deja de coincidir en este nivel.</target>
        </trans-unit>
        <trans-unit id="2c01d7a4983336c611392d0fc00fd2b83de2bc6d" translate="yes" xml:space="preserve">
          <source>All following elements in the specification list are repeated zero or more times. In the last repetition, however, it is not a problem if the expression runs out before matching all of the elements of the specification list.</source>
          <target state="translated">Todos los siguientes elementos de la lista de especificaciones se repiten cero o más veces.En la última repetición,sin embargo,no es un problema si la expresión se agota antes de coincidir con todos los elementos de la lista de especificaciones.</target>
        </trans-unit>
        <trans-unit id="25b37db993c79b5143fd020bfa5984f4943de615" translate="yes" xml:space="preserve">
          <source>All four kinds of array share these characteristics:</source>
          <target state="translated">Los cuatro tipos de arreglos comparten estas características:</target>
        </trans-unit>
        <trans-unit id="b65738468b638316e78cf6dcd55faa5077ce8a18" translate="yes" xml:space="preserve">
          <source>All functions defined in this library are free of side-effects; i.e., they do not modify any sequence (list, vector, or string) that you pass as an argument. Unless otherwise stated, the result is a sequence of the same type as the input. For those functions that take a predicate, this should be a function of one argument.</source>
          <target state="translated">Todas las funciones definidas en esta biblioteca están libres de efectos secundarios;es decir,no modifican ninguna secuencia (lista,vector o cadena)que se pase como argumento.A menos que se indique lo contrario,el resultado es una secuencia del mismo tipo que la entrada.En el caso de las funciones que toman un predicado,éste debe ser una función de un argumento.</target>
        </trans-unit>
        <trans-unit id="c71e30856d625975a83aead946dd7f4e5c8c274a" translate="yes" xml:space="preserve">
          <source>All functions that create markers without accepting an argument that specifies the insertion type, create them with insertion type &lt;code&gt;nil&lt;/code&gt; (see &lt;a href=&quot;creating-markers#Creating-Markers&quot;&gt;Creating Markers&lt;/a&gt;). Also, the mark has, by default, insertion type &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Todas las funciones que crean marcadores sin aceptar un argumento que especifique el tipo de inserci&amp;oacute;n, cr&amp;eacute;elos con el tipo de inserci&amp;oacute;n &lt;code&gt;nil&lt;/code&gt; (ver &lt;a href=&quot;creating-markers#Creating-Markers&quot;&gt;Creaci&amp;oacute;n de marcadores&lt;/a&gt; ). Adem&amp;aacute;s, la marca tiene, por defecto, tipo de inserci&amp;oacute;n &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7e5df34fc50a10cee1104c398dc0d288148f5677" translate="yes" xml:space="preserve">
          <source>All numbers can be compared with &lt;code&gt;eql&lt;/code&gt; or &lt;code&gt;=&lt;/code&gt;; fixnums can also be compared with &lt;code&gt;eq&lt;/code&gt;. To test whether an integer is a fixnum or a bignum, you can compare it to &lt;code&gt;most-negative-fixnum&lt;/code&gt; and &lt;code&gt;most-positive-fixnum&lt;/code&gt;, or you can use the convenience predicates &lt;code&gt;fixnump&lt;/code&gt; and &lt;code&gt;bignump&lt;/code&gt; on any object.</source>
          <target state="translated">Todos los n&amp;uacute;meros se pueden comparar con &lt;code&gt;eql&lt;/code&gt; o &lt;code&gt;=&lt;/code&gt; ; fixnums tambi&amp;eacute;n se puede comparar con &lt;code&gt;eq&lt;/code&gt; . Para probar si un entero es un fixnum o un bignum, puede compararlo con &lt;code&gt;most-negative-fixnum&lt;/code&gt; y &lt;code&gt;most-positive-fixnum&lt;/code&gt; , o puede usar los predicados de conveniencia &lt;code&gt;fixnump&lt;/code&gt; y &lt;code&gt;bignump&lt;/code&gt; en cualquier objeto.</target>
        </trans-unit>
        <trans-unit id="c2c85ce8bd7457b271669cf5c05e295e1385ce6f" translate="yes" xml:space="preserve">
          <source>All of the &lt;var&gt;value-form&lt;/var&gt;s in &lt;var&gt;bindings&lt;/var&gt; are evaluated in the order they appear and &lt;em&gt;before&lt;/em&gt; binding any of the symbols to them. Here is an example of this: &lt;code&gt;z&lt;/code&gt; is bound to the old value of &lt;code&gt;y&lt;/code&gt;, which is 2, not the new value of &lt;code&gt;y&lt;/code&gt;, which is 1.</source>
          <target state="translated">Todas las &lt;var&gt;value-form&lt;/var&gt; en las &lt;var&gt;bindings&lt;/var&gt; se eval&amp;uacute;an en el orden en que aparecen y &lt;em&gt;antes de&lt;/em&gt; vincularlas con cualquiera de los s&amp;iacute;mbolos. Aqu&amp;iacute; hay un ejemplo de esto: &lt;code&gt;z&lt;/code&gt; est&amp;aacute; vinculado al antiguo valor de &lt;code&gt;y&lt;/code&gt; , que es 2, no al nuevo valor de &lt;code&gt;y&lt;/code&gt; , que es 1.</target>
        </trans-unit>
        <trans-unit id="cb57c7da298437e1c1c392f0acf73eba41691d75" translate="yes" xml:space="preserve">
          <source>All of the deletion functions operate on the current buffer.</source>
          <target state="translated">Todas las funciones de borrado funcionan con el buffer actual.</target>
        </trans-unit>
        <trans-unit id="af4a5a5cd065f9f5dbe42b33024e60fb527b8391" translate="yes" xml:space="preserve">
          <source>All of the functions described below are actually &lt;em&gt;function pointers&lt;/em&gt; provided via the pointer to the environment which every module function accepts. Therefore, module code should call these functions through the environment pointer, like this:</source>
          <target state="translated">Todas las funciones descritas a continuaci&amp;oacute;n son en realidad &lt;em&gt;punteros de funci&amp;oacute;n&lt;/em&gt; proporcionados a trav&amp;eacute;s del puntero al entorno que acepta cada funci&amp;oacute;n del m&amp;oacute;dulo. Por lo tanto, el c&amp;oacute;digo del m&amp;oacute;dulo debe llamar a estas funciones a trav&amp;eacute;s del puntero de entorno, as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="2486aadd4696b33394cf13a628e5e81f8336dc69" translate="yes" xml:space="preserve">
          <source>All of these keywords, except &lt;code&gt;:tag&lt;/code&gt;, can be used more than once in a given item. Each use of the keyword has an independent effect. The keyword &lt;code&gt;:tag&lt;/code&gt; is an exception because any given item can only display one name.</source>
          <target state="translated">Todas estas palabras clave, excepto &lt;code&gt;:tag&lt;/code&gt; , se pueden utilizar m&amp;aacute;s de una vez en un elemento determinado. Cada uso de la palabra clave tiene un efecto independiente. La palabra clave &lt;code&gt;:tag&lt;/code&gt; es una excepci&amp;oacute;n porque cualquier elemento dado solo puede mostrar un nombre.</target>
        </trans-unit>
        <trans-unit id="7c58a8aa90e29eb8cc586744cbf0bae2b76d1c9b" translate="yes" xml:space="preserve">
          <source>All the Emacs primitives for file access and file name transformation check the given file name against &lt;code&gt;file-name-handler-alist&lt;/code&gt;. If the file name matches &lt;var&gt;regexp&lt;/var&gt;, the primitives handle that file by calling &lt;var&gt;handler&lt;/var&gt;.</source>
          <target state="translated">Todas las primitivas de Emacs para el acceso a archivos y la transformaci&amp;oacute;n de nombres de archivos comprueban el nombre de archivo dado &lt;code&gt;file-name-handler-alist&lt;/code&gt; nombre de archivo . Si el nombre del archivo coincide con &lt;var&gt;regexp&lt;/var&gt; , las primitivas manejan ese archivo llamando a &lt;var&gt;handler&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="9a0d1e07e928a09c5cfab793d66c3b83e32a68e0" translate="yes" xml:space="preserve">
          <source>All the buffer properties that are related to the buffer text are swapped as well: the positions of point and mark, all the markers, the overlays, the text properties, the undo list, the value of the &lt;code&gt;enable-multibyte-characters&lt;/code&gt; flag (see &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;enable-multibyte-characters&lt;/a&gt;), etc.</source>
          <target state="translated">Todas las propiedades del b&amp;uacute;fer que est&amp;aacute;n relacionadas con el texto del b&amp;uacute;fer tambi&amp;eacute;n se intercambian: las posiciones del punto y la marca, todos los marcadores, las superposiciones, las propiedades del texto, la lista de deshacer, el valor de la marca &lt;code&gt;enable-multibyte-characters&lt;/code&gt; (ver &lt;a href=&quot;text-representations#Text-Representations&quot;&gt;enable-multibyte-characters&lt;/a&gt; ), etc.</target>
        </trans-unit>
        <trans-unit id="41d1c4b0b8ba4df658a7d43aad707edd6505e753" translate="yes" xml:space="preserve">
          <source>All the directories in the file system form a tree starting at the root directory. A file name can specify all the directory names starting from the root of the tree; then it is called an &lt;em&gt;absolute&lt;/em&gt; file name. Or it can specify the position of the file in the tree relative to a default directory; then it is called a &lt;em&gt;relative&lt;/em&gt; file name. On GNU and other POSIX-like systems, after any leading &amp;lsquo;</source>
          <target state="translated">Todos los directorios del sistema de archivos forman un &amp;aacute;rbol que comienza en el directorio ra&amp;iacute;z. Un nombre de archivo puede especificar todos los nombres de directorio comenzando desde la ra&amp;iacute;z del &amp;aacute;rbol; entonces se denomina nombre de archivo &lt;em&gt;absoluto&lt;/em&gt; . O puede especificar la posici&amp;oacute;n del archivo en el &amp;aacute;rbol en relaci&amp;oacute;n con un directorio predeterminado; entonces se denomina nombre de archivo &lt;em&gt;relativo&lt;/em&gt; . En GNU y otros sistemas similares a POSIX, despu&amp;eacute;s de cualquier</target>
        </trans-unit>
        <trans-unit id="6d03c2077a45424604dd5945928dd7d581573444" translate="yes" xml:space="preserve">
          <source>All the flags except &amp;lsquo;</source>
          <target state="translated">Todas las banderas excepto '</target>
        </trans-unit>
        <trans-unit id="1fa32ceee23a50f9250c28b0af70936b4c7fea6b" translate="yes" xml:space="preserve">
          <source>All the following functions take an optional list of keyword parameters that alter the various attributes from their default values. Valid attributes include:</source>
          <target state="translated">Todas las funciones siguientes toman una lista opcional de parámetros de palabras clave que alteran los diversos atributos de sus valores predeterminados.Los atributos válidos incluyen:</target>
        </trans-unit>
        <trans-unit id="fd4e3414635a6335aabdd75003f817dd7df606f1" translate="yes" xml:space="preserve">
          <source>All the operations that transfer text in and out of Emacs have the ability to use a coding system to encode or decode the text. You can also explicitly encode and decode text using the functions in this section.</source>
          <target state="translated">Todas las operaciones de transferencia de texto dentro y fuera de Emacs tienen la capacidad de utilizar un sistema de codificación para codificar o decodificar el texto.También se puede codificar y decodificar el texto explícitamente utilizando las funciones de esta sección.</target>
        </trans-unit>
        <trans-unit id="3d0ec5a014b164fea677713adc2d6869587a38a2" translate="yes" xml:space="preserve">
          <source>All the remaining elements (if any) are collectively called &lt;var&gt;other-vars&lt;/var&gt;. Each of these elements should have the form &lt;code&gt;(&lt;var&gt;variable&lt;/var&gt; . &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt;&amp;mdash;which means, make &lt;var&gt;variable&lt;/var&gt; buffer-local and then set it to &lt;var&gt;value&lt;/var&gt;. You can use these &lt;var&gt;other-vars&lt;/var&gt; to set other variables that affect fontification, aside from those you can control with the first five elements. See &lt;a href=&quot;other-font-lock-variables#Other-Font-Lock-Variables&quot;&gt;Other Font Lock Variables&lt;/a&gt;.</source>
          <target state="translated">Todos los elementos restantes (si los hay) se denominan colectivamente &lt;var&gt;other-vars&lt;/var&gt; . Cada uno de estos elementos debe tener la forma &lt;code&gt;(&lt;var&gt;variable&lt;/var&gt; . &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; que significa, hacer que la &lt;var&gt;variable&lt;/var&gt; sea local al b&amp;uacute;fer y luego establecerla en &lt;var&gt;value&lt;/var&gt; . Puede usar estas &lt;var&gt;other-vars&lt;/var&gt; variables para establecer otras variables que afecten la fontificaci&amp;oacute;n, adem&amp;aacute;s de las que puede controlar con los primeros cinco elementos. Consulte &lt;a href=&quot;other-font-lock-variables#Other-Font-Lock-Variables&quot;&gt;Otras variables de bloqueo de fuentes&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="eef34056c9664b484982e4f51615ce7ab9a41812" translate="yes" xml:space="preserve">
          <source>All the specification characters allow an optional &lt;em&gt;precision&lt;/em&gt; after the field number, flags and width, if present. The precision is a decimal-point &amp;lsquo;</source>
          <target state="translated">Todos los caracteres de especificaci&amp;oacute;n permiten una &lt;em&gt;precisi&amp;oacute;n&lt;/em&gt; opcional despu&amp;eacute;s del n&amp;uacute;mero de campo, banderas y ancho, si est&amp;aacute;n presentes. La precisi&amp;oacute;n es un punto decimal '</target>
        </trans-unit>
        <trans-unit id="ca4ef7026f0627fed1dbae0beb181539bc4f6f15" translate="yes" xml:space="preserve">
          <source>All the usual rules for documentation strings in Lisp code (see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/elisp/Documentation-Tips.html#Documentation-Tips&quot;&gt;Documentation Tips&lt;/a&gt;) apply to C code documentation strings too.</source>
          <target state="translated">Todas las reglas habituales para las cadenas de documentaci&amp;oacute;n en c&amp;oacute;digo Lisp (consulte &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/elisp/Documentation-Tips.html#Documentation-Tips&quot;&gt;Consejos de documentaci&amp;oacute;n&lt;/a&gt; ) se aplican tambi&amp;eacute;n a las cadenas de documentaci&amp;oacute;n de c&amp;oacute;digo C.</target>
        </trans-unit>
        <trans-unit id="58d526aa213005ab745d03bed480a0d5feb42ba3" translate="yes" xml:space="preserve">
          <source>All three of the subprocess-creating functions allow to specify command-line arguments for the process to run. For &lt;code&gt;call-process&lt;/code&gt; and &lt;code&gt;call-process-region&lt;/code&gt;, these come in the form of a &lt;code&gt;&amp;amp;rest&lt;/code&gt; argument, &lt;var&gt;args&lt;/var&gt;. For &lt;code&gt;make-process&lt;/code&gt;, both the program to run and its command-line arguments are specified as a list of strings. The command-line arguments must all be strings, and they are supplied to the program as separate argument strings. Wildcard characters and other shell constructs have no special meanings in these strings, since the strings are passed directly to the specified program.</source>
          <target state="translated">Las tres funciones de creaci&amp;oacute;n de subprocesos permiten especificar argumentos de l&amp;iacute;nea de comandos para que se ejecute el proceso. Para &lt;code&gt;call-process&lt;/code&gt; y &lt;code&gt;call-process-region&lt;/code&gt; , estos vienen en forma de un argumento &lt;code&gt;&amp;amp;rest&lt;/code&gt; , &lt;var&gt;args&lt;/var&gt; . Para &lt;code&gt;make-process&lt;/code&gt; , tanto el programa a ejecutar como los argumentos de la l&amp;iacute;nea de comandos se especifican como una lista de cadenas. Todos los argumentos de la l&amp;iacute;nea de comandos deben ser cadenas y se proporcionan al programa como cadenas de argumentos independientes. Los caracteres comod&amp;iacute;n y otras construcciones de shell no tienen significados especiales en estas cadenas, ya que las cadenas se pasan directamente al programa especificado.</target>
        </trans-unit>
        <trans-unit id="0dd2c1f56aad50efd70754bd7b0f1448e6dee489" translate="yes" xml:space="preserve">
          <source>All you need to do is add a &lt;code&gt;declare-function&lt;/code&gt; statement before the first use of the function in question:</source>
          <target state="translated">Todo lo que necesita hacer es agregar una &lt;code&gt;declare-function&lt;/code&gt; antes del primer uso de la funci&amp;oacute;n en cuesti&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="83a5fc8fd0c6232ad2485feb2941be6df4658ce5" translate="yes" xml:space="preserve">
          <source>Allow &lt;var&gt;command&lt;/var&gt; (a symbol) to be executed without special confirmation from now on, and alter the user&amp;rsquo;s init file (see &lt;a href=&quot;init-file#Init-File&quot;&gt;Init File&lt;/a&gt;) so that this will apply to future sessions.</source>
          <target state="translated">Permita que el &lt;var&gt;command&lt;/var&gt; (un s&amp;iacute;mbolo) se ejecute sin una confirmaci&amp;oacute;n especial a partir de ahora y modifique el archivo de inicio del usuario (consulte &lt;a href=&quot;init-file#Init-File&quot;&gt;Archivo de inicio&lt;/a&gt; ) para que se aplique a sesiones futuras.</target>
        </trans-unit>
        <trans-unit id="fbe56df0c14a0941bf2865207a4eec4975a429b2" translate="yes" xml:space="preserve">
          <source>Almost all the messages displayed in the echo area are also recorded in the</source>
          <target state="translated">Casi todos los mensajes mostrados en la zona de eco también se registran en el</target>
        </trans-unit>
        <trans-unit id="0a6cdeb0d1c09e0504231be0c620803ea8ce80be" translate="yes" xml:space="preserve">
          <source>Along with the mandatory &lt;code&gt;:request-dispatcher&lt;/code&gt; and &lt;code&gt;:notification-dispatcher&lt;/code&gt; initargs, users of the &lt;code&gt;jsonrpc-process-connection&lt;/code&gt; class should pass the following initargs as keyword-value pairs to &lt;code&gt;make-instance&lt;/code&gt;:</source>
          <target state="translated">Junto con los initargs obligatorios &lt;code&gt;:request-dispatcher&lt;/code&gt; y &lt;code&gt;:notification-dispatcher&lt;/code&gt; , los usuarios de la &lt;code&gt;jsonrpc-process-connection&lt;/code&gt; deben pasar los siguientes initargs como pares de palabra clave-valor a &lt;code&gt;make-instance&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="986ce8469a3d5002d455b0f41722b9928e133cc8" translate="yes" xml:space="preserve">
          <source>Alphabetical sorting means that two sort keys are compared by comparing the first characters of each, the second characters of each, and so on. If a mismatch is found, it means that the sort keys are unequal; the sort key whose character is less at the point of first mismatch is the lesser sort key. The individual characters are compared according to their numerical character codes in the Emacs character set.</source>
          <target state="translated">La clasificación alfabética significa que dos claves de clasificación se comparan comparando los primeros caracteres de cada uno,los segundos caracteres de cada uno,y así sucesivamente.Si se encuentra un desajuste,significa que las claves de clasificación son desiguales;la clave de clasificación cuyo carácter es menor en el punto de primer desajuste es la clave de clasificación menor.Los caracteres individuales se comparan de acuerdo a sus códigos de caracteres numéricos en el conjunto de caracteres de Emacs.</target>
        </trans-unit>
        <trans-unit id="3397c8f08539eaf212b8a514976581cd47575863" translate="yes" xml:space="preserve">
          <source>Also by convention, the &lt;small&gt;CDR&lt;/small&gt; of the last cons cell in a list is &lt;code&gt;nil&lt;/code&gt;. We call such a &lt;code&gt;nil&lt;/code&gt;-terminated structure a &lt;em&gt;proper list&lt;/em&gt;&lt;a href=&quot;#FOOT3&quot; name=&quot;DOCF3&quot;&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt;. In Emacs Lisp, the symbol &lt;code&gt;nil&lt;/code&gt; is both a symbol and a list with no elements. For convenience, the symbol &lt;code&gt;nil&lt;/code&gt; is considered to have &lt;code&gt;nil&lt;/code&gt; as its &lt;small&gt;CDR&lt;/small&gt; (and also as its &lt;small&gt;CAR&lt;/small&gt;).</source>
          <target state="translated">Tambi&amp;eacute;n por convenci&amp;oacute;n, la &lt;small&gt;CDR&lt;/small&gt; de la &amp;uacute;ltima celda de contras de una lista es &lt;code&gt;nil&lt;/code&gt; . Llamamos a esta estructura terminada en &lt;code&gt;nil&lt;/code&gt; una &lt;em&gt;lista adecuada &lt;/em&gt;&lt;a href=&quot;#FOOT3&quot; name=&quot;DOCF3&quot;&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt; . En Emacs Lisp, el s&amp;iacute;mbolo &lt;code&gt;nil&lt;/code&gt; es tanto un s&amp;iacute;mbolo como una lista sin elementos. Por conveniencia, se considera que el s&amp;iacute;mbolo &lt;code&gt;nil&lt;/code&gt; tiene &lt;code&gt;nil&lt;/code&gt; como su &lt;small&gt;CDR&lt;/small&gt; (y tambi&amp;eacute;n como su &lt;small&gt;CAR&lt;/small&gt; ).</target>
        </trans-unit>
        <trans-unit id="fff39e0b11dcde645d91107c5004ab17b6696524" translate="yes" xml:space="preserve">
          <source>Also note that this variable is not meant to be a generic facility for accessing external libraries; only those already known by Emacs can be loaded through it.</source>
          <target state="translated">Obsérvese también que esta variable no pretende ser una facilidad genérica para acceder a bibliotecas externas;sólo se pueden cargar a través de ella las que ya conoce el Emacs.</target>
        </trans-unit>
        <trans-unit id="b0218093aabf50731b0dfd5f6bc99d6da5f04d9a" translate="yes" xml:space="preserve">
          <source>Also see &lt;code&gt;edebug-tracing&lt;/code&gt;, in &lt;a href=&quot;trace-buffer#Trace-Buffer&quot;&gt;Trace Buffer&lt;/a&gt;.</source>
          <target state="translated">Consulte tambi&amp;eacute;n &lt;code&gt;edebug-tracing&lt;/code&gt; , en &lt;a href=&quot;trace-buffer#Trace-Buffer&quot;&gt;Trace Buffer&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4d0d7b652d689c605bbb8e508dce118b76e3835d" translate="yes" xml:space="preserve">
          <source>Also see the following function.</source>
          <target state="translated">Vea también la siguiente función.</target>
        </trans-unit>
        <trans-unit id="f91d8e06c0823bced203ecdc95d5ffb09f2dca97" translate="yes" xml:space="preserve">
          <source>Also see the functions &lt;code&gt;bolp&lt;/code&gt; and &lt;code&gt;eolp&lt;/code&gt; in &lt;a href=&quot;near-point#Near-Point&quot;&gt;Near Point&lt;/a&gt;. These functions do not move point, but test whether it is already at the beginning or end of a line.</source>
          <target state="translated">Consulte tambi&amp;eacute;n las funciones &lt;code&gt;bolp&lt;/code&gt; y &lt;code&gt;eolp&lt;/code&gt; en &lt;a href=&quot;near-point#Near-Point&quot;&gt;Near Point&lt;/a&gt; . Estas funciones no mueven el punto, pero prueban si ya est&amp;aacute; al principio o al final de una l&amp;iacute;nea.</target>
        </trans-unit>
        <trans-unit id="1c151f9dd941153aa652ba089e31237c83748274" translate="yes" xml:space="preserve">
          <source>Also, if &lt;code&gt;ignore-window-parameters&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;, this function does not delete any window whose &lt;code&gt;no-delete-other-windows&lt;/code&gt; parameter is non-&lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Adem&amp;aacute;s, si &lt;code&gt;ignore-window-parameters&lt;/code&gt; es &lt;code&gt;nil&lt;/code&gt; , esta funci&amp;oacute;n no elimina ninguna ventana cuyo par&amp;aacute;metro &lt;code&gt;no-delete-other-windows&lt;/code&gt; no sea &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7732936fed3ff7cd50aeba214305d9cb5cc02021" translate="yes" xml:space="preserve">
          <source>Also, inline functions do not behave well with respect to debugging, tracing, and advising (see &lt;a href=&quot;advising-functions#Advising-Functions&quot;&gt;Advising Functions&lt;/a&gt;). Since ease of debugging and the flexibility of redefining functions are important features of Emacs, you should not make a function inline, even if it&amp;rsquo;s small, unless its speed is really crucial, and you&amp;rsquo;ve timed the code to verify that using &lt;code&gt;defun&lt;/code&gt; actually has performance problems.</source>
          <target state="translated">Adem&amp;aacute;s, las funciones en l&amp;iacute;nea no se comportan bien con respecto a la depuraci&amp;oacute;n, el seguimiento y el asesoramiento (consulte &lt;a href=&quot;advising-functions#Advising-Functions&quot;&gt;Funciones de asesoramiento&lt;/a&gt; ). Dado que la facilidad de depuraci&amp;oacute;n y la flexibilidad de redefinir funciones son caracter&amp;iacute;sticas importantes de Emacs, no debe hacer una funci&amp;oacute;n en l&amp;iacute;nea, incluso si es peque&amp;ntilde;a, a menos que su velocidad sea realmente crucial y haya cronometrado el c&amp;oacute;digo para verificar que el uso de &lt;code&gt;defun&lt;/code&gt; realmente lo ha hecho. problemas de rendimiento.</target>
        </trans-unit>
        <trans-unit id="3a284929ebe4ecbc4627599844c16f8ee2075a18" translate="yes" xml:space="preserve">
          <source>Also, this variable is bound to non-&lt;code&gt;nil&lt;/code&gt; while running those same hook variables, so that by default modifying the buffer from a modification hook does not cause other modification hooks to be run. If you do want modification hooks to be run in a particular piece of code that is itself run from a modification hook, then rebind locally &lt;code&gt;inhibit-modification-hooks&lt;/code&gt; to &lt;code&gt;nil&lt;/code&gt;. However, doing this may cause recursive calls to the modification hooks, so be sure to prepare for that (for example, by binding some variable which tells your hook to do nothing).</source>
          <target state="translated">Adem&amp;aacute;s, esta variable est&amp;aacute; vinculada a un valor no &lt;code&gt;nil&lt;/code&gt; mientras se ejecutan esas mismas variables de gancho, de modo que, por defecto, la modificaci&amp;oacute;n del b&amp;uacute;fer desde un gancho de modificaci&amp;oacute;n no provoca que se ejecuten otros ganchos de modificaci&amp;oacute;n. Si desea que los ganchos de modificaci&amp;oacute;n se ejecuten en un fragmento de c&amp;oacute;digo en particular que se ejecute desde un gancho de modificaci&amp;oacute;n, entonces vuelva a vincular localmente &lt;code&gt;inhibit-modification-hooks&lt;/code&gt; a &lt;code&gt;nil&lt;/code&gt; . Sin embargo, hacer esto puede causar llamadas recursivas a los ganchos de modificaci&amp;oacute;n, as&amp;iacute; que aseg&amp;uacute;rese de prepararse para eso (por ejemplo, vinculando alguna variable que le indique a su gancho que no haga nada).</target>
        </trans-unit>
        <trans-unit id="e30eff925100b7c3e119ed678e39009e962455b0" translate="yes" xml:space="preserve">
          <source>Alt</source>
          <target state="translated">Alt</target>
        </trans-unit>
        <trans-unit id="a5a07d26b576b4c962f39501eaa335d2542ec41a" translate="yes" xml:space="preserve">
          <source>Alt-Hyper-Meta-x</source>
          <target state="translated">Alt-Hyper-Meta-x</target>
        </trans-unit>
        <trans-unit id="ce59e9b5171b68822f40796bb3f0c52339cf67a2" translate="yes" xml:space="preserve">
          <source>Alt-TAB</source>
          <target state="translated">Alt-TAB</target>
        </trans-unit>
        <trans-unit id="3569cde666bf1d56550417379b59c63f9186f81c" translate="yes" xml:space="preserve">
          <source>Altering List Elements with setcar</source>
          <target state="translated">Alteración de los elementos de la lista con setcar</target>
        </trans-unit>
        <trans-unit id="c23b06af6029fc510471e91f93630d6b95133fec" translate="yes" xml:space="preserve">
          <source>Altering the CDR of a List</source>
          <target state="translated">Alteración del CDR de una lista</target>
        </trans-unit>
        <trans-unit id="32b911a69c85aa2eed0e0429593ee1d599f1648f" translate="yes" xml:space="preserve">
          <source>Altering the contents of an existing string.</source>
          <target state="translated">Alterar el contenido de una cadena existente.</target>
        </trans-unit>
        <trans-unit id="03e916d44308e382702efa38414c976b82eebcbb" translate="yes" xml:space="preserve">
          <source>Alternative foreground color, a string. This is like &lt;code&gt;:foreground&lt;/code&gt; but the color is only used as a foreground when the background color is near to the foreground that would have been used. This is useful for example when marking text (i.e., the region face). If the text has a foreground that is visible with the region face, that foreground is used. If the foreground is near the region face background, &lt;code&gt;:distant-foreground&lt;/code&gt; is used instead so the text is readable.</source>
          <target state="translated">Color de primer plano alternativo, una cuerda. Esto es como &lt;code&gt;:foreground&lt;/code&gt; pero el color solo se usa como primer plano cuando el color de fondo est&amp;aacute; cerca del primer plano que se habr&amp;iacute;a usado. Esto es &amp;uacute;til, por ejemplo, al marcar texto (es decir, la cara de la regi&amp;oacute;n). Si el texto tiene un primer plano que es visible con la cara de la regi&amp;oacute;n, se utiliza ese primer plano. Si el primer plano est&amp;aacute; cerca del fondo de la cara de la regi&amp;oacute;n, en su lugar se usa &lt;code&gt;:distant-foreground&lt;/code&gt; para que el texto sea legible.</target>
        </trans-unit>
        <trans-unit id="b201fde3a76a13fb565d2139c2505d62747c3f3d" translate="yes" xml:space="preserve">
          <source>Alternatively, &lt;var&gt;menu&lt;/var&gt; can have the following form:</source>
          <target state="translated">Alternativamente, el &lt;var&gt;menu&lt;/var&gt; puede tener la siguiente forma:</target>
        </trans-unit>
        <trans-unit id="612d416a8c5c9032e5eee36eda3e173bd67f6d8e" translate="yes" xml:space="preserve">
          <source>Alternatively, a menu item can be a list with the same format as &lt;var&gt;menu&lt;/var&gt;. This is a submenu.</source>
          <target state="translated">Alternativamente, un elemento de men&amp;uacute; puede ser una lista con el mismo formato que el &lt;var&gt;menu&lt;/var&gt; . Este es un submen&amp;uacute;.</target>
        </trans-unit>
        <trans-unit id="0f3215559a2b65437e72958763c4ad5ae7956797" translate="yes" xml:space="preserve">
          <source>Alternatively, a menu item can be a string. Then that string appears in the menu as unselectable text. A string consisting of dashes is displayed as a separator (see &lt;a href=&quot;menu-separators#Menu-Separators&quot;&gt;Menu Separators&lt;/a&gt;).</source>
          <target state="translated">Alternativamente, un elemento del men&amp;uacute; puede ser una cadena. Entonces esa cadena aparece en el men&amp;uacute; como texto no seleccionable. Una cadena que consta de guiones se muestra como un separador (consulte &lt;a href=&quot;menu-separators#Menu-Separators&quot;&gt;Separadores de men&amp;uacute;&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="f86166f09a2fa545f30584a0fa07bc98a8228018" translate="yes" xml:space="preserve">
          <source>Alternatively, a menu item may have the form:</source>
          <target state="translated">Alternativamente,un elemento del menú puede tener la forma:</target>
        </trans-unit>
        <trans-unit id="2a475682f68cc8d5942ac33225fa6641ddb131e3" translate="yes" xml:space="preserve">
          <source>Alternatively, an &lt;code&gt;interactive&lt;/code&gt; form may be specified in a function symbol&amp;rsquo;s &lt;code&gt;interactive-form&lt;/code&gt; property. A non-&lt;code&gt;nil&lt;/code&gt; value for this property takes precedence over any &lt;code&gt;interactive&lt;/code&gt; form in the function body itself. This feature is seldom used.</source>
          <target state="translated">Alternativamente, una &lt;code&gt;interactive&lt;/code&gt; forma se puede especificar en funci&amp;oacute;n de un s&amp;iacute;mbolo &lt;code&gt;interactive-form&lt;/code&gt; propiedad. Un valor no &lt;code&gt;nil&lt;/code&gt; para esta propiedad tiene prioridad sobre cualquier forma &lt;code&gt;interactive&lt;/code&gt; en el cuerpo de la funci&amp;oacute;n. Esta funci&amp;oacute;n rara vez se utiliza.</target>
        </trans-unit>
        <trans-unit id="70290e19eb34b55b8e6acff0975f8bd70f0b8116" translate="yes" xml:space="preserve">
          <source>Alternatively, the problems sketched above can be avoided by always resizing all windows in the same combination whenever one of its windows is split or deleted. This also permits splitting windows that would be otherwise too small for such an operation.</source>
          <target state="translated">Alternativamente,los problemas esbozados anteriormente pueden evitarse cambiando siempre el tamaño de todas las ventanas en la misma combinación cada vez que una de sus ventanas se divide o se borra.Esto también permite dividir ventanas que de otra manera serían demasiado pequeñas para tal operación.</target>
        </trans-unit>
        <trans-unit id="b26670ac06db641e3e84463f0ad2daa068f83654" translate="yes" xml:space="preserve">
          <source>Alternatively, the value can specify the bitmap directly, with a list of the form &lt;code&gt;(&lt;var&gt;width&lt;/var&gt; &lt;var&gt;height&lt;/var&gt; &lt;var&gt;data&lt;/var&gt;)&lt;/code&gt;. Here, &lt;var&gt;width&lt;/var&gt; and &lt;var&gt;height&lt;/var&gt; specify the size in pixels, and &lt;var&gt;data&lt;/var&gt; is a string containing the raw bits of the bitmap, row by row. Each row occupies &lt;em&gt;(&lt;var&gt;width&lt;/var&gt; + 7) / 8&lt;/em&gt; consecutive bytes in the string (which should be a unibyte string for best results). This means that each row always occupies at least one whole byte.</source>
          <target state="translated">Alternativamente, el valor puede especificar el mapa de bits directamente, con una lista del formulario &lt;code&gt;(&lt;var&gt;width&lt;/var&gt; &lt;var&gt;height&lt;/var&gt; &lt;var&gt;data&lt;/var&gt;)&lt;/code&gt; . Aqu&amp;iacute;, el &lt;var&gt;width&lt;/var&gt; y el &lt;var&gt;height&lt;/var&gt; especifican el tama&amp;ntilde;o en p&amp;iacute;xeles, y los &lt;var&gt;data&lt;/var&gt; son una cadena que contiene los bits sin procesar del mapa de bits, fila por fila. Cada fila ocupa &lt;em&gt;( &lt;var&gt;width&lt;/var&gt; + 7) / 8&lt;/em&gt; bytes consecutivos en la cadena (que debe ser una cadena unibyte para obtener mejores resultados). Esto significa que cada fila ocupa siempre al menos un byte completo.</target>
        </trans-unit>
        <trans-unit id="3fffa4436d30acad881ee763e3e490d5b00c5e0b" translate="yes" xml:space="preserve">
          <source>Alternatively, we can use the &lt;code&gt;with-current-buffer&lt;/code&gt; macro:</source>
          <target state="translated">Alternativamente, podemos usar la macro &lt;code&gt;with-current-buffer&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b512dedf489786abd4f584013029d9c643312107" translate="yes" xml:space="preserve">
          <source>Alternatively, you can define a function by providing the code which will inline it as a compiler macro. The following macros make this possible.</source>
          <target state="translated">Alternativamente,se puede definir una función proporcionando el código que la alineará como una macro de compilación.Las siguientes macros lo hacen posible.</target>
        </trans-unit>
        <trans-unit id="a6177cf1ed61859e6ad146c7a2e9af66ea184b0c" translate="yes" xml:space="preserve">
          <source>Alternatively, you can set &lt;var&gt;min-value&lt;/var&gt; and &lt;var&gt;max-value&lt;/var&gt; to &lt;code&gt;nil&lt;/code&gt;. In that case, the progress reporter does not report process percentages; it instead displays a &amp;ldquo;spinner&amp;rdquo; that rotates a notch each time you update the progress reporter.</source>
          <target state="translated">Como alternativa, se puede establecer &lt;var&gt;min-value&lt;/var&gt; y el &lt;var&gt;max-value&lt;/var&gt; a &lt;code&gt;nil&lt;/code&gt; . En ese caso, el informador de progreso no informa los porcentajes del proceso; en su lugar, muestra una &quot;ruleta&quot; que gira una muesca cada vez que actualiza el informe de progreso.</target>
        </trans-unit>
        <trans-unit id="92226f9d87069cd2db7b3d326f09e83f23a82036" translate="yes" xml:space="preserve">
          <source>Alternatively, you could use the &lt;code&gt;:stderr&lt;/code&gt; parameter with a non-&lt;code&gt;nil&lt;/code&gt; value in a call to &lt;code&gt;make-process&lt;/code&gt; (see &lt;a href=&quot;asynchronous-processes#Asynchronous-Processes&quot;&gt;make-process&lt;/a&gt;) to make the destination of the error output separate from the standard output; in that case, Emacs will use pipes for communicating with the subprocess.</source>
          <target state="translated">Alternativamente, puede usar el par&amp;aacute;metro &lt;code&gt;:stderr&lt;/code&gt; con un valor distinto de &lt;code&gt;nil&lt;/code&gt; en una llamada a &lt;code&gt;make-process&lt;/code&gt; (ver &lt;a href=&quot;asynchronous-processes#Asynchronous-Processes&quot;&gt;make-process&lt;/a&gt; ) para hacer que el destino de la salida de error sea independiente de la salida est&amp;aacute;ndar; en ese caso, Emacs utilizar&amp;aacute; tuber&amp;iacute;as para comunicarse con el subproceso.</target>
        </trans-unit>
        <trans-unit id="67171d73924b845a3534e0ecdf7ce358ebf03943" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;(time-convert nil nil)&lt;/code&gt; is equivalent to &lt;code&gt;(current-time)&lt;/code&gt;, the latter may be a bit faster.</source>
          <target state="translated">Aunque &lt;code&gt;(time-convert nil nil)&lt;/code&gt; es equivalente a &lt;code&gt;(current-time)&lt;/code&gt; , este &amp;uacute;ltimo puede ser un poco m&amp;aacute;s r&amp;aacute;pido.</target>
        </trans-unit>
        <trans-unit id="ada9e95e67f8cc5ff4fdc84a7549ab0fbfa66304" translate="yes" xml:space="preserve">
          <source>Although &lt;code&gt;redisplay&lt;/code&gt; tries immediately to redisplay, it does not change how Emacs decides which parts of its frame(s) to redisplay. By contrast, the following function adds certain windows to the pending redisplay work (as if their contents had completely changed), but does not immediately try to perform redisplay.</source>
          <target state="translated">Aunque &lt;code&gt;redisplay&lt;/code&gt; intenta volver a mostrar inmediatamente, no cambia la forma en que Emacs decide qu&amp;eacute; partes de su (s) marco (s) volver a mostrar. Por el contrario, la siguiente funci&amp;oacute;n agrega ciertas ventanas al trabajo de re-visualizaci&amp;oacute;n pendiente (como si su contenido hubiera cambiado por completo), pero no intenta realizar la re-visualizaci&amp;oacute;n inmediatamente.</target>
        </trans-unit>
        <trans-unit id="1b09322d9e876baf3954f8eeffbc89a79699d7f4" translate="yes" xml:space="preserve">
          <source>Although Emacs normally respects access permissions of the underlying operating system, in some cases it handles accesses specially. For example, file names can have handlers that treat the files specially, with their own access checking. See &lt;a href=&quot;magic-file-names#Magic-File-Names&quot;&gt;Magic File Names&lt;/a&gt;. Also, a buffer can be read-only even if the corresponding file is writable, and vice versa, which can result in messages such as &amp;lsquo;</source>
          <target state="translated">Aunque Emacs normalmente respeta los permisos de acceso del sistema operativo subyacente, en algunos casos maneja los accesos de manera especial. Por ejemplo, los nombres de archivo pueden tener controladores que los traten de manera especial, con su propia verificaci&amp;oacute;n de acceso. Consulte &lt;a href=&quot;magic-file-names#Magic-File-Names&quot;&gt;Nombres de archivos m&amp;aacute;gicos&lt;/a&gt; . Adem&amp;aacute;s, un b&amp;uacute;fer puede ser de solo lectura incluso si se puede escribir en el archivo correspondiente, y viceversa, lo que puede generar mensajes como '</target>
        </trans-unit>
        <trans-unit id="41aec9e3c0639b5cbc769510aa631eca22825357" translate="yes" xml:space="preserve">
          <source>Although a &amp;lsquo;</source>
          <target state="translated">Aunque un '</target>
        </trans-unit>
        <trans-unit id="0f3c6c13e12239c0128c12d87359384cf4720010" translate="yes" xml:space="preserve">
          <source>Although a character alternative can include duplicates, it is better style to avoid them. For example, &amp;lsquo;</source>
          <target state="translated">Aunque una alternativa de car&amp;aacute;cter puede incluir duplicados, es mejor evitarlos. Por ejemplo, '</target>
        </trans-unit>
        <trans-unit id="003ff1a62df2fa3817a8fd6c5d1dd5fe04cc547c" translate="yes" xml:space="preserve">
          <source>Although a range can denote just one, two, or three characters, it is simpler to list the characters. For example, &amp;lsquo;</source>
          <target state="translated">Aunque un rango puede denotar solo uno, dos o tres caracteres, es m&amp;aacute;s sencillo enumerar los caracteres. Por ejemplo, '</target>
        </trans-unit>
        <trans-unit id="743be7d85c6dff8ab2c12b47e5caa1355172e2a0" translate="yes" xml:space="preserve">
          <source>Although a range&amp;rsquo;s bound can be almost any character, it is better style to stay within natural sequences of ASCII letters and digits because most people have not memorized character code tables. For example, &amp;lsquo;</source>
          <target state="translated">Aunque el l&amp;iacute;mite de un rango puede ser casi cualquier car&amp;aacute;cter, es mejor mantenerse dentro de las secuencias naturales de letras y d&amp;iacute;gitos ASCII porque la mayor&amp;iacute;a de la gente no ha memorizado las tablas de c&amp;oacute;digos de caracteres. Por ejemplo, '</target>
        </trans-unit>
        <trans-unit id="a6f6b98c4f64609315a55f827d800190bc2958cc" translate="yes" xml:space="preserve">
          <source>Although both sorts of failures can largely be avoided by a suitably configured file system, such systems are typically more expensive or less efficient. In more-typical systems, to survive media failure you can copy the file to a different device, and to survive a power failure you can use the &lt;code&gt;write-region&lt;/code&gt; function with the &lt;code&gt;write-region-inhibit-fsync&lt;/code&gt; variable set to &lt;code&gt;nil&lt;/code&gt;. See &lt;a href=&quot;writing-to-files#Writing-to-Files&quot;&gt;Writing to Files&lt;/a&gt;.</source>
          <target state="translated">Aunque ambos tipos de fallas pueden evitarse en gran medida mediante un sistema de archivos configurado adecuadamente, dichos sistemas suelen ser m&amp;aacute;s costosos o menos eficientes. En sistemas m&amp;aacute;s t&amp;iacute;picos, para sobrevivir a una falla de medios, puede copiar el archivo a un dispositivo diferente, y para sobrevivir a una falla de energ&amp;iacute;a, puede usar la funci&amp;oacute;n &lt;code&gt;write-region&lt;/code&gt; con la variable &lt;code&gt;write-region-inhibit-fsync&lt;/code&gt; establecida en &lt;code&gt;nil&lt;/code&gt; . Consulte &lt;a href=&quot;writing-to-files#Writing-to-Files&quot;&gt;Escribir en archivos&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9d6a6f038f930d539ab3543bcd22fa56a80436b0" translate="yes" xml:space="preserve">
          <source>Although completion is usually done in the minibuffer, the completion facility can also be used on the text in ordinary Emacs buffers. In many major modes, in-buffer completion is performed by the</source>
          <target state="translated">Aunque la finalización se suele hacer en el minibúster,la facilidad de finalización también se puede utilizar en el texto en los búferes ordinarios del Emacs.En muchos modos principales,la finalización en el buffer se realiza por el</target>
        </trans-unit>
        <trans-unit id="67fae8b88cdfb0b03098409367fbfcfd4933ca60" translate="yes" xml:space="preserve">
          <source>Although functions are usually defined with &lt;code&gt;defun&lt;/code&gt; and given names at the same time, it is sometimes convenient to use an explicit lambda expression&amp;mdash;an &lt;em&gt;anonymous function&lt;/em&gt;. Anonymous functions are valid wherever function names are. They are often assigned as variable values, or as arguments to functions; for instance, you might pass one as the &lt;var&gt;function&lt;/var&gt; argument to &lt;code&gt;mapcar&lt;/code&gt;, which applies that function to each element of a list (see &lt;a href=&quot;mapping-functions#Mapping-Functions&quot;&gt;Mapping Functions&lt;/a&gt;). See &lt;a href=&quot;accessing-documentation#describe_002dsymbols-example&quot;&gt;describe-symbols example&lt;/a&gt;, for a realistic example of this.</source>
          <target state="translated">Aunque las funciones se definen normalmente con &lt;code&gt;defun&lt;/code&gt; y nombres de pila al mismo tiempo, a veces es conveniente utilizar una expresi&amp;oacute;n lambda expl&amp;iacute;cita: una &lt;em&gt;funci&amp;oacute;n an&amp;oacute;nima&lt;/em&gt; . Las funciones an&amp;oacute;nimas son v&amp;aacute;lidas dondequiera que est&amp;eacute;n los nombres de las funciones. A menudo se asignan como valores de variable o como argumentos de funciones; por ejemplo, puede pasar uno como argumento de la &lt;var&gt;function&lt;/var&gt; a &lt;code&gt;mapcar&lt;/code&gt; , que aplica esa funci&amp;oacute;n a cada elemento de una lista (consulte &lt;a href=&quot;mapping-functions#Mapping-Functions&quot;&gt;Funciones de mapeo&lt;/a&gt; ). Vea el &lt;a href=&quot;accessing-documentation#describe_002dsymbols-example&quot;&gt;ejemplo de describe-s&amp;iacute;mbolos&lt;/a&gt; , para un ejemplo realista de esto.</target>
        </trans-unit>
        <trans-unit id="1be7de9f1b9c2d003e43c343730f7fd8d2bd62d3" translate="yes" xml:space="preserve">
          <source>Although numbers never change and all markers are mutable, some types have members some of which are mutable and others not. These types include conses, vectors, and strings. For example, although &lt;code&gt;&quot;cons&quot;&lt;/code&gt; and &lt;code&gt;(symbol-name 'cons)&lt;/code&gt; both yield strings that should not be changed, &lt;code&gt;(copy-sequence &quot;cons&quot;)&lt;/code&gt; and &lt;code&gt;(make-string 3 ?a)&lt;/code&gt; both yield mutable strings that can be changed via later calls to &lt;code&gt;aset&lt;/code&gt;.</source>
          <target state="translated">Aunque los n&amp;uacute;meros nunca cambian y todos los marcadores son mutables, algunos tipos tienen miembros, algunos de los cuales son mutables y otros no. Estos tipos incluyen conses, vectores y cadenas. Por ejemplo, aunque &lt;code&gt;&quot;cons&quot;&lt;/code&gt; y &lt;code&gt;(symbol-name 'cons)&lt;/code&gt; ambos producen cadenas que no deben cambiarse, &lt;code&gt;(copy-sequence &quot;cons&quot;)&lt;/code&gt; y &lt;code&gt;(make-string 3 ?a)&lt;/code&gt; ambos producen cadenas mutables que se pueden cambiar mediante llamadas posteriores a &lt;code&gt;aset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd89d9ee767436b48e243e1fec03f6f21ceca0df" translate="yes" xml:space="preserve">
          <source>Although packing and unpacking operations change the organization of data (in memory), they preserve the data&amp;rsquo;s &lt;em&gt;total length&lt;/em&gt;, which is the sum of all the fields&amp;rsquo; lengths, in bytes. This value is not generally inherent in either the specification or alist alone; instead, both pieces of information contribute to its calculation. Likewise, the length of a string or array being unpacked may be longer than the data&amp;rsquo;s total length as described by the specification.</source>
          <target state="translated">Although packing and unpacking operations change the organization of data (in memory), they preserve the data&amp;rsquo;s &lt;em&gt;total length&lt;/em&gt;, which is the sum of all the fields&amp;rsquo; lengths, in bytes. This value is not generally inherent in either the specification or alist alone; instead, both pieces of information contribute to its calculation. Likewise, the length of a string or array being unpacked may be longer than the data&amp;rsquo;s total length as described by the specification.</target>
        </trans-unit>
        <trans-unit id="d96567dd4450662d62d221615f9401c0781977ac" translate="yes" xml:space="preserve">
          <source>Although the expressions &lt;code&gt;(list '+ 1 2)&lt;/code&gt; and &lt;code&gt;'(+ 1 2)&lt;/code&gt; both yield lists equal to &lt;code&gt;(+ 1 2)&lt;/code&gt;, the former yields a freshly-minted mutable list whereas the latter yields a list built from conses that might be shared and should not be modified. See &lt;a href=&quot;self_002devaluating-forms#Self_002dEvaluating-Forms&quot;&gt;Self-Evaluating Forms&lt;/a&gt;.</source>
          <target state="translated">Although the expressions &lt;code&gt;(list '+ 1 2)&lt;/code&gt; and &lt;code&gt;'(+ 1 2)&lt;/code&gt; both yield lists equal to &lt;code&gt;(+ 1 2)&lt;/code&gt; , the former yields a freshly-minted mutable list whereas the latter yields a list built from conses that might be shared and should not be modified. See &lt;a href=&quot;self_002devaluating-forms#Self_002dEvaluating-Forms&quot;&gt;Self-Evaluating Forms&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="22404d7c1088551650eedf30d445b02f32c8b26a" translate="yes" xml:space="preserve">
          <source>Although the list &lt;code&gt;(0.5)&lt;/code&gt; was mutable when it was created, it should not have been changed via &lt;code&gt;setcar&lt;/code&gt; because it given to &lt;code&gt;eval&lt;/code&gt;. The reverse does not occur: an object that should not be changed never becomes mutable afterwards.</source>
          <target state="translated">Although the list &lt;code&gt;(0.5)&lt;/code&gt; was mutable when it was created, it should not have been changed via &lt;code&gt;setcar&lt;/code&gt; because it given to &lt;code&gt;eval&lt;/code&gt; . The reverse does not occur: an object that should not be changed never becomes mutable afterwards.</target>
        </trans-unit>
        <trans-unit id="391c1ca03938de65f008bec7937cdacbb0a5f7c8" translate="yes" xml:space="preserve">
          <source>Although the portable dumper code can run on many platforms, the dump files that it produces are not portable&amp;mdash;they can be loaded only by the Emacs executable that dumped them.</source>
          <target state="translated">Although the portable dumper code can run on many platforms, the dump files that it produces are not portable&amp;mdash;they can be loaded only by the Emacs executable that dumped them.</target>
        </trans-unit>
        <trans-unit id="6fa602a74e291da2cfde0e718a9868c53eb69aef" translate="yes" xml:space="preserve">
          <source>Although top-level calls to &lt;code&gt;require&lt;/code&gt; are evaluated during byte compilation, &lt;code&gt;provide&lt;/code&gt; calls are not. Therefore, you can ensure that a file of definitions is loaded before it is byte-compiled by including a &lt;code&gt;provide&lt;/code&gt; followed by a &lt;code&gt;require&lt;/code&gt; for the same feature, as in the following example.</source>
          <target state="translated">Although top-level calls to &lt;code&gt;require&lt;/code&gt; are evaluated during byte compilation, &lt;code&gt;provide&lt;/code&gt; calls are not. Therefore, you can ensure that a file of definitions is loaded before it is byte-compiled by including a &lt;code&gt;provide&lt;/code&gt; followed by a &lt;code&gt;require&lt;/code&gt; for the same feature, as in the following example.</target>
        </trans-unit>
        <trans-unit id="0d330d60bab6b0316e891e9303762414649958a9" translate="yes" xml:space="preserve">
          <source>Although traditionally Lisp timestamps were integer pairs, their form has evolved and programs ordinarily should not depend on the current default form. If your program needs a particular timestamp form, you can use the &lt;code&gt;time-convert&lt;/code&gt; function to convert it to the needed form. See &lt;a href=&quot;time-conversion#Time-Conversion&quot;&gt;Time Conversion&lt;/a&gt;.</source>
          <target state="translated">Although traditionally Lisp timestamps were integer pairs, their form has evolved and programs ordinarily should not depend on the current default form. If your program needs a particular timestamp form, you can use the &lt;code&gt;time-convert&lt;/code&gt; function to convert it to the needed form. See &lt;a href=&quot;time-conversion#Time-Conversion&quot;&gt;Time Conversion&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="03d337a2cc5120b55c2c85cdc5a80ad1a0f608d6" translate="yes" xml:space="preserve">
          <source>Always use the &lt;code&gt;:set&lt;/code&gt; function to initialize the variable. If the variable is already non-void, reset it by calling the &lt;code&gt;:set&lt;/code&gt; function using the current value (returned by the &lt;code&gt;:get&lt;/code&gt; method). This is the default &lt;code&gt;:initialize&lt;/code&gt; function.</source>
          <target state="translated">Always use the &lt;code&gt;:set&lt;/code&gt; function to initialize the variable. If the variable is already non-void, reset it by calling the &lt;code&gt;:set&lt;/code&gt; function using the current value (returned by the &lt;code&gt;:get&lt;/code&gt; method). This is the default &lt;code&gt;:initialize&lt;/code&gt; function.</target>
        </trans-unit>
        <trans-unit id="3d4ac6bb796b287295b9fa9b0f33f9196a9c4247" translate="yes" xml:space="preserve">
          <source>Amongst other things, this function sets up the &lt;code&gt;comment-start&lt;/code&gt; variable to handle Lisp comments:</source>
          <target state="translated">Amongst other things, this function sets up the &lt;code&gt;comment-start&lt;/code&gt; variable to handle Lisp comments:</target>
        </trans-unit>
        <trans-unit id="55327aa4b2861fca2f67242dee6031a0481c6441" translate="yes" xml:space="preserve">
          <source>An (efficient) array of characters.</source>
          <target state="translated">Un (eficiente)conjunto de personajes.</target>
        </trans-unit>
        <trans-unit id="b24fa2adc3461b8097e9865ddc5d05a962a6075d" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;end-of-file&lt;/code&gt; error is signaled if reading encounters an unterminated list, vector, or string.</source>
          <target state="translated">An &lt;code&gt;end-of-file&lt;/code&gt; error is signaled if reading encounters an unterminated list, vector, or string.</target>
        </trans-unit>
        <trans-unit id="4fa8eeb2346c8a9639fa3ee155f83ec1952beb3e" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;action alist&lt;/em&gt; is an association list mapping predefined symbols recognized by action functions to values these functions are supposed to interpret accordingly. In each call, &lt;code&gt;display-buffer&lt;/code&gt; constructs a new, possibly empty action alist and passes that entire list on to any action function it calls.</source>
          <target state="translated">An &lt;em&gt;action alist&lt;/em&gt; is an association list mapping predefined symbols recognized by action functions to values these functions are supposed to interpret accordingly. In each call, &lt;code&gt;display-buffer&lt;/code&gt; constructs a new, possibly empty action alist and passes that entire list on to any action function it calls.</target>
        </trans-unit>
        <trans-unit id="6fbb202e704ca6497d62596b4b24317b48567731" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;action function&lt;/em&gt; is a function &lt;code&gt;display-buffer&lt;/code&gt; calls for choosing a window to display a buffer. Action functions take two arguments: &lt;var&gt;buffer&lt;/var&gt;, the buffer to display, and &lt;var&gt;alist&lt;/var&gt;, an action alist (see &lt;a href=&quot;buffer-display-action-alists#Buffer-Display-Action-Alists&quot;&gt;Buffer Display Action Alists&lt;/a&gt;). They are supposed to return a window displaying &lt;var&gt;buffer&lt;/var&gt; if they succeed and &lt;code&gt;nil&lt;/code&gt; if they fail.</source>
          <target state="translated">An &lt;em&gt;action function&lt;/em&gt; is a function &lt;code&gt;display-buffer&lt;/code&gt; calls for choosing a window to display a buffer. Action functions take two arguments: &lt;var&gt;buffer&lt;/var&gt; , the buffer to display, and &lt;var&gt;alist&lt;/var&gt; , an action alist (see &lt;a href=&quot;buffer-display-action-alists#Buffer-Display-Action-Alists&quot;&gt;Buffer Display Action Alists&lt;/a&gt;). They are supposed to return a window displaying &lt;var&gt;buffer&lt;/var&gt; if they succeed and &lt;code&gt;nil&lt;/code&gt; if they fail.</target>
        </trans-unit>
        <trans-unit id="42d3eec2eded4ad1f09d03ecadb028b0fe97c946" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;array&lt;/em&gt; is a fixed-length object with a slot for each of its elements. All the elements are accessible in constant time. The four types of arrays are strings, vectors, char-tables and bool-vectors.</source>
          <target state="translated">An &lt;em&gt;array&lt;/em&gt; is a fixed-length object with a slot for each of its elements. All the elements are accessible in constant time. The four types of arrays are strings, vectors, char-tables and bool-vectors.</target>
        </trans-unit>
        <trans-unit id="a4bee20b16add7aae2f3af434413439ac2fc3a32" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;array&lt;/em&gt; is composed of an arbitrary number of slots for holding or referring to other Lisp objects, arranged in a contiguous block of memory. Accessing any element of an array takes approximately the same amount of time. In contrast, accessing an element of a list requires time proportional to the position of the element in the list. (Elements at the end of a list take longer to access than elements at the beginning of a list.)</source>
          <target state="translated">An &lt;em&gt;array&lt;/em&gt; is composed of an arbitrary number of slots for holding or referring to other Lisp objects, arranged in a contiguous block of memory. Accessing any element of an array takes approximately the same amount of time. In contrast, accessing an element of a list requires time proportional to the position of the element in the list. (Elements at the end of a list take longer to access than elements at the beginning of a list.)</target>
        </trans-unit>
        <trans-unit id="553ed232664b5e6ef74691641b0767d1d08a7cfd" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;array&lt;/em&gt; object has slots that hold a number of other Lisp objects, called the elements of the array. Any element of an array may be accessed in constant time. In contrast, the time to access an element of a list is proportional to the position of that element in the list.</source>
          <target state="translated">An &lt;em&gt;array&lt;/em&gt; object has slots that hold a number of other Lisp objects, called the elements of the array. Any element of an array may be accessed in constant time. In contrast, the time to access an element of a list is proportional to the position of that element in the list.</target>
        </trans-unit>
        <trans-unit id="51d6c8f716e9b88b14b6fb96e89f9851f7407153" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;association list&lt;/em&gt; or &lt;em&gt;alist&lt;/em&gt; is a specially-constructed list whose elements are cons cells. In each element, the &lt;small&gt;CAR&lt;/small&gt; is considered a &lt;em&gt;key&lt;/em&gt;, and the &lt;small&gt;CDR&lt;/small&gt; is considered an &lt;em&gt;associated value&lt;/em&gt;. (In some cases, the associated value is stored in the &lt;small&gt;CAR&lt;/small&gt; of the &lt;small&gt;CDR&lt;/small&gt;.) Association lists are often used as stacks, since it is easy to add or remove associations at the front of the list.</source>
          <target state="translated">An &lt;em&gt;association list&lt;/em&gt; or &lt;em&gt;alist&lt;/em&gt; is a specially-constructed list whose elements are cons cells. In each element, the &lt;small&gt;CAR&lt;/small&gt; is considered a &lt;em&gt;key&lt;/em&gt;, and the &lt;small&gt;CDR&lt;/small&gt; is considered an &lt;em&gt;associated value&lt;/em&gt;. (In some cases, the associated value is stored in the &lt;small&gt;CAR&lt;/small&gt; of the &lt;small&gt;CDR&lt;/small&gt;.) Association lists are often used as stacks, since it is easy to add or remove associations at the front of the list.</target>
        </trans-unit>
        <trans-unit id="1abfa47a133f69e41aaa18f7e94f5e435978d98b" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;association list&lt;/em&gt;, or &lt;em&gt;alist&lt;/em&gt; for short, records a mapping from keys to values. It is a list of cons cells called &lt;em&gt;associations&lt;/em&gt;: the &lt;small&gt;CAR&lt;/small&gt; of each cons cell is the &lt;em&gt;key&lt;/em&gt;, and the &lt;small&gt;CDR&lt;/small&gt; is the &lt;em&gt;associated value&lt;/em&gt;.&lt;a href=&quot;#FOOT5&quot; name=&quot;DOCF5&quot;&gt;&lt;sup&gt;5&lt;/sup&gt;&lt;/a&gt;</source>
          <target state="translated">An &lt;em&gt;association list&lt;/em&gt;, or &lt;em&gt;alist&lt;/em&gt; for short, records a mapping from keys to values. It is a list of cons cells called &lt;em&gt;associations&lt;/em&gt;: the &lt;small&gt;CAR&lt;/small&gt; of each cons cell is the &lt;em&gt;key&lt;/em&gt;, and the &lt;small&gt;CDR&lt;/small&gt; is the &lt;em&gt;associated value&lt;/em&gt;.&lt;a href=&quot;#FOOT5&quot; name=&quot;DOCF5&quot;&gt;&lt;sup&gt;5&lt;/sup&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b5d765e12413afb561974dbf3e3027981ca84c13" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;autoload object&lt;/em&gt; is a list whose first element is the symbol &lt;code&gt;autoload&lt;/code&gt;. It is stored as the function definition of a symbol, where it serves as a placeholder for the real definition. The autoload object says that the real definition is found in a file of Lisp code that should be loaded when necessary. It contains the name of the file, plus some other information about the real definition.</source>
          <target state="translated">An &lt;em&gt;autoload object&lt;/em&gt; is a list whose first element is the symbol &lt;code&gt;autoload&lt;/code&gt; . It is stored as the function definition of a symbol, where it serves as a placeholder for the real definition. The autoload object says that the real definition is found in a file of Lisp code that should be loaded when necessary. It contains the name of the file, plus some other information about the real definition.</target>
        </trans-unit>
        <trans-unit id="24cadccfe6209dab134eadc89a088981a88134fc" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;ewoc&lt;/em&gt; is a structure that organizes information required to construct buffer text that represents certain Lisp data. The buffer text of the ewoc has three parts, in order: first, fixed &lt;em&gt;header&lt;/em&gt; text; next, textual descriptions of a series of data elements (Lisp objects that you specify); and last, fixed &lt;em&gt;footer&lt;/em&gt; text. Specifically, an ewoc contains information on:</source>
          <target state="translated">An &lt;em&gt;ewoc&lt;/em&gt; is a structure that organizes information required to construct buffer text that represents certain Lisp data. The buffer text of the ewoc has three parts, in order: first, fixed &lt;em&gt;header&lt;/em&gt; text; next, textual descriptions of a series of data elements (Lisp objects that you specify); and last, fixed &lt;em&gt;footer&lt;/em&gt; text. Specifically, an ewoc contains information on:</target>
        </trans-unit>
        <trans-unit id="45ade8aa3c0307591d943018dc5e837198a89448" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;image descriptor&lt;/em&gt; is a list which specifies the underlying data for an image, and how to display it. It is typically used as the value of a &lt;code&gt;display&lt;/code&gt; overlay or text property (see &lt;a href=&quot;other-display-specs#Other-Display-Specs&quot;&gt;Other Display Specs&lt;/a&gt;); but See &lt;a href=&quot;showing-images#Showing-Images&quot;&gt;Showing Images&lt;/a&gt;, for convenient helper functions to insert images into buffers.</source>
          <target state="translated">An &lt;em&gt;image descriptor&lt;/em&gt; is a list which specifies the underlying data for an image, and how to display it. It is typically used as the value of a &lt;code&gt;display&lt;/code&gt; overlay or text property (see &lt;a href=&quot;other-display-specs#Other-Display-Specs&quot;&gt;Other Display Specs&lt;/a&gt;); but See &lt;a href=&quot;showing-images#Showing-Images&quot;&gt;Showing Images&lt;/a&gt;, for convenient helper functions to insert images into buffers.</target>
        </trans-unit>
        <trans-unit id="8ee4088b1e46a6b8823f17c1848dbfa1804acba9" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;indirect buffer&lt;/em&gt; shares the text of some other buffer, which is called the &lt;em&gt;base buffer&lt;/em&gt; of the indirect buffer. In some ways it is the analogue, for buffers, of a symbolic link among files. The base buffer may not itself be an indirect buffer.</source>
          <target state="translated">An &lt;em&gt;indirect buffer&lt;/em&gt; shares the text of some other buffer, which is called the &lt;em&gt;base buffer&lt;/em&gt; of the indirect buffer. In some ways it is the analogue, for buffers, of a symbolic link among files. The base buffer may not itself be an indirect buffer.</target>
        </trans-unit>
        <trans-unit id="5d4ce81396c742a0b613f8351db2ccbce4a6b846" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;inline function&lt;/em&gt; is a function that works just like an ordinary function, except for one thing: when you byte-compile a call to the function (see &lt;a href=&quot;byte-compilation#Byte-Compilation&quot;&gt;Byte Compilation&lt;/a&gt;), the function&amp;rsquo;s definition is expanded into the caller.</source>
          <target state="translated">An &lt;em&gt;inline function&lt;/em&gt; is a function that works just like an ordinary function, except for one thing: when you byte-compile a call to the function (see &lt;a href=&quot;byte-compilation#Byte-Compilation&quot;&gt;Byte Compilation&lt;/a&gt;), the function&amp;rsquo;s definition is expanded into the caller.</target>
        </trans-unit>
        <trans-unit id="9f6630c098c66be4689d2cdd9cd8bef1da6dd18e" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;overlay&lt;/em&gt; specifies properties that apply to a part of a buffer. Each overlay applies to a specified range of the buffer, and contains a property list (a list whose elements are alternating property names and values). Overlay properties are used to present parts of the buffer temporarily in a different display style. Overlays have no read syntax, and print in hash notation, giving the buffer name and range of positions.</source>
          <target state="translated">An &lt;em&gt;overlay&lt;/em&gt; specifies properties that apply to a part of a buffer. Each overlay applies to a specified range of the buffer, and contains a property list (a list whose elements are alternating property names and values). Overlay properties are used to present parts of the buffer temporarily in a different display style. Overlays have no read syntax, and print in hash notation, giving the buffer name and range of positions.</target>
        </trans-unit>
        <trans-unit id="07799df1b9d386af6360d33cd65d6f9fe665cd6d" translate="yes" xml:space="preserve">
          <source>An &lt;var&gt;rhs&lt;/var&gt; cannot be an empty list (an empty list is never needed, since SMIE allows all non-terminals to match the empty string anyway).</source>
          <target state="translated">An &lt;var&gt;rhs&lt;/var&gt; cannot be an empty list (an empty list is never needed, since SMIE allows all non-terminals to match the empty string anyway).</target>
        </trans-unit>
        <trans-unit id="ad5b32c399f18af984f9755a3f1132417efccd31" translate="yes" xml:space="preserve">
          <source>An &lt;var&gt;rhs&lt;/var&gt; cannot have 2 consecutive non-terminals: each pair of non-terminals needs to be separated by a terminal (aka token). This is a fundamental limitation of operator precedence grammars.</source>
          <target state="translated">An &lt;var&gt;rhs&lt;/var&gt; cannot have 2 consecutive non-terminals: each pair of non-terminals needs to be separated by a terminal (aka token). This is a fundamental limitation of operator precedence grammars.</target>
        </trans-unit>
        <trans-unit id="7922709da81f687d8271ff998b16af874b1814ac" translate="yes" xml:space="preserve">
          <source>An Emacs &lt;em&gt;character set&lt;/em&gt;, or &lt;em&gt;charset&lt;/em&gt;, is a set of characters in which each character is assigned a numeric code point. (The Unicode Standard calls this a &lt;em&gt;coded character set&lt;/em&gt;.) Each Emacs charset has a name which is a symbol. A single character can belong to any number of different character sets, but it will generally have a different code point in each charset. Examples of character sets include &lt;code&gt;ascii&lt;/code&gt;, &lt;code&gt;iso-8859-1&lt;/code&gt;, &lt;code&gt;greek-iso8859-7&lt;/code&gt;, and &lt;code&gt;windows-1255&lt;/code&gt;. The code point assigned to a character in a charset is usually different from its code point used in Emacs buffers and strings.</source>
          <target state="translated">An Emacs &lt;em&gt;character set&lt;/em&gt;, or &lt;em&gt;charset&lt;/em&gt;, is a set of characters in which each character is assigned a numeric code point. (The Unicode Standard calls this a &lt;em&gt;coded character set&lt;/em&gt;.) Each Emacs charset has a name which is a symbol. A single character can belong to any number of different character sets, but it will generally have a different code point in each charset. Examples of character sets include &lt;code&gt;ascii&lt;/code&gt; , &lt;code&gt;iso-8859-1&lt;/code&gt; , &lt;code&gt;greek-iso8859-7&lt;/code&gt; , and &lt;code&gt;windows-1255&lt;/code&gt; . The code point assigned to a character in a charset is usually different from its code point used in Emacs buffers and strings.</target>
        </trans-unit>
        <trans-unit id="b460981854f34e1d2df2695ccac2e570ff87d223" translate="yes" xml:space="preserve">
          <source>An Emacs installation may have a &lt;em&gt;default init file&lt;/em&gt;, which is a Lisp library named</source>
          <target state="translated">An Emacs installation may have a &lt;em&gt;default init file&lt;/em&gt;, which is a Lisp library named</target>
        </trans-unit>
        <trans-unit id="e2785779758cffeebac8e8b91c79bc832a2d5aa1" translate="yes" xml:space="preserve">
          <source>An abbrev table is represented as an obarray. See &lt;a href=&quot;creating-symbols#Creating-Symbols&quot;&gt;Creating Symbols&lt;/a&gt;, for information about obarrays. Each abbreviation is represented by a symbol in the obarray. The symbol&amp;rsquo;s name is the abbreviation; its value is the expansion; its function definition is the hook function for performing the expansion (see &lt;a href=&quot;defining-abbrevs#Defining-Abbrevs&quot;&gt;Defining Abbrevs&lt;/a&gt;); and its property list cell contains various additional properties, including the use count and the number of times the abbreviation has been expanded (see &lt;a href=&quot;abbrev-properties#Abbrev-Properties&quot;&gt;Abbrev Properties&lt;/a&gt;).</source>
          <target state="translated">An abbrev table is represented as an obarray. See &lt;a href=&quot;creating-symbols#Creating-Symbols&quot;&gt;Creating Symbols&lt;/a&gt;, for information about obarrays. Each abbreviation is represented by a symbol in the obarray. The symbol&amp;rsquo;s name is the abbreviation; its value is the expansion; its function definition is the hook function for performing the expansion (see &lt;a href=&quot;defining-abbrevs#Defining-Abbrevs&quot;&gt;Defining Abbrevs&lt;/a&gt;); and its property list cell contains various additional properties, including the use count and the number of times the abbreviation has been expanded (see &lt;a href=&quot;abbrev-properties#Abbrev-Properties&quot;&gt;Abbrev Properties&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="e708d184dee6ca64093dbe415ec262b16c5b9ff2" translate="yes" xml:space="preserve">
          <source>An abbreviation or &lt;em&gt;abbrev&lt;/em&gt; is a string of characters that may be expanded to a longer string. The user can insert the abbrev string and find it replaced automatically with the expansion of the abbrev. This saves typing.</source>
          <target state="translated">An abbreviation or &lt;em&gt;abbrev&lt;/em&gt; is a string of characters that may be expanded to a longer string. The user can insert the abbrev string and find it replaced automatically with the expansion of the abbrev. This saves typing.</target>
        </trans-unit>
        <trans-unit id="8be78449d783fd1e94ea043c27376e317eb4caa7" translate="yes" xml:space="preserve">
          <source>An abnormal hook run by &lt;code&gt;delete-terminal&lt;/code&gt;. Each function receives one argument, the &lt;var&gt;terminal&lt;/var&gt; argument passed to &lt;code&gt;delete-terminal&lt;/code&gt;. Due to technical details, the functions may be called either just before the terminal is deleted, or just afterwards.</source>
          <target state="translated">An abnormal hook run by &lt;code&gt;delete-terminal&lt;/code&gt; . Each function receives one argument, the &lt;var&gt;terminal&lt;/var&gt; argument passed to &lt;code&gt;delete-terminal&lt;/code&gt; . Due to technical details, the functions may be called either just before the terminal is deleted, or just afterwards.</target>
        </trans-unit>
        <trans-unit id="6b8b396e23526cbc99aafc9321a68ad76aeb57a7" translate="yes" xml:space="preserve">
          <source>An abnormal hook run by &lt;code&gt;make-frame&lt;/code&gt; after it created the frame. Each function in &lt;code&gt;after-make-frame-functions&lt;/code&gt; receives one argument, the frame just created.</source>
          <target state="translated">An abnormal hook run by &lt;code&gt;make-frame&lt;/code&gt; after it created the frame. Each function in &lt;code&gt;after-make-frame-functions&lt;/code&gt; receives one argument, the frame just created.</target>
        </trans-unit>
        <trans-unit id="d8587f99198f36ccc0868cfa884bdb9eebf7fda4" translate="yes" xml:space="preserve">
          <source>An abnormal hook run by prefix commands (such as</source>
          <target state="translated">Un gancho anormal ejecutado por comandos de prefijo (como</target>
        </trans-unit>
        <trans-unit id="a76206aa6573ab5f6706b29d3c45607d86b5bf4d" translate="yes" xml:space="preserve">
          <source>An action function accepts two arguments: the buffer to display and an action alist. It attempts to display the buffer in some window, picking or creating a window according to its own criteria. If successful, it returns the window; otherwise, it returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">An action function accepts two arguments: the buffer to display and an action alist. It attempts to display the buffer in some window, picking or creating a window according to its own criteria. If successful, it returns the window; otherwise, it returns &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b8f8b239306495b67e6a33c553a3311a22ea8108" translate="yes" xml:space="preserve">
          <source>An action function for displaying buffers in side windows.</source>
          <target state="translated">Una función de acción para mostrar los buffers en las ventanas laterales.</target>
        </trans-unit>
        <trans-unit id="8d4ccdf032d06b3ff88d7877263294cc83765270" translate="yes" xml:space="preserve">
          <source>An alist of the minor modes of this buffer.</source>
          <target state="translated">Una lista de los modos menores de este buffer.</target>
        </trans-unit>
        <trans-unit id="9d0b7856c0ae1bba2fe0095e327228fef5e6cbeb" translate="yes" xml:space="preserve">
          <source>An alternative to keeping around C data structures that need to be passed to module functions later is to create &lt;em&gt;user pointer&lt;/em&gt; objects. A user pointer, or &lt;code&gt;user-ptr&lt;/code&gt;, object is a Lisp object that encapsulates a C pointer and can have an associated finalizer function, which is called when the object is garbage-collected (see &lt;a href=&quot;garbage-collection#Garbage-Collection&quot;&gt;Garbage Collection&lt;/a&gt;). The module</source>
          <target state="translated">An alternative to keeping around C data structures that need to be passed to module functions later is to create &lt;em&gt;user pointer&lt;/em&gt; objects. A user pointer, or &lt;code&gt;user-ptr&lt;/code&gt; , object is a Lisp object that encapsulates a C pointer and can have an associated finalizer function, which is called when the object is garbage-collected (see &lt;a href=&quot;garbage-collection#Garbage-Collection&quot;&gt;Garbage Collection&lt;/a&gt;). The module</target>
        </trans-unit>
        <trans-unit id="76745f9f38a9adc0e71accf01a6af367ec394a13" translate="yes" xml:space="preserve">
          <source>An alternative, structured regexp notation.</source>
          <target state="translated">Una notación alternativa y estructurada de regexp.</target>
        </trans-unit>
        <trans-unit id="49d23cb0a4197518f11c87451f54d2c79b88ddd3" translate="yes" xml:space="preserve">
          <source>An anonymous face: a property list of the form &lt;code&gt;(&lt;var&gt;keyword&lt;/var&gt;
&lt;var&gt;value&lt;/var&gt; &amp;hellip;)&lt;/code&gt;, where each &lt;var&gt;keyword&lt;/var&gt; is a face attribute name and &lt;var&gt;value&lt;/var&gt; is a value for that attribute.</source>
          <target state="translated">An anonymous face: a property list of the form &lt;code&gt;(&lt;var&gt;keyword&lt;/var&gt; &lt;var&gt;value&lt;/var&gt; &amp;hellip;)&lt;/code&gt; , where each &lt;var&gt;keyword&lt;/var&gt; is a face attribute name and &lt;var&gt;value&lt;/var&gt; is a value for that attribute.</target>
        </trans-unit>
        <trans-unit id="0cb1807f666d0b9ab5deb699a6ca67714dc0387b" translate="yes" xml:space="preserve">
          <source>An application can bind this variable to a non-&lt;code&gt;nil&lt;/code&gt; value around calls to these functions. If it does so, the application is fully responsible for correctly assigning the parameters of all involved windows when exiting that function.</source>
          <target state="translated">An application can bind this variable to a non- &lt;code&gt;nil&lt;/code&gt; value around calls to these functions. If it does so, the application is fully responsible for correctly assigning the parameters of all involved windows when exiting that function.</target>
        </trans-unit>
        <trans-unit id="17ba397de5d1c307ab7dde751562e065ea00e3df" translate="yes" xml:space="preserve">
          <source>An arrow in the left fringe indicates the line where the function is executing. Point initially shows where within the line the function is executing, but this ceases to be true if you move point yourself.</source>
          <target state="translated">Una flecha en la franja izquierda indica la línea donde se ejecuta la función.El punto inicialmente muestra donde dentro de la línea la función se está ejecutando,pero esto deja de ser cierto si usted mismo mueve el punto.</target>
        </trans-unit>
        <trans-unit id="ac945ca03e1203355b8e2eb7095f27f8bf8a33d9" translate="yes" xml:space="preserve">
          <source>An asynchronous process is controlled either via a &lt;em&gt;pty&lt;/em&gt; (pseudo-terminal) or a &lt;em&gt;pipe&lt;/em&gt;. The choice of pty or pipe is made when creating the process, by default based on the value of the variable &lt;code&gt;process-connection-type&lt;/code&gt; (see below). If available, ptys are usually preferable for processes visible to the user, as in Shell mode, because they allow for job control (</source>
          <target state="translated">An asynchronous process is controlled either via a &lt;em&gt;pty&lt;/em&gt; (pseudo-terminal) or a &lt;em&gt;pipe&lt;/em&gt;. The choice of pty or pipe is made when creating the process, by default based on the value of the variable &lt;code&gt;process-connection-type&lt;/code&gt; (see below). If available, ptys are usually preferable for processes visible to the user, as in Shell mode, because they allow for job control (</target>
        </trans-unit>
        <trans-unit id="fed2f1ab264295d6199c8837444baee7f96bfb5c" translate="yes" xml:space="preserve">
          <source>An autoload object is usually created with the function &lt;code&gt;autoload&lt;/code&gt;, which stores the object in the function cell of a symbol. See &lt;a href=&quot;autoload#Autoload&quot;&gt;Autoload&lt;/a&gt;, for more details.</source>
          <target state="translated">An autoload object is usually created with the function &lt;code&gt;autoload&lt;/code&gt; , which stores the object in the function cell of a symbol. See &lt;a href=&quot;autoload#Autoload&quot;&gt;Autoload&lt;/a&gt;, for more details.</target>
        </trans-unit>
        <trans-unit id="224896b7315afde30421b984952b3f7096f2d130" translate="yes" xml:space="preserve">
          <source>An autoloaded keymap loads automatically during key lookup when a prefix key&amp;rsquo;s binding is the symbol &lt;var&gt;function&lt;/var&gt;. Autoloading does not occur for other kinds of access to the keymap. In particular, it does not happen when a Lisp program gets the keymap from the value of a variable and calls &lt;code&gt;define-key&lt;/code&gt;; not even if the variable name is the same symbol &lt;var&gt;function&lt;/var&gt;.</source>
          <target state="translated">An autoloaded keymap loads automatically during key lookup when a prefix key&amp;rsquo;s binding is the symbol &lt;var&gt;function&lt;/var&gt; . Autoloading does not occur for other kinds of access to the keymap. In particular, it does not happen when a Lisp program gets the keymap from the value of a variable and calls &lt;code&gt;define-key&lt;/code&gt; ; not even if the variable name is the same symbol &lt;var&gt;function&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="b47c8f66af20cead9b4237e06f3de8a32193907c" translate="yes" xml:space="preserve">
          <source>An element can also look like this:</source>
          <target state="translated">Un elemento también puede tener este aspecto:</target>
        </trans-unit>
        <trans-unit id="d07aa0262359efa83d0dc291cc7ca1c53bb48bad" translate="yes" xml:space="preserve">
          <source>An empty element in the value of the environment variable, whether trailing (as in the above example), leading, or embedded, is replaced by the default value of &lt;code&gt;load-path&lt;/code&gt; as determined by the standard initialization procedure. If there are no such empty elements, then &lt;code&gt;EMACSLOADPATH&lt;/code&gt; specifies the entire &lt;code&gt;load-path&lt;/code&gt;. You must include either an empty element, or the explicit path to the directory containing the standard Lisp files, else Emacs will not function. (Another way to modify &lt;code&gt;load-path&lt;/code&gt; is to use the</source>
          <target state="translated">An empty element in the value of the environment variable, whether trailing (as in the above example), leading, or embedded, is replaced by the default value of &lt;code&gt;load-path&lt;/code&gt; as determined by the standard initialization procedure. If there are no such empty elements, then &lt;code&gt;EMACSLOADPATH&lt;/code&gt; specifies the entire &lt;code&gt;load-path&lt;/code&gt; . You must include either an empty element, or the explicit path to the directory containing the standard Lisp files, else Emacs will not function. (Another way to modify &lt;code&gt;load-path&lt;/code&gt; is to use the</target>
        </trans-unit>
        <trans-unit id="4ebff7dd30b4758ff88bcc9a085f45ded794db52" translate="yes" xml:space="preserve">
          <source>An empty sequence contributes nothing to the value returned by &lt;code&gt;append&lt;/code&gt;. As a consequence of this, a final &lt;code&gt;nil&lt;/code&gt; argument forces a copy of the previous argument:</source>
          <target state="translated">An empty sequence contributes nothing to the value returned by &lt;code&gt;append&lt;/code&gt; . As a consequence of this, a final &lt;code&gt;nil&lt;/code&gt; argument forces a copy of the previous argument:</target>
        </trans-unit>
        <trans-unit id="a86a8ba20f9c2d16da923dc8e59ec1f1d98d5dee" translate="yes" xml:space="preserve">
          <source>An equivalent expression for &lt;code&gt;(add-to-list '&lt;var&gt;var&lt;/var&gt;
&lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; is this:</source>
          <target state="translated">An equivalent expression for &lt;code&gt;(add-to-list '&lt;var&gt;var&lt;/var&gt; &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; is this:</target>
        </trans-unit>
        <trans-unit id="d3b3af3cc140e3e00a2eb7021cf621de45339c06" translate="yes" xml:space="preserve">
          <source>An error in &lt;var&gt;body&lt;/var&gt; does not undo the load, but does prevent execution of the rest of &lt;var&gt;body&lt;/var&gt;.</source>
          <target state="translated">An error in &lt;var&gt;body&lt;/var&gt; does not undo the load, but does prevent execution of the rest of &lt;var&gt;body&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="780991d8624f2cb2ad931ebb1b65ed8116e288c9" translate="yes" xml:space="preserve">
          <source>An error is signaled if &lt;var&gt;command&lt;/var&gt; is not a function or if it cannot be called interactively (i.e., is not a command). Note that keyboard macros (strings and vectors) are not accepted, even though they are considered commands, because they are not functions. If &lt;var&gt;command&lt;/var&gt; is a symbol, then &lt;code&gt;call-interactively&lt;/code&gt; uses its function definition.</source>
          <target state="translated">An error is signaled if &lt;var&gt;command&lt;/var&gt; is not a function or if it cannot be called interactively (i.e., is not a command). Note that keyboard macros (strings and vectors) are not accepted, even though they are considered commands, because they are not functions. If &lt;var&gt;command&lt;/var&gt; is a symbol, then &lt;code&gt;call-interactively&lt;/code&gt; uses its function definition.</target>
        </trans-unit>
        <trans-unit id="61727b4effcd7b8d96ef35b8becbc54d386ea1fd" translate="yes" xml:space="preserve">
          <source>An error is signaled if &lt;var&gt;directory&lt;/var&gt; is not the name of a directory that can be read.</source>
          <target state="translated">An error is signaled if &lt;var&gt;directory&lt;/var&gt; is not the name of a directory that can be read.</target>
        </trans-unit>
        <trans-unit id="a857332d53570982c6dc820fa3fd199f30c64bac" translate="yes" xml:space="preserve">
          <source>An error is signaled if &lt;var&gt;frame&lt;/var&gt; has no side windows and no saved state is found for it.</source>
          <target state="translated">An error is signaled if &lt;var&gt;frame&lt;/var&gt; has no side windows and no saved state is found for it.</target>
        </trans-unit>
        <trans-unit id="4c7868057424e94cc2ec18aa245abf34334cd76a" translate="yes" xml:space="preserve">
          <source>An error is signaled if &lt;var&gt;marker&lt;/var&gt; is neither a marker nor an integer.</source>
          <target state="translated">An error is signaled if &lt;var&gt;marker&lt;/var&gt; is neither a marker nor an integer.</target>
        </trans-unit>
        <trans-unit id="ce502c5c14b3dd5ab57c7b1bc0667e1dce7ae3f1" translate="yes" xml:space="preserve">
          <source>An error is signaled if &lt;var&gt;name&lt;/var&gt; is not a string.</source>
          <target state="translated">An error is signaled if &lt;var&gt;name&lt;/var&gt; is not a string.</target>
        </trans-unit>
        <trans-unit id="d180f585f076cc17698606f42a90ec93eb4bf554" translate="yes" xml:space="preserve">
          <source>An error is signaled if you cannot write or create &lt;var&gt;filename&lt;/var&gt;.</source>
          <target state="translated">An error is signaled if you cannot write or create &lt;var&gt;filename&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="4b96760d80ee8b7d0f895bcbd78c4d4e13017398" translate="yes" xml:space="preserve">
          <source>An error is signaled unless both &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; are integers or markers that indicate positions in the current buffer. (It is unimportant which number is larger.)</source>
          <target state="translated">An error is signaled unless both &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; are integers or markers that indicate positions in the current buffer. (It is unimportant which number is larger.)</target>
        </trans-unit>
        <trans-unit id="c51f55b2646e08b61f713ce7217e4887d1b95bfb" translate="yes" xml:space="preserve">
          <source>An error that has no explicit handler may call the Lisp debugger. The debugger is enabled if the variable &lt;code&gt;debug-on-error&lt;/code&gt; (see &lt;a href=&quot;error-debugging#Error-Debugging&quot;&gt;Error Debugging&lt;/a&gt;) is non-&lt;code&gt;nil&lt;/code&gt;. Unlike error handlers, the debugger runs in the environment of the error, so that you can examine values of variables precisely as they were at the time of the error.</source>
          <target state="translated">An error that has no explicit handler may call the Lisp debugger. The debugger is enabled if the variable &lt;code&gt;debug-on-error&lt;/code&gt; (see &lt;a href=&quot;error-debugging#Error-Debugging&quot;&gt;Error Debugging&lt;/a&gt;) is non- &lt;code&gt;nil&lt;/code&gt; . Unlike error handlers, the debugger runs in the environment of the error, so that you can examine values of variables precisely as they were at the time of the error.</target>
        </trans-unit>
        <trans-unit id="826bd3cc8d084ab396a2d00d5bdbe16d54e818a5" translate="yes" xml:space="preserve">
          <source>An ewoc maintains its text in the buffer that is current when you create it, so switch to the intended buffer before calling &lt;code&gt;ewoc-create&lt;/code&gt;.</source>
          <target state="translated">An ewoc maintains its text in the buffer that is current when you create it, so switch to the intended buffer before calling &lt;code&gt;ewoc-create&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc38d0c598a08a05ef1cbe7256ecba3cfbdd4bb4" translate="yes" xml:space="preserve">
          <source>An example of a major mode derived from Special mode is Buffer Menu mode, which is used by the</source>
          <target state="translated">Un ejemplo de un modo principal derivado del modo especial es el modo Buffer Menu,que es utilizado por el</target>
        </trans-unit>
        <trans-unit id="7d6bea7b0ca20a81d8dc92f7b4dfca2a43542cbd" translate="yes" xml:space="preserve">
          <source>An example of a major mode derived from Text mode is HTML mode. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/HTML-Mode.html#HTML-Mode&quot;&gt;SGML and HTML Modes&lt;/a&gt; in</source>
          <target state="translated">An example of a major mode derived from Text mode is HTML mode. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/HTML-Mode.html#HTML-Mode&quot;&gt;SGML and HTML Modes&lt;/a&gt; in</target>
        </trans-unit>
        <trans-unit id="c05e950c0b25e9808c554f3a2571c944640b7a15" translate="yes" xml:space="preserve">
          <source>An example of a major mode derived from Text mode is HTML mode. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/HTML-Mode.html#HTML-Mode&quot;&gt;SGML and HTML Modes&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ade7f0bd288bb8a7ac97abf2b4ebdf07442ec432" translate="yes" xml:space="preserve">
          <source>An example of a special form is the definition of &lt;code&gt;or&lt;/code&gt;, from</source>
          <target state="translated">An example of a special form is the definition of &lt;code&gt;or&lt;/code&gt; , from</target>
        </trans-unit>
        <trans-unit id="ef33cd83c0ed34c69762159ed48693bced9fc15f" translate="yes" xml:space="preserve">
          <source>An example of a type descriptor is any instance of &lt;code&gt;cl-structure-class&lt;/code&gt;.</source>
          <target state="translated">An example of a type descriptor is any instance of &lt;code&gt;cl-structure-class&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="24242de3c100a999285b6229c3f4ecef7f0ccd1f" translate="yes" xml:space="preserve">
          <source>An example of speedup from byte compilation.</source>
          <target state="translated">Un ejemplo de aceleración de la compilación de bytes.</target>
        </trans-unit>
        <trans-unit id="db343fa7b3e5ada913fce5ea3283f949a1870619" translate="yes" xml:space="preserve">
          <source>An example of the use of &lt;code&gt;defconst&lt;/code&gt; is Emacs&amp;rsquo;s definition of &lt;code&gt;float-pi&lt;/code&gt;&amp;mdash;the mathematical constant &lt;em&gt;pi&lt;/em&gt;, which ought not to be changed by anyone (attempts by the Indiana State Legislature notwithstanding). As the second form illustrates, however, &lt;code&gt;defconst&lt;/code&gt; is only advisory.</source>
          <target state="translated">An example of the use of &lt;code&gt;defconst&lt;/code&gt; is Emacs&amp;rsquo;s definition of &lt;code&gt;float-pi&lt;/code&gt; &amp;mdash;the mathematical constant &lt;em&gt;pi&lt;/em&gt;, which ought not to be changed by anyone (attempts by the Indiana State Legislature notwithstanding). As the second form illustrates, however, &lt;code&gt;defconst&lt;/code&gt; is only advisory.</target>
        </trans-unit>
        <trans-unit id="33511a390c0a0778aeb50d2d3d11dc55b02fecef" translate="yes" xml:space="preserve">
          <source>An exclusive lock for thread synchronization.</source>
          <target state="translated">Un bloqueo exclusivo para la sincronización de los hilos.</target>
        </trans-unit>
        <trans-unit id="33cdd5563375ee0f1deecf7207e816fded24f27d" translate="yes" xml:space="preserve">
          <source>An extended-format menu item is a more flexible and also cleaner alternative to the simple format. You define an event type with a binding that&amp;rsquo;s a list starting with the symbol &lt;code&gt;menu-item&lt;/code&gt;. For a non-selectable string, the binding looks like this:</source>
          <target state="translated">An extended-format menu item is a more flexible and also cleaner alternative to the simple format. You define an event type with a binding that&amp;rsquo;s a list starting with the symbol &lt;code&gt;menu-item&lt;/code&gt; . For a non-selectable string, the binding looks like this:</target>
        </trans-unit>
        <trans-unit id="dd1c3b20fbc2c4f6fdbfa727cc037df93e3d480a" translate="yes" xml:space="preserve">
          <source>An extra vertical space, with no actual line.</source>
          <target state="translated">Un espacio vertical extra,sin línea real.</target>
        </trans-unit>
        <trans-unit id="7d946c1cee5e1ba6a2795eaa7494b0742a37aa80" translate="yes" xml:space="preserve">
          <source>An image map is an alist where each element has the format &lt;code&gt;(&lt;var&gt;area&lt;/var&gt; &lt;var&gt;id&lt;/var&gt; &lt;var&gt;plist&lt;/var&gt;)&lt;/code&gt;. An &lt;var&gt;area&lt;/var&gt; is specified as either a rectangle, a circle, or a polygon.</source>
          <target state="translated">An image map is an alist where each element has the format &lt;code&gt;(&lt;var&gt;area&lt;/var&gt; &lt;var&gt;id&lt;/var&gt; &lt;var&gt;plist&lt;/var&gt;)&lt;/code&gt; . An &lt;var&gt;area&lt;/var&gt; is specified as either a rectangle, a circle, or a polygon.</target>
        </trans-unit>
        <trans-unit id="13e8bfffc43f95cb01c82af877179e85c97c1ef2" translate="yes" xml:space="preserve">
          <source>An important function of each major mode is to customize the</source>
          <target state="translated">Una función importante de cada modo principal es personalizar el</target>
        </trans-unit>
        <trans-unit id="3b4e015d01f5bbc54743f05646c0292a69c90141" translate="yes" xml:space="preserve">
          <source>An indication of the depth of recursive editing levels (not counting minibuffer levels): one &amp;lsquo;</source>
          <target state="translated">An indication of the depth of recursive editing levels (not counting minibuffer levels): one &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="93f69cd72673e3fad1210d3ff536f5eac200198d" translate="yes" xml:space="preserve">
          <source>An indirect buffer cannot visit a file, but its base buffer can. If you try to save the indirect buffer, that actually saves the base buffer.</source>
          <target state="translated">Un búfer indirecto no puede visitar un archivo,pero su búfer base sí.Si tratas de salvar el buffer indirecto,eso en realidad salva el buffer base.</target>
        </trans-unit>
        <trans-unit id="f4f16819d5893d8be64117345439137741280e45" translate="yes" xml:space="preserve">
          <source>An indirect buffer shares text with some other buffer.</source>
          <target state="translated">Un búfer indirecto comparte el texto con algún otro búfer.</target>
        </trans-unit>
        <trans-unit id="dd71440c52babfc9828665c875dc912c73851196" translate="yes" xml:space="preserve">
          <source>An input character event consists of a &lt;em&gt;basic code&lt;/em&gt; between 0 and 524287, plus any or all of these &lt;em&gt;modifier bits&lt;/em&gt;:</source>
          <target state="translated">An input character event consists of a &lt;em&gt;basic code&lt;/em&gt; between 0 and 524287, plus any or all of these &lt;em&gt;modifier bits&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="b3693e265751b6a87adf1612d2ffab4f6ae73018" translate="yes" xml:space="preserve">
          <source>An integer indicating the Universal Time offset in seconds, i.e., the number of seconds east of Greenwich.</source>
          <target state="translated">Un número entero que indica el Tiempo Universal compensado en segundos,es decir,el número de segundos al este de Greenwich.</target>
        </trans-unit>
        <trans-unit id="1b85b9238ec8e0326b1ff24adce97a9f1339ccd1" translate="yes" xml:space="preserve">
          <source>An integer number specifies the desired total height of the chosen window in lines.</source>
          <target state="translated">Un número entero especifica la altura total deseada de la ventana elegida en líneas.</target>
        </trans-unit>
        <trans-unit id="ae5275ccb64692a25834f62374d3e39ff8168087" translate="yes" xml:space="preserve">
          <source>An integer specifies the desired total width of the chosen window in columns.</source>
          <target state="translated">Un entero especifica el ancho total deseado de la ventana elegida en columnas.</target>
        </trans-unit>
        <trans-unit id="c25162540c717d611e1426ca74b4483ad68c8fe4" translate="yes" xml:space="preserve">
          <source>An integer that increments each time Emacs is built in the same directory (without cleaning). This is only of relevance when developing Emacs.</source>
          <target state="translated">Un entero que se incrementa cada vez que Emacs se construye en el mismo directorio (sin limpiar).Esto sólo es relevante cuando se desarrolla Emacs.</target>
        </trans-unit>
        <trans-unit id="a372e2277d8f20cbea84272110bbfb45b40e134a" translate="yes" xml:space="preserve">
          <source>An integer that represents the minimum number of colors the terminal should support. This matches a terminal if its &lt;code&gt;display-color-cells&lt;/code&gt; value is at least the specified integer.</source>
          <target state="translated">An integer that represents the minimum number of colors the terminal should support. This matches a terminal if its &lt;code&gt;display-color-cells&lt;/code&gt; value is at least the specified integer.</target>
        </trans-unit>
        <trans-unit id="666998409bcbf2ebf0bfb7f00ef2a1f48383fd05" translate="yes" xml:space="preserve">
          <source>An integer, the operating system&amp;rsquo;s process</source>
          <target state="translated">An integer, the operating system&amp;rsquo;s process</target>
        </trans-unit>
        <trans-unit id="85068ddc5e4eeb621888a2f24d4968195abea28e" translate="yes" xml:space="preserve">
          <source>An integer, which stands for itself.</source>
          <target state="translated">Un número entero,que se representa por sí mismo.</target>
        </trans-unit>
        <trans-unit id="483624c83a349249c67af72f64c85e27874fdcce" translate="yes" xml:space="preserve">
          <source>An integer. Although this is the simplest form, it cannot represent subsecond timestamps.</source>
          <target state="translated">Un número entero.Aunque esta es la forma más simple,no puede representar marcas de tiempo subsegundas.</target>
        </trans-unit>
        <trans-unit id="210e35e78b0bac1a6f24a3e4af59acfd7b9cae5d" translate="yes" xml:space="preserve">
          <source>An interned symbol whose name is read in the minibuffer. Terminate the input with either</source>
          <target state="translated">Un símbolo interno cuyo nombre se lee en el minibú.Termina la entrada con</target>
        </trans-unit>
        <trans-unit id="d5c7d47ecad208491b6f75958ec8b743a987742f" translate="yes" xml:space="preserve">
          <source>An irrelevant argument. This code always supplies &lt;code&gt;nil&lt;/code&gt; as the argument&amp;rsquo;s value. No I/O.</source>
          <target state="translated">An irrelevant argument. This code always supplies &lt;code&gt;nil&lt;/code&gt; as the argument&amp;rsquo;s value. No I/O.</target>
        </trans-unit>
        <trans-unit id="27856a404b93377dd2ce26256cf827f21924ee05" translate="yes" xml:space="preserve">
          <source>An object which can be invoked via the &lt;code&gt;command-execute&lt;/code&gt; primitive, usually due to the user typing in a key sequence &lt;em&gt;bound&lt;/em&gt; to that command. See &lt;a href=&quot;interactive-call#Interactive-Call&quot;&gt;Interactive Call&lt;/a&gt;. A command is usually a function; if the function is written in Lisp, it is made into a command by an &lt;code&gt;interactive&lt;/code&gt; form in the function definition (see &lt;a href=&quot;defining-commands#Defining-Commands&quot;&gt;Defining Commands&lt;/a&gt;). Commands that are functions can also be called from Lisp expressions, just like other functions.</source>
          <target state="translated">An object which can be invoked via the &lt;code&gt;command-execute&lt;/code&gt; primitive, usually due to the user typing in a key sequence &lt;em&gt;bound&lt;/em&gt; to that command. See &lt;a href=&quot;interactive-call#Interactive-Call&quot;&gt;Interactive Call&lt;/a&gt;. A command is usually a function; if the function is written in Lisp, it is made into a command by an &lt;code&gt;interactive&lt;/code&gt; form in the function definition (see &lt;a href=&quot;defining-commands#Defining-Commands&quot;&gt;Defining Commands&lt;/a&gt;). Commands that are functions can also be called from Lisp expressions, just like other functions.</target>
        </trans-unit>
        <trans-unit id="187267476807f080e4cb1366bd55dc6c3a734b11" translate="yes" xml:space="preserve">
          <source>An old piece of advice such as:</source>
          <target state="translated">Un viejo consejo como:</target>
        </trans-unit>
        <trans-unit id="a4f4924d6a637db199a3dbbcbcca04ca29c457ed" translate="yes" xml:space="preserve">
          <source>An ordinary, unencrypted connection.</source>
          <target state="translated">Una conexión ordinaria,no encriptada.</target>
        </trans-unit>
        <trans-unit id="8f179ba3c57cb5057b94b469bdc747796dcb263d" translate="yes" xml:space="preserve">
          <source>An output stream specifies what to do with the characters produced by printing. Most print functions accept an output stream as an optional argument. Here are the possible types of output stream:</source>
          <target state="translated">Un flujo de salida especifica qué hacer con los caracteres producidos por la impresión.La mayoría de las funciones de impresión aceptan una corriente de salida como argumento opcional.A continuación se indican los posibles tipos de flujo de salida:</target>
        </trans-unit>
        <trans-unit id="4a4e0e2275538ba1b3ea01efe71801a7f7f08073" translate="yes" xml:space="preserve">
          <source>An overlay uses markers to record its beginning and end; thus, editing the text of the buffer adjusts the beginning and end of each overlay so that it stays with the text. When you create the overlay, you can specify whether text inserted at the beginning should be inside the overlay or outside, and likewise for the end of the overlay.</source>
          <target state="translated">Una superposición utiliza marcadores para registrar su comienzo y final;así,al editar el texto de la memoria intermedia se ajusta el comienzo y el final de cada superposición para que se mantenga con el texto.Cuando se crea la superposición,se puede especificar si el texto insertado al principio debe estar dentro o fuera de la superposición,y lo mismo para el final de la superposición.</target>
        </trans-unit>
        <trans-unit id="b25d5a56d0ee9ca005469f384e566fa726e58945" translate="yes" xml:space="preserve">
          <source>An overlay whose &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; specify the same buffer position is known as &lt;em&gt;empty&lt;/em&gt;. A non-empty overlay can become empty if the text between its &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; is deleted. When that happens, the overlay is by default not deleted, but you can cause it to be deleted by giving it the &amp;lsquo;</source>
          <target state="translated">An overlay whose &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; specify the same buffer position is known as &lt;em&gt;empty&lt;/em&gt;. A non-empty overlay can become empty if the text between its &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; is deleted. When that happens, the overlay is by default not deleted, but you can cause it to be deleted by giving it the &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="51ba330dcf0b0a0baa7674c3887cbac685290344" translate="yes" xml:space="preserve">
          <source>An overview of all the special sequences.</source>
          <target state="translated">Una visión general de todas las secuencias especiales.</target>
        </trans-unit>
        <trans-unit id="045422a0880a1615b24f5a3a512245b1c27b53c3" translate="yes" xml:space="preserve">
          <source>An unspecified value, present for backward compatibility.</source>
          <target state="translated">Un valor no especificado,presente para la compatibilidad retroactiva.</target>
        </trans-unit>
        <trans-unit id="55764c2c6ec8109ce06467af931be863e9f31e08" translate="yes" xml:space="preserve">
          <source>And here is the code to set up the keymap for Lisp mode:</source>
          <target state="translated">Y aquí está el código para configurar el mapa de teclas para el modo Lisp:</target>
        </trans-unit>
        <trans-unit id="b6e7a99ffdd1e497ee1a0b6591309c08b6de6ce9" translate="yes" xml:space="preserve">
          <source>Animation operates by means of a timer. Note that Emacs imposes a minimum frame delay of 0.01 (&lt;code&gt;image-minimum-frame-delay&lt;/code&gt;) seconds. If the image itself does not specify a delay, Emacs uses &lt;code&gt;image-default-frame-delay&lt;/code&gt;.</source>
          <target state="translated">Animation operates by means of a timer. Note that Emacs imposes a minimum frame delay of 0.01 ( &lt;code&gt;image-minimum-frame-delay&lt;/code&gt; ) seconds. If the image itself does not specify a delay, Emacs uses &lt;code&gt;image-default-frame-delay&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6f497993755de46018a5ff1778be3f6bc999629d" translate="yes" xml:space="preserve">
          <source>Anonymous Functions</source>
          <target state="translated">Funciones anónimas</target>
        </trans-unit>
        <trans-unit id="d155a6db1755fd84bc4701702679a300873b3893" translate="yes" xml:space="preserve">
          <source>Another annoyance (more an inconvenience than a limitation) is that when a series of &lt;var&gt;condition&lt;/var&gt; predicates implement equality tests, there is a lot of repeated code. (&lt;code&gt;cl-case&lt;/code&gt; solves this inconvenience.)</source>
          <target state="translated">Another annoyance (more an inconvenience than a limitation) is that when a series of &lt;var&gt;condition&lt;/var&gt; predicates implement equality tests, there is a lot of repeated code. ( &lt;code&gt;cl-case&lt;/code&gt; solves this inconvenience.)</target>
        </trans-unit>
        <trans-unit id="5303f5dba20cc28da9809fdf0b019eb440c2beee" translate="yes" xml:space="preserve">
          <source>Another command,</source>
          <target state="translated">Otro comando,</target>
        </trans-unit>
        <trans-unit id="46429506bccc14a1fccf369e49c5519916a0ddea" translate="yes" xml:space="preserve">
          <source>Another difference from &lt;code&gt;rx-let&lt;/code&gt; is that the &lt;var&gt;bindings&lt;/var&gt; are dynamically scoped, and thus also available in functions called from &lt;var&gt;body&lt;/var&gt;. However, they are not visible inside functions defined in &lt;var&gt;body&lt;/var&gt;.</source>
          <target state="translated">Another difference from &lt;code&gt;rx-let&lt;/code&gt; is that the &lt;var&gt;bindings&lt;/var&gt; are dynamically scoped, and thus also available in functions called from &lt;var&gt;body&lt;/var&gt; . However, they are not visible inside functions defined in &lt;var&gt;body&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="60eaf91aef5f334ebb5d4be6e2c8a0357829b694" translate="yes" xml:space="preserve">
          <source>Another disadvantage is that making a large function inline can increase the size of compiled code both in files and in memory. Since the speed advantage of inline functions is greatest for small functions, you generally should not make large functions inline.</source>
          <target state="translated">Otra desventaja es que al hacer una función grande en línea puede aumentar el tamaño del código compilado tanto en los archivos como en la memoria.Dado que la ventaja de la velocidad de las funciones en línea es mayor en el caso de las funciones pequeñas,generalmente no se deben hacer funciones grandes en línea.</target>
        </trans-unit>
        <trans-unit id="6f719d65bc588f6114e05a3ba91ae2e2b8b0fa12" translate="yes" xml:space="preserve">
          <source>Another effect of calling this function is to cause unconditional redisplay of the mode line for the current buffer. In fact, the function &lt;code&gt;force-mode-line-update&lt;/code&gt; works by doing this:</source>
          <target state="translated">Another effect of calling this function is to cause unconditional redisplay of the mode line for the current buffer. In fact, the function &lt;code&gt;force-mode-line-update&lt;/code&gt; works by doing this:</target>
        </trans-unit>
        <trans-unit id="fe8d47ec903dba59decabf21d52ed6b989d5e361" translate="yes" xml:space="preserve">
          <source>Another element is &lt;code&gt;(selinux-context . &lt;var&gt;context&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;context&lt;/var&gt; is the SELinux context, in the same form returned by &lt;code&gt;file-selinux-context&lt;/code&gt;.</source>
          <target state="translated">Another element is &lt;code&gt;(selinux-context . &lt;var&gt;context&lt;/var&gt;)&lt;/code&gt; , where &lt;var&gt;context&lt;/var&gt; is the SELinux context, in the same form returned by &lt;code&gt;file-selinux-context&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d4a41e64a0f4d5fb203b7d54e395a3a3c7314af2" translate="yes" xml:space="preserve">
          <source>Another file for site-customization is</source>
          <target state="translated">Otro archivo para la personalización del sitio es</target>
        </trans-unit>
        <trans-unit id="dc46fb6acabbfa966b8518e0f2262bc229a7fdf8" translate="yes" xml:space="preserve">
          <source>Another important concept is the notion of &lt;em&gt;parent&lt;/em&gt;: The &lt;em&gt;parent&lt;/em&gt; of a token, is the head token of the nearest enclosing syntactic construct. For example, the parent of an &lt;code&gt;else&lt;/code&gt; is the &lt;code&gt;if&lt;/code&gt; to which it belongs, and the parent of an &lt;code&gt;if&lt;/code&gt;, in turn, is the lead token of the surrounding construct. The command &lt;code&gt;backward-sexp&lt;/code&gt; jumps from a token to its parent, but there are some caveats: for &lt;em&gt;openers&lt;/em&gt; (tokens which start a construct, like &lt;code&gt;if&lt;/code&gt;), you need to start with point before the token, while for others you need to start with point after the token. &lt;code&gt;backward-sexp&lt;/code&gt; stops with point before the parent token if that is the &lt;em&gt;opener&lt;/em&gt; of the token of interest, and otherwise it stops with point after the parent token.</source>
          <target state="translated">Another important concept is the notion of &lt;em&gt;parent&lt;/em&gt;: The &lt;em&gt;parent&lt;/em&gt; of a token, is the head token of the nearest enclosing syntactic construct. For example, the parent of an &lt;code&gt;else&lt;/code&gt; is the &lt;code&gt;if&lt;/code&gt; to which it belongs, and the parent of an &lt;code&gt;if&lt;/code&gt; , in turn, is the lead token of the surrounding construct. The command &lt;code&gt;backward-sexp&lt;/code&gt; jumps from a token to its parent, but there are some caveats: for &lt;em&gt;openers&lt;/em&gt; (tokens which start a construct, like &lt;code&gt;if&lt;/code&gt; ), you need to start with point before the token, while for others you need to start with point after the token. &lt;code&gt;backward-sexp&lt;/code&gt; stops with point before the parent token if that is the &lt;em&gt;opener&lt;/em&gt; of the token of interest, and otherwise it stops with point after the parent token.</target>
        </trans-unit>
        <trans-unit id="b9deb7098c7fabbe640d3f39576b579bcc48e2d3" translate="yes" xml:space="preserve">
          <source>Another problem can happen if the macro definition itself evaluates any of the macro argument expressions, such as by calling &lt;code&gt;eval&lt;/code&gt; (see &lt;a href=&quot;eval#Eval&quot;&gt;Eval&lt;/a&gt;). If the argument is supposed to refer to the user&amp;rsquo;s variables, you may have trouble if the user happens to use a variable with the same name as one of the macro arguments. Inside the macro body, the macro argument binding is the most local binding of this variable, so any references inside the form being evaluated do refer to it. Here is an example:</source>
          <target state="translated">Otro problema puede suceder si la definici&amp;oacute;n de macro en s&amp;iacute; misma eval&amp;uacute;a cualquiera de las expresiones de argumento de macro, como llamando a &lt;code&gt;eval&lt;/code&gt; (ver &lt;a href=&quot;eval#Eval&quot;&gt;Eval&lt;/a&gt; ). Si se supone que el argumento se refiere a las variables del usuario, puede tener problemas si el usuario usa una variable con el mismo nombre que uno de los argumentos de la macro. Dentro del cuerpo de la macro, el enlace del argumento de macro es el enlace m&amp;aacute;s local de esta variable, por lo que cualquier referencia dentro del formulario que se est&amp;aacute; evaluando se refiere a &amp;eacute;l. Aqu&amp;iacute; hay un ejemplo:</target>
        </trans-unit>
        <trans-unit id="0557ba812636c13b28f9c028bebedfc50e7d0d42" translate="yes" xml:space="preserve">
          <source>Another problem with calling &lt;code&gt;eval&lt;/code&gt; in a macro definition is that it probably won&amp;rsquo;t do what you intend in a compiled program. The byte compiler runs macro definitions while compiling the program, when the program&amp;rsquo;s own computations (which you might have wished to access with &lt;code&gt;eval&lt;/code&gt;) don&amp;rsquo;t occur and its local variable bindings don&amp;rsquo;t exist.</source>
          <target state="translated">Otro problema de llamar a &lt;code&gt;eval&lt;/code&gt; en una definici&amp;oacute;n de macro es que probablemente no har&amp;aacute; lo que pretendes en un programa compilado. El compilador de bytes ejecuta definiciones de macros mientras compila el programa, cuando los propios c&amp;aacute;lculos del programa (a los que quiz&amp;aacute;s haya deseado acceder con &lt;code&gt;eval&lt;/code&gt; ) no ocurren y sus enlaces de variables locales no existen.</target>
        </trans-unit>
        <trans-unit id="2808e270cef0e3cc098d7ecd467a657ae4eca448" translate="yes" xml:space="preserve">
          <source>Another prominent use of property lists is for storing symbol properties. Every symbol possesses a list of properties, used to record miscellaneous information about the symbol; these properties are stored in the form of a property list. See &lt;a href=&quot;symbol-properties#Symbol-Properties&quot;&gt;Symbol Properties&lt;/a&gt;.</source>
          <target state="translated">Otro uso destacado de las listas de propiedades es para almacenar propiedades de s&amp;iacute;mbolos. Cada s&amp;iacute;mbolo posee una lista de propiedades, que se utiliza para registrar informaci&amp;oacute;n diversa sobre el s&amp;iacute;mbolo; estas propiedades se almacenan en forma de lista de propiedades. Consulte &lt;a href=&quot;symbol-properties#Symbol-Properties&quot;&gt;Propiedades de s&amp;iacute;mbolo&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a7cde5f29771c6fd0640e059c163a4125f612e60" translate="yes" xml:space="preserve">
          <source>Another use for &lt;code&gt;image-flush&lt;/code&gt; is for memory conservation. If your Lisp program creates a large number of temporary images over a period much shorter than &lt;code&gt;image-cache-eviction-delay&lt;/code&gt; (see below), you can opt to flush unused images yourself, instead of waiting for Emacs to do it automatically.</source>
          <target state="translated">Otro uso &lt;code&gt;image-flush&lt;/code&gt; de im&amp;aacute;genes es para la conservaci&amp;oacute;n de la memoria. Si su programa Lisp crea una gran cantidad de im&amp;aacute;genes temporales durante un per&amp;iacute;odo mucho m&amp;aacute;s corto que &lt;code&gt;image-cache-eviction-delay&lt;/code&gt; (ver m&amp;aacute;s abajo), puede optar por eliminar las im&amp;aacute;genes no utilizadas usted mismo, en lugar de esperar a que Emacs lo haga autom&amp;aacute;ticamente.</target>
        </trans-unit>
        <trans-unit id="641eb2680ee1c66beb56d48bd54946b6ae9853e6" translate="yes" xml:space="preserve">
          <source>Another way of classifying character syntax.</source>
          <target state="translated">Otra forma de clasificar la sintaxis de los caracteres.</target>
        </trans-unit>
        <trans-unit id="4bd2ea34cde1c693974149a710eecd977a89a21d" translate="yes" xml:space="preserve">
          <source>Another way to customize Imenu for a major mode is to set the variables &lt;code&gt;imenu-prev-index-position-function&lt;/code&gt; and &lt;code&gt;imenu-extract-index-name-function&lt;/code&gt;:</source>
          <target state="translated">Otra forma de personalizar Imenu para un modo principal es establecer las variables &lt;code&gt;imenu-prev-index-position-function&lt;/code&gt; e &lt;code&gt;imenu-extract-index-name-function&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6a0538015d82239738c87e340807fdb7d0f6e3a0" translate="yes" xml:space="preserve">
          <source>Answer this question &amp;ldquo;no&amp;rdquo;, and give up on the entire series of questions for the current buffer. Continue to the next buffer in the sequence.</source>
          <target state="translated">Responda esta pregunta &quot;no&quot; y renuncie a toda la serie de preguntas para el b&amp;uacute;fer actual. Contin&amp;uacute;e con el siguiente b&amp;uacute;fer de la secuencia.</target>
        </trans-unit>
        <trans-unit id="274994b09ea810169b43f8a646ebc9ffc6bce18b" translate="yes" xml:space="preserve">
          <source>Answer this question &amp;ldquo;no&amp;rdquo;, and give up on the entire series of questions, assuming that the answers will be &amp;ldquo;no&amp;rdquo;.</source>
          <target state="translated">Responda esta pregunta &quot;no&quot;, y renuncie a toda la serie de preguntas, asumiendo que las respuestas ser&amp;aacute;n &quot;no&quot;.</target>
        </trans-unit>
        <trans-unit id="d8496e3b1f926969c35562be91206a0af61ee16e" translate="yes" xml:space="preserve">
          <source>Answer this question &amp;ldquo;yes&amp;rdquo;, and give up on the entire series of questions, assuming that subsequent answers will be &amp;ldquo;no&amp;rdquo;.</source>
          <target state="translated">Responda &quot;s&amp;iacute;&quot; a esta pregunta y desista de toda la serie de preguntas, asumiendo que las respuestas posteriores ser&amp;aacute;n &quot;no&quot;.</target>
        </trans-unit>
        <trans-unit id="f56b5305911f928e39581a218bfd705b0028549b" translate="yes" xml:space="preserve">
          <source>Answer this question &amp;ldquo;yes&amp;rdquo;, but show the results&amp;mdash;don&amp;rsquo;t advance yet to the next question.</source>
          <target state="translated">Responda &amp;ldquo;s&amp;iacute;&amp;rdquo; a esta pregunta, pero muestre los resultados; no avance todav&amp;iacute;a a la siguiente pregunta.</target>
        </trans-unit>
        <trans-unit id="c32d375e1b285db59346c4795a32d1241b4b196d" translate="yes" xml:space="preserve">
          <source>Answer this question and all subsequent questions in the series with &amp;ldquo;yes&amp;rdquo;, without further user interaction, for all remaining buffers.</source>
          <target state="translated">Responda esta pregunta y todas las preguntas posteriores de la serie con &quot;s&amp;iacute;&quot;, sin m&amp;aacute;s interacci&amp;oacute;n del usuario, para todos los b&amp;uacute;feres restantes.</target>
        </trans-unit>
        <trans-unit id="cf8d75f96842754b6fdf5c2cb0d9b07cc288c581" translate="yes" xml:space="preserve">
          <source>Answer this question and all subsequent questions in the series with &amp;ldquo;yes&amp;rdquo;, without further user interaction.</source>
          <target state="translated">Responda esta pregunta y todas las preguntas posteriores de la serie con un &quot;s&amp;iacute;&quot;, sin m&amp;aacute;s interacci&amp;oacute;n del usuario.</target>
        </trans-unit>
        <trans-unit id="58980dd0f49cd2faac7cab10b446ea677250ef35" translate="yes" xml:space="preserve">
          <source>Antinews</source>
          <target state="translated">Antinews</target>
        </trans-unit>
        <trans-unit id="1fa1accc626834eb5e37df54ce5a411a8faa2f5a" translate="yes" xml:space="preserve">
          <source>Any Lisp program output that would normally go to the echo area, either using &lt;code&gt;message&lt;/code&gt;, or using &lt;code&gt;prin1&lt;/code&gt;, etc., with &lt;code&gt;t&lt;/code&gt; as the stream, goes instead to Emacs&amp;rsquo;s standard descriptors when in batch mode: &lt;code&gt;message&lt;/code&gt; writes to the standard error descriptor, while &lt;code&gt;prin1&lt;/code&gt; and other print functions write to the standard output. Similarly, input that would normally come from the minibuffer is read from the standard input descriptor. Thus, Emacs behaves much like a noninteractive application program. (The echo area output that Emacs itself normally generates, such as command echoing, is suppressed entirely.)</source>
          <target state="translated">Cualquier salida del programa Lisp que normalmente ir&amp;iacute;a al &amp;aacute;rea de eco, ya sea usando &lt;code&gt;message&lt;/code&gt; , o usando &lt;code&gt;prin1&lt;/code&gt; , etc., con &lt;code&gt;t&lt;/code&gt; como flujo, va en cambio a los descriptores est&amp;aacute;ndar de Emacs cuando est&amp;aacute; en modo por lotes: &lt;code&gt;message&lt;/code&gt; escribe en el descriptor de error est&amp;aacute;ndar, mientras &lt;code&gt;prin1&lt;/code&gt; y otras funciones de impresi&amp;oacute;n escriben en la salida est&amp;aacute;ndar. De manera similar, la entrada que normalmente vendr&amp;iacute;a del minib&amp;uacute;fer se lee desde el descriptor de entrada est&amp;aacute;ndar. Por tanto, Emacs se comporta como un programa de aplicaci&amp;oacute;n no interactivo. (La salida del &amp;aacute;rea de eco que normalmente genera Emacs, como el eco de comandos, se suprime por completo).</target>
        </trans-unit>
        <trans-unit id="050f2a1f992936a9f3bd70f97c3df722975a4ffc" translate="yes" xml:space="preserve">
          <source>Any buffer which does not specify values for these variables uses the values specified by the &lt;code&gt;left-fringe&lt;/code&gt; and &lt;code&gt;right-fringe&lt;/code&gt; frame parameters (see &lt;a href=&quot;layout-parameters#Layout-Parameters&quot;&gt;Layout Parameters&lt;/a&gt;).</source>
          <target state="translated">Cualquier tamp&amp;oacute;n que no especifica los valores de estas variables utiliza los valores especificados por el &lt;code&gt;left-fringe&lt;/code&gt; y &lt;code&gt;right-fringe&lt;/code&gt; par&amp;aacute;metros de trama (ver &lt;a href=&quot;layout-parameters#Layout-Parameters&quot;&gt;Disposici&amp;oacute;n Par&amp;aacute;metros&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="fd492b9bb3754cde03d33417c72155f2cdb192d7" translate="yes" xml:space="preserve">
          <source>Any conditional construct can be expressed with &lt;code&gt;cond&lt;/code&gt; or with &lt;code&gt;if&lt;/code&gt;. Therefore, the choice between them is a matter of style. For example:</source>
          <target state="translated">Cualquier construcci&amp;oacute;n condicional se puede expresar con &lt;code&gt;cond&lt;/code&gt; o con &lt;code&gt;if&lt;/code&gt; . Por tanto, la elecci&amp;oacute;n entre ellos es cuesti&amp;oacute;n de estilo. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="6a06364a7a0a952bf465c39928bf99f3f61b0422" translate="yes" xml:space="preserve">
          <source>Any connection profile of &lt;var&gt;profiles&lt;/var&gt; must have been already defined by &lt;code&gt;connection-local-set-profile-variables&lt;/code&gt;.</source>
          <target state="translated">Cualquier perfil de conexi&amp;oacute;n de &lt;var&gt;profiles&lt;/var&gt; debe haber sido definido por &lt;code&gt;connection-local-set-profile-variables&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a92544790b0c628c4a67c0d9ad0654a8710429c7" translate="yes" xml:space="preserve">
          <source>Any function or macro defined as Lisp code may be set to break on entry, regardless of whether it is interpreted code or compiled code. If the function is a command, it will enter the debugger when called from Lisp and when called interactively (after the reading of the arguments). You can also set debug-on-entry for primitive functions (i.e., those written in C) this way, but it only takes effect when the primitive is called from Lisp code. Debug-on-entry is not allowed for special forms.</source>
          <target state="translated">Cualquier función o macro definida como código Lisp puede ser configurada para que se rompa al entrar,independientemente de si es código interpretado o código compilado.Si la función es un comando,entrará en el depurador cuando se llame desde Lisp y cuando se llame interactivamente (después de la lectura de los argumentos).También puede establecer la depuración en la entrada para funciones primitivas (es decir,las escritas en C)de esta forma,pero sólo tiene efecto cuando la primitiva es llamada desde el código de Lisp.La depuración en la entrada no está permitida para formas especiales.</target>
        </trans-unit>
        <trans-unit id="8638b648157581df0efb6302834ee2f03492764d" translate="yes" xml:space="preserve">
          <source>Any integer glyph code greater than or equal to the length of the glyph table is displayed literally.</source>
          <target state="translated">Cualquier código entero de glifos mayor o igual a la longitud de la tabla de glifos se muestra literalmente.</target>
        </trans-unit>
        <trans-unit id="4c6a27c6563d69b7aca82f351f60298b13184203" translate="yes" xml:space="preserve">
          <source>Any kind of Lisp code is valid inside &lt;var&gt;body&lt;/var&gt;, but &lt;code&gt;iter-yield&lt;/code&gt; and &lt;code&gt;iter-yield-from&lt;/code&gt; cannot appear inside &lt;code&gt;unwind-protect&lt;/code&gt; forms.</source>
          <target state="translated">Cualquier tipo de c&amp;oacute;digo Lisp es v&amp;aacute;lido dentro del &lt;var&gt;body&lt;/var&gt; , pero &lt;code&gt;iter-yield&lt;/code&gt; e &lt;code&gt;iter-yield-from&lt;/code&gt; no pueden aparecer dentro &lt;code&gt;unwind-protect&lt;/code&gt; formas de protecci&amp;oacute;n de desenrollado .</target>
        </trans-unit>
        <trans-unit id="a4fc7cbf2349da81499a5258b7f6c62e471e0a86" translate="yes" xml:space="preserve">
          <source>Any of the above window elements (except &lt;code&gt;text&lt;/code&gt;) can also be used with &lt;code&gt;:align-to&lt;/code&gt; to specify that the position is relative to the left edge of the given area. Once the base offset for a relative position has been set (by the first occurrence of one of these symbols), further occurrences of these symbols are interpreted as the width of the specified area. For example, to align to the center of the left-margin, use</source>
          <target state="translated">Cualquiera de los elementos de la ventana anteriores (excepto el &lt;code&gt;text&lt;/code&gt; o ) tambi&amp;eacute;n se puede usar con &lt;code&gt;:align-to&lt;/code&gt; para especificar que la posici&amp;oacute;n es relativa al borde izquierdo del &amp;aacute;rea dada. Una vez que se ha establecido el desplazamiento base para una posici&amp;oacute;n relativa (por la primera aparici&amp;oacute;n de uno de estos s&amp;iacute;mbolos), las apariciones posteriores de estos s&amp;iacute;mbolos se interpretan como el ancho del &amp;aacute;rea especificada. Por ejemplo, para alinear con el centro del margen izquierdo, use</target>
        </trans-unit>
        <trans-unit id="947bbfa4cfb925a66b42d553b356034e0c632a8d" translate="yes" xml:space="preserve">
          <source>Any of these arguments can be given to identify the process that is to be configured. If none of these arguments is given, the current buffer&amp;rsquo;s process is used.</source>
          <target state="translated">Cualquiera de estos argumentos se puede dar para identificar el proceso que se va a configurar. Si no se proporciona ninguno de estos argumentos, se utiliza el proceso del b&amp;uacute;fer actual.</target>
        </trans-unit>
        <trans-unit id="d761e83aca259b6c169b8f0ba443733debb02169" translate="yes" xml:space="preserve">
          <source>Any other character following &amp;lsquo;</source>
          <target state="translated">Cualquier otro personaje siguiente '</target>
        </trans-unit>
        <trans-unit id="8b9b2ed191d1fda99979a3c9c2769788ca05c905" translate="yes" xml:space="preserve">
          <source>Any other format character results in an &amp;lsquo;</source>
          <target state="translated">Cualquier otro car&amp;aacute;cter de formato da como resultado un '</target>
        </trans-unit>
        <trans-unit id="da32c3cdd65afe4fd7df1698891716e553030ff9" translate="yes" xml:space="preserve">
          <source>Any other keyword arguments are passed directly to the &lt;code&gt;defcustom&lt;/code&gt; generated for the variable &lt;var&gt;mode&lt;/var&gt;.</source>
          <target state="translated">Cualquier otro argumento de palabra clave se pasa directamente al &lt;code&gt;defcustom&lt;/code&gt; generado para el &lt;var&gt;mode&lt;/var&gt; variable .</target>
        </trans-unit>
        <trans-unit id="a9dd7d9e5f6c66323cdba5127ceece8bda299da3" translate="yes" xml:space="preserve">
          <source>Any other kind of property value is a height spec, which translates into a number&amp;mdash;the specified line height. There are several ways to write a height spec; here&amp;rsquo;s how each of them translates into a number:</source>
          <target state="translated">Cualquier otro tipo de valor de propiedad es una especificaci&amp;oacute;n de altura, que se traduce en un n&amp;uacute;mero: la altura de l&amp;iacute;nea especificada. Hay varias formas de escribir una especificaci&amp;oacute;n de altura; as&amp;iacute; es como cada uno de ellos se traduce en un n&amp;uacute;mero:</target>
        </trans-unit>
        <trans-unit id="80c9ec34ade8e4048b77d042cf2894fc4d219cf7" translate="yes" xml:space="preserve">
          <source>Any other list is a &lt;em&gt;sublist specification&lt;/em&gt; and the argument must be a list whose elements match the specification &lt;var&gt;elements&lt;/var&gt;.</source>
          <target state="translated">Cualquier otra lista es una &lt;em&gt;especificaci&amp;oacute;n de sublista&lt;/em&gt; y el argumento debe ser una lista cuyos elementos coincidan con los &lt;var&gt;elements&lt;/var&gt; la especificaci&amp;oacute;n .</target>
        </trans-unit>
        <trans-unit id="efc5f087f8ebb1db404013a2d9b97f161e290782" translate="yes" xml:space="preserve">
          <source>Any other non-&lt;code&gt;nil&lt;/code&gt; value means to resize minibuffer-only frames by calling &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; (see &lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;Resizing Windows&lt;/a&gt;).</source>
          <target state="translated">Cualquier otro valor que no sea &lt;code&gt;nil&lt;/code&gt; significa cambiar el tama&amp;ntilde;o de los marcos de solo minib&amp;uacute;fer llamando a &lt;code&gt;fit-frame-to-buffer&lt;/code&gt; (consulte &lt;a href=&quot;resizing-windows#Resizing-Windows&quot;&gt;Cambiar el tama&amp;ntilde;o de Windows&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="de1dca44c2e30439c9ac0151a01ef3eee3bfac38" translate="yes" xml:space="preserve">
          <source>Any other non-&lt;code&gt;nil&lt;/code&gt; value means to select a window instantaneously as soon as the mouse pointer enters it.</source>
          <target state="translated">Cualquier otro valor que no sea &lt;code&gt;nil&lt;/code&gt; significa seleccionar una ventana instant&amp;aacute;neamente tan pronto como el puntero del mouse entre en ella.</target>
        </trans-unit>
        <trans-unit id="e871933984652498dd2af321ce39af05be929b56" translate="yes" xml:space="preserve">
          <source>Any other symbol in a specification list may be a predicate or an indirect specification.</source>
          <target state="translated">Cualquier otro símbolo en una lista de especificaciones puede ser un predicado o una especificación indirecta.</target>
        </trans-unit>
        <trans-unit id="dbbabe65f60d7295c7911e33efd55bcf43789dbf" translate="yes" xml:space="preserve">
          <source>Any other value for &lt;var&gt;order&lt;/var&gt; removes the numeric order of &lt;var&gt;element&lt;/var&gt; if it already has one; otherwise, it is equivalent to &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Cualquier otro valor de &lt;var&gt;order&lt;/var&gt; elimina el orden num&amp;eacute;rico del &lt;var&gt;element&lt;/var&gt; o si ya tiene uno; de lo contrario, es equivalente a &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8680b4e68cce538925a1e5ee144f0189a305515f" translate="yes" xml:space="preserve">
          <source>Any other value means consider windows on the selected frame.</source>
          <target state="translated">Cualquier otro valor significa considerar las ventanas en el marco seleccionado.</target>
        </trans-unit>
        <trans-unit id="15b4bce70cfe3f06b7b1a2f9ed3099030510e5dc" translate="yes" xml:space="preserve">
          <source>Any other value means to try iconifying the child frame. Since such an attempt may not be honored by all window managers and can even lead to making the child frame unresponsive to user actions, the default is to iconify the top level frame instead.</source>
          <target state="translated">Cualquier otro valor significa tratar de iconizar el marco del niño.Dado que este intento puede no ser aceptado por todos los gestores de ventanas y puede incluso llevar a que el marco infantil no responda a las acciones del usuario,el valor por defecto es iconizar el marco de nivel superior.</target>
        </trans-unit>
        <trans-unit id="ebda99dde61c93e02da1a43ffb05fdba89a8d98e" translate="yes" xml:space="preserve">
          <source>Any other value of &lt;var&gt;require-match&lt;/var&gt; behaves like &lt;code&gt;t&lt;/code&gt;, except that the exit commands won&amp;rsquo;t exit if it performs completion.</source>
          <target state="translated">Cualquier otro valor de &lt;var&gt;require-match&lt;/var&gt; se comporta como &lt;code&gt;t&lt;/code&gt; , excepto que los comandos de salida no se cerrar&amp;aacute;n si realiza la finalizaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="86b521e158439e11f2ef9516804d10581a8219f2" translate="yes" xml:space="preserve">
          <source>Any parameters not mentioned in &lt;var&gt;parameters&lt;/var&gt; default to the values in the alist &lt;code&gt;default-frame-alist&lt;/code&gt; (see &lt;a href=&quot;initial-parameters#Initial-Parameters&quot;&gt;Initial Parameters&lt;/a&gt;); parameters not specified there default from the X resources or its equivalent on your operating system (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/X-Resources.html#X-Resources&quot;&gt;X Resources&lt;/a&gt; in</source>
          <target state="translated">Cualquier par&amp;aacute;metro que no se mencione en los &lt;var&gt;parameters&lt;/var&gt; predeterminados a los valores de la lista &lt;code&gt;default-frame-alist&lt;/code&gt; (ver &lt;a href=&quot;initial-parameters#Initial-Parameters&quot;&gt;Par&amp;aacute;metros iniciales&lt;/a&gt; ); par&amp;aacute;metros no especificados all&amp;iacute; predeterminados de los recursos X o su equivalente en su sistema operativo (ver &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/X-Resources.html#X-Resources&quot;&gt;Recursos X&lt;/a&gt; en</target>
        </trans-unit>
        <trans-unit id="a46138d20d0a121d630b320a02bc0c9d8ed3971c" translate="yes" xml:space="preserve">
          <source>Any parameters not mentioned in &lt;var&gt;parameters&lt;/var&gt; default to the values in the alist &lt;code&gt;default-frame-alist&lt;/code&gt; (see &lt;a href=&quot;initial-parameters#Initial-Parameters&quot;&gt;Initial Parameters&lt;/a&gt;); parameters not specified there default from the X resources or its equivalent on your operating system (see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/X-Resources.html#X-Resources&quot;&gt;X Resources&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9860f00e606061647e41c129f0e0903be5e003a1" translate="yes" xml:space="preserve">
          <source>Any processes that have this buffer as the &lt;code&gt;process-buffer&lt;/code&gt; are sent the &lt;code&gt;SIGHUP&lt;/code&gt; (hangup) signal, which normally causes them to terminate. See &lt;a href=&quot;signals-to-processes#Signals-to-Processes&quot;&gt;Signals to Processes&lt;/a&gt;.</source>
          <target state="translated">Cualquier proceso que tenga este b&amp;uacute;fer como b&amp;uacute;fer de &lt;code&gt;process-buffer&lt;/code&gt; &lt;code&gt;SIGHUP&lt;/code&gt; la se&amp;ntilde;al SIGHUP ( colgar ), que normalmente hace que finalicen. Consulte &lt;a href=&quot;signals-to-processes#Signals-to-Processes&quot;&gt;Se&amp;ntilde;ales a procesos&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="545802d960c72afb533f784369e021b83a96956f" translate="yes" xml:space="preserve">
          <source>Any redisplay triggering the run of window change functions may be aborted. If the abort occurs before window change functions have run to their completion, they will be run again with the previous values, that is, as if redisplay had not been performed. If aborted later, they will be run with the new values, that is, as if redisplay had been actually performed.</source>
          <target state="translated">Cualquier rediseño que dispare la ejecución de las funciones de cambio de ventana puede ser abortado.Si el aborto se produce antes de que las funciones de cambio de ventana se hayan ejecutado hasta el final,se ejecutarán de nuevo con los valores anteriores,es decir,como si no se hubiera realizado la redistribución.Si se abortan más tarde,se ejecutarán con los nuevos valores,es decir,como si la redistribución se hubiera realizado realmente.</target>
        </trans-unit>
        <trans-unit id="7024b793b36bc3e3bb195637c26938af29b056cc" translate="yes" xml:space="preserve">
          <source>Any two distinct Lisp objects are different as keys.</source>
          <target state="translated">Dos objetos Lisp distintos son diferentes como claves.</target>
        </trans-unit>
        <trans-unit id="2402827e518f1d5fcdc03543bf7c6c4f8b5d7ef6" translate="yes" xml:space="preserve">
          <source>Any two regular expressions &lt;var&gt;a&lt;/var&gt; and &lt;var&gt;b&lt;/var&gt; can be concatenated. The result is a regular expression that matches a string if &lt;var&gt;a&lt;/var&gt; matches some amount of the beginning of that string and &lt;var&gt;b&lt;/var&gt; matches the rest of the string.</source>
          <target state="translated">Se pueden concatenar dos expresiones regulares &lt;var&gt;a&lt;/var&gt; y &lt;var&gt;b&lt;/var&gt; . El resultado es una expresi&amp;oacute;n regular que coincide con una cadena si &lt;var&gt;a&lt;/var&gt; coincide con una parte del comienzo de esa cadena y &lt;var&gt;b&lt;/var&gt; coincide con el resto de la cadena.</target>
        </trans-unit>
        <trans-unit id="45ffc4ae2f26e287178694c6132c38fe72023bb0" translate="yes" xml:space="preserve">
          <source>Any unhandled errors while loading a file terminate loading. If the load was done for the sake of &lt;code&gt;autoload&lt;/code&gt;, any function definitions made during the loading are undone.</source>
          <target state="translated">Cualquier error no controlado durante la carga de un archivo finaliza la carga. Si la carga se realiz&amp;oacute; por el bien de la &lt;code&gt;autoload&lt;/code&gt; , las definiciones de funci&amp;oacute;n realizadas durante la carga se deshacen.</target>
        </trans-unit>
        <trans-unit id="1ceb1e23a710f2ab6b34678613c9db79937409cd" translate="yes" xml:space="preserve">
          <source>Any variable whose name has a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;risky-local-variable&lt;/code&gt; property is considered risky. When you define a user option using &lt;code&gt;defcustom&lt;/code&gt;, you can set its &lt;code&gt;risky-local-variable&lt;/code&gt; property by adding the arguments &lt;code&gt;:risky &lt;var&gt;value&lt;/var&gt;&lt;/code&gt; to &lt;code&gt;defcustom&lt;/code&gt; (see &lt;a href=&quot;variable-definitions#Variable-Definitions&quot;&gt;Variable Definitions&lt;/a&gt;). In addition, any variable whose name ends in any of &amp;lsquo;</source>
          <target state="translated">Cualquier variable cuyo nombre tenga una propiedad de &lt;code&gt;risky-local-variable&lt;/code&gt; no &lt;code&gt;nil&lt;/code&gt; se considera riesgosa. Cuando define una opci&amp;oacute;n de usuario usando &lt;code&gt;defcustom&lt;/code&gt; , puede establecer su propiedad &lt;code&gt;risky-local-variable&lt;/code&gt; agregando los argumentos &lt;code&gt;:risky &lt;var&gt;value&lt;/var&gt;&lt;/code&gt; &lt;var&gt;value&lt;/var&gt; riesgo a &lt;code&gt;defcustom&lt;/code&gt; (consulte &lt;a href=&quot;variable-definitions#Variable-Definitions&quot;&gt;Definiciones de variables&lt;/a&gt; ). Adem&amp;aacute;s, cualquier variable cuyo nombre termine en cualquiera de '</target>
        </trans-unit>
        <trans-unit id="2146f7db0997563acb7fa242e2c3506c43699f4a" translate="yes" xml:space="preserve">
          <source>Anything else means to consider windows on &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s frame, and no others.</source>
          <target state="translated">Cualquier otra cosa significa considerar ventanas en el marco de la &lt;var&gt;window&lt;/var&gt; y no otras.</target>
        </trans-unit>
        <trans-unit id="ed179d7c24b9f78db2acddd1c26cf5d5e3a10309" translate="yes" xml:space="preserve">
          <source>Apart from Fundamental mode, there are three major modes that other major modes commonly derive from: Text mode, Prog mode, and Special mode. While Text mode is useful in its own right (e.g., for editing files ending in</source>
          <target state="translated">Aparte del modo Fundamental,hay tres modos principales de los que otros modos principales se derivan comúnmente:modo de texto,modo Prog y modo especial.Mientras que el modo Texto es útil por sí mismo (por ejemplo,para editar archivos que terminan en</target>
        </trans-unit>
        <trans-unit id="d92f266ff96117cb3b55d3ff2938ee734d58418c" translate="yes" xml:space="preserve">
          <source>Apart from the above usual keymaps, Emacs provides special ways for programs to make other keymaps active. Firstly, the variable &lt;code&gt;overriding-local-map&lt;/code&gt; specifies a keymap that replaces the usual active keymaps, except for the global keymap. Secondly, the terminal-local variable &lt;code&gt;overriding-terminal-local-map&lt;/code&gt; specifies a keymap that takes precedence over &lt;em&gt;all&lt;/em&gt; other keymaps (including &lt;code&gt;overriding-local-map&lt;/code&gt;); this is normally used for modal/transient keybindings (the function &lt;code&gt;set-transient-map&lt;/code&gt; provides a convenient interface for this). See &lt;a href=&quot;controlling-active-maps#Controlling-Active-Maps&quot;&gt;Controlling Active Maps&lt;/a&gt;, for details.</source>
          <target state="translated">Aparte de los mapas de teclas habituales anteriores, Emacs proporciona formas especiales para que los programas activen otros mapas de teclas. En primer lugar, la variable &lt;code&gt;overriding-local-map&lt;/code&gt; especifica un mapa de teclas que reemplaza los mapas de teclas activos habituales, excepto el mapa de teclas global. En segundo lugar, la variable terminal-local &lt;code&gt;overriding-terminal-local-map&lt;/code&gt; especifica un mapa de teclas que tiene prioridad sobre &lt;em&gt;todos los&lt;/em&gt; dem&amp;aacute;s mapas de teclas (incluido overriding &lt;code&gt;overriding-local-map&lt;/code&gt; ); esto se usa normalmente para combinaciones de teclas modales / transitorias (la funci&amp;oacute;n &lt;code&gt;set-transient-map&lt;/code&gt; proporciona una interfaz conveniente para esto). Consulte &lt;a href=&quot;controlling-active-maps#Controlling-Active-Maps&quot;&gt;Control de mapas activos&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="a68119502a0311abd68d0719c5b77a5911c9e84f" translate="yes" xml:space="preserve">
          <source>Apart from the functions documented in this section, you can print Lisp objects to the echo area by specifying &lt;code&gt;t&lt;/code&gt; as the output stream. See &lt;a href=&quot;output-streams#Output-Streams&quot;&gt;Output Streams&lt;/a&gt;.</source>
          <target state="translated">Aparte de las funciones documentadas en esta secci&amp;oacute;n, puede imprimir objetos Lisp en el &amp;aacute;rea de eco especificando &lt;code&gt;t&lt;/code&gt; como flujo de salida. Consulte &lt;a href=&quot;output-streams#Output-Streams&quot;&gt;Flujos de salida&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1cd2802aef7e489fd6909738c550b3b9f5ec028d" translate="yes" xml:space="preserve">
          <source>Apart from the values given below, each face attribute can have the value &lt;code&gt;unspecified&lt;/code&gt;. This special value means that the face doesn&amp;rsquo;t specify that attribute directly. An &lt;code&gt;unspecified&lt;/code&gt; attribute tells Emacs to refer instead to a parent face (see the description &lt;code&gt;:inherit&lt;/code&gt; attribute below); or, failing that, to an underlying face (see &lt;a href=&quot;displaying-faces#Displaying-Faces&quot;&gt;Displaying Faces&lt;/a&gt;). The &lt;code&gt;default&lt;/code&gt; face must specify all attributes.</source>
          <target state="translated">Aparte de los valores que se indican a continuaci&amp;oacute;n, cada atributo de rostro puede tener el valor sin &lt;code&gt;unspecified&lt;/code&gt; . Este valor especial significa que la cara no especifica ese atributo directamente. Un atributo &lt;code&gt;unspecified&lt;/code&gt; le dice a Emacs que se refiera en su lugar a una cara padre (vea la descripci&amp;oacute;n &lt;code&gt;:inherit&lt;/code&gt; atributo a continuaci&amp;oacute;n); o, en su defecto, a una cara subyacente (consulte &lt;a href=&quot;displaying-faces#Displaying-Faces&quot;&gt;Visualizaci&amp;oacute;n de caras&lt;/a&gt; ). La cara &lt;code&gt;default&lt;/code&gt; debe especificar todos los atributos.</target>
        </trans-unit>
        <trans-unit id="f240948e5698f084e306e2f0433d5215c7e9dc03" translate="yes" xml:space="preserve">
          <source>Append &lt;var&gt;child&lt;/var&gt; as the last child of &lt;var&gt;node&lt;/var&gt;.</source>
          <target state="translated">Agregue &lt;var&gt;child&lt;/var&gt; como &amp;uacute;ltimo hijo del &lt;var&gt;node&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="73973cfd168d40bb8277e2f6044ecdb605409c4e" translate="yes" xml:space="preserve">
          <source>Appendices</source>
          <target state="translated">Appendices</target>
        </trans-unit>
        <trans-unit id="6453a2437bbdcb5f8fffb150dbc05d248106b629" translate="yes" xml:space="preserve">
          <source>Applications should put a function on this hook only if they want to react to changes that happened on (or have been signaled for) two or more frames since last redisplay. In every other case, putting the function on &lt;code&gt;window-state-change-functions&lt;/code&gt; should be preferred.</source>
          <target state="translated">Las aplicaciones deben poner una funci&amp;oacute;n en este gancho solo si quieren reaccionar a los cambios que ocurrieron en (o se les ha se&amp;ntilde;alado) dos o m&amp;aacute;s cuadros desde la &amp;uacute;ltima vez que se volvi&amp;oacute; a mostrar. En cualquier otro caso, deber&amp;iacute;a preferirse poner la funci&amp;oacute;n en &lt;code&gt;window-state-change-functions&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="26de2593285b5ae9fccf013cfbb25224e0f5a299" translate="yes" xml:space="preserve">
          <source>Applying Customizations</source>
          <target state="translated">Aplicación de personalizaciones</target>
        </trans-unit>
        <trans-unit id="36aa9251a3a7a8564f2137c662428024f6ade2c8" translate="yes" xml:space="preserve">
          <source>Applying a function to each element of a list, etc.</source>
          <target state="translated">Aplicando una función a cada elemento de una lista,etc.</target>
        </trans-unit>
        <trans-unit id="8d1feffaedb79bbeb47768ea8d15131f798d1c88" translate="yes" xml:space="preserve">
          <source>Arbitrary text, read in the minibuffer and returned as a string (see &lt;a href=&quot;text-from-minibuffer#Text-from-Minibuffer&quot;&gt;Text from Minibuffer&lt;/a&gt;). Terminate the input with either</source>
          <target state="translated">Texto arbitrario, le&amp;iacute;do en el minib&amp;uacute;fer y devuelto como una cadena (ver &lt;a href=&quot;text-from-minibuffer#Text-from-Minibuffer&quot;&gt;Texto del minib&amp;uacute;fer&lt;/a&gt; ). Termine la entrada con</target>
        </trans-unit>
        <trans-unit id="7d9f86d28b0c0c91c1eb18ed796eb1ba12533f22" translate="yes" xml:space="preserve">
          <source>Arbitrary text, read in the minibuffer using the current buffer&amp;rsquo;s input method, and returned as a string (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Input-Methods.html#Input-Methods&quot;&gt;Input Methods&lt;/a&gt; in</source>
          <target state="translated">Texto arbitrario, le&amp;iacute;do en el minib&amp;uacute;fer usando el m&amp;eacute;todo de entrada del b&amp;uacute;fer actual y devuelto como una cadena (ver &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Input-Methods.html#Input-Methods&quot;&gt;M&amp;eacute;todos de entrada&lt;/a&gt; en</target>
        </trans-unit>
        <trans-unit id="05d76768f9e977efc5e853051eb26c7da6ad8d43" translate="yes" xml:space="preserve">
          <source>Arbitrary text, read in the minibuffer using the current buffer&amp;rsquo;s input method, and returned as a string (see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Input-Methods.html#Input-Methods&quot;&gt;Input Methods&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd4951fd6a7c3feab0f23a3cd32635bc99258318" translate="yes" xml:space="preserve">
          <source>Args out of range</source>
          <target state="translated">Los arcos están fuera de alcance...</target>
        </trans-unit>
        <trans-unit id="0c474d136d838c73efef53606031eb17d140e04e" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;literal&lt;/code&gt; and &lt;code&gt;regexp&lt;/code&gt; forms in &lt;var&gt;rx-expr&lt;/var&gt; must be string literals.</source>
          <target state="translated">Los argumentos a &lt;code&gt;literal&lt;/code&gt; formas literal y &lt;code&gt;regexp&lt;/code&gt; en &lt;var&gt;rx-expr&lt;/var&gt; deben ser literales de cadena.</target>
        </trans-unit>
        <trans-unit id="067d717a61de8fed36456114a24a52f9975bc09e" translate="yes" xml:space="preserve">
          <source>Arithmetic Operations</source>
          <target state="translated">Operaciones Aritméticas</target>
        </trans-unit>
        <trans-unit id="e9ba134322b748a6c1b2b91140e83920bb3352f8" translate="yes" xml:space="preserve">
          <source>Arithmetic error</source>
          <target state="translated">Error aritmético</target>
        </trans-unit>
        <trans-unit id="11d55c8ac9f9031983e49487cf4e01cc836699f5" translate="yes" xml:space="preserve">
          <source>Arithmetic overflow error</source>
          <target state="translated">Error de desbordamiento aritmético</target>
        </trans-unit>
        <trans-unit id="d11aaaa37e2311485d3875fbb3013fe0f23d4b0b" translate="yes" xml:space="preserve">
          <source>Around advice such as:</source>
          <target state="translated">Alrededor de consejos como:</target>
        </trans-unit>
        <trans-unit id="41fcc6cba3496dc0275b2af2eceda84dfb41da3d" translate="yes" xml:space="preserve">
          <source>Arrange to scan these files when producing the</source>
          <target state="translated">Arregla el escaneo de estos archivos cuando se produce la</target>
        </trans-unit>
        <trans-unit id="5a208284047f94a448814865ab5ceb940cbbaf32" translate="yes" xml:space="preserve">
          <source>Arranging to run a cleanup form if an error happens.</source>
          <target state="translated">Arreglando para ejecutar un formulario de limpieza si ocurre un error.</target>
        </trans-unit>
        <trans-unit id="238a5476b2b099dbf0d0f2fd0cf448d18972ec8a" translate="yes" xml:space="preserve">
          <source>Array Type</source>
          <target state="translated">Tipo de arreglo...</target>
        </trans-unit>
        <trans-unit id="73e54889ed8e57216f0ca1581847b9782331ae4c" translate="yes" xml:space="preserve">
          <source>Array, a fixed-size set of Lisp objects which may be accessed by an index.</source>
          <target state="translated">Array,un conjunto de objetos Lisp de tamaño fijo al que se puede acceder mediante un índice.</target>
        </trans-unit>
        <trans-unit id="b90cc9bfd23567a2ff5ba1f00e7c63ca6da8755e" translate="yes" xml:space="preserve">
          <source>Arrays</source>
          <target state="translated">Arrays</target>
        </trans-unit>
        <trans-unit id="081ca36507218ed52666e78775654403a5cbd1aa" translate="yes" xml:space="preserve">
          <source>Arrays are fixed-length sequences. They are further subdivided into strings, vectors, char-tables and bool-vectors. Vectors can hold elements of any type, whereas string elements must be characters, and bool-vector elements must be &lt;code&gt;t&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt;. Char-tables are like vectors except that they are indexed by any valid character code. The characters in a string can have text properties like characters in a buffer (see &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Text Properties&lt;/a&gt;), but vectors do not support text properties, even when their elements happen to be characters.</source>
          <target state="translated">Las matrices son secuencias de longitud fija. Adem&amp;aacute;s, se subdividen en cadenas, vectores, tablas de caracteres y vectores bool. Los vectores pueden sostienen elementos de cualquier tipo, mientras que elementos de cadena deben ser caracteres, y los elementos bool-vector debe ser &lt;code&gt;t&lt;/code&gt; o &lt;code&gt;nil&lt;/code&gt; . Las tablas de caracteres son como vectores excepto que est&amp;aacute;n indexadas por cualquier c&amp;oacute;digo de car&amp;aacute;cter v&amp;aacute;lido. Los caracteres de una cadena pueden tener propiedades de texto como los caracteres de un b&amp;uacute;fer (consulte &lt;a href=&quot;text-properties#Text-Properties&quot;&gt;Propiedades de texto&lt;/a&gt; ), pero los vectores no admiten propiedades de texto, incluso cuando sus elementos son caracteres.</target>
        </trans-unit>
        <trans-unit id="ce9ceca356ae903e8b84ce8876d693efd3ec5212" translate="yes" xml:space="preserve">
          <source>Arrays include strings and vectors.</source>
          <target state="translated">Los arreglos incluyen cuerdas y vectores.</target>
        </trans-unit>
        <trans-unit id="2a256f62beeee99618180946ede4c7802661b91b" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;lsh&lt;/code&gt; behaves like &lt;code&gt;ash&lt;/code&gt; except when &lt;var&gt;integer1&lt;/var&gt; and &lt;var&gt;count1&lt;/var&gt; are both negative, the following examples focus on these exceptional cases. These examples assume 30-bit fixnums.</source>
          <target state="translated">Como &lt;code&gt;lsh&lt;/code&gt; se comporta como &lt;code&gt;ash&lt;/code&gt; excepto cuando &lt;var&gt;integer1&lt;/var&gt; y &lt;var&gt;count1&lt;/var&gt; son ambos negativos, los siguientes ejemplos se centran en estos casos excepcionales. Estos ejemplos asumen valores fijos de 30 bits.</target>
        </trans-unit>
        <trans-unit id="85514a867e7a20560268b28853e86e5aa494f0b6" translate="yes" xml:space="preserve">
          <source>As a &amp;lsquo;</source>
          <target state="translated">Como un '</target>
        </trans-unit>
        <trans-unit id="06830ace04b31c9ec49e44f925889f374b949f5a" translate="yes" xml:space="preserve">
          <source>As a final step, before returning the chosen coding system, &lt;code&gt;select-safe-coding-system&lt;/code&gt; checks whether that coding system is consistent with what would be selected if the contents of the region were read from a file. (If not, this could lead to data corruption in a file subsequently re-visited and edited.) Normally, &lt;code&gt;select-safe-coding-system&lt;/code&gt; uses &lt;code&gt;buffer-file-name&lt;/code&gt; as the file for this purpose, but if &lt;var&gt;file&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it uses that file instead (this can be relevant for &lt;code&gt;write-region&lt;/code&gt; and similar functions). If it detects an apparent inconsistency, &lt;code&gt;select-safe-coding-system&lt;/code&gt; queries the user before selecting the coding system.</source>
          <target state="translated">Como paso final, antes de devolver el sistema de codificaci&amp;oacute;n elegido, &lt;code&gt;select-safe-coding-system&lt;/code&gt; comprueba si ese sistema de codificaci&amp;oacute;n es coherente con lo que se seleccionar&amp;iacute;a si el contenido de la regi&amp;oacute;n se leyera de un archivo. (De lo contrario, esto podr&amp;iacute;a conducir a la corrupci&amp;oacute;n de datos en un archivo que se vuelva a visitar y editar posteriormente). Normalmente, &lt;code&gt;select-safe-coding-system&lt;/code&gt; utiliza &lt;code&gt;buffer-file-name&lt;/code&gt; como el archivo para este prop&amp;oacute;sito, pero si el &lt;var&gt;file&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; , usa ese archivo en su lugar (esto puede ser relevante para &lt;code&gt;write-region&lt;/code&gt; de escritura y funciones similares). Si detecta una aparente inconsistencia, &lt;code&gt;select-safe-coding-system&lt;/code&gt; consulta al usuario antes de seleccionar el sistema de codificaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="8347ee4e8693c87255357e7f5883850b386cce75" translate="yes" xml:space="preserve">
          <source>As a general recommendation, try to avoid using &lt;code&gt;looking-back&lt;/code&gt; wherever possible, since it is slow. For this reason, there are no plans to add a &lt;code&gt;looking-back-p&lt;/code&gt; function.</source>
          <target state="translated">Como recomendaci&amp;oacute;n general, trate de evitar el &lt;code&gt;looking-back&lt;/code&gt; siempre que sea posible, ya que es lento. Por esta raz&amp;oacute;n, no hay planes para agregar una funci&amp;oacute;n &lt;code&gt;looking-back-p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="082ed7d43ef6ed77537415a322f89e49796457df" translate="yes" xml:space="preserve">
          <source>As a historical accident, &lt;var&gt;position&lt;/var&gt; was implemented inconsistently in different functions. In &lt;code&gt;completing-read&lt;/code&gt;, &lt;var&gt;position&lt;/var&gt;&amp;rsquo;s value is interpreted as origin-zero; that is, a value of 0 means the beginning of the string, 1 means after the first character, etc. In &lt;code&gt;read-minibuffer&lt;/code&gt;, and the other non-completion minibuffer input functions that support this argument, 1 means the beginning of the string, 2 means after the first character, etc.</source>
          <target state="translated">Como accidente hist&amp;oacute;rico, la &lt;var&gt;position&lt;/var&gt; se implement&amp;oacute; de manera inconsistente en diferentes funciones. En &lt;code&gt;completing-read&lt;/code&gt; , &lt;var&gt;position&lt;/var&gt; &amp;lsquo;s valor se interpreta como origen de cero; es decir, un valor de 0 significa el comienzo de la cadena, 1 significa despu&amp;eacute;s del primer car&amp;aacute;cter, etc. En &lt;code&gt;read-minibuffer&lt;/code&gt; , y las otras funciones de entrada del minib&amp;uacute;fer sin finalizaci&amp;oacute;n que admiten este argumento, 1 significa el comienzo de la cadena, 2 significa despu&amp;eacute;s del primer car&amp;aacute;cter, etc.</target>
        </trans-unit>
        <trans-unit id="4294650896b83fd9e5d4be93d12e4c592d4f0ccc" translate="yes" xml:space="preserve">
          <source>As a practical matter, if you are writing text for other people to read, you should set &lt;code&gt;fill-column&lt;/code&gt; to no more than 70. Otherwise the line will be too long for people to read comfortably, and this can make the text seem clumsy.</source>
          <target state="translated">En la pr&amp;aacute;ctica, si est&amp;aacute; escribiendo un texto para que lo lean otras personas, debe establecer &lt;code&gt;fill-column&lt;/code&gt; en no m&amp;aacute;s de 70. De lo contrario, la l&amp;iacute;nea ser&amp;aacute; demasiado larga para que la gente la lea c&amp;oacute;modamente y esto puede hacer que el texto parezca torpe.</target>
        </trans-unit>
        <trans-unit id="bb4aaf8789bdd2420621e991adcf2190aa28b7df" translate="yes" xml:space="preserve">
          <source>As a result, it is currently not possible to represent the character</source>
          <target state="translated">Como resultado,actualmente no es posible representar el personaje</target>
        </trans-unit>
        <trans-unit id="b5eb1265a3a71f4ed8bb8ff9aa6033bf57cae934" translate="yes" xml:space="preserve">
          <source>As a rule, the inner frame is subdivided into the frame&amp;rsquo;s root window (see &lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;Windows and Frames&lt;/a&gt;) and the frame&amp;rsquo;s minibuffer window (see &lt;a href=&quot;minibuffer-windows#Minibuffer-Windows&quot;&gt;Minibuffer Windows&lt;/a&gt;). There are two notable exceptions to this rule: A &lt;em&gt;minibuffer-less frame&lt;/em&gt; contains a root window only and does not contain a minibuffer window. A &lt;em&gt;minibuffer-only frame&lt;/em&gt; contains only a minibuffer window which also serves as that frame&amp;rsquo;s root window. See &lt;a href=&quot;initial-parameters#Initial-Parameters&quot;&gt;Initial Parameters&lt;/a&gt; for how to create such frame configurations.</source>
          <target state="translated">Como regla general, el marco interno se subdivide en la ventana ra&amp;iacute;z del marco (consulte &lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;Ventanas y marcos&lt;/a&gt; ) y la ventana del minib&amp;uacute;fer del marco (consulte &lt;a href=&quot;minibuffer-windows#Minibuffer-Windows&quot;&gt;Ventanas&lt;/a&gt; del minib&amp;uacute;fer ). Hay dos excepciones notables a esta regla: Un &lt;em&gt;marco sin minib&amp;uacute;fer&lt;/em&gt; contiene solo una ventana ra&amp;iacute;z y no contiene una ventana de minib&amp;uacute;fer. Un &lt;em&gt;marco de&lt;/em&gt; solo minib&amp;uacute;fer contiene solo una ventana de minib&amp;uacute;fer que tambi&amp;eacute;n sirve como ventana ra&amp;iacute;z de ese marco. Consulte &lt;a href=&quot;initial-parameters#Initial-Parameters&quot;&gt;Par&amp;aacute;metros iniciales&lt;/a&gt; para saber c&amp;oacute;mo crear dichas configuraciones de marco.</target>
        </trans-unit>
        <trans-unit id="7658703b932157d4e051dbdce1277e8475ac36f2" translate="yes" xml:space="preserve">
          <source>As a side effect, backups are necessarily made by copying. See &lt;a href=&quot;rename-or-copy#Rename-or-Copy&quot;&gt;Rename or Copy&lt;/a&gt;. Yet, at the same time, saving a precious file always breaks all hard links between the file you save and other file names.</source>
          <target state="translated">Como efecto secundario, las copias de seguridad se realizan necesariamente mediante copia. Consulte &lt;a href=&quot;rename-or-copy#Rename-or-Copy&quot;&gt;Cambiar nombre o Copiar&lt;/a&gt; . Sin embargo, al mismo tiempo, guardar un archivo valioso siempre rompe todos los v&amp;iacute;nculos entre el archivo que guarda y otros nombres de archivo.</target>
        </trans-unit>
        <trans-unit id="c897a9ef1100434cc7715e3fbb47fdb7454824de" translate="yes" xml:space="preserve">
          <source>As a simple example, we can concatenate the regular expressions &amp;lsquo;</source>
          <target state="translated">Como ejemplo simple, podemos concatenar las expresiones regulares '</target>
        </trans-unit>
        <trans-unit id="bc0e4551b2a377b6cea04f402200bc2b67248275" translate="yes" xml:space="preserve">
          <source>As a special case, &lt;code&gt;next&lt;/code&gt; of a frame&amp;rsquo;s root window points to the frame&amp;rsquo;s minibuffer window, provided this is not a minibuffer-only or minibuffer-less frame. On such frames &lt;code&gt;prev&lt;/code&gt; of the minibuffer window points to that frame&amp;rsquo;s root window. In any other case, the root window&amp;rsquo;s &lt;code&gt;next&lt;/code&gt; and the minibuffer window&amp;rsquo;s (if present) &lt;code&gt;prev&lt;/code&gt; fields are &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Como caso especial, la &lt;code&gt;next&lt;/code&gt; ventana ra&amp;iacute;z de un marco apunta a la ventana del minib&amp;uacute;fer del marco, siempre que no sea un marco de solo minib&amp;uacute;fer o sin minib&amp;uacute;fer. En tales marcos, la &lt;code&gt;prev&lt;/code&gt; de la ventana del minib&amp;uacute;fer apunta a la ventana ra&amp;iacute;z de ese marco. En cualquier otro caso, los campos &lt;code&gt;next&lt;/code&gt; de la ventana ra&amp;iacute;z y &lt;code&gt;prev&lt;/code&gt; de la ventana del minib&amp;uacute;fer (si est&amp;aacute; presente) son &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="640b1e7193c0828a7e9c0e26231c2f3a2ad3a5f4" translate="yes" xml:space="preserve">
          <source>As a special case, a function may return with a different buffer current. Emacs takes this to mean that the current buffer contains altered text to be output. It therefore changes the &lt;var&gt;start&lt;/var&gt; and &lt;var&gt;end&lt;/var&gt; arguments of the &lt;code&gt;write-region&lt;/code&gt; call, giving them the values of &lt;code&gt;point-min&lt;/code&gt; and &lt;code&gt;point-max&lt;/code&gt; in the new buffer, respectively. It also discards all previous annotations, because they should have been dealt with by this function.</source>
          <target state="translated">Como caso especial, una funci&amp;oacute;n puede regresar con una corriente de b&amp;uacute;fer diferente. Emacs considera que esto significa que el b&amp;uacute;fer actual contiene texto alterado para su salida. Por lo tanto, cambia los argumentos de &lt;var&gt;start&lt;/var&gt; y &lt;var&gt;end&lt;/var&gt; de la llamada a la &lt;code&gt;write-region&lt;/code&gt; , d&amp;aacute;ndoles los valores de &lt;code&gt;point-min&lt;/code&gt; y &lt;code&gt;point-max&lt;/code&gt; en el nuevo b&amp;uacute;fer, respectivamente. Tambi&amp;eacute;n descarta todas las anotaciones anteriores, porque deber&amp;iacute;an haber sido tratadas por esta funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="538f59aab9497ba8d48e55c2e55b2635fbda077a" translate="yes" xml:space="preserve">
          <source>As a special case, if &lt;var&gt;cons-cell&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this function returns &lt;code&gt;nil&lt;/code&gt;. Therefore, any list is a valid argument. An error is signaled if the argument is not a cons cell or &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Como caso especial, si &lt;var&gt;cons-cell&lt;/var&gt; es &lt;code&gt;nil&lt;/code&gt; , esta funci&amp;oacute;n devuelve &lt;code&gt;nil&lt;/code&gt; . Por tanto, cualquier lista es un argumento v&amp;aacute;lido. Se indica un error si el argumento no es una celda de contras o &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9e59f0605f808bdde6a150c85073aac9e660ad27" translate="yes" xml:space="preserve">
          <source>As a special case, if &lt;var&gt;cons-cell&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, this function returns &lt;code&gt;nil&lt;/code&gt;; therefore, any list is a valid argument. An error is signaled if the argument is not a cons cell or &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Como caso especial, si &lt;var&gt;cons-cell&lt;/var&gt; es &lt;code&gt;nil&lt;/code&gt; , esta funci&amp;oacute;n devuelve &lt;code&gt;nil&lt;/code&gt; ; por lo tanto, cualquier lista es un argumento v&amp;aacute;lido. Se indica un error si el argumento no es una celda de contras o &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ca7cece4ddf32f2b45c2031fd9e867d6b7889049" translate="yes" xml:space="preserve">
          <source>As a special case, if &lt;var&gt;flag&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, &lt;var&gt;window&lt;/var&gt; becomes &lt;em&gt;strongly&lt;/em&gt; dedicated to its buffer. &lt;code&gt;set-window-buffer&lt;/code&gt; signals an error when the window it acts upon is strongly dedicated to its buffer and does not already display the buffer it is asked to display. Other functions do not treat &lt;code&gt;t&lt;/code&gt; differently from any non-&lt;code&gt;nil&lt;/code&gt; value.</source>
          <target state="translated">Como caso especial, si el &lt;var&gt;flag&lt;/var&gt; es &lt;code&gt;t&lt;/code&gt; , la &lt;var&gt;window&lt;/var&gt; se dedica &lt;em&gt;fuertemente&lt;/em&gt; a su b&amp;uacute;fer. &lt;code&gt;set-window-buffer&lt;/code&gt; se&amp;ntilde;ala un error cuando la ventana sobre la que act&amp;uacute;a est&amp;aacute; fuertemente dedicada a su b&amp;uacute;fer y no muestra ya el b&amp;uacute;fer que se le pide que muestre. Otras funciones no tratan &lt;code&gt;t&lt;/code&gt; de manera diferente a cualquier valor que no sea &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4aced0063585f5b279a49199acec884cc3288ce9" translate="yes" xml:space="preserve">
          <source>As a special exception, the error symbol &lt;code&gt;quit&lt;/code&gt; does not have the condition &lt;code&gt;error&lt;/code&gt;, because quitting is not considered an error.</source>
          <target state="translated">Como excepci&amp;oacute;n especial, el s&amp;iacute;mbolo de error &lt;code&gt;quit&lt;/code&gt; no tiene la condici&amp;oacute;n de &lt;code&gt;error&lt;/code&gt; , porque dejar de fumar no se considera un error.</target>
        </trans-unit>
        <trans-unit id="07d6ca82a5135dea4c0b8a8393dd8ef483c67bf7" translate="yes" xml:space="preserve">
          <source>As a technical detail, when &lt;var&gt;switches&lt;/var&gt; contains the long &amp;lsquo;</source>
          <target state="translated">Como detalle t&amp;eacute;cnico, cuando los &lt;var&gt;switches&lt;/var&gt; contienen el largo '</target>
        </trans-unit>
        <trans-unit id="8f4f9b3b2bfdbcd1a575981570d572a49858acde" translate="yes" xml:space="preserve">
          <source>As a trivial example, here&amp;rsquo;s how to add advice that&amp;rsquo;ll modify the return value of a function every time it&amp;rsquo;s called:</source>
          <target state="translated">Como ejemplo trivial, aqu&amp;iacute; se explica c&amp;oacute;mo agregar consejos que modificar&amp;aacute;n el valor de retorno de una funci&amp;oacute;n cada vez que se llame:</target>
        </trans-unit>
        <trans-unit id="b1f3d0120b8c51d503e5e5327b8ce35d598fd0fd" translate="yes" xml:space="preserve">
          <source>As always, there must be no possibility of intervening searches between the call to a search function and the call to &lt;code&gt;match-data&lt;/code&gt; that is intended to access the match data for that search.</source>
          <target state="translated">Como siempre, no debe haber posibilidad de intervenir b&amp;uacute;squedas entre la llamada a una funci&amp;oacute;n de b&amp;uacute;squeda y la llamada a &lt;code&gt;match-data&lt;/code&gt; que tiene como objetivo acceder a los datos coincidentes para esa b&amp;uacute;squeda.</target>
        </trans-unit>
        <trans-unit id="1472e06e8a8fc0331e8821e03360d8c11b163707" translate="yes" xml:space="preserve">
          <source>As an alternative to the string-based syntax, Emacs provides the structured &lt;code&gt;rx&lt;/code&gt; notation based on Lisp S-expressions. This notation is usually easier to read, write and maintain than regexp strings, and can be indented and commented freely. It requires a conversion into string form since that is what regexp functions expect, but that conversion typically takes place during byte-compilation rather than when the Lisp code using the regexp is run.</source>
          <target state="translated">Como alternativa a la sintaxis basada en cadenas, Emacs proporciona la notaci&amp;oacute;n &lt;code&gt;rx&lt;/code&gt; estructurada basada en expresiones S de Lisp. Esta notaci&amp;oacute;n suele ser m&amp;aacute;s f&amp;aacute;cil de leer, escribir y mantener que las cadenas de expresiones regulares, y se puede sangrar y comentar libremente. Requiere una conversi&amp;oacute;n en forma de cadena, ya que eso es lo que esperan las funciones de expresiones regulares, pero esa conversi&amp;oacute;n generalmente tiene lugar durante la compilaci&amp;oacute;n de bytes en lugar de cuando se ejecuta el c&amp;oacute;digo Lisp que usa la expresi&amp;oacute;n regular.</target>
        </trans-unit>
        <trans-unit id="95b6d5f91746264f4dd9c82e53bfbbe800efcb96" translate="yes" xml:space="preserve">
          <source>As an example of &lt;code&gt;sort-subr&lt;/code&gt;, here is the complete function definition for &lt;code&gt;sort-lines&lt;/code&gt;:</source>
          <target state="translated">Como ejemplo de &lt;code&gt;sort-subr&lt;/code&gt; , aqu&amp;iacute; est&amp;aacute; la definici&amp;oacute;n de funci&amp;oacute;n completa para &lt;code&gt;sort-lines&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="39d7c3afd50025e1aeeb3300312260fc1e12eaba" translate="yes" xml:space="preserve">
          <source>As an example, here is a sequence of &lt;code&gt;split-window&lt;/code&gt; calls that yields the window configuration discussed in &lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;Windows and Frames&lt;/a&gt;. This example demonstrates splitting a live window as well as splitting an internal window. We begin with a frame containing a single window (a live root window), which we denote by &lt;var&gt;W4&lt;/var&gt;. Calling &lt;code&gt;(split-window W4)&lt;/code&gt; yields this window configuration:</source>
          <target state="translated">Como ejemplo, aqu&amp;iacute; hay una secuencia de llamadas de &lt;code&gt;split-window&lt;/code&gt; que produce la configuraci&amp;oacute;n de ventana discutida en &lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;Windows y Frames&lt;/a&gt; . Este ejemplo demuestra c&amp;oacute;mo dividir una ventana en vivo y c&amp;oacute;mo dividir una ventana interna. Comenzamos con un marco que contiene una sola ventana (una ventana ra&amp;iacute;z en vivo), que denotamos por &lt;var&gt;W4&lt;/var&gt; . Llamar &lt;code&gt;(split-window W4)&lt;/code&gt; produce esta configuraci&amp;oacute;n de ventana:</target>
        </trans-unit>
        <trans-unit id="3000460ba524b76305a7ac5b84a2be2cc384cf2b" translate="yes" xml:space="preserve">
          <source>As an example, here&amp;rsquo;s a simplified (and inefficient) version of the primitive function &lt;code&gt;next-single-char-property-change&lt;/code&gt; (see &lt;a href=&quot;property-search#Property-Search&quot;&gt;Property Search&lt;/a&gt;). It searches forward from position &lt;var&gt;pos&lt;/var&gt; for the next position where the value of a given property &lt;code&gt;prop&lt;/code&gt;, as obtained from either overlays or text properties, changes.</source>
          <target state="translated">Como ejemplo, aqu&amp;iacute; hay una versi&amp;oacute;n simplificada (e ineficiente) de la funci&amp;oacute;n primitiva &lt;code&gt;next-single-char-property-change&lt;/code&gt; (consulte &lt;a href=&quot;property-search#Property-Search&quot;&gt;B&amp;uacute;squeda de propiedades&lt;/a&gt; ). Se busca hacia adelante desde la posici&amp;oacute;n &lt;var&gt;pos&lt;/var&gt; para la siguiente posici&amp;oacute;n en la que el valor de una propiedad dada &lt;code&gt;prop&lt;/code&gt; , como se obtiene a partir de cualquiera de las superposiciones o las propiedades del texto, cambios.</target>
        </trans-unit>
        <trans-unit id="ac2005a3b3b773dfac881bf44c6dc9ffab49bfce" translate="yes" xml:space="preserve">
          <source>As an exception to the rule that a symbol&amp;rsquo;s name serves as its printed representation, &amp;lsquo;</source>
          <target state="translated">Como excepci&amp;oacute;n a la regla de que el nombre de un s&amp;iacute;mbolo sirve como su representaci&amp;oacute;n impresa, '</target>
        </trans-unit>
        <trans-unit id="2daa82fa454d2ab6dd7bfac54a9eefb51ae6ff85" translate="yes" xml:space="preserve">
          <source>As an exception, if you evaluate a &lt;code&gt;defface&lt;/code&gt; form with</source>
          <target state="translated">Como excepci&amp;oacute;n, si eval&amp;uacute;a una forma &lt;code&gt;defface&lt;/code&gt; con</target>
        </trans-unit>
        <trans-unit id="1a2d268c77084e31235d0ca81e4bd6ebfe990b03" translate="yes" xml:space="preserve">
          <source>As an exception, this function reads a file name using a graphical file dialog instead of the minibuffer, if all of the following are true:</source>
          <target state="translated">Como excepción,esta función lee un nombre de archivo usando un diálogo de archivo gráfico en lugar del minibúfer,si todo lo siguiente es cierto:</target>
        </trans-unit>
        <trans-unit id="7f170945bb4b449cfc683c1ed37876c06db96463" translate="yes" xml:space="preserve">
          <source>As an obsolescent calling convention, this function can be given six or more arguments. The first six arguments &lt;var&gt;second&lt;/var&gt;, &lt;var&gt;minute&lt;/var&gt;, &lt;var&gt;hour&lt;/var&gt;, &lt;var&gt;day&lt;/var&gt;, &lt;var&gt;month&lt;/var&gt;, and &lt;var&gt;year&lt;/var&gt; specify most of the components of a decoded time. If there are more than six arguments the &lt;em&gt;last&lt;/em&gt; argument is used as &lt;var&gt;zone&lt;/var&gt; and any other extra arguments are ignored, so that &lt;code&gt;(apply
#'encode-time (decode-time ...))&lt;/code&gt; works. In this obsolescent convention, &lt;var&gt;zone&lt;/var&gt; defaults to the current time zone rule (see &lt;a href=&quot;time-zone-rules#Time-Zone-Rules&quot;&gt;Time Zone Rules&lt;/a&gt;), and &lt;var&gt;dst&lt;/var&gt; is treated as if it was -1.</source>
          <target state="translated">Como una convenci&amp;oacute;n de llamada obsoleta, esta funci&amp;oacute;n puede recibir seis o m&amp;aacute;s argumentos. Los primeros seis argumentos &lt;var&gt;second&lt;/var&gt; , &lt;var&gt;minute&lt;/var&gt; , &lt;var&gt;hour&lt;/var&gt; , &lt;var&gt;day&lt;/var&gt; , &lt;var&gt;month&lt;/var&gt; y &lt;var&gt;year&lt;/var&gt; especifican la mayor&amp;iacute;a de los componentes de una hora decodificada. Si hay m&amp;aacute;s de seis argumentos, el &lt;em&gt;&amp;uacute;ltimo&lt;/em&gt; argumento se usa como &lt;var&gt;zone&lt;/var&gt; y cualquier otro argumento adicional se ignora, de modo que &lt;code&gt;(apply #'encode-time (decode-time ...))&lt;/code&gt; funciona. En esta convenci&amp;oacute;n obsoleta, la &lt;var&gt;zone&lt;/var&gt; predeterminado la regla de zona horaria actual (consulte &lt;a href=&quot;time-zone-rules#Time-Zone-Rules&quot;&gt;Reglas de zona horaria&lt;/a&gt; ), y &lt;var&gt;dst&lt;/var&gt; se trata como si fuera -1.</target>
        </trans-unit>
        <trans-unit id="2491282a6d1f8281ac0fcd08cc3d8281fc7d632e" translate="yes" xml:space="preserve">
          <source>As editing continues, undo lists get longer and longer. To prevent them from using up all available memory space, garbage collection trims them back to size limits you can set. (For this purpose, the size of an undo list measures the cons cells that make up the list, plus the strings of deleted text.) Three variables control the range of acceptable sizes: &lt;code&gt;undo-limit&lt;/code&gt;, &lt;code&gt;undo-strong-limit&lt;/code&gt; and &lt;code&gt;undo-outer-limit&lt;/code&gt;. In these variables, size is counted as the number of bytes occupied, which includes both saved text and other data.</source>
          <target state="translated">A medida que contin&amp;uacute;a la edici&amp;oacute;n, las listas de deshacer se hacen cada vez m&amp;aacute;s largas. Para evitar que utilicen todo el espacio de memoria disponible, la recolecci&amp;oacute;n de basura los recorta a los l&amp;iacute;mites de tama&amp;ntilde;o que puede establecer. (Para este prop&amp;oacute;sito, el tama&amp;ntilde;o de una lista de deshacer mide las celdas de contras que componen la lista, m&amp;aacute;s las cadenas de texto eliminado). Tres variables controlan el rango de tama&amp;ntilde;os aceptables: &lt;code&gt;undo-limit&lt;/code&gt; , &lt;code&gt;undo-strong-limit&lt;/code&gt; y &lt;code&gt;undo-outer-limit&lt;/code&gt; . En estas variables, el tama&amp;ntilde;o se cuenta como el n&amp;uacute;mero de bytes ocupados, que incluye tanto el texto guardado como otros datos.</target>
        </trans-unit>
        <trans-unit id="39fc3a710f302293efc2b0bded9197ae640e963b" translate="yes" xml:space="preserve">
          <source>As explained in &lt;a href=&quot;variable-scoping#Variable-Scoping&quot;&gt;Variable Scoping&lt;/a&gt;, Emacs can optionally enable lexical binding of variables. When lexical binding is enabled, any named function that you create (e.g., with &lt;code&gt;defun&lt;/code&gt;), as well as any anonymous function that you create using the &lt;code&gt;lambda&lt;/code&gt; macro or the &lt;code&gt;function&lt;/code&gt; special form or the &lt;code&gt;#'&lt;/code&gt; syntax (see &lt;a href=&quot;anonymous-functions#Anonymous-Functions&quot;&gt;Anonymous Functions&lt;/a&gt;), is automatically converted into a &lt;em&gt;closure&lt;/em&gt;.</source>
          <target state="translated">Como se explica en &lt;a href=&quot;variable-scoping#Variable-Scoping&quot;&gt;Variable Scoping&lt;/a&gt; , Emacs puede habilitar opcionalmente el enlace l&amp;eacute;xico de variables. Cuando la vinculaci&amp;oacute;n l&amp;eacute;xica est&amp;aacute; habilitada, cualquier funci&amp;oacute;n nombrada que cree (por ejemplo, con &lt;code&gt;defun&lt;/code&gt; ), as&amp;iacute; como cualquier funci&amp;oacute;n an&amp;oacute;nima que cree usando la macro &lt;code&gt;lambda&lt;/code&gt; o la forma especial de &lt;code&gt;function&lt;/code&gt; o la sintaxis &lt;code&gt;#'&lt;/code&gt; (ver &lt;a href=&quot;anonymous-functions#Anonymous-Functions&quot;&gt;Funciones an&amp;oacute;nimas&lt;/a&gt; ), es autom&amp;aacute;ticamente convertido en un &lt;em&gt;cierre&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="72d71c3cc374384e0af0a0724fbb040625e0c496" translate="yes" xml:space="preserve">
          <source>As far as &lt;code&gt;define-key&lt;/code&gt; is concerned, &lt;var&gt;item-string&lt;/var&gt; and &lt;var&gt;help-string&lt;/var&gt; are part of the event&amp;rsquo;s binding. However, &lt;code&gt;lookup-key&lt;/code&gt; returns just &lt;var&gt;real-binding&lt;/var&gt;, and only &lt;var&gt;real-binding&lt;/var&gt; is used for executing the key.</source>
          <target state="translated">En lo que respecta a &lt;code&gt;define-key&lt;/code&gt; , &lt;var&gt;item-string&lt;/var&gt; y &lt;var&gt;help-string&lt;/var&gt; son parte del enlace del evento. Sin embargo, &lt;code&gt;lookup-key&lt;/code&gt; devuelve solo &lt;var&gt;real-binding&lt;/var&gt; , y solo se usa &lt;var&gt;real-binding&lt;/var&gt; para ejecutar la clave.</target>
        </trans-unit>
        <trans-unit id="04371b35f248ca488e9627aecf5dda4a949a350a" translate="yes" xml:space="preserve">
          <source>As far as possible, new major modes should be derived, either directly or indirectly, from one of these three modes. One reason is that this allows users to customize a single mode hook (e.g., &lt;code&gt;prog-mode-hook&lt;/code&gt;) for an entire family of relevant modes (e.g., all programming language modes).</source>
          <target state="translated">En la medida de lo posible, los nuevos modos principales deber&amp;iacute;an derivarse, directa o indirectamente, de uno de estos tres modos. Una raz&amp;oacute;n es que esto permite a los usuarios personalizar un gancho de modo &amp;uacute;nico (por ejemplo, &lt;code&gt;prog-mode-hook&lt;/code&gt; ) para una familia completa de modos relevantes (por ejemplo, todos los modos de lenguaje de programaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="ff3ef6be607829903e8a6baac8628d90d56c089f" translate="yes" xml:space="preserve">
          <source>As far as the Lisp reader is concerned, &amp;lsquo;</source>
          <target state="translated">En lo que respecta al lector Lisp, '</target>
        </trans-unit>
        <trans-unit id="c87e482a1ccf8205de796dac23a5ade838dbdd25" translate="yes" xml:space="preserve">
          <source>As for &lt;code&gt;nil&lt;/code&gt;, but if</source>
          <target state="translated">En cuanto a &lt;code&gt;nil&lt;/code&gt; , pero si</target>
        </trans-unit>
        <trans-unit id="e20b47eb8e540da13af46101ac4dc2b6a5827bfb" translate="yes" xml:space="preserve">
          <source>As for &lt;code&gt;x-popup-menu&lt;/code&gt;, an element of the list may be just a string instead of a cons cell &lt;code&gt;(&lt;var&gt;string&lt;/var&gt; . &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt;. That makes a box that cannot be selected.</source>
          <target state="translated">En cuanto a &lt;code&gt;x-popup-menu&lt;/code&gt; , un elemento de la lista puede ser s&amp;oacute;lo una cadena en lugar de una cons cell &lt;code&gt;(&lt;var&gt;string&lt;/var&gt; . &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; . Eso crea una caja que no se puede seleccionar.</target>
        </trans-unit>
        <trans-unit id="18f02bf364dcfbbb51fe785b93d6502cf175baf7" translate="yes" xml:space="preserve">
          <source>As in the previous example (see &lt;a href=&quot;#pcase_002dexample_002d1&quot;&gt;Example 1&lt;/a&gt;), &lt;code&gt;and&lt;/code&gt; begins with a &lt;code&gt;pred&lt;/code&gt; sub-pattern to ensure the following sub-patterns work with an object of the correct type (string, in this case). If &lt;code&gt;(stringp&amp;nbsp;&lt;var&gt;expval&lt;/var&gt;)&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;pred&lt;/code&gt; fails, and thus &lt;code&gt;and&lt;/code&gt; fails, too.</source>
          <target state="translated">Como en el ejemplo anterior (ver &lt;a href=&quot;#pcase_002dexample_002d1&quot;&gt;Ejemplo 1&lt;/a&gt; ), &lt;code&gt;and&lt;/code&gt; comienza con un &lt;code&gt;pred&lt;/code&gt; para garantizar que los siguientes subpatrones funcionen con un objeto del tipo correcto (cadena, en este caso). Si &lt;code&gt;(stringp&amp;nbsp;&lt;var&gt;expval&lt;/var&gt;)&lt;/code&gt; retorna &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;pred&lt;/code&gt; falla, y por lo tanto &lt;code&gt;and&lt;/code&gt; no funciona, tambi&amp;eacute;n.</target>
        </trans-unit>
        <trans-unit id="aca399bc248b6540182b97cdc8a6ceed399a0db7" translate="yes" xml:space="preserve">
          <source>As is the case with &lt;code&gt;format&lt;/code&gt;, a format specification can include a width, which is a decimal number that appears after any flags. If a substitution contains fewer characters than its specified width, it is padded on the left:</source>
          <target state="translated">Como es el caso con el &lt;code&gt;format&lt;/code&gt; o , una especificaci&amp;oacute;n de formato puede incluir un ancho, que es un n&amp;uacute;mero decimal que aparece despu&amp;eacute;s de las marcas. Si una sustituci&amp;oacute;n contiene menos caracteres que su ancho especificado, se rellena a la izquierda:</target>
        </trans-unit>
        <trans-unit id="9007d393cbc677946e3b508fd46f178b4ffc51b8" translate="yes" xml:space="preserve">
          <source>As long as the selected window displays the current buffer, the window&amp;rsquo;s point and the buffer&amp;rsquo;s point always move together; they remain equal.</source>
          <target state="translated">Siempre que la ventana seleccionada muestre el b&amp;uacute;fer actual, el punto de la ventana y el punto del b&amp;uacute;fer siempre se mueven juntos; permanecen iguales.</target>
        </trans-unit>
        <trans-unit id="a4599968f503223a9b7899912e9301addb3f9878" translate="yes" xml:space="preserve">
          <source>As long as the value of &lt;code&gt;meta-prefix-char&lt;/code&gt; remains 27, key lookup translates</source>
          <target state="translated">Siempre que el valor de &lt;code&gt;meta-prefix-char&lt;/code&gt; siga siendo 27, la b&amp;uacute;squeda de claves se traduce</target>
        </trans-unit>
        <trans-unit id="2403f847930ce8798404ebfea8bddc7017e3a7dd" translate="yes" xml:space="preserve">
          <source>As previously noted in this manual, a Lisp program is represented primarily by Lisp objects, and only secondarily as text. The textual form of a Lisp program is given by the read syntax of the Lisp objects that constitute the program. Hence, the textual form of a variable in a Lisp program is written using the read syntax for the symbol representing the variable.</source>
          <target state="translated">Como se ha indicado anteriormente en este manual,un programa Lisp está representado principalmente por objetos Lisp,y sólo secundariamente como texto.La forma textual de un programa Lisp viene dada por la sintaxis de lectura de los objetos Lisp que constituyen el programa.Por lo tanto,la forma textual de una variable en un programa Lisp se escribe utilizando la sintaxis de lectura del símbolo que representa la variable.</target>
        </trans-unit>
        <trans-unit id="6c8a180c05fd7458e0ef38127404fa2fa9ac26b5" translate="yes" xml:space="preserve">
          <source>As previously noted, Emacs Lisp allows the same symbol to be defined both as a variable (e.g., with &lt;code&gt;defvar&lt;/code&gt;) and as a function or macro (e.g., with &lt;code&gt;defun&lt;/code&gt;). Such definitions do not conflict.</source>
          <target state="translated">Como se se&amp;ntilde;al&amp;oacute; anteriormente, Emacs Lisp permite definir el mismo s&amp;iacute;mbolo como variable (por ejemplo, con &lt;code&gt;defvar&lt;/code&gt; ) y como funci&amp;oacute;n o macro (por ejemplo, con &lt;code&gt;defun&lt;/code&gt; ). Tales definiciones no entran en conflicto.</target>
        </trans-unit>
        <trans-unit id="2a0ddcf1c50ca193923f438a27950fa2767aba7b" translate="yes" xml:space="preserve">
          <source>As the examples in this section illustrate, &lt;code&gt;format-spec&lt;/code&gt; is often used for selectively formatting an assortment of different pieces of information. This is useful in programs that provide user-customizable format strings, as the user can choose to format with a regular syntax and in any desired order only a subset of the information that the program makes available.</source>
          <target state="translated">Como ilustran los ejemplos de esta secci&amp;oacute;n, &lt;code&gt;format-spec&lt;/code&gt; se usa a menudo para formatear selectivamente una variedad de diferentes piezas de informaci&amp;oacute;n. Esto es &amp;uacute;til en programas que proporcionan cadenas de formato personalizables por el usuario, ya que el usuario puede optar por formatear con una sintaxis regular y en el orden que desee solo un subconjunto de la informaci&amp;oacute;n que el programa pone a disposici&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="fcae404ca40596bab0f46fcb1d1aebb078adf297" translate="yes" xml:space="preserve">
          <source>As the heap size increases, the time to perform a garbage collection increases. Thus, it can be desirable to do them less frequently in proportion.</source>
          <target state="translated">A medida que el tamaño del montón aumenta,el tiempo para realizar una recogida de basura aumenta.Por lo tanto,puede ser deseable hacerlas con menos frecuencia en proporción.</target>
        </trans-unit>
        <trans-unit id="7e3df73939184a50a6120a14310b27d84575c14c" translate="yes" xml:space="preserve">
          <source>As the name implies, this function does not display any messages.</source>
          <target state="translated">Como su nombre indica,esta función no muestra ningún mensaje.</target>
        </trans-unit>
        <trans-unit id="e31d6bc3247e331efa29ece4c6b4b7ecd35823cc" translate="yes" xml:space="preserve">
          <source>As these examples show, you can use a form with a lambda expression as its &lt;small&gt;CAR&lt;/small&gt; to make local variables and give them values. In the old days of Lisp, this technique was the only way to bind and initialize local variables. But nowadays, it is clearer to use the special form &lt;code&gt;let&lt;/code&gt; for this purpose (see &lt;a href=&quot;local-variables#Local-Variables&quot;&gt;Local Variables&lt;/a&gt;). Lambda expressions are mainly used as anonymous functions for passing as arguments to other functions (see &lt;a href=&quot;anonymous-functions#Anonymous-Functions&quot;&gt;Anonymous Functions&lt;/a&gt;), or stored as symbol function definitions to produce named functions (see &lt;a href=&quot;function-names#Function-Names&quot;&gt;Function Names&lt;/a&gt;).</source>
          <target state="translated">Como muestran estos ejemplos, puede usar un formulario con una expresi&amp;oacute;n lambda como su &lt;small&gt;CAR&lt;/small&gt; para crear variables locales y darles valores. En los viejos tiempos de Lisp, esta t&amp;eacute;cnica era la &amp;uacute;nica forma de vincular e inicializar variables locales. Pero hoy en d&amp;iacute;a, es m&amp;aacute;s claro usar la forma especial &lt;code&gt;let&lt;/code&gt; para este prop&amp;oacute;sito (ver &lt;a href=&quot;local-variables#Local-Variables&quot;&gt;Variables locales&lt;/a&gt; ). Las expresiones lambda se utilizan principalmente como funciones an&amp;oacute;nimas para pasar como argumentos a otras funciones (consulte &lt;a href=&quot;anonymous-functions#Anonymous-Functions&quot;&gt;Funciones an&amp;oacute;nimas&lt;/a&gt; ), o se almacenan como definiciones de funciones de s&amp;iacute;mbolo para producir funciones con nombre (consulte &lt;a href=&quot;function-names#Function-Names&quot;&gt;Nombres de funciones&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="37412dfde91c59b85070a1fa6f6188f685c97c7f" translate="yes" xml:space="preserve">
          <source>As you use this manual, we ask that you send corrections as soon as you find them. If you think of a simple, real life example for a function or group of functions, please make an effort to write it up and send it in. Please reference any comments to the node name and function or variable name, as appropriate. Also state the number of the edition you are criticizing.</source>
          <target state="translated">Al usar este manual,le pedimos que envíe las correcciones tan pronto como las encuentre.Si se le ocurre un ejemplo simple y real de una función o grupo de funciones,por favor haga un esfuerzo para escribirlo y enviarlo.Por favor,haga referencia a cualquier comentario sobre el nombre del nodo y la función o el nombre de la variable,según corresponda.También indique el número de la edición que está criticando.</target>
        </trans-unit>
        <trans-unit id="875666f6d9c3564876142613c6760e04a0da95b2" translate="yes" xml:space="preserve">
          <source>Aside from elements that specify bindings for keys, a keymap can also have a string as an element. This is called the &lt;em&gt;overall prompt string&lt;/em&gt; and makes it possible to use the keymap as a menu. See &lt;a href=&quot;defining-menus#Defining-Menus&quot;&gt;Defining Menus&lt;/a&gt;.</source>
          <target state="translated">Aparte de los elementos que especifican enlaces para las teclas, un mapa de teclas tambi&amp;eacute;n puede tener una cadena como elemento. Esto se denomina &lt;em&gt;cadena de solicitud general&lt;/em&gt; y hace posible utilizar el mapa de teclas como men&amp;uacute;. Consulte &lt;a href=&quot;defining-menus#Defining-Menus&quot;&gt;Definici&amp;oacute;n de men&amp;uacute;s&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1d3719187ae715d19fbc05c49ed805a355d60c95" translate="yes" xml:space="preserve">
          <source>Aside from some technical details, the body of the &lt;code&gt;find-file&lt;/code&gt; function is basically equivalent to:</source>
          <target state="translated">Aparte de algunos detalles t&amp;eacute;cnicos, el cuerpo de la funci&amp;oacute;n &lt;code&gt;find-file&lt;/code&gt; es b&amp;aacute;sicamente equivalente a:</target>
        </trans-unit>
        <trans-unit id="e8854395183315465f485147e2c0e5d0dad0bf04" translate="yes" xml:space="preserve">
          <source>Aside from the four basic conditional forms, Emacs Lisp also has a pattern-matching conditional form, the &lt;code&gt;pcase&lt;/code&gt; macro, a hybrid of &lt;code&gt;cond&lt;/code&gt; and &lt;code&gt;cl-case&lt;/code&gt; (see &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/cl/Conditionals.html#Conditionals&quot;&gt;Conditionals&lt;/a&gt; in</source>
          <target state="translated">Aparte de las cuatro formas condicionales b&amp;aacute;sicas, Emacs Lisp tambi&amp;eacute;n tiene una forma condicional de coincidencia de patrones, la macro &lt;code&gt;pcase&lt;/code&gt; , un h&amp;iacute;brido de &lt;code&gt;cond&lt;/code&gt; y &lt;code&gt;cl-case&lt;/code&gt; (ver &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/cl/Conditionals.html#Conditionals&quot;&gt;Condicionales&lt;/a&gt; en</target>
        </trans-unit>
        <trans-unit id="995ccc06998d75e8361ba673c2829f084e501215" translate="yes" xml:space="preserve">
          <source>Aside from the four basic conditional forms, Emacs Lisp also has a pattern-matching conditional form, the &lt;code&gt;pcase&lt;/code&gt; macro, a hybrid of &lt;code&gt;cond&lt;/code&gt; and &lt;code&gt;cl-case&lt;/code&gt; (see &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/cl/Conditionals.html#Conditionals&quot;&gt;Conditionals&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d784be167f97d7b6e1444587a023ff8462f0adde" translate="yes" xml:space="preserve">
          <source>Aside from the mathematical incorrectness of asserting that 9 is a double-digit integer, there is another problem with &lt;code&gt;MAYBE&lt;/code&gt;. The body form references &lt;code&gt;n&lt;/code&gt; once more, yet we do not see the updated value&amp;mdash;10&amp;mdash;at all. What happened to it?</source>
          <target state="translated">Aparte de la incorrecci&amp;oacute;n matem&amp;aacute;tica de afirmar que 9 es un n&amp;uacute;mero entero de dos d&amp;iacute;gitos, hay otro problema con &lt;code&gt;MAYBE&lt;/code&gt; . La forma del cuerpo hace referencia a &lt;code&gt;n&lt;/code&gt; una vez m&amp;aacute;s, pero no vemos el valor actualizado (10) en absoluto. &amp;iquest;Que le paso a eso?</target>
        </trans-unit>
        <trans-unit id="3562777bc6a3edbbbfe49bb7c58769707930308b" translate="yes" xml:space="preserve">
          <source>Ask</source>
          <target state="translated">Ask</target>
        </trans-unit>
        <trans-unit id="5cc8d5b1e25410343b6c6d03e6144240950ba693" translate="yes" xml:space="preserve">
          <source>Ask user a multiple choice question. &lt;var&gt;prompt&lt;/var&gt; should be a string that will be displayed as the prompt.</source>
          <target state="translated">Hazle al usuario una pregunta de opci&amp;oacute;n m&amp;uacute;ltiple. &lt;var&gt;prompt&lt;/var&gt; debe ser una cadena que se mostrar&amp;aacute; como indicador.</target>
        </trans-unit>
        <trans-unit id="a575156671adcef0e66c96ca9986973728b1a5e6" translate="yes" xml:space="preserve">
          <source>Asking Multiple-Choice Questions</source>
          <target state="translated">Haciendo preguntas de opción múltiple</target>
        </trans-unit>
        <trans-unit id="f48d4ab0834bb43d119ea91a0df80bf7d9b32ab7" translate="yes" xml:space="preserve">
          <source>Asking a question with a simple answer.</source>
          <target state="translated">Haciendo una pregunta con una respuesta simple.</target>
        </trans-unit>
        <trans-unit id="fe7e00f4a1fa3a5c1a99ddf9345528ef0e23e5df" translate="yes" xml:space="preserve">
          <source>Asking complex questions.</source>
          <target state="translated">Haciendo preguntas complejas.</target>
        </trans-unit>
        <trans-unit id="27b0c683fbfb99510b0eaaaf16a761a3b451a6a0" translate="yes" xml:space="preserve">
          <source>Asking the user to choose a coding system.</source>
          <target state="translated">Pedir al usuario que elija un sistema de codificación.</target>
        </trans-unit>
        <trans-unit id="e753d0e9020f53ad0de8df59f25fdea5680ef2fc" translate="yes" xml:space="preserve">
          <source>Asking the user to specify a character.</source>
          <target state="translated">Pidiendo al usuario que especifique un carácter.</target>
        </trans-unit>
        <trans-unit id="79f255d18c150763000984a919eb61a8c62cb802" translate="yes" xml:space="preserve">
          <source>Asking where the mouse is, or moving it.</source>
          <target state="translated">Preguntando dónde está el ratón,o moviéndolo.</target>
        </trans-unit>
        <trans-unit id="9a8aef5df06c4a0630dba0718222fbda7f2ae98b" translate="yes" xml:space="preserve">
          <source>Assertion failed</source>
          <target state="translated">La afirmación falló</target>
        </trans-unit>
        <trans-unit id="906762c6281b489fa4d8cc099d0c4e13c1902efd" translate="yes" xml:space="preserve">
          <source>Assigning Lisp property lists to text characters.</source>
          <target state="translated">Asignando listas de propiedades Lisp a los caracteres de texto.</target>
        </trans-unit>
        <trans-unit id="8f9fb7e8c09158fb874cf09f8dbca8383f6a050c" translate="yes" xml:space="preserve">
          <source>Associate &lt;var&gt;stderr&lt;/var&gt; with the standard error of the process. A non-&lt;code&gt;nil&lt;/code&gt; value should be either a buffer or a pipe process created with &lt;code&gt;make-pipe-process&lt;/code&gt;, described below. If &lt;var&gt;stderr&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, standard error is mixed with standard output, and both are sent to &lt;var&gt;buffer&lt;/var&gt; or &lt;var&gt;filter&lt;/var&gt;.</source>
          <target state="translated">Asocie &lt;var&gt;stderr&lt;/var&gt; con el error est&amp;aacute;ndar del proceso. Un valor que no sea &lt;code&gt;nil&lt;/code&gt; debe ser un b&amp;uacute;fer o un proceso de tuber&amp;iacute;a creado con &lt;code&gt;make-pipe-process&lt;/code&gt; , que se describe a continuaci&amp;oacute;n. Si &lt;var&gt;stderr&lt;/var&gt; es &lt;code&gt;nil&lt;/code&gt; , el error est&amp;aacute;ndar se mezcla con la salida est&amp;aacute;ndar y ambos se env&amp;iacute;an al &lt;var&gt;buffer&lt;/var&gt; o al &lt;var&gt;filter&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="e3024403263d4d843f0e51777623d2a49c1231db" translate="yes" xml:space="preserve">
          <source>Associating additional information with windows.</source>
          <target state="translated">Asociando información adicional con las ventanas.</target>
        </trans-unit>
        <trans-unit id="e463ae7c0c475efc422013c7bb62639251e2604f" translate="yes" xml:space="preserve">
          <source>Association List Type</source>
          <target state="translated">Tipo de lista de asociación</target>
        </trans-unit>
        <trans-unit id="c1eecc79e49a6ca7a499806fc8e58814d3aeda58" translate="yes" xml:space="preserve">
          <source>Association Lists</source>
          <target state="translated">Listas de asociaciones</target>
        </trans-unit>
        <trans-unit id="a0f646334656079aafb8f68fbbd7ae734d08ae78" translate="yes" xml:space="preserve">
          <source>Association lists (see &lt;a href=&quot;association-lists#Association-Lists&quot;&gt;Association Lists&lt;/a&gt;) are very similar to property lists. In contrast to association lists, the order of the pairs in the property list is not significant, since the property names must be distinct.</source>
          <target state="translated">Las listas de asociaciones (consulte &lt;a href=&quot;association-lists#Association-Lists&quot;&gt;Listas de asociaciones&lt;/a&gt; ) son muy similares a las listas de propiedades. A diferencia de las listas de asociaci&amp;oacute;n, el orden de los pares en la lista de propiedades no es significativo, ya que los nombres de las propiedades deben ser distintos.</target>
        </trans-unit>
        <trans-unit id="14ba3cbc75793dbade1b890546d72c62627ca897" translate="yes" xml:space="preserve">
          <source>Association lists are often used to record information that you might otherwise keep on a stack, since new associations may be added easily to the front of the list. When searching an association list for an association with a given key, the first one found is returned, if there is more than one.</source>
          <target state="translated">Las listas de asociaciones se utilizan a menudo para registrar información que de otro modo se podría mantener en una pila,ya que se pueden añadir fácilmente nuevas asociaciones al principio de la lista.Cuando se busca en una lista de asociaciones una asociación con una clave determinada,se devuelve la primera encontrada,si hay más de una.</target>
        </trans-unit>
        <trans-unit id="c3f9b4c0afa65ab472f88a447b5b643be2caa8ed" translate="yes" xml:space="preserve">
          <source>Asynchronous subprocesses receive input when it is sent to them by Emacs, which is done with the functions in this section. You must specify the process to send input to, and the input data to send. If the subprocess runs a program, the data appears on the standard input of that program; for connections, the data is sent to the connected device or program.</source>
          <target state="translated">Los subprocesos asíncronos reciben la entrada cuando les es enviada por Emacs,lo cual se hace con las funciones de esta sección.Se debe especificar el proceso al que se enviará la entrada y los datos de entrada que se enviarán.Si el subproceso ejecuta un programa,los datos aparecen en la entrada estándar de ese programa;en el caso de las conexiones,los datos se envían al dispositivo o programa conectado.</target>
        </trans-unit>
        <trans-unit id="a5bb8623a169e7bd4940e5f36d437427d3e09d1b" translate="yes" xml:space="preserve">
          <source>At any time, one frame in Emacs is the &lt;em&gt;selected frame&lt;/em&gt;. The selected window always resides on the selected frame.</source>
          <target state="translated">En cualquier momento, un marco en Emacs es el &lt;em&gt;marco seleccionado&lt;/em&gt; . La ventana seleccionada siempre reside en el marco seleccionado.</target>
        </trans-unit>
        <trans-unit id="4c816364377c69602fd91de24b490b44a6fcd129" translate="yes" xml:space="preserve">
          <source>At any time, several primary keymaps are &lt;em&gt;active&lt;/em&gt;&amp;mdash;that is, in use for finding key bindings. These are the &lt;em&gt;global map&lt;/em&gt;, which is shared by all buffers; the &lt;em&gt;local keymap&lt;/em&gt;, which is usually associated with a specific major mode; and zero or more &lt;em&gt;minor mode keymaps&lt;/em&gt;, which belong to currently enabled minor modes. (Not all minor modes have keymaps.) The local keymap bindings shadow (i.e., take precedence over) the corresponding global bindings. The minor mode keymaps shadow both local and global keymaps. See &lt;a href=&quot;active-keymaps#Active-Keymaps&quot;&gt;Active Keymaps&lt;/a&gt;, for details.</source>
          <target state="translated">En cualquier momento, varios mapas de teclas primarios est&amp;aacute;n &lt;em&gt;activos&lt;/em&gt; , es decir, en uso para buscar combinaciones de teclas. Estos son el &lt;em&gt;mapa global&lt;/em&gt; , que comparten todos los b&amp;uacute;feres; el &lt;em&gt;mapa de teclas local&lt;/em&gt; , que generalmente se asocia con un modo principal espec&amp;iacute;fico; y cero o m&amp;aacute;s &lt;em&gt;mapas de teclas de modo menor&lt;/em&gt; , que pertenecen a los modos menores actualmente habilitados. (No todos los modos menores tienen mapas de teclas). Las vinculaciones de mapas de teclas locales sombrean (es decir, tienen prioridad sobre) las vinculaciones globales correspondientes. Los mapas de teclas del modo menor hacen sombra a los mapas de teclas locales y globales. Consulte &lt;a href=&quot;active-keymaps#Active-Keymaps&quot;&gt;Mapas de teclas activos&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="8d93bb5f9a38a88b4da1e36b6fa1f9cb4bfd6596" translate="yes" xml:space="preserve">
          <source>At each stage, if a face has a valid &lt;code&gt;:inherit&lt;/code&gt; attribute, Emacs treats any attribute with an &lt;code&gt;unspecified&lt;/code&gt; value as having the corresponding value drawn from the parent face(s). see &lt;a href=&quot;face-attributes#Face-Attributes&quot;&gt;Face Attributes&lt;/a&gt;. Note that the parent face(s) may also leave the attribute unspecified; in that case, the attribute remains unspecified at the next level of face merging.</source>
          <target state="translated">En cada etapa, si una cara tiene un atributo v&amp;aacute;lido &lt;code&gt;:inherit&lt;/code&gt; , Emacs trata cualquier atributo con un valor &lt;code&gt;unspecified&lt;/code&gt; como si tuviese el valor correspondiente extra&amp;iacute;do de la (s) cara (s) padre (s). consulte &lt;a href=&quot;face-attributes#Face-Attributes&quot;&gt;Atributos faciales&lt;/a&gt; . Tenga en cuenta que las caras principales tambi&amp;eacute;n pueden dejar el atributo sin especificar; en ese caso, el atributo permanece sin especificar en el siguiente nivel de fusi&amp;oacute;n de caras.</target>
        </trans-unit>
        <trans-unit id="621cbe593d12331614294e33d27df98bfb14d296" translate="yes" xml:space="preserve">
          <source>At some point in the future the base C dialect will no doubt change to C11.</source>
          <target state="translated">En algún momento del futuro el dialecto de la base C sin duda cambiará a C11.</target>
        </trans-unit>
        <trans-unit id="2d46551267fccda2366ce110501bc5c0ac875511" translate="yes" xml:space="preserve">
          <source>At the beginning or end of a line, the appropriate amount of space is none. Before a character with close parenthesis syntax, or after a character with open parenthesis or expression-prefix syntax, no space is also appropriate. Otherwise, one space is appropriate. See &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Syntax Class Table&lt;/a&gt;.</source>
          <target state="translated">Al principio o al final de una l&amp;iacute;nea, la cantidad apropiada de espacio es ninguno. Antes de un car&amp;aacute;cter con sintaxis de par&amp;eacute;ntesis cerrado, o despu&amp;eacute;s de un car&amp;aacute;cter con sintaxis de par&amp;eacute;ntesis abierto o de prefijo de expresi&amp;oacute;n, tampoco es apropiado ning&amp;uacute;n espacio. De lo contrario, un espacio es apropiado. Consulte &lt;a href=&quot;syntax-class-table#Syntax-Class-Table&quot;&gt;Tabla de clases de sintaxis&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="007e79f90925179d568d16a8deaddb8c8e8caa2f" translate="yes" xml:space="preserve">
          <source>At the center of the window is the &lt;em&gt;text area&lt;/em&gt;, or &lt;em&gt;body&lt;/em&gt;, where the buffer text is displayed. The text area can be surrounded by a series of optional areas. On the left and right, from innermost to outermost, these are the left and right fringes, denoted by LF and RF (see &lt;a href=&quot;fringes#Fringes&quot;&gt;Fringes&lt;/a&gt;); the left and right margins, denoted by LM and RM in the schematic (see &lt;a href=&quot;display-margins#Display-Margins&quot;&gt;Display Margins&lt;/a&gt;); the left or right vertical scroll bar, only one of which is present at any time, denoted by LS and RS (see &lt;a href=&quot;scroll-bars#Scroll-Bars&quot;&gt;Scroll Bars&lt;/a&gt;); and the right divider, denoted by RD (see &lt;a href=&quot;window-dividers#Window-Dividers&quot;&gt;Window Dividers&lt;/a&gt;). At the top of the window is the header line (see &lt;a href=&quot;header-lines#Header-Lines&quot;&gt;Header Lines&lt;/a&gt;). At the bottom of the window are the horizontal scroll bar (see &lt;a href=&quot;scroll-bars#Scroll-Bars&quot;&gt;Scroll Bars&lt;/a&gt;); the mode line (see &lt;a href=&quot;mode-line-format#Mode-Line-Format&quot;&gt;Mode Line Format&lt;/a&gt;); and the bottom divider (see &lt;a href=&quot;window-dividers#Window-Dividers&quot;&gt;Window Dividers&lt;/a&gt;).</source>
          <target state="translated">En el centro de la ventana est&amp;aacute; el &lt;em&gt;&amp;aacute;rea de texto&lt;/em&gt; , o &lt;em&gt;cuerpo&lt;/em&gt; , donde se muestra el texto del b&amp;uacute;fer. El &amp;aacute;rea de texto puede estar rodeada por una serie de &amp;aacute;reas opcionales. A la izquierda y a la derecha, de m&amp;aacute;s interna a m&amp;aacute;s externa, se encuentran las franjas izquierda y derecha, indicadas por LF y RF (ver &lt;a href=&quot;fringes#Fringes&quot;&gt;Franjas&lt;/a&gt; ); los m&amp;aacute;rgenes izquierdo y derecho, indicados por LM y RM en el esquema (consulte &lt;a href=&quot;display-margins#Display-Margins&quot;&gt;M&amp;aacute;rgenes de visualizaci&amp;oacute;n&lt;/a&gt; ); la barra de desplazamiento vertical izquierda o derecha, de las cuales s&amp;oacute;lo una est&amp;aacute; presente en cualquier momento, indicada por LS y RS (consulte &lt;a href=&quot;scroll-bars#Scroll-Bars&quot;&gt;Barras de desplazamiento&lt;/a&gt; ); y el divisor derecho, denotado por RD (ver &lt;a href=&quot;window-dividers#Window-Dividers&quot;&gt;Divisores de ventana&lt;/a&gt; ). En la parte superior de la ventana est&amp;aacute; la l&amp;iacute;nea de encabezado (ver &lt;a href=&quot;header-lines#Header-Lines&quot;&gt;L&amp;iacute;neas de encabezado&lt;/a&gt;). En la parte inferior de la ventana se encuentra la barra de desplazamiento horizontal (consulte &lt;a href=&quot;scroll-bars#Scroll-Bars&quot;&gt;Barras de desplazamiento&lt;/a&gt; ); la l&amp;iacute;nea de modo (consulte &lt;a href=&quot;mode-line-format#Mode-Line-Format&quot;&gt;Formato de l&amp;iacute;nea de modo&lt;/a&gt; ); y el divisor inferior (consulte &lt;a href=&quot;window-dividers#Window-Dividers&quot;&gt;Divisores de ventana&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="fce2ab087a5fd08a2230eb11f4e344519f5c8db6" translate="yes" xml:space="preserve">
          <source>At the level of C code, quitting cannot happen just anywhere; only at the special places that check &lt;code&gt;quit-flag&lt;/code&gt;. The reason for this is that quitting at other places might leave an inconsistency in Emacs&amp;rsquo;s internal state. Because quitting is delayed until a safe place, quitting cannot make Emacs crash.</source>
          <target state="translated">En el nivel del c&amp;oacute;digo C, dejar de fumar no puede suceder en cualquier lugar; solo en los lugares especiales que marcan &lt;code&gt;quit-flag&lt;/code&gt; . La raz&amp;oacute;n de esto es que dejar de fumar en otros lugares podr&amp;iacute;a dejar una inconsistencia en el estado interno de Emacs. Debido a que salir se retrasa hasta llegar a un lugar seguro, salir no puede hacer que Emacs se bloquee.</target>
        </trans-unit>
        <trans-unit id="d255c59db332c87b9a24623a21d91ebeac724f41" translate="yes" xml:space="preserve">
          <source>At this moment typing</source>
          <target state="translated">En este momento escribiendo</target>
        </trans-unit>
        <trans-unit id="ede1fb5d661ab864aba9032ff56e1ac325b126c0" translate="yes" xml:space="preserve">
          <source>Atomic Change Groups</source>
          <target state="translated">Grupos de cambio atómico</target>
        </trans-unit>
        <trans-unit id="aab81d84cf8514fae3d044627f17a742d2c5166b" translate="yes" xml:space="preserve">
          <source>Atomic Windows</source>
          <target state="translated">Ventanas atómicas</target>
        </trans-unit>
        <trans-unit id="ccb118068fddf7824a58d856e2c3e7b40ebb74f7" translate="yes" xml:space="preserve">
          <source>Atomic windows are implemented with the help of the reserved &lt;code&gt;window-atom&lt;/code&gt; window parameter (see &lt;a href=&quot;window-parameters#Window-Parameters&quot;&gt;Window Parameters&lt;/a&gt;) and an internal window (see &lt;a href=&quot;basic-windows#Basic-Windows&quot;&gt;Basic Windows&lt;/a&gt;) called the root window of the atomic window. All windows that are part of the same atomic window have this root window as their common ancestor and are assigned a non-&lt;code&gt;nil&lt;/code&gt;&lt;code&gt;window-atom&lt;/code&gt; parameter.</source>
          <target state="translated">Las ventanas at&amp;oacute;micas se implementan con la ayuda del par&amp;aacute;metro de &lt;code&gt;window-atom&lt;/code&gt; reservado ventana-&amp;aacute;tomo (ver &lt;a href=&quot;window-parameters#Window-Parameters&quot;&gt;Par&amp;aacute;metros de ventana&lt;/a&gt; ) y una ventana interna (ver &lt;a href=&quot;basic-windows#Basic-Windows&quot;&gt;Ventanas b&amp;aacute;sicas&lt;/a&gt; ) llamada ventana ra&amp;iacute;z de la ventana at&amp;oacute;mica. Todas las ventanas que son parte de la misma ventana at&amp;oacute;mica tienen esta ventana ra&amp;iacute;z como su ancestro com&amp;uacute;n y se les asigna un par&amp;aacute;metro de &lt;code&gt;window-atom&lt;/code&gt; no es &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a163ce0a704c17ae2c4e7f0c3f6ff0be652a3729" translate="yes" xml:space="preserve">
          <source>Atomic windows are rectangular compositions of at least two live windows. They have the following distinctive characteristics:</source>
          <target state="translated">Las ventanas atómicas son composiciones rectangulares de al menos dos ventanas vivas.Tienen las siguientes características distintivas:</target>
        </trans-unit>
        <trans-unit id="84b84a11114f20365d178505da52d54f0c432b05" translate="yes" xml:space="preserve">
          <source>Atomic windows are useful to construct and preserve window layouts that are meaningful only when all involved buffers are shown simultaneously in a specific manner, such as when showing differences between file revisions, or the same text in different languages or markups. They can also be used to permanently display information pertinent to a specific window in bars on that window&amp;rsquo;s sides.</source>
          <target state="translated">Las ventanas at&amp;oacute;micas son &amp;uacute;tiles para construir y preservar dise&amp;ntilde;os de ventana que son significativos solo cuando todos los b&amp;uacute;feres involucrados se muestran simult&amp;aacute;neamente de una manera espec&amp;iacute;fica, como cuando se muestran diferencias entre revisiones de archivos o el mismo texto en diferentes idiomas o marcas. Tambi&amp;eacute;n se pueden utilizar para mostrar permanentemente informaci&amp;oacute;n pertinente a una ventana espec&amp;iacute;fica en barras en los lados de esa ventana.</target>
        </trans-unit>
        <trans-unit id="7ac3939a8902c4e5ec26fa6e697cca7abee0c334" translate="yes" xml:space="preserve">
          <source>Atomic windows automatically cease to exist when one of their constituents gets deleted. To dissolve an atomic window manually, reset the &lt;code&gt;window-atom&lt;/code&gt; parameter of its constituents&amp;mdash;the root of the atomic window and all its descendants.</source>
          <target state="translated">Las ventanas at&amp;oacute;micas dejan de existir autom&amp;aacute;ticamente cuando se elimina uno de sus componentes. Para disolver una ventana at&amp;oacute;mica manualmente, restablezca el par&amp;aacute;metro &lt;code&gt;window-atom&lt;/code&gt; de sus constituyentes: la ra&amp;iacute;z de la ventana at&amp;oacute;mica y todos sus descendientes.</target>
        </trans-unit>
        <trans-unit id="b9ac22b82065cc69d28fef7fb37ebf9456c2f8c5" translate="yes" xml:space="preserve">
          <source>Attempt to set a constant symbol</source>
          <target state="translated">Intenta establecer un símbolo constante</target>
        </trans-unit>
        <trans-unit id="040459de5fdc40f82378844a0d54d538e77e475c" translate="yes" xml:space="preserve">
          <source>Attempts to match &lt;var&gt;pattern1&lt;/var&gt;&amp;hellip;, in order, until one of them fails to match. In that case, &lt;code&gt;and&lt;/code&gt; likewise fails to match, and the rest of the sub-patterns are not tested. If all sub-patterns match, &lt;code&gt;and&lt;/code&gt; matches.</source>
          <target state="translated">Intenta hacer coincidir el &lt;var&gt;pattern1&lt;/var&gt; &amp;hellip;, en orden, hasta que uno de ellos falla. En ese caso, &lt;code&gt;and&lt;/code&gt; tampoco coincide, y el resto de subpatrones no se prueban. Si todos los subpatrones coinciden, &lt;code&gt;and&lt;/code&gt; coincide.</target>
        </trans-unit>
        <trans-unit id="d62c51b00eb3d0f88c19008784cb02b23b4ba495" translate="yes" xml:space="preserve">
          <source>Attempts to match &lt;var&gt;pattern1&lt;/var&gt;, &lt;var&gt;pattern2&lt;/var&gt;, &amp;hellip;, in order, until one of them succeeds. In that case, &lt;code&gt;or&lt;/code&gt; likewise matches, and the rest of the sub-patterns are not tested. (Note that there must be at least two sub-patterns. Simply &lt;code&gt;(or&amp;nbsp;&lt;var&gt;pattern1&lt;/var&gt;)&lt;/code&gt; signals error.)</source>
          <target state="translated">Los intentos para que coincida con &lt;var&gt;pattern1&lt;/var&gt; , &lt;var&gt;pattern2&lt;/var&gt; , ..., en fin, hasta que uno de ellos tiene &amp;eacute;xito. En ese caso, coincide &lt;code&gt;or&lt;/code&gt; igualmente, y el resto de subpatrones no se prueban. (Tenga en cuenta que debe haber al menos dos subpatrones. Simplemente &lt;code&gt;(or&amp;nbsp;&lt;var&gt;pattern1&lt;/var&gt;)&lt;/code&gt; indica el error).</target>
        </trans-unit>
        <trans-unit id="5b2467f53cc44078cb438b0c2750bc2ec1578c8a" translate="yes" xml:space="preserve">
          <source>Attract focus to the window chosen</source>
          <target state="translated">Atraer el foco a la ventana elegida</target>
        </trans-unit>
        <trans-unit id="19a9640f6e74bf975fe0db395e61ad03d3ece1c7" translate="yes" xml:space="preserve">
          <source>Audible signal to the user.</source>
          <target state="translated">Señal audible para el usuario.</target>
        </trans-unit>
        <trans-unit id="ee1acfa55eb1476c86c5c4a68f256a67b25289ab" translate="yes" xml:space="preserve">
          <source>Authentication</source>
          <target state="translated">Authentication</target>
        </trans-unit>
        <trans-unit id="2667d909be440bdf6583125971872bea1221d4db" translate="yes" xml:space="preserve">
          <source>Auto Fill mode also enables the functions that change the margins and justification style to refill portions of the text. See &lt;a href=&quot;margins#Margins&quot;&gt;Margins&lt;/a&gt;.</source>
          <target state="translated">El modo Auto Fill tambi&amp;eacute;n habilita las funciones que cambian los m&amp;aacute;rgenes y el estilo de justificaci&amp;oacute;n para rellenar partes del texto. Ver &lt;a href=&quot;margins#Margins&quot;&gt;m&amp;aacute;rgenes&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="555de047487d343cd666ab6a903a79ef6c09e487" translate="yes" xml:space="preserve">
          <source>Auto Fill mode is a minor mode that fills lines automatically as text is inserted. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Auto-Fill.html#Auto-Fill&quot;&gt;Auto Fill&lt;/a&gt; in</source>
          <target state="translated">El modo Auto Fill es un modo menor que llena las l&amp;iacute;neas autom&amp;aacute;ticamente a medida que se inserta el texto. Ver &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Auto-Fill.html#Auto-Fill&quot;&gt;Auto Fill&lt;/a&gt; en</target>
        </trans-unit>
        <trans-unit id="d612e07359a7f990d85a785ef15495ba2ef1ffa8" translate="yes" xml:space="preserve">
          <source>Auto Fill mode is a minor mode that fills lines automatically as text is inserted. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Auto-Fill.html#Auto-Fill&quot;&gt;Auto Fill&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="850ade7a51d735a464313dc8f30adc7d11e8a00d" translate="yes" xml:space="preserve">
          <source>Auto Filling</source>
          <target state="translated">Llenado automático</target>
        </trans-unit>
        <trans-unit id="0b4ed412ef994ca0c43e1b7bd22d818d428bb6c5" translate="yes" xml:space="preserve">
          <source>Auto-Saving</source>
          <target state="translated">Auto-Saving</target>
        </trans-unit>
        <trans-unit id="845b01108562c3d927a2af1812a0c1bf88795555" translate="yes" xml:space="preserve">
          <source>Auto-saving...</source>
          <target state="translated">Auto-saving...</target>
        </trans-unit>
        <trans-unit id="c2e779e790c1d4dc28d4326306803dbf362b481e" translate="yes" xml:space="preserve">
          <source>Autoload</source>
          <target state="translated">Autoload</target>
        </trans-unit>
        <trans-unit id="06d7988cf794172658af0153fd1a2481ba35d7d2" translate="yes" xml:space="preserve">
          <source>Autoload Type</source>
          <target state="translated">Tipo de autocarga</target>
        </trans-unit>
        <trans-unit id="85e513dae1246e61ba8640eb87ad292a21840742" translate="yes" xml:space="preserve">
          <source>Autoload by Prefix</source>
          <target state="translated">Autocargado por Prefijo</target>
        </trans-unit>
        <trans-unit id="a316cd16d04dc567c3b4909645684cb65b1f615f" translate="yes" xml:space="preserve">
          <source>Autoload by Prefix.</source>
          <target state="translated">Autocargado por Prefijo.</target>
        </trans-unit>
        <trans-unit id="3fa81ba949fafdad4688aed6d9380f82976ca9d7" translate="yes" xml:space="preserve">
          <source>Autoloading</source>
          <target state="translated">Autoloading</target>
        </trans-unit>
        <trans-unit id="eb9cb47e9f34f586b55a9d914f6b2f6403badd01" translate="yes" xml:space="preserve">
          <source>Automatic Face Assignment</source>
          <target state="translated">Asignación automática de la cara</target>
        </trans-unit>
        <trans-unit id="ae90bbb56c1aa1c308fb3a413aa144f52a6ccd37" translate="yes" xml:space="preserve">
          <source>Automatic Indentation of code</source>
          <target state="translated">Indentación automática del código</target>
        </trans-unit>
        <trans-unit id="a8cc32cc81dbf9afed120141fd3975ae43627630" translate="yes" xml:space="preserve">
          <source>Automatic updating of frame titles.</source>
          <target state="translated">Actualización automática de los títulos de los cuadros.</target>
        </trans-unit>
        <trans-unit id="a5bc07194f48e4d3351e56450cd28e631e2382b0" translate="yes" xml:space="preserve">
          <source>Automatically re-evaluate a list of expressions and display their results each time Edebug updates the display.</source>
          <target state="translated">Reevaluar automáticamente una lista de expresiones y mostrar sus resultados cada vez que Edebug actualiza la pantalla.</target>
        </trans-unit>
        <trans-unit id="1cd844466867bdaf6e1db628300b6112623f0e83" translate="yes" xml:space="preserve">
          <source>Automatically selecting windows with the mouse.</source>
          <target state="translated">Seleccionando automáticamente las ventanas con el ratón.</target>
        </trans-unit>
        <trans-unit id="c89d8ac98afcea167130340f5b561c866ca98fd5" translate="yes" xml:space="preserve">
          <source>Autotyping</source>
          <target state="translated">Autotyping</target>
        </trans-unit>
        <trans-unit id="361af9ca637df41d1dd709df4b2eb262901b3fd8" translate="yes" xml:space="preserve">
          <source>Avoid &lt;code&gt;ssize_t&lt;/code&gt; except when communicating to low-level APIs that have &lt;code&gt;ssize_t&lt;/code&gt;-related limitations. Although it&amp;rsquo;s equivalent to &lt;code&gt;ptrdiff_t&lt;/code&gt; on typical platforms, &lt;code&gt;ssize_t&lt;/code&gt; is occasionally narrower, so using it for size-related calculations could overflow. Also, &lt;code&gt;ptrdiff_t&lt;/code&gt; is more ubiquitous and better-standardized, has standard &lt;code&gt;printf&lt;/code&gt; formats, and is the basis for Emacs&amp;rsquo;s internal size-overflow checking. When using &lt;code&gt;ssize_t&lt;/code&gt;, please note that POSIX requires support only for values in the range -1 .. &lt;code&gt;SSIZE_MAX&lt;/code&gt;.</source>
          <target state="translated">Evite &lt;code&gt;ssize_t&lt;/code&gt; excepto cuando se comunique con API de bajo nivel que tengan limitaciones relacionadas con &lt;code&gt;ssize_t&lt;/code&gt; . Aunque es equivalente a &lt;code&gt;ptrdiff_t&lt;/code&gt; en plataformas t&amp;iacute;picas, &lt;code&gt;ssize_t&lt;/code&gt; es ocasionalmente m&amp;aacute;s estrecho, por lo que su uso para c&amp;aacute;lculos relacionados con el tama&amp;ntilde;o podr&amp;iacute;a desbordarse. Adem&amp;aacute;s, &lt;code&gt;ptrdiff_t&lt;/code&gt; es m&amp;aacute;s ubicuo y est&amp;aacute; mejor estandarizado, tiene formatos &lt;code&gt;printf&lt;/code&gt; est&amp;aacute;ndar y es la base para la verificaci&amp;oacute;n interna de desbordamiento de tama&amp;ntilde;o de Emacs. Cuando use &lt;code&gt;ssize_t&lt;/code&gt; , tenga en cuenta que POSIX requiere soporte solo para valores en el rango -1 .. &lt;code&gt;SSIZE_MAX&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4db5c02b78c97409e22545eb6907ca4a351e1990" translate="yes" xml:space="preserve">
          <source>Avoid arbitrary limits. For example, avoid &lt;code&gt;int len = strlen
(s);&lt;/code&gt; unless the length of &lt;code&gt;s&lt;/code&gt; is required for other reasons to fit in &lt;code&gt;int&lt;/code&gt; range.</source>
          <target state="translated">Evite los l&amp;iacute;mites arbitrarios. Por ejemplo, evite &lt;code&gt;int len = strlen (s);&lt;/code&gt; a menos que se requiera la longitud de &lt;code&gt;s&lt;/code&gt; por otras razones para encajar en el rango &lt;code&gt;int&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d6e79e0cc19181112cfd0c36a5750ae8c092fc5" translate="yes" xml:space="preserve">
          <source>Avoid depending on how many times expansion is done.</source>
          <target state="translated">Evitar dependiendo de cuántas veces se haga la expansión.</target>
        </trans-unit>
        <trans-unit id="2e549352e5b71cd7798ed53124f97e4a4c19088d" translate="yes" xml:space="preserve">
          <source>Avoiding evaluation (to put constants in the program).</source>
          <target state="translated">Evitar la evaluación (poner constantes en el programa).</target>
        </trans-unit>
        <trans-unit id="98c63cc59f3d9c3c7c9d29e55ddfee0b39d55b90" translate="yes" xml:space="preserve">
          <source>Avoiding problems with dynamic binding.</source>
          <target state="translated">Evitar problemas con la vinculación dinámica.</target>
        </trans-unit>
        <trans-unit id="ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec" translate="yes" xml:space="preserve">
          <source>B</source>
          <target state="translated">B</target>
        </trans-unit>
        <trans-unit id="16374ac2b9a2eb53d18fcede0cdf14c4d6e18ba5" translate="yes" xml:space="preserve">
          <source>BS</source>
          <target state="translated">BS</target>
        </trans-unit>
        <trans-unit id="b52b36b7269fbfc58ec24bb724691951a3decbe8" translate="yes" xml:space="preserve">
          <source>Back</source>
          <target state="translated">Back</target>
        </trans-unit>
        <trans-unit id="17c0e560f6eadc671493346fc0a13caf302e9875" translate="yes" xml:space="preserve">
          <source>Background color, a string. The value can be a system-defined color name, or a hexadecimal color specification. See &lt;a href=&quot;color-names#Color-Names&quot;&gt;Color Names&lt;/a&gt;.</source>
          <target state="translated">Color de fondo, una cuerda. El valor puede ser un nombre de color definido por el sistema o una especificaci&amp;oacute;n de color hexadecimal. Consulte &lt;a href=&quot;color-names#Color-Names&quot;&gt;Nombres de colores&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cc48ef84cf0ee761d58df4dcb6d99bd10746fd9a" translate="yes" xml:space="preserve">
          <source>Backquote</source>
          <target state="translated">Backquote</target>
        </trans-unit>
        <trans-unit id="1c6ba351e6ca20e8a37172efc2c86d4aab598c50" translate="yes" xml:space="preserve">
          <source>Backquote-Style Patterns</source>
          <target state="translated">Patrones de estilo de cita previa</target>
        </trans-unit>
        <trans-unit id="c0ecdab9574e4ebcb9dc4d8aec5335a6fb1dc637" translate="yes" xml:space="preserve">
          <source>Backquote-style patterns are a powerful set of &lt;code&gt;pcase&lt;/code&gt; pattern extensions (created using &lt;code&gt;pcase-defmacro&lt;/code&gt;) that make it easy to match &lt;var&gt;expval&lt;/var&gt; against specifications of its &lt;em&gt;structure&lt;/em&gt;.</source>
          <target state="translated">Los patrones de estilo backquote son un poderoso conjunto de &lt;code&gt;pcase&lt;/code&gt; patrones pcase (creadas usando &lt;code&gt;pcase-defmacro&lt;/code&gt; ) que facilitan la &lt;var&gt;expval&lt;/var&gt; con las especificaciones de su &lt;em&gt;estructura&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="a017b7b51d9d23728fcdbbcaa591b2596fe0b09a" translate="yes" xml:space="preserve">
          <source>Backslash Constructs in Regular Expressions</source>
          <target state="translated">Construcciones de barra invertida en expresiones regulares</target>
        </trans-unit>
        <trans-unit id="807e6daac187d064954fd59f10abb8e716892ec1" translate="yes" xml:space="preserve">
          <source>Backslash-sequences in regular expressions.</source>
          <target state="translated">Secuencias de retroceso en expresiones regulares.</target>
        </trans-unit>
        <trans-unit id="9bfb245aa5d9e794b82e574165fbbc700e3e2a72" translate="yes" xml:space="preserve">
          <source>Backtraces</source>
          <target state="translated">Backtraces</target>
        </trans-unit>
        <trans-unit id="c3e2b2ecbdd4245dd6be8d66bf5a99a7880e1508" translate="yes" xml:space="preserve">
          <source>Backtracking in Specifications</source>
          <target state="translated">Retroceder en las especificaciones</target>
        </trans-unit>
        <trans-unit id="efef7b78f24a9457b9578006ead1a23980b022a2" translate="yes" xml:space="preserve">
          <source>Backtracking is also disabled after successfully matching a quoted symbol or string specification, since this usually indicates a recognized construct. But if you have a set of alternative constructs that all begin with the same symbol, you can usually work around this constraint by factoring the symbol out of the alternatives, e.g., &lt;code&gt;[&quot;foo&quot; &amp;amp;or [first case] [second case] ...]&lt;/code&gt;.</source>
          <target state="translated">El retroceso tambi&amp;eacute;n se desactiva despu&amp;eacute;s de hacer coincidir con &amp;eacute;xito un s&amp;iacute;mbolo entre comillas o una especificaci&amp;oacute;n de cadena, ya que esto generalmente indica una construcci&amp;oacute;n reconocida. Pero si tiene un conjunto de construcciones alternativas que comienzan todas con el mismo s&amp;iacute;mbolo, generalmente puede solucionar esta restricci&amp;oacute;n factorizando el s&amp;iacute;mbolo fuera de las alternativas, por ejemplo, &lt;code&gt;[&quot;foo&quot; &amp;amp;or [first case] [second case] ...]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1b80345f727522e6032bad01fc94ae4ee43720c6" translate="yes" xml:space="preserve">
          <source>Backtracking is disabled while matching any of the form specifications (that is, &lt;code&gt;form&lt;/code&gt;, &lt;code&gt;body&lt;/code&gt;, &lt;code&gt;def-form&lt;/code&gt;, and &lt;code&gt;def-body&lt;/code&gt;). These specifications will match any form so any error must be in the form itself rather than at a higher level.</source>
          <target state="translated">El retroceso est&amp;aacute; deshabilitado al coincidir con cualquiera de las especificaciones del formulario (es decir, &lt;code&gt;form&lt;/code&gt; ulario , &lt;code&gt;body&lt;/code&gt; , &lt;code&gt;def-form&lt;/code&gt; y &lt;code&gt;def-body&lt;/code&gt; ). Estas especificaciones coincidir&amp;aacute;n con cualquier formulario, por lo que cualquier error debe estar en el formulario en s&amp;iacute; y no en un nivel superior.</target>
        </trans-unit>
        <trans-unit id="a4fc1af88bf3a7f32329f6577445d6679643e427" translate="yes" xml:space="preserve">
          <source>Backup Files</source>
          <target state="translated">Archivos de respaldo</target>
        </trans-unit>
        <trans-unit id="40a0ef48a621ee3ca348b1e08eee5e6ff78084ac" translate="yes" xml:space="preserve">
          <source>Backup by Renaming or by Copying?</source>
          <target state="translated">¿Respaldar renombrando o copiando?</target>
        </trans-unit>
        <trans-unit id="3e24bb9e6bf592cfc87438fc7775b2a394418349" translate="yes" xml:space="preserve">
          <source>Backup files and auto-save files are two methods by which Emacs tries to protect the user from the consequences of crashes or of the user&amp;rsquo;s own errors. Auto-saving preserves the text from earlier in the current editing session; backup files preserve file contents prior to the current session.</source>
          <target state="translated">Los archivos de respaldo y los archivos de guardado autom&amp;aacute;tico son dos m&amp;eacute;todos mediante los cuales Emacs intenta proteger al usuario de las consecuencias de fallas o de los propios errores del usuario. El guardado autom&amp;aacute;tico conserva el texto de antes en la sesi&amp;oacute;n de edici&amp;oacute;n actual; Los archivos de respaldo conservan el contenido del archivo antes de la sesi&amp;oacute;n actual.</target>
        </trans-unit>
        <trans-unit id="2b47ba4274b19191cdf1a5d7d53d13dd0235dd70" translate="yes" xml:space="preserve">
          <source>Backups and Auto-Saving</source>
          <target state="translated">Copias de seguridad y guardado automático</target>
        </trans-unit>
        <trans-unit id="0cea14da6f943b9330cb8b19aa3f92fa39fb6f16" translate="yes" xml:space="preserve">
          <source>Backups are usually made by renaming the visited file to a new name. Optionally, you can specify that backup files should be made by copying the visited file. This choice makes a difference for files with multiple names; it also can affect whether the edited file remains owned by the original owner or becomes owned by the user editing it.</source>
          <target state="translated">Las copias de seguridad se hacen generalmente renombrando el archivo visitado a un nuevo nombre.Opcionalmente,puede especificar que las copias de seguridad se hagan copiando el archivo visitado.Esta elección marca la diferencia en el caso de los archivos con múltiples nombres;también puede afectar a si el archivo editado sigue siendo propiedad del propietario original o pasa a ser propiedad del usuario que lo edita.</target>
        </trans-unit>
        <trans-unit id="980a00caa2a5856cb63bd39c2e2070bc841c28b4" translate="yes" xml:space="preserve">
          <source>Backups of files with names matching &lt;var&gt;regexp&lt;/var&gt; will be made in &lt;var&gt;directory&lt;/var&gt;. &lt;var&gt;directory&lt;/var&gt; may be relative or absolute. If it is absolute, so that all matching files are backed up into the same directory, the file names in this directory will be the full name of the file backed up with all directory separators changed to &amp;lsquo;</source>
          <target state="translated">Las copias de seguridad de los archivos con nombres que coincidan con &lt;var&gt;regexp&lt;/var&gt; se realizar&amp;aacute;n en el &lt;var&gt;directory&lt;/var&gt; . &lt;var&gt;directory&lt;/var&gt; puede ser relativo o absoluto. Si es absoluto, de modo que todos los archivos coincidentes se respalden en el mismo directorio, los nombres de archivo en este directorio ser&amp;aacute;n el nombre completo del archivo respaldado con todos los separadores de directorio cambiados a '</target>
        </trans-unit>
        <trans-unit id="fd4a1f65749d89056abcaeac3722a7b7a8fe75a1" translate="yes" xml:space="preserve">
          <source>Backward Compatibility</source>
          <target state="translated">Compatibilidad con el pasado</target>
        </trans-unit>
        <trans-unit id="e514a03485d2668ef95953c312b10de6213c5a6b" translate="yes" xml:space="preserve">
          <source>Base 64 Encoding</source>
          <target state="translated">Codificación de la base 64</target>
        </trans-unit>
        <trans-unit id="2da9b468199d7990437f4078993fd373ed775585" translate="yes" xml:space="preserve">
          <source>Base 64 code is used in email to encode a sequence of 8-bit bytes as a longer sequence of</source>
          <target state="translated">El código de base 64 se utiliza en el correo electrónico para codificar una secuencia de bytes de 8 bits como una secuencia más larga de</target>
        </trans-unit>
        <trans-unit id="4c671100c5a64e216a5296532f998860991bfe71" translate="yes" xml:space="preserve">
          <source>Based on the provided grammar, SMIE will be able to provide automatic indentation without any extra effort. But in practice, this default indentation style will probably not be good enough. You will want to tweak it in many different cases.</source>
          <target state="translated">Basándose en la gramática proporcionada,el SMIE será capaz de proporcionar la indentación automática sin ningún esfuerzo adicional.Pero en la práctica,este estilo de indentación por defecto probablemente no será lo suficientemente bueno.Usted querrá ajustarlo en muchos casos diferentes.</target>
        </trans-unit>
        <trans-unit id="ed7c8b81e81eeb80d5baed6aff985328d2115ad0" translate="yes" xml:space="preserve">
          <source>Basic Char Syntax</source>
          <target state="translated">Sintaxis básica de los caracteres</target>
        </trans-unit>
        <trans-unit id="ca917eb6ff98062e696cf80a8ae061ef35888178" translate="yes" xml:space="preserve">
          <source>Basic Completion Functions</source>
          <target state="translated">Funciones básicas de terminación</target>
        </trans-unit>
        <trans-unit id="50e2e3f56e746aee43ca80ef4e5fffdf4609c4f8" translate="yes" xml:space="preserve">
          <source>Basic Concepts of Coding Systems</source>
          <target state="translated">Conceptos básicos de los sistemas de codificación</target>
        </trans-unit>
        <trans-unit id="ad89db73741185f622afaecb510f561259b3dde6" translate="yes" xml:space="preserve">
          <source>Basic Concepts of Emacs Windows</source>
          <target state="translated">Conceptos básicos de Emacs Windows</target>
        </trans-unit>
        <trans-unit id="00f4714f957a02625aba98347f399df3258beab7" translate="yes" xml:space="preserve">
          <source>Basic Faces</source>
          <target state="translated">Caras básicas</target>
        </trans-unit>
        <trans-unit id="ff9602efc9e32b4e2b30281afa47a5ad0c076c75" translate="yes" xml:space="preserve">
          <source>Basic Major Modes</source>
          <target state="translated">Modos principales básicos</target>
        </trans-unit>
        <trans-unit id="7f5daf3307f72897980331dcafb0dc7eac1c3f87" translate="yes" xml:space="preserve">
          <source>Basic Parameters</source>
          <target state="translated">Parámetros básicos</target>
        </trans-unit>
        <trans-unit id="57d59d1f9034406d74ff83e18c697246b75a0ddb" translate="yes" xml:space="preserve">
          <source>Basic Thread Functions</source>
          <target state="translated">Funciones básicas de los hilos</target>
        </trans-unit>
        <trans-unit id="566fc95e858fa38a59a695bd7cab6cae3b6d8fa3" translate="yes" xml:space="preserve">
          <source>Basic concepts of keymaps.</source>
          <target state="translated">Conceptos básicos de los mapas clave.</target>
        </trans-unit>
        <trans-unit id="a25b5cf184191bab8faa27ed59d923cece314ddb" translate="yes" xml:space="preserve">
          <source>Basic concepts of syntax tables.</source>
          <target state="translated">Conceptos básicos de las tablas de sintaxis.</target>
        </trans-unit>
        <trans-unit id="8b4ea8050a775a0f3ea3c2ccd48f52d29c5611ab" translate="yes" xml:space="preserve">
          <source>Basic concepts.</source>
          <target state="translated">Conceptos básicos.</target>
        </trans-unit>
        <trans-unit id="0f70f9424495752a5144291186246e76da91be5b" translate="yes" xml:space="preserve">
          <source>Basic ideas of mode line control.</source>
          <target state="translated">Ideas básicas de control de la línea de modo.</target>
        </trans-unit>
        <trans-unit id="1d42c96aca54ef9a010f6e17d0638352d113a90e" translate="yes" xml:space="preserve">
          <source>Basic information about minibuffers.</source>
          <target state="translated">Información básica sobre los minibútiles.</target>
        </trans-unit>
        <trans-unit id="3d3ef0f3067180013beb55c1d6dc1d28f43802f5" translate="yes" xml:space="preserve">
          <source>Basic information on using windows.</source>
          <target state="translated">Información básica sobre el uso de las ventanas.</target>
        </trans-unit>
        <trans-unit id="1b6019974338c229459a64e3a602d1c23dece46e" translate="yes" xml:space="preserve">
          <source>Basic layout of frames.</source>
          <target state="translated">Diseño básico de los marcos.</target>
        </trans-unit>
        <trans-unit id="2a42ee27cdcf6bfedbc7c589958206e56696aee1" translate="yes" xml:space="preserve">
          <source>Basic properties of strings and characters.</source>
          <target state="translated">Propiedades básicas de las cuerdas y los personajes.</target>
        </trans-unit>
        <trans-unit id="3c23a95b197dbd7c57081385c609a0440865eff0" translate="yes" xml:space="preserve">
          <source>Basic thread functions.</source>
          <target state="translated">Funciones básicas del hilo.</target>
        </trans-unit>
        <trans-unit id="8b6d8cb0fe44b1ea97c8dffd9944957e48ec1ad8" translate="yes" xml:space="preserve">
          <source>Batch Mode</source>
          <target state="translated">Modo Batch</target>
        </trans-unit>
        <trans-unit id="9b540e8dec8ec13cb761e2f53dc0c1414e9d9fbf" translate="yes" xml:space="preserve">
          <source>Be careful not to redefine existing functions unintentionally. &lt;code&gt;defun&lt;/code&gt; redefines even primitive functions such as &lt;code&gt;car&lt;/code&gt; without any hesitation or notification. Emacs does not prevent you from doing this, because redefining a function is sometimes done deliberately, and there is no way to distinguish deliberate redefinition from unintentional redefinition.</source>
          <target state="translated">Tenga cuidado de no redefinir las funciones existentes sin querer. &lt;code&gt;defun&lt;/code&gt; redefine incluso funciones primitivas como &lt;code&gt;car&lt;/code&gt; sin ninguna duda o notificaci&amp;oacute;n. Emacs no le impide hacer esto, porque la redefinici&amp;oacute;n de una funci&amp;oacute;n a veces se hace de manera deliberada y no hay forma de distinguir la redefinici&amp;oacute;n deliberada de la redefinici&amp;oacute;n no intencional.</target>
        </trans-unit>
        <trans-unit id="13b72a62f4358262651a47272a3079ef92b405df" translate="yes" xml:space="preserve">
          <source>Be careful when composing these regular expressions; a poorly written pattern can dramatically slow things down! The function &lt;code&gt;regexp-opt&lt;/code&gt; (see &lt;a href=&quot;regexp-functions#Regexp-Functions&quot;&gt;Regexp Functions&lt;/a&gt;) is useful for calculating optimal regular expressions to match several keywords.</source>
          <target state="translated">Tenga cuidado al componer estas expresiones regulares; &amp;iexcl;Un patr&amp;oacute;n mal escrito puede ralentizar dram&amp;aacute;ticamente las cosas! La funci&amp;oacute;n &lt;code&gt;regexp-opt&lt;/code&gt; (ver &lt;a href=&quot;regexp-functions#Regexp-Functions&quot;&gt;Funciones Regexp&lt;/a&gt; ) es &amp;uacute;til para calcular expresiones regulares &amp;oacute;ptimas para que coincidan con varias palabras clave.</target>
        </trans-unit>
        <trans-unit id="27bc044b4c8d3ad73080a8adb64df2e5a46f2bb1" translate="yes" xml:space="preserve">
          <source>Be careful when using non-</source>
          <target state="translated">Tengan cuidado cuando usen productos que no sean</target>
        </trans-unit>
        <trans-unit id="e685f45a3679a7ec991ede319ba164f9a2bcda4c" translate="yes" xml:space="preserve">
          <source>Be careful when writing macro calls in files that you intend to byte-compile. Since macro calls are expanded when they are compiled, the macros need to be loaded into Emacs or the byte compiler will not do the right thing. The usual way to handle this is with &lt;code&gt;require&lt;/code&gt; forms which specify the files containing the needed macro definitions (see &lt;a href=&quot;named-features#Named-Features&quot;&gt;Named Features&lt;/a&gt;). Normally, the byte compiler does not evaluate the code that it is compiling, but it handles &lt;code&gt;require&lt;/code&gt; forms specially, by loading the specified libraries. To avoid loading the macro definition files when someone &lt;em&gt;runs&lt;/em&gt; the compiled program, write &lt;code&gt;eval-when-compile&lt;/code&gt; around the &lt;code&gt;require&lt;/code&gt; calls (see &lt;a href=&quot;eval-during-compile#Eval-During-Compile&quot;&gt;Eval During Compile&lt;/a&gt;). For more details, See &lt;a href=&quot;compiling-macros#Compiling-Macros&quot;&gt;Compiling Macros&lt;/a&gt;.</source>
          <target state="translated">Tenga cuidado al escribir llamadas de macro en archivos que pretende compilar mediante bytes. Dado que las llamadas a macros se expanden cuando se compilan, las macros deben cargarse en Emacs o el compilador de bytes no har&amp;aacute; lo correcto. La forma habitual de manejar esto es con &lt;code&gt;require&lt;/code&gt; formas que especifican los archivos que contienen las definiciones de las macros necesarias (ver &lt;a href=&quot;named-features#Named-Features&quot;&gt;Caracter&amp;iacute;sticas Named&lt;/a&gt; ). Normalmente, el compilador de bytes no eval&amp;uacute;a el c&amp;oacute;digo que est&amp;aacute; compilando, pero maneja formularios &lt;code&gt;require&lt;/code&gt; especialmente, cargando las bibliotecas especificadas. Para evitar cargar los archivos de definici&amp;oacute;n de macros cuando alguien &lt;em&gt;ejecuta&lt;/em&gt; el programa compilado, escriba &lt;code&gt;eval-when-compile&lt;/code&gt; alrededor de las llamadas &lt;code&gt;require&lt;/code&gt; (consulte &lt;a href=&quot;eval-during-compile#Eval-During-Compile&quot;&gt;Eval durante la compilaci&amp;oacute;n&lt;/a&gt;). Para obtener m&amp;aacute;s detalles, consulte &lt;a href=&quot;compiling-macros#Compiling-Macros&quot;&gt;Compilaci&amp;oacute;n de macros&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c6856b62c3a77e855fac355ce1578434726e9581" translate="yes" xml:space="preserve">
          <source>Be careful with file names that end in spaces. On some filesystems (notably, MS-Windows), trailing whitespace characters in file names are silently and automatically ignored.</source>
          <target state="translated">Tengan cuidado con los nombres de archivos que terminan en espacios.En algunos sistemas de archivos (en particular,MS-Windows),los caracteres de espacios en blanco que van a continuación de los nombres de archivo se ignoran de forma silenciosa y automática.</target>
        </trans-unit>
        <trans-unit id="7baa8406b5920aeefae8bb15fe88275a07b0c0a0" translate="yes" xml:space="preserve">
          <source>Be sure to verify that the file name is relative before doing that. If you use an absolute file name, the results could be syntactically invalid or refer to the wrong file.</source>
          <target state="translated">Asegúrese de verificar que el nombre del archivo es relativo antes de hacerlo.Si utiliza un nombre de archivo absoluto,los resultados podrían ser sintácticamente inválidos o referirse al archivo equivocado.</target>
        </trans-unit>
        <trans-unit id="98789dc3354690dfbeaecf0f3ce9c8a96fe9026d" translate="yes" xml:space="preserve">
          <source>Because &amp;lsquo;</source>
          <target state="translated">Porque '</target>
        </trans-unit>
        <trans-unit id="e6dbac2a93ea4cf3cf393a42d12efb8fd86797f8" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;kill-emacs&lt;/code&gt; can be called in situations where user interaction is impossible (e.g., when the terminal is disconnected), functions on this hook should not attempt to interact with the user. If you want to interact with the user when Emacs is shutting down, use &lt;code&gt;kill-emacs-query-functions&lt;/code&gt;, described below.</source>
          <target state="translated">Debido &lt;code&gt;kill-emacs&lt;/code&gt; se puede llamar a kill-emacs en situaciones en las que la interacci&amp;oacute;n del usuario es imposible (por ejemplo, cuando el terminal est&amp;aacute; desconectado), las funciones de este enlace no deben intentar interactuar con el usuario. Si desea interactuar con el usuario cuando Emacs se est&amp;aacute; cerrando, use &lt;code&gt;kill-emacs-query-functions&lt;/code&gt; , que se describen a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="0b34653ccb844a855bf2a53664633d4afdefaf2b" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;quote&lt;/code&gt; is used so often in programs, Lisp provides a convenient read syntax for it. An apostrophe character (&amp;lsquo;</source>
          <target state="translated">Debido a que la &lt;code&gt;quote&lt;/code&gt; se usa con tanta frecuencia en los programas, Lisp proporciona una sintaxis de lectura conveniente para ella. Un car&amp;aacute;cter de ap&amp;oacute;strofe ('</target>
        </trans-unit>
        <trans-unit id="b2bc1f0e771e6eb95b71dcedaea02b03d8a8a123" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;save-excursion&lt;/code&gt; only saves point for the buffer that was current at the start of the excursion, any changes made to point in other buffers, during the excursion, will remain in effect afterward. This frequently leads to unintended consequences, so the byte compiler warns if you call &lt;code&gt;set-buffer&lt;/code&gt; during an excursion:</source>
          <target state="translated">Debido a que &lt;code&gt;save-excursion&lt;/code&gt; solo guarda el punto para el b&amp;uacute;fer que estaba vigente al inicio de la excursi&amp;oacute;n, cualquier cambio realizado al punto en otros b&amp;uacute;feres, durante la excursi&amp;oacute;n, permanecer&amp;aacute; en vigor despu&amp;eacute;s. Esto con frecuencia conduce a consecuencias no deseadas, por lo que el compilador de bytes advierte si llama a &lt;code&gt;set-buffer&lt;/code&gt; durante una excursi&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="1d3ee6e492f4a143386c60288985612cf7687a32" translate="yes" xml:space="preserve">
          <source>Because cons cells are so central to Lisp, we also have a word for an object which is not a cons cell. These objects are called &lt;em&gt;atoms&lt;/em&gt;.</source>
          <target state="translated">Debido a que las celdas de contras son tan importantes para Lisp, tambi&amp;eacute;n tenemos una palabra para un objeto que no es una celda de contras. Estos objetos se llaman &lt;em&gt;&amp;aacute;tomos&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="8e02576b56371153350d8d25bb27cbfbf989dce0" translate="yes" xml:space="preserve">
          <source>Because each symbol has separate value and function cells, variables names and function names do not conflict. For example, the symbol &lt;code&gt;buffer-file-name&lt;/code&gt; has a value (the name of the file being visited in the current buffer) as well as a function definition (a primitive function that returns the name of the file):</source>
          <target state="translated">Debido a que cada s&amp;iacute;mbolo tiene celdas de funci&amp;oacute;n y valor separadas, los nombres de las variables y de las funciones no entran en conflicto. Por ejemplo, el s&amp;iacute;mbolo &lt;code&gt;buffer-file-name&lt;/code&gt; tiene un valor (el nombre del archivo que se est&amp;aacute; visitando en el b&amp;uacute;fer actual) as&amp;iacute; como una definici&amp;oacute;n de funci&amp;oacute;n (una funci&amp;oacute;n primitiva que devuelve el nombre del archivo):</target>
        </trans-unit>
        <trans-unit id="d2ece29760102e60138459a857930034eb578422" translate="yes" xml:space="preserve">
          <source>Because it is common to perform arithmetic operations on a marker position, most of these operations (including &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;-&lt;/code&gt;) accept markers as arguments. In such cases, the marker stands for its current position.</source>
          <target state="translated">Debido a que es com&amp;uacute;n realizar operaciones aritm&amp;eacute;ticas en una posici&amp;oacute;n de marcador, la mayor&amp;iacute;a de estas operaciones (incluyendo &lt;code&gt;+&lt;/code&gt; y &lt;code&gt;-&lt;/code&gt; ) aceptan marcadores como argumentos. En tales casos, el marcador representa su posici&amp;oacute;n actual.</target>
        </trans-unit>
        <trans-unit id="29cedf8199b58b0444621f3b1384580f106a0af6" translate="yes" xml:space="preserve">
          <source>Because it takes some time to load the standard Lisp files, the</source>
          <target state="translated">Porque toma algo de tiempo cargar los archivos estándar de Lisp,el</target>
        </trans-unit>
        <trans-unit id="42fc09422aef4da2bc16d41efb01630156afbdf1" translate="yes" xml:space="preserve">
          <source>Because most cons cells are used as part of lists, we refer to any structure made out of cons cells as a &lt;em&gt;list structure&lt;/em&gt;.</source>
          <target state="translated">Debido a que la mayor&amp;iacute;a de las celdas contras se utilizan como parte de listas, nos referimos a cualquier estructura hecha de celdas contras como una &lt;em&gt;estructura de lista&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="aecbe3fd5b632bec5904e4eeb626bf628ddaa189" translate="yes" xml:space="preserve">
          <source>Because non terminals cannot appear consecutively in the BNF grammar, it is difficult to correctly handle tokens that act as terminators, so the above grammar treats &lt;code&gt;&quot;;&quot;&lt;/code&gt; as a statement &lt;em&gt;separator&lt;/em&gt; instead, which SMIE can handle very well.</source>
          <target state="translated">Debido a que los no terminales no pueden aparecer consecutivamente en la gram&amp;aacute;tica BNF, es dif&amp;iacute;cil manejar correctamente los tokens que act&amp;uacute;an como terminadores, por lo que la gram&amp;aacute;tica anterior trata &lt;code&gt;&quot;;&quot;&lt;/code&gt; como un &lt;em&gt;separador de&lt;/em&gt; sentencias , que SMIE puede manejar muy bien.</target>
        </trans-unit>
        <trans-unit id="5527da9c81f706f4f494272f6a72b5e6c955dbcd" translate="yes" xml:space="preserve">
          <source>Because of the special nature of lazily bound variables, it is an error to set them (e.g. with &lt;code&gt;setq&lt;/code&gt;).</source>
          <target state="translated">Debido a la naturaleza especial de las variables enlazadas de forma perezosa, es un error establecerlas (por ejemplo, con &lt;code&gt;setq&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="4cc7eee6b3274dd2df5b26429c74414bad10f743" translate="yes" xml:space="preserve">
          <source>Because of the way lists are implemented on top of cons cells, you can treat &lt;code&gt;list-alist&lt;/code&gt; in the example above as a cons cell alist, where the value type is a list with a single element containing the real value.</source>
          <target state="translated">Debido a la forma en que se implementan las listas sobre las celdas de cons, puede tratar &lt;code&gt;list-alist&lt;/code&gt; en el ejemplo anterior como una lista de celdas de cons, donde el tipo de valor es una lista con un solo elemento que contiene el valor real.</target>
        </trans-unit>
        <trans-unit id="d4920f7b17cfb9be5d144cd02f205a26abedb351" translate="yes" xml:space="preserve">
          <source>Because regular expression matching works only going forward, this is implemented by searching backwards from point for a match that ends at point. That can be quite slow if it has to search a long distance. You can bound the time required by specifying a non-&lt;code&gt;nil&lt;/code&gt; value for &lt;var&gt;limit&lt;/var&gt;, which says not to search before &lt;var&gt;limit&lt;/var&gt;. In this case, the match that is found must begin at or after &lt;var&gt;limit&lt;/var&gt;. Here&amp;rsquo;s an example:</source>
          <target state="translated">Debido a que la coincidencia de expresiones regulares solo funciona en el futuro, esto se implementa buscando hacia atr&amp;aacute;s desde el punto para encontrar una coincidencia que termine en el punto. Eso puede ser bastante lento si tiene que buscar una gran distancia. Puede &lt;var&gt;limit&lt;/var&gt; ar el tiempo requerido especificando un valor no &lt;code&gt;nil&lt;/code&gt; para el l&amp;iacute;mite , que dice no buscar antes del &lt;var&gt;limit&lt;/var&gt; . En este caso, la coincidencia que se encuentre debe comenzar en el &lt;var&gt;limit&lt;/var&gt; o despu&amp;eacute;s . He aqu&amp;iacute; un ejemplo:</target>
        </trans-unit>
        <trans-unit id="891978e65a108dec966a02f2c109e3c7ab27e318" translate="yes" xml:space="preserve">
          <source>Because the byte-compiled code is evaluated by the byte-code interpreter, instead of being executed directly by the machine&amp;rsquo;s hardware (as true compiled code is), byte-code is completely transportable from machine to machine without recompilation. It is not, however, as fast as true compiled code.</source>
          <target state="translated">Debido a que el c&amp;oacute;digo compilado por bytes es evaluado por el int&amp;eacute;rprete de c&amp;oacute;digo de bytes, en lugar de ser ejecutado directamente por el hardware de la m&amp;aacute;quina (como lo es el verdadero c&amp;oacute;digo compilado), el c&amp;oacute;digo de bytes es completamente transportable de m&amp;aacute;quina a m&amp;aacute;quina sin recompilaci&amp;oacute;n. Sin embargo, no es tan r&amp;aacute;pido como el verdadero c&amp;oacute;digo compilado.</target>
        </trans-unit>
        <trans-unit id="9807276681c6c1286c20092e4291987485eca98a" translate="yes" xml:space="preserve">
          <source>Because the match data normally describe the most recent search only, you must be careful not to do another search inadvertently between the search you wish to refer back to and the use of the match data. If you can&amp;rsquo;t avoid another intervening search, you must save and restore the match data around it, to prevent it from being overwritten.</source>
          <target state="translated">Debido a que los datos de coincidencia normalmente describen solo la b&amp;uacute;squeda m&amp;aacute;s reciente, debe tener cuidado de no realizar otra b&amp;uacute;squeda inadvertidamente entre la b&amp;uacute;squeda a la que desea hacer referencia y el uso de los datos de coincidencia. Si no puede evitar otra b&amp;uacute;squeda intermedia, debe guardar y restaurar los datos de coincidencia a su alrededor para evitar que se sobrescriban.</target>
        </trans-unit>
        <trans-unit id="2a9a557d3ce6491f8ae2018c1e6773fb2de8d6d8" translate="yes" xml:space="preserve">
          <source>Because the result of the evaluation is non-&lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;guard&lt;/code&gt; matches, &lt;code&gt;and&lt;/code&gt; matches, and control passes to that clause&amp;rsquo;s body forms.</source>
          <target state="translated">Debido a que el resultado de la evaluaci&amp;oacute;n no es &lt;code&gt;nil&lt;/code&gt; , las coincidencias de &lt;code&gt;guard&lt;/code&gt; ia &lt;code&gt;and&lt;/code&gt; coincidencias y el control pasa a las formas corporales de esa cl&amp;aacute;usula.</target>
        </trans-unit>
        <trans-unit id="1db90825a22716e728468e821da490caab60e2bd" translate="yes" xml:space="preserve">
          <source>Because the symbols used for abbrevs are not interned in the usual obarray, they will never appear as the result of reading a Lisp expression; in fact, normally they are never used except by the code that handles abbrevs. Therefore, it is safe to use them in a nonstandard way.</source>
          <target state="translated">Dado que los símbolos utilizados para las abreviaturas no están internados en el obarray habitual,nunca aparecerán como resultado de la lectura de una expresión de Lisp;de hecho,normalmente nunca se utilizan excepto por el código que maneja las abreviaturas.Por lo tanto,es seguro utilizarlos de forma no estándar.</target>
        </trans-unit>
        <trans-unit id="4c851d66714e2bb452c04ba43899f653d596ccbc" translate="yes" xml:space="preserve">
          <source>Because the width of a given string depends on the flags that control the appearance of certain characters, &lt;code&gt;vertical-motion&lt;/code&gt; behaves differently, for a given piece of text, depending on the buffer it is in, and even on the selected window (because the width, the truncation flag, and display table may vary between windows). See &lt;a href=&quot;usual-display#Usual-Display&quot;&gt;Usual Display&lt;/a&gt;.</source>
          <target state="translated">Debido a que el ancho de una cadena dada depende de las banderas que controlan la apariencia de ciertos caracteres, &lt;code&gt;vertical-motion&lt;/code&gt; comporta de manera diferente, para un fragmento de texto dado, dependiendo del b&amp;uacute;fer en el que se encuentra, e incluso de la ventana seleccionada (porque el ancho , el indicador de truncamiento y la tabla de visualizaci&amp;oacute;n pueden variar entre ventanas). Consulte &lt;a href=&quot;usual-display#Usual-Display&quot;&gt;Pantalla habitual&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ed8353d04454f502b14b0705a480aaefdecdb99f" translate="yes" xml:space="preserve">
          <source>Because threads were a relatively late addition to Emacs Lisp, and due to the way dynamic binding was sometimes used in conjunction with &lt;code&gt;accept-process-output&lt;/code&gt;, by default a process is locked to the thread that created it. When a process is locked to a thread, output from the process can only be accepted by that thread.</source>
          <target state="translated">Debido a que los subprocesos fueron una adici&amp;oacute;n relativamente tard&amp;iacute;a a Emacs Lisp, y debido a la forma en que a veces se usaba el enlace din&amp;aacute;mico junto con &lt;code&gt;accept-process-output&lt;/code&gt; , por defecto un proceso est&amp;aacute; bloqueado en el subproceso que lo cre&amp;oacute;. Cuando un proceso est&amp;aacute; bloqueado en un hilo, la salida del proceso solo puede ser aceptada por ese hilo.</target>
        </trans-unit>
        <trans-unit id="edefffca965b0362f640503f05f0a22864aaf0c5" translate="yes" xml:space="preserve">
          <source>Because we read from side to side in the inner loop, and from top to bottom in the outer loop, the effect of horizontal scrolling is not like that of textual or vertical scrolling. Textual scrolling involves selection of a portion of text to display, and vertical scrolling moves the window contents contiguously; but horizontal scrolling causes part of &lt;em&gt;each line&lt;/em&gt; to go off screen.</source>
          <target state="translated">Debido a que leemos de lado a lado en el bucle interior y de arriba a abajo en el bucle exterior, el efecto del desplazamiento horizontal no es como el del desplazamiento textual o vertical. El desplazamiento textual implica la selecci&amp;oacute;n de una parte del texto para mostrar, y el desplazamiento vertical mueve el contenido de la ventana de forma contigua; pero el desplazamiento horizontal hace que parte de &lt;em&gt;cada l&amp;iacute;nea&lt;/em&gt; salga de la pantalla.</target>
        </trans-unit>
        <trans-unit id="ca1ce0d49ba0f409cab2f1c7bbd925fafa44fcfe" translate="yes" xml:space="preserve">
          <source>Beeping</source>
          <target state="translated">Beeping</target>
        </trans-unit>
        <trans-unit id="17f7918b2f07183d74812fc33ccac59180f7ee50" translate="yes" xml:space="preserve">
          <source>Before Emacs can draw a character on a graphical display, it must select a &lt;em&gt;font&lt;/em&gt; for that character&lt;a href=&quot;#FOOT23&quot; name=&quot;DOCF23&quot;&gt;&lt;sup&gt;23&lt;/sup&gt;&lt;/a&gt;. See &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Fonts.html#Fonts&quot;&gt;Fonts&lt;/a&gt; in</source>
          <target state="translated">Antes de que Emacs pueda dibujar un car&amp;aacute;cter en una pantalla gr&amp;aacute;fica, debe seleccionar una &lt;em&gt;fuente&lt;/em&gt; para ese car&amp;aacute;cter &lt;a href=&quot;#FOOT23&quot; name=&quot;DOCF23&quot;&gt;&lt;sup&gt;23&lt;/sup&gt;&lt;/a&gt; . Ver &lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/emacs/Fonts.html#Fonts&quot;&gt;fuentes&lt;/a&gt; en</target>
        </trans-unit>
        <trans-unit id="f1d9387f0b425cea36fe067b0871cb24746553b0" translate="yes" xml:space="preserve">
          <source>Before Emacs can draw a character on a graphical display, it must select a &lt;em&gt;font&lt;/em&gt; for that character&lt;a href=&quot;#FOOT23&quot; name=&quot;DOCF23&quot;&gt;&lt;sup&gt;23&lt;/sup&gt;&lt;/a&gt;. See &lt;a href=&quot;https://www.gnu.org/software/emacs/manual/html_node/emacs/Fonts.html#Fonts&quot;&gt;Fonts&lt;/a&gt; in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13e5148e87ac77ce622c012484f91f5a2b40ed38" translate="yes" xml:space="preserve">
          <source>Before actually playing the sound, &lt;code&gt;play-sound&lt;/code&gt; calls the functions in the list &lt;code&gt;play-sound-functions&lt;/code&gt;. Each function is called with one argument, &lt;var&gt;sound&lt;/var&gt;.</source>
          <target state="translated">Antes de reproducir realmente el sonido, &lt;code&gt;play-sound&lt;/code&gt; llama a las funciones de la lista &lt;code&gt;play-sound-functions&lt;/code&gt; . Cada funci&amp;oacute;n se llama con un argumento, &lt;var&gt;sound&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="acfa912275db6abf7aab479d6b8b835a2b7d945e" translate="yes" xml:space="preserve">
          <source>Before any attempt to send the request, the application-specific conditions are checked. Since the &lt;code&gt;jsonrpc&lt;/code&gt; library can&amp;rsquo;t know what these conditions are, the program can use the &lt;code&gt;jsonrpc-connection-ready-p&lt;/code&gt; generic function (see &lt;a href=&quot;generic-functions#Generic-Functions&quot;&gt;Generic Functions&lt;/a&gt;) to specify them. The default method for this function returns &lt;code&gt;t&lt;/code&gt;, but you can add overriding methods that return &lt;code&gt;nil&lt;/code&gt; in some situations, based on the arguments passed to it, which are the &lt;code&gt;jsonrpc-connection&lt;/code&gt; object (see &lt;a href=&quot;jsonrpc-overview#JSONRPC-Overview&quot;&gt;JSONRPC Overview&lt;/a&gt;) and whichever value you passed as the &lt;code&gt;:deferred&lt;/code&gt; keyword argument.</source>
          <target state="translated">Antes de cualquier intento de enviar la solicitud, se comprueban las condiciones espec&amp;iacute;ficas de la aplicaci&amp;oacute;n. Dado que la biblioteca &lt;code&gt;jsonrpc&lt;/code&gt; no puede saber cu&amp;aacute;les son estas condiciones, el programa puede usar la funci&amp;oacute;n gen&amp;eacute;rica &lt;code&gt;jsonrpc-connection-ready-p&lt;/code&gt; (ver &lt;a href=&quot;generic-functions#Generic-Functions&quot;&gt;Funciones gen&amp;eacute;ricas&lt;/a&gt; ) para especificarlas. El m&amp;eacute;todo predeterminado para esta funci&amp;oacute;n devuelve &lt;code&gt;t&lt;/code&gt; , pero puede agregar m&amp;eacute;todos de reemplazo que devuelvan &lt;code&gt;nil&lt;/code&gt; en algunas situaciones, en funci&amp;oacute;n de los argumentos que se le pasan, que son el objeto &lt;code&gt;jsonrpc-connection&lt;/code&gt; (consulte &lt;a href=&quot;jsonrpc-overview#JSONRPC-Overview&quot;&gt;Descripci&amp;oacute;n general de JSONRPC&lt;/a&gt; ) y el valor que haya pasado como &lt;code&gt;:deferred&lt;/code&gt; argumento de palabra clave diferida .</target>
        </trans-unit>
        <trans-unit id="dcb73aafe29a27771bb410a3cc2ea9ba475e91b4" translate="yes" xml:space="preserve">
          <source>Before confirming unsaved changes, &lt;code&gt;kill-buffer&lt;/code&gt; calls the functions in the list &lt;code&gt;kill-buffer-query-functions&lt;/code&gt;, in order of appearance, with no arguments. The buffer being killed is the current buffer when they are called. The idea of this feature is that these functions will ask for confirmation from the user. If any of them returns &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;kill-buffer&lt;/code&gt; spares the buffer&amp;rsquo;s life.</source>
          <target state="translated">Antes de confirmar los cambios no guardados, &lt;code&gt;kill-buffer&lt;/code&gt; llama a las funciones de la lista &lt;code&gt;kill-buffer-query-functions&lt;/code&gt; , en orden de aparici&amp;oacute;n, sin argumentos. El b&amp;uacute;fer que se est&amp;aacute; eliminando es el b&amp;uacute;fer actual cuando se llama. La idea de esta caracter&amp;iacute;stica es que estas funciones pedir&amp;aacute;n confirmaci&amp;oacute;n al usuario. Si alguno de ellos devuelve &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;kill-buffer&lt;/code&gt; perdona la vida del b&amp;uacute;fer.</target>
        </trans-unit>
        <trans-unit id="b2c6df81ff9d3d92d5524e2fbe564a5cd653b1ec" translate="yes" xml:space="preserve">
          <source>Before creating the frame, this function ensures that Emacs is set up to display graphics. For instance, if Emacs has not processed X resources (e.g., if it was started on a text terminal), it does so at this time. In all other respects, this function behaves like &lt;code&gt;make-frame&lt;/code&gt; (see &lt;a href=&quot;creating-frames#Creating-Frames&quot;&gt;Creating Frames&lt;/a&gt;).</source>
          <target state="translated">Antes de crear el marco, esta funci&amp;oacute;n asegura que Emacs est&amp;eacute; configurado para mostrar gr&amp;aacute;ficos. Por ejemplo, si Emacs no ha procesado recursos X (por ejemplo, si se inici&amp;oacute; en una terminal de texto), lo hace en este momento. En todos los dem&amp;aacute;s aspectos, esta funci&amp;oacute;n se comporta como &lt;code&gt;make-frame&lt;/code&gt; (ver &lt;a href=&quot;creating-frames#Creating-Frames&quot;&gt;Creaci&amp;oacute;n de marcos&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="838498ac25b34bcaba38e8d1736cb5d1213cbd8a" translate="yes" xml:space="preserve">
          <source>Before restoring the previous definitions, &lt;code&gt;unload-feature&lt;/code&gt; runs &lt;code&gt;remove-hook&lt;/code&gt; to remove functions in the library from certain hooks. These hooks include variables whose names end in &amp;lsquo;</source>
          <target state="translated">Antes de restaurar las definiciones anteriores, &lt;code&gt;unload-feature&lt;/code&gt; ejecuta &lt;code&gt;remove-hook&lt;/code&gt; para eliminar funciones en la biblioteca de ciertos ganchos. Estos ganchos incluyen variables cuyos nombres terminan en '</target>
        </trans-unit>
        <trans-unit id="1f9591d8d77ddb1cb74b81db22ada52f623b6efb" translate="yes" xml:space="preserve">
          <source>Before suspending, &lt;code&gt;suspend-emacs&lt;/code&gt; runs the normal hook &lt;code&gt;suspend-hook&lt;/code&gt;. After the user resumes Emacs, &lt;code&gt;suspend-emacs&lt;/code&gt; runs the normal hook &lt;code&gt;suspend-resume-hook&lt;/code&gt;. See &lt;a href=&quot;hooks#Hooks&quot;&gt;Hooks&lt;/a&gt;.</source>
          <target state="translated">Antes de suspender, &lt;code&gt;suspend-emacs&lt;/code&gt; ejecuta el gancho normal &lt;code&gt;suspend-hook&lt;/code&gt; . Despu&amp;eacute;s de que el usuario reanuda Emacs, &lt;code&gt;suspend-emacs&lt;/code&gt; ejecuta el gancho normal &lt;code&gt;suspend-resume-hook&lt;/code&gt; . Ver &lt;a href=&quot;hooks#Hooks&quot;&gt;Ganchos&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="88b944d20a7b391474416844b970d522dd303815" translate="yes" xml:space="preserve">
          <source>Before the display margins can display anything, you must give them a nonzero width. The usual way to do that is to set these variables:</source>
          <target state="translated">Antes de que los márgenes de la pantalla puedan mostrar algo,debes darles un ancho distinto de cero.La forma habitual de hacerlo es establecer estas variables:</target>
        </trans-unit>
        <trans-unit id="b44b66b4a5c9db407d2757ab95949e425a1d30d3" translate="yes" xml:space="preserve">
          <source>Before the double-click or double-drag event, Emacs generates a &lt;em&gt;double-down&lt;/em&gt; event when the user presses the button down for the second time. Its event type contains &amp;lsquo;</source>
          <target state="translated">Antes del evento de doble clic o doble arrastre, Emacs genera un evento de &lt;em&gt;doble hacia abajo&lt;/em&gt; cuando el usuario presiona el bot&amp;oacute;n por segunda vez. Su tipo de evento contiene '</target>
        </trans-unit>
        <trans-unit id="27eeeabd3ce039e5d19034d398eafd77b5b99419" translate="yes" xml:space="preserve">
          <source>Before you do this, make sure the defun has enough close parentheses. Otherwise,</source>
          <target state="translated">Antes de hacerlo,asegúrate de que el difunto tenga suficientes paréntesis cercanos.De lo contrario,</target>
        </trans-unit>
        <trans-unit id="cb9703a6b294ccc0880d4c1dfd4f9f3daf981cdb" translate="yes" xml:space="preserve">
          <source>Begin your module by including the header file</source>
          <target state="translated">Comience su módulo incluyendo el archivo de cabecera</target>
        </trans-unit>
        <trans-unit id="b4042d6d0e34481a13a0bd70105a92db402dff7f" translate="yes" xml:space="preserve">
          <source>Beginning of buffer</source>
          <target state="translated">Comienzo de la amortiguación</target>
        </trans-unit>
        <trans-unit id="7967dbe1bdfdc4fa11437c00eb1b6a94e7b1839d" translate="yes" xml:space="preserve">
          <source>Being quick and simple, &lt;code&gt;unsafep&lt;/code&gt; does a very light analysis and rejects many Lisp expressions that are actually safe. There are no known cases where &lt;code&gt;unsafep&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt; for an unsafe expression. However, a safe Lisp expression can return a string with a &lt;code&gt;display&lt;/code&gt; property, containing an associated Lisp expression to be executed after the string is inserted into a buffer. This associated expression can be a virus. In order to be safe, you must delete properties from all strings calculated by user code before inserting them into buffers.</source>
          <target state="translated">Al ser r&amp;aacute;pido y simple, &lt;code&gt;unsafep&lt;/code&gt; hace un an&amp;aacute;lisis muy ligero y rechaza muchas expresiones Lisp que son realmente seguras. No se conocen casos en los que &lt;code&gt;unsafep&lt;/code&gt; devuelva &lt;code&gt;nil&lt;/code&gt; para una expresi&amp;oacute;n no segura. Sin embargo, una expresi&amp;oacute;n Lisp segura puede devolver una cadena con una propiedad de &lt;code&gt;display&lt;/code&gt; , que contiene una expresi&amp;oacute;n Lisp asociada que se ejecutar&amp;aacute; despu&amp;eacute;s de que la cadena se inserte en un b&amp;uacute;fer. Esta expresi&amp;oacute;n asociada puede ser un virus. Para estar seguro, debe eliminar las propiedades de todas las cadenas calculadas por el c&amp;oacute;digo de usuario antes de insertarlas en los b&amp;uacute;feres.</target>
        </trans-unit>
        <trans-unit id="cd79998f02d02ee1f54b550965880ade28c0e5ae" translate="yes" xml:space="preserve">
          <source>Below is a table explaining each element. Note that last &lt;code&gt;heap&lt;/code&gt; entry is optional and present only if an underlying &lt;code&gt;malloc&lt;/code&gt; implementation provides &lt;code&gt;mallinfo&lt;/code&gt; function.</source>
          <target state="translated">A continuaci&amp;oacute;n se muestra una tabla que explica cada elemento. Tenga en cuenta que la &amp;uacute;ltima entrada del &lt;code&gt;heap&lt;/code&gt; es opcional y est&amp;aacute; presente solo si una implementaci&amp;oacute;n de &lt;code&gt;malloc&lt;/code&gt; subyacente proporciona la funci&amp;oacute;n &lt;code&gt;mallinfo&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b3840ae760c97e9024f5cab124e17dbea9c19d2c" translate="yes" xml:space="preserve">
          <source>Below is a table of the classes you can use in a character alternative, and what they mean. Note that the &amp;lsquo;</source>
          <target state="translated">A continuaci&amp;oacute;n se muestra una tabla de las clases que puede usar en una alternativa de car&amp;aacute;cter y lo que significan. Tenga en cuenta que el '</target>
        </trans-unit>
        <trans-unit id="01bae04f3ae2801c065a4011c8954162185dde4a" translate="yes" xml:space="preserve">
          <source>Below there is a description of a few subtypes of &lt;code&gt;Lisp_Vectorlike&lt;/code&gt;. Buffer object represents the text to display and edit. Window is the part of display structure which shows the buffer or is used as a container to recursively place other windows on the same frame. (Do not confuse Emacs Lisp window object with the window as an entity managed by the user interface system like X; in Emacs terminology, the latter is called frame.) Finally, process object is used to manage the subprocesses.</source>
          <target state="translated">A continuaci&amp;oacute;n hay una descripci&amp;oacute;n de algunos subtipos de &lt;code&gt;Lisp_Vectorlike&lt;/code&gt; . El objeto de b&amp;uacute;fer representa el texto para mostrar y editar. La ventana es la parte de la estructura de visualizaci&amp;oacute;n que muestra el b&amp;uacute;fer o se utiliza como contenedor para colocar de forma recursiva otras ventanas en el mismo marco. (No confunda el objeto de ventana Emacs Lisp con la ventana como una entidad administrada por el sistema de interfaz de usuario como X; en la terminolog&amp;iacute;a de Emacs, este &amp;uacute;ltimo se llama marco). Finalmente, el objeto de proceso se usa para administrar los subprocesos.</target>
        </trans-unit>
        <trans-unit id="5c8be3db4820388729d86b1200b856644093f20c" translate="yes" xml:space="preserve">
          <source>Below we will give a number of guidelines to redeem the frustration mentioned above and thus to avoid literally losing buffers in-between the windows of a frame.</source>
          <target state="translated">A continuación daremos una serie de pautas para redimir la frustración mencionada anteriormente y así evitar literalmente la pérdida de buffers entre las ventanas de un marco.</target>
        </trans-unit>
        <trans-unit id="0353802f217c5a533a465f68ec4f0d8faa7c50cf" translate="yes" xml:space="preserve">
          <source>Below, we show first the regexp as a string in Lisp syntax (to distinguish spaces from tab characters), and then the result of evaluating it. The string constant begins and ends with a double-quote. &amp;lsquo;</source>
          <target state="translated">A continuaci&amp;oacute;n, mostramos primero la expresi&amp;oacute;n regular como una cadena en la sintaxis Lisp (para distinguir los espacios de los caracteres de tabulaci&amp;oacute;n) y luego el resultado de evaluarla. La constante de cadena comienza y termina con comillas dobles. '</target>
        </trans-unit>
        <trans-unit id="3cca15ebda8dce9819d62b75dc10ad2c1696871b" translate="yes" xml:space="preserve">
          <source>Berkeley BSD and its variants.</source>
          <target state="translated">Berkeley BSD y sus variantes.</target>
        </trans-unit>
        <trans-unit id="01ea07f92a42549b5de550cce8a6d1e85ce49161" translate="yes" xml:space="preserve">
          <source>Beware: this property operates at a very low level, and affects a lot of code in unexpected ways. So use it with extreme caution. A common misuse is to put an intangible property on invisible text, which is actually unnecessary since the command loop will move point outside of the invisible text at the end of each command anyway. See &lt;a href=&quot;adjusting-point#Adjusting-Point&quot;&gt;Adjusting Point&lt;/a&gt;. For these reasons, this property is obsolete; use the &lt;code&gt;cursor-intangible&lt;/code&gt; property instead.</source>
          <target state="translated">Atenci&amp;oacute;n: esta propiedad funciona a un nivel muy bajo y afecta a una gran cantidad de c&amp;oacute;digo de forma inesperada. As&amp;iacute; que util&amp;iacute;celo con extrema precauci&amp;oacute;n. Un mal uso com&amp;uacute;n es poner una propiedad intangible en texto invisible, lo que en realidad es innecesario ya que el ciclo de comando mover&amp;aacute; el punto fuera del texto invisible al final de cada comando de todos modos. Consulte &lt;a href=&quot;adjusting-point#Adjusting-Point&quot;&gt;Punto de ajuste&lt;/a&gt; . Por estas razones, esta propiedad est&amp;aacute; obsoleta; utilice la propiedad &lt;code&gt;cursor-intangible&lt;/code&gt; en su lugar.</target>
        </trans-unit>
        <trans-unit id="f7f5f613a250e0e11c1b4577276a09871c48b610" translate="yes" xml:space="preserve">
          <source>Beyond the basic vector, a lot of objects like markers, overlays and buffers are managed as if they were vectors. The corresponding C data structures include the &lt;code&gt;union vectorlike_header&lt;/code&gt; field whose &lt;code&gt;size&lt;/code&gt; member contains the subtype enumerated by &lt;code&gt;enum pvec_type&lt;/code&gt; and an information about how many &lt;code&gt;Lisp_Object&lt;/code&gt; fields this structure contains and what the size of the rest data is. This information is needed to calculate the memory footprint of an object, and used by the vector allocation code while iterating over the vector blocks.</source>
          <target state="translated">M&amp;aacute;s all&amp;aacute; del vector b&amp;aacute;sico, muchos objetos como marcadores, superposiciones y b&amp;uacute;feres se gestionan como si fueran vectores. Las estructuras de datos C correspondientes incluyen el campo &lt;code&gt;union vectorlike_header&lt;/code&gt; cuyo miembro de &lt;code&gt;size&lt;/code&gt; contiene el subtipo enumerado por &lt;code&gt;enum pvec_type&lt;/code&gt; y una informaci&amp;oacute;n sobre cu&amp;aacute;ntos campos &lt;code&gt;Lisp_Object&lt;/code&gt; contiene esta estructura y cu&amp;aacute;l es el tama&amp;ntilde;o de los datos restantes. Esta informaci&amp;oacute;n es necesaria para calcular la huella de memoria de un objeto y es utilizada por el c&amp;oacute;digo de asignaci&amp;oacute;n de vectores mientras se itera sobre los bloques de vectores.</target>
        </trans-unit>
        <trans-unit id="f2b8d702e0ae298ec5dfa21f68f107c0b717e304" translate="yes" xml:space="preserve">
          <source>Bidirectional Display</source>
          <target state="translated">Pantalla bidireccional</target>
        </trans-unit>
        <trans-unit id="0f761761aa75d96b2cf2c46b89a33d4202f1f95c" translate="yes" xml:space="preserve">
          <source>Bidirectional reordering can have surprising and unpleasant effects when two strings with bidirectional content are juxtaposed in a buffer, or otherwise programmatically concatenated into a string of text. A typical problematic case is when a buffer consists of sequences of text fields separated by whitespace or punctuation characters, like Buffer Menu mode or Rmail Summary Mode. Because the punctuation characters used as separators have &lt;em&gt;weak directionality&lt;/em&gt;, they take on the directionality of surrounding text. As result, a numeric field that follows a field with bidirectional content can be displayed &lt;em&gt;to the left&lt;/em&gt; of the preceding field, messing up the expected layout. There are several ways to avoid this problem:</source>
          <target state="translated">El reordenamiento bidireccional puede tener efectos sorprendentes y desagradables cuando dos cadenas con contenido bidireccional se yuxtaponen en un b&amp;uacute;fer o se concatenan mediante programaci&amp;oacute;n en una cadena de texto. Un caso problem&amp;aacute;tico t&amp;iacute;pico es cuando un b&amp;uacute;fer consta de secuencias de campos de texto separados por espacios en blanco o caracteres de puntuaci&amp;oacute;n, como el modo de men&amp;uacute; de b&amp;uacute;fer o el modo de resumen de Rmail. Debido a que los caracteres de puntuaci&amp;oacute;n utilizados como separadores tienen &lt;em&gt;una direccionalidad d&amp;eacute;bil&lt;/em&gt; , adoptan la direccionalidad del texto circundante. Como resultado, un campo num&amp;eacute;rico que sigue a un campo con contenido bidireccional se puede mostrar &lt;em&gt;a la izquierda&lt;/em&gt; del campo anterior, alterando el dise&amp;ntilde;o esperado. Hay varias formas de evitar este problema:</target>
        </trans-unit>
        <trans-unit id="7618266932012d1bb7d78a709b3b8de0c7e01623" translate="yes" xml:space="preserve">
          <source>Bignums can have arbitrary precision. Operations that overflow a fixnum will return a bignum instead.</source>
          <target state="translated">Los bignums pueden tener una precisión arbitraria.Las operaciones que desbordan un fixnum devolverán un bignum en su lugar.</target>
        </trans-unit>
        <trans-unit id="fb38340a365bddb7a78416de50a44b6a7efdea98" translate="yes" xml:space="preserve">
          <source>Bind the symbol &lt;var&gt;ref&lt;/var&gt; to a submatch that matches &lt;var&gt;rx-expr&lt;/var&gt;&lt;small&gt;...&lt;/small&gt;. &lt;var&gt;ref&lt;/var&gt; is bound in &lt;var&gt;body-forms&lt;/var&gt; to the string of the submatch or nil, but can also be used in &lt;code&gt;backref&lt;/code&gt;.</source>
          <target state="translated">Enlazar el s&amp;iacute;mbolo de &lt;var&gt;ref&lt;/var&gt; erencia a un subcoincidencia que partidos &lt;var&gt;rx-expr&lt;/var&gt; &lt;small&gt;...&lt;/small&gt; . &lt;var&gt;ref&lt;/var&gt; est&amp;aacute; enlazado en &lt;var&gt;body-forms&lt;/var&gt; a la cadena del submatch o nil, pero tambi&amp;eacute;n se puede usar en &lt;code&gt;backref&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4379c6bcd5778b843b030784559be7b79a5580f0" translate="yes" xml:space="preserve">
          <source>Binding &lt;code&gt;coding-system-for-write&lt;/code&gt; to a non-&lt;code&gt;nil&lt;/code&gt; value prevents output primitives from calling the function specified by &lt;code&gt;select-safe-coding-system-function&lt;/code&gt; (see &lt;a href=&quot;user_002dchosen-coding-systems#User_002dChosen-Coding-Systems&quot;&gt;User-Chosen Coding Systems&lt;/a&gt;). This is because</source>
          <target state="translated">La vinculaci&amp;oacute;n &lt;code&gt;coding-system-for-write&lt;/code&gt; a un valor no &lt;code&gt;nil&lt;/code&gt; evita que las primitivas de salida llamen a la funci&amp;oacute;n especificada por la funci&amp;oacute;n &lt;code&gt;select-safe-coding-system-function&lt;/code&gt; (consulte &lt;a href=&quot;user_002dchosen-coding-systems#User_002dChosen-Coding-Systems&quot;&gt;Sistemas de codificaci&amp;oacute;n elegidos por el usuario&lt;/a&gt; ). Esto es porque</target>
        </trans-unit>
        <trans-unit id="fd1754f82b6bd628f04b3f5c068badfc9846c322" translate="yes" xml:space="preserve">
          <source>Binding module functions to Lisp symbols</source>
          <target state="translated">Las funciones del módulo de unión a los símbolos de Lisp</target>
        </trans-unit>
        <trans-unit id="5d759eb09f19bf06ed84ff18e43aee3a19e46979" translate="yes" xml:space="preserve">
          <source>Bitwise Operations on Integers</source>
          <target state="translated">Operaciones de bits sobre números enteros</target>
        </trans-unit>
        <trans-unit id="93fd851ff63a4d886e2fa5d2be01e88deb486b52" translate="yes" xml:space="preserve">
          <source>Blinking Parentheses</source>
          <target state="translated">Paréntesis parpadeante</target>
        </trans-unit>
        <trans-unit id="6ac648d45e59dfdc6715fe0e3cbd86c82820c6b6" translate="yes" xml:space="preserve">
          <source>Block until &lt;var&gt;thread&lt;/var&gt; exits, or until the current thread is signaled. It returns the result of the &lt;var&gt;thread&lt;/var&gt; function. If &lt;var&gt;thread&lt;/var&gt; has already exited, this returns immediately.</source>
          <target state="translated">Bloquear hasta que el &lt;var&gt;thread&lt;/var&gt; salga o hasta que se se&amp;ntilde;ale el hilo actual. Devuelve el resultado de la funci&amp;oacute;n &lt;var&gt;thread&lt;/var&gt; . Si el &lt;var&gt;thread&lt;/var&gt; ya ha salido, esto regresa inmediatamente.</target>
        </trans-unit>
        <trans-unit id="c6929c141afbaefdc4afd63ac4b5596956cfa67c" translate="yes" xml:space="preserve">
          <source>Bool-Vector Type</source>
          <target state="translated">Tipo Bool-Vector</target>
        </trans-unit>
        <trans-unit id="882f4e1ca02e65db176c079c22995b90c25fc39c" translate="yes" xml:space="preserve">
          <source>Bool-vectors</source>
          <target state="translated">Bool-vectors</target>
        </trans-unit>
        <trans-unit id="c0a12baab63ceb798d7bac34fa38c4622e4b0373" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;kill-ring&lt;/code&gt; and &lt;code&gt;kill-ring-yank-pointer&lt;/code&gt; are Lisp variables whose values are normally lists. The word &amp;ldquo;pointer&amp;rdquo; in the name of the &lt;code&gt;kill-ring-yank-pointer&lt;/code&gt; indicates that the variable&amp;rsquo;s purpose is to identify one element of the list for use by the next yank command.</source>
          <target state="translated">Tanto &lt;code&gt;kill-ring&lt;/code&gt; como &lt;code&gt;kill-ring-yank-pointer&lt;/code&gt; son variables Lisp cuyos valores son normalmente listas. La palabra &quot;puntero&quot; en el nombre de &lt;code&gt;kill-ring-yank-pointer&lt;/code&gt; indica que el prop&amp;oacute;sito de la variable es identificar un elemento de la lista para que lo utilice el siguiente comando yank.</target>
        </trans-unit>
        <trans-unit id="2fdc0bac385ea879dbde52d2dd508f2b5a448d88" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;read-from-minibuffer&lt;/code&gt; and &lt;code&gt;completing-read&lt;/code&gt; add new elements to the history list automatically, and provide commands to allow the user to reuse items on the list. The only thing your program needs to do to use a history list is to initialize it and to pass its name to the input functions when you wish. But it is safe to modify the list by hand when the minibuffer input functions are not using it.</source>
          <target state="translated">Tanto &lt;code&gt;read-from-minibuffer&lt;/code&gt; como &lt;code&gt;completing-read&lt;/code&gt; agregan nuevos elementos a la lista del historial autom&amp;aacute;ticamente y proporcionan comandos para permitir al usuario reutilizar los elementos de la lista. Lo &amp;uacute;nico que debe hacer su programa para usar una lista de historial es inicializarla y pasar su nombre a las funciones de entrada cuando lo desee. Pero es seguro modificar la lista a mano cuando las funciones de entrada del minib&amp;uacute;fer no la est&amp;aacute;n usando.</target>
        </trans-unit>
        <trans-unit id="fc66435a82b20252191500c38ab3e5707fac603e" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;yes-or-no-p&lt;/code&gt; and &lt;code&gt;y-or-n-p&lt;/code&gt; use the minibuffer.</source>
          <target state="translated">Tanto &lt;code&gt;yes-or-no-p&lt;/code&gt; como &lt;code&gt;y-or-n-p&lt;/code&gt; usan el minib&amp;uacute;fer.</target>
        </trans-unit>
        <trans-unit id="dfd6cff3dbda1d13ebd279438e41124efaba93e7" translate="yes" xml:space="preserve">
          <source>Both &lt;var&gt;error-symbol&lt;/var&gt; and &lt;var&gt;data&lt;/var&gt; are available to any error handlers that handle the error: &lt;code&gt;condition-case&lt;/code&gt; binds a local variable to a list of the form &lt;code&gt;(&lt;var&gt;error-symbol&lt;/var&gt; .
&lt;var&gt;data&lt;/var&gt;)&lt;/code&gt; (see &lt;a href=&quot;handling-errors#Handling-Errors&quot;&gt;Handling Errors&lt;/a&gt;).</source>
          <target state="translated">Tanto &lt;var&gt;error-symbol&lt;/var&gt; como los &lt;var&gt;data&lt;/var&gt; est&amp;aacute;n disponibles para cualquier manejador de errores que maneje el error: &lt;code&gt;condition-case&lt;/code&gt; vincula una variable local a una lista del formulario &lt;code&gt;(&lt;var&gt;error-symbol&lt;/var&gt; . &lt;var&gt;data&lt;/var&gt;)&lt;/code&gt; (ver &lt;a href=&quot;handling-errors#Handling-Errors&quot;&gt;Manejo de errores&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="62da8c794cc6a7eb9ffe501a46f505c4219f98f2" translate="yes" xml:space="preserve">
          <source>Both forms of this definition (with backquote and without) suffer from the defect that &lt;var&gt;final&lt;/var&gt; is evaluated on every iteration. If &lt;var&gt;final&lt;/var&gt; is a constant, this is not a problem. If it is a more complex form, say &lt;code&gt;(long-complex-calculation x)&lt;/code&gt;, this can slow down the execution significantly. If &lt;var&gt;final&lt;/var&gt; has side effects, executing it more than once is probably incorrect.</source>
          <target state="translated">Ambas formas de esta definici&amp;oacute;n (con comillas inversas y sin ellas) adolecen del defecto de que &lt;var&gt;final&lt;/var&gt; se eval&amp;uacute;a en cada iteraci&amp;oacute;n. Si &lt;var&gt;final&lt;/var&gt; es una constante, esto no es un problema. Si es una forma m&amp;aacute;s compleja, digamos &lt;code&gt;(long-complex-calculation x)&lt;/code&gt; , esto puede ralentizar la ejecuci&amp;oacute;n significativamente. Si &lt;var&gt;final&lt;/var&gt; tiene efectos secundarios, ejecutarlo m&amp;aacute;s de una vez probablemente sea incorrecto.</target>
        </trans-unit>
        <trans-unit id="4b35a12cfb8382543b92627bbee4b04423faea8d" translate="yes" xml:space="preserve">
          <source>Both lists and arrays are classified as sequences.</source>
          <target state="translated">Tanto las listas como las matrices se clasifican como secuencias.</target>
        </trans-unit>
        <trans-unit id="d2f3804efa9fdf3073f4d412bb85880a0a67b5c0" translate="yes" xml:space="preserve">
          <source>Both the values and the keys in an alist may be any Lisp objects. For example, in the following alist, the symbol &lt;code&gt;a&lt;/code&gt; is associated with the number &lt;code&gt;1&lt;/code&gt;, and the string &lt;code&gt;&quot;b&quot;&lt;/code&gt; is associated with the &lt;em&gt;list&lt;/em&gt;&lt;code&gt;(2 3)&lt;/code&gt;, which is the &lt;small&gt;CDR&lt;/small&gt; of the alist element:</source>
          <target state="translated">Tanto los valores como las claves de una lista pueden ser cualquier objeto Lisp. Por ejemplo, en la siguiente lista, el s&amp;iacute;mbolo &lt;code&gt;a&lt;/code&gt; est&amp;aacute; asociado con el n&amp;uacute;mero &lt;code&gt;1&lt;/code&gt; y la cadena &lt;code&gt;&quot;b&quot;&lt;/code&gt; est&amp;aacute; asociada con la &lt;em&gt;lista &lt;/em&gt; &lt;code&gt;(2 3)&lt;/code&gt; , que es el &lt;small&gt;CDR&lt;/small&gt; del elemento de la lista:</target>
        </trans-unit>
        <trans-unit id="cce7f2f2f0dc525117a70d581d9c335212145e5b" translate="yes" xml:space="preserve">
          <source>Bottom</source>
          <target state="translated">Bottom</target>
        </trans-unit>
        <trans-unit id="e61ada95a3801a523f8d48042eaed868415934b4" translate="yes" xml:space="preserve">
          <source>Breaking on an event.</source>
          <target state="translated">Rompiendo un evento.</target>
        </trans-unit>
        <trans-unit id="25a85b6e8b7cc5b5a89123c777d9b420bfa8cc33" translate="yes" xml:space="preserve">
          <source>Breakpoints at stop points.</source>
          <target state="translated">Puntos de ruptura en los puntos de parada.</target>
        </trans-unit>
        <trans-unit id="50f88da05c8e174324af021a4ee24bc168eb0c3d" translate="yes" xml:space="preserve">
          <source>Breaks</source>
          <target state="translated">Breaks</target>
        </trans-unit>
        <trans-unit id="ee60d60ea805fbda38f6f538481a92d3787df0b9" translate="yes" xml:space="preserve">
          <source>Brief description</source>
          <target state="translated">Breve descripción...</target>
        </trans-unit>
        <trans-unit id="3fb0fc86dfa0b9d7362bd38d269b717749f04cef" translate="yes" xml:space="preserve">
          <source>Buffer Basics</source>
          <target state="translated">Conceptos básicos de los amortiguadores</target>
        </trans-unit>
        <trans-unit id="c027215488849466cacd3006649b1340a2edd0fc" translate="yes" xml:space="preserve">
          <source>Buffer File Name</source>
          <target state="translated">Nombre del archivo del buffer</target>
        </trans-unit>
        <trans-unit id="a4af6911c145bae353cfba5cde3bbb16bdca445e" translate="yes" xml:space="preserve">
          <source>Buffer Internals</source>
          <target state="translated">Internos de la memoria intermedia</target>
        </trans-unit>
        <trans-unit id="5032b3933a4bf66e8948fdd3b1195bf2ec955ec7" translate="yes" xml:space="preserve">
          <source>Buffer Modification</source>
          <target state="translated">Modificación del tampón</target>
        </trans-unit>
        <trans-unit id="a1220d5a5dc0d3413a288b7d866d2b909c573bb8" translate="yes" xml:space="preserve">
          <source>Buffer Modification Time</source>
          <target state="translated">Tiempo de modificación del buffer</target>
        </trans-unit>
        <trans-unit id="44e02f9bcee199b59cbd729f000935b0a07991dd" translate="yes" xml:space="preserve">
          <source>Buffer Names</source>
          <target state="translated">Nombres de los buffers</target>
        </trans-unit>
        <trans-unit id="ccf9f9fdff4870f16ae30767ca4be6fe76523e15" translate="yes" xml:space="preserve">
          <source>Buffer Parameters</source>
          <target state="translated">Parámetros del buffer</target>
        </trans-unit>
        <trans-unit id="e93f01132bbaec25c49799efddeb64957f02afd2" translate="yes" xml:space="preserve">
          <source>Buffer Text Notation</source>
          <target state="translated">Notación de texto en el búfer</target>
        </trans-unit>
        <trans-unit id="f1294c425911ac20d751cb9d1c51979e6e34f62e" translate="yes" xml:space="preserve">
          <source>Buffer Type</source>
          <target state="translated">Tipo de tampón</target>
        </trans-unit>
        <trans-unit id="abcd68a1e18c1b87353060b6dc458244da82927b" translate="yes" xml:space="preserve">
          <source>Buffer is read-only</source>
          <target state="translated">El buffer es de sólo lectura</target>
        </trans-unit>
        <trans-unit id="344030f3634d1baa3762609d3692b8f3c1316b48" translate="yes" xml:space="preserve">
          <source>Buffer positions and motion functions.</source>
          <target state="translated">Posiciones de buffer y funciones de movimiento.</target>
        </trans-unit>
        <trans-unit id="6246ccf7dd19ff26d69c92fb853ac66fb5ae4f89" translate="yes" xml:space="preserve">
          <source>Buffer positions are measured in character units. This function returns the byte-position corresponding to buffer position &lt;var&gt;position&lt;/var&gt; in the current buffer. This is 1 at the start of the buffer, and counts upward in bytes. If &lt;var&gt;position&lt;/var&gt; is out of range, the value is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Las posiciones del b&amp;uacute;fer se miden en unidades de caracteres. Esta funci&amp;oacute;n devuelve el byte de posici&amp;oacute;n correspondiente para amortiguar posici&amp;oacute;n &lt;var&gt;position&lt;/var&gt; en la memoria intermedia actual. Este es 1 al comienzo del b&amp;uacute;fer y cuenta hacia arriba en bytes. Si la &lt;var&gt;position&lt;/var&gt; est&amp;aacute; fuera de rango, el valor es &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="35ca209a656833f1530433e2982a81634d31ea0e" translate="yes" xml:space="preserve">
          <source>Buffer positions indicating which text is on-screen in a window.</source>
          <target state="translated">Posiciones del buffer que indican qué texto está en pantalla en una ventana.</target>
        </trans-unit>
        <trans-unit id="8a53998ea65d2c55189b85c0ba6f6abc07875258" translate="yes" xml:space="preserve">
          <source>Buffer-Local Variables</source>
          <target state="translated">Variables locales de la memoria intermedia</target>
        </trans-unit>
        <trans-unit id="e1f999c3ef7294166b2203dddf8a38a2a12863ad" translate="yes" xml:space="preserve">
          <source>Buffer-specific information that is directly accessible is stored in &lt;em&gt;buffer-local&lt;/em&gt; variable bindings, which are variable values that are effective only in a particular buffer. This feature allows each buffer to override the values of certain variables. Most major modes override variables such as &lt;code&gt;fill-column&lt;/code&gt; or &lt;code&gt;comment-column&lt;/code&gt; in this way. For more information about buffer-local variables and functions related to them, see &lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;Buffer-Local Variables&lt;/a&gt;.</source>
          <target state="translated">La informaci&amp;oacute;n espec&amp;iacute;fica del b&amp;uacute;fer a la que se puede acceder directamente se almacena en enlaces de variables &lt;em&gt;locales del b&amp;uacute;fer&lt;/em&gt; , que son valores de variable que son efectivos solo en un b&amp;uacute;fer en particular. Esta caracter&amp;iacute;stica permite que cada b&amp;uacute;fer anule los valores de ciertas variables. La mayor&amp;iacute;a de los modos principales anulan variables como &lt;code&gt;fill-column&lt;/code&gt; o &lt;code&gt;comment-column&lt;/code&gt; de esta manera. Para obtener m&amp;aacute;s informaci&amp;oacute;n sobre las variables locales del b&amp;uacute;fer y las funciones relacionadas con ellas, consulte &lt;a href=&quot;buffer_002dlocal-variables#Buffer_002dLocal-Variables&quot;&gt;Variables locales del b&amp;uacute;fer&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ea28d2b0e2e067c2d49b361f79f8dd13430b1c1f" translate="yes" xml:space="preserve">
          <source>Buffer-wide commands and bindings for buttons.</source>
          <target state="translated">Comandos de todo el buffer y enlaces para los botones.</target>
        </trans-unit>
        <trans-unit id="4cbcd2f7b704b607643b54842a2d38a1465e1a06" translate="yes" xml:space="preserve">
          <source>Buffers</source>
          <target state="translated">Buffers</target>
        </trans-unit>
        <trans-unit id="c34ea999c856831b2f1f1b93ec2c55bca01f7339" translate="yes" xml:space="preserve">
          <source>Buffers and Windows</source>
          <target state="translated">Búferes y ventanas</target>
        </trans-unit>
        <trans-unit id="89fab4e05ae4baad776ec1df498d67259c031ce8" translate="yes" xml:space="preserve">
          <source>Buffers are displayed in windows.</source>
          <target state="translated">Los buffers se muestran en las ventanas.</target>
        </trans-unit>
        <trans-unit id="813e70bd28e3a98cb6625b026a7542aa93fd1a0a" translate="yes" xml:space="preserve">
          <source>Buffers exist until explicitly killed.</source>
          <target state="translated">Los amortiguadores existen hasta que se matan explícitamente.</target>
        </trans-unit>
        <trans-unit id="5807d4a79a20e298c7a061e07bafbf257b7f1329" translate="yes" xml:space="preserve">
          <source>Buffers have no read syntax. They print in hash notation, showing the buffer name.</source>
          <target state="translated">Los buffers no tienen sintaxis de lectura.Se imprimen en notación hash,mostrando el nombre del buffer.</target>
        </trans-unit>
        <trans-unit id="c849b71243437a37c01b415363a9e00d3f75220f" translate="yes" xml:space="preserve">
          <source>Buffers in Emacs editing are objects that have distinct names and hold text that can be edited. Buffers appear to Lisp programs as a special data type. You can think of the contents of a buffer as a string that you can extend; insertions and deletions may occur in any part of the buffer. See &lt;a href=&quot;text#Text&quot;&gt;Text&lt;/a&gt;.</source>
          <target state="translated">Los b&amp;uacute;feres en la edici&amp;oacute;n de Emacs son objetos que tienen nombres distintos y contienen texto que se puede editar. Los b&amp;uacute;feres aparecen en los programas Lisp como un tipo de datos especial. Puede pensar en el contenido de un b&amp;uacute;fer como una cadena que puede extender; las inserciones y eliminaciones pueden ocurrir en cualquier parte del b&amp;uacute;fer. Ver &lt;a href=&quot;text#Text&quot;&gt;texto&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5d9c37d98ed9d04e80b306fce37d88ced34649fb" translate="yes" xml:space="preserve">
          <source>Buffers that are ephemeral and generally uninteresting to the user have names starting with a space, so that the &lt;code&gt;list-buffers&lt;/code&gt; and &lt;code&gt;buffer-menu&lt;/code&gt; commands don&amp;rsquo;t mention them (but if such a buffer visits a file, it &lt;strong&gt;is&lt;/strong&gt; mentioned). A name starting with space also initially disables recording undo information; see &lt;a href=&quot;undo#Undo&quot;&gt;Undo&lt;/a&gt;.</source>
          <target state="translated">Los tampones que son ef&amp;iacute;meros y en general poco interesante para el usuario tienen nombres que comienzan con un espacio, de manera que los &lt;code&gt;list-buffers&lt;/code&gt; y &lt;code&gt;buffer-menu&lt;/code&gt; comandos no los mencionan (pero si un tamp&amp;oacute;n tales visitas un archivo, &amp;eacute;ste &lt;strong&gt;se&lt;/strong&gt; ha mencionado). Un nombre que comienza con un espacio tambi&amp;eacute;n inhabilita inicialmente la grabaci&amp;oacute;n de informaci&amp;oacute;n de deshacer; ver &lt;a href=&quot;undo#Undo&quot;&gt;Deshacer&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="330d744f9b4b4abc2c70c54c6b6b286c98dced2b" translate="yes" xml:space="preserve">
          <source>Build a new evaluation list from the contents of the buffer (&lt;code&gt;edebug-update-eval-list&lt;/code&gt;).</source>
          <target state="translated">Cree una nueva lista de evaluaci&amp;oacute;n a partir del contenido del b&amp;uacute;fer ( &lt;code&gt;edebug-update-eval-list&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="317d4e3a3a04e5eea5fc26c035b1ef9dd209902c" translate="yes" xml:space="preserve">
          <source>Build new types from other types or data.</source>
          <target state="translated">Construir nuevos tipos a partir de otros tipos o datos.</target>
        </trans-unit>
        <trans-unit id="b1f5f048510e296c0efaf69fd58cab73cd422bd8" translate="yes" xml:space="preserve">
          <source>Building Cons Cells and Lists</source>
          <target state="translated">Construir células y listas de contras</target>
        </trans-unit>
        <trans-unit id="bdc049a5ba45c2fd12b217cecac69626d97e5db0" translate="yes" xml:space="preserve">
          <source>Building Emacs</source>
          <target state="translated">Construyendo Emacs</target>
        </trans-unit>
        <trans-unit id="f53b042cb4d6b635c59397892faa831033884cbc" translate="yes" xml:space="preserve">
          <source>Building Emacs requires GNU Make version 3.81 or later.</source>
          <target state="translated">La construcción de Emacs requiere GNU Make versión 3.81 o posterior.</target>
        </trans-unit>
        <trans-unit id="79b6b1f02a69a8e5241277580817571424a17daa" translate="yes" xml:space="preserve">
          <source>Building and dumping Emacs; internal data structures.</source>
          <target state="translated">Construcción y descarga de Emacs;estructuras internas de datos.</target>
        </trans-unit>
        <trans-unit id="34812aaa741da1103c385a52808aa91b80e9594f" translate="yes" xml:space="preserve">
          <source>Built-in &lt;code&gt;rx&lt;/code&gt; forms, like &lt;code&gt;digit&lt;/code&gt; and &lt;code&gt;group&lt;/code&gt;, cannot be redefined.</source>
          <target state="translated">Los formularios de &lt;code&gt;rx&lt;/code&gt; incorporados , como &lt;code&gt;digit&lt;/code&gt; y &lt;code&gt;group&lt;/code&gt; , no se pueden redefinir.</target>
        </trans-unit>
        <trans-unit id="f1c7bd5dfbc70feff63bb4c975105aed8228177c" translate="yes" xml:space="preserve">
          <source>Builtin Commands</source>
          <target state="translated">Comandos construidos</target>
        </trans-unit>
        <trans-unit id="eb37717154ce80760d9e952968529a057b6b75e2" translate="yes" xml:space="preserve">
          <source>Builtin Constants</source>
          <target state="translated">Constantes construidas</target>
        </trans-unit>
        <trans-unit id="ce64a3485e5540eb2d738ffca93bc4a6a99dac9d" translate="yes" xml:space="preserve">
          <source>Builtin Functions</source>
          <target state="translated">Funciones incorporadas</target>
        </trans-unit>
        <trans-unit id="a9cc087245dc67aa0bcbea3954c8f85e35fb9e6d" translate="yes" xml:space="preserve">
          <source>Builtin Macros</source>
          <target state="translated">Macros de construcción</target>
        </trans-unit>
        <trans-unit id="c87bbec5d329be7d9ab3d4f7f28179b67b985893" translate="yes" xml:space="preserve">
          <source>Builtin Special Forms</source>
          <target state="translated">Formas especiales construidas</target>
        </trans-unit>
        <trans-unit id="ce27ad322fdf4fa3514cbeb626501e0ed27f14ae" translate="yes" xml:space="preserve">
          <source>Builtin User Options</source>
          <target state="translated">Opciones de usuario incorporado</target>
        </trans-unit>
        <trans-unit id="843ed68047eb8a91c66fd38a5ea1a9307d042738" translate="yes" xml:space="preserve">
          <source>Builtin Variables</source>
          <target state="translated">Variables construidas</target>
        </trans-unit>
        <trans-unit id="5067c37a304c3bbf7192b5da6e72fcd4d8ed1b67" translate="yes" xml:space="preserve">
          <source>But if you type a control combination not in</source>
          <target state="translated">Pero si escribes una combinación de control que no está en</target>
        </trans-unit>
        <trans-unit id="5a9ec335ac0058bc8871067e4469ec28043b246e" translate="yes" xml:space="preserve">
          <source>But this will create conflicts for &lt;code&gt;&quot;ELSE&quot;&lt;/code&gt;: on the one hand, the IF rule implies (among many other things) that &lt;code&gt;&quot;ELSE&quot; = &quot;END&quot;&lt;/code&gt;; but on the other hand, since &lt;code&gt;&quot;ELSE&quot;&lt;/code&gt; appears within &lt;code&gt;cases&lt;/code&gt;, which appears left of &lt;code&gt;&quot;END&quot;&lt;/code&gt;, we also have &lt;code&gt;&quot;ELSE&quot; &amp;gt; &quot;END&quot;&lt;/code&gt;. We can solve the conflict either by using:</source>
          <target state="translated">Pero esto crear&amp;aacute; conflictos para &lt;code&gt;&quot;ELSE&quot;&lt;/code&gt; : por un lado, la regla IF implica (entre muchas otras cosas) que &lt;code&gt;&quot;ELSE&quot; = &quot;END&quot;&lt;/code&gt; ; pero por otro lado, dado que &lt;code&gt;&quot;ELSE&quot;&lt;/code&gt; aparece dentro de los &lt;code&gt;cases&lt;/code&gt; , que aparece a la izquierda de &lt;code&gt;&quot;END&quot;&lt;/code&gt; , tambi&amp;eacute;n tenemos &lt;code&gt;&quot;ELSE&quot; &amp;gt; &quot;END&quot;&lt;/code&gt; . Podemos resolver el conflicto usando:</target>
        </trans-unit>
        <trans-unit id="2a081c2786dbf00aa6d8f9b177ec4a1ad92a73fe" translate="yes" xml:space="preserve">
          <source>But this would add multiple elements if the library is reloaded. To avoid the problem, use &lt;code&gt;add-to-list&lt;/code&gt; (see &lt;a href=&quot;list-variables#List-Variables&quot;&gt;List Variables&lt;/a&gt;):</source>
          <target state="translated">Pero esto agregar&amp;iacute;a m&amp;uacute;ltiples elementos si se recarga la biblioteca. Para evitar el problema, use &lt;code&gt;add-to-list&lt;/code&gt; (consulte &lt;a href=&quot;list-variables#List-Variables&quot;&gt;Lista de variables&lt;/a&gt; ):</target>
        </trans-unit>
        <trans-unit id="07ec1dfa598ebfb12e7443602444d7a051d224dd" translate="yes" xml:space="preserve">
          <source>But we recommend &lt;code&gt;copy-sequence&lt;/code&gt; for this purpose (see &lt;a href=&quot;sequence-functions#Sequence-Functions&quot;&gt;Sequence Functions&lt;/a&gt;).</source>
          <target state="translated">Pero recomendamos &lt;code&gt;copy-sequence&lt;/code&gt; para este prop&amp;oacute;sito (ver &lt;a href=&quot;sequence-functions#Sequence-Functions&quot;&gt;Funciones de secuencia&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="c0bd785491e817f0f44e14205af6a59e1a447d90" translate="yes" xml:space="preserve">
          <source>But you should use &lt;code&gt;advice-add&lt;/code&gt; and &lt;code&gt;advice-remove&lt;/code&gt; for that instead. This separate set of functions to manipulate pieces of advice applied to named functions, offers the following extra features compared to &lt;code&gt;add-function&lt;/code&gt;: they know how to deal with macros and autoloaded functions, they let &lt;code&gt;describe-function&lt;/code&gt; preserve the original docstring as well as document the added advice, and they let you add and remove advice before a function is even defined.</source>
          <target state="translated">Pero deber&amp;iacute;a usar &lt;code&gt;advice-add&lt;/code&gt; y &lt;code&gt;advice-remove&lt;/code&gt; para eso. Este conjunto separado de funciones para manipular consejos aplicados a funciones nombradas, ofrece las siguientes caracter&amp;iacute;sticas adicionales en comparaci&amp;oacute;n con &lt;code&gt;add-function&lt;/code&gt; : saben c&amp;oacute;mo manejar macros y funciones autocargadas, permiten &lt;code&gt;describe-function&lt;/code&gt; preservar la cadena de documentos original as&amp;iacute; como documentar los consejos a&amp;ntilde;adidos, y le permiten a&amp;ntilde;adir y eliminar consejos incluso antes de que se defina una funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="7d8a0e63cd1a06ea0e2679c87030f5570105b2a4" translate="yes" xml:space="preserve">
          <source>Button Buffer Commands</source>
          <target state="translated">Comandos de amortiguamiento de botón</target>
        </trans-unit>
        <trans-unit id="d055960c135678f62a49f9b6f7a5d94add754440" translate="yes" xml:space="preserve">
          <source>Button Properties</source>
          <target state="translated">Propiedades de los botones</target>
        </trans-unit>
        <trans-unit id="41fa24540db10de11f239ddb922c6363c465adf0" translate="yes" xml:space="preserve">
          <source>Button Types</source>
          <target state="translated">Tipos de botones</target>
        </trans-unit>
        <trans-unit id="1e308eff60f72b546296987374ea4612fa02db86" translate="yes" xml:space="preserve">
          <source>Button properties with special meanings.</source>
          <target state="translated">Propiedades de los botones con significados especiales.</target>
        </trans-unit>
        <trans-unit id="e8bf727af91015f6f823f13b436c2880666b454a" translate="yes" xml:space="preserve">
          <source>Button-Down Events</source>
          <target state="translated">Eventos de Botón-Abajo</target>
        </trans-unit>
        <trans-unit id="503d46db37b0db45db898aabed77244252918ca2" translate="yes" xml:space="preserve">
          <source>Buttons</source>
          <target state="translated">Buttons</target>
        </trans-unit>
        <trans-unit id="4c379f628ac77bed975fa656ab1146980f7bff07" translate="yes" xml:space="preserve">
          <source>Buttons are associated with a region of text, using an overlay or text properties to hold button-specific information, all of which are initialized from the button&amp;rsquo;s type (which defaults to the built-in button type &lt;code&gt;button&lt;/code&gt;). Like all Emacs text, the appearance of the button is governed by the &lt;code&gt;face&lt;/code&gt; property; by default (via the &lt;code&gt;face&lt;/code&gt; property inherited from the &lt;code&gt;button&lt;/code&gt; button-type) this is a simple underline, like a typical web-page link.</source>
          <target state="translated">Los botones est&amp;aacute;n asociados con una regi&amp;oacute;n de texto, utilizando una superposici&amp;oacute;n o propiedades de texto para contener informaci&amp;oacute;n espec&amp;iacute;fica del bot&amp;oacute;n, todos los cuales se inicializan desde el tipo de bot&amp;oacute;n (que por defecto es el bot&amp;oacute;n de tipo de &lt;code&gt;button&lt;/code&gt; incorporado ). Como todo el texto de Emacs, la apariencia del bot&amp;oacute;n est&amp;aacute; gobernada por la propiedad &lt;code&gt;face&lt;/code&gt; ; de forma predeterminada (a trav&amp;eacute;s de la propiedad de la &lt;code&gt;face&lt;/code&gt; heredada del &lt;code&gt;button&lt;/code&gt; tipo bot&amp;oacute;n), este es un subrayado simple, como un enlace t&amp;iacute;pico de una p&amp;aacute;gina web.</target>
        </trans-unit>
        <trans-unit id="91c7c66c2c1453401e19d50861895a10fdbd7d8e" translate="yes" xml:space="preserve">
          <source>By &lt;em&gt;separator&lt;/em&gt;, we mean here a token whose sole purpose is to separate various elements within some enclosing syntactic construct, and which does not have any semantic significance in itself (i.e., it would typically not exist as a node in an abstract syntax tree).</source>
          <target state="translated">Por &lt;em&gt;separador&lt;/em&gt; , nos referimos aqu&amp;iacute; a un token cuyo &amp;uacute;nico prop&amp;oacute;sito es separar varios elementos dentro de alguna construcci&amp;oacute;n sint&amp;aacute;ctica adjunta, y que no tiene ning&amp;uacute;n significado sem&amp;aacute;ntico en s&amp;iacute; mismo (es decir, normalmente no existir&amp;iacute;a como un nodo en un &amp;aacute;rbol de sintaxis abstracto).</target>
        </trans-unit>
        <trans-unit id="1286985575cca5c62cde4a1b9229a630c85b3182" translate="yes" xml:space="preserve">
          <source>By contrast, a Lisp program can do insertion with inheritance or without, depending on the choice of insertion primitive. The ordinary text insertion functions, such as &lt;code&gt;insert&lt;/code&gt;, do not inherit any properties. They insert text with precisely the properties of the string being inserted, and no others. This is correct for programs that copy text from one context to another&amp;mdash;for example, into or out of the kill ring. To insert with inheritance, use the special primitives described in this section. Self-inserting characters inherit properties because they work using these primitives.</source>
          <target state="translated">Por el contrario, un programa Lisp puede hacer inserci&amp;oacute;n con herencia o sin ella, dependiendo de la elecci&amp;oacute;n de la primitiva de inserci&amp;oacute;n. Las funciones de inserci&amp;oacute;n de texto ordinarias, como &lt;code&gt;insert&lt;/code&gt; ar , no heredan ninguna propiedad. Inserta texto con exactamente las propiedades de la cadena que se inserta, y no otras. Esto es correcto para programas que copian texto de un contexto a otro, por ejemplo, dentro o fuera del kill ring. Para insertar con herencia, use las primitivas especiales descritas en esta secci&amp;oacute;n. Los caracteres autoinsertables heredan propiedades porque funcionan con estas primitivas.</target>
        </trans-unit>
        <trans-unit id="78d9ed9ffae62086921d390616b3fa2296925abd" translate="yes" xml:space="preserve">
          <source>By contrast, for an array of keyboard input characters (such as a key sequence), a vector may be necessary, because many keyboard input characters are outside the range that will fit in a string. See &lt;a href=&quot;key-sequence-input#Key-Sequence-Input&quot;&gt;Key Sequence Input&lt;/a&gt;.</source>
          <target state="translated">Por el contrario, para una matriz de caracteres de entrada de teclado (como una secuencia de teclas), puede ser necesario un vector, porque muchos caracteres de entrada de teclado est&amp;aacute;n fuera del rango que cabe en una cadena. Consulte &lt;a href=&quot;key-sequence-input#Key-Sequence-Input&quot;&gt;Entrada de secuencia de teclas&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="12144324278ff8b90e0a364f623b2e54380c481c" translate="yes" xml:space="preserve">
          <source>By contrast, in programs that manipulate function definitions for other purposes, it is better to use &lt;code&gt;fset&lt;/code&gt;, which does not keep such records. See &lt;a href=&quot;function-cells#Function-Cells&quot;&gt;Function Cells&lt;/a&gt;.</source>
          <target state="translated">Por el contrario, en los programas que manipulan las definiciones de funciones para otros fines, es mejor utilizar &lt;code&gt;fset&lt;/code&gt; , que no mantiene esos registros. Ver &lt;a href=&quot;function-cells#Function-Cells&quot;&gt;celdas de funci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e28b30f108e8c96578a3e1fc9b8f49f98c5c829d" translate="yes" xml:space="preserve">
          <source>By contrast, object-oriented programs use &lt;em&gt;polymorphic functions&lt;/em&gt;: a set of specialized functions having the same name, each one of which was written for a certain specific set of argument types. Which of the functions is actually called is decided at run time based on the types of the actual arguments.</source>
          <target state="translated">Por el contrario, los programas orientados a objetos utilizan &lt;em&gt;funciones polim&amp;oacute;rficas&lt;/em&gt; : un conjunto de funciones especializadas que tienen el mismo nombre, cada una de las cuales se escribi&amp;oacute; para un determinado conjunto espec&amp;iacute;fico de tipos de argumentos. La funci&amp;oacute;n que se llama realmente se decide en tiempo de ejecuci&amp;oacute;n en funci&amp;oacute;n de los tipos de argumentos reales.</target>
        </trans-unit>
        <trans-unit id="955d83a02806ccf2dfd155108f9d134b64fbc8d8" translate="yes" xml:space="preserve">
          <source>By contrast, the following example calls a function without any symbol function indirection, because the first element is an anonymous Lisp function, not a symbol.</source>
          <target state="translated">Por el contrario,el siguiente ejemplo llama a una función sin ningún símbolo función indirecta,porque el primer elemento es una función Lisp anónima,no un símbolo.</target>
        </trans-unit>
        <trans-unit id="90d9b7ac9f08bada9648d4c6e90292b9adc5f05d" translate="yes" xml:space="preserve">
          <source>By contrast, using only error symbols without condition names would seriously decrease the power of &lt;code&gt;condition-case&lt;/code&gt;. Condition names make it possible to categorize errors at various levels of generality when you write an error handler. Using error symbols alone would eliminate all but the narrowest level of classification.</source>
          <target state="translated">Por el contrario, usar solo s&amp;iacute;mbolos de error sin nombres de condici&amp;oacute;n disminuir&amp;iacute;a seriamente el poder del &lt;code&gt;condition-case&lt;/code&gt; . Los nombres de las condiciones permiten clasificar los errores en varios niveles de generalidad cuando se escribe un controlador de errores. El uso exclusivo de s&amp;iacute;mbolos de error eliminar&amp;iacute;a todo menos el nivel m&amp;aacute;s estrecho de clasificaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="c262827c2a008bc82000c720bb603706e79b1b54" translate="yes" xml:space="preserve">
          <source>By convention, any argument whose name contains the name of a type (e.g., &lt;var&gt;integer&lt;/var&gt;, &lt;var&gt;integer1&lt;/var&gt; or &lt;var&gt;buffer&lt;/var&gt;) is expected to be of that type. A plural of a type (such as &lt;var&gt;buffers&lt;/var&gt;) often means a list of objects of that type. An argument named &lt;var&gt;object&lt;/var&gt; may be of any type. (For a list of Emacs object types, see &lt;a href=&quot;lisp-data-types#Lisp-Data-Types&quot;&gt;Lisp Data Types&lt;/a&gt;.) An argument with any other sort of name (e.g., &lt;var&gt;new-file&lt;/var&gt;) is specific to the function; if the function has a documentation string, the type of the argument should be described there (see &lt;a href=&quot;documentation#Documentation&quot;&gt;Documentation&lt;/a&gt;).</source>
          <target state="translated">Por convenci&amp;oacute;n, se espera que cualquier argumento cuyo nombre contenga el nombre de un tipo (por ejemplo, &lt;var&gt;integer&lt;/var&gt; , &lt;var&gt;integer1&lt;/var&gt; o &lt;var&gt;buffer&lt;/var&gt; ) sea de ese tipo. Un plural de un tipo (como &lt;var&gt;buffers&lt;/var&gt; ) a menudo significa una lista de objetos de ese tipo. Un argumento llamado &lt;var&gt;object&lt;/var&gt; puede ser de cualquier tipo. (Para obtener una lista de los tipos de objetos de Emacs, consulte &lt;a href=&quot;lisp-data-types#Lisp-Data-Types&quot;&gt;Tipos de datos Lisp&lt;/a&gt; .) Un argumento con cualquier otro tipo de nombre (por ejemplo, &lt;var&gt;new-file&lt;/var&gt; ) es espec&amp;iacute;fico de la funci&amp;oacute;n; si la funci&amp;oacute;n tiene una cadena de documentaci&amp;oacute;n, el tipo de argumento debe describirse all&amp;iacute; (ver &lt;a href=&quot;documentation#Documentation&quot;&gt;Documentaci&amp;oacute;n&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="29edadc76625945d3e9732385f723229ac2c6358" translate="yes" xml:space="preserve">
          <source>By convention, if a function&amp;rsquo;s symbol consists of two names separated by &amp;lsquo;</source>
          <target state="translated">Por convenci&amp;oacute;n, si el s&amp;iacute;mbolo de una funci&amp;oacute;n consta de dos nombres separados por '</target>
        </trans-unit>
        <trans-unit id="81288ed35b7f8aec4f961beebc97c447985deae4" translate="yes" xml:space="preserve">
          <source>By convention, the entries &lt;code&gt;window-height&lt;/code&gt;, &lt;code&gt;window-width&lt;/code&gt; and &lt;code&gt;preserve-size&lt;/code&gt; are applied after the chosen window&amp;rsquo;s buffer has been set up and if and only if that window never showed another buffer before. More precisely, the latter means that the window must have been either created by the current &lt;code&gt;display-buffer&lt;/code&gt; call or the window was created earlier by &lt;code&gt;display-buffer&lt;/code&gt; to show the buffer and never was used to show another buffer until it was reused by the current invocation of &lt;code&gt;display-buffer&lt;/code&gt;.</source>
          <target state="translated">Por convenci&amp;oacute;n, las entradas &lt;code&gt;window-height&lt;/code&gt; , &lt;code&gt;window-width&lt;/code&gt; y &lt;code&gt;preserve-size&lt;/code&gt; se aplican despu&amp;eacute;s de que se haya configurado el b&amp;uacute;fer de la ventana elegida y solo si esa ventana nunca mostr&amp;oacute; otro b&amp;uacute;fer antes. M&amp;aacute;s precisamente, esto &amp;uacute;ltimo significa que la ventana debe haber sido creada por la llamada actual de &lt;code&gt;display-buffer&lt;/code&gt; o la ventana fue creada anteriormente por &lt;code&gt;display-buffer&lt;/code&gt; para mostrar el b&amp;uacute;fer y nunca se us&amp;oacute; para mostrar otro b&amp;uacute;fer hasta que fue reutilizada por el actual invocaci&amp;oacute;n de &lt;code&gt;display-buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="961315a74279b10aa81793f8f190e6ad9e46b005" translate="yes" xml:space="preserve">
          <source>By convention, the height of the chosen window is adjusted only if the window is part of a vertical combination (see &lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;Windows and Frames&lt;/a&gt;) to avoid changing the height of other, unrelated windows. Also, this entry should be processed only under certain conditions which are specified right below this list.</source>
          <target state="translated">Por convenci&amp;oacute;n, la altura de la ventana elegida se ajusta solo si la ventana es parte de una combinaci&amp;oacute;n vertical (ver &lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;Ventanas y marcos&lt;/a&gt; ) para evitar cambiar la altura de otras ventanas no relacionadas. Adem&amp;aacute;s, esta entrada debe procesarse solo bajo ciertas condiciones que se especifican justo debajo de esta lista.</target>
        </trans-unit>
        <trans-unit id="46e87bdc0265fdf29ddfc65a07831e51565c646d" translate="yes" xml:space="preserve">
          <source>By convention, the pixels of the display at the values returned for &lt;var&gt;left&lt;/var&gt; and &lt;var&gt;top&lt;/var&gt; are considered to be inside (part of) &lt;var&gt;frame&lt;/var&gt;. Hence, if &lt;var&gt;left&lt;/var&gt; and &lt;var&gt;top&lt;/var&gt; are both zero, the pixel at the display&amp;rsquo;s origin is part of &lt;var&gt;frame&lt;/var&gt;. The pixels at &lt;var&gt;bottom&lt;/var&gt; and &lt;var&gt;right&lt;/var&gt;, on the other hand, are considered to lie immediately outside &lt;var&gt;frame&lt;/var&gt;. This means that if you have, for example, two side-by-side frames positioned such that the right outer edge of the frame on the left equals the left outer edge of the frame on the right, the pixels at that edge show a part of the frame on the right.</source>
          <target state="translated">Por convenci&amp;oacute;n, los p&amp;iacute;xeles de la pantalla en los valores devueltos para la &lt;var&gt;left&lt;/var&gt; y la &lt;var&gt;top&lt;/var&gt; se consideran dentro (parte) del &lt;var&gt;frame&lt;/var&gt; . Por lo tanto, si la &lt;var&gt;left&lt;/var&gt; y la &lt;var&gt;top&lt;/var&gt; son cero, el p&amp;iacute;xel en el origen de la pantalla es parte del &lt;var&gt;frame&lt;/var&gt; . Por otro lado, se considera que los p&amp;iacute;xeles en la &lt;var&gt;bottom&lt;/var&gt; y &lt;var&gt;right&lt;/var&gt; se encuentran inmediatamente fuera del &lt;var&gt;frame&lt;/var&gt; . Esto significa que si tiene, por ejemplo, dos fotogramas uno al lado del otro colocados de manera que el borde exterior derecho del fotograma a la izquierda sea igual al borde exterior izquierdo del fotograma a la derecha, los p&amp;iacute;xeles en ese borde muestran una parte del marco de la derecha.</target>
        </trans-unit>
        <trans-unit id="6a4bd0ccbb65351d0542d9701b9e76e9ff39eb97" translate="yes" xml:space="preserve">
          <source>By convention, the width of the chosen window is adjusted only if the window is part of a horizontal combination (see &lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;Windows and Frames&lt;/a&gt;) to avoid changing the width of other, unrelated windows. Also, this entry should be processed under only certain conditions which are specified right below this list.</source>
          <target state="translated">Por convenci&amp;oacute;n, el ancho de la ventana elegida se ajusta solo si la ventana es parte de una combinaci&amp;oacute;n horizontal (ver &lt;a href=&quot;windows-and-frames#Windows-and-Frames&quot;&gt;Ventanas y marcos&lt;/a&gt; ) para evitar cambiar el ancho de otras ventanas no relacionadas. Adem&amp;aacute;s, esta entrada debe procesarse solo bajo ciertas condiciones que se especifican justo debajo de esta lista.</target>
        </trans-unit>
        <trans-unit id="f1f59fea98d20db1b1e18d570c20cefba2dd601a" translate="yes" xml:space="preserve">
          <source>By convention, vertical offsets increase &amp;ldquo;downwards&amp;rdquo;. This means that the height of a frame is obtained by subtracting the offset of its top edge from that of its bottom edge. Horizontal offsets increase &amp;ldquo;rightwards&amp;rdquo;, as expected, so a frame&amp;rsquo;s width is calculated by subtracting the offset of its left edge from that of its right edge.</source>
          <target state="translated">Por convenci&amp;oacute;n, las compensaciones verticales aumentan &quot;hacia abajo&quot;. Esto significa que la altura de un marco se obtiene restando el desplazamiento de su borde superior del de su borde inferior. Los desplazamientos horizontales aumentan &quot;hacia la derecha&quot;, como se esperaba, por lo que el ancho de un marco se calcula restando el desplazamiento de su borde izquierdo del de su borde derecho.</target>
        </trans-unit>
        <trans-unit id="5bc4ab559bcd3485770406aa3206099c2c318a03" translate="yes" xml:space="preserve">
          <source>By convention, when defining variables of a &amp;ldquo;native&amp;rdquo; type (&lt;code&gt;int&lt;/code&gt; and &lt;code&gt;bool&lt;/code&gt;), the name of the C variable is the name of the Lisp variable with &lt;code&gt;-&lt;/code&gt; replaced by &lt;code&gt;_&lt;/code&gt;. When the variable has type &lt;code&gt;Lisp_Object&lt;/code&gt;, the convention is to also prefix the C variable name with &lt;code&gt;V&lt;/code&gt;. i.e.</source>
          <target state="translated">Por convenci&amp;oacute;n, al definir variables de tipo &amp;ldquo;nativo&amp;rdquo; ( &lt;code&gt;int&lt;/code&gt; y &lt;code&gt;bool&lt;/code&gt; ), el nombre de la variable C es el nombre de la variable Lisp con &lt;code&gt;-&lt;/code&gt; reemplazado por &lt;code&gt;_&lt;/code&gt; . Cuando la variable tiene tipo &lt;code&gt;Lisp_Object&lt;/code&gt; , la convenci&amp;oacute;n es para prefijar tambi&amp;eacute;n el nombre de la variable C con &lt;code&gt;V&lt;/code&gt; . es decir</target>
        </trans-unit>
        <trans-unit id="0b42bb254be6d5ac55cc35f34239ee11afcaf79a" translate="yes" xml:space="preserve">
          <source>By convention, you should put the &lt;code&gt;interactive&lt;/code&gt; form in the function body, as the first top-level form. If there is an &lt;code&gt;interactive&lt;/code&gt; form in both the &lt;code&gt;interactive-form&lt;/code&gt; symbol property and the function body, the former takes precedence. The &lt;code&gt;interactive-form&lt;/code&gt; symbol property can be used to add an interactive form to an existing function, or change how its arguments are processed interactively, without redefining the function.</source>
          <target state="translated">Por convenci&amp;oacute;n, debe colocar el formulario &lt;code&gt;interactive&lt;/code&gt; en el cuerpo de la funci&amp;oacute;n, como el primer formulario de nivel superior. Si hay una forma &lt;code&gt;interactive&lt;/code&gt; tanto en la propiedad del s&amp;iacute;mbolo de &lt;code&gt;interactive-form&lt;/code&gt; como en el cuerpo de la funci&amp;oacute;n, la primera tiene prioridad. La propiedad de s&amp;iacute;mbolo de &lt;code&gt;interactive-form&lt;/code&gt; se puede utilizar para agregar una forma interactiva a una funci&amp;oacute;n existente o cambiar la forma en que se procesan sus argumentos de forma interactiva, sin redefinir la funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="bd6cd1964a58199f17af10ed0710e7304dbef795" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; and &lt;code&gt;switch-to-next-buffer&lt;/code&gt; can switch to a buffer that is already shown in another window. The following option can be used to override this behavior.</source>
          <target state="translated">De manera predeterminada, &lt;code&gt;switch-to-prev-buffer&lt;/code&gt; y &lt;code&gt;switch-to-next-buffer&lt;/code&gt; pueden cambiar a un b&amp;uacute;fer que ya se muestra en otra ventana. La siguiente opci&amp;oacute;n se puede utilizar para anular este comportamiento.</target>
        </trans-unit>
        <trans-unit id="c2e5b9fa592a3409a2011f26d6c0a6701c7e5da1" translate="yes" xml:space="preserve">
          <source>By default both IPv4 and IPv6 lookups are attempted. The optional argument &lt;var&gt;family&lt;/var&gt; controls this behavior, specifying the symbol &lt;code&gt;ipv4&lt;/code&gt; or &lt;code&gt;ipv6&lt;/code&gt; restricts lookups to IPv4 and IPv6 respectively.</source>
          <target state="translated">De forma predeterminada, se intentan las b&amp;uacute;squedas de IPv4 e IPv6. La &lt;var&gt;family&lt;/var&gt; argumentos opcional controla este comportamiento, especificando el s&amp;iacute;mbolo &lt;code&gt;ipv4&lt;/code&gt; o &lt;code&gt;ipv6&lt;/code&gt; restringe las b&amp;uacute;squedas a IPv4 e IPv6 respectivamente.</target>
        </trans-unit>
        <trans-unit id="af6f338f5f9982890241460392dfd56c79820ad8" translate="yes" xml:space="preserve">
          <source>By default the dumped</source>
          <target state="translated">Por defecto,el volcado</target>
        </trans-unit>
        <trans-unit id="ec8b6ebd7649499745ebeafd06ed0b949a38dabd" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;eval-region&lt;/code&gt; does not produce any output. However, if &lt;var&gt;stream&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, any output produced by output functions (see &lt;a href=&quot;output-functions#Output-Functions&quot;&gt;Output Functions&lt;/a&gt;), as well as the values that result from evaluating the expressions in the region are printed using &lt;var&gt;stream&lt;/var&gt;. See &lt;a href=&quot;output-streams#Output-Streams&quot;&gt;Output Streams&lt;/a&gt;.</source>
          <target state="translated">De forma predeterminada, &lt;code&gt;eval-region&lt;/code&gt; no produce ning&amp;uacute;n resultado. Sin embargo, si la &lt;var&gt;stream&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; , cualquier salida producida por las funciones de salida (consulte &lt;a href=&quot;output-functions#Output-Functions&quot;&gt;Funciones de salida&lt;/a&gt; ), as&amp;iacute; como los valores que resultan de evaluar las expresiones en la regi&amp;oacute;n se imprimen utilizando la &lt;var&gt;stream&lt;/var&gt; . Consulte &lt;a href=&quot;output-streams#Output-Streams&quot;&gt;Flujos de salida&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a53473f0b03225bb59517eff6e8b663daa1b7774" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;switch-to-buffer&lt;/code&gt; tries to preserve &lt;code&gt;window-point&lt;/code&gt;. This behavior can be tuned using the following option.</source>
          <target state="translated">Por defecto, &lt;code&gt;switch-to-buffer&lt;/code&gt; intenta preservar &lt;code&gt;window-point&lt;/code&gt; . Este comportamiento se puede ajustar con la siguiente opci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="ee1412f6a4896bbf8989a04623bf820b553fdea4" translate="yes" xml:space="preserve">
          <source>By default, &lt;var&gt;keywords&lt;/var&gt; are added at the beginning of &lt;code&gt;font-lock-keywords&lt;/code&gt;. If the optional argument &lt;var&gt;how&lt;/var&gt; is &lt;code&gt;set&lt;/code&gt;, they are used to replace the value of &lt;code&gt;font-lock-keywords&lt;/code&gt;. If &lt;var&gt;how&lt;/var&gt; is any other non-&lt;code&gt;nil&lt;/code&gt; value, they are added at the end of &lt;code&gt;font-lock-keywords&lt;/code&gt;.</source>
          <target state="translated">De forma predeterminada, las &lt;var&gt;keywords&lt;/var&gt; se agregan al principio de &lt;code&gt;font-lock-keywords&lt;/code&gt; . Si el argumento opcional &lt;var&gt;how&lt;/var&gt; se &lt;code&gt;set&lt;/code&gt; , que se utilizan para reemplazar el valor de &lt;code&gt;font-lock-keywords&lt;/code&gt; . Si &lt;var&gt;how&lt;/var&gt; es cualquier otro valor que no sea &lt;code&gt;nil&lt;/code&gt; , se agregan al final de &lt;code&gt;font-lock-keywords&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="10521942e8c52f15b21a03de5615c1566c427141" translate="yes" xml:space="preserve">
          <source>By default, Emacs determines the base direction of each paragraph by looking at the text at its beginning. The precise method of determining the base direction is specified by the</source>
          <target state="translated">Por defecto,Emacs determina la dirección base de cada párrafo mirando el texto al principio.El método preciso para determinar la dirección base se especifica en el</target>
        </trans-unit>
        <trans-unit id="d9bc871638c9fc2d81d98a2b4d5d096f7d797fd7" translate="yes" xml:space="preserve">
          <source>By default, Emacs makes a single backup file for each file edited. You can alternatively request numbered backups; then each new backup file gets a new name. You can delete old numbered backups when you don&amp;rsquo;t want them any more, or Emacs can delete them automatically.</source>
          <target state="translated">Por defecto, Emacs crea un solo archivo de respaldo para cada archivo editado. Alternativamente, puede solicitar copias de seguridad numeradas; luego, cada nuevo archivo de respaldo recibe un nuevo nombre. Puede eliminar copias de seguridad antiguas numeradas cuando ya no las desee, o Emacs puede eliminarlas autom&amp;aacute;ticamente.</target>
        </trans-unit>
        <trans-unit id="eb5fb3e174ce7ebaa56506756450880c9f6707f5" translate="yes" xml:space="preserve">
          <source>By default, Emacs starts in multibyte mode: it stores the contents of buffers and strings using an internal encoding that represents non-</source>
          <target state="translated">Por defecto,Emacs se inicia en modo multibyte:almacena el contenido de los buffers y cadenas usando una codificación interna que representa no</target>
        </trans-unit>
        <trans-unit id="2439b1b4fb24aa8804e6e4ef3da82558ce16fc14" translate="yes" xml:space="preserve">
          <source>By default, Emacs tries to keep the number of lines and columns of a frame&amp;rsquo;s text area unaltered when, for example, toggling its menu or tool bar, changing its default font or setting the width of any of its scroll bars. This means that in such case Emacs must ask the window manager to resize the frame&amp;rsquo;s window in order to accommodate the size change.</source>
          <target state="translated">Por defecto, Emacs intenta mantener inalterada la cantidad de l&amp;iacute;neas y columnas del &amp;aacute;rea de texto de un marco cuando, por ejemplo, cambia su men&amp;uacute; o barra de herramientas, cambia su fuente predeterminada o establece el ancho de cualquiera de sus barras de desplazamiento. Esto significa que, en tal caso, Emacs debe pedirle al administrador de ventanas que cambie el tama&amp;ntilde;o de la ventana del marco para adaptarse al cambio de tama&amp;ntilde;o.</target>
        </trans-unit>
        <trans-unit id="c3302471f75eaf89ac88db46d17c6df0b07bc2a8" translate="yes" xml:space="preserve">
          <source>By default, a text property is rear-sticky but not front-sticky; thus, the default is to inherit all the properties of the preceding character, and nothing from the following character.</source>
          <target state="translated">Por defecto,una propiedad de texto es pegajosa en la parte trasera pero no en la delantera;por lo tanto,el defecto es heredar todas las propiedades del carácter precedente,y nada del carácter siguiente.</target>
        </trans-unit>
        <trans-unit id="b6bdb814df1ff8f4484bd14e8665079dde59b196" translate="yes" xml:space="preserve">
          <source>By default, all subdirectories are descended into. If &lt;var&gt;predicate&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt;, errors when trying to descend into a subdirectory (for instance, if it&amp;rsquo;s not readable by this user) are ignored. If it&amp;rsquo;s neither &lt;code&gt;nil&lt;/code&gt; nor &lt;code&gt;t&lt;/code&gt;, it should be a function that takes one parameter (the subdirectory name) and should return non-&lt;code&gt;nil&lt;/code&gt; if the directory is to be descended into.</source>
          <target state="translated">De forma predeterminada, todos los subdirectorios descienden a. Si el &lt;var&gt;predicate&lt;/var&gt; es &lt;code&gt;t&lt;/code&gt; , se ignoran los errores al intentar descender a un subdirectorio (por ejemplo, si este usuario no lo puede leer). Si no es &lt;code&gt;nil&lt;/code&gt; ni &lt;code&gt;t&lt;/code&gt; , deber&amp;iacute;a ser una funci&amp;oacute;n que tome un par&amp;aacute;metro (el nombre del subdirectorio) y deber&amp;iacute;a devolver un valor no &lt;code&gt;nil&lt;/code&gt; si el directorio va a descender.</target>
        </trans-unit>
        <trans-unit id="34620b2db91cbe790eb8b807c0d8c806964cdff3" translate="yes" xml:space="preserve">
          <source>By default, format specifications correspond to successive values from &lt;var&gt;objects&lt;/var&gt;. Thus, the first format specification in &lt;var&gt;string&lt;/var&gt; uses the first such value, the second format specification uses the second such value, and so on. Any extra format specifications (those for which there are no corresponding values) cause an error. Any extra values to be formatted are ignored.</source>
          <target state="translated">De forma predeterminada, las especificaciones de formato corresponden a valores sucesivos de &lt;var&gt;objects&lt;/var&gt; . Por lo tanto, la primera especificaci&amp;oacute;n de formato en &lt;var&gt;string&lt;/var&gt; usa el primer valor, la segunda especificaci&amp;oacute;n de formato usa el segundo valor, y as&amp;iacute; sucesivamente. Cualquier especificaci&amp;oacute;n de formato adicional (aquellas para las que no hay valores correspondientes) provocar&amp;aacute; un error. Se ignoran los valores adicionales a formatear.</target>
        </trans-unit>
        <trans-unit id="cfab6cab0b08bc4c2da07991fa913322ec8175a9" translate="yes" xml:space="preserve">
          <source>By default, frame parameters are saved and restored by the desktop library functions (see &lt;a href=&quot;desktop-save-mode#Desktop-Save-Mode&quot;&gt;Desktop Save Mode&lt;/a&gt;) when the variable &lt;code&gt;desktop-restore-frames&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;. It&amp;rsquo;s the responsibility of applications that their parameters are included in &lt;code&gt;frameset-persistent-filter-alist&lt;/code&gt; to avoid that they get meaningless or even harmful values in restored sessions.</source>
          <target state="translated">De forma predeterminada, las funciones de la biblioteca del escritorio guardan y restauran los par&amp;aacute;metros del marco (consulte &lt;a href=&quot;desktop-save-mode#Desktop-Save-Mode&quot;&gt;Modo de&lt;/a&gt; guardado del escritorio ) cuando la variable &lt;code&gt;desktop-restore-frames&lt;/code&gt; no es &lt;code&gt;nil&lt;/code&gt; . Es responsabilidad de las aplicaciones que sus par&amp;aacute;metros est&amp;eacute;n incluidos en &lt;code&gt;frameset-persistent-filter-alist&lt;/code&gt; para evitar que obtengan valores sin sentido o incluso da&amp;ntilde;inos en las sesiones restauradas.</target>
        </trans-unit>
        <trans-unit id="4ff08fda735af5f6543bdd7e51226e1a37b99336" translate="yes" xml:space="preserve">
          <source>By default, if the latest auto-save file is more recent than the visited file, and the argument &lt;var&gt;ignore-auto&lt;/var&gt; is &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;revert-buffer&lt;/code&gt; asks the user whether to use that auto-save instead. When you invoke this command interactively, &lt;var&gt;ignore-auto&lt;/var&gt; is &lt;code&gt;t&lt;/code&gt; if there is no numeric prefix argument; thus, the interactive default is not to check the auto-save file.</source>
          <target state="translated">De forma predeterminada, si el &amp;uacute;ltimo archivo de guardado autom&amp;aacute;tico es m&amp;aacute;s reciente que el archivo visitado y el argumento &lt;var&gt;ignore-auto&lt;/var&gt; es &lt;code&gt;nil&lt;/code&gt; , &lt;code&gt;revert-buffer&lt;/code&gt; pregunta al usuario si debe usar ese guardado autom&amp;aacute;tico en su lugar. Cuando invoca este comando de forma interactiva, &lt;var&gt;ignore-auto&lt;/var&gt; es &lt;code&gt;t&lt;/code&gt; si no hay un argumento de prefijo num&amp;eacute;rico; por lo tanto, el valor predeterminado interactivo es no verificar el archivo de guardado autom&amp;aacute;tico.</target>
        </trans-unit>
        <trans-unit id="2816188a5a0e8a3ed928cd480d7464b05373951a" translate="yes" xml:space="preserve">
          <source>By default, it also defines a variable named &lt;var&gt;mode&lt;/var&gt;, which is set to &lt;code&gt;t&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt; by enabling or disabling the mode. The variable is initialized to &lt;var&gt;init-value&lt;/var&gt;. Except in unusual circumstances (see below), this value must be &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">Por defecto, tambi&amp;eacute;n define una variable llamada &lt;var&gt;mode&lt;/var&gt; , que se fija a &lt;code&gt;t&lt;/code&gt; o &lt;code&gt;nil&lt;/code&gt; , activando o desactivando el modo. La variable se inicializa a &lt;var&gt;init-value&lt;/var&gt; . Excepto en circunstancias inusuales (ver m&amp;aacute;s abajo), este valor debe ser &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1adc609228685b29696e0ff7e75061c83ffb5bde" translate="yes" xml:space="preserve">
          <source>By default, output is put in a buffer.</source>
          <target state="translated">Por defecto,la salida se pone en un buffer.</target>
        </trans-unit>
        <trans-unit id="410cbb685716930dfd39abc9cbf65a643f166d48" translate="yes" xml:space="preserve">
          <source>By default, process output is inserted in the associated buffer. (You can change this by defining a custom filter function, see &lt;a href=&quot;filter-functions#Filter-Functions&quot;&gt;Filter Functions&lt;/a&gt;.) The position to insert the output is determined by the &lt;code&gt;process-mark&lt;/code&gt;, which is then updated to point to the end of the text just inserted. Usually, but not always, the &lt;code&gt;process-mark&lt;/code&gt; is at the end of the buffer.</source>
          <target state="translated">De forma predeterminada, la salida del proceso se inserta en el b&amp;uacute;fer asociado. (Puede cambiar esto definiendo una funci&amp;oacute;n de filtro personalizada, consulte &lt;a href=&quot;filter-functions#Filter-Functions&quot;&gt;Funciones de filtro&lt;/a&gt; ). La posici&amp;oacute;n para insertar la salida est&amp;aacute; determinada por la &lt;code&gt;process-mark&lt;/code&gt; , que luego se actualiza para se&amp;ntilde;alar el final del texto reci&amp;eacute;n insertado. Por lo general, pero no siempre, la &lt;code&gt;process-mark&lt;/code&gt; encuentra al final del b&amp;uacute;fer.</target>
        </trans-unit>
        <trans-unit id="f08b23f065e4db8b7e347aa8e9d5f1dfa79f259d" translate="yes" xml:space="preserve">
          <source>By default, searches in Emacs ignore the case of the text they are searching through; if you specify searching for &amp;lsquo;</source>
          <target state="translated">Por defecto, las b&amp;uacute;squedas en Emacs ignoran el caso del texto en el que est&amp;aacute;n buscando; si especificas buscar '</target>
        </trans-unit>
        <trans-unit id="1fd764f8ebd1a38813dea49832550f50112ed16b" translate="yes" xml:space="preserve">
          <source>By default, side windows cannot be split via &lt;code&gt;split-window&lt;/code&gt; (see &lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;Splitting Windows&lt;/a&gt;). Also, a side window is not reused or split by any buffer display action (see &lt;a href=&quot;buffer-display-action-functions#Buffer-Display-Action-Functions&quot;&gt;Buffer Display Action Functions&lt;/a&gt;) unless it is explicitly specified as target of that action. Note also that &lt;code&gt;delete-other-windows&lt;/code&gt; cannot make a side window the only window on its frame (see &lt;a href=&quot;deleting-windows#Deleting-Windows&quot;&gt;Deleting Windows&lt;/a&gt;).</source>
          <target state="translated">De forma predeterminada, las ventanas laterales no se pueden dividir a trav&amp;eacute;s &lt;code&gt;split-window&lt;/code&gt; (consulte &lt;a href=&quot;splitting-windows#Splitting-Windows&quot;&gt;Dividir ventanas&lt;/a&gt; ). Adem&amp;aacute;s, una ventana lateral no se reutiliza ni se divide mediante ninguna acci&amp;oacute;n de visualizaci&amp;oacute;n de b&amp;uacute;fer (consulte &lt;a href=&quot;buffer-display-action-functions#Buffer-Display-Action-Functions&quot;&gt;Funciones de acci&amp;oacute;n de visualizaci&amp;oacute;n de b&amp;uacute;fer&lt;/a&gt; ) a menos que se especifique expl&amp;iacute;citamente como objetivo de esa acci&amp;oacute;n. Tenga en cuenta tambi&amp;eacute;n que &lt;code&gt;delete-other-windows&lt;/code&gt; no puede hacer que una ventana lateral sea la &amp;uacute;nica ventana en su marco (consulte &lt;a href=&quot;deleting-windows#Deleting-Windows&quot;&gt;Eliminar ventanas&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="337f680b05ae479de5bb330579bb081a7cad8c38" translate="yes" xml:space="preserve">
          <source>By default, the error output from the process, if any, is also passed to the filter function, unless the destination for the standard error stream of the process was separated from the standard output when the process was created. Emacs will only call the filter function during certain function calls. See &lt;a href=&quot;output-from-processes#Output-from-Processes&quot;&gt;Output from Processes&lt;/a&gt;. Note that if any of those functions are called by the filter, the filter may be called recursively.</source>
          <target state="translated">De forma predeterminada, la salida de error del proceso, si la hubiera, tambi&amp;eacute;n se pasa a la funci&amp;oacute;n de filtro, a menos que el destino del flujo de error est&amp;aacute;ndar del proceso se separe de la salida est&amp;aacute;ndar cuando se cre&amp;oacute; el proceso. Emacs solo llamar&amp;aacute; a la funci&amp;oacute;n de filtro durante ciertas llamadas a funciones. Consulte &lt;a href=&quot;output-from-processes#Output-from-Processes&quot;&gt;Salida de procesos&lt;/a&gt; . Tenga en cuenta que si el filtro llama a cualquiera de esas funciones, el filtro puede llamarse de forma recursiva.</target>
        </trans-unit>
        <trans-unit id="06b7d4e5494854a61c5e08ae9fc06e3dd1a74a05" translate="yes" xml:space="preserve">
          <source>By default, the functions that save and restore window configurations or the states of windows (see &lt;a href=&quot;window-configurations#Window-Configurations&quot;&gt;Window Configurations&lt;/a&gt;) do not care about window parameters. This means that when you change the value of a parameter within the body of a &lt;code&gt;save-window-excursion&lt;/code&gt;, the previous value is not restored when that macro exits. It also means that when you restore via &lt;code&gt;window-state-put&lt;/code&gt; a window state saved earlier by &lt;code&gt;window-state-get&lt;/code&gt;, all cloned windows have their parameters reset to &lt;code&gt;nil&lt;/code&gt;. The following variable allows you to override the standard behavior:</source>
          <target state="translated">De forma predeterminada, las funciones que guardan y restauran configuraciones de ventanas o los estados de las ventanas (consulte &lt;a href=&quot;window-configurations#Window-Configurations&quot;&gt;Configuraciones de ventanas&lt;/a&gt; ) no se preocupan por los par&amp;aacute;metros de las ventanas. Esto significa que cuando cambia el valor de un par&amp;aacute;metro dentro del cuerpo de una &lt;code&gt;save-window-excursion&lt;/code&gt; , el valor anterior no se restaura cuando esa macro sale. Tambi&amp;eacute;n significa que cuando restaura a trav&amp;eacute;s de &lt;code&gt;window-state-put&lt;/code&gt; un estado de ventana guardado anteriormente por &lt;code&gt;window-state-get&lt;/code&gt; , todas las ventanas clonadas tienen sus par&amp;aacute;metros restablecidos a &lt;code&gt;nil&lt;/code&gt; . La siguiente variable le permite anular el comportamiento est&amp;aacute;ndar:</target>
        </trans-unit>
        <trans-unit id="42d60f64d2f3044aeab0d538900375a76783a13e" translate="yes" xml:space="preserve">
          <source>By default, the global map binds &lt;code&gt;[tool-bar]&lt;/code&gt; as follows:</source>
          <target state="translated">De forma predeterminada, el mapa global enlaza &lt;code&gt;[tool-bar]&lt;/code&gt; siguiente manera:</target>
        </trans-unit>
        <trans-unit id="7273860db2763e093bd47c6c91c3aff5ba16714f" translate="yes" xml:space="preserve">
          <source>By default, the local bindings that Emacs creates are &lt;em&gt;dynamic bindings&lt;/em&gt;. Such a binding has &lt;em&gt;dynamic scope&lt;/em&gt;, meaning that any part of the program can potentially access the variable binding. It also has &lt;em&gt;dynamic extent&lt;/em&gt;, meaning that the binding lasts only while the binding construct (such as the body of a &lt;code&gt;let&lt;/code&gt; form) is being executed.</source>
          <target state="translated">Por defecto, los enlaces locales que crea Emacs son &lt;em&gt;enlaces din&amp;aacute;micos&lt;/em&gt; . Dicho enlace tiene &lt;em&gt;un alcance din&amp;aacute;mico&lt;/em&gt; , lo que significa que cualquier parte del programa puede acceder potencialmente al enlace variable. Tambi&amp;eacute;n tiene &lt;em&gt;extensi&amp;oacute;n din&amp;aacute;mica&lt;/em&gt; , lo que significa que la vinculaci&amp;oacute;n dura solo mientras se ejecuta la construcci&amp;oacute;n de vinculaci&amp;oacute;n (como el cuerpo de una forma &lt;code&gt;let&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="fd1815fd5a5c0fb02829db09a71557be08961cdb" translate="yes" xml:space="preserve">
          <source>By default, the local variable bindings made by Emacs are dynamic bindings. When a variable is dynamically bound, its current binding at any point in the execution of the Lisp program is simply the most recently-created dynamic local binding for that symbol, or the global binding if there is no such local binding.</source>
          <target state="translated">Por defecto,los enlaces de variables locales hechos por Emacs son enlaces dinámicos.Cuando una variable está ligada dinámicamente,su unión actual en cualquier punto de la ejecución del programa Lisp es simplemente la unión local dinámica más reciente creada para ese símbolo,o la unión global si no existe tal unión local.</target>
        </trans-unit>
        <trans-unit id="47f31a9758da1b80f09abc18f1231cee612e7b61" translate="yes" xml:space="preserve">
          <source>By default, the range of codepoints passed to &lt;var&gt;function&lt;/var&gt; includes all the characters in &lt;var&gt;charset&lt;/var&gt;, but optional arguments &lt;var&gt;from-code&lt;/var&gt; and &lt;var&gt;to-code&lt;/var&gt; limit that to the range of characters between these two codepoints of &lt;var&gt;charset&lt;/var&gt;. If either of them is &lt;code&gt;nil&lt;/code&gt;, it defaults to the first or last codepoint of &lt;var&gt;charset&lt;/var&gt;, respectively.</source>
          <target state="translated">De forma predeterminada, el rango de puntos de c&amp;oacute;digo pasados ​​a la &lt;var&gt;function&lt;/var&gt; incluye todos los caracteres en el &lt;var&gt;charset&lt;/var&gt; de caracteres , pero los argumentos opcionales &lt;var&gt;from-code&lt;/var&gt; y &lt;var&gt;to-code&lt;/var&gt; limitan al rango de caracteres entre estos dos puntos de c&amp;oacute;digo del juego de &lt;var&gt;charset&lt;/var&gt; . Si cualquiera de ellos es &lt;code&gt;nil&lt;/code&gt; , toma el valor predeterminado del primer o &amp;uacute;ltimo punto de c&amp;oacute;digo del juego de &lt;var&gt;charset&lt;/var&gt; , respectivamente.</target>
        </trans-unit>
        <trans-unit id="3d1494bcaafdc3c540ef160a9f8e6f65dd4261e3" translate="yes" xml:space="preserve">
          <source>By default, the space taken up by &lt;var&gt;window&lt;/var&gt; is given to one of its adjacent sibling windows, if any. However, if the variable &lt;code&gt;window-combination-resize&lt;/code&gt; is non-&lt;code&gt;nil&lt;/code&gt;, the space is proportionally distributed among any remaining windows in the same window combination. See &lt;a href=&quot;recombining-windows#Recombining-Windows&quot;&gt;Recombining Windows&lt;/a&gt;.</source>
          <target state="translated">De forma predeterminada, el espacio ocupado por la &lt;var&gt;window&lt;/var&gt; se le da a una de sus ventanas hermanas adyacentes, si las hay. Sin embargo, si la variable &lt;code&gt;window-combination-resize&lt;/code&gt; no es &lt;code&gt;nil&lt;/code&gt; , el espacio se distribuye proporcionalmente entre las ventanas restantes en la misma combinaci&amp;oacute;n de ventanas. Consulte &lt;a href=&quot;recombining-windows#Recombining-Windows&quot;&gt;Recombinaci&amp;oacute;n de Windows&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f1defe0245424aab283006a635faaa0b360d0c56" translate="yes" xml:space="preserve">
          <source>By default, the value is a function that asks the user whether to proceed.</source>
          <target state="translated">Por defecto,el valor es una función que pregunta al usuario si debe proceder.</target>
        </trans-unit>
        <trans-unit id="6d7d2b01d1d4f6143cd45dbac4779e0cc9e9e7c9" translate="yes" xml:space="preserve">
          <source>By default, the values are integers that are 100 times the system load averages, but if &lt;var&gt;use-float&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, then they are returned as floating-point numbers without multiplying by 100.</source>
          <target state="translated">Por defecto, los valores son enteros que son 100 veces los promedios de carga del sistema, pero si &lt;var&gt;use-float&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; , entonces se devuelven como n&amp;uacute;meros de punto flotante sin multiplicar por 100.</target>
        </trans-unit>
        <trans-unit id="e561fba1f476b09361515566e3c64701551c6912" translate="yes" xml:space="preserve">
          <source>By default, this alist contains one entry with the key &lt;code&gt;edebug&lt;/code&gt; and a list of three functions, which are the default implementations of the functions inserted in instrumented code: &lt;code&gt;edebug-enter&lt;/code&gt;, &lt;code&gt;edebug-before&lt;/code&gt; and &lt;code&gt;edebug-after&lt;/code&gt;. To change Edebug&amp;rsquo;s behavior globally, modify the default entry.</source>
          <target state="translated">Por defecto, esta lista contiene una entrada con la clave &lt;code&gt;edebug&lt;/code&gt; y una lista de tres funciones, que son las implementaciones por defecto de las funciones insertadas en el c&amp;oacute;digo instrumentado: &lt;code&gt;edebug-enter&lt;/code&gt; , &lt;code&gt;edebug-before&lt;/code&gt; y &lt;code&gt;edebug-after&lt;/code&gt; . Para cambiar el comportamiento de Edebug globalmente, modifique la entrada predeterminada.</target>
        </trans-unit>
        <trans-unit id="a30c2c9f6f69702d4744ebbd4fe0caff5ca90a07" translate="yes" xml:space="preserve">
          <source>By default, this function also moves &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s buffer to the front of the buffer list (see &lt;a href=&quot;buffer-list#Buffer-List&quot;&gt;Buffer List&lt;/a&gt;) and makes &lt;var&gt;window&lt;/var&gt; the most recently selected window. If the optional argument &lt;var&gt;norecord&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, these additional actions are omitted.</source>
          <target state="translated">Por defecto, esta funci&amp;oacute;n tambi&amp;eacute;n mueve el b&amp;uacute;fer de la &lt;var&gt;window&lt;/var&gt; al frente de la lista de b&amp;uacute;fer (ver &lt;a href=&quot;buffer-list#Buffer-List&quot;&gt;Lista de b&amp;uacute;fer&lt;/a&gt; ) y convierte a &lt;var&gt;window&lt;/var&gt; en la ventana seleccionada m&amp;aacute;s recientemente. Si el argumento opcional &lt;var&gt;norecord&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; , estas acciones adicionales se omiten.</target>
        </trans-unit>
        <trans-unit id="314e04d83201875669bd5820e278b79ec5e410e1" translate="yes" xml:space="preserve">
          <source>By default, this function resets &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s position, display margins, fringe widths, and scroll bar settings, based on the local variables in the specified buffer. However, if the optional argument &lt;var&gt;keep-margins&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, it leaves &lt;var&gt;window&lt;/var&gt;&amp;rsquo;s display margins, fringes and scroll bar settings alone.</source>
          <target state="translated">De forma predeterminada, esta funci&amp;oacute;n restablece la posici&amp;oacute;n de la &lt;var&gt;window&lt;/var&gt; , los m&amp;aacute;rgenes de visualizaci&amp;oacute;n, los anchos de las franjas y la configuraci&amp;oacute;n de la barra de desplazamiento, seg&amp;uacute;n las variables locales en el b&amp;uacute;fer especificado. Sin embargo, si el argumento opcional &lt;var&gt;keep-margins&lt;/var&gt; no es &lt;code&gt;nil&lt;/code&gt; , deja los m&amp;aacute;rgenes de visualizaci&amp;oacute;n de la &lt;var&gt;window&lt;/var&gt; , los m&amp;aacute;rgenes y la configuraci&amp;oacute;n de la barra de desplazamiento solo.</target>
        </trans-unit>
        <trans-unit id="c8d7822491c87018aaf653bdc89135199d35d678" translate="yes" xml:space="preserve">
          <source>By default, this variable is always set to &lt;code&gt;t&lt;/code&gt;, meaning that a call of &lt;code&gt;process-file&lt;/code&gt; could potentially change any file on a remote host. When set to &lt;code&gt;nil&lt;/code&gt;, a file name handler could optimize its behavior with respect to remote file attribute caching.</source>
          <target state="translated">De forma predeterminada, esta variable siempre se establece en &lt;code&gt;t&lt;/code&gt; , lo que significa que una llamada a &lt;code&gt;process-file&lt;/code&gt; podr&amp;iacute;a potencialmente cambiar cualquier archivo en un host remoto. Cuando se establece en &lt;code&gt;nil&lt;/code&gt; , un controlador de nombre de archivo podr&amp;iacute;a optimizar su comportamiento con respecto al almacenamiento en cach&amp;eacute; de atributos de archivos remotos.</target>
        </trans-unit>
        <trans-unit id="fe49d9f104dc3f50cf901776febad4cfc3162c78" translate="yes" xml:space="preserve">
          <source>By default, this variable&amp;rsquo;s value is &lt;code&gt;read&lt;/code&gt;. See &lt;a href=&quot;input-functions#Input-Functions&quot;&gt;Input Functions&lt;/a&gt;.</source>
          <target state="translated">De forma predeterminada, se &lt;code&gt;read&lt;/code&gt; el valor de esta variable . Consulte &lt;a href=&quot;input-functions#Input-Functions&quot;&gt;Funciones de entrada&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c2688defb0c98a25897334d05cea4581b8ab7493" translate="yes" xml:space="preserve">
          <source>By design, action functions are free in their interpretation of action alist entries. In fact, some entries like &lt;code&gt;allow-no-window&lt;/code&gt; or &lt;code&gt;previous-window&lt;/code&gt; have a meaning only for one or a few action functions, and are ignored by the rest. Other entries, like &lt;code&gt;inhibit-same-window&lt;/code&gt; or &lt;code&gt;window-parameters&lt;/code&gt;, are supposed to be respected by most action functions, including those provided by application programs and external packages.</source>
          <target state="translated">Por dise&amp;ntilde;o, las funciones de acci&amp;oacute;n son libres en su interpretaci&amp;oacute;n de las entradas de la lista de acciones. De hecho, algunas entradas como &lt;code&gt;allow-no-window&lt;/code&gt; o &lt;code&gt;previous-window&lt;/code&gt; tienen un significado solo para una o algunas funciones de acci&amp;oacute;n, y el resto las ignora. Se supone que otras entradas, como &lt;code&gt;inhibit-same-window&lt;/code&gt; o &lt;code&gt;window-parameters&lt;/code&gt; , deben ser respetadas por la mayor&amp;iacute;a de las funciones de acci&amp;oacute;n, incluidas las proporcionadas por los programas de aplicaci&amp;oacute;n y los paquetes externos.</target>
        </trans-unit>
        <trans-unit id="5df52f7953c9e1e23b06b07d93d36bf7c4082b84" translate="yes" xml:space="preserve">
          <source>By design, operations to make or modify child frames are implemented with the help of frame parameters (see &lt;a href=&quot;frame-parameters#Frame-Parameters&quot;&gt;Frame Parameters&lt;/a&gt;) without any specialized functions or customizable variables. Note that child frames are meaningful on graphical terminals only.</source>
          <target state="translated">Por dise&amp;ntilde;o, las operaciones para crear o modificar marcos secundarios se implementan con la ayuda de los par&amp;aacute;metros del marco (consulte &lt;a href=&quot;frame-parameters#Frame-Parameters&quot;&gt;Par&amp;aacute;metros del marco&lt;/a&gt; ) sin funciones especializadas ni variables personalizables. Tenga en cuenta que los marcos secundarios son significativos solo en terminales gr&amp;aacute;ficos.</target>
        </trans-unit>
        <trans-unit id="bc5e006af20582138d39d0ef5f207bc52db0c4b3" translate="yes" xml:space="preserve">
          <source>By editing the buffer in place. In this case, &lt;var&gt;to-fn&lt;/var&gt; should return the end-position of the range of text, as modified.</source>
          <target state="translated">Editando el b&amp;uacute;fer en su lugar. En este caso, &lt;var&gt;to-fn&lt;/var&gt; deber&amp;iacute;a devolver la posici&amp;oacute;n final del rango de texto, modificado.</target>
        </trans-unit>
        <trans-unit id="63b5c76c72ae22fa7a5d14c68660da304cacecaf" translate="yes" xml:space="preserve">
          <source>By returning a list of annotations. This is a list of elements of the form &lt;code&gt;(&lt;var&gt;position&lt;/var&gt; . &lt;var&gt;string&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;position&lt;/var&gt; is an integer specifying the relative position in the text to be written, and &lt;var&gt;string&lt;/var&gt; is the annotation to add there. The list must be sorted in order of position when &lt;var&gt;to-fn&lt;/var&gt; returns it.</source>
          <target state="translated">Devolviendo una lista de anotaciones. Esta es una lista de elementos del formulario &lt;code&gt;(&lt;var&gt;position&lt;/var&gt; . &lt;var&gt;string&lt;/var&gt;)&lt;/code&gt; , donde &lt;var&gt;position&lt;/var&gt; es un n&amp;uacute;mero entero que especifica la posici&amp;oacute;n relativa en el texto que se va a escribir, y &lt;var&gt;string&lt;/var&gt; es la anotaci&amp;oacute;n que se agregar&amp;aacute; all&amp;iacute;. La lista se debe ordenar en orden de posici&amp;oacute;n cuando &lt;var&gt;to-fn&lt;/var&gt; la devuelva.</target>
        </trans-unit>
        <trans-unit id="b9df056fb7a4026d67a3485fe6622bd0ac5e4705" translate="yes" xml:space="preserve">
          <source>By setting the &lt;var&gt;action&lt;/var&gt; argument, an application effectively overrules any customization of &lt;code&gt;display-buffer-base-action&lt;/code&gt;. Our user can now either accept the choice of the application, or redouble by customizing the option &lt;code&gt;display-buffer-alist&lt;/code&gt; as follows:</source>
          <target state="translated">Al establecer el argumento de &lt;var&gt;action&lt;/var&gt; , una aplicaci&amp;oacute;n anula efectivamente cualquier personalizaci&amp;oacute;n de &lt;code&gt;display-buffer-base-action&lt;/code&gt; . Nuestro usuario ahora puede aceptar la elecci&amp;oacute;n de la aplicaci&amp;oacute;n, o redoblarla personalizando la opci&amp;oacute;n &lt;code&gt;display-buffer-alist&lt;/code&gt; de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="3d82e754d3481447db663d32552753c526295b30" translate="yes" xml:space="preserve">
          <source>Byte Compilation</source>
          <target state="translated">Compilación de bytes</target>
        </trans-unit>
        <trans-unit id="38293ea2f575b674a58092e2860f65e375cf569f" translate="yes" xml:space="preserve">
          <source>Byte compilation functions.</source>
          <target state="translated">Funciones de compilación de bytes.</target>
        </trans-unit>
        <trans-unit id="05bc2b18f50e1c59ce5be83b3a043fed7d8464a5" translate="yes" xml:space="preserve">
          <source>Byte compiler warnings can be controlled more precisely by setting the variable &lt;code&gt;byte-compile-warnings&lt;/code&gt;. See its documentation string for details.</source>
          <target state="translated">Las advertencias del compilador de bytes se pueden controlar con mayor precisi&amp;oacute;n estableciendo la variable &lt;code&gt;byte-compile-warnings&lt;/code&gt; . Consulte su cadena de documentaci&amp;oacute;n para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="30c3dfd8676a2b612dc32e5e0e6e366336cdb1d2" translate="yes" xml:space="preserve">
          <source>Byte-Code Function Objects</source>
          <target state="translated">Objetos de función de código de bytes</target>
        </trans-unit>
        <trans-unit id="11dfd8a56350515cd4673e500974d1d76f92ac16" translate="yes" xml:space="preserve">
          <source>Byte-Code Function Type</source>
          <target state="translated">Tipo de función de código de bytes</target>
        </trans-unit>
        <trans-unit id="59fecc0a37710dd91bf58606dfa13b25c3069f87" translate="yes" xml:space="preserve">
          <source>Byte-Compilation Functions</source>
          <target state="translated">Funciones de compilación de bytes</target>
        </trans-unit>
        <trans-unit id="1a37ba1d3be3c3de01e4d5d496b8285b080495ba" translate="yes" xml:space="preserve">
          <source>Byte-compiled functions have a special data type: they are &lt;em&gt;byte-code function objects&lt;/em&gt;. Whenever such an object appears as a function to be called, Emacs uses the byte-code interpreter to execute the byte-code.</source>
          <target state="translated">Las funciones compiladas por bytes tienen un tipo de datos especial: son &lt;em&gt;objetos de funci&amp;oacute;n de c&amp;oacute;digo de bytes&lt;/em&gt; . Siempre que un objeto as&amp;iacute; aparece como una funci&amp;oacute;n a llamar, Emacs usa el int&amp;eacute;rprete de c&amp;oacute;digo de bytes para ejecutar el c&amp;oacute;digo de bytes.</target>
        </trans-unit>
        <trans-unit id="3bb9f8596b1e76a28bc9081c521014596231e12a" translate="yes" xml:space="preserve">
          <source>Byte-compiling a file also executes any &lt;code&gt;require&lt;/code&gt; calls at top-level in the file, so you can ensure that necessary macro definitions are available during compilation by requiring the files that define them (see &lt;a href=&quot;named-features#Named-Features&quot;&gt;Named Features&lt;/a&gt;). To avoid loading the macro definition files when someone &lt;em&gt;runs&lt;/em&gt; the compiled program, write &lt;code&gt;eval-when-compile&lt;/code&gt; around the &lt;code&gt;require&lt;/code&gt; calls (see &lt;a href=&quot;eval-during-compile#Eval-During-Compile&quot;&gt;Eval During Compile&lt;/a&gt;).</source>
          <target state="translated">La compilaci&amp;oacute;n de bytes de un archivo tambi&amp;eacute;n ejecuta cualquier llamada de &lt;code&gt;require&lt;/code&gt; en el nivel superior del archivo, por lo que puede asegurarse de que las definiciones de macro necesarias est&amp;eacute;n disponibles durante la compilaci&amp;oacute;n solicitando los archivos que las definen (consulte &lt;a href=&quot;named-features#Named-Features&quot;&gt;Funciones con nombre&lt;/a&gt; ). Para evitar cargar los archivos de definici&amp;oacute;n de macros cuando alguien &lt;em&gt;ejecuta&lt;/em&gt; el programa compilado, escriba &lt;code&gt;eval-when-compile&lt;/code&gt; alrededor de las llamadas &lt;code&gt;require&lt;/code&gt; (consulte &lt;a href=&quot;eval-during-compile#Eval-During-Compile&quot;&gt;Eval durante la compilaci&amp;oacute;n&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="cc41f45aabe0cfaf8f1fb19aff9d4d9cd35def84" translate="yes" xml:space="preserve">
          <source>Byte-compiling a file often produces warnings about functions that the compiler doesn&amp;rsquo;t know about (see &lt;a href=&quot;compiler-errors#Compiler-Errors&quot;&gt;Compiler Errors&lt;/a&gt;). Sometimes this indicates a real problem, but usually the functions in question are defined in other files which would be loaded if that code is run. For example, byte-compiling</source>
          <target state="translated">La compilaci&amp;oacute;n de bytes de un archivo a menudo produce advertencias sobre funciones que el compilador no conoce (consulte &lt;a href=&quot;compiler-errors#Compiler-Errors&quot;&gt;Errores del compilador&lt;/a&gt; ). A veces, esto indica un problema real, pero generalmente las funciones en cuesti&amp;oacute;n se definen en otros archivos que se cargar&amp;iacute;an si se ejecuta ese c&amp;oacute;digo. Por ejemplo, compilaci&amp;oacute;n de bytes</target>
        </trans-unit>
        <trans-unit id="32096c2e0eff33d844ee6d675407ace18289357d" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="translated">C</target>
        </trans-unit>
        <trans-unit id="440395ca055b9f07fbed0d7cf4596c35fc237caa" translate="yes" xml:space="preserve">
          <source>C Dialect</source>
          <target state="translated">Dialecto C</target>
        </trans-unit>
        <trans-unit id="161c19c41476b0282b81eeb78bdaec44cc5f26eb" translate="yes" xml:space="preserve">
          <source>C Integer Types</source>
          <target state="translated">C Tipos enteros</target>
        </trans-unit>
        <trans-unit id="f1dfdb58024fd801bb8d8d91b16183f255579149" translate="yes" xml:space="preserve">
          <source>C-</source>
          <target state="translated">C-</target>
        </trans-unit>
        <trans-unit id="e98b70997278aacbb8d37c462eeefc3cbd3956d9" translate="yes" xml:space="preserve">
          <source>C-=</source>
          <target state="translated">C-=</target>
        </trans-unit>
        <trans-unit id="f91ccd340101fead85b132fc626cf86c66e71760" translate="yes" xml:space="preserve">
          <source>C-@</source>
          <target state="translated">C-@</target>
        </trans-unit>
        <trans-unit id="5a32717cd694e62b994ffe84487a025e94d4ba8d" translate="yes" xml:space="preserve">
          <source>C-A</source>
          <target state="translated">C-A</target>
        </trans-unit>
        <trans-unit id="a0720f926a1edd4fcb28152926e89547a933d93b" translate="yes" xml:space="preserve">
          <source>C-DEL</source>
          <target state="translated">C-DEL</target>
        </trans-unit>
        <trans-unit id="e8de50b9ffc20496735696fad0e0b83e070a5838" translate="yes" xml:space="preserve">
          <source>C-M-S-v</source>
          <target state="translated">C-M-S-v</target>
        </trans-unit>
        <trans-unit id="a587267328d8d782313379e66ff7b0b685da74e3" translate="yes" xml:space="preserve">
          <source>C-M-a</source>
          <target state="translated">C-M-a</target>
        </trans-unit>
        <trans-unit id="523363599c87501263758c3178a881d56b0ca0f3" translate="yes" xml:space="preserve">
          <source>C-M-b</source>
          <target state="translated">C-M-b</target>
        </trans-unit>
        <trans-unit id="9ab2ef69a1c8dee51e5c638f3f4dfb634fbe96a6" translate="yes" xml:space="preserve">
          <source>C-M-c</source>
          <target state="translated">C-M-c</target>
        </trans-unit>
        <trans-unit id="a2b4c4a3c492ba7d8900be9b332ed927f932ea89" translate="yes" xml:space="preserve">
          <source>C-M-e</source>
          <target state="translated">C-M-e</target>
        </trans-unit>
        <trans-unit id="1415d2b0c002711c0b18baff2ffb42f215277da7" translate="yes" xml:space="preserve">
          <source>C-M-f</source>
          <target state="translated">C-M-f</target>
        </trans-unit>
        <trans-unit id="e1283736390e7ca8f0e8dae4d7c15501e7285305" translate="yes" xml:space="preserve">
          <source>C-M-i</source>
          <target state="translated">C-M-i</target>
        </trans-unit>
        <trans-unit id="5554d733d6164f6f3c0310969979f52f4373a6f3" translate="yes" xml:space="preserve">
          <source>C-M-q</source>
          <target state="translated">C-M-q</target>
        </trans-unit>
        <trans-unit id="e48088e6addb18372a14ed6b8da1a6b58ad7c957" translate="yes" xml:space="preserve">
          <source>C-M-v</source>
          <target state="translated">C-M-v</target>
        </trans-unit>
        <trans-unit id="e3d2747af9266236b31cfe9dbcc1d21c148863e4" translate="yes" xml:space="preserve">
          <source>C-M-x</source>
          <target state="translated">C-M-x</target>
        </trans-unit>
        <trans-unit id="d149ce62d1e517cc3bc28b8250bb976be43efcc0" translate="yes" xml:space="preserve">
          <source>C-\</source>
          <target state="translated">C-\</target>
        </trans-unit>
        <trans-unit id="015b01935f205cea280aafb1b1c1757c49bc1bf4" translate="yes" xml:space="preserve">
          <source>C-]</source>
          <target state="translated">C-]</target>
        </trans-unit>
        <trans-unit id="5ec9d3dadc7abaeb1f5f16db2365b2aeb6a2f74b" translate="yes" xml:space="preserve">
          <source>C-_</source>
          <target state="translated">C-_</target>
        </trans-unit>
        <trans-unit id="3bff8fb1aa290267671b1c50e3b32db24f00b295" translate="yes" xml:space="preserve">
          <source>C-a</source>
          <target state="translated">C-a</target>
        </trans-unit>
        <trans-unit id="c204a76fc3c1123c96b13dd7ec922d02d4b00e91" translate="yes" xml:space="preserve">
          <source>C-b</source>
          <target state="translated">C-b</target>
        </trans-unit>
        <trans-unit id="b3b7965656c0921692a30673d7781acd51c4eed9" translate="yes" xml:space="preserve">
          <source>C-c</source>
          <target state="translated">C-c</target>
        </trans-unit>
        <trans-unit id="2922399c2d547241985d2d9050d0f4a253f10c73" translate="yes" xml:space="preserve">
          <source>C-c 3</source>
          <target state="translated">C-c 3</target>
        </trans-unit>
        <trans-unit id="8c846cf1bd5b4fe56864ee3f4c9665e8b3b8fcc4" translate="yes" xml:space="preserve">
          <source>C-c &lt;var&gt;letter&lt;/var&gt;</source>
          <target state="translated">&lt;var&gt;letter&lt;/var&gt; cc</target>
        </trans-unit>
        <trans-unit id="63d94b505b28b164240bf9389a0b04f654a4efe7" translate="yes" xml:space="preserve">
          <source>C-c C-d</source>
          <target state="translated">C-c C-d</target>
        </trans-unit>
        <trans-unit id="d0bed7baa3038554c15ed1dd0d2b6090b9910013" translate="yes" xml:space="preserve">
          <source>C-c C-u</source>
          <target state="translated">C-c C-u</target>
        </trans-unit>
        <trans-unit id="f74c88ff9d7e7d40f5d62f507900f4cb7519ee90" translate="yes" xml:space="preserve">
          <source>C-c C-w</source>
          <target state="translated">C-c C-w</target>
        </trans-unit>
        <trans-unit id="e396508e7aa9423085342ba159b546882b435194" translate="yes" xml:space="preserve">
          <source>C-c C-z</source>
          <target state="translated">C-c C-z</target>
        </trans-unit>
        <trans-unit id="98c56570dd5671b7a19fbc0ebf8785f9ff91eddc" translate="yes" xml:space="preserve">
          <source>C-c ESC</source>
          <target state="translated">C-c ESC</target>
        </trans-unit>
        <trans-unit id="f9d21da244350a9db0114ec30af406d5bef1cb45" translate="yes" xml:space="preserve">
          <source>C-c ESC O P</source>
          <target state="translated">C-c ESC O P</target>
        </trans-unit>
        <trans-unit id="57e4e54e9967cd42daed8a76a5aa899b154b7b12" translate="yes" xml:space="preserve">
          <source>C-c PF1</source>
          <target state="translated">C-c PF1</target>
        </trans-unit>
        <trans-unit id="d2e5a2b66c696b957548f71ee728ee1ae137f0c0" translate="yes" xml:space="preserve">
          <source>C-c h</source>
          <target state="translated">C-c h</target>
        </trans-unit>
        <trans-unit id="a7ef1e89e28b60bd53a0a5ab746fbcd131fdf224" translate="yes" xml:space="preserve">
          <source>C-e</source>
          <target state="translated">C-e</target>
        </trans-unit>
        <trans-unit id="dd71d43937255c2ba419c077fa824865f8267186" translate="yes" xml:space="preserve">
          <source>C-f</source>
          <target state="translated">C-f</target>
        </trans-unit>
        <trans-unit id="a4b41cc50f9ee3592ac03dec905ea87299f64719" translate="yes" xml:space="preserve">
          <source>C-f C-n</source>
          <target state="translated">C-f C-n</target>
        </trans-unit>
        <trans-unit id="a6d13ed5d2d00101157246b7ae1e91a19d7d7406" translate="yes" xml:space="preserve">
          <source>C-g</source>
          <target state="translated">C-g</target>
        </trans-unit>
        <trans-unit id="a8d14a9f4bc55d9a8a84935ad37682321efb17a6" translate="yes" xml:space="preserve">
          <source>C-h</source>
          <target state="translated">C-h</target>
        </trans-unit>
        <trans-unit id="131f9a03ecbf035173b42486265daa4c059aa594" translate="yes" xml:space="preserve">
          <source>C-h C-h</source>
          <target state="translated">C-h C-h</target>
        </trans-unit>
        <trans-unit id="8fc1636b1726f0f848e9110d7df8ad94624fe8a2" translate="yes" xml:space="preserve">
          <source>C-h P</source>
          <target state="translated">C-h P</target>
        </trans-unit>
        <trans-unit id="d24cf6f79d3eca79589b614119c65a877786e8e3" translate="yes" xml:space="preserve">
          <source>C-h a</source>
          <target state="translated">C-h a</target>
        </trans-unit>
        <trans-unit id="c947b2d5d96ff5df49e3e32802fd4fbc37367b9c" translate="yes" xml:space="preserve">
          <source>C-h b</source>
          <target state="translated">C-h b</target>
        </trans-unit>
        <trans-unit id="2f32ced337101528820a543fba4ae73fd0b8a020" translate="yes" xml:space="preserve">
          <source>C-h c</source>
          <target state="translated">C-h c</target>
        </trans-unit>
        <trans-unit id="b6509cacdcc73abddf104ea8e33a97a3ac5575fa" translate="yes" xml:space="preserve">
          <source>C-h f</source>
          <target state="translated">C-h f</target>
        </trans-unit>
        <trans-unit id="044ffa482f401d4a34b0ce3d2fc0aa8a6c6451c5" translate="yes" xml:space="preserve">
          <source>C-h m</source>
          <target state="translated">C-h m</target>
        </trans-unit>
        <trans-unit id="94df7f22a37722547e0a4acb987c3e85a4c7583c" translate="yes" xml:space="preserve">
          <source>C-h v</source>
          <target state="translated">C-h v</target>
        </trans-unit>
        <trans-unit id="223627ab9c74b5ae56858c226557c9e9be301085" translate="yes" xml:space="preserve">
          <source>C-i</source>
          <target state="translated">C-i</target>
        </trans-unit>
        <trans-unit id="4d83990cce829d69d972a1ed2a1e206afb6b5b37" translate="yes" xml:space="preserve">
          <source>C-j</source>
          <target state="translated">C-j</target>
        </trans-unit>
        <trans-unit id="d5eeac2f32301e2b964f421e02a44c5afa000881" translate="yes" xml:space="preserve">
          <source>C-k</source>
          <target state="translated">C-k</target>
        </trans-unit>
        <trans-unit id="2fef5b5a274737535a312ecc5d6b8de717c1cb77" translate="yes" xml:space="preserve">
          <source>C-l</source>
          <target state="translated">C-l</target>
        </trans-unit>
        <trans-unit id="aa3408adf600065cf33c17971e8cdd9f76e5d785" translate="yes" xml:space="preserve">
          <source>C-n</source>
          <target state="translated">C-n</target>
        </trans-unit>
        <trans-unit id="332268c029d8126391ff9151361238bdf44870d8" translate="yes" xml:space="preserve">
          <source>C-p</source>
          <target state="translated">C-p</target>
        </trans-unit>
        <trans-unit id="023f8e3d8a24aa022603e7bc5546978051323321" translate="yes" xml:space="preserve">
          <source>C-p 6</source>
          <target state="translated">C-p 6</target>
        </trans-unit>
        <trans-unit id="7e58e0990d0a53938ca001b4ad01a74ad57ecbdf" translate="yes" xml:space="preserve">
          <source>C-p C-f</source>
          <target state="translated">C-p C-f</target>
        </trans-unit>
        <trans-unit id="1666955c646a9bb3fabdb2404112bd45b66ccb34" translate="yes" xml:space="preserve">
          <source>C-q</source>
          <target state="translated">C-q</target>
        </trans-unit>
        <trans-unit id="74b18abb702cb69395f60707416dd8e1f9e92a32" translate="yes" xml:space="preserve">
          <source>C-r</source>
          <target state="translated">C-r</target>
        </trans-unit>
        <trans-unit id="78540d990eb5e51e46b3d550d8999b517398872e" translate="yes" xml:space="preserve">
          <source>C-s</source>
          <target state="translated">C-s</target>
        </trans-unit>
        <trans-unit id="ac7de9aff7d0daffb3ae53140a783f411f89c587" translate="yes" xml:space="preserve">
          <source>C-u</source>
          <target state="translated">C-u</target>
        </trans-unit>
        <trans-unit id="d22f544f91c38776df9e98de756eed3debe16cdc" translate="yes" xml:space="preserve">
          <source>C-u -</source>
          <target state="translated">C-u -</target>
        </trans-unit>
        <trans-unit id="10f8bc5307f68632db725ed0931d63de1460ddfa" translate="yes" xml:space="preserve">
          <source>C-u -1 C-M-u</source>
          <target state="translated">C-u -1 C-M-u</target>
        </trans-unit>
        <trans-unit id="5f418fb7321d2ab8c56f997e5658b00a3040a2d1" translate="yes" xml:space="preserve">
          <source>C-u 0 C-j</source>
          <target state="translated">C-u 0 C-j</target>
        </trans-unit>
        <trans-unit id="da79c04f91b004dd27140e6acdba5d94bb656395" translate="yes" xml:space="preserve">
          <source>C-u 0 C-x C-e</source>
          <target state="translated">C-u 0 C-x C-e</target>
        </trans-unit>
        <trans-unit id="9abc686ab642db3617ba866712386a2c3367c984" translate="yes" xml:space="preserve">
          <source>C-u 1 2 3-</source>
          <target state="translated">C-u 1 2 3-</target>
        </trans-unit>
        <trans-unit id="078553441ff260418cd0fae179ba0b421b563072" translate="yes" xml:space="preserve">
          <source>C-u 4</source>
          <target state="translated">C-u 4</target>
        </trans-unit>
        <trans-unit id="b45852e2bb35925480811fa34c28817e312757e2" translate="yes" xml:space="preserve">
          <source>C-u C-M-u</source>
          <target state="translated">C-u C-M-u</target>
        </trans-unit>
        <trans-unit id="320929c2d1df45760946518161a90d14f7c50bd7" translate="yes" xml:space="preserve">
          <source>C-u C-M-x</source>
          <target state="translated">C-u C-M-x</target>
        </trans-unit>
        <trans-unit id="c64b6c2b2de84365236fe039ef1643ad9097b181" translate="yes" xml:space="preserve">
          <source>C-u C-f</source>
          <target state="translated">C-u C-f</target>
        </trans-unit>
        <trans-unit id="144ed887662b97ccd7d5e4df38590e6b0c9188ee" translate="yes" xml:space="preserve">
          <source>C-u RET</source>
          <target state="translated">C-u RET</target>
        </trans-unit>
        <trans-unit id="c228f37d7ea330bf7c0d73a894ac443b387f3c40" translate="yes" xml:space="preserve">
          <source>C-u-</source>
          <target state="translated">C-u-</target>
        </trans-unit>
        <trans-unit id="0a23d9de112f4305bbf7d308788b4615cc11e2a2" translate="yes" xml:space="preserve">
          <source>C-v</source>
          <target state="translated">C-v</target>
        </trans-unit>
        <trans-unit id="298ef629795cfb23ea736c739c02035ede13e0c6" translate="yes" xml:space="preserve">
          <source>C-x</source>
          <target state="translated">C-x</target>
        </trans-unit>
        <trans-unit id="4347a3678ac074d5ec07c3503e15ff18b018adc3" translate="yes" xml:space="preserve">
          <source>C-x 0</source>
          <target state="translated">C-x 0</target>
        </trans-unit>
        <trans-unit id="10124bcc79d4680d2849a4ecb1654c7898083a7b" translate="yes" xml:space="preserve">
          <source>C-x 1</source>
          <target state="translated">C-x 1</target>
        </trans-unit>
        <trans-unit id="4d47f604c607b6bcf678aa67ec1bf75bf4ba7c33" translate="yes" xml:space="preserve">
          <source>C-x 2</source>
          <target state="translated">C-x 2</target>
        </trans-unit>
        <trans-unit id="556f397c3864e7f8b2430507a0e9a218c58fd56b" translate="yes" xml:space="preserve">
          <source>C-x 3</source>
          <target state="translated">C-x 3</target>
        </trans-unit>
        <trans-unit id="abc0d3ddf5ac08765cf41363b262bc421ad3ed38" translate="yes" xml:space="preserve">
          <source>C-x 4</source>
          <target state="translated">C-x 4</target>
        </trans-unit>
        <trans-unit id="63307f15d6b42550d550cea24aeaa5bda8c024a5" translate="yes" xml:space="preserve">
          <source>C-x 4 C-f</source>
          <target state="translated">C-x 4 C-f</target>
        </trans-unit>
        <trans-unit id="d7e8408a7a87b24eb8ce1e9cd577a71f1abc5c24" translate="yes" xml:space="preserve">
          <source>C-x 4 C-o</source>
          <target state="translated">C-x 4 C-o</target>
        </trans-unit>
        <trans-unit id="d4b75cbe5b9f13c775f58fb5aadb4fd2fca9c73f" translate="yes" xml:space="preserve">
          <source>C-x 5</source>
          <target state="translated">C-x 5</target>
        </trans-unit>
        <trans-unit id="74dc274a8f353a10c8762b6eeb01cd5d80e205ba" translate="yes" xml:space="preserve">
          <source>C-x 6</source>
          <target state="translated">C-x 6</target>
        </trans-unit>
        <trans-unit id="b0c7a6e9bf270123c8284d4924a852cb0abe30d2" translate="yes" xml:space="preserve">
          <source>C-x @</source>
          <target state="translated">C-x @</target>
        </trans-unit>
        <trans-unit id="9ac0e333a25e06893ccf8044371d24b9f4683984" translate="yes" xml:space="preserve">
          <source>C-x C-\</source>
          <target state="translated">C-x C-\</target>
        </trans-unit>
        <trans-unit id="fdd391c7388aca6906f3e720a86ca5447e7d9c38" translate="yes" xml:space="preserve">
          <source>C-x C-a C-m</source>
          <target state="translated">C-x C-a C-m</target>
        </trans-unit>
        <trans-unit id="38858c4b382736f825616a2e73e26265ca9bb63a" translate="yes" xml:space="preserve">
          <source>C-x C-c</source>
          <target state="translated">C-x C-c</target>
        </trans-unit>
        <trans-unit id="2e574ba4b6c51b8c22a26b1eabc3a75c78d4ea7e" translate="yes" xml:space="preserve">
          <source>C-x C-e</source>
          <target state="translated">C-x C-e</target>
        </trans-unit>
        <trans-unit id="94093db9cb5d3fcd6ac5d93df4e2811d80860744" translate="yes" xml:space="preserve">
          <source>C-x C-f</source>
          <target state="translated">C-x C-f</target>
        </trans-unit>
        <trans-unit id="5aa04c1406d2bc59f9f02c65f0475fb37d41d69f" translate="yes" xml:space="preserve">
          <source>C-x C-g</source>
          <target state="translated">C-x C-g</target>
        </trans-unit>
        <trans-unit id="42560a5db134ba65783348e3bb0520d740376d48" translate="yes" xml:space="preserve">
          <source>C-x C-k</source>
          <target state="translated">C-x C-k</target>
        </trans-unit>
        <trans-unit id="92e72c608b382e9a997922e89877037677057e63" translate="yes" xml:space="preserve">
          <source>C-x C-k RET</source>
          <target state="translated">C-x C-k RET</target>
        </trans-unit>
        <trans-unit id="1c401be2ef044065bde20ae40271bd4ce7c9dbaa" translate="yes" xml:space="preserve">
          <source>C-x C-q</source>
          <target state="translated">C-x C-q</target>
        </trans-unit>
        <trans-unit id="a35119fcea09407a970dc0c67d75cdf4c7493695" translate="yes" xml:space="preserve">
          <source>C-x C-v</source>
          <target state="translated">C-x C-v</target>
        </trans-unit>
        <trans-unit id="380c2576bb1153c21b82305ecfd8e9cf75bb83cb" translate="yes" xml:space="preserve">
          <source>C-x C-w</source>
          <target state="translated">C-x C-w</target>
        </trans-unit>
        <trans-unit id="ad8e8247f1608bee89a7e56cab4034588ceeed4a" translate="yes" xml:space="preserve">
          <source>C-x ESC</source>
          <target state="translated">C-x ESC</target>
        </trans-unit>
        <trans-unit id="08a670503878dc334b05f1ec67cd80daa09a543f" translate="yes" xml:space="preserve">
          <source>C-x RET</source>
          <target state="translated">C-x RET</target>
        </trans-unit>
        <trans-unit id="33f00fe6ae825deab6e618f2518c895513248309" translate="yes" xml:space="preserve">
          <source>C-x RET c</source>
          <target state="translated">C-x RET c</target>
        </trans-unit>
        <trans-unit id="79182736a3f6f4a9b73be73dd66c6a963d18e6ef" translate="yes" xml:space="preserve">
          <source>C-x X =</source>
          <target state="translated">C-x X =</target>
        </trans-unit>
        <trans-unit id="06fec4fbfa2b40b5ba7dcd2878f2262be7a89cc4" translate="yes" xml:space="preserve">
          <source>C-x X W</source>
          <target state="translated">C-x X W</target>
        </trans-unit>
        <trans-unit id="b2d82441407b634931a0202fcd846528c8356104" translate="yes" xml:space="preserve">
          <source>C-x X X</source>
          <target state="translated">C-x X X</target>
        </trans-unit>
        <trans-unit id="0eabb8db03adc6a93c843bc7c3b4405a882bfbbf" translate="yes" xml:space="preserve">
          <source>C-x X w</source>
          <target state="translated">C-x X w</target>
        </trans-unit>
        <trans-unit id="a433c8910fd90328a865425f7cba86d9473bd9b8" translate="yes" xml:space="preserve">
          <source>C-x a</source>
          <target state="translated">C-x a</target>
        </trans-unit>
        <trans-unit id="d678c9278cafdf31c68ce0a63d4dfdb3f69b7e79" translate="yes" xml:space="preserve">
          <source>C-x a i</source>
          <target state="translated">C-x a i</target>
        </trans-unit>
        <trans-unit id="2aaaca2013569838cb0a146bd12e35301c230558" translate="yes" xml:space="preserve">
          <source>C-x b</source>
          <target state="translated">C-x b</target>
        </trans-unit>
        <trans-unit id="81a4dfc7002c34a5db314fd55a88c71ce9f8561c" translate="yes" xml:space="preserve">
          <source>C-x l</source>
          <target state="translated">C-x l</target>
        </trans-unit>
        <trans-unit id="b228794009dfb59282b23e84edcb2dc535059148" translate="yes" xml:space="preserve">
          <source>C-x left</source>
          <target state="translated">C-x izquierda</target>
        </trans-unit>
        <trans-unit id="0b13a73400d0c3c495b50621ca5fbf45fa714316" translate="yes" xml:space="preserve">
          <source>C-x m</source>
          <target state="translated">C-x m</target>
        </trans-unit>
        <trans-unit id="e78aa0259487687b23094dfc0b1d246956ee5054" translate="yes" xml:space="preserve">
          <source>C-x n</source>
          <target state="translated">C-x n</target>
        </trans-unit>
        <trans-unit id="37419a3d9d60f9f4a3c3ceeae49cb867b0552dd5" translate="yes" xml:space="preserve">
          <source>C-x o</source>
          <target state="translated">C-x o</target>
        </trans-unit>
        <trans-unit id="06bba06d9146ec872930935a408ff9e6db7b540e" translate="yes" xml:space="preserve">
          <source>C-x q</source>
          <target state="translated">C-x q</target>
        </trans-unit>
        <trans-unit id="6e1b8f11e4e004ffcd85260453eb416fadd8becd" translate="yes" xml:space="preserve">
          <source>C-x r</source>
          <target state="translated">C-x r</target>
        </trans-unit>
        <trans-unit id="c03a751f3df1d75c00ca555cdecb7ea0f12e35b3" translate="yes" xml:space="preserve">
          <source>C-x t</source>
          <target state="translated">C-x t</target>
        </trans-unit>
        <trans-unit id="16f34907c9a94600e9a207daf61c838d0b36dc8a" translate="yes" xml:space="preserve">
          <source>C-x v</source>
          <target state="translated">C-x v</target>
        </trans-unit>
        <trans-unit id="f286461016d3e4db77e8a575a1f55b2d71886961" translate="yes" xml:space="preserve">
          <source>C-y</source>
          <target state="translated">C-y</target>
        </trans-unit>
        <trans-unit id="acbbb692ba3dcc7f0dd54066ac8990ff1950dc9c" translate="yes" xml:space="preserve">
          <source>C-z</source>
          <target state="translated">C-z</target>
        </trans-unit>
        <trans-unit id="ee5254754a61a705597a6d10837027cbbdd49eb6" translate="yes" xml:space="preserve">
          <source>CLOS</source>
          <target state="translated">CLOS</target>
        </trans-unit>
        <trans-unit id="8a9cbc4396b103e6b251b294230c1bb9eed38e2f" translate="yes" xml:space="preserve">
          <source>COM1</source>
          <target state="translated">COM1</target>
        </trans-unit>
        <trans-unit id="23f35962de37902073c854bc889f0133b87d83ae" translate="yes" xml:space="preserve">
          <source>COM9</source>
          <target state="translated">COM9</target>
        </trans-unit>
        <trans-unit id="cbb44b8d4066ca53d103823d7579880a884c46f2" translate="yes" xml:space="preserve">
          <source>CTL</source>
          <target state="translated">CTL</target>
        </trans-unit>
        <trans-unit id="b38bed0f0e9601a07358ec72777da31f91720f2a" translate="yes" xml:space="preserve">
          <source>CTRL</source>
          <target state="translated">CTRL</target>
        </trans-unit>
        <trans-unit id="5e1dd8155002a7d7db24335015acaddd25a44f09" translate="yes" xml:space="preserve">
          <source>CVS</source>
          <target state="translated">CVS</target>
        </trans-unit>
        <trans-unit id="36e5803b7728bb1569947feca18d17ebe22e40b0" translate="yes" xml:space="preserve">
          <source>Calendrical conversion functions always use the Gregorian calendar, even for dates before the Gregorian calendar was introduced. Year numbers count the number of years since the year 1 BC, and do not skip zero as traditional Gregorian years do; for example, the year number -37 represents the Gregorian year 38 BC.</source>
          <target state="translated">Las funciones de conversión calendárica siempre utilizan el calendario gregoriano,incluso para las fechas anteriores a la introducción del calendario gregoriano.Los números de los años cuentan el número de años desde el año 1 a.C.,y no se saltan el cero como lo hacen los años gregorianos tradicionales;por ejemplo,el número del año -37 representa el año gregoriano 38 a.C.</target>
        </trans-unit>
        <trans-unit id="de42e995f53f7e732b05aa461dce2010e145fa00" translate="yes" xml:space="preserve">
          <source>Call &lt;var&gt;button&lt;/var&gt;&amp;rsquo;s &lt;code&gt;action&lt;/code&gt; property (i.e., invoke the function that is the value of that property, passing it the single argument &lt;var&gt;button&lt;/var&gt;). If &lt;var&gt;use-mouse-action&lt;/var&gt; is non-&lt;code&gt;nil&lt;/code&gt;, try to invoke the button&amp;rsquo;s &lt;code&gt;mouse-action&lt;/code&gt; property instead of &lt;code&gt;action&lt;/code&gt;; if the button has no &lt;code&gt;mouse-action&lt;/code&gt; property, use &lt;code&gt;action&lt;/code&gt; as normal. If the &lt;code&gt;button-data&lt;/code&gt; property is present in &lt;var&gt;button&lt;/var&gt;, use that as the argument for the &lt;code&gt;action&lt;/code&gt; function instead of &lt;var&gt;button&lt;/var&gt;.</source>
          <target state="translated">Call &lt;var&gt;button&lt;/var&gt; &amp;rsquo;s &lt;code&gt;action&lt;/code&gt; property (i.e., invoke the function that is the value of that property, passing it the single argument &lt;var&gt;button&lt;/var&gt; ). If &lt;var&gt;use-mouse-action&lt;/var&gt; is non- &lt;code&gt;nil&lt;/code&gt; , try to invoke the button&amp;rsquo;s &lt;code&gt;mouse-action&lt;/code&gt; property instead of &lt;code&gt;action&lt;/code&gt; ; if the button has no &lt;code&gt;mouse-action&lt;/code&gt; property, use &lt;code&gt;action&lt;/code&gt; as normal. If the &lt;code&gt;button-data&lt;/code&gt; property is present in &lt;var&gt;button&lt;/var&gt; , use that as the argument for the &lt;code&gt;action&lt;/code&gt; function instead of &lt;var&gt;button&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="f7e81e62a0bc26dffa21e5943c5b76d235ec9103" translate="yes" xml:space="preserve">
          <source>Call &lt;var&gt;function&lt;/var&gt; after the old function and only if the old function returned &lt;code&gt;nil&lt;/code&gt;. More specifically, the composition of the two functions behaves like:</source>
          <target state="translated">Call &lt;var&gt;function&lt;/var&gt; after the old function and only if the old function returned &lt;code&gt;nil&lt;/code&gt; . More specifically, the composition of the two functions behaves like:</target>
        </trans-unit>
        <trans-unit id="15f89cad7964a4c4ff36312550efc21a307afff6" translate="yes" xml:space="preserve">
          <source>Call &lt;var&gt;function&lt;/var&gt; after the old function and only if the old function returned non-&lt;code&gt;nil&lt;/code&gt;. Both functions receive the same arguments, and the return value of the composition is the return value of &lt;var&gt;function&lt;/var&gt;. More specifically, the composition of the two functions behaves like:</source>
          <target state="translated">Call &lt;var&gt;function&lt;/var&gt; after the old function and only if the old function returned non- &lt;code&gt;nil&lt;/code&gt; . Both functions receive the same arguments, and the return value of the composition is the return value of &lt;var&gt;function&lt;/var&gt; . More specifically, the composition of the two functions behaves like:</target>
        </trans-unit>
        <trans-unit id="11b9ee6402d0942f809e7bacb34c109edce11c8a" translate="yes" xml:space="preserve">
          <source>Call &lt;var&gt;function&lt;/var&gt; after the old function. Both functions receive the same arguments, and the return value of the composition is the return value of the old function. More specifically, the composition of the two functions behaves like:</source>
          <target state="translated">Call &lt;var&gt;function&lt;/var&gt; after the old function. Both functions receive the same arguments, and the return value of the composition is the return value of the old function. More specifically, the composition of the two functions behaves like:</target>
        </trans-unit>
        <trans-unit id="dd45f95fef4e571698af292b7cdd92bffd8265e2" translate="yes" xml:space="preserve">
          <source>Call &lt;var&gt;function&lt;/var&gt; before the old function and don&amp;rsquo;t call the old function if &lt;var&gt;function&lt;/var&gt; returns &lt;code&gt;nil&lt;/code&gt;. Both functions receive the same arguments, and the return value of the composition is the return value of the old function. More specifically, the composition of the two functions behaves like:</source>
          <target state="translated">Call &lt;var&gt;function&lt;/var&gt; before the old function and don&amp;rsquo;t call the old function if &lt;var&gt;function&lt;/var&gt; returns &lt;code&gt;nil&lt;/code&gt; . Both functions receive the same arguments, and the return value of the composition is the return value of the old function. More specifically, the composition of the two functions behaves like:</target>
        </trans-unit>
        <trans-unit id="e177089f3e47a75e445f46873115fbe430078933" translate="yes" xml:space="preserve">
          <source>Call &lt;var&gt;function&lt;/var&gt; before the old function and only call the old function if &lt;var&gt;function&lt;/var&gt; returns &lt;code&gt;nil&lt;/code&gt;. More specifically, the composition of the two functions behaves like:</source>
          <target state="translated">Call &lt;var&gt;function&lt;/var&gt; before the old function and only call the old function if &lt;var&gt;function&lt;/var&gt; returns &lt;code&gt;nil&lt;/code&gt; . More specifically, the composition of the two functions behaves like:</target>
        </trans-unit>
        <trans-unit id="5a61495f3b296416244dbb85cc0933049276d9d5" translate="yes" xml:space="preserve">
          <source>Call &lt;var&gt;function&lt;/var&gt; before the old function. Both functions receive the same arguments, and the return value of the composition is the return value of the old function. More specifically, the composition of the two functions behaves like:</source>
          <target state="translated">Call &lt;var&gt;function&lt;/var&gt; before the old function. Both functions receive the same arguments, and the return value of the composition is the return value of the old function. More specifically, the composition of the two functions behaves like:</target>
        </trans-unit>
        <trans-unit id="f4cc04f8d665904345400ebc070afe6901974fc2" translate="yes" xml:space="preserve">
          <source>Call &lt;var&gt;function&lt;/var&gt; first and use the result (which should be a list) as the new arguments to pass to the old function. More specifically, the composition of the two functions behaves like:</source>
          <target state="translated">Call &lt;var&gt;function&lt;/var&gt; first and use the result (which should be a list) as the new arguments to pass to the old function. More specifically, the composition of the two functions behaves like:</target>
        </trans-unit>
        <trans-unit id="e77c6828a07ec693781d6efe3e57ff1a5a36a8c0" translate="yes" xml:space="preserve">
          <source>Call &lt;var&gt;function&lt;/var&gt; for characters in &lt;var&gt;charset&lt;/var&gt;. &lt;var&gt;function&lt;/var&gt; is called with two arguments. The first one is a cons cell &lt;code&gt;(&lt;var&gt;from&lt;/var&gt; .  &lt;var&gt;to&lt;/var&gt;)&lt;/code&gt;, where &lt;var&gt;from&lt;/var&gt; and &lt;var&gt;to&lt;/var&gt; indicate a range of characters contained in charset. The second argument passed to &lt;var&gt;function&lt;/var&gt; is &lt;var&gt;arg&lt;/var&gt;.</source>
          <target state="translated">Call &lt;var&gt;function&lt;/var&gt; for characters in &lt;var&gt;charset&lt;/var&gt; . &lt;var&gt;function&lt;/var&gt; is called with two arguments. The first one is a cons cell &lt;code&gt;(&lt;var&gt;from&lt;/var&gt; . &lt;var&gt;to&lt;/var&gt;)&lt;/code&gt; , where &lt;var&gt;from&lt;/var&gt; and &lt;var&gt;to&lt;/var&gt; indicate a range of characters contained in charset. The second argument passed to &lt;var&gt;function&lt;/var&gt; is &lt;var&gt;arg&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="fae0114c2201a949abeef4209c12323f1f0e324b" translate="yes" xml:space="preserve">
          <source>Call &lt;var&gt;function&lt;/var&gt; for every piece of advice that was added to the named function &lt;var&gt;symbol&lt;/var&gt;. &lt;var&gt;function&lt;/var&gt; is called with two arguments: the advice function and its properties.</source>
          <target state="translated">Call &lt;var&gt;function&lt;/var&gt; for every piece of advice that was added to the named function &lt;var&gt;symbol&lt;/var&gt; . &lt;var&gt;function&lt;/var&gt; is called with two arguments: the advice function and its properties.</target>
        </trans-unit>
        <trans-unit id="567ee80f88e9b6fcfc133e840199c180bb8db2d1" translate="yes" xml:space="preserve">
          <source>Call &lt;var&gt;function&lt;/var&gt; instead of the old function, but provide the old function as an extra argument to &lt;var&gt;function&lt;/var&gt;. This is the most flexible composition. For example, it lets you call the old function with different arguments, or many times, or within a let-binding, or you can sometimes delegate the work to the old function and sometimes override it completely. More specifically, the composition of the two functions behaves like:</source>
          <target state="translated">Call &lt;var&gt;function&lt;/var&gt; instead of the old function, but provide the old function as an extra argument to &lt;var&gt;function&lt;/var&gt; . This is the most flexible composition. For example, it lets you call the old function with different arguments, or many times, or within a let-binding, or you can sometimes delegate the work to the old function and sometimes override it completely. More specifically, the composition of the two functions behaves like:</target>
        </trans-unit>
        <trans-unit id="d1a7d71503696cf38410fc1322aa1095b06486f0" translate="yes" xml:space="preserve">
          <source>Call the anonymous function with one argument, &lt;var&gt;expval&lt;/var&gt; (see &lt;a href=&quot;lambda-expressions#Lambda-Expressions&quot;&gt;Lambda Expressions&lt;/a&gt;).</source>
          <target state="translated">Call the anonymous function with one argument, &lt;var&gt;expval&lt;/var&gt; (see &lt;a href=&quot;lambda-expressions#Lambda-Expressions&quot;&gt;Lambda Expressions&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="7476fa450c9cf57b9d41330c2668e502b573753f" translate="yes" xml:space="preserve">
          <source>Call the function (the first element of the function call) with &lt;var&gt;n&lt;/var&gt; arguments (the other elements) and an additional &lt;var&gt;n&lt;/var&gt;+1-th argument that is &lt;var&gt;expval&lt;/var&gt;.</source>
          <target state="translated">Call the function (the first element of the function call) with &lt;var&gt;n&lt;/var&gt; arguments (the other elements) and an additional &lt;var&gt;n&lt;/var&gt; +1-th argument that is &lt;var&gt;expval&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="cce8159a07f7ca94dd3aede2fb066a149472cac4" translate="yes" xml:space="preserve">
          <source>Call the function &lt;var&gt;f&lt;/var&gt; for every piece of advice that was added to &lt;var&gt;function-def&lt;/var&gt;. &lt;var&gt;f&lt;/var&gt; is called with two arguments: the advice function and its properties.</source>
          <target state="translated">Call the function &lt;var&gt;f&lt;/var&gt; for every piece of advice that was added to &lt;var&gt;function-def&lt;/var&gt; . &lt;var&gt;f&lt;/var&gt; is called with two arguments: the advice function and its properties.</target>
        </trans-unit>
        <trans-unit id="f7bee42ac2cfe40e42c5b3d7a4488a39eab8279c" translate="yes" xml:space="preserve">
          <source>Call the named function with one argument, &lt;var&gt;expval&lt;/var&gt;.</source>
          <target state="translated">Call the named function with one argument, &lt;var&gt;expval&lt;/var&gt; .</target>
        </trans-unit>
        <trans-unit id="c5bef85c072afa5ae3f80c86a71f855f8cba1aac" translate="yes" xml:space="preserve">
          <source>Call the old function first and pass the result to &lt;var&gt;function&lt;/var&gt;. More specifically, the composition of the two functions behaves like:</source>
          <target state="translated">Call the old function first and pass the result to &lt;var&gt;function&lt;/var&gt; . More specifically, the composition of the two functions behaves like:</target>
        </trans-unit>
        <trans-unit id="6afd776be5db841a6dc68b637bb932e7dfca56a9" translate="yes" xml:space="preserve">
          <source>Call this command after using &lt;code&gt;smie-config-guess&lt;/code&gt;, to save your settings for future sessions.</source>
          <target state="translated">Call this command after using &lt;code&gt;smie-config-guess&lt;/code&gt; , to save your settings for future sessions.</target>
        </trans-unit>
        <trans-unit id="8506342e0260dd8016e03d646af20a2c9018a199" translate="yes" xml:space="preserve">
          <source>Call this function instead of using a literal value (usually, zero) of the column number for indenting top-level program constructs. The function&amp;rsquo;s value is the column number to use for top-level constructs. When no superior mode is in effect, this function returns zero.</source>
          <target state="translated">Call this function instead of using a literal value (usually, zero) of the column number for indenting top-level program constructs. The function&amp;rsquo;s value is the column number to use for top-level constructs. When no superior mode is in effect, this function returns zero.</target>
        </trans-unit>
        <trans-unit id="98d6a6a2c4f2e6e0e83bdfbcc0730217802507ab" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;concat&lt;/code&gt; converts the list to a string so you can see its contents more clearly.</source>
          <target state="translated">Calling &lt;code&gt;concat&lt;/code&gt; converts the list to a string so you can see its contents more clearly.</target>
        </trans-unit>
        <trans-unit id="aa38eb2554dbe5c7a33e4b709e55fe4dded0e886" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;smie-setup&lt;/code&gt; is also sufficient to make</source>
          <target state="translated">Calling &lt;code&gt;smie-setup&lt;/code&gt; is also sufficient to make</target>
        </trans-unit>
        <trans-unit id="511ba4c0240efeaabfee01e6c6a8c90f51297283" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;substitute-in-file-name&lt;/code&gt; on output produced by &lt;code&gt;substitute-in-file-name&lt;/code&gt; tends to give incorrect results. For instance, use of &amp;lsquo;</source>
          <target state="translated">Calling &lt;code&gt;substitute-in-file-name&lt;/code&gt; on output produced by &lt;code&gt;substitute-in-file-name&lt;/code&gt; tends to give incorrect results. For instance, use of &amp;lsquo;</target>
        </trans-unit>
        <trans-unit id="9ac3d844132b984a3eb47bf8dcb79e4bbd848878" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;window-preserve-size&lt;/code&gt; (see &lt;a href=&quot;preserving-window-sizes#Preserving-Window-Sizes&quot;&gt;Preserving Window Sizes&lt;/a&gt;) will try to keep the size of the argument window unchanged when popping up a new window. You have to make sure that another window in the same combination can be shrunk instead, though.</source>
          <target state="translated">Calling &lt;code&gt;window-preserve-size&lt;/code&gt; (see &lt;a href=&quot;preserving-window-sizes#Preserving-Window-Sizes&quot;&gt;Preserving Window Sizes&lt;/a&gt;) will try to keep the size of the argument window unchanged when popping up a new window. You have to make sure that another window in the same combination can be shrunk instead, though.</target>
        </trans-unit>
        <trans-unit id="2f2b1f5f71d89e54c8503e6cf93a04999cc1b58a" translate="yes" xml:space="preserve">
          <source>Calling Functions</source>
          <target state="translated">Funciones de llamada</target>
        </trans-unit>
        <trans-unit id="504886a8ce3a7ab2de140289b5cdac7f6b388ff2" translate="yes" xml:space="preserve">
          <source>Calling a command, so that it will read arguments.</source>
          <target state="translated">Llamando a un comando,para que lea los argumentos.</target>
        </trans-unit>
        <trans-unit id="a961505da75e77209eaa6b59e8f61a3dffb36635" translate="yes" xml:space="preserve">
          <source>Calling the major mode command twice in direct succession should not fail and should do the same thing as calling the command only once. In other words, the major mode command should be idempotent.</source>
          <target state="translated">Llamar al comando de modo mayor dos veces en sucesión directa no debería fallar y debería hacer lo mismo que llamar al comando sólo una vez.En otras palabras,el comando de modo mayor debe ser idempotente.</target>
        </trans-unit>
        <trans-unit id="1e6c66b20a23a26c0a918b56cec3c86770820c22" translate="yes" xml:space="preserve">
          <source>Calling this function explicitly is useful for splitting the effects of a command into more than one unit. For example, &lt;code&gt;query-replace&lt;/code&gt; calls &lt;code&gt;undo-boundary&lt;/code&gt; after each replacement, so that the user can undo individual replacements one by one.</source>
          <target state="translated">Calling this function explicitly is useful for splitting the effects of a command into more than one unit. For example, &lt;code&gt;query-replace&lt;/code&gt; calls &lt;code&gt;undo-boundary&lt;/code&gt; after each replacement, so that the user can undo individual replacements one by one.</target>
        </trans-unit>
        <trans-unit id="8a5bda3d28236066116676706c47de1d0f0328a6" translate="yes" xml:space="preserve">
          <source>Calling this function is sufficient to make commands such as &lt;code&gt;forward-sexp&lt;/code&gt;, &lt;code&gt;backward-sexp&lt;/code&gt;, and &lt;code&gt;transpose-sexps&lt;/code&gt; be able to properly handle structural elements other than just the paired parentheses already handled by syntax tables. For example, if the provided grammar is precise enough, &lt;code&gt;transpose-sexps&lt;/code&gt; can correctly transpose the two arguments of a &lt;code&gt;+&lt;/code&gt; operator, taking into account the precedence rules of the language.</source>
          <target state="translated">Calling this function is sufficient to make commands such as &lt;code&gt;forward-sexp&lt;/code&gt; , &lt;code&gt;backward-sexp&lt;/code&gt; , and &lt;code&gt;transpose-sexps&lt;/code&gt; be able to properly handle structural elements other than just the paired parentheses already handled by syntax tables. For example, if the provided grammar is precise enough, &lt;code&gt;transpose-sexps&lt;/code&gt; can correctly transpose the two arguments of a &lt;code&gt;+&lt;/code&gt; operator, taking into account the precedence rules of the language.</target>
        </trans-unit>
        <trans-unit id="e5b34fd5a2e36cd4eafb9c4fcecc3d11f251e2e3" translate="yes" xml:space="preserve">
          <source>Cannot determine image type</source>
          <target state="translated">No se puede determinar el tipo de imagen</target>
        </trans-unit>
        <trans-unit id="c1186dd76154d57de923217a8dd3d16441be124a" translate="yes" xml:space="preserve">
          <source>Cannot open load file &lt;var&gt;filename&lt;/var&gt;</source>
          <target state="translated">Cannot open load file &lt;var&gt;filename&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="311dff8ce71dc0b4b0666e7280ad010d93e7918a" translate="yes" xml:space="preserve">
          <source>Capture groups</source>
          <target state="translated">Grupos de captura</target>
        </trans-unit>
        <trans-unit id="5fe52af8b2d198c370691f5d3a5caec003b55dcc" translate="yes" xml:space="preserve">
          <source>Case Changes</source>
          <target state="translated">Cambios en el caso</target>
        </trans-unit>
        <trans-unit id="ff5641735ee7c07e5eed18f7107abe940e61dcc3" translate="yes" xml:space="preserve">
          <source>Case Conversion in Lisp</source>
          <target state="translated">Conversión de casos en Lisp</target>
        </trans-unit>
        <trans-unit id="ee05e5edf5d51051d5e8ea58e5fb1140b748c002" translate="yes" xml:space="preserve">
          <source>Case conversion functions.</source>
          <target state="translated">Funciones de conversión de casos.</target>
        </trans-unit>
        <trans-unit id="4fc7e1d52f22796c47c268de900d6e7082017f5a" translate="yes" xml:space="preserve">
          <source>Case conversion of parts of the buffer.</source>
          <target state="translated">Conversión de partes de la memoria intermedia.</target>
        </trans-unit>
        <trans-unit id="60f886006f4b5be396aef39220ae04232401704b" translate="yes" xml:space="preserve">
          <source>Case tables (see &lt;a href=&quot;case-tables#Case-Tables&quot;&gt;Case Tables&lt;/a&gt;).</source>
          <target state="translated">Case tables (see &lt;a href=&quot;case-tables#Case-Tables&quot;&gt;Case Tables&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="760a611d6b77c0b6b7da5b461fa97629808e415a" translate="yes" xml:space="preserve">
          <source>Case-independent or case-significant searching.</source>
          <target state="translated">Búsqueda independiente de casos o de casos significativos.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
