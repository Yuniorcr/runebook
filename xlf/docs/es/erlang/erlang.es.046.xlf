<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="erlang">
    <body>
      <group id="erlang">
        <trans-unit id="1d367f0394e334cbcef285f586eb6654ee9a4318" translate="yes" xml:space="preserve">
          <source>When you have written one or more applications, you might want to create a complete system with these applications and a subset of the Erlang/OTP applications. This is called a &lt;strong&gt;release&lt;/strong&gt;.</source>
          <target state="translated">Cuando haya escrito una o m&amp;aacute;s aplicaciones, es posible que desee crear un sistema completo con estas aplicaciones y un subconjunto de las aplicaciones Erlang / OTP. A esto se le llama &lt;strong&gt;liberaci&amp;oacute;n&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="654964da7073e7c0e406ea7aa179e002a5b8ce21" translate="yes" xml:space="preserve">
          <source>When you know that your list is only one level deep, you can use &lt;code&gt;lists:append/1&lt;/code&gt;.</source>
          <target state="translated">Cuando sepa que su lista tiene solo un nivel de profundidad, puede usar &lt;code&gt;lists:append/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="02bb765c4c067cc8ce440c6583ae9e207c512d37" translate="yes" xml:space="preserve">
          <source>When you retrieve a stored string or binary value from the registry, the registry maintains a pointer to the object and you are passed a copy of that pointer. You should never free an object retrieved in this manner because when the registry later attempts to free it, a runtime error occurs that likely causes the C-node to crash.</source>
          <target state="translated">Cuando se recupera una cadena almacenada o un valor binario del registro,éste mantiene un puntero al objeto y se le pasa una copia de ese puntero.Nunca debe liberar un objeto recuperado de esta manera porque cuando el registro intenta liberarlo posteriormente,se produce un error en tiempo de ejecución que probablemente hace que el nodo C se bloquee.</target>
        </trans-unit>
        <trans-unit id="5626fd2395b6a4085f46c5ac192af7d4f4d8e554" translate="yes" xml:space="preserve">
          <source>When you run the &lt;code&gt;et_display_demo:test().&lt;/code&gt; function in the example above, the &lt;code&gt;Viewer&lt;/code&gt; window will look like this:</source>
          <target state="translated">Cuando ejecuta &lt;code&gt;et_display_demo:test().&lt;/code&gt; funci&amp;oacute;n en el ejemplo anterior, la ventana del &lt;code&gt;Viewer&lt;/code&gt; se ver&amp;aacute; as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="605aa269180a77759984c8901f4c82eed551f821" translate="yes" xml:space="preserve">
          <source>When you run the &lt;code&gt;et_trace_demo:test()&lt;/code&gt; function above, the &lt;code&gt;Viewer&lt;/code&gt; window will look like this screenshot:</source>
          <target state="translated">Cuando ejecuta la funci&amp;oacute;n &lt;code&gt;et_trace_demo:test()&lt;/code&gt; anterior, la ventana del &lt;code&gt;Viewer&lt;/code&gt; se ver&amp;aacute; como esta captura de pantalla:</target>
        </trans-unit>
        <trans-unit id="960b45a93de3d4904386ce3821892195b9e7ab8f" translate="yes" xml:space="preserve">
          <source>When you start an Erlang system that is going to talk to other Erlang systems, you must give it a name, for example:</source>
          <target state="translated">Cuando se inicia un sistema Erlang que va a hablar con otros sistemas Erlang,hay que darle un nombre,por ejemplo:</target>
        </trans-unit>
        <trans-unit id="8df6d7cad16972ed6b617cfa7ca16f92b6efea50" translate="yes" xml:space="preserve">
          <source>When you start your first bash shell, you will get an awful prompt. You might also have a &lt;code&gt;PATH&lt;/code&gt; environment variable that contains backslashes and such. Edit &lt;code&gt;$HOME/.profile&lt;/code&gt; and &lt;code&gt;$HOME/.bashrc&lt;/code&gt; to set fair prompts and a correct PATH. Also do an &lt;code&gt;export SHELL&lt;/code&gt; in &lt;code&gt;.profile&lt;/code&gt;. For some non-obvious reason the environment variable &lt;code&gt;$SHELL&lt;/code&gt; is not exported in bash. Also note that &lt;code&gt;.profile&lt;/code&gt; is run at login time and &lt;code&gt;.bashrc&lt;/code&gt; when sub shells are created. You'll need to explicitly source &lt;code&gt;.bashrc&lt;/code&gt; from &lt;code&gt;.profile&lt;/code&gt; if you want the commands there to be run at login time (like setting up aliases, shell functions and the like). You can for example do like this at the end of &lt;code&gt;.profile&lt;/code&gt;:</source>
          <target state="translated">Cuando inicie su primer shell bash, obtendr&amp;aacute; un aviso terrible. Tambi&amp;eacute;n puede tener una &lt;code&gt;PATH&lt;/code&gt; entorno PATH que contenga barras invertidas y dem&amp;aacute;s. Edite &lt;code&gt;$HOME/.profile&lt;/code&gt; y &lt;code&gt;$HOME/.bashrc&lt;/code&gt; para establecer indicaciones justas y una RUTA correcta. Tambi&amp;eacute;n realice una &lt;code&gt;export SHELL&lt;/code&gt; en &lt;code&gt;.profile&lt;/code&gt; . Por alguna raz&amp;oacute;n no obvia, la variable de entorno &lt;code&gt;$SHELL&lt;/code&gt; no se exporta en bash. Tambi&amp;eacute;n tenga en cuenta que &lt;code&gt;.profile&lt;/code&gt; se ejecuta en el momento del inicio de sesi&amp;oacute;n y &lt;code&gt;.bashrc&lt;/code&gt; cuando se crean sub-shells. Deber&amp;aacute; obtener expl&amp;iacute;citamente &lt;code&gt;.bashrc&lt;/code&gt; de &lt;code&gt;.profile&lt;/code&gt; si desea que los comandos se ejecuten en el momento del inicio de sesi&amp;oacute;n (como configurar alias, funciones de shell y similares). Por ejemplo, puede hacer esto al final de &lt;code&gt;.profile&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9bcd89294e6837856dd41f8e8e8f562ae0be927a" translate="yes" xml:space="preserve">
          <source>When you use &lt;code&gt;&lt;a href=&quot;ei_connect&quot;&gt;ei_connect&lt;/a&gt;&lt;/code&gt; to connect to an Erlang node, a connection is first made to &lt;code&gt;epmd&lt;/code&gt; and, if the node is known, a connection is then made to the Erlang node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bbc912db27df1bdd5b6c3cc6fb0b420ae0c2a51" translate="yes" xml:space="preserve">
          <source>When you use &lt;code&gt;&lt;a href=&quot;erl_connect&quot;&gt;erl_connect&lt;/a&gt;&lt;/code&gt; to connect to an Erlang node, a connection is first made to &lt;code&gt;epmd&lt;/code&gt; and, if the node is known, a connection is then made to the Erlang node.</source>
          <target state="translated">Cuando usa &lt;code&gt;&lt;a href=&quot;erl_connect&quot;&gt;erl_connect&lt;/a&gt;&lt;/code&gt; para conectarse a un nodo Erlang, primero se establece una conexi&amp;oacute;n con &lt;code&gt;epmd&lt;/code&gt; y, si se conoce el nodo, se establece una conexi&amp;oacute;n con el nodo Erlang.</target>
        </trans-unit>
        <trans-unit id="9186fbf7f3fc276c1864ff1a046c155293e1a73d" translate="yes" xml:space="preserve">
          <source>When you've followed the instructions there, you also need to install these packages: autoconf, make, perl, and tar. You do so by running the following in the msys console:</source>
          <target state="translated">Cuando hayas seguido las instrucciones allí,también necesitas instalar estos paquetes:autoconf,make,perl y tar.Lo haces ejecutando lo siguiente en la consola de msys:</target>
        </trans-unit>
        <trans-unit id="b5bd0acac37a6b1a7c503370b5d247b256244684" translate="yes" xml:space="preserve">
          <source>Whenever &lt;code&gt;mod:func(...)&lt;/code&gt; is called after this, token &lt;code&gt;seq_trace&lt;/code&gt; is set on the executing process.</source>
          <target state="translated">Siempre que se llame a &lt;code&gt;mod:func(...)&lt;/code&gt; despu&amp;eacute;s de esto, el token &lt;code&gt;seq_trace&lt;/code&gt; se establece en el proceso de ejecuci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d72b69344dfa59a6a3f516c3fd6fb4fed315938a" translate="yes" xml:space="preserve">
          <source>Whenever a &lt;code&gt;gen_server&lt;/code&gt; process is started using &lt;code&gt;&lt;a href=&quot;#start-3&quot;&gt;start/3,4&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#start_link-3&quot;&gt;start_link/3,4&lt;/a&gt;&lt;/code&gt;, this function is called by the new process to initialize.</source>
          <target state="translated">Siempre que se &lt;code&gt;gen_server&lt;/code&gt; un proceso gen_server usando &lt;code&gt;&lt;a href=&quot;#start-3&quot;&gt;start/3,4&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;#start_link-3&quot;&gt;start_link/3,4&lt;/a&gt;&lt;/code&gt; , el nuevo proceso llama a esta funci&amp;oacute;n para inicializar.</target>
        </trans-unit>
        <trans-unit id="703a823679ce6d743c0e4e9b1f08d1c8c28bc140" translate="yes" xml:space="preserve">
          <source>Whenever a &lt;code&gt;gen_server&lt;/code&gt; process is started using &lt;code&gt;&lt;a href=&quot;#start-3&quot;&gt;start/3,4&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#start_monitor-3&quot;&gt;start_monitor/3,4&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;#start_link-3&quot;&gt;start_link/3,4&lt;/a&gt;&lt;/code&gt;, this function is called by the new process to initialize.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4636ebe5538e407f431af7436aab013abc47a599" translate="yes" xml:space="preserve">
          <source>Whenever a &lt;code&gt;gen_server&lt;/code&gt; process receives a request sent using &lt;code&gt;&lt;a href=&quot;#call-2&quot;&gt;call/2,3&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#multi_call-2&quot;&gt;multi_call/2,3,4&lt;/a&gt;&lt;/code&gt;, this function is called to handle the request.</source>
          <target state="translated">Siempre que un proceso &lt;code&gt;gen_server&lt;/code&gt; recibe una solicitud enviada usando &lt;code&gt;&lt;a href=&quot;#call-2&quot;&gt;call/2,3&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;#multi_call-2&quot;&gt;multi_call/2,3,4&lt;/a&gt;&lt;/code&gt; , se llama a esta funci&amp;oacute;n para manejar la solicitud.</target>
        </trans-unit>
        <trans-unit id="8246b3f7ddedcfbbf57cabb4f3ba4a48febfdd74" translate="yes" xml:space="preserve">
          <source>Whenever a &lt;code&gt;gen_server&lt;/code&gt; process receives a request sent using &lt;code&gt;&lt;a href=&quot;#cast-2&quot;&gt;cast/2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#abcast-2&quot;&gt;abcast/2,3&lt;/a&gt;&lt;/code&gt;, this function is called to handle the request.</source>
          <target state="translated">Siempre que un proceso &lt;code&gt;gen_server&lt;/code&gt; recibe una solicitud enviada usando &lt;code&gt;&lt;a href=&quot;#cast-2&quot;&gt;cast/2&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;#abcast-2&quot;&gt;abcast/2,3&lt;/a&gt;&lt;/code&gt; , se llama a esta funci&amp;oacute;n para manejar la solicitud.</target>
        </trans-unit>
        <trans-unit id="59d5a5416d0ba531e35225680d4d972654eaf438" translate="yes" xml:space="preserve">
          <source>Whenever a &lt;code&gt;gen_statem&lt;/code&gt; is started using &lt;code&gt;&lt;a href=&quot;#start_link-3&quot;&gt;start_link/3,4&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#start-3&quot;&gt;start/3,4&lt;/a&gt;&lt;/code&gt;, this function is called by the new process to initialize the implementation state and server data.</source>
          <target state="translated">Siempre que se inicia un &lt;code&gt;gen_statem&lt;/code&gt; usando &lt;code&gt;&lt;a href=&quot;#start_link-3&quot;&gt;start_link/3,4&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;#start-3&quot;&gt;start/3,4&lt;/a&gt;&lt;/code&gt; , el nuevo proceso llama a esta funci&amp;oacute;n para inicializar el estado de implementaci&amp;oacute;n y los datos del servidor.</target>
        </trans-unit>
        <trans-unit id="c2067bcaacdf4bd47ec315830bb9e2f7df33a2d1" translate="yes" xml:space="preserve">
          <source>Whenever a &lt;code&gt;gen_statem&lt;/code&gt; is started using &lt;code&gt;&lt;a href=&quot;#start_link-3&quot;&gt;start_link/3,4&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#start_monitor-3&quot;&gt;start_monitor/3,4&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;#start-3&quot;&gt;start/3,4&lt;/a&gt;&lt;/code&gt;, this function is called by the new process to initialize the implementation state and server data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fbe0f5778a727d43412487be9078f75fff292b2" translate="yes" xml:space="preserve">
          <source>Whenever a &lt;code&gt;gen_statem&lt;/code&gt; receives an event from &lt;code&gt;&lt;a href=&quot;#call-2&quot;&gt;call/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#cast-2&quot;&gt;cast/2&lt;/a&gt;&lt;/code&gt;, or as a normal process message, one of these functions is called. If &lt;code&gt;&lt;a href=&quot;#type-callback_mode&quot;&gt;&lt;strong&gt;callback mode&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;state_functions&lt;/code&gt;, &lt;code&gt;Module:StateName/3&lt;/code&gt; is called, and if it is &lt;code&gt;handle_event_function&lt;/code&gt;, &lt;code&gt;Module:handle_event/4&lt;/code&gt; is called.</source>
          <target state="translated">Siempre que un &lt;code&gt;gen_statem&lt;/code&gt; recibe un evento de &lt;code&gt;&lt;a href=&quot;#call-2&quot;&gt;call/2&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#cast-2&quot;&gt;cast/2&lt;/a&gt;&lt;/code&gt; o como un mensaje de proceso normal, se llama a una de estas funciones. Si el &lt;code&gt;&lt;a href=&quot;#type-callback_mode&quot;&gt;&lt;strong&gt;callback mode&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; es &lt;code&gt;state_functions&lt;/code&gt; , se llama a &lt;code&gt;Module:StateName/3&lt;/code&gt; , y si es &lt;code&gt;handle_event_function&lt;/code&gt; , se llama a &lt;code&gt;Module:handle_event/4&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="060f352ef970eb18feed7d139ddbf0bd578e000a" translate="yes" xml:space="preserve">
          <source>Whenever a group is executed, if &lt;code&gt;init_per_group&lt;/code&gt; and &lt;code&gt;end_per_group&lt;/code&gt; do not exist in the suite, &lt;code&gt;Common Test&lt;/code&gt; calls dummy functions (with the same names) instead. Output generated by hook functions are saved to the log files for these dummies. For more information, see section &lt;code&gt;&lt;a href=&quot;ct_hooks_chapter#manipulating&quot;&gt;Manipulating Tests&lt;/a&gt;&lt;/code&gt; in section Common Test Hooks.</source>
          <target state="translated">Siempre que se ejecuta un grupo, si &lt;code&gt;init_per_group&lt;/code&gt; y &lt;code&gt;end_per_group&lt;/code&gt; no existen en la suite, &lt;code&gt;Common Test&lt;/code&gt; llama a funciones ficticias (con los mismos nombres) en su lugar. Los resultados generados por las funciones de enlace se guardan en los archivos de registro de estos maniqu&amp;iacute;es. Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte la secci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;ct_hooks_chapter#manipulating&quot;&gt;Manipulating Tests&lt;/a&gt;&lt;/code&gt; en la secci&amp;oacute;n Ganchos de prueba comunes.</target>
        </trans-unit>
        <trans-unit id="abdf13a8a96504ff3ed49fca4f7de802cf3577c0" translate="yes" xml:space="preserve">
          <source>Whenever a new event handler is added to an event manager, this function is called to initialize the event handler.</source>
          <target state="translated">Cada vez que se añade un nuevo gestor de eventos a un gestor de eventos,se llama a esta función para inicializar el gestor de eventos.</target>
        </trans-unit>
        <trans-unit id="badee53ec6214ee55106eb2666ae6e01689cd3f4" translate="yes" xml:space="preserve">
          <source>Whenever a supervisor bridge is started using &lt;code&gt;&lt;a href=&quot;#start_link-2&quot;&gt;start_link/2,3&lt;/a&gt;&lt;/code&gt;, this function is called by the new process to start the subsystem and initialize.</source>
          <target state="translated">Siempre que se inicia un puente supervisor utilizando &lt;code&gt;&lt;a href=&quot;#start_link-2&quot;&gt;start_link/2,3&lt;/a&gt;&lt;/code&gt; , el nuevo proceso llama a esta funci&amp;oacute;n para iniciar el subsistema e inicializarlo.</target>
        </trans-unit>
        <trans-unit id="ac9804b31553b68b86de8b8d607773807cff019f" translate="yes" xml:space="preserve">
          <source>Whenever a supervisor is started using &lt;code&gt;&lt;a href=&quot;#start_link-2&quot;&gt;start_link/2,3&lt;/a&gt;&lt;/code&gt;, this function is called by the new process to find out about restart strategy, maximum restart intensity, and child specifications.</source>
          <target state="translated">Siempre que se inicia un supervisor con &lt;code&gt;&lt;a href=&quot;#start_link-2&quot;&gt;start_link/2,3&lt;/a&gt;&lt;/code&gt; , el nuevo proceso llama a esta funci&amp;oacute;n para conocer la estrategia de reinicio, la intensidad m&amp;aacute;xima de reinicio y las especificaciones de los hijos.</target>
        </trans-unit>
        <trans-unit id="4b83efec02f8d41a6ae9c7e77ef60624db6e6a32" translate="yes" xml:space="preserve">
          <source>Whenever an &lt;strong id=&quot;ordering_function&quot;&gt;ordering function&lt;/strong&gt;&lt;code&gt;F&lt;/code&gt; is expected as argument, it is assumed that the following properties hold of &lt;code&gt;F&lt;/code&gt; for all x, y, and z:</source>
          <target state="translated">Siempre que una &lt;strong id=&quot;ordering_function&quot;&gt;funci&amp;oacute;n de pedido &lt;/strong&gt; &lt;code&gt;F&lt;/code&gt; se espera como argumento, se supone que las siguientes propiedades de &lt;code&gt;F&lt;/code&gt; para todo x, y, y z:</target>
        </trans-unit>
        <trans-unit id="f1074a783fc4777d27f52c523982cfb1f94fba10" translate="yes" xml:space="preserve">
          <source>Whenever an event handler is deleted from an event manager, this function is called. It is to be the opposite of &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt; and do any necessary cleaning up.</source>
          <target state="translated">Siempre que se elimina un controlador de eventos de un administrador de eventos, se llama a esta funci&amp;oacute;n. Debe ser lo opuesto a &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt; y hacer cualquier limpieza necesaria.</target>
        </trans-unit>
        <trans-unit id="068fc6ee5a1c4d1d9b9294ae0200a38ff117c977" translate="yes" xml:space="preserve">
          <source>Whenever an event manager receives a request sent using &lt;code&gt;&lt;a href=&quot;#call-3&quot;&gt;call/3,4&lt;/a&gt;&lt;/code&gt;, this function is called for the specified event handler to handle the request.</source>
          <target state="translated">Siempre que un administrador de eventos recibe una solicitud enviada mediante la &lt;code&gt;&lt;a href=&quot;#call-3&quot;&gt;call/3,4&lt;/a&gt;&lt;/code&gt; , se llama a esta funci&amp;oacute;n para que el controlador de eventos especificado maneje la solicitud.</target>
        </trans-unit>
        <trans-unit id="5423fb1332b31975745a6de7e4d9bc58090c6de6" translate="yes" xml:space="preserve">
          <source>Whenever an event manager receives an event sent using &lt;code&gt;&lt;a href=&quot;#notify-2&quot;&gt;notify/2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#sync_notify-2&quot;&gt;sync_notify/2&lt;/a&gt;&lt;/code&gt;, this function is called for each installed event handler to handle the event.</source>
          <target state="translated">Siempre que un administrador de eventos recibe un evento enviado usando &lt;code&gt;&lt;a href=&quot;#notify-2&quot;&gt;notify/2&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;#sync_notify-2&quot;&gt;sync_notify/2&lt;/a&gt;&lt;/code&gt; , esta funci&amp;oacute;n es llamada para cada controlador de eventos instalado para manejar el evento.</target>
        </trans-unit>
        <trans-unit id="4351f2a3b168494b69e9b1be98a4b38f8367e952" translate="yes" xml:space="preserve">
          <source>Whenever option &lt;code&gt;extended_info&lt;/code&gt; is used, it results in a file not readable by versions of ETS before that in STDLIB 1.15.1</source>
          <target state="translated">Siempre que se utiliza la opci&amp;oacute;n &lt;code&gt;extended_info&lt;/code&gt; , da como resultado un archivo no legible por versiones de ETS anteriores al de STDLIB 1.15.1</target>
        </trans-unit>
        <trans-unit id="40a517195424f6c59533102727aaaf80a5a6a9c4" translate="yes" xml:space="preserve">
          <source>Whenever the application begins a new and demanding Mnesia task, or if it enters a new interesting phase in its execution, it can be a good idea to use &lt;code&gt;mnesia:report_event/1&lt;/code&gt;. &lt;code&gt;Event&lt;/code&gt; can be any term and generates a &lt;code&gt;{mnesia_user, Event}&lt;/code&gt; event for any processes that subscribe to Mnesia system events.</source>
          <target state="translated">Siempre que la aplicaci&amp;oacute;n inicie una nueva y exigente tarea de Mnesia, o si entra en una nueva fase interesante en su ejecuci&amp;oacute;n, puede ser una buena idea utilizar &lt;code&gt;mnesia:report_event/1&lt;/code&gt; . &lt;code&gt;Event&lt;/code&gt; puede ser cualquier t&amp;eacute;rmino y genera un &lt;code&gt;{mnesia_user, Event}&lt;/code&gt; para cualquier proceso que se suscriba a los eventos del sistema Mnesia.</target>
        </trans-unit>
        <trans-unit id="c1b3e73b65bf489cc2059c0d5cb3b8c01636a2e4" translate="yes" xml:space="preserve">
          <source>Whenever the function returns &lt;code&gt;false&lt;/code&gt; (either when a suspend would occur or when &lt;code&gt;noconnect&lt;/code&gt; was specified and the node was not already connected), the message is guaranteed &lt;strong&gt;not&lt;/strong&gt; to have been sent.</source>
          <target state="translated">Siempre que la funci&amp;oacute;n devuelva &lt;code&gt;false&lt;/code&gt; (ya sea cuando se producir&amp;iacute;a una suspensi&amp;oacute;n o cuando &lt;code&gt;noconnect&lt;/code&gt; se especific&amp;oacute; ninguna conexi&amp;oacute;n y el nodo no estaba ya conectado), se garantiza que el mensaje &lt;strong&gt;no&lt;/strong&gt; se ha enviado.</target>
        </trans-unit>
        <trans-unit id="fce4fadb484acf0c6b8fb4789093f772a55d5b64" translate="yes" xml:space="preserve">
          <source>Whenever we receive a button event we start an event time-out of 30 seconds, and if we get an &lt;strong&gt;event type&lt;/strong&gt; of &lt;code&gt;timeout&lt;/code&gt; we reset the remaining code sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1dadcfbaebba3928e790a14ae2ce1daeab89f8a" translate="yes" xml:space="preserve">
          <source>Whenever we receive a button event we start an event time-out of 30 seconds, and if we get an event type &lt;code&gt;timeout&lt;/code&gt; we reset the remaining code sequence.</source>
          <target state="translated">Siempre que recibimos un evento de bot&amp;oacute;n, iniciamos un tiempo de espera de evento de 30 segundos, y si obtenemos un &lt;code&gt;timeout&lt;/code&gt; tipo de evento , restablecemos la secuencia de c&amp;oacute;digo restante.</target>
        </trans-unit>
        <trans-unit id="f11e733d6957530218fa0c33e9b080d6c38678e6" translate="yes" xml:space="preserve">
          <source>Whenever you want to match out a number of elements in a sequence (zero or more) rather than a fixed set of elements, you need to use a glob. For example:</source>
          <target state="translated">Siempre que se quiera emparejar un número de elementos en una secuencia (cero o más)en lugar de un conjunto fijo de elementos,es necesario utilizar un globo.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="2d8517da58ab05b8c0b03e7088b8e296b4ae1c0f" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&amp;lt;ReleaseDir&amp;gt;&lt;/code&gt; is</source>
          <target state="translated">Donde &lt;code&gt;&amp;lt;ReleaseDir&amp;gt;&lt;/code&gt; es</target>
        </trans-unit>
        <trans-unit id="6f3a961a4b885d1468059606ee74b25cafa51c46" translate="yes" xml:space="preserve">
          <source>Where E is the public exponent and N is public modulus.</source>
          <target state="translated">Donde E es el exponente público y N es el módulo público.</target>
        </trans-unit>
        <trans-unit id="6315ae9d56fd5c3244540a0609f0a47437fa8978" translate="yes" xml:space="preserve">
          <source>Where E is the public exponent, N is public modulus and D is the private exponent. The longer key format contains redundant information that will make the calculation faster. P1 and P2 are first and second prime factors. E1 and E2 are first and second exponents. C is the CRT coefficient. The terminology is taken from &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc3447.txt&quot;&gt; RFC 3447&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a7b7c13ae9c93fab8ce3de18c3783c30f1e1451" translate="yes" xml:space="preserve">
          <source>Where E is the public exponent, N is public modulus and D is the private exponent. The longer key format contains redundant information that will make the calculation faster. P1,P2 are first and second prime factors. E1,E2 are first and second exponents. C is the CRT coefficient. Terminology is taken from &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc3477.txt&quot;&gt; RFC 3447&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Donde E es el exponente p&amp;uacute;blico, N es el m&amp;oacute;dulo p&amp;uacute;blico y D es el exponente privado. El formato de clave m&amp;aacute;s largo contiene informaci&amp;oacute;n redundante que har&amp;aacute; que el c&amp;aacute;lculo sea m&amp;aacute;s r&amp;aacute;pido. P1, P2 son factores primos primero y segundo. E1, E2 son el primer y segundo exponentes. C es el coeficiente CRT. La terminolog&amp;iacute;a se toma de &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc3477.txt&quot;&gt; RFC 3447&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3144e74e87bbb4e8446bf9bded7d46890ebf3322" translate="yes" xml:space="preserve">
          <source>Where P, Q and G are the dss parameters and X is the private key.</source>
          <target state="translated">Donde P,Q y G son los parámetros dss y X es la clave privada.</target>
        </trans-unit>
        <trans-unit id="2225bc73e98d80c1bfa4e4cf3ed86983be9f6abd" translate="yes" xml:space="preserve">
          <source>Where P, Q and G are the dss parameters and Y is the public key.</source>
          <target state="translated">Donde P,Q y G son los parámetros dss y Y es la clave pública.</target>
        </trans-unit>
        <trans-unit id="4817edd006ce6eb15f5dd1caa449f5d7d24b519f" translate="yes" xml:space="preserve">
          <source>Where Verifier is &lt;code&gt;v&lt;/code&gt;, Generator is &lt;code&gt;g&lt;/code&gt; and Prime is&lt;code&gt;N&lt;/code&gt;, DerivedKey is &lt;code&gt;X&lt;/code&gt;, and Scrambler is &lt;code&gt;u&lt;/code&gt; (optional will be generated if not provided) from &lt;code&gt;&lt;a href=&quot;http://srp.stanford.edu/design.html&quot;&gt;SRP design&lt;/a&gt;&lt;/code&gt; Version = '3' | '6' | '6a'</source>
          <target state="translated">Donde Verifier es &lt;code&gt;v&lt;/code&gt; , Generator es &lt;code&gt;g&lt;/code&gt; y Prime es &lt;code&gt;N&lt;/code&gt; , DerivedKey es &lt;code&gt;X&lt;/code&gt; y Scrambler es &lt;code&gt;u&lt;/code&gt; (se generar&amp;aacute; opcional si no se proporciona) desde el &lt;code&gt;&lt;a href=&quot;http://srp.stanford.edu/design.html&quot;&gt;SRP design&lt;/a&gt;&lt;/code&gt; Versi&amp;oacute;n = '3' | '6' | '6a'</target>
        </trans-unit>
        <trans-unit id="76e072743183b27b8045c01f3407eeaf40010c15" translate="yes" xml:space="preserve">
          <source>Where did my progress reports go?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e63a13bf71d4a7ebc9b2737f3779c3e536718b27" translate="yes" xml:space="preserve">
          <source>Where is &lt;code&gt;A&lt;/code&gt; or &lt;code&gt;B&lt;/code&gt; from &lt;code&gt;&lt;a href=&quot;http://srp.stanford.edu/design.html&quot;&gt;SRP design&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&amp;iquest;D&amp;oacute;nde est&amp;aacute; &lt;code&gt;A&lt;/code&gt; o &lt;code&gt;B&lt;/code&gt; del &lt;code&gt;&lt;a href=&quot;http://srp.stanford.edu/design.html&quot;&gt;SRP design&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e839812da1a839a57adf7231f3fd47dc44d87628" translate="yes" xml:space="preserve">
          <source>Where is &lt;code&gt;a&lt;/code&gt; or &lt;code&gt;b&lt;/code&gt; from &lt;code&gt;&lt;a href=&quot;http://srp.stanford.edu/design.html&quot;&gt;SRP design&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&amp;iquest;D&amp;oacute;nde est&amp;aacute; &lt;code&gt;a&lt;/code&gt; o &lt;code&gt;b&lt;/code&gt; del &lt;code&gt;&lt;a href=&quot;http://srp.stanford.edu/design.html&quot;&gt;SRP design&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9b9a1763ac9bc8b491978b150abc3fe5244acde7" translate="yes" xml:space="preserve">
          <source>Where the content of the top element is: &lt;code&gt;[{xmlText,[{dog,1}],1,[],&quot;\ Grand Danois\ &quot;,text}]&lt;/code&gt;. Text will be returned in &lt;code&gt;xmlText&lt;/code&gt; records. Though, usually documents are more complex, and the content of the top element will in that case be a nested structure with xmlElement records that in turn may have complex content. All of this reflects the structure of the XML document.</source>
          <target state="translated">Donde el contenido del elemento superior es: &lt;code&gt;[{xmlText,[{dog,1}],1,[],&quot;\ Grand Danois\ &quot;,text}]&lt;/code&gt; . El texto se devolver&amp;aacute; en registros &lt;code&gt;xmlText&lt;/code&gt; . Sin embargo, generalmente los documentos son m&amp;aacute;s complejos y el contenido del elemento superior ser&amp;aacute; en ese caso una estructura anidada con registros xmlElement que, a su vez, pueden tener contenido complejo. Todo esto refleja la estructura del documento XML.</target>
        </trans-unit>
        <trans-unit id="928213f3df1d618c9a1246a7947b0bb0e0272b1a" translate="yes" xml:space="preserve">
          <source>Where the format of &lt;code&gt;Info&lt;/code&gt; is a function of &lt;code&gt;Tag&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="887842314d3d1ceea1cb4b38b8e7a7fc00c8daa0" translate="yes" xml:space="preserve">
          <source>Where to put the generated files. Default is the current directory.</source>
          <target state="translated">Dónde poner los archivos generados.Por defecto es el directorio actual.</target>
        </trans-unit>
        <trans-unit id="5648598d9c1122279909495088842eeb61ff331f" translate="yes" xml:space="preserve">
          <source>Where to search for &lt;code&gt;.asn1db&lt;/code&gt; files and ASN.1 source specs to resolve references to other modules. This option can be repeated many times if there are several places to search in. The compiler searches the current directory first.</source>
          <target state="translated">D&amp;oacute;nde buscar archivos &lt;code&gt;.asn1db&lt;/code&gt; y especificaciones de origen ASN.1 para resolver referencias a otros m&amp;oacute;dulos. Esta opci&amp;oacute;n puede repetirse muchas veces si hay varios lugares donde buscar. El compilador busca primero en el directorio actual.</target>
        </trans-unit>
        <trans-unit id="7e741bc3dcef0123eeda11543758853be2aac149" translate="yes" xml:space="preserve">
          <source>Where:</source>
          <target state="translated">Where:</target>
        </trans-unit>
        <trans-unit id="ecbc2004e666a6ce8be8ae15948d6a5e5690e45c" translate="yes" xml:space="preserve">
          <source>Whereas a call to the following default code values would return a table with a RAM copy on the local node, no extra indexes, and the attributes defaulted to the list &lt;code&gt;[key,val]&lt;/code&gt;.</source>
          <target state="translated">Mientras que una llamada a los siguientes valores de c&amp;oacute;digo predeterminados devolver&amp;iacute;a una tabla con una copia de RAM en el nodo local, sin &amp;iacute;ndices adicionales y los atributos predeterminados en la lista &lt;code&gt;[key,val]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9d5abedb298ae261c18864ec4e752eb53242394e" translate="yes" xml:space="preserve">
          <source>Whereas tuples group things together, it is also needed to represent lists of things. Lists in Erlang are surrounded by square brackets, &quot;[&quot; and &quot;]&quot;. For example, a list of the temperatures of various cities in the world can be:</source>
          <target state="translated">Mientras que las tuplas agrupan las cosas,también es necesario representar listas de cosas.Las listas en Erlang están rodeadas por corchetes,&quot;[&quot; y &quot;]&quot;.Por ejemplo,una lista de las temperaturas de varias ciudades del mundo puede ser:</target>
        </trans-unit>
        <trans-unit id="36fcd280365ee86c3459e03bb8e681df6b1d1cfd" translate="yes" xml:space="preserve">
          <source>Whether or not the &lt;code&gt;&lt;a href=&quot;#transport_opt&quot;&gt;transport_opt()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;pool_size&lt;/code&gt; has been configured affects the format of the listing in the case of a connecting transport, since a value greater than 1 implies multiple transport processes for the same &lt;code&gt;&lt;code&gt;&lt;a href=&quot;#transport_ref&quot;&gt;transport_ref()&lt;/a&gt;&lt;/code&gt;&lt;/code&gt;, as in the listening case. The format in this case is similar to the listening case, with a &lt;code&gt;pool&lt;/code&gt; tuple in place of an &lt;code&gt;accept&lt;/code&gt; tuple.</source>
          <target state="translated">El hecho de que &lt;code&gt;&lt;a href=&quot;#transport_opt&quot;&gt;transport_opt()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;pool_size&lt;/code&gt; haya sido configurado o no afecta al formato del listado en el caso de un transporte de conexi&amp;oacute;n, ya que un valor mayor que 1 implica m&amp;uacute;ltiples procesos de transporte para el mismo &lt;code&gt;&lt;code&gt;&lt;a href=&quot;#transport_ref&quot;&gt;transport_ref()&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; , como en el caso de escucha. El formato en este caso es similar al caso de escucha, con una tupla de &lt;code&gt;pool&lt;/code&gt; en lugar de una tupla de &lt;code&gt;accept&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="67b0b7e85711868c9741c95515f7371a72c9fbc7" translate="yes" xml:space="preserve">
          <source>Whether or not the &lt;code&gt;pick_peer/4&lt;/code&gt; application callback can modify the application state. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Si la &lt;code&gt;pick_peer/4&lt;/code&gt; llamada de la aplicaci&amp;oacute;n pick_peer / 4 puede modificar el estado de la aplicaci&amp;oacute;n o no . Por defecto es &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d449b0476061df0503275d5625f4fff86548ae57" translate="yes" xml:space="preserve">
          <source>Whether or not to count application-specific messages; those for which &lt;code&gt;diameter_app(3)&lt;/code&gt; callbacks take place. If false then only messages handled by diameter itself are counted: CER/CEA, DWR/DWA, DPR/DPA.</source>
          <target state="translated">Si contar o no los mensajes espec&amp;iacute;ficos de la aplicaci&amp;oacute;n; aquellos para los que tienen lugar devoluciones de llamada de &lt;code&gt;diameter_app(3)&lt;/code&gt; . Si es falso, solo se cuentan los mensajes manejados por el di&amp;aacute;metro mismo: CER / CEA, DWR / DWA, DPR / DPA.</target>
        </trans-unit>
        <trans-unit id="c70b0206c5df852a42e48a70b35c7ae080f23eb5" translate="yes" xml:space="preserve">
          <source>Whether or not to decode AVPs of type &lt;code&gt;&lt;a href=&quot;diameter_dict#DATA_TYPES&quot;&gt;OctetString()&lt;/a&gt;&lt;/code&gt; and its derived types &lt;code&gt;&lt;a href=&quot;diameter_dict#DATA_TYPES&quot;&gt;DiameterIdentity()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;diameter_dict#DATA_TYPES&quot;&gt;DiameterURI()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;diameter_dict#DATA_TYPES&quot;&gt;IPFilterRule()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;diameter_dict#DATA_TYPES&quot;&gt;QoSFilterRule()&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;diameter_dict#DATA_TYPES&quot;&gt;UTF8String()&lt;/a&gt;&lt;/code&gt;. If &lt;code&gt;true&lt;/code&gt; then AVPs of these types are decoded to string(). If &lt;code&gt;false&lt;/code&gt; then values are retained as binary().</source>
          <target state="translated">Si decodificar o no AVP de tipo &lt;code&gt;&lt;a href=&quot;diameter_dict#DATA_TYPES&quot;&gt;OctetString()&lt;/a&gt;&lt;/code&gt; y sus tipos derivados &lt;code&gt;&lt;a href=&quot;diameter_dict#DATA_TYPES&quot;&gt;DiameterIdentity()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;diameter_dict#DATA_TYPES&quot;&gt;DiameterURI()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;diameter_dict#DATA_TYPES&quot;&gt;IPFilterRule()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;diameter_dict#DATA_TYPES&quot;&gt;QoSFilterRule()&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;diameter_dict#DATA_TYPES&quot;&gt;UTF8String()&lt;/a&gt;&lt;/code&gt; . Si es &lt;code&gt;true&lt;/code&gt; , los AVP de estos tipos se decodifican en string (). Si es &lt;code&gt;false&lt;/code&gt; , los valores se retienen como binarios ().</target>
        </trans-unit>
        <trans-unit id="21de803a1e4d911ea618dcf97a6a267f7c0e0c32" translate="yes" xml:space="preserve">
          <source>Whether or not to enforce the RFC 6733 requirement that any message before capabilities exchange should close the peer connection. If false then unexpected messages are discarded.</source>
          <target state="translated">Si hacer o no cumplir el requisito de la RFC 6733 de que cualquier mensaje antes del intercambio de capacidades debe cerrar la conexión entre pares.Si son falsos,entonces los mensajes inesperados son descartados.</target>
        </trans-unit>
        <trans-unit id="4c4bdd79e26083d0f89cc38d1b9e82950a842605" translate="yes" xml:space="preserve">
          <source>Whether or not to regard an AVP setting the M-bit as erroneous when the command grammar in question does not explicitly allow the AVP. If &lt;code&gt;true&lt;/code&gt; then such AVPs are regarded as 5001 errors, DIAMETER_AVP_UNSUPPORTED. If &lt;code&gt;false&lt;/code&gt; then the M-bit is ignored and policing it becomes the receiver's responsibility.</source>
          <target state="translated">Si considerar o no un AVP que establece el bit M como err&amp;oacute;neo cuando la gram&amp;aacute;tica del comando en cuesti&amp;oacute;n no permite expl&amp;iacute;citamente el AVP. Si es &lt;code&gt;true&lt;/code&gt; entonces tales AVP se consideran errores 5001, DIAMETER_AVP_UNSUPPORTED. Si es &lt;code&gt;false&lt;/code&gt; , el bit M se ignora y la vigilancia se convierte en responsabilidad del receptor.</target>
        </trans-unit>
        <trans-unit id="48a11d24108508650ea1d77cab3defeb042c79b6" translate="yes" xml:space="preserve">
          <source>Whether or not to require that the number of AVPs in a message or grouped AVP agree with those specified in the dictionary in question when passing messages to &lt;code&gt;diameter_app(3)&lt;/code&gt; callbacks. If &lt;code&gt;true&lt;/code&gt; then mismatches in an outgoing messages cause message encoding to fail, while mismatches in an incoming message are reported as 5005/5009 errors in the errors field of the diameter_packet record passed to &lt;code&gt;handle_request/3&lt;/code&gt; or &lt;code&gt;handle_answer/4&lt;/code&gt; callbacks. If &lt;code&gt;false&lt;/code&gt; then neither error is enforced/detected. If &lt;code&gt;encode&lt;/code&gt; or &lt;code&gt;decode&lt;/code&gt; then errors are only enforced/detected on outgoing or incoming messages respectively.</source>
          <target state="translated">Si se requiere o no que el n&amp;uacute;mero de AVP en un mensaje o AVP agrupado est&amp;eacute; de acuerdo con los especificados en el diccionario en cuesti&amp;oacute;n al pasar mensajes a las devoluciones de llamada de &lt;code&gt;diameter_app(3)&lt;/code&gt; . Si es &lt;code&gt;true&lt;/code&gt; , las discrepancias en los mensajes salientes hacen que la codificaci&amp;oacute;n del mensaje falle, mientras que las discrepancias en un mensaje entrante se informan como errores 5005/5009 en el campo de errores del registro de di&amp;aacute;metro_paquete pasado a &lt;code&gt;handle_request/3&lt;/code&gt; o &lt;code&gt;handle_answer/4&lt;/code&gt; callbacks. Si es &lt;code&gt;false&lt;/code&gt; , no se aplica / detecta ning&amp;uacute;n error. Si &lt;code&gt;encode&lt;/code&gt; o &lt;code&gt;decode&lt;/code&gt; , los errores solo se aplican / detectan en los mensajes entrantes o salientes, respectivamente.</target>
        </trans-unit>
        <trans-unit id="b9cad2d39a7de589e0dd2507f90944f85bceec69" translate="yes" xml:space="preserve">
          <source>Whether the state machine should use &lt;strong&gt;state enter calls&lt;/strong&gt; or not is selected when starting the &lt;code&gt;gen_statem&lt;/code&gt; and after code change using the return value from &lt;code&gt;&lt;a href=&quot;#Module:callback_mode-0&quot;&gt;Module:callback_mode/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Se selecciona si la m&amp;aacute;quina de estado debe usar &lt;strong&gt;llamadas de ingreso de estado&lt;/strong&gt; o no al iniciar &lt;code&gt;gen_statem&lt;/code&gt; y despu&amp;eacute;s del cambio de c&amp;oacute;digo usando el valor de retorno del &lt;code&gt;&lt;a href=&quot;#Module:callback_mode-0&quot;&gt;Module:callback_mode/0&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f2b42f4f8ca231f51435d252ac3a5d231d8995a9" translate="yes" xml:space="preserve">
          <source>Whether the whole table is traversed or only some keys looked up depends on how the query is expressed. If the query has the form</source>
          <target state="translated">Si se atraviesa toda la mesa o sólo se buscan algunas teclas depende de cómo se exprese la consulta.Si la consulta tiene la forma</target>
        </trans-unit>
        <trans-unit id="13c9973a4e7550104891acf7d7dc61bcaff3e712" translate="yes" xml:space="preserve">
          <source>Which OTP versions are &lt;code&gt;kernel-3.0&lt;/code&gt; part of?</source>
          <target state="translated">&amp;iquest;De qu&amp;eacute; versiones de OTP forman parte el &lt;code&gt;kernel-3.0&lt;/code&gt; ?</target>
        </trans-unit>
        <trans-unit id="6d10cf7cff62e6ebcafd8d63acafb6450f487b40" translate="yes" xml:space="preserve">
          <source>Which SNMP version to use is implicitly defined by specifying the Message Processing Model. This version of the agent handles the models &lt;code&gt;v1&lt;/code&gt;, &lt;code&gt;v2c&lt;/code&gt; and &lt;code&gt;v3&lt;/code&gt;.</source>
          <target state="translated">La versi&amp;oacute;n de SNMP a utilizar se define impl&amp;iacute;citamente especificando el modelo de procesamiento de mensajes. Esta versi&amp;oacute;n del agente maneja los modelos &lt;code&gt;v1&lt;/code&gt; , &lt;code&gt;v2c&lt;/code&gt; y &lt;code&gt;v3&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2a1a0280b4f0af887bbcb8c357efdf2ef49d1504" translate="yes" xml:space="preserve">
          <source>Which SNMP versions shall be accepted/used.</source>
          <target state="translated">Qué versiones del SNMP se aceptarán/utilizarán.</target>
        </trans-unit>
        <trans-unit id="8a387616ccaf26279c59014305b3dd869652107e" translate="yes" xml:space="preserve">
          <source>Which applications to be added, that is, applications listed in &lt;code&gt;Name2.rel&lt;/code&gt; but not in &lt;code&gt;Name.rel&lt;/code&gt;</source>
          <target state="translated">Qu&amp;eacute; aplicaciones se agregar&amp;aacute;n, es decir, las aplicaciones enumeradas en &lt;code&gt;Name2.rel&lt;/code&gt; pero no en &lt;code&gt;Name.rel&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7c14de31b7a3bcb7b1d01171585a9e9bb567167c" translate="yes" xml:space="preserve">
          <source>Which applications to be deleted, that is, applications listed in &lt;code&gt;Name.rel&lt;/code&gt; but not in &lt;code&gt;Name2.rel&lt;/code&gt;</source>
          <target state="translated">Qu&amp;eacute; aplicaciones se eliminar&amp;aacute;n, es decir, las aplicaciones enumeradas en &lt;code&gt;Name.rel&lt;/code&gt; pero no en &lt;code&gt;Name2.rel&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f5aceb77b6ae808863618fd33ff3e5c13a692594" translate="yes" xml:space="preserve">
          <source>Which applications to be upgraded/downgraded, that is, applications listed in both &lt;code&gt;Name.rel&lt;/code&gt; and &lt;code&gt;Name2.rel&lt;/code&gt; but with different versions</source>
          <target state="translated">Qu&amp;eacute; aplicaciones se actualizar&amp;aacute;n / degradar&amp;aacute;n, es decir, las aplicaciones enumeradas en &lt;code&gt;Name.rel&lt;/code&gt; y &lt;code&gt;Name2.rel&lt;/code&gt; pero con versiones diferentes</target>
        </trans-unit>
        <trans-unit id="1131f8353bd6250399b31bfd889663a89d780f1a" translate="yes" xml:space="preserve">
          <source>Which applications to include is defined by the &lt;code&gt;included_applications&lt;/code&gt; key in the &lt;code&gt;.app&lt;/code&gt; file:</source>
          <target state="translated">Las aplicaciones que se incluir&amp;aacute;n se definen mediante la clave &lt;code&gt;included_applications&lt;/code&gt; en el archivo &lt;code&gt;.app&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="33a2c320d733715d35457cb67d359c1e01e0a90f" translate="yes" xml:space="preserve">
          <source>Which boot script to use is specified by the command-line flag &lt;code&gt;-boot&lt;/code&gt;. The extension &lt;code&gt;.boot&lt;/code&gt; is to be omitted. For example, using the boot script &lt;code&gt;start_all.boot&lt;/code&gt;:</source>
          <target state="translated">La secuencia de comandos de arranque que se utilizar&amp;aacute; se especifica mediante el indicador de l&amp;iacute;nea de comandos &lt;code&gt;-boot&lt;/code&gt; . Se debe omitir la extensi&amp;oacute;n &lt;code&gt;.boot&lt;/code&gt; . Por ejemplo, usando el script de arranque &lt;code&gt;start_all.boot&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e50e23f7bb1779588d40d00c39241661c0f072b4" translate="yes" xml:space="preserve">
          <source>Which callback function that handles an event depends on the callback mode:</source>
          <target state="translated">La función de devolución de llamada que maneja un evento depende del modo de devolución de llamada:</target>
        </trans-unit>
        <trans-unit id="6aa188514432d913525872db6b7914c6a3c8e363" translate="yes" xml:space="preserve">
          <source>Which child processes to start and monitor is specified by a list of &lt;code&gt;&lt;a href=&quot;#spec&quot;&gt;child specifications&lt;/a&gt;&lt;/code&gt;. The child processes are started in the order specified by this list, and terminated in the reversed order.</source>
          <target state="translated">Qu&amp;eacute; procesos secundarios iniciar y monitorear se especifica mediante una lista de &lt;code&gt;&lt;a href=&quot;#spec&quot;&gt;child specifications&lt;/a&gt;&lt;/code&gt; . Los procesos secundarios se inician en el orden especificado por esta lista y terminan en el orden inverso.</target>
        </trans-unit>
        <trans-unit id="a0d87d6f8d8d4828c8bc66c1b80de26242d90fc6" translate="yes" xml:space="preserve">
          <source>Which domain is the descriptor of.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cd7d6e075a80e211e946c5a2bc1b0d5098a7027" translate="yes" xml:space="preserve">
          <source>Which layout is chosen depends on the available horizontal space. When processing a document, the main parameters are the &lt;strong&gt;paper width&lt;/strong&gt; and the &lt;strong&gt;line width&lt;/strong&gt; (also known as the &quot;ribbon width&quot;). In the resulting layout, no text should be printed beyond the paper width (which by default is 80 characters) as long as it can be avoided, and each single line of text (its indentation not counted, hence &quot;ribbon&quot;) should preferably be no wider than the specified line width (which by default is 65).</source>
          <target state="translated">El dise&amp;ntilde;o que se elija depende del espacio horizontal disponible. Al procesar un documento, los par&amp;aacute;metros principales son el &lt;strong&gt;ancho&lt;/strong&gt; del &lt;strong&gt;papel&lt;/strong&gt; y el &lt;strong&gt;ancho de&lt;/strong&gt; la &lt;strong&gt;l&amp;iacute;nea&lt;/strong&gt; (tambi&amp;eacute;n conocido como &quot;ancho de cinta&quot;). En el dise&amp;ntilde;o resultante, no se debe imprimir ning&amp;uacute;n texto m&amp;aacute;s all&amp;aacute; del ancho del papel (que por defecto es de 80 caracteres) siempre que se pueda evitar, y cada l&amp;iacute;nea de texto (su sangr&amp;iacute;a no se cuenta, por lo tanto, &quot;cinta&quot;) debe ser preferiblemente no m&amp;aacute;s ancho que el ancho de l&amp;iacute;nea especificado (que por defecto es 65).</target>
        </trans-unit>
        <trans-unit id="316f8f07fe22b27f60e4007a3b10b3081a7c24ed" translate="yes" xml:space="preserve">
          <source>Which module that is selected to implement the &lt;code&gt;mnesia_frag_hash&lt;/code&gt; behavior for a particular fragmented table is specified together with the other &lt;code&gt;frag_properties&lt;/code&gt;. The &lt;code&gt;hash_module&lt;/code&gt; defines the module name. The &lt;code&gt;hash_state&lt;/code&gt; defines the initial hash state.</source>
          <target state="translated">El m&amp;oacute;dulo que se selecciona para implementar el comportamiento &lt;code&gt;mnesia_frag_hash&lt;/code&gt; para una tabla fragmentada en particular se especifica junto con el resto de &lt;code&gt;frag_properties&lt;/code&gt; . El &lt;code&gt;hash_module&lt;/code&gt; define el nombre del m&amp;oacute;dulo. El &lt;code&gt;hash_state&lt;/code&gt; define el estado de hash inicial.</target>
        </trans-unit>
        <trans-unit id="43b9aadd4cf4e0bbe301ebac4cf235c26b5cecf8" translate="yes" xml:space="preserve">
          <source>Which nodes that are allowed to communicate with each other is handled by the magic cookie system, see section &lt;code&gt;Distributed Erlang&lt;/code&gt; in the Erlang Reference Manual.</source>
          <target state="translated">Los nodos que pueden comunicarse entre s&amp;iacute; son manejados por el sistema de cookies m&amp;aacute;gicas, consulte la secci&amp;oacute;n &lt;code&gt;Distributed Erlang&lt;/code&gt; en el Manual de referencia de Erlang.</target>
        </trans-unit>
        <trans-unit id="bd16373e6ac28a23d9af45a12b0dbd962aedf699" translate="yes" xml:space="preserve">
          <source>Which of &lt;code&gt;start_clean&lt;/code&gt; and &lt;code&gt;start_sasl&lt;/code&gt; to use as default is decided by the user when installing Erlang/OTP using &lt;code&gt;Install&lt;/code&gt;. The user is asked &quot;Do you want to use a minimal system startup instead of the SASL startup&quot;. If the answer is yes, then &lt;code&gt;start_clean&lt;/code&gt; is used, otherwise &lt;code&gt;start_sasl&lt;/code&gt; is used. A copy of the selected boot script is made, named &lt;code&gt;start.boot&lt;/code&gt; and placed in directory &lt;code&gt;ROOT/bin&lt;/code&gt;.</source>
          <target state="translated">El &lt;code&gt;start_clean&lt;/code&gt; &lt;code&gt;start_sasl&lt;/code&gt; cu&amp;aacute;l de start_clean y start_sasl usar por defecto al instalar Erlang / OTP usando &lt;code&gt;Install&lt;/code&gt; . Se pregunta al usuario &quot;&amp;iquest;Desea utilizar un inicio m&amp;iacute;nimo del sistema en lugar del inicio SASL&quot;. Si es s&amp;iacute;, entonces la respuesta &lt;code&gt;start_clean&lt;/code&gt; se utiliza, de lo contrario &lt;code&gt;start_sasl&lt;/code&gt; se utiliza. Se hace una copia del script de arranque seleccionado, llamado &lt;code&gt;start.boot&lt;/code&gt; y se coloca en el directorio &lt;code&gt;ROOT/bin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71f264661b57e59a03314daf7ef64bbdbba2eb0f" translate="yes" xml:space="preserve">
          <source>Which one of these strategies is best depends a lot on what the process is doing and how it interacts with other processes. So, as always, profile the application and see how it behaves with the different options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7821793868ddcbfc00b34e99fc497909e5efa3de" translate="yes" xml:space="preserve">
          <source>Which options are selected</source>
          <target state="translated">Qué opciones se seleccionan</target>
        </trans-unit>
        <trans-unit id="00b9e616effecc087048cd95f986c483b6267f2d" translate="yes" xml:space="preserve">
          <source>Which protocol is the descriptor of.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae5ae585b22a628f4e51d3c9f19940824f3ef04" translate="yes" xml:space="preserve">
          <source>Which source and target options that can be issued depends on the capabilities supported by the server. That is, &lt;code&gt;:candidate&lt;/code&gt; and/or &lt;code&gt;:startup&lt;/code&gt; are required.</source>
          <target state="translated">Las opciones de origen y destino que se pueden emitir dependen de las capacidades admitidas por el servidor. Es decir, se requieren &lt;code&gt;:candidate&lt;/code&gt; y / o &lt;code&gt;:startup&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="790ca84b049e16521ecebee52c49440e1de0020a" translate="yes" xml:space="preserve">
          <source>Which target parameters that can be used depends on if &lt;code&gt;:candidate&lt;/code&gt; and/or &lt;code&gt;:startup&lt;/code&gt; are supported by the server. If successfull, the configuration system of the device is unavailable to other clients (NETCONF, CORBA, SNMP, and so on). Locks are intended to be short-lived.</source>
          <target state="translated">Los par&amp;aacute;metros de destino que se pueden usar dependen de si el servidor admite &lt;code&gt;:candidate&lt;/code&gt; y / o &lt;code&gt;:startup&lt;/code&gt; . Si tiene &amp;eacute;xito, el sistema de configuraci&amp;oacute;n del dispositivo no est&amp;aacute; disponible para otros clientes (NETCONF, CORBA, SNMP, etc.). Las cerraduras est&amp;aacute;n dise&amp;ntilde;adas para ser de corta duraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d823be650c7d284b2d3d7958647a603585d3826e" translate="yes" xml:space="preserve">
          <source>Which tools to check for, and in which order could be set with the option &lt;code&gt;{prop_tools, list(eqc|proper|triq)}&lt;/code&gt; in the CommonTest configuration &lt;code&gt;Config&lt;/code&gt;. The default value is &lt;code&gt;[eqc, proper, triq]&lt;/code&gt; with &lt;code&gt;eqc&lt;/code&gt; being the first one searched for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ee0a4498c64545230651469a81925f8c567ab68" translate="yes" xml:space="preserve">
          <source>Which type is the descriptor of.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c125aa8b69c05ef017f418200c2dd8030095a74e" translate="yes" xml:space="preserve">
          <source>Which types of information that is to be supervised by Erlang</source>
          <target state="translated">¿Qué tipo de información que debe ser supervisada por Erlang</target>
        </trans-unit>
        <trans-unit id="955269f29db543667262d6a6d8087530a608251f" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;net_kernel&lt;/code&gt; informs different subsystems that the connection is coming up, the port is to accept data to send. However, the port should not receive any data, to avoid that data arrives from another node before every kernel subsystem is prepared to handle it. A third mode, named &lt;code&gt;intermediate&lt;/code&gt;, is used for this intermediate stage.</source>
          <target state="translated">Mientras que &lt;code&gt;net_kernel&lt;/code&gt; informa a los diferentes subsistemas que la conexi&amp;oacute;n se acerca, el puerto es para aceptar datos para enviar. Sin embargo, el puerto no debe recibir ning&amp;uacute;n dato, para evitar que los datos lleguen desde otro nodo antes de que cada subsistema del kernel est&amp;eacute; preparado para manejarlo. Un tercer modo, denominado &lt;code&gt;intermediate&lt;/code&gt; , se utiliza para esta etapa intermedia.</target>
        </trans-unit>
        <trans-unit id="2adedb51158bfde1abc4012a896e0ff7681a15f9" translate="yes" xml:space="preserve">
          <source>While a process executes a dirty NIF, some operations that communicate with it can take a very long time to complete. Suspend or garbage collection of a process executing a dirty NIF cannot be done until the dirty NIF has returned. Thus, other processes waiting for such operations to complete might have to wait for a very long time. Blocking multi-scheduling, that is, calling &lt;code&gt;&lt;a href=&quot;erlang#system_flag_multi_scheduling&quot;&gt; erlang:system_flag(multi_scheduling, block)&lt;/a&gt;&lt;/code&gt;, can also take a very long time to complete. This is because all ongoing dirty operations on all dirty schedulers must complete before the block operation can complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae9d92c09d1918bae1349f12a4c25f948966b648" translate="yes" xml:space="preserve">
          <source>While a process executes a dirty NIF, some operations that communicate with it can take a very long time to complete. Suspend or garbage collection of a process executing a dirty NIF cannot be done until the dirty NIF has returned. Thus, other processes waiting for such operations to complete might have to wait for a very long time. Blocking multi-scheduling, that is, calling &lt;code&gt;&lt;a href=&quot;erlang#system_flag_multi_scheduling&quot;&gt;erlang:system_flag(multi_scheduling, block)&lt;/a&gt;&lt;/code&gt;, can also take a very long time to complete. This is because all ongoing dirty operations on all dirty schedulers must complete before the block operation can complete.</source>
          <target state="translated">Mientras que un proceso ejecuta un NIF sucio, algunas operaciones que se comunican con &amp;eacute;l pueden tardar mucho en completarse. No se puede suspender o recolectar basura de un proceso que ejecuta un NIF sucio hasta que el NIF sucio haya regresado. Por lo tanto, es posible que otros procesos que esperan a que se completen dichas operaciones tengan que esperar mucho tiempo. Bloquear la programaci&amp;oacute;n m&amp;uacute;ltiple, es decir, llamar a &lt;code&gt;&lt;a href=&quot;erlang#system_flag_multi_scheduling&quot;&gt;erlang:system_flag(multi_scheduling, block)&lt;/a&gt;&lt;/code&gt; , tambi&amp;eacute;n puede tardar mucho en completarse. Esto se debe a que todas las operaciones sucias en curso en todos los programadores sucios deben completarse antes de que se pueda completar la operaci&amp;oacute;n de bloqueo.</target>
        </trans-unit>
        <trans-unit id="f3c968926507d13833578dd04fa0445ed14918eb" translate="yes" xml:space="preserve">
          <source>While a service typically implements a single Diameter node (as identified by an Origin-Host AVP), transports can themselves be associated with capabilities AVPs so that a single service can be used to implement more than one Diameter node.</source>
          <target state="translated">Si bien un servicio suele implementar un único nodo de Diámetro (identificado por un AVP Origen-Hospedante),los transportes pueden asociarse a sí mismos con AVP de capacidades,de modo que un único servicio puede utilizarse para implementar más de un nodo de Diámetro.</target>
        </trans-unit>
        <trans-unit id="a949b6adadaaef239ec4dc8886f41bd523e0e5b5" translate="yes" xml:space="preserve">
          <source>While a time-out is running, its &lt;code&gt;EventContent&lt;/code&gt; can be updated using a &lt;code&gt;&lt;a href=&quot;#Transition%20Actions&quot;&gt; &lt;strong&gt;transition action&lt;/strong&gt; &lt;/a&gt;&lt;/code&gt; on the form &lt;code&gt; {TimeoutType, update, NewEventContent} &lt;/code&gt; which is a feature introduced in OTP 22.1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba190fb267746cc8b0c9573844864941c2b36751" translate="yes" xml:space="preserve">
          <source>While doing this, the message passing interface between the shell, the client, and the server is cleaned up and is defined using &lt;strong&gt;records&lt;/strong&gt;. Also, &lt;strong&gt;macros&lt;/strong&gt; are introduced:</source>
          <target state="translated">Al hacer esto, la interfaz de paso de mensajes entre el shell, el cliente y el servidor se limpia y se define mediante &lt;strong&gt;registros&lt;/strong&gt; . Adem&amp;aacute;s, se introducen &lt;strong&gt;macros&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="e4bcae748a242838e1ff319d8c4a5667ec31db32" translate="yes" xml:space="preserve">
          <source>While in &quot;plain Erlang&quot;, a process is said to terminate normally only for exit reason &lt;code&gt;normal&lt;/code&gt;, a process started using &lt;code&gt;proc_lib&lt;/code&gt; is also said to terminate normally if it exits with reason &lt;code&gt;shutdown&lt;/code&gt; or &lt;code&gt;{shutdown,Term}&lt;/code&gt;. &lt;code&gt;shutdown&lt;/code&gt; is the reason used when an application (supervision tree) is stopped.</source>
          <target state="translated">Mientras que en &quot;simple Erlang&quot;, se dice que un proceso termina normalmente solo por una raz&amp;oacute;n de salida &lt;code&gt;normal&lt;/code&gt; , tambi&amp;eacute;n se dice que un proceso iniciado usando &lt;code&gt;proc_lib&lt;/code&gt; termina normalmente si sale con una raz&amp;oacute;n de &lt;code&gt;shutdown&lt;/code&gt; o &lt;code&gt;{shutdown,Term}&lt;/code&gt; . &lt;code&gt;shutdown&lt;/code&gt; es el motivo utilizado cuando se detiene una aplicaci&amp;oacute;n (&amp;aacute;rbol de supervisi&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="4bb116c6c8689b91ebdb4eb3a65df11a70e53e50" translate="yes" xml:space="preserve">
          <source>While it is strongly encouraged that the encoding of characters in binary data is known before processing, that is not always possible. On a typical Linux system, there is a mix of UTF-8 and ISO Latin-1 text files, and there are seldom any BOMs in the files to identify them.</source>
          <target state="translated">Aunque se recomienda encarecidamente que se conozca la codificación de los caracteres en los datos binarios antes de su procesamiento,ello no siempre es posible.En un sistema típico de Linux,hay una mezcla de archivos de texto UTF-8 e ISO Latin-1,y rara vez hay listas de materiales en los archivos para identificarlos.</target>
        </trans-unit>
        <trans-unit id="784dc4436476535d8e32532be95c3ebd477ac107" translate="yes" xml:space="preserve">
          <source>While ordinary list comprehensions evaluate to lists, calling &lt;code&gt;&lt;a href=&quot;#q-1&quot;&gt;q/1,2&lt;/a&gt;&lt;/code&gt; returns a &lt;strong id=&quot;query_handle&quot;&gt;query handle&lt;/strong&gt;. To obtain all the answers to a query, &lt;code&gt;&lt;a href=&quot;#eval-1&quot;&gt; eval/1,2&lt;/a&gt;&lt;/code&gt; is to be called with the query handle as first argument. Query handles are essentially functional objects (funs) created in the module calling &lt;code&gt;q/1,2&lt;/code&gt;. As the funs refer to the module code, be careful not to keep query handles too long if the module code is to be replaced. Code replacement is described in section &lt;code&gt; Compilation and Code Loading&lt;/code&gt; in the Erlang Reference Manual. The list of answers can also be traversed in chunks by use of a &lt;strong id=&quot;query_cursor&quot;&gt;query cursor&lt;/strong&gt;. Query cursors are created by calling &lt;code&gt;&lt;a href=&quot;#cursor-1&quot;&gt;cursor/1,2&lt;/a&gt;&lt;/code&gt; with a query handle as first argument. Query cursors are essentially Erlang processes. One answer at a time is sent from the query cursor process to the process that created the cursor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25bf671ec448e1f371e002321038f9fb00ec1499" translate="yes" xml:space="preserve">
          <source>While ordinary list comprehensions evaluate to lists, calling &lt;code&gt;&lt;a href=&quot;#q-1&quot;&gt;q/1,2&lt;/a&gt;&lt;/code&gt; returns a &lt;strong id=&quot;query_handle&quot;&gt;query handle&lt;/strong&gt;. To obtain all the answers to a query, &lt;code&gt;&lt;a href=&quot;#eval-1&quot;&gt;eval/1,2&lt;/a&gt;&lt;/code&gt; is to be called with the query handle as first argument. Query handles are essentially functional objects (funs) created in the module calling &lt;code&gt;q/1,2&lt;/code&gt;. As the funs refer to the module code, be careful not to keep query handles too long if the module code is to be replaced. Code replacement is described in section &lt;code&gt;Compilation and Code Loading&lt;/code&gt; in the Erlang Reference Manual. The list of answers can also be traversed in chunks by use of a &lt;strong id=&quot;query_cursor&quot;&gt;query cursor&lt;/strong&gt;. Query cursors are created by calling &lt;code&gt;&lt;a href=&quot;#cursor-1&quot;&gt;cursor/1,2&lt;/a&gt;&lt;/code&gt; with a query handle as first argument. Query cursors are essentially Erlang processes. One answer at a time is sent from the query cursor process to the process that created the cursor.</source>
          <target state="translated">Mientras que las listas por comprensi&amp;oacute;n ordinarias se eval&amp;uacute;an como listas, llamar a &lt;code&gt;&lt;a href=&quot;#q-1&quot;&gt;q/1,2&lt;/a&gt;&lt;/code&gt; devuelve un &lt;strong id=&quot;query_handle&quot;&gt;identificador de consulta&lt;/strong&gt; . Para obtener todas las respuestas a una consulta, se debe llamar a &lt;code&gt;&lt;a href=&quot;#eval-1&quot;&gt;eval/1,2&lt;/a&gt;&lt;/code&gt; con el identificador de la consulta como primer argumento. Los identificadores de consulta son esencialmente objetos funcionales (diversi&amp;oacute;n) creados en el m&amp;oacute;dulo que llama a &lt;code&gt;q/1,2&lt;/code&gt; . Como la diversi&amp;oacute;n se refiere al c&amp;oacute;digo del m&amp;oacute;dulo, tenga cuidado de no mantener los identificadores de consulta demasiado tiempo si se va a reemplazar el c&amp;oacute;digo del m&amp;oacute;dulo. El reemplazo de c&amp;oacute;digo se describe en la secci&amp;oacute;n &lt;code&gt;Compilation and Code Loading&lt;/code&gt; en el Manual de referencia de Erlang. La lista de respuestas tambi&amp;eacute;n se puede recorrer en trozos mediante el uso de un &lt;strong id=&quot;query_cursor&quot;&gt;cursor de consulta&lt;/strong&gt; . Los cursores de consulta se crean llamando al &lt;code&gt;&lt;a href=&quot;#cursor-1&quot;&gt;cursor/1,2&lt;/a&gt;&lt;/code&gt; con un identificador de consulta como primer argumento. Los cursores de consulta son esencialmente procesos de Erlang. Se env&amp;iacute;a una respuesta a la vez desde el proceso del cursor de consulta al proceso que cre&amp;oacute; el cursor.</target>
        </trans-unit>
        <trans-unit id="5cfb7e0b8e7246045409ca78f0b6e5dc307f3fb9" translate="yes" xml:space="preserve">
          <source>While running, &lt;code&gt;run_erl&lt;/code&gt; sends all output, uninterpreted, to a log file. The file is named &lt;code&gt;erlang.log.N&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt; is an integer. When the log is &quot;full&quot; (default log size is 100 KB), &lt;code&gt;run_erl&lt;/code&gt; starts to log in file &lt;code&gt;erlang.log.(N+1)&lt;/code&gt;, until &lt;code&gt;N&lt;/code&gt; reaches a certain number (default 5), whereupon &lt;code&gt;N&lt;/code&gt; starts at 1 again and the oldest files start getting overwritten.</source>
          <target state="translated">Mientras se ejecuta, &lt;code&gt;run_erl&lt;/code&gt; env&amp;iacute;a todos los resultados, sin interpretar, a un archivo de registro. El archivo se llama &lt;code&gt;erlang.log.N&lt;/code&gt; , donde &lt;code&gt;N&lt;/code&gt; es un n&amp;uacute;mero entero. Cuando el registro est&amp;aacute; &quot;lleno&quot; (el tama&amp;ntilde;o predeterminado del registro es 100 KB), &lt;code&gt;run_erl&lt;/code&gt; comienza a iniciar sesi&amp;oacute;n en el archivo &lt;code&gt;erlang.log.(N+1)&lt;/code&gt; , hasta que &lt;code&gt;N&lt;/code&gt; alcanza un cierto n&amp;uacute;mero (predeterminado 5), despu&amp;eacute;s de lo cual &lt;code&gt;N&lt;/code&gt; comienza en 1 nuevamente y los archivos m&amp;aacute;s antiguos comienzan a sobrescribirse.</target>
        </trans-unit>
        <trans-unit id="0723cb3c16ddecdf0655aeda6e04632653e741f7" translate="yes" xml:space="preserve">
          <source>While strings can be input as Unicode characters, the language elements are still limited to the ISO Latin-1 character set. Only character constants and strings are allowed to be beyond that range:</source>
          <target state="translated">Aunque las cadenas pueden ser introducidas como caracteres Unicode,los elementos del lenguaje están todavía limitados al conjunto de caracteres ISO Latin-1.Sólo se permite que las constantes de caracteres y las cadenas estén fuera de ese rango:</target>
        </trans-unit>
        <trans-unit id="7c1a363423a5a83467e6e6cd3698e801f9a39c7b" translate="yes" xml:space="preserve">
          <source>While waiting for &lt;code&gt;erts_thr_progress_has_reached()&lt;/code&gt; to return a non zero value we typically do not want to block waiting, but instead want to continue working with other stuff. If we run out of other stuff to work on we typically do want to block waiting until we have reached the thread progress value that we are waiting for. In order to be able to do this we provide functionality for waking up a thread when a certain thread progress value has been reached:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d8d8c326ee6b24ea1889f95470be78998df6197" translate="yes" xml:space="preserve">
          <source>White space did not used to include the VT character (code 11), because Perl did not treat this character as white space. However, Perl changed at release 5.18, so PCRE followed at release 8.34, and VT is now treated as white space.</source>
          <target state="translated">El espacio blanco no solía incluir el carácter VT (código 11),porque Perl no trataba este carácter como espacio blanco.Sin embargo,Perl cambió en la versión 5.18,por lo que PCRE siguió en la versión 8.34,y VT es ahora tratado como espacio blanco.</target>
        </trans-unit>
        <trans-unit id="1595814deaf00e4f6e3b44cb9377e2fe011e37cf" translate="yes" xml:space="preserve">
          <source>White-box testing of Erlang/OTP programs. This is easily done by calling the target API functions directly from the test case functions.</source>
          <target state="translated">Pruebas de caja blanca de los programas Erlang/OTP.Esto se hace fácilmente llamando a las funciones API de destino directamente desde las funciones del caso de prueba.</target>
        </trans-unit>
        <trans-unit id="b805e34456a2ce3669e5a13c32900b36e9845bc0" translate="yes" xml:space="preserve">
          <source>Whitespace (the same as \s from PCRE 8.34)</source>
          <target state="translated">Espacio blanco (el mismo que el de PCRE 8.34)</target>
        </trans-unit>
        <trans-unit id="de4842c6983b52e491b9f291872a3e7f3d936bc9" translate="yes" xml:space="preserve">
          <source>Whitespace characters (&lt;strong&gt;Space&lt;/strong&gt;, &lt;strong&gt;Tab&lt;/strong&gt;, and &lt;strong&gt;Newline&lt;/strong&gt;) that cause input to be read to the next non-whitespace character.</source>
          <target state="translated">Caracteres de &lt;strong&gt;espacio en &lt;/strong&gt;&lt;strong&gt;blanco&lt;/strong&gt; ( &lt;strong&gt;espacio&lt;/strong&gt; , &lt;strong&gt;tabulador&lt;/strong&gt; y &lt;strong&gt;nueva l&amp;iacute;nea&lt;/strong&gt; ) que hacen que la entrada se lea en el siguiente car&amp;aacute;cter que no sea un espacio en blanco.</target>
        </trans-unit>
        <trans-unit id="84821441f4b8972977e4408981126dbb04ab2772" translate="yes" xml:space="preserve">
          <source>Will give the result &lt;code&gt;result_export.html&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;result_export.html&lt;/code&gt; el resultado result_export.html</target>
        </trans-unit>
        <trans-unit id="dad3e9b335e675f514250d9843d3015d2b548c49" translate="yes" xml:space="preserve">
          <source>Window Dimension Change Message (RFC 4254, section 6.7)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="556bf8b370f7f45b4b1edd9571a41b7a40881326" translate="yes" xml:space="preserve">
          <source>Windows Menu</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e29aa56423ffafb3741063ceeff0a780f65c606d" translate="yes" xml:space="preserve">
          <source>Windows NT documentation</source>
          <target state="translated">Documentación de Windows NT</target>
        </trans-unit>
        <trans-unit id="de30ff56dada54ff6012fa40e7bfa94e41893af9" translate="yes" xml:space="preserve">
          <source>Windows Operation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e645b2615d352bd6061745efc2717f7e035245ab" translate="yes" xml:space="preserve">
          <source>Windows and, for most common uses, MacOS X enforce Unicode support for filenames. All files created in the file system have names that can consistently be interpreted. In MacOS X, all filenames are retrieved in UTF-8 encoding. In Windows, each system call handling filenames has a special Unicode-aware variant, giving much the same effect. There are no filenames on these systems that are not Unicode filenames. So, the default behavior of the Erlang VM is to work in &quot;Unicode filename translation mode&quot;. This means that a filename can be specified as a Unicode list, which is automatically translated to the proper name encoding for the underlying operating system and file system.</source>
          <target state="translated">Windows y,para los usos más comunes,MacOS X hacen cumplir la compatibilidad con Unicode para los nombres de archivos.Todos los archivos creados en el sistema de archivos tienen nombres que pueden ser interpretados consistentemente.En MacOS X,todos los nombres de archivos se recuperan en codificación UTF-8.En Windows,cada llamada del sistema que maneja nombres de archivos tiene una variante especial compatible con Unicode,lo que produce el mismo efecto.En estos sistemas no hay nombres de archivo que no sean nombres de archivo Unicode.Por lo tanto,el comportamiento por defecto de la VM de Erlang es trabajar en el &quot;modo de traducción de nombres de archivo Unicode&quot;.Esto significa que un nombre de archivo puede especificarse como una lista Unicode,que se traduce automáticamente a la codificación del nombre adecuado para el sistema operativo y el sistema de archivos subyacentes.</target>
        </trans-unit>
        <trans-unit id="c125c4bf69fac9a29c86e4b1d481c02bb71651ac" translate="yes" xml:space="preserve">
          <source>Windows example: &lt;code&gt;D:/usr/local/bin&lt;/code&gt;</source>
          <target state="translated">Ejemplo de Windows: &lt;code&gt;D:/usr/local/bin&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b3b9d2244d29790aefa539ade087712dcc74c2b4" translate="yes" xml:space="preserve">
          <source>Windows example: &lt;code&gt;D:bar.erl, /bar/foo.erl&lt;/code&gt;</source>
          <target state="translated">Ejemplo de Windows: &lt;code&gt;D:bar.erl, /bar/foo.erl&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="edc4359fd495b4e83d92738738521dff7c9648fc" translate="yes" xml:space="preserve">
          <source>Windows specific C-code goes in the &lt;code&gt;$ERL_TOP/erts/emulator/sys/win32&lt;/code&gt;, &lt;code&gt;$ERL_TOP/erts/emulator/drivers/win32&lt;/code&gt; or &lt;code&gt;$ERL_TOP/erts/etc/win32&lt;/code&gt;.</source>
          <target state="translated">El c&amp;oacute;digo C espec&amp;iacute;fico de Windows va en &lt;code&gt;$ERL_TOP/erts/emulator/sys/win32&lt;/code&gt; , &lt;code&gt;$ERL_TOP/erts/emulator/drivers/win32&lt;/code&gt; o &lt;code&gt;$ERL_TOP/erts/etc/win32&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cebe814814fa7a01f7252bacdb196a2415e7c2cc" translate="yes" xml:space="preserve">
          <source>Windows specific erlang code should be used conditionally and the host OS tested in &lt;strong&gt;runtime&lt;/strong&gt;, the exactly same beam files should be distributed for every platform! So write code like:</source>
          <target state="translated">El c&amp;oacute;digo erlang espec&amp;iacute;fico de Windows debe usarse condicionalmente y el sistema operativo host probado en &lt;strong&gt;tiempo&lt;/strong&gt; de &lt;strong&gt;ejecuci&amp;oacute;n&lt;/strong&gt; , &amp;iexcl;exactamente los mismos archivos de haz deben distribuirse para cada plataforma! As&amp;iacute; que escribe c&amp;oacute;digo como:</target>
        </trans-unit>
        <trans-unit id="9153ae7e742cafd43f95ca717cf1dfe512956eb4" translate="yes" xml:space="preserve">
          <source>Windows users probably want to use the &lt;code&gt;werl&lt;/code&gt; program instead, which runs in its own window with scrollbars and supports command-line editing. The &lt;code&gt;erl&lt;/code&gt; program on Windows provides no line editing in its shell, and on Windows 95 there is no way to scroll back to text that has scrolled off the screen. The &lt;code&gt;erl&lt;/code&gt; program must be used, however, in pipelines or if you want to redirect standard input or output.</source>
          <target state="translated">Los usuarios de Windows probablemente deseen utilizar el programa &lt;code&gt;werl&lt;/code&gt; en su lugar, que se ejecuta en su propia ventana con barras de desplazamiento y admite la edici&amp;oacute;n de l&amp;iacute;nea de comandos. El programa &lt;code&gt;erl&lt;/code&gt; en Windows no proporciona edici&amp;oacute;n de l&amp;iacute;nea en su shell, y en Windows 95 no hay forma de volver al texto que se ha desplazado fuera de la pantalla. Sin &lt;code&gt;erl&lt;/code&gt; programa erl debe usarse en canalizaciones o si desea redirigir la entrada o salida est&amp;aacute;ndar.</target>
        </trans-unit>
        <trans-unit id="ee378f6f6c1218838b1fe37b1a1629d87f530c71" translate="yes" xml:space="preserve">
          <source>Windows, Android and, for most cases, MacOS X enforce Unicode support for filenames. All files created in the file system have names that can consistently be interpreted. In MacOS X and Android, all filenames are retrieved in UTF-8 encoding. In Windows, each system call handling filenames has a special Unicode-aware variant, giving much the same effect. There are no filenames on these systems that are not Unicode filenames. So, the default behavior of the Erlang VM is to work in &quot;Unicode filename translation mode&quot;. This means that a filename can be specified as a Unicode list, which is automatically translated to the proper name encoding for the underlying operating system and file system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d01fbb62689c9a50dbc798199c8abe5404a70e39" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;SnmpAppConfName&lt;/code&gt; SNMP applications can be configured with parameters &lt;code&gt;config&lt;/code&gt;, &lt;code&gt;mibs&lt;/code&gt;, &lt;code&gt;net_if&lt;/code&gt;, and so on. The values are merged with (and possibly override) default values set by &lt;code&gt;ct_snmp&lt;/code&gt;.</source>
          <target state="translated">Con &lt;code&gt;SnmpAppConfName&lt;/code&gt; , las aplicaciones SNMP se pueden configurar con los par&amp;aacute;metros &lt;code&gt;config&lt;/code&gt; , &lt;code&gt;mibs&lt;/code&gt; , &lt;code&gt;net_if&lt;/code&gt; , etc. Los valores se combinan (y posiblemente anulan) los valores predeterminados establecidos por &lt;code&gt;ct_snmp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="57de975e4ed5eb1eb7a9bb8718be7fce417a91ff" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;handle_event_function&lt;/code&gt;, you are free to mix strategies, as all events and states are handled in the same callback function.</source>
          <target state="translated">Con &lt;code&gt;handle_event_function&lt;/code&gt; , puede mezclar estrategias, ya que todos los eventos y estados se manejan en la misma funci&amp;oacute;n de devoluci&amp;oacute;n de llamada.</target>
        </trans-unit>
        <trans-unit id="f5dfbb3d46433438978efd2890875149c5eda9a4" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;inet6fb4&lt;/code&gt; the client behaves as before, that is, tries to use IPv6, and only if that does not work it uses IPv4).</source>
          <target state="translated">Con &lt;code&gt;inet6fb4&lt;/code&gt; el cliente se comporta como antes, es decir, intenta usar IPv6, y solo si eso no funciona usa IPv4).</target>
        </trans-unit>
        <trans-unit id="b99b83d2e4268982d94ed7821d21119873fdfd1b" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;state_functions&lt;/code&gt;, you are restricted to use atom-only states, and the &lt;code&gt;gen_statem&lt;/code&gt; engine branches depending on state name for you. This encourages the &lt;strong&gt;callback module&lt;/strong&gt; to co-locate the implementation of all event actions particular to one state in the same place in the code, hence to focus on one state at the time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b18128932919ee9e9b89c4f5f6d45d4fabc7e543" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;state_functions&lt;/code&gt;, you are restricted to use atom-only states, and the &lt;code&gt;gen_statem&lt;/code&gt; engine branches depending on state name for you. This encourages the callback module to co-locate the implementation of all event actions particular to one state in the same place in the code, hence to focus on one state at the time.</source>
          <target state="translated">Con &lt;code&gt;state_functions&lt;/code&gt; , est&amp;aacute; restringido a usar estados de solo &amp;aacute;tomo, y el motor &lt;code&gt;gen_statem&lt;/code&gt; se ramifica seg&amp;uacute;n el nombre del estado. Esto anima al m&amp;oacute;dulo de devoluci&amp;oacute;n de llamada a ubicar conjuntamente la implementaci&amp;oacute;n de todas las acciones de eventos particulares de un estado en el mismo lugar del c&amp;oacute;digo, por lo tanto, a centrarse en un estado a la vez.</target>
        </trans-unit>
        <trans-unit id="08bf3be09bca46d50f5c39e4638f13ff1f2f5384" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;tp&lt;/code&gt; and &lt;code&gt;tpl&lt;/code&gt;, one of the match specification shortcuts can be used (for example, &lt;code&gt;ttb:tp(foo_module, caller)&lt;/code&gt;).</source>
          <target state="translated">Con &lt;code&gt;tp&lt;/code&gt; y &lt;code&gt;tpl&lt;/code&gt; , se puede usar uno de los atajos de especificaci&amp;oacute;n de coincidencia (por ejemplo, &lt;code&gt;ttb:tp(foo_module, caller)&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="b6d97c65f416ad5168b9a2206a566140bcf2447d" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;userdata&lt;/code&gt;, the user can specify any test case group related information that can be read by calling &lt;code&gt;&lt;a href=&quot;ct#userdata-2&quot;&gt;ct:userdata/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Con &lt;code&gt;userdata&lt;/code&gt; , el usuario puede especificar cualquier informaci&amp;oacute;n relacionada con el grupo de casos de prueba que se puede leer llamando a &lt;code&gt;&lt;a href=&quot;ct#userdata-2&quot;&gt;ct:userdata/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6d403f91ef998735296b5b06b5d85b55c07feac9" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;userdata&lt;/code&gt;, the user can specify any test case-related information that can be read by calling &lt;code&gt;&lt;a href=&quot;ct#userdata-3&quot;&gt;ct:userdata/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Con &lt;code&gt;userdata&lt;/code&gt; , el usuario puede especificar cualquier informaci&amp;oacute;n relacionada con el caso de prueba que se pueda leer llamando a &lt;code&gt;&lt;a href=&quot;ct#userdata-3&quot;&gt;ct:userdata/3&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0ea441d926510f27d6d163d5468ba669996dc2de" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;userdata&lt;/code&gt;, the user can specify any test suite-related information, which can be read by calling &lt;code&gt;&lt;a href=&quot;ct#userdata-2&quot;&gt;ct:userdata/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Con &lt;code&gt;userdata&lt;/code&gt; , el usuario puede especificar cualquier informaci&amp;oacute;n relacionada con el conjunto de pruebas, que se puede leer llamando a &lt;code&gt;&lt;a href=&quot;ct#userdata-2&quot;&gt;ct:userdata/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="26f6a3b686eca5b0930dd9afa29c9f563535a61e" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;xslapply&lt;/code&gt; you tell the XSLT processor in which order it should traverse the XML structure. By default it goes in preorder traversal, but with the following we make a deliberate choice to break that order:</source>
          <target state="translated">Con &lt;code&gt;xslapply&lt;/code&gt; le indica al procesador XSLT en qu&amp;eacute; orden debe atravesar la estructura XML. De forma predeterminada, va en recorrido de preorden, pero con lo siguiente tomamos una decisi&amp;oacute;n deliberada para romper ese orden:</target>
        </trans-unit>
        <trans-unit id="b3db18a9d447bf83ba06466f404b33da7b98fa17" translate="yes" xml:space="preserve">
          <source>With Erlang/OTP R16A came support for UTF-8 encoded source code, with enhancements to many of the applications to support both Unicode encoded filenames and support for UTF-8 encoded files in many circumstances. Most notable is the support for UTF-8 in files read by &lt;code&gt;file:consult/1&lt;/code&gt;, release handler support for UTF-8, and more support for Unicode character sets in the I/O system.</source>
          <target state="translated">Con Erlang / OTP R16A lleg&amp;oacute; la compatibilidad con el c&amp;oacute;digo fuente codificado en UTF-8, con mejoras en muchas de las aplicaciones para admitir nombres de archivo codificados en Unicode y compatibilidad con archivos codificados en UTF-8 en muchas circunstancias. Lo m&amp;aacute;s notable es la compatibilidad con UTF-8 en archivos le&amp;iacute;dos por &lt;code&gt;file:consult/1&lt;/code&gt; , compatibilidad con el controlador de versiones para UTF-8 y m&amp;aacute;s compatibilidad con juegos de caracteres Unicode en el sistema de E / S.</target>
        </trans-unit>
        <trans-unit id="b52c5284cd1c07c72e9a816bd1d34fef08587e9d" translate="yes" xml:space="preserve">
          <source>With a call to &lt;code&gt;block/1,2&lt;/code&gt; a process can block a log. If the blocking process is not an owner of the log, a temporary link is created between the disk log process and the blocking process. The link ensures that the disk log is unblocked if the blocking process terminates without first closing or unblocking the log.</source>
          <target state="translated">Con una llamada a &lt;code&gt;block/1,2&lt;/code&gt; un proceso puede bloquear un registro. Si el proceso de bloqueo no es propietario del registro, se crea un v&amp;iacute;nculo temporal entre el proceso de registro del disco y el proceso de bloqueo. El enlace garantiza que el registro del disco se desbloquee si el proceso de bloqueo finaliza sin antes cerrar o desbloquear el registro.</target>
        </trans-unit>
        <trans-unit id="c2f4e2815603bcfb42c9bd32a938d30836c2464a" translate="yes" xml:space="preserve">
          <source>With a function like &lt;code&gt;test/0&lt;/code&gt;, the whole example can be started:</source>
          <target state="translated">Con una funci&amp;oacute;n como &lt;code&gt;test/0&lt;/code&gt; , se puede iniciar todo el ejemplo:</target>
        </trans-unit>
        <trans-unit id="69b67278f00ea241bbed8eb4a0425fcb14e74474" translate="yes" xml:space="preserve">
          <source>With all the default values presented, a get request can also be written as follows:</source>
          <target state="translated">Con todos los valores por defecto presentados,una solicitud de get también puede ser escrita como sigue:</target>
        </trans-unit>
        <trans-unit id="b4ab3e3e9a50d6aefe38373ab75bc2cd653fa049" translate="yes" xml:space="preserve">
          <source>With both maximizing (&quot;greedy&quot;) and minimizing (&quot;ungreedy&quot; or &quot;lazy&quot;) repetition, failure of what follows normally causes the repeated item to be re-evaluated to see if a different number of repeats allows the remaining pattern to match. Sometimes it is useful to prevent this, either to change the nature of the match, or to cause it to fail earlier than it otherwise might, when the author of the pattern knows that there is no point in carrying on.</source>
          <target state="translated">Al maximizar (&quot;codicioso&quot;)y minimizar (&quot;no codicioso&quot; o &quot;perezoso&quot;)la repetición,el fracaso de lo que sigue normalmente hace que se vuelva a evaluar el elemento repetido para ver si un número diferente de repeticiones permite que el patrón restante coincida.A veces es útil impedirlo,ya sea para cambiar la naturaleza de la coincidencia o para hacerla fracasar antes de lo que podría hacerlo de otro modo,cuando el autor de la pauta sabe que no tiene sentido seguir adelante.</target>
        </trans-unit>
        <trans-unit id="14f551d167438796ba8d34f3a93d3437c922c918" translate="yes" xml:space="preserve">
          <source>With configuration terms it is, for example, possible to do the following:</source>
          <target state="translated">Con los términos de configuración es posible,por ejemplo,hacer lo siguiente:</target>
        </trans-unit>
        <trans-unit id="4782bd374a84a1af126f620034c11a07e9940a44" translate="yes" xml:space="preserve">
          <source>With lock contention we mean when one thread locks a resource and another thread, or threads, tries to acquire the same resource at the same time. The lock will deny the other thread access to the resource and the thread will be blocked from continuing its execution. The second thread has to wait until the first thread has completed its access to the resource and unlocked it. The &lt;code&gt;lcnt&lt;/code&gt; tool measures these lock conflicts.</source>
          <target state="translated">Con contenci&amp;oacute;n de bloqueo nos referimos a cuando un subproceso bloquea un recurso y otro subproceso, o subprocesos, intenta adquirir el mismo recurso al mismo tiempo. El bloqueo negar&amp;aacute; el acceso del otro subproceso al recurso y se bloquear&amp;aacute; el subproceso para que no contin&amp;uacute;e su ejecuci&amp;oacute;n. El segundo hilo tiene que esperar hasta que el primer hilo haya completado su acceso al recurso y lo haya desbloqueado. La herramienta &lt;code&gt;lcnt&lt;/code&gt; mide estos conflictos de bloqueo.</target>
        </trans-unit>
        <trans-unit id="c0a911f73e6123e20f8f0f466f4a6626750c6c0c" translate="yes" xml:space="preserve">
          <source>With one parameter this function disables tracing like the Erlang call &lt;code&gt;erlang:trace(self(), false, [P2])&lt;/code&gt;, where &lt;code&gt;P2&lt;/code&gt; is the parameter to &lt;code&gt;disable_trace&lt;/code&gt;.</source>
          <target state="translated">Con un par&amp;aacute;metro, esta funci&amp;oacute;n deshabilita el rastreo como la llamada de Erlang &lt;code&gt;erlang:trace(self(), false, [P2])&lt;/code&gt; , donde &lt;code&gt;P2&lt;/code&gt; es el par&amp;aacute;metro para &lt;code&gt;disable_trace&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e6d4ec70aba9d4e8b5fe9586efa00b26788175fc" translate="yes" xml:space="preserve">
          <source>With one parameter this function turns on tracing like the Erlang call &lt;code&gt;erlang:trace(self(), true, [P2])&lt;/code&gt;, where &lt;code&gt;P2&lt;/code&gt; is the parameter to &lt;code&gt;enable_trace&lt;/code&gt;.</source>
          <target state="translated">Con un par&amp;aacute;metro, esta funci&amp;oacute;n activa el rastreo como la llamada de Erlang &lt;code&gt;erlang:trace(self(), true, [P2])&lt;/code&gt; , donde &lt;code&gt;P2&lt;/code&gt; es el par&amp;aacute;metro para &lt;code&gt;enable_trace&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c093c24e555eafd436e8bce479692e3fa910c4f5" translate="yes" xml:space="preserve">
          <source>With option &lt;code&gt;notempty&lt;/code&gt;, this match is invalid, so &lt;code&gt;run/3&lt;/code&gt; searches further into the string for occurrences of &quot;a&quot; or &quot;b&quot;.</source>
          <target state="translated">Con la opci&amp;oacute;n no &lt;code&gt;notempty&lt;/code&gt; , esta coincidencia no es v&amp;aacute;lida, por lo que &lt;code&gt;run/3&lt;/code&gt; busca m&amp;aacute;s en la cadena para las apariciones de &quot;a&quot; o &quot;b&quot;.</target>
        </trans-unit>
        <trans-unit id="66c1ff43299959efe80c7cf44d78f925f082f664" translate="yes" xml:space="preserve">
          <source>With relaxed command checking enabled, you can forcibly unregister live nodes.</source>
          <target state="translated">Con la comprobación de comandos relajados activada,puedes desregistrar por la fuerza los nodos vivos.</target>
        </trans-unit>
        <trans-unit id="d7efd92dfbce122d4c020902f9bb3ba15456f6a1" translate="yes" xml:space="preserve">
          <source>With relaxed command checking, the &lt;code&gt;epmd&lt;/code&gt; daemon can be killed from the local host with, for example, command &lt;code&gt;epmd -kill&lt;/code&gt; even if active nodes are registered. Normally only daemons with an empty node database can be killed with &lt;code&gt;epmd -kill&lt;/code&gt;.</source>
          <target state="translated">Con una verificaci&amp;oacute;n de comandos relajada, el demonio &lt;code&gt;epmd&lt;/code&gt; se puede matar desde el host local con, por ejemplo, el comando &lt;code&gt;epmd -kill&lt;/code&gt; incluso si los nodos activos est&amp;aacute;n registrados. Normalmente, solo los demonios con una base de datos de nodos vac&amp;iacute;a pueden &lt;code&gt;epmd -kill&lt;/code&gt; con epmd -kill .</target>
        </trans-unit>
        <trans-unit id="ba2f85c3f99d3d1f3a8aa5a200831ddee6512d66" translate="yes" xml:space="preserve">
          <source>With start flag &lt;code&gt;logopts&lt;/code&gt; options that modify some aspects of the logging behavior can be specified. The following options are available:</source>
          <target state="translated">Con start flag &lt;code&gt;logopts&lt;/code&gt; se pueden especificar opciones que modifican algunos aspectos del comportamiento del registro. Las siguientes opciones est&amp;aacute;n disponibles:</target>
        </trans-unit>
        <trans-unit id="b2d54fc2cd61b28fbb0b2ac41225b9c06890a3db" translate="yes" xml:space="preserve">
          <source>With term &lt;code&gt;init&lt;/code&gt; it is possible to specify initialization options for nodes defined in the test specification. There are options to start the node and to evaluate any function on the node. For details, see section &lt;code&gt;&lt;a href=&quot;ct_master_chapter#ct_slave&quot;&gt;Automatic Startup of Test Target Nodes&lt;/a&gt;&lt;/code&gt; in section Using Common Test for Large Scale Testing.</source>
          <target state="translated">Con term &lt;code&gt;init&lt;/code&gt; es posible especificar opciones de inicializaci&amp;oacute;n para nodos definidos en la especificaci&amp;oacute;n de prueba. Hay opciones para iniciar el nodo y evaluar cualquier funci&amp;oacute;n en el nodo. Para obtener m&amp;aacute;s detalles, consulte la secci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;ct_master_chapter#ct_slave&quot;&gt;Automatic Startup of Test Target Nodes&lt;/a&gt;&lt;/code&gt; en la secci&amp;oacute;n Uso de la prueba com&amp;uacute;n para pruebas a gran escala.</target>
        </trans-unit>
        <trans-unit id="7c19b360c1da842dcfaf494562528f8e12e57f86" translate="yes" xml:space="preserve">
          <source>With test specification terms, it is possible to state exactly which tests to run and in which order. A test term specifies either one or more suites, one or more test case groups (possibly nested), or one or more test cases in a group (or in multiple groups) or in a suite.</source>
          <target state="translated">Con los términos de especificación de las pruebas,es posible establecer exactamente qué pruebas se deben realizar y en qué orden.Un término de prueba especifica uno o más conjuntos,uno o más grupos de casos de prueba (posiblemente anidados),o uno o más casos de prueba en un grupo (o en múltiples grupos)o en un conjunto.</target>
        </trans-unit>
        <trans-unit id="5624e11b707d94b4e3cb1ff5e562112ac771d7a6" translate="yes" xml:space="preserve">
          <source>With that background, we can look at the generated code for &lt;code&gt;move_cx&lt;/code&gt; in &lt;code&gt;beam_hot.h&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9280ebbeabf0f612e6108e70e9b8ea954605baf1" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;?&lt;/code&gt;, the operands will be packed like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e2ec8e2fd04041ccaf4a5dc724d5cd559f81d9" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;EngineId&lt;/code&gt; argument it is possible to override the configured engine-id (SNMP-FRAMEWORK-MIB).</source>
          <target state="translated">Con el argumento &lt;code&gt;EngineId&lt;/code&gt; es posible anular el id del motor configurado (SNMP-FRAMEWORK-MIB).</target>
        </trans-unit>
        <trans-unit id="802475deadf3a5ea8c927f887684eb19f0efa3d2" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;ct_run&lt;/code&gt; flag, or &lt;code&gt;ct:run_test/1&lt;/code&gt; option &lt;code&gt;group&lt;/code&gt;, one or more test case groups can be specified, optionally in combination with specific test cases. The syntax for specifying groups on the command line is as follows:</source>
          <target state="translated">Con el indicador &lt;code&gt;ct_run&lt;/code&gt; , o el &lt;code&gt;group&lt;/code&gt; opciones &lt;code&gt;ct:run_test/1&lt;/code&gt; , se pueden especificar uno o m&amp;aacute;s grupos de casos de prueba, opcionalmente en combinaci&amp;oacute;n con casos de prueba espec&amp;iacute;ficos. La sintaxis para especificar grupos en la l&amp;iacute;nea de comando es la siguiente:</target>
        </trans-unit>
        <trans-unit id="1a3d4b278ce9ee7d8ad86780267fb6dd94072350" translate="yes" xml:space="preserve">
          <source>With the Emacs editor, the &lt;code&gt;next-error&lt;/code&gt; (&lt;code&gt;C-X `&lt;/code&gt;) function can be used indicate where a compilation error occurred, provided the error message is described by a line number.</source>
          <target state="translated">Con el editor de Emacs, la funci&amp;oacute;n &lt;code&gt;next-error&lt;/code&gt; ( &lt;code&gt;C-X `&lt;/code&gt; ) puede usarse para indicar d&amp;oacute;nde ocurri&amp;oacute; un error de compilaci&amp;oacute;n, siempre que el mensaje de error se describa con un n&amp;uacute;mero de l&amp;iacute;nea.</target>
        </trans-unit>
        <trans-unit id="ebd1467c50929ca82151785c1269db67667bbfaf" translate="yes" xml:space="preserve">
          <source>With the Erlang editing mode the entire edit-compile-bugfix cycle can be performed without leaving Emacs. Emacs can order Erlang to compile a file and it can parse the error messages to automatically place the point on the erroneous lines.</source>
          <target state="translated">Con el modo de edición Erlang se puede realizar todo el ciclo de edición-compilación-búsqueda de errores sin salir de Emacs.Emacs puede ordenar a Erlang que compile un archivo y puede analizar los mensajes de error para colocar automáticamente el punto en las líneas erróneas.</target>
        </trans-unit>
        <trans-unit id="b87f65f9f34aec9e8824942246b3c077a7feb1f5" translate="yes" xml:space="preserve">
          <source>With the SSH application it is possible to start</source>
          <target state="translated">Con la aplicación de SSH es posible iniciar</target>
        </trans-unit>
        <trans-unit id="e989e36c428437d532173efb4dc1f11980139702" translate="yes" xml:space="preserve">
          <source>With the atom &lt;code&gt;pending&lt;/code&gt;, reloading is requested for any driver and is effectuated when &lt;strong&gt;all&lt;/strong&gt; ports opened to the driver are closed. The driver replacement in this case takes place regardless if there are still pending &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;users&lt;/a&gt;&lt;/code&gt; having the driver loaded.</source>
          <target state="translated">Con el &amp;aacute;tomo &lt;code&gt;pending&lt;/code&gt; , se solicita la recarga para cualquier controlador y se efect&amp;uacute;a cuando &lt;strong&gt;todos los&lt;/strong&gt; puertos abiertos al controlador est&amp;aacute;n cerrados. El reemplazo del controlador en este caso se lleva a cabo independientemente de si todav&amp;iacute;a hay &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;users&lt;/a&gt;&lt;/code&gt; pendientes de cargar el controlador.</target>
        </trans-unit>
        <trans-unit id="a49c5a7288e37879fb1597723f7ac509b9a89558" translate="yes" xml:space="preserve">
          <source>With the exception of the &lt;code&gt;&lt;a href=&quot;#type-erl_parse&quot;&gt;erl_parse()&lt;/a&gt;&lt;/code&gt; data structures, the internal representations of abstract syntax trees are subject to change without notice, and should not be documented outside this module. Furthermore, we do not give any guarantees on how an abstract syntax tree may or may not be represented, &lt;strong&gt;with the following exceptions&lt;/strong&gt;: no syntax tree is represented by a single atom, such as &lt;code&gt;none&lt;/code&gt;, by a list constructor &lt;code&gt;[X | Y]&lt;/code&gt;, or by the empty list &lt;code&gt;[]&lt;/code&gt;. This can be relied on when writing functions that operate on syntax trees.</source>
          <target state="translated">Con la excepci&amp;oacute;n de las estructuras de datos &lt;code&gt;&lt;a href=&quot;#type-erl_parse&quot;&gt;erl_parse()&lt;/a&gt;&lt;/code&gt; , las representaciones internas de los &amp;aacute;rboles de sintaxis abstracta est&amp;aacute;n sujetas a cambios sin previo aviso y no deben documentarse fuera de este m&amp;oacute;dulo. Adem&amp;aacute;s, no ofrecemos ninguna garant&amp;iacute;a sobre c&amp;oacute;mo se puede representar o no un &amp;aacute;rbol de sintaxis abstracto, &lt;strong&gt;con las siguientes excepciones&lt;/strong&gt; : ning&amp;uacute;n &amp;aacute;rbol de sintaxis est&amp;aacute; representado por un solo &amp;aacute;tomo, como &lt;code&gt;none&lt;/code&gt; , por un constructor de lista &lt;code&gt;[X | Y]&lt;/code&gt; , o por la lista vac&amp;iacute;a &lt;code&gt;[]&lt;/code&gt; . Se puede confiar en esto al escribir funciones que operan en &amp;aacute;rboles de sintaxis.</target>
        </trans-unit>
        <trans-unit id="0799d7d4d3fdec3a7810006698814c9556e24aba" translate="yes" xml:space="preserve">
          <source>With the following example assignments in Erlang:</source>
          <target state="translated">Con las siguientes asignaciones de ejemplo en Erlang:</target>
        </trans-unit>
        <trans-unit id="51ec259decd0a3955d2d19902beece7274482a60" translate="yes" xml:space="preserve">
          <source>With the following example, you can examine that both &lt;code&gt;selected_decode_Window2&lt;/code&gt; and &lt;code&gt;selected_decode_Window1&lt;/code&gt; decodes the intended subvalue of value &lt;code&gt;Val&lt;/code&gt;:</source>
          <target state="translated">Con el siguiente ejemplo, puede examinar que tanto &lt;code&gt;selected_decode_Window2&lt;/code&gt; como &lt;code&gt;selected_decode_Window1&lt;/code&gt; decodifican el subvalor deseado del valor &lt;code&gt;Val&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f20fe5ebde2a4b97859bb1e9c2b9058bbadcfaaf" translate="yes" xml:space="preserve">
          <source>With the optional flag &lt;code&gt;-erl_args&lt;/code&gt;, options on the &lt;code&gt;ct_run&lt;/code&gt; command line can be divided into two groups:</source>
          <target state="translated">Con el indicador opcional &lt;code&gt;-erl_args&lt;/code&gt; , las opciones de la l&amp;iacute;nea de comando &lt;code&gt;ct_run&lt;/code&gt; se pueden dividir en dos grupos:</target>
        </trans-unit>
        <trans-unit id="38e84637f043080b06a85b6f9e7d2bf5daa570f9" translate="yes" xml:space="preserve">
          <source>With the same tracing turned on, the following trace output is received:</source>
          <target state="translated">Con el mismo rastreo encendido,se recibe la siguiente salida de rastreo:</target>
        </trans-unit>
        <trans-unit id="66c3da75d490fac9c0e2e40323391ab1e86a0c17" translate="yes" xml:space="preserve">
          <source>With the standard prologue, this call will return either &lt;code&gt;{ok, Result}&lt;/code&gt;, where &lt;code&gt;Result&lt;/code&gt; is a structure that the Erlang code of the grammar file has built, or &lt;code&gt;{error, {Line_number, Module, Message}}&lt;/code&gt; if there was a syntax error in the input.</source>
          <target state="translated">Con el pr&amp;oacute;logo est&amp;aacute;ndar, esta llamada devolver&amp;aacute; &lt;code&gt;{ok, Result}&lt;/code&gt; , donde &lt;code&gt;Result&lt;/code&gt; es una estructura que el c&amp;oacute;digo Erlang del archivo de gram&amp;aacute;tica ha construido, o &lt;code&gt;{error, {Line_number, Module, Message}}&lt;/code&gt; si hubo un error de sintaxis en la entrada.</target>
        </trans-unit>
        <trans-unit id="3ef3136fe39b6dd4b9b8658e80f644b3dd783d88" translate="yes" xml:space="preserve">
          <source>With the term &lt;code&gt;specs&lt;/code&gt;, a test specification can include other specifications. An included specification can either be joined with the source specification or used to produce a separate test run (as with start flag/option &lt;code&gt;join_specs&lt;/code&gt; above).</source>
          <target state="translated">Con el t&amp;eacute;rmino &lt;code&gt;specs&lt;/code&gt; , una especificaci&amp;oacute;n de prueba puede incluir otras especificaciones. Una especificaci&amp;oacute;n incluida puede &lt;code&gt;join_specs&lt;/code&gt; con la especificaci&amp;oacute;n de origen o usarse para producir una ejecuci&amp;oacute;n de prueba separada (como con el indicador de inicio / opci&amp;oacute;n join_specs arriba).</target>
        </trans-unit>
        <trans-unit id="8ebf00df9bc9722a53ebe062e7e8a324a264b1eb" translate="yes" xml:space="preserve">
          <source>With these functions, the driver sends data back to the emulator. The data is received as messages by the port owner process, see &lt;code&gt;&lt;a href=&quot;erlang#open_port-2&quot;&gt; erlang:open_port/2&lt;/a&gt;&lt;/code&gt;. The vector function and the function taking a driver binary are faster, as they avoid copying the data buffer. There is also a fast way of sending terms from the driver, without going through the binary term format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f56b5631a8e7adb42a993a80c9f2280c615cde7c" translate="yes" xml:space="preserve">
          <source>With these functions, the driver sends data back to the emulator. The data is received as messages by the port owner process, see &lt;code&gt;erlang:open_port/2&lt;/code&gt;. The vector function and the function taking a driver binary are faster, as they avoid copying the data buffer. There is also a fast way of sending terms from the driver, without going through the binary term format.</source>
          <target state="translated">Con estas funciones, el controlador env&amp;iacute;a datos al emulador. El proceso del propietario del puerto recibe los datos como mensajes, consulte &lt;code&gt;erlang:open_port/2&lt;/code&gt; . La funci&amp;oacute;n vectorial y la funci&amp;oacute;n que toma un controlador binario son m&amp;aacute;s r&amp;aacute;pidas, ya que evitan copiar el b&amp;uacute;fer de datos. Tambi&amp;eacute;n hay una forma r&amp;aacute;pida de enviar t&amp;eacute;rminos desde el controlador, sin pasar por el formato de t&amp;eacute;rmino binario.</target>
        </trans-unit>
        <trans-unit id="9b6a36166d3f6c702444500f5425ed08e5de6097" translate="yes" xml:space="preserve">
          <source>With this code added to the grammar rules, the parser produces the following value (structure) when parsing the input string &lt;code&gt;(a b c).&lt;/code&gt;. This still assumes that this was the first input line that the scanner tokenized:</source>
          <target state="translated">Con este c&amp;oacute;digo agregado a las reglas gramaticales, el analizador genera el siguiente valor (estructura) al analizar la cadena de entrada &lt;code&gt;(a b c).&lt;/code&gt; . Esto todav&amp;iacute;a supone que esta fue la primera l&amp;iacute;nea de entrada que el esc&amp;aacute;ner tokeniz&amp;oacute;:</target>
        </trans-unit>
        <trans-unit id="e713f1938bf3fb3084e642793f7a40e8d8bbb693" translate="yes" xml:space="preserve">
          <source>With this configuration, no debug messages will be logged, since they are all stopped by the primary log level.</source>
          <target state="translated">Con esta configuración,no se registrarán mensajes de depuración,ya que todos ellos son detenidos por el nivel de registro primario.</target>
        </trans-unit>
        <trans-unit id="ac97a8644ed6681924aac07ccca3a39d7757ae76" translate="yes" xml:space="preserve">
          <source>With this data model, some operations execute considerably faster than they do with the normalized data model in the &lt;code&gt;Company&lt;/code&gt; database. However, some other operations become much more complicated. In particular, it becomes more difficult to ensure that records do not contain dangling pointers to other non-existent, or deleted, records.</source>
          <target state="translated">Con este modelo de datos, algunas operaciones se ejecutan considerablemente m&amp;aacute;s r&amp;aacute;pido que con el modelo de datos normalizado en la base de datos de la &lt;code&gt;Company&lt;/code&gt; . Sin embargo, algunas otras operaciones se vuelven mucho m&amp;aacute;s complicadas. En particular, se vuelve m&amp;aacute;s dif&amp;iacute;cil asegurarse de que los registros no contengan punteros colgantes a otros registros inexistentes o eliminados.</target>
        </trans-unit>
        <trans-unit id="a35c73d89f3552b19d40e20a51d51ca37a42c624" translate="yes" xml:space="preserve">
          <source>With this expression, we could still give the index of the subpattern with the following call:</source>
          <target state="translated">Con esta expresión,todavía podríamos dar el índice del subpatrón con la siguiente llamada:</target>
        </trans-unit>
        <trans-unit id="313e2124646117e104d6eee7968ee3579fdb519c" translate="yes" xml:space="preserve">
          <source>With this form of function reference, the function that is referred to does not need to be exported from the module.</source>
          <target state="translated">Con esta forma de referencia de la función,no es necesario exportar la función a la que se hace referencia desde el módulo.</target>
        </trans-unit>
        <trans-unit id="4684103f741acbd9e584e58990d9a187601f2fbe" translate="yes" xml:space="preserve">
          <source>With this function, tables can be restored online from a backup without restarting Mnesia. &lt;code&gt;Opaque&lt;/code&gt; is forwarded to the backup module. &lt;code&gt;Args&lt;/code&gt; is a list of the following tuples:</source>
          <target state="translated">Con esta funci&amp;oacute;n, las tablas se pueden restaurar en l&amp;iacute;nea desde una copia de seguridad sin reiniciar Mnesia. &lt;code&gt;Opaque&lt;/code&gt; se reenv&amp;iacute;a al m&amp;oacute;dulo de respaldo. &lt;code&gt;Args&lt;/code&gt; es una lista de las siguientes tuplas:</target>
        </trans-unit>
        <trans-unit id="18be635abb8ae6ed8ef1990be445fb488e9f538c" translate="yes" xml:space="preserve">
          <source>With this in mind we can look at the Erlang's garbage collection again. During the copy stage anything that should be copied to the young &lt;strong&gt;to space&lt;/strong&gt; is instead copied to the old &lt;strong&gt;to space&lt;/strong&gt;&lt;strong&gt;if&lt;/strong&gt; it is &lt;code&gt;&lt;a href=&quot;https://github.com/erlang/otp/blob/OTP-18.0/erts/emulator/beam/erl_gc.c#L1127&quot;&gt;below the *high-watermark*&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdc591898bbce1e9495534489ef129ca242a249b" translate="yes" xml:space="preserve">
          <source>With this option the Distinguished Encoding Rules (&lt;code&gt;der&lt;/code&gt;) is chosen. DER is regarded as a specialized variant of the BER encoding rule. Therefore, this option only makes sense together with option &lt;code&gt;ber&lt;/code&gt;. This option sometimes adds sorting and value checks when encoding, which implies a slower encoding. The decoding routines are the same as for &lt;code&gt;ber&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="390851375656bd3e10d16d9031e247c3da30c4a7" translate="yes" xml:space="preserve">
          <source>With this option the Distinguished Encoding Rules (DER) is chosen. DER is regarded as a specialized variant of the BER encoding rule. Therefore, this option only makes sense together with option &lt;code&gt;ber&lt;/code&gt;. This option sometimes adds sorting and value checks when encoding, which implies a slower encoding. The decoding routines are the same as for &lt;code&gt;ber&lt;/code&gt;.</source>
          <target state="translated">Con esta opci&amp;oacute;n se eligen las Reglas de codificaci&amp;oacute;n distinguidas (DER). DER se considera una variante especializada de la regla de codificaci&amp;oacute;n BER. Por lo tanto, esta opci&amp;oacute;n solo tiene sentido junto con la opci&amp;oacute;n &lt;code&gt;ber&lt;/code&gt; . Esta opci&amp;oacute;n a veces agrega clasificaci&amp;oacute;n y verificaci&amp;oacute;n de valor al codificar, lo que implica una codificaci&amp;oacute;n m&amp;aacute;s lenta. Las rutinas de decodificaci&amp;oacute;n son las mismas que para &lt;code&gt;ber&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5bbf6f4e73a0719845e3065b5d609c70d3876ea6" translate="yes" xml:space="preserve">
          <source>With this option, comments inside complicated patterns can be included. However, notice that this applies only to data characters. Whitespace characters can never appear within special character sequences in a pattern, for example within sequence &lt;code&gt;(?(&lt;/code&gt; that introduces a conditional subpattern.</source>
          <target state="translated">Con esta opci&amp;oacute;n, se pueden incluir comentarios dentro de patrones complicados. Sin embargo, tenga en cuenta que esto se aplica solo a los caracteres de datos. Los caracteres de espacio en blanco nunca pueden aparecer dentro de secuencias de caracteres especiales en un patr&amp;oacute;n, por ejemplo, dentro de una secuencia &lt;code&gt;(?(&lt;/code&gt; Que introduce un subpatr&amp;oacute;n condicional.</target>
        </trans-unit>
        <trans-unit id="bbbe6bc004c4c1d69c0012b84302c6caacbcda99" translate="yes" xml:space="preserve">
          <source>With this option, the file is uncompressed while extracting. If the tar file is not compressed, this option is ignored.</source>
          <target state="translated">Con esta opción,el archivo se descomprime durante la extracción.Si el archivo tar no está comprimido,esta opción es ignorada.</target>
        </trans-unit>
        <trans-unit id="7afcca01a02c262508c18c8b083adc3d87c7c3f8" translate="yes" xml:space="preserve">
          <source>With this option, the generated &lt;code&gt;encode/2&lt;/code&gt; and &lt;code&gt;decode/2&lt;/code&gt; functions do not wrap a successful return value in an &lt;code&gt;{ok,...}&lt;/code&gt; tuple. If any error occurs, an exception will be raised.</source>
          <target state="translated">Con esta opci&amp;oacute;n, las funciones &lt;code&gt;encode/2&lt;/code&gt; y &lt;code&gt;decode/2&lt;/code&gt; generadas no envuelven un valor de retorno exitoso en una tupla &lt;code&gt;{ok,...}&lt;/code&gt; . Si ocurre alg&amp;uacute;n error, se generar&amp;aacute; una excepci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="79ed4cb6ebc92e4834967ba47cf97ac82ff9e34b" translate="yes" xml:space="preserve">
          <source>With this parameter, you can modify or disable the default handler, add custom handlers and primary logger filters, and set log levels per module.</source>
          <target state="translated">Con este parámetro,puede modificar o desactivar el manejador predeterminado,añadir manejadores personalizados y filtros de registro primario,y establecer niveles de registro por módulo.</target>
        </trans-unit>
        <trans-unit id="ff2b26d4801dab28210a7367282998370b764672" translate="yes" xml:space="preserve">
          <source>With this parameter, you can modify or disable the default handler, add custom handlers and primary logger filters, set log levels per module, and modify the &lt;code&gt;&lt;a href=&quot;#proxy&quot;&gt;proxy&lt;/a&gt;&lt;/code&gt; configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae7955e8a35568cd9fc9b07467b9022a2db2720e" translate="yes" xml:space="preserve">
          <source>With this structure, the root directory for clients of &lt;code&gt;Type1&lt;/code&gt; is &lt;code&gt;$ROOT/clients/Type1&lt;/code&gt;.</source>
          <target state="translated">Con esta estructura, el directorio ra&amp;iacute;z para los clientes de &lt;code&gt;Type1&lt;/code&gt; es &lt;code&gt;$ROOT/clients/Type1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="432b508f16a314a63d1e68410564a6c13bfb94ce" translate="yes" xml:space="preserve">
          <source>With this structure, we can now map an OBJECT IDENTIFIER in e.g. a GET NEXT request, to the correct process:</source>
          <target state="translated">Con esta estructura,ahora podemos asignar un IDENTIFICADOR DE OBJETO en,por ejemplo,una petición GET NEXT,al proceso correcto:</target>
        </trans-unit>
        <trans-unit id="96a10ded5dc5165e426d338cee6dcd81effe3aec" translate="yes" xml:space="preserve">
          <source>With this the server will create a permanent (named) process that in effect serializes all callback calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ceeafc43a87abdccde2bded1edd74d9fa27f522" translate="yes" xml:space="preserve">
          <source>With three parameters to this function, the first is either a process identifier or the registered name of a process to set trace flags on, the second is the disable list, and the third is the enable list.</source>
          <target state="translated">Con tres parámetros para esta función,el primero es un identificador de proceso o el nombre registrado de un proceso para activar los indicadores de seguimiento,el segundo es la lista de desactivación y el tercero es la lista de activación.</target>
        </trans-unit>
        <trans-unit id="e8b6348b307af60a11f370355943e934c4b4e992" translate="yes" xml:space="preserve">
          <source>With two parameters this function takes a list of trace flags to disable as first parameter and a list of trace flags to enable as second parameter. Logically, the disable list is applied first, but effectively all changes are applied atomically. The trace flags are the same as for &lt;code&gt;erlang:trace/3&lt;/code&gt;, not including &lt;code&gt;cpu_timestamp&lt;/code&gt;, but including &lt;code&gt;tracer&lt;/code&gt;.</source>
          <target state="translated">Con dos par&amp;aacute;metros, esta funci&amp;oacute;n toma una lista de indicadores de seguimiento para deshabilitar como primer par&amp;aacute;metro y una lista de indicadores de seguimiento para habilitar como segundo par&amp;aacute;metro. L&amp;oacute;gicamente, la lista de inhabilitados se aplica primero, pero efectivamente todos los cambios se aplican de forma at&amp;oacute;mica. Los indicadores de seguimiento son los mismos que para &lt;code&gt;erlang:trace/3&lt;/code&gt; , sin incluir &lt;code&gt;cpu_timestamp&lt;/code&gt; , pero con &lt;code&gt;tracer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d136f7e5cf76c4a347eacf5f74c9fbce0613f2db" translate="yes" xml:space="preserve">
          <source>With two parameters this function works as the Erlang call &lt;code&gt;erlang:trace(P1, false, [P2])&lt;/code&gt;, where &lt;code&gt;P1&lt;/code&gt; can be either a process identifier or a registered name and is specified as the first argument to the match specification function. &lt;code&gt;P2&lt;/code&gt;&lt;strong&gt;cannot&lt;/strong&gt; be &lt;code&gt;cpu_timestamp&lt;/code&gt; or &lt;code&gt;tracer&lt;/code&gt;.</source>
          <target state="translated">Con dos par&amp;aacute;metros, esta funci&amp;oacute;n funciona como la llamada de Erlang &lt;code&gt;erlang:trace(P1, false, [P2])&lt;/code&gt; , donde &lt;code&gt;P1&lt;/code&gt; puede ser un identificador de proceso o un nombre registrado y se especifica como el primer argumento de la funci&amp;oacute;n de especificaci&amp;oacute;n de coincidencia. &lt;code&gt;P2&lt;/code&gt; &lt;strong&gt;no puede&lt;/strong&gt; ser &lt;code&gt;cpu_timestamp&lt;/code&gt; ni &lt;code&gt;tracer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eda4b34bedd09e44ec9081e6140c9e1dfd683009" translate="yes" xml:space="preserve">
          <source>With two parameters, the first parameter is to be either a process identifier or the registered name of a process. In this case tracing is turned on for the designated process in the same way as in the Erlang call &lt;code&gt;erlang:trace(P1, true, [P2])&lt;/code&gt;, where &lt;code&gt;P1&lt;/code&gt; is the first and &lt;code&gt;P2&lt;/code&gt; is the second argument. The process &lt;code&gt;P1&lt;/code&gt; gets its trace messages sent to the same tracer as the process executing the statement uses. &lt;code&gt;P1&lt;/code&gt;&lt;strong&gt;cannot&lt;/strong&gt; be one of the atoms &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;new&lt;/code&gt; or &lt;code&gt;existing&lt;/code&gt; (unless they are registered names). &lt;code&gt;P2&lt;/code&gt;&lt;strong&gt;cannot&lt;/strong&gt; be &lt;code&gt;cpu_timestamp&lt;/code&gt; or &lt;code&gt;tracer&lt;/code&gt;.</source>
          <target state="translated">Con dos par&amp;aacute;metros, el primer par&amp;aacute;metro debe ser un identificador de proceso o el nombre registrado de un proceso. En este caso, el rastreo se activa para el proceso designado de la misma manera que en la llamada de Erlang &lt;code&gt;erlang:trace(P1, true, [P2])&lt;/code&gt; , donde &lt;code&gt;P1&lt;/code&gt; es el primer argumento y &lt;code&gt;P2&lt;/code&gt; es el segundo argumento. El proceso &lt;code&gt;P1&lt;/code&gt; recibe sus mensajes de rastreo enviados al mismo rastreador que usa el proceso que ejecuta la instrucci&amp;oacute;n. &lt;code&gt;P1&lt;/code&gt; &lt;strong&gt;no puede&lt;/strong&gt; ser uno de los &amp;aacute;tomos &lt;code&gt;all&lt;/code&gt; , &lt;code&gt;new&lt;/code&gt; o &lt;code&gt;existing&lt;/code&gt; (a menos que sean nombres registrados). &lt;code&gt;P2&lt;/code&gt; &lt;strong&gt;no puede&lt;/strong&gt; ser &lt;code&gt;cpu_timestamp&lt;/code&gt; ni &lt;code&gt;tracer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="088861dc6130289d10248cfe85bbf4f7f1f9d45d" translate="yes" xml:space="preserve">
          <source>Within Git</source>
          <target state="translated">Dentro de Git</target>
        </trans-unit>
        <trans-unit id="6b3360c3e0960ab42b445ecad47d54b883ada536" translate="yes" xml:space="preserve">
          <source>Within a given module, the following shorthand suffices in most cases:</source>
          <target state="translated">En la mayoría de los casos,dentro de un módulo determinado,basta con la siguiente taquigrafía:</target>
        </trans-unit>
        <trans-unit id="0241e8297c7ed76db1536f10362f611ecc026855" translate="yes" xml:space="preserve">
          <source>Within macro definitions, &lt;code&gt;//&lt;/code&gt; comments are in general not treated specially. They will be copied to the file with the generated code along with the rest of code in the body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a2917f02c4039ffaf187fe5fd6d555a6ef7c728" translate="yes" xml:space="preserve">
          <source>Within strings and quoted atoms, the following escape sequences are recognized:</source>
          <target state="translated">Dentro de las cuerdas y átomos citados,se reconocen las siguientes secuencias de escape:</target>
        </trans-unit>
        <trans-unit id="53a5de5fa09f36497fe31f500b85e996cf6d9e85" translate="yes" xml:space="preserve">
          <source>Without the parentheses, it would match &quot;cataract&quot;, &quot;erpillar&quot;, or an empty string.</source>
          <target state="translated">Sin los paréntesis,coincidiría con &quot;catarata&quot;,&quot;erpilar&quot;,o una cuerda vacía.</target>
        </trans-unit>
        <trans-unit id="1345f1a81ca030cb98d73c1808db779330bcf78e" translate="yes" xml:space="preserve">
          <source>Without the tags (the numbers in square brackets) the ASN.1 compiler refused to compile the file.</source>
          <target state="translated">Sin las etiquetas (los números entre corchetes)el compilador ASN.1 se negó a compilar el archivo.</target>
        </trans-unit>
        <trans-unit id="b66639b539cbc9a7d8de83368630ef491e405704" translate="yes" xml:space="preserve">
          <source>Without writing any instrumentation functions, we can compile the MIB and use the default implementation of it. Recall that MIBs imported by &quot;EX1-MIB.mib&quot; must be present and compiled in the current directory (&quot;./STANDARD-MIB.bin&quot;,&quot;./RFC1213-MIB.bin&quot;) when compiling.</source>
          <target state="translated">Sin escribir ninguna función de instrumentación,podemos compilar la MIB y usar la implementación por defecto de la misma.Recordemos que las MIB importadas por &quot;EX1-MIB.mib&quot; deben estar presentes y ser compiladas en el directorio actual (&quot;./STANDARD-MIB.bin&quot;,&quot;./RFC1213-MIB.bin&quot;)al compilar.</target>
        </trans-unit>
        <trans-unit id="8d22583a6ade42fd4309dee38fdacc3898c0902c" translate="yes" xml:space="preserve">
          <source>Workers are processes that perform computations, that is, they do the actual work.</source>
          <target state="translated">Los trabajadores son procesos que realizan cálculos,es decir,hacen el trabajo real.</target>
        </trans-unit>
        <trans-unit id="e985d0ce8ef0c16218446f6d7fcdb35b7c5b2148" translate="yes" xml:space="preserve">
          <source>Works as &lt;code&gt;'and'&lt;/code&gt;, but quits evaluating its arguments when one argument evaluates to something else than &lt;code&gt;true&lt;/code&gt;. Arguments are evaluated left to right.</source>
          <target state="translated">Funciona como &lt;code&gt;'and'&lt;/code&gt; , pero deja de evaluar sus argumentos cuando un argumento se eval&amp;uacute;a como algo diferente a &lt;code&gt;true&lt;/code&gt; . Los argumentos se eval&amp;uacute;an de izquierda a derecha.</target>
        </trans-unit>
        <trans-unit id="b805de4afdf90d138f66c4564f25db6bc7ea93cf" translate="yes" xml:space="preserve">
          <source>Works as &lt;code&gt;'or'&lt;/code&gt;, but quits evaluating as soon as one of its arguments evaluates to &lt;code&gt;true&lt;/code&gt;. Arguments are evaluated left to right.</source>
          <target state="translated">Funciona como &lt;code&gt;'or'&lt;/code&gt; , pero deja de evaluar tan pronto como uno de sus argumentos se eval&amp;uacute;a como &lt;code&gt;true&lt;/code&gt; . Los argumentos se eval&amp;uacute;an de izquierda a derecha.</target>
        </trans-unit>
        <trans-unit id="52d6d72bd3a0d1273818970c818a802d34ed9904" translate="yes" xml:space="preserve">
          <source>Works as &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt;, except that an extra option list is specified when creating the process.</source>
          <target state="translated">Funciona como &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt; , excepto que se especifica una lista de opciones extra al crear el proceso.</target>
        </trans-unit>
        <trans-unit id="e4e1a0545373148c846cdeddd69317753a6733cb" translate="yes" xml:space="preserve">
          <source>Works as &lt;code&gt;&lt;a href=&quot;erlang#port_command-2&quot;&gt; erlang:port_command/2&lt;/a&gt;&lt;/code&gt;, except that it is always completely asynchronous.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68e63d5c50b23e19cd48feaa939f809fb8ce20db" translate="yes" xml:space="preserve">
          <source>Works as &lt;code&gt;&lt;a href=&quot;erlang#port_command-2&quot;&gt;erlang:port_command/2&lt;/a&gt;&lt;/code&gt;, except that it is always completely asynchronous.</source>
          <target state="translated">Funciona como &lt;code&gt;&lt;a href=&quot;erlang#port_command-2&quot;&gt;erlang:port_command/2&lt;/a&gt;&lt;/code&gt; , excepto que siempre es completamente asincr&amp;oacute;nico.</target>
        </trans-unit>
        <trans-unit id="8cd2665e1fdc68f51b5e4873477e6364713b89e2" translate="yes" xml:space="preserve">
          <source>Works as &lt;code&gt;&lt;a href=&quot;erlang#whereis-1&quot;&gt; erlang:whereis/1&lt;/a&gt;&lt;/code&gt;, but restricted to ports. See &lt;code&gt;&lt;a href=&quot;#enif_whereis_pid&quot;&gt;enif_whereis_pid&lt;/a&gt;&lt;/code&gt; to resolve registered processes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="960f4a3050ed3bb0924e3d79e9a32fbc3fac36bc" translate="yes" xml:space="preserve">
          <source>Works as &lt;code&gt;&lt;a href=&quot;erlang#whereis-1&quot;&gt; erlang:whereis/1&lt;/a&gt;&lt;/code&gt;, but restricted to processes. See &lt;code&gt;&lt;a href=&quot;#enif_whereis_port&quot;&gt;enif_whereis_port&lt;/a&gt;&lt;/code&gt; to resolve registered ports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="421d33f0ac157b829988ba873a00c78043a6c8f0" translate="yes" xml:space="preserve">
          <source>Works as &lt;code&gt;&lt;a href=&quot;erlang#whereis-1&quot;&gt;erlang:whereis/1&lt;/a&gt;&lt;/code&gt;, but restricted to ports. See &lt;code&gt;&lt;a href=&quot;#enif_whereis_pid&quot;&gt;enif_whereis_pid&lt;/a&gt;&lt;/code&gt; to resolve registered processes.</source>
          <target state="translated">Funciona como &lt;code&gt;&lt;a href=&quot;erlang#whereis-1&quot;&gt;erlang:whereis/1&lt;/a&gt;&lt;/code&gt; , pero restringido a los puertos. Consulte &lt;code&gt;&lt;a href=&quot;#enif_whereis_pid&quot;&gt;enif_whereis_pid&lt;/a&gt;&lt;/code&gt; para resolver los procesos registrados.</target>
        </trans-unit>
        <trans-unit id="085224b8ff26237fd246cda51d286da34d390cf3" translate="yes" xml:space="preserve">
          <source>Works as &lt;code&gt;&lt;a href=&quot;erlang#whereis-1&quot;&gt;erlang:whereis/1&lt;/a&gt;&lt;/code&gt;, but restricted to processes. See &lt;code&gt;&lt;a href=&quot;#enif_whereis_port&quot;&gt;enif_whereis_port&lt;/a&gt;&lt;/code&gt; to resolve registered ports.</source>
          <target state="translated">Funciona como &lt;code&gt;&lt;a href=&quot;erlang#whereis-1&quot;&gt;erlang:whereis/1&lt;/a&gt;&lt;/code&gt; , pero restringido a procesos. Consulte &lt;code&gt;&lt;a href=&quot;#enif_whereis_port&quot;&gt;enif_whereis_port&lt;/a&gt;&lt;/code&gt; para resolver los puertos registrados.</target>
        </trans-unit>
        <trans-unit id="40146c9605b0953856848c19e1cf03b08671385c" translate="yes" xml:space="preserve">
          <source>Works as &lt;code&gt;load&lt;/code&gt;, except that &lt;code&gt;*old_priv_data&lt;/code&gt; already contains the value set by the last call to &lt;code&gt;load&lt;/code&gt; or &lt;code&gt;upgrade&lt;/code&gt; for the old module code. &lt;code&gt;*priv_data&lt;/code&gt; is initialized to &lt;code&gt;NULL&lt;/code&gt; when &lt;code&gt;upgrade&lt;/code&gt; is called. It is allowed to write to both &lt;code&gt;*priv_data&lt;/code&gt; and &lt;code&gt;*old_priv_data.&lt;/code&gt;</source>
          <target state="translated">Funciona como &lt;code&gt;load&lt;/code&gt; , excepto que &lt;code&gt;*old_priv_data&lt;/code&gt; ya contiene el valor establecido por la &amp;uacute;ltima llamada para &lt;code&gt;load&lt;/code&gt; o &lt;code&gt;upgrade&lt;/code&gt; el c&amp;oacute;digo del m&amp;oacute;dulo antiguo. &lt;code&gt;*priv_data&lt;/code&gt; se inicializa en &lt;code&gt;NULL&lt;/code&gt; cuando se llama a la &lt;code&gt;upgrade&lt;/code&gt; . Se permite escribir en &lt;code&gt;*priv_data&lt;/code&gt; y &lt;code&gt;*old_priv_data.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="93d1ed2124b6fb6e88a162d4ef28c9020229925d" translate="yes" xml:space="preserve">
          <source>Works as &lt;code&gt;return_trace&lt;/code&gt; plus; if the traced function exits because of an exception, an &lt;code&gt;exception_from&lt;/code&gt; trace message is generated, regardless of the exception is caught or not.</source>
          <target state="translated">Funciona como &lt;code&gt;return_trace&lt;/code&gt; plus; Si la funci&amp;oacute;n rastreada sale debido a una excepci&amp;oacute;n, se genera un mensaje de rastreo &lt;code&gt;exception_from&lt;/code&gt; , independientemente de si la excepci&amp;oacute;n se detecta o no.</target>
        </trans-unit>
        <trans-unit id="b206078d6990b20bbaaa91f4c79a77c17d0c31c4" translate="yes" xml:space="preserve">
          <source>Works as &lt;code&gt;seq_trace:set_token/2&lt;/code&gt;, but returns &lt;code&gt;true&lt;/code&gt; on success, and &lt;code&gt;'EXIT'&lt;/code&gt; on error or bad argument. Only allowed in the &lt;code&gt;MatchBody&lt;/code&gt; part and only allowed when tracing.</source>
          <target state="translated">Funciona como &lt;code&gt;seq_trace:set_token/2&lt;/code&gt; , pero devuelve &lt;code&gt;true&lt;/code&gt; en caso de &amp;eacute;xito y &lt;code&gt;'EXIT'&lt;/code&gt; en caso de error o mal argumento. Solo permitido en la parte &lt;code&gt;MatchBody&lt;/code&gt; y solo permitido al rastrear.</target>
        </trans-unit>
        <trans-unit id="d480bca78a77b5885a0910d0fbf6196db4a96eda" translate="yes" xml:space="preserve">
          <source>Works as in &lt;code&gt;&lt;a href=&quot;#match-3&quot;&gt;match/3&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#matches-3&quot;&gt;matches/3&lt;/a&gt;&lt;/code&gt;. Notice that this only defines the scope of the search for matching strings, it does not cut the binary before splitting. The bytes before and after the scope are kept in the result. See the example below.</source>
          <target state="translated">Funciona como en &lt;code&gt;&lt;a href=&quot;#match-3&quot;&gt;match/3&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;#matches-3&quot;&gt;matches/3&lt;/a&gt;&lt;/code&gt; . Tenga en cuenta que esto solo define el alcance de la b&amp;uacute;squeda de cadenas coincidentes, no corta el binario antes de dividir. Los bytes antes y despu&amp;eacute;s del alcance se mantienen en el resultado. Vea el ejemplo a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="2d4aa6d105820c86c03ede882c8250e6072a4f8d" translate="yes" xml:space="preserve">
          <source>Works essentially as &lt;code&gt;load/2&lt;/code&gt;, but loads the driver with other options. All ports using the driver are killed with reason &lt;code&gt;driver_unloaded&lt;/code&gt; when the driver is to be unloaded.</source>
          <target state="translated">Funciona esencialmente como &lt;code&gt;load/2&lt;/code&gt; , pero carga el controlador con otras opciones. Todos los puertos que utilizan el controlador se &lt;code&gt;driver_unloaded&lt;/code&gt; con motivo driver_unloaded cuando se va a descargar el controlador.</target>
        </trans-unit>
        <trans-unit id="5e9a156a4b5e3485aac781717824cc9df2b0af97" translate="yes" xml:space="preserve">
          <source>Works exactly as &lt;code&gt;&lt;a href=&quot;#reload-2&quot;&gt;reload/2&lt;/a&gt;&lt;/code&gt;, but for drivers loaded with the &lt;code&gt;&lt;a href=&quot;#load_driver-2&quot;&gt;load_driver/2&lt;/a&gt;&lt;/code&gt; interface.</source>
          <target state="translated">Funciona exactamente como &lt;code&gt;&lt;a href=&quot;#reload-2&quot;&gt;reload/2&lt;/a&gt;&lt;/code&gt; , pero para controladores cargados con la interfaz &lt;code&gt;&lt;a href=&quot;#load_driver-2&quot;&gt;load_driver/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e5bfcfa08363e9c1a9e4a5a320563ffdd6d25978" translate="yes" xml:space="preserve">
          <source>Works exactly as &lt;code&gt;ei_send&lt;/code&gt;, the alternative name is retained for backward compatibility. The function will &lt;strong&gt;not&lt;/strong&gt; be removed without prior notice.</source>
          <target state="translated">Funciona exactamente como &lt;code&gt;ei_send&lt;/code&gt; , el nombre alternativo se conserva por compatibilidad con versiones anteriores. La funci&amp;oacute;n &lt;strong&gt;no&lt;/strong&gt; se eliminar&amp;aacute; sin previo aviso.</target>
        </trans-unit>
        <trans-unit id="7179b049e2ae6550971075883dbbca59a393c2f9" translate="yes" xml:space="preserve">
          <source>Works exactly as &lt;code&gt;erlang:list_to_binary/1&lt;/code&gt;, added for completeness.</source>
          <target state="translated">Funciona exactamente como &lt;code&gt;erlang:list_to_binary/1&lt;/code&gt; , agregado para completar.</target>
        </trans-unit>
        <trans-unit id="2045c26d05c2a39ea8c38958e51e1b6854d1e881" translate="yes" xml:space="preserve">
          <source>Works exactly like &lt;code&gt;&lt;a href=&quot;#error-1&quot;&gt;error/1&lt;/a&gt;&lt;/code&gt;, but Dialyzer thinks that this BIF will return an arbitrary term. When used in a stub function for a NIF to generate an exception when the NIF library is not loaded, Dialyzer does not generate false warnings.</source>
          <target state="translated">Funciona exactamente como &lt;code&gt;&lt;a href=&quot;#error-1&quot;&gt;error/1&lt;/a&gt;&lt;/code&gt; , pero Dialyzer cree que este BIF devolver&amp;aacute; un t&amp;eacute;rmino arbitrario. Cuando se usa en una funci&amp;oacute;n stub para que un NIF genere una excepci&amp;oacute;n cuando la biblioteca NIF no est&amp;aacute; cargada, Dialyzer no genera advertencias falsas.</target>
        </trans-unit>
        <trans-unit id="b8e1ee5514688631957d392523baa902aeec57af" translate="yes" xml:space="preserve">
          <source>Works exactly like &lt;code&gt;&lt;a href=&quot;#error-2&quot;&gt;error/2&lt;/a&gt;&lt;/code&gt;, but Dialyzer thinks that this BIF will return an arbitrary term. When used in a stub function for a NIF to generate an exception when the NIF library is not loaded, Dialyzer does not generate false warnings.</source>
          <target state="translated">Funciona exactamente como &lt;code&gt;&lt;a href=&quot;#error-2&quot;&gt;error/2&lt;/a&gt;&lt;/code&gt; , pero Dialyzer cree que este BIF devolver&amp;aacute; un t&amp;eacute;rmino arbitrario. Cuando se usa en una funci&amp;oacute;n stub para que un NIF genere una excepci&amp;oacute;n cuando la biblioteca NIF no est&amp;aacute; cargada, Dialyzer no genera advertencias falsas.</target>
        </trans-unit>
        <trans-unit id="1a3109fb641a70d9d930babef77e4ba838f74539" translate="yes" xml:space="preserve">
          <source>Works exactly like &lt;code&gt;foldl/3&lt;/code&gt; but iterates the table in the opposite order for the &lt;code&gt;ordered_set&lt;/code&gt; table type. For all other table types, &lt;code&gt;foldr/3&lt;/code&gt; and &lt;code&gt;foldl/3&lt;/code&gt; are synonyms.</source>
          <target state="translated">Funciona exactamente como &lt;code&gt;foldl/3&lt;/code&gt; pero itera la tabla en el orden opuesto para el tipo de tabla &lt;code&gt;ordered_set&lt;/code&gt; . Para todos los dem&amp;aacute;s tipos de tablas, &lt;code&gt;foldr/3&lt;/code&gt; y &lt;code&gt;foldl/3&lt;/code&gt; son sin&amp;oacute;nimos.</target>
        </trans-unit>
        <trans-unit id="ede6e2c002732cbb9c8c10ac948ca96d91d6146f" translate="yes" xml:space="preserve">
          <source>Works exactly like &lt;code&gt;mnesia:dirty_first/1&lt;/code&gt; but returns the last object in Erlang term order for the &lt;code&gt;ordered_set&lt;/code&gt; table type. For all other table types, &lt;code&gt;mnesia:dirty_first/1&lt;/code&gt; and &lt;code&gt;mnesia:dirty_last/1&lt;/code&gt; are synonyms.</source>
          <target state="translated">Funciona exactamente como &lt;code&gt;mnesia:dirty_first/1&lt;/code&gt; pero devuelve el &amp;uacute;ltimo objeto en el orden de t&amp;eacute;rminos de Erlang para el tipo de tabla &lt;code&gt;ordered_set&lt;/code&gt; . Para todos los dem&amp;aacute;s tipos de tablas, &lt;code&gt;mnesia:dirty_first/1&lt;/code&gt; y &lt;code&gt;mnesia:dirty_last/1&lt;/code&gt; son sin&amp;oacute;nimos.</target>
        </trans-unit>
        <trans-unit id="f09f9e05fb05f55c1656616d936508f427869fa6" translate="yes" xml:space="preserve">
          <source>Works exactly like &lt;code&gt;mnesia:dirty_next/2&lt;/code&gt; but returns the previous object in Erlang term order for the &lt;code&gt;ordered_set&lt;/code&gt; table type. For all other table types, &lt;code&gt;mnesia:dirty_next/2&lt;/code&gt; and &lt;code&gt;mnesia:dirty_prev/2&lt;/code&gt; are synonyms.</source>
          <target state="translated">Funciona exactamente como &lt;code&gt;mnesia:dirty_next/2&lt;/code&gt; pero devuelve el objeto anterior en el orden de t&amp;eacute;rminos Erlang para el tipo de tabla &lt;code&gt;ordered_set&lt;/code&gt; . Para todos los dem&amp;aacute;s tipos de tablas, &lt;code&gt;mnesia:dirty_next/2&lt;/code&gt; y &lt;code&gt;mnesia:dirty_prev/2&lt;/code&gt; son sin&amp;oacute;nimos.</target>
        </trans-unit>
        <trans-unit id="11974cf8c00cb82ecc66409b4c6075ddde474d45" translate="yes" xml:space="preserve">
          <source>Works exactly like &lt;code&gt;mnesia:first/1&lt;/code&gt;, but returns the last object in Erlang term order for the &lt;code&gt;ordered_set&lt;/code&gt; table type. For all other table types, &lt;code&gt;mnesia:first/1&lt;/code&gt; and &lt;code&gt;mnesia:last/1&lt;/code&gt; are synonyms.</source>
          <target state="translated">Funciona exactamente como &lt;code&gt;mnesia:first/1&lt;/code&gt; , pero devuelve el &amp;uacute;ltimo objeto en el orden de t&amp;eacute;rminos Erlang para el tipo de tabla &lt;code&gt;ordered_set&lt;/code&gt; . Para todos los dem&amp;aacute;s tipos de tablas, &lt;code&gt;mnesia:first/1&lt;/code&gt; y &lt;code&gt;mnesia:last/1&lt;/code&gt; son sin&amp;oacute;nimos.</target>
        </trans-unit>
        <trans-unit id="f5f64af685225de3b4df13f2834bfefb3bc5a5c6" translate="yes" xml:space="preserve">
          <source>Works exactly like &lt;code&gt;mnesia:next/2&lt;/code&gt;, but returns the previous object in Erlang term order for the &lt;code&gt;ordered_set&lt;/code&gt; table type. For all other table types, &lt;code&gt;mnesia:next/2&lt;/code&gt; and &lt;code&gt;mnesia:prev/2&lt;/code&gt; are synonyms.</source>
          <target state="translated">Funciona exactamente como &lt;code&gt;mnesia:next/2&lt;/code&gt; , pero devuelve el objeto anterior en el orden de t&amp;eacute;rminos Erlang para el tipo de tabla &lt;code&gt;ordered_set&lt;/code&gt; . Para todos los dem&amp;aacute;s tipos de tablas, &lt;code&gt;mnesia:next/2&lt;/code&gt; y &lt;code&gt;mnesia:prev/2&lt;/code&gt; son sin&amp;oacute;nimos.</target>
        </trans-unit>
        <trans-unit id="ddb790537e4ef0facd2747c4aa79257a5ff3a327" translate="yes" xml:space="preserve">
          <source>Works just like in &lt;code&gt;&lt;a href=&quot;#NEW_PID_EXT&quot;&gt;NEW_PID_EXT&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa867b66bdf4464e1af900cf9c347d8786874ee8" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;&lt;a href=&quot;#file-2&quot;&gt;file/2&lt;/a&gt;&lt;/code&gt;, except that the environment variable &lt;code&gt;ERL_COMPILER_OPTIONS&lt;/code&gt; is not consulted.</source>
          <target state="translated">Funciona como el &lt;code&gt;&lt;a href=&quot;#file-2&quot;&gt;file/2&lt;/a&gt;&lt;/code&gt; , excepto que no se consulta la variable de entorno &lt;code&gt;ERL_COMPILER_OPTIONS&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c221d6baa71557704311e515bfcd11a497af34c4" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;&lt;a href=&quot;#forms-2&quot;&gt;forms/2&lt;/a&gt;&lt;/code&gt;, except that the environment variable &lt;code&gt;ERL_COMPILER_OPTIONS&lt;/code&gt; is not consulted.</source>
          <target state="translated">Funciona como &lt;code&gt;&lt;a href=&quot;#forms-2&quot;&gt;forms/2&lt;/a&gt;&lt;/code&gt; , excepto que no se consulta la variable de entorno &lt;code&gt;ERL_COMPILER_OPTIONS&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de55de8466623382fc89162e3c4ac168d56f7b5c" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;&lt;a href=&quot;#get_env-2&quot;&gt;get_env/2&lt;/a&gt;&lt;/code&gt; but returns value &lt;code&gt;Def&lt;/code&gt; when configuration parameter &lt;code&gt;Par&lt;/code&gt; does not exist.</source>
          <target state="translated">Funciona como &lt;code&gt;&lt;a href=&quot;#get_env-2&quot;&gt;get_env/2&lt;/a&gt;&lt;/code&gt; pero devuelve el valor &lt;code&gt;Def&lt;/code&gt; cuando el par&amp;aacute;metro de configuraci&amp;oacute;n &lt;code&gt;Par&lt;/code&gt; no existe.</target>
        </trans-unit>
        <trans-unit id="891e2c50d6effc0271b3ccde49d4759c5cc0c4d1" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;&lt;a href=&quot;#lookup-2&quot;&gt;lookup/2&lt;/a&gt;&lt;/code&gt;, but does not return the objects. Returns &lt;code&gt;true&lt;/code&gt; if one or more elements in the table has key &lt;code&gt;Key&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Funciona como &lt;code&gt;&lt;a href=&quot;#lookup-2&quot;&gt;lookup/2&lt;/a&gt;&lt;/code&gt; , pero no devuelve los objetos. Devuelve &lt;code&gt;true&lt;/code&gt; si uno o m&amp;aacute;s elementos de la tabla tienen clave &lt;code&gt;Key&lt;/code&gt; ; de lo contrario, &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7c7dfe1c4ccfa61fb28f685417a682d140814b7c" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;&lt;a href=&quot;#lookup-2&quot;&gt;lookup/2&lt;/a&gt;&lt;/code&gt;, but does not return the objects. Returns &lt;code&gt;true&lt;/code&gt; if one or more table elements has key &lt;code&gt;Key&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Funciona como &lt;code&gt;&lt;a href=&quot;#lookup-2&quot;&gt;lookup/2&lt;/a&gt;&lt;/code&gt; , pero no devuelve los objetos. Devuelve &lt;code&gt;true&lt;/code&gt; si uno o m&amp;aacute;s elementos de la tabla tienen clave &lt;code&gt;Key&lt;/code&gt; ; de lo contrario, es &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="25d036de7883d9ba69e2795b4240d604ea49bd24" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;&lt;a href=&quot;#match-2&quot;&gt;match/2&lt;/a&gt;&lt;/code&gt;, but returns only a limited (&lt;code&gt;Limit&lt;/code&gt;) number of matching objects. Term &lt;code&gt;Continuation&lt;/code&gt; can then be used in subsequent calls to &lt;code&gt;&lt;a href=&quot;#match-1&quot;&gt; match/1&lt;/a&gt;&lt;/code&gt; to get the next chunk of matching objects. This is a space-efficient way to work on objects in a table, which is faster than traversing the table object by object using &lt;code&gt;&lt;a href=&quot;#first-1&quot;&gt;first/1&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#next-2&quot;&gt;next/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ece2d9f6d9938921bea31a3a34b89ad834859c" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;&lt;a href=&quot;#match-2&quot;&gt;match/2&lt;/a&gt;&lt;/code&gt;, but returns only a limited (&lt;code&gt;Limit&lt;/code&gt;) number of matching objects. Term &lt;code&gt;Continuation&lt;/code&gt; can then be used in subsequent calls to &lt;code&gt;&lt;a href=&quot;#match-1&quot;&gt;match/1&lt;/a&gt;&lt;/code&gt; to get the next chunk of matching objects. This is a space-efficient way to work on objects in a table, which is faster than traversing the table object by object using &lt;code&gt;&lt;a href=&quot;#first-1&quot;&gt;first/1&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#next-2&quot;&gt;next/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Funciona como &lt;code&gt;&lt;a href=&quot;#match-2&quot;&gt;match/2&lt;/a&gt;&lt;/code&gt; , pero devuelve solo un n&amp;uacute;mero limitado ( &lt;code&gt;Limit&lt;/code&gt; ) de objetos coincidentes. La &lt;code&gt;Continuation&lt;/code&gt; t&amp;eacute;rmino se puede utilizar en llamadas posteriores para hacer &lt;code&gt;&lt;a href=&quot;#match-1&quot;&gt;match/1&lt;/a&gt;&lt;/code&gt; para obtener el siguiente fragmento de objetos coincidentes. Esta es una forma de trabajar con espacio eficiente en objetos en una tabla, que es m&amp;aacute;s r&amp;aacute;pida que atravesar la tabla objeto por objeto usando &lt;code&gt;&lt;a href=&quot;#first-1&quot;&gt;first/1&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;#next-2&quot;&gt;next/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6a8b88d1ee121290daac07e173d31d42cd9e5153" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;&lt;a href=&quot;#match_object-2&quot;&gt; match_object/2&lt;/a&gt;&lt;/code&gt;, but only returns a limited (&lt;code&gt;Limit&lt;/code&gt;) number of matching objects. Term &lt;code&gt;Continuation&lt;/code&gt; can then be used in subsequent calls to &lt;code&gt;&lt;a href=&quot;#match_object-1&quot;&gt; match_object/1&lt;/a&gt;&lt;/code&gt; to get the next chunk of matching objects. This is a space-efficient way to work on objects in a table, which is faster than traversing the table object by object using &lt;code&gt;&lt;a href=&quot;#first-1&quot;&gt;first/1&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#next-2&quot;&gt;next/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4553dd74ce070981c1a8fcf6d3cb0c01be4e1255" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;&lt;a href=&quot;#match_object-2&quot;&gt;match_object/2&lt;/a&gt;&lt;/code&gt;, but only returns a limited (&lt;code&gt;Limit&lt;/code&gt;) number of matching objects. Term &lt;code&gt;Continuation&lt;/code&gt; can then be used in subsequent calls to &lt;code&gt;&lt;a href=&quot;#match_object-1&quot;&gt;match_object/1&lt;/a&gt;&lt;/code&gt; to get the next chunk of matching objects. This is a space-efficient way to work on objects in a table, which is faster than traversing the table object by object using &lt;code&gt;&lt;a href=&quot;#first-1&quot;&gt;first/1&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#next-2&quot;&gt;next/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Funciona como &lt;code&gt;&lt;a href=&quot;#match_object-2&quot;&gt;match_object/2&lt;/a&gt;&lt;/code&gt; , pero solo devuelve un n&amp;uacute;mero limitado ( &lt;code&gt;Limit&lt;/code&gt; ) de objetos coincidentes. La &lt;code&gt;Continuation&lt;/code&gt; t&amp;eacute;rmino se puede usar en llamadas posteriores a &lt;code&gt;&lt;a href=&quot;#match_object-1&quot;&gt;match_object/1&lt;/a&gt;&lt;/code&gt; para obtener el siguiente fragmento de objetos coincidentes. Esta es una forma de trabajar con espacio eficiente en objetos en una tabla, que es m&amp;aacute;s r&amp;aacute;pida que atravesar la tabla objeto por objeto usando &lt;code&gt;&lt;a href=&quot;#first-1&quot;&gt;first/1&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;#next-2&quot;&gt;next/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fdb05aad10b9931ac9274b9bfbd0f42cfeeb5831" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;&lt;a href=&quot;#output_generated-1&quot;&gt;output_generated/1&lt;/a&gt;&lt;/code&gt;, except that the environment variable &lt;code&gt;ERL_COMPILER_OPTIONS&lt;/code&gt; is not consulted.</source>
          <target state="translated">Funciona como &lt;code&gt;&lt;a href=&quot;#output_generated-1&quot;&gt;output_generated/1&lt;/a&gt;&lt;/code&gt; , excepto que no se consulta la variable de entorno &lt;code&gt;ERL_COMPILER_OPTIONS&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d3a6a65715bb756fb3aa512641f3c96d83f1564a" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;&lt;a href=&quot;#read_file_info-1&quot;&gt;read_file_info/1&lt;/a&gt;&lt;/code&gt; except that if &lt;code&gt;Filename&lt;/code&gt; is a symbolic link, information about the link is returned in the &lt;code&gt;file_info&lt;/code&gt; record and the &lt;code&gt;type&lt;/code&gt; field of the record is set to &lt;code&gt;symlink&lt;/code&gt;.</source>
          <target state="translated">Funciona como &lt;code&gt;&lt;a href=&quot;#read_file_info-1&quot;&gt;read_file_info/1&lt;/a&gt;&lt;/code&gt; excepto que si &lt;code&gt;Filename&lt;/code&gt; es un enlace simb&amp;oacute;lico, la informaci&amp;oacute;n sobre el enlace se devuelve en el registro &lt;code&gt;file_info&lt;/code&gt; y el campo de &lt;code&gt;type&lt;/code&gt; del registro se establece en &lt;code&gt;symlink&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="00d1c8949d6fad0922ba5ab04fe0bc7e556fac85" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;&lt;a href=&quot;#read_file_info-2&quot;&gt;read_file_info/1,2&lt;/a&gt;&lt;/code&gt; except that if &lt;code&gt;Name&lt;/code&gt; is a symbolic link, information about the link is returned in the &lt;code&gt;file_info&lt;/code&gt; record and the &lt;code&gt;type&lt;/code&gt; field of the record is set to &lt;code&gt;symlink&lt;/code&gt;.</source>
          <target state="translated">Funciona como &lt;code&gt;&lt;a href=&quot;#read_file_info-2&quot;&gt;read_file_info/1,2&lt;/a&gt;&lt;/code&gt; excepto que si &lt;code&gt;Name&lt;/code&gt; es un enlace simb&amp;oacute;lico, la informaci&amp;oacute;n sobre el enlace se devuelve en el registro &lt;code&gt;file_info&lt;/code&gt; y el campo de &lt;code&gt;type&lt;/code&gt; del registro se establece en &lt;code&gt;symlink&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4306a682289fe29cf880491be6e2d650b6ee0a9e" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;&lt;a href=&quot;#select-2&quot;&gt;select/2&lt;/a&gt;&lt;/code&gt;, but only returns a limited (&lt;code&gt;Limit&lt;/code&gt;) number of matching objects. Term &lt;code&gt;Continuation&lt;/code&gt; can then be used in subsequent calls to &lt;code&gt;&lt;a href=&quot;#select-1&quot;&gt;select/1&lt;/a&gt;&lt;/code&gt; to get the next chunk of matching objects. This is a space-efficient way to work on objects in a table, which is still faster than traversing the table object by object using &lt;code&gt;&lt;a href=&quot;#first-1&quot;&gt;first/1&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#next-2&quot;&gt;next/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Funciona como &lt;code&gt;&lt;a href=&quot;#select-2&quot;&gt;select/2&lt;/a&gt;&lt;/code&gt; , pero solo devuelve un n&amp;uacute;mero limitado ( &lt;code&gt;Limit&lt;/code&gt; ) de objetos coincidentes. La &lt;code&gt;Continuation&lt;/code&gt; t&amp;eacute;rmino se puede usar en llamadas posteriores para &lt;code&gt;&lt;a href=&quot;#select-1&quot;&gt;select/1&lt;/a&gt;&lt;/code&gt; para obtener el siguiente fragmento de objetos coincidentes. Esta es una forma de trabajar con espacio eficiente en objetos en una tabla, que es a&amp;uacute;n m&amp;aacute;s r&amp;aacute;pida que atravesar la tabla objeto por objeto usando &lt;code&gt;&lt;a href=&quot;#first-1&quot;&gt;first/1&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;#next-2&quot;&gt;next/2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c75d2e2ac9a39c9318f254f40721c617f94d8679" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;&lt;a href=&quot;#select-2&quot;&gt;select/2&lt;/a&gt;&lt;/code&gt;, but returns the list in reverse order for table type &lt;code&gt;ordered_set&lt;/code&gt;. For all other table types, the return value is identical to that of &lt;code&gt;select/2&lt;/code&gt;.</source>
          <target state="translated">Funciona como &lt;code&gt;&lt;a href=&quot;#select-2&quot;&gt;select/2&lt;/a&gt;&lt;/code&gt; , pero devuelve la lista en orden inverso para el tipo de tabla &lt;code&gt;ordered_set&lt;/code&gt; . Para todos los dem&amp;aacute;s tipos de tablas, el valor de retorno es id&amp;eacute;ntico al de &lt;code&gt;select/2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="463bdae22eae3b8c8de82e8a6bc16d71e831e6bf" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;&lt;a href=&quot;#select-3&quot;&gt;select/3&lt;/a&gt;&lt;/code&gt;, but for table type &lt;code&gt;ordered_set&lt;/code&gt; traversing is done starting at the last object in Erlang term order and moves to the first. For all other table types, the return value is identical to that of &lt;code&gt;select/3&lt;/code&gt;.</source>
          <target state="translated">Funciona como &lt;code&gt;&lt;a href=&quot;#select-3&quot;&gt;select/3&lt;/a&gt;&lt;/code&gt; , pero para el tipo de tabla &lt;code&gt;ordered_set&lt;/code&gt; recorrido se realiza comenzando en el &amp;uacute;ltimo objeto en el orden de t&amp;eacute;rminos de Erlang y se mueve al primero. Para todos los dem&amp;aacute;s tipos de tablas, el valor de retorno es id&amp;eacute;ntico al de &lt;code&gt;select/3&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e5c1c8abeb4c1279789b624d58a590686cd04c5e" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;unicode&lt;/code&gt;, but translation is done to and from big endian UTF-16 instead of UTF-8.</source>
          <target state="translated">Funciona como &lt;code&gt;unicode&lt;/code&gt; , pero la traducci&amp;oacute;n se realiza hacia y desde big endian UTF-16 en lugar de UTF-8.</target>
        </trans-unit>
        <trans-unit id="5a412e21ff7312505155bfe656355b5d3f799926" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;unicode&lt;/code&gt;, but translation is done to and from big endian UTF-32 instead of UTF-8.</source>
          <target state="translated">Funciona como &lt;code&gt;unicode&lt;/code&gt; , pero la traducci&amp;oacute;n se realiza hacia y desde big endian UTF-32 en lugar de UTF-8.</target>
        </trans-unit>
        <trans-unit id="b35d9e673e5534d1403707a3a6113b4ad6821fdd" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;unicode&lt;/code&gt;, but translation is done to and from little endian UTF-16 instead of UTF-8.</source>
          <target state="translated">Funciona como &lt;code&gt;unicode&lt;/code&gt; , pero la traducci&amp;oacute;n se realiza hacia y desde little endian UTF-16 en lugar de UTF-8.</target>
        </trans-unit>
        <trans-unit id="8acfc4c821f38a6abb20c5dbdbea542fe62afdc7" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;unicode&lt;/code&gt;, but translation is done to and from little endian UTF-32 instead of UTF-8.</source>
          <target state="translated">Funciona como &lt;code&gt;unicode&lt;/code&gt; , pero la traducci&amp;oacute;n se realiza hacia y desde little endian UTF-32 en lugar de UTF-8.</target>
        </trans-unit>
        <trans-unit id="97b569356d25181602cf1090387087658283aa4f" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;{spawn, Command}&lt;/code&gt;, but demands the first (space-separated) token of the command to be the name of a loaded driver. If no driver with that name is loaded, a &lt;code&gt;badarg&lt;/code&gt; error is raised.</source>
          <target state="translated">Funciona como &lt;code&gt;{spawn, Command}&lt;/code&gt; , pero exige que el primer token (separado por espacios) del comando sea el nombre de un controlador cargado. Si no se carga ning&amp;uacute;n controlador con ese nombre, se &lt;code&gt;badarg&lt;/code&gt; un error de badarg .</target>
        </trans-unit>
        <trans-unit id="be0e1775e6fa37077ec9c7df7a951bfba4f6f14d" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;{spawn, FileName}&lt;/code&gt;, but only runs external executables. &lt;code&gt;FileName&lt;/code&gt; in its whole is used as the name of the executable, including any spaces. If arguments are to be passed, the &lt;code&gt;PortSettings&lt;/code&gt;&lt;code&gt;args&lt;/code&gt; and &lt;code&gt;arg0&lt;/code&gt; can be used.</source>
          <target state="translated">Funciona como &lt;code&gt;{spawn, FileName}&lt;/code&gt; , pero solo ejecuta ejecutables externos. &lt;code&gt;FileName&lt;/code&gt; en su totalidad se utiliza como el nombre del ejecutable, incluidos los espacios. Si se van a pasar argumentos, se pueden utilizar &lt;code&gt;PortSettings&lt;/code&gt; &lt;code&gt;args&lt;/code&gt; y &lt;code&gt;arg0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff53e6ce6f573342993b9753bf5e3d494ee84afd" translate="yes" xml:space="preserve">
          <source>Works the same way as &lt;code&gt;&lt;a href=&quot;#break-1&quot;&gt;ct:break/1&lt;/a&gt;&lt;/code&gt;, only argument &lt;code&gt;TestCase&lt;/code&gt; makes it possible to pause a test case executing in a parallel group. Function &lt;code&gt;&lt;a href=&quot;#continue-1&quot;&gt;ct:continue/1&lt;/a&gt;&lt;/code&gt; is to be used to resume execution of &lt;code&gt;TestCase&lt;/code&gt;.</source>
          <target state="translated">Funciona de la misma manera que &lt;code&gt;&lt;a href=&quot;#break-1&quot;&gt;ct:break/1&lt;/a&gt;&lt;/code&gt; , solo el argumento &lt;code&gt;TestCase&lt;/code&gt; hace posible pausar un caso de prueba que se ejecuta en un grupo paralelo. La funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;#continue-1&quot;&gt;ct:continue/1&lt;/a&gt;&lt;/code&gt; se utilizar&amp;aacute; para reanudar la ejecuci&amp;oacute;n de &lt;code&gt;TestCase&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9ebd064339024e6787ef613697d6eb49d74be02e" translate="yes" xml:space="preserve">
          <source>Wrap logs can be formatted one by one or all at once. See &lt;code&gt;&lt;a href=&quot;#format&quot;&gt;Formatting&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Los registros de ajuste se pueden formatear uno por uno o todos a la vez. Consulte &lt;code&gt;&lt;a href=&quot;#format&quot;&gt;Formatting&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c1c3bb1f1e3dd57b50d33d1e8bed09452b9c10aa" translate="yes" xml:space="preserve">
          <source>Wrap logs can be formatted one by one or all at once. To format one of the wrap logs in a set, specify the exact file name. To format the whole set of wrap logs, specify the name with &lt;code&gt;*&lt;/code&gt; instead of the wrap count.</source>
          <target state="translated">Los registros de ajuste se pueden formatear uno por uno o todos a la vez. Para formatear uno de los registros de ajuste de un conjunto, especifique el nombre de archivo exacto. Para formatear todo el conjunto de registros de ajuste, especifique el nombre con &lt;code&gt;*&lt;/code&gt; en lugar del recuento de ajustes.</target>
        </trans-unit>
        <trans-unit id="83ae92c027e83e4c2178c5c0cce8b7e2a0dbbeb1" translate="yes" xml:space="preserve">
          <source>Wrap logs can be formatted one by one or all at once. To format one of the wrap logs in a set, specify the exact file name. To format the whole set of wrap logs, specify the name with &lt;code&gt;*&lt;/code&gt; instead of the wrap count. For examples, see the &lt;code&gt;&lt;a href=&quot;ttb_ug#format&quot;&gt;User's Guide&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Los registros de ajuste se pueden formatear uno por uno o todos a la vez. Para formatear uno de los registros de ajuste de un conjunto, especifique el nombre de archivo exacto. Para formatear todo el conjunto de registros de ajuste, especifique el nombre con &lt;code&gt;*&lt;/code&gt; en lugar del recuento de ajustes. Para obtener ejemplos, consulte la &lt;code&gt;&lt;a href=&quot;ttb_ug#format&quot;&gt;User's Guide&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e130c2b794ac2a10a6d2f6a4c7b34014ba6446cb" translate="yes" xml:space="preserve">
          <source>Wrap logs write at most &lt;code&gt;MaxNoBytes&lt;/code&gt; bytes on each file and use &lt;code&gt;MaxNoFiles&lt;/code&gt; files before starting all over with the first wrap log file. Regardless of &lt;code&gt;MaxNoBytes&lt;/code&gt;, at least the header (if there is one) and one item are written on each wrap log file before wrapping to the next file.</source>
          <target state="translated">Wrap logs escribe como m&amp;aacute;ximo &lt;code&gt;MaxNoBytes&lt;/code&gt; bytes en cada archivo y usa los archivos &lt;code&gt;MaxNoFiles&lt;/code&gt; antes de comenzar de nuevo con el primer archivo de registro wrap. Independientemente de &lt;code&gt;MaxNoBytes&lt;/code&gt; , al menos el encabezado (si hay uno) y un elemento se escriben en cada archivo de registro de ajuste antes de pasar al siguiente archivo.</target>
        </trans-unit>
        <trans-unit id="a1d44b895451bdb9c155267fb8a9e32cbed9c1c5" translate="yes" xml:space="preserve">
          <source>Write &lt;code&gt;Value&lt;/code&gt; to counter at index &lt;code&gt;Ix&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f547e47586b96545ed428b740161240f1f7e5de" translate="yes" xml:space="preserve">
          <source>Write a &lt;code&gt;op_i_generic_breakpoint&lt;/code&gt; as the first instruction for all functions with new breakpoints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a20b1b98fe10c19dea5ce8b3fbc46b7edc4e4f78" translate="yes" xml:space="preserve">
          <source>Write a &lt;code&gt;op_i_generic_breakpoint&lt;/code&gt; as the first instruction for the function. This instruction will execute the breakpoint that it finds at offset -4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a105d6522aa571e1e8a17d1e92e4d1aea0100739" translate="yes" xml:space="preserve">
          <source>Write a module:</source>
          <target state="translated">Escriba un módulo:</target>
        </trans-unit>
        <trans-unit id="8115e50e5d2804ab52dc382d60c2fb27a2965ded" translate="yes" xml:space="preserve">
          <source>Write a pointer to the breakpoint at offset -4 from the first instruction &quot;func_info&quot; header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="862fb68e5dcbfd4f5ccc03b0d915546c33fda2ac" translate="yes" xml:space="preserve">
          <source>Write a record to the mib-storage table.</source>
          <target state="translated">Escriba un registro en la mesa del mib-almacén.</target>
        </trans-unit>
        <trans-unit id="622ba19358824007fde51e6a93cbc5f73ee9f13a" translate="yes" xml:space="preserve">
          <source>Write buffered data to disk.</source>
          <target state="translated">Escriba los datos almacenados en el disco.</target>
        </trans-unit>
        <trans-unit id="ae037ff48de64980dec3bbf67f3a772e165b5a46" translate="yes" xml:space="preserve">
          <source>Write buffers grow large, which slows down file sync operations.</source>
          <target state="translated">Los buffers de escritura se agrandan,lo que ralentiza las operaciones de sincronización de archivos.</target>
        </trans-unit>
        <trans-unit id="b7a979fe3cca58b2523647e912e509b83c88c48d" translate="yes" xml:space="preserve">
          <source>Write data on the connected socket identified by &lt;code&gt;ctx&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d031fc12a848dc71278bf7dd316744781ab426b" translate="yes" xml:space="preserve">
          <source>Write generated source to the specified directory. Defaults to the current working directory.</source>
          <target state="translated">Escriba la fuente generada en el directorio especificado.Por defecto,el directorio de trabajo actual.</target>
        </trans-unit>
        <trans-unit id="6a816c8f29a683594138fa84579ffe937a14ab50" translate="yes" xml:space="preserve">
          <source>Write generated source to the specified directory. Defaults to the current working directory. Has no effect if option &lt;code&gt;return&lt;/code&gt; is specified.</source>
          <target state="translated">Escribe la fuente generada en el directorio especificado. Por defecto, el directorio de trabajo actual. No tiene ning&amp;uacute;n efecto si se especifica la &lt;code&gt;return&lt;/code&gt; opci&amp;oacute;n .</target>
        </trans-unit>
        <trans-unit id="89eca924064063f936f3bc70867b6edb5305fe4c" translate="yes" xml:space="preserve">
          <source>Write locks are exclusive. This means that if one transaction manages to acquire a write lock on an item, no other transaction can acquire any kind of lock on the same item.</source>
          <target state="translated">Los candados de escritura son exclusivos.Esto significa que si una transacción logra adquirir un bloqueo de escritura en un artículo,ninguna otra transacción puede adquirir ningún tipo de bloqueo en el mismo artículo.</target>
        </trans-unit>
        <trans-unit id="0d8d63d23c0975c3cee9720bc48f9847ff5cff67" translate="yes" xml:space="preserve">
          <source>Write locks are normally acquired on all nodes where a replica of the table resides (and is active). Read locks are acquired on one node (the local node if a local replica exists). Most of the context-sensitive access functions acquire an implicit lock if they are started in a transaction-context. The granularity of a lock can either be a single record or an entire table.</source>
          <target state="translated">Los bloqueos de escritura se adquieren normalmente en todos los nodos donde reside (y está activa)una réplica de la tabla.Los bloqueos de lectura se adquieren en un nodo (el nodo local si existe una réplica local).La mayoría de las funciones de acceso sensibles al contexto adquieren un bloqueo implícito si se inician en un contexto de transacción.La granularidad de un candado puede ser un único registro o una tabla entera.</target>
        </trans-unit>
        <trans-unit id="f8e027a55cac814963905df28e128e53f025a271" translate="yes" xml:space="preserve">
          <source>Write locks are normally acquired on all nodes where a replica of the table resides (and is active). Read locks are acquired on one node (the local one if a local replica exists).</source>
          <target state="translated">Los bloqueos de escritura se adquieren normalmente en todos los nodos donde reside (y está activa)una réplica de la tabla.Los bloqueos de lectura se adquieren en un nodo (el local si existe una réplica local).</target>
        </trans-unit>
        <trans-unit id="bf2bd0f3b5bd4941bbbcb59f2d35430b7d335818" translate="yes" xml:space="preserve">
          <source>Write more information to a trace information file, which is read during formatting.</source>
          <target state="translated">Escriba más información en un archivo de información de rastreo,que se lee durante el formateo.</target>
        </trans-unit>
        <trans-unit id="c14a5df2d89d44300296b1dc0208a9eccf84e58f" translate="yes" xml:space="preserve">
          <source>Write operations guarantee atomicity. No intermediate results can be seen from a single write operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11e03936270e768063b945e628f72f82cd7f2a6c" translate="yes" xml:space="preserve">
          <source>Write operations to a table replica of type &lt;code&gt;disc_copies&lt;/code&gt; write data to the disc copy and to the RAM copy of the table.</source>
          <target state="translated">Las operaciones de escritura en una r&amp;eacute;plica de tabla de tipo &lt;code&gt;disc_copies&lt;/code&gt; escriben datos en la copia del disco y en la copia RAM de la tabla.</target>
        </trans-unit>
        <trans-unit id="90a9bd9c8eda795510566a785ca5d3278970b55c" translate="yes" xml:space="preserve">
          <source>Write permission: group</source>
          <target state="translated">Permiso de escritura:grupo</target>
        </trans-unit>
        <trans-unit id="6f993e4752f0f11bc37ea50a8c30a50e99af1c19" translate="yes" xml:space="preserve">
          <source>Write permission: other</source>
          <target state="translated">Permiso de escritura:otro</target>
        </trans-unit>
        <trans-unit id="c13751536b741cb4a163bff9e95b674a5a724e0c" translate="yes" xml:space="preserve">
          <source>Write permission: owner</source>
          <target state="translated">Permiso de escritura:propietario</target>
        </trans-unit>
        <trans-unit id="97f42019e59265a5d326a15e2fe411e7df077b47" translate="yes" xml:space="preserve">
          <source>Write selected entries from the history buffer to a configuration file:</source>
          <target state="translated">Escriba las entradas seleccionadas del buffer de historia en un archivo de configuración:</target>
        </trans-unit>
        <trans-unit id="356fb521c1eac37bd33dda6838decdc47505164a" translate="yes" xml:space="preserve">
          <source>Write the agent community config to the agent community config file.</source>
          <target state="translated">Escriba la configuración de la comunidad de agentes en el archivo de configuración de la comunidad de agentes.</target>
        </trans-unit>
        <trans-unit id="c363c87dac1a162c5390a7204a0846f1b2cf949b" translate="yes" xml:space="preserve">
          <source>Write the agent config to the agent config file.</source>
          <target state="translated">Escriba la configuración del agente en el archivo de configuración del agente.</target>
        </trans-unit>
        <trans-unit id="df74bec607c35c5148d3bf1e23e2f5e18ed0edfc" translate="yes" xml:space="preserve">
          <source>Write the agent context config to the agent context config file.</source>
          <target state="translated">Escriba la configuración del contexto del agente en el archivo de configuración del contexto del agente.</target>
        </trans-unit>
        <trans-unit id="74a55f3f8ef78217a3178b9a4e102552a471649e" translate="yes" xml:space="preserve">
          <source>Write the agent notify config to the agent notify config file.</source>
          <target state="translated">Escriba el archivo de notificación de configuración del agente al archivo de notificación de configuración del agente.</target>
        </trans-unit>
        <trans-unit id="0725c824356172ca0bd72db608c7d1790917ec18" translate="yes" xml:space="preserve">
          <source>Write the agent standard config to the agent standard config file.</source>
          <target state="translated">Escriba la configuración estándar del agente en el archivo de configuración estándar del agente.</target>
        </trans-unit>
        <trans-unit id="742a51874a3a64b0aff03d59e1525f641c970329" translate="yes" xml:space="preserve">
          <source>Write the agent target_addr config to the agent target_addr config file.</source>
          <target state="translated">Escriba la configuración del agente target_addr en el archivo de configuración del agente target_addr.</target>
        </trans-unit>
        <trans-unit id="e16e02f52081c8e5cb2ffdda5dfdbef9c34f3271" translate="yes" xml:space="preserve">
          <source>Write the agent target_params config to the agent target_params config file.</source>
          <target state="translated">Escriba la configuración del agente target_params en el archivo de configuración del agente target_params.</target>
        </trans-unit>
        <trans-unit id="6b556a988009e0705c0f0c8a2093ed99cbfe9d02" translate="yes" xml:space="preserve">
          <source>Write the agent usm config to the agent usm config file.</source>
          <target state="translated">Escriba la configuración del agente usm en el archivo de configuración del agente usm.</target>
        </trans-unit>
        <trans-unit id="86cca1e1d7d421bc848733c75ac6bc17cc68210b" translate="yes" xml:space="preserve">
          <source>Write the agent vacm config to the agent vacm config file.</source>
          <target state="translated">Escriba la configuración del agente Vacm en el archivo de configuración del agente Vacm.</target>
        </trans-unit>
        <trans-unit id="d8d44a989b8e869e90d14a4dd1692d7e8900440f" translate="yes" xml:space="preserve">
          <source>Write the content of the history buffer to a configuration file:</source>
          <target state="translated">Escriba el contenido del buffer de historia en un archivo de configuración:</target>
        </trans-unit>
        <trans-unit id="e8d2fcdbc95034e2cd8830dd4403075a42d13d6c" translate="yes" xml:space="preserve">
          <source>Write the instrumentation functions in Erlang and compile them.</source>
          <target state="translated">Escriba las funciones de instrumentación en Erlang y compílelas.</target>
        </trans-unit>
        <trans-unit id="dca5e01b6979dba86ef5f6da9b7d0c7f8ad85ad4" translate="yes" xml:space="preserve">
          <source>Write the manager agents config to the manager agents config file.</source>
          <target state="translated">Escriba la configuración de los agentes de gestión en el archivo de configuración de los agentes de gestión.</target>
        </trans-unit>
        <trans-unit id="858a87d5bc4ac108f9b0a840edd7c34fff07895a" translate="yes" xml:space="preserve">
          <source>Write the manager config to the manager config file.</source>
          <target state="translated">Escriba la configuración del administrador en el archivo de configuración del administrador.</target>
        </trans-unit>
        <trans-unit id="d471c2eac196383c37d37d93c2ae694af53d1078" translate="yes" xml:space="preserve">
          <source>Write the manager users config to the manager users config file.</source>
          <target state="translated">Escriba la configuración de los usuarios del administrador en el archivo de configuración de los usuarios del administrador.</target>
        </trans-unit>
        <trans-unit id="ea7e6b78113f1851a77b719964eb267bbb6243f8" translate="yes" xml:space="preserve">
          <source>Write the manager usm config to the manager usm config file.</source>
          <target state="translated">Escriba la configuración del administrador en el archivo de configuración del administrador.</target>
        </trans-unit>
        <trans-unit id="949c535de1f0852b852d57d6fe62226d17f73d93" translate="yes" xml:space="preserve">
          <source>Write your MIB in SMI in a text file.</source>
          <target state="translated">Escriba su MIB en SMI en un archivo de texto.</target>
        </trans-unit>
        <trans-unit id="e3c9ae7fc735225c30a703252970191d0ec1985c" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;Bytes&lt;/code&gt; to the file referenced by &lt;code&gt;IoDevice&lt;/code&gt;. This function is the only way to write to a file opened in &lt;code&gt;raw&lt;/code&gt; mode (although it works for normally opened files too). Returns &lt;code&gt;ok&lt;/code&gt; if successful, and &lt;code&gt;{error, Reason}&lt;/code&gt; otherwise.</source>
          <target state="translated">Escribe &lt;code&gt;Bytes&lt;/code&gt; en el archivo al que hace referencia &lt;code&gt;IoDevice&lt;/code&gt; . Esta funci&amp;oacute;n es la &amp;uacute;nica forma de escribir en un archivo abierto en modo &lt;code&gt;raw&lt;/code&gt; (aunque tambi&amp;eacute;n funciona para archivos abiertos normalmente). Devuelve &lt;code&gt;ok&lt;/code&gt; si tiene &amp;eacute;xito y &lt;code&gt;{error, Reason}&lt;/code&gt; caso contrario.</target>
        </trans-unit>
        <trans-unit id="49d88d8ee4a01a2691097be38fe3b136e062c1b3" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;Data&lt;/code&gt; to &lt;code&gt;Socket&lt;/code&gt;.</source>
          <target state="translated">Escribe &lt;code&gt;Data&lt;/code&gt; en el &lt;code&gt;Socket&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="423116e0c66464ec8597de10ecf1dce4aba64377" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;Data&lt;/code&gt; to &lt;code&gt;SslSocket&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ac02f39da90daccfaf1d97cf1fdbbf050d4299b" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;data&lt;/code&gt; to the file referenced by &lt;code&gt;Handle&lt;/code&gt;. The file is to be opened with &lt;code&gt;write&lt;/code&gt; or &lt;code&gt;append&lt;/code&gt; flag. Returns &lt;code&gt;ok&lt;/code&gt; if successful or &lt;code&gt;{error, reason()}&lt;/code&gt; otherwise.</source>
          <target state="translated">Escribe &lt;code&gt;data&lt;/code&gt; en el archivo al que hace referencia &lt;code&gt;Handle&lt;/code&gt; . El archivo se abrir&amp;aacute; con el indicador de &lt;code&gt;write&lt;/code&gt; o de &lt;code&gt;append&lt;/code&gt; . Devuelve &lt;code&gt;ok&lt;/code&gt; si tiene &amp;eacute;xito o &lt;code&gt;{error, reason()}&lt;/code&gt; caso contrario.</target>
        </trans-unit>
        <trans-unit id="fa2497f3c952063e780c16a948eff5c082d3decc" translate="yes" xml:space="preserve">
          <source>Writes a (virtual) file &lt;code&gt;RemoteFilename&lt;/code&gt; to a TFTP server.</source>
          <target state="translated">Escribe un archivo (virtual) &lt;code&gt;RemoteFilename&lt;/code&gt; en un servidor TFTP.</target>
        </trans-unit>
        <trans-unit id="9240f35a3488e9301929c2cbe6d85a949584439a" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;NULL&lt;/code&gt;-terminated string in the buffer pointed to by &lt;code&gt;buf&lt;/code&gt; of size &lt;code&gt;size&lt;/code&gt;, consisting of the string representation of the atom &lt;code&gt;term&lt;/code&gt; with encoding &lt;code&gt;&lt;a href=&quot;#ErlNifCharEncoding&quot;&gt;encode&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Escribe una cadena terminada en &lt;code&gt;NULL&lt;/code&gt; en el b&amp;uacute;fer al que apunta &lt;code&gt;buf&lt;/code&gt; de size &lt;code&gt;size&lt;/code&gt; , que consiste en la representaci&amp;oacute;n de cadena del &lt;code&gt;term&lt;/code&gt; del &amp;aacute;tomo con codificaci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;#ErlNifCharEncoding&quot;&gt;encode&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3634d9ab79165b10596b1586f67a583a9ea04a01" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;NULL&lt;/code&gt;-terminated string in the buffer pointed to by &lt;code&gt;buf&lt;/code&gt; with size &lt;code&gt;size&lt;/code&gt;, consisting of the characters in the string &lt;code&gt;list&lt;/code&gt;. The characters are written using encoding &lt;code&gt;&lt;a href=&quot;#ErlNifCharEncoding&quot;&gt;encode&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Escribe una cadena terminada en &lt;code&gt;NULL&lt;/code&gt; en el b&amp;uacute;fer al que apunta &lt;code&gt;buf&lt;/code&gt; con size &lt;code&gt;size&lt;/code&gt; , que consta de los caracteres de la &lt;code&gt;list&lt;/code&gt; a de cadenas . Los caracteres se escriben mediante &lt;code&gt;&lt;a href=&quot;#ErlNifCharEncoding&quot;&gt;encode&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="96006cf7f8155945d7ec8fbd7f526f8684308b8a" translate="yes" xml:space="preserve">
          <source>Writes a chunk to the file.</source>
          <target state="translated">Escribe un trozo en el archivo.</target>
        </trans-unit>
        <trans-unit id="59d718f29132f1e0414bdcdb53791e5964851ad6" translate="yes" xml:space="preserve">
          <source>Writes a file to the server. The file is created if it does not exist but overwritten if it exists.</source>
          <target state="translated">Escribe un archivo en el servidor.El archivo se crea si no existe,pero se sobrescribe si existe.</target>
        </trans-unit>
        <trans-unit id="8c67e29dd233b9da8b96f21dc789a53fb7c155b7" translate="yes" xml:space="preserve">
          <source>Writes a new line.</source>
          <target state="translated">Escribe una nueva línea.</target>
        </trans-unit>
        <trans-unit id="c5e76f620bf08e8f341dbb1e7466ba8f8dff5e76" translate="yes" xml:space="preserve">
          <source>Writes an integer in base 2-36, the default base is 10. A leading dash is printed for negative integers.</source>
          <target state="translated">Escribe un número entero en la base 2-36,la base por defecto es 10.Se imprime un guión inicial para los números enteros negativos.</target>
        </trans-unit>
        <trans-unit id="87c609439c3f1dd66d3875232c9deb5b66fbce4e" translate="yes" xml:space="preserve">
          <source>Writes data in the same way as &lt;code&gt;~p&lt;/code&gt;, but takes an extra argument that is the maximum depth to which terms are printed. Anything below this depth is replaced with &lt;code&gt;...&lt;/code&gt;, for example:</source>
          <target state="translated">Escribe datos de la misma manera que &lt;code&gt;~p&lt;/code&gt; , pero toma un argumento adicional que es la profundidad m&amp;aacute;xima a la que se imprimen los t&amp;eacute;rminos. Cualquier cosa por debajo de esta profundidad se reemplaza con &lt;code&gt;...&lt;/code&gt; , por ejemplo:</target>
        </trans-unit>
        <trans-unit id="ccd6b3e6918423f892a6ad7d9a5360f6780119df" translate="yes" xml:space="preserve">
          <source>Writes data in the same way as &lt;code&gt;~w&lt;/code&gt;, but takes an extra argument that is the maximum depth to which terms are printed. Anything below this depth is replaced with &lt;code&gt;...&lt;/code&gt;. For example, using &lt;code&gt;T&lt;/code&gt; above:</source>
          <target state="translated">Escribe datos de la misma manera que &lt;code&gt;~w&lt;/code&gt; , pero toma un argumento adicional que es la profundidad m&amp;aacute;xima a la que se imprimen los t&amp;eacute;rminos. Cualquier cosa por debajo de esta profundidad se reemplaza con &lt;code&gt;...&lt;/code&gt; . Por ejemplo, usando &lt;code&gt;T&lt;/code&gt; arriba:</target>
        </trans-unit>
        <trans-unit id="2d64d5867a243be9061399b7123c3937a95092e4" translate="yes" xml:space="preserve">
          <source>Writes data with the standard syntax. This is used to output Erlang terms. Atoms are printed within quotes if they contain embedded non-printable characters. Atom characters &amp;gt; 255 are escaped unless the Unicode translation modifier (&lt;code&gt;t&lt;/code&gt;) is used. Floats are printed accurately as the shortest, correctly rounded string.</source>
          <target state="translated">Escribe datos con la sintaxis est&amp;aacute;ndar. Se utiliza para generar t&amp;eacute;rminos de Erlang. Los &amp;aacute;tomos se imprimen entre comillas si contienen caracteres incrustados no imprimibles. Los caracteres Atom&amp;gt; 255 se escapan a menos que se utilice el modificador de traducci&amp;oacute;n Unicode ( &lt;code&gt;t&lt;/code&gt; ). Los flotadores se imprimen con precisi&amp;oacute;n como la cuerda m&amp;aacute;s corta y correctamente redondeada.</target>
        </trans-unit>
        <trans-unit id="0ae0f9f7fb8da22844c48c2c1e0c8cca4432f865" translate="yes" xml:space="preserve">
          <source>Writes file information from a &lt;code&gt;file_info&lt;/code&gt; record to the file specified by &lt;code&gt;Name&lt;/code&gt;. See &lt;code&gt;file:write_file_info/[2,3]&lt;/code&gt; for information about the record.</source>
          <target state="translated">Escribe informaci&amp;oacute;n de archivo de un registro &lt;code&gt;file_info&lt;/code&gt; en el archivo especificado por &lt;code&gt;Name&lt;/code&gt; . Consulte el &lt;code&gt;file:write_file_info/[2,3]&lt;/code&gt; para obtener informaci&amp;oacute;n sobre el registro.</target>
        </trans-unit>
        <trans-unit id="5f911be02665842be0086f1f403e5bbcb8cc3684" translate="yes" xml:space="preserve">
          <source>Writes generated rules to &lt;code&gt;Output&lt;/code&gt; instead of the default &lt;code&gt;&amp;lt;File&amp;gt;.Pbeam&lt;/code&gt;. &lt;code&gt;Output&lt;/code&gt; can be a filename or an &lt;code&gt;io_device()&lt;/code&gt;. To write to stdout, use &lt;code&gt;standard_io&lt;/code&gt;. However, if &lt;code&gt;binary&lt;/code&gt; is set, nothing is written to &lt;code&gt;Output&lt;/code&gt; and the result is returned to the caller with &lt;code&gt;{ok, ModuleName, Binary}&lt;/code&gt;.</source>
          <target state="translated">Escribe las reglas generadas en &lt;code&gt;Output&lt;/code&gt; en lugar del &lt;code&gt;&amp;lt;File&amp;gt;.Pbeam&lt;/code&gt; predeterminado . &lt;code&gt;Output&lt;/code&gt; puede ser un nombre de archivo o un &lt;code&gt;io_device()&lt;/code&gt; . Para escribir en stdout, use &lt;code&gt;standard_io&lt;/code&gt; . Sin embargo, si se establece &lt;code&gt;binary&lt;/code&gt; , no se escribe nada en &lt;code&gt;Output&lt;/code&gt; y el resultado se devuelve al llamador con &lt;code&gt;{ok, ModuleName, Binary}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4dacf7c76ad7993807bea9feae5720cfd11d3c39" translate="yes" xml:space="preserve">
          <source>Writes information about the Erlang runtime system into the &lt;code&gt;&lt;a href=&quot;#ErlDrvSysInfo&quot;&gt;ErlDrvSysInfo&lt;/a&gt;&lt;/code&gt; structure referred to by the first argument. The second argument is to be the size of the &lt;code&gt;&lt;a href=&quot;#ErlDrvSysInfo&quot;&gt;ErlDrvSysInfo&lt;/a&gt;&lt;/code&gt; structure, that is, &lt;code&gt;sizeof(ErlDrvSysInfo)&lt;/code&gt;.</source>
          <target state="translated">Escribe informaci&amp;oacute;n sobre el sistema de tiempo de ejecuci&amp;oacute;n de Erlang en la estructura &lt;code&gt;&lt;a href=&quot;#ErlDrvSysInfo&quot;&gt;ErlDrvSysInfo&lt;/a&gt;&lt;/code&gt; a la que hace referencia el primer argumento. El segundo argumento debe ser el tama&amp;ntilde;o de la estructura &lt;code&gt;&lt;a href=&quot;#ErlDrvSysInfo&quot;&gt;ErlDrvSysInfo&lt;/a&gt;&lt;/code&gt; , es decir, &lt;code&gt;sizeof(ErlDrvSysInfo)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc88daf5cb215faec7f56594456357a2fd81a3fa" translate="yes" xml:space="preserve">
          <source>Writes information about the local process &lt;code&gt;Pid&lt;/code&gt; on standard error. The only allowed value for the atom &lt;code&gt;Type&lt;/code&gt; is &lt;code&gt;backtrace&lt;/code&gt;, which shows the contents of the call stack, including information about the call chain, with the current function printed first. The format of the output is not further defined.</source>
          <target state="translated">Escribe informaci&amp;oacute;n sobre el proceso local &lt;code&gt;Pid&lt;/code&gt; en error est&amp;aacute;ndar. El &amp;uacute;nico valor permitido para el Atom &lt;code&gt;Type&lt;/code&gt; es &lt;code&gt;backtrace&lt;/code&gt; , que muestra el contenido de la pila de llamadas, incluida informaci&amp;oacute;n sobre la cadena de llamadas, con la funci&amp;oacute;n actual impresa primero. El formato de la salida no se define m&amp;aacute;s.</target>
        </trans-unit>
        <trans-unit id="250e32eed820901a002622eee79cae6f62358060" translate="yes" xml:space="preserve">
          <source>Writes miscellaneous system information to file. This information will typically be requested by the Erlang/OTP team at Ericsson AB when reporting an issue.</source>
          <target state="translated">Escribe información variada del sistema para archivarla.Esta información será normalmente solicitada por el equipo de Erlang/OTP en Ericsson AB cuando se informa de un problema.</target>
        </trans-unit>
        <trans-unit id="9805b948ee39d3a1dcc417c333486fca32502f6d" translate="yes" xml:space="preserve">
          <source>Writes new line to the standard output (&lt;code&gt;IoDevice&lt;/code&gt;).</source>
          <target state="translated">Escribe una nueva l&amp;iacute;nea en la salida est&amp;aacute;ndar ( &lt;code&gt;IoDevice&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="dc0bcaf3a0eda5fffbae12642198bdd930d2ab4e" translate="yes" xml:space="preserve">
          <source>Writes record &lt;code&gt;Record&lt;/code&gt; to table &lt;code&gt;Tab&lt;/code&gt;.</source>
          <target state="translated">Escribe el registro &lt;code&gt;Record&lt;/code&gt; en la tabla &lt;code&gt;Tab&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f2f7deee0adb7ef069b9a66df9b47f796af1b036" translate="yes" xml:space="preserve">
          <source>Writes term &lt;code&gt;DataToWrite&lt;/code&gt; using &lt;code&gt;UserData&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4323e451b949ee736a0f4b2b70c7768dcd1414d6" translate="yes" xml:space="preserve">
          <source>Writes term &lt;code&gt;DataToWrite&lt;/code&gt; using &lt;code&gt;UserPrivate&lt;/code&gt;.</source>
          <target state="translated">Escribe el t&amp;eacute;rmino &lt;code&gt;DataToWrite&lt;/code&gt; usando &lt;code&gt;UserPrivate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1bca0ebfd4032923999bda67fa6a5d739027c0fc" translate="yes" xml:space="preserve">
          <source>Writes term &lt;code&gt;Term&lt;/code&gt; to the standard output (&lt;code&gt;IoDevice&lt;/code&gt;).</source>
          <target state="translated">Escribe el t&amp;eacute;rmino &lt;code&gt;Term&lt;/code&gt; en la salida est&amp;aacute;ndar ( &lt;code&gt;IoDevice&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="7f4196f8290e1326de51378f3eeba9701f94dc38" translate="yes" xml:space="preserve">
          <source>Writes the characters of &lt;code&gt;CharData&lt;/code&gt; to the I/O server (&lt;code&gt;IoDevice&lt;/code&gt;).</source>
          <target state="translated">Escribe los caracteres de &lt;code&gt;CharData&lt;/code&gt; en el servidor de E / S ( &lt;code&gt;IoDevice&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="0e09719348776a162994ba30580c7a6f9428ce70" translate="yes" xml:space="preserve">
          <source>Writes the contents of the &lt;code&gt;iodata&lt;/code&gt; term &lt;code&gt;Bytes&lt;/code&gt; to file &lt;code&gt;Filename&lt;/code&gt;. The file is created if it does not exist. If it exists, the previous contents are overwritten. Returns &lt;code&gt;ok&lt;/code&gt; if successful, otherwise &lt;code&gt;{error, Reason}&lt;/code&gt;.</source>
          <target state="translated">Escribe el contenido del t&amp;eacute;rmino &lt;code&gt;Bytes&lt;/code&gt; de &lt;code&gt;iodata&lt;/code&gt; en el archivo &lt;code&gt;Filename&lt;/code&gt; archivo . El archivo se crea si no existe. Si existe, se sobrescriben los contenidos anteriores. Devuelve &lt;code&gt;ok&lt;/code&gt; si tiene &amp;eacute;xito, de lo contrario &lt;code&gt;{error, Reason}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="11190aacf8c69f8fb520076a2dcf5b01800eb809" translate="yes" xml:space="preserve">
          <source>Writes the data with standard syntax in the same way as &lt;code&gt;~w&lt;/code&gt;, but breaks terms whose printed representation is longer than one line into many lines and indents each line sensibly. Left-justification is not supported. It also tries to detect flat lists of printable characters and output these as strings. For example:</source>
          <target state="translated">Escribe los datos con la sintaxis est&amp;aacute;ndar de la misma manera que &lt;code&gt;~w&lt;/code&gt; , pero divide los t&amp;eacute;rminos cuya representaci&amp;oacute;n impresa es m&amp;aacute;s larga que una l&amp;iacute;nea en muchas l&amp;iacute;neas y sangra cada l&amp;iacute;nea de manera sensata. No se admite la justificaci&amp;oacute;n a la izquierda. Tambi&amp;eacute;n intenta detectar listas planas de caracteres imprimibles y generarlas como cadenas. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="edd67c05e7abf8a55e7a45df50941009e549a0e1" translate="yes" xml:space="preserve">
          <source>Writes the items in &lt;code&gt;Data&lt;/code&gt; (&lt;code&gt;[]&lt;/code&gt;) on the standard output (&lt;code&gt;IoDevice&lt;/code&gt;) in accordance with &lt;code&gt;Format&lt;/code&gt;. &lt;code&gt;Format&lt;/code&gt; contains plain characters that are copied to the output device, and control sequences for formatting, see below. If &lt;code&gt;Format&lt;/code&gt; is an atom or a binary, it is first converted to a list with the aid of &lt;code&gt;atom_to_list/1&lt;/code&gt; or &lt;code&gt;binary_to_list/1&lt;/code&gt;. Example:</source>
          <target state="translated">Escribe los elementos en &lt;code&gt;Data&lt;/code&gt; ( &lt;code&gt;[]&lt;/code&gt; ) en la salida est&amp;aacute;ndar ( &lt;code&gt;IoDevice&lt;/code&gt; ) de acuerdo con el &lt;code&gt;Format&lt;/code&gt; . &lt;code&gt;Format&lt;/code&gt; contiene caracteres sin formato que se copian en el dispositivo de salida y las secuencias de control para el formateo, consulte a continuaci&amp;oacute;n. Si &lt;code&gt;Format&lt;/code&gt; es un &amp;aacute;tomo o un binario, primero se convierte en una lista con la ayuda de &lt;code&gt;atom_to_list/1&lt;/code&gt; o &lt;code&gt;binary_to_list/1&lt;/code&gt; . Ejemplo:</target>
        </trans-unit>
        <trans-unit id="bd82ff973a69c0238fad9984d419046978981ebd" translate="yes" xml:space="preserve">
          <source>Writes to an open file, without waiting for the result. If the handle is valid, the function returns &lt;code&gt;{async, N}&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt; is a term guaranteed to be unique between calls of &lt;code&gt;awrite&lt;/code&gt;. The result of the &lt;code&gt;write&lt;/code&gt; operation is sent as a message to the calling process. This message has the form &lt;code&gt;{async_reply, N, Result}&lt;/code&gt;, where &lt;code&gt;Result&lt;/code&gt; is the result from the write, either &lt;code&gt;ok&lt;/code&gt;, or &lt;code&gt;{error, reason()}&lt;/code&gt;.</source>
          <target state="translated">Escribe en un archivo abierto, sin esperar el resultado. Si el identificador es v&amp;aacute;lido, la funci&amp;oacute;n devuelve &lt;code&gt;{async, N}&lt;/code&gt; , donde &lt;code&gt;N&lt;/code&gt; es un t&amp;eacute;rmino que se garantiza que es &amp;uacute;nico entre las llamadas de &lt;code&gt;awrite&lt;/code&gt; . El resultado de la operaci&amp;oacute;n de &lt;code&gt;write&lt;/code&gt; se env&amp;iacute;a como mensaje al proceso de llamada. Este mensaje tiene la forma &lt;code&gt;{async_reply, N, Result}&lt;/code&gt; , donde &lt;code&gt;Result&lt;/code&gt; es el resultado de la escritura, ya sea &lt;code&gt;ok&lt;/code&gt; o &lt;code&gt;{error, reason()}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="26fb3ded0b364d94ea3b435f52d46bb1b759c7e5" translate="yes" xml:space="preserve">
          <source>Writing Queries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8b21a2f6012726608cc6d5de10114b91e956733" translate="yes" xml:space="preserve">
          <source>Writing a Distribution Module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65c3315845b6576aaceef957f89c4f30ba513678" translate="yes" xml:space="preserve">
          <source>Writing an Erlang Driver</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebbe02155b5dbdcd751344ef2f9500cb0170fb86" translate="yes" xml:space="preserve">
          <source>Writing an Erlang Interface for the Driver</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95560093414725c51ed8e81fdb4501026a286814" translate="yes" xml:space="preserve">
          <source>Writing an Erlang driver is not easy. The driver is written as some callback functions called by the Erlang emulator when data is sent to the driver, or the driver has any data available on a file descriptor. As the driver callback routines execute in the main thread of the Erlang machine, the callback functions can perform no blocking activity whatsoever. The callbacks are only to set up file descriptors for waiting and/or read/write available data. All I/O must be non-blocking. Driver callbacks are however executed in sequence, why a global state can safely be updated within the routines.</source>
          <target state="translated">Escribir un conductor de Erlang no es fácil.El controlador se escribe como algunas funciones de devolución de llamada que el emulador Erlang llama cuando se envían datos al controlador,o el controlador tiene cualquier dato disponible en un descriptor de archivo.Como las rutinas de devolución de llamada del controlador se ejecutan en el hilo principal de la máquina Erlang,las funciones de devolución de llamada no pueden realizar ninguna actividad de bloqueo.Las llamadas de retorno sólo sirven para configurar los descriptores de archivo para la espera y/o la lectura/escritura de los datos disponibles.Todas las E/S deben ser no bloqueantes.Sin embargo,las devoluciones de llamada de los controladores se ejecutan en secuencia,por lo que un estado global puede actualizarse con seguridad dentro de las rutinas.</target>
        </trans-unit>
        <trans-unit id="98612a0f6652d2811b89aef0049934abe9f222dd" translate="yes" xml:space="preserve">
          <source>Writing or deleting in transaction context creates a local copy of each modified record. Thus, modifying each record in a large table uses much memory. &lt;code&gt;Mnesia&lt;/code&gt; compensates for every written or deleted record during the iteration in a transaction context, which can reduce the performance. If possible, avoid writing or deleting records in the same transaction before iterating over the table.</source>
          <target state="translated">Escribir o eliminar en el contexto de la transacci&amp;oacute;n crea una copia local de cada registro modificado. Por lo tanto, modificar cada registro en una tabla grande usa mucha memoria. &lt;code&gt;Mnesia&lt;/code&gt; compensa cada registro escrito o eliminado durante la iteraci&amp;oacute;n en un contexto de transacci&amp;oacute;n, lo que puede reducir el rendimiento. Si es posible, evite escribir o eliminar registros en la misma transacci&amp;oacute;n antes de iterar sobre la tabla.</target>
        </trans-unit>
        <trans-unit id="2158219f2b23b9c1414ff2f997bddb708f004bc7" translate="yes" xml:space="preserve">
          <source>Writing or deleting in transaction-context creates a local copy of each modified record during the transaction. During iteration, that is, &lt;code&gt;mnesia:fold[lr]/4&lt;/code&gt;, &lt;code&gt;mnesia:next/2&lt;/code&gt;, &lt;code&gt;mnesia:prev/2&lt;/code&gt;, and &lt;code&gt;mnesia:snmp_get_next_index/2&lt;/code&gt;, Mnesia compensates for every written or deleted record, which can reduce the performance.</source>
          <target state="translated">Escribir o eliminar en el contexto de la transacci&amp;oacute;n crea una copia local de cada registro modificado durante la transacci&amp;oacute;n. Durante la iteraci&amp;oacute;n, es decir, &lt;code&gt;mnesia:fold[lr]/4&lt;/code&gt; , &lt;code&gt;mnesia:next/2&lt;/code&gt; , &lt;code&gt;mnesia:prev/2&lt;/code&gt; y &lt;code&gt;mnesia:snmp_get_next_index/2&lt;/code&gt; , Mnesia compensa cada registro escrito o eliminado, lo que puede reducir el rendimiento.</target>
        </trans-unit>
        <trans-unit id="68c916ed041ac56f7b5fe8fba00f4d3d9ae0c2d5" translate="yes" xml:space="preserve">
          <source>X Windows -- Development headers and libraries are needed to build the Erlang/OTP application &lt;code&gt;gs&lt;/code&gt; on Unix/Linux.</source>
          <target state="translated">X Windows: se necesitan bibliotecas y encabezados de desarrollo para construir la aplicaci&amp;oacute;n Erlang / OTP &lt;code&gt;gs&lt;/code&gt; en Unix / Linux.</target>
        </trans-unit>
        <trans-unit id="a3b8dd5cb99e3ebe719f171549ef8509d873b705" translate="yes" xml:space="preserve">
          <source>X509 Certificates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8b1dc96e1bc7b76c3d0a668d65241f9122d97e6" translate="yes" xml:space="preserve">
          <source>XLineOp ::= &lt;code&gt;XXL&lt;/code&gt;</source>
          <target state="translated">XLineOp :: = &lt;code&gt;XXL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ebaf703afcca9ac7d80cec79f8e4c38185d744c2" translate="yes" xml:space="preserve">
          <source>XML Base directory. If using string/1 default is current directory. If using file/1 default is directory of given file.</source>
          <target state="translated">Directorio de la base XML.Si se utiliza la cadena 1,el directorio actual es el predeterminado.Si se utiliza archivo/1,el valor predeterminado es el directorio del archivo en cuestión.</target>
        </trans-unit>
        <trans-unit id="d4942b7a0ca58ce9a60651831280a6a1a686d64d" translate="yes" xml:space="preserve">
          <source>XML SAX parser API</source>
          <target state="translated">API del analizador XML SAX</target>
        </trans-unit>
        <trans-unit id="76a2ea89ec47012fd2585a7f145edb56f2e38495" translate="yes" xml:space="preserve">
          <source>XSD Base directory.</source>
          <target state="translated">Directorio de la Base XSD.</target>
        </trans-unit>
        <trans-unit id="cd5914d573e50149e231d0679f3994ef5c65dc1a" translate="yes" xml:space="preserve">
          <source>XSLT stylesheets are often used when transforming XML documents, to other XML documents or (X)HTML for presentation. XSLT contains quite many functions and learning them all may take some effort. This document assumes a basic level of understanding of XSLT.</source>
          <target state="translated">Las hojas de estilo XSLT se utilizan a menudo al transformar documentos XML,a otros documentos XML o (X)HTML para la presentación.XSLT contiene bastantes funciones y aprenderlas todas puede requerir cierto esfuerzo.Este documento asume un nivel básico de comprensión de XSLT.</target>
        </trans-unit>
        <trans-unit id="91baafa2e6d790f0fd1e6b4c5d5dc90e636fd65f" translate="yes" xml:space="preserve">
          <source>Xan matches characters that have either the L (letter) or the N (number) property. Xps matches the characters tab, linefeed, vertical tab, form feed, or carriage return, and any other character that has the Z (separator) property. Xsp is the same as Xps; it used to exclude vertical tab, for Perl compatibility, but Perl changed, and so PCRE followed at release 8.34. Xwd matches the same characters as Xan, plus underscore.</source>
          <target state="translated">Xan coincide con los caracteres que tienen la propiedad de la L (letra)o la N (número).Xps coincide con la pestaña de caracteres,el salto de línea,la pestaña vertical,el salto de forma o el retorno de carro y cualquier otro carácter que tenga la propiedad Z (separador).Xsp es lo mismo que Xps;solía excluir la tabulación vertical,para la compatibilidad con Perl,pero Perl cambió,por lo que PCRE siguió en la versión 8.34.Xwd coincide con los mismos caracteres que Xan,más el subrayado.</target>
        </trans-unit>
        <trans-unit id="03cef8b5cbbd5ddf91318d63826f1481c80cbbe0" translate="yes" xml:space="preserve">
          <source>Xcode -- Download and install via the Mac App Store. Read about &lt;code&gt;&lt;a href=&quot;#Advanced-configuration-and-build-of-ErlangOTP_Building_OS-X-Darwin&quot;&gt;Building on a Mac&lt;/a&gt;&lt;/code&gt; before proceeding.</source>
          <target state="translated">Xcode: descargue e instale a trav&amp;eacute;s de la Mac App Store. Lea acerca de la &lt;code&gt;&lt;a href=&quot;#Advanced-configuration-and-build-of-ErlangOTP_Building_OS-X-Darwin&quot;&gt;Building on a Mac&lt;/a&gt;&lt;/code&gt; antes de continuar.</target>
        </trans-unit>
        <trans-unit id="8a29eadc00876c3f9f89861cd30ff0f184e72723" translate="yes" xml:space="preserve">
          <source>Xoroshiro116+, 58 bits precision and period of 2^116-1</source>
          <target state="translated">Xoroshiro116+,58 bits de precisión y período de 2^116-1</target>
        </trans-unit>
        <trans-unit id="1c4ee5ba0dc1d63e243633dc6e5bf69f588c08d5" translate="yes" xml:space="preserve">
          <source>Xoroshiro928**, 58 bits precision and a period of 2^928-1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90f37ece5b491baad7255059492161cafaeb7b80" translate="yes" xml:space="preserve">
          <source>Xorshift1024*, 64 bits precision and a period of 2^1024-1</source>
          <target state="translated">Xorshift1024*,precisión de 64 bits y un período de 2^1024-1</target>
        </trans-unit>
        <trans-unit id="ed79300a918bc9b08991c4abf3e87cb038afc4cd" translate="yes" xml:space="preserve">
          <source>Xorshift116**, 58 bits precision and period of 2^116-1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdfa54ab076a7f65b355fcd3585f50eac93fa010" translate="yes" xml:space="preserve">
          <source>Xorshift116+, 58 bits precision and period of 2^116-1</source>
          <target state="translated">Xorshift116+,58 bits de precisión y período de 2^116-1</target>
        </trans-unit>
        <trans-unit id="2ca96fe21b48b46326339731f1910ba4c39289d2" translate="yes" xml:space="preserve">
          <source>Xref is a cross reference tool that can be used for finding dependencies between functions, modules, applications and releases.</source>
          <target state="translated">Xref es una herramienta de referencia cruzada que puede utilizarse para encontrar las dependencias entre las funciones,los módulos,las aplicaciones y los lanzamientos.</target>
        </trans-unit>
        <trans-unit id="bf5db07cbf5de7a48698edf64bb54bb7181dae3a" translate="yes" xml:space="preserve">
          <source>Xref is a cross reference tool that can be used for finding dependencies between functions, modules, applications and releases. It does so by analyzing the defined functions and the function calls.</source>
          <target state="translated">Xref es una herramienta de referencia cruzada que puede utilizarse para encontrar dependencias entre funciones,módulos,aplicaciones y versiones.Lo hace analizando las funciones definidas y las llamadas a funciones.</target>
        </trans-unit>
        <trans-unit id="0f82f4c6fd6d2e271c18dc16920529f19f31513c" translate="yes" xml:space="preserve">
          <source>Y is divisible by 4, but not by 100.</source>
          <target state="translated">Y es divisible por 4,pero no por 100.</target>
        </trans-unit>
        <trans-unit id="ed7e88a0e39e56909a7112967eb11b815a801630" translate="yes" xml:space="preserve">
          <source>Y is divisible by 400.</source>
          <target state="translated">Y es divisible por 400.</target>
        </trans-unit>
        <trans-unit id="dc754adcb9e0fb9bdb59e4affd3affee795f3be1" translate="yes" xml:space="preserve">
          <source>Year cannot be abbreviated. For example, 93 denotes year 93, not 1993. The valid range depends on the underlying operating system. The date tuple must denote a valid date.</source>
          <target state="translated">El año no puede ser abreviado.Por ejemplo,93 denota el año 93,no 1993.El rango válido depende del sistema operativo subyacente.La tupla de fechas debe denotar una fecha válida.</target>
        </trans-unit>
        <trans-unit id="1a2942b3d437716ba7dc18750c7ae62ec76eaafa" translate="yes" xml:space="preserve">
          <source>Yecc source code. It generates an &lt;code&gt;.erl&lt;/code&gt; file.</source>
          <target state="translated">C&amp;oacute;digo fuente de Yecc. Genera un archivo &lt;code&gt;.erl&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5f411c3c587484a1d48aefa7d4b4fd59514ba6b7" translate="yes" xml:space="preserve">
          <source>Yecc will add the extension &lt;code&gt;.yrl&lt;/code&gt; to the &lt;code&gt;Grammarfile&lt;/code&gt; name, the extension &lt;code&gt;.hrl&lt;/code&gt; to the &lt;code&gt;Includefile&lt;/code&gt; name, and the extension &lt;code&gt;.erl&lt;/code&gt; to the &lt;code&gt;Parserfile&lt;/code&gt; name, unless the extension is already there.</source>
          <target state="translated">Yecc agregar&amp;aacute; la extensi&amp;oacute;n &lt;code&gt;.yrl&lt;/code&gt; al nombre del &lt;code&gt;Grammarfile&lt;/code&gt; , la extensi&amp;oacute;n &lt;code&gt;.hrl&lt;/code&gt; al nombre del archivo de &lt;code&gt;Includefile&lt;/code&gt; y la extensi&amp;oacute;n &lt;code&gt;.erl&lt;/code&gt; al nombre del &lt;code&gt;Parserfile&lt;/code&gt; , a menos que la extensi&amp;oacute;n ya est&amp;eacute; all&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="5397e0583f14f6c88de06b1ef28f460a1fb5b0ae" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="translated">Yes</target>
        </trans-unit>
        <trans-unit id="d71ce5e0c5df7542006b59dc9b3838226fe8ef23" translate="yes" xml:space="preserve">
          <source>Yes, it will. The compiler will remove the building of the sub binary in the second clause:</source>
          <target state="translated">Sí,lo hará.El compilador eliminará la construcción del sub-binario en la segunda cláusula:</target>
        </trans-unit>
        <trans-unit id="db0743dfbc21679c5d5f6843a71f19fba1d8be6c" translate="yes" xml:space="preserve">
          <source>Yet another possibility, closer to the hardware, could be:</source>
          <target state="translated">Otra posibilidad,más cercana al hardware,podría ser:</target>
        </trans-unit>
        <trans-unit id="c2bf8cb1a13b6661ace7ce9f9719055b32f2e726" translate="yes" xml:space="preserve">
          <source>Yi</source>
          <target state="translated">Yi</target>
        </trans-unit>
        <trans-unit id="aa9f168c3a59a63ca6dd4dca9f3f7875cef10b5b" translate="yes" xml:space="preserve">
          <source>Yields &lt;code&gt;false&lt;/code&gt; if the node has no associated comments, and &lt;code&gt;true&lt;/code&gt; otherwise.</source>
          <target state="translated">Da &lt;code&gt;false&lt;/code&gt; si el nodo no tiene comentarios asociados y &lt;code&gt;true&lt;/code&gt; caso contrario.</target>
        </trans-unit>
        <trans-unit id="fa41faedce6ff2c37f6aa8305079a3e9471a91f5" translate="yes" xml:space="preserve">
          <source>Yields a document representing a fixed, unbreakable sequence of characters. The string should contain only &lt;strong&gt;printable&lt;/strong&gt; characters (tabs allowed but not recommended), and &lt;strong&gt;not&lt;/strong&gt; newline, line feed, vertical tab, etc. A tab character (&lt;code&gt;\t&lt;/code&gt;) is interpreted as padding of 1-8 space characters to the next column of 8 characters &lt;strong&gt;within the string&lt;/strong&gt;.</source>
          <target state="translated">Produce un documento que representa una secuencia de caracteres fija e irrompible. La cadena debe contener solo caracteres &lt;strong&gt;imprimibles&lt;/strong&gt; (tabulaciones permitidas pero no recomendadas), y &lt;strong&gt;no&lt;/strong&gt; nueva l&amp;iacute;nea, salto de l&amp;iacute;nea, tabulaci&amp;oacute;n vertical, etc. Un car&amp;aacute;cter de tabulaci&amp;oacute;n ( &lt;code&gt;\t&lt;/code&gt; ) se interpreta como un relleno de 1-8 caracteres de espacio a la siguiente columna de 8 caracteres &lt;strong&gt;dentro de la cadena&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="6342bb3b872c93baac7b84d88b17cec249d4f899" translate="yes" xml:space="preserve">
          <source>Yields a document representing paragraph-formatted plain text. The optional &lt;code&gt;Indentation&lt;/code&gt; parameter specifies the extra indentation of the first line of the paragraph. For example, &lt;code&gt;text_par(&quot;Lorem ipsum dolor sit amet&quot;, N)&lt;/code&gt; could represent</source>
          <target state="translated">Produce un documento que representa texto sin formato con formato de p&amp;aacute;rrafo. El par&amp;aacute;metro opcional &lt;code&gt;Indentation&lt;/code&gt; especifica la sangr&amp;iacute;a adicional de la primera l&amp;iacute;nea del p&amp;aacute;rrafo. Por ejemplo, &lt;code&gt;text_par(&quot;Lorem ipsum dolor sit amet&quot;, N)&lt;/code&gt; podr&amp;iacute;a representar</target>
        </trans-unit>
        <trans-unit id="9c8539219eb3fd77fc26dc9662796e268067a2b3" translate="yes" xml:space="preserve">
          <source>Yields the empty document, which has neither height nor width. (&lt;code&gt;empty&lt;/code&gt; is thus different from an empty &lt;code&gt;&lt;a href=&quot;#text-1&quot;&gt;text&lt;/a&gt;&lt;/code&gt; string, which has zero width but height 1.)</source>
          <target state="translated">Produce el documento vac&amp;iacute;o, que no tiene alto ni ancho. ( &lt;code&gt;empty&lt;/code&gt; es, por tanto, diferente de una cadena de &lt;code&gt;&lt;a href=&quot;#text-1&quot;&gt;text&lt;/a&gt;&lt;/code&gt; o vac&amp;iacute;a , que tiene un ancho cero pero una altura 1.)</target>
        </trans-unit>
        <trans-unit id="f0ae54f0f8d8777ee1ccd332c51571592e4ee4d9" translate="yes" xml:space="preserve">
          <source>Yields the most compact form for an abstract list skeleton. The result either represents &quot;&lt;code&gt;[E1, ..., En | Tail]&lt;/code&gt;&quot;, where &lt;code&gt;Tail&lt;/code&gt; is not a list skeleton, or otherwise simply &quot;&lt;code&gt;[E1, ..., En]&lt;/code&gt;&quot;. Annotations on subtrees of &lt;code&gt;Node&lt;/code&gt; that represent list skeletons may be lost, but comments will be propagated to the result. Returns &lt;code&gt;Node&lt;/code&gt; itself if &lt;code&gt;Node&lt;/code&gt; does not represent a list skeleton.</source>
          <target state="translated">Produce la forma m&amp;aacute;s compacta para un esqueleto de lista abstracto. El resultado representa &quot; &lt;code&gt;[E1, ..., En | Tail]&lt;/code&gt; &quot;, donde &lt;code&gt;Tail&lt;/code&gt; no es un esqueleto de lista, o simplemente &quot; &lt;code&gt;[E1, ..., En]&lt;/code&gt; &quot;. Las anotaciones en los sub&amp;aacute;rboles de &lt;code&gt;Node&lt;/code&gt; que representan esqueletos de listas se pueden perder, pero los comentarios se propagar&amp;aacute;n al resultado. Devuelve &lt;code&gt;Node&lt;/code&gt; en s&amp;iacute; mismo si &lt;code&gt;Node&lt;/code&gt; no representa un esqueleto de lista.</target>
        </trans-unit>
        <trans-unit id="3aae39c5f243994db952309b19946cb1797fc221" translate="yes" xml:space="preserve">
          <source>You also need a gcc. If you installed the 64 bit MSYS2 you run:</source>
          <target state="translated">También necesitas un gcc.Si instalas el MSYS2 de 64 bits,lo ejecutas:</target>
        </trans-unit>
        <trans-unit id="32f112bfb0980b7c1e6d0b5fb0e140b4b66ac8d3" translate="yes" xml:space="preserve">
          <source>You are free to modify the contents of an object retrieved this way. However, when you do so, the registry is not aware of your changes, possibly causing it to be missed the next time you make an &lt;code&gt;Mnesia&lt;/code&gt; backup of the registry contents. This can be avoided if you mark the object as dirty after any such changes with &lt;code&gt;&lt;a href=&quot;registry#ei_reg_markdirty&quot;&gt; ei_reg_markdirty&lt;/a&gt;&lt;/code&gt;, or pass appropriate flags to &lt;code&gt;&lt;a href=&quot;registry#ei_reg_dump&quot;&gt; ei_reg_dump&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c04a1eb0d947a600ddd92a5988643cdbc486eb8" translate="yes" xml:space="preserve">
          <source>You are free to modify the contents of an object retrieved this way. However, when you do so, the registry is not aware of your changes, possibly causing it to be missed the next time you make an &lt;code&gt;Mnesia&lt;/code&gt; backup of the registry contents. This can be avoided if you mark the object as dirty after any such changes with &lt;code&gt;&lt;a href=&quot;registry#ei_reg_markdirty&quot;&gt;registry:ei_reg_markdirty&lt;/a&gt;&lt;/code&gt;, or pass appropriate flags to &lt;code&gt;&lt;a href=&quot;registry#ei_reg_dump&quot;&gt;registry:ei_reg_dump&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Puede modificar el contenido de un objeto recuperado de esta manera. Sin embargo, cuando lo hace, el registro no es consciente de sus cambios, lo que posiblemente haga que se pierda la pr&amp;oacute;xima vez que haga una copia de seguridad de &lt;code&gt;Mnesia&lt;/code&gt; del contenido del registro. Esto se puede evitar si marca el objeto como sucio despu&amp;eacute;s de dichos cambios con el &lt;code&gt;&lt;a href=&quot;registry#ei_reg_markdirty&quot;&gt;registry:ei_reg_markdirty&lt;/a&gt;&lt;/code&gt; , o si pasa los indicadores apropiados al &lt;code&gt;&lt;a href=&quot;registry#ei_reg_dump&quot;&gt;registry:ei_reg_dump&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c4bb533d899593942b7c539acb47d838b6949b7d" translate="yes" xml:space="preserve">
          <source>You are not allowed to allocate the &lt;code&gt;&lt;a href=&quot;#ErlDrvThreadOpts&quot;&gt; ErlDrvThreadOpts&lt;/a&gt;&lt;/code&gt; structure by yourself. It must be allocated and initialized by &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_opts_create&quot;&gt; erl_drv_thread_opts_create&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b2719466257c10a5240ebb739639c19a3d6df70" translate="yes" xml:space="preserve">
          <source>You are not allowed to allocate the &lt;code&gt;&lt;a href=&quot;#ErlDrvThreadOpts&quot;&gt; ErlDrvThreadOpts&lt;/a&gt;&lt;/code&gt; structure by yourself. It must be allocated and initialized by &lt;code&gt;erl_drv_thread_opts_create&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9038edf94d4f5a46f306613699436e553a464d65" translate="yes" xml:space="preserve">
          <source>You are not allowed to allocate the &lt;code&gt;&lt;a href=&quot;#ErlDrvThreadOpts&quot;&gt;ErlDrvThreadOpts&lt;/a&gt;&lt;/code&gt; structure by yourself. It must be allocated and initialized by &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_opts_create&quot;&gt;erl_drv_thread_opts_create&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">No puede asignar la estructura &lt;code&gt;&lt;a href=&quot;#ErlDrvThreadOpts&quot;&gt;ErlDrvThreadOpts&lt;/a&gt;&lt;/code&gt; por su cuenta. Debe ser asignado e inicializado por &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_opts_create&quot;&gt;erl_drv_thread_opts_create&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c5b8225aef9f734d74aff7e241e5e65c8a19461f" translate="yes" xml:space="preserve">
          <source>You are not allowed to allocate the &lt;code&gt;&lt;a href=&quot;#ErlDrvThreadOpts&quot;&gt;ErlDrvThreadOpts&lt;/a&gt;&lt;/code&gt; structure by yourself. It must be allocated and initialized by &lt;code&gt;erl_drv_thread_opts_create&lt;/code&gt;.</source>
          <target state="translated">No puede asignar la estructura &lt;code&gt;&lt;a href=&quot;#ErlDrvThreadOpts&quot;&gt;ErlDrvThreadOpts&lt;/a&gt;&lt;/code&gt; por su cuenta. Debe ser asignado e inicializado por &lt;code&gt;erl_drv_thread_opts_create&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="30dfa6dc48b2fd68234390e1944fedce147fe434" translate="yes" xml:space="preserve">
          <source>You are now ready to install the Erlang/OTP release! The following command will install the release on your system.</source>
          <target state="translated">¡Ya está listo para instalar el lanzamiento de Erlang/OTP! El siguiente comando instalará la versión en su sistema.</target>
        </trans-unit>
        <trans-unit id="86428152b8de2ea524147637b62d7083d68fbb6a" translate="yes" xml:space="preserve">
          <source>You are only allowed to terminate threads created with &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_create&quot;&gt; erl_drv_thread_create&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22729cd29e226b629e272d1a72f8f88eeaa3c868" translate="yes" xml:space="preserve">
          <source>You are only allowed to terminate threads created with &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_create&quot;&gt;erl_drv_thread_create&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Solo se le permite terminar los hilos creados con &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_create&quot;&gt;erl_drv_thread_create&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="59411bea6575cd8a0ea474d86bf6c78783f3875a" translate="yes" xml:space="preserve">
          <source>You can &lt;strong&gt;not&lt;/strong&gt; pass a configuration file using the &lt;code&gt;--xcomp-conf&lt;/code&gt; argument when you invoke &lt;code&gt;configure&lt;/code&gt; directly. The &lt;code&gt;--xcomp-conf&lt;/code&gt; argument can only be passed to &lt;code&gt;otp_build configure&lt;/code&gt;.</source>
          <target state="translated">Puede &lt;strong&gt;no&lt;/strong&gt; pasar un archivo de configuraci&amp;oacute;n con el &lt;code&gt;--xcomp-conf&lt;/code&gt; argumento cuando se invoca &lt;code&gt;configure&lt;/code&gt; directamente. El argumento &lt;code&gt;--xcomp-conf&lt;/code&gt; solo se puede pasar a &lt;code&gt;otp_build configure&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="31ba2b699604c0b66a45e32962748f955f8d0e56" translate="yes" xml:space="preserve">
          <source>You can add custom metadata, either by specifying a map as the last parameter to any of the log macros or the API functions, or by setting process metadata with &lt;code&gt;&lt;a href=&quot;#set_process_metadata-1&quot;&gt; set_process_metadata/1&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#update_process_metadata-1&quot;&gt; update_process_metadata/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35abdd922e455eb4e3458a582559df01c500c039" translate="yes" xml:space="preserve">
          <source>You can add custom metadata, either by specifying a map as the last parameter to any of the log macros or the API functions, or by setting process metadata with &lt;code&gt;&lt;a href=&quot;#set_process_metadata-1&quot;&gt;set_process_metadata/1&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#update_process_metadata-1&quot;&gt;update_process_metadata/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Puede agregar metadatos personalizados, ya sea especificando un mapa como &amp;uacute;ltimo par&amp;aacute;metro para cualquiera de las macros de registro o las funciones de la API, o configurando metadatos de proceso con &lt;code&gt;&lt;a href=&quot;#set_process_metadata-1&quot;&gt;set_process_metadata/1&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;#update_process_metadata-1&quot;&gt;update_process_metadata/1&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d1677347fdd98391eca3e5758569bcaf17f81c50" translate="yes" xml:space="preserve">
          <source>You can also configure the system so that the default handler prints log events to a single file, or to a set of wrap logs via &lt;code&gt;&lt;a href=&quot;disk_log&quot;&gt;disk_log&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n puede configurar el sistema para que el controlador predeterminado imprima los eventos de registro en un solo archivo o en un conjunto de registros de &lt;code&gt;&lt;a href=&quot;disk_log&quot;&gt;disk_log&lt;/a&gt;&lt;/code&gt; trav&amp;eacute;s de disk_log .</target>
        </trans-unit>
        <trans-unit id="09c242cbdd777d34ff137ac36a09731f4c420b6d" translate="yes" xml:space="preserve">
          <source>You can also enable code coverage in your test specifications (see section &lt;code&gt;&lt;a href=&quot;run_test_chapter#test_specifications&quot;&gt;Test Specifications&lt;/a&gt;&lt;/code&gt; in section Running Tests and Analyzing Results).</source>
          <target state="translated">Tambi&amp;eacute;n puede habilitar la cobertura de c&amp;oacute;digo en sus especificaciones de prueba (consulte la secci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;run_test_chapter#test_specifications&quot;&gt;Test Specifications&lt;/a&gt;&lt;/code&gt; en la secci&amp;oacute;n Ejecuci&amp;oacute;n de pruebas y an&amp;aacute;lisis de resultados).</target>
        </trans-unit>
        <trans-unit id="4483ff84688ea822bef4ab30674260e42c82a3bb" translate="yes" xml:space="preserve">
          <source>You can also pass the cover specification file name in a call to &lt;code&gt;&lt;a href=&quot;ct#run_test-1&quot;&gt;ct:run_test/1&lt;/a&gt;&lt;/code&gt;, by adding a &lt;code&gt;{cover,CoverSpec}&lt;/code&gt; tuple to argument &lt;code&gt;Opts&lt;/code&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n puede pasar el nombre del archivo de especificaci&amp;oacute;n de portada en una llamada a &lt;code&gt;&lt;a href=&quot;ct#run_test-1&quot;&gt;ct:run_test/1&lt;/a&gt;&lt;/code&gt; , agregando una tupla &lt;code&gt;{cover,CoverSpec}&lt;/code&gt; al argumento &lt;code&gt;Opts&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff9c4040aa00a5a989818cbbf45a6a4df71fe177" translate="yes" xml:space="preserve">
          <source>You can also print the configuration of a specific handler using &lt;code&gt;&lt;a href=&quot;logger#i-1&quot;&gt;logger:i(HandlerName)&lt;/a&gt;&lt;/code&gt;, or fetch the configuration using &lt;code&gt;&lt;a href=&quot;logger#get_handler_config-0&quot;&gt;logger:get_handler_config()&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;logger#get_handler_config-1&quot;&gt;logger:get_handler_config(HandlerName)&lt;/a&gt;&lt;/code&gt; for a specific handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9833460ab32f6f87bd66898784de048510ecec5" translate="yes" xml:space="preserve">
          <source>You can also set match specifications on messages. By default, if tracing messages, all messages sent and/or received by the process or port are traced. Match specifications can be used to reduce the number of traced messages and/or to trigger more information in the trace messages.</source>
          <target state="translated">También puede establecer especificaciones de coincidencia en los mensajes.Por defecto,si se rastrean los mensajes,se rastrean todos los mensajes enviados y/o recibidos por el proceso o puerto.Las especificaciones de coincidencia pueden utilizarse para reducir el número de mensajes rastreados y/o para activar más información en los mensajes de rastreo.</target>
        </trans-unit>
        <trans-unit id="551210ee2bccd3e951c3dbbc9801ca4766798e44" translate="yes" xml:space="preserve">
          <source>You can also use the function &lt;code&gt;&lt;a href=&quot;eunit#test-1&quot;&gt;eunit:test/1&lt;/a&gt;&lt;/code&gt; to run arbitrary tests, for example to try out some more advanced test descriptors (see &lt;code&gt;&lt;a href=&quot;#EUnit_test_representation&quot;&gt;EUnit test representation&lt;/a&gt;&lt;/code&gt;). For example, running &lt;code&gt;eunit:test(m)&lt;/code&gt; does the same thing as the auto-generated function &lt;code&gt;m:test()&lt;/code&gt;, while &lt;code&gt;eunit:test({inparallel, m})&lt;/code&gt; runs the same test cases but executes them all in parallel.</source>
          <target state="translated">Tambi&amp;eacute;n puede utilizar la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;eunit#test-1&quot;&gt;eunit:test/1&lt;/a&gt;&lt;/code&gt; para ejecutar pruebas arbitrarias, por ejemplo, para probar algunos descriptores de prueba m&amp;aacute;s avanzados (consulte &lt;code&gt;&lt;a href=&quot;#EUnit_test_representation&quot;&gt;EUnit test representation&lt;/a&gt;&lt;/code&gt; ). Por ejemplo, ejecutar &lt;code&gt;eunit:test(m)&lt;/code&gt; hace lo mismo que la funci&amp;oacute;n autogenerada &lt;code&gt;m:test()&lt;/code&gt; , mientras que &lt;code&gt;eunit:test({inparallel, m})&lt;/code&gt; ejecuta los mismos casos de prueba pero los ejecuta todos en paralelo.</target>
        </trans-unit>
        <trans-unit id="a9ff8518e43bdc2355b6cee436db8164290ae7ae" translate="yes" xml:space="preserve">
          <source>You can always decide not to format the whole trace data contained in the fetch directory, but analyze single files instead. To do so, a single file (or list of files) must be passed as the first argument to &lt;code&gt;format/1,2&lt;/code&gt;.</source>
          <target state="translated">Siempre puede decidir no formatear todos los datos de seguimiento contenidos en el directorio de recuperaci&amp;oacute;n, sino analizar archivos individuales. Para hacerlo, se debe pasar un solo archivo (o lista de archivos) como primer argumento al &lt;code&gt;format/1,2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2e1cbb080a7afb39db98054ecb11afc153564abe" translate="yes" xml:space="preserve">
          <source>You can always traverse the result set sequential by using next</source>
          <target state="translated">Siempre puedes atravesar el conjunto de resultados de forma secuencial usando el siguiente</target>
        </trans-unit>
        <trans-unit id="3c6196d23418036383d9c12ca26e3eb698d8404e" translate="yes" xml:space="preserve">
          <source>You can change what is printed to the log by using the formatter template:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a98ace90529f363634dbd989ec1efbfa146358f" translate="yes" xml:space="preserve">
          <source>You can check the setting of this by calling &lt;code&gt;io:getopts()&lt;/code&gt;, which gives you an option list containing &lt;code&gt;{encoding,unicode}&lt;/code&gt; or &lt;code&gt;{encoding,latin1}&lt;/code&gt;.</source>
          <target state="translated">Puede verificar la configuraci&amp;oacute;n de esto llamando a &lt;code&gt;io:getopts()&lt;/code&gt; , que le da una lista de opciones que contiene &lt;code&gt;{encoding,unicode}&lt;/code&gt; o &lt;code&gt;{encoding,latin1}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8574e316289208e29729f5052d5efe32f2f00e93" translate="yes" xml:space="preserve">
          <source>You can check this option by calling &lt;code&gt;io:printable_range/0&lt;/code&gt;, which returns &lt;code&gt;unicode&lt;/code&gt; or &lt;code&gt;latin1&lt;/code&gt;. To be compatible with future (expected) extensions to the settings, rather use &lt;code&gt;io_lib:printable_list/1&lt;/code&gt; to check if a list is printable according to the setting. That function takes into account new possible settings returned from &lt;code&gt;io:printable_range/0&lt;/code&gt;.</source>
          <target state="translated">Puede marcar esta opci&amp;oacute;n llamando a &lt;code&gt;io:printable_range/0&lt;/code&gt; , que devuelve &lt;code&gt;unicode&lt;/code&gt; o &lt;code&gt;latin1&lt;/code&gt; . Para ser compatible con futuras extensiones (esperadas) de la configuraci&amp;oacute;n, use &lt;code&gt;io_lib:printable_list/1&lt;/code&gt; para verificar si una lista se puede imprimir de acuerdo con la configuraci&amp;oacute;n. Esa funci&amp;oacute;n tiene en cuenta las nuevas configuraciones posibles devueltas por &lt;code&gt;io:printable_range/0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d0e04a4a6eb568c8b8c3a76a7b176057654292be" translate="yes" xml:space="preserve">
          <source>You can choose to export and import code coverage data between tests. If you specify the name of an export file in the cover specification file, &lt;code&gt;Common Test&lt;/code&gt; exports collected coverage data to this file at the end of the test. You can similarly specify previously exported data to be imported and included in the analysis for a test (multiple import files can be specified). This way, the total code coverage can be analyzed without necessarily running all tests at once.</source>
          <target state="translated">Puede elegir exportar e importar datos de cobertura de c&amp;oacute;digo entre pruebas. Si especifica el nombre de un archivo de exportaci&amp;oacute;n en el archivo de especificaci&amp;oacute;n de portada, &lt;code&gt;Common Test&lt;/code&gt; exporta los datos de cobertura recopilados a este archivo al final de la prueba. De forma similar, puede especificar que los datos exportados previamente se importen e incluyan en el an&amp;aacute;lisis para una prueba (se pueden especificar varios archivos de importaci&amp;oacute;n). De esta manera, la cobertura total del c&amp;oacute;digo se puede analizar sin necesariamente ejecutar todas las pruebas a la vez.</target>
        </trans-unit>
        <trans-unit id="e7fb46f54e79b2ee6f1b2af9d941dce71c1854fe" translate="yes" xml:space="preserve">
          <source>You can easily create deadlocks if processes suspends each other (directly or in circles). In ERTS versions prior to ERTS version 10.0, the runtime system prevented such deadlocks, but this prevention has now been removed due to performance reasons.</source>
          <target state="translated">Se pueden crear fácilmente puntos muertos si los procesos se suspenden unos a otros (directamente o en círculos).En las versiones de ERTS anteriores a la versión 10.0,el sistema de tiempo de ejecución evitaba tales bloqueos,pero esta prevención se ha eliminado ahora por razones de rendimiento.</target>
        </trans-unit>
        <trans-unit id="423b821d23b692bfa4b48fe6190af1e377d23e6e" translate="yes" xml:space="preserve">
          <source>You can either install using the installation paths determined by &lt;code&gt;configure&lt;/code&gt; (4), or install manually using (5).</source>
          <target state="translated">Puede instalar usando las rutas de instalaci&amp;oacute;n determinadas por &lt;code&gt;configure&lt;/code&gt; (4), o instalar manualmente usando (5).</target>
        </trans-unit>
        <trans-unit id="c34178d3c81c96b486894bd95b9f44ba16a15c48" translate="yes" xml:space="preserve">
          <source>You can even write case switches using &lt;code&gt;?Q&lt;/code&gt; macros as patterns. For example:</source>
          <target state="translated">Incluso puede escribir cambios de caso usando macros &lt;code&gt;?Q&lt;/code&gt; como patrones. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="1639897175fdaf0ee0817cc235065e52a6c6ddc8" translate="yes" xml:space="preserve">
          <source>You can find examples of these three examples of usage below.</source>
          <target state="translated">A continuación se presentan ejemplos de estos tres ejemplos de uso.</target>
        </trans-unit>
        <trans-unit id="14f57329dd909da731d2afd5bd8834c0250077de" translate="yes" xml:space="preserve">
          <source>You can generate events of any existing &lt;code&gt;type&lt;/code&gt;, but the &lt;code&gt;internal&lt;/code&gt; type can only be generated through action &lt;code&gt;next_event&lt;/code&gt;. Hence, it cannot come from an external source, so you can be certain that an &lt;code&gt;internal&lt;/code&gt; event is an event from your state machine to itself.</source>
          <target state="translated">Puede generar eventos de cualquier &lt;code&gt;type&lt;/code&gt; existente , pero el tipo &lt;code&gt;internal&lt;/code&gt; solo se puede generar mediante la acci&amp;oacute;n &lt;code&gt;next_event&lt;/code&gt; . Por lo tanto, no puede provenir de una fuente externa, por lo que puede estar seguro de que un evento &lt;code&gt;internal&lt;/code&gt; es un evento de su m&amp;aacute;quina de estado a s&amp;iacute; mismo.</target>
        </trans-unit>
        <trans-unit id="36825f6895831ae9ce55288bf8e10f1c7f638cd5" translate="yes" xml:space="preserve">
          <source>You can iterate over a backup, either to transform it into a new backup, or only read it. The function &lt;code&gt;&lt;a href=&quot;mnesia#traverse_backup-4&quot;&gt;mnesia:traverse_backup(Source, [SourceMod,] Target, [TargetMod,] Fun, Acc)&lt;/a&gt;&lt;/code&gt;, which normally returns &lt;code&gt;{ok, LastAcc}&lt;/code&gt;, is used for both of these purposes.</source>
          <target state="translated">Puede iterar sobre una copia de seguridad, ya sea para transformarla en una nueva copia de seguridad o solo leerla. La funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;mnesia#traverse_backup-4&quot;&gt;mnesia:traverse_backup(Source, [SourceMod,] Target, [TargetMod,] Fun, Acc)&lt;/a&gt;&lt;/code&gt; , que normalmente devuelve &lt;code&gt;{ok, LastAcc}&lt;/code&gt; , se utiliza para ambos prop&amp;oacute;sitos.</target>
        </trans-unit>
        <trans-unit id="5b52459c10b0116f65512e9127ad338dfcd988bd" translate="yes" xml:space="preserve">
          <source>You can lose accuracy and precision when converting between time units. To minimize such loss, collect all data at &lt;code&gt;native&lt;/code&gt; time unit and do the conversion on the end result.</source>
          <target state="translated">Puede perder exactitud y precisi&amp;oacute;n al convertir entre unidades de tiempo. Para minimizar dicha p&amp;eacute;rdida, recopile todos los datos en la unidad de tiempo &lt;code&gt;native&lt;/code&gt; y realice la conversi&amp;oacute;n en el resultado final.</target>
        </trans-unit>
        <trans-unit id="04104ee8d9624f138edb2edb4f4b2cef9c367e73" translate="yes" xml:space="preserve">
          <source>You can now either do:</source>
          <target state="translated">Ahora puedes hacer cualquiera de las dos cosas:</target>
        </trans-unit>
        <trans-unit id="cdeb798230562cb1e552bac539bf89bbf6d2c2e2" translate="yes" xml:space="preserve">
          <source>You can of course use any editor you like to write Erlang programs, but if you use Emacs there exists editing support such as indentation, syntax highlighting, electric commands, module name verification, comment support including paragraph filling, skeletons, tags support and more. See the &lt;a href=&quot;lib/tools-3.0/doc/html/index&quot;&gt; Tools&lt;/a&gt; application for details.</source>
          <target state="translated">Por supuesto, puede usar cualquier editor que desee para escribir programas Erlang, pero si usa Emacs, existe soporte de edici&amp;oacute;n como sangr&amp;iacute;a, resaltado de sintaxis, comandos el&amp;eacute;ctricos, verificaci&amp;oacute;n de nombre de m&amp;oacute;dulo, soporte de comentarios incluyendo relleno de p&amp;aacute;rrafos, esqueletos, soporte de etiquetas y m&amp;aacute;s. Consulte la aplicaci&amp;oacute;n &lt;a href=&quot;lib/tools-3.0/doc/html/index&quot;&gt;Herramientas&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="873113c1107fee73a4b25f32f5260779a90e283c" translate="yes" xml:space="preserve">
          <source>You can of course use any editor you like to write Erlang programs, but if you use Emacs there exists editing support such as indentation, syntax highlighting, electric commands, module name verification, comment support including paragraph filling, skeletons, tags support and more. See the &lt;a href=&quot;lib/tools-3.4.2/doc/html/index&quot;&gt; Tools&lt;/a&gt; application for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4229af77909230adf1fbc9979cfbb58d6a1bba78" translate="yes" xml:space="preserve">
          <source>You can open a connection for a particular &lt;code&gt;Name&lt;/code&gt; and use the same name as reference for all following subsequent operations. If you want the connection to be associated with &lt;code&gt;Handle&lt;/code&gt; instead (if you, for example, need to open multiple connections to a host), use &lt;code&gt;Key&lt;/code&gt;, the configuration variable name, to specify the target. A connection without an associated target name can only be closed with the handle value.</source>
          <target state="translated">Puede abrir una conexi&amp;oacute;n para un &lt;code&gt;Name&lt;/code&gt; particular y usar el mismo nombre como referencia para todas las siguientes operaciones posteriores. Si desea que la conexi&amp;oacute;n se asocie con &lt;code&gt;Handle&lt;/code&gt; en su lugar (si, por ejemplo, necesita abrir varias conexiones a un host), use &lt;code&gt;Key&lt;/code&gt; , el nombre de la variable de configuraci&amp;oacute;n, para especificar el destino. Una conexi&amp;oacute;n sin un nombre de destino asociado solo se puede cerrar con el valor del identificador.</target>
        </trans-unit>
        <trans-unit id="93205ae69716dec641b4316864a13837f4fa7ff7" translate="yes" xml:space="preserve">
          <source>You can open as many registries as you like (if memory permits).</source>
          <target state="translated">Puedes abrir tantos registros como quieras (si la memoria lo permite).</target>
        </trans-unit>
        <trans-unit id="965541b42f007530fda56b4a6fc39a30f4e5b6a0" translate="yes" xml:space="preserve">
          <source>You can order &lt;code&gt;Common Test&lt;/code&gt; to repeat the tests you specify. You can choose to repeat tests a number of times, repeat tests for a specific period of time, or repeat tests until a particular stop time is reached. If repetition is controlled by time, an action for &lt;code&gt;Common Test&lt;/code&gt; to take upon time-out can be specified. Either &lt;code&gt;Common Test&lt;/code&gt; performs all tests in the current run before stopping, or it stops when the current test job is finished. Repetition can be activated by &lt;code&gt;ct_run&lt;/code&gt; start flags, or tuples in the &lt;code&gt;ct:run:test/1&lt;/code&gt; option list argument. The flags (options in parentheses) are the following:</source>
          <target state="translated">Puede solicitar &lt;code&gt;Common Test&lt;/code&gt; para repetir las pruebas que especifique. Puede optar por repetir las pruebas varias veces, repetir las pruebas durante un per&amp;iacute;odo de tiempo espec&amp;iacute;fico o repetir las pruebas hasta llegar a una hora de finalizaci&amp;oacute;n determinada. Si la repetici&amp;oacute;n est&amp;aacute; controlada por el tiempo, se puede especificar una acci&amp;oacute;n para que &lt;code&gt;Common Test&lt;/code&gt; tome el tiempo de espera. De cualquier &lt;code&gt;Common Test&lt;/code&gt; lleva a cabo todas las pruebas en la ejecuci&amp;oacute;n actual antes de detenerse, o se detiene cuando se termina el trabajo de prueba actual. La repetici&amp;oacute;n se puede activar mediante &lt;code&gt;ct_run&lt;/code&gt; inicio ct_run o tuplas en el argumento de lista de opciones &lt;code&gt;ct:run:test/1&lt;/code&gt; . Las banderas (opciones entre par&amp;eacute;ntesis) son las siguientes:</target>
        </trans-unit>
        <trans-unit id="92f23e4337a24de1c7d4a0723408a7ebe3dbd5f7" translate="yes" xml:space="preserve">
          <source>You can provide a seed value (a tuple of three integers) with the shuffle property &lt;code&gt;{shuffle,Seed}&lt;/code&gt;. This way, the same shuffling order can be created every time the group is executed. If no seed value is specified, &lt;code&gt;Common Test&lt;/code&gt; creates a &quot;random&quot; seed for the shuffling operation (using the return value of &lt;code&gt;erlang:timestamp/0&lt;/code&gt;). The seed value is always printed to the &lt;code&gt;init_per_group/2&lt;/code&gt; log file so that it can be used to recreate the same execution order in a subsequent test run.</source>
          <target state="translated">Puede proporcionar un valor semilla (una tupla de tres enteros) con la propiedad &lt;code&gt;{shuffle,Seed}&lt;/code&gt; . De esta forma, se puede crear el mismo orden de mezcla cada vez que se ejecuta el grupo. Si no se especifica ning&amp;uacute;n valor de semilla, &lt;code&gt;Common Test&lt;/code&gt; crea una semilla &quot;aleatoria&quot; para la operaci&amp;oacute;n de mezcla (usando el valor de retorno de &lt;code&gt;erlang:timestamp/0&lt;/code&gt; ). El valor semilla siempre se imprime en el archivo de registro &lt;code&gt;init_per_group/2&lt;/code&gt; para que pueda usarse para recrear el mismo orden de ejecuci&amp;oacute;n en una ejecuci&amp;oacute;n de prueba posterior.</target>
        </trans-unit>
        <trans-unit id="5ef1d78571b53151c63f249e721a744b6eaf936b" translate="yes" xml:space="preserve">
          <source>You can repeat the state enter code by returning one of &lt;code&gt;{repeat_state, ...}&lt;/code&gt;, &lt;code&gt;{repeat_state_and_data,_}&lt;/code&gt; or &lt;code&gt;repeat_state_and_data&lt;/code&gt; that otherwise behaves exactly like their &lt;code&gt;keep_state&lt;/code&gt; siblings. See the type &lt;code&gt; state_callback_result() &lt;/code&gt; in the reference manual.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19c1bc31c671f224905996302123a407a1ab1a1b" translate="yes" xml:space="preserve">
          <source>You can repeat the state enter code by returning one of &lt;code&gt;{repeat_state, ...}&lt;/code&gt;, &lt;code&gt;{repeat_state_and_data,_}&lt;/code&gt; or &lt;code&gt;repeat_state_and_data&lt;/code&gt; that otherwise behaves exactly like their &lt;code&gt;keep_state&lt;/code&gt; siblings. See the type &lt;code&gt;state_callback_result()&lt;/code&gt; in the reference manual.</source>
          <target state="translated">Puede repetir el c&amp;oacute;digo de ingreso de estado devolviendo uno de &lt;code&gt;{repeat_state, ...}&lt;/code&gt; , &lt;code&gt;{repeat_state_and_data,_}&lt;/code&gt; o &lt;code&gt;repeat_state_and_data&lt;/code&gt; que de otra manera se comporta exactamente como sus hermanos &lt;code&gt;keep_state&lt;/code&gt; . Vea el tipo &lt;code&gt;state_callback_result()&lt;/code&gt; en el manual de referencia.</target>
        </trans-unit>
        <trans-unit id="b6783a6bfbbbc2f20736625c9d70e84928baf322" translate="yes" xml:space="preserve">
          <source>You can restart, cancel or update a generic time-out. See section &lt;code&gt;&lt;a href=&quot;#Time-Outs&quot;&gt;Time-Outs&lt;/a&gt;&lt;/code&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b574c21041698bf7ad96dbf93e8fc9aa00296574" translate="yes" xml:space="preserve">
          <source>You can restart, cancel or update a state time-out. See section &lt;code&gt;&lt;a href=&quot;#Time-Outs&quot;&gt;Time-Outs&lt;/a&gt;&lt;/code&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="525476aa0bb90732c53b00712010689976af1013" translate="yes" xml:space="preserve">
          <source>You can retrieve the &lt;code&gt;encoding&lt;/code&gt; setting for an I/O server with function &lt;code&gt;io:getopts()&lt;/code&gt;.</source>
          <target state="translated">Puede recuperar la configuraci&amp;oacute;n de &lt;code&gt;encoding&lt;/code&gt; para un servidor de E / S con la funci&amp;oacute;n &lt;code&gt;io:getopts()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="17abf270f149ddbce7ab05d930e6206fa2b11a9e" translate="yes" xml:space="preserve">
          <source>You can run into trouble if this feature is used carelessly. Always ensure that all communicating components are either from the same Erlang/OTP release, or from release X and release Y where all components from release Y are in compatibility mode of release X.</source>
          <target state="translated">Puedes tener problemas si esta función se usa de forma descuidada.Asegúrese siempre de que todos los componentes que se comunican son de la misma versión de Erlang/OTP,o de la versión X y la versión Y,donde todos los componentes de la versión Y están en el modo de compatibilidad de la versión X.</target>
        </trans-unit>
        <trans-unit id="96008ca2eaded68beb9b63d4f96f05cd66c94e49" translate="yes" xml:space="preserve">
          <source>You can set the encoding of a file or other I/O server with function &lt;code&gt;io:setopts/2&lt;/code&gt;. This can also be set when opening a file. Setting the terminal (or other &lt;code&gt;standard_io&lt;/code&gt; server) unconditionally to option &lt;code&gt;{encoding,utf8}&lt;/code&gt; implies that UTF-8 encoded characters are written to the device, regardless of how Erlang was started or the user's environment.</source>
          <target state="translated">Puede configurar la codificaci&amp;oacute;n de un archivo u otro servidor de E / S con la funci&amp;oacute;n &lt;code&gt;io:setopts/2&lt;/code&gt; . Esto tambi&amp;eacute;n se puede configurar al abrir un archivo. Configurar el terminal (u otro servidor &lt;code&gt;standard_io&lt;/code&gt; ) incondicionalmente a la opci&amp;oacute;n &lt;code&gt;{encoding,utf8}&lt;/code&gt; implica que los caracteres codificados en UTF-8 se escriben en el dispositivo, independientemente de c&amp;oacute;mo se inici&amp;oacute; Erlang o del entorno del usuario.</target>
        </trans-unit>
        <trans-unit id="413ecdb1d68a2adf4a654bf35c78d174f104d6f7" translate="yes" xml:space="preserve">
          <source>You can start &lt;code&gt;Common Test&lt;/code&gt; in an interactive shell mode where no automatic testing is performed. Instead, &lt;code&gt;Common Test&lt;/code&gt; starts its utility processes, installs configuration data (if any), and waits for the user to call functions (typically test case support functions) from the Erlang shell.</source>
          <target state="translated">Puede iniciar &lt;code&gt;Common Test&lt;/code&gt; en un modo de shell interactivo donde no se realiza ninguna prueba autom&amp;aacute;tica. En cambio, &lt;code&gt;Common Test&lt;/code&gt; inicia sus procesos de utilidad, instala los datos de configuraci&amp;oacute;n (si los hay) y espera a que el usuario llame a funciones (generalmente funciones de soporte de casos de prueba) desde el shell de Erlang.</target>
        </trans-unit>
        <trans-unit id="964590e4a2f36a852dc270fc66640783971b4e63" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;msacc(3)&lt;/code&gt; in order to see the current load of the dirty CPU schedulers threads and adjust the number used accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d046aa317a63a7d965bb525af427ddf16a98786" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;msacc(3)&lt;/code&gt; in order to see the current load of the dirty IO schedulers threads and adjust the number used accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ccecfb82cbec8981031453403b8d005a1fb2328" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;regular expressions&lt;/code&gt; and search for objects, and edit or delete them.</source>
          <target state="translated">Puede utilizar &lt;code&gt;regular expressions&lt;/code&gt; y buscar objetos, y editarlos o eliminarlos.</target>
        </trans-unit>
        <trans-unit id="1e98168372b155e90b7443b26516f4fe2b04c377" translate="yes" xml:space="preserve">
          <source>You cannot encode a class, object, or object set, only refer to it when defining other ASN.1 entities. Typically you refer to a class as well as to object sets by table constraints and component relation constraints (X.682) in ASN.1 types, as in the following:</source>
          <target state="translated">No se puede codificar una clase,un objeto o un conjunto de objetos,sólo se puede hacer referencia a ellos cuando se definen otras entidades ASN.1.Normalmente se hace referencia a una clase así como a conjuntos de objetos mediante restricciones de tabla y restricciones de relación de componentes (X.682)en los tipos ASN.1,como en lo siguiente:</target>
        </trans-unit>
        <trans-unit id="dd0246d049a1d47e58da2bfef9ffc72d28fffb46" translate="yes" xml:space="preserve">
          <source>You cannot make &lt;strong&gt;any&lt;/strong&gt; assumptions about the process that will perform the &lt;code&gt;apply()&lt;/code&gt;. It may be a server, or a freshly spawned process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b0376f2ad27450a364ebe945c0e50fd4ea56768" translate="yes" xml:space="preserve">
          <source>You cannot make &lt;strong&gt;any&lt;/strong&gt; assumptions about the process that will perform the &lt;code&gt;apply()&lt;/code&gt;. It may be an &lt;code&gt;rpc&lt;/code&gt; server, another server, or a freshly spawned process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6b82e693f316d5cec52acdd58563125783d41e" translate="yes" xml:space="preserve">
          <source>You cannot make &lt;strong&gt;any&lt;/strong&gt; assumptions about the process that will perform the &lt;code&gt;apply()&lt;/code&gt;. It may be the calling process itself, a server, or a freshly spawned process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2f869b5c557ab41a2612a4bd3cb47936ecfda9f" translate="yes" xml:space="preserve">
          <source>You cannot make &lt;strong&gt;any&lt;/strong&gt; assumptions about the process that will perform the &lt;code&gt;apply()&lt;/code&gt;. It may be the calling process itself, an &lt;code&gt;rpc&lt;/code&gt; server, another server, or a freshly spawned process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="537051b02b992f39da66b30d6aa73765fb5e2c0e" translate="yes" xml:space="preserve">
          <source>You cannot use different names to distinguish between two subpatterns with the same number, as PCRE uses only the numbers when matching. For this reason, an error is given at compile time if different names are specified to subpatterns with the same number. However, you can specify the same name to subpatterns with the same number, even when &lt;code&gt;dupnames&lt;/code&gt; is not set.</source>
          <target state="translated">No puede usar nombres diferentes para distinguir entre dos subpatrones con el mismo n&amp;uacute;mero, ya que PCRE usa solo los n&amp;uacute;meros al hacer coincidir. Por esta raz&amp;oacute;n, se produce un error en el momento de la compilaci&amp;oacute;n si se especifican diferentes nombres para subpatrones con el mismo n&amp;uacute;mero. Sin embargo, puede especificar el mismo nombre para subpatrones con el mismo n&amp;uacute;mero, incluso cuando no se establece &lt;code&gt;dupnames&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ebeaec697387fa4d44caaa98a0c5e2c4c356295c" translate="yes" xml:space="preserve">
          <source>You could log in as the user &lt;code&gt;anotheruser&lt;/code&gt; with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e3e363bb7e4c920f6f1dc0384793c43d52437a3" translate="yes" xml:space="preserve">
          <source>You get vectors of &lt;code&gt;ErlIOVec&lt;/code&gt; type from the driver queue (see below), and the &lt;code&gt;&lt;a href=&quot;driver_entry#outputv&quot;&gt;outputv&lt;/a&gt;&lt;/code&gt; driver entry function. You can also make them yourself, if you want to send several &lt;code&gt;ErlDrvBinary&lt;/code&gt; buffers at once. Often it is faster to use &lt;code&gt;&lt;a href=&quot;#driver_output&quot;&gt;driver_output&lt;/a&gt;&lt;/code&gt; or .</source>
          <target state="translated">Obtiene vectores de tipo &lt;code&gt;ErlIOVec&lt;/code&gt; de la cola del controlador (ver m&amp;aacute;s abajo) y la funci&amp;oacute;n de entrada del controlador &lt;code&gt;&lt;a href=&quot;driver_entry#outputv&quot;&gt;outputv&lt;/a&gt;&lt;/code&gt; . Tambi&amp;eacute;n puede hacerlos usted mismo, si desea enviar varios b&amp;uacute;feres &lt;code&gt;ErlDrvBinary&lt;/code&gt; a la vez. A menudo, es m&amp;aacute;s r&amp;aacute;pido utilizar &lt;code&gt;&lt;a href=&quot;#driver_output&quot;&gt;driver_output&lt;/a&gt;&lt;/code&gt; o.</target>
        </trans-unit>
        <trans-unit id="be9e9d89afaeb9f12be394e2b3fc585cd8a4ce30" translate="yes" xml:space="preserve">
          <source>You have realized that function &lt;code&gt;evil_fun&lt;/code&gt; of the &lt;code&gt;evil_mod&lt;/code&gt; module, with arity &lt;code&gt;2&lt;/code&gt;, is causing all this trouble.</source>
          <target state="translated">Te has dado cuenta de que la funci&amp;oacute;n &lt;code&gt;evil_fun&lt;/code&gt; del m&amp;oacute;dulo &lt;code&gt;evil_mod&lt;/code&gt; , con arity &lt;code&gt;2&lt;/code&gt; , est&amp;aacute; causando todos estos problemas.</target>
        </trans-unit>
        <trans-unit id="43b8009bceaba89dd5daa6bdc91cff55c1a31c2c" translate="yes" xml:space="preserve">
          <source>You may also input data using &lt;code&gt;&lt;a href=&quot;odbc#param_query&quot;&gt;param_query/[3,4]&lt;/a&gt;&lt;/code&gt; and then the input data will have the Erlang type corresponding to the ODBC type of the column.&lt;code&gt;&lt;a href=&quot;#type&quot;&gt;See ODBC to Erlang mapping&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Tambi&amp;eacute;n puede ingresar datos usando &lt;code&gt;&lt;a href=&quot;odbc#param_query&quot;&gt;param_query/[3,4]&lt;/a&gt;&lt;/code&gt; y luego los datos de entrada tendr&amp;aacute;n el tipo Erlang correspondiente al tipo ODBC de la columna. &lt;code&gt;&lt;a href=&quot;#type&quot;&gt;See ODBC to Erlang mapping&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c7edfe74c0254b806dfd4cbe8b427f6bd45d01ea" translate="yes" xml:space="preserve">
          <source>You may even need to apply lifting more than once. To match the entire export list as a single syntax tree, you can write:</source>
          <target state="translated">Puede que incluso tenga que aplicarse el lifting más de una vez.Para hacer coincidir toda la lista de exportación como un único árbol de sintaxis,puedes escribir:</target>
        </trans-unit>
        <trans-unit id="01011218b7885f2b4feea6fbcbaf69e783d0d9b7" translate="yes" xml:space="preserve">
          <source>You may repeat the &lt;strong&gt;state enter call&lt;/strong&gt; using the &lt;code&gt;{repeat_state,...}&lt;/code&gt; return value from the &lt;code&gt;&lt;a href=&quot;#State%20Callback&quot;&gt;state callback&lt;/a&gt;&lt;/code&gt;. In this case &lt;code&gt;OldState&lt;/code&gt; will also be equal to the current state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e5ee1a6ba8110135a28a89b341ab0c77b29a34c" translate="yes" xml:space="preserve">
          <source>You may repeat the state enter call using the &lt;code&gt;{repeat_state,...}&lt;/code&gt; return value from the &lt;code&gt;&lt;a href=&quot;#Event%20Handler&quot;&gt;Event Handler&lt;/a&gt;&lt;/code&gt;. In this case &lt;code&gt;OldState&lt;/code&gt; will also be equal to the current state.</source>
          <target state="translated">Puede repetir la llamada de entrada de estado utilizando el valor de retorno &lt;code&gt;{repeat_state,...}&lt;/code&gt; del controlador de &lt;code&gt;&lt;a href=&quot;#Event%20Handler&quot;&gt;Event Handler&lt;/a&gt;&lt;/code&gt; . En este caso, &lt;code&gt;OldState&lt;/code&gt; tambi&amp;eacute;n ser&amp;aacute; igual al estado actual.</target>
        </trans-unit>
        <trans-unit id="bda3d6632dce9bc85f74cf55588ba7e9389da040" translate="yes" xml:space="preserve">
          <source>You may run into trouble if this feature is used carelessly. Always ensure that all communicating components are either from the same Erlang/OTP release, or from release X and release Y where all components from release Y are in compatibility mode of release X.</source>
          <target state="translated">Puede tener problemas si esta función se utiliza de forma descuidada.Asegúrese siempre de que todos los componentes que se comunican son de la misma versión de Erlang/OTP,o de la versión X y la versión Y,donde todos los componentes de la versión Y están en el modo de compatibilidad de la versión X.</target>
        </trans-unit>
        <trans-unit id="e5c76c19a3b13c108dfd91af1a0ec2e9a7a1de8d" translate="yes" xml:space="preserve">
          <source>You may want to start a timer in one state and respond to the time-out in another, maybe cancel the time-out without changing states, or perhaps run multiple time-outs in parallel. All this can be accomplished with &lt;code&gt;generic time-outs&lt;/code&gt;. They may look a little bit like &lt;code&gt;event time-outs&lt;/code&gt; but contain a name to allow for any number of them simultaneously and they are not automatically cancelled.</source>
          <target state="translated">Es posible que desee iniciar un temporizador en un estado y responder al tiempo de espera en otro, tal vez cancelar el tiempo de espera sin cambiar de estado o ejecutar varios tiempos de espera en paralelo. Todo esto se puede lograr con &lt;code&gt;generic time-outs&lt;/code&gt; . Pueden parecerse un poco a los &lt;code&gt;event time-outs&lt;/code&gt; pero contienen un nombre para permitir cualquier n&amp;uacute;mero de ellos simult&amp;aacute;neamente y no se cancelan autom&amp;aacute;ticamente.</target>
        </trans-unit>
        <trans-unit id="b4f4ce8a1bafe76a9e86e5436df884d3b5865a78" translate="yes" xml:space="preserve">
          <source>You might also want to setup X-windows (XFree86). That might be as easy as running startx from the command prompt and it might be much harder. Use Google to find help.</source>
          <target state="translated">También puede que quieras configurar X-windows (XFree86).Eso podría ser tan fácil como ejecutar startx desde el símbolo del sistema y podría ser mucho más difícil.Utiliza Google para encontrar ayuda.</target>
        </trans-unit>
        <trans-unit id="58e6db453bffb8455418bbe276d7e4038ab657de" translate="yes" xml:space="preserve">
          <source>You might want to check out versions of the source code from GitHUB. That is possible directly in Cygwin, but not in MSYS. There is a project MsysGIT:</source>
          <target state="translated">Puede que quieras comprobar las versiones del código fuente de GitHUB.Eso es posible directamente en Cygwin,pero no en MSYS.Hay un proyecto MsysGIT:</target>
        </trans-unit>
        <trans-unit id="c62fe3437c022e8570028fdd328c0f7d666c1479" translate="yes" xml:space="preserve">
          <source>You might wonder why these aren't just one module. The &lt;code&gt;Collector&lt;/code&gt; is a generic full-fledged framework that allows processes to &quot;subscribe&quot; to the &lt;code&gt;Events&lt;/code&gt; that it collects. One &lt;code&gt;Collector&lt;/code&gt; can serve several &lt;code&gt;Viewers&lt;/code&gt;. The typical case is that you have one &lt;code&gt;Viewer&lt;/code&gt; that visualizes &lt;code&gt;Events&lt;/code&gt; in one flavor and another &lt;code&gt;Viewer&lt;/code&gt; that visualizes them in another flavor. If you for example are tracing a text based protocol like &lt;code&gt;HTML&lt;/code&gt; (or &lt;code&gt;Megaco/H.248&lt;/code&gt;) it would be useful to be able to display the &lt;code&gt;Events&lt;/code&gt; as plain text as well as the internal representation of the message. The architecture does also allow you to implement your own &lt;code&gt;Viewer&lt;/code&gt; program as long as it complies to the protocol between the &lt;code&gt;Collector/Viewer&lt;/code&gt; protocol. Currently two kinds of &lt;code&gt;Viewers&lt;/code&gt; exists. That is the old &lt;code&gt;GS&lt;/code&gt; based one and the new based on &lt;code&gt;wxWidgets&lt;/code&gt;. But if you feel for it you may implement your own &lt;code&gt;Viewer&lt;/code&gt;, which for example could display the &lt;code&gt;Events&lt;/code&gt; as ASCII art or whatever you feel useful.</source>
          <target state="translated">Quiz&amp;aacute;s se pregunte por qu&amp;eacute; estos no son solo un m&amp;oacute;dulo. El &lt;code&gt;Collector&lt;/code&gt; es un marco gen&amp;eacute;rico completo que permite a los procesos &quot;suscribirse&quot; a los &lt;code&gt;Events&lt;/code&gt; que recopila. Un &lt;code&gt;Collector&lt;/code&gt; puede servir a varios &lt;code&gt;Viewers&lt;/code&gt; . El caso t&amp;iacute;pico es que tienes un &lt;code&gt;Viewer&lt;/code&gt; que visualiza &lt;code&gt;Events&lt;/code&gt; en un sabor y otro &lt;code&gt;Viewer&lt;/code&gt; que los visualiza en otro sabor. Si, por ejemplo, est&amp;aacute; rastreando un protocolo basado en texto como &lt;code&gt;HTML&lt;/code&gt; (o &lt;code&gt;Megaco/H.248&lt;/code&gt; ), ser&amp;iacute;a &amp;uacute;til poder mostrar los &lt;code&gt;Events&lt;/code&gt; como texto sin formato, as&amp;iacute; como la representaci&amp;oacute;n interna del mensaje. La arquitectura tambi&amp;eacute;n le permite implementar su propio programa &lt;code&gt;Viewer&lt;/code&gt; siempre que cumpla con el protocolo entre el protocolo &lt;code&gt;Collector/Viewer&lt;/code&gt; . Actualmente existen dos tipos de &lt;code&gt;Viewers&lt;/code&gt; . Ese es el antiguo basado en &lt;code&gt;GS&lt;/code&gt; y el nuevo basado en &lt;code&gt;wxWidgets&lt;/code&gt; . Pero si lo desea, puede implementar su propio &lt;code&gt;Viewer&lt;/code&gt; , que, por ejemplo, podr&amp;iacute;a mostrar los &lt;code&gt;Events&lt;/code&gt; como arte ASCII o lo que considere &amp;uacute;til.</target>
        </trans-unit>
        <trans-unit id="edffabbfaa98cb58bc42c95e3d19809c6eae37f1" translate="yes" xml:space="preserve">
          <source>You need some tools to be able to build Erlang/OTP on Windows. Most notably you'll need Cygwin, MSYS or MSYS2, Visual Studio and Microsofts Windows SDK, but you might also want a Java compiler, the NSIS install system and OpenSSL. Well, here's some information about the different tools:</source>
          <target state="translated">Necesitas algunas herramientas para poder construir Erlang/OTP en Windows.Lo más notable es que necesitarás Cygwin,MSYS o MSYS2,Visual Studio y Microsofts Windows SDK,pero también podrías querer un compilador de Java,el sistema de instalación NSIS y OpenSSL.Bueno,aquí hay algo de información sobre las diferentes herramientas:</target>
        </trans-unit>
        <trans-unit id="3f7b2311efc92d4764c99e19c16b17b555db66c5" translate="yes" xml:space="preserve">
          <source>You need some tools to be able to build Erlang/OTP on Windows. Most notably you'll need WSL (with ubuntu), Visual Studio and Microsofts Windows SDK, but you might also want a Java compiler, the NSIS install system, OpenSSL and wxWidgets. Well, here's some information about the different tools:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae8e918676db4997ccb96dd5218b9d3e93aa95bc" translate="yes" xml:space="preserve">
          <source>You need to retrieve data from XML documents. Your Erlang software can handle information from the XML document by extracting data from the data structure received by parsing.</source>
          <target state="translated">Necesitas recuperar los datos de los documentos XML.Su software Erlang puede manejar la información del documento XML extrayendo datos de la estructura de datos recibida mediante análisis sintáctico.</target>
        </trans-unit>
        <trans-unit id="56322d848be6f1012153725fd14cdbdcd0d3d138" translate="yes" xml:space="preserve">
          <source>You need to write template functions to be able to control what kind of output you want. Thus if you want to encapsulate a &lt;code&gt;bike&lt;/code&gt; element in &amp;lt;p&amp;gt; tags you simply write a function:</source>
          <target state="translated">Necesita escribir funciones de plantilla para poder controlar qu&amp;eacute; tipo de salida desea. Por lo tanto, si desea encapsular un elemento de &lt;code&gt;bike&lt;/code&gt; en etiquetas &amp;lt;p&amp;gt;, simplemente escriba una funci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="a15fb947f56c5ca980fe1f5447d83f6abf981cc2" translate="yes" xml:space="preserve">
          <source>You normally do only one of the encrypt or decrypt operations, and the peer does the other. This normaly used in legacy applications as a primitive digital signature.</source>
          <target state="translated">Normalmente sólo se hace una de las operaciones de encriptación o desencriptación,y el par hace la otra.Esto normalmente se usa en aplicaciones heredadas como una firma digital primitiva.</target>
        </trans-unit>
        <trans-unit id="a0077f1555cfe12a61c3d877c68597be7546cc11" translate="yes" xml:space="preserve">
          <source>You normally do only one of the sign or verify operations, and the peer does the other.</source>
          <target state="translated">Normalmente sólo se hace una de las operaciones de firma o verificación,y el compañero hace la otra.</target>
        </trans-unit>
        <trans-unit id="ba70d6f6844215520a1ab62c505590fe6b80d193" translate="yes" xml:space="preserve">
          <source>You probably want to get started on your own first test suites now, while at the same time digging deeper into the &lt;code&gt;Common Test&lt;/code&gt; User's Guide and Reference Manual. There are much more to learn about the things that have been introduced in this section. There are also many other useful features to learn, so please continue to the other sections and have fun.</source>
          <target state="translated">Probablemente desee comenzar con sus propios primeros conjuntos de pruebas ahora, mientras que al mismo tiempo profundiza en la Gu&amp;iacute;a del usuario de &lt;code&gt;Common Test&lt;/code&gt; y el Manual de referencia. Hay mucho m&amp;aacute;s que aprender sobre las cosas que se han introducido en esta secci&amp;oacute;n. Tambi&amp;eacute;n hay muchas otras funciones &amp;uacute;tiles para aprender, as&amp;iacute; que contin&amp;uacute;e con las otras secciones y divi&amp;eacute;rtase.</target>
        </trans-unit>
        <trans-unit id="f0968c0bebaa9aa3dc454c99006c5d4870f8f269" translate="yes" xml:space="preserve">
          <source>You return a list containing &lt;code&gt;state_enter&lt;/code&gt; from your &lt;code&gt; callback_mode/0 &lt;/code&gt; function and the &lt;code&gt;gen_statem&lt;/code&gt; engine will call your &lt;strong&gt;state callback&lt;/strong&gt; once with an event &lt;code&gt;(enter, OldState, ...)&lt;/code&gt; whenever it does a &lt;strong&gt;state change&lt;/strong&gt;. Then you just need to handle these event-like calls in all states.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="885ba0137c3250a49cd7c1983d4abc2a83e3fbc8" translate="yes" xml:space="preserve">
          <source>You return a list containing &lt;code&gt;state_enter&lt;/code&gt; from your &lt;code&gt;callback_mode/0&lt;/code&gt; function and the &lt;code&gt;gen_statem&lt;/code&gt; engine will call your state callback once with the arguments &lt;code&gt;(enter, OldState, ...)&lt;/code&gt; whenever the state changes. Then you just need to handle these event-like calls in all states.</source>
          <target state="translated">&lt;code&gt;state_enter&lt;/code&gt; una lista que contiene state_enter de su funci&amp;oacute;n &lt;code&gt;callback_mode/0&lt;/code&gt; y el motor &lt;code&gt;gen_statem&lt;/code&gt; llamar&amp;aacute; a su callback de estado una vez con los argumentos &lt;code&gt;(enter, OldState, ...)&lt;/code&gt; siempre que cambie el estado. Entonces solo necesita manejar estas llamadas similares a eventos en todos los estados.</target>
        </trans-unit>
        <trans-unit id="6d3a1a8c0569b8643dc506d38af14e3006dabe74" translate="yes" xml:space="preserve">
          <source>You should also have an &lt;code&gt;ERL_TOP&lt;/code&gt; environment variable that is &lt;strong&gt;Cygwin style&lt;/strong&gt;, and points to a directory containing, among other files, the script &lt;code&gt;otp_build&lt;/code&gt;.</source>
          <target state="translated">Tambi&amp;eacute;n debe tener una variable de entorno &lt;code&gt;ERL_TOP&lt;/code&gt; que sea &lt;strong&gt;estilo Cygwin&lt;/strong&gt; y apunte a un directorio que contenga, entre otros archivos, el script &lt;code&gt;otp_build&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="25958a4183a827e82b00b48702f979c03c46e39e" translate="yes" xml:space="preserve">
          <source>You should by now be able to understand most of the code in the messenger-module. Let us study one case in detail: a message is sent from one user to another.</source>
          <target state="translated">Ya deberías ser capaz de entender la mayor parte del código del módulo de mensajería.Estudiemos un caso en detalle:un mensaje es enviado de un usuario a otro.</target>
        </trans-unit>
        <trans-unit id="6fe2775e95e1dce6b8fbcf029eef7f2e5c555539" translate="yes" xml:space="preserve">
          <source>You should get a lot of printouts as the testcases are compiled. Once done you should copy the entire &lt;code&gt;$ERL_TOP/release/tests&lt;/code&gt; folder to the cross host system.</source>
          <target state="translated">Deber&amp;iacute;a obtener muchas impresiones a medida que se compilan los casos de prueba. Una vez hecho esto, debe copiar toda la &lt;code&gt;$ERL_TOP/release/tests&lt;/code&gt; al sistema de host cruzado.</target>
        </trans-unit>
        <trans-unit id="a7a1bf6128411067b9a8564b654da2a3e3601e90" translate="yes" xml:space="preserve">
          <source>You should now have a working release of Erlang/OTP! Jump to &lt;code&gt;&lt;a href=&quot;../system_principles/system_principles&quot;&gt;System Principles&lt;/a&gt;&lt;/code&gt; for instructions on running Erlang/OTP.</source>
          <target state="translated">&amp;iexcl;Ahora deber&amp;iacute;a tener una versi&amp;oacute;n funcional de Erlang / OTP! Vaya a &lt;code&gt;&lt;a href=&quot;../system_principles/system_principles&quot;&gt;System Principles&lt;/a&gt;&lt;/code&gt; para obtener instrucciones sobre c&amp;oacute;mo ejecutar Erlang / OTP.</target>
        </trans-unit>
        <trans-unit id="fb587588e2f72d0f78eaff14b514044267ff8b4d" translate="yes" xml:space="preserve">
          <source>You should now have a working release of Erlang/OTP! Jump to &lt;code&gt;System Principles&lt;/code&gt; for instructions on running Erlang/OTP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ff9957d9923b6af6d60b3c95e5c034281cea473" translate="yes" xml:space="preserve">
          <source>You should read and precisely follow the instructions of the &lt;code&gt;&lt;a href=&quot;http://csrc.nist.gov/groups/STM/cmvp/documents/140-1/140sp/140sp1747.pdf&quot;&gt;Security Policy&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://www.openssl.org/docs/fips/UserGuide-2.0.pdf&quot;&gt;User Guide&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Debe leer y seguir con precisi&amp;oacute;n las instrucciones de la &lt;code&gt;&lt;a href=&quot;http://csrc.nist.gov/groups/STM/cmvp/documents/140-1/140sp/140sp1747.pdf&quot;&gt;Security Policy&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;https://www.openssl.org/docs/fips/UserGuide-2.0.pdf&quot;&gt;User Guide&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3275068cb1741362b3ab0825e2a9a7c5bf3e22a3" translate="yes" xml:space="preserve">
          <source>You should therefore set the period to be long enough that you can accept that the supervisor keeps going at that rate. For example, if you have picked an intensity value of 5, then setting the period to 30 seconds will give you at most one restart per 6 seconds for any longer period of time, which means that your logs won't fill up too quickly, and you will have a chance to observe the failures and apply a fix.</source>
          <target state="translated">Por lo tanto,debe fijar el período lo suficientemente largo como para aceptar que el supervisor siga a ese ritmo.Por ejemplo,si usted ha elegido un valor de intensidad de 5,entonces establecer el período en 30 segundos le dará como máximo un reinicio cada 6 segundos por cualquier período de tiempo más largo,lo que significa que sus registros no se llenarán demasiado rápido,y usted tendrá la oportunidad de observar los fallos y aplicar un arreglo.</target>
        </trans-unit>
        <trans-unit id="10eb9fdb5475174f6ad8a75d8add7701e7ee6155" translate="yes" xml:space="preserve">
          <source>You typically do &lt;strong&gt;not&lt;/strong&gt; want to enable this option when the common access pattern is a few read operations interleaved with a few write operations repeatedly. In this case, you would get a performance degradation by enabling this option.</source>
          <target state="translated">Por lo general, &lt;strong&gt;no&lt;/strong&gt; desea habilitar esta opci&amp;oacute;n cuando el patr&amp;oacute;n de acceso com&amp;uacute;n son algunas operaciones de lectura intercaladas con algunas operaciones de escritura repetidamente. En este caso, obtendr&amp;iacute;a una degradaci&amp;oacute;n del rendimiento al habilitar esta opci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="86b5e238a54f91530f806ebbf549940c9f49564d" translate="yes" xml:space="preserve">
          <source>You typically want to enable this option when concurrent read operations are much more frequent than write operations, or when concurrent reads and writes comes in large read and write bursts (that is, many reads not interrupted by writes, and many writes not interrupted by reads).</source>
          <target state="translated">Normalmente se desea activar esta opción cuando las operaciones de lectura simultánea son mucho más frecuentes que las de escritura,o cuando las operaciones de lectura y escritura simultáneas se producen en grandes ráfagas de lectura y escritura (es decir,muchas lecturas no se ven interrumpidas por las escrituras,y muchas escrituras no se ven interrumpidas por las lecturas).</target>
        </trans-unit>
        <trans-unit id="92f5aff359b87e5d53f4849dc307f5a4affb6037" translate="yes" xml:space="preserve">
          <source>You want only one resulting module.</source>
          <target state="translated">Sólo quieres un módulo resultante.</target>
        </trans-unit>
        <trans-unit id="ea796648d0d9300b8b1cded2425740926ceca9e0" translate="yes" xml:space="preserve">
          <source>You were trying to unload an Erlang statically linked-in driver, which cannot be manipulated with this interface (and cannot be unloaded at all).</source>
          <target state="translated">Intentabas descargar un conductor Erlang enlazado estáticamente,que no puede ser manipulado con esta interfaz (y no puede ser descargado en absoluto).</target>
        </trans-unit>
        <trans-unit id="72380257abe5d5cd2d0c1013b795250f53c529a6" translate="yes" xml:space="preserve">
          <source>Your environment probably provides similar means of changing the keyboard layout. Ensure that you have a way to switch back and forth between keyboards easily if you are not used to this. For example, entering commands using a Cyrillic character set is not easily done in the Erlang shell.</source>
          <target state="translated">Su entorno probablemente proporciona medios similares para cambiar la disposición del teclado.Asegúrate de que tienes una forma de cambiar fácilmente de un teclado a otro si no estás acostumbrado a ello.Por ejemplo,la introducción de comandos utilizando un juego de caracteres cirílicos no es fácil en el shell de Erlang.</target>
        </trans-unit>
        <trans-unit id="cfc7c8128b732e96eaa4cdde7bebdd176ce280b6" translate="yes" xml:space="preserve">
          <source>Zip64 archives are not supported.</source>
          <target state="translated">Los archivos Zip64 no son compatibles.</target>
        </trans-unit>
        <trans-unit id="4bfb00948cc698b3c09503dcaf8708c03daec895" translate="yes" xml:space="preserve">
          <source>[#'AccessDescription'{}]</source>
          <target state="translated">[#'AccessDescription'{}]</target>
        </trans-unit>
        <trans-unit id="e1ce0a14dc0686331ce9550b44fbed909b7b9883" translate="yes" xml:space="preserve">
          <source>[#'Attribute'{}]</source>
          <target state="translated">[#'Attribute'{}]</target>
        </trans-unit>
        <trans-unit id="7521150a8643e4389b97d238734fbf1c297c37fb" translate="yes" xml:space="preserve">
          <source>[#'DistributionPoint'{}]</source>
          <target state="translated">[#'DistributionPoint'{}]</target>
        </trans-unit>
        <trans-unit id="da1ff1345fbb73baa0e0803ea0d0bfd142cb99bb" translate="yes" xml:space="preserve">
          <source>[#'Distributionpoint'{}]</source>
          <target state="translated">[#'Distributionpoint'{}]</target>
        </trans-unit>
        <trans-unit id="51b40a19d8cfda51ed2913bcb1627e5b4327a49e" translate="yes" xml:space="preserve">
          <source>[1]: Microsoft ODBC 3.0, Programmer's Reference and SDK Guide</source>
          <target state="translated">[1]: Microsoft ODBC 3.0, Referencia del programador y Gu&amp;iacute;a de SDK</target>
        </trans-unit>
        <trans-unit id="66417bc1eadcab6b0b674cc1634320e93505ce28" translate="yes" xml:space="preserve">
          <source>[&lt;code&gt;&lt;a href=&quot;unicode#type-chardata&quot;&gt;unicode:chardata()&lt;/a&gt;&lt;/code&gt;]</source>
          <target state="translated">[&lt;code&gt;&lt;a href=&quot;unicode#type-chardata&quot;&gt;unicode:chardata()&lt;/a&gt;&lt;/code&gt;]</target>
        </trans-unit>
        <trans-unit id="b9c1ecfd8694939fd5931ed6e3f157f3ffcf4476" translate="yes" xml:space="preserve">
          <source>[Arg1, Arg2, ...]</source>
          <target state="translated">[Arg1, Arg2, ...]</target>
        </trans-unit>
        <trans-unit id="42a0b24be599f79aef35b1492c3ad15e2c16879c" translate="yes" xml:space="preserve">
          <source>[MSAcc_Thread] | undefined</source>
          <target state="translated">[MSAcc_Thread] | indefinido</target>
        </trans-unit>
        <trans-unit id="72fc185e7d2415424198bc4e97e4925953c70d24" translate="yes" xml:space="preserve">
          <source>[Node, Sender, Message]</source>
          <target state="translated">[Nodo, remitente, mensaje]</target>
        </trans-unit>
        <trans-unit id="2a85c92367aa7a40051022096ca8cf11d8242c6b" translate="yes" xml:space="preserve">
          <source>[Pid :: pid()]</source>
          <target state="translated">[Pid :: pid ()]</target>
        </trans-unit>
        <trans-unit id="0aa157adc562adac91575bb4c43eab47bc7e5f60" translate="yes" xml:space="preserve">
          <source>[Receiver, Message]</source>
          <target state="translated">[Receptor, mensaje]</target>
        </trans-unit>
        <trans-unit id="ee00e0101d39709f50e398a82bd0ea3291fa544c" translate="yes" xml:space="preserve">
          <source>[] |</source>
          <target state="translated">[] |</target>
        </trans-unit>
        <trans-unit id="fc71c978541f3aeb4d84685bb6c7260e3d86a18c" translate="yes" xml:space="preserve">
          <source>[] | undefined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ca53cc1334ef69049fc43ae5128d412b73b67bb" translate="yes" xml:space="preserve">
          <source>[char()] |</source>
          <target state="translated">[char ()] |</target>
        </trans-unit>
        <trans-unit id="576f6256e36d8c94122108cff7936adada6f9d21" translate="yes" xml:space="preserve">
          <source>[char()] | {error, [char()], &lt;code&gt;&lt;a href=&quot;#type-chardata&quot;&gt;chardata()&lt;/a&gt;&lt;/code&gt;}</source>
          <target state="translated">[char ()] | {error, [char ()], &lt;code&gt;&lt;a href=&quot;#type-chardata&quot;&gt;chardata()&lt;/a&gt;&lt;/code&gt; }</target>
        </trans-unit>
        <trans-unit id="dfdac258a47c9548f07058a4d414926565e2af67" translate="yes" xml:space="preserve">
          <source>[id_key_purpose()]</source>
          <target state="translated">[id_key_purpose()]</target>
        </trans-unit>
        <trans-unit id="2959facd9edc3e27045426ab594a9fed5e38ef6b" translate="yes" xml:space="preserve">
          <source>[key_usage()]</source>
          <target state="translated">[key_usage()]</target>
        </trans-unit>
        <trans-unit id="80cff9d804929b13bd503fac44a911fdc9bd9578" translate="yes" xml:space="preserve">
          <source>[optional] Implement the default user.</source>
          <target state="translated">[opcional] Implemente el usuario predeterminado.</target>
        </trans-unit>
        <trans-unit id="be02612d6c39318d90a0953fdf863bc655b53e4a" translate="yes" xml:space="preserve">
          <source>[pid()] | {error, {no_such_group, Name}}</source>
          <target state="translated">[pid ()] | {error, {no_such_group, Name}}</target>
        </trans-unit>
        <trans-unit id="f8952c09312d4d1fdb7086b07544db13634aaad7" translate="yes" xml:space="preserve">
          <source>[string()]</source>
          <target state="translated">[string()]</target>
        </trans-unit>
        <trans-unit id="ffee997feffe4860e894a43b40fb37803632a8a6" translate="yes" xml:space="preserve">
          <source>[tuple()]</source>
          <target state="translated">[tuple()]</target>
        </trans-unit>
        <trans-unit id="6274e10bcfa160bff5b4411f5a150d9c302e5be9" translate="yes" xml:space="preserve">
          <source>[{&lt;code&gt;&lt;a href=&quot;#type-ip_address&quot;&gt;ip_address()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#type-port_number&quot;&gt;port_number()&lt;/a&gt;&lt;/code&gt;} |</source>
          <target state="translated">[{ &lt;code&gt;&lt;a href=&quot;#type-ip_address&quot;&gt;ip_address()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;#type-port_number&quot;&gt;port_number()&lt;/a&gt;&lt;/code&gt; } |</target>
        </trans-unit>
        <trans-unit id="8725e51bcf38398f40ad4bb349ede5992f864796" translate="yes" xml:space="preserve">
          <source>[{Ifname :: string(),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dadf5afb9a670102f8e9550c35fdd5519c70b3df" translate="yes" xml:space="preserve">
          <source>[{Par :: atom(), Val :: any()} |</source>
          <target state="translated">[{Par :: atom (), Val :: any ()} |</target>
        </trans-unit>
        <trans-unit id="3aeb2bf44fbbf62ac9faaa808312e1fe929b20fd" translate="yes" xml:space="preserve">
          <source>[{SchedulerId, ActiveTime, TotalTime}] | undefined</source>
          <target state="translated">[{SchedulerId, ActiveTime, TotalTime}] | indefinido</target>
        </trans-unit>
        <trans-unit id="7309754570cf1a09cfa657f2546d91f8fd76acab" translate="yes" xml:space="preserve">
          <source>[{atom(), integer()}]</source>
          <target state="translated">[{atom (), integer ()}]</target>
        </trans-unit>
        <trans-unit id="4bd5d0fef71d6ccb3189e94373cd25fa0b91c611" translate="yes" xml:space="preserve">
          <source>[{atom(), term()}]</source>
          <target state="translated">[{&amp;aacute;tomo (), t&amp;eacute;rmino ()}]</target>
        </trans-unit>
        <trans-unit id="14391628efa44e40ee12bbe076863a61135834a2" translate="yes" xml:space="preserve">
          <source>[{a}]</source>
          <target state="translated">[{a}]</target>
        </trans-unit>
        <trans-unit id="e2a32cb1fd713c0eed8d48b0cd7bad3597b1db49" translate="yes" xml:space="preserve">
          <source>[{memory_type(), integer() &amp;gt;= 0}]</source>
          <target state="translated">[{tipo_memoria (), entero ()&amp;gt; = 0}]</target>
        </trans-unit>
        <trans-unit id="0d6089f53cda0554d0fa4e28f4ec9f7dc7f9017f" translate="yes" xml:space="preserve">
          <source>[{module(), &lt;code&gt;&lt;a href=&quot;#type-level&quot;&gt;level()&lt;/a&gt;&lt;/code&gt; | all | none}]}</source>
          <target state="translated">[{m&amp;oacute;dulo (), &lt;code&gt;&lt;a href=&quot;#type-level&quot;&gt;level()&lt;/a&gt;&lt;/code&gt; | todo | ninguna}]}</target>
        </trans-unit>
        <trans-unit id="ca717bb5d14518f424644a24b58029b2355342d3" translate="yes" xml:space="preserve">
          <source>[{{a}}]</source>
          <target state="translated">[{{a}}]</target>
        </trans-unit>
        <trans-unit id="ab006bb8aacdf6e68299bc1dffccc9bcc8ac3eaf" translate="yes" xml:space="preserve">
          <source>\&quot;</source>
          <target state="translated">\&quot;</target>
        </trans-unit>
        <trans-unit id="9ca863000c0131ce2b74e96a2de49fddf5ae1e10" translate="yes" xml:space="preserve">
          <source>\'</source>
          <target state="translated">\'</target>
        </trans-unit>
        <trans-unit id="d247b868bf66bb4f3e6e64a75980114e868f80c1" translate="yes" xml:space="preserve">
          <source>\N is not allowed in a character class. \B, \R, and \X are not special inside a character class. Like other unrecognized escape sequences, they are treated as the literal characters &quot;B&quot;, &quot;R&quot;, and &quot;X&quot;. Outside a character class, these sequences have different meanings.</source>
          <target state="translated">\ N no est&amp;aacute; permitido en una clase de caracteres. \ B, \ R y \ X no son especiales dentro de una clase de car&amp;aacute;cter. Al igual que otras secuencias de escape no reconocidas, se tratan como los caracteres literales &quot;B&quot;, &quot;R&quot; y &quot;X&quot;. Fuera de una clase de personaje, estas secuencias tienen diferentes significados.</target>
        </trans-unit>
        <trans-unit id="58aec324b2389c6b52945c44a246277784ee9780" translate="yes" xml:space="preserve">
          <source>\R can be restricted to match only CR, LF, or CRLF (instead of the complete set of Unicode line endings) by setting option &lt;code&gt;bsr_anycrlf&lt;/code&gt; either at compile time or when the pattern is matched. (BSR is an acronym for &quot;backslash R&quot;.) This can be made the default when PCRE is built; if so, the other behavior can be requested through option &lt;code&gt;bsr_unicode&lt;/code&gt;. These settings can also be specified by starting a pattern string with one of the following sequences:</source>
          <target state="translated">\ R se puede restringir para que coincida solo con CR, LF o CRLF (en lugar del conjunto completo de finales de l&amp;iacute;nea Unicode) configurando la opci&amp;oacute;n &lt;code&gt;bsr_anycrlf&lt;/code&gt; en tiempo de compilaci&amp;oacute;n o cuando el patr&amp;oacute;n coincide. (BSR es un acr&amp;oacute;nimo de &quot;barra invertida R&quot;.) Esto se puede establecer como predeterminado cuando se crea PCRE; si es as&amp;iacute;, el otro comportamiento se puede solicitar a trav&amp;eacute;s de la opci&amp;oacute;n &lt;code&gt;bsr_unicode&lt;/code&gt; . Estos ajustes tambi&amp;eacute;n se pueden especificar iniciando una cadena de patr&amp;oacute;n con una de las siguientes secuencias:</target>
        </trans-unit>
        <trans-unit id="821bc1e3064e5be5c599e2cff7d5d54b776a988d" translate="yes" xml:space="preserve">
          <source>\X always matches at least one character. Then it decides whether to add more characters according to the following rules for ending a cluster:</source>
          <target state="translated">\ X siempre coincide con al menos un car&amp;aacute;cter. Luego decide si agregar m&amp;aacute;s caracteres de acuerdo con las siguientes reglas para finalizar un grupo:</target>
        </trans-unit>
        <trans-unit id="195f6b5cfc2bdb0e5ace74ca82a581b3f8bfbe14" translate="yes" xml:space="preserve">
          <source>\XYZ, \YZ, \Z</source>
          <target state="translated">\ XYZ, \ YZ, \ Z</target>
        </trans-unit>
        <trans-unit id="9e94758983980504af303ef297fd2bf9d9cea063" translate="yes" xml:space="preserve">
          <source>\\</source>
          <target state="translated">\\</target>
        </trans-unit>
        <trans-unit id="252e8da96b92b7a90e8b1552e1907cd30addbc90" translate="yes" xml:space="preserve">
          <source>\^A...\^Z</source>
          <target state="translated">\^A...\^Z</target>
        </trans-unit>
        <trans-unit id="1fe89331ca92589385290d32cdf4c88a07b2cca0" translate="yes" xml:space="preserve">
          <source>\^a...\^z</source>
          <target state="translated">\^a...\^z</target>
        </trans-unit>
        <trans-unit id="4629ca1b60e263bdc4326334b23323e0434717a5" translate="yes" xml:space="preserve">
          <source>\b</source>
          <target state="translated">\b</target>
        </trans-unit>
        <trans-unit id="caf5b0b18d08106e7f87e99a2da9940d43b46e3b" translate="yes" xml:space="preserve">
          <source>\d</source>
          <target state="translated">\d</target>
        </trans-unit>
        <trans-unit id="80bcc8b02cd875c9c7b9dc9e6159a6cd886a4b36" translate="yes" xml:space="preserve">
          <source>\e</source>
          <target state="translated">\e</target>
        </trans-unit>
        <trans-unit id="794a729d2e4ffbb094fec03ae9b3acd219371385" translate="yes" xml:space="preserve">
          <source>\f</source>
          <target state="translated">\f</target>
        </trans-unit>
        <trans-unit id="ef7e6794ca9c6a06b54b66f279237fb8daaaeea8" translate="yes" xml:space="preserve">
          <source>\n</source>
          <target state="translated">\n</target>
        </trans-unit>
        <trans-unit id="f12c84902108895980702c88db900ceea2d2ec01" translate="yes" xml:space="preserve">
          <source>\r</source>
          <target state="translated">\r</target>
        </trans-unit>
        <trans-unit id="e1c702e348504013ae2a1faa8cec6a558f9315a8" translate="yes" xml:space="preserve">
          <source>\s</source>
          <target state="translated">\s</target>
        </trans-unit>
        <trans-unit id="8bf81043e29dfc96a6fe1f30f7116f552de6e7d7" translate="yes" xml:space="preserve">
          <source>\t</source>
          <target state="translated">\t</target>
        </trans-unit>
        <trans-unit id="d5d0ebb2740b3e81b5cce512a169118a280bb8cb" translate="yes" xml:space="preserve">
          <source>\v</source>
          <target state="translated">\v</target>
        </trans-unit>
        <trans-unit id="aa5c3d84724b17a06e8486d209463a0cacc3bc46" translate="yes" xml:space="preserve">
          <source>\xXY</source>
          <target state="translated">\xXY</target>
        </trans-unit>
        <trans-unit id="b3bafabd71b5e3f6f0b7e7fff954f28e5b18fb17" translate="yes" xml:space="preserve">
          <source>\x{X...}</source>
          <target state="translated">\x{X...}</target>
        </trans-unit>
        <trans-unit id="910430359def8b6f4101c0bfa3263d48597c76cc" translate="yes" xml:space="preserve">
          <source>_client_channel</source>
          <target state="translated">_client_channel</target>
        </trans-unit>
        <trans-unit id="9944247b429c4be28335eda6279ee22a6fde09de" translate="yes" xml:space="preserve">
          <source>_client_key_api</source>
          <target state="translated">_client_key_api</target>
        </trans-unit>
        <trans-unit id="a259c9cf0e5845c9647dbd0e2cc8ac938ee3ddd7" translate="yes" xml:space="preserve">
          <source>_codec</source>
          <target state="translated">_codec</target>
        </trans-unit>
        <trans-unit id="27ebe2b676fb65035b0da6b71e99f8bdd71439cc" translate="yes" xml:space="preserve">
          <source>_codec_meas</source>
          <target state="translated">_codec_meas</target>
        </trans-unit>
        <trans-unit id="6c13d5ea43d36d761149497241c9063f67e6a398" translate="yes" xml:space="preserve">
          <source>_codec_mstone1</source>
          <target state="translated">_codec_mstone1</target>
        </trans-unit>
        <trans-unit id="e31dc134e3b80e71589f5ac6fad16e099f10b3c4" translate="yes" xml:space="preserve">
          <source>_codec_mstone2</source>
          <target state="translated">_codec_mstone2</target>
        </trans-unit>
        <trans-unit id="90359852ce07bfa97d9689b7aa43e693def3938c" translate="yes" xml:space="preserve">
          <source>_codec_transform</source>
          <target state="translated">_codec_transform</target>
        </trans-unit>
        <trans-unit id="19872913d782be1589e6701b03a7f45da98d1400" translate="yes" xml:space="preserve">
          <source>_collector</source>
          <target state="translated">_collector</target>
        </trans-unit>
        <trans-unit id="95fd16755308c58bf314492a449a1014c914f078" translate="yes" xml:space="preserve">
          <source>_community_mib</source>
          <target state="translated">_community_mib</target>
        </trans-unit>
        <trans-unit id="18e80d5bfae24861611db7385f7013928e5d6e0d" translate="yes" xml:space="preserve">
          <source>_connection</source>
          <target state="translated">_connection</target>
        </trans-unit>
        <trans-unit id="a0a6e30e98ad368e6a56c6efa08b338f8d445a91" translate="yes" xml:space="preserve">
          <source>_crl_cache</source>
          <target state="translated">_crl_cache</target>
        </trans-unit>
        <trans-unit id="7941966cbd72225704aa9bfd459214344268ebb2" translate="yes" xml:space="preserve">
          <source>_crl_cache_api</source>
          <target state="translated">_crl_cache_api</target>
        </trans-unit>
        <trans-unit id="3682fa3f78064956dda27a4bd62f2333444d4b0f" translate="yes" xml:space="preserve">
          <source>_diameters Service Name and Port Number Registration</source>
          <target state="translated">_di&amp;aacute;metros Registro de nombre de servicio y n&amp;uacute;mero de puerto</target>
        </trans-unit>
        <trans-unit id="c30c34a37e294b320ee5958d661b902bfb44ae53" translate="yes" xml:space="preserve">
          <source>_edist_compress</source>
          <target state="translated">_edist_compress</target>
        </trans-unit>
        <trans-unit id="109b8ec3b51a8766d30cf8ba35a2b40246af0a62" translate="yes" xml:space="preserve">
          <source>_encoder</source>
          <target state="translated">_encoder</target>
        </trans-unit>
        <trans-unit id="8028fc33af10b780f948e45b09f52da447e46fdc" translate="yes" xml:space="preserve">
          <source>_eventp</source>
          <target state="translated">_eventp</target>
        </trans-unit>
        <trans-unit id="82f8180da8217ef3e2205182011fd18fc88f7425" translate="yes" xml:space="preserve">
          <source>_flex_scanner</source>
          <target state="translated">_flex_scanner</target>
        </trans-unit>
        <trans-unit id="991349ac1ce87ece4b2e2145ad4c432f32ef22b4" translate="yes" xml:space="preserve">
          <source>_frag_hash</source>
          <target state="translated">_frag_hash</target>
        </trans-unit>
        <trans-unit id="36e352f7602ed6ff5b4d3c20ca4f2ecd9762f123" translate="yes" xml:space="preserve">
          <source>_framework_mib</source>
          <target state="translated">_framework_mib</target>
        </trans-unit>
        <trans-unit id="bbf74989137c6ab670df736ad7e99665b37bf816" translate="yes" xml:space="preserve">
          <source>_generic</source>
          <target state="translated">_generic</target>
        </trans-unit>
        <trans-unit id="57efb0a40cc309b5df8e44e3bd28362d8dd5749d" translate="yes" xml:space="preserve">
          <source>_index</source>
          <target state="translated">_index</target>
        </trans-unit>
        <trans-unit id="fae34c1b72ed9b8467d52591b2bce86f7231f1ef" translate="yes" xml:space="preserve">
          <source>_notification_mib</source>
          <target state="translated">_notification_mib</target>
        </trans-unit>
        <trans-unit id="4e978448a39ad6264b1335da8913bc80bc35bb4a" translate="yes" xml:space="preserve">
          <source>_registry</source>
          <target state="translated">_registry</target>
        </trans-unit>
        <trans-unit id="9e12eefdf403355bcef74652ad9c69a9e23b92ed" translate="yes" xml:space="preserve">
          <source>_sax_parser</source>
          <target state="translated">_sax_parser</target>
        </trans-unit>
        <trans-unit id="b80362d86e60aad62fc19cd4291b21f9cc5e74d5" translate="yes" xml:space="preserve">
          <source>_selector</source>
          <target state="translated">_selector</target>
        </trans-unit>
        <trans-unit id="928c08775129da2e65f5a26ddd7c047ceca219b0" translate="yes" xml:space="preserve">
          <source>_server_channel</source>
          <target state="translated">_server_channel</target>
        </trans-unit>
        <trans-unit id="03786a0e59ea12891f7d1aafedc1dd322f0a4a75" translate="yes" xml:space="preserve">
          <source>_server_key_api</source>
          <target state="translated">_server_key_api</target>
        </trans-unit>
        <trans-unit id="b8856171bfcbab10cae954cc8871b426fe01d425" translate="yes" xml:space="preserve">
          <source>_session_cache_api</source>
          <target state="translated">_session_cache_api</target>
        </trans-unit>
        <trans-unit id="5ab367fbe50d2be8c17052d34ea7846a858a0823" translate="yes" xml:space="preserve">
          <source>_sftpd</source>
          <target state="translated">_sftpd</target>
        </trans-unit>
        <trans-unit id="36327c474ffb863cd315060f16b646fc9f886d90" translate="yes" xml:space="preserve">
          <source>_standard_mib</source>
          <target state="translated">_standard_mib</target>
        </trans-unit>
        <trans-unit id="fdaf9ee7f1c954d6ec27a2bc4262c918c79d9d43" translate="yes" xml:space="preserve">
          <source>_surefire</source>
          <target state="translated">_surefire</target>
        </trans-unit>
        <trans-unit id="fae159c3bbaacbf232b454a5f598ad5777905bb7" translate="yes" xml:space="preserve">
          <source>_target_mib</source>
          <target state="translated">_target_mib</target>
        </trans-unit>
        <trans-unit id="d5400cfd5df0e2b5888f26e0fcbc79b4733be156" translate="yes" xml:space="preserve">
          <source>_transport</source>
          <target state="translated">_transport</target>
        </trans-unit>
        <trans-unit id="38a498c8bf43f2521df379307eafdd3caf03310c" translate="yes" xml:space="preserve">
          <source>_user_based_sm_mib</source>
          <target state="translated">_user_based_sm_mib</target>
        </trans-unit>
        <trans-unit id="68c989013d882bac18756c204f907b0ced5b51ae" translate="yes" xml:space="preserve">
          <source>_view_based_acm_mib</source>
          <target state="translated">_view_based_acm_mib</target>
        </trans-unit>
        <trans-unit id="623272811c212441ff18fde00b01b6c2dcd21dde" translate="yes" xml:space="preserve">
          <source>_viewer</source>
          <target state="translated">_viewer</target>
        </trans-unit>
        <trans-unit id="ec9274d990f6a819f4992976553663b0387141da" translate="yes" xml:space="preserve">
          <source>_xpath</source>
          <target state="translated">_xpath</target>
        </trans-unit>
        <trans-unit id="86f7e437faa5a7fce15d1ddcb9eaeaea377667b8" translate="yes" xml:space="preserve">
          <source>a</source>
          <target state="translated">a</target>
        </trans-unit>
        <trans-unit id="9209a9399eab62a76dfdee367b13d15ddcddf6a3" translate="yes" xml:space="preserve">
          <source>a &lt;strong&gt;table element&lt;/strong&gt;, which is a special type of scalar variable.</source>
          <target state="translated">un &lt;strong&gt;elemento de tabla&lt;/strong&gt; , que es un tipo especial de variable escalar.</target>
        </trans-unit>
        <trans-unit id="bc7cde18356ac74edfb8574d371fdcb6b63da2ad" translate="yes" xml:space="preserve">
          <source>a binary representing a URL to change to change the documentation itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c92038fa98d1ff3c7b18491608d0eaefa19a1ae" translate="yes" xml:space="preserve">
          <source>a binary representing the version such entry was added, such as &amp;lt;&amp;lt;&quot;1.3.0&quot;&amp;gt;&amp;gt; or &amp;lt;&amp;lt;&quot;20.0&quot;&amp;gt;&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59f850078a1da734ba08cef0859f100fe8981523" translate="yes" xml:space="preserve">
          <source>a description of a Management Information Base (MIB) in Abstract Syntax Notation One (ASN.1)</source>
          <target state="translated">una descripción de una Base de Información de Gestión (MIB)en la Notación de Sintaxis Abstracta Uno (ASN.1)</target>
        </trans-unit>
        <trans-unit id="598ba6d6d2150e77bd152dcc13c73aea221d2a5f" translate="yes" xml:space="preserve">
          <source>a list of any of the above, e.g. &lt;code&gt;['file*','../foo/file3','File4']&lt;/code&gt;</source>
          <target state="translated">una lista de cualquiera de los anteriores, por ejemplo, &lt;code&gt;['file*','../foo/file3','File4']&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b9fc6edb753f6cec4253219c6fecb47ea527850c" translate="yes" xml:space="preserve">
          <source>a list of authors as binaries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a33b6819658ccf0ba1bce6a3a5ca3a8cdb8ed681" translate="yes" xml:space="preserve">
          <source>a list of documentation for other entities (such as functions and types) in the module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbfad71a464fb64328caaeb5e1497428f4ffbc42" translate="yes" xml:space="preserve">
          <source>a list of modules or module entries that can be used as cross references when generating documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f528464c69f58018e34c5a7b63317e81bc40978" translate="yes" xml:space="preserve">
          <source>a map of atom keys with any term as value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ec7597aef4f8d3fd18a5da5a314bc745db0bcce" translate="yes" xml:space="preserve">
          <source>a map of atom keys with any term as value. This can be used to add annotations like the &lt;code&gt;authors&lt;/code&gt; of a module, &lt;code&gt;deprecated&lt;/code&gt;, or anything else a language or documentation tool may find relevant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2abe25a102a30ea18cb77e721b692978d568edf" translate="yes" xml:space="preserve">
          <source>a map with the documentation language as key, such as &amp;lt;&amp;lt;&quot;en&quot;&amp;gt;&amp;gt; or &amp;lt;&amp;lt;&quot;pt_BR&quot;&amp;gt;&amp;gt;, and the documentation as a value. The documentation may either be a binary or any Erlang term, both described by &lt;code&gt;Format&lt;/code&gt;. If it is an Erlang term, then the Format must be &amp;lt;&amp;lt;&quot;application/erlang+SUFFIX&quot;,&amp;gt;&amp;gt; such as &amp;lt;&amp;lt;&quot;application/erlang+html&quot;&amp;gt;&amp;gt; when the documentation is an Erlang representation of an HTML document. The Doc may also be atom &lt;code&gt;none&lt;/code&gt; in case there is no documentation or the atom &lt;code&gt;hidden&lt;/code&gt; if documentation has been explicitly disabled for this entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d21ae699e50e54a68e085627a72275339472b55" translate="yes" xml:space="preserve">
          <source>a map with the documentation language as key, such as &lt;code&gt;&amp;lt;&amp;lt;&quot;en&quot;&amp;gt;&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;&amp;lt;&quot;pt_BR&quot;&amp;gt;&amp;gt;&lt;/code&gt;, and the documentation as a binary value. It may be the atom &lt;code&gt;none&lt;/code&gt; in case there is no documentation or the atom &lt;code&gt;hidden&lt;/code&gt; if documentation has been explicitly disabled for this entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6aa21f6a27cddec52cbf6694c42d1efd18020bd" translate="yes" xml:space="preserve">
          <source>a mechanism for sending notifications (traps and informs)</source>
          <target state="translated">un mecanismo de envío de notificaciones (trampas e informes)</target>
        </trans-unit>
        <trans-unit id="d3f50d1c8c2b43636798e88f62cb7fbbbf750c67" translate="yes" xml:space="preserve">
          <source>a module name in another directory, e.g. &lt;code&gt;../foo/file3&lt;/code&gt;</source>
          <target state="translated">un nombre de m&amp;oacute;dulo en otro directorio, por ejemplo &lt;code&gt;../foo/file3&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5f8feb36544be17ef62afe31de2e6ba28542d0dc" translate="yes" xml:space="preserve">
          <source>a module name, e.g. &lt;code&gt;file1&lt;/code&gt;</source>
          <target state="translated">un nombre de m&amp;oacute;dulo, por ejemplo, &lt;code&gt;file1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e2ebaeff8eee87080a90c31f62fb9e00acf1580a" translate="yes" xml:space="preserve">
          <source>a reference to a key in the Engine is available. This should be an Erlang string or binary and depends on the Engine loaded</source>
          <target state="translated">una referencia a una llave en el motor está disponible.Esta debe ser una cadena de Erlang o binaria y depende de la Máquina cargada</target>
        </trans-unit>
        <trans-unit id="b0f536aaf11d6a845928df04b25b502dda74aa22" translate="yes" xml:space="preserve">
          <source>a set of modules specified with a wildcards, e.g. &lt;code&gt;'file*'&lt;/code&gt;</source>
          <target state="translated">un conjunto de m&amp;oacute;dulos especificados con comodines, por ejemplo, &lt;code&gt;'file*'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2142723e842ef520a7459b07b3cc5f339a0aa9ea" translate="yes" xml:space="preserve">
          <source>a simple and extensible model for transaction handling and consistency checking of set-requests</source>
          <target state="translated">un modelo simple y extensible para el manejo de las transacciones y la verificación de la coherencia de las solicitudes de conjuntos</target>
        </trans-unit>
        <trans-unit id="38f6085046e882c0a7a04cd899fe5a545baf84b3" translate="yes" xml:space="preserve">
          <source>a wildcard indicating all modules in current directory, i.e. &lt;code&gt;'*'&lt;/code&gt;</source>
          <target state="translated">un comod&amp;iacute;n que indica todos los m&amp;oacute;dulos en el directorio actual, es decir, &lt;code&gt;'*'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d8b64c78e460148bffaf38c45ea356ef93872bfc" translate="yes" xml:space="preserve">
          <source>a_conf</source>
          <target state="translated">a_conf</target>
        </trans-unit>
        <trans-unit id="c7b8738431983fe29472fb70a8178a2b46e97bbb" translate="yes" xml:space="preserve">
          <source>a_discovery_handler</source>
          <target state="translated">a_discovery_handler</target>
        </trans-unit>
        <trans-unit id="93100c315fb6a4a680b80c6ef74e3b42901b4ef6" translate="yes" xml:space="preserve">
          <source>a_error</source>
          <target state="translated">a_error</target>
        </trans-unit>
        <trans-unit id="91cdbf281b85512304d2e4aa00cc84b0a7116cc8" translate="yes" xml:space="preserve">
          <source>a_error_io</source>
          <target state="translated">a_error_io</target>
        </trans-unit>
        <trans-unit id="a9a69b4ef7c8a631b988528c71a8fb229b7342ab" translate="yes" xml:space="preserve">
          <source>a_error_logger</source>
          <target state="translated">a_error_logger</target>
        </trans-unit>
        <trans-unit id="d58660a063e19d1e165103417ccafc244fe6c4fa" translate="yes" xml:space="preserve">
          <source>a_error_report</source>
          <target state="translated">a_error_report</target>
        </trans-unit>
        <trans-unit id="15d1631bb10bca396a6313726844ca91b666c395" translate="yes" xml:space="preserve">
          <source>a_function(Tuples) -&amp;gt; Function</source>
          <target state="translated">a_function (tuplas) -&amp;gt; Funci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="90ae25b7a163dfe99700824480bc8489041602ee" translate="yes" xml:space="preserve">
          <source>a_function(Tuples, Type) -&amp;gt; Function</source>
          <target state="translated">a_function (tuplas, tipo) -&amp;gt; funci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="6c78c23fcc9749492f0e95659d009aacbd0b549b" translate="yes" xml:space="preserve">
          <source>a_local_db</source>
          <target state="translated">a_local_db</target>
        </trans-unit>
        <trans-unit id="4d9fa8f6f06a58c228ab59428061a559afd4d349" translate="yes" xml:space="preserve">
          <source>a_mib_data</source>
          <target state="translated">a_mib_data</target>
        </trans-unit>
        <trans-unit id="b98e8d4d40c0f85d0e5453795eac17c1117970c5" translate="yes" xml:space="preserve">
          <source>a_mib_storage</source>
          <target state="translated">a_mib_storage</target>
        </trans-unit>
        <trans-unit id="33fb33f4be736b0342549eb4b0f40a121541761c" translate="yes" xml:space="preserve">
          <source>a_network_interface</source>
          <target state="translated">a_network_interface</target>
        </trans-unit>
        <trans-unit id="c89366d95a71167b5f2acc9361247e07b3d68c83" translate="yes" xml:space="preserve">
          <source>a_network_interface_filter</source>
          <target state="translated">a_network_interface_filter</target>
        </trans-unit>
        <trans-unit id="965e9121d01780b225ad12e277a002a60a1deb93" translate="yes" xml:space="preserve">
          <source>a_notification_delivery_info_receiver</source>
          <target state="translated">a_notification_delivery_info_receiver</target>
        </trans-unit>
        <trans-unit id="e470655cfa14cf813f61bb23d74e82172ceb0adb" translate="yes" xml:space="preserve">
          <source>a_notification_filter</source>
          <target state="translated">a_notification_filter</target>
        </trans-unit>
        <trans-unit id="38858de9533084e156dfb13fbf7c902544855905" translate="yes" xml:space="preserve">
          <source>a_supervisor</source>
          <target state="translated">a_supervisor</target>
        </trans-unit>
        <trans-unit id="49b2bcc09405df13855e7497804d2f4d6b1694b9" translate="yes" xml:space="preserve">
          <source>abcast(Name, Msg) -&amp;gt; abcast</source>
          <target state="translated">abcast (Nombre, Msg) -&amp;gt; abcast</target>
        </trans-unit>
        <trans-unit id="2635da48392751f2fcd42d1a6423fda958353f98" translate="yes" xml:space="preserve">
          <source>abcast(Nodes, Name, Msg) -&amp;gt; abcast</source>
          <target state="translated">abcast (Nodos, Nombre, Msj) -&amp;gt; abcast</target>
        </trans-unit>
        <trans-unit id="b61646f016483b318b49a910668a966b6ce09ede" translate="yes" xml:space="preserve">
          <source>abort</source>
          <target state="translated">abort</target>
        </trans-unit>
        <trans-unit id="d4cf17ce87a7f6fa9deaead1eb800bb31e974746" translate="yes" xml:space="preserve">
          <source>abort | linger()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6462f8a6c8eb77cb3afc144deb769f26f785a2a5" translate="yes" xml:space="preserve">
          <source>abort(Reason :: term()) -&amp;gt; no_return()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09e9564e661cbe8ce66fe209e78ec306eabd9752" translate="yes" xml:space="preserve">
          <source>abort(Socket, Assoc) -&amp;gt; ok | {error, &lt;code&gt;&lt;a href=&quot;inet#type-posix&quot;&gt;inet:posix()&lt;/a&gt;&lt;/code&gt;}</source>
          <target state="translated">abortar (Socket, Assoc) -&amp;gt; ok | {error, &lt;code&gt;&lt;a href=&quot;inet#type-posix&quot;&gt;inet:posix()&lt;/a&gt;&lt;/code&gt; }</target>
        </trans-unit>
        <trans-unit id="c3c8890721b3c655c531f48de57de28fdc6630a5" translate="yes" xml:space="preserve">
          <source>abs(Float) -&amp;gt; float()</source>
          <target state="translated">abs (Flotar) -&amp;gt; flotar ()</target>
        </trans-unit>
        <trans-unit id="cf11c8b1d7379471b7d904cd217e8ce582257a2e" translate="yes" xml:space="preserve">
          <source>abs(Int) -&amp;gt; integer() &amp;gt;= 0</source>
          <target state="translated">abs (Int) -&amp;gt; entero ()&amp;gt; = 0</target>
        </trans-unit>
        <trans-unit id="4ae90431e45cb5bb0df1f957e38644b03ceaca91" translate="yes" xml:space="preserve">
          <source>absname(Filename) -&amp;gt; &lt;code&gt;file:filename_all()&lt;/code&gt;</source>
          <target state="translated">absname (Nombre de archivo) -&amp;gt; &lt;code&gt;file:filename_all()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4dadb80572d787a2a2876e8d9bdff30e554ed4e1" translate="yes" xml:space="preserve">
          <source>absname(Filename, Dir) -&amp;gt; &lt;code&gt;file:filename_all()&lt;/code&gt;</source>
          <target state="translated">absname (Nombre de archivo, Dir) -&amp;gt; &lt;code&gt;file:filename_all()&lt;/code&gt; archivo_todos ()</target>
        </trans-unit>
        <trans-unit id="b0caa322bfeb0dc87a2f34fec852074656296ce2" translate="yes" xml:space="preserve">
          <source>absname_join(Dir, Filename) -&amp;gt; &lt;code&gt;file:filename_all()&lt;/code&gt;</source>
          <target state="translated">absname_join (Dir, Nombre de archivo) -&amp;gt; &lt;code&gt;file:filename_all()&lt;/code&gt; archivo_todos ()</target>
        </trans-unit>
        <trans-unit id="532a2994137354b8940205950971da0a8bd9b1a6" translate="yes" xml:space="preserve">
          <source>abstract(Data) -&amp;gt; AbsTerm</source>
          <target state="translated">resumen (Datos) -&amp;gt; AbsTerm</target>
        </trans-unit>
        <trans-unit id="6558389c79dfad53c8f95ec9a11e7d158122c8e3" translate="yes" xml:space="preserve">
          <source>abstract(Data, Options) -&amp;gt; AbsTerm</source>
          <target state="translated">resumen (Datos, Opciones) -&amp;gt; AbsTerm</target>
        </trans-unit>
        <trans-unit id="2a5e8e179cca4a89b054c74ca0b1f5b98197df6c" translate="yes" xml:space="preserve">
          <source>accept(LSocket) -&amp;gt; {ok, Socket} | {error, Reason}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="153e5d6387ac686b2461b486e1aa39989a749423" translate="yes" xml:space="preserve">
          <source>accept(LSocket, Timeout :: nowait) -&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e27cbfc8eb09e0289d412dae18f6547f25809118" translate="yes" xml:space="preserve">
          <source>accept(LSocket, Timeout) -&amp;gt; {ok, Socket} | {error, Reason}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f744acd95bd2bf36b1388a10744a694c3d9d9fa" translate="yes" xml:space="preserve">
          <source>accept(ListenSocket) -&amp;gt; {ok, Socket} | {error, Reason}</source>
          <target state="translated">aceptar (ListenSocket) -&amp;gt; {ok, Socket} | {error, Reason}</target>
        </trans-unit>
        <trans-unit id="7459bc4b9c5cdae9838af1a0697e470d695a1761" translate="yes" xml:space="preserve">
          <source>accept(ListenSocket, Timeout) -&amp;gt; {ok, Socket} | {error, Reason}</source>
          <target state="translated">aceptar (ListenSocket, Timeout) -&amp;gt; {ok, Socket} | {error, Reason}</target>
        </trans-unit>
        <trans-unit id="1854a981f1a8492b3d14d056ad1903f4752ff005" translate="yes" xml:space="preserve">
          <source>acceptconn</source>
          <target state="translated">acceptconn</target>
        </trans-unit>
        <trans-unit id="9f231959406861cc11841f428e5c83cf8ebc7abd" translate="yes" xml:space="preserve">
          <source>access control</source>
          <target state="translated">control de acceso</target>
        </trans-unit>
        <trans-unit id="48be7659e77f020ad29782ad8c3ca981c8efca50" translate="yes" xml:space="preserve">
          <source>accessible_logs() -&amp;gt; {[LocalLog], [DistributedLog]}</source>
          <target state="translated">access_logs () -&amp;gt; {[LocalLog], [DistributedLog]}</target>
        </trans-unit>
        <trans-unit id="35fba5bc784d45ba80fc856041cec697067dead0" translate="yes" xml:space="preserve">
          <source>acos(X) -&amp;gt; float()</source>
          <target state="translated">acos (X) -&amp;gt; flotar ()</target>
        </trans-unit>
        <trans-unit id="1ddb6bfe54948f1f86d652c905651fc94ff04b0d" translate="yes" xml:space="preserve">
          <source>acosh(X) -&amp;gt; float()</source>
          <target state="translated">acosh (X) -&amp;gt; flotar ()</target>
        </trans-unit>
        <trans-unit id="6218de7b88db2b268c25eec6e0b07eafa450cabf" translate="yes" xml:space="preserve">
          <source>action must be taken immediately</source>
          <target state="translated">se deben tomar medidas de inmediato</target>
        </trans-unit>
        <trans-unit id="e394f08f2e8d57232cd2ae1777a3230db3bf9ec4" translate="yes" xml:space="preserve">
          <source>action(Client, Action) -&amp;gt; Result</source>
          <target state="translated">acci&amp;oacute;n (Cliente, Acci&amp;oacute;n) -&amp;gt; Resultado</target>
        </trans-unit>
        <trans-unit id="3bb1bdbfd67ce20857fa7c017e6f6426a3633f0f" translate="yes" xml:space="preserve">
          <source>action(Client, Action, Timeout) -&amp;gt; Result</source>
          <target state="translated">acci&amp;oacute;n (Cliente, Acci&amp;oacute;n, Tiempo de espera) -&amp;gt; Resultado</target>
        </trans-unit>
        <trans-unit id="03f14034ca8be1d5acd4ce6b01d1c7e8fc5f2faa" translate="yes" xml:space="preserve">
          <source>activate_checkpoint(Args :: [Arg]) -&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4eb246cd0b6bce10dc9b716021941ad855f1ca9" translate="yes" xml:space="preserve">
          <source>active_filter - collector.</source>
          <target state="translated">Filtro_activo-colector.</target>
        </trans-unit>
        <trans-unit id="f6a0f7b99c68a969daab160eb01a7328a319b2f2" translate="yes" xml:space="preserve">
          <source>activity(Kind, Fun) -&amp;gt; &lt;code&gt;&lt;a href=&quot;#type-t_result&quot;&gt;t_result&lt;/a&gt;&lt;/code&gt;(Res) | Res</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e83bf1998d02fdfec63bd4686c5398a1519dd195" translate="yes" xml:space="preserve">
          <source>activity(Kind, Fun, Args :: [Arg :: term()], Mod) -&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4615c92e5c305c827a68665438ef70606004cff6" translate="yes" xml:space="preserve">
          <source>actors - [&quot;UNKNOWN&quot;].</source>
          <target state="translated">actores-[&quot;Desconocidos&quot;].</target>
        </trans-unit>
        <trans-unit id="6576cc357b960d4b0c83d38a9e07d2d605de6677" translate="yes" xml:space="preserve">
          <source>adaption of legacy equipment</source>
          <target state="translated">adaptación del equipo de legado</target>
        </trans-unit>
        <trans-unit id="4ea2abb73535206ef92d517cb876b6300f152df8" translate="yes" xml:space="preserve">
          <source>add(Element, Set1) -&amp;gt; Set2</source>
          <target state="translated">agregar (Elemento, Conjunto1) -&amp;gt; Conjunto2</target>
        </trans-unit>
        <trans-unit id="b68390898043f55370a91220cc4a08355b559864" translate="yes" xml:space="preserve">
          <source>add(Ref, Ix, Incr) -&amp;gt; ok</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c961f1c30d1af0eae4ef1950df1b4a0d418c10e7" translate="yes" xml:space="preserve">
          <source>add(TarDescriptor, AddType, Options) -&amp;gt; ok | {error, term()}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d12a333130bb0647b7b56debd60ef7012f215f" translate="yes" xml:space="preserve">
          <source>add(TarDescriptor, Filename, NameInArchive, Options) -&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7670b41b68f186df0e13666cf646588f19eb634" translate="yes" xml:space="preserve">
          <source>add_binding(Name, Value, BindingStruct) -&amp;gt; &lt;code&gt;&lt;a href=&quot;#type-binding_struct&quot;&gt;binding_struct()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">add_binding (Nombre, Valor, BindingStruct) -&amp;gt; &lt;code&gt;&lt;a href=&quot;#type-binding_struct&quot;&gt;binding_struct()&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0f3678a7f18b0a89514fe10fe9362d9d4535110c" translate="yes" xml:space="preserve">
          <source>add_edge(G, E, V1, V2, Label) -&amp;gt;</source>
          <target state="translated">add_edge (G, E, V1, V2, Etiqueta) -&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d1ec2a372a413447ea97d64f426b1b39de3ff9cf" translate="yes" xml:space="preserve">
          <source>add_edge(G, V1, V2) -&amp;gt; &lt;code&gt;&lt;a href=&quot;#type-edge&quot;&gt;edge()&lt;/a&gt;&lt;/code&gt; | {error, add_edge_err_rsn()}</source>
          <target state="translated">add_edge (G, V1, V2) -&amp;gt; &lt;code&gt;&lt;a href=&quot;#type-edge&quot;&gt;edge()&lt;/a&gt;&lt;/code&gt; | {error, add_edge_err_rsn ()}</target>
        </trans-unit>
        <trans-unit id="b3400458091cf48e0059fd116ba45d3087b097dc" translate="yes" xml:space="preserve">
          <source>add_edge(G, V1, V2, Label) -&amp;gt; &lt;code&gt;&lt;a href=&quot;#type-edge&quot;&gt;edge()&lt;/a&gt;&lt;/code&gt; | {error, add_edge_err_rsn()}</source>
          <target state="translated">add_edge (G, V1, V2, Etiqueta) -&amp;gt; &lt;code&gt;&lt;a href=&quot;#type-edge&quot;&gt;edge()&lt;/a&gt;&lt;/code&gt; | {error, add_edge_err_rsn ()}</target>
        </trans-unit>
        <trans-unit id="520109a15ec095a2d9cde3be2dc14cfdcfdc1264" translate="yes" xml:space="preserve">
          <source>add_element(Element, Ordset1) -&amp;gt; Ordset2</source>
          <target state="translated">add_element (Elemento, Ordset1) -&amp;gt; Ordset2</target>
        </trans-unit>
        <trans-unit id="2f2b3fb1df1f53380cfed1136cf60fddd69e4719" translate="yes" xml:space="preserve">
          <source>add_element(Element, Set1) -&amp;gt; Set2</source>
          <target state="translated">add_element (Elemento, Conjunto1) -&amp;gt; Conjunto2</target>
        </trans-unit>
        <trans-unit id="15c8a3e80244ca70b62e5ba8658535e07e888923" translate="yes" xml:space="preserve">
          <source>add_get(Ref, Ix, Incr) -&amp;gt; integer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a29e323bc1897e8be4ff18e6d34334075045cf" translate="yes" xml:space="preserve">
          <source>add_handler(HandlerId, Module, Config) -&amp;gt; ok | {error, term()}</source>
          <target state="translated">add_handler (HandlerId, M&amp;oacute;dulo, Configuraci&amp;oacute;n) -&amp;gt; ok | {t&amp;eacute;rmino de error()}</target>
        </trans-unit>
        <trans-unit id="0d5ba58c0fad9b0a1d5a381557c1515d28ba9802" translate="yes" xml:space="preserve">
          <source>add_handler_filter(HandlerId, FilterId, Filter) -&amp;gt;</source>
          <target state="translated">add_handler_filter (HandlerId, FilterId, Filter) -&amp;gt;</target>
        </trans-unit>
        <trans-unit id="fa5e7b0fea542972df9d4c2bd6c67c59b0465cff" translate="yes" xml:space="preserve">
          <source>add_handlers(Application) -&amp;gt; ok | {error, term()}</source>
          <target state="translated">add_handlers (Aplicaci&amp;oacute;n) -&amp;gt; ok | {t&amp;eacute;rmino de error()}</target>
        </trans-unit>
        <trans-unit id="62f2cab368c614ca8d746ffcd7dc56d70c13fa37" translate="yes" xml:space="preserve">
          <source>add_handlers(HandlerConfig) -&amp;gt; ok | {error, term()}</source>
          <target state="translated">add_handlers (HandlerConfig) -&amp;gt; ok | {t&amp;eacute;rmino de error()}</target>
        </trans-unit>
        <trans-unit id="0e5c6dff7e26ffb791503952fae0af62beca94f3" translate="yes" xml:space="preserve">
          <source>add_host_key(Host :: string(),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95b9b5eb0dfd931b351fdc68d30c6b955f3d58c2" translate="yes" xml:space="preserve">
          <source>add_host_key(Host,</source>
          <target state="translated">add_host_key(Host,</target>
        </trans-unit>
        <trans-unit id="309cb14c71255d32d6fafade23413892de7daf85" translate="yes" xml:space="preserve">
          <source>add_host_key(Host, Port, Key, Options) -&amp;gt; Result</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="504d0a86673f580111539cc512096256d3045c02" translate="yes" xml:space="preserve">
          <source>add_membership</source>
          <target state="translated">add_membership</target>
        </trans-unit>
        <trans-unit id="921e13fd11476cd0871dc412f117c9b1e81ee404" translate="yes" xml:space="preserve">
          <source>add_module and delete_module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f23261944662c692d5bb80b52bcc2021c3e5a8c0" translate="yes" xml:space="preserve">
          <source>add_path(Dir) -&amp;gt; add_path_ret()</source>
          <target state="translated">add_path (Dir) -&amp;gt; add_path_ret ()</target>
        </trans-unit>
        <trans-unit id="2be842d431a9d86c5d96e60664cacb61f61e0a93" translate="yes" xml:space="preserve">
          <source>add_patha(Dir) -&amp;gt; add_path_ret()</source>
          <target state="translated">add_patha (Dir) -&amp;gt; add_path_ret ()</target>
        </trans-unit>
        <trans-unit id="ae26e9dbabe45af85669f9252e4f17339825692f" translate="yes" xml:space="preserve">
          <source>add_paths(Dirs) -&amp;gt; ok</source>
          <target state="translated">add_paths (Dirs) -&amp;gt; ok</target>
        </trans-unit>
        <trans-unit id="a989d2b4d60c99c25823c188d803b4f82e3bf36f" translate="yes" xml:space="preserve">
          <source>add_pathsa(Dirs) -&amp;gt; ok</source>
          <target state="translated">add_pathsa (Dirs) -&amp;gt; ok</target>
        </trans-unit>
        <trans-unit id="0c35ea2dbcb9fa9aa6ce31b9d307c09bbdf6def6" translate="yes" xml:space="preserve">
          <source>add_pathsz(Dirs) -&amp;gt; ok</source>
          <target state="translated">add_pathsz (Dirs) -&amp;gt; ok</target>
        </trans-unit>
        <trans-unit id="2e0ce42350675083063f18cce7bd9049c7e38f9d" translate="yes" xml:space="preserve">
          <source>add_pathz(Dir) -&amp;gt; add_path_ret()</source>
          <target state="translated">add_pathz (Dir) -&amp;gt; add_path_ret ()</target>
        </trans-unit>
        <trans-unit id="ee9d98e37a8b9c161685fea136a45b92224e29a0" translate="yes" xml:space="preserve">
          <source>add_predefined_functions(Forms) -&amp;gt; UpdatedForms</source>
          <target state="translated">add_predefined_functions (Formularios) -&amp;gt; Formularios actualizados</target>
        </trans-unit>
        <trans-unit id="7bc1b31fc59f768dcba6d6bd411ae48685b68b5d" translate="yes" xml:space="preserve">
          <source>add_primary_filter(FilterId, Filter) -&amp;gt; ok | {error, term()}</source>
          <target state="translated">add_primary_filter (FilterId, Filter) -&amp;gt; ok | {t&amp;eacute;rmino de error()}</target>
        </trans-unit>
        <trans-unit id="39dc9598bdd4ada4f624d8a7d464fc2d4ce27b58" translate="yes" xml:space="preserve">
          <source>add_report_handler(Handler) -&amp;gt; any()</source>
          <target state="translated">add_report_handler (Handler) -&amp;gt; any ()</target>
        </trans-unit>
        <trans-unit id="cec820a5714d57bdee8e6697687e51e5b2b8a644" translate="yes" xml:space="preserve">
          <source>add_report_handler(Handler, Args) -&amp;gt; Result</source>
          <target state="translated">add_report_handler (Handler, Args) -&amp;gt; Resultado</target>
        </trans-unit>
        <trans-unit id="a2ed2e0d7b9fccc6df085a54a049cf086b9e465c" translate="yes" xml:space="preserve">
          <source>add_slave(Slave) -&amp;gt; ok | {error, Reason}</source>
          <target state="translated">add_slave (esclavo) -&amp;gt; ok | {error, Reason}</target>
        </trans-unit>
        <trans-unit id="4afa19dae760c2bf9b5e6424b8774bf860865152" translate="yes" xml:space="preserve">
          <source>add_source_membership</source>
          <target state="translated">add_source_membership</target>
        </trans-unit>
        <trans-unit id="a5000b222d7a27cdc96220994be2bcd6e8c8f283" translate="yes" xml:space="preserve">
          <source>add_table_copy(Tab, N, ST) -&amp;gt; &lt;code&gt;&lt;a href=&quot;#type-t_result&quot;&gt;t_result&lt;/a&gt;&lt;/code&gt;(ok)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1af4546a85f8c769991e74111ac2e840e5c1a05" translate="yes" xml:space="preserve">
          <source>add_table_index(Tab, I) -&amp;gt; &lt;code&gt;&lt;a href=&quot;#type-t_result&quot;&gt;t_result&lt;/a&gt;&lt;/code&gt;(ok)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01168eb23addf2838560909bef241c0ed5c7956c" translate="yes" xml:space="preserve">
          <source>add_vertex(G) -&amp;gt; &lt;code&gt;&lt;a href=&quot;#type-vertex&quot;&gt;vertex()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">agregar_vertex (G) -&amp;gt; &lt;code&gt;&lt;a href=&quot;#type-vertex&quot;&gt;vertex()&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="94e175a3210d4edf403441f0831e94cf9e1f2f83" translate="yes" xml:space="preserve">
          <source>add_vertex(G, V) -&amp;gt; &lt;code&gt;&lt;a href=&quot;#type-vertex&quot;&gt;vertex()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">add_vertex (G, V) -&amp;gt; &lt;code&gt;&lt;a href=&quot;#type-vertex&quot;&gt;vertex()&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5bc1cc55319fe45c237035802a9c25d46cda395c" translate="yes" xml:space="preserve">
          <source>add_vertex(G, V, Label) -&amp;gt; &lt;code&gt;&lt;a href=&quot;#type-vertex&quot;&gt;vertex()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">agregar_vertex (G, V, Etiqueta) -&amp;gt; &lt;code&gt;&lt;a href=&quot;#type-vertex&quot;&gt;vertex()&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6cde5dd472003faf1e7928417ca9aaa15af6ca28" translate="yes" xml:space="preserve">
          <source>address_please(Name, Host, AddressFamily) -&amp;gt;</source>
          <target state="translated">address_please (Nombre, Host, AddressFamily) -&amp;gt;</target>
        </trans-unit>
        <trans-unit id="9eb03fc817fbc496ea54d652727e88fe5f220701" translate="yes" xml:space="preserve">
          <source>addrform</source>
          <target state="translated">addrform</target>
        </trans-unit>
        <trans-unit id="a355e2e297b3120686283f33b1cd8ef807177fd7" translate="yes" xml:space="preserve">
          <source>adjust_window(ConnectionRef, ChannelId, NumOfBytes) -&amp;gt; ok</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1c203fab2eb01eaddc506ebbf05b11bd8ee3314" translate="yes" xml:space="preserve">
          <source>adler32(Z, Data) -&amp;gt; CheckSum</source>
          <target state="translated">adler32 (Z, datos) -&amp;gt; CheckSum</target>
        </trans-unit>
        <trans-unit id="3010be9abd4e9e4f1ecc88483a5a41b8715785ab" translate="yes" xml:space="preserve">
          <source>adler32(Z, PrevAdler, Data) -&amp;gt; CheckSum</source>
          <target state="translated">adler32 (Z, PrevAdler, Datos) -&amp;gt; CheckSum</target>
        </trans-unit>
        <trans-unit id="cee36dab124305111bb43143f8ae42ab4996ca52" translate="yes" xml:space="preserve">
          <source>adler32_combine(Z, Adler1, Adler2, Size2) -&amp;gt; Adler</source>
          <target state="translated">adler32_combine (Z, Adler1, Adler2, Size2) -&amp;gt; Adler</target>
        </trans-unit>
        <trans-unit id="ef820fbff8a2936b677933f9e0b8e10d95885a16" translate="yes" xml:space="preserve">
          <source>advise(IoDevice, Offset, Length, Advise) -&amp;gt; ok | {error, Reason}</source>
          <target state="translated">aviso (IoDevice, Desplazamiento, Longitud, Aconsejar) -&amp;gt; ok | {error, Reason}</target>
        </trans-unit>
        <trans-unit id="22c354cca6642d17574452dcfad93f851b24844c" translate="yes" xml:space="preserve">
          <source>agent/2, agent/3</source>
          <target state="translated">agente/2,agente/3</target>
        </trans-unit>
        <trans-unit id="e6eae4997a31e489ef041df5587d3ef4adc39fe4" translate="yes" xml:space="preserve">
          <source>alarm_handler</source>
          <target state="translated">alarm_handler</target>
        </trans-unit>
        <trans-unit id="8f1dba76b561684930a25a984046b3b4149785ca" translate="yes" xml:space="preserve">
          <source>alert</source>
          <target state="translated">alert</target>
        </trans-unit>
        <trans-unit id="60f7bb7b99cdf0f0b736ccf7b41f891f89971d4f" translate="yes" xml:space="preserve">
          <source>alias apply binary bitstr call case catch clause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d87c448044defb778f33158d8ccf94a20531d600" translate="yes" xml:space="preserve">
          <source>all</source>
          <target state="translated">all</target>
        </trans-unit>
        <trans-unit id="a9957d965ac5d06bae0744f6022b4f0ca588006b" translate="yes" xml:space="preserve">
          <source>all of the matched subject is captured, as well as the captured substrings:</source>
          <target state="translated">se capturan todos los sujetos coincidentes,así como los sustratos capturados:</target>
        </trans-unit>
        <trans-unit id="864e8b3eb2304ca23a7d18d8972363d24eac0cf9" translate="yes" xml:space="preserve">
          <source>all() -&amp;gt; [&lt;code&gt;&lt;a href=&quot;#type-tab_name&quot;&gt;tab_name()&lt;/a&gt;&lt;/code&gt;]</source>
          <target state="translated">todos () -&amp;gt; [ &lt;code&gt;&lt;a href=&quot;#type-tab_name&quot;&gt;tab_name()&lt;/a&gt;&lt;/code&gt; ]</target>
        </trans-unit>
        <trans-unit id="f540653e3159efabb2a32bc0522b5fd2ab1ef283" translate="yes" xml:space="preserve">
          <source>all() -&amp;gt; [Tab]</source>
          <target state="translated">todo () -&amp;gt; [Tab]</target>
        </trans-unit>
        <trans-unit id="cd7fb59dea50d667b37c820c0721a759d6368257" translate="yes" xml:space="preserve">
          <source>all(Pred, List) -&amp;gt; boolean()</source>
          <target state="translated">todo (Pred, Lista) -&amp;gt; booleano ()</target>
        </trans-unit>
        <trans-unit id="2ec6196565e534c3d9567779da95d6c693eb27f6" translate="yes" xml:space="preserve">
          <source>all_available() -&amp;gt; [{Module, Filename, Loaded}]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="013111e46b6bc8d4cf365655d47bd8f012ed4da4" translate="yes" xml:space="preserve">
          <source>all_chunks(File :: &lt;code&gt;&lt;a href=&quot;#type-beam&quot;&gt;beam()&lt;/a&gt;&lt;/code&gt;) -&amp;gt;</source>
          <target state="translated">all_chunks (Archivo :: &lt;code&gt;&lt;a href=&quot;#type-beam&quot;&gt;beam()&lt;/a&gt;&lt;/code&gt; ) -&amp;gt;</target>
        </trans-unit>
        <trans-unit id="1884d5cfc4578447491c85eaf0c31bb3f6bb1fcd" translate="yes" xml:space="preserve">
          <source>all_keys(Tab :: &lt;code&gt;&lt;a href=&quot;#type-table&quot;&gt;table()&lt;/a&gt;&lt;/code&gt;) -&amp;gt; [Key :: term()]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed8099cee729b1e25df63173ad72ff29f7628701" translate="yes" xml:space="preserve">
          <source>all_loaded() -&amp;gt; [{Module, Loaded}]</source>
          <target state="translated">all_loaded () -&amp;gt; [{M&amp;oacute;dulo, cargado}]</target>
        </trans-unit>
        <trans-unit id="6bf12d72d2c747eef692fc3caea83c1fb6209090" translate="yes" xml:space="preserve">
          <source>allocate a message container with some meta data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="265de813a6c960a6f9ad0f7fa192e948a567684d" translate="yes" xml:space="preserve">
          <source>allocate(File, Offset, Length) -&amp;gt; ok | {error, &lt;code&gt;&lt;a href=&quot;#type-posix&quot;&gt;posix()&lt;/a&gt;&lt;/code&gt;}</source>
          <target state="translated">asignar (Archivo, Desplazamiento, Longitud) -&amp;gt; ok | {error, &lt;code&gt;&lt;a href=&quot;#type-posix&quot;&gt;posix()&lt;/a&gt;&lt;/code&gt; }</target>
        </trans-unit>
        <trans-unit id="e1b292e4b425c6abd7984973b874e7320b69e75c" translate="yes" xml:space="preserve">
          <source>allocations() -&amp;gt; {ok, Result} | {error, Reason}</source>
          <target state="translated">asignaciones () -&amp;gt; {ok, Resultado} | {error, Reason}</target>
        </trans-unit>
        <trans-unit id="9b58e1de9a88d7f5893c209e77fc394d05c88fef" translate="yes" xml:space="preserve">
          <source>allocations(Options) -&amp;gt; {ok, Result} | {error, Reason}</source>
          <target state="translated">asignaciones (Opciones) -&amp;gt; {ok, Resultado} | {error, Reason}</target>
        </trans-unit>
        <trans-unit id="2d02b2c6b5a98ba505a2a2fcd003460b7b6a904e" translate="yes" xml:space="preserve">
          <source>allow(Nodes) -&amp;gt; ok | error</source>
          <target state="translated">permitir (nodos) -&amp;gt; ok | error</target>
        </trans-unit>
        <trans-unit id="b642e4686d20883de45cdd08a82c5d1ed5206485" translate="yes" xml:space="preserve">
          <source>allowed only for IPv6 sockets that are connected and bound to a v4-mapped-on-v6 address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cadc6dfb25bfca88818fc95870dd81abcd326892" translate="yes" xml:space="preserve">
          <source>allowed_characters() -&amp;gt; [{atom(), list()}]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65ec21073e5df85f4cd2d347361fd4bcb869132c" translate="yes" xml:space="preserve">
          <source>alog(Log, Term) -&amp;gt; notify_ret()</source>
          <target state="translated">alog (registro, t&amp;eacute;rmino) -&amp;gt; notificar_ret ()</target>
        </trans-unit>
        <trans-unit id="e014ae0ef6b7946a6d70ba6d9e45669ea868563a" translate="yes" xml:space="preserve">
          <source>alog_terms(Log, TermList) -&amp;gt; notify_ret()</source>
          <target state="translated">alog_terms (Registro, TermList) -&amp;gt; notificar_ret ()</target>
        </trans-unit>
        <trans-unit id="1c8519a743ba01d2496091da12f2feb9a9d51b37" translate="yes" xml:space="preserve">
          <source>already cancelled</source>
          <target state="translated">ya cancelado</target>
        </trans-unit>
        <trans-unit id="d431a6acd8a5a35fc2ba1662a48f31a4a4c97b7e" translate="yes" xml:space="preserve">
          <source>already triggered</source>
          <target state="translated">ya se ha desencadenado</target>
        </trans-unit>
        <trans-unit id="fad1be4ebf56132018a4efb30adc2a5b336148fb" translate="yes" xml:space="preserve">
          <source>alternatively:</source>
          <target state="translated">alternatively:</target>
        </trans-unit>
        <trans-unit id="2fdac3c4a49bed868038fdabc46d931d0bd0436e" translate="yes" xml:space="preserve">
          <source>an Engine is loaded, see the chapter on &lt;code&gt;Engine Load&lt;/code&gt; or the &lt;code&gt;Reference Manual&lt;/code&gt;</source>
          <target state="translated">un motor est&amp;aacute; cargado, consulte el cap&amp;iacute;tulo sobre &lt;code&gt;Engine Load&lt;/code&gt; o el &lt;code&gt;Reference Manual&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="781dc5e7288030786fc67dccaa94d77c5f4521e6" translate="yes" xml:space="preserve">
          <source>an Erlang map is constructed with the Engine reference, the key reference and possibly a key passphrase if needed by the Engine. See the &lt;code&gt;Reference Manual&lt;/code&gt; for details of the map.</source>
          <target state="translated">se construye un mapa Erlang con la referencia del motor, la referencia clave y posiblemente una frase de contrase&amp;ntilde;a clave si el motor lo necesita. Consulte el &lt;code&gt;Reference Manual&lt;/code&gt; para obtener detalles del mapa.</target>
        </trans-unit>
        <trans-unit id="6fac4487a1484644af1e0935561458638903cbd6" translate="yes" xml:space="preserve">
          <source>an atom representing the language, for example: erlang, elixir, lfe, alpaca, etc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3558d78e025d73eec1204da3a205506c6a34cdf8" translate="yes" xml:space="preserve">
          <source>an include file has been modified since the source file was last compiled.</source>
          <target state="translated">un archivo de inclusión ha sido modificado desde la última vez que se compiló el archivo fuente.</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="a2e7f10c2cc920d2e5cd26d567b470c641505d9d" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;Domain&lt;/code&gt; differs from &lt;code&gt;MatchDomain&lt;/code&gt;, or if there is no domain field in metadata.</source>
          <target state="translated">y el &lt;code&gt;Domain&lt;/code&gt; difiere de &lt;code&gt;MatchDomain&lt;/code&gt; , o si no hay un campo de dominio en los metadatos.</target>
        </trans-unit>
        <trans-unit id="23f0594083a5da8b10e8a2ab26298e8675aa6721" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;Domain&lt;/code&gt; is equal to &lt;code&gt;MatchDomain&lt;/code&gt;.</source>
          <target state="translated">y el &lt;code&gt;Domain&lt;/code&gt; es igual a &lt;code&gt;MatchDomain&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5651ee4ec1efdba8d30f06606338f7dbc9b0a3d7" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;Domain&lt;/code&gt; is equal to or a sub-domain of &lt;code&gt;MatchDomain&lt;/code&gt;, that is, if &lt;code&gt;MatchDomain&lt;/code&gt; is a prefix of &lt;code&gt;Domain&lt;/code&gt;.</source>
          <target state="translated">y el &lt;code&gt;Domain&lt;/code&gt; es igual o un subdominio de &lt;code&gt;MatchDomain&lt;/code&gt; , es decir, si &lt;code&gt;MatchDomain&lt;/code&gt; es un prefijo de &lt;code&gt;Domain&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c37d2503a3ba7f64eff085561405608469c092d1" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;Domain&lt;/code&gt; is equal to or a super-domain of &lt;code&gt;MatchDomain&lt;/code&gt;, that is, if &lt;code&gt;Domain&lt;/code&gt; is a prefix of &lt;code&gt;MatchDomain&lt;/code&gt;.</source>
          <target state="translated">y el &lt;code&gt;Domain&lt;/code&gt; es igual o un &lt;code&gt;MatchDomain&lt;/code&gt; de MatchDomain , es decir, si el &lt;code&gt;Domain&lt;/code&gt; es un prefijo de &lt;code&gt;MatchDomain&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="85650a2303153176b2d32ef0359aa6966910b56d" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;P&lt;/code&gt; is a tuple, the &lt;code&gt;qlc&lt;/code&gt; module analyzes &lt;code&gt;P&lt;/code&gt; and &lt;code&gt;F&lt;/code&gt; in compile time to find positions of tuple &lt;code&gt;P&lt;/code&gt; that are tested for equality to constants. If such a position at runtime turns out to be the key position, the lookup function can be used, otherwise all objects of the table must be traversed. The info function &lt;code&gt;InfoFun&lt;/code&gt; returns the key position. There can be indexed positions as well, also returned by the info function. An index is an extra table that makes lookup on some position fast. Mnesia maintains indexes upon request, and introduces so called secondary keys. The &lt;code&gt;qlc&lt;/code&gt; module prefers to look up objects using the key before secondary keys regardless of the number of constants to look up.</source>
          <target state="translated">y &lt;code&gt;P&lt;/code&gt; es una tupla, el m&amp;oacute;dulo &lt;code&gt;qlc&lt;/code&gt; analiza &lt;code&gt;P&lt;/code&gt; y &lt;code&gt;F&lt;/code&gt; en tiempo de compilaci&amp;oacute;n para encontrar posiciones de la tupla &lt;code&gt;P&lt;/code&gt; cuya igualdad con las constantes se prueba. Si dicha posici&amp;oacute;n en tiempo de ejecuci&amp;oacute;n resulta ser la posici&amp;oacute;n clave, se puede utilizar la funci&amp;oacute;n de b&amp;uacute;squeda; de lo contrario, se deben recorrer todos los objetos de la tabla. La funci&amp;oacute;n de informaci&amp;oacute;n &lt;code&gt;InfoFun&lt;/code&gt; devuelve la posici&amp;oacute;n clave. Tambi&amp;eacute;n puede haber posiciones indexadas, tambi&amp;eacute;n devueltas por la funci&amp;oacute;n de informaci&amp;oacute;n. Un &amp;iacute;ndice es una tabla adicional que agiliza la b&amp;uacute;squeda en alguna posici&amp;oacute;n. Mnesia mantiene &amp;iacute;ndices a pedido e introduce las llamadas claves secundarias. El &lt;code&gt;qlc&lt;/code&gt; El m&amp;oacute;dulo prefiere buscar objetos usando la clave antes que las claves secundarias, independientemente del n&amp;uacute;mero de constantes a buscar.</target>
        </trans-unit>
        <trans-unit id="435e0532505ebbdd955c351c0f5de7153e63f9ef" translate="yes" xml:space="preserve">
          <source>and AEAD is an abreviation of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a092140407d1d0bdcf6c0a8081368ead5e8d13e1" translate="yes" xml:space="preserve">
          <source>and after a while Erlang/OTP-21 will have been installed in &lt;code&gt;C:\Program Files\erl10.0\&lt;/code&gt;, with shortcuts in the menu etc.</source>
          <target state="translated">y despu&amp;eacute;s de un tiempo Erlang / OTP-21 se habr&amp;aacute; instalado en &lt;code&gt;C:\Program Files\erl10.0\&lt;/code&gt; , con accesos directos en el men&amp;uacute;, etc.</target>
        </trans-unit>
        <trans-unit id="4b9c1a58a7ce0aee2463d07e4077eeaf304a7251" translate="yes" xml:space="preserve">
          <source>and after a while Erlang/OTP-23 will have been installed in &lt;code&gt;C:\Program Files\erl11.1.4\&lt;/code&gt;, with shortcuts in the menu etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66f5e6b12bf318a030d2fcb03df9666aa945cbe0" translate="yes" xml:space="preserve">
          <source>and call it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8c4e4cc097470191a2586ec263834d63ae54b46" translate="yes" xml:space="preserve">
          <source>and compare the result with a single calculation just for this example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c09e2e9338eecd9d58d7ec35b3de798f274a0d1" translate="yes" xml:space="preserve">
          <source>and finally, &lt;code&gt;&quot;when _@__@Guard -&amp;gt;&quot;&lt;/code&gt; will match any clause, binding &lt;code&gt;Guard&lt;/code&gt; to &lt;code&gt;[]&lt;/code&gt; if the guard is empty and to &lt;code&gt;[Disjunction]&lt;/code&gt; otherwise</source>
          <target state="translated">y finalmente, &lt;code&gt;&quot;when _@__@Guard -&amp;gt;&quot;&lt;/code&gt; coincidir&amp;aacute; con cualquier cl&amp;aacute;usula, vinculando a &lt;code&gt;Guard&lt;/code&gt; a &lt;code&gt;[]&lt;/code&gt; si el guardia est&amp;aacute; vac&amp;iacute;o y a &lt;code&gt;[Disjunction]&lt;/code&gt; en caso contrario</target>
        </trans-unit>
        <trans-unit id="b7ebb6f00f745a17b7a50b25f230dae062785e2b" translate="yes" xml:space="preserve">
          <source>and finaly what the SSH app implements</source>
          <target state="translated">y finalmente lo que la aplicación SSH implementa</target>
        </trans-unit>
        <trans-unit id="b3b29705e001ca227d311db52ea6f25e7757144b" translate="yes" xml:space="preserve">
          <source>and for MACs (Message Authentication Codes):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64f96460c8f9bfc4a2fdf3a7dd31c2ba9418a902" translate="yes" xml:space="preserve">
          <source>and motorcycles.dtd looks like:</source>
          <target state="translated">y motos.dtd parece:</target>
        </trans-unit>
        <trans-unit id="6d491e274919486aef4d4bbdb353bb3e22c7d8ca" translate="yes" xml:space="preserve">
          <source>and sometimes</source>
          <target state="translated">y a veces</target>
        </trans-unit>
        <trans-unit id="46fd59de2909ece56f52284188694c3a52dbcbe7" translate="yes" xml:space="preserve">
          <source>and that:</source>
          <target state="translated">y eso:</target>
        </trans-unit>
        <trans-unit id="75c005f32e8885c088986480f71cba8346ce540d" translate="yes" xml:space="preserve">
          <source>and the compare function returns &lt;code&gt;eq&lt;/code&gt;.</source>
          <target state="translated">y la funci&amp;oacute;n de comparaci&amp;oacute;n devuelve la &lt;code&gt;eq&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="08366225fe44bcd5d81c51c77de9b9231dab0b84" translate="yes" xml:space="preserve">
          <source>and the compare function returns &lt;code&gt;gt&lt;/code&gt; or &lt;code&gt;eq&lt;/code&gt;.</source>
          <target state="translated">y la funci&amp;oacute;n de comparaci&amp;oacute;n devuelve &lt;code&gt;gt&lt;/code&gt; o &lt;code&gt;eq&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c29b958aebaf91eaa4b4fc0e383d015e20d4a631" translate="yes" xml:space="preserve">
          <source>and the compare function returns &lt;code&gt;gt&lt;/code&gt;.</source>
          <target state="translated">y la funci&amp;oacute;n de comparaci&amp;oacute;n devuelve &lt;code&gt;gt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="004da623dc23abbc77bdc9ccae266580dab903af" translate="yes" xml:space="preserve">
          <source>and the compare function returns &lt;code&gt;lt&lt;/code&gt; or &lt;code&gt;eq&lt;/code&gt;.</source>
          <target state="translated">y la funci&amp;oacute;n de comparaci&amp;oacute;n devuelve &lt;code&gt;lt&lt;/code&gt; o &lt;code&gt;eq&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fafca81c05db8361dd5e261c3aaa8ec8c79d2de8" translate="yes" xml:space="preserve">
          <source>and the compare function returns &lt;code&gt;lt&lt;/code&gt; or &lt;code&gt;gt&lt;/code&gt;.</source>
          <target state="translated">y la funci&amp;oacute;n de comparaci&amp;oacute;n devuelve &lt;code&gt;lt&lt;/code&gt; o &lt;code&gt;gt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c27967e0d82144b5cd16de71839fe2cf85c0c165" translate="yes" xml:space="preserve">
          <source>and the compare function returns &lt;code&gt;lt&lt;/code&gt;.</source>
          <target state="translated">y la funci&amp;oacute;n de comparaci&amp;oacute;n devuelve &lt;code&gt;lt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e2de08b0368158af14b9242b40824b3cdf1bb439" translate="yes" xml:space="preserve">
          <source>and the deamon will present itself as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76e13cdbe12f61a8dba16984804a79fd67e21aa9" translate="yes" xml:space="preserve">
          <source>and the the property test module (in this example &lt;code&gt;ftp_simple_client_server.erl&lt;/code&gt;) as almost a usual property testing module (More examples are in &lt;code&gt;&lt;a href=&quot;ct_property_test_chapter&quot;&gt;the User's Guide&lt;/a&gt;&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1b700757b2c3a8a734178e043e69f30937c6fd6" translate="yes" xml:space="preserve">
          <source>and then make sure that every module of your application includes that header file. This means that you have a only a single place to modify in order to change the default setting for testing. To override the &lt;code&gt;NOTEST&lt;/code&gt; setting without modifying the code, you can define &lt;code&gt;TEST&lt;/code&gt; in a compiler option, like this:</source>
          <target state="translated">y luego aseg&amp;uacute;rese de que cada m&amp;oacute;dulo de su aplicaci&amp;oacute;n incluya ese archivo de encabezado. Esto significa que tiene un solo lugar para modificar a fin de cambiar la configuraci&amp;oacute;n predeterminada para la prueba. Para anular la configuraci&amp;oacute;n de &lt;code&gt;NOTEST&lt;/code&gt; sin modificar el c&amp;oacute;digo, puede definir &lt;code&gt;TEST&lt;/code&gt; en una opci&amp;oacute;n del compilador, como esta:</target>
        </trans-unit>
        <trans-unit id="38176d8bea1521a9f554a0f633b742df8f246e02" translate="yes" xml:space="preserve">
          <source>and there are distribution data available, a call to &lt;code&gt;erlang:dist_ctrl_get_data(DHandle)&lt;/code&gt; will just return &lt;code&gt;Data&lt;/code&gt; to pass over the channel. This is the default value of the &lt;code&gt;get_size&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a936a98ce3d609ad42954bb8c086bde59d5a4702" translate="yes" xml:space="preserve">
          <source>and there are distribution data available, a call to &lt;code&gt;erlang:dist_ctrl_get_data(DHandle)&lt;/code&gt; will return &lt;code&gt;Data&lt;/code&gt; to pass over the channel as well as the &lt;code&gt;Size&lt;/code&gt; of &lt;code&gt;Data&lt;/code&gt; in bytes. This is returned as a tuple on the form &lt;code&gt;{Size, Data}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d0ecfa1634b0abb29975802f12a9ca3ec96e9f2" translate="yes" xml:space="preserve">
          <source>and there is no domain field in metadata. In this case &lt;code&gt;MatchDomain&lt;/code&gt; must be set to &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">y no hay ning&amp;uacute;n campo de dominio en los metadatos. En este caso, &lt;code&gt;MatchDomain&lt;/code&gt; debe establecerse en &lt;code&gt;[]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="15776e659486167076d3cb321fce2312d24fb803" translate="yes" xml:space="preserve">
          <source>and there must be spaces around &lt;code&gt;=&lt;/code&gt;. Macros can be used in the regular expressions of rules by writing &lt;code&gt;{NAME}&lt;/code&gt;.</source>
          <target state="translated">y debe haber espacios alrededor de &lt;code&gt;=&lt;/code&gt; . Las macros se pueden utilizar en las expresiones regulares de las reglas escribiendo &lt;code&gt;{NAME}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4e07a5c56ecbb0097ee8073f245a7172ebf9eb4a" translate="yes" xml:space="preserve">
          <source>and to start</source>
          <target state="translated">y para empezar</target>
        </trans-unit>
        <trans-unit id="36894c0e7fe357f11b9f44b6a70c4ab817c3a65b" translate="yes" xml:space="preserve">
          <source>and you also need to change the PATH environment variable to:</source>
          <target state="translated">y también necesitas cambiar la variable del entorno del PATH a:</target>
        </trans-unit>
        <trans-unit id="0583c76f6d586a1caa19fd0a1d181b2cac619827" translate="yes" xml:space="preserve">
          <source>and you will then be enabled to act as &lt;code&gt;anotheruser&lt;/code&gt; on the &lt;code&gt;host&lt;/code&gt; if authorized correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7914f3693a7b7d05ec42de24054fef2cb7500c57" translate="yes" xml:space="preserve">
          <source>and, of course, also make sure that you place all test code that uses EUnit macros within &lt;code&gt;-ifdef(TEST)&lt;/code&gt; or &lt;code&gt;-ifdef(EUNIT)&lt;/code&gt; sections.</source>
          <target state="translated">y, por supuesto, tambi&amp;eacute;n aseg&amp;uacute;rese de colocar todo el c&amp;oacute;digo de prueba que usa macros &lt;code&gt;-ifdef(TEST)&lt;/code&gt; dentro de las secciones -ifdef (TEST) o &lt;code&gt;-ifdef(EUNIT)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="03437c3d563b9905c8c35ef6b7a9b572fef4c3f9" translate="yes" xml:space="preserve">
          <source>andalso</source>
          <target state="translated">andalso</target>
        </trans-unit>
        <trans-unit id="578f286f6ab178c50892f36a4fad7b4aa9f05750" translate="yes" xml:space="preserve">
          <source>anno_from_term(Term) -&amp;gt; &lt;code&gt;&lt;a href=&quot;#type-erl_parse_tree&quot;&gt;erl_parse_tree()&lt;/a&gt;&lt;/code&gt; | &lt;code&gt;&lt;a href=&quot;#type-form_info&quot;&gt;form_info()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">anno_from_term (T&amp;eacute;rmino) -&amp;gt; &lt;code&gt;&lt;a href=&quot;#type-erl_parse_tree&quot;&gt;erl_parse_tree()&lt;/a&gt;&lt;/code&gt; | &lt;code&gt;&lt;a href=&quot;#type-form_info&quot;&gt;form_info()&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1e73f9bd1a9803a0012fc8a0fbebc486e9c9b3ac" translate="yes" xml:space="preserve">
          <source>anno_to_term(Abstr) -&amp;gt; term()</source>
          <target state="translated">anno_to_term (Abstr) -&amp;gt; t&amp;eacute;rmino ()</target>
        </trans-unit>
        <trans-unit id="dcf2603fa1849a1bef78d3c16a9605d3e547078b" translate="yes" xml:space="preserve">
          <source>annotation (line, column, file) of the definition itself (see &lt;code&gt;erl_anno(3)&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bf5ccacd0597e5f3c305a583bcad3d10de45d0a" translate="yes" xml:space="preserve">
          <source>annotation (line, column, file) of the module documentation or of the definition itself (see &lt;code&gt;erl_anno(3)&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5fe0200d1c7a5139bd18fd22268c4ca8bf45e90" translate="yes" xml:space="preserve">
          <source>any</source>
          <target state="translated">any</target>
        </trans-unit>
        <trans-unit id="d3c3087202737d5c65076dced2ded16358d53b97" translate="yes" xml:space="preserve">
          <source>any | ip4_address()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8105e619777b3d59b78f84b33dbebce9658fbfae" translate="yes" xml:space="preserve">
          <source>any(Pred, List) -&amp;gt; boolean()</source>
          <target state="translated">cualquiera (Pred, Lista) -&amp;gt; booleano ()</target>
        </trans-unit>
        <trans-unit id="7d1043473d55bfa90e8530d35801d4e381bc69f0" translate="yes" xml:space="preserve">
          <source>app</source>
          <target state="translated">app</target>
        </trans-unit>
        <trans-unit id="d10841d2304b7b77bfc6054c2b2dc5bc853ae3c7" translate="yes" xml:space="preserve">
          <source>append(Key, Value, Dict1) -&amp;gt; Dict2</source>
          <target state="translated">a&amp;ntilde;adir (Clave, Valor, Dict1) -&amp;gt; Dict2</target>
        </trans-unit>
        <trans-unit id="d4bf5c0acbaedb45c0da8c81997293d60ada9894" translate="yes" xml:space="preserve">
          <source>append(Key, Value, Orddict1) -&amp;gt; Orddict2</source>
          <target state="translated">a&amp;ntilde;adir (Clave, Valor, Orddict1) -&amp;gt; Orddict2</target>
        </trans-unit>
        <trans-unit id="3c636072995a7d4159ff90be42115a100e5fa0d2" translate="yes" xml:space="preserve">
          <source>append(List1, List2) -&amp;gt; List3</source>
          <target state="translated">a&amp;ntilde;adir (Lista1, Lista2) -&amp;gt; Lista3</target>
        </trans-unit>
        <trans-unit id="a5d4ff25be1367720e036d2617abcdc57bf54ef4" translate="yes" xml:space="preserve">
          <source>append(ListOfLists) -&amp;gt; List1</source>
          <target state="translated">a&amp;ntilde;adir (ListOfLists) -&amp;gt; List1</target>
        </trans-unit>
        <trans-unit id="fb98fd6d9fec894b59b8f6b3bdf27630de51b73b" translate="yes" xml:space="preserve">
          <source>append(QH1, QH2) -&amp;gt; QH3</source>
          <target state="translated">a&amp;ntilde;adir (QH1, QH2) -&amp;gt; QH3</target>
        </trans-unit>
        <trans-unit id="f4d993a4882c620993a920f306787cd3dd59b3f7" translate="yes" xml:space="preserve">
          <source>append(QHL) -&amp;gt; QH</source>
          <target state="translated">a&amp;ntilde;adir (QHL) -&amp;gt; QH</target>
        </trans-unit>
        <trans-unit id="306e64029ba03d7bd23af45df13bc203ebac7691" translate="yes" xml:space="preserve">
          <source>append_cipher_suites(Deferred, Suites) -&amp;gt; &lt;code&gt;&lt;a href=&quot;#type-ciphers&quot;&gt;ciphers()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b475dbe1473e86886a8b4cdfe418e8b3ea7b5f7" translate="yes" xml:space="preserve">
          <source>append_list(Key, ValList, Dict1) -&amp;gt; Dict2</source>
          <target state="translated">append_list (Key, ValList, Dict1) -&amp;gt; Dict2</target>
        </trans-unit>
        <trans-unit id="b2d2d6942e878222f08a719555bc70b55954dc11" translate="yes" xml:space="preserve">
          <source>append_list(Key, ValList, Orddict1) -&amp;gt; Orddict2</source>
          <target state="translated">append_list (Clave, ValList, Orddict1) -&amp;gt; Orddict2</target>
        </trans-unit>
        <trans-unit id="2d10c6ee0dd4778c117e8c3682c178d579bd4a18" translate="yes" xml:space="preserve">
          <source>append_values(Key, ListIn) -&amp;gt; ListOut</source>
          <target state="translated">append_values ​​(clave, ListIn) -&amp;gt; ListOut</target>
        </trans-unit>
        <trans-unit id="d2005cc206ccbfdedf2be43a200cb050c538bdb5" translate="yes" xml:space="preserve">
          <source>application</source>
          <target state="translated">application</target>
        </trans-unit>
        <trans-unit id="568860282a1ec842e1ac6d1d30363015f3f2dde7" translate="yes" xml:space="preserve">
          <source>application annotated_type arity_qualifier atom</source>
          <target state="translated">aplicación tipo_anotado átomo arity_calificador</target>
        </trans-unit>
        <trans-unit id="e09c0b047ec9f03371761cfa2116513da6c02e78" translate="yes" xml:space="preserve">
          <source>application_layer_protocol_negotiation (RFC7301)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94bcf079d519ab82bde424304d65dc9eac201078" translate="yes" xml:space="preserve">
          <source>apply (Low-Level)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e1d067557b1043c2184a711f7cff2957fb839ce" translate="yes" xml:space="preserve">
          <source>apply(Fun, Args) -&amp;gt; term()</source>
          <target state="translated">aplicar (Diversi&amp;oacute;n, Args) -&amp;gt; t&amp;eacute;rmino ()</target>
        </trans-unit>
        <trans-unit id="5f87db34c6505c677d6c49a06f49220e952a09e1" translate="yes" xml:space="preserve">
          <source>apply(Module, Function, Args) -&amp;gt; term()</source>
          <target state="translated">aplicar (M&amp;oacute;dulo, Funci&amp;oacute;n, Args) -&amp;gt; t&amp;eacute;rmino ()</target>
        </trans-unit>
        <trans-unit id="8b33142aa22a9284aef7e9d7ff3d6aa1896b4cd0" translate="yes" xml:space="preserve">
          <source>apply_after(Time, Module, Function, Arguments) -&amp;gt;</source>
          <target state="translated">apply_after (Tiempo, M&amp;oacute;dulo, Funci&amp;oacute;n, Argumentos) -&amp;gt;</target>
        </trans-unit>
        <trans-unit id="84107d7bb57b203ad953502281b775aef3287b48" translate="yes" xml:space="preserve">
          <source>apply_interval(Time, Module, Function, Arguments) -&amp;gt;</source>
          <target state="translated">apply_interval (Tiempo, M&amp;oacute;dulo, Funci&amp;oacute;n, Argumentos) -&amp;gt;</target>
        </trans-unit>
        <trans-unit id="54ef3c30ac7fb5592b321d71bbdff18ad945f17f" translate="yes" xml:space="preserve">
          <source>appup</source>
          <target state="translated">appup</target>
        </trans-unit>
        <trans-unit id="a59a884da53ce55811a96b077fc680a4cecbca66" translate="yes" xml:space="preserve">
          <source>apread(ChannelPid, Handle, Position, Len) -&amp;gt; {async, N} | Error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a53c7e1e5b0d21ba3edb7c3ee147584e8e78ba1" translate="yes" xml:space="preserve">
          <source>apwrite(ChannelPid, Handle, Position, Data) -&amp;gt; {async, N} | Error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4697dcb9422d15abf18c225a945de46886104261" translate="yes" xml:space="preserve">
          <source>arborescence_root(Digraph) -&amp;gt; no | {yes, Root}</source>
          <target state="translated">ra&amp;iacute;z_arborescencia (Digraph) -&amp;gt; no | {s&amp;iacute;, ra&amp;iacute;z}</target>
        </trans-unit>
        <trans-unit id="7149ccc6432e2feca86746f74b4fac20df9985a8" translate="yes" xml:space="preserve">
          <source>are allowed. The excluded options are reserved by the SSH application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="148d769f60a28b7c3e7aedfd032e9fc21c66cd73" translate="yes" xml:space="preserve">
          <source>aread(ChannelPid, Handle, Len) -&amp;gt; {async, N} | Error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59ddf6722b9f0593289a296b4a403eb6c0b2a0ad" translate="yes" xml:space="preserve">
          <source>arith_op(OpName, Arity) -&amp;gt; boolean()</source>
          <target state="translated">arith_op (OpName, Arity) -&amp;gt; boolean ()</target>
        </trans-unit>
        <trans-unit id="19edc1210777ba4d45049c29280d9cc5e1064c25" translate="yes" xml:space="preserve">
          <source>array</source>
          <target state="translated">array</target>
        </trans-unit>
        <trans-unit id="6fbd33b2aeb593002556cd75a61bc45f654e10b3" translate="yes" xml:space="preserve">
          <source>as returned by &lt;code&gt;&lt;a href=&quot;#init-1&quot;&gt;init/1&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">como lo devuelve &lt;code&gt;&lt;a href=&quot;#init-1&quot;&gt;init/1&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="042c62668e9a4ead6d9afb4138f6b2a8b3735800" translate="yes" xml:space="preserve">
          <source>as the matching of the &quot;g&quot; in the end of the string leaves an empty rest, which is also returned. This behavior differs from the default behavior of the split function in Perl, where empty strings at the end are by default removed. To get the &quot;trimming&quot; default behavior of Perl, specify &lt;code&gt;trim&lt;/code&gt; as an option:</source>
          <target state="translated">ya que la coincidencia de la &quot;g&quot; al final de la cadena deja un descanso vac&amp;iacute;o, que tambi&amp;eacute;n se devuelve. Este comportamiento difiere del comportamiento predeterminado de la funci&amp;oacute;n de divisi&amp;oacute;n en Perl, donde las cadenas vac&amp;iacute;as al final se eliminan por defecto. Para obtener el comportamiento predeterminado de &quot;recorte&quot; de Perl, especifique &lt;code&gt;trim&lt;/code&gt; como una opci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="73688580af35401988ca63c730bbff475def44d3" translate="yes" xml:space="preserve">
          <source>as:</source>
          <target state="translated">as:</target>
        </trans-unit>
        <trans-unit id="e29e01a495de2aa0eeaf07aabfce1c8aadd72b63" translate="yes" xml:space="preserve">
          <source>asin(X) -&amp;gt; float()</source>
          <target state="translated">asin (X) -&amp;gt; flotar ()</target>
        </trans-unit>
        <trans-unit id="81f51029f05bb19fa09635d29fc8e04062fc5a1a" translate="yes" xml:space="preserve">
          <source>asinh(X) -&amp;gt; float()</source>
          <target state="translated">asinh (X) -&amp;gt; flotar ()</target>
        </trans-unit>
        <trans-unit id="9edf4240018976bf964cf31c1a24d34fde8d517d" translate="yes" xml:space="preserve">
          <source>asn1</source>
          <target state="translated">asn1</target>
        </trans-unit>
        <trans-unit id="a5c623fea2ecc95d7d78e4a2f7b1a6636e9e9561" translate="yes" xml:space="preserve">
          <source>asn1ct</source>
          <target state="translated">asn1ct</target>
        </trans-unit>
        <trans-unit id="77b583668f59664395679b42c2fc85de4fdce9bf" translate="yes" xml:space="preserve">
          <source>assigns the same value to &lt;code&gt;Y&lt;/code&gt; as this:</source>
          <target state="translated">asigna el mismo valor a &lt;code&gt;Y&lt;/code&gt; como este:</target>
        </trans-unit>
        <trans-unit id="38f344fad19df89790d8a548dab4cddfc73ab329" translate="yes" xml:space="preserve">
          <source>assigns the same value to &lt;code&gt;Z&lt;/code&gt; as this:</source>
          <target state="translated">asigna el mismo valor a &lt;code&gt;Z&lt;/code&gt; como este:</target>
        </trans-unit>
        <trans-unit id="018afe074e56176c9117b36af45b43e8981f884c" translate="yes" xml:space="preserve">
          <source>assoc_id</source>
          <target state="translated">assoc_id</target>
        </trans-unit>
        <trans-unit id="47e5f33fccc6c754fdfcb264aa4228fb7ead8892" translate="yes" xml:space="preserve">
          <source>associnfo</source>
          <target state="translated">associnfo</target>
        </trans-unit>
        <trans-unit id="69bfbbcd78b5bc5db0e0a7dcccaa794f9a824e51" translate="yes" xml:space="preserve">
          <source>async_call(Node, Module, Function, Args) -&amp;gt; Key</source>
          <target state="translated">async_call (nodo, m&amp;oacute;dulo, funci&amp;oacute;n, argumentos) -&amp;gt; clave</target>
        </trans-unit>
        <trans-unit id="83927be5c67c43eb5ce76d7f88c6f3f9f09e3310" translate="yes" xml:space="preserve">
          <source>async_dirty(Fun) -&amp;gt; Res | no_return()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67ad99da34b2d9d5c81765361f0bd0aa897c803d" translate="yes" xml:space="preserve">
          <source>async_dirty(Fun, Args :: [Arg :: term()]) -&amp;gt; Res | no_return()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d752f2c5e9504352a8b5051da82d8c592e4d092" translate="yes" xml:space="preserve">
          <source>asynchronous</source>
          <target state="translated">asynchronous</target>
        </trans-unit>
        <trans-unit id="9e04f49c91b068f23107ab4ee13991d045937efc" translate="yes" xml:space="preserve">
          <source>at(Subject, Pos) -&amp;gt; byte()</source>
          <target state="translated">en (Asunto, Pos) -&amp;gt; byte ()</target>
        </trans-unit>
        <trans-unit id="af47c5430e2e70631a4fcd2e5be37991ecd7370a" translate="yes" xml:space="preserve">
          <source>atan(X) -&amp;gt; float()</source>
          <target state="translated">atan (X) -&amp;gt; flotar ()</target>
        </trans-unit>
        <trans-unit id="627c8fbaf02f5b457b741f6eebefcaf928e54a19" translate="yes" xml:space="preserve">
          <source>atan2(Y, X) -&amp;gt; float()</source>
          <target state="translated">atan2 (Y, X) -&amp;gt; flotar ()</target>
        </trans-unit>
        <trans-unit id="b813663879e58121083ad2009d43be9680e58057" translate="yes" xml:space="preserve">
          <source>atanh(X) -&amp;gt; float()</source>
          <target state="translated">atanh (X) -&amp;gt; flotar ()</target>
        </trans-unit>
        <trans-unit id="b533f9b6169adbf1593cf5aab33d4ec513ccbaad" translate="yes" xml:space="preserve">
          <source>atom_to_binary(Atom) -&amp;gt; binary()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc158557e832bb320df845e44ae97cb1e13dab94" translate="yes" xml:space="preserve">
          <source>atom_to_binary(Atom, Encoding) -&amp;gt; binary()</source>
          <target state="translated">atom_to_binary (&amp;Aacute;tomo, Codificaci&amp;oacute;n) -&amp;gt; binario ()</target>
        </trans-unit>
        <trans-unit id="bbebd8f662d346e33af0898064b3c45a418d6fa4" translate="yes" xml:space="preserve">
          <source>atom_to_list(Atom) -&amp;gt; string()</source>
          <target state="translated">atom_to_list (Atom) -&amp;gt; cadena ()</target>
        </trans-unit>
        <trans-unit id="8c997ae8c22f818e9d99a82e3f4ed9c818b5921c" translate="yes" xml:space="preserve">
          <source>atomic_load(Modules) -&amp;gt; ok | {error, [{Module, What}]}</source>
          <target state="translated">atomic_load (m&amp;oacute;dulos) -&amp;gt; ok | {error, [{M&amp;oacute;dulo, Qu&amp;eacute;}]}</target>
        </trans-unit>
        <trans-unit id="861ac22b11c57873665b459381b2b3f19d97cfbf" translate="yes" xml:space="preserve">
          <source>atomics</source>
          <target state="translated">atomics</target>
        </trans-unit>
        <trans-unit id="2ad7021968425c3d482967ef78871505f0fde340" translate="yes" xml:space="preserve">
          <source>attach(Node) -&amp;gt; already_attached | attached</source>
          <target state="translated">adjuntar (nodo) -&amp;gt; already_attached | adjunto</target>
        </trans-unit>
        <trans-unit id="7440b3eb7a1c9fda6e0f30aee46bcd5756f9fbf3" translate="yes" xml:space="preserve">
          <source>attribute binary binary_field bitstring_type</source>
          <target state="translated">atributo binario campo_binario tipo_de_bitstring</target>
        </trans-unit>
        <trans-unit id="5269fe7c8b5a323cdee23ea6d236f5dde4c5ade6" translate="yes" xml:space="preserve">
          <source>attribute(Attribute) -&amp;gt; &lt;code&gt;&lt;a href=&quot;io_lib#type-chars&quot;&gt;io_lib:chars()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">atributo (atributo) -&amp;gt; &lt;code&gt;&lt;a href=&quot;io_lib#type-chars&quot;&gt;io_lib:chars()&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a6ecd3f6f4e23adddd9500ef8ac9b9ce0b603262" translate="yes" xml:space="preserve">
          <source>attribute(Attribute, Options) -&amp;gt; &lt;code&gt;&lt;a href=&quot;io_lib#type-chars&quot;&gt;io_lib:chars()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">atributo (atributo, opciones) -&amp;gt; &lt;code&gt;&lt;a href=&quot;io_lib#type-chars&quot;&gt;io_lib:chars()&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="66a36e77fd002579809717841f998f4d21cd5913" translate="yes" xml:space="preserve">
          <source>auth</source>
          <target state="translated">auth</target>
        </trans-unit>
        <trans-unit id="176939638191d5a13935ccb90c0c8a70a5e30773" translate="yes" xml:space="preserve">
          <source>authentication</source>
          <target state="translated">authentication</target>
        </trans-unit>
        <trans-unit id="daccac6cac31981df79751e8f2cf3d38572c1338" translate="yes" xml:space="preserve">
          <source>authhdr</source>
          <target state="translated">authhdr</target>
        </trans-unit>
        <trans-unit id="42af05e91202a195467c94aeb40d78cdd942fd66" translate="yes" xml:space="preserve">
          <source>autoclose</source>
          <target state="translated">autoclose</target>
        </trans-unit>
        <trans-unit id="afcbbc0446e4d73184b39582e4989b409070433a" translate="yes" xml:space="preserve">
          <source>available() -&amp;gt; boolean()</source>
          <target state="translated">disponible () -&amp;gt; booleano ()</target>
        </trans-unit>
        <trans-unit id="47901e7016545fc6e1973a49ed6a6275dca51719" translate="yes" xml:space="preserve">
          <source>awrite(ChannelPid, Handle, Data) -&amp;gt; {async, N} | Error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffc9cf4a5730ce9c7e62a4d2b0856556ff03e405" translate="yes" xml:space="preserve">
          <source>backup(Dest :: term()) -&amp;gt; &lt;code&gt;&lt;a href=&quot;#type-result&quot;&gt;result()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30daedec21c8ddd6cd07786000ae16156ce5307b" translate="yes" xml:space="preserve">
          <source>backup(Dest :: term(), Mod :: module()) -&amp;gt; &lt;code&gt;&lt;a href=&quot;#type-result&quot;&gt;result()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="256bf4eb37ed5d4f394ff55aa8e35f92c91fc449" translate="yes" xml:space="preserve">
          <source>backup_checkpoint(Name, Dest) -&amp;gt; &lt;code&gt;&lt;a href=&quot;#type-result&quot;&gt;result()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4abf0556c0e6b222b81ca5eb2f91b6d31c7f5845" translate="yes" xml:space="preserve">
          <source>backup_checkpoint(Name, Dest, Mod) -&amp;gt; &lt;code&gt;&lt;a href=&quot;#type-result&quot;&gt;result()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a56424474f8507b071c1802db5350b0d3930468" translate="yes" xml:space="preserve">
          <source>badValue</source>
          <target state="translated">badValue</target>
        </trans-unit>
        <trans-unit id="5fe93e4c0bcf90e54bcfd5dabd72f342eb374b22" translate="yes" xml:space="preserve">
          <source>balance(Set1) -&amp;gt; Set2</source>
          <target state="translated">equilibrio (Set1) -&amp;gt; Set2</target>
        </trans-unit>
        <trans-unit id="40831ed7e9e91cfff9b51a88adb7295f83bbf5df" translate="yes" xml:space="preserve">
          <source>balance(Tree1) -&amp;gt; Tree2</source>
          <target state="translated">balance (&amp;Aacute;rbol1) -&amp;gt; &amp;Aacute;rbol2</target>
        </trans-unit>
        <trans-unit id="40d92c6dc271a0615a75fb1dab3afa49f45a6835" translate="yes" xml:space="preserve">
          <source>balog(Log, Bytes) -&amp;gt; notify_ret()</source>
          <target state="translated">balog (Registro, Bytes) -&amp;gt; notificar_ret ()</target>
        </trans-unit>
        <trans-unit id="c46b99f318b76b18c90d1b2e4136a70ea3a3eb6e" translate="yes" xml:space="preserve">
          <source>balog_terms(Log, ByteList) -&amp;gt; notify_ret()</source>
          <target state="translated">balog_terms (Registro, ByteList) -&amp;gt; notificar_ret ()</target>
        </trans-unit>
        <trans-unit id="2502deb44ba556abc83784f27250dcd7bbaebc0f" translate="yes" xml:space="preserve">
          <source>band</source>
          <target state="translated">band</target>
        </trans-unit>
        <trans-unit id="8095e159699116466e36cbafd09e1d845f29f2b9" translate="yes" xml:space="preserve">
          <source>base64</source>
          <target state="translated">base64</target>
        </trans-unit>
        <trans-unit id="06c7013cf18756efa04fcac1f4022cf696808887" translate="yes" xml:space="preserve">
          <source>basedir(PathType, Application) -&amp;gt; &lt;code&gt;file:filename_all()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b14f582f346c0be0f23b75b110d936cb221f1e0" translate="yes" xml:space="preserve">
          <source>basedir(PathType, Application, Opts) -&amp;gt; &lt;code&gt;file:filename_all()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8834c1f8d049527de69cb98f4b21aec32711da3" translate="yes" xml:space="preserve">
          <source>basedir(PathsType, Application) -&amp;gt; [&lt;code&gt;file:filename_all()&lt;/code&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6046cd24f587f3baa570b71089d3af207e262ad8" translate="yes" xml:space="preserve">
          <source>basedir(PathsType, Application, Opts) -&amp;gt; [&lt;code&gt;file:filename_all()&lt;/code&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f59b6d8e4a0093e2cc2e3169190857078f78275" translate="yes" xml:space="preserve">
          <source>basedir(Type, Application) -&amp;gt; &lt;code&gt;file:filename_all()&lt;/code&gt;</source>
          <target state="translated">basedir (Tipo, Aplicaci&amp;oacute;n) -&amp;gt; &lt;code&gt;file:filename_all()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5467c698883b77a34b1a469f2866b11d034710d0" translate="yes" xml:space="preserve">
          <source>basedir(Type, Application, Opts) -&amp;gt; &lt;code&gt;file:filename_all()&lt;/code&gt;</source>
          <target state="translated">basedir (Tipo, Aplicaci&amp;oacute;n, Opciones) -&amp;gt; &lt;code&gt;file:filename_all()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e9aec39dfd77cd2f941d4b5b26ad4abdf2d7e4aa" translate="yes" xml:space="preserve">
          <source>basename(Filename) -&amp;gt; &lt;code&gt;file:filename_all()&lt;/code&gt;</source>
          <target state="translated">nombre base (nombre de archivo) -&amp;gt; &lt;code&gt;file:filename_all()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d8297d7a9e0184bdf9d54df4b0623f8178dacee9" translate="yes" xml:space="preserve">
          <source>basename(Filename, Ext) -&amp;gt; &lt;code&gt;file:filename_all()&lt;/code&gt;</source>
          <target state="translated">nombre de base (nombre de archivo, extensi&amp;oacute;n) -&amp;gt; &lt;code&gt;file:filename_all()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2612c1d59e605c4aa626bc1ddc2ae7fb66f425f0" translate="yes" xml:space="preserve">
          <source>basic fault handling such as automatic type checking</source>
          <target state="translated">manejo básico de fallas como la verificación automática de tipo</target>
        </trans-unit>
        <trans-unit id="5f5262763f739e7bfcc5b1bd3fdcd890d49574fc" translate="yes" xml:space="preserve">
          <source>bchunk(Log, Continuation) -&amp;gt; bchunk_ret()</source>
          <target state="translated">bchunk (Registro, continuaci&amp;oacute;n) -&amp;gt; bchunk_ret ​​()</target>
        </trans-unit>
        <trans-unit id="e8f3ed1099245011c6ea627ef845b263b03472cf" translate="yes" xml:space="preserve">
          <source>bchunk(Log, Continuation, N) -&amp;gt; bchunk_ret()</source>
          <target state="translated">bchunk (Registro, Continuaci&amp;oacute;n, N) -&amp;gt; bchunk_ret ​​()</target>
        </trans-unit>
        <trans-unit id="bc974bf63d12f7fcc03212f1d3d2ec9c988b172a" translate="yes" xml:space="preserve">
          <source>bchunk(Name, Continuation) -&amp;gt;</source>
          <target state="translated">bchunk (Nombre, continuaci&amp;oacute;n) -&amp;gt;</target>
        </trans-unit>
        <trans-unit id="3ff4b3fd0691edb860205b22fe37e8aa7903df87" translate="yes" xml:space="preserve">
          <source>be done from a &lt;code&gt;&lt;a href=&quot;#State%20Enter%20Calls&quot;&gt;&lt;strong&gt;state enter call&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4734d549608ed1ca5e62d0e0862b919df8d2b13" translate="yes" xml:space="preserve">
          <source>be other use cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5df635d31ba2bae170199b7b33e263c28d0828b" translate="yes" xml:space="preserve">
          <source>beam_lib</source>
          <target state="translated">beam_lib</target>
        </trans-unit>
        <trans-unit id="d807d11fc0d203e592513df0c4f1b29e4ac463e1" translate="yes" xml:space="preserve">
          <source>becomes in Erlang:</source>
          <target state="translated">se convierte en Erlang:</target>
        </trans-unit>
        <trans-unit id="c02ceb78ff4863ee1a75d232c4f53af56b182ec9" translate="yes" xml:space="preserve">
          <source>becomes:</source>
          <target state="translated">becomes:</target>
        </trans-unit>
        <trans-unit id="ec8e1bfca20254f40e0b998bd8e5fce69f2d9e39" translate="yes" xml:space="preserve">
          <source>below in the text. &lt;code&gt;ReplyTag&lt;/code&gt; is by default the atom &lt;code&gt;spawn_reply&lt;/code&gt; unless modified by the &lt;code&gt;{reply_tag, ReplyTag}&lt;/code&gt; option. The new process is started by the application of &lt;code&gt;Module:Function&lt;/code&gt; to &lt;code&gt;Args&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e98d3ff7b2bd4d8b1b19cd009769f9fba8a09d6f" translate="yes" xml:space="preserve">
          <source>below in the text. Currently the following spawn error &lt;code&gt;Reason&lt;/code&gt;s are defined, but other reasons can appear at any time without prior notice:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37b477d71d4dff4e8be0781e55a37b73e266f5c2" translate="yes" xml:space="preserve">
          <source>ber bin</source>
          <target state="translated">ber bin</target>
        </trans-unit>
        <trans-unit id="930b7c14f9c78481b6564d4b76ba739e01d1f5e3" translate="yes" xml:space="preserve">
          <source>ber bin [driver,native]</source>
          <target state="translated">ber bin [conductor,nativo]</target>
        </trans-unit>
        <trans-unit id="e7e01863fb1068bce6b288e6a46af7d12f323b0c" translate="yes" xml:space="preserve">
          <source>ber bin [driver]</source>
          <target state="translated">ber bin [conductor]</target>
        </trans-unit>
        <trans-unit id="cc37ba75621c9f315651e9c54a653563d92c9691" translate="yes" xml:space="preserve">
          <source>ber bin [native]</source>
          <target state="translated">ber bin [nativo]</target>
        </trans-unit>
        <trans-unit id="45a432b22b94f4a73c79ea415b91f5719888570e" translate="yes" xml:space="preserve">
          <source>bif(Name, Arity) -&amp;gt; boolean()</source>
          <target state="translated">bif (Nombre, Arity) -&amp;gt; boolean ()</target>
        </trans-unit>
        <trans-unit id="bbe359e237c1d61a5cef555d759fea80f99d7ef1" translate="yes" xml:space="preserve">
          <source>bin_to_list(Subject) -&amp;gt; [byte()]</source>
          <target state="translated">bin_to_list (Asunto) -&amp;gt; [byte ()]</target>
        </trans-unit>
        <trans-unit id="ddc11d9360688d7adda17dd499f2081340817864" translate="yes" xml:space="preserve">
          <source>bin_to_list(Subject, Pos, Len) -&amp;gt; [byte()]</source>
          <target state="translated">bin_to_list (Asunto, Pos, Len) -&amp;gt; [byte ()]</target>
        </trans-unit>
        <trans-unit id="26a4ec73f8515351e70b298ca1df987ef296e90c" translate="yes" xml:space="preserve">
          <source>bin_to_list(Subject, PosLen) -&amp;gt; [byte()]</source>
          <target state="translated">bin_to_list (Asunto, PosLen) -&amp;gt; [byte ()]</target>
        </trans-unit>
        <trans-unit id="7e57cfe843145135aee1f4d0d63ceb7842093712" translate="yes" xml:space="preserve">
          <source>binary</source>
          <target state="translated">binary</target>
        </trans-unit>
        <trans-unit id="28fefc91569d50d80f7ac7a9ec9d92c0a10cd6b4" translate="yes" xml:space="preserve">
          <source>binary() | &lt;code&gt;&lt;a href=&quot;#type-run_time_error&quot;&gt;run_time_error()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3883335929a74767b5c892d136b104945ab0a00" translate="yes" xml:space="preserve">
          <source>binary_part(Subject, PosLen) -&amp;gt; binary()</source>
          <target state="translated">binary_part (Asunto, PosLen) -&amp;gt; binary ()</target>
        </trans-unit>
        <trans-unit id="daf1972817b954b7d4f843e8f1e167f58b772861" translate="yes" xml:space="preserve">
          <source>binary_part(Subject, Start, Length) -&amp;gt; binary()</source>
          <target state="translated">binary_part (Asunto, Inicio, Longitud) -&amp;gt; binary ()</target>
        </trans-unit>
        <trans-unit id="ac2f600af3fb533ee5b0c79c23ce08f92bec48cb" translate="yes" xml:space="preserve">
          <source>binary_to_atom(Binary) -&amp;gt; atom()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d32f1e77007bf94b60332fe66d737afa28eac134" translate="yes" xml:space="preserve">
          <source>binary_to_atom(Binary, Encoding) -&amp;gt; atom()</source>
          <target state="translated">binary_to_atom (binario, codificaci&amp;oacute;n) -&amp;gt; atom ()</target>
        </trans-unit>
        <trans-unit id="dd640f95f09fd608ce6b05b40cd39e7b92dce3ae" translate="yes" xml:space="preserve">
          <source>binary_to_existing_atom(Binary) -&amp;gt; atom()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e84c827133b25fa86f287f81660f3e670345043b" translate="yes" xml:space="preserve">
          <source>binary_to_existing_atom(Binary, Encoding) -&amp;gt; atom()</source>
          <target state="translated">binary_to_existing_atom (Binario, Codificaci&amp;oacute;n) -&amp;gt; atom ()</target>
        </trans-unit>
        <trans-unit id="a5b3332c1669fab5819cf0e32147078f0ebc007e" translate="yes" xml:space="preserve">
          <source>binary_to_float(Binary) -&amp;gt; float()</source>
          <target state="translated">binary_to_float (Binario) -&amp;gt; flotar ()</target>
        </trans-unit>
        <trans-unit id="791f8901cafcc176519a514a6cba4dcc8267825f" translate="yes" xml:space="preserve">
          <source>binary_to_integer(Binary) -&amp;gt; integer()</source>
          <target state="translated">binary_to_integer (Binario) -&amp;gt; entero ()</target>
        </trans-unit>
        <trans-unit id="1467eef026591937d74ea6b19564fce34d19044e" translate="yes" xml:space="preserve">
          <source>binary_to_integer(Binary, Base) -&amp;gt; integer()</source>
          <target state="translated">binary_to_integer (Binario, Base) -&amp;gt; integer ()</target>
        </trans-unit>
        <trans-unit id="aa0d55a1a4d394c99be7d7a0634585e2d0e3a5c8" translate="yes" xml:space="preserve">
          <source>binary_to_list(Binary) -&amp;gt; [byte()]</source>
          <target state="translated">binary_to_list (Binario) -&amp;gt; [byte ()]</target>
        </trans-unit>
        <trans-unit id="074eb30a31005d6a4ebfa39a1586c91bb7277c66" translate="yes" xml:space="preserve">
          <source>binary_to_list(Binary, Start, Stop) -&amp;gt; [byte()]</source>
          <target state="translated">binary_to_list (Binary, Start, Stop) -&amp;gt; [byte ()]</target>
        </trans-unit>
        <trans-unit id="80e55f7d3cfd11d0e212f14b573ceef6f66e6738" translate="yes" xml:space="preserve">
          <source>binary_to_term(Binary) -&amp;gt; term()</source>
          <target state="translated">binary_to_term (Binario) -&amp;gt; t&amp;eacute;rmino ()</target>
        </trans-unit>
        <trans-unit id="2b795103f453e979aac26647d5cc073756bfe26b" translate="yes" xml:space="preserve">
          <source>binary_to_term(Binary, Opts) -&amp;gt; term() | {term(), Used}</source>
          <target state="translated">binary_to_term (Binario, Opciones) -&amp;gt; t&amp;eacute;rmino () | {t&amp;eacute;rmino (), usado}</target>
        </trans-unit>
        <trans-unit id="3e7647a1151e15bf533b34a6eb39620a996b4291" translate="yes" xml:space="preserve">
          <source>bind(Socket, Addr) -&amp;gt; {ok, Port} | {error, Reason}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e2e1571fd12a310ac375837b974d3a3fc53116c" translate="yes" xml:space="preserve">
          <source>binding(Name, BindingStruct) -&amp;gt; {value, &lt;code&gt;&lt;a href=&quot;#type-value&quot;&gt;value()&lt;/a&gt;&lt;/code&gt;} | unbound</source>
          <target state="translated">vinculante (Nombre, BindingStruct) -&amp;gt; {valor, &lt;code&gt;&lt;a href=&quot;#type-value&quot;&gt;value()&lt;/a&gt;&lt;/code&gt; } | desatado</target>
        </trans-unit>
        <trans-unit id="f6c04cbc8640694d31904425a2b68a98465a3b8e" translate="yes" xml:space="preserve">
          <source>bindings(BindingStruct :: &lt;code&gt;&lt;a href=&quot;#type-binding_struct&quot;&gt;binding_struct()&lt;/a&gt;&lt;/code&gt;) -&amp;gt; &lt;code&gt;&lt;a href=&quot;#type-bindings&quot;&gt;bindings()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">enlaces (BindingStruct :: &lt;code&gt;&lt;a href=&quot;#type-binding_struct&quot;&gt;binding_struct()&lt;/a&gt;&lt;/code&gt; ) -&amp;gt; &lt;code&gt;&lt;a href=&quot;#type-bindings&quot;&gt;bindings()&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="daef32408d3e7f4c316feee6add59c0bc9148345" translate="yes" xml:space="preserve">
          <source>bindtodevice</source>
          <target state="translated">bindtodevice</target>
        </trans-unit>
        <trans-unit id="0203ff37fd8649acbb74b5d65f549140be91dc63" translate="yes" xml:space="preserve">
          <source>bit_size(Bitstring) -&amp;gt; integer() &amp;gt;= 0</source>
          <target state="translated">tama&amp;ntilde;o_bit (cadena de bits) -&amp;gt; entero ()&amp;gt; = 0</target>
        </trans-unit>
        <trans-unit id="d837d332e8e1beb2cd16e8f3531304c0d159e914" translate="yes" xml:space="preserve">
          <source>bitstring_to_list(Bitstring) -&amp;gt; [byte() | bitstring()]</source>
          <target state="translated">bitstring_to_list (Bitstring) -&amp;gt; [byte () | bitstring ()]</target>
        </trans-unit>
        <trans-unit id="d3b2a5d7c98ea683b103e280654c42c14fba7a51" translate="yes" xml:space="preserve">
          <source>block(Log) -&amp;gt; ok | {error, block_error_rsn()}</source>
          <target state="translated">bloquear (Registro) -&amp;gt; ok | {error, block_error_rsn ()}</target>
        </trans-unit>
        <trans-unit id="6cb88986b71a24912415b57a409d5ea17be1e56e" translate="yes" xml:space="preserve">
          <source>block(Log, QueueLogRecords) -&amp;gt; ok | {error, block_error_rsn()}</source>
          <target state="translated">block (Log, QueueLogRecords) -&amp;gt; ok | {error, block_error_rsn ()}</target>
        </trans-unit>
        <trans-unit id="8c8fd5e53c9f8727669d6100d4f208bce4d30494" translate="yes" xml:space="preserve">
          <source>block_call(Node, Module, Function, Args) -&amp;gt; Res | {badrpc, Reason}</source>
          <target state="translated">block_call (Nodo, M&amp;oacute;dulo, Funci&amp;oacute;n, Args) -&amp;gt; Res | {badrpc, Reason}</target>
        </trans-unit>
        <trans-unit id="b23f2e95b93674d1dfc2e3ac44aed2b88cfdbb90" translate="yes" xml:space="preserve">
          <source>block_call(Node, Module, Function, Args, Timeout) -&amp;gt;</source>
          <target state="translated">block_call (nodo, m&amp;oacute;dulo, funci&amp;oacute;n, argumentos, tiempo de espera) -&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5b4863e511d4453a6af6c4f7f0a7c66f82a6f4bc" translate="yes" xml:space="preserve">
          <source>block_decrypt(Type :: &lt;code&gt;&lt;a href=&quot;#type-block_cipher_without_iv&quot;&gt;block_cipher_without_iv()&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9e8b1d83b84d8457dda43f5b1fa189ec597d56b" translate="yes" xml:space="preserve">
          <source>block_encrypt(Type :: &lt;code&gt;&lt;a href=&quot;#type-block_cipher_without_iv&quot;&gt;block_cipher_without_iv()&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd3fb95e2e8de8d56289b202407712ce7b08d0a7" translate="yes" xml:space="preserve">
          <source>block_expr case_expr catch_expr char</source>
          <target state="translated">block_expr case_expr catch_expr char</target>
        </trans-unit>
        <trans-unit id="39104fe2dad17575870255a712a7043102e349e8" translate="yes" xml:space="preserve">
          <source>block_source</source>
          <target state="translated">block_source</target>
        </trans-unit>
        <trans-unit id="4afc334809efe11398470686b7036f8e78933955" translate="yes" xml:space="preserve">
          <source>blocked |</source>
          <target state="translated">bloqueado...</target>
        </trans-unit>
        <trans-unit id="1a397ad31897e50ea475b6705de127fbb370da75" translate="yes" xml:space="preserve">
          <source>blocked_normal |</source>
          <target state="translated">bloqueado_normal |</target>
        </trans-unit>
        <trans-unit id="3beee47ea2b078cd59c4c5ce4b9190eb9146b4f9" translate="yes" xml:space="preserve">
          <source>blog(Log, Bytes) -&amp;gt; ok | {error, Reason :: log_error_rsn()}</source>
          <target state="translated">blog (Registro, Bytes) -&amp;gt; ok | {error, motivo :: log_error_rsn ()}</target>
        </trans-unit>
        <trans-unit id="fd89d388c12a39eefed7b264ab6c94451497daf4" translate="yes" xml:space="preserve">
          <source>blog_terms(Log, BytesList) -&amp;gt;</source>
          <target state="translated">blog_terms (Registro, BytesList) -&amp;gt;</target>
        </trans-unit>
        <trans-unit id="73007bbd46f4537b551caebd6b8b9edad123d036" translate="yes" xml:space="preserve">
          <source>bnot</source>
          <target state="translated">bnot</target>
        </trans-unit>
        <trans-unit id="51b5e482911bb6268c2e8441668f0475ddf3a241" translate="yes" xml:space="preserve">
          <source>bom_to_encoding(Bin) -&amp;gt; {Encoding, Length}</source>
          <target state="translated">bom_to_encoding (Bin) -&amp;gt; {Encoding, Length}</target>
        </trans-unit>
        <trans-unit id="48f21c15b1a3ef3e80d90f4547b15acb2b2278c5" translate="yes" xml:space="preserve">
          <source>bool_op(OpName, Arity) -&amp;gt; boolean()</source>
          <target state="translated">bool_op (OpName, Arity) -&amp;gt; boolean ()</target>
        </trans-unit>
        <trans-unit id="9424b2cb7838f8e03100e5d1f08259651bbc4380" translate="yes" xml:space="preserve">
          <source>boolean()</source>
          <target state="translated">boolean()</target>
        </trans-unit>
        <trans-unit id="4c588bef1112cdcd9df76232b803718e01380b3c" translate="yes" xml:space="preserve">
          <source>boot(BootArgs) -&amp;gt; no_return()</source>
          <target state="translated">arranque (BootArgs) -&amp;gt; no_return ()</target>
        </trans-unit>
        <trans-unit id="52bb0a7e3d33a423ae04f237f2810d90b2958d74" translate="yes" xml:space="preserve">
          <source>bor</source>
          <target state="translated">bor</target>
        </trans-unit>
        <trans-unit id="6fb0ba68c9e796283f40b2a10f8a4caa02b5fdab" translate="yes" xml:space="preserve">
          <source>both spawns the &quot;pong&quot; process and gives it the name &lt;code&gt;pong&lt;/code&gt;. In the &quot;ping&quot; process, messages can be sent to &lt;code&gt;pong&lt;/code&gt; by:</source>
          <target state="translated">ambos genera el proceso &quot;pong&quot; y le da el nombre &lt;code&gt;pong&lt;/code&gt; . En el proceso de &quot;ping&quot;, los mensajes se pueden enviar a &lt;code&gt;pong&lt;/code&gt; por:</target>
        </trans-unit>
        <trans-unit id="1427acd9017f044f097b39bd8dd867988c97a153" translate="yes" xml:space="preserve">
          <source>breopen(Log, File, BHead) -&amp;gt; ok | {error, reopen_error_rsn()}</source>
          <target state="translated">breopen (Registro, Archivo, BHead) -&amp;gt; ok | {error, reopen_error_rsn ()}</target>
        </trans-unit>
        <trans-unit id="b58ccb7871e0261dfe6de9e4f5274543ebbebeb8" translate="yes" xml:space="preserve">
          <source>broadcast</source>
          <target state="translated">broadcast</target>
        </trans-unit>
        <trans-unit id="50f0842e1cda0fe8c9f71cfa4ea2f0841c7e72b2" translate="yes" xml:space="preserve">
          <source>bsl</source>
          <target state="translated">bsl</target>
        </trans-unit>
        <trans-unit id="63f2dca71c40848a4d8dc8e8cd8519a87854073a" translate="yes" xml:space="preserve">
          <source>bsr</source>
          <target state="translated">bsr</target>
        </trans-unit>
        <trans-unit id="4227474834bb37177c89c0c04a1c6088a0e0806d" translate="yes" xml:space="preserve">
          <source>bt(Pid) -&amp;gt; ok | undefined</source>
          <target state="translated">bt (Pid) -&amp;gt; ok | indefinido</target>
        </trans-unit>
        <trans-unit id="8cd9983b11c76876844be257a0f87b83409ff33e" translate="yes" xml:space="preserve">
          <source>btruncate(Log, BHead) -&amp;gt; ok | {error, trunc_error_rsn()}</source>
          <target state="translated">btruncate (Registro, BHead) -&amp;gt; ok | {error, trunc_error_rsn ()}</target>
        </trans-unit>
        <trans-unit id="d9e9c73acc45e7723c0d136c3fe7b40a2a9f6e19" translate="yes" xml:space="preserve">
          <source>build: From a command prompt with the VC tools available (See the instructions for OpenSSL build above for help on starting the proper command prompt in RELEASE mode):</source>
          <target state="translated">construir:Desde una línea de comandos con las herramientas de VC disponibles (Ver las instrucciones para la construcción de OpenSSL arriba para ayuda sobre cómo iniciar la línea de comandos apropiada en el modo RELEASE):</target>
        </trans-unit>
        <trans-unit id="183ecb4902d0d0d41b48309e30dd5254ba89737d" translate="yes" xml:space="preserve">
          <source>build_module(Chunks) -&amp;gt; {ok, Binary}</source>
          <target state="translated">build_module (fragmentos) -&amp;gt; {ok, binario}</target>
        </trans-unit>
        <trans-unit id="761567101897b252935ed432a4e4198076c07914" translate="yes" xml:space="preserve">
          <source>build_text(FormatList) -&amp;gt; &lt;code&gt;&lt;a href=&quot;#type-chars&quot;&gt;chars()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">build_text (FormatList) -&amp;gt; &lt;code&gt;&lt;a href=&quot;#type-chars&quot;&gt;chars()&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c15d9af91a67e242ca69b3cc677bedd7cf7a1311" translate="yes" xml:space="preserve">
          <source>built-in filters, see &lt;code&gt;&lt;a href=&quot;logger_filters&quot;&gt;logger_filters&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">filtros incorporados, consulte &lt;code&gt;&lt;a href=&quot;logger_filters&quot;&gt;logger_filters&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2bcba5ec087d106757db884cf7c12f1e54e03c54" translate="yes" xml:space="preserve">
          <source>but if Erlang was started with &lt;code&gt;+pc unicode&lt;/code&gt;:</source>
          <target state="translated">pero si Erlang se inici&amp;oacute; con &lt;code&gt;+pc unicode&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="190e9b4cffa7d0a9b40313246c0c7618ab1908bb" translate="yes" xml:space="preserve">
          <source>but if the &lt;code&gt;user_args&lt;/code&gt; parameter is set to a longer list, such as &lt;code&gt;[SomePid,SomeTableRef]&lt;/code&gt;, the callback function is expected to have these (in this case two) extra arguments last in the argument list:</source>
          <target state="translated">pero si el par&amp;aacute;metro &lt;code&gt;user_args&lt;/code&gt; se establece en una lista m&amp;aacute;s larga, como &lt;code&gt;[SomePid,SomeTableRef]&lt;/code&gt; , se espera que la funci&amp;oacute;n de devoluci&amp;oacute;n de llamada tenga estos (en este caso dos) argumentos adicionales al final de la lista de argumentos:</target>
        </trans-unit>
        <trans-unit id="87f9c67072367b652ee581fe6702e90f86a88df1" translate="yes" xml:space="preserve">
          <source>but if you want to match on something like the name of a function, you have to use an atom as metavariable:</source>
          <target state="translated">pero si quieres coincidir en algo como el nombre de una función,tienes que usar un átomo como metavariable:</target>
        </trans-unit>
        <trans-unit id="75d40d165112fee99f2f1226487828f8af4d8260" translate="yes" xml:space="preserve">
          <source>but in that case it must be defined before the rule for &lt;code&gt;move2/4&lt;/code&gt; because the first matching rule will be applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf05994ef579f79cdaa47b8de3629989183079f3" translate="yes" xml:space="preserve">
          <source>bxor</source>
          <target state="translated">bxor</target>
        </trans-unit>
        <trans-unit id="cd735cd6accded04e305d48a4573dbc18c35e2d5" translate="yes" xml:space="preserve">
          <source>byte_size(Bitstring) -&amp;gt; integer() &amp;gt;= 0</source>
          <target state="translated">byte_size (cadena de bits) -&amp;gt; entero ()&amp;gt; = 0</target>
        </trans-unit>
        <trans-unit id="ad9f3ff6cf1618879fe1e27de4643517be75b0b6" translate="yes" xml:space="preserve">
          <source>bytes_to_integer(Bin :: binary()) -&amp;gt; integer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84a516841ba77a5b4648de2cd0dfcb30ea46dbb4" translate="yes" xml:space="preserve">
          <source>c</source>
          <target state="translated">c</target>
        </trans-unit>
        <trans-unit id="c96598b814dcba9a9e1f98c1b6985598ed7b2584" translate="yes" xml:space="preserve">
          <source>c(Module) -&amp;gt; {ok, ModuleName} | error</source>
          <target state="translated">c (M&amp;oacute;dulo) -&amp;gt; {ok, ModuleName} | error</target>
        </trans-unit>
        <trans-unit id="9b04aeac7f4b5720e8ac207dd62c5ce15ce0106d" translate="yes" xml:space="preserve">
          <source>c(Module, Options) -&amp;gt; {ok, ModuleName} | error</source>
          <target state="translated">c (M&amp;oacute;dulo, Opciones) -&amp;gt; {ok, ModuleName} | error</target>
        </trans-unit>
        <trans-unit id="f57652c8c1ca50e19e0b8ad191019a332a4b9b1e" translate="yes" xml:space="preserve">
          <source>c(Module, Options, Filter) -&amp;gt; {ok, ModuleName} | error</source>
          <target state="translated">c (M&amp;oacute;dulo, Opciones, Filtro) -&amp;gt; {ok, ModuleName} | error</target>
        </trans-unit>
        <trans-unit id="095684cc5292be95edb6d32415797fe83beaa70e" translate="yes" xml:space="preserve">
          <source>calculate &lt;code&gt;&lt;a href=&quot;https://github.com/erlang/otp/blob/OTP-18.0/erts/emulator/beam/erl_message.c#L1031&quot;&gt;how large&lt;/a&gt;&lt;/code&gt; the message to be sent is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4ffacba5591440a14a08eac7aade57c603e17c0" translate="yes" xml:space="preserve">
          <source>calendar</source>
          <target state="translated">calendar</target>
        </trans-unit>
        <trans-unit id="c4d23b67e305f02cc6296b3fb8e9c61a291a202a" translate="yes" xml:space="preserve">
          <source>calendar(3)</source>
          <target state="translated">calendar(3)</target>
        </trans-unit>
        <trans-unit id="11a5154fab3fad99dfcf27e7652ca5cc053e9ebd" translate="yes" xml:space="preserve">
          <source>calendar(3), erlc(1)</source>
          <target state="translated">calendario(3),erlc(1)</target>
        </trans-unit>
        <trans-unit id="bc8d8647b02deea0ab3e715c220d041ee78cc19d" translate="yes" xml:space="preserve">
          <source>call</source>
          <target state="translated">call</target>
        </trans-unit>
        <trans-unit id="8e1b171eb1bbdca491283ffc13147f35dde3fe87" translate="yes" xml:space="preserve">
          <source>call (&lt;code&gt;&lt;a href=&quot;socket#accept_async&quot;&gt;accept/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;socket#connect_async&quot;&gt;connect/3&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;socket#recv_async&quot;&gt;recv/3,4&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;socket#recvfrom_async&quot;&gt;recvfrom/3,4&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;socket#recvmsg_async&quot;&gt;recvmsg/2,3,5&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;socket#send_async&quot;&gt;send/3,4&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;socket#sendmsg_async&quot;&gt;sendmsg/3,4&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;socket#sendto_async&quot;&gt;sendto/4,5&lt;/a&gt;&lt;/code&gt;). This is achieved by setting the &lt;code&gt;Timeout&lt;/code&gt; argument to &lt;code&gt;nowait&lt;/code&gt;. For instance, if calling the &lt;code&gt;&lt;a href=&quot;socket#recv_async&quot;&gt;recv/3&lt;/a&gt;&lt;/code&gt; function with Timeout set to &lt;code&gt;nowait&lt;/code&gt; (i.e. &lt;code&gt;recv(Sock, 0, nowait)&lt;/code&gt;) when there is actually nothing to read, it will return with &lt;code&gt;{select,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;socket#type-select_info&quot;&gt;SelectInfo&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; (&lt;code&gt;SelectInfo&lt;/code&gt; contains the &lt;code&gt;&lt;a href=&quot;socket#type-select_ref&quot;&gt;SelectRef&lt;/a&gt;&lt;/code&gt;). When data eventually arrives a 'select message' will be sent to the caller:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b80fcc5cfd0829ff5eac836274cac0f309aa2e3d" translate="yes" xml:space="preserve">
          <source>call(Node, Fun) -&amp;gt; Result</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e778800a6583154cfe31dbbe539db1e96d0a7219" translate="yes" xml:space="preserve">
          <source>call(Node, Fun, Timeout) -&amp;gt; Result</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c6a639756ac5ffb262ebf578907862758c2dd70" translate="yes" xml:space="preserve">
          <source>call(Node, Module, Function, Args) -&amp;gt; Res | {badrpc, Reason}</source>
          <target state="translated">llamada (Nodo, M&amp;oacute;dulo, Funci&amp;oacute;n, Args) -&amp;gt; Res | {badrpc, Reason}</target>
        </trans-unit>
        <trans-unit id="586ea33ab306cf54f960da5a5a3294010c059d48" translate="yes" xml:space="preserve">
          <source>call(Node, Module, Function, Args) -&amp;gt; Result</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08f979cae5db743f169883afbe8b5f12097026c8" translate="yes" xml:space="preserve">
          <source>call(Node, Module, Function, Args, Timeout) -&amp;gt;</source>
          <target state="translated">llamada (nodo, m&amp;oacute;dulo, funci&amp;oacute;n, argumentos, tiempo de espera) -&amp;gt;</target>
        </trans-unit>
        <trans-unit id="b500d0f205e83ec763931e8f075f6157f03911a0" translate="yes" xml:space="preserve">
          <source>call(Node, Module, Function, Args, Timeout) -&amp;gt; Result</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4765dd33456ed105d24d5704b27dde8cb8d9886" translate="yes" xml:space="preserve">
          <source>call(ServerRef :: &lt;code&gt;&lt;a href=&quot;#type-server_ref&quot;&gt;server_ref()&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="translated">llamar (ServerRef :: &lt;code&gt;&lt;a href=&quot;#type-server_ref&quot;&gt;server_ref()&lt;/a&gt;&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="0ba6ce98874a5c86261e3fbbcd1cbbc9dd2967c2" translate="yes" xml:space="preserve">
          <source>call(ServerRef :: &lt;code&gt;&lt;a href=&quot;#type-server_ref&quot;&gt;server_ref()&lt;/a&gt;&lt;/code&gt;, Request :: term()) -&amp;gt;</source>
          <target state="translated">llamar (ServerRef :: &lt;code&gt;&lt;a href=&quot;#type-server_ref&quot;&gt;server_ref()&lt;/a&gt;&lt;/code&gt; , Request :: term ()) -&amp;gt;</target>
        </trans-unit>
        <trans-unit id="1a812095ebe6332010f6a59869ab8f7e62ee1cc9" translate="yes" xml:space="preserve">
          <source>call. This is achieved by setting the &lt;code&gt;Timeout&lt;/code&gt; argument to &lt;code&gt;nowait&lt;/code&gt;. For instance, if calling the &lt;code&gt;&lt;a href=&quot;#recv_async&quot;&gt;recv/3&lt;/a&gt;&lt;/code&gt; function with Timeout set to &lt;code&gt;nowait&lt;/code&gt; (&lt;code&gt;recv(Sock, 0, nowait)&lt;/code&gt;) when there is actually nothing to read, it will return with &lt;code&gt;{select,&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-select_info&quot;&gt;SelectInfo&lt;/a&gt;&lt;/code&gt;&lt;code&gt;}&lt;/code&gt; (&lt;code&gt;SelectInfo&lt;/code&gt; contains the &lt;code&gt;&lt;a href=&quot;socket#type-select_ref&quot;&gt;SelectRef&lt;/a&gt;&lt;/code&gt;). When data eventually arrives a 'select' message will be sent to the caller:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26d71743b2cda8f3c5b1b0c17a1ec20c638d5711" translate="yes" xml:space="preserve">
          <source>callback functions</source>
          <target state="translated">funciones de retrollamada</target>
        </trans-unit>
        <trans-unit id="97afaf3f7d287fac5660c73b7a658f2fedeceedc" translate="yes" xml:space="preserve">
          <source>can be rewritten to be more readable:</source>
          <target state="translated">puede ser reescrito para ser más legible:</target>
        </trans-unit>
        <trans-unit id="93f4c3ceeafe1d883f6ac4d4cb5ff62d588550d0" translate="yes" xml:space="preserve">
          <source>can be rewritten to:</source>
          <target state="translated">puede ser reescrito:</target>
        </trans-unit>
        <trans-unit id="fa8c9a76d02216d180ab712928f241fa3f5fa8ab" translate="yes" xml:space="preserve">
          <source>can instead be written as</source>
          <target state="translated">puede ser escrito como</target>
        </trans-unit>
        <trans-unit id="ea48a23432b7986392a67f02f657b4c99adf83aa" translate="yes" xml:space="preserve">
          <source>cancel(Socket, SelectInfo) -&amp;gt; ok | {error, Reason}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b3eff9ca3eaef64b1fc77c577b756f666c76190" translate="yes" xml:space="preserve">
          <source>cancel(TRef) -&amp;gt; {ok, cancel} | {error, Reason}</source>
          <target state="translated">cancelar (TRef) -&amp;gt; {ok, cancelar} | {error, Reason}</target>
        </trans-unit>
        <trans-unit id="58fe73ac67cf177f6dd33b4fe44d6bfd2952c07b" translate="yes" xml:space="preserve">
          <source>canonical</source>
          <target state="translated">canonical</target>
        </trans-unit>
        <trans-unit id="d0f5bc9e7850806fda269bc43f2e3119e92c12b2" translate="yes" xml:space="preserve">
          <source>canonical_relation(SetOfSets) -&amp;gt; BinRel</source>
          <target state="translated">canonical_relation (SetOfSets) -&amp;gt; BinRel</target>
        </trans-unit>
        <trans-unit id="3a52a465fada7e9c75be4f939e764083831448bd" translate="yes" xml:space="preserve">
          <source>carriers() -&amp;gt; {ok, Result} | {error, Reason}</source>
          <target state="translated">transportistas () -&amp;gt; {ok, Resultado} | {error, Reason}</target>
        </trans-unit>
        <trans-unit id="ee5214a0625718436544ae70fe60f4d82b91e2db" translate="yes" xml:space="preserve">
          <source>carriers(Options) -&amp;gt; {ok, Result} | {error, Reason}</source>
          <target state="translated">transportistas (Opciones) -&amp;gt; {ok, Resultado} | {error, Reason}</target>
        </trans-unit>
        <trans-unit id="7eb4f86b6d9ac5664065c4597d525d38854b4720" translate="yes" xml:space="preserve">
          <source>casefold(String :: &lt;code&gt;&lt;a href=&quot;unicode#type-chardata&quot;&gt;unicode:chardata()&lt;/a&gt;&lt;/code&gt;) -&amp;gt; &lt;code&gt;&lt;a href=&quot;unicode#type-chardata&quot;&gt;unicode:chardata()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">casefold (String :: &lt;code&gt;&lt;a href=&quot;unicode#type-chardata&quot;&gt;unicode:chardata()&lt;/a&gt;&lt;/code&gt; ) -&amp;gt; &lt;code&gt;&lt;a href=&quot;unicode#type-chardata&quot;&gt;unicode:chardata()&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f02ee335744a123309799adddcff742a5112591f" translate="yes" xml:space="preserve">
          <source>cast(Node, Fun) -&amp;gt; ok</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f1ed7026bf7c8ef93ad8363d915909f970369aa" translate="yes" xml:space="preserve">
          <source>cast(Node, Module, Function, Args) -&amp;gt; ok</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a45288041b7277b587938369be0c9d86f6ad7edf" translate="yes" xml:space="preserve">
          <source>cast(Node, Module, Function, Args) -&amp;gt; true</source>
          <target state="translated">cast (nodo, m&amp;oacute;dulo, funci&amp;oacute;n, argumentos) -&amp;gt; verdadero</target>
        </trans-unit>
        <trans-unit id="381e46370e8a81b3601dcd66a0d30c1e7b579344" translate="yes" xml:space="preserve">
          <source>cast(ServerRef :: &lt;code&gt;&lt;a href=&quot;#type-server_ref&quot;&gt;server_ref()&lt;/a&gt;&lt;/code&gt;, Msg :: term()) -&amp;gt; ok</source>
          <target state="translated">emitir (ServerRef :: &lt;code&gt;&lt;a href=&quot;#type-server_ref&quot;&gt;server_ref()&lt;/a&gt;&lt;/code&gt; , Msg :: term ()) -&amp;gt; ok</target>
        </trans-unit>
        <trans-unit id="9ebad64e5d2b9542779537fce0354f34c099e7ff" translate="yes" xml:space="preserve">
          <source>catch</source>
          <target state="translated">catch</target>
        </trans-unit>
        <trans-unit id="f443b2f9a405f81f49c3989ddcf0dbd1252a91dd" translate="yes" xml:space="preserve">
          <source>category(Token) -&amp;gt; &lt;code&gt;&lt;a href=&quot;#type-category&quot;&gt;category()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">categor&amp;iacute;a (Token) -&amp;gt; &lt;code&gt;&lt;a href=&quot;#type-category&quot;&gt;category()&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="639287c1f36ef84ae38ed37b5ac7cf276477fba3" translate="yes" xml:space="preserve">
          <source>cd(Dir) -&amp;gt; ok</source>
          <target state="translated">cd (Dir) -&amp;gt; ok</target>
        </trans-unit>
        <trans-unit id="80b80913dd4035ef9aaa91f5f87178c517a7c9c0" translate="yes" xml:space="preserve">
          <source>ceil(Number) -&amp;gt; integer()</source>
          <target state="translated">ceil (N&amp;uacute;mero) -&amp;gt; entero ()</target>
        </trans-unit>
        <trans-unit id="ba4898d1e8bc8aaa35047d5a0a24d5ad9db64383" translate="yes" xml:space="preserve">
          <source>ceil(X) -&amp;gt; float()</source>
          <target state="translated">ceil (X) -&amp;gt; flotar ()</target>
        </trans-unit>
        <trans-unit id="430831ed6146303877cf7be9022369ef4669761c" translate="yes" xml:space="preserve">
          <source>centre(String, Number) -&amp;gt; Centered</source>
          <target state="translated">centro (Cadena, N&amp;uacute;mero) -&amp;gt; Centrado</target>
        </trans-unit>
        <trans-unit id="6d425e0de1476cc745bedfaa528f54aa28294852" translate="yes" xml:space="preserve">
          <source>centre(String, Number, Character) -&amp;gt; Centered</source>
          <target state="translated">centro (cadena, n&amp;uacute;mero, car&amp;aacute;cter) -&amp;gt; centrado</target>
        </trans-unit>
        <trans-unit id="5d98a322097890c0be1f64ba6346c18047451b91" translate="yes" xml:space="preserve">
          <source>cerl</source>
          <target state="translated">cerl</target>
        </trans-unit>
        <trans-unit id="61dc94f0bcc32a275133479d4ce0204b31298985" translate="yes" xml:space="preserve">
          <source>cerl_clauses</source>
          <target state="translated">cerl_clauses</target>
        </trans-unit>
        <trans-unit id="543d00be76b1bd2137ace761d25a79cd03ec4747" translate="yes" xml:space="preserve">
          <source>cerl_trees</source>
          <target state="translated">cerl_trees</target>
        </trans-unit>
        <trans-unit id="539030d0200a45276988fb3c0301e320e63ba994" translate="yes" xml:space="preserve">
          <source>certificate_authorities (RFC8446)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0d0d921640f8dee544001e223d7bd2196d6e8f2" translate="yes" xml:space="preserve">
          <source>change_code(Name, Module, OldVsn, Extra) -&amp;gt; ok | {error, Reason}</source>
          <target state="translated">change_code (Nombre, M&amp;oacute;dulo, OldVsn, Extra) -&amp;gt; ok | {error, Reason}</target>
        </trans-unit>
        <trans-unit id="ebb8c3045bd28c21b6056fc7ad0e6f34271d630f" translate="yes" xml:space="preserve">
          <source>change_code(Name, Module, OldVsn, Extra, Timeout) -&amp;gt;</source>
          <target state="translated">change_code (Nombre, M&amp;oacute;dulo, OldVsn, Extra, Tiempo de espera) -&amp;gt;</target>
        </trans-unit>
        <trans-unit id="48bbafece2f9aa8f03ad2b9d2d62b7dbb51e453a" translate="yes" xml:space="preserve">
          <source>change_config(Config, Value) -&amp;gt; &lt;code&gt;&lt;a href=&quot;#type-config_result&quot;&gt;config_result()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="783522fc90c82b44cbd792497069d120268dc7b9" translate="yes" xml:space="preserve">
          <source>change_group(Filename, Gid) -&amp;gt; ok | {error, Reason}</source>
          <target state="translated">change_group (nombre de archivo, Gid) -&amp;gt; ok | {error, Reason}</target>
        </trans-unit>
        <trans-unit id="813b43d9f912fc121c8d6021e058ea6e68594eca" translate="yes" xml:space="preserve">
          <source>change_header(Log, Header) -&amp;gt; ok | {error, Reason}</source>
          <target state="translated">change_header (Registro, Encabezado) -&amp;gt; ok | {error, Reason}</target>
        </trans-unit>
        <trans-unit id="9ee1b282106ead99f37f874d43ec57bd8437b08b" translate="yes" xml:space="preserve">
          <source>change_key(RegHandle, Key) -&amp;gt; ReturnValue</source>
          <target state="translated">change_key (RegHandle, Key) -&amp;gt; ReturnValue</target>
        </trans-unit>
        <trans-unit id="1018df7f56e905f0dab8158912e0d1ae7158718f" translate="yes" xml:space="preserve">
          <source>change_key_create(RegHandle, Key) -&amp;gt; ReturnValue</source>
          <target state="translated">change_key_create (RegHandle, Key) -&amp;gt; ReturnValue</target>
        </trans-unit>
        <trans-unit id="bca67c8be654ba78537aed478f039caf99cca9f2" translate="yes" xml:space="preserve">
          <source>change_mode(Filename, Mode) -&amp;gt; ok | {error, Reason}</source>
          <target state="translated">change_mode (nombre de archivo, modo) -&amp;gt; ok | {error, Reason}</target>
        </trans-unit>
        <trans-unit id="8a3f9c9d1b52f169e5c459cd5f0f9ba380ec3c6e" translate="yes" xml:space="preserve">
          <source>change_notify(Log, Owner, Notify) -&amp;gt; ok | {error, Reason}</source>
          <target state="translated">change_notify (Registro, Propietario, Notificar) -&amp;gt; ok | {error, Reason}</target>
        </trans-unit>
        <trans-unit id="a63fd44f204117228407c76fcf3481e903d5cb26" translate="yes" xml:space="preserve">
          <source>change_owner(Filename, Uid) -&amp;gt; ok | {error, Reason}</source>
          <target state="translated">change_owner (nombre de archivo, Uid) -&amp;gt; ok | {error, Reason}</target>
        </trans-unit>
        <trans-unit id="f4f5da258939e140cb61e3b735a04bc820246d79" translate="yes" xml:space="preserve">
          <source>change_owner(Filename, Uid, Gid) -&amp;gt; ok | {error, Reason}</source>
          <target state="translated">change_owner (nombre de archivo, Uid, Gid) -&amp;gt; ok | {error, Reason}</target>
        </trans-unit>
        <trans-unit id="afb290d7490cde5b145dd7d93cf0d803d23e88da" translate="yes" xml:space="preserve">
          <source>change_size(Log, Size) -&amp;gt; ok | {error, Reason}</source>
          <target state="translated">change_size (Registro, Tama&amp;ntilde;o) -&amp;gt; ok | {error, Reason}</target>
        </trans-unit>
        <trans-unit id="8e5ea94e599a8fb91e33384cec12fb96ef40e367" translate="yes" xml:space="preserve">
          <source>change_table_access_mode(Tab :: &lt;code&gt;&lt;a href=&quot;#type-table&quot;&gt;table()&lt;/a&gt;&lt;/code&gt;, Mode) -&amp;gt; &lt;code&gt;&lt;a href=&quot;#type-t_result&quot;&gt;t_result&lt;/a&gt;&lt;/code&gt;(ok)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a1e53bd51c41889c6d2805d7e277b42552ec2e6" translate="yes" xml:space="preserve">
          <source>change_table_copy_type(Tab :: &lt;code&gt;&lt;a href=&quot;#type-table&quot;&gt;table()&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="761279ee979c0d3bf16057c2c68607493aba18ff" translate="yes" xml:space="preserve">
          <source>change_table_load_order(Tab :: &lt;code&gt;&lt;a href=&quot;#type-table&quot;&gt;table()&lt;/a&gt;&lt;/code&gt;, Order) -&amp;gt; &lt;code&gt;&lt;a href=&quot;#type-t_result&quot;&gt;t_result&lt;/a&gt;&lt;/code&gt;(ok)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d7dcc970334a76c58bb976ae5f0817740cf899f" translate="yes" xml:space="preserve">
          <source>change_table_majority(Tab :: &lt;code&gt;&lt;a href=&quot;#type-table&quot;&gt;table()&lt;/a&gt;&lt;/code&gt;, M :: boolean()) -&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="791e710387d0d415cf29c846113be273ae0a4f62" translate="yes" xml:space="preserve">
          <source>change_time(Filename, Atime, Mtime) -&amp;gt; ok | {error, Reason}</source>
          <target state="translated">change_time (Nombre de archivo, Atime, Mtime) -&amp;gt; ok | {error, Reason}</target>
        </trans-unit>
        <trans-unit id="2fdcec46b372cbab633de2105e377c344475062c" translate="yes" xml:space="preserve">
          <source>change_time(Filename, Mtime) -&amp;gt; ok | {error, Reason}</source>
          <target state="translated">change_time (Nombre de archivo, Mtime) -&amp;gt; ok | {error, Reason}</target>
        </trans-unit>
        <trans-unit id="b373c5419d5796d4aec2cc2b3a99d2881565ccd0" translate="yes" xml:space="preserve">
          <source>char_list(Term) -&amp;gt; boolean()</source>
          <target state="translated">char_list (T&amp;eacute;rmino) -&amp;gt; boolean ()</target>
        </trans-unit>
        <trans-unit id="f0db3fa401aea04b711d6f1f3630552eaaee8e59" translate="yes" xml:space="preserve">
          <source>character</source>
          <target state="translated">character</target>
        </trans-unit>
        <trans-unit id="97acdeea52ff074a79d4f4a036cfe0deedb393cf" translate="yes" xml:space="preserve">
          <source>character with octal code ddd..</source>
          <target state="translated">con código octal ddd..</target>
        </trans-unit>
        <trans-unit id="50dd212971b862e228bd0cb0b91a358f1b6648be" translate="yes" xml:space="preserve">
          <source>characters_to_binary(Data) -&amp;gt; Result</source>
          <target state="translated">characters_to_binary (Datos) -&amp;gt; Resultado</target>
        </trans-unit>
        <trans-unit id="aadceda668c49dda7bac9a8574904aa1b30596ed" translate="yes" xml:space="preserve">
          <source>characters_to_binary(Data, InEncoding) -&amp;gt; Result</source>
          <target state="translated">characters_to_binary (Datos, InEncoding) -&amp;gt; Resultado</target>
        </trans-unit>
        <trans-unit id="c1527fcfa4b121203e4e1dc1047e1efd8102d562" translate="yes" xml:space="preserve">
          <source>characters_to_binary(Data, InEncoding, OutEncoding) -&amp;gt; Result</source>
          <target state="translated">characters_to_binary (Datos, InEncoding, OutEncoding) -&amp;gt; Resultado</target>
        </trans-unit>
        <trans-unit id="6df472875c5fb944d9c780677694bf3acd8df87b" translate="yes" xml:space="preserve">
          <source>characters_to_list(Data) -&amp;gt; Result</source>
          <target state="translated">characters_to_list (Datos) -&amp;gt; Resultado</target>
        </trans-unit>
        <trans-unit id="0be42f160cc63b226b89e76ba26a22c9d089da08" translate="yes" xml:space="preserve">
          <source>characters_to_list(Data, InEncoding) -&amp;gt; Result</source>
          <target state="translated">characters_to_list (Datos, InEncoding) -&amp;gt; Resultado</target>
        </trans-unit>
        <trans-unit id="2ba3ed5bf166b53d492b4c2910228a6a9a308c2f" translate="yes" xml:space="preserve">
          <source>characters_to_nfc_binary(CD :: &lt;code&gt;&lt;a href=&quot;#type-chardata&quot;&gt;chardata()&lt;/a&gt;&lt;/code&gt;) -&amp;gt;</source>
          <target state="translated">caracteres_a_nfc_binary (CD :: &lt;code&gt;&lt;a href=&quot;#type-chardata&quot;&gt;chardata()&lt;/a&gt;&lt;/code&gt; ) -&amp;gt;</target>
        </trans-unit>
        <trans-unit id="3a992f407babbcb92da44c4c4a00edeee005a324" translate="yes" xml:space="preserve">
          <source>characters_to_nfc_list(CD :: &lt;code&gt;&lt;a href=&quot;#type-chardata&quot;&gt;chardata()&lt;/a&gt;&lt;/code&gt;) -&amp;gt;</source>
          <target state="translated">caracteres_a_nfc_list (CD :: &lt;code&gt;&lt;a href=&quot;#type-chardata&quot;&gt;chardata()&lt;/a&gt;&lt;/code&gt; ) -&amp;gt;</target>
        </trans-unit>
        <trans-unit id="a50804d73541388bd1f9b9cfd58d50935a1532e7" translate="yes" xml:space="preserve">
          <source>characters_to_nfd_binary(CD :: &lt;code&gt;&lt;a href=&quot;#type-chardata&quot;&gt;chardata()&lt;/a&gt;&lt;/code&gt;) -&amp;gt;</source>
          <target state="translated">caracteres_a_nfd_binary (CD :: &lt;code&gt;&lt;a href=&quot;#type-chardata&quot;&gt;chardata()&lt;/a&gt;&lt;/code&gt; ) -&amp;gt;</target>
        </trans-unit>
        <trans-unit id="3a73758f285f32879954a26aa7bcf685eb8f29b2" translate="yes" xml:space="preserve">
          <source>characters_to_nfd_list(CD :: &lt;code&gt;&lt;a href=&quot;#type-chardata&quot;&gt;chardata()&lt;/a&gt;&lt;/code&gt;) -&amp;gt;</source>
          <target state="translated">caracteres_a_nfd_list (CD :: &lt;code&gt;&lt;a href=&quot;#type-chardata&quot;&gt;chardata()&lt;/a&gt;&lt;/code&gt; ) -&amp;gt;</target>
        </trans-unit>
        <trans-unit id="f31faaa6282e529db9ca4a80795cf6063a787e92" translate="yes" xml:space="preserve">
          <source>characters_to_nfkc_binary(CD :: &lt;code&gt;&lt;a href=&quot;#type-chardata&quot;&gt;chardata()&lt;/a&gt;&lt;/code&gt;) -&amp;gt;</source>
          <target state="translated">caracteres_a_nfkc_binary (CD :: &lt;code&gt;&lt;a href=&quot;#type-chardata&quot;&gt;chardata()&lt;/a&gt;&lt;/code&gt; ) -&amp;gt;</target>
        </trans-unit>
        <trans-unit id="33a61d8980375f87b4307c0001df8865101cd823" translate="yes" xml:space="preserve">
          <source>characters_to_nfkc_list(CD :: &lt;code&gt;&lt;a href=&quot;#type-chardata&quot;&gt;chardata()&lt;/a&gt;&lt;/code&gt;) -&amp;gt;</source>
          <target state="translated">caracteres_a_nfkc_list (CD :: &lt;code&gt;&lt;a href=&quot;#type-chardata&quot;&gt;chardata()&lt;/a&gt;&lt;/code&gt; ) -&amp;gt;</target>
        </trans-unit>
        <trans-unit id="3c5a611ecf8b29176a655e3d243f26eee4a03b8b" translate="yes" xml:space="preserve">
          <source>characters_to_nfkd_binary(CD :: &lt;code&gt;&lt;a href=&quot;#type-chardata&quot;&gt;chardata()&lt;/a&gt;&lt;/code&gt;) -&amp;gt;</source>
          <target state="translated">caracteres_a_nfkd_binary (CD :: &lt;code&gt;&lt;a href=&quot;#type-chardata&quot;&gt;chardata()&lt;/a&gt;&lt;/code&gt; ) -&amp;gt;</target>
        </trans-unit>
        <trans-unit id="1162a0c030dee7362242d5d4889617380f5b1117" translate="yes" xml:space="preserve">
          <source>characters_to_nfkd_list(CD :: &lt;code&gt;&lt;a href=&quot;#type-chardata&quot;&gt;chardata()&lt;/a&gt;&lt;/code&gt;) -&amp;gt;</source>
          <target state="translated">caracteres_a_nfkd_list (CD :: &lt;code&gt;&lt;a href=&quot;#type-chardata&quot;&gt;chardata()&lt;/a&gt;&lt;/code&gt; ) -&amp;gt;</target>
        </trans-unit>
        <trans-unit id="10796c10a0d913f50eaf9f5e9e98eb494d45b996" translate="yes" xml:space="preserve">
          <source>chars(Character, Number) -&amp;gt; String</source>
          <target state="translated">chars (car&amp;aacute;cter, n&amp;uacute;mero) -&amp;gt; cadena</target>
        </trans-unit>
        <trans-unit id="6b90cf1e25454d1ce2e6fe69ba6126d8cee80995" translate="yes" xml:space="preserve">
          <source>chars(Character, Number, Tail) -&amp;gt; String</source>
          <target state="translated">chars (car&amp;aacute;cter, n&amp;uacute;mero, cola) -&amp;gt; cadena</target>
        </trans-unit>
        <trans-unit id="9ab9e1b88757331e50f7177d246a6ac6814e59fb" translate="yes" xml:space="preserve">
          <source>check for UTRACE support in your current kernel:</source>
          <target state="translated">comprueba el soporte de UTRACE en tu núcleo actual:</target>
        </trans-unit>
        <trans-unit id="a3d169e3674a560aa2c318fdc654be52039e49b3" translate="yes" xml:space="preserve">
          <source>check is only performed on the peer certificate.</source>
          <target state="translated">La comprobación sólo se realiza en el certificado de los pares.</target>
        </trans-unit>
        <trans-unit id="ca38ce7e1dd5c5036886c71fceaf06e593f3c559" translate="yes" xml:space="preserve">
          <source>check(FileName) -&amp;gt; Reply</source>
          <target state="translated">comprobar (Nombre de archivo) -&amp;gt; Responder</target>
        </trans-unit>
        <trans-unit id="b58dd293f1c20a1a5ce151c3dd25dbf472399074" translate="yes" xml:space="preserve">
          <source>check(FileNames, Options) -&amp;gt; Reply</source>
          <target state="translated">comprobar (FileNames, Opciones) -&amp;gt; Responder</target>
        </trans-unit>
        <trans-unit id="85d09266f730ed0ef11150d70e729fa7eff222f8" translate="yes" xml:space="preserve">
          <source>check_childspecs(ChildSpecs) -&amp;gt; Result</source>
          <target state="translated">check_childspecs (ChildSpecs) -&amp;gt; Resultado</target>
        </trans-unit>
        <trans-unit id="025372ec22477e9ed850bd0a7594df78e4a7e901" translate="yes" xml:space="preserve">
          <source>check_config(Config) -&amp;gt; ok | {error, term()}</source>
          <target state="translated">check_config (Config) -&amp;gt; ok | {t&amp;eacute;rmino de error()}</target>
        </trans-unit>
        <trans-unit id="cdd039a4a821ac3ab2ae2b30d5a6cea34bd528dc" translate="yes" xml:space="preserve">
          <source>check_old_code(Module) -&amp;gt; boolean()</source>
          <target state="translated">check_old_code (M&amp;oacute;dulo) -&amp;gt; boolean ()</target>
        </trans-unit>
        <trans-unit id="858a711c9ed5861d92934be8a86c2b8fc57262c7" translate="yes" xml:space="preserve">
          <source>check_process_code(Pid, Module) -&amp;gt; CheckResult</source>
          <target state="translated">check_process_code (Pid, M&amp;oacute;dulo) -&amp;gt; CheckResult</target>
        </trans-unit>
        <trans-unit id="02bb69bcfbe9631af85f29388f5458e1710f36a4" translate="yes" xml:space="preserve">
          <source>check_process_code(Pid, Module, OptionList) -&amp;gt; CheckResult | async</source>
          <target state="translated">check_process_code (Pid, M&amp;oacute;dulo, OptionList) -&amp;gt; CheckResult | as&amp;iacute;ncrono</target>
        </trans-unit>
        <trans-unit id="599c33bf0a9e426b055bf206b03b43e545d219fd" translate="yes" xml:space="preserve">
          <source>check_response(Message, RequestId) -&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a490a5cc9fa145a4f1ff3c518dd84998619b8a2" translate="yes" xml:space="preserve">
          <source>check_response(Msg :: term(), RequestId :: &lt;code&gt;&lt;a href=&quot;#type-request_id&quot;&gt;request_id()&lt;/a&gt;&lt;/code&gt;) -&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1470d1355971648fda0d3239972aae8cf53a09a" translate="yes" xml:space="preserve">
          <source>chomp(String :: &lt;code&gt;&lt;a href=&quot;unicode#type-chardata&quot;&gt;unicode:chardata()&lt;/a&gt;&lt;/code&gt;) -&amp;gt; &lt;code&gt;&lt;a href=&quot;unicode#type-chardata&quot;&gt;unicode:chardata()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">chomp (String :: &lt;code&gt;&lt;a href=&quot;unicode#type-chardata&quot;&gt;unicode:chardata()&lt;/a&gt;&lt;/code&gt; ) -&amp;gt; &lt;code&gt;&lt;a href=&quot;unicode#type-chardata&quot;&gt;unicode:chardata()&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bed3a9983ca825632c6ecf8da20aebbefc0d07af" translate="yes" xml:space="preserve">
          <source>chr(String, Character) -&amp;gt; Index</source>
          <target state="translated">chr (Cadena, Car&amp;aacute;cter) -&amp;gt; &amp;Iacute;ndice</target>
        </trans-unit>
        <trans-unit id="5b6400e6315f474c7d3ef6d5d682c030be6e1e5c" translate="yes" xml:space="preserve">
          <source>chunk(Continuation) -&amp;gt; chunk_ret()</source>
          <target state="translated">chunk (continuaci&amp;oacute;n) -&amp;gt; chunk_ret ​​()</target>
        </trans-unit>
        <trans-unit id="05be0dd9e71fb7d4bcdd7c6dc89b0a9801785ccf" translate="yes" xml:space="preserve">
          <source>chunk(Continuation, N) -&amp;gt; chunk_ret()</source>
          <target state="translated">chunk (Continuaci&amp;oacute;n, N) -&amp;gt; chunk_ret ​​()</target>
        </trans-unit>
        <trans-unit id="a274fcea06afb64eca7855cbea372182f5cad268" translate="yes" xml:space="preserve">
          <source>chunk(Log, Continuation) -&amp;gt; chunk_ret()</source>
          <target state="translated">chunk (Registro, continuaci&amp;oacute;n) -&amp;gt; chunk_ret ​​()</target>
        </trans-unit>
        <trans-unit id="bb306e0f5f5c5bf52efb13e6f7840f7fe62ab1fa" translate="yes" xml:space="preserve">
          <source>chunk(Log, Continuation, N) -&amp;gt; chunk_ret()</source>
          <target state="translated">chunk (Registro, Continuaci&amp;oacute;n, N) -&amp;gt; chunk_ret ​​()</target>
        </trans-unit>
        <trans-unit id="b60020e1bd24497c7a856b4bd24c7b804dbf3ef3" translate="yes" xml:space="preserve">
          <source>chunk_info(Continuation) -&amp;gt; InfoList | {error, Reason}</source>
          <target state="translated">chunk_info (continuaci&amp;oacute;n) -&amp;gt; InfoList | {error, Reason}</target>
        </trans-unit>
        <trans-unit id="bac6f8bf8225d7b9b559782f93abe21ea5036e41" translate="yes" xml:space="preserve">
          <source>chunk_step(Log, Continuation, Step) -&amp;gt;</source>
          <target state="translated">chunk_step (Registro, Continuaci&amp;oacute;n, Paso) -&amp;gt;</target>
        </trans-unit>
        <trans-unit id="366a764e9406d8fa8a195b78e6c83d79ba3eece7" translate="yes" xml:space="preserve">
          <source>chunks(Beam, ChunkRefs) -&amp;gt;</source>
          <target state="translated">trozos (Beam, ChunkRefs) -&amp;gt;</target>
        </trans-unit>
        <trans-unit id="b109e88bd0666bd32af0e725acf2d5ad1b561a20" translate="yes" xml:space="preserve">
          <source>chunks(Beam, ChunkRefs, Options) -&amp;gt;</source>
          <target state="translated">chunks (Beam, ChunkRefs, Opciones) -&amp;gt;</target>
        </trans-unit>
        <trans-unit id="07e69c57ec8ff96653c2d8d165de4aab47f11260" translate="yes" xml:space="preserve">
          <source>cipher_info(Type) -&amp;gt; Result | &lt;code&gt;&lt;a href=&quot;#type-run_time_error&quot;&gt;run_time_error()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c7d532256aa0e3f2acbe2f7496db45f508fb4a8" translate="yes" xml:space="preserve">
          <source>cipher_suites() -&amp;gt; [&lt;code&gt;&lt;a href=&quot;#type-old_cipher_suite&quot;&gt;old_cipher_suite()&lt;/a&gt;&lt;/code&gt;] | [string()]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="612221314eff111cc2e9228369225dd733e7b8aa" translate="yes" xml:space="preserve">
          <source>cipher_suites(Description, Version) -&amp;gt; &lt;code&gt;&lt;a href=&quot;#type-ciphers&quot;&gt;ciphers()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c2af2f191199f0810e0a7035521b04119d2cceb" translate="yes" xml:space="preserve">
          <source>cipher_suites(Description, Version, StringType :: rfc | openssl) -&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95b3f71d4b1cdb039374f138c04c8cc6e333eeb1" translate="yes" xml:space="preserve">
          <source>cipher_suites(Type) -&amp;gt; [&lt;code&gt;&lt;a href=&quot;#type-old_cipher_suite&quot;&gt;old_cipher_suite()&lt;/a&gt;&lt;/code&gt; | string()]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb84e35d6406ac74325686d9b399e2c067031ba1" translate="yes" xml:space="preserve">
          <source>clash() -&amp;gt; ok</source>
          <target state="translated">choque () -&amp;gt; ok</target>
        </trans-unit>
        <trans-unit id="c3cec0881945cba668f9d48b9e22ae3751b011f8" translate="yes" xml:space="preserve">
          <source>class_qualifier clause comment cond_expr</source>
          <target state="translated">class_qualifier clause comment cond_expr</target>
        </trans-unit>
        <trans-unit id="d467c0f58a5e527f11283023ac3a53af8d25756c" translate="yes" xml:space="preserve">
          <source>class_qualifier clause comment conjunction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e7884515ab16e4fab1b842c5ba8c4c01b4df0d5" translate="yes" xml:space="preserve">
          <source>clear_callback() -&amp;gt; ok</source>
          <target state="translated">clear_callback () -&amp;gt; ok</target>
        </trans-unit>
        <trans-unit id="5f0385341d0d9dc1330078377476f25920368051" translate="yes" xml:space="preserve">
          <source>clear_cmd() -&amp;gt; ok</source>
          <target state="translated">clear_cmd () -&amp;gt; ok</target>
        </trans-unit>
        <trans-unit id="3216feb60522c7752bc3d58cd3f2e7dc2984e813" translate="yes" xml:space="preserve">
          <source>clear_crypto_key_fun() -&amp;gt; undefined | {ok, Result}</source>
          <target state="translated">clear_crypto_key_fun () -&amp;gt; indefinido | {ok, resultado}</target>
        </trans-unit>
        <trans-unit id="9cbeef0292329d8c8d57d7c82f9a391641672891" translate="yes" xml:space="preserve">
          <source>clear_pem_cache() -&amp;gt; ok</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0703bfa4804cc66bf67e756eb60332b03b862a7" translate="yes" xml:space="preserve">
          <source>clear_table(Tab :: &lt;code&gt;&lt;a href=&quot;#type-table&quot;&gt;table()&lt;/a&gt;&lt;/code&gt;) -&amp;gt; &lt;code&gt;&lt;a href=&quot;#type-t_result&quot;&gt;t_result&lt;/a&gt;&lt;/code&gt;(ok)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17dcb74f7d4dded01def8f0fae6f77e33f19d7ad" translate="yes" xml:space="preserve">
          <source>client_certificate_type (RFC7250)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93df14617ceda8ee499003ae137b44e91aa26cce" translate="yes" xml:space="preserve">
          <source>clients</source>
          <target state="translated">clients</target>
        </trans-unit>
        <trans-unit id="886abf2a6ba5612fdbf405851a6eca6b901789de" translate="yes" xml:space="preserve">
          <source>close(ChannelPid, Handle) -&amp;gt; ok | Error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c331206b16bd282561992f0cc00b3e0b132da869" translate="yes" xml:space="preserve">
          <source>close(ChannelPid, Handle, Timeout) -&amp;gt; ok | Error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f8b454bfd8f7d9a92afda64070ce71fdfd2e466" translate="yes" xml:space="preserve">
          <source>close(ConnectionRef) -&amp;gt; ok | {error, term()}</source>
          <target state="translated">cerrar (ConnectionRef) -&amp;gt; ok | {t&amp;eacute;rmino de error()}</target>
        </trans-unit>
        <trans-unit id="326f722aeedcc2d423c23fe8214b21f1db46f892" translate="yes" xml:space="preserve">
          <source>close(ConnectionRef, ChannelId) -&amp;gt; ok</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="405b991a1f1c3f1f1e979b838fc1db9c1f16ff47" translate="yes" xml:space="preserve">
          <source>close(Continuation) -&amp;gt; ok | {error, Reason}</source>
          <target state="translated">cerrar (Continuaci&amp;oacute;n) -&amp;gt; ok | {error, Reason}</target>
        </trans-unit>
        <trans-unit id="057544b5e2ac221fbb8165280b21b26bae408c90" translate="yes" xml:space="preserve">
          <source>close(Epp) -&amp;gt; ok</source>
          <target state="translated">cerrar (Epp) -&amp;gt; ok</target>
        </trans-unit>
        <trans-unit id="4b0c201fa495b4dbaad337f5ae57d4ca607c5b0d" translate="yes" xml:space="preserve">
          <source>close(IoDevice) -&amp;gt; ok | {error, Reason}</source>
          <target state="translated">cerrar (IoDevice) -&amp;gt; ok | {error, Reason}</target>
        </trans-unit>
        <trans-unit id="524e7f9b6548d1169747d906fa1bcdf2a90c4c31" translate="yes" xml:space="preserve">
          <source>close(Log) -&amp;gt; ok | {error, close_error_rsn()}</source>
          <target state="translated">cerrar (Registro) -&amp;gt; ok | {error, close_error_rsn ()}</target>
        </trans-unit>
        <trans-unit id="d8097d564ac8a77dadce2098b541a026d4c5534d" translate="yes" xml:space="preserve">
          <source>close(Name) -&amp;gt; ok | {error, Reason}</source>
          <target state="translated">cerrar (Nombre) -&amp;gt; ok | {error, Reason}</target>
        </trans-unit>
        <trans-unit id="d87db21865a684fc7fb6307f14b21e9b8ca38986" translate="yes" xml:space="preserve">
          <source>close(RegHandle) -&amp;gt; ok</source>
          <target state="translated">cerrar (RegHandle) -&amp;gt; ok</target>
        </trans-unit>
        <trans-unit id="0e4bb3fb6f47b73e2d08297f4a38fc0e6739b507" translate="yes" xml:space="preserve">
          <source>close(Socket) -&amp;gt; ok</source>
          <target state="translated">cerrar (enchufe) -&amp;gt; ok</target>
        </trans-unit>
        <trans-unit id="7b3608d6ece4ad8fe103f51f76d5738be90841ee" translate="yes" xml:space="preserve">
          <source>close(Socket) -&amp;gt; ok | {error, &lt;code&gt;&lt;a href=&quot;inet#type-posix&quot;&gt;inet:posix()&lt;/a&gt;&lt;/code&gt;}</source>
          <target state="translated">cerrar (Socket) -&amp;gt; ok | {error, &lt;code&gt;&lt;a href=&quot;inet#type-posix&quot;&gt;inet:posix()&lt;/a&gt;&lt;/code&gt; }</target>
        </trans-unit>
        <trans-unit id="cf15ac37fe72f9a4b0cd06a89c6a7e33a2e170ca" translate="yes" xml:space="preserve">
          <source>close(Socket) -&amp;gt; ok | {error, Reason}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2aad5e79e3a04fc44ff50c716f94685ddb158b8" translate="yes" xml:space="preserve">
          <source>close(SslSocket) -&amp;gt; ok | {error, Reason}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4849d9a7d30b54d8e5246535abaa6469f07487b6" translate="yes" xml:space="preserve">
          <source>close(SslSocket, How) -&amp;gt; ok | {ok, port()} | {error, Reason}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ec80a1ceae3f33399d7e8a912bb65c48d142ad4" translate="yes" xml:space="preserve">
          <source>close(TarDescriptor :: &lt;code&gt;&lt;a href=&quot;#type-tar_descriptor&quot;&gt;tar_descriptor()&lt;/a&gt;&lt;/code&gt;) -&amp;gt; ok | {error, term()}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82120cb0a9a3d8267c30e933c49975eabd2bec5a" translate="yes" xml:space="preserve">
          <source>close(Z) -&amp;gt; ok</source>
          <target state="translated">cerrar (Z) -&amp;gt; ok</target>
        </trans-unit>
        <trans-unit id="de32d172d97a570febaf90444529d200bb8c2665" translate="yes" xml:space="preserve">
          <source>close/1 or shutdown/2 returns immediately, not waiting for data to be flushed, with closing happening in the background.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5acf4748fd42be8906381bd274f7cdec9daa2d56" translate="yes" xml:space="preserve">
          <source>close/1 or shutdown/2 will not return until all queued messages for the socket have been successfully sent or the linger timeout (Time) has been reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc736b5bd8bc9b762743d0151a4864048cb75f15" translate="yes" xml:space="preserve">
          <source>close_notify</source>
          <target state="translated">close_notify</target>
        </trans-unit>
        <trans-unit id="3a46caa6c4eb9cce8b01bc14c6acc15e94854358" translate="yes" xml:space="preserve">
          <source>close_session(Client) -&amp;gt; Result</source>
          <target state="translated">close_session (Cliente) -&amp;gt; Resultado</target>
        </trans-unit>
        <trans-unit id="60b85f36b3da2679378993163997137d8779e866" translate="yes" xml:space="preserve">
          <source>close_session(Client, Timeout) -&amp;gt; Result</source>
          <target state="translated">close_session (Cliente, Tiempo de espera) -&amp;gt; Resultado</target>
        </trans-unit>
        <trans-unit id="0fb59cfd759bae1d18e2f72dacb4eb352c8e0b73" translate="yes" xml:space="preserve">
          <source>cmac(Type, Key, Data) -&amp;gt; Mac</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2565752fca25cc0d5672a8f61543284b65706e87" translate="yes" xml:space="preserve">
          <source>cmac(Type, Key, Data, MacLength) -&amp;gt; Mac</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13a86e8221c178650a11dd64a31fa2e5594d1b46" translate="yes" xml:space="preserve">
          <source>cmd(Command) -&amp;gt; string()</source>
          <target state="translated">cmd (comando) -&amp;gt; cadena ()</target>
        </trans-unit>
        <trans-unit id="b5ba6d6ad096e0b05e114431b163b9368f5efcb0" translate="yes" xml:space="preserve">
          <source>cmd(Command, Options) -&amp;gt; string()</source>
          <target state="translated">cmd (comando, opciones) -&amp;gt; cadena ()</target>
        </trans-unit>
        <trans-unit id="76cde058fcf2fea65cdff54b66e764aa168f69d9" translate="yes" xml:space="preserve">
          <source>cmp(Beam1, Beam2) -&amp;gt; ok | {error, beam_lib, cmp_rsn()}</source>
          <target state="translated">cmp (Haz1, Haz2) -&amp;gt; ok | {error, beam_lib, cmp_rsn ()}</target>
        </trans-unit>
        <trans-unit id="a45101c8700b675e33f2e27f291a6dad251aaac2" translate="yes" xml:space="preserve">
          <source>cmp_dirs(Dir1, Dir2) -&amp;gt;</source>
          <target state="translated">cmp_dirs (Dir1, Dir2) -&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e6fb06210fafc02fd7479ddbed2d042cc3a5155e" translate="yes" xml:space="preserve">
          <source>code</source>
          <target state="translated">code</target>
        </trans-unit>
        <trans-unit id="4ca2a21fb83cf707e2de16c66773b4497aa55a47" translate="yes" xml:space="preserve">
          <source>code(3), compile(3)</source>
          <target state="translated">código(3),compilar(3)</target>
        </trans-unit>
        <trans-unit id="6154a1389edd3ab751adb19441ec668fa60c5615" translate="yes" xml:space="preserve">
          <source>collector_pid - undefined.</source>
          <target state="translated">colector_pid-indefinido.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
