<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="phpunit">
    <body>
      <group id="phpunit">
        <trans-unit id="9faae7d97dd101c5c4854c8b4b608d689915ad64" translate="yes" xml:space="preserve">
          <source>&quot;Behind the scenes&quot;, PHPUnit automatically generates a new PHP class that implements the desired behavior when the &lt;code&gt;createMock()&lt;/code&gt; method is used.</source>
          <target state="translated">&quot;Detr&amp;aacute;s de escena&quot;, PHPUnit genera autom&amp;aacute;ticamente una nueva clase PHP que implementa el comportamiento deseado cuando se usa el m&amp;eacute;todo &lt;code&gt;createMock()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0ff50c2d9bad6a19669320fe722ccd4651d7db08" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2005&amp;ndash;2017 Sebastian Bergmann</source>
          <target state="translated">&amp;copy; 2005&amp;ndash;2017 Sebastian Bergmann</target>
        </trans-unit>
        <trans-unit id="2ddc938477d0949800e53719fa87ca04c26764df" translate="yes" xml:space="preserve">
          <source>--Adrian Kuhn et. al.</source>
          <target state="translated">--Adrian Kuhn y col. Alabama.</target>
        </trans-unit>
        <trans-unit id="c05df6c3d27484ddb78ca31cf80cac112e86fc79" translate="yes" xml:space="preserve">
          <source>--Benjamin Smedberg</source>
          <target state="translated">--Benjamin Smedberg</target>
        </trans-unit>
        <trans-unit id="606dd837ef05345781226967e14e5d978286cb6f" translate="yes" xml:space="preserve">
          <source>--Erich Gamma</source>
          <target state="translated">--Erich Gamma</target>
        </trans-unit>
        <trans-unit id="d36c6f933e5fabc86e0071e09f13e781dd9f48c4" translate="yes" xml:space="preserve">
          <source>--Gerard Meszaros</source>
          <target state="translated">--Gerard Meszaros</target>
        </trans-unit>
        <trans-unit id="7e83b9998dcf9952734c55bf24eb54ccb6d1c6ad" translate="yes" xml:space="preserve">
          <source>--Martin Fowler</source>
          <target state="translated">--Martin Fowler</target>
        </trans-unit>
        <trans-unit id="75ce643118d3002dd6d89b954f38210766bbf796" translate="yes" xml:space="preserve">
          <source>--Wikipedia</source>
          <target state="translated">--Wikipedia</target>
        </trans-unit>
        <trans-unit id="9795c52a2fbf529d1c81e157968515d93687b947" translate="yes" xml:space="preserve">
          <source>--bootstrap</source>
          <target state="translated">--bootstrap</target>
        </trans-unit>
        <trans-unit id="be47431f312b6f6d62822dfb8821a043abd67158" translate="yes" xml:space="preserve">
          <source>--colors</source>
          <target state="translated">--colors</target>
        </trans-unit>
        <trans-unit id="5ff4b83cc328130aae35496b4ef5c28dd22f5f3c" translate="yes" xml:space="preserve">
          <source>--columns</source>
          <target state="translated">--columns</target>
        </trans-unit>
        <trans-unit id="6005ec244d89010db1549a3990b5b0f04eae838d" translate="yes" xml:space="preserve">
          <source>--configuration, -c</source>
          <target state="translated">- configuraci&amp;oacute;n, -c</target>
        </trans-unit>
        <trans-unit id="9e8124239e5a73938f915f618ba43b15d38d52e9" translate="yes" xml:space="preserve">
          <source>--coverage-clover</source>
          <target state="translated">--coverage-clover</target>
        </trans-unit>
        <trans-unit id="8bef1dbaa2586a3e3a1522d0dc291e8a396675db" translate="yes" xml:space="preserve">
          <source>--coverage-crap4j</source>
          <target state="translated">--coverage-crap4j</target>
        </trans-unit>
        <trans-unit id="924f757454550180e8c4fe6357fd4f9d97c13799" translate="yes" xml:space="preserve">
          <source>--coverage-html</source>
          <target state="translated">--coverage-html</target>
        </trans-unit>
        <trans-unit id="e70b7a859338d6330b0353d14622d5fe99d544b5" translate="yes" xml:space="preserve">
          <source>--coverage-php</source>
          <target state="translated">--coverage-php</target>
        </trans-unit>
        <trans-unit id="a47f4e9f9f1eb6ce04756c06c47410a80d4516b8" translate="yes" xml:space="preserve">
          <source>--coverage-text</source>
          <target state="translated">--coverage-text</target>
        </trans-unit>
        <trans-unit id="1dd0c962581e2b33496ec055436f8c0f509503a3" translate="yes" xml:space="preserve">
          <source>--debug</source>
          <target state="translated">--debug</target>
        </trans-unit>
        <trans-unit id="7a8e9ccc5cf17a6f91213c98b1bacb6600fbbd84" translate="yes" xml:space="preserve">
          <source>--disallow-test-output</source>
          <target state="translated">--disallow-test-output</target>
        </trans-unit>
        <trans-unit id="58b7a977f2bad3cd51906fd465295b96f6c161a8" translate="yes" xml:space="preserve">
          <source>--disallow-todo-tests</source>
          <target state="translated">--disallow-todo-tests</target>
        </trans-unit>
        <trans-unit id="fec7fae7b7753774415a18f7177ce7cc24928404" translate="yes" xml:space="preserve">
          <source>--enforce-time-limit</source>
          <target state="translated">--enforce-time-limit</target>
        </trans-unit>
        <trans-unit id="0565090c915f8071f7370df31ed6785b83124474" translate="yes" xml:space="preserve">
          <source>--exclude-group</source>
          <target state="translated">--exclude-group</target>
        </trans-unit>
        <trans-unit id="aada6fc7f15481dfefa29579baed612d0ebc6236" translate="yes" xml:space="preserve">
          <source>--filter</source>
          <target state="translated">--filter</target>
        </trans-unit>
        <trans-unit id="6f8e603ca69dbd92335a018a1d44f2b8393b8826" translate="yes" xml:space="preserve">
          <source>--group</source>
          <target state="translated">--group</target>
        </trans-unit>
        <trans-unit id="8db2d08e8ca64eb291c8c566c42da1a5bac7d84a" translate="yes" xml:space="preserve">
          <source>--include-path</source>
          <target state="translated">--include-path</target>
        </trans-unit>
        <trans-unit id="a8365d50cba7bdbab8fffc2a81ed208b7ad2b3d2" translate="yes" xml:space="preserve">
          <source>--list-groups</source>
          <target state="translated">--list-groups</target>
        </trans-unit>
        <trans-unit id="384e088dc75c5f9823bc7b36fe7c58129c3a3afa" translate="yes" xml:space="preserve">
          <source>--loader</source>
          <target state="translated">--loader</target>
        </trans-unit>
        <trans-unit id="eecad2ef381d03482545302946ef52c7c5d2be7a" translate="yes" xml:space="preserve">
          <source>--log-junit</source>
          <target state="translated">--log-junit</target>
        </trans-unit>
        <trans-unit id="5b120092ab1c8d006fff6b4280e071de987b6577" translate="yes" xml:space="preserve">
          <source>--no-configuration</source>
          <target state="translated">--no-configuration</target>
        </trans-unit>
        <trans-unit id="0217a5ed451a9d2ca8c68d01abb67407067b59f4" translate="yes" xml:space="preserve">
          <source>--no-globals-backup</source>
          <target state="translated">--no-globals-backup</target>
        </trans-unit>
        <trans-unit id="323fdcc86c16474d8f2b214619d9f785bc0addd2" translate="yes" xml:space="preserve">
          <source>--printer</source>
          <target state="translated">--printer</target>
        </trans-unit>
        <trans-unit id="fbe3a902b6c2657e7d30f346db846f9aa7f1731b" translate="yes" xml:space="preserve">
          <source>--process-isolation</source>
          <target state="translated">--process-isolation</target>
        </trans-unit>
        <trans-unit id="5013682fd37fc483a899069ddc6fb8362b53f441" translate="yes" xml:space="preserve">
          <source>--repeat</source>
          <target state="translated">--repeat</target>
        </trans-unit>
        <trans-unit id="a2d008c2bd5ffb543ea5b206d28d261e7c33061d" translate="yes" xml:space="preserve">
          <source>--report-useless-tests</source>
          <target state="translated">--report-useless-tests</target>
        </trans-unit>
        <trans-unit id="4c459633968f11521fb11493001615cfefcfd4a5" translate="yes" xml:space="preserve">
          <source>--static-backup</source>
          <target state="translated">--static-backup</target>
        </trans-unit>
        <trans-unit id="920071048f6e061bb0f343e803978da9feecc6f6" translate="yes" xml:space="preserve">
          <source>--stderr</source>
          <target state="translated">--stderr</target>
        </trans-unit>
        <trans-unit id="66d6b3c83fbf51d9a09a16e53cf6f37a619db66d" translate="yes" xml:space="preserve">
          <source>--stop-on-error</source>
          <target state="translated">--stop-on-error</target>
        </trans-unit>
        <trans-unit id="121c88513f2cc6e6d79575274450724ba4e96548" translate="yes" xml:space="preserve">
          <source>--stop-on-failure</source>
          <target state="translated">--stop-on-failure</target>
        </trans-unit>
        <trans-unit id="adf6d769537915389dd2428edff2c7f3bec1b8e3" translate="yes" xml:space="preserve">
          <source>--stop-on-incomplete</source>
          <target state="translated">--stop-on-incomplete</target>
        </trans-unit>
        <trans-unit id="5b7dcff292b08d3abf3bf96a19b04328df360c19" translate="yes" xml:space="preserve">
          <source>--stop-on-risky</source>
          <target state="translated">--stop-on-risky</target>
        </trans-unit>
        <trans-unit id="6eef24d8097a4c9b83a254b32210753e462430dd" translate="yes" xml:space="preserve">
          <source>--stop-on-skipped</source>
          <target state="translated">--stop-on-skipped</target>
        </trans-unit>
        <trans-unit id="4ac0250da2c3bdd27876bd8e80d6116f95cd208e" translate="yes" xml:space="preserve">
          <source>--strict-coverage</source>
          <target state="translated">--strict-coverage</target>
        </trans-unit>
        <trans-unit id="b1a80170653d260fc91fa199d3e2670d9fb9c864" translate="yes" xml:space="preserve">
          <source>--strict-global-state</source>
          <target state="translated">--strict-global-state</target>
        </trans-unit>
        <trans-unit id="5ee130a9f09395a4d77e950fb41695e59d31d11f" translate="yes" xml:space="preserve">
          <source>--test-suffix</source>
          <target state="translated">--test-suffix</target>
        </trans-unit>
        <trans-unit id="ffbdc1eccb9915a8437ee7cfcfcf450b1455389f" translate="yes" xml:space="preserve">
          <source>--testdox</source>
          <target state="translated">--testdox</target>
        </trans-unit>
        <trans-unit id="3d458d01117c3aba6a53b4067e812f2f588e3c61" translate="yes" xml:space="preserve">
          <source>--testdox-html and --testdox-text</source>
          <target state="translated">--testdox-html y --testdox-text</target>
        </trans-unit>
        <trans-unit id="bef553f4df8c136a10975bb7362c5b76e520bfcc" translate="yes" xml:space="preserve">
          <source>--testsuite</source>
          <target state="translated">--testsuite</target>
        </trans-unit>
        <trans-unit id="f2860556708260c3603c4f244db1aa03e85301b6" translate="yes" xml:space="preserve">
          <source>--verbose</source>
          <target state="translated">--verbose</target>
        </trans-unit>
        <trans-unit id="d5537351313df4188977a7d2a773daedb94d0b26" translate="yes" xml:space="preserve">
          <source>-d</source>
          <target state="translated">-d</target>
        </trans-unit>
        <trans-unit id="58558703177c4b63101d579b915d993032b51522" translate="yes" xml:space="preserve">
          <source>/path/to/my/test.phpt</source>
          <target state="translated">/path/to/my/test.phpt</target>
        </trans-unit>
        <trans-unit id="ffce6937e131ab5346767169dd1cf44aa53c4e30" translate="yes" xml:space="preserve">
          <source>1. Clean-Up Database</source>
          <target state="translated">1.Base de datos de limpieza</target>
        </trans-unit>
        <trans-unit id="7ba0bee3b45c15523f0f6483f69b2998f367f2a5" translate="yes" xml:space="preserve">
          <source>2. Set up fixture</source>
          <target state="translated">2.Establecer el equipo...</target>
        </trans-unit>
        <trans-unit id="7aad82d0481f6e0ec683b2def96e4f8730efac53" translate="yes" xml:space="preserve">
          <source>3&amp;ndash;5. Run Test, Verify outcome and Teardown</source>
          <target state="translated">3-5. Ejecutar prueba, verificar resultado y desmontaje</target>
        </trans-unit>
        <trans-unit id="400bead44abe445625fb9e120cc82ddba25b1794" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;appendixes.annotations#appendixes.annotations.covers.tables.annotations&quot;&gt;Table B.1&lt;/a&gt; shows the syntax of the &lt;code&gt;@covers&lt;/code&gt; annotation.</source>
          <target state="translated">&lt;a href=&quot;appendixes.annotations#appendixes.annotations.covers.tables.annotations&quot;&gt;La Tabla B.1&lt;/a&gt; muestra la sintaxis de la anotaci&amp;oacute;n &lt;code&gt;@covers&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="96b99aea2b8f4159d96dccf7c334a91fe38bb117" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;appendixes.assertions#appendixes.assertions.assertThat.tables.constraints&quot;&gt;Table A.1&lt;/a&gt; shows the available &lt;code&gt;PHPUnit_Framework_Constraint&lt;/code&gt; classes.</source>
          <target state="translated">&lt;a href=&quot;appendixes.assertions#appendixes.assertions.assertThat.tables.constraints&quot;&gt;La Tabla A.1&lt;/a&gt; muestra las clases &lt;code&gt;PHPUnit_Framework_Constraint&lt;/code&gt; disponibles .</target>
        </trans-unit>
        <trans-unit id="9949a159fde58347b713cb0c24400bde07d9b99e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;appendixes.assertions#appendixes.assertions.assertThat.tables.constraints&quot;&gt;Table A.1&lt;/a&gt; shows the constraints that can be applied to method arguments and &lt;a href=&quot;test-doubles#test-doubles.mock-objects.tables.matchers&quot;&gt;Table 9.1&lt;/a&gt; shows the matchers that are available to specify the number of invocations.</source>
          <target state="translated">&lt;a href=&quot;appendixes.assertions#appendixes.assertions.assertThat.tables.constraints&quot;&gt;La Tabla A.1&lt;/a&gt; muestra las restricciones que se pueden aplicar a los argumentos del m&amp;eacute;todo y la &lt;a href=&quot;test-doubles#test-doubles.mock-objects.tables.matchers&quot;&gt;Tabla 9.1&lt;/a&gt; muestra los emparejadores que est&amp;aacute;n disponibles para especificar el n&amp;uacute;mero de invocaciones.</target>
        </trans-unit>
        <trans-unit id="9ba52a5e798bbf3762fa09b4a6224533185f103e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;extending-phpunit#extending-phpunit.examples.BaseTestListener.php&quot;&gt;Example 14.4&lt;/a&gt; shows how to subclass the &lt;code&gt;PHPUnit_Framework_BaseTestListener&lt;/code&gt; abstract class, which lets you specify only the interface methods that are interesting for your use case, while providing empty implementations for all the others.</source>
          <target state="translated">&lt;a href=&quot;extending-phpunit#extending-phpunit.examples.BaseTestListener.php&quot;&gt;El ejemplo 14.4&lt;/a&gt; muestra c&amp;oacute;mo subclasificar la clase abstracta &lt;code&gt;PHPUnit_Framework_BaseTestListener&lt;/code&gt; , que le permite especificar solo los m&amp;eacute;todos de interfaz que son interesantes para su caso de uso, mientras proporciona implementaciones vac&amp;iacute;as para todos los dem&amp;aacute;s.</target>
        </trans-unit>
        <trans-unit id="0df2507ee06827206bc891bcb7276bce87da0aa6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;extending-phpunit#extending-phpunit.examples.DataDrivenTest.php&quot;&gt;Example 14.6&lt;/a&gt; shows a data-driven test case class that compares values from a file with Comma-Separated Values (CSV). Each line of such a file looks like &lt;code&gt;foo;bar&lt;/code&gt;, where the first value is the one we expect and the second value is the actual one.</source>
          <target state="translated">&lt;a href=&quot;extending-phpunit#extending-phpunit.examples.DataDrivenTest.php&quot;&gt;El ejemplo 14.6&lt;/a&gt; muestra una clase de caso de prueba basada en datos que compara valores de un archivo con valores separados por comas (CSV). Cada l&amp;iacute;nea de dicho archivo se parece a &lt;code&gt;foo;bar&lt;/code&gt; , donde el primer valor es el que esperamos y el segundo valor es el real.</target>
        </trans-unit>
        <trans-unit id="1a3ad1f9bee117a90baf475798b6c4c3e2bc8629" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;extending-phpunit#extending-phpunit.examples.IsTrue.php&quot;&gt;Example 14.2&lt;/a&gt; shows how &lt;code&gt;PHPUnit_Framework_Constraint_IsTrue&lt;/code&gt; extends the abstract base class for matcher objects (or constraints), &lt;code&gt;PHPUnit_Framework_Constraint&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;extending-phpunit#extending-phpunit.examples.IsTrue.php&quot;&gt;El ejemplo 14.2&lt;/a&gt; muestra c&amp;oacute;mo &lt;code&gt;PHPUnit_Framework_Constraint_IsTrue&lt;/code&gt; extiende la clase base abstracta para los objetos de comparaci&amp;oacute;n (o restricciones), &lt;code&gt;PHPUnit_Framework_Constraint&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f9f7e9327c5ce728de8a6a032b634bd961a9686" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;extending-phpunit#extending-phpunit.examples.RepeatedTest.php&quot;&gt;Example 14.5&lt;/a&gt; shows a cut-down version of the &lt;code&gt;PHPUnit_Extensions_RepeatedTest&lt;/code&gt; test decorator that illustrates how to write your own test decorators.</source>
          <target state="translated">&lt;a href=&quot;extending-phpunit#extending-phpunit.examples.RepeatedTest.php&quot;&gt;El ejemplo 14.5&lt;/a&gt; muestra una versi&amp;oacute;n &lt;code&gt;PHPUnit_Extensions_RepeatedTest&lt;/code&gt; decorador de prueba PHPUnit_Extensions_RepeatedTest que ilustra c&amp;oacute;mo escribir sus propios decoradores de prueba.</target>
        </trans-unit>
        <trans-unit id="701445c885626a9ec7f22372c6954721fa1e2093" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;extending-phpunit#extending-phpunit.examples.SimpleTestListener.php&quot;&gt;Example 14.3&lt;/a&gt; shows a simple implementation of the &lt;code&gt;PHPUnit\Framework\TestListener&lt;/code&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;extending-phpunit#extending-phpunit.examples.SimpleTestListener.php&quot;&gt;El ejemplo 14.3&lt;/a&gt; muestra una implementaci&amp;oacute;n simple de la interfaz &lt;code&gt;PHPUnit\Framework\TestListener&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1eef8f9d75c4c39951ce80221bfb0c1dcccbca89" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fixtures#fixtures.sharing-fixture.examples.DatabaseTest.php&quot;&gt;Example 4.3&lt;/a&gt; uses the &lt;code&gt;setUpBeforeClass()&lt;/code&gt; and &lt;code&gt;tearDownAfterClass()&lt;/code&gt; template methods to connect to the database before the test case class' first test and to disconnect from the database after the last test of the test case, respectively.</source>
          <target state="translated">&lt;a href=&quot;fixtures#fixtures.sharing-fixture.examples.DatabaseTest.php&quot;&gt;El ejemplo 4.3&lt;/a&gt; usa los m&amp;eacute;todos de plantilla &lt;code&gt;setUpBeforeClass()&lt;/code&gt; y &lt;code&gt;tearDownAfterClass()&lt;/code&gt; para conectarse a la base de datos antes de la primera prueba de la clase de caso de prueba y para desconectarse de la base de datos despu&amp;eacute;s de la &amp;uacute;ltima prueba del caso de prueba, respectivamente.</target>
        </trans-unit>
        <trans-unit id="86336897eaca88febd7550b5fabd5bc39dfd8811" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://googletesting.blogspot.com/2008/05/tott-using-dependancy-injection-to.html&quot;&gt;It is hard to test code that uses singletons.&lt;/a&gt; The same is true for code that uses global variables. Typically, the code you want to test is coupled strongly with a global variable and you cannot control its creation. An additional problem is the fact that one test's change to a global variable might break another test.</source>
          <target state="translated">&lt;a href=&quot;http://googletesting.blogspot.com/2008/05/tott-using-dependancy-injection-to.html&quot;&gt;Es dif&amp;iacute;cil probar el c&amp;oacute;digo que usa singletons. &lt;/a&gt;Lo mismo ocurre con el c&amp;oacute;digo que utiliza variables globales. Normalmente, el c&amp;oacute;digo que desea probar est&amp;aacute; fuertemente acoplado con una variable global y no puede controlar su creaci&amp;oacute;n. Un problema adicional es el hecho de que el cambio de una prueba a una variable global podr&amp;iacute;a romper otra prueba.</target>
        </trans-unit>
        <trans-unit id="9bb623e1edf9e0b385958e60c2f4efef5c9b37a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.doctrine-project.org&quot;&gt;Doctrine 2&lt;/a&gt; or &lt;a href=&quot;http://www.ezcomponents.org&quot;&gt;eZ Components&lt;/a&gt; have powerful tools that allow you to create the database schema from pre-defined datastructures. However, these have to be hooked into the PHPUnit extension to allow an automatic database re-creation before the complete test-suite is run.</source>
          <target state="translated">&lt;a href=&quot;http://www.doctrine-project.org&quot;&gt;Doctrine 2&lt;/a&gt; o &lt;a href=&quot;http://www.ezcomponents.org&quot;&gt;eZ Components&lt;/a&gt; tienen herramientas poderosas que le permiten crear el esquema de la base de datos a partir de estructuras de datos predefinidas. Sin embargo, estos deben estar conectados a la extensi&amp;oacute;n PHPUnit para permitir una recreaci&amp;oacute;n autom&amp;aacute;tica de la base de datos antes de que se ejecute el conjunto de pruebas completo.</target>
        </trans-unit>
        <trans-unit id="2132bb8453bef97cac038b235074aef42ad6b6c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/mikey179/vfsStream&quot;&gt;vfsStream&lt;/a&gt; is a &lt;a href=&quot;http://www.php.net/streams&quot;&gt;stream wrapper&lt;/a&gt; for a &lt;a href=&quot;http://en.wikipedia.org/wiki/Virtual_file_system&quot;&gt;virtual filesystem&lt;/a&gt; that may be helpful in unit tests to mock the real filesystem.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/mikey179/vfsStream&quot;&gt;vfsStream&lt;/a&gt; es un &lt;a href=&quot;http://www.php.net/streams&quot;&gt;contenedor de flujo&lt;/a&gt; para un &lt;a href=&quot;http://en.wikipedia.org/wiki/Virtual_file_system&quot;&gt;sistema de archivos virtual&lt;/a&gt; que puede ser &amp;uacute;til en pruebas unitarias para simular el sistema de archivos real.</target>
        </trans-unit>
        <trans-unit id="63fbd44146f7be0cdd87a45688f44659aa82d4d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/phpspec/prophecy&quot;&gt;Prophecy&lt;/a&gt; is a &quot;highly opinionated yet very powerful and flexible PHP object mocking framework. Though initially it was created to fulfil phpspec2 needs, it is flexible enough to be used inside any testing framework out there with minimal effort&quot;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/phpspec/prophecy&quot;&gt;Prophecy&lt;/a&gt; es un &quot;framework de simulaci&amp;oacute;n de objetos PHP altamente obstinado pero muy poderoso y flexible. Aunque inicialmente fue creado para satisfacer las necesidades de phpspec2, es lo suficientemente flexible como para ser utilizado dentro de cualquier framework de pruebas con un m&amp;iacute;nimo esfuerzo&quot;.</target>
        </trans-unit>
        <trans-unit id="2d245a824da804374ae99dd6339be7c84a371074" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;incomplete-and-skipped-tests#incomplete-and-skipped-tests.incomplete-tests.examples.SampleTest.php&quot;&gt;Example 7.1&lt;/a&gt; shows a test case class, &lt;code&gt;SampleTest&lt;/code&gt;, that contains one test method, &lt;code&gt;testSomething()&lt;/code&gt;. By calling the convenience method &lt;code&gt;markTestIncomplete()&lt;/code&gt; (which automatically raises an &lt;code&gt;PHPUnit_Framework_IncompleteTestError&lt;/code&gt; exception) in the test method, we mark the test as being incomplete.</source>
          <target state="translated">&lt;a href=&quot;incomplete-and-skipped-tests#incomplete-and-skipped-tests.incomplete-tests.examples.SampleTest.php&quot;&gt;El ejemplo 7.1&lt;/a&gt; muestra una clase de caso de prueba, &lt;code&gt;SampleTest&lt;/code&gt; , que contiene un m&amp;eacute;todo de prueba, &lt;code&gt;testSomething()&lt;/code&gt; . Al llamar al m&amp;eacute;todo de conveniencia &lt;code&gt;markTestIncomplete()&lt;/code&gt; (que genera autom&amp;aacute;ticamente una excepci&amp;oacute;n &lt;code&gt;PHPUnit_Framework_IncompleteTestError&lt;/code&gt; ) en el m&amp;eacute;todo de prueba, marcamos la prueba como incompleta.</target>
        </trans-unit>
        <trans-unit id="e1826ba7ad67aff343a5faebb33c2d11a0bdac0a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;incomplete-and-skipped-tests#incomplete-and-skipped-tests.incomplete-tests.tables.api&quot;&gt;Table 7.1&lt;/a&gt; shows the API for marking tests as incomplete.</source>
          <target state="translated">&lt;a href=&quot;incomplete-and-skipped-tests#incomplete-and-skipped-tests.incomplete-tests.tables.api&quot;&gt;La Tabla 7.1&lt;/a&gt; muestra la API para calificar pruebas como incompletas.</target>
        </trans-unit>
        <trans-unit id="7d28b22b87435b82016377e72a600e1635d51ec9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;incomplete-and-skipped-tests#incomplete-and-skipped-tests.skipped-tests.tables.api&quot;&gt;Table 7.2&lt;/a&gt; shows the API for skipping tests.</source>
          <target state="translated">&lt;a href=&quot;incomplete-and-skipped-tests#incomplete-and-skipped-tests.skipped-tests.tables.api&quot;&gt;La Tabla 7.2&lt;/a&gt; muestra la API para omitir pruebas.</target>
        </trans-unit>
        <trans-unit id="d201a110ac700dfc5f308da8a1e8ae0633a211c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;incomplete-and-skipped-tests#incomplete-and-skipped-tests.skipping-tests.examples.DatabaseTest.php&quot;&gt;Example 7.2&lt;/a&gt; shows a test case class, &lt;code&gt;DatabaseTest&lt;/code&gt;, that contains one test method, &lt;code&gt;testConnection()&lt;/code&gt;. In the test case class' &lt;code&gt;setUp()&lt;/code&gt; template method we check whether the MySQLi extension is available and use the &lt;code&gt;markTestSkipped()&lt;/code&gt; method to skip the test if it is not.</source>
          <target state="translated">&lt;a href=&quot;incomplete-and-skipped-tests#incomplete-and-skipped-tests.skipping-tests.examples.DatabaseTest.php&quot;&gt;El ejemplo 7.2&lt;/a&gt; muestra una clase de caso de prueba, &lt;code&gt;DatabaseTest&lt;/code&gt; , que contiene un m&amp;eacute;todo de prueba, &lt;code&gt;testConnection()&lt;/code&gt; . En el m&amp;eacute;todo de plantilla &lt;code&gt;setUp()&lt;/code&gt; clase de caso de prueba , verificamos si la extensi&amp;oacute;n MySQLi est&amp;aacute; disponible y usamos el m&amp;eacute;todo &lt;code&gt;markTestSkipped()&lt;/code&gt; para omitir la prueba si no lo est&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="c278bd42534e6f3761c4fb83d65f18b57516d69f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;test-doubles#test-doubles.mock-objects.examples.SubjectTest.php&quot;&gt;Example 9.11&lt;/a&gt; shows how to use a mock object to test the interaction between &lt;code&gt;Subject&lt;/code&gt; and &lt;code&gt;Observer&lt;/code&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;test-doubles#test-doubles.mock-objects.examples.SubjectTest.php&quot;&gt;El ejemplo 9.11&lt;/a&gt; muestra c&amp;oacute;mo usar un objeto simulado para probar la interacci&amp;oacute;n entre los objetos &lt;code&gt;Subject&lt;/code&gt; y &lt;code&gt;Observer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9f5e6b01ac27f3606c3512b1b0134558a0afa53c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;test-doubles#test-doubles.mocking-the-filesystem.examples.Example.php&quot;&gt;Example 9.21&lt;/a&gt; shows a class that interacts with the filesystem.</source>
          <target state="translated">&lt;a href=&quot;test-doubles#test-doubles.mocking-the-filesystem.examples.Example.php&quot;&gt;El ejemplo 9.21&lt;/a&gt; muestra una clase que interact&amp;uacute;a con el sistema de archivos.</target>
        </trans-unit>
        <trans-unit id="d1bd895ee7e2bd6f88fd27735788cb0161b36b4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;test-doubles#test-doubles.mocking-the-filesystem.examples.ExampleTest2.php&quot;&gt;Example 9.23&lt;/a&gt; shows how vfsStream can be used to mock the filesystem in a test for a class that interacts with the filesystem.</source>
          <target state="translated">&lt;a href=&quot;test-doubles#test-doubles.mocking-the-filesystem.examples.ExampleTest2.php&quot;&gt;El ejemplo 9.23&lt;/a&gt; muestra c&amp;oacute;mo se puede usar vfsStream para simular el sistema de archivos en una prueba para una clase que interact&amp;uacute;a con el sistema de archivos.</target>
        </trans-unit>
        <trans-unit id="726c00627ea79327903a64f70862a4c154732aca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;test-doubles#test-doubles.stubbing-and-mocking-web-services.examples.GoogleTest.php&quot;&gt;Example 9.20&lt;/a&gt; shows how &lt;code&gt;getMockFromWsdl()&lt;/code&gt; can be used to stub, for example, the web service described in &lt;code&gt;GoogleSearch.wsdl&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;test-doubles#test-doubles.stubbing-and-mocking-web-services.examples.GoogleTest.php&quot;&gt;El ejemplo 9.20&lt;/a&gt; muestra c&amp;oacute;mo &lt;code&gt;getMockFromWsdl()&lt;/code&gt; se puede utilizar para stub, por ejemplo, el servicio web descrito en &lt;code&gt;GoogleSearch.wsdl&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fe2599f429265ec1f48e01bff9b3997f782265ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;test-doubles#test-doubles.stubs.examples.StubTest.php&quot;&gt;Example 9.2&lt;/a&gt; shows how to stub method calls and set up return values. We first use the &lt;code&gt;createMock()&lt;/code&gt; method that is provided by the &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt; class to set up a stub object that looks like an object of &lt;code&gt;SomeClass&lt;/code&gt; (&lt;a href=&quot;test-doubles#test-doubles.stubs.examples.SomeClass.php&quot;&gt;Example 9.1&lt;/a&gt;). We then use the &lt;a href=&quot;http://martinfowler.com/bliki/FluentInterface.html&quot;&gt;Fluent Interface&lt;/a&gt; that PHPUnit provides to specify the behavior for the stub. In essence, this means that you do not need to create several temporary objects and wire them together afterwards. Instead, you chain method calls as shown in the example. This leads to more readable and &quot;fluent&quot; code.</source>
          <target state="translated">&lt;a href=&quot;test-doubles#test-doubles.stubs.examples.StubTest.php&quot;&gt;El ejemplo 9.2&lt;/a&gt; muestra c&amp;oacute;mo stub llamadas a m&amp;eacute;todos y configurar valores de retorno. Primero usamos el m&amp;eacute;todo &lt;code&gt;createMock()&lt;/code&gt; proporcionado por la clase &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt; para configurar un objeto stub que parece un objeto de &lt;code&gt;SomeClass&lt;/code&gt; ( &lt;a href=&quot;test-doubles#test-doubles.stubs.examples.SomeClass.php&quot;&gt;Ejemplo 9.1&lt;/a&gt; ). Luego usamos la &lt;a href=&quot;http://martinfowler.com/bliki/FluentInterface.html&quot;&gt;interfaz fluida&lt;/a&gt; que proporciona PHPUnit para especificar el comportamiento del stub. En esencia, esto significa que no es necesario crear varios objetos temporales y conectarlos despu&amp;eacute;s. En su lugar, encadena las llamadas a m&amp;eacute;todos como se muestra en el ejemplo. Esto conduce a un c&amp;oacute;digo m&amp;aacute;s legible y &quot;fluido&quot;.</target>
        </trans-unit>
        <trans-unit id="fdec3d27a3fec8bb29afbc225b2b3f26d37fdad2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;test-doubles#test-doubles.stubs.examples.StubTest2.php&quot;&gt;Example 9.3&lt;/a&gt; shows an example of how to use the Mock Builder's fluent interface to configure the creation of the test double. The configuration of this test double uses the same best practice defaults used by &lt;code&gt;createMock()&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;test-doubles#test-doubles.stubs.examples.StubTest2.php&quot;&gt;El ejemplo 9.3&lt;/a&gt; muestra un ejemplo de c&amp;oacute;mo usar la interfaz fluida del Mock Builder para configurar la creaci&amp;oacute;n del doble de prueba. La configuraci&amp;oacute;n de este doble de prueba utiliza los mismos valores predeterminados de mejores pr&amp;aacute;cticas utilizados por &lt;code&gt;createMock()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f0fdd7bb5f13f0c494d1d907e04f44612ea555be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.examples.StackTest.php&quot;&gt;Example 2.1&lt;/a&gt; shows how we can write tests using PHPUnit that exercise PHP's array operations. The example introduces the basic conventions and steps for writing tests with PHPUnit:</source>
          <target state="translated">&lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.examples.StackTest.php&quot;&gt;El ejemplo 2.1&lt;/a&gt; muestra c&amp;oacute;mo podemos escribir pruebas usando PHPUnit que ejercitan las operaciones de matriz de PHP. El ejemplo presenta las convenciones y los pasos b&amp;aacute;sicos para escribir pruebas con PHPUnit:</target>
        </trans-unit>
        <trans-unit id="359ad03cd33ea3f0237215f3237a0d28f3ed3d0a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.examples.StackTest2.php&quot;&gt;Example 2.2&lt;/a&gt; shows how to use the &lt;code&gt;@depends&lt;/code&gt; annotation to express dependencies between test methods.</source>
          <target state="translated">&lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.examples.StackTest2.php&quot;&gt;El ejemplo 2.2&lt;/a&gt; muestra c&amp;oacute;mo usar la anotaci&amp;oacute;n &lt;code&gt;@depends&lt;/code&gt; para expresar dependencias entre m&amp;eacute;todos de prueba.</target>
        </trans-unit>
        <trans-unit id="4ab799e7a2b4e63b7aa3b29b7e55e0547b74eb53" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.exceptions.examples.ExceptionTest.php&quot;&gt;Example 2.10&lt;/a&gt; shows how to use the &lt;code&gt;@expectedException&lt;/code&gt; annotation to test whether an exception is thrown inside the tested code.</source>
          <target state="translated">&lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.exceptions.examples.ExceptionTest.php&quot;&gt;El ejemplo 2.10&lt;/a&gt; muestra c&amp;oacute;mo usar la anotaci&amp;oacute;n &lt;code&gt;@expectedException&lt;/code&gt; para probar si se lanza una excepci&amp;oacute;n dentro del c&amp;oacute;digo probado.</target>
        </trans-unit>
        <trans-unit id="3db03ff4f91d80905689b39bb4fc989d8442106b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.exceptions.examples.ExceptionTest.php&quot;&gt;Example 2.10&lt;/a&gt; shows how to use the &lt;code&gt;expectException()&lt;/code&gt; method to test whether an exception is thrown by the code under test.</source>
          <target state="translated">&lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.exceptions.examples.ExceptionTest.php&quot;&gt;El ejemplo 2.10&lt;/a&gt; muestra c&amp;oacute;mo usar el m&amp;eacute;todo &lt;code&gt;expectException()&lt;/code&gt; para probar si el c&amp;oacute;digo bajo prueba lanza una excepci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="e51cfb5b7b55d680fe69e0d95d4bfc08247a9251" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.output.examples.OutputTest.php&quot;&gt;Example 2.14&lt;/a&gt; shows how to use the &lt;code&gt;expectOutputString()&lt;/code&gt; method to set the expected output. If this expected output is not generated, the test will be counted as a failure.</source>
          <target state="translated">&lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.output.examples.OutputTest.php&quot;&gt;El ejemplo 2.14&lt;/a&gt; muestra c&amp;oacute;mo usar el m&amp;eacute;todo &lt;code&gt;expectOutputString()&lt;/code&gt; para establecer la salida esperada. Si no se genera esta salida esperada, la prueba se contar&amp;aacute; como una falla.</target>
        </trans-unit>
        <trans-unit id="134bf484e4328e79b0968392690a79c166c2804d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.output.tables.api&quot;&gt;Table 2.1&lt;/a&gt; shows the methods provided for testing output</source>
          <target state="translated">&lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.output.tables.api&quot;&gt;La Tabla 2.1&lt;/a&gt; muestra los m&amp;eacute;todos proporcionados para probar los resultados.</target>
        </trans-unit>
        <trans-unit id="eb230f1e3a75c3c7d52f3cbd795e62ab7dc807a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$isNativeType&lt;/code&gt; is a flag used to indicate whether &lt;code&gt;$type&lt;/code&gt; is a native PHP type or not.</source>
          <target state="translated">&lt;code&gt;$isNativeType&lt;/code&gt; es una bandera que se usa para indicar si &lt;code&gt;$type&lt;/code&gt; es un tipo PHP nativo o no.</target>
        </trans-unit>
        <trans-unit id="985752e98e8ebfa1c25bb9f1c27f0b2e2a9f7fed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$strict&lt;/code&gt; is a flag used to compare the identity of objects within arrays.</source>
          <target state="translated">&lt;code&gt;$strict&lt;/code&gt; es una bandera que se usa para comparar la identidad de los objetos dentro de las matrices.</target>
        </trans-unit>
        <trans-unit id="9a7055c0e1b2e715a5c4635ee5f8d7d07eb6f964" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%A&lt;/code&gt;: Zero or more of anything (character or white space) including the end of line character.</source>
          <target state="translated">&lt;code&gt;%A&lt;/code&gt; : Cero o m&amp;aacute;s de cualquier cosa (car&amp;aacute;cter o espacio en blanco) incluido el car&amp;aacute;cter de final de l&amp;iacute;nea.</target>
        </trans-unit>
        <trans-unit id="e1bfb206b34ee37df38fdb749aaf435d92ce032f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%S&lt;/code&gt;: Zero or more of anything (character or white space) except the end of line character.</source>
          <target state="translated">&lt;code&gt;%S&lt;/code&gt; : Cero o m&amp;aacute;s de cualquier cosa (car&amp;aacute;cter o espacio en blanco) excepto el car&amp;aacute;cter de final de l&amp;iacute;nea.</target>
        </trans-unit>
        <trans-unit id="be3ae59d595f914251b1af954bd09e132e6903c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%a&lt;/code&gt;: One or more of anything (character or white space) including the end of line character.</source>
          <target state="translated">&lt;code&gt;%a&lt;/code&gt; : Uno o m&amp;aacute;s de cualquier cosa (car&amp;aacute;cter o espacio en blanco) incluido el car&amp;aacute;cter de final de l&amp;iacute;nea.</target>
        </trans-unit>
        <trans-unit id="c206735814f18cab60142f65517a50ab64445369" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%c&lt;/code&gt;: A single character of any sort.</source>
          <target state="translated">&lt;code&gt;%c&lt;/code&gt; : un solo car&amp;aacute;cter de cualquier tipo.</target>
        </trans-unit>
        <trans-unit id="3a2904925b315905ca693c6969cc8a858e26dc8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%d&lt;/code&gt;: An unsigned integer value, for example &lt;code&gt;123456&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;%d&lt;/code&gt; : un valor entero sin signo, por ejemplo &lt;code&gt;123456&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="903ddf94e3e1018a58899d7bc47e040cbdc5b4ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%e&lt;/code&gt;: Represents a directory separator, for example &lt;code&gt;/&lt;/code&gt; on Linux.</source>
          <target state="translated">&lt;code&gt;%e&lt;/code&gt; : representa un separador de directorio, por ejemplo &lt;code&gt;/&lt;/code&gt; en Linux.</target>
        </trans-unit>
        <trans-unit id="39776cad8c4c047484fbad07339d3ca76206a327" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%f&lt;/code&gt;: A floating point number, for example: &lt;code&gt;3.142&lt;/code&gt;, &lt;code&gt;-3.142&lt;/code&gt;, &lt;code&gt;3.142E-10&lt;/code&gt;, &lt;code&gt;3.142e+10&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;%f&lt;/code&gt; : un n&amp;uacute;mero de punto flotante, por ejemplo: &lt;code&gt;3.142&lt;/code&gt; , &lt;code&gt;-3.142&lt;/code&gt; , &lt;code&gt;3.142E-10&lt;/code&gt; , &lt;code&gt;3.142e+10&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="325fbfdf57e039539f65f261ea12e6f03f67e915" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%i&lt;/code&gt;: A signed integer value, for example &lt;code&gt;+3142&lt;/code&gt;, &lt;code&gt;-3142&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;%i&lt;/code&gt; : un valor entero con signo, por ejemplo &lt;code&gt;+3142&lt;/code&gt; , &lt;code&gt;-3142&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9a25ea68137637e4f05cba3e9b87822f1a2b9f0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%s&lt;/code&gt;: One or more of anything (character or white space) except the end of line character.</source>
          <target state="translated">&lt;code&gt;%s&lt;/code&gt; : uno o m&amp;aacute;s de cualquier cosa (car&amp;aacute;cter o espacio en blanco) excepto el car&amp;aacute;cter de final de l&amp;iacute;nea.</target>
        </trans-unit>
        <trans-unit id="b32c295e30c2d2d5506f0da5a7b0a9556a195a0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%w&lt;/code&gt;: Zero or more white space characters.</source>
          <target state="translated">&lt;code&gt;%w&lt;/code&gt; : cero o m&amp;aacute;s caracteres de espacio en blanco.</target>
        </trans-unit>
        <trans-unit id="9a5509a69f7a8c04ca77a3a4ec92a36fc1c544e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%x&lt;/code&gt;: One or more hexadecimal character. That is, characters in the range &lt;code&gt;0-9&lt;/code&gt;, &lt;code&gt;a-f&lt;/code&gt;, &lt;code&gt;A-F&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;%x&lt;/code&gt; : uno o m&amp;aacute;s caracteres hexadecimales. Es decir, caracteres en el rango &lt;code&gt;0-9&lt;/code&gt; , &lt;code&gt;a-f&lt;/code&gt; , &lt;code&gt;A-F&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="10782fd661980bc9ce314f87356cde3c69b7d6e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;@backupStaticAttributes&lt;/code&gt; is limited by PHP internals and may cause unintended static values to persist and leak into subsequent tests in some circumstances.</source>
          <target state="translated">&lt;code&gt;@backupStaticAttributes&lt;/code&gt; est&amp;aacute; limitado por los componentes internos de PHP y puede hacer que los valores est&amp;aacute;ticos no deseados persistan y se filtren en pruebas posteriores en algunas circunstancias.</target>
        </trans-unit>
        <trans-unit id="a46e030ab26fc956072ba38ba2880bbfa69ed07c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ClassTest&lt;/code&gt; inherits (most of the time) from &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ClassTest&lt;/code&gt; hereda (la mayor&amp;iacute;a de las veces) de &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9b14a7c551535274e88626822ef803f739244731" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PHPUnit\Framework\Error\Notice&lt;/code&gt; and &lt;code&gt;PHPUnit\Framework\Error\Warning&lt;/code&gt; represent PHP notices and warnings, respectively.</source>
          <target state="translated">&lt;code&gt;PHPUnit\Framework\Error\Notice&lt;/code&gt; y &lt;code&gt;PHPUnit\Framework\Error\Warning&lt;/code&gt; representan avisos y advertencias de PHP, respectivamente.</target>
        </trans-unit>
        <trans-unit id="1c05893ecd2cc5c581315b0349cb385d0014ef56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UnitTest&lt;/code&gt; must be either a class that inherits from &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt; or a class that provides a &lt;code&gt;public static suite()&lt;/code&gt; method which returns a &lt;code&gt;PHPUnit_Framework_Test&lt;/code&gt; object, for example an instance of the &lt;code&gt;PHPUnit_Framework_TestSuite&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;UnitTest&lt;/code&gt; debe ser una clase que herede de &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt; o una clase que proporcione un m&amp;eacute;todo &lt;code&gt;public static suite()&lt;/code&gt; que devuelva un objeto &lt;code&gt;PHPUnit_Framework_Test&lt;/code&gt; , por ejemplo, una instancia de la clase &lt;code&gt;PHPUnit_Framework_TestSuite&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3f35cd18864425486ede52e8fbfffc78b8b5bbe6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;always&lt;/code&gt;: always displays colors in the output even when the current terminal doesn't supports colors, or when the output is piped to a command or redirected to a file.</source>
          <target state="translated">&lt;code&gt;always&lt;/code&gt; : siempre muestra colores en la salida incluso cuando el terminal actual no admite colores, o cuando la salida se canaliza a un comando o se redirige a un archivo.</target>
        </trans-unit>
        <trans-unit id="8e10801b97ea178ffe9ebc40f83f7426b259b0d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertArrayNotHasKey()&lt;/code&gt; is the inverse of this assertion and takes the same arguments.</source>
          <target state="translated">&lt;code&gt;assertArrayNotHasKey()&lt;/code&gt; es el inverso de esta aserci&amp;oacute;n y toma los mismos argumentos.</target>
        </trans-unit>
        <trans-unit id="3182610acb9ad1518997f10e1437ad08ce458865" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertAttributeContains()&lt;/code&gt; and &lt;code&gt;assertAttributeNotContains()&lt;/code&gt; are convenience wrappers that use a &lt;code&gt;public&lt;/code&gt;, &lt;code&gt;protected&lt;/code&gt;, or &lt;code&gt;private&lt;/code&gt; attribute of a class or object as the haystack.</source>
          <target state="translated">&lt;code&gt;assertAttributeContains()&lt;/code&gt; y &lt;code&gt;assertAttributeNotContains()&lt;/code&gt; son envoltorios de conveniencia que usan un atributo &lt;code&gt;public&lt;/code&gt; , &lt;code&gt;protected&lt;/code&gt; o &lt;code&gt;private&lt;/code&gt; de una clase u objeto como el pajar.</target>
        </trans-unit>
        <trans-unit id="7cd76ed554f63a3a5ee3ef21e29e6b2999050da6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertAttributeContainsOnly()&lt;/code&gt; and &lt;code&gt;assertAttributeNotContainsOnly()&lt;/code&gt; are convenience wrappers that use a &lt;code&gt;public&lt;/code&gt;, &lt;code&gt;protected&lt;/code&gt;, or &lt;code&gt;private&lt;/code&gt; attribute of a class or object as the haystack.</source>
          <target state="translated">&lt;code&gt;assertAttributeContainsOnly()&lt;/code&gt; y &lt;code&gt;assertAttributeNotContainsOnly()&lt;/code&gt; son envoltorios de conveniencia que usan un atributo &lt;code&gt;public&lt;/code&gt; , &lt;code&gt;protected&lt;/code&gt; o &lt;code&gt;private&lt;/code&gt; de una clase u objeto como el pajar.</target>
        </trans-unit>
        <trans-unit id="e8b505c9ec62b2cf97e603bf91fe55b445c00a41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertAttributeEmpty()&lt;/code&gt; and &lt;code&gt;assertAttributeNotEmpty()&lt;/code&gt; are convenience wrappers that can be applied to a &lt;code&gt;public&lt;/code&gt;, &lt;code&gt;protected&lt;/code&gt;, or &lt;code&gt;private&lt;/code&gt; attribute of a class or object.</source>
          <target state="translated">&lt;code&gt;assertAttributeEmpty()&lt;/code&gt; y &lt;code&gt;assertAttributeNotEmpty()&lt;/code&gt; son envoltorios de conveniencia que se pueden aplicar a un atributo &lt;code&gt;public&lt;/code&gt; , &lt;code&gt;protected&lt;/code&gt; o &lt;code&gt;private&lt;/code&gt; de una clase u objeto.</target>
        </trans-unit>
        <trans-unit id="74aca865727b49024da70bd2a2a52a3743f9c0e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertAttributeEquals()&lt;/code&gt; and &lt;code&gt;assertAttributeNotEquals()&lt;/code&gt; are convenience wrappers that use a &lt;code&gt;public&lt;/code&gt;, &lt;code&gt;protected&lt;/code&gt;, or &lt;code&gt;private&lt;/code&gt; attribute of a class or object as the actual value.</source>
          <target state="translated">&lt;code&gt;assertAttributeEquals()&lt;/code&gt; y &lt;code&gt;assertAttributeNotEquals()&lt;/code&gt; son envoltorios de conveniencia que usan un atributo &lt;code&gt;public&lt;/code&gt; , &lt;code&gt;protected&lt;/code&gt; o &lt;code&gt;private&lt;/code&gt; de una clase u objeto como valor real.</target>
        </trans-unit>
        <trans-unit id="2ed7c1f1034bce8677abb3b919d7ed7951a70037" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertAttributeGreaterThan()&lt;/code&gt; is a convenience wrapper that uses a &lt;code&gt;public&lt;/code&gt;, &lt;code&gt;protected&lt;/code&gt;, or &lt;code&gt;private&lt;/code&gt; attribute of a class or object as the actual value.</source>
          <target state="translated">&lt;code&gt;assertAttributeGreaterThan()&lt;/code&gt; es un contenedor de conveniencia que usa un atributo &lt;code&gt;public&lt;/code&gt; , &lt;code&gt;protected&lt;/code&gt; o &lt;code&gt;private&lt;/code&gt; de una clase u objeto como valor real.</target>
        </trans-unit>
        <trans-unit id="312a7f88b9869f38933e96139da919ce30e72268" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertAttributeGreaterThanOrEqual()&lt;/code&gt; is a convenience wrapper that uses a &lt;code&gt;public&lt;/code&gt;, &lt;code&gt;protected&lt;/code&gt;, or &lt;code&gt;private&lt;/code&gt; attribute of a class or object as the actual value.</source>
          <target state="translated">&lt;code&gt;assertAttributeGreaterThanOrEqual()&lt;/code&gt; es un contenedor de conveniencia que usa un atributo &lt;code&gt;public&lt;/code&gt; , &lt;code&gt;protected&lt;/code&gt; o &lt;code&gt;private&lt;/code&gt; de una clase u objeto como valor real.</target>
        </trans-unit>
        <trans-unit id="80e395c2fd99e40222d4731c97b34156aa074ef1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertAttributeInstanceOf()&lt;/code&gt; and &lt;code&gt;assertAttributeNotInstanceOf()&lt;/code&gt; are convenience wrappers that can be applied to a &lt;code&gt;public&lt;/code&gt;, &lt;code&gt;protected&lt;/code&gt;, or &lt;code&gt;private&lt;/code&gt; attribute of a class or object.</source>
          <target state="translated">&lt;code&gt;assertAttributeInstanceOf()&lt;/code&gt; y &lt;code&gt;assertAttributeNotInstanceOf()&lt;/code&gt; son envoltorios de conveniencia que se pueden aplicar a un atributo &lt;code&gt;public&lt;/code&gt; , &lt;code&gt;protected&lt;/code&gt; o &lt;code&gt;private&lt;/code&gt; de una clase u objeto.</target>
        </trans-unit>
        <trans-unit id="e7b1c9e2b1d75b071c01745bb535bd1cf463affd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertAttributeInternalType()&lt;/code&gt; and &lt;code&gt;assertAttributeNotInternalType()&lt;/code&gt; are convenience wrappers that can be applied to a &lt;code&gt;public&lt;/code&gt;, &lt;code&gt;protected&lt;/code&gt;, or &lt;code&gt;private&lt;/code&gt; attribute of a class or object.</source>
          <target state="translated">&lt;code&gt;assertAttributeInternalType()&lt;/code&gt; y &lt;code&gt;assertAttributeNotInternalType()&lt;/code&gt; son envoltorios de conveniencia que se pueden aplicar a un atributo &lt;code&gt;public&lt;/code&gt; , &lt;code&gt;protected&lt;/code&gt; o &lt;code&gt;private&lt;/code&gt; de una clase u objeto.</target>
        </trans-unit>
        <trans-unit id="ff2dff4c9aa55daf2999c05681cd2c84e0e00046" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertAttributeLessThan()&lt;/code&gt; is a convenience wrapper that uses a &lt;code&gt;public&lt;/code&gt;, &lt;code&gt;protected&lt;/code&gt;, or &lt;code&gt;private&lt;/code&gt; attribute of a class or object as the actual value.</source>
          <target state="translated">&lt;code&gt;assertAttributeLessThan()&lt;/code&gt; es un contenedor de conveniencia que usa un atributo &lt;code&gt;public&lt;/code&gt; , &lt;code&gt;protected&lt;/code&gt; o &lt;code&gt;private&lt;/code&gt; de una clase u objeto como valor real.</target>
        </trans-unit>
        <trans-unit id="a5677cb688aa179877244b5f5792b3195074e83e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertAttributeLessThanOrEqual()&lt;/code&gt; is a convenience wrapper that uses a &lt;code&gt;public&lt;/code&gt;, &lt;code&gt;protected&lt;/code&gt;, or &lt;code&gt;private&lt;/code&gt; attribute of a class or object as the actual value.</source>
          <target state="translated">&lt;code&gt;assertAttributeLessThanOrEqual()&lt;/code&gt; es un contenedor de conveniencia que usa un atributo &lt;code&gt;public&lt;/code&gt; , &lt;code&gt;protected&lt;/code&gt; o &lt;code&gt;private&lt;/code&gt; de una clase u objeto como valor real.</target>
        </trans-unit>
        <trans-unit id="d800800e24ffa93110e7f0655bccbad295e4a236" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertAttributeSame()&lt;/code&gt; and &lt;code&gt;assertAttributeNotSame()&lt;/code&gt; are convenience wrappers that use a &lt;code&gt;public&lt;/code&gt;, &lt;code&gt;protected&lt;/code&gt;, or &lt;code&gt;private&lt;/code&gt; attribute of a class or object as the actual value.</source>
          <target state="translated">&lt;code&gt;assertAttributeSame()&lt;/code&gt; y &lt;code&gt;assertAttributeNotSame()&lt;/code&gt; son envoltorios de conveniencia que usan un atributo &lt;code&gt;public&lt;/code&gt; , &lt;code&gt;protected&lt;/code&gt; o &lt;code&gt;private&lt;/code&gt; de una clase u objeto como valor real.</target>
        </trans-unit>
        <trans-unit id="cc05a8dfaf1f09c77579598b393c3a0e9525dabf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertClassNotHasAttribute()&lt;/code&gt; is the inverse of this assertion and takes the same arguments.</source>
          <target state="translated">&lt;code&gt;assertClassNotHasAttribute()&lt;/code&gt; es el inverso de esta aserci&amp;oacute;n y toma los mismos argumentos.</target>
        </trans-unit>
        <trans-unit id="f08ecd00f88650de2540cca34fa8551bddaaeec4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertClassNotHasStaticAttribute()&lt;/code&gt; is the inverse of this assertion and takes the same arguments.</source>
          <target state="translated">&lt;code&gt;assertClassNotHasStaticAttribute()&lt;/code&gt; es el inverso de esta aserci&amp;oacute;n y toma los mismos argumentos.</target>
        </trans-unit>
        <trans-unit id="683074b42f8be2e6cdf1a5591d47de9ad12e3941" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertDirectoryNotExists()&lt;/code&gt; is the inverse of this assertion and takes the same arguments.</source>
          <target state="translated">&lt;code&gt;assertDirectoryNotExists()&lt;/code&gt; es el inverso de esta aserci&amp;oacute;n y toma los mismos argumentos.</target>
        </trans-unit>
        <trans-unit id="b96f7dfcde671122ec1d426b5302f01a53e92abb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertDirectoryNotIsReadable()&lt;/code&gt; is the inverse of this assertion and takes the same arguments.</source>
          <target state="translated">&lt;code&gt;assertDirectoryNotIsReadable()&lt;/code&gt; es el inverso de esta aserci&amp;oacute;n y toma los mismos argumentos.</target>
        </trans-unit>
        <trans-unit id="a1667a948c5776b069eef0d33e6bd61c8b91aec7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertDirectoryNotIsWritable()&lt;/code&gt; is the inverse of this assertion and takes the same arguments.</source>
          <target state="translated">&lt;code&gt;assertDirectoryNotIsWritable()&lt;/code&gt; es el inverso de esta aserci&amp;oacute;n y toma los mismos argumentos.</target>
        </trans-unit>
        <trans-unit id="c5daaaca60778cba5a28ceab2f74d6e3b6d86848" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertFileNotEquals()&lt;/code&gt; is the inverse of this assertion and takes the same arguments.</source>
          <target state="translated">&lt;code&gt;assertFileNotEquals()&lt;/code&gt; es el inverso de esta aserci&amp;oacute;n y toma los mismos argumentos.</target>
        </trans-unit>
        <trans-unit id="24875222dcfdfac3ad56e3c8dff89f1702c3cc05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertFileNotExists()&lt;/code&gt; is the inverse of this assertion and takes the same arguments.</source>
          <target state="translated">&lt;code&gt;assertFileNotExists()&lt;/code&gt; es el inverso de esta aserci&amp;oacute;n y toma los mismos argumentos.</target>
        </trans-unit>
        <trans-unit id="8d601549d604f302c65a09e4a239d28ef68dd0c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertFileNotIsReadable()&lt;/code&gt; is the inverse of this assertion and takes the same arguments.</source>
          <target state="translated">&lt;code&gt;assertFileNotIsReadable()&lt;/code&gt; es el inverso de esta aserci&amp;oacute;n y toma los mismos argumentos.</target>
        </trans-unit>
        <trans-unit id="776056cc088802e93a3c9d205377185e228a53f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertFileNotIsWritable()&lt;/code&gt; is the inverse of this assertion and takes the same arguments.</source>
          <target state="translated">&lt;code&gt;assertFileNotIsWritable()&lt;/code&gt; es el inverso de esta aserci&amp;oacute;n y toma los mismos argumentos.</target>
        </trans-unit>
        <trans-unit id="00840b05dcb5f7ba398768c7028fc58f4530983c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertFinite()&lt;/code&gt; is the inverse of this assertion and takes the same arguments.</source>
          <target state="translated">&lt;code&gt;assertFinite()&lt;/code&gt; es el inverso de esta aserci&amp;oacute;n y toma los mismos argumentos.</target>
        </trans-unit>
        <trans-unit id="4f6f2cfba10126e7283d47346a4576163d1e4668" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertNotContains()&lt;/code&gt; is the inverse of this assertion and takes the same arguments.</source>
          <target state="translated">&lt;code&gt;assertNotContains()&lt;/code&gt; es el inverso de esta aserci&amp;oacute;n y toma los mismos argumentos.</target>
        </trans-unit>
        <trans-unit id="b538e8dadc2fcb733c1f56bcaf312d9972be5fd7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertNotContainsOnly()&lt;/code&gt; is the inverse of this assertion and takes the same arguments.</source>
          <target state="translated">&lt;code&gt;assertNotContainsOnly()&lt;/code&gt; es el inverso de esta aserci&amp;oacute;n y toma los mismos argumentos.</target>
        </trans-unit>
        <trans-unit id="4b084a0805ec4a43d503c426fcb21b45731682e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertNotCount()&lt;/code&gt; is the inverse of this assertion and takes the same arguments.</source>
          <target state="translated">&lt;code&gt;assertNotCount()&lt;/code&gt; es el inverso de esta aserci&amp;oacute;n y toma los mismos argumentos.</target>
        </trans-unit>
        <trans-unit id="130fbf9009b833f6a184f9d23f8105a0e8908e8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertNotEmpty()&lt;/code&gt; is the inverse of this assertion and takes the same arguments.</source>
          <target state="translated">&lt;code&gt;assertNotEmpty()&lt;/code&gt; es el inverso de esta aserci&amp;oacute;n y toma los mismos argumentos.</target>
        </trans-unit>
        <trans-unit id="e48a82acd387b8eb11c27c4bd413773d70d650c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertNotEquals()&lt;/code&gt; is the inverse of this assertion and takes the same arguments.</source>
          <target state="translated">&lt;code&gt;assertNotEquals()&lt;/code&gt; es el inverso de esta aserci&amp;oacute;n y toma los mismos argumentos.</target>
        </trans-unit>
        <trans-unit id="782aa3e21f2fe8d6ec668675df3367b5183a34ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertNotFalse()&lt;/code&gt; is the inverse of this assertion and takes the same arguments.</source>
          <target state="translated">&lt;code&gt;assertNotFalse()&lt;/code&gt; es el inverso de esta aserci&amp;oacute;n y toma los mismos argumentos.</target>
        </trans-unit>
        <trans-unit id="74071d81ef3376a587180f4bf10cce5927fb4b09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertNotInstanceOf()&lt;/code&gt; is the inverse of this assertion and takes the same arguments.</source>
          <target state="translated">&lt;code&gt;assertNotInstanceOf()&lt;/code&gt; es el inverso de esta aserci&amp;oacute;n y toma los mismos argumentos.</target>
        </trans-unit>
        <trans-unit id="6820099b88275d81c65649d552aca3175f046abe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertNotInternalType()&lt;/code&gt; is the inverse of this assertion and takes the same arguments.</source>
          <target state="translated">&lt;code&gt;assertNotInternalType()&lt;/code&gt; es el inverso de esta aserci&amp;oacute;n y toma los mismos argumentos.</target>
        </trans-unit>
        <trans-unit id="2352fe2ffa92b884d44f8c60940699effaad41aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertNotIsReadable()&lt;/code&gt; is the inverse of this assertion and takes the same arguments.</source>
          <target state="translated">&lt;code&gt;assertNotIsReadable()&lt;/code&gt; es el inverso de esta aserci&amp;oacute;n y toma los mismos argumentos.</target>
        </trans-unit>
        <trans-unit id="4ebb0ad55d9290825f6d201e4153ef12cc1ec063" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertNotIsWritable()&lt;/code&gt; is the inverse of this assertion and takes the same arguments.</source>
          <target state="translated">&lt;code&gt;assertNotIsWritable()&lt;/code&gt; es el inverso de esta aserci&amp;oacute;n y toma los mismos argumentos.</target>
        </trans-unit>
        <trans-unit id="e8a0a868267d654ee0a04ced68556ce3ef202d14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertNotNull()&lt;/code&gt; is the inverse of this assertion and takes the same arguments.</source>
          <target state="translated">&lt;code&gt;assertNotNull()&lt;/code&gt; es el inverso de esta aserci&amp;oacute;n y toma los mismos argumentos.</target>
        </trans-unit>
        <trans-unit id="a1af83e72b05671dbd9470c9f6b966981de87fac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertNotRegExp()&lt;/code&gt; is the inverse of this assertion and takes the same arguments.</source>
          <target state="translated">&lt;code&gt;assertNotRegExp()&lt;/code&gt; es el inverso de esta aserci&amp;oacute;n y toma los mismos argumentos.</target>
        </trans-unit>
        <trans-unit id="4f6cb3f36af1c4a92d2159e602a0ad2b0a7237fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertNotSame()&lt;/code&gt; is the inverse of this assertion and takes the same arguments.</source>
          <target state="translated">&lt;code&gt;assertNotSame()&lt;/code&gt; es el inverso de esta aserci&amp;oacute;n y toma los mismos argumentos.</target>
        </trans-unit>
        <trans-unit id="ba3007c16403ff7c20e6009663895380c927d759" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertNotTrue()&lt;/code&gt; is the inverse of this assertion and takes the same arguments.</source>
          <target state="translated">&lt;code&gt;assertNotTrue()&lt;/code&gt; es el inverso de esta afirmaci&amp;oacute;n y toma los mismos argumentos.</target>
        </trans-unit>
        <trans-unit id="e6bd1c331daecab854447e861f97f9eb5cbbc25a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertObjectNotHasAttribute()&lt;/code&gt; is the inverse of this assertion and takes the same arguments.</source>
          <target state="translated">&lt;code&gt;assertObjectNotHasAttribute()&lt;/code&gt; es el inverso de esta aserci&amp;oacute;n y toma los mismos argumentos.</target>
        </trans-unit>
        <trans-unit id="863ce03a3c24ebc46c290963c5a1bb32e7dde83d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertStringEndsNotWith()&lt;/code&gt; is the inverse of this assertion and takes the same arguments.</source>
          <target state="translated">&lt;code&gt;assertStringEndsNotWith()&lt;/code&gt; es el inverso de esta aserci&amp;oacute;n y toma los mismos argumentos.</target>
        </trans-unit>
        <trans-unit id="03a1fe5bc5dabfc19a7684c352191dff38d95c65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertStringNotEqualsFile()&lt;/code&gt; is the inverse of this assertion and takes the same arguments.</source>
          <target state="translated">&lt;code&gt;assertStringNotEqualsFile()&lt;/code&gt; es el inverso de esta aserci&amp;oacute;n y toma los mismos argumentos.</target>
        </trans-unit>
        <trans-unit id="0a46b9abcdf908c4c47fc3d9f49444619e09e46c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertStringNotMatchesFormat()&lt;/code&gt; is the inverse of this assertion and takes the same arguments.</source>
          <target state="translated">&lt;code&gt;assertStringNotMatchesFormat()&lt;/code&gt; es el inverso de esta aserci&amp;oacute;n y toma los mismos argumentos.</target>
        </trans-unit>
        <trans-unit id="720daa17c33654dd0b7e9172e4bf22c8f877cd74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertStringNotMatchesFormatFile()&lt;/code&gt; is the inverse of this assertion and takes the same arguments.</source>
          <target state="translated">&lt;code&gt;assertStringNotMatchesFormatFile()&lt;/code&gt; es el inverso de esta aserci&amp;oacute;n y toma los mismos argumentos.</target>
        </trans-unit>
        <trans-unit id="1c079ae8933bc457ca440db2e0db984d14bd4d67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertStringStartsNotWith()&lt;/code&gt; is the inverse of this assertion and takes the same arguments.</source>
          <target state="translated">&lt;code&gt;assertStringStartsNotWith()&lt;/code&gt; es el inverso de esta aserci&amp;oacute;n y toma los mismos argumentos.</target>
        </trans-unit>
        <trans-unit id="811ad5be353f51c600dc39d63a8e44a57e82924c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertXmlFileNotEqualsXmlFile()&lt;/code&gt; is the inverse of this assertion and takes the same arguments.</source>
          <target state="translated">&lt;code&gt;assertXmlFileNotEqualsXmlFile()&lt;/code&gt; es el inverso de esta aserci&amp;oacute;n y toma los mismos argumentos.</target>
        </trans-unit>
        <trans-unit id="269893af258500629fde7e2dca9ed0223505b421" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertXmlStringNotEqualsXmlFile()&lt;/code&gt; is the inverse of this assertion and takes the same arguments.</source>
          <target state="translated">&lt;code&gt;assertXmlStringNotEqualsXmlFile()&lt;/code&gt; es el inverso de esta aserci&amp;oacute;n y toma los mismos argumentos.</target>
        </trans-unit>
        <trans-unit id="00f496344b531e39ae89c39497b22124c57fe8b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assertXmlStringNotEqualsXmlString()&lt;/code&gt; is the inverse of this assertion and takes the same arguments.</source>
          <target state="translated">&lt;code&gt;assertXmlStringNotEqualsXmlString()&lt;/code&gt; es el inverso de esta aserci&amp;oacute;n y toma los mismos argumentos.</target>
        </trans-unit>
        <trans-unit id="15dbea9c537e19f81e4a604cde50ce161a48fb3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auto&lt;/code&gt;: displays colors in the output unless the current terminal doesn't supports colors, or if the output is piped to a command or redirected to a file.</source>
          <target state="translated">&lt;code&gt;auto&lt;/code&gt; : muestra colores en la salida a menos que el terminal actual no admita colores, o si la salida se canaliza a un comando o se redirige a un archivo.</target>
        </trans-unit>
        <trans-unit id="520035ac612091f134a660e4b438f4fa48d2db39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disableAutoload()&lt;/code&gt; can be used to disable &lt;code&gt;__autoload()&lt;/code&gt; during the generation of the test double class.</source>
          <target state="translated">&lt;code&gt;disableAutoload()&lt;/code&gt; se puede usar para deshabilitar &lt;code&gt;__autoload()&lt;/code&gt; durante la generaci&amp;oacute;n de la clase doble de prueba.</target>
        </trans-unit>
        <trans-unit id="2dd777ad903c50182fe780736b2819b6fedd1677" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disableOriginalClone()&lt;/code&gt; can be used to disable the call to the original class' clone constructor.</source>
          <target state="translated">&lt;code&gt;disableOriginalClone()&lt;/code&gt; se puede usar para deshabilitar la llamada al constructor clon de la clase original.</target>
        </trans-unit>
        <trans-unit id="6017cb39e51b6a2c2238978001df423dbfc182df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disableOriginalConstructor()&lt;/code&gt; can be used to disable the call to the original class' constructor.</source>
          <target state="translated">&lt;code&gt;disableOriginalConstructor()&lt;/code&gt; se puede usar para deshabilitar la llamada al constructor de la clase original.</target>
        </trans-unit>
        <trans-unit id="b70c5eb2081f5a47a9afe5f5fa7c744b49e4846b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;highLowerBound&lt;/code&gt;: Minimum coverage percentage to be considered &quot;highly&quot; covered.</source>
          <target state="translated">&lt;code&gt;highLowerBound&lt;/code&gt; : Porcentaje m&amp;iacute;nimo de cobertura para ser considerado &quot;altamente&quot; cubierto.</target>
        </trans-unit>
        <trans-unit id="79c4775c04fddb2e4640c7a8a886b30b12fc2174" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lowUpperBound&lt;/code&gt;: Maximum coverage percentage to be considered &quot;lowly&quot; covered.</source>
          <target state="translated">&lt;code&gt;lowUpperBound&lt;/code&gt; : Porcentaje m&amp;aacute;ximo de cobertura para ser considerado &quot;bajo&quot; cubierto.</target>
        </trans-unit>
        <trans-unit id="233810acae7da9ce813495fb1d8962756b9f84e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;never&lt;/code&gt;: never displays colors in the output. This is the default value when &lt;code&gt;--colors&lt;/code&gt; option is not used.</source>
          <target state="translated">&lt;code&gt;never&lt;/code&gt; : nunca muestra colores en la salida. Este es el valor predeterminado cuando no se usa la opci&amp;oacute;n &lt;code&gt;--colors&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d6d6097856b759592af70fe4090fc82532271188" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setConstructorArgs(array $args)&lt;/code&gt; can be called to provide a parameter array that is passed to the original class' constructor (which is not replaced with a dummy implementation by default).</source>
          <target state="translated">&lt;code&gt;setConstructorArgs(array $args)&lt;/code&gt; se puede llamar para proporcionar una matriz de par&amp;aacute;metros que se pasa al constructor de la clase original (que no se reemplaza por una implementaci&amp;oacute;n ficticia por defecto).</target>
        </trans-unit>
        <trans-unit id="b72117b49da66fe44ec63a4e44e41c6973dc04aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setMethods(array $methods)&lt;/code&gt; can be called on the Mock Builder object to specify the methods that are to be replaced with a configurable test double. The behavior of the other methods is not changed. If you call &lt;code&gt;setMethods(null)&lt;/code&gt;, then no methods will be replaced.</source>
          <target state="translated">&lt;code&gt;setMethods(array $methods)&lt;/code&gt; se puede llamar en el objeto Mock Builder para especificar los m&amp;eacute;todos que se reemplazar&amp;aacute;n con un doble de prueba configurable. El comportamiento de los otros m&amp;eacute;todos no se modifica. Si llama a &lt;code&gt;setMethods(null)&lt;/code&gt; , no se reemplazar&amp;aacute; ning&amp;uacute;n m&amp;eacute;todo.</target>
        </trans-unit>
        <trans-unit id="c472cd19adb8f363c860c74103cf248c02c17802" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setMockClassName($name)&lt;/code&gt; can be used to specify a class name for the generated test double class.</source>
          <target state="translated">&lt;code&gt;setMockClassName($name)&lt;/code&gt; se puede usar para especificar un nombre de clase para la clase doble de prueba generada.</target>
        </trans-unit>
        <trans-unit id="f296ae305b8d83a60a530356f27145c14ed36f53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setUp()&lt;/code&gt; and &lt;code&gt;tearDown()&lt;/code&gt; are nicely symmetrical in theory but not in practice. In practice, you only need to implement &lt;code&gt;tearDown()&lt;/code&gt; if you have allocated external resources like files or sockets in &lt;code&gt;setUp()&lt;/code&gt;. If your &lt;code&gt;setUp()&lt;/code&gt; just creates plain PHP objects, you can generally ignore &lt;code&gt;tearDown()&lt;/code&gt;. However, if you create many objects in your &lt;code&gt;setUp()&lt;/code&gt;, you might want to &lt;code&gt;unset()&lt;/code&gt; the variables pointing to those objects in your &lt;code&gt;tearDown()&lt;/code&gt; so they can be garbage collected. The garbage collection of test case objects is not predictable.</source>
          <target state="translated">&lt;code&gt;setUp()&lt;/code&gt; y &lt;code&gt;tearDown()&lt;/code&gt; son muy sim&amp;eacute;tricos en teor&amp;iacute;a pero no en la pr&amp;aacute;ctica. En la pr&amp;aacute;ctica, solo necesita implementar &lt;code&gt;tearDown()&lt;/code&gt; si ha asignado recursos externos como archivos o sockets en &lt;code&gt;setUp()&lt;/code&gt; . Si su &lt;code&gt;setUp()&lt;/code&gt; solo crea objetos PHP simples, generalmente puede ignorar &lt;code&gt;tearDown()&lt;/code&gt; . Sin embargo, si crea muchos objetos en su &lt;code&gt;setUp()&lt;/code&gt; , es posible que desee &lt;code&gt;unset()&lt;/code&gt; las variables que apuntan a esos objetos en su &lt;code&gt;tearDown()&lt;/code&gt; para que puedan ser recolectados como basura. La recolecci&amp;oacute;n de basura de objetos de casos de prueba no es predecible.</target>
        </trans-unit>
        <trans-unit id="684edb995e4a9e953126870698a2ff1bc6dad159" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;showOnlySummary&lt;/code&gt;: Show only the summary in &lt;code&gt;--coverage-text&lt;/code&gt; output.</source>
          <target state="translated">&lt;code&gt;showOnlySummary&lt;/code&gt; : muestra solo el resumen en la salida &lt;code&gt;--coverage-text&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="02ae999441e6bf7caccdafb80af40e451ac18852" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;showUncoveredFiles&lt;/code&gt;: Show all whitelisted files in &lt;code&gt;--coverage-text&lt;/code&gt; output not just the ones with coverage information.</source>
          <target state="translated">&lt;code&gt;showUncoveredFiles&lt;/code&gt; : muestra todos los archivos de la lista blanca en la &lt;code&gt;--coverage-text&lt;/code&gt; cobertura, no solo los que tienen informaci&amp;oacute;n de cobertura.</target>
        </trans-unit>
        <trans-unit id="537d41abe9dbf1d0b273e2a178fd342c6342b21a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 11.1: Using the &lt;code&gt;@codeCoverageIgnore&lt;/code&gt;, &lt;code&gt;@codeCoverageIgnoreStart&lt;/code&gt; and &lt;code&gt;@codeCoverageIgnoreEnd&lt;/code&gt; annotations&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 11.1: Uso de la &lt;code&gt;@codeCoverageIgnore&lt;/code&gt; , &lt;code&gt;@codeCoverageIgnoreStart&lt;/code&gt; y &lt;code&gt;@codeCoverageIgnoreEnd&lt;/code&gt; anotaciones&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="72cbc68e23f4a82cfeced2a240129550116dfdbd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 11.2: Tests that specify which method they want to cover&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 11.2: Pruebas que especifican qu&amp;eacute; m&amp;eacute;todo quieren cubrir&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1f7a5d070b9cbae1838d876503630249b371429c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 11.3: A test that specifies that no method should be covered&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 11.3: una prueba que especifica que no debe cubrirse ning&amp;uacute;n m&amp;eacute;todo&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3ad49bf718b9d6f625052daacd200b6be823f55a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 11.4: &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 11.4: &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c2fa3ece13f1ff0d4f3e53ef837c5b73daca78f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 14.1: The assertTrue() and isTrue() methods of the PHPUnit_Framework_Assert class&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 14.1: Los m&amp;eacute;todos assertTrue () e isTrue () de la clase PHPUnit_Framework_Assert&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1bef79bd75eb8052b443998707f35f0cfc26e31e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 14.2: The PHPUnit_Framework_Constraint_IsTrue class&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 14.2: la clase PHPUnit_Framework_Constraint_IsTrue&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e1ecb25cab9200b2fed805e9e4f613976938779a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 14.3: A simple test listener&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 14.3: un oyente de prueba simple&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f90bea85d5817e2684d07072fe0dc81078fcf25b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 14.4: Using base test listener&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 14.4: uso de escucha de prueba base&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b107a4d8c5adf85e55d5031ecfb91b6e037c001c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 14.5: The RepeatedTest Decorator&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 14.5: El decorador de pruebas repetidas&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0b9dd539894f797d9470a8a989f318cb0e215012" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 14.6: A data-driven test&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 14.6: una prueba basada en datos&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fc7de11596287f3fe1e4a799aefcb9025efbb4a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 2.10: Using the expectException() method&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 2.10: Uso del m&amp;eacute;todo hopeException ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="337afeeccc3738c06739ff4fe61a1c64aa4af129" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 2.11: Using the @expectedException annotation&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 2.11: Uso de la anotaci&amp;oacute;n @expectedException&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d6bb460199f586cdb20439b27a3e98efb679efca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 2.12: Expecting a PHP error using @expectedException&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 2.12: Esperando un error de PHP usando @expectedException&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7faeb7f4d9eec3424fc00df1ac0ba48691238cbd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 2.13: Testing return values of code that uses PHP Errors&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 2.13: Prueba de valores de retorno de c&amp;oacute;digo que usa errores de PHP&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="04f43c6f50b9392fe9e946e38855de0bad3d8a6d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 2.14: Testing the output of a function or method&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 2.14: Prueba de la salida de una funci&amp;oacute;n o m&amp;eacute;todo&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="927ff2f4752e4bbf12c6f979fefb10a0cc458eb7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 2.15: Error output generated when an array comparison fails&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 2.15: Salida de error generada cuando falla una comparaci&amp;oacute;n de matriz&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="394f78d7977c5f42f9e5aa7dc1bdfdf9bea25234" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 2.16: Error output when an array comparison of an long array fails&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 2.16: Salida de error cuando falla una comparaci&amp;oacute;n de matriz de una matriz larga&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="48ad1147fa974a907f46fc6da0507c6939eeb710" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 2.17: Edge case in the diff generation when using weak comparison&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 2.17: caso de borde en la generaci&amp;oacute;n de diferencias cuando se usa una comparaci&amp;oacute;n d&amp;eacute;bil&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="db2c202f8a7ceafb8842395ad0f7bfdda98a82da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 2.1: Testing array operations with PHPUnit&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 2.1: Prueba de operaciones de matriz con PHPUnit&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e70f647a3e8d31b38c4a3c7c77c1638e415cd2f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 2.2: Using the &lt;code&gt;@depends&lt;/code&gt; annotation to express dependencies&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 2.2: uso de la anotaci&amp;oacute;n &lt;code&gt;@depends&lt;/code&gt; para expresar dependencias&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6e794399369b4a28bcd673bc685cbe65b5c72241" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 2.3: Exploiting the dependencies between tests&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 2.3: Explotaci&amp;oacute;n de las dependencias entre pruebas&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="84b32656807bfcd79defca5658b4eec92c93e7db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 2.4: Test with multiple dependencies&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 2.4: prueba con m&amp;uacute;ltiples dependencias&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="675b82b7889718bdf4851e702175fbf646548eb9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 2.5: Using a data provider that returns an array of arrays&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 2.5: uso de un proveedor de datos que devuelve una matriz de matrices&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4ff9014e6a8fb68ce5aa03f4b962067a3561d362" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 2.6: Using a data provider with named datasets&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 2.6: uso de un proveedor de datos con conjuntos de datos con nombre&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c0c19de488ddbcb5471fdeae5c1f131669c14956" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 2.7: Using a data provider that returns an Iterator object&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 2.7: uso de un proveedor de datos que devuelve un objeto Iterador&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="29fec3696b6a3d4c91a9b064e7221978ad0b6bf0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 2.8: The CsvFileIterator class&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 2.8: la clase CsvFileIterator&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="15889b69d267da75713d32917bb01f7d025060a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 2.9: Combination of @depends and @dataProvider in same test&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 2.9: combinaci&amp;oacute;n de @depends y @dataProvider en la misma prueba&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="35a54136a480d5f2bd8d3ba5ae80da0abf1eb3d7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 3.1: Named data sets&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 3.1: conjuntos de datos con nombre&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d4c4712ccd3b91951deb1495104ba1fee3a6d0bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 3.2: Filter pattern examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 3.2: ejemplos de patrones de filtro&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2adbadc30448bb7e13412741dc21a78ff7cb5d67" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 3.3: Filter shortcuts&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 3.3: Filtrar atajos&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="28420c079c0546fe91a6c76ad2ef4edbe9aea8ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 4.1: Using setUp() to create the stack fixture&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 4.1: Usando setUp () para crear el accesorio de pila&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="66405829cf50723ce873087dc4fbfe8b4fbb2b45" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 4.2: Example showing all template methods available&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 4.2: Ejemplo que muestra todos los m&amp;eacute;todos de plantilla disponibles&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="889e05537ca67b263a7e192829d4ade2fc3a9c39" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 4.3: Sharing fixture between the tests of a test suite&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 4.3: Dispositivo compartido entre las pruebas de una suite de pruebas&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="db31aaa3ce4fec73841ad205ae08eb96e683cdd1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 5.1: Composing a Test Suite Using XML Configuration&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 5.1: Composici&amp;oacute;n de un conjunto de pruebas mediante configuraci&amp;oacute;n XML&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="430f86c80b2a34dba9b8c9bb1bc2277674e50454" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 5.2: Composing a Test Suite Using XML Configuration&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 5.2: composici&amp;oacute;n de una suite de pruebas mediante configuraci&amp;oacute;n XML&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="74c6ad4e58b81e34d3db0b636a83cc3e577027e0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 7.1: Marking a test as incomplete&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 7.1: Marcar una prueba como incompleta&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6afa59578278a136a15fd1473194207543b3058a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 7.2: Skipping a test&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 7.2: Saltarse una prueba&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e50e5736235ea48077c8c73f8497e437fcd14807" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 7.3: Skipping test cases using @requires&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 7.3: Omitir casos de prueba usando @requires&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="085ea4c7550502ac08f2175fa82a4ee0dc514ce7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 9.10: The Subject and Observer classes that are part of the System under Test (SUT)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 9.10: Las clases de sujeto y observador que forman parte del sistema sometido a prueba (SUT)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6460feaa3f38622fa91697ee7c9d2ebfe2f00d15" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 9.11: Testing that a method gets called once and with a specified argument&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 9.11: Prueba de que se llama a un m&amp;eacute;todo una vez y con un argumento especificado&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="353a1360153e4cf19222eeb7f8ba79844c1c3383" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 9.12: Testing that a method gets called with a number of arguments constrained in different ways&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 9.12: probar que se llama a un m&amp;eacute;todo con varios argumentos restringidos de diferentes maneras&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="12b886f498ea6d9029d077070b8ba0d69dd21bb1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 9.13: Testing that a method gets called two times with specific arguments.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 9.13: Prueba de que se llama a un m&amp;eacute;todo dos veces con argumentos espec&amp;iacute;ficos.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2624606e44e41c5efe561b8f0a6458b95b7b5ab6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 9.14: More complex argument verification&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 9.14: Verificaci&amp;oacute;n de argumentos m&amp;aacute;s compleja&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b0268f76a36e7955edeed8dccc135c4ac704d2a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 9.15: Testing that a method gets called once and with the identical object as was passed&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 9.15: Prueba de que se llama a un m&amp;eacute;todo una vez y con el objeto id&amp;eacute;ntico al que se pas&amp;oacute;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="86033dafd39d155720c5b901233ecea83731e941" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 9.16: Create a mock object with cloning parameters enabled&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 9.16: Crear un objeto simulado con los par&amp;aacute;metros de clonaci&amp;oacute;n habilitados&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ca81fd8525be90f6266bcf992c75e4925d0cc223" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 9.17: Testing that a method gets called once and with a specified argument&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 9.17: Prueba de que se llama a un m&amp;eacute;todo una vez y con un argumento especificado&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="48a15ce2f8ba0a4c99bb791fd151bd462b880706" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 9.18: Testing the concrete methods of a trait&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 9.18: Prueba de los m&amp;eacute;todos concretos de un rasgo&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aae9477a5e8a50fda46adb8298db2457813e8a95" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 9.19: Testing the concrete methods of an abstract class&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 9.19: Prueba de los m&amp;eacute;todos concretos de una clase abstracta&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="75479324e4f179170960ee5a3b658f5ef31808aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 9.1: The class we want to stub&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 9.1: La clase que queremos apuntar&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a2f0259d0cd3cb442d1c277f595880cca08f18b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 9.20: Stubbing a web service&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 9.20: Ap&amp;eacute;ndice de un servicio web&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ee81e8a22fab8689786b4a21f6320cb7b92b2ea2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 9.21: A class that interacts with the filesystem&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 9.21: una clase que interact&amp;uacute;a con el sistema de archivos&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="70709b740f2581cd1ddf604c1fd89fa554b910b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 9.22: Testing a class that interacts with the filesystem&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 9.22: Prueba de una clase que interact&amp;uacute;a con el sistema de archivos&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cde04a4be9eff8b8de163b549e58543825c3cd8f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 9.23: Mocking the filesystem in a test for a class that interacts with the filesystem&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 9.23: burlarse del sistema de archivos en una prueba para una clase que interact&amp;uacute;a con el sistema de archivos&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f0e2b766c5228e9c9d82c3fb22cd072edafe7492" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 9.2: Stubbing a method call to return a fixed value&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 9.2: Apuntar una llamada a un m&amp;eacute;todo para devolver un valor fijo&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1b4beb20954dd0b305f33d6f4589bb0f81cac82f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 9.3: Using the Mock Builder API can be used to configure the generated test double class&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 9.3: El uso de la API de Mock Builder se puede utilizar para configurar la clase doble de prueba generada&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="966926fb83f586d3e4503b4a5e6c838b904b7ea7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 9.4: Stubbing a method call to return one of the arguments&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 9.4: Apuntando una llamada a un m&amp;eacute;todo para devolver uno de los argumentos&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dcf331f22ea094ec036a841f0511a70f753a5ecc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 9.5: Stubbing a method call to return a reference to the stub object&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 9.5: Ap&amp;eacute;ndice de una llamada a m&amp;eacute;todo para devolver una referencia al objeto de c&amp;oacute;digo auxiliar&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0d8eca1ff7f8c31190dcac901a213678ceebc9a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 9.6: Stubbing a method call to return the value from a map&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 9.6: Apuntar una llamada a un m&amp;eacute;todo para devolver el valor de un mapa&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="20b3cbf4a57b2957caa6f2aa617ccb971fe0600e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 9.7: Stubbing a method call to return a value from a callback&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 9.7: Stubbing de una llamada a un m&amp;eacute;todo para devolver un valor de una devoluci&amp;oacute;n de llamada&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="444e902b7a4373bb0f4d717694130a016fe448cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 9.8: Stubbing a method call to return a list of values in the specified order&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 9.8: Apuntar una llamada a un m&amp;eacute;todo para devolver una lista de valores en el orden especificado&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7ab0ad4c5599f681eb352b9f40b734f07d3c047d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example 9.9: Stubbing a method call to throw an exception&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo 9.9: Stubbing de una llamada a un m&amp;eacute;todo para lanzar una excepci&amp;oacute;n&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6e410312dcda80a29e47c9962e467c45d8ac4e34" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.10: Usage of assertCount()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.10: uso de assertCount ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="da5c55653ca59b9463fb56677a0b1787658723b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.11: Usage of assertDirectoryExists()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.11: Uso de assertDirectoryExists ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="62ac7540a8ed7db60a9771f39cfd688b8b7665f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.12: Usage of assertDirectoryIsReadable()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.12: Uso de assertDirectoryIsReadable ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4662e75e0f6a5b72cac519644eff3602bd89e385" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.13: Usage of assertDirectoryIsWritable()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.13: Uso de assertDirectoryIsWritable ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e52b6914360e55e8f9cc18c53997a6ba66a6b15c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.14: Usage of assertEmpty()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.14: Uso de assertEmpty ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f672fcbb4be1c8a30e0914a7811807054db0feb4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.15: Usage of assertEqualXMLStructure()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.15: Uso de assertEqualXMLStructure ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="975fe0608c6b3b281fde9d558378a80d2129ca67" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.16: Usage of assertEquals()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.16: Uso de assertEquals ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dde707e9204065bb47c735bc75350e22dd22cf9e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.17: Usage of assertEquals() with floats&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.17: Uso de assertEquals () con flotantes&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e64aa93d946e4b9bfca36e6bf493cba2c83914d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.18: Usage of assertEquals() with DOMDocument objects&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.18: uso de assertEquals () con objetos DOMDocument&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0dbaf6e509c59f254971460ac393b890530bd61e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.19: Usage of assertEquals() with objects&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.19: Uso de assertEquals () con objetos&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c31bfc73aea152f8ea0c5d8eadc8e968b4789f33" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.1: Usage of assertArrayHasKey()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.1: uso de assertArrayHasKey ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="15e7ef5c3f4f01252f938d794cabb6b6e0e328e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.20: Usage of assertEquals() with arrays&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.20: uso de assertEquals () con matrices&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2b96eac1a539e742e131c6bd02ac5f1e4b2c6208" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.21: Usage of assertFalse()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.21: Uso de assertFalse ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b34a0bd8428075f26f036de71389433f21410b76" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.22: Usage of assertFileEquals()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.22: Uso de assertFileEquals ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f3906ba05593c0cdea7e0915d24e05a1608c85d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.23: Usage of assertFileExists()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.23: Uso de assertFileExists ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2e3c5cbe33cf28106f312197f107b9461a7fcf02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.24: Usage of assertFileIsReadable()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.24: Uso de assertFileIsReadable ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ffe3f2e0d160bcbc1e3da17a32e4143f59601866" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.25: Usage of assertFileIsWritable()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.25: uso de assertFileIsWritable ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b3813bdc3781298f6c0bd8f56f27728780b698b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.26: Usage of assertGreaterThan()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.26: Uso de assertGreaterThan ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="145795ec14bb262aeef168d45b1b8ca1d3d9d4b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.27: Usage of assertGreaterThanOrEqual()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.27: Uso de assertGreaterThanOrEqual ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2934090b34180c1e36e6cf02de359ba026f6684d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.28: Usage of assertInfinite()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.28: Uso de assertInfinite ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4cf9ad79e50a9cb2caeb17f83ad1fb2f03eb0fc4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.29: Usage of assertInstanceOf()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.29: Uso de assertInstanceOf ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b1d4d585cc23c436cf6de8a3743f9fff09675629" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.2: Usage of assertClassHasAttribute()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.2: Uso de assertClassHasAttribute ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7ee4399a90f29d16e53c2599dc09ed1abb9029df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.30: Usage of assertInternalType()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.30: Uso de assertInternalType ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c6fe9b37a3a7649f1b3c39e5c871f511db1a69e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.31: Usage of assertIsReadable()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.31: Uso de assertIsReadable ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a5f0caa3f0c007ccda832ff2e6f901bcf24ccff2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.32: Usage of assertIsWritable()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.32: Uso de assertIsWritable ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d9e1415c8f246cc599a9a889df744a1ea9c4afea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.33: Usage of assertJsonFileEqualsJsonFile()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.33: Uso de assertJsonFileEqualsJsonFile ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="02f6b658745529afa0c06127da1310716a22e0e4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.34: Usage of assertJsonStringEqualsJsonFile()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.34: Uso de assertJsonStringEqualsJsonFile ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fa0c51af090f452757ac365b8c23c2ee603dbbfb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.35: Usage of assertJsonStringEqualsJsonString()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.35: Uso de assertJsonStringEqualsJsonString ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0054e1ef183a9e075849472e0d4f93e968a0630c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.36: Usage of assertLessThan()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.36: Uso de assertLessThan ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aa30fd8be5f35796399708bf5d2d7a66346c0f43" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.37: Usage of assertLessThanOrEqual()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.37: Uso de assertLessThanOrEqual ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3acbf10effb60d96d7eb9c4996742e7ea52d7b02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.38: Usage of assertNan()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.38: Uso de assertNan ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7747bc525af8da35664d51724a247c41be09b3d4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.39: Usage of assertNull()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.39: Uso de assertNull ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f80756c63468915680f1b50c7c12246bcb07ad9e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.3: Usage of assertArraySubset()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.3: uso de assertArraySubset ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bc15016a5440ea5b2743fbb1c33cec2f16270b9a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.40: Usage of assertObjectHasAttribute()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.40: Uso de assertObjectHasAttribute ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4dff3bd64d56f30da1fdebab0131c3fd16f814ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.41: Usage of assertRegExp()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.41: Uso de assertRegExp ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7c7354915ab2413413e130ef0aab14fc9495a9ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.42: Usage of assertStringMatchesFormat()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.42: Uso de assertStringMatchesFormat ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b3a2b9c61eee627e5dc1d053e968ee3c83d4481b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.43: Usage of assertStringMatchesFormatFile()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.43: Uso de assertStringMatchesFormatFile ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2820324d97d3b483b9722c7986852ebed8a1a10f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.44: Usage of assertSame()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.44: Uso de assertSame ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="27c830a0acc3c2414579c526195cb14e469b0613" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.45: Usage of assertSame() with objects&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.45: Uso de assertSame () con objetos&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="02a5eff84afe7d9c78bc6eb4a81936e4067d2eb8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.46: Usage of assertStringEndsWith()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.46: Uso de assertStringEndsWith ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0154f6a484ab546365b94b7005f98a1fdf2911ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.47: Usage of assertStringEqualsFile()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.47: Uso de assertStringEqualsFile ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="53275d60898fdc2c1138cbbd1cf9e3b720e447da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.48: Usage of assertStringStartsWith()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.48: Uso de assertStringStartsWith ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b4b1f22d0855542a9d01057914b5e2bdc86fcadc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.49: Usage of assertThat()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.49: Uso de assertThat ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="28a84c2171dd608bc366b9d75254dc16ff1a6b8c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.4: Usage of assertClassHasStaticAttribute()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.4: Uso de assertClassHasStaticAttribute ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="458a3c8c4060d0316b44082fbbec69403e3b1260" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.50: Usage of assertTrue()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.50: Uso de assertTrue ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9a34a2d47d40eff400d4355618bd4240c3bce27f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.51: Usage of assertXmlFileEqualsXmlFile()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.51: Uso de assertXmlFileEqualsXmlFile ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fc33ebce62eef496820b06632463d8e2109abddc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.52: Usage of assertXmlStringEqualsXmlFile()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.52: Uso de assertXmlStringEqualsXmlFile ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d4e18e1dcbd81f0461109943b3db45c0dbd9b342" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.53: Usage of assertXmlStringEqualsXmlString()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.53: Uso de assertXmlStringEqualsXmlString ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="af7ad99dd26e50663c62bffc7aaa3f073f8fbe67" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.5: Usage of assertContains()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.5: uso de assertContains ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="596ee04219444986f41d1e415c972f4f7f506081" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.6: Usage of assertContains()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.6: Uso de assertContains ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="13669e023b1824a325563fc89d66ba03f55cc6f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.7: Usage of assertContains() with $ignoreCase&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.7: Uso de assertContains () con $ ignoreCase&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7ac4b1d8cbfae3af57cc82b68a6a7d79e5208ef2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.8: Usage of assertContainsOnly()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.8: uso de assertContainsOnly ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="80d7cb0b817f5beec307aba4c4d0236f8a21ecfe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example A.9: Usage of assertContainsOnlyInstancesOf()&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo A.9: Uso de assertContainsOnlyInstancesOf ()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e7650b0e8c05d5ef97fbdf23514d65ac454afb01" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example B.1: Using @coversDefaultClass to shorten annotations&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ejemplo B.1: uso de @coversDefaultClass para acortar anotaciones&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="66aa927b841af8df3a63737dbc16a05e9ddd1a9c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt; You cannot use both exclude and include column filtering on the same table, only on different ones. Plus it is only possible to either white- or blacklist tables, not both of them.</source>
          <target state="translated">&lt;strong&gt;NOTA&lt;/strong&gt; No puede utilizar el filtrado de columnas excluir e incluir en la misma tabla, solo en diferentes. Adem&amp;aacute;s, solo es posible incluir tablas en listas blancas o negras, no ambas.</target>
        </trans-unit>
        <trans-unit id="b87a15bfa1b58872f114180bc75b59c194920677" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; By default, PHPUnit will attempt to preserve the global state from the parent process by serializing all globals in the parent process and unserializing them in the child process. This can cause problems if the parent process contains globals that are not serializable. See &lt;a href=&quot;appendixes.annotations#appendixes.annotations.preserveGlobalState&quot;&gt;the section called &amp;ldquo;@preserveGlobalState&amp;rdquo;&lt;/a&gt; for information on how to fix this.</source>
          <target state="translated">&lt;strong&gt;Nota:&lt;/strong&gt; De forma predeterminada, PHPUnit intentar&amp;aacute; preservar el estado global del proceso padre serializando todos los globales en el proceso padre y anulando la serializaci&amp;oacute;n en el proceso hijo. Esto puede causar problemas si el proceso padre contiene globales que no son serializables. Consulte &lt;a href=&quot;appendixes.annotations#appendixes.annotations.preserveGlobalState&quot;&gt;la secci&amp;oacute;n llamada &quot;@preserveGlobalState&quot;&lt;/a&gt; para obtener informaci&amp;oacute;n sobre c&amp;oacute;mo solucionar este problema.</target>
        </trans-unit>
        <trans-unit id="a9d5848d35fc2622b4d7b23219382b545f9e7a06" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Table 2.1. Methods for testing output&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Cuadro 2.1. M&amp;eacute;todos para probar la salida&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a89720e839260a52342ef4a94f7b862594dcaf83" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Table 7.1. API for Incomplete Tests&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Cuadro 7.1. API para pruebas incompletas&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4fb857dbab5f2ea34038ce911b3fc490dd1162e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Table 7.2. API for Skipping Tests&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Cuadro 7.2. API para omitir pruebas&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b4bbb8cad9580045ba301953f1b21d33e5f5c245" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Table 7.3. Possible @requires usages&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Cuadro 7.3. Posibles usos de @requires&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9c0748eb24691eb17b6ca9df3288c1a5f9b53cb1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Table 9.1. Matchers&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Cuadro 9.1. Matchers&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3cbaf389f90efbe04d952bc290a7728446d8c030" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Table A.1. Constraints&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Cuadro A.1. Restricciones&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d90a265485244059468af81342d0e68c2f6ed844" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Table B.1. Annotations for specifying which methods are covered by a test&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Cuadro B.1. Anotaciones para especificar qu&amp;eacute; m&amp;eacute;todos est&amp;aacute;n cubiertos por una prueba&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2699d1c02b4ea0cbb6563ef868b78a8c8a882e12" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;What is a Fixture?&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&amp;iquest;Qu&amp;eacute; es un accesorio?&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="51da0ac1fccf633acd01ec4e660cec7a9e944c11" translate="yes" xml:space="preserve">
          <source>@after</source>
          <target state="translated">@after</target>
        </trans-unit>
        <trans-unit id="eef9279e1a9d0164589382778d6f18b8b94a377f" translate="yes" xml:space="preserve">
          <source>@afterClass</source>
          <target state="translated">@afterClass</target>
        </trans-unit>
        <trans-unit id="b08cced4776283da785202f5e6d9dd80b243deaf" translate="yes" xml:space="preserve">
          <source>@author</source>
          <target state="translated">@author</target>
        </trans-unit>
        <trans-unit id="1ea579ab15beb61d0bcb4210f3099841f91835d3" translate="yes" xml:space="preserve">
          <source>@backupGlobals</source>
          <target state="translated">@backupGlobals</target>
        </trans-unit>
        <trans-unit id="9b117699b179c399a73fde79e709cdb114ce33cf" translate="yes" xml:space="preserve">
          <source>@backupStaticAttributes</source>
          <target state="translated">@backupStaticAttributes</target>
        </trans-unit>
        <trans-unit id="70b9df4b287ab4e833df221716fa991965d7422f" translate="yes" xml:space="preserve">
          <source>@before</source>
          <target state="translated">@before</target>
        </trans-unit>
        <trans-unit id="b36d2c154f66e9ebade5bed9bc3bb2642fa1616f" translate="yes" xml:space="preserve">
          <source>@beforeClass</source>
          <target state="translated">@beforeClass</target>
        </trans-unit>
        <trans-unit id="6c7c02caca2893e30191e36734cfead82ad3b0e6" translate="yes" xml:space="preserve">
          <source>@codeCoverageIgnore*</source>
          <target state="translated">@codeCoverageIgnore*</target>
        </trans-unit>
        <trans-unit id="eb3c1c50649fa034560002fbdf35fd6a4ac3473e" translate="yes" xml:space="preserve">
          <source>@covers</source>
          <target state="translated">@covers</target>
        </trans-unit>
        <trans-unit id="5853aba9457f169c8dd4e672c90c1d241a65ae43" translate="yes" xml:space="preserve">
          <source>@coversDefaultClass</source>
          <target state="translated">@coversDefaultClass</target>
        </trans-unit>
        <trans-unit id="9588cf2d07a92a9464729a382f542ed02b1705b3" translate="yes" xml:space="preserve">
          <source>@coversNothing</source>
          <target state="translated">@coversNothing</target>
        </trans-unit>
        <trans-unit id="839d622467804554eea76f2beb4520670fc2ca6d" translate="yes" xml:space="preserve">
          <source>@dataProvider</source>
          <target state="translated">@dataProvider</target>
        </trans-unit>
        <trans-unit id="94d8b80d80517c3257d9f20cbac36b81fedf378e" translate="yes" xml:space="preserve">
          <source>@depends</source>
          <target state="translated">@depends</target>
        </trans-unit>
        <trans-unit id="2e1ff92e3578dd7901644f6db945d221b5ed1f98" translate="yes" xml:space="preserve">
          <source>@expectedException</source>
          <target state="translated">@expectedException</target>
        </trans-unit>
        <trans-unit id="21d721c654a9d3db3d6e722922ae65eeda48d566" translate="yes" xml:space="preserve">
          <source>@expectedExceptionCode</source>
          <target state="translated">@expectedExceptionCode</target>
        </trans-unit>
        <trans-unit id="ec58c45d6034e1cdfc35f781f34bb42b74f3066a" translate="yes" xml:space="preserve">
          <source>@expectedExceptionMessage</source>
          <target state="translated">@expectedExceptionMessage</target>
        </trans-unit>
        <trans-unit id="be1c50f6c30b95242acb8cbb1553e3e553daa646" translate="yes" xml:space="preserve">
          <source>@expectedExceptionMessageRegExp</source>
          <target state="translated">@expectedExceptionMessageRegExp</target>
        </trans-unit>
        <trans-unit id="c77112aa45ef7f201f2f327cfc23617979163387" translate="yes" xml:space="preserve">
          <source>@group</source>
          <target state="translated">@group</target>
        </trans-unit>
        <trans-unit id="5587692fda860004ad973f85238abc153fd6931b" translate="yes" xml:space="preserve">
          <source>@large</source>
          <target state="translated">@large</target>
        </trans-unit>
        <trans-unit id="f8feb4eb116cc7094e32370c1fefe8d96217f639" translate="yes" xml:space="preserve">
          <source>@medium</source>
          <target state="translated">@medium</target>
        </trans-unit>
        <trans-unit id="12fe6e2e9f2c461eca3144e9178b41d314d7d8c7" translate="yes" xml:space="preserve">
          <source>@preserveGlobalState</source>
          <target state="translated">@preserveGlobalState</target>
        </trans-unit>
        <trans-unit id="2eecd823a7ca0fb7891bca567711b65be2e71039" translate="yes" xml:space="preserve">
          <source>@requires</source>
          <target state="translated">@requires</target>
        </trans-unit>
        <trans-unit id="4cdb22e630ac6752cf8f0c4f0103c87c5f55ba90" translate="yes" xml:space="preserve">
          <source>@requires OS Linux</source>
          <target state="translated">@requiere SO Linux</target>
        </trans-unit>
        <trans-unit id="bdc783d23000d16909cca6ef7e0ec861afb042c2" translate="yes" xml:space="preserve">
          <source>@requires OS WIN32|WINNT</source>
          <target state="translated">@requires OS WIN32 | WINNT</target>
        </trans-unit>
        <trans-unit id="c5eda49db975d974a65b119d4fa5ecb62d2e8569" translate="yes" xml:space="preserve">
          <source>@requires PHP 5.3.3</source>
          <target state="translated">@requiere PHP 5.3.3</target>
        </trans-unit>
        <trans-unit id="84d5bc547790cdfca901bebf63549d063a2fa920" translate="yes" xml:space="preserve">
          <source>@requires PHP 7.1-dev</source>
          <target state="translated">@requires PHP 7.1-dev</target>
        </trans-unit>
        <trans-unit id="41a84282d4fcdefa50fb2b42304164d166e76a7e" translate="yes" xml:space="preserve">
          <source>@requires PHPUnit 3.6.3</source>
          <target state="translated">@requiere PHPUnit 3.6.3</target>
        </trans-unit>
        <trans-unit id="bf836d538f3f0531ef8e5874c228f034e5573cc1" translate="yes" xml:space="preserve">
          <source>@requires PHPUnit 4.6</source>
          <target state="translated">@requiere PHPUnit 4.6</target>
        </trans-unit>
        <trans-unit id="1a0c7b57a34438d4a040fd02c874adf2c6b4e8c0" translate="yes" xml:space="preserve">
          <source>@requires extension mysqli</source>
          <target state="translated">@requiere extensi&amp;oacute;n mysqli</target>
        </trans-unit>
        <trans-unit id="31c39b916a7d2a02f4779b40538f5f2a90d35a97" translate="yes" xml:space="preserve">
          <source>@requires extension redis 2.2.0</source>
          <target state="translated">@requires extensi&amp;oacute;n redis 2.2.0</target>
        </trans-unit>
        <trans-unit id="992301fe011b880b365bf0d13406d7770c8304f8" translate="yes" xml:space="preserve">
          <source>@requires function ReflectionMethod::setAccessible</source>
          <target state="translated">@requires la funci&amp;oacute;n ReflectionMethod :: setAccessible</target>
        </trans-unit>
        <trans-unit id="2583539f5d19f5f90413b83f0ed40c89365ef937" translate="yes" xml:space="preserve">
          <source>@requires function imap_open</source>
          <target state="translated">@requires la funci&amp;oacute;n imap_open</target>
        </trans-unit>
        <trans-unit id="7925a78d610d25b7a884488b7fa7c303d626375f" translate="yes" xml:space="preserve">
          <source>@runInSeparateProcess</source>
          <target state="translated">@runInSeparateProcess</target>
        </trans-unit>
        <trans-unit id="a71b3e90026751695df553604d49f5b67117db53" translate="yes" xml:space="preserve">
          <source>@runTestsInSeparateProcesses</source>
          <target state="translated">@runTestsInSeparateProcesses</target>
        </trans-unit>
        <trans-unit id="b15a3e44fa587476d9f569f614f161718d9f425b" translate="yes" xml:space="preserve">
          <source>@small</source>
          <target state="translated">@small</target>
        </trans-unit>
        <trans-unit id="bd2ccff7430fd392cf27f2c3cc394f784e2232f6" translate="yes" xml:space="preserve">
          <source>@test</source>
          <target state="translated">@test</target>
        </trans-unit>
        <trans-unit id="d757d33fb5ba9b2880a44a9bc5cc88422f37d8f2" translate="yes" xml:space="preserve">
          <source>@testdox</source>
          <target state="translated">@testdox</target>
        </trans-unit>
        <trans-unit id="c34a78ebd8571dab0d7392cee3bbf594637f2ce6" translate="yes" xml:space="preserve">
          <source>@ticket</source>
          <target state="translated">@ticket</target>
        </trans-unit>
        <trans-unit id="c8166c254ebb7f136d18982b3353e78cc615af25" translate="yes" xml:space="preserve">
          <source>@uses</source>
          <target state="translated">@uses</target>
        </trans-unit>
        <trans-unit id="bd38f8da2615fd4ce69bc44606dbb7ba4303d469" translate="yes" xml:space="preserve">
          <source>A &quot;bootstrap&quot; PHP file that is run before the tests.</source>
          <target state="translated">Un archivo PHP &quot;bootstrap&quot; que se ejecuta antes de las pruebas.</target>
        </trans-unit>
        <trans-unit id="50fe4de63745284e6ccb7b180c62dde2b5c5529f" translate="yes" xml:space="preserve">
          <source>A PHP DataSet has obvious advantages over all the other file-based datasets:</source>
          <target state="translated">Un DataSet PHP tiene ventajas obvias sobre todos los demás datasets basados en archivos:</target>
        </trans-unit>
        <trans-unit id="a2cc0a4098a413d65c205891e90d2e0f34f9d949" translate="yes" xml:space="preserve">
          <source>A central concept of PHPUnit's Database Extension are DataSets and DataTables. You should try to understand this simple concept to master database testing with PHPUnit. The DataSet and DataTable are an abstraction layer around your database tables, rows and columns. A simple API hides the underlying database contents in an object structure, which can also be implemented by other non-database sources.</source>
          <target state="translated">Un concepto central de la extensión de la base de datos de PHPUnit son los conjuntos de datos y las tablas de datos.Debes tratar de entender este simple concepto para dominar las pruebas de bases de datos con la Unidad PHP.El Conjunto de Datos y la Tabla de Datos son una capa de abstracción alrededor de las tablas,filas y columnas de la base de datos.Una simple API oculta el contenido subyacente de la base de datos en una estructura de objetos,que también puede ser implementada por otras fuentes que no sean de la base de datos.</target>
        </trans-unit>
        <trans-unit id="5b9c466f16b0f5f8a7262bc98a8bd1d3f37da6bc" translate="yes" xml:space="preserve">
          <source>A common question, especially from developers new to PHPUnit, is whether using &lt;code&gt;$this-&amp;gt;assertTrue()&lt;/code&gt; or &lt;code&gt;self::assertTrue()&lt;/code&gt;, for instance, is &quot;the right way&quot; to invoke an assertion. The short answer is: there is no right way. And there is no wrong way, either. It is a matter of personal preference.</source>
          <target state="translated">Una pregunta com&amp;uacute;n, especialmente de los desarrolladores nuevos en PHPUnit, es si usar &lt;code&gt;$this-&amp;gt;assertTrue()&lt;/code&gt; o &lt;code&gt;self::assertTrue()&lt;/code&gt; , por ejemplo, es &quot;la forma correcta&quot; de invocar una aserci&amp;oacute;n. La respuesta corta es: no hay una forma correcta. Y tampoco hay una forma incorrecta. Es una cuesti&amp;oacute;n de preferencia personal.</target>
        </trans-unit>
        <trans-unit id="881acaaeaf80f46271da9620d6c9f77b3e887eac" translate="yes" xml:space="preserve">
          <source>A complete list of possibilities and examples can be found at &lt;a href=&quot;incomplete-and-skipped-tests#incomplete-and-skipped-tests.requires.tables.api&quot;&gt;Table 7.3&lt;/a&gt;</source>
          <target state="translated">Se puede encontrar una lista completa de posibilidades y ejemplos en la &lt;a href=&quot;incomplete-and-skipped-tests#incomplete-and-skipped-tests.requires.tables.api&quot;&gt;Tabla 7.3.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b9f5037806635c8da7cf25ff7b7b5be88d00106e" translate="yes" xml:space="preserve">
          <source>A consumer is a test method that depends on one or more producers and their return values.</source>
          <target state="translated">Un consumidor es un método de prueba que depende de uno o más productores y sus valores de retorno.</target>
        </trans-unit>
        <trans-unit id="87bc3e8d56e3576276d336c4a3bf6c980298be30" translate="yes" xml:space="preserve">
          <source>A data provider method must be &lt;code&gt;public&lt;/code&gt; and either return an array of arrays or an object that implements the &lt;code&gt;Iterator&lt;/code&gt; interface and yields an array for each iteration step. For each array that is part of the collection the test method will be called with the contents of the array as its arguments.</source>
          <target state="translated">Un m&amp;eacute;todo de proveedor de datos debe ser &lt;code&gt;public&lt;/code&gt; y devolver una matriz de matrices o un objeto que implemente la interfaz &lt;code&gt;Iterator&lt;/code&gt; y genere una matriz para cada paso de iteraci&amp;oacute;n. Para cada matriz que forma parte de la colecci&amp;oacute;n, se llamar&amp;aacute; al m&amp;eacute;todo de prueba con el contenido de la matriz como argumentos.</target>
        </trans-unit>
        <trans-unit id="cad2307db6b9c400a642024bfb42e597e930b0ef" translate="yes" xml:space="preserve">
          <source>A doc comment in PHP must start with &lt;code&gt;/**&lt;/code&gt; and end with &lt;code&gt;*/&lt;/code&gt;. Annotations in any other style of comment will be ignored.</source>
          <target state="translated">Un comentario de documento en PHP debe comenzar con &lt;code&gt;/**&lt;/code&gt; y terminar con &lt;code&gt;*/&lt;/code&gt; . Se ignorar&amp;aacute;n las anotaciones en cualquier otro estilo de comentario.</target>
        </trans-unit>
        <trans-unit id="cd541708c4fd27e803dc828564f00ecf3458d4b8" translate="yes" xml:space="preserve">
          <source>A drawback of this approach is that we have no control over the order in which the tests are run. This can lead to problems with regard to test dependencies, see &lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.test-dependencies&quot;&gt;the section called &amp;ldquo;Test Dependencies&amp;rdquo;&lt;/a&gt;. In the next section you will see how you can make the test execution order explicit by using the XML configuration file.</source>
          <target state="translated">Un inconveniente de este enfoque es que no tenemos control sobre el orden en que se ejecutan las pruebas. Esto puede ocasionar problemas con respecto a las dependencias de prueba, consulte &lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.test-dependencies&quot;&gt;la secci&amp;oacute;n denominada &quot;Dependencias de prueba&quot;&lt;/a&gt; . En la siguiente secci&amp;oacute;n, ver&amp;aacute; c&amp;oacute;mo puede hacer expl&amp;iacute;cito el orden de ejecuci&amp;oacute;n de la prueba utilizando el archivo de configuraci&amp;oacute;n XML.</target>
        </trans-unit>
        <trans-unit id="7809ae599295b4dd632a11320a1f45ab8ec8c88f" translate="yes" xml:space="preserve">
          <source>A fixture describes the initial state your application and database are in when you execute a test.</source>
          <target state="translated">Un accesorio describe el estado inicial en el que se encuentran su aplicación y su base de datos al ejecutar una prueba.</target>
        </trans-unit>
        <trans-unit id="fdd2b82e21f85df0f3ae4eeab236d6f44282531f" translate="yes" xml:space="preserve">
          <source>A global variable &lt;code&gt;$foo = 'bar';&lt;/code&gt; is stored as &lt;code&gt;$GLOBALS['foo'] = 'bar';&lt;/code&gt;.</source>
          <target state="translated">Una variable global &lt;code&gt;$foo = 'bar';&lt;/code&gt; se almacena como &lt;code&gt;$GLOBALS['foo'] = 'bar';&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6c6abca3eabc3075164e1273782032e88ce6fc58" translate="yes" xml:space="preserve">
          <source>A good example of a fixture that makes sense to share across several tests is a database connection: you log into the database once and reuse the database connection instead of creating a new connection for each test. This makes your tests run faster.</source>
          <target state="translated">Un buen ejemplo de un accesorio que tiene sentido compartir a través de varias pruebas es una conexión a la base de datos:se entra en la base de datos una vez y se reutiliza la conexión a la base de datos en lugar de crear una nueva conexión para cada prueba.Esto hace que las pruebas se ejecuten más rápido.</target>
        </trans-unit>
        <trans-unit id="e9ad2bd541722a94b4a67310fdbfeba1c136d7c5" translate="yes" xml:space="preserve">
          <source>A producer is a test method that yields its unit under test as return value.</source>
          <target state="translated">Un productor es un método de prueba que produce su unidad bajo prueba como valor de retorno.</target>
        </trans-unit>
        <trans-unit id="8e6f4cf7fffc73d4e7408e5c1d91cde257740414" translate="yes" xml:space="preserve">
          <source>A regexp matching &lt;a href=&quot;http://php.net/manual/en/reserved.constants.php#constant.php-os&quot;&gt;PHP_OS&lt;/a&gt;</source>
          <target state="translated">Una &lt;a href=&quot;http://php.net/manual/en/reserved.constants.php#constant.php-os&quot;&gt;expresi&amp;oacute;n regular que&lt;/a&gt; coincide con PHP_OS</target>
        </trans-unit>
        <trans-unit id="94edd608d6f115d9df0299e3359fe07c53829de8" translate="yes" xml:space="preserve">
          <source>A simpler alternative to setting up a callback method may be to specify a list of desired return values. You can do this with the &lt;code&gt;onConsecutiveCalls()&lt;/code&gt; method. See &lt;a href=&quot;test-doubles#test-doubles.stubs.examples.StubTest7.php&quot;&gt;Example 9.8&lt;/a&gt; for an example.</source>
          <target state="translated">Una alternativa m&amp;aacute;s sencilla a la configuraci&amp;oacute;n de un m&amp;eacute;todo de devoluci&amp;oacute;n de llamada puede ser especificar una lista de valores de retorno deseados. Puede hacer esto con el m&amp;eacute;todo &lt;code&gt;onConsecutiveCalls()&lt;/code&gt; . Consulte el &lt;a href=&quot;test-doubles#test-doubles.stubs.examples.StubTest7.php&quot;&gt;Ejemplo 9.8&lt;/a&gt; para ver un ejemplo.</target>
        </trans-unit>
        <trans-unit id="8d9defe78836483213d5fcf93968970a4622e6d1" translate="yes" xml:space="preserve">
          <source>A table is also represented by the following interface:</source>
          <target state="translated">Una tabla también está representada por la siguiente interfaz:</target>
        </trans-unit>
        <trans-unit id="b2f8c420b8b61a63466acecb0a6e794694162b04" translate="yes" xml:space="preserve">
          <source>A test annotated with &lt;code&gt;@large&lt;/code&gt; will fail if it takes longer than 60 seconds to execute. This timeout is configurable via the &lt;code&gt;timeoutForLargeTests&lt;/code&gt; attribute in the XML configuration file.</source>
          <target state="translated">Una prueba anotada con &lt;code&gt;@large&lt;/code&gt; fallar&amp;aacute; si tarda m&amp;aacute;s de 60 segundos en ejecutarse. Este tiempo de espera se puede configurar mediante el atributo &lt;code&gt;timeoutForLargeTests&lt;/code&gt; en el archivo de configuraci&amp;oacute;n XML.</target>
        </trans-unit>
        <trans-unit id="c0dca38740172f19f41c60f049eb9804c07d8318" translate="yes" xml:space="preserve">
          <source>A test annotated with &lt;code&gt;@medium&lt;/code&gt; will fail if it takes longer than 10 seconds to execute. This timeout is configurable via the &lt;code&gt;timeoutForMediumTests&lt;/code&gt; attribute in the XML configuration file.</source>
          <target state="translated">Una prueba anotada con &lt;code&gt;@medium&lt;/code&gt; fallar&amp;aacute; si tarda m&amp;aacute;s de 10 segundos en ejecutarse. Este tiempo de espera se puede configurar mediante el atributo &lt;code&gt;timeoutForMediumTests&lt;/code&gt; en el archivo de configuraci&amp;oacute;n XML.</target>
        </trans-unit>
        <trans-unit id="ef80ef17fc5a4b1d7abfe0e64e4fa918e225ad84" translate="yes" xml:space="preserve">
          <source>A test can be tagged as belonging to one or more groups using the &lt;code&gt;@group&lt;/code&gt; annotation like this</source>
          <target state="translated">Una prueba se puede etiquetar como perteneciente a uno o m&amp;aacute;s grupos usando la anotaci&amp;oacute;n &lt;code&gt;@group&lt;/code&gt; como esta</target>
        </trans-unit>
        <trans-unit id="9e86986342fad073dbad7d712faaab7d085f0a3f" translate="yes" xml:space="preserve">
          <source>A test may have more than one &lt;code&gt;@depends&lt;/code&gt; annotation. PHPUnit does not change the order in which tests are executed, you have to ensure that the dependencies of a test can actually be met before the test is run.</source>
          <target state="translated">Una prueba puede tener m&amp;aacute;s de una anotaci&amp;oacute;n &lt;code&gt;@depends&lt;/code&gt; . PHPUnit no cambia el orden en el que se ejecutan las pruebas, debe asegurarse de que las dependencias de una prueba se puedan cumplir antes de ejecutar la prueba.</target>
        </trans-unit>
        <trans-unit id="51e4deafef7f62319d5ddb7e9da275eecd586eed" translate="yes" xml:space="preserve">
          <source>A test method can accept arbitrary arguments. These arguments are to be provided by a data provider method (&lt;code&gt;additionProvider()&lt;/code&gt; in &lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.data-providers.examples.DataTest.php&quot;&gt;Example 2.5&lt;/a&gt;). The data provider method to be used is specified using the &lt;code&gt;@dataProvider&lt;/code&gt; annotation.</source>
          <target state="translated">Un m&amp;eacute;todo de prueba puede aceptar argumentos arbitrarios. Estos argumentos deben ser proporcionados por un m&amp;eacute;todo de proveedor de datos ( &lt;code&gt;additionProvider()&lt;/code&gt; en el &lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.data-providers.examples.DataTest.php&quot;&gt;ejemplo 2.5&lt;/a&gt; ). El m&amp;eacute;todo del proveedor de datos que se utilizar&amp;aacute; se especifica mediante la anotaci&amp;oacute;n &lt;code&gt;@dataProvider&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="671dba06ced306515f4a13da3ef267812d9ecc75" translate="yes" xml:space="preserve">
          <source>A test method can accept arbitrary arguments. These arguments are to be provided by a data provider method (&lt;code&gt;provider()&lt;/code&gt; in &lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.data-providers.examples.DataTest.php&quot;&gt;Example 2.5&lt;/a&gt;). The data provider method to be used is specified using the &lt;code&gt;@dataProvider&lt;/code&gt; annotation.</source>
          <target state="translated">Un m&amp;eacute;todo de prueba puede aceptar argumentos arbitrarios. Estos argumentos deben ser proporcionados por un m&amp;eacute;todo de proveedor de datos ( &lt;code&gt;provider()&lt;/code&gt; en el &lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.data-providers.examples.DataTest.php&quot;&gt;Ejemplo 2.5&lt;/a&gt; ). El m&amp;eacute;todo del proveedor de datos que se utilizar&amp;aacute; se especifica mediante la anotaci&amp;oacute;n &lt;code&gt;@dataProvider&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="edb072bd6f310b4f9022e694353efc0c9bd55208" translate="yes" xml:space="preserve">
          <source>A test that does not perform an assertion will be marked as risky when this check is enabled. Expectations on mock objects or annotations such as &lt;code&gt;@expectedException&lt;/code&gt; count as an assertion.</source>
          <target state="translated">Una prueba que no realiza una aserci&amp;oacute;n se marcar&amp;aacute; como riesgosa cuando esta verificaci&amp;oacute;n est&amp;eacute; habilitada. Las expectativas sobre objetos simulados o anotaciones como &lt;code&gt;@expectedException&lt;/code&gt; cuentan como una aserci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="86ceceb320681a7883f4791702c4f6dff9b072c4" translate="yes" xml:space="preserve">
          <source>A test that emits output will fail in strict mode.</source>
          <target state="translated">Una prueba que emite salida fallará en modo estricto.</target>
        </trans-unit>
        <trans-unit id="31af49b1f7286bf4c1d516a41d1cadbc83ef2401" translate="yes" xml:space="preserve">
          <source>A test that emits output, for instance by invoking &lt;code&gt;print&lt;/code&gt; in either the test code or the tested code, will be marked as risky when this check is enabled.</source>
          <target state="translated">Una prueba que emite una salida, por ejemplo, al invocar &lt;code&gt;print&lt;/code&gt; en el c&amp;oacute;digo de prueba o en el c&amp;oacute;digo probado, se marcar&amp;aacute; como riesgosa cuando esta verificaci&amp;oacute;n est&amp;eacute; habilitada.</target>
        </trans-unit>
        <trans-unit id="eda6dde946e10b867b2d0a93222eb709263b939e" translate="yes" xml:space="preserve">
          <source>A test that has been skipped is denoted by an &lt;code&gt;S&lt;/code&gt; in the output of the PHPUnit command-line test runner, as shown in the following example:</source>
          <target state="translated">Una prueba que se ha omitido se indica con una &lt;code&gt;S&lt;/code&gt; en la salida del ejecutor de pruebas de la l&amp;iacute;nea de comandos PHPUnit, como se muestra en el siguiente ejemplo:</target>
        </trans-unit>
        <trans-unit id="5a1f03337962460f29f571536b5cd0bb7fe5bb92" translate="yes" xml:space="preserve">
          <source>A test that has more than one &lt;code&gt;@depends&lt;/code&gt; annotation will get a fixture from the first producer as the first argument, a fixture from the second producer as the second argument, and so on. See &lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.examples.MultipleDependencies.php&quot;&gt;Example 2.4&lt;/a&gt;</source>
          <target state="translated">Una prueba que tiene m&amp;aacute;s de una anotaci&amp;oacute;n &lt;code&gt;@depends&lt;/code&gt; obtendr&amp;aacute; un accesorio del primer productor como primer argumento, un accesorio del segundo productor como segundo argumento, y as&amp;iacute; sucesivamente. Ver &lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.examples.MultipleDependencies.php&quot;&gt;ejemplo 2.4&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e402e1062e2da2deb0b60194c07ecce012b544fe" translate="yes" xml:space="preserve">
          <source>A test that is annotated with &lt;code&gt;@covers&lt;/code&gt; and executes code that is not listed using a &lt;code&gt;@covers&lt;/code&gt; or &lt;code&gt;@uses&lt;/code&gt; annotation will be marked as risky when this check is enabled.</source>
          <target state="translated">Una prueba que est&amp;aacute; anotada con &lt;code&gt;@covers&lt;/code&gt; y ejecuta c&amp;oacute;digo que no est&amp;aacute; en la lista con una anotaci&amp;oacute;n &lt;code&gt;@covers&lt;/code&gt; o &lt;code&gt;@uses&lt;/code&gt; se marcar&amp;aacute; como riesgosa cuando se habilite esta verificaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="bdebb184bcf44955f83278fe9a6f20ee4973c4b7" translate="yes" xml:space="preserve">
          <source>A test that is not annotated with &lt;code&gt;@medium&lt;/code&gt; or &lt;code&gt;@large&lt;/code&gt; will be treated as if it were annotated with &lt;code&gt;@small&lt;/code&gt;. A small test will fail if it takes longer than 1 second to execute. This timeout is configurable via the &lt;code&gt;timeoutForSmallTests&lt;/code&gt; attribute in the XML configuration file.</source>
          <target state="translated">Una prueba que no est&amp;eacute; anotada con &lt;code&gt;@medium&lt;/code&gt; o &lt;code&gt;@large&lt;/code&gt; se tratar&amp;aacute; como si estuviera anotada con &lt;code&gt;@small&lt;/code&gt; . Una peque&amp;ntilde;a prueba fallar&amp;aacute; si tarda m&amp;aacute;s de 1 segundo en ejecutarse. Este tiempo de espera se puede configurar mediante el atributo &lt;code&gt;timeoutForSmallTests&lt;/code&gt; en el archivo de configuraci&amp;oacute;n XML.</target>
        </trans-unit>
        <trans-unit id="92186c74c6ed2a2426731489bf9bcf1fc3984a05" translate="yes" xml:space="preserve">
          <source>A time limit can be enforced for the execution of a test if the &lt;code&gt;PHP_Invoker&lt;/code&gt; package is installed and the &lt;code&gt;pcntl&lt;/code&gt; extension is available. The enforcing of this time limit can be enabled by using the &lt;code&gt;--enforce-time-limit&lt;/code&gt; option on the commandline or by setting &lt;code&gt;beStrictAboutTestSize=&quot;true&quot;&lt;/code&gt; in PHPUnit's XML configuration file.</source>
          <target state="translated">Se puede &lt;code&gt;PHP_Invoker&lt;/code&gt; un l&amp;iacute;mite de tiempo para la ejecuci&amp;oacute;n de una prueba si el paquete PHP_Invoker est&amp;aacute; instalado y la extensi&amp;oacute;n &lt;code&gt;pcntl&lt;/code&gt; est&amp;aacute; disponible. La aplicaci&amp;oacute;n de este l&amp;iacute;mite de tiempo se puede habilitar usando la &lt;code&gt;--enforce-time-limit&lt;/code&gt; en la l&amp;iacute;nea de comandos o configurando &lt;code&gt;beStrictAboutTestSize=&quot;true&quot;&lt;/code&gt; en el archivo de configuraci&amp;oacute;n XML de PHPUnit.</target>
        </trans-unit>
        <trans-unit id="35d12a7dc46fb6451a2bb640e4a1c9f6957db27f" translate="yes" xml:space="preserve">
          <source>A utility class for invoking callables with a timeout. This package is required to enforce test timeouts in strict mode.</source>
          <target state="translated">Una clase de utilidad para invocar a los llamables con un tiempo de espera.Este paquete es necesario para hacer cumplir los tiempos muertos de prueba en modo estricto.</target>
        </trans-unit>
        <trans-unit id="030bb20623fb579952c8b1090c90b671688fd022" translate="yes" xml:space="preserve">
          <source>A workflow for database assertions in your tests then consists of three simple steps:</source>
          <target state="translated">Un flujo de trabajo para las aseveraciones de la base de datos en sus pruebas consiste entonces en tres simples pasos:</target>
        </trans-unit>
        <trans-unit id="251021416b971ab79364875e47130a9488c9d09b" translate="yes" xml:space="preserve">
          <source>Accessing the Test Connection you can automatically create a DataSet that consists of all the tables with their content in the database specified as second parameter to the Connections Factory method.</source>
          <target state="translated">Accediendo a la Conexión de Prueba se puede crear automáticamente un DataSet que consiste en todas las tablas con su contenido en la base de datos especificada como segundo parámetro del método de la Fábrica de Conexiones.</target>
        </trans-unit>
        <trans-unit id="f0c808d07d2cb8ce95017587554acf4491b7bd36" translate="yes" xml:space="preserve">
          <source>Adding a table just by name is an implicit way to define the data-table with the following query:</source>
          <target state="translated">Añadir una tabla sólo por su nombre es una forma implícita de definir la tabla de datos con la siguiente consulta:</target>
        </trans-unit>
        <trans-unit id="4d705e897f0dc7e07a973b1ee2f827c351764e98" translate="yes" xml:space="preserve">
          <source>Additional options that are not available as command-line options are:</source>
          <target state="translated">Las opciones adicionales que no están disponibles como opciones de la línea de mando lo están:</target>
        </trans-unit>
        <trans-unit id="b989424c2ac5f9904e7c5edb378dc2e7a030f601" translate="yes" xml:space="preserve">
          <source>Additionally you have to realize that the database is essentially a global input variable to your code. Two tests in your test suite could run against the same database, possibly reusing data multiple times. Failures in one test can easily affect the result of the following tests making your testing experience very difficult. The previously mentioned cleanup step is of major importance to solve the &amp;ldquo;database is a global input&amp;rdquo; problem.</source>
          <target state="translated">Adem&amp;aacute;s, debe darse cuenta de que la base de datos es esencialmente una variable de entrada global para su c&amp;oacute;digo. Dos pruebas en su conjunto de pruebas podr&amp;iacute;an ejecutarse en la misma base de datos, posiblemente reutilizando datos varias veces. Las fallas en una prueba pueden afectar f&amp;aacute;cilmente el resultado de las siguientes pruebas, lo que hace que su experiencia de prueba sea muy dif&amp;iacute;cil. El paso de limpieza mencionado anteriormente es de gran importancia para resolver el problema de &quot;la base de datos es una entrada global&quot;.</target>
        </trans-unit>
        <trans-unit id="d902466810f937d060914e2d70d7ec4ada1b74f6" translate="yes" xml:space="preserve">
          <source>After the database is reset and loaded with its initial state the actual test is executed by PHPUnit. This part of the test code does not require awareness of the Database Extension at all, you can go on and test whatever you like with your code.</source>
          <target state="translated">Después de que la base de datos se resetea y se carga con su estado inicial,la prueba real es ejecutada por PHPUnit.Esta parte del código de la prueba no requiere conocimiento de la Extensión de la Base de Datos en absoluto,puedes seguir y probar lo que quieras con tu código.</target>
        </trans-unit>
        <trans-unit id="0f1f3af0134958c3701dcdff53fac7c23aa6be82" translate="yes" xml:space="preserve">
          <source>Agile Documentation</source>
          <target state="translated">Documentación ágil</target>
        </trans-unit>
        <trans-unit id="8f87d2a3a2ffbd36f9ed4721a4f33588f19cbf00" translate="yes" xml:space="preserve">
          <source>Agile Documentation can be used to document the assumptions you make about the external packages that you use in your project. When you use an external package, you are exposed to the risks that the package will not behave as you expect, and that future versions of the package will change in subtle ways that will break your code, without you knowing it. You can address these risks by writing a test every time you make an assumption. If your test succeeds, your assumption is valid. If you document all your assumptions with tests, future releases of the external package will be no cause for concern: if the tests succeed, your system should continue working.</source>
          <target state="translated">La Documentación Ágil puede ser utilizada para documentar las suposiciones que se hacen sobre los paquetes externos que se utilizan en el proyecto.Cuando usas un paquete externo,estás expuesto a los riesgos de que el paquete no se comporte como esperas,y que las futuras versiones del paquete cambien de manera sutil que rompan tu código,sin que lo sepas.Puedes abordar estos riesgos escribiendo una prueba cada vez que hagas una suposición.Si tu prueba tiene éxito,tu suposición es válida.Si documenta todas sus suposiciones con pruebas,las futuras versiones del paquete externo no serán motivo de preocupación:si las pruebas tienen éxito,su sistema debería seguir funcionando.</target>
        </trans-unit>
        <trans-unit id="c24d956ff0787e8fa46a1cbd039fd05f428f328a" translate="yes" xml:space="preserve">
          <source>All data providers are executed before both the call to the &lt;code&gt;setUpBeforeClass&lt;/code&gt; static method and the first call to the &lt;code&gt;setUp&lt;/code&gt; method. Because of that you can't access any variables you create there from within a data provider. This is required in order for PHPUnit to be able to compute the total number of tests.</source>
          <target state="translated">Todos los proveedores de datos se ejecutan antes de la llamada al m&amp;eacute;todo est&amp;aacute;tico &lt;code&gt;setUpBeforeClass&lt;/code&gt; y la primera llamada al m&amp;eacute;todo &lt;code&gt;setUp&lt;/code&gt; . Por eso, no puede acceder a las variables que cree all&amp;iacute; desde un proveedor de datos. Esto es necesario para que PHPUnit pueda calcular el n&amp;uacute;mero total de pruebas.</target>
        </trans-unit>
        <trans-unit id="eaef68fd343a420a4c9c8b395e968d9ab2f7bc86" translate="yes" xml:space="preserve">
          <source>All official releases of code distributed by the PHPUnit Project are signed by the release manager for the release. PGP signatures and SHA1 hashes are available for verification on &lt;a href=&quot;https://phar.phpunit.de/&quot;&gt;phar.phpunit.de&lt;/a&gt;.</source>
          <target state="translated">Todas las versiones oficiales de c&amp;oacute;digo distribuidas por PHPUnit Project est&amp;aacute;n firmadas por el administrador de versiones para la versi&amp;oacute;n. Las firmas PGP y los hash SHA1 est&amp;aacute;n disponibles para verificaci&amp;oacute;n en &lt;a href=&quot;https://phar.phpunit.de/&quot;&gt;phar.phpunit.de&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fa00ad560013bb6da49b999ea951e7f5a8632e5c" translate="yes" xml:space="preserve">
          <source>All unit tests run correctly.</source>
          <target state="translated">Todas las pruebas de la unidad funcionan correctamente.</target>
        </trans-unit>
        <trans-unit id="90a6a03e0c094a86de1c97c71e87474bb968c195" translate="yes" xml:space="preserve">
          <source>Alternatively, the agile documentation can be generated in HTML or plain text format and written to a file using the &lt;code&gt;--testdox-html&lt;/code&gt; and &lt;code&gt;--testdox-text&lt;/code&gt; arguments.</source>
          <target state="translated">Alternativamente, la documentaci&amp;oacute;n &amp;aacute;gil se puede generar en HTML o en formato de texto sin formato y escribir en un archivo usando los &lt;code&gt;--testdox-html&lt;/code&gt; y &lt;code&gt;--testdox-text&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e40f26b50ad19935744e0cdc1a2de4f033096c53" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use YAML dataset for the guestbook example:</source>
          <target state="translated">Alternativamente,puede usar el conjunto de datos YAML para el ejemplo del libro de visitas:</target>
        </trans-unit>
        <trans-unit id="315af3c153b92914eadb98c57a342c67624b5cdc" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use the &lt;code&gt;@expectedException&lt;/code&gt;, &lt;code&gt;@expectedExceptionCode&lt;/code&gt;, &lt;code&gt;@expectedExceptionMessage&lt;/code&gt;, and &lt;code&gt;@expectedExceptionMessageRegExp&lt;/code&gt; annotations to set up expectations for exceptions raised by the code under test. &lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.exceptions.examples.ExceptionTest2.php&quot;&gt;Example 2.11&lt;/a&gt; shows an example.</source>
          <target state="translated">Alternativamente, puede usar las &lt;code&gt;@expectedException&lt;/code&gt; , &lt;code&gt;@expectedExceptionCode&lt;/code&gt; , &lt;code&gt;@expectedExceptionMessage&lt;/code&gt; y &lt;code&gt;@expectedExceptionMessageRegExp&lt;/code&gt; para establecer expectativas de excepciones generadas por el c&amp;oacute;digo bajo prueba. &lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.exceptions.examples.ExceptionTest2.php&quot;&gt;El ejemplo 2.11&lt;/a&gt; muestra un ejemplo.</target>
        </trans-unit>
        <trans-unit id="341988a6c9b5702f02140fb3bed1b4fc93feadd3" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use the &lt;code&gt;@test&lt;/code&gt; annotation in a method's docblock to mark it as a test method.</source>
          <target state="translated">Alternativamente, puede utilizar la anotaci&amp;oacute;n &lt;code&gt;@test&lt;/code&gt; en el bloque de documentos de un m&amp;eacute;todo para marcarlo como m&amp;eacute;todo de prueba.</target>
        </trans-unit>
        <trans-unit id="5084de858cfba2f5e49ebef591cabe71eeea0e28" translate="yes" xml:space="preserve">
          <source>Alternatively, you can write the stub yourself and improve your design along the way. Widely used resources are accessed through a single fa&amp;ccedil;ade, so you can easily replace the resource with the stub. For example, instead of having direct database calls scattered throughout the code, you have a single &lt;code&gt;Database&lt;/code&gt; object, an implementor of the &lt;code&gt;IDatabase&lt;/code&gt; interface. Then, you can create a stub implementation of &lt;code&gt;IDatabase&lt;/code&gt; and use it for your tests. You can even create an option for running the tests with the stub database or the real database, so you can use your tests for both local testing during development and integration testing with the real database.</source>
          <target state="translated">Alternativamente, puede escribir el tal&amp;oacute;n usted mismo y mejorar su dise&amp;ntilde;o en el camino. Se accede a los recursos m&amp;aacute;s utilizados a trav&amp;eacute;s de una sola fachada, por lo que puede reemplazar f&amp;aacute;cilmente el recurso con el tal&amp;oacute;n. Por ejemplo, en lugar de tener llamadas directas a la base de datos esparcidas por todo el c&amp;oacute;digo, tiene un &amp;uacute;nico objeto de &lt;code&gt;Database&lt;/code&gt; , un implementador de la interfaz &lt;code&gt;IDatabase&lt;/code&gt; . Luego, puede crear una implementaci&amp;oacute;n de &lt;code&gt;IDatabase&lt;/code&gt; auxiliar de IDatabase y usarla para sus pruebas. Incluso puede crear una opci&amp;oacute;n para ejecutar las pruebas con la base de datos stub o la base de datos real, de modo que pueda usar sus pruebas tanto para pruebas locales durante el desarrollo como para las pruebas de integraci&amp;oacute;n con la base de datos real.</target>
        </trans-unit>
        <trans-unit id="10a9c3fe6e543c49b380dc2d74013a76e7a379c1" translate="yes" xml:space="preserve">
          <source>Am I required to use PDO in my application for the Database Extension to work?</source>
          <target state="translated">¿Estoy obligado a usar PDO en mi aplicación para que funcione la Extensión de la Base de Datos?</target>
        </trans-unit>
        <trans-unit id="852c4f19f8b44b0b90fe06e8b12f22127c8dc374" translate="yes" xml:space="preserve">
          <source>An annotation is a special form of syntactic metadata that can be added to the source code of some programming languages. While PHP has no dedicated language feature for annotating source code, the usage of tags such as &lt;code&gt;@annotation arguments&lt;/code&gt; in a documentation block has been established in the PHP community to annotate source code. In PHP documentation blocks are reflective: they can be accessed through the Reflection API's &lt;code&gt;getDocComment()&lt;/code&gt; method on the function, class, method, and attribute level. Applications such as PHPUnit use this information at runtime to configure their behaviour.</source>
          <target state="translated">Una anotaci&amp;oacute;n es una forma especial de metadatos sint&amp;aacute;cticos que se pueden agregar al c&amp;oacute;digo fuente de algunos lenguajes de programaci&amp;oacute;n. Si bien PHP no tiene una funci&amp;oacute;n de lenguaje dedicada para anotar el c&amp;oacute;digo fuente, el uso de etiquetas como los &lt;code&gt;@annotation arguments&lt;/code&gt; en un bloque de documentaci&amp;oacute;n se ha establecido en la comunidad PHP para anotar el c&amp;oacute;digo fuente. En la documentaci&amp;oacute;n de PHP, los bloques son reflectantes: se puede acceder a ellos a trav&amp;eacute;s del m&amp;eacute;todo &lt;code&gt;getDocComment()&lt;/code&gt; la API Reflection en el nivel de funci&amp;oacute;n, clase, m&amp;eacute;todo y atributo. Aplicaciones como PHPUnit utilizan esta informaci&amp;oacute;n en tiempo de ejecuci&amp;oacute;n para configurar su comportamiento.</target>
        </trans-unit>
        <trans-unit id="253fcad13584a93785c1425f5afec5813ce1edd3" translate="yes" xml:space="preserve">
          <source>An array of column-names of the table, ordered by their appearance in the result-set.</source>
          <target state="translated">Una serie de nombres de columnas de la tabla,ordenados por su apariencia en el conjunto de resultados.</target>
        </trans-unit>
        <trans-unit id="1359c099ea01abfcb07df2261c8388ffa9ef100d" translate="yes" xml:space="preserve">
          <source>An array of the primary-key columns.</source>
          <target state="translated">Un conjunto de las columnas de claves primarias.</target>
        </trans-unit>
        <trans-unit id="2054754d639ef3322047c5e1e5f32d3452f886dc" translate="yes" xml:space="preserve">
          <source>An incomplete test is denoted by an &lt;code&gt;I&lt;/code&gt; in the output of the PHPUnit command-line test runner, as shown in the following example:</source>
          <target state="translated">Una prueba incompleta se indica con una &lt;code&gt;I&lt;/code&gt; en la salida del corredor de pruebas de l&amp;iacute;nea de comandos PHPUnit, como se muestra en el siguiente ejemplo:</target>
        </trans-unit>
        <trans-unit id="de3b78b64190965365f72568ffbe049d4ba32c22" translate="yes" xml:space="preserve">
          <source>Annotation</source>
          <target state="translated">Annotation</target>
        </trans-unit>
        <trans-unit id="74dc68d72e7c6f05cb32f3c5f38a50a1624e1e2a" translate="yes" xml:space="preserve">
          <source>Annotations</source>
          <target state="translated">Annotations</target>
        </trans-unit>
        <trans-unit id="7e1638d3363efdfbe5466eef1db2d2342c31fe3e" translate="yes" xml:space="preserve">
          <source>Another example</source>
          <target state="translated">Otro ejemplo</target>
        </trans-unit>
        <trans-unit id="b7900e9d12a26991b8b19bfcb6a66a6070c45e8b" translate="yes" xml:space="preserve">
          <source>Another file-based dataset is based on CSV files. Each table of the dataset is represented as a single CSV file. For our guestbook example we would define a guestbook-table.csv file:</source>
          <target state="translated">Otro conjunto de datos basado en archivos se basa en archivos CSV.Cada tabla del conjunto de datos se representa como un único archivo CSV.Para nuestro ejemplo del libro de visitas definiríamos un archivo guestbook-table.csv:</target>
        </trans-unit>
        <trans-unit id="8812a383fa62bd4212581ad1a6fac29d6424e14f" translate="yes" xml:space="preserve">
          <source>Any PHP version identifier</source>
          <target state="translated">Cualquier identificador de versión de PHP</target>
        </trans-unit>
        <trans-unit id="f098d828b6863d6311eaee378fd646853b417d67" translate="yes" xml:space="preserve">
          <source>Any PHPUnit version identifier</source>
          <target state="translated">Cualquier identificador de versión de PHPUnit</target>
        </trans-unit>
        <trans-unit id="ab8746210bd4969f739e4720404b6ce9b9ff256d" translate="yes" xml:space="preserve">
          <source>Any attacker can create a public key and upload it to the public key servers. They can then create a malicious release signed by this fake key. Then, if you tried to verify the signature of this corrupt release, it would succeed because the key was not the &quot;real&quot; key. Therefore, you need to validate the authenticity of this key. Validating the authenticity of a public key, however, is outside the scope of this documentation.</source>
          <target state="translated">Cualquier atacante puede crear una clave pública y subirla a los servidores de clave pública.Luego pueden crear una versión maliciosa firmada por esta clave falsa.Entonces,si intentara verificar la firma de esta versión corrupta,tendría éxito porque la clave no era la &quot;verdadera&quot;.Por lo tanto,necesita validar la autenticidad de esta clave.Sin embargo,validar la autenticidad de una clave pública está fuera del alcance de esta documentación.</target>
        </trans-unit>
        <trans-unit id="b0281036f5b2ed678588a68cc4bd8474bf98b6f0" translate="yes" xml:space="preserve">
          <source>Any defined &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; has a name and requires a definition of all the columns with their names. It can contain zero or any positive number of nested &lt;code&gt;&amp;lt;row&amp;gt;&lt;/code&gt; elements. Defining no &lt;code&gt;&amp;lt;row&amp;gt;&lt;/code&gt; element means the table is empty. The &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;null /&amp;gt;&lt;/code&gt; tags have to be specified in the order of the previously given &lt;code&gt;&amp;lt;column&amp;gt;&lt;/code&gt; elements. The &lt;code&gt;&amp;lt;null /&amp;gt;&lt;/code&gt; tag obviously means that the value is NULL.</source>
          <target state="translated">Cualquier &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; definida tiene un nombre y requiere una definici&amp;oacute;n de todas las columnas con sus nombres. Puede contener cero o cualquier n&amp;uacute;mero positivo de elementos &lt;code&gt;&amp;lt;row&amp;gt;&lt;/code&gt; anidados . No definir ning&amp;uacute;n elemento &lt;code&gt;&amp;lt;row&amp;gt;&lt;/code&gt; significa que la tabla est&amp;aacute; vac&amp;iacute;a. Las etiquetas &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; y &lt;code&gt;&amp;lt;null /&amp;gt;&lt;/code&gt; deben especificarse en el orden de los elementos &lt;code&gt;&amp;lt;column&amp;gt;&lt;/code&gt; dados anteriormente . La etiqueta &lt;code&gt;&amp;lt;null /&amp;gt;&lt;/code&gt; obviamente significa que el valor es NULL.</target>
        </trans-unit>
        <trans-unit id="5b82bd9f1b3b8a177b8a674dc8cdfed69ee652d4" translate="yes" xml:space="preserve">
          <source>Any extension name along with an optional version identifier</source>
          <target state="translated">Cualquier nombre de extensión junto con un identificador de versión opcional</target>
        </trans-unit>
        <trans-unit id="202a521cd27996b3976f115836fdf65fe00c1518" translate="yes" xml:space="preserve">
          <source>Any valid parameter to &lt;a href=&quot;http://php.net/function_exists&quot;&gt;function_exists&lt;/a&gt;</source>
          <target state="translated">Cualquier par&amp;aacute;metro v&amp;aacute;lido para &lt;a href=&quot;http://php.net/function_exists&quot;&gt;function_exists&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4201332a1de6b052dff93d0d5eb4c2369d11f231" translate="yes" xml:space="preserve">
          <source>Append &lt;strong&gt;&lt;code&gt;;C:\bin&lt;/code&gt;&lt;/strong&gt; to your &lt;code&gt;PATH&lt;/code&gt; environment variable (&lt;a href=&quot;http://stackoverflow.com/questions/6318156/adding-python-path-on-windows-7&quot;&gt;related help&lt;/a&gt;)</source>
          <target state="translated">Agregue &lt;strong&gt; &lt;code&gt;;C:\bin&lt;/code&gt; &lt;/strong&gt; a su &lt;code&gt;PATH&lt;/code&gt; entorno PATH ( &lt;a href=&quot;http://stackoverflow.com/questions/6318156/adding-python-path-on-windows-7&quot;&gt;ayuda relacionada&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="bf9447567ff6d4b18bca46071957ec2f6263d3ab" translate="yes" xml:space="preserve">
          <source>Array DataSet</source>
          <target state="translated">Conjunto de datos de la matriz</target>
        </trans-unit>
        <trans-unit id="3770b95d81f58fc6bbac36f8a809cbe7e5c34080" translate="yes" xml:space="preserve">
          <source>As an alternative to prefixing your test method names with &lt;code&gt;test&lt;/code&gt;, you can use the &lt;code&gt;@test&lt;/code&gt; annotation in a method's DocBlock to mark it as a test method.</source>
          <target state="translated">Como alternativa al prefijo de los nombres de sus m&amp;eacute;todos de prueba con &lt;code&gt;test&lt;/code&gt; , puede usar la anotaci&amp;oacute;n &lt;code&gt;@test&lt;/code&gt; en el DocBlock de un m&amp;eacute;todo para marcarlo como un m&amp;eacute;todo de prueba.</target>
        </trans-unit>
        <trans-unit id="6eef4dd88de363a0c4fb7b0fc8a495ae6dfdd156" translate="yes" xml:space="preserve">
          <source>As mentioned in the beginning, when the defaults used by the &lt;code&gt;createMock()&lt;/code&gt; method to generate the test double do not match your needs then you can use the &lt;code&gt;getMockBuilder($type)&lt;/code&gt; method to customize the test double generation using a fluent interface. Here is a list of methods provided by the Mock Builder:</source>
          <target state="translated">Como se mencion&amp;oacute; al principio, cuando los valores predeterminados utilizados por el m&amp;eacute;todo &lt;code&gt;createMock()&lt;/code&gt; para generar el doble de prueba no coinciden con sus necesidades, puede utilizar el &lt;code&gt;getMockBuilder($type)&lt;/code&gt; para personalizar la doble generaci&amp;oacute;n de prueba utilizando una interfaz fluida. Aqu&amp;iacute; hay una lista de m&amp;eacute;todos proporcionados por Mock Builder:</target>
        </trans-unit>
        <trans-unit id="ff7afc21b944effb12f3a6b0afd14387c7955a5a" translate="yes" xml:space="preserve">
          <source>As of version 6, PHPUnit does not perform this backup and restore operation for global and super-global variables by default anymore. It can be activated by using the &lt;code&gt;--globals-backup&lt;/code&gt; option or setting &lt;code&gt;backupGlobals=&quot;true&quot;&lt;/code&gt; in the XML configuration file.</source>
          <target state="translated">A partir de la versi&amp;oacute;n 6, PHPUnit ya no realiza esta operaci&amp;oacute;n de copia de seguridad y restauraci&amp;oacute;n para variables globales y superglobales de forma predeterminada. Se puede activar usando la opci&amp;oacute;n &lt;code&gt;--globals-backup&lt;/code&gt; o configurando &lt;code&gt;backupGlobals=&quot;true&quot;&lt;/code&gt; en el archivo de configuraci&amp;oacute;n XML.</target>
        </trans-unit>
        <trans-unit id="2464c4fd85a2dbd13ef8511120a3a540d5e05729" translate="yes" xml:space="preserve">
          <source>As with any external resource, there might be intermittent problems with the filesystem. This makes tests interacting with it flaky.</source>
          <target state="translated">Como con cualquier recurso externo,puede haber problemas intermitentes con el sistema de archivos.Esto hace que las pruebas que interactúan con él sean escamosas.</target>
        </trans-unit>
        <trans-unit id="6d4fa0bca965d62ca9ed015c05c5a6528e12dba4" translate="yes" xml:space="preserve">
          <source>Assert that both dataset representations equal each other.</source>
          <target state="translated">Afirmar que ambas representaciones del conjunto de datos son iguales entre sí.</target>
        </trans-unit>
        <trans-unit id="e87ceb796f38a8355c99301397b3b789f95fc5f3" translate="yes" xml:space="preserve">
          <source>Asserting the Result of a Query</source>
          <target state="translated">Afirmación del resultado de una consulta</target>
        </trans-unit>
        <trans-unit id="e0de99efdab9879cb1fac820862ddc7437d1a5d5" translate="yes" xml:space="preserve">
          <source>Asserting the Row-Count of a Table</source>
          <target state="translated">Afirmar el recuento de filas de una tabla</target>
        </trans-unit>
        <trans-unit id="2b03042fd9f4e1e52697c91ff9183126f4b19ec6" translate="yes" xml:space="preserve">
          <source>Asserting the State of Multiple Tables</source>
          <target state="translated">Afirmación del estado de tablas múltiples</target>
        </trans-unit>
        <trans-unit id="79d6cfb09ed036b02081a46e02d41c86cf2399a0" translate="yes" xml:space="preserve">
          <source>Asserting the State of a Table</source>
          <target state="translated">Afirmación del estado de una tabla</target>
        </trans-unit>
        <trans-unit id="49bf55dc112eb3597726ba8ecf785a4fae4cbce0" translate="yes" xml:space="preserve">
          <source>Assertions</source>
          <target state="translated">Assertions</target>
        </trans-unit>
        <trans-unit id="f1bf366d42e0229bf6d4b3edf41db4f9538281ef" translate="yes" xml:space="preserve">
          <source>Assertions are not the only use-case for the DataSet and DataTable in PHPUnit's Database Extension. As shown in the previous section they also describe the initial contents of a database. You are forced to define a fixture dataset by the Database TestCase, which is then used to:</source>
          <target state="translated">Las aseveraciones no son el único caso de uso para el DataSet y DataTable en la Extensión de la Base de Datos de PHPUnit.Como se muestra en la sección anterior,también describen el contenido inicial de una base de datos.El TestCase de la base de datos le obliga a definir un conjunto de datos de la fijación,que luego se utiliza para:</target>
        </trans-unit>
        <trans-unit id="f9d9dceb7f7654b542fdc74944219f3914fdcb50" translate="yes" xml:space="preserve">
          <source>At this point, the signature is good, but we don't trust this key. A good signature means that the file has not been tampered. However, due to the nature of public key cryptography, you need to additionally verify that key &lt;code&gt;6372C20A&lt;/code&gt; was created by the real Sebastian Bergmann.</source>
          <target state="translated">En este punto, la firma es buena, pero no confiamos en esta clave. Una buena firma significa que el archivo no ha sido manipulado. Sin embargo, debido a la naturaleza de la criptograf&amp;iacute;a de clave p&amp;uacute;blica, debe verificar adicionalmente que la clave &lt;code&gt;6372C20A&lt;/code&gt; fue creada por el verdadero Sebastian Bergmann.</target>
        </trans-unit>
        <trans-unit id="102ab26c0b6ce1d570f35a764d3e3eae3676d7fa" translate="yes" xml:space="preserve">
          <source>Authoring testcases is a good impetus for developers to discover edge cases.</source>
          <target state="translated">La creación de casos de prueba es un buen impulso para que los desarrolladores descubran casos límite.</target>
        </trans-unit>
        <trans-unit id="a00759e708ac4ff3149178d9b2c17659377bd6d7" translate="yes" xml:space="preserve">
          <source>Available Implementations</source>
          <target state="translated">Implementaciones disponibles</target>
        </trans-unit>
        <trans-unit id="4cb9d583bbdce037700a053683db4c06c7b88d2e" translate="yes" xml:space="preserve">
          <source>Backup and restore static attributes of user-defined classes. See &lt;a href=&quot;fixtures#fixtures.global-state&quot;&gt;the section called &amp;ldquo;Global State&amp;rdquo;&lt;/a&gt; for more details.</source>
          <target state="translated">Copia de seguridad y restauraci&amp;oacute;n de atributos est&amp;aacute;ticos de clases definidas por el usuario. Consulte &lt;a href=&quot;fixtures#fixtures.global-state&quot;&gt;la secci&amp;oacute;n denominada &quot;Estado global&quot;&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="aa7b047baa705c024141336e0e92c68d670b5604" translate="yes" xml:space="preserve">
          <source>Be strict about global state manipulation. See &lt;a href=&quot;risky-tests&quot;&gt;Chapter 6&lt;/a&gt; for details.</source>
          <target state="translated">Sea estricto con la manipulaci&amp;oacute;n del estado global. Consulte el &lt;a href=&quot;risky-tests&quot;&gt;Cap&amp;iacute;tulo 6&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="16be2cc2536c34cd2b66eb8201c73e49a5fd5304" translate="yes" xml:space="preserve">
          <source>Be strict about output during tests. See &lt;a href=&quot;risky-tests&quot;&gt;Chapter 6&lt;/a&gt; for details.</source>
          <target state="translated">Sea estricto con los resultados durante las pruebas. Consulte el &lt;a href=&quot;risky-tests&quot;&gt;Cap&amp;iacute;tulo 6&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="233f564bb864da6c2f4f1dcdd1c42579bd6186e1" translate="yes" xml:space="preserve">
          <source>Be strict about tests that do not test anything. See &lt;a href=&quot;risky-tests&quot;&gt;Chapter 6&lt;/a&gt; for details.</source>
          <target state="translated">Sea estricto con las pruebas que no prueban nada. Consulte el &lt;a href=&quot;risky-tests&quot;&gt;Cap&amp;iacute;tulo 6&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="0d5175435dded13bde8e17a64afabab1658372aa" translate="yes" xml:space="preserve">
          <source>Be strict about unintentionally covered code. See &lt;a href=&quot;risky-tests&quot;&gt;Chapter 6&lt;/a&gt; for details.</source>
          <target state="translated">Sea estricto con el c&amp;oacute;digo cubierto involuntariamente. Consulte el &lt;a href=&quot;risky-tests&quot;&gt;Cap&amp;iacute;tulo 6&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="cbe17b188c73f92a9b8e061dc5d48621c480ea26" translate="yes" xml:space="preserve">
          <source>Because many database APIs such as PDO, MySQLi or OCI8 are cumbersome to use and verbose in writing doing these steps manually is an absolute nightmare.</source>
          <target state="translated">Porque muchas API de bases de datos como PDO,MySQLi u OCI8 son incómodas de usar y la palabrería al escribir estos pasos manualmente es una absoluta pesadilla.</target>
        </trans-unit>
        <trans-unit id="f1805d5bad6b774978606ece8d755933a9bf3f2e" translate="yes" xml:space="preserve">
          <source>Because we are interested in verifying that a method is called, and which arguments it is called with, we introduce the &lt;code&gt;expects()&lt;/code&gt; and &lt;code&gt;with()&lt;/code&gt; methods to specify how this interaction should look.</source>
          <target state="translated">Debido a que estamos interesados ​​en verificar que se llama a un m&amp;eacute;todo y con qu&amp;eacute; argumentos se llama, introducimos los m&amp;eacute;todos &lt;code&gt;expects()&lt;/code&gt; y &lt;code&gt;with()&lt;/code&gt; para especificar c&amp;oacute;mo deber&amp;iacute;a verse esta interacci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="722f11d8fee150e9bf65da73c8a69a84c7c381d7" translate="yes" xml:space="preserve">
          <source>Besides global variables, static attributes of classes are also part of the global state.</source>
          <target state="translated">Además de las variables globales,los atributos estáticos de las clases también forman parte del estado global.</target>
        </trans-unit>
        <trans-unit id="7f37c6e32d7b2929f55a3ad3107c60a236c6a625" translate="yes" xml:space="preserve">
          <source>Beware of Foreign Keys</source>
          <target state="translated">Cuidado con las llaves extranjeras</target>
        </trans-unit>
        <trans-unit id="4e3bc8166f95c8cfbf9974109ef1f40875e4921e" translate="yes" xml:space="preserve">
          <source>Branch Coverage</source>
          <target state="translated">Cobertura de la sucursal</target>
        </trans-unit>
        <trans-unit id="0c161d48e04e2d5977a9e5b686b5234e12fccb49" translate="yes" xml:space="preserve">
          <source>By default, PHPUnit converts PHP errors, warnings, and notices that are triggered during the execution of a test to an exception. Using these exceptions, you can, for instance, expect a test to trigger a PHP error as shown in &lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.exceptions.examples.ErrorTest.php&quot;&gt;Example 2.12&lt;/a&gt;.</source>
          <target state="translated">De forma predeterminada, PHPUnit convierte los errores, advertencias y avisos de PHP que se activan durante la ejecuci&amp;oacute;n de una prueba en una excepci&amp;oacute;n. Con estas excepciones, puede, por ejemplo, esperar que una prueba active un error de PHP como se muestra en el &lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.exceptions.examples.ErrorTest.php&quot;&gt;Ejemplo 2.12&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="11257faa21f16d2e72299eff79f2aa247bb84bec" translate="yes" xml:space="preserve">
          <source>By default, PHPUnit will install an error handler that converts the following errors to exceptions:</source>
          <target state="translated">De forma predeterminada,PHPUnit instalará un gestor de errores que convierte los siguientes errores en excepciones:</target>
        </trans-unit>
        <trans-unit id="2c692da9c2870c9957cb7f5226bd16f28e5d17c8" translate="yes" xml:space="preserve">
          <source>By default, all methods of the original class are replaced with a dummy implementation that just returns &lt;code&gt;null&lt;/code&gt; (without calling the original method). Using the &lt;code&gt;will($this-&amp;gt;returnValue())&lt;/code&gt; method, for instance, you can configure these dummy implementations to return a value when called.</source>
          <target state="translated">De forma predeterminada, todos los m&amp;eacute;todos de la clase original se reemplazan con una implementaci&amp;oacute;n ficticia que solo devuelve &lt;code&gt;null&lt;/code&gt; (sin llamar al m&amp;eacute;todo original). Usando el m&amp;eacute;todo &lt;code&gt;will($this-&amp;gt;returnValue())&lt;/code&gt; , por ejemplo, puede configurar estas implementaciones ficticias para que devuelvan un valor cuando se las llame.</target>
        </trans-unit>
        <trans-unit id="c91528078b205c0edc4076b9f056cb2b3ee26b9e" translate="yes" xml:space="preserve">
          <source>By using stubs (see the chapter on &quot;Mock Objects&quot;, earlier in this book), you can further decouple yourself from the supplier: The job of the supplier is to make the tests run with the real implementation of the package. Your job is to make the tests run for your own code. Until such time as you have the real implementation of the supplied package, you use stub objects. Following this approach, the two teams can develop independently.</source>
          <target state="translated">Usando los talones (ver el capítulo sobre &quot;Objetos de imitación&quot;,anteriormente en este libro),puede desacoplarse aún más del proveedor:El trabajo del proveedor es hacer las pruebas con la implementación real del paquete.Su trabajo es hacer que las pruebas se ejecuten para su propio código.Hasta que tengas la implementación real del paquete suministrado,usas objetos stub.Siguiendo este enfoque,los dos equipos pueden desarrollar de forma independiente.</target>
        </trans-unit>
        <trans-unit id="e4597b679075018ece70ba1999e5d15c1cd90747" translate="yes" xml:space="preserve">
          <source>By using the &lt;code&gt;--static-backup&lt;/code&gt; option or setting &lt;code&gt;backupStaticAttributes=&quot;true&quot;&lt;/code&gt; in the XML configuration file, this isolation can be extended to static attributes of classes.</source>
          <target state="translated">Al usar la opci&amp;oacute;n &lt;code&gt;backupStaticAttributes=&quot;true&quot;&lt;/code&gt; &lt;code&gt;--static-backup&lt;/code&gt; o al establecer backupStaticAttributes = &quot;true&quot; en el archivo de configuraci&amp;oacute;n XML, este aislamiento se puede extender a los atributos est&amp;aacute;ticos de las clases.</target>
        </trans-unit>
        <trans-unit id="c9001ab23e14040af523a496ea073d94c8e9a5e7" translate="yes" xml:space="preserve">
          <source>CSV DataSet</source>
          <target state="translated">Conjunto de datos CSV</target>
        </trans-unit>
        <trans-unit id="a20d991b9a7d2172c934a6d6553e9b1e52e6e2f0" translate="yes" xml:space="preserve">
          <source>Change Risk Anti-Patterns (CRAP) Index</source>
          <target state="translated">Índice de antipatrones de riesgo de cambio (CRAP)</target>
        </trans-unit>
        <trans-unit id="9571a1b5aaa83789b8f0adcf05ec1485c335a4ae" translate="yes" xml:space="preserve">
          <source>Class and Trait Coverage</source>
          <target state="translated">Cobertura de clase y rasgo</target>
        </trans-unit>
        <trans-unit id="191da32810366886e531d88da3e30b3dd791a185" translate="yes" xml:space="preserve">
          <source>Cleanup the database for each new test</source>
          <target state="translated">Limpiar la base de datos para cada nueva prueba</target>
        </trans-unit>
        <trans-unit id="8e86e562959da84d3b442c12a994da14aae649ab" translate="yes" xml:space="preserve">
          <source>Code Coverage (TEXT)</source>
          <target state="translated">Cobertura del código (TEXTO)</target>
        </trans-unit>
        <trans-unit id="fd0309588c48a9458645834e17a45a55c79e0814" translate="yes" xml:space="preserve">
          <source>Code Coverage (XML)</source>
          <target state="translated">Cobertura del código (XML)</target>
        </trans-unit>
        <trans-unit id="6262efd9fea7435d42691a4f59d7486a8516311a" translate="yes" xml:space="preserve">
          <source>Code Coverage Analysis</source>
          <target state="translated">Análisis de la cobertura del código</target>
        </trans-unit>
        <trans-unit id="109c194e8ddfc5467663fb7063689470b656f9b0" translate="yes" xml:space="preserve">
          <source>Code Coverage will only be recorded for tests that use the &lt;code&gt;@covers&lt;/code&gt; annotation documented in &lt;a href=&quot;appendixes.annotations#appendixes.annotations.covers&quot;&gt;the section called &amp;ldquo;@covers&amp;rdquo;&lt;/a&gt;.</source>
          <target state="translated">La cobertura del c&amp;oacute;digo solo se registrar&amp;aacute; para las pruebas que utilicen la anotaci&amp;oacute;n &lt;code&gt;@covers&lt;/code&gt; documentada en &lt;a href=&quot;appendixes.annotations#appendixes.annotations.covers&quot;&gt;la secci&amp;oacute;n denominada &quot;@covers&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6992fa9278bee711bf80b67568573f9b15601d10" translate="yes" xml:space="preserve">
          <source>Command-Line Options</source>
          <target state="translated">opciones de la línea de comandos</target>
        </trans-unit>
        <trans-unit id="10c35d71ded7545a87321c94b9da10ed95f1480d" translate="yes" xml:space="preserve">
          <source>Composer</source>
          <target state="translated">Composer</target>
        </trans-unit>
        <trans-unit id="18ac7197c985ca458fec03af27692f2080276f90" translate="yes" xml:space="preserve">
          <source>Composing a Test Suite Using XML Configuration</source>
          <target state="translated">Composición de un conjunto de pruebas utilizando la configuración XML</target>
        </trans-unit>
        <trans-unit id="26dcaab39efc0af61b5a54784f29c09025599629" translate="yes" xml:space="preserve">
          <source>Composing a Test Suite Using the Filesystem</source>
          <target state="translated">Composición de un conjunto de pruebas utilizando el sistema de archivos</target>
        </trans-unit>
        <trans-unit id="4ca8358ce846f9321c7815bad4e78f1a31c9e21a" translate="yes" xml:space="preserve">
          <source>Composite DataSet</source>
          <target state="translated">Conjunto de datos compuestos</target>
        </trans-unit>
        <trans-unit id="c5fdb502ae4c60b4b1e6f35555661f3f185ef0ed" translate="yes" xml:space="preserve">
          <source>Configuration of a PHPUnit Database TestCase</source>
          <target state="translated">Configuración de una base de datos PHPUnit TestCase</target>
        </trans-unit>
        <trans-unit id="cdd87b7907fb17673e884c148848c9c5e93b59ca" translate="yes" xml:space="preserve">
          <source>Constraint</source>
          <target state="translated">Constraint</target>
        </trans-unit>
        <trans-unit id="50001f9d78216a0a85921eef17995c8d318636a5" translate="yes" xml:space="preserve">
          <source>Constraint that accepts any input value.</source>
          <target state="translated">Restricción que acepta cualquier valor de entrada.</target>
        </trans-unit>
        <trans-unit id="4e6210ea23254aaa526e46b20d4f1e439700cfc5" translate="yes" xml:space="preserve">
          <source>Constraint that applies another constraint to an attribute of a class or an object.</source>
          <target state="translated">Restricción que aplica otra restricción a un atributo de una clase o un objeto.</target>
        </trans-unit>
        <trans-unit id="7d4d530b6e26d1bc514703574b4fe44a672ef8c6" translate="yes" xml:space="preserve">
          <source>Constraint that asserts that one value is identical to another.</source>
          <target state="translated">Restricción que afirma que un valor es idéntico a otro.</target>
        </trans-unit>
        <trans-unit id="8489f5b8a6cf46cf41cdc94c9d60d80320a3c0dc" translate="yes" xml:space="preserve">
          <source>Constraint that asserts that the &lt;code&gt;array&lt;/code&gt; or object that implements the &lt;code&gt;Iterator&lt;/code&gt; interface it is evaluated for contains a given value.</source>
          <target state="translated">Restricci&amp;oacute;n que afirma que la &lt;code&gt;array&lt;/code&gt; u objeto que implementa la interfaz &lt;code&gt;Iterator&lt;/code&gt; para la que se eval&amp;uacute;a contiene un valor dado.</target>
        </trans-unit>
        <trans-unit id="a808ba53c7f5b5f7e7507aa5e2933b73b456e88f" translate="yes" xml:space="preserve">
          <source>Constraint that asserts that the &lt;code&gt;array&lt;/code&gt; or object that implements the &lt;code&gt;Iterator&lt;/code&gt; interface it is evaluated for contains only instances of a given classname.</source>
          <target state="translated">Restricci&amp;oacute;n que afirma que la &lt;code&gt;array&lt;/code&gt; u objeto que implementa la interfaz &lt;code&gt;Iterator&lt;/code&gt; para la que se eval&amp;uacute;a contiene solo instancias de un nombre de clase determinado.</target>
        </trans-unit>
        <trans-unit id="1b426fcce667db53f80625e45f1e0d86646360c9" translate="yes" xml:space="preserve">
          <source>Constraint that asserts that the &lt;code&gt;array&lt;/code&gt; or object that implements the &lt;code&gt;Iterator&lt;/code&gt; interface it is evaluated for contains only values of a given type.</source>
          <target state="translated">Restricci&amp;oacute;n que afirma que la &lt;code&gt;array&lt;/code&gt; u objeto que implementa la interfaz &lt;code&gt;Iterator&lt;/code&gt; para la que se eval&amp;uacute;a contiene solo valores de un tipo determinado.</target>
        </trans-unit>
        <trans-unit id="8bf9fd455e4c3abf0665a514397dde000596a18e" translate="yes" xml:space="preserve">
          <source>Constraint that asserts that the array it is evaluated for has a given key.</source>
          <target state="translated">Restricción que afirma que el conjunto para el que se evalúa tiene una clave determinada.</target>
        </trans-unit>
        <trans-unit id="052b0facafadc0abde4f8ee97ca7fde579f68367" translate="yes" xml:space="preserve">
          <source>Constraint that asserts that the class it is evaluated for has a given attribute.</source>
          <target state="translated">Restricción que afirma que la clase para la que se evalúa tiene un atributo determinado.</target>
        </trans-unit>
        <trans-unit id="74e8677f3682374b6b80d897055ffa4570301653" translate="yes" xml:space="preserve">
          <source>Constraint that asserts that the class it is evaluated for has a given static attribute.</source>
          <target state="translated">Restricción que afirma que la clase para la que se evalúa tiene un atributo estático determinado.</target>
        </trans-unit>
        <trans-unit id="9591dc696fa21696db24a5165e346bc02a5be7a6" translate="yes" xml:space="preserve">
          <source>Constraint that asserts that the object it is evaluated for has a given attribute.</source>
          <target state="translated">Restricción que afirma que el objeto para el que se evalúa tiene un atributo determinado.</target>
        </trans-unit>
        <trans-unit id="bc990e0033562cfe45213748a6673bbdd08e08b6" translate="yes" xml:space="preserve">
          <source>Constraint that asserts that the object it is evaluated for is an instance of a given class.</source>
          <target state="translated">Restricción que afirma que el objeto para el que se evalúa es una instancia de una clase determinada.</target>
        </trans-unit>
        <trans-unit id="abc0f38e8b7f88b4cdce062bd0dde7f98c3f2f39" translate="yes" xml:space="preserve">
          <source>Constraint that asserts that the string it is evaluated for contains a given string.</source>
          <target state="translated">Restricción que afirma que la cadena para la que se evalúa contiene una determinada cadena.</target>
        </trans-unit>
        <trans-unit id="ecd7a3101d309c7a0cbc87ecf8d41e0ef6607cb8" translate="yes" xml:space="preserve">
          <source>Constraint that asserts that the string it is evaluated for ends with a given suffix.</source>
          <target state="translated">Restricción que afirma que la cadena para la que se evalúa termina con un sufijo dado.</target>
        </trans-unit>
        <trans-unit id="8379ef8dad533bba7cd5881bd20ccb6ec8d8f2c7" translate="yes" xml:space="preserve">
          <source>Constraint that asserts that the string it is evaluated for matches a regular expression.</source>
          <target state="translated">Restricción que afirma que la cadena para la que se evalúa coincide con una expresión regular.</target>
        </trans-unit>
        <trans-unit id="5ee3bdf51efb4aaf9e4c8df59ccbee07552935f9" translate="yes" xml:space="preserve">
          <source>Constraint that asserts that the string it is evaluated for starts with a given prefix.</source>
          <target state="translated">Restricción que afirma que la cadena para la que se evalúa comienza con un prefijo dado.</target>
        </trans-unit>
        <trans-unit id="dde68b2b72f28b01cebe5e3f49e2960ea0d472e2" translate="yes" xml:space="preserve">
          <source>Constraint that asserts that the value it is evaluated for is greater than a given value.</source>
          <target state="translated">Restricción que afirma que el valor para el que se evalúa es mayor que un valor dado.</target>
        </trans-unit>
        <trans-unit id="bc7a3dfb3651592ef5af091770a447209686042a" translate="yes" xml:space="preserve">
          <source>Constraint that asserts that the value it is evaluated for is greater than or equal to a given value.</source>
          <target state="translated">Restricción que afirma que el valor para el que se evalúa es mayor o igual a un valor dado.</target>
        </trans-unit>
        <trans-unit id="6ec99e9d6498c7b86c0088d7bbc9807445794b57" translate="yes" xml:space="preserve">
          <source>Constraint that asserts that the value it is evaluated for is of a specified type.</source>
          <target state="translated">Restricción que afirma que el valor para el que se evalúa es de un tipo específico.</target>
        </trans-unit>
        <trans-unit id="856797eba2302f8840c2e2e592a74e6c26f64e35" translate="yes" xml:space="preserve">
          <source>Constraint that asserts that the value it is evaluated for is smaller than a given value.</source>
          <target state="translated">Restricción que afirma que el valor para el que se evalúa es menor que un valor dado.</target>
        </trans-unit>
        <trans-unit id="6195c587e282711b239a44ffb0377363bdc39063" translate="yes" xml:space="preserve">
          <source>Constraint that asserts that the value it is evaluated for is smaller than or equal to a given value.</source>
          <target state="translated">Restricción que afirma que el valor para el que se evalúa es menor o igual a un valor dado.</target>
        </trans-unit>
        <trans-unit id="ccf8766ba266eb797bf44971dfd17e81dfd01d65" translate="yes" xml:space="preserve">
          <source>Constraint that asserts that the value it is evaluated is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Restricci&amp;oacute;n que afirma que el valor que se eval&amp;uacute;a es &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bae29eedcdbb9c2c7fe9cbe4952c8e43f398d1bd" translate="yes" xml:space="preserve">
          <source>Constraint that asserts that the value it is evaluated is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">Restricci&amp;oacute;n que afirma que el valor que se eval&amp;uacute;a es &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1bb1b421117f06662712afe83ea4a47af30ac641" translate="yes" xml:space="preserve">
          <source>Constraint that asserts that the value it is evaluated is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Restricci&amp;oacute;n que afirma que el valor que se eval&amp;uacute;a es &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="542e3814006c1ad2918ab57a2a6317461e8888fc" translate="yes" xml:space="preserve">
          <source>Constraint that checks if a value is equal to an attribute of a class or of an object.</source>
          <target state="translated">Restricción que comprueba si un valor es igual a un atributo de una clase o de un objeto.</target>
        </trans-unit>
        <trans-unit id="d4e212c9e6f5b2f83c794ce2774061b9bed22540" translate="yes" xml:space="preserve">
          <source>Constraint that checks if one value is equal to another.</source>
          <target state="translated">Restricción que comprueba si un valor es igual a otro.</target>
        </trans-unit>
        <trans-unit id="163a7e8ab37f1c587d7356e2485a5e7490ebb768" translate="yes" xml:space="preserve">
          <source>Constraint that checks if the directory that it is evaluated for exists.</source>
          <target state="translated">Restricción que comprueba si el directorio para el que se evalúa existe.</target>
        </trans-unit>
        <trans-unit id="2bcd32f6e04b798f950eba813a06c4290d62d187" translate="yes" xml:space="preserve">
          <source>Constraint that checks if the file(name) that it is evaluated for exists.</source>
          <target state="translated">Restricción que comprueba si el archivo (nombre)para el que se evalúa existe.</target>
        </trans-unit>
        <trans-unit id="8add62ad08a232c6da5f779048e460f56b9b0c30" translate="yes" xml:space="preserve">
          <source>Constraint that checks if the file(name) that it is evaluated for is readable.</source>
          <target state="translated">Restricción que comprueba si el archivo (nombre)para el que se evalúa es legible.</target>
        </trans-unit>
        <trans-unit id="9191db07dfcd01e4cc5309b818514ada07f3fb85" translate="yes" xml:space="preserve">
          <source>Constraint that checks if the file(name) that it is evaluated for is writable.</source>
          <target state="translated">Restricción que comprueba si el archivo (nombre)para el que se evalúa es escribible.</target>
        </trans-unit>
        <trans-unit id="39624edef87575d027eafcfae5eedc2c3ae43865" translate="yes" xml:space="preserve">
          <source>Create a directory for PHP binaries; e.g., &lt;code&gt;C:\bin&lt;/code&gt;</source>
          <target state="translated">Cree un directorio para binarios PHP; por ejemplo, &lt;code&gt;C:\bin&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="817f0806cd622cbd94df178eb512c1d433e5d609" translate="yes" xml:space="preserve">
          <source>Create a wrapping batch script (results in &lt;code&gt;C:\bin\phpunit.cmd&lt;/code&gt;):</source>
          <target state="translated">Cree un script por lotes de envoltura (da como resultado &lt;code&gt;C:\bin\phpunit.cmd&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="0b9fb3a610b937165a8b67771454b580d7f1fa46" translate="yes" xml:space="preserve">
          <source>Cross-Team Tests</source>
          <target state="translated">Pruebas cruzadas</target>
        </trans-unit>
        <trans-unit id="00df88cb6a2b4d4554b24a2f1b7f28f318ee884a" translate="yes" xml:space="preserve">
          <source>Data Providers</source>
          <target state="translated">Proveedores de datos</target>
        </trans-unit>
        <trans-unit id="2494fdba194cdad3eca4fd349fc2fa398ef6874e" translate="yes" xml:space="preserve">
          <source>DataSet Filter</source>
          <target state="translated">Filtro DataSet</target>
        </trans-unit>
        <trans-unit id="4a0db487f867f26b9f02146d10dd03702fb1dfb6" translate="yes" xml:space="preserve">
          <source>Database (DB) Dataset</source>
          <target state="translated">Conjunto de datos de la base de datos (DB)</target>
        </trans-unit>
        <trans-unit id="f6f4eb236a59b4e21eeb9b7cd6bc75392515a91d" translate="yes" xml:space="preserve">
          <source>Database Assertions API</source>
          <target state="translated">Base de datos de aserciones API</target>
        </trans-unit>
        <trans-unit id="4db0ec9a89645d47708b06e3ba733a19aedfaff7" translate="yes" xml:space="preserve">
          <source>Database Testing</source>
          <target state="translated">Prueba de la base de datos</target>
        </trans-unit>
        <trans-unit id="95a67d8c418447fa80e67876d3350cbdfb7bc894" translate="yes" xml:space="preserve">
          <source>DbUnit</source>
          <target state="translated">DbUnit</target>
        </trans-unit>
        <trans-unit id="2eacecba2b6676133b7c3099f8e05aa4c9f88632" translate="yes" xml:space="preserve">
          <source>DbUnit currently supports MySQL, PostgreSQL, Oracle and SQLite. Through &lt;a href=&quot;http://framework.zend.com&quot;&gt;Zend Framework&lt;/a&gt; or &lt;a href=&quot;http://www.doctrine-project.org&quot;&gt;Doctrine 2&lt;/a&gt; integrations it has access to other database systems such as IBM DB2 or Microsoft SQL Server.</source>
          <target state="translated">DbUnit actualmente es compatible con MySQL, PostgreSQL, Oracle y SQLite. Mediante integraciones &lt;a href=&quot;http://framework.zend.com&quot;&gt;Zend Framework&lt;/a&gt; o &lt;a href=&quot;http://www.doctrine-project.org&quot;&gt;Doctrine 2&lt;/a&gt; tiene acceso a otros sistemas de bases de datos como IBM DB2 o Microsoft SQL Server.</target>
        </trans-unit>
        <trans-unit id="0fb4d858eb59af0cf2ac6c6bc2f21cacee80142f" translate="yes" xml:space="preserve">
          <source>DbUnit helps to simplify all these problems with database testing in an elegant way.</source>
          <target state="translated">DbUnit ayuda a simplificar todos estos problemas con las pruebas de la base de datos de una manera elegante.</target>
        </trans-unit>
        <trans-unit id="41660197d49bbee961cc2ee835fc41fa87b7c176" translate="yes" xml:space="preserve">
          <source>DbUnit port for PHP/PHPUnit to support database interaction testing.</source>
          <target state="translated">Puerto DbUnit para PHP/PHPUnit para soportar las pruebas de interacción de la base de datos.</target>
        </trans-unit>
        <trans-unit id="7ab41c51dc772ae84d83b15e5bb89666d74ed74c" translate="yes" xml:space="preserve">
          <source>Defines the number of columns to use for progress output. If &lt;code&gt;max&lt;/code&gt; is defined as value, the number of columns will be maximum of the current terminal.</source>
          <target state="translated">Define el n&amp;uacute;mero de columnas que se utilizar&amp;aacute;n para la salida de progreso. Si &lt;code&gt;max&lt;/code&gt; se define como valor, el n&amp;uacute;mero de columnas ser&amp;aacute; el m&amp;aacute;ximo del terminal actual.</target>
        </trans-unit>
        <trans-unit id="e1f3c96de9d54f40b90ee611d510c3ee3e3a5fd4" translate="yes" xml:space="preserve">
          <source>Delete all the rows from the tables specified in the dataset.</source>
          <target state="translated">Eliminar todas las filas de las tablas especificadas en el conjunto de datos.</target>
        </trans-unit>
        <trans-unit id="86629ba9311cf16a077010c2c75bda057654fd46" translate="yes" xml:space="preserve">
          <source>Depending on the implementation different approaches are taken to add table instances to a dataset. For example, tables are added internally during construction from the source file in all file-based datasets such as &lt;code&gt;YamlDataSet&lt;/code&gt;, &lt;code&gt;XmlDataSet&lt;/code&gt; or &lt;code&gt;FlatXmlDataSet&lt;/code&gt;.</source>
          <target state="translated">Dependiendo de la implementaci&amp;oacute;n, se adoptan diferentes enfoques para agregar instancias de tabla a un conjunto de datos. Por ejemplo, las tablas se agregan internamente durante la construcci&amp;oacute;n desde el archivo de origen en todos los conjuntos de datos basados ​​en archivos, como &lt;code&gt;YamlDataSet&lt;/code&gt; , &lt;code&gt;XmlDataSet&lt;/code&gt; o &lt;code&gt;FlatXmlDataSet&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="9f2def23a82e4efe95d1eee254cb6840339ebe01" translate="yes" xml:space="preserve">
          <source>Difficulties in Database Testing</source>
          <target state="translated">Dificultades en las pruebas de las bases de datos</target>
        </trans-unit>
        <trans-unit id="260139da2a03c1f22636f63c87db02afa2f82465" translate="yes" xml:space="preserve">
          <source>Do not backup and restore $GLOBALS. See &lt;a href=&quot;fixtures#fixtures.global-state&quot;&gt;the section called &amp;ldquo;Global State&amp;rdquo;&lt;/a&gt; for more details.</source>
          <target state="translated">No respalde ni restaure $ GLOBALS. Consulte &lt;a href=&quot;fixtures#fixtures.global-state&quot;&gt;la secci&amp;oacute;n denominada &quot;Estado global&quot;&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="76d908c920c5c6d057c2480db4c2c6ade3a08e7d" translate="yes" xml:space="preserve">
          <source>Do not do this. Instead, you should use either the XML or the YAML DataSets.</source>
          <target state="translated">No lo hagas.En su lugar,debe utilizar los conjuntos de datos XML o YAML.</target>
        </trans-unit>
        <trans-unit id="43e0204699e9877d332d5922c8469d8761315998" translate="yes" xml:space="preserve">
          <source>Does not execute tests which have the &lt;code&gt;@todo&lt;/code&gt; annotation in its docblock.</source>
          <target state="translated">No ejecuta pruebas que tienen la anotaci&amp;oacute;n &lt;code&gt;@todo&lt;/code&gt; en su docblock.</target>
        </trans-unit>
        <trans-unit id="80c843ad6252c9c4db64e6ae6724482806e582dc" translate="yes" xml:space="preserve">
          <source>Download &lt;a href=&quot;https://phar.phpunit.de/phpunit-6.5.phar&quot;&gt;https://phar.phpunit.de/phpunit-6.5.phar&lt;/a&gt; and save the file as &lt;code&gt;C:\bin\phpunit.phar&lt;/code&gt;</source>
          <target state="translated">Descargue &lt;a href=&quot;https://phar.phpunit.de/phpunit-6.5.phar&quot;&gt;https://phar.phpunit.de/phpunit-6.5.phar&lt;/a&gt; y guarde el archivo como &lt;code&gt;C:\bin\phpunit.phar&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9b1623968400e05a655a543ef3805a09e7117b9d" translate="yes" xml:space="preserve">
          <source>During Debugging</source>
          <target state="translated">Durante la depuración</target>
        </trans-unit>
        <trans-unit id="e96f998164eb81aa2499a25cd6e6045a3c4f1d61" translate="yes" xml:space="preserve">
          <source>During Development</source>
          <target state="translated">Durante el desarrollo</target>
        </trans-unit>
        <trans-unit id="80435cf1bd512f35f5703e0465d70245411bf663" translate="yes" xml:space="preserve">
          <source>During Fixture SetUp PHPUnit's Database Extension inserts the rows into the database in the order they are specified in your fixture. If your database schema uses foreign keys this means you have to specify the tables in an order that does not cause foreign key constraints to fail.</source>
          <target state="translated">Durante la configuración de la instalación,la extensión de la base de datos de PHPUnit inserta las filas en la base de datos en el orden en que se especifican en su instalación.Si el esquema de tu base de datos utiliza claves externas,esto significa que tienes que especificar las tablas en un orden que no cause que las restricciones de claves externas fallen.</target>
        </trans-unit>
        <trans-unit id="e0184adedf913b076626646d3f52c3b49c39ad6d" translate="yes" xml:space="preserve">
          <source>E</source>
          <target state="translated">E</target>
        </trans-unit>
        <trans-unit id="438362069101577b0546516b8b4f20896a111e6f" translate="yes" xml:space="preserve">
          <source>Edge Cases</source>
          <target state="translated">Casos de borde</target>
        </trans-unit>
        <trans-unit id="c6733d2b92d7770bb88a12c0c1edfd4c3f203cc3" translate="yes" xml:space="preserve">
          <source>Edge cases</source>
          <target state="translated">Cajas de borde</target>
        </trans-unit>
        <trans-unit id="94e2d7b451c279180bac14fcac5eeee2a4ddaa0c" translate="yes" xml:space="preserve">
          <source>Enforce time limit based on test size. See &lt;a href=&quot;risky-tests&quot;&gt;Chapter 6&lt;/a&gt; for details.</source>
          <target state="translated">Hacer cumplir el l&amp;iacute;mite de tiempo seg&amp;uacute;n el tama&amp;ntilde;o de la prueba. Consulte el &lt;a href=&quot;risky-tests&quot;&gt;Cap&amp;iacute;tulo 6&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="c846504ac5660ebbbf0b9419ca3e1f96e04978aa" translate="yes" xml:space="preserve">
          <source>Error output</source>
          <target state="translated">Salida de error</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="3ea2566653ce0694e6d57d3fe04b5dbc1af61f97" translate="yes" xml:space="preserve">
          <source>Except the &lt;code&gt;getTableMetaData()&lt;/code&gt; method it is pretty self-explainatory. The used methods are all required for the different assertions of the Database Extension that are explained in the next chapter. The &lt;code&gt;getTableMetaData()&lt;/code&gt; method has to return an implementation of the &lt;code&gt;PHPUnit_Extensions_Database_DataSet_ITableMetaData&lt;/code&gt; interface, which describes the structure of the table. It holds information on:</source>
          <target state="translated">Excepto el m&amp;eacute;todo &lt;code&gt;getTableMetaData()&lt;/code&gt; , es bastante autoexplicativo. Los m&amp;eacute;todos utilizados son todos necesarios para las diferentes afirmaciones de la Extensi&amp;oacute;n de base de datos que se explican en el siguiente cap&amp;iacute;tulo. El m&amp;eacute;todo &lt;code&gt;getTableMetaData()&lt;/code&gt; tiene que devolver una implementaci&amp;oacute;n de la interfaz &lt;code&gt;PHPUnit_Extensions_Database_DataSet_ITableMetaData&lt;/code&gt; , que describe la estructura de la tabla. Contiene informaci&amp;oacute;n sobre:</target>
        </trans-unit>
        <trans-unit id="770df1f8633dffd0edf718b42eb81db61ca30bec" translate="yes" xml:space="preserve">
          <source>Exclude tests from the specified group(s). A test can be tagged as belonging to a group using the &lt;code&gt;@group&lt;/code&gt; annotation.</source>
          <target state="translated">Excluya las pruebas de los grupos especificados. Una prueba se puede etiquetar como perteneciente a un grupo mediante la anotaci&amp;oacute;n &lt;code&gt;@group&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3630ab1e31db75331ab1cf37f7073a7ecee09016" translate="yes" xml:space="preserve">
          <source>Exercise System Under Test</source>
          <target state="translated">Sistema de ejercicio bajo prueba</target>
        </trans-unit>
        <trans-unit id="a1858ef355e7a8449dcbbcc84f64813a7e1aff06" translate="yes" xml:space="preserve">
          <source>Extending PHPUnit</source>
          <target state="translated">Extendiendo la Unidad PHP</target>
        </trans-unit>
        <trans-unit id="e69f20e9f683920d3fb4329abd951e878b1f9372" translate="yes" xml:space="preserve">
          <source>F</source>
          <target state="translated">F</target>
        </trans-unit>
        <trans-unit id="0bbfd584fb747cbb9a272d510af4388bea096b90" translate="yes" xml:space="preserve">
          <source>File-Based DataSets and DataTables</source>
          <target state="translated">Conjuntos de datos y tablas de datos basados en archivos</target>
        </trans-unit>
        <trans-unit id="201ca61ce9540d60ffeb8acdab6deb417ea449f6" translate="yes" xml:space="preserve">
          <source>Filter and Composition DataSets and DataTables</source>
          <target state="translated">Filtro y composición de conjuntos de datos y tablas de datos</target>
        </trans-unit>
        <trans-unit id="fe2a5bdae4158b697b4e224f7e7fb6eb9b284926" translate="yes" xml:space="preserve">
          <source>Find the smallest-scale demonstration of the defect in the code. For example, if a number appears incorrectly in an output, find the object that is computing that number.</source>
          <target state="translated">Encuentra la demostración a menor escala del defecto en el código.Por ejemplo,si un número aparece incorrectamente en una salida,encuentra el objeto que está computando ese número.</target>
        </trans-unit>
        <trans-unit id="95cc26d1918cfecfdf281a35429271d7cd0d04b2" translate="yes" xml:space="preserve">
          <source>Finding the smallest reliable reproduction of the defect gives you the opportunity to really examine the cause of the defect. The test you write will improve the chances that when you fix the defect, you really fix it, because the new test reduces the likelihood of undoing the fix with future code changes. All the tests you wrote before reduce the likelihood of inadvertently causing a different problem.</source>
          <target state="translated">Encontrar la más pequeña reproducción fiable del defecto le da la oportunidad de examinar realmente la causa del defecto.La prueba que escribas mejorará las posibilidades de que cuando arregles el defecto,lo arregles de verdad,porque la nueva prueba reduce la probabilidad de deshacer el arreglo con futuros cambios de código.Todas las pruebas que escribiste antes reducen la probabilidad de causar inadvertidamente un problema diferente.</target>
        </trans-unit>
        <trans-unit id="92485f498c9ab6631e7eab0dca46127bb1c8da76" translate="yes" xml:space="preserve">
          <source>Fix the defect.</source>
          <target state="translated">Arreglar el defecto.</target>
        </trans-unit>
        <trans-unit id="93a9d4b62c49df4936d5f701755ab05d3a9187a5" translate="yes" xml:space="preserve">
          <source>Fixtures</source>
          <target state="translated">Fixtures</target>
        </trans-unit>
        <trans-unit id="3332c295f8e8f620d384fafcb9ec318fc39b426e" translate="yes" xml:space="preserve">
          <source>Flat XML DataSet</source>
          <target state="translated">Conjunto de datos XML planos</target>
        </trans-unit>
        <trans-unit id="64ee171d419a298fa39e6e1e0b31d1e4797bade8" translate="yes" xml:space="preserve">
          <source>For Cygwin and/or MingW32 (e.g., TortoiseGit) shell environments, you may skip step 5. above, simply save the file as &lt;code&gt;phpunit&lt;/code&gt; (without &lt;code&gt;.phar&lt;/code&gt; extension), and make it executable via &lt;strong&gt;&lt;code&gt;chmod 775 phpunit&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">Para entornos de shell Cygwin y / o MingW32 (por ejemplo, TortoiseGit), puede omitir el paso 5. anterior, simplemente guarde el archivo como &lt;code&gt;phpunit&lt;/code&gt; (sin la extensi&amp;oacute;n &lt;code&gt;.phar&lt;/code&gt; ) y &lt;strong&gt; &lt;code&gt;chmod 775 phpunit&lt;/code&gt; &lt;/strong&gt; ejecutable a trav&amp;eacute;s de &lt;strong&gt;chmod 775 phpunit&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="70386763ab8d33e1e77b4fe208a01efdccc84a3a" translate="yes" xml:space="preserve">
          <source>For a testing tool the Database Extension surely provides some assertions that you can use to verify the current state of the database, tables and the row-count of tables. This section describes this functionality in detail:</source>
          <target state="translated">Para una herramienta de prueba,la Extensión de la Base de Datos seguramente proporciona algunas afirmaciones que puede utilizar para verificar el estado actual de la base de datos,las tablas y el recuento de filas de tablas.Esta sección describe esta funcionalidad en detalle:</target>
        </trans-unit>
        <trans-unit id="358d57de4f1b6c901bf71c27de34c6c97e396562" translate="yes" xml:space="preserve">
          <source>For database assertions you do not only need the file-based datasets but also a Query/SQL based Dataset that contains the actual contents of the database. This is where the Query DataSet shines:</source>
          <target state="translated">Para las aseveraciones de la base de datos no sólo se necesitan los conjuntos de datos basados en archivos sino también un conjunto de datos basado en Query/SQL que contiene el contenido real de la base de datos.Aquí es donde brilla el conjunto de datos de consulta:</target>
        </trans-unit>
        <trans-unit id="bc50634a6fcbff4b5b48e340941236351620a10b" translate="yes" xml:space="preserve">
          <source>For each test run, the PHPUnit command-line tool prints one character to indicate progress:</source>
          <target state="translated">Por cada prueba,la herramienta de línea de comandos PHPUnit imprime un carácter para indicar el progreso:</target>
        </trans-unit>
        <trans-unit id="d71e6fd97876b29e66fd850bb51a630c8711a082" translate="yes" xml:space="preserve">
          <source>For more fine-grained control of which tests to run we can use the &lt;code&gt;--filter&lt;/code&gt; option:</source>
          <target state="translated">Para un control m&amp;aacute;s detallado de qu&amp;eacute; pruebas ejecutar, podemos usar la opci&amp;oacute;n &lt;code&gt;--filter&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="39ddf4b1466d48ae6e5e0c73a43696a29c0a89de" translate="yes" xml:space="preserve">
          <source>For most people it just &quot;feels right&quot; to use &lt;code&gt;$this-&amp;gt;assertTrue()&lt;/code&gt; because the test method is invoked on a test object. The fact that the assertion methods are declared &lt;code&gt;static&lt;/code&gt; allows for (re)using them outside the scope of a test object. Lastly, the global function wrappers allow developers to type less characters (&lt;code&gt;assertTrue()&lt;/code&gt; instead of &lt;code&gt;$this-&amp;gt;assertTrue()&lt;/code&gt; or &lt;code&gt;self::assertTrue()&lt;/code&gt;).</source>
          <target state="translated">Para la mayor&amp;iacute;a de las personas, simplemente &quot;se siente bien&quot; usar &lt;code&gt;$this-&amp;gt;assertTrue()&lt;/code&gt; porque el m&amp;eacute;todo de prueba se invoca en un objeto de prueba. El hecho de que los m&amp;eacute;todos de aserci&amp;oacute;n se declaren &lt;code&gt;static&lt;/code&gt; permite (re) usarlos fuera del alcance de un objeto de prueba. Por &amp;uacute;ltimo, los envoltorios de funciones globales permiten a los desarrolladores escribir menos caracteres ( &lt;code&gt;assertTrue()&lt;/code&gt; lugar de &lt;code&gt;$this-&amp;gt;assertTrue()&lt;/code&gt; o &lt;code&gt;self::assertTrue()&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a93e1f7b0539b8bd1c147e5148e28b4aec6999dc" translate="yes" xml:space="preserve">
          <source>For sure you can assert the state of multiple tables at once and compare a query dataset against a file based dataset. There are two different ways for DataSet assertions.</source>
          <target state="translated">Seguro que puedes afirmar el estado de varias tablas a la vez y comparar un conjunto de datos de consulta con un conjunto de datos basado en un archivo.Hay dos maneras diferentes de afirmar un conjunto de datos.</target>
        </trans-unit>
        <trans-unit id="a7581ef1768b37d9a3b3d9ddbc26b072dd03f105" translate="yes" xml:space="preserve">
          <source>For the implementation we only need to know that the &lt;code&gt;getDataSet()&lt;/code&gt; method is called once during &lt;code&gt;setUp()&lt;/code&gt; to retrieve the fixture data-set and insert it into the database. In the example we are using a factory method &lt;code&gt;createFlatXMLDataSet($filename)&lt;/code&gt; that represents a data-set through an XML representation.</source>
          <target state="translated">Para la implementaci&amp;oacute;n solo necesitamos saber que el m&amp;eacute;todo &lt;code&gt;getDataSet()&lt;/code&gt; se llama una vez durante &lt;code&gt;setUp()&lt;/code&gt; para recuperar el conjunto de datos del dispositivo e insertarlo en la base de datos. En el ejemplo, estamos usando un m&amp;eacute;todo de f&amp;aacute;brica &lt;code&gt;createFlatXMLDataSet($filename)&lt;/code&gt; que representa un conjunto de datos a trav&amp;eacute;s de una representaci&amp;oacute;n XML.</target>
        </trans-unit>
        <trans-unit id="cbffca81d098fd870b543af78231e4f60826f736" translate="yes" xml:space="preserve">
          <source>For this dataset like the Flat XML, CSV and YAML DataSets the keys of the first specified row define the table's column names, in the previous case this would be &amp;ldquo;id&amp;rdquo;, &amp;ldquo;content&amp;rdquo;, &amp;ldquo;user&amp;rdquo; and &amp;ldquo;created&amp;rdquo;.</source>
          <target state="translated">Para este conjunto de datos como Flat XML, CSV y YAML DataSets, las claves de la primera fila especificada definen los nombres de las columnas de la tabla, en el caso anterior esto ser&amp;iacute;a &quot;id&quot;, &quot;contenido&quot;, &quot;usuario&quot; y &quot;creado&quot;.</target>
        </trans-unit>
        <trans-unit id="a5a19dc13362750c10f68df1dd834e11bf65f8cc" translate="yes" xml:space="preserve">
          <source>For this we would define a Query Table instance which derives its content from a table name and SQL query and compare it to a File/Array Based Data Set:</source>
          <target state="translated">Para ello definiríamos una instancia de Tabla de Consulta que deriva su contenido de un nombre de tabla y una consulta SQL y la comparamos con un conjunto de datos basados en un Archivo/Arreglo:</target>
        </trans-unit>
        <trans-unit id="bd747da5259284d2cedb37053bd801f7b944711d" translate="yes" xml:space="preserve">
          <source>For unit tests, it is recommended to explicitly reset the values of static properties under test in your &lt;code&gt;setUp()&lt;/code&gt; code instead (and ideally also &lt;code&gt;tearDown()&lt;/code&gt;, so as to not affect subsequently executed tests).</source>
          <target state="translated">Para las pruebas unitarias, se recomienda restablecer expl&amp;iacute;citamente los valores de las propiedades est&amp;aacute;ticas bajo prueba en su c&amp;oacute;digo &lt;code&gt;setUp()&lt;/code&gt; en su lugar (e idealmente tambi&amp;eacute;n &lt;code&gt;tearDown()&lt;/code&gt; , para no afectar las pruebas ejecutadas posteriormente).</target>
        </trans-unit>
        <trans-unit id="48a9df4069ac400c2d109b68e5b4456b6afaab8d" translate="yes" xml:space="preserve">
          <source>For usage see &lt;a href=&quot;code-coverage-analysis#code-coverage-analysis.ignoring-code-blocks&quot;&gt;the section called &amp;ldquo;Ignoring Code Blocks&amp;rdquo;&lt;/a&gt;.</source>
          <target state="translated">Para conocer su uso, consulte &lt;a href=&quot;code-coverage-analysis#code-coverage-analysis.ignoring-code-blocks&quot;&gt;la secci&amp;oacute;n denominada &quot;Ignorar bloques de c&amp;oacute;digo&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d790b402d79ac1a723c790313bcd679999474630" translate="yes" xml:space="preserve">
          <source>Frequently Asked Questions</source>
          <target state="translated">Preguntas frecuentes</target>
        </trans-unit>
        <trans-unit id="c98befcd898eff0b605321b27bb399012a9d5265" translate="yes" xml:space="preserve">
          <source>From the previous example it isn't obvious how you would specify an empty table. You can insert a tag with no attributes with the name of the empty table. A flat xml file for an empty guestbook table would then look like:</source>
          <target state="translated">Del ejemplo anterior no es obvio cómo se especificaría una mesa vacía.Puedes insertar una etiqueta sin atributos con el nombre de la tabla vacía.Un archivo xml plano para una tabla vacía del libro de visitas se vería entonces como:</target>
        </trans-unit>
        <trans-unit id="3658f45ce7f57006c8c898d7115d875a1892a62f" translate="yes" xml:space="preserve">
          <source>From the previous implementation example you can easily see that &lt;code&gt;getConnection()&lt;/code&gt; method is pretty static and could be re-used in different database test-cases. Additionally to keep performance of your tests good and database overhead low you can refactor the code a little bit to get a generic abstract test case for your application, which still allows you to specify a different data-fixture for each test case:</source>
          <target state="translated">En el ejemplo de implementaci&amp;oacute;n anterior, puede ver f&amp;aacute;cilmente que el m&amp;eacute;todo &lt;code&gt;getConnection()&lt;/code&gt; es bastante est&amp;aacute;tico y podr&amp;iacute;a reutilizarse en diferentes casos de prueba de bases de datos. Adem&amp;aacute;s, para mantener un buen rendimiento de sus pruebas y una baja sobrecarga de la base de datos, puede refactorizar un poco el c&amp;oacute;digo para obtener un caso de prueba abstracto gen&amp;eacute;rico para su aplicaci&amp;oacute;n, que a&amp;uacute;n le permite especificar un accesorio de datos diferente para cada caso de prueba:</target>
        </trans-unit>
        <trans-unit id="7103f32996791d81c07b880df51f63fb7efbeb1e" translate="yes" xml:space="preserve">
          <source>Function and Method Coverage</source>
          <target state="translated">Cobertura de la función y el método</target>
        </trans-unit>
        <trans-unit id="c7e38653a6e140e92ba1c0bf192d2218936503be" translate="yes" xml:space="preserve">
          <source>Functionality that needs to be stubbed out tends to cluster in the same object, improving cohesion. By presenting the functionality with a single, coherent interface you reduce the coupling with the rest of the system.</source>
          <target state="translated">La funcionalidad que necesita ser eliminada tiende a agruparse en el mismo objeto,mejorando la cohesión.Al presentar la funcionalidad con una interfaz única y coherente se reduce el acoplamiento con el resto del sistema.</target>
        </trans-unit>
        <trans-unit id="fe9631509e271525944995d61d9a9f34acf70b46" translate="yes" xml:space="preserve">
          <source>Generates a code coverage report in Crap4j format. See &lt;a href=&quot;code-coverage-analysis&quot;&gt;Chapter 11&lt;/a&gt; for more details.</source>
          <target state="translated">Genera un informe de cobertura de c&amp;oacute;digo en formato Crap4j. Consulte el &lt;a href=&quot;code-coverage-analysis&quot;&gt;Cap&amp;iacute;tulo 11&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="3185a35e75c541690322766b482041aeacf100ac" translate="yes" xml:space="preserve">
          <source>Generates a code coverage report in HTML format. See &lt;a href=&quot;code-coverage-analysis&quot;&gt;Chapter 11&lt;/a&gt; for more details.</source>
          <target state="translated">Genera un informe de cobertura de c&amp;oacute;digo en formato HTML. Consulte el &lt;a href=&quot;code-coverage-analysis&quot;&gt;Cap&amp;iacute;tulo 11&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="e098b5ef3534ae0cb9c286aff4d09cef71267866" translate="yes" xml:space="preserve">
          <source>Generates a logfile in JUnit XML format for the tests run. See &lt;a href=&quot;logging&quot;&gt;Chapter 13&lt;/a&gt; for more details.</source>
          <target state="translated">Genera un archivo de registro en formato JUnit XML para la ejecuci&amp;oacute;n de las pruebas. Consulte el &lt;a href=&quot;logging&quot;&gt;Cap&amp;iacute;tulo 13&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="572e6ba8aa2a04346fc25a224e65fcd01dbbf924" translate="yes" xml:space="preserve">
          <source>Generates a logfile in XML format with the code coverage information for the tests run. See &lt;a href=&quot;logging&quot;&gt;Chapter 13&lt;/a&gt; for more details.</source>
          <target state="translated">Genera un archivo de registro en formato XML con la informaci&amp;oacute;n de cobertura del c&amp;oacute;digo para las pruebas ejecutadas. Consulte el &lt;a href=&quot;logging&quot;&gt;Cap&amp;iacute;tulo 13&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="120b433d53bc0a72f26c3733f540baeb400a273a" translate="yes" xml:space="preserve">
          <source>Generates a logfile or command-line output in human readable format with the code coverage information for the tests run. See &lt;a href=&quot;logging&quot;&gt;Chapter 13&lt;/a&gt; for more details.</source>
          <target state="translated">Genera un archivo de registro o una salida de l&amp;iacute;nea de comandos en formato legible por humanos con la informaci&amp;oacute;n de cobertura de c&amp;oacute;digo para las pruebas ejecutadas. Consulte el &lt;a href=&quot;logging&quot;&gt;Cap&amp;iacute;tulo 13&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="f6839b90572decae58c2523809931ce56f4124ef" translate="yes" xml:space="preserve">
          <source>Generates a serialized PHP_CodeCoverage object with the code coverage information.</source>
          <target state="translated">Genera un objeto serializado PHP_CodeCoverage con la información de cobertura del código.</target>
        </trans-unit>
        <trans-unit id="d9a11f6ba99849cd72ef9d1e45842a5bf19ec2b2" translate="yes" xml:space="preserve">
          <source>Generates agile documentation in HTML or plain text format for the tests that are run. See &lt;a href=&quot;other-uses-for-tests&quot;&gt;Chapter 12&lt;/a&gt; for more details.</source>
          <target state="translated">Genera documentaci&amp;oacute;n &amp;aacute;gil en formato HTML o texto plano para las pruebas que se ejecutan. Consulte el &lt;a href=&quot;other-uses-for-tests&quot;&gt;Cap&amp;iacute;tulo 12&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="da88f522cd773e024da59e8948cf250b52e5ae81" translate="yes" xml:space="preserve">
          <source>Gerard Meszaros introduces the concept of Test Doubles in &lt;a href=&quot;https://phpunit.de/manual/6.5/en/appendixes.bibliography.html#Meszaros2007&quot;&gt;[&lt;abbr&gt;Meszaros2007&lt;/abbr&gt;]&lt;/a&gt; like this:</source>
          <target state="translated">Gerard Meszaros introduce el concepto de Test Dobles en &lt;a href=&quot;https://phpunit.de/manual/6.5/en/appendixes.bibliography.html#Meszaros2007&quot;&gt;[ &lt;abbr&gt;Meszaros2007&lt;/abbr&gt; ]&lt;/a&gt; as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="b79d9dd84806ecd269733dc617ebba164de3b982" translate="yes" xml:space="preserve">
          <source>Get the actual output.</source>
          <target state="translated">Obtener la salida real.</target>
        </trans-unit>
        <trans-unit id="98ce8e321806dbb3b91df4ce336400b327d82b05" translate="yes" xml:space="preserve">
          <source>Global State</source>
          <target state="translated">Estado Mundial</target>
        </trans-unit>
        <trans-unit id="6db8769e25f079e1b93e7ec6d9ebcb793e8faed0" translate="yes" xml:space="preserve">
          <source>Global State Manipulation</source>
          <target state="translated">Manipulación del Estado Mundial</target>
        </trans-unit>
        <trans-unit id="3022594e64a661bec9c59577c103f3853fe781d6" translate="yes" xml:space="preserve">
          <source>Globally installing the PHAR involves the same procedure as manually &lt;a href=&quot;https://getcomposer.org/doc/00-intro.md#installation-windows&quot;&gt; installing Composer on Windows&lt;/a&gt;:</source>
          <target state="translated">La instalaci&amp;oacute;n global de PHAR implica el mismo procedimiento que la &lt;a href=&quot;https://getcomposer.org/doc/00-intro.md#installation-windows&quot;&gt;instalaci&amp;oacute;n&lt;/a&gt; manual de Composer en Windows :</target>
        </trans-unit>
        <trans-unit id="ae9629f4ebb82c6331c0809fa9a0e54b00e578e6" translate="yes" xml:space="preserve">
          <source>Groups</source>
          <target state="translated">Groups</target>
        </trans-unit>
        <trans-unit id="929a28d261428029e61c0f81c6161fd71ba0b2fe" translate="yes" xml:space="preserve">
          <source>Guides</source>
          <target state="translated">Guides</target>
        </trans-unit>
        <trans-unit id="f595162ce0086d2d33baf504dce935bad604a997" translate="yes" xml:space="preserve">
          <source>Here is an example: suppose we want to test that the correct method, &lt;code&gt;update()&lt;/code&gt; in our example, is called on an object that observes another object. &lt;a href=&quot;test-doubles#test-doubles.mock-objects.examples.SUT.php&quot;&gt;Example 9.10&lt;/a&gt; shows the code for the &lt;code&gt;Subject&lt;/code&gt; and &lt;code&gt;Observer&lt;/code&gt; classes that are part of the System under Test (SUT).</source>
          <target state="translated">Aqu&amp;iacute; hay un ejemplo: supongamos que queremos probar que el m&amp;eacute;todo correcto, &lt;code&gt;update()&lt;/code&gt; en nuestro ejemplo, se llama en un objeto que observa otro objeto. &lt;a href=&quot;test-doubles#test-doubles.mock-objects.examples.SUT.php&quot;&gt;El ejemplo 9.10&lt;/a&gt; muestra el c&amp;oacute;digo para las clases &lt;code&gt;Subject&lt;/code&gt; y &lt;code&gt;Observer&lt;/code&gt; que forman parte del Sistema bajo prueba (SUT).</target>
        </trans-unit>
        <trans-unit id="75970f5f5e8a12ff465817a52bc2d692711f3cf6" translate="yes" xml:space="preserve">
          <source>How to handle NULL with Flat XML / CSV Datasets?</source>
          <target state="translated">¿Cómo manejar NULL con conjuntos de datos planos XML/CSV?</target>
        </trans-unit>
        <trans-unit id="a86a8e509ab919435206aa74ab6531e614525d23" translate="yes" xml:space="preserve">
          <source>However, this simplicity comes at a cost.</source>
          <target state="translated">Sin embargo,esta simplicidad tiene un costo.</target>
        </trans-unit>
        <trans-unit id="8598878bcc389c550580e1685122de2391b8fd19" translate="yes" xml:space="preserve">
          <source>Human readable code coverage output for the command-line or a text file. The aim of this output format is to provide a quick coverage overview while working on a small set of classes. For bigger projects this output can be useful to get an quick overview of the projects coverage or when used with the &lt;code&gt;--filter&lt;/code&gt; functionality. When used from the command-line by writing to &lt;code&gt;php://stdout&lt;/code&gt; this will honor the &lt;code&gt;--colors&lt;/code&gt; setting. Writing to standard out is the default option when used from the command-line. By default this will only show files that have at least one covered line. This can only be changed via the &lt;code&gt;showUncoveredFiles&lt;/code&gt; xml configuration option. See &lt;a href=&quot;appendixes.configuration#appendixes.configuration.logging&quot;&gt;the section called &amp;ldquo;Logging&amp;rdquo;&lt;/a&gt;. By default all files and their coverage status are shown in the detailed report. This can be changed via the &lt;code&gt;showOnlySummary&lt;/code&gt; xml configuration option.</source>
          <target state="translated">Salida de cobertura de c&amp;oacute;digo legible por humanos para la l&amp;iacute;nea de comandos o un archivo de texto. El objetivo de este formato de salida es proporcionar una descripci&amp;oacute;n general r&amp;aacute;pida de la cobertura mientras se trabaja en un peque&amp;ntilde;o conjunto de clases. Para proyectos m&amp;aacute;s grandes, esta salida puede ser &amp;uacute;til para obtener una descripci&amp;oacute;n general r&amp;aacute;pida de la cobertura de los proyectos o cuando se usa con la funcionalidad &lt;code&gt;--filter&lt;/code&gt; . Cuando se usa desde la l&amp;iacute;nea de comandos escribiendo en &lt;code&gt;php://stdout&lt;/code&gt; , esto respetar&amp;aacute; la configuraci&amp;oacute;n de &lt;code&gt;--colors&lt;/code&gt; . Escribir en salida est&amp;aacute;ndar es la opci&amp;oacute;n predeterminada cuando se usa desde la l&amp;iacute;nea de comandos. De forma predeterminada, esto solo mostrar&amp;aacute; los archivos que tengan al menos una l&amp;iacute;nea cubierta. Esto solo se puede cambiar a trav&amp;eacute;s de la opci&amp;oacute;n de configuraci&amp;oacute;n xml &lt;code&gt;showUncoveredFiles&lt;/code&gt; . Consulte &lt;a href=&quot;appendixes.configuration#appendixes.configuration.logging&quot;&gt;la secci&amp;oacute;n denominada &quot;Registro&quot;&lt;/a&gt;. De forma predeterminada, todos los archivos y su estado de cobertura se muestran en el informe detallado. Esto se puede cambiar mediante la opci&amp;oacute;n de configuraci&amp;oacute;n xml &lt;code&gt;showOnlySummary&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ca73ab65568cd125c2d27a22bbd9e863c10b675d" translate="yes" xml:space="preserve">
          <source>I</source>
          <target state="translated">I</target>
        </trans-unit>
        <trans-unit id="7ed71515389bdb63144c64218f911e743a672670" translate="yes" xml:space="preserve">
          <source>I have been talking about NULL problems with the Flat XML and CSV DataSet, but there is a slightly complicated workaround to get both types of datasets working with NULLs.</source>
          <target state="translated">He estado hablando de los problemas de NULL con los conjuntos de datos XML y CSV,pero hay una solución ligeramente complicada para conseguir que ambos tipos de conjuntos de datos funcionen con NULLs.</target>
        </trans-unit>
        <trans-unit id="1e42d59f779165bfae84871f5d75d21fbcb5efae" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$ignoreCase&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, the test will be case insensitive.</source>
          <target state="translated">Si &lt;code&gt;$ignoreCase&lt;/code&gt; es &lt;code&gt;true&lt;/code&gt; , la prueba no distinguir&amp;aacute; entre may&amp;uacute;sculas y min&amp;uacute;sculas.</target>
        </trans-unit>
        <trans-unit id="dd72b3f16a9d32f2c52191f553d8f3c9fc87ac88" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;phpunit.xml&lt;/code&gt; or &lt;code&gt;phpunit.xml.dist&lt;/code&gt; (in that order) exist in the current working directory and &lt;code&gt;--configuration&lt;/code&gt; is &lt;em&gt;not&lt;/em&gt; used, the configuration will be automatically read from that file.</source>
          <target state="translated">Si &lt;code&gt;phpunit.xml&lt;/code&gt; o &lt;code&gt;phpunit.xml.dist&lt;/code&gt; (en ese orden) existen en el directorio de trabajo actual y &lt;code&gt;--configuration&lt;/code&gt; es &lt;em&gt;no&lt;/em&gt; utilizados, la configuraci&amp;oacute;n se leer&amp;aacute; autom&amp;aacute;ticamente de ese archivo.</target>
        </trans-unit>
        <trans-unit id="8a617c8c9df3b8c8e8c129c4fab09b14a75ea97b" translate="yes" xml:space="preserve">
          <source>If provided, only the code coverage information for the specified method(s) will be considered.</source>
          <target state="translated">Si se proporciona,sólo se tendrá en cuenta la información de cobertura del código para el (los)método(s)especificado(s).</target>
        </trans-unit>
        <trans-unit id="0345e64a0eaada7c41a65b899f96e3da82fe38f2" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;http://suhosin.org/&quot;&gt;Suhosin&lt;/a&gt; extension is enabled, you need to allow execution of PHARs in your &lt;code&gt;php.ini&lt;/code&gt;:</source>
          <target state="translated">Si la extensi&amp;oacute;n &lt;a href=&quot;http://suhosin.org/&quot;&gt;Suhosin&lt;/a&gt; est&amp;aacute; habilitada, debe permitir la ejecuci&amp;oacute;n de PHAR en su &lt;code&gt;php.ini&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ac3a78e2d26a1c0ae66509db29835c500490f815" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;PHP_Invoker&lt;/code&gt; package is installed and strict mode is enabled, a large test will fail if it takes longer than 60 seconds to execute. This timeout is configurable via the &lt;code&gt;timeoutForLargeTests&lt;/code&gt; attribute in the XML configuration file.</source>
          <target state="translated">Si el paquete &lt;code&gt;PHP_Invoker&lt;/code&gt; est&amp;aacute; instalado y el modo estricto est&amp;aacute; habilitado, una prueba grande fallar&amp;aacute; si tarda m&amp;aacute;s de 60 segundos en ejecutarse. Este tiempo de espera se puede configurar mediante el atributo &lt;code&gt;timeoutForLargeTests&lt;/code&gt; en el archivo de configuraci&amp;oacute;n XML.</target>
        </trans-unit>
        <trans-unit id="b6cb2208bcb217745f45255e0078c63ac7056759" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;PHP_Invoker&lt;/code&gt; package is installed and strict mode is enabled, a medium test will fail if it takes longer than 10 seconds to execute. This timeout is configurable via the &lt;code&gt;timeoutForMediumTests&lt;/code&gt; attribute in the XML configuration file.</source>
          <target state="translated">Si el paquete &lt;code&gt;PHP_Invoker&lt;/code&gt; est&amp;aacute; instalado y el modo estricto est&amp;aacute; habilitado, una prueba media fallar&amp;aacute; si tarda m&amp;aacute;s de 10 segundos en ejecutarse. Este tiempo de espera se puede configurar mediante el atributo &lt;code&gt;timeoutForMediumTests&lt;/code&gt; en el archivo de configuraci&amp;oacute;n XML.</target>
        </trans-unit>
        <trans-unit id="44fbf358d83a47ca53327acca05d9da3470befaa" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;PHP_Invoker&lt;/code&gt; package is installed and strict mode is enabled, a small test will fail if it takes longer than 1 second to execute. This timeout is configurable via the &lt;code&gt;timeoutForSmallTests&lt;/code&gt; attribute in the XML configuration file.</source>
          <target state="translated">Si el paquete &lt;code&gt;PHP_Invoker&lt;/code&gt; est&amp;aacute; instalado y el modo estricto est&amp;aacute; habilitado, una peque&amp;ntilde;a prueba fallar&amp;aacute; si tarda m&amp;aacute;s de 1 segundo en ejecutarse. Este tiempo de espera se puede configurar mediante el atributo &lt;code&gt;timeoutForSmallTests&lt;/code&gt; en el archivo de configuraci&amp;oacute;n XML.</target>
        </trans-unit>
        <trans-unit id="0609a2d5f42f47439532b5cd30ffb5a21ada8900" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;setUp()&lt;/code&gt; code differs only slightly, move the code that differs from the &lt;code&gt;setUp()&lt;/code&gt; code to the test method.</source>
          <target state="translated">Si el c&amp;oacute;digo &lt;code&gt;setUp()&lt;/code&gt; difiere solo ligeramente, mueva el c&amp;oacute;digo que difiere del c&amp;oacute;digo &lt;code&gt;setUp()&lt;/code&gt; al m&amp;eacute;todo de prueba.</target>
        </trans-unit>
        <trans-unit id="5121934d7f5c0a3adc26a221cbc43fd23d8a1c7a" translate="yes" xml:space="preserve">
          <source>If the original class does declare a method named &quot;method&quot; then &lt;code&gt;$stub-&amp;gt;expects($this-&amp;gt;any())-&amp;gt;method('doSomething')-&amp;gt;willReturn('foo');&lt;/code&gt; has to be used.</source>
          <target state="translated">Si la clase original declara un m&amp;eacute;todo llamado &quot;m&amp;eacute;todo&quot;, &lt;code&gt;$stub-&amp;gt;expects($this-&amp;gt;any())-&amp;gt;method('doSomething')-&amp;gt;willReturn('foo');&lt;/code&gt; tiene que ser utilizado.</target>
        </trans-unit>
        <trans-unit id="c84d0556e2a16d0aa9825512c60fc21691883ca1" translate="yes" xml:space="preserve">
          <source>If time limits based on test size are enforced then this attribute sets the timeout for all tests marked as &lt;code&gt;@large&lt;/code&gt;. If a test does not complete within its configured timeout, it will fail.</source>
          <target state="translated">Si se aplican los l&amp;iacute;mites de tiempo basados ​​en el tama&amp;ntilde;o de la prueba, este atributo establece el tiempo de espera para todas las pruebas marcadas como &lt;code&gt;@large&lt;/code&gt; . Si una prueba no se completa dentro del tiempo de espera configurado, fallar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="2e9544d555087c4c3f04a3dca6e739bcbe05444d" translate="yes" xml:space="preserve">
          <source>If time limits based on test size are enforced then this attribute sets the timeout for all tests marked as &lt;code&gt;@medium&lt;/code&gt;. If a test does not complete within its configured timeout, it will fail.</source>
          <target state="translated">Si se aplican l&amp;iacute;mites de tiempo basados ​​en el tama&amp;ntilde;o de la prueba, este atributo establece el tiempo de espera para todas las pruebas marcadas como &lt;code&gt;@medium&lt;/code&gt; . Si una prueba no se completa dentro del tiempo de espera configurado, fallar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="3c5029c91ea76171dc581bb8b0d82b4558885116" translate="yes" xml:space="preserve">
          <source>If time limits based on test size are enforced then this attribute sets the timeout for all tests not marked as &lt;code&gt;@medium&lt;/code&gt; or &lt;code&gt;@large&lt;/code&gt;. If a test does not complete within its configured timeout, it will fail.</source>
          <target state="translated">Si se aplican l&amp;iacute;mites de tiempo basados ​​en el tama&amp;ntilde;o de la prueba, este atributo establece el tiempo de espera para todas las pruebas no marcadas como &lt;code&gt;@medium&lt;/code&gt; o &lt;code&gt;@large&lt;/code&gt; . Si una prueba no se completa dentro del tiempo de espera configurado, fallar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="40578e362327852b16f5d4e030f28f17c713a9fe" translate="yes" xml:space="preserve">
          <source>If we think of a successful test as a green light and a test failure as a red light, we need an additional yellow light to mark a test as being incomplete or not yet implemented. &lt;code&gt;PHPUnit_Framework_IncompleteTest&lt;/code&gt; is a marker interface for marking an exception that is raised by a test method as the result of the test being incomplete or currently not implemented. &lt;code&gt;PHPUnit_Framework_IncompleteTestError&lt;/code&gt; is the standard implementation of this interface.</source>
          <target state="translated">Si pensamos en una prueba exitosa como una luz verde y una prueba fallida como una luz roja, necesitamos una luz amarilla adicional para marcar una prueba como incompleta o a&amp;uacute;n no implementada. &lt;code&gt;PHPUnit_Framework_IncompleteTest&lt;/code&gt; es una interfaz de marcador para marcar una excepci&amp;oacute;n que se genera mediante un m&amp;eacute;todo de prueba como resultado de que la prueba est&amp;aacute; incompleta o no est&amp;aacute; implementada actualmente. &lt;code&gt;PHPUnit_Framework_IncompleteTestError&lt;/code&gt; es la implementaci&amp;oacute;n est&amp;aacute;ndar de esta interfaz.</target>
        </trans-unit>
        <trans-unit id="0b04a7ef50b6705ad3387a4f49771792bfba8b04" translate="yes" xml:space="preserve">
          <source>If you are using a persistent database (not Sqlite Memory) you can easily setup the database once with tools such as phpMyAdmin for MySQL and re-use the database for every test-run.</source>
          <target state="translated">Si se utiliza una base de datos persistente (no Sqlite Memory)se puede configurar fácilmente la base de datos una vez con herramientas como phpMyAdmin para MySQL y reutilizar la base de datos para cada prueba.</target>
        </trans-unit>
        <trans-unit id="cc3988d73ceead5f5ff094949488d455a4cd3b0e" translate="yes" xml:space="preserve">
          <source>If you are using libraries such as &lt;a href=&quot;http://www.doctrine-project.org&quot;&gt;Doctrine 2&lt;/a&gt; or &lt;a href=&quot;http://www.propelorm.org/&quot;&gt;Propel&lt;/a&gt; you can use their APIs to create the database schema you need once before you run the tests. You can utilize &lt;a href=&quot;textui&quot;&gt;PHPUnit's Bootstrap and Configuration&lt;/a&gt; capabilities to execute this code whenever your tests are run.</source>
          <target state="translated">Si est&amp;aacute; usando bibliotecas como &lt;a href=&quot;http://www.doctrine-project.org&quot;&gt;Doctrine 2&lt;/a&gt; o &lt;a href=&quot;http://www.propelorm.org/&quot;&gt;Propel&lt;/a&gt; , puede usar sus API para crear el esquema de base de datos que necesita una vez antes de ejecutar las pruebas. Puede utilizar &lt;a href=&quot;textui&quot;&gt;las&lt;/a&gt; capacidades de configuraci&amp;oacute;n y arranque de PHPUnit para ejecutar este c&amp;oacute;digo siempre que se ejecuten sus pruebas.</target>
        </trans-unit>
        <trans-unit id="d5c6baffee6d2afcf8aad5989d826d5f98b0ba6e" translate="yes" xml:space="preserve">
          <source>If you are using syntax that doesn't compile with a certain PHP Version look into the xml configuration for version dependent includes in &lt;a href=&quot;appendixes.configuration#appendixes.configuration.testsuites&quot;&gt;the section called &amp;ldquo;Test Suites&amp;rdquo;&lt;/a&gt;</source>
          <target state="translated">Si est&amp;aacute; utilizando una sintaxis que no se compila con una determinada versi&amp;oacute;n de PHP, consulte la configuraci&amp;oacute;n xml para las inclusiones dependientes de la versi&amp;oacute;n en &lt;a href=&quot;appendixes.configuration#appendixes.configuration.testsuites&quot;&gt;la secci&amp;oacute;n llamada &quot;Suites de prueba&quot;.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e717ed3c78962a5ce2dbe7d70c1ff5e204120cc9" translate="yes" xml:space="preserve">
          <source>If you do not cache the PDO instance that is created from the TestCase &lt;code&gt;getConnection()&lt;/code&gt; method the number of connections to the database is increasing by one or more with each database test. With default configuration MySql only allows 100 concurrent connections other vendors also have maximum connection limits.</source>
          <target state="translated">Si no almacena en cach&amp;eacute; la instancia de PDO que se crea a partir del m&amp;eacute;todo TestCase &lt;code&gt;getConnection()&lt;/code&gt; , el n&amp;uacute;mero de conexiones a la base de datos aumentar&amp;aacute; en una o m&amp;aacute;s con cada prueba de base de datos. Con la configuraci&amp;oacute;n predeterminada, MySql solo permite 100 conexiones simult&amp;aacute;neas, otros proveedores tambi&amp;eacute;n tienen l&amp;iacute;mites m&amp;aacute;ximos de conexi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="da878ab70f17adab2b85d7401b55fa3e66d4072d" translate="yes" xml:space="preserve">
          <source>If you have a large fixture file you can use the DataSet Filter for white- and blacklisting of tables and columns that should be contained in a sub-dataset. This is especially handy in combination with the DB DataSet to filter the columns of the datasets.</source>
          <target state="translated">Si tiene un archivo de gran tamaño,puede utilizar el filtro DataSet para crear una lista blanca y una lista negra de tablas y columnas que deberían estar contenidas en un subconjunto de datos.Esto es especialmente útil en combinación con el DB DataSet para filtrar las columnas de los conjuntos de datos.</target>
        </trans-unit>
        <trans-unit id="64e2b42af8dc866525a76f701d68a4d8cf78c96b" translate="yes" xml:space="preserve">
          <source>If you point the PHPUnit command-line test runner to a directory it will look for &lt;code&gt;*Test.php&lt;/code&gt; files.</source>
          <target state="translated">Si apunta el corredor de prueba de la l&amp;iacute;nea de comandos PHPUnit a un directorio, buscar&amp;aacute; archivos &lt;code&gt;*Test.php&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5827cbac02873879d9e8ea8099af725de1cf16d7" translate="yes" xml:space="preserve">
          <source>If you really have a different &lt;code&gt;setUp()&lt;/code&gt;, you need a different test case class. Name the class after the difference in the setup.</source>
          <target state="translated">Si realmente tiene un &lt;code&gt;setUp()&lt;/code&gt; diferente , necesita una clase de caso de prueba diferente. Nombra la clase seg&amp;uacute;n la diferencia en la configuraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="4cdbe429ed87d0561a5f734b7867eb47dd59f0d4" translate="yes" xml:space="preserve">
          <source>If you want to test code that works with the Database Extension the setup is a bit more complex and you have to extend a different abstract TestCase requiring you to implement two abstract methods &lt;code&gt;getConnection()&lt;/code&gt; and &lt;code&gt;getDataSet()&lt;/code&gt;:</source>
          <target state="translated">Si desea probar el c&amp;oacute;digo que funciona con la Extensi&amp;oacute;n de la base de datos, la configuraci&amp;oacute;n es un poco m&amp;aacute;s compleja y debe extender un TestCase abstracto diferente que requiere que implemente dos m&amp;eacute;todos abstractos &lt;code&gt;getConnection()&lt;/code&gt; y &lt;code&gt;getDataSet()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c15b85d3817c8daaaab47b428469c731db4aaf35" translate="yes" xml:space="preserve">
          <source>Ignore &lt;code&gt;phpunit.xml&lt;/code&gt; and &lt;code&gt;phpunit.xml.dist&lt;/code&gt; from the current working directory.</source>
          <target state="translated">Ignore &lt;code&gt;phpunit.xml&lt;/code&gt; y &lt;code&gt;phpunit.xml.dist&lt;/code&gt; del directorio de trabajo actual.</target>
        </trans-unit>
        <trans-unit id="4e7559a55f03ec686890f2a5897c5f4df6589215" translate="yes" xml:space="preserve">
          <source>Ignoring Code Blocks</source>
          <target state="translated">Ignorar los bloques de código</target>
        </trans-unit>
        <trans-unit id="deb86d630d630ac5071c48d0c476de5ac4321ebb" translate="yes" xml:space="preserve">
          <source>Implement PHPUnit\Framework\TestListener</source>
          <target state="translated">Implementar PHPUnit\Framework\TestListener</target>
        </trans-unit>
        <trans-unit id="ca47b573b6c80926ed96a90308b4003c14ec693e" translate="yes" xml:space="preserve">
          <source>Implement PHPUnit_Framework_Test</source>
          <target state="translated">Implementar PHPUnit_Framework_Test</target>
        </trans-unit>
        <trans-unit id="f5636383a86a651af0a3108cbfd54aa4831d4020" translate="yes" xml:space="preserve">
          <source>Implementing getConnection()</source>
          <target state="translated">Implementando getConnection()</target>
        </trans-unit>
        <trans-unit id="77cc9d484d61150479874ce69058d89a72be1ca4" translate="yes" xml:space="preserve">
          <source>Implementing getDataSet()</source>
          <target state="translated">Implementando getDataSet()</target>
        </trans-unit>
        <trans-unit id="ecaae61d95472fc3adc8b9f4f5398b1f333f15c8" translate="yes" xml:space="preserve">
          <source>Implementing your own DataSets/DataTables</source>
          <target state="translated">Implementar sus propios conjuntos de datos/tablas de datos</target>
        </trans-unit>
        <trans-unit id="459e887ffcfbbb00dfb17877abcff53963e09b14" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;appendixes.configuration#appendixes.configuration.test-listeners&quot;&gt;the section called &amp;ldquo;Test Listeners&amp;rdquo;&lt;/a&gt; you can see how to configure PHPUnit to attach your test listener to the test execution.</source>
          <target state="translated">En &lt;a href=&quot;appendixes.configuration#appendixes.configuration.test-listeners&quot;&gt;la secci&amp;oacute;n llamada &quot;Test Listeners&quot;&lt;/a&gt; puede ver c&amp;oacute;mo configurar PHPUnit para adjuntar su escucha de prueba a la ejecuci&amp;oacute;n de la prueba.</target>
        </trans-unit>
        <trans-unit id="58667d806dfe51819803613bafd29cc27fbccc15" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.examples.StackTest.php&quot;&gt;Example 2.1&lt;/a&gt;, the fixture was simply the array that is stored in the &lt;code&gt;$stack&lt;/code&gt; variable. Most of the time, though, the fixture will be more complex than a simple array, and the amount of code needed to set it up will grow accordingly. The actual content of the test gets lost in the noise of setting up the fixture. This problem gets even worse when you write several tests with similar fixtures. Without some help from the testing framework, we would have to duplicate the code that sets up the fixture for each test we write.</source>
          <target state="translated">En el &lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.examples.StackTest.php&quot;&gt;ejemplo 2.1&lt;/a&gt; , el dispositivo era simplemente la matriz que se almacena en la variable &lt;code&gt;$stack&lt;/code&gt; . La mayor&amp;iacute;a de las veces, sin embargo, el dispositivo ser&amp;aacute; m&amp;aacute;s complejo que una simple matriz, y la cantidad de c&amp;oacute;digo necesario para configurarlo crecer&amp;aacute; en consecuencia. El contenido real de la prueba se pierde en el ruido de la instalaci&amp;oacute;n del dispositivo. Este problema empeora a&amp;uacute;n m&amp;aacute;s cuando escribe varias pruebas con dispositivos similares. Sin la ayuda del marco de pruebas, tendr&amp;iacute;amos que duplicar el c&amp;oacute;digo que configura el dispositivo para cada prueba que escribimos.</target>
        </trans-unit>
        <trans-unit id="14decf5c3b38532c40295f8ca2e1e20860268459" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.examples.StackTest2.php&quot;&gt;Example 2.2&lt;/a&gt; we used the producer-consumer relationship between tests to share a fixture. This is not always desired or even possible. &lt;a href=&quot;fixtures#fixtures.examples.StackTest.php&quot;&gt;Example 4.1&lt;/a&gt; shows how we can write the tests of the &lt;code&gt;StackTest&lt;/code&gt; in such a way that not the fixture itself is reused but the code that creates it. First we declare the instance variable, &lt;code&gt;$stack&lt;/code&gt;, that we are going to use instead of a method-local variable. Then we put the creation of the &lt;code&gt;array&lt;/code&gt; fixture into the &lt;code&gt;setUp()&lt;/code&gt; method. Finally, we remove the redundant code from the test methods and use the newly introduced instance variable, &lt;code&gt;$this-&amp;gt;stack&lt;/code&gt;, instead of the method-local variable &lt;code&gt;$stack&lt;/code&gt; with the &lt;code&gt;assertEquals()&lt;/code&gt; assertion method.</source>
          <target state="translated">En el &lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.examples.StackTest2.php&quot;&gt;ejemplo 2.2&lt;/a&gt; usamos la relaci&amp;oacute;n productor-consumidor entre pruebas para compartir un accesorio. Esto no siempre es deseado o incluso posible. &lt;a href=&quot;fixtures#fixtures.examples.StackTest.php&quot;&gt;El ejemplo 4.1&lt;/a&gt; muestra c&amp;oacute;mo podemos escribir las pruebas del &lt;code&gt;StackTest&lt;/code&gt; de tal manera que no se reutilice el dispositivo en s&amp;iacute;, sino el c&amp;oacute;digo que lo crea. Primero declaramos la variable de instancia, &lt;code&gt;$stack&lt;/code&gt; , que vamos a usar en lugar de una variable local de m&amp;eacute;todo. Luego colocamos la creaci&amp;oacute;n del &lt;code&gt;array&lt;/code&gt; de arreglo en el m&amp;eacute;todo &lt;code&gt;setUp()&lt;/code&gt; . Finalmente, eliminamos el c&amp;oacute;digo redundante de los m&amp;eacute;todos de prueba y usamos la variable de instancia reci&amp;eacute;n introducida, &lt;code&gt;$this-&amp;gt;stack&lt;/code&gt; , en lugar de la variable local del m&amp;eacute;todo &lt;code&gt;$stack&lt;/code&gt; con el &lt;code&gt;assertEquals()&lt;/code&gt; m&amp;eacute;todo de aserci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="53ca303e4e625f4364d66677865c67cf67682aa8" translate="yes" xml:space="preserve">
          <source>In PHP, global variables work like this:</source>
          <target state="translated">En PHP,las variables globales funcionan así:</target>
        </trans-unit>
        <trans-unit id="902150882163cc266a5339209c00c212034c0a32" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;code&gt;expectException()&lt;/code&gt; method the &lt;code&gt;expectExceptionCode()&lt;/code&gt;, &lt;code&gt;expectExceptionMessage()&lt;/code&gt;, and &lt;code&gt;expectExceptionMessageRegExp()&lt;/code&gt; methods exist to set up expectations for exceptions raised by the code under test.</source>
          <target state="translated">Adem&amp;aacute;s de la &lt;code&gt;expectException()&lt;/code&gt; m&amp;eacute;todo de la &lt;code&gt;expectExceptionCode()&lt;/code&gt; , &lt;code&gt;expectExceptionMessage()&lt;/code&gt; , y &lt;code&gt;expectExceptionMessageRegExp()&lt;/code&gt; existen m&amp;eacute;todos para establecer las expectativas para excepciones planteadas por el c&amp;oacute;digo bajo prueba.</target>
        </trans-unit>
        <trans-unit id="a72bf60563517809d7a57f673ba7d377c4d69933" translate="yes" xml:space="preserve">
          <source>In addition to the above methods it is also possible to use the &lt;code&gt;@requires&lt;/code&gt; annotation to express common preconditions for a test case.</source>
          <target state="translated">Adem&amp;aacute;s de los m&amp;eacute;todos anteriores, tambi&amp;eacute;n es posible utilizar la anotaci&amp;oacute;n &lt;code&gt;@requires&lt;/code&gt; para expresar las condiciones previas comunes para un caso de prueba.</target>
        </trans-unit>
        <trans-unit id="d8668ef60f9a27aa3e62b60579dab49b9f0f5ab3" translate="yes" xml:space="preserve">
          <source>In addition, the &lt;code&gt;setUpBeforeClass()&lt;/code&gt; and &lt;code&gt;tearDownAfterClass()&lt;/code&gt; template methods are called before the first test of the test case class is run and after the last test of the test case class is run, respectively.</source>
          <target state="translated">Adem&amp;aacute;s, los m&amp;eacute;todos de plantilla &lt;code&gt;setUpBeforeClass()&lt;/code&gt; y &lt;code&gt;tearDownAfterClass()&lt;/code&gt; se llaman antes de que se ejecute la primera prueba de la clase de caso de prueba y despu&amp;eacute;s de que se ejecute la &amp;uacute;ltima prueba de la clase de caso de prueba, respectivamente.</target>
        </trans-unit>
        <trans-unit id="2f2cf1ecf2d71da437d5f329c42e22a00bea44cc" translate="yes" xml:space="preserve">
          <source>In computer science, code coverage is a measure used to describe the degree to which the source code of a program is tested by a particular test suite. A program with high code coverage has been more thoroughly tested and has a lower chance of containing software bugs than a program with low code coverage.</source>
          <target state="translated">En informática,la cobertura de código es una medida utilizada para describir el grado en que el código fuente de un programa es probado por un conjunto de pruebas determinado.Un programa con alta cobertura de código ha sido probado más a fondo y tiene menos posibilidades de contener errores de software que un programa con baja cobertura de código.</target>
        </trans-unit>
        <trans-unit id="b201af5837dcdc4f4092522e3ce93c594110f1f4" translate="yes" xml:space="preserve">
          <source>In conclusion I can only advise using the Flat XML datasets if you do not need NULL values.</source>
          <target state="translated">En conclusión,sólo puedo aconsejar el uso de los conjuntos de datos XML planos si no se necesitan valores NULL.</target>
        </trans-unit>
        <trans-unit id="7e1e7b3fff10585a108be2959c6f038d1de47ebf" translate="yes" xml:space="preserve">
          <source>In fact, you can even use global function wrappers such as &lt;code&gt;assertTrue()&lt;/code&gt; in any context (including classes that extend &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt;) when you (manually) include the &lt;code&gt;src/Framework/Assert/Functions.php&lt;/code&gt; sourcecode file that comes with PHPUnit.</source>
          <target state="translated">De hecho, incluso puede usar envoltorios de funciones globales como &lt;code&gt;assertTrue()&lt;/code&gt; en cualquier contexto (incluidas las clases que extienden &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt; ) cuando (manualmente) incluye el archivo de c&amp;oacute;digo fuente &lt;code&gt;src/Framework/Assert/Functions.php&lt;/code&gt; que viene con PHPUnit.</target>
        </trans-unit>
        <trans-unit id="37df62d41354e44aa49e4f8f928a9bf608f06008" translate="yes" xml:space="preserve">
          <source>In his book on xUnit Test Patterns Gerard Meszaros lists the four stages of a unit-test:</source>
          <target state="translated">En su libro sobre patrones de prueba de unidades,Gerard Meszaros enumera las cuatro etapas de una prueba de unidades:</target>
        </trans-unit>
        <trans-unit id="71fb338773577ce2f9c8cf729c583dd2c69c27b2" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;setUp()&lt;/code&gt; and &lt;code&gt;tearDown()&lt;/code&gt; methods we have to ensure that the directory does not exist before and after the test.</source>
          <target state="translated">En los &lt;code&gt;setUp()&lt;/code&gt; y &lt;code&gt;tearDown()&lt;/code&gt; tenemos que asegurarnos de que el directorio no existe antes y despu&amp;eacute;s de la prueba.</target>
        </trans-unit>
        <trans-unit id="9f0652f424e9df01292afb2d15b61255dcc2f58f" translate="yes" xml:space="preserve">
          <source>In the example above, the first test, &lt;code&gt;testEmpty()&lt;/code&gt;, creates a new array and asserts that it is empty. The test then returns the fixture as its result. The second test, &lt;code&gt;testPush()&lt;/code&gt;, depends on &lt;code&gt;testEmpty()&lt;/code&gt; and is passed the result of that depended-upon test as its argument. Finally, &lt;code&gt;testPop()&lt;/code&gt; depends upon &lt;code&gt;testPush()&lt;/code&gt;.</source>
          <target state="translated">En el ejemplo anterior, la primera prueba, &lt;code&gt;testEmpty()&lt;/code&gt; , crea una nueva matriz y afirma que est&amp;aacute; vac&amp;iacute;a. Luego, la prueba devuelve el dispositivo como resultado. La segunda prueba, &lt;code&gt;testPush()&lt;/code&gt; , depende de &lt;code&gt;testEmpty()&lt;/code&gt; y se pasa el resultado de esa prueba dependiente como argumento. Finalmente, &lt;code&gt;testPop()&lt;/code&gt; depende de &lt;code&gt;testPush()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0abf16e328dca5730f6d1c2465370767be498d73" translate="yes" xml:space="preserve">
          <source>In the examples so far we have been returning simple values using &lt;code&gt;willReturn($value)&lt;/code&gt;. This short syntax is the same as &lt;code&gt;will($this-&amp;gt;returnValue($value))&lt;/code&gt;. We can use variations on this longer syntax to achieve more complex stubbing behaviour.</source>
          <target state="translated">En los ejemplos hasta ahora, hemos estado devolviendo valores simples usando &lt;code&gt;willReturn($value)&lt;/code&gt; . Esta sintaxis corta es la misma que &lt;code&gt;will($this-&amp;gt;returnValue($value))&lt;/code&gt; . Podemos usar variaciones en esta sintaxis m&amp;aacute;s larga para lograr un comportamiento de stubbing m&amp;aacute;s complejo.</target>
        </trans-unit>
        <trans-unit id="5244528626be773ff2f80cfc1621e8ff798d77ca" translate="yes" xml:space="preserve">
          <source>In the previous example we create an in-memory Sqlite connection and pass it to the &lt;code&gt;createDefaultDBConnection&lt;/code&gt; method which wraps the PDO instance and the second parameter (the database-name) in a very simple abstraction layer for database connections of the type &lt;code&gt;PHPUnit_Extensions_Database_DB_IDatabaseConnection&lt;/code&gt;.</source>
          <target state="translated">En el ejemplo anterior creamos una conexi&amp;oacute;n Sqlite en memoria y la &lt;code&gt;createDefaultDBConnection&lt;/code&gt; m&amp;eacute;todo createDefaultDBConnection que envuelve la instancia de PDO y el segundo par&amp;aacute;metro (el nombre de la base de datos) en una capa de abstracci&amp;oacute;n muy simple para conexiones de base de datos del tipo &lt;code&gt;PHPUnit_Extensions_Database_DB_IDatabaseConnection&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5b5250c5bfb9b04e27c80e7e691b6846638f95be" translate="yes" xml:space="preserve">
          <source>In the scope of a function or method, you may access the global variable &lt;code&gt;$foo&lt;/code&gt; by either directly accessing &lt;code&gt;$GLOBALS['foo']&lt;/code&gt; or by using &lt;code&gt;global $foo;&lt;/code&gt; to create a local variable with a reference to the global variable.</source>
          <target state="translated">En el &amp;aacute;mbito de una funci&amp;oacute;n o m&amp;eacute;todo, puede acceder a la variable global &lt;code&gt;$foo&lt;/code&gt; accediendo directamente a &lt;code&gt;$GLOBALS['foo']&lt;/code&gt; o utilizando &lt;code&gt;global $foo;&lt;/code&gt; para crear una variable local con una referencia a la variable global.</target>
        </trans-unit>
        <trans-unit id="10ef912533cbdf9835d2d66bd0c9841fce5c9258" translate="yes" xml:space="preserve">
          <source>In this case the second entry is posted anonymously. However, this leads to a serious problem with column recognition. During dataset equality assertions each dataset has to specify what columns a table holds. If an attribute is NULL for all the rows of a data-table, how would the Database Extension know that the column should be part of the table?</source>
          <target state="translated">En este caso,la segunda entrada se publica de forma anónima.Sin embargo,esto lleva a un serio problema con el reconocimiento de la columna.Durante las afirmaciones de igualdad de los conjuntos de datos,cada conjunto de datos tiene que especificar qué columnas contiene una tabla.Si un atributo es NULL para todas las filas de una tabla de datos,¿cómo sabría la Extensión de la Base de Datos que la columna debe formar parte de la tabla?</target>
        </trans-unit>
        <trans-unit id="a06e9e6c18e73984c7902792c482ba21277c13d7" translate="yes" xml:space="preserve">
          <source>In this chapter you will learn all about PHPUnit's code coverage functionality that provides an insight into what parts of the production code are executed when the tests are run. It makes use of the &lt;a href=&quot;https://github.com/sebastianbergmann/php-code-coverage&quot;&gt;PHP_CodeCoverage&lt;/a&gt; component, which in turn leverages the code coverage functionality provided by the &lt;a href=&quot;http://xdebug.org/&quot;&gt;Xdebug&lt;/a&gt; extension for PHP.</source>
          <target state="translated">En este cap&amp;iacute;tulo, aprender&amp;aacute; todo sobre la funcionalidad de cobertura de c&amp;oacute;digo de PHPUnit que proporciona una idea de qu&amp;eacute; partes del c&amp;oacute;digo de producci&amp;oacute;n se ejecutan cuando se ejecutan las pruebas. Hace uso del componente &lt;a href=&quot;https://github.com/sebastianbergmann/php-code-coverage&quot;&gt;PHP_CodeCoverage&lt;/a&gt; , que a su vez aprovecha la funcionalidad de cobertura de c&amp;oacute;digo proporcionada por la extensi&amp;oacute;n &lt;a href=&quot;http://xdebug.org/&quot;&gt;Xdebug&lt;/a&gt; para PHP.</target>
        </trans-unit>
        <trans-unit id="1d9f3225aee3bc235926c60166a963f1a0ecc8ca" translate="yes" xml:space="preserve">
          <source>In this example only one of the array values differs and the other values are shown to provide context on where the error occurred.</source>
          <target state="translated">En este ejemplo sólo uno de los valores de la matriz difiere y los demás valores se muestran para proporcionar el contexto en el que se produjo el error.</target>
        </trans-unit>
        <trans-unit id="d15b4accfaa967bde7b380d158497e5eb028526d" translate="yes" xml:space="preserve">
          <source>In this example the difference in the first index between &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;'1'&lt;/code&gt; is reported even though assertEquals considers the values as a match.</source>
          <target state="translated">En este ejemplo &lt;code&gt;'1'&lt;/code&gt; se informa la diferencia en el primer &amp;iacute;ndice entre &lt;code&gt;1&lt;/code&gt; y '1' aunque assertEquals considera los valores como una coincidencia.</target>
        </trans-unit>
        <trans-unit id="7bbd27931ac56240ceed04ae20ef350f16f93c1f" translate="yes" xml:space="preserve">
          <source>In turn, if you specify only a subset of the table columns in the Flat XML dataset all the omitted values are set to their default values. This will lead to errors if one of the omitted columns is defined as &amp;ldquo;NOT NULL DEFAULT NULL&amp;rdquo;.</source>
          <target state="translated">A su vez, si especifica solo un subconjunto de las columnas de la tabla en el conjunto de datos XML plano, todos los valores omitidos se establecen en sus valores predeterminados. Esto dar&amp;aacute; lugar a errores si una de las columnas omitidas se define como &quot;NOT NULL DEFAULT NULL&quot;.</target>
        </trans-unit>
        <trans-unit id="42e70faea283110f3781aa15c02bcf5a1401b5ba" translate="yes" xml:space="preserve">
          <source>In your test use a special assertion called &lt;code&gt;assertDataSetsEqual()&lt;/code&gt; for verification purposes, however, this is entirely optional. This feature will be explained in the section &amp;ldquo;Database Assertions&amp;rdquo;.</source>
          <target state="translated">En su prueba, use una aserci&amp;oacute;n especial llamada &lt;code&gt;assertDataSetsEqual()&lt;/code&gt; para fines de verificaci&amp;oacute;n, sin embargo, esto es completamente opcional. Esta funci&amp;oacute;n se explicar&amp;aacute; en la secci&amp;oacute;n &quot;Afirmaciones de la base de datos&quot;.</target>
        </trans-unit>
        <trans-unit id="be7d301fd25bcde01562b91d2a5806ac84e156c2" translate="yes" xml:space="preserve">
          <source>Incomplete Tests</source>
          <target state="translated">Pruebas incompletas</target>
        </trans-unit>
        <trans-unit id="70770c735255bb6dc6cb7565fb84de6440371c15" translate="yes" xml:space="preserve">
          <source>Incomplete and Skipped Tests</source>
          <target state="translated">Pruebas incompletas y omitidas</target>
        </trans-unit>
        <trans-unit id="0df3ba3bcc5b6b38249ab44a3542a6757b785b93" translate="yes" xml:space="preserve">
          <source>Indicates that a test should be run in a separate PHP process.</source>
          <target state="translated">Indica que una prueba debe ser ejecutada en un proceso PHP separado.</target>
        </trans-unit>
        <trans-unit id="9437ffff72a85ee18d9dfa0bfb75630a99d55592" translate="yes" xml:space="preserve">
          <source>Indicates that all tests in a test class should be run in a separate PHP process.</source>
          <target state="translated">Indica que todas las pruebas de una clase de prueba deben ser ejecutadas en un proceso PHP separado.</target>
        </trans-unit>
        <trans-unit id="80bc394d0a79d7263f0202f63a6e0e689c57c595" translate="yes" xml:space="preserve">
          <source>Inserting the rows required for the test into these tables</source>
          <target state="translated">Insertar las filas necesarias para la prueba en estas tablas</target>
        </trans-unit>
        <trans-unit id="7c67da56927c1201f863fd1a29ccbd173201dd65" translate="yes" xml:space="preserve">
          <source>Inside the test methods, assertion methods such as &lt;code&gt;assertEquals()&lt;/code&gt; (see &lt;a href=&quot;appendixes.assertions&quot;&gt;Appendix A&lt;/a&gt;) are used to assert that an actual value matches an expected value.</source>
          <target state="translated">Dentro de los m&amp;eacute;todos de prueba, se utilizan m&amp;eacute;todos de afirmaci&amp;oacute;n como &lt;code&gt;assertEquals()&lt;/code&gt; (consulte el &lt;a href=&quot;appendixes.assertions&quot;&gt;Ap&amp;eacute;ndice A&lt;/a&gt; ) para afirmar que un valor real coincide con un valor esperado.</target>
        </trans-unit>
        <trans-unit id="37dc4e9fc83d7de94ca8bd5d1c15f633ad61c811" translate="yes" xml:space="preserve">
          <source>Installing PHPUnit</source>
          <target state="translated">Instalando la Unidad PHP</target>
        </trans-unit>
        <trans-unit id="337fd037cee63389be2aef1c79a8a8956a173d45" translate="yes" xml:space="preserve">
          <source>Instead of returning a value, a stubbed method can also raise an exception. &lt;a href=&quot;test-doubles#test-doubles.stubs.examples.StubTest8.php&quot;&gt;Example 9.9&lt;/a&gt; shows how to use &lt;code&gt;throwException()&lt;/code&gt; to do this.</source>
          <target state="translated">En lugar de devolver un valor, un m&amp;eacute;todo stubped tambi&amp;eacute;n puede generar una excepci&amp;oacute;n. &lt;a href=&quot;test-doubles#test-doubles.stubs.examples.StubTest8.php&quot;&gt;El ejemplo 9.9&lt;/a&gt; muestra c&amp;oacute;mo usar &lt;code&gt;throwException()&lt;/code&gt; para hacer esto.</target>
        </trans-unit>
        <trans-unit id="45279b4cd769444df64537dbe9cceeddaef726b8" translate="yes" xml:space="preserve">
          <source>It cannot be emphasized enough that sharing fixtures between tests reduces the value of the tests. The underlying design problem is that objects are not loosely coupled. You will achieve better results solving the underlying design problem and then writing tests using stubs (see &lt;a href=&quot;test-doubles&quot;&gt;Chapter 9&lt;/a&gt;), than by creating dependencies between tests at runtime and ignoring the opportunity to improve your design.</source>
          <target state="translated">No se puede enfatizar lo suficiente que compartir accesorios entre pruebas reduce el valor de las pruebas. El problema de dise&amp;ntilde;o subyacente es que los objetos no est&amp;aacute;n acoplados d&amp;eacute;bilmente. Obtendr&amp;aacute; mejores resultados resolviendo el problema de dise&amp;ntilde;o subyacente y luego escribiendo pruebas usando stubs (vea el &lt;a href=&quot;test-doubles&quot;&gt;Cap&amp;iacute;tulo 9&lt;/a&gt; ), que creando dependencias entre pruebas en tiempo de ejecuci&amp;oacute;n e ignorando la oportunidad de mejorar su dise&amp;ntilde;o.</target>
        </trans-unit>
        <trans-unit id="9b0045a682ab642862c8c3942ba0d4c4394807e1" translate="yes" xml:space="preserve">
          <source>It is also possible to specify that a test should not cover &lt;em&gt;any&lt;/em&gt; method by using the &lt;code&gt;@coversNothing&lt;/code&gt; annotation (see &lt;a href=&quot;appendixes.annotations#appendixes.annotations.coversNothing&quot;&gt;the section called &amp;ldquo;@coversNothing&amp;rdquo;&lt;/a&gt;). This can be helpful when writing integration tests to make sure you only generate code coverage with unit tests.</source>
          <target state="translated">Tambi&amp;eacute;n es posible especificar que una prueba no debe cubrir &lt;em&gt;ning&amp;uacute;n&lt;/em&gt; m&amp;eacute;todo usando la anotaci&amp;oacute;n &lt;code&gt;@coversNothing&lt;/code&gt; (ver &lt;a href=&quot;appendixes.annotations#appendixes.annotations.coversNothing&quot;&gt;la secci&amp;oacute;n llamada &amp;ldquo;@coversNothing&amp;rdquo;&lt;/a&gt; ). Esto puede ser &amp;uacute;til al escribir pruebas de integraci&amp;oacute;n para asegurarse de que solo genera cobertura de c&amp;oacute;digo con pruebas unitarias.</target>
        </trans-unit>
        <trans-unit id="3313cdedfd3f8d3e23f9f66942bcfb3c63071005" translate="yes" xml:space="preserve">
          <source>It is mandatory to configure a &lt;em&gt;whitelist&lt;/em&gt; for telling PHPUnit which sourcecode files to include in the code coverage report. This can either be done using the &lt;code&gt;--whitelist&lt;/code&gt; commandline option or via the configuration file (see &lt;a href=&quot;appendixes.configuration#appendixes.configuration.whitelisting-files&quot;&gt;the section called &amp;ldquo;Whitelisting Files for Code Coverage&amp;rdquo;&lt;/a&gt;).</source>
          <target state="translated">Es obligatorio configurar una &lt;em&gt;lista blanca&lt;/em&gt; para decirle a PHPUnit qu&amp;eacute; archivos de c&amp;oacute;digo fuente incluir en el informe de cobertura del c&amp;oacute;digo. Esto se puede hacer usando la opci&amp;oacute;n de l&amp;iacute;nea de comandos &lt;code&gt;--whitelist&lt;/code&gt; o mediante el archivo de configuraci&amp;oacute;n (consulte &lt;a href=&quot;appendixes.configuration#appendixes.configuration.whitelisting-files&quot;&gt;la secci&amp;oacute;n llamada &quot;Archivos de lista blanca para cobertura de c&amp;oacute;digo&quot;&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="dd08a074839cd0e707325227ff3b7036784b670c" translate="yes" xml:space="preserve">
          <source>It is often helpful to check if a table contains a specific amount of rows. You can easily achieve this without additional glue code using the Connection API. Say we wanted to check that after insertion of a row into our guestbook we not only have the two initial entries that have accompanied us in all the previous examples, but a third one:</source>
          <target state="translated">Suele ser útil comprobar si una tabla contiene una cantidad específica de filas.Esto se puede lograr fácilmente sin necesidad de utilizar código de pegamento adicional mediante la API de conexión.Digamos que queremos comprobar que después de insertar una fila en nuestro libro de visitas no sólo tenemos las dos entradas iniciales que nos han acompañado en todos los ejemplos anteriores,sino una tercera:</target>
        </trans-unit>
        <trans-unit id="a0ba411c3c191416be02d15477cd0197e81935a0" translate="yes" xml:space="preserve">
          <source>It may be prudent to create a shell script to manage PHPUnit installation that verifies the GnuPG signature before running your test suite. For example:</source>
          <target state="translated">Puede ser prudente crear un script de shell para gestionar la instalación de PHPUnit que verifique la firma de GnuPG antes de ejecutar su paquete de pruebas.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="4382dafeb88d92e645f4cdd85b25e0a82f82d1b4" translate="yes" xml:space="preserve">
          <source>It processes all classes that are declared at the time a test starts, not only the test class itself. It only applies to static class properties, not static variables within functions.</source>
          <target state="translated">Procesa todas las clases que se declaran en el momento en que se inicia una prueba,no sólo la clase de prueba en sí.Sólo se aplica a las propiedades de las clases estáticas,no a las variables estáticas dentro de las funciones.</target>
        </trans-unit>
        <trans-unit id="18d66eebd5fbfaf6eadbc566cff4e9e38d18f776" translate="yes" xml:space="preserve">
          <source>Let us take a look at the agile documentation generated for a &lt;code&gt;BankAccount&lt;/code&gt; class:</source>
          <target state="translated">Echemos un vistazo a la documentaci&amp;oacute;n &amp;aacute;gil generada para una clase &lt;code&gt;BankAccount&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9269e498b8067da9bc3ff0b277d90c6a1647eb84" translate="yes" xml:space="preserve">
          <source>Let's take a look at the command-line test runner's options in the following code:</source>
          <target state="translated">Echemos un vistazo a las opciones del corredor de prueba de la línea de comando en el siguiente código:</target>
        </trans-unit>
        <trans-unit id="9263badbd240c1f1879c25bba8d7d26d297acb3e" translate="yes" xml:space="preserve">
          <source>Lets take a look at the test suite of the &lt;a href=&quot;http://github.com/sebastianbergmann/money/&quot;&gt;sebastianbergmann/money&lt;/a&gt; library. Looking at this project's directory structure, we see that the test case classes in the &lt;code&gt;tests&lt;/code&gt; directory mirror the package and class structure of the System Under Test (SUT) in the &lt;code&gt;src&lt;/code&gt; directory:</source>
          <target state="translated">Echemos un vistazo a la suite de pruebas de la biblioteca &lt;a href=&quot;http://github.com/sebastianbergmann/money/&quot;&gt;sebastianbergmann / money&lt;/a&gt; . Al observar la estructura de directorios de este proyecto, vemos que las clases de casos de prueba en el directorio de &lt;code&gt;tests&lt;/code&gt; reflejan el paquete y la estructura de clases del Sistema bajo prueba (SUT) en el directorio &lt;code&gt;src&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8f39e8b9b8efea94fecc83043ad120c1c32a555d" translate="yes" xml:space="preserve">
          <source>Licensed under the Creative Commons Attribution 3.0 Unported License.</source>
          <target state="translated">Licenciado bajo la licencia Creative Commons Attribution 3.0 Unported License.</target>
        </trans-unit>
        <trans-unit id="71e5533db97f794cd7929c06bdabeb78e26920ca" translate="yes" xml:space="preserve">
          <source>Limitation: Automatic verification of expectations</source>
          <target state="translated">Limitación:Verificación automática de las expectativas</target>
        </trans-unit>
        <trans-unit id="a023518cefcc455d090c645033757118928f81c3" translate="yes" xml:space="preserve">
          <source>Limitation: Methods named &quot;method&quot;</source>
          <target state="translated">Limitación:Los métodos llamados &quot;método&quot;</target>
        </trans-unit>
        <trans-unit id="960be94318775d8f6e5f185a13d88c42aa39a01f" translate="yes" xml:space="preserve">
          <source>Limitation: final, private, and static methods</source>
          <target state="translated">Limitación:métodos finales,privados y estáticos</target>
        </trans-unit>
        <trans-unit id="620ee66f3cb761f277d81f735fde1764b8fc1a38" translate="yes" xml:space="preserve">
          <source>Line Coverage</source>
          <target state="translated">Cobertura de la línea</target>
        </trans-unit>
        <trans-unit id="1b2689ec5483c6e1cd2bf126e0f927a72b911c8a" translate="yes" xml:space="preserve">
          <source>List available test groups.</source>
          <target state="translated">Enumere los grupos de prueba disponibles.</target>
        </trans-unit>
        <trans-unit id="57003616863fe634c645e342ee9080681e419c5f" translate="yes" xml:space="preserve">
          <source>Logging</source>
          <target state="translated">Logging</target>
        </trans-unit>
        <trans-unit id="109b4017ee11f0a03112a188ef1036525a53b900" translate="yes" xml:space="preserve">
          <source>Logical AND.</source>
          <target state="translated">Lógico Y.</target>
        </trans-unit>
        <trans-unit id="4438cc4a0ab4f5f373d93285cd0729e947339a6c" translate="yes" xml:space="preserve">
          <source>Logical NOT.</source>
          <target state="translated">Lógico NO.</target>
        </trans-unit>
        <trans-unit id="07dfdb18def1b141fb32dd8352fb998a138625d3" translate="yes" xml:space="preserve">
          <source>Logical OR.</source>
          <target state="translated">Otorgamiento lógico.</target>
        </trans-unit>
        <trans-unit id="19864bb51d5ab73176b5b4491f11be6e836bcdce" translate="yes" xml:space="preserve">
          <source>Logical XOR.</source>
          <target state="translated">XOR lógico.</target>
        </trans-unit>
        <trans-unit id="249fcdff9a41d923f454969935e006889e30cf2c" translate="yes" xml:space="preserve">
          <source>Make sure you have the PHP extension &lt;code&gt;pdo&lt;/code&gt; and database specific extensions such as &lt;code&gt;pdo_mysql&lt;/code&gt; installed. Otherwise the examples shown below will not work.</source>
          <target state="translated">Aseg&amp;uacute;rese de tener &lt;code&gt;pdo&lt;/code&gt; extensi&amp;oacute;n PHP pdo y extensiones espec&amp;iacute;ficas de la base de datos, como &lt;code&gt;pdo_mysql&lt;/code&gt; . De lo contrario, los ejemplos que se muestran a continuaci&amp;oacute;n no funcionar&amp;aacute;n.</target>
        </trans-unit>
        <trans-unit id="be344718d0d1ba60ff76beb79b17414a6e8fa614" translate="yes" xml:space="preserve">
          <source>Many beginner and intermediate unit testing examples in any programming language suggest that it is perfectly easy to test your application's logic with simple tests. For database-centric applications this is far away from the reality. Start using WordPress, TYPO3 or Symfony with Doctrine or Propel, for example, and you will easily experience considerable problems with PHPUnit: just because the database is so tightly coupled to these libraries.</source>
          <target state="translated">Muchos ejemplos de pruebas de unidades para principiantes e intermedios en cualquier lenguaje de programación sugieren que es perfectamente fácil probar la lógica de su aplicación con pruebas sencillas.Para las aplicaciones centradas en bases de datos esto está muy lejos de la realidad.Comience a usar WordPress,TYPO3 o Symfony con Doctrine o Propel,por ejemplo,y fácilmente experimentará problemas considerables con PHPUnit:sólo porque la base de datos está tan estrechamente acoplada a estas bibliotecas.</target>
        </trans-unit>
        <trans-unit id="d930f43e92f1db17bf6472556887a67461af11f1" translate="yes" xml:space="preserve">
          <source>Marks the current test as incomplete using &lt;code&gt;$message&lt;/code&gt; as an explanatory message.</source>
          <target state="translated">Marca la prueba actual como incompleta usando &lt;code&gt;$message&lt;/code&gt; como mensaje explicativo.</target>
        </trans-unit>
        <trans-unit id="23759901ddbc9da02d7e5172d246a36adb990ed4" translate="yes" xml:space="preserve">
          <source>Marks the current test as incomplete.</source>
          <target state="translated">Marca la prueba actual como incompleta.</target>
        </trans-unit>
        <trans-unit id="0834c2f1f0aac1f1716e292bcbc16a120c23ed6f" translate="yes" xml:space="preserve">
          <source>Marks the current test as skipped using &lt;code&gt;$message&lt;/code&gt; as an explanatory message.</source>
          <target state="translated">Marca la prueba actual como omitida usando &lt;code&gt;$message&lt;/code&gt; como mensaje explicativo.</target>
        </trans-unit>
        <trans-unit id="fdc3dac1a5688d504fafe6e63f4bebd84b6d2736" translate="yes" xml:space="preserve">
          <source>Marks the current test as skipped.</source>
          <target state="translated">Marca la prueba actual como salteada.</target>
        </trans-unit>
        <trans-unit id="836f70fd7d82393c2699b8755613486047b49b3c" translate="yes" xml:space="preserve">
          <source>Matcher</source>
          <target state="translated">Matcher</target>
        </trans-unit>
        <trans-unit id="19cd7d185cfd95a703e62d43597e9ae28e0646e5" translate="yes" xml:space="preserve">
          <source>Meaning</source>
          <target state="translated">Meaning</target>
        </trans-unit>
        <trans-unit id="88306943fea7e76f9cd57cae0ea6d8b32d2e8434" translate="yes" xml:space="preserve">
          <source>Method</source>
          <target state="translated">Method</target>
        </trans-unit>
        <trans-unit id="607b425901e9136d2ffa37e4cec98ea81601d312" translate="yes" xml:space="preserve">
          <source>Mock Objects</source>
          <target state="translated">Objetos de imitación</target>
        </trans-unit>
        <trans-unit id="d4fa210c46684ae2702c307452165549fb1bea55" translate="yes" xml:space="preserve">
          <source>Mocking Traits and Abstract Classes</source>
          <target state="translated">Rasgos burlones y clases abstractas</target>
        </trans-unit>
        <trans-unit id="4e5a47b3d7702fd44c158059d205df922e8abfd2" translate="yes" xml:space="preserve">
          <source>Mocking the Filesystem</source>
          <target state="translated">Burlarse del sistema de archivos</target>
        </trans-unit>
        <trans-unit id="1e242a25a18542f296703991379eeb2809fe5996" translate="yes" xml:space="preserve">
          <source>More complex assertions can be formulated using the &lt;code&gt;PHPUnit_Framework_Constraint&lt;/code&gt; classes. They can be evaluated using the &lt;code&gt;assertThat()&lt;/code&gt; method. &lt;a href=&quot;appendixes.assertions#appendixes.assertions.assertThat.example&quot;&gt;Example A.49&lt;/a&gt; shows how the &lt;code&gt;logicalNot()&lt;/code&gt; and &lt;code&gt;equalTo()&lt;/code&gt; constraints can be used to express the same assertion as &lt;code&gt;assertNotEquals()&lt;/code&gt;.</source>
          <target state="translated">Se pueden formular afirmaciones m&amp;aacute;s complejas utilizando las clases &lt;code&gt;PHPUnit_Framework_Constraint&lt;/code&gt; . Se pueden evaluar mediante el m&amp;eacute;todo &lt;code&gt;assertThat()&lt;/code&gt; . &lt;a href=&quot;appendixes.assertions#appendixes.assertions.assertThat.example&quot;&gt;En el ejemplo A.49 se&lt;/a&gt; muestra c&amp;oacute;mo se pueden usar las restricciones &lt;code&gt;logicalNot()&lt;/code&gt; y &lt;code&gt;equalTo()&lt;/code&gt; para expresar la misma aserci&amp;oacute;n que &lt;code&gt;assertNotEquals()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="54184964137f49b8ce205dde3d468495fdd1cd90" translate="yes" xml:space="preserve">
          <source>More setUp() than tearDown()</source>
          <target state="translated">Más setUp()que tearDown()</target>
        </trans-unit>
        <trans-unit id="5b7dd78b7622d3256924b8fa67884d9d6a364770" translate="yes" xml:space="preserve">
          <source>More specialized comparisons are used for specific argument types for &lt;code&gt;$expected&lt;/code&gt; and &lt;code&gt;$actual&lt;/code&gt;, see below.</source>
          <target state="translated">Se utilizan comparaciones m&amp;aacute;s especializadas para tipos de argumentos espec&amp;iacute;ficos para &lt;code&gt;$expected&lt;/code&gt; y &lt;code&gt;$actual&lt;/code&gt; , ver m&amp;aacute;s abajo.</target>
        </trans-unit>
        <trans-unit id="7e0b97669d11883c70ca1d6c831840b8d0c6db11" translate="yes" xml:space="preserve">
          <source>MySQL XML DataSet</source>
          <target state="translated">Conjunto de datos MySQL XML</target>
        </trans-unit>
        <trans-unit id="e5e493522134e6514878526f0a208fcabaaf676e" translate="yes" xml:space="preserve">
          <source>No, PDO is only required for the fixture clean- and set-up and for assertions. You can use whatever database abstraction you want inside your own code.</source>
          <target state="translated">No,el PDO sólo se requiere para la limpieza y el montaje de la instalación y para las afirmaciones.Puedes usar cualquier abstracción de la base de datos que quieras dentro de tu propio código.</target>
        </trans-unit>
        <trans-unit id="cc9a56db05a59cade262414e414bdb58ff701b90" translate="yes" xml:space="preserve">
          <source>No, PHPUnit requires all database objects to be available when the suite is started. The Database, tables, sequences, triggers and views have to be created before you run the test suite.</source>
          <target state="translated">No,la Unidad PHP requiere que todos los objetos de la base de datos estén disponibles cuando se inicie la suite.La base de datos,las tablas,las secuencias,los disparadores y las vistas tienen que ser creados antes de ejecutar el conjunto de pruebas.</target>
        </trans-unit>
        <trans-unit id="a2b90307b2c5b85bd86677d29a6c59a8c105547f" translate="yes" xml:space="preserve">
          <source>Not all tests can be run in every environment. Consider, for instance, a database abstraction layer that has several drivers for the different database systems it supports. The tests for the MySQL driver can of course only be run if a MySQL server is available.</source>
          <target state="translated">No todas las pruebas pueden realizarse en todos los entornos.Consideremos,por ejemplo,una capa de abstracción de base de datos que tiene varios controladores para los diferentes sistemas de base de datos que soporta.Por supuesto,las pruebas para el controlador de MySQL sólo pueden ejecutarse si hay un servidor MySQL disponible.</target>
        </trans-unit>
        <trans-unit id="6f18258ff587bb762420d05f4d4ccf0c2c9f2a78" translate="yes" xml:space="preserve">
          <source>Now we have received a public key for an entity known as &quot;Sebastian Bergmann &amp;lt;sb@sebastian-bergmann.de&amp;gt;&quot;. However, we have no way of verifying this key was created by the person known as Sebastian Bergmann. But, let's try to verify the release signature again.</source>
          <target state="translated">Ahora hemos recibido una clave p&amp;uacute;blica para una entidad conocida como &quot;Sebastian Bergmann &amp;lt;sb@sebastian-bergmann.de&amp;gt;&quot;. Sin embargo, no tenemos forma de verificar que esta clave fue creada por la persona conocida como Sebastian Bergmann. Pero intentemos verificar la firma de la versi&amp;oacute;n nuevamente.</target>
        </trans-unit>
        <trans-unit id="0e739b615539f89d64a9ebca10039c09a3635d5c" translate="yes" xml:space="preserve">
          <source>Now we have to write the &lt;em&gt;expectedBook.xml&lt;/em&gt; Flat XML file for this assertion:</source>
          <target state="translated">Ahora tenemos que escribir el archivo XML plano &lt;em&gt;esperadoBook.xml&lt;/em&gt; para esta afirmaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="934a05bfd7e02cb96be24c39e10595689188cb24" translate="yes" xml:space="preserve">
          <source>Objects of some classes (e.g., &lt;code&gt;PDO&lt;/code&gt;) cannot be serialized and the backup operation will break when such an object is stored e.g. in the &lt;code&gt;$GLOBALS&lt;/code&gt; array.</source>
          <target state="translated">Los objetos de algunas clases (por ejemplo, &lt;code&gt;PDO&lt;/code&gt; ) no se pueden serializar y la operaci&amp;oacute;n de copia de seguridad se interrumpir&amp;aacute; cuando dicho objeto se almacene, por ejemplo, en la matriz &lt;code&gt;$GLOBALS&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="977a2dd8b93738347b2ceac837b2b373064723a2" translate="yes" xml:space="preserve">
          <source>Once you get used to writing automated tests, you will likely discover more uses for tests. Here are some examples.</source>
          <target state="translated">Una vez que te acostumbres a escribir pruebas automatizadas,es probable que descubras más usos para las pruebas.Aquí tiene algunos ejemplos.</target>
        </trans-unit>
        <trans-unit id="94d0f9b6abbef8485d14875215a50c0a31c5c1b9" translate="yes" xml:space="preserve">
          <source>One of the goals of PHPUnit is that tests should be composable: we want to be able to run any number or combination of tests together, for instance all tests for the whole project, or the tests for all classes of a component that is part of the project, or just the tests for a single class.</source>
          <target state="translated">Uno de los objetivos de PHPUnit es que las pruebas sean componibles:queremos ser capaces de ejecutar cualquier número o combinación de pruebas juntas,por ejemplo,todas las pruebas para todo el proyecto,o las pruebas para todas las clases de un componente que es parte del proyecto,o sólo las pruebas para una sola clase.</target>
        </trans-unit>
        <trans-unit id="f6aa24334bfb11b6919d07c1533ad334a8eaa7cd" translate="yes" xml:space="preserve">
          <source>One of the most time-consuming parts of writing tests is writing the code to set the world up in a known state and then return it to its original state when the test is complete. This known state is called the &lt;em&gt;fixture&lt;/em&gt; of the test.</source>
          <target state="translated">Una de las partes m&amp;aacute;s laboriosas de escribir pruebas es escribir el c&amp;oacute;digo para configurar el mundo en un estado conocido y luego devolverlo a su estado original cuando se complete la prueba. Este estado conocido se denomina &lt;em&gt;accesorio&lt;/em&gt; de la prueba.</target>
        </trans-unit>
        <trans-unit id="3785473c2e417009fcc8adf2345e2c232c1b6106" translate="yes" xml:space="preserve">
          <source>Only mock objects generated within the scope of a test will be verified automatically by PHPUnit. Mock objects generated in data providers, for instance, or injected into the test using the &lt;code&gt;@depends&lt;/code&gt; annotation will not be verified automatically by PHPUnit.</source>
          <target state="translated">PHPUnit solo verificar&amp;aacute; autom&amp;aacute;ticamente los objetos simulados generados dentro del alcance de una prueba. Los objetos simulados generados en proveedores de datos, por ejemplo, o inyectados en la prueba usando la anotaci&amp;oacute;n &lt;code&gt;@depends&lt;/code&gt; no ser&amp;aacute;n verificados autom&amp;aacute;ticamente por PHPUnit.</target>
        </trans-unit>
        <trans-unit id="07d6453ac923f01ee84bea30b298d0c67564330e" translate="yes" xml:space="preserve">
          <source>Only runs tests from the specified group(s). A test can be tagged as belonging to a group using the &lt;code&gt;@group&lt;/code&gt; annotation.</source>
          <target state="translated">Solo ejecuta pruebas de los grupos especificados. Una prueba se puede etiquetar como perteneciente a un grupo mediante la anotaci&amp;oacute;n &lt;code&gt;@group&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="55778e6fd904e3673a84e3bfae8be1fb0687d70c" translate="yes" xml:space="preserve">
          <source>Only runs tests whose name matches the given regular expression pattern. If the pattern is not enclosed in delimiters, PHPUnit will enclose the pattern in &lt;code&gt;/&lt;/code&gt; delimiters.</source>
          <target state="translated">Solo ejecuta pruebas cuyo nombre coincide con el patr&amp;oacute;n de expresi&amp;oacute;n regular dado. Si el patr&amp;oacute;n no est&amp;aacute; encerrado en delimitadores, PHPUnit incluir&amp;aacute; el patr&amp;oacute;n en &lt;code&gt;/&lt;/code&gt; delimiters.</target>
        </trans-unit>
        <trans-unit id="63690d34b7f9e1463eabfc40418e8059caa98c67" translate="yes" xml:space="preserve">
          <source>Only runs the test suite whose name matches the given pattern.</source>
          <target state="translated">Sólo ejecuta el conjunto de pruebas cuyo nombre coincide con el patrón dado.</target>
        </trans-unit>
        <trans-unit id="7bcc398b4cfdc6466f7524bf87377284eec34f49" translate="yes" xml:space="preserve">
          <source>Only search for test files with specified suffix(es).</source>
          <target state="translated">Busque sólo los archivos de prueba con sufijo(s)especificado(s).</target>
        </trans-unit>
        <trans-unit id="0e2a157c1af6da51b45ec5dae657d1b3806d67fc" translate="yes" xml:space="preserve">
          <source>Opcode Coverage</source>
          <target state="translated">Cobertura de Opcode</target>
        </trans-unit>
        <trans-unit id="b48bd1fbcc22a896d98ad77f3a741b6b8b452f61" translate="yes" xml:space="preserve">
          <source>Open a command line (e.g., press &lt;strong&gt;Windows&lt;/strong&gt;+&lt;strong&gt;R&lt;/strong&gt; &amp;raquo; type &lt;strong&gt;&lt;code&gt;cmd&lt;/code&gt;&lt;/strong&gt; &amp;raquo; &lt;strong&gt;ENTER&lt;/strong&gt;)</source>
          <target state="translated">Abra una l&amp;iacute;nea de comando (por ejemplo, presione &lt;strong&gt;Windows&lt;/strong&gt; + &lt;strong&gt;R&lt;/strong&gt; &amp;raquo;escriba &lt;strong&gt; &lt;code&gt;cmd&lt;/code&gt; &lt;/strong&gt; &amp;raquo; &lt;strong&gt;ENTER&lt;/strong&gt; )</target>
        </trans-unit>
        <trans-unit id="3fa08c21e1f16fca09ef1167d8bf4c93c5637fe8" translate="yes" xml:space="preserve">
          <source>Open a new command line and confirm that you can execute PHPUnit from any path:</source>
          <target state="translated">Abre una nueva línea de comandos y confirma que puedes ejecutar PHPUnit desde cualquier ruta:</target>
        </trans-unit>
        <trans-unit id="0b49469465e885468461a55e87c1951d54b869ed" translate="yes" xml:space="preserve">
          <source>Optional packages</source>
          <target state="translated">Paquetes opcionales</target>
        </trans-unit>
        <trans-unit id="93eedf8db419535b067dc63bc13e46b7f9079bb7" translate="yes" xml:space="preserve">
          <source>Optionally print to &lt;code&gt;STDERR&lt;/code&gt; instead of &lt;code&gt;STDOUT&lt;/code&gt;.</source>
          <target state="translated">Opcionalmente, imprima en &lt;code&gt;STDERR&lt;/code&gt; en lugar de &lt;code&gt;STDOUT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e6a354dd4daa36d8bed8f1f0b56e3ea067509163" translate="yes" xml:space="preserve">
          <source>Optionally, all whitelisted files can be added to the code coverage report by setting &lt;code&gt;addUncoveredFilesFromWhitelist=&quot;true&quot;&lt;/code&gt; in your PHPUnit configuration (see &lt;a href=&quot;appendixes.configuration#appendixes.configuration.whitelisting-files&quot;&gt;the section called &amp;ldquo;Whitelisting Files for Code Coverage&amp;rdquo;&lt;/a&gt;). This allows the inclusion of files that are not tested yet at all. If you want to get information about which lines of such an uncovered file are executable, for instance, you also need to set &lt;code&gt;processUncoveredFilesFromWhitelist=&quot;true&quot;&lt;/code&gt; in your PHPUnit configuration (see &lt;a href=&quot;appendixes.configuration#appendixes.configuration.whitelisting-files&quot;&gt;the section called &amp;ldquo;Whitelisting Files for Code Coverage&amp;rdquo;&lt;/a&gt;).</source>
          <target state="translated">Opcionalmente, todos los archivos de la lista blanca se pueden agregar al informe de cobertura de c&amp;oacute;digo configurando &lt;code&gt;addUncoveredFilesFromWhitelist=&quot;true&quot;&lt;/code&gt; en su configuraci&amp;oacute;n de PHPUnit (consulte &lt;a href=&quot;appendixes.configuration#appendixes.configuration.whitelisting-files&quot;&gt;la secci&amp;oacute;n llamada &quot;Archivos de lista blanca para cobertura de c&amp;oacute;digo&quot;&lt;/a&gt; ). Esto permite la inclusi&amp;oacute;n de archivos que a&amp;uacute;n no se han probado en absoluto. Si desea obtener informaci&amp;oacute;n sobre qu&amp;eacute; l&amp;iacute;neas de un archivo descubierto de este tipo son ejecutables, por ejemplo, tambi&amp;eacute;n debe establecer &lt;code&gt;processUncoveredFilesFromWhitelist=&quot;true&quot;&lt;/code&gt; en su configuraci&amp;oacute;n de PHPUnit (consulte &lt;a href=&quot;appendixes.configuration#appendixes.configuration.whitelisting-files&quot;&gt;la secci&amp;oacute;n llamada &quot;Archivos de lista blanca para cobertura de c&amp;oacute;digo&quot;&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="aedce62afc39c753c6d4febed491f439e356aa0d" translate="yes" xml:space="preserve">
          <source>Organizing Tests</source>
          <target state="translated">Organizar las pruebas</target>
        </trans-unit>
        <trans-unit id="11fb3c6f3266acb304814fc7de555028d0cd4e0b" translate="yes" xml:space="preserve">
          <source>Other Uses for Tests</source>
          <target state="translated">Otros usos de las pruebas</target>
        </trans-unit>
        <trans-unit id="4feb618a89e34dd77a913063ec353aa76de81daa" translate="yes" xml:space="preserve">
          <source>Output During Test Execution</source>
          <target state="translated">Salida durante la ejecución de la prueba</target>
        </trans-unit>
        <trans-unit id="e8b0d7d3a8310982775ef561d75edeab3c4e3ebe" translate="yes" xml:space="preserve">
          <source>Output debug information such as the name of a test when its execution starts.</source>
          <target state="translated">Información de depuración de salida como el nombre de una prueba cuando se inicia su ejecución.</target>
        </trans-unit>
        <trans-unit id="ac22e97935e58a934e761573bd1553610da608d5" translate="yes" xml:space="preserve">
          <source>Output more verbose information, for instance the names of tests that were incomplete or have been skipped.</source>
          <target state="translated">Emitir información más verborreica,por ejemplo,los nombres de las pruebas que estaban incompletas o que se han omitido.</target>
        </trans-unit>
        <trans-unit id="acfed08e09bba7e326e398b851412548479c3579" translate="yes" xml:space="preserve">
          <source>Overall, integrated unit testing makes the cost and risk of any individual change smaller. It will allow the project to make [...] major architectural improvements [...] quickly and confidently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4717dd8f5dcc1b50f1331d0b6f8035aa6e3baa8f" translate="yes" xml:space="preserve">
          <source>PHP Archive (PHAR)</source>
          <target state="translated">Archivo PHP (PHAR)</target>
        </trans-unit>
        <trans-unit id="764faf4bf6b2119b1d6cb008e81ff65fff16698d" translate="yes" xml:space="preserve">
          <source>PHP Arrays can obviously handle &lt;code&gt;NULL&lt;/code&gt; values.</source>
          <target state="translated">PHP matrices, obviamente, puede manejar &lt;code&gt;NULL&lt;/code&gt; valores.</target>
        </trans-unit>
        <trans-unit id="e9cd1c53eff46a933eb5f52645a29cabbaeab710" translate="yes" xml:space="preserve">
          <source>PHP's &lt;code&gt;error_reporting&lt;/code&gt; runtime configuration can limit which errors PHPUnit will convert to exceptions. If you are having issues with this feature, be sure PHP is not configured to suppress the type of errors you're testing.</source>
          <target state="translated">La configuraci&amp;oacute;n en tiempo de ejecuci&amp;oacute;n de &lt;code&gt;error_reporting&lt;/code&gt; de PHP puede limitar qu&amp;eacute; errores PHPUnit convertir&amp;aacute; en excepciones. Si tiene problemas con esta funci&amp;oacute;n, aseg&amp;uacute;rese de que PHP no est&amp;eacute; configurado para suprimir el tipo de errores que est&amp;aacute; probando.</target>
        </trans-unit>
        <trans-unit id="4d5496118db6229e0d92fed1f34901c2df580a1a" translate="yes" xml:space="preserve">
          <source>PHPUnit</source>
          <target state="translated">PHPUnit</target>
        </trans-unit>
        <trans-unit id="47af5b3ac5246a1d0d93deff7752d5a3978fd7d8" translate="yes" xml:space="preserve">
          <source>PHPUnit 6.5 requires PHP 7; using the latest version of PHP is highly recommended.</source>
          <target state="translated">La unidad PHP 6.5 requiere PHP 7;es muy recomendable usar la última versión de PHP.</target>
        </trans-unit>
        <trans-unit id="992bb499e1d5a191503e3acc232859347d5cd1a6" translate="yes" xml:space="preserve">
          <source>PHPUnit also requires the &lt;a href=&quot;http://php.net/manual/en/pcre.installation.php&quot;&gt;pcre&lt;/a&gt;, &lt;a href=&quot;http://php.net/manual/en/reflection.installation.php&quot;&gt;reflection&lt;/a&gt;, and &lt;a href=&quot;http://php.net/manual/en/spl.installation.php&quot;&gt;spl&lt;/a&gt; extensions. These standard extensions are enabled by default and cannot be disabled without patching PHP's build system and/or C sources.</source>
          <target state="translated">PHPUnit tambi&amp;eacute;n requiere las extensiones &lt;a href=&quot;http://php.net/manual/en/pcre.installation.php&quot;&gt;pcre&lt;/a&gt; , &lt;a href=&quot;http://php.net/manual/en/reflection.installation.php&quot;&gt;reflexi&amp;oacute;n&lt;/a&gt; y &lt;a href=&quot;http://php.net/manual/en/spl.installation.php&quot;&gt;spl&lt;/a&gt; . Estas extensiones est&amp;aacute;ndar est&amp;aacute;n habilitadas de forma predeterminada y no se pueden deshabilitar sin parchear el sistema de compilaci&amp;oacute;n de PHP y / o las fuentes C.</target>
        </trans-unit>
        <trans-unit id="49f9cc016f91ee80263973d6726c7b6dea9f76b5" translate="yes" xml:space="preserve">
          <source>PHPUnit assumes that the database schema with all its tables, triggers, sequences and views is created before a test is run. This means you as developer have to make sure that the database is correctly setup before running the suite.</source>
          <target state="translated">PHPUnit asume que el esquema de la base de datos con todas sus tablas,disparadores,secuencias y vistas se crea antes de ejecutar una prueba.Esto significa que usted como desarrollador tiene que asegurarse de que la base de datos está correctamente configurada antes de ejecutar el conjunto.</target>
        </trans-unit>
        <trans-unit id="8594c49b19d010ef897e2f081751f61f599cc069" translate="yes" xml:space="preserve">
          <source>PHPUnit can be extended in various ways to make the writing of tests easier and customize the feedback you get from running tests. Here are common starting points to extend PHPUnit.</source>
          <target state="translated">La unidad PHP puede ser extendida de varias maneras para hacer más fácil la escritura de los tests y personalizar la retroalimentación que se obtiene de la ejecución de los tests.Aquí hay puntos de partida comunes para extender la Unidad PHP.</target>
        </trans-unit>
        <trans-unit id="8fc11ccb5655256bf345f33ea0ad2cfd1e06c9ba" translate="yes" xml:space="preserve">
          <source>PHPUnit can be strict about output during tests. This check can be enabled by using the &lt;code&gt;--disallow-test-output&lt;/code&gt; option on the commandline or by setting &lt;code&gt;beStrictAboutOutputDuringTests=&quot;true&quot;&lt;/code&gt; in PHPUnit's XML configuration file.</source>
          <target state="translated">PHPUnit puede ser estricto sobre la salida durante las pruebas. Esta verificaci&amp;oacute;n se puede habilitar usando la &lt;code&gt;--disallow-test-output&lt;/code&gt; en la l&amp;iacute;nea de comandos o configurando &lt;code&gt;beStrictAboutOutputDuringTests=&quot;true&quot;&lt;/code&gt; en el archivo de configuraci&amp;oacute;n XML de PHPUnit.</target>
        </trans-unit>
        <trans-unit id="efd9237e6e3e36412a2ebcb13fbf8ed0b8137bb3" translate="yes" xml:space="preserve">
          <source>PHPUnit can be strict about tests that do not test anything. This check can be enabled by using the &lt;code&gt;--report-useless-tests&lt;/code&gt; option on the commandline or by setting &lt;code&gt;beStrictAboutTestsThatDoNotTestAnything=&quot;true&quot;&lt;/code&gt; in PHPUnit's XML configuration file.</source>
          <target state="translated">PHPUnit puede ser estricto con las pruebas que no prueban nada. Esta verificaci&amp;oacute;n se puede habilitar usando la &lt;code&gt;--report-useless-tests&lt;/code&gt; en la l&amp;iacute;nea de comandos o configurando &lt;code&gt;beStrictAboutTestsThatDoNotTestAnything=&quot;true&quot;&lt;/code&gt; en el archivo de configuraci&amp;oacute;n XML de PHPUnit.</target>
        </trans-unit>
        <trans-unit id="9fda123a31a241b7f985e26c0537929b335f0812" translate="yes" xml:space="preserve">
          <source>PHPUnit can be strict about tests that manipulate global state. This check can be enabled by using the &lt;code&gt;--strict-global-state&lt;/code&gt; option on the commandline or by setting &lt;code&gt;beStrictAboutChangesToGlobalState=&quot;true&quot;&lt;/code&gt; in PHPUnit's XML configuration file.</source>
          <target state="translated">PHPUnit puede ser estricto con las pruebas que manipulan el estado global. Esta verificaci&amp;oacute;n se puede habilitar usando la &lt;code&gt;--strict-global-state&lt;/code&gt; en la l&amp;iacute;nea de comandos o configurando &lt;code&gt;beStrictAboutChangesToGlobalState=&quot;true&quot;&lt;/code&gt; en el archivo de configuraci&amp;oacute;n XML de PHPUnit.</target>
        </trans-unit>
        <trans-unit id="c2fdb7d9e3a7db699728f83d0afcce3d4c3b9254" translate="yes" xml:space="preserve">
          <source>PHPUnit can be strict about unintentionally covered code. This check can be enabled by using the &lt;code&gt;--strict-coverage&lt;/code&gt; option on the commandline or by setting &lt;code&gt;checkForUnintentionallyCoveredCode=&quot;true&quot;&lt;/code&gt; in PHPUnit's XML configuration file.</source>
          <target state="translated">PHPUnit puede ser estricto con el c&amp;oacute;digo cubierto de forma no intencionada. Esta verificaci&amp;oacute;n se puede habilitar usando la opci&amp;oacute;n &lt;code&gt;--strict-coverage&lt;/code&gt; en la l&amp;iacute;nea de comandos o configurando &lt;code&gt;checkForUnintentionallyCoveredCode=&quot;true&quot;&lt;/code&gt; en el archivo de configuraci&amp;oacute;n XML de PHPUnit.</target>
        </trans-unit>
        <trans-unit id="4b19978e96fe381e362a6d6086a674d932b1b9aa" translate="yes" xml:space="preserve">
          <source>PHPUnit can generate an HTML-based code coverage report as well as XML-based logfiles with code coverage information in various formats (Clover, Crap4J, PHPUnit). Code coverage information can also be reported as text (and printed to STDOUT) and exported as PHP code for further processing.</source>
          <target state="translated">La Unidad PHP puede generar un informe de cobertura de código basado en HTML,así como archivos de registro basados en XML con información de cobertura de código en varios formatos (Clover,Crap4J,PHPUnit).La información sobre la cobertura de los códigos también puede ser reportada como texto (e impresa en STDOUT)y exportada como código PHP para su posterior procesamiento.</target>
        </trans-unit>
        <trans-unit id="b60ac4b3e6abda0fb0b33ae8b62675bbcfba6d53" translate="yes" xml:space="preserve">
          <source>PHPUnit can perform the additional checks documented below while it executes the tests.</source>
          <target state="translated">La Unidad PHP puede realizar las comprobaciones adicionales documentadas a continuación mientras ejecuta las pruebas.</target>
        </trans-unit>
        <trans-unit id="ecb8675789febf27cbd002a388bcb0d4b15c7e2f" translate="yes" xml:space="preserve">
          <source>PHPUnit can produce several types of logfiles.</source>
          <target state="translated">La Unidad PHP puede producir varios tipos de archivos de registro.</target>
        </trans-unit>
        <trans-unit id="13d7aa477a15e4b4b96b7e12126c6a1df41d9932" translate="yes" xml:space="preserve">
          <source>PHPUnit distinguishes between &lt;em&gt;failures&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt;. A failure is a violated PHPUnit assertion such as a failing &lt;code&gt;assertEquals()&lt;/code&gt; call. An error is an unexpected exception or a PHP error. Sometimes this distinction proves useful since errors tend to be easier to fix than failures. If you have a big list of problems, it is best to tackle the errors first and see if you have any failures left when they are all fixed.</source>
          <target state="translated">PHPUnit distingue entre &lt;em&gt;fallas&lt;/em&gt; y &lt;em&gt;errores&lt;/em&gt; . Una falla es una aserci&amp;oacute;n de PHPUnit violada, como una llamada de &lt;code&gt;assertEquals()&lt;/code&gt; falla . Un error es una excepci&amp;oacute;n inesperada o un error de PHP. A veces, esta distinci&amp;oacute;n resulta &amp;uacute;til, ya que los errores tienden a ser m&amp;aacute;s f&amp;aacute;ciles de corregir que las fallas. Si tiene una gran lista de problemas, es mejor abordar los errores primero y ver si le quedan fallas cuando est&amp;eacute;n todas solucionadas.</target>
        </trans-unit>
        <trans-unit id="ad7812a3d505b57601956afc9b0cad78cc287161" translate="yes" xml:space="preserve">
          <source>PHPUnit has built-in support for using Prophecy to create test doubles. &lt;a href=&quot;test-doubles#test-doubles.prophecy.examples.SubjectTest.php&quot;&gt;Example 9.17&lt;/a&gt; shows how the same test shown in &lt;a href=&quot;test-doubles#test-doubles.mock-objects.examples.SubjectTest.php&quot;&gt;Example 9.11&lt;/a&gt; can be expressed using Prophecy's philosophy of prophecies and revelations:</source>
          <target state="translated">PHPUnit tiene soporte incorporado para usar Prophecy para crear dobles de prueba. &lt;a href=&quot;test-doubles#test-doubles.prophecy.examples.SubjectTest.php&quot;&gt;El ejemplo 9.17&lt;/a&gt; muestra c&amp;oacute;mo se puede expresar la misma prueba que se muestra en el &lt;a href=&quot;test-doubles#test-doubles.mock-objects.examples.SubjectTest.php&quot;&gt;ejemplo 9.11&lt;/a&gt; usando la filosof&amp;iacute;a de profec&amp;iacute;as y revelaciones de Prophecy:</target>
        </trans-unit>
        <trans-unit id="3f9bb1f8cfbaa25bdfaaa7032eb1276fe1623ca4" translate="yes" xml:space="preserve">
          <source>PHPUnit requires the &lt;a href=&quot;http://php.net/manual/en/dom.setup.php&quot;&gt;dom&lt;/a&gt; and &lt;a href=&quot;http://php.net/manual/en/json.installation.php&quot;&gt;json&lt;/a&gt; extensions, which are normally enabled by default.</source>
          <target state="translated">PHPUnit requiere las extensiones &lt;a href=&quot;http://php.net/manual/en/dom.setup.php&quot;&gt;dom&lt;/a&gt; y &lt;a href=&quot;http://php.net/manual/en/json.installation.php&quot;&gt;json&lt;/a&gt; , que normalmente est&amp;aacute;n habilitadas de forma predeterminada.</target>
        </trans-unit>
        <trans-unit id="5e4843be44169e2be99b8274cd80bb04fade4208" translate="yes" xml:space="preserve">
          <source>PHPUnit ships with one concrete test decorator: &lt;code&gt;PHPUnit_Extensions_RepeatedTest&lt;/code&gt;. It is used to run a test repeatedly and only count it as a success if all iterations are successful.</source>
          <target state="translated">PHPUnit se env&amp;iacute;a con un decorador de pruebas concreto: &lt;code&gt;PHPUnit_Extensions_RepeatedTest&lt;/code&gt; . Se utiliza para ejecutar una prueba repetidamente y solo se considera exitosa si todas las iteraciones son exitosas.</target>
        </trans-unit>
        <trans-unit id="d73279acefc705840d31280dc94ebfe8b9021b58" translate="yes" xml:space="preserve">
          <source>PHPUnit supports different ways of organizing tests and composing them into a test suite. This chapter shows the most commonly used approaches.</source>
          <target state="translated">PHPUnit soporta diferentes formas de organizar las pruebas y componerlas en un conjunto de pruebas.Este capítulo muestra los enfoques más utilizados.</target>
        </trans-unit>
        <trans-unit id="e66b75ac2c64c2bd5a57fa295a45b239cadd72f6" translate="yes" xml:space="preserve">
          <source>PHPUnit supports sharing the setup code. Before a test method is run, a template method called &lt;code&gt;setUp()&lt;/code&gt; is invoked. &lt;code&gt;setUp()&lt;/code&gt; is where you create the objects against which you will test. Once the test method has finished running, whether it succeeded or failed, another template method called &lt;code&gt;tearDown()&lt;/code&gt; is invoked. &lt;code&gt;tearDown()&lt;/code&gt; is where you clean up the objects against which you tested.</source>
          <target state="translated">PHPUnit admite compartir el c&amp;oacute;digo de configuraci&amp;oacute;n. Antes de ejecutar un m&amp;eacute;todo de &lt;code&gt;setUp()&lt;/code&gt; se invoca un m&amp;eacute;todo de plantilla llamado setUp () . &lt;code&gt;setUp()&lt;/code&gt; es donde crea los objetos con los que probar&amp;aacute;. Una vez que el m&amp;eacute;todo de prueba ha terminado de ejecutarse, ya sea que haya tenido &amp;eacute;xito o no, se invoca otro m&amp;eacute;todo de plantilla llamado &lt;code&gt;tearDown()&lt;/code&gt; . &lt;code&gt;tearDown()&lt;/code&gt; es donde limpia los objetos contra los que ha probado.</target>
        </trans-unit>
        <trans-unit id="d9d368e9a2646997d15f98c01eafec9716710e0d" translate="yes" xml:space="preserve">
          <source>PHPUnit supports the declaration of explicit dependencies between test methods. Such dependencies do not define the order in which the test methods are to be executed but they allow the returning of an instance of the test fixture by a producer and passing it to the dependent consumers.</source>
          <target state="translated">La Unidad PHP soporta la declaración de dependencias explícitas entre los métodos de prueba.Tales dependencias no definen el orden en el que los métodos de prueba deben ser ejecutados,pero permiten la devolución de una instancia del aparato de prueba por parte de un productor y pasarla a los consumidores dependientes.</target>
        </trans-unit>
        <trans-unit id="7036b5999c37aa3c4dcf7df35638cd63a316ba4c" translate="yes" xml:space="preserve">
          <source>PHPUnit supports the declaration of explicit dependencies between test methods. Such dependencies do not define the order in which the test methods are to be executed but they allow the returning of an instance of the test fixture by a producer and passing it to the dependent consumers. &lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.examples.StackTest2.php&quot;&gt;Example 2.2&lt;/a&gt; shows how to use the &lt;code&gt;@depends&lt;/code&gt; annotation to express dependencies between test methods.</source>
          <target state="translated">PHPUnit admite la declaraci&amp;oacute;n de dependencias expl&amp;iacute;citas entre m&amp;eacute;todos de prueba. Estas dependencias no definen el orden en el que se ejecutar&amp;aacute;n los m&amp;eacute;todos de prueba, pero permiten que un productor devuelva una instancia del dispositivo de prueba y la pase a los consumidores dependientes. &lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.examples.StackTest2.php&quot;&gt;El ejemplo 2.2&lt;/a&gt; muestra c&amp;oacute;mo usar la anotaci&amp;oacute;n &lt;code&gt;@depends&lt;/code&gt; para expresar dependencias entre m&amp;eacute;todos de prueba.</target>
        </trans-unit>
        <trans-unit id="30be616e52c1cae88130b3407f9ca3c5b010ecbf" translate="yes" xml:space="preserve">
          <source>PHPUnit will then iterate over all the fixture rows specified and insert them into their respective tables.</source>
          <target state="translated">PHPUnit entonces iterará sobre todas las filas de los aparatos especificados y las insertará en sus respectivas tablas.</target>
        </trans-unit>
        <trans-unit id="ccaa641eb92b86295c258151a89945da47f94912" translate="yes" xml:space="preserve">
          <source>PHPUnit's TestDox functionality looks at a test class and all the test method names and converts them from camel case PHP names to sentences: &lt;code&gt;testBalanceIsInitiallyZero()&lt;/code&gt; becomes &quot;Balance is initially zero&quot;. If there are several test methods whose names only differ in a suffix of one or more digits, such as &lt;code&gt;testBalanceCannotBecomeNegative()&lt;/code&gt; and &lt;code&gt;testBalanceCannotBecomeNegative2()&lt;/code&gt;, the sentence &quot;Balance cannot become negative&quot; will appear only once, assuming that all of these tests succeed.</source>
          <target state="translated">La funcionalidad TestDox de PHPUnit examina una clase de prueba y todos los nombres de m&amp;eacute;todos de prueba y los convierte de nombres PHP en may&amp;uacute;sculas y min&amp;uacute;sculas a oraciones: &lt;code&gt;testBalanceIsInitiallyZero()&lt;/code&gt; convierte en &quot;El equilibrio es inicialmente cero&quot;. Si hay varios m&amp;eacute;todos de prueba cuyos nombres solo difieren en un sufijo de uno o m&amp;aacute;s d&amp;iacute;gitos, como &lt;code&gt;testBalanceCannotBecomeNegative()&lt;/code&gt; y &lt;code&gt;testBalanceCannotBecomeNegative2()&lt;/code&gt; , la oraci&amp;oacute;n &quot;El saldo no puede volverse negativo&quot; aparecer&amp;aacute; solo una vez, suponiendo que todas estas pruebas tengan &amp;eacute;xito.</target>
        </trans-unit>
        <trans-unit id="b4b3896838639f9ea4c1a9e66ed41e43020e6522" translate="yes" xml:space="preserve">
          <source>PHPUnit's XML configuration file (&lt;a href=&quot;appendixes.configuration&quot;&gt;Appendix C&lt;/a&gt;) can also be used to compose a test suite. &lt;a href=&quot;organizing-tests#organizing-tests.xml-configuration.examples.phpunit.xml&quot;&gt;Example 5.1&lt;/a&gt; shows a minimal &lt;code&gt;phpunit.xml&lt;/code&gt; file that will add all &lt;code&gt;*Test&lt;/code&gt; classes that are found in &lt;code&gt;*Test.php&lt;/code&gt; files when the &lt;code&gt;tests&lt;/code&gt; directory is recursively traversed.</source>
          <target state="translated">El archivo de configuraci&amp;oacute;n XML de PHPUnit ( &lt;a href=&quot;appendixes.configuration&quot;&gt;Ap&amp;eacute;ndice C&lt;/a&gt; ) tambi&amp;eacute;n se puede utilizar para componer un conjunto de pruebas. &lt;a href=&quot;organizing-tests#organizing-tests.xml-configuration.examples.phpunit.xml&quot;&gt;El ejemplo 5.1&lt;/a&gt; muestra un archivo &lt;code&gt;phpunit.xml&lt;/code&gt; m&amp;iacute;nimo que agregar&amp;aacute; todas las clases &lt;code&gt;*Test&lt;/code&gt; que se encuentran en los archivos &lt;code&gt;*Test.php&lt;/code&gt; cuando el directorio &lt;code&gt;tests&lt;/code&gt; se recorre de forma recursiva.</target>
        </trans-unit>
        <trans-unit id="642242ac6fa7671cd1fd676ad61a21f76365acc5" translate="yes" xml:space="preserve">
          <source>PHPUnit's assertions are implemented in &lt;code&gt;PHPUnit\Framework\Assert&lt;/code&gt;. &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt; inherits from &lt;code&gt;PHPUnit\Framework\Assert&lt;/code&gt;.</source>
          <target state="translated">Las afirmaciones de PHPUnit se implementan en &lt;code&gt;PHPUnit\Framework\Assert&lt;/code&gt; . &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt; hereda de &lt;code&gt;PHPUnit\Framework\Assert&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="10c8b08404629e3bfc3eaef683dacdad13b23def" translate="yes" xml:space="preserve">
          <source>PHP_Invoker</source>
          <target state="translated">PHP_Invoker</target>
        </trans-unit>
        <trans-unit id="48c34c1c4e7c8a3b5308b03440edb97d29e6ea7c" translate="yes" xml:space="preserve">
          <source>Path Coverage</source>
          <target state="translated">Cobertura de la ruta</target>
        </trans-unit>
        <trans-unit id="09c2eb731ef7ecae18e3b833d644119ba59d97d0" translate="yes" xml:space="preserve">
          <source>Please note that &lt;code&gt;final&lt;/code&gt;, &lt;code&gt;private&lt;/code&gt; and &lt;code&gt;static&lt;/code&gt; methods cannot be stubbed or mocked. They are ignored by PHPUnit's test double functionality and retain their original behavior.</source>
          <target state="translated">Tenga en cuenta que &lt;code&gt;static&lt;/code&gt; m&amp;eacute;todos &lt;code&gt;final&lt;/code&gt; es , &lt;code&gt;private&lt;/code&gt; y est&amp;aacute;ticos no se pueden copiar ni burlar. Son ignorados por la doble funcionalidad de prueba de PHPUnit y conservan su comportamiento original.</target>
        </trans-unit>
        <trans-unit id="90cce8276942c167a0ba507e23418aab2d6e7152" translate="yes" xml:space="preserve">
          <source>Please note that as of 4.8, options can be put after the argument(s).</source>
          <target state="translated">Tengan en cuenta que a partir del 4.8,las opciones pueden ponerse después de los argumentos.</target>
        </trans-unit>
        <trans-unit id="2161be476a34b4fa1c186502eb712160d2e21020" translate="yes" xml:space="preserve">
          <source>Please note that the loading of sourcecode files that is performed when &lt;code&gt;processUncoveredFilesFromWhitelist=&quot;true&quot;&lt;/code&gt; is set can cause problems when a sourcecode file contains code outside the scope of a class or function, for instance.</source>
          <target state="translated">Tenga en cuenta que la carga de archivos de c&amp;oacute;digo fuente que se realiza cuando se establece &lt;code&gt;processUncoveredFilesFromWhitelist=&quot;true&quot;&lt;/code&gt; puede causar problemas cuando un archivo de c&amp;oacute;digo fuente contiene c&amp;oacute;digo fuera del alcance de una clase o funci&amp;oacute;n, por ejemplo.</target>
        </trans-unit>
        <trans-unit id="efd2fb61a56474b542ff9e4dd9ae121d97995936" translate="yes" xml:space="preserve">
          <source>Please note that this functionality is only available when the tokenizer and Xdebug extensions are installed.</source>
          <target state="translated">Por favor,ten en cuenta que esta funcionalidad sólo está disponible cuando se instalan las extensiones tokenizer y Xdebug.</target>
        </trans-unit>
        <trans-unit id="f2756409bf8359021e00553a9df70e7dfc844e3c" translate="yes" xml:space="preserve">
          <source>Please read &quot;&lt;a href=&quot;http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html&quot;&gt;What Every Computer Scientist Should Know About Floating-Point Arithmetic&lt;/a&gt;&quot; to understand why &lt;code&gt;$delta&lt;/code&gt; is neccessary.</source>
          <target state="translated">Lea &quot; &lt;a href=&quot;http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html&quot;&gt;Lo que todo inform&amp;aacute;tico debe saber acerca de la aritm&amp;eacute;tica de punto flotante&lt;/a&gt; &quot; para comprender por qu&amp;eacute; es necesario &lt;code&gt;$delta&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6658d27b4ed3038a0b084c0d666cea8e96205eaa" translate="yes" xml:space="preserve">
          <source>Please refer to &lt;a href=&quot;textui&quot;&gt;Chapter 3&lt;/a&gt; for a list of commandline switches that control code coverage functionality as well as &lt;a href=&quot;appendixes.configuration#appendixes.configuration.logging&quot;&gt;the section called &amp;ldquo;Logging&amp;rdquo;&lt;/a&gt; for the relevant configuration settings.</source>
          <target state="translated">Consulte el &lt;a href=&quot;textui&quot;&gt;Cap&amp;iacute;tulo 3&lt;/a&gt; para obtener una lista de los conmutadores de la l&amp;iacute;nea de comandos que controlan la funcionalidad de cobertura del c&amp;oacute;digo, as&amp;iacute; como &lt;a href=&quot;appendixes.configuration#appendixes.configuration.logging&quot;&gt;la secci&amp;oacute;n denominada &quot;Registro&quot;&lt;/a&gt; para conocer los ajustes de configuraci&amp;oacute;n relevantes.</target>
        </trans-unit>
        <trans-unit id="4828f48560fa76f63e10dc490953ebeab6ac6ea4" translate="yes" xml:space="preserve">
          <source>Please refer to the &lt;a href=&quot;https://github.com/phpspec/prophecy#how-to-use-it&quot;&gt;documentation&lt;/a&gt; for Prophecy for further details on how to create, configure, and use stubs, spies, and mocks using this alternative test double framework.</source>
          <target state="translated">Consulte la &lt;a href=&quot;https://github.com/phpspec/prophecy#how-to-use-it&quot;&gt;documentaci&amp;oacute;n&lt;/a&gt; de Prophecy para obtener m&amp;aacute;s detalles sobre c&amp;oacute;mo crear, configurar y usar stubs, esp&amp;iacute;as y simulacros utilizando este marco de prueba doble alternativo.</target>
        </trans-unit>
        <trans-unit id="263105526b2fba43b9e8d5b96765a97bb30eea9a" translate="yes" xml:space="preserve">
          <source>Possible Values</source>
          <target state="translated">Valores posibles</target>
        </trans-unit>
        <trans-unit id="3be7ddab7fc072c083b8c17fdd9d76611bec0037" translate="yes" xml:space="preserve">
          <source>Prepend PHP's &lt;code&gt;include_path&lt;/code&gt; with given path(s).</source>
          <target state="translated">Anteponga el &lt;code&gt;include_path&lt;/code&gt; de PHP con las rutas dadas.</target>
        </trans-unit>
        <trans-unit id="150192029460dbce4ee668d8d30fa47c25d3420d" translate="yes" xml:space="preserve">
          <source>Printed when an assertion fails while running the test method.</source>
          <target state="translated">Se imprime cuando una afirmación falla al ejecutar el método de prueba.</target>
        </trans-unit>
        <trans-unit id="4fe14f961fb1067a3cf5bb2c6557173ac8ba1e78" translate="yes" xml:space="preserve">
          <source>Printed when an error occurs while running the test method.</source>
          <target state="translated">Se imprime cuando se produce un error al ejecutar el método de prueba.</target>
        </trans-unit>
        <trans-unit id="f26a19962fbcc0ead8ef5d2b0673010d4f29374d" translate="yes" xml:space="preserve">
          <source>Printed when the test has been marked as risky (see &lt;a href=&quot;risky-tests&quot;&gt;Chapter 6&lt;/a&gt;).</source>
          <target state="translated">Impreso cuando la prueba se ha marcado como riesgosa (consulte el &lt;a href=&quot;risky-tests&quot;&gt;Cap&amp;iacute;tulo 6&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="4db0fe64ebd78347ce8fd394c7ea1f2f32ca4046" translate="yes" xml:space="preserve">
          <source>Printed when the test has been skipped (see &lt;a href=&quot;incomplete-and-skipped-tests&quot;&gt;Chapter 7&lt;/a&gt;).</source>
          <target state="translated">Se imprime cuando se omite la prueba (consulte el &lt;a href=&quot;incomplete-and-skipped-tests&quot;&gt;Cap&amp;iacute;tulo 7&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="95ba802335d8720b55472d99964e18ef93d939db" translate="yes" xml:space="preserve">
          <source>Printed when the test is marked as being incomplete or not yet implemented (see &lt;a href=&quot;incomplete-and-skipped-tests&quot;&gt;Chapter 7&lt;/a&gt;).</source>
          <target state="translated">Se imprime cuando la prueba est&amp;aacute; marcada como incompleta o a&amp;uacute;n no implementada (consulte el &lt;a href=&quot;incomplete-and-skipped-tests&quot;&gt;Cap&amp;iacute;tulo 7&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="ba2d6f772530a3465e1a5aec7c5f04c3e6c8b703" translate="yes" xml:space="preserve">
          <source>Printed when the test succeeds.</source>
          <target state="translated">Se imprime cuando la prueba tiene éxito.</target>
        </trans-unit>
        <trans-unit id="84e5ab64b778c615157d90ad3f9f29cd40ffc1f9" translate="yes" xml:space="preserve">
          <source>Prior to version 6, by default, PHPUnit ran your tests in a way where changes to global and super-global variables (&lt;code&gt;$GLOBALS&lt;/code&gt;, &lt;code&gt;$_ENV&lt;/code&gt;, &lt;code&gt;$_POST&lt;/code&gt;, &lt;code&gt;$_GET&lt;/code&gt;, &lt;code&gt;$_COOKIE&lt;/code&gt;, &lt;code&gt;$_SERVER&lt;/code&gt;, &lt;code&gt;$_FILES&lt;/code&gt;, &lt;code&gt;$_REQUEST&lt;/code&gt;) do not affect other tests.</source>
          <target state="translated">Antes de la versi&amp;oacute;n 6, de forma predeterminada, PHPUnit ejecutaba sus pruebas de una manera en la que los cambios en las variables globales y &lt;code&gt;$GLOBALS&lt;/code&gt; ( $ GLOBALS , &lt;code&gt;$_ENV&lt;/code&gt; , &lt;code&gt;$_POST&lt;/code&gt; , &lt;code&gt;$_GET&lt;/code&gt; , &lt;code&gt;$_COOKIE&lt;/code&gt; , &lt;code&gt;$_SERVER&lt;/code&gt; , &lt;code&gt;$_FILES&lt;/code&gt; , &lt;code&gt;$_REQUEST&lt;/code&gt; ) no afecta a otras pruebas.</target>
        </trans-unit>
        <trans-unit id="4efddacca78f222cece1de9ff5fbca133f4da905" translate="yes" xml:space="preserve">
          <source>Probably the easiest way to compose a test suite is to keep all test case source files in a test directory. PHPUnit can automatically discover and run the tests by recursively traversing the test directory.</source>
          <target state="translated">Probablemente la forma más fácil de componer un conjunto de pruebas es mantener todos los archivos fuente de los casos de prueba en un directorio de pruebas.PHPUnit puede descubrir y ejecutar automáticamente las pruebas recorriendo recursivamente el directorio de pruebas.</target>
        </trans-unit>
        <trans-unit id="c5a78511945d75d09c26b4c1fb8f05de45a20ece" translate="yes" xml:space="preserve">
          <source>Prophecy</source>
          <target state="translated">Prophecy</target>
        </trans-unit>
        <trans-unit id="70722b664c73140bc8771071166d7ea92ac45976" translate="yes" xml:space="preserve">
          <source>Query (SQL) DataSet</source>
          <target state="translated">Conjunto de datos de consulta (SQL)</target>
        </trans-unit>
        <trans-unit id="e52aa5d69f53e18e5cd9d9467eb939c9e5ded38d" translate="yes" xml:space="preserve">
          <source>Query-Based DataSet and DataTable</source>
          <target state="translated">DataSet y DataTable basados en consultas</target>
        </trans-unit>
        <trans-unit id="06576556d1ad802f247cad11ae748be47b70cd9c" translate="yes" xml:space="preserve">
          <source>R</source>
          <target state="translated">R</target>
        </trans-unit>
        <trans-unit id="20e73682efd2091a4887f17fa4949bf07aafee27" translate="yes" xml:space="preserve">
          <source>Read configuration from XML file. See &lt;a href=&quot;appendixes.configuration&quot;&gt;Appendix C&lt;/a&gt; for more details.</source>
          <target state="translated">Leer la configuraci&amp;oacute;n del archivo XML. Consulte el &lt;a href=&quot;appendixes.configuration&quot;&gt;Ap&amp;eacute;ndice C&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="975633d28e1a4ad6918a2b49a61299f7d37d4c0f" translate="yes" xml:space="preserve">
          <source>Repeatedly runs the test(s) the specified number of times.</source>
          <target state="translated">Ejecuta repetidamente la(s)prueba(s)el número de veces especificado.</target>
        </trans-unit>
        <trans-unit id="5e1798b999b27ffc3f0e8ab26077abe1c4ce1348" translate="yes" xml:space="preserve">
          <source>Replacement DataSet</source>
          <target state="translated">Reemplazo del DataSet</target>
        </trans-unit>
        <trans-unit id="924d60e08dd4b24f08914a73aec4205064256fb5" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$actual&lt;/code&gt; is not an instance of &lt;code&gt;$expected&lt;/code&gt;.</source>
          <target state="translated">Informa de un error identificado por &lt;code&gt;$message&lt;/code&gt; si &lt;code&gt;$actual&lt;/code&gt; no es una instancia de &lt;code&gt;$expected&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="078b6f1f4540c3e45b087d08c5adc83e41e64dbb" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$actual&lt;/code&gt; is not empty.</source>
          <target state="translated">Informa de un error identificado por &lt;code&gt;$message&lt;/code&gt; si &lt;code&gt;$actual&lt;/code&gt; no est&amp;aacute; vac&amp;iacute;o.</target>
        </trans-unit>
        <trans-unit id="ad7ba7eceebb89f5bbf23541075b06e1bb34f753" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$actual&lt;/code&gt; is not of the &lt;code&gt;$expected&lt;/code&gt; type.</source>
          <target state="translated">Informa de un error identificado por &lt;code&gt;$message&lt;/code&gt; si &lt;code&gt;$actual&lt;/code&gt; no es del tipo &lt;code&gt;$expected&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9e98152f787fdc1d0324cb8c223b67bfb99d763e" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$array&lt;/code&gt; does not contains the &lt;code&gt;$subset&lt;/code&gt;.</source>
          <target state="translated">Reporta un error identificado por &lt;code&gt;$message&lt;/code&gt; si &lt;code&gt;$array&lt;/code&gt; no contiene el &lt;code&gt;$subset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71b557ccbaaa7a51c075e4c7db2b8f7650bb97fb" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$array&lt;/code&gt; does not have the &lt;code&gt;$key&lt;/code&gt;.</source>
          <target state="translated">Reporta un error identificado por &lt;code&gt;$message&lt;/code&gt; si &lt;code&gt;$array&lt;/code&gt; no tiene la &lt;code&gt;$key&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ca0da1ed1e84c5868f60ccdb6b56ce8feaacc8c" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$className::attributeName&lt;/code&gt; does not exist.</source>
          <target state="translated">Reporta un error identificado por &lt;code&gt;$message&lt;/code&gt; si &lt;code&gt;$className::attributeName&lt;/code&gt; no existe.</target>
        </trans-unit>
        <trans-unit id="c536140963660bee37cdd72ecd663108753ca977" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$condition&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Informa un error identificado por &lt;code&gt;$message&lt;/code&gt; si &lt;code&gt;$condition&lt;/code&gt; es &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9c4115d702d6b98e99ec860f0cf95a6db164937a" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$condition&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Informa de un error identificado por &lt;code&gt;$message&lt;/code&gt; si &lt;code&gt;$condition&lt;/code&gt; es &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cc513ca9b015cd5814feb284d42c9cf0de0dc6ad" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$haystack&lt;/code&gt; does not contain only instances of class &lt;code&gt;$classname&lt;/code&gt;.</source>
          <target state="translated">Reporta un error identificado por &lt;code&gt;$message&lt;/code&gt; si &lt;code&gt;$haystack&lt;/code&gt; no contiene solo instancias de la clase &lt;code&gt;$classname&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="84fce04f62fd1599677eb73f158abf8b48b05502" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$haystack&lt;/code&gt; does not contain only variables of type &lt;code&gt;$type&lt;/code&gt;.</source>
          <target state="translated">Reporta un error identificado por &lt;code&gt;$message&lt;/code&gt; si &lt;code&gt;$haystack&lt;/code&gt; no contiene solo variables de tipo &lt;code&gt;$type&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="544c20f0a7531533ccce89905d21173c44ed1b1d" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$needle&lt;/code&gt; is not a substring of &lt;code&gt;$haystack&lt;/code&gt;.</source>
          <target state="translated">Reporta un error identificado por &lt;code&gt;$message&lt;/code&gt; si &lt;code&gt;$needle&lt;/code&gt; no es una subcadena de &lt;code&gt;$haystack&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2a7b429e45d29e7cb3ea9b762d8a855e23e9fbec" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$needle&lt;/code&gt; is not an element of &lt;code&gt;$haystack&lt;/code&gt;.</source>
          <target state="translated">Reporta un error identificado por &lt;code&gt;$message&lt;/code&gt; si &lt;code&gt;$needle&lt;/code&gt; no es un elemento de &lt;code&gt;$haystack&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="393d7b82ac901e2af8038b1136b0b11b10a85319" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$object-&amp;gt;attributeName&lt;/code&gt; does not exist.</source>
          <target state="translated">Reporta un error identificado por &lt;code&gt;$message&lt;/code&gt; si &lt;code&gt;$object-&amp;gt;attributeName&lt;/code&gt; no existe.</target>
        </trans-unit>
        <trans-unit id="85c71af7ea8b76e35c12e41078b128f762f10ca6" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$string&lt;/code&gt; does not match the regular expression &lt;code&gt;$pattern&lt;/code&gt;.</source>
          <target state="translated">Informa un error identificado por &lt;code&gt;$message&lt;/code&gt; si &lt;code&gt;$string&lt;/code&gt; no coincide con el &lt;code&gt;$pattern&lt;/code&gt; expresi&amp;oacute;n regular .</target>
        </trans-unit>
        <trans-unit id="eb4ffc898d3720877e919bb23475e7ba888c3340" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$variable&lt;/code&gt; is not &lt;code&gt;INF&lt;/code&gt;.</source>
          <target state="translated">Reporta un error identificado por &lt;code&gt;$message&lt;/code&gt; si &lt;code&gt;$variable&lt;/code&gt; no es &lt;code&gt;INF&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd91aa05bc44e856d110d48bd4789ed9a4a768c2" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$variable&lt;/code&gt; is not &lt;code&gt;NAN&lt;/code&gt;.</source>
          <target state="translated">Reporta un error identificado por &lt;code&gt;$message&lt;/code&gt; si &lt;code&gt;$variable&lt;/code&gt; no es &lt;code&gt;NAN&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ed3c7fcdfb61a066fbc49285d66021d4dae0700" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if &lt;code&gt;$variable&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">Reporta un error identificado por &lt;code&gt;$message&lt;/code&gt; si &lt;code&gt;$variable&lt;/code&gt; no es &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77bd044d100c1c700543142b3889b9173e9bfc46" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the &lt;code&gt;$string&lt;/code&gt; does not end with &lt;code&gt;$suffix&lt;/code&gt;.</source>
          <target state="translated">Informa un error identificado por &lt;code&gt;$message&lt;/code&gt; si la &lt;code&gt;$string&lt;/code&gt; no termina con &lt;code&gt;$suffix&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="086c5446b0c9a38d2f1efa12475b396fb1662835" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the &lt;code&gt;$string&lt;/code&gt; does not match the &lt;code&gt;$format&lt;/code&gt; string.</source>
          <target state="translated">Reporta un error identificado por &lt;code&gt;$message&lt;/code&gt; si la &lt;code&gt;$string&lt;/code&gt; no coincide con la cadena de &lt;code&gt;$format&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="98a6fedabadddcb1108120c9c73eea5c20be0198" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the &lt;code&gt;$string&lt;/code&gt; does not match the contents of the &lt;code&gt;$formatFile&lt;/code&gt;.</source>
          <target state="translated">Informa de un error identificado por &lt;code&gt;$message&lt;/code&gt; si &lt;code&gt;$string&lt;/code&gt; no coincide con el contenido del &lt;code&gt;$formatFile&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="512f125df8f2a6988a4771105eac7f4ba79b7c84" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the &lt;code&gt;$string&lt;/code&gt; does not start with &lt;code&gt;$prefix&lt;/code&gt;.</source>
          <target state="translated">Informa un error identificado por &lt;code&gt;$message&lt;/code&gt; si la &lt;code&gt;$string&lt;/code&gt; no comienza con el &lt;code&gt;$prefix&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="09fe110a6d6c6c2a812045f5bd6440b3a1463256" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the &lt;code&gt;$value&lt;/code&gt; does not match the &lt;code&gt;$constraint&lt;/code&gt;.</source>
          <target state="translated">Informa un error identificado por &lt;code&gt;$message&lt;/code&gt; si el &lt;code&gt;$value&lt;/code&gt; no coincide con la &lt;code&gt;$constraint&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4ccd61efef40fa853ff83fe68aa0c12747d495b5" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the XML Structure of the DOMElement in &lt;code&gt;$actualElement&lt;/code&gt; is not equal to the XML structure of the DOMElement in &lt;code&gt;$expectedElement&lt;/code&gt;.</source>
          <target state="translated">Informa de un error identificado por &lt;code&gt;$message&lt;/code&gt; si la estructura XML del DOMElement en &lt;code&gt;$actualElement&lt;/code&gt; no es igual a la estructura XML del DOMElement en &lt;code&gt;$expectedElement&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8b04410d5387cb65b81bca62b943471ef8469184" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the XML document in &lt;code&gt;$actualFile&lt;/code&gt; is not equal to the XML document in &lt;code&gt;$expectedFile&lt;/code&gt;.</source>
          <target state="translated">Reporta un error identificado por &lt;code&gt;$message&lt;/code&gt; si el documento XML en &lt;code&gt;$actualFile&lt;/code&gt; no es igual al documento XML en &lt;code&gt;$expectedFile&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3a0182ffc5d9d017d2da8255c3dba2d70ccc072d" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the XML document in &lt;code&gt;$actualXml&lt;/code&gt; is not equal to the XML document in &lt;code&gt;$expectedFile&lt;/code&gt;.</source>
          <target state="translated">Reporta un error identificado por &lt;code&gt;$message&lt;/code&gt; si el documento XML en &lt;code&gt;$actualXml&lt;/code&gt; no es igual al documento XML en &lt;code&gt;$expectedFile&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bafb755a1c4add06ae87ccaf6e2df8b223ddbe53" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the XML document in &lt;code&gt;$actualXml&lt;/code&gt; is not equal to the XML document in &lt;code&gt;$expectedXml&lt;/code&gt;.</source>
          <target state="translated">Reporta un error identificado por &lt;code&gt;$message&lt;/code&gt; si el documento XML en &lt;code&gt;$actualXml&lt;/code&gt; no es igual al documento XML en &lt;code&gt;$expectedXml&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="11f0506454d65d919a993273bfd9571e82e69672" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the directory specified by &lt;code&gt;$directory&lt;/code&gt; does not exist.</source>
          <target state="translated">Reporta un error identificado por &lt;code&gt;$message&lt;/code&gt; si el directorio especificado por &lt;code&gt;$directory&lt;/code&gt; no existe.</target>
        </trans-unit>
        <trans-unit id="ee8a7057ce8765a935dce603cc59a7a46fbe2605" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the directory specified by &lt;code&gt;$directory&lt;/code&gt; is not a directory or is not readable.</source>
          <target state="translated">Informa un error identificado por &lt;code&gt;$message&lt;/code&gt; si el directorio especificado por &lt;code&gt;$directory&lt;/code&gt; no es un directorio o no se puede leer.</target>
        </trans-unit>
        <trans-unit id="728690575b113a8f02350e19c80190f39d052b0f" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the directory specified by &lt;code&gt;$directory&lt;/code&gt; is not a directory or is not writable.</source>
          <target state="translated">Informa un error identificado por &lt;code&gt;$message&lt;/code&gt; si el directorio especificado por &lt;code&gt;$directory&lt;/code&gt; no es un directorio o no se puede escribir.</target>
        </trans-unit>
        <trans-unit id="3e47f4fd26dcfcba2f73efbe449d34308cbd9660" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the file or directory specified by &lt;code&gt;$filename&lt;/code&gt; is not readable.</source>
          <target state="translated">Reporta un error identificado por &lt;code&gt;$message&lt;/code&gt; si el archivo o directorio especificado por &lt;code&gt;$filename&lt;/code&gt; no es legible.</target>
        </trans-unit>
        <trans-unit id="38e7d275b237baccf1b03689f9d23f16fd05893d" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the file or directory specified by &lt;code&gt;$filename&lt;/code&gt; is not writable.</source>
          <target state="translated">Informa un error identificado por &lt;code&gt;$message&lt;/code&gt; si el archivo o directorio especificado por &lt;code&gt;$filename&lt;/code&gt; no se puede escribir.</target>
        </trans-unit>
        <trans-unit id="55d77040434efa3c373e4945df883a1b2bd7a62c" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the file specified by &lt;code&gt;$expected&lt;/code&gt; does not have the same contents as the file specified by &lt;code&gt;$actual&lt;/code&gt;.</source>
          <target state="translated">Informa un error identificado por &lt;code&gt;$message&lt;/code&gt; si el archivo especificado por &lt;code&gt;$expected&lt;/code&gt; no tiene el mismo contenido que el archivo especificado por &lt;code&gt;$actual&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="578fda8dc395bb88e540b77eb87fa3d87feaee2e" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the file specified by &lt;code&gt;$expectedFile&lt;/code&gt; does not have &lt;code&gt;$actualString&lt;/code&gt; as its contents.</source>
          <target state="translated">Informa de un error identificado por &lt;code&gt;$message&lt;/code&gt; si el archivo especificado por &lt;code&gt;$expectedFile&lt;/code&gt; no tiene &lt;code&gt;$actualString&lt;/code&gt; como contenido.</target>
        </trans-unit>
        <trans-unit id="d56ad30ea8d3b9f96fc5c8079f620d3ccc615a3d" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the file specified by &lt;code&gt;$filename&lt;/code&gt; does not exist.</source>
          <target state="translated">Informa un error identificado por &lt;code&gt;$message&lt;/code&gt; si el archivo especificado por &lt;code&gt;$filename&lt;/code&gt; no existe.</target>
        </trans-unit>
        <trans-unit id="dc6ad2067d9ad0155aac5f3d8f47da9b0222c496" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the file specified by &lt;code&gt;$filename&lt;/code&gt; is not a file or is not readable.</source>
          <target state="translated">Informa un error identificado por &lt;code&gt;$message&lt;/code&gt; si el archivo especificado por &lt;code&gt;$filename&lt;/code&gt; no es un archivo o no se puede leer.</target>
        </trans-unit>
        <trans-unit id="8291b2b0cf203b6fa6838f2cea8f26063a7a8fe3" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the file specified by &lt;code&gt;$filename&lt;/code&gt; is not a file or is not writable.</source>
          <target state="translated">Informa un error identificado por &lt;code&gt;$message&lt;/code&gt; si el archivo especificado por &lt;code&gt;$filename&lt;/code&gt; no es un archivo o no se puede escribir.</target>
        </trans-unit>
        <trans-unit id="c12e7387d4c761afca3a9b2ec974011f6be4a1bb" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the number of elements in &lt;code&gt;$haystack&lt;/code&gt; is not &lt;code&gt;$expectedCount&lt;/code&gt;.</source>
          <target state="translated">Reporta un error identificado por &lt;code&gt;$message&lt;/code&gt; si el n&amp;uacute;mero de elementos en &lt;code&gt;$haystack&lt;/code&gt; no es &lt;code&gt;$expectedCount&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4080ea0d678b62f44b472ec5e7403a733c8e1fa6" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the two arrays &lt;code&gt;$expected&lt;/code&gt; and &lt;code&gt;$actual&lt;/code&gt; are not equal.</source>
          <target state="translated">Reporta un error identificado por &lt;code&gt;$message&lt;/code&gt; si las dos matrices &lt;code&gt;$expected&lt;/code&gt; y &lt;code&gt;$actual&lt;/code&gt; no son iguales.</target>
        </trans-unit>
        <trans-unit id="3d8646043332e6a5cd233d90272cf36235d5e92a" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the two floats &lt;code&gt;$expected&lt;/code&gt; and &lt;code&gt;$actual&lt;/code&gt; are not within &lt;code&gt;$delta&lt;/code&gt; of each other.</source>
          <target state="translated">Reporta un error identificado por &lt;code&gt;$message&lt;/code&gt; si los dos flotadores &lt;code&gt;$expected&lt;/code&gt; y &lt;code&gt;$actual&lt;/code&gt; no est&amp;aacute;n dentro del &lt;code&gt;$delta&lt;/code&gt; entre s&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="3da6ee2026204bec6dccdab9369e1994df40126f" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the two objects &lt;code&gt;$expected&lt;/code&gt; and &lt;code&gt;$actual&lt;/code&gt; do not have equal attribute values.</source>
          <target state="translated">Informa un error identificado por &lt;code&gt;$message&lt;/code&gt; si los dos objetos &lt;code&gt;$expected&lt;/code&gt; y &lt;code&gt;$actual&lt;/code&gt; no tienen valores de atributo iguales.</target>
        </trans-unit>
        <trans-unit id="8e21322034d6fc096afb08f79236b5d692c36720" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the two variables &lt;code&gt;$expected&lt;/code&gt; and &lt;code&gt;$actual&lt;/code&gt; are not equal.</source>
          <target state="translated">Informa de un error identificado por &lt;code&gt;$message&lt;/code&gt; si las dos variables &lt;code&gt;$expected&lt;/code&gt; y &lt;code&gt;$actual&lt;/code&gt; no son iguales.</target>
        </trans-unit>
        <trans-unit id="3cab7e45c1bddba8d5529fea8d75b1a303fc5364" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the two variables &lt;code&gt;$expected&lt;/code&gt; and &lt;code&gt;$actual&lt;/code&gt; do not have the same type and value.</source>
          <target state="translated">Reporta un error identificado por &lt;code&gt;$message&lt;/code&gt; si las dos variables &lt;code&gt;$expected&lt;/code&gt; y &lt;code&gt;$actual&lt;/code&gt; no tienen el mismo tipo y valor.</target>
        </trans-unit>
        <trans-unit id="c94723b2b18047d8e062213732cd10179f2b5dd9" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the two variables &lt;code&gt;$expected&lt;/code&gt; and &lt;code&gt;$actual&lt;/code&gt; do not reference the same object.</source>
          <target state="translated">Informa de un error identificado por &lt;code&gt;$message&lt;/code&gt; si las dos variables &lt;code&gt;$expected&lt;/code&gt; y &lt;code&gt;$actual&lt;/code&gt; no hacen referencia al mismo objeto.</target>
        </trans-unit>
        <trans-unit id="7f9cc3596d6c933da5ee9e94ff2d469a2a40040e" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the uncommented canonical form of the XML documents represented by the two DOMDocument objects &lt;code&gt;$expected&lt;/code&gt; and &lt;code&gt;$actual&lt;/code&gt; are not equal.</source>
          <target state="translated">Reporta un error identificado por &lt;code&gt;$message&lt;/code&gt; si la forma can&amp;oacute;nica sin comentarios de los documentos XML representados por los dos objetos DOMDocument &lt;code&gt;$expected&lt;/code&gt; y &lt;code&gt;$actual&lt;/code&gt; no son iguales.</target>
        </trans-unit>
        <trans-unit id="1249882186142435ead5e58f83c6c8abd0c19b9c" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the value of &lt;code&gt;$actual&lt;/code&gt; is not greater than or equal to the value of &lt;code&gt;$expected&lt;/code&gt;.</source>
          <target state="translated">Informa de un error identificado por &lt;code&gt;$message&lt;/code&gt; si el valor de &lt;code&gt;$actual&lt;/code&gt; no es mayor o igual que el valor de &lt;code&gt;$expected&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="595e08c23860647d89901bf9ab8b92336d0f4ffc" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the value of &lt;code&gt;$actual&lt;/code&gt; is not greater than the value of &lt;code&gt;$expected&lt;/code&gt;.</source>
          <target state="translated">Informa de un error identificado por &lt;code&gt;$message&lt;/code&gt; si el valor de &lt;code&gt;$actual&lt;/code&gt; no es mayor que el valor de &lt;code&gt;$expected&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a6c765fa2d55705025d2762d524409fb5bb50e0a" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the value of &lt;code&gt;$actual&lt;/code&gt; is not less than or equal to the value of &lt;code&gt;$expected&lt;/code&gt;.</source>
          <target state="translated">Reporta un error identificado por &lt;code&gt;$message&lt;/code&gt; si el valor de &lt;code&gt;$actual&lt;/code&gt; no es menor o igual que el valor de &lt;code&gt;$expected&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ca0ba5a5b58e0585cdb6e1d5e525814facce853" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the value of &lt;code&gt;$actual&lt;/code&gt; is not less than the value of &lt;code&gt;$expected&lt;/code&gt;.</source>
          <target state="translated">Reporta un error identificado por &lt;code&gt;$message&lt;/code&gt; si el valor de &lt;code&gt;$actual&lt;/code&gt; no es menor que el valor de &lt;code&gt;$expected&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="82b463264dc29bb4729bf93137c08b11700af714" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the value of &lt;code&gt;$actualFile&lt;/code&gt; does not match the value of &lt;code&gt;$expectedFile&lt;/code&gt;.</source>
          <target state="translated">Reporta un error identificado por &lt;code&gt;$message&lt;/code&gt; si el valor de &lt;code&gt;$actualFile&lt;/code&gt; no coincide con el valor de &lt;code&gt;$expectedFile&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="301162802aecaaf8f22c346674fe7f0608bb7436" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the value of &lt;code&gt;$actualJson&lt;/code&gt; does not match the value of &lt;code&gt;$expectedFile&lt;/code&gt;.</source>
          <target state="translated">Informa un error identificado por &lt;code&gt;$message&lt;/code&gt; si el valor de &lt;code&gt;$actualJson&lt;/code&gt; no coincide con el valor de &lt;code&gt;$expectedFile&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="18c0ccdc644f837b1a01f2132c19dc72f470bf4b" translate="yes" xml:space="preserve">
          <source>Reports an error identified by &lt;code&gt;$message&lt;/code&gt; if the value of &lt;code&gt;$actualJson&lt;/code&gt; does not match the value of &lt;code&gt;$expectedJson&lt;/code&gt;.</source>
          <target state="translated">Informa de un error identificado por &lt;code&gt;$message&lt;/code&gt; si el valor de &lt;code&gt;$actualJson&lt;/code&gt; no coincide con el valor de &lt;code&gt;$expectedJson&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dd616ff006ed7c07c758a188e4ec92b362086afe" translate="yes" xml:space="preserve">
          <source>Reports the test progress as agile documentation. See &lt;a href=&quot;other-uses-for-tests&quot;&gt;Chapter 12&lt;/a&gt; for more details.</source>
          <target state="translated">Reporta el progreso de la prueba como documentaci&amp;oacute;n &amp;aacute;gil. Consulte el &lt;a href=&quot;other-uses-for-tests&quot;&gt;Cap&amp;iacute;tulo 12&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">Requirements</target>
        </trans-unit>
        <trans-unit id="16b5504af778e6e22e6ab413c83558c38de90649" translate="yes" xml:space="preserve">
          <source>Returns a matcher that matches when the method it is evaluated for is executed at least once.</source>
          <target state="translated">Devuelve una coincidencia que coincide cuando el método para el que se evalúa se ejecuta al menos una vez.</target>
        </trans-unit>
        <trans-unit id="120bdc611a5f0e858f90bdbbdc837cc8ceefa27e" translate="yes" xml:space="preserve">
          <source>Returns a matcher that matches when the method it is evaluated for is executed exactly &lt;code&gt;$count&lt;/code&gt; times.</source>
          <target state="translated">Devuelve un comparador que coincide cuando el m&amp;eacute;todo para el que se eval&amp;uacute;a se ejecuta exactamente &lt;code&gt;$count&lt;/code&gt; veces.</target>
        </trans-unit>
        <trans-unit id="838806f90a6f476915e02b7e79b86fd52d6a8d70" translate="yes" xml:space="preserve">
          <source>Returns a matcher that matches when the method it is evaluated for is executed exactly once.</source>
          <target state="translated">Devuelve una coincidencia que coincide cuando el método para el que se evalúa se ejecuta exactamente una vez.</target>
        </trans-unit>
        <trans-unit id="c9911566320eae9c09315f2b84265dd9c69b6476" translate="yes" xml:space="preserve">
          <source>Returns a matcher that matches when the method it is evaluated for is executed zero or more times.</source>
          <target state="translated">Devuelve una coincidencia que coincide cuando el método para el que se evalúa se ejecuta cero o más veces.</target>
        </trans-unit>
        <trans-unit id="53bab2e7ba0f0396fc0a45e50a1614e9f6fafc8d" translate="yes" xml:space="preserve">
          <source>Returns a matcher that matches when the method it is evaluated for is invoked at the given &lt;code&gt;$index&lt;/code&gt;.</source>
          <target state="translated">Devuelve un comparador que coincide cuando el m&amp;eacute;todo para el que se eval&amp;uacute;a se invoca en el &lt;code&gt;$index&lt;/code&gt; dado .</target>
        </trans-unit>
        <trans-unit id="27915c6e84224125fe3978046e491501197d9c16" translate="yes" xml:space="preserve">
          <source>Returns a matcher that matches when the method it is evaluated for is never executed.</source>
          <target state="translated">Devuelve una coincidencia que coincide cuando el método para el que se evalúa nunca se ejecuta.</target>
        </trans-unit>
        <trans-unit id="dc2fb7e0371dfd1aabb9f9a7a640ddddc336ee2d" translate="yes" xml:space="preserve">
          <source>Risky Tests</source>
          <target state="translated">Pruebas de riesgo</target>
        </trans-unit>
        <trans-unit id="4490c75530f1d398bb9ab74d4a61cad83d14483b" translate="yes" xml:space="preserve">
          <source>Run each test in a separate PHP process.</source>
          <target state="translated">Ejecutar cada prueba en un proceso PHP separado.</target>
        </trans-unit>
        <trans-unit id="5332dfc5aecd6edc7ed9f2a7c823bd3465a3c11c" translate="yes" xml:space="preserve">
          <source>Runs the tests that are provided by the class &lt;code&gt;UnitTest&lt;/code&gt;. This class is expected to be declared in the &lt;code&gt;UnitTest.php&lt;/code&gt; sourcefile.</source>
          <target state="translated">Ejecuta las pruebas que proporciona la clase &lt;code&gt;UnitTest&lt;/code&gt; . Se espera que esta clase se declare en el archivo fuente &lt;code&gt;UnitTest.php&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eedb7be5dad5b95a566c703f452bd8d531fca9e0" translate="yes" xml:space="preserve">
          <source>Runs the tests that are provided by the class &lt;code&gt;UnitTest&lt;/code&gt;. This class is expected to be declared in the specified sourcefile.</source>
          <target state="translated">Ejecuta las pruebas que proporciona la clase &lt;code&gt;UnitTest&lt;/code&gt; . Se espera que esta clase se declare en el archivo fuente especificado.</target>
        </trans-unit>
        <trans-unit id="02aa629c8b16cd17a44f3a0efec2feed43937642" translate="yes" xml:space="preserve">
          <source>S</source>
          <target state="translated">S</target>
        </trans-unit>
        <trans-unit id="7448f49a86217992e83be8ae862c71eb04326979" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;fixtures#fixtures.global-state&quot;&gt;the section called &amp;ldquo;Global State&amp;rdquo;&lt;/a&gt; for details.</source>
          <target state="translated">Consulte &lt;a href=&quot;fixtures#fixtures.global-state&quot;&gt;la secci&amp;oacute;n denominada &quot;Estado global&quot;&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="c6c88373f803589d4c186591993ac23e9561abe1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;textui#textui.examples.filter-patterns&quot;&gt;Example 3.2&lt;/a&gt; for examples of valid filter patterns.</source>
          <target state="translated">Consulte el &lt;a href=&quot;textui#textui.examples.filter-patterns&quot;&gt;Ejemplo 3.2&lt;/a&gt; para ver ejemplos de patrones de filtro v&amp;aacute;lidos.</target>
        </trans-unit>
        <trans-unit id="100fb61de51efc9275e7d2ec6b05cdbb1fc3dc64" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;textui#textui.examples.filter-shortcuts&quot;&gt;Example 3.3&lt;/a&gt; for some additional shortcuts that are available for matching data providers.</source>
          <target state="translated">Consulte el &lt;a href=&quot;textui#textui.examples.filter-shortcuts&quot;&gt;Ejemplo 3.3&lt;/a&gt; para ver algunos accesos directos adicionales que est&amp;aacute;n disponibles para los proveedores de datos coincidentes.</target>
        </trans-unit>
        <trans-unit id="fddb9a07b73cffc561de86d1fff40bac094034ef" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.data-providers&quot;&gt;the section called &amp;ldquo;Data Providers&amp;rdquo;&lt;/a&gt; for more details.</source>
          <target state="translated">Consulte &lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.data-providers&quot;&gt;la secci&amp;oacute;n denominada &quot;Proveedores de datos&quot;&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="de013037158c2f66306c3e726607540db1c032aa" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.exceptions&quot;&gt;the section called &amp;ldquo;Testing Exceptions&amp;rdquo;&lt;/a&gt; for more details.</source>
          <target state="translated">Consulte &lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.exceptions&quot;&gt;la secci&amp;oacute;n denominada &quot;Prueba de excepciones&quot;&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="ddc31a0eb2b6c484c3524060686335a03d03c165" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.test-dependencies&quot;&gt;the section called &amp;ldquo;Test Dependencies&amp;rdquo;&lt;/a&gt; for more details.</source>
          <target state="translated">Consulte &lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.test-dependencies&quot;&gt;la secci&amp;oacute;n denominada &quot;Dependencias de prueba&quot;&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="8de526126d0146c132ea71d5dd16bbe19241f244" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;convertErrorsToExceptions&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; to disable this feature.</source>
          <target state="translated">Establezca &lt;code&gt;convertErrorsToExceptions&lt;/code&gt; en &lt;code&gt;false&lt;/code&gt; para deshabilitar esta funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="0323214292a03803b261425be4f52ad8e8737fe2" translate="yes" xml:space="preserve">
          <source>Set up fixture</source>
          <target state="translated">Prepara la instalación.</target>
        </trans-unit>
        <trans-unit id="9447b4135080653abd2e9ad8db0727ace2cc20d3" translate="yes" xml:space="preserve">
          <source>Set up the expectation that the output is equal to an &lt;code&gt;$expectedString&lt;/code&gt;.</source>
          <target state="translated">Establezca la expectativa de que la salida sea igual a &lt;code&gt;$expectedString&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="160dd02da00e824892e1e71a6b95a3a491a4b93d" translate="yes" xml:space="preserve">
          <source>Set up the expectation that the output matches a &lt;code&gt;$regularExpression&lt;/code&gt;.</source>
          <target state="translated">Configure la expectativa de que la salida coincida con &lt;code&gt;$regularExpression&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6695262513b33f70308e32dac54d5fbc52e2a308" translate="yes" xml:space="preserve">
          <source>Sets the value of the given PHP configuration option.</source>
          <target state="translated">Establece el valor de la opción de configuración de PHP dada.</target>
        </trans-unit>
        <trans-unit id="0ee05ccfc38559f342a17e0fe4c74bf30a5dd845" translate="yes" xml:space="preserve">
          <source>Sets up a callback that is used to, for instance, normalize the actual output.</source>
          <target state="translated">Establece una llamada de retorno que se utiliza,por ejemplo,para normalizar la salida real.</target>
        </trans-unit>
        <trans-unit id="7c0f524205032e28bf5996cd4e347c13ca5df8e2" translate="yes" xml:space="preserve">
          <source>Setting PHP INI settings, Constants and Global Variables</source>
          <target state="translated">Ajustes del INI de PHP,constantes y variables globales</target>
        </trans-unit>
        <trans-unit id="dfef7651bee340fb2e3dc046136845c86b43482c" translate="yes" xml:space="preserve">
          <source>Setting the &lt;code&gt;$backupGlobalsBlacklist&lt;/code&gt; property inside e.g. the &lt;code&gt;setUp()&lt;/code&gt; method has no effect.</source>
          <target state="translated">Establecer la propiedad &lt;code&gt;$backupGlobalsBlacklist&lt;/code&gt; dentro, por ejemplo, el m&amp;eacute;todo &lt;code&gt;setUp()&lt;/code&gt; no tiene ning&amp;uacute;n efecto.</target>
        </trans-unit>
        <trans-unit id="2f858090d3e7f11e031c74e8319ce049ee3d6c29" translate="yes" xml:space="preserve">
          <source>Setting the &lt;code&gt;$backupStaticAttributesBlacklist&lt;/code&gt; property inside e.g. the &lt;code&gt;setUp()&lt;/code&gt; method has no effect.</source>
          <target state="translated">Establecer la propiedad &lt;code&gt;$backupStaticAttributesBlacklist&lt;/code&gt; dentro, por ejemplo, del m&amp;eacute;todo &lt;code&gt;setUp()&lt;/code&gt; no tiene ning&amp;uacute;n efecto.</target>
        </trans-unit>
        <trans-unit id="87d2656321a5a293de452fde10bbd00c1468df69" translate="yes" xml:space="preserve">
          <source>Sharing Fixture</source>
          <target state="translated">Compartir el accesorio</target>
        </trans-unit>
        <trans-unit id="4d0c16dbc955b14c2425a814443ff6af2c70b2ff" translate="yes" xml:space="preserve">
          <source>Simply add a (development-time) dependency on &lt;code&gt;phpunit/phpunit&lt;/code&gt; to your project's &lt;code&gt;composer.json&lt;/code&gt; file if you use &lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer&lt;/a&gt; to manage the dependencies of your project:</source>
          <target state="translated">Simplemente agregue una dependencia (en tiempo de desarrollo) en &lt;code&gt;phpunit/phpunit&lt;/code&gt; al archivo &lt;code&gt;composer.json&lt;/code&gt; de su proyecto si usa &lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer&lt;/a&gt; para administrar las dependencias de su proyecto:</target>
        </trans-unit>
        <trans-unit id="1d4b4c5b6c9707bf9214b1cba58ee5615b528385" translate="yes" xml:space="preserve">
          <source>Simply add a dependency on &lt;code&gt;mikey179/vfsStream&lt;/code&gt; to your project's &lt;code&gt;composer.json&lt;/code&gt; file if you use &lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer&lt;/a&gt; to manage the dependencies of your project. Here is a minimal example of a &lt;code&gt;composer.json&lt;/code&gt; file that just defines a development-time dependency on PHPUnit 4.6 and vfsStream:</source>
          <target state="translated">Simplemente agregue una dependencia en &lt;code&gt;mikey179/vfsStream&lt;/code&gt; al archivo &lt;code&gt;composer.json&lt;/code&gt; de su proyecto si usa &lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer&lt;/a&gt; para administrar las dependencias de su proyecto. Aqu&amp;iacute; hay un ejemplo m&amp;iacute;nimo de un archivo &lt;code&gt;composer.json&lt;/code&gt; que solo define una dependencia de tiempo de desarrollo en PHPUnit 4.6 y vfsStream:</target>
        </trans-unit>
        <trans-unit id="8f0f366cccf3bf1ccdf95ff96c358d6ed87801e2" translate="yes" xml:space="preserve">
          <source>Since each test completely cleans the database you are not even required to re-create the database for each test-run. A permanently available database works perfectly.</source>
          <target state="translated">Como cada prueba limpia completamente la base de datos,ni siquiera se requiere recrear la base de datos para cada prueba.Una base de datos disponible permanentemente funciona perfectamente.</target>
        </trans-unit>
        <trans-unit id="9a559e46e82b636d9ce68b3f4bf619caaf155ab7" translate="yes" xml:space="preserve">
          <source>Since the filesystem operations do not operate on the real filesystem anymore, cleanup operations in a &lt;code&gt;tearDown()&lt;/code&gt; method are no longer required.</source>
          <target state="translated">Dado que las operaciones del sistema de archivos ya no operan en el sistema de archivos real, las operaciones de limpieza en un m&amp;eacute;todo &lt;code&gt;tearDown()&lt;/code&gt; ya no son necesarias.</target>
        </trans-unit>
        <trans-unit id="48b985aa9defb1014767284f29442091a4b1f8f6" translate="yes" xml:space="preserve">
          <source>Since there is always a first test that runs against the database you do not know exactly if there is already data in the tables. PHPUnit will execute a TRUNCATE against all the tables you specified to reset their status to empty.</source>
          <target state="translated">Como siempre hay una primera prueba que se ejecuta contra la base de datos no se sabe exactamente si ya hay datos en las tablas.PHPUnit ejecutará un TRUNCATE contra todas las tablas que especificaste para restablecer su estado a vacío.</target>
        </trans-unit>
        <trans-unit id="9b9e30605cb93848800cb16fd2160fc8c4661110" translate="yes" xml:space="preserve">
          <source>Skipping Tests</source>
          <target state="translated">Saltarse las pruebas</target>
        </trans-unit>
        <trans-unit id="01c53dd387a7008f94c8928fbdcf90905f57e52a" translate="yes" xml:space="preserve">
          <source>Skipping Tests using @requires</source>
          <target state="translated">Saltarse las pruebas usando @requires</target>
        </trans-unit>
        <trans-unit id="2122aebb6bf94dd0e5179b7fcfb3524929a168a0" translate="yes" xml:space="preserve">
          <source>Software Metrics for Code Coverage</source>
          <target state="translated">Métricas de software para la cobertura del código</target>
        </trans-unit>
        <trans-unit id="a7dada32df447612e3a066daedbf70cc04ef15e6" translate="yes" xml:space="preserve">
          <source>Sometimes a stubbed method should return different values depending on a predefined list of arguments. You can use &lt;code&gt;returnValueMap()&lt;/code&gt; to create a map that associates arguments with corresponding return values. See &lt;a href=&quot;test-doubles#test-doubles.stubs.examples.StubTest5.php&quot;&gt;Example 9.6&lt;/a&gt; for an example.</source>
          <target state="translated">A veces, un m&amp;eacute;todo stubped deber&amp;iacute;a devolver diferentes valores dependiendo de una lista predefinida de argumentos. Puede utilizar &lt;code&gt;returnValueMap()&lt;/code&gt; para crear un mapa que asocie argumentos con los valores de retorno correspondientes. Consulte el &lt;a href=&quot;test-doubles#test-doubles.stubs.examples.StubTest5.php&quot;&gt;Ejemplo 9.6&lt;/a&gt; para ver un ejemplo.</target>
        </trans-unit>
        <trans-unit id="b237baf52124722804b7ce34390751ccffbc4334" translate="yes" xml:space="preserve">
          <source>Sometimes it is just plain hard to test the system under test (SUT) because it depends on other components that cannot be used in the test environment. This could be because they aren't available, they will not return the results needed for the test or because executing them would have undesirable side effects. In other cases, our test strategy requires us to have more control or visibility of the internal behavior of the SUT.</source>
          <target state="translated">A veces es simplemente difícil probar el sistema bajo prueba (SUT)porque depende de otros componentes que no pueden utilizarse en el entorno de prueba.Esto puede ser porque no están disponibles,no devolverán los resultados necesarios para la prueba o porque ejecutarlos tendría efectos secundarios indeseables.En otros casos,nuestra estrategia de prueba requiere que tengamos más control o visibilidad del comportamiento interno del SUT.</target>
        </trans-unit>
        <trans-unit id="4dc7e0be92362d6ab972d3a0cc8c56a413712ea4" translate="yes" xml:space="preserve">
          <source>Sometimes you have blocks of code that you cannot test and that you may want to ignore during code coverage analysis. PHPUnit lets you do this using the &lt;code&gt;@codeCoverageIgnore&lt;/code&gt;, &lt;code&gt;@codeCoverageIgnoreStart&lt;/code&gt; and &lt;code&gt;@codeCoverageIgnoreEnd&lt;/code&gt; annotations as shown in &lt;a href=&quot;code-coverage-analysis#code-coverage-analysis.ignoring-code-blocks.examples.Sample.php&quot;&gt;Example 11.1&lt;/a&gt;.</source>
          <target state="translated">A veces, tiene bloques de c&amp;oacute;digo que no puede probar y que quiz&amp;aacute;s desee ignorar durante el an&amp;aacute;lisis de cobertura de c&amp;oacute;digo. PHPUnit le permite hacer esto usando las &lt;code&gt;@codeCoverageIgnore&lt;/code&gt; , &lt;code&gt;@codeCoverageIgnoreStart&lt;/code&gt; y &lt;code&gt;@codeCoverageIgnoreEnd&lt;/code&gt; como se muestra en el &lt;a href=&quot;code-coverage-analysis#code-coverage-analysis.ignoring-code-blocks.examples.Sample.php&quot;&gt;Ejemplo 11.1&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f004dcdd1b53cb8a142518c657d636752efa4edf" translate="yes" xml:space="preserve">
          <source>Sometimes you want to assert that the execution of a method, for instance, generates an expected output (via &lt;code&gt;echo&lt;/code&gt; or &lt;code&gt;print&lt;/code&gt;, for example). The &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt; class uses PHP's &lt;a href=&quot;http://www.php.net/manual/en/ref.outcontrol.php&quot;&gt;Output Buffering&lt;/a&gt; feature to provide the functionality that is necessary for this.</source>
          <target state="translated">A veces, quiere afirmar que la ejecuci&amp;oacute;n de un m&amp;eacute;todo, por ejemplo, genera una salida esperada (a trav&amp;eacute;s de &lt;code&gt;echo&lt;/code&gt; o &lt;code&gt;print&lt;/code&gt; , por ejemplo). El &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt; clase utiliza PHP de &lt;a href=&quot;http://www.php.net/manual/en/ref.outcontrol.php&quot;&gt;almacenamiento en b&amp;uacute;fer de salida&lt;/a&gt; caracter&amp;iacute;stica para proporcionar la funcionalidad que es necesaria para esto.</target>
        </trans-unit>
        <trans-unit id="f01ce7eb42c1dfd947d2feaf63974766480fbad0" translate="yes" xml:space="preserve">
          <source>Sometimes you want to return one of the arguments of a method call (unchanged) as the result of a stubbed method call. &lt;a href=&quot;test-doubles#test-doubles.stubs.examples.StubTest3.php&quot;&gt;Example 9.4&lt;/a&gt; shows how you can achieve this using &lt;code&gt;returnArgument()&lt;/code&gt; instead of &lt;code&gt;returnValue()&lt;/code&gt;.</source>
          <target state="translated">A veces desea devolver uno de los argumentos de una llamada de m&amp;eacute;todo (sin cambios) como resultado de una llamada de m&amp;eacute;todo stubped. &lt;a href=&quot;test-doubles#test-doubles.stubs.examples.StubTest3.php&quot;&gt;El ejemplo 9.4&lt;/a&gt; muestra c&amp;oacute;mo puede lograr esto usando &lt;code&gt;returnArgument()&lt;/code&gt; lugar de &lt;code&gt;returnValue()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a256b72d28e9dc0ae291b39cd90018ef934dd727" translate="yes" xml:space="preserve">
          <source>Specifies the &lt;code&gt;PHPUnit_Runner_TestSuiteLoader&lt;/code&gt; implementation to use.</source>
          <target state="translated">Especifica la implementaci&amp;oacute;n de &lt;code&gt;PHPUnit_Runner_TestSuiteLoader&lt;/code&gt; que se utilizar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="ad3ed3a080dc26fa96f085a819c4f579cd64af33" translate="yes" xml:space="preserve">
          <source>Specifies the result printer to use. The printer class must extend &lt;code&gt;PHPUnit_Util_Printer&lt;/code&gt; and implement the &lt;code&gt;PHPUnit\Framework\TestListener&lt;/code&gt; interface.</source>
          <target state="translated">Especifica la impresora de resultados que se utilizar&amp;aacute;. La clase de impresora debe extender &lt;code&gt;PHPUnit_Util_Printer&lt;/code&gt; e implementar la interfaz &lt;code&gt;PHPUnit\Framework\TestListener&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed727bba739e8581316eab50b5f960c359a4cbe7" translate="yes" xml:space="preserve">
          <source>Specify one or more tables in your database by table name (actual dataset)</source>
          <target state="translated">Especifique una o más tablas en su base de datos por el nombre de la tabla (conjunto de datos reales)</target>
        </trans-unit>
        <trans-unit id="192e805e289c654000897a49602f0f87a9106b59" translate="yes" xml:space="preserve">
          <source>Specify the expected dataset in your preferred format (YAML, XML, ..)</source>
          <target state="translated">Especifique el conjunto de datos esperado en su formato preferido (YAML,XML,..)</target>
        </trans-unit>
        <trans-unit id="152c38cebb53cb3cfce38c3ec2bae340b7eee4aa" translate="yes" xml:space="preserve">
          <source>Specifying Covered Methods</source>
          <target state="translated">Especificación de los métodos cubiertos</target>
        </trans-unit>
        <trans-unit id="ae66f9e53b94aa1d926ef1fe9f0b13ca45b0afcf" translate="yes" xml:space="preserve">
          <source>Static vs. Non-Static Usage of Assertion Methods</source>
          <target state="translated">Uso estático vs.no estático de los métodos de afirmación</target>
        </trans-unit>
        <trans-unit id="fa5e66805e285bd033c817b0caa08e69f5c57bbe" translate="yes" xml:space="preserve">
          <source>Stop execution upon first error or failure.</source>
          <target state="translated">Detener la ejecución al primer error o fallo.</target>
        </trans-unit>
        <trans-unit id="62b9c1c735c341daae5e08a4bb2c16603d724f6e" translate="yes" xml:space="preserve">
          <source>Stop execution upon first error.</source>
          <target state="translated">Detener la ejecución al primer error.</target>
        </trans-unit>
        <trans-unit id="37fe4a1127ce0fceff431a3ea857b60d5f207460" translate="yes" xml:space="preserve">
          <source>Stop execution upon first incomplete test.</source>
          <target state="translated">Detener la ejecución en la primera prueba incompleta.</target>
        </trans-unit>
        <trans-unit id="7676f1a62b448fd392d7c5f653745c97268f89df" translate="yes" xml:space="preserve">
          <source>Stop execution upon first risky test.</source>
          <target state="translated">Detener la ejecución en la primera prueba de riesgo.</target>
        </trans-unit>
        <trans-unit id="faf6c0967380807a3610b25a54293422a6f2f059" translate="yes" xml:space="preserve">
          <source>Stop execution upon first skipped test.</source>
          <target state="translated">Detener la ejecución en la primera prueba de salto.</target>
        </trans-unit>
        <trans-unit id="d368e8bc583521944131c688e267d5d16c878524" translate="yes" xml:space="preserve">
          <source>Stubbing and Mocking Web Services</source>
          <target state="translated">Servicios de Web de burla y de desecho</target>
        </trans-unit>
        <trans-unit id="3107408a50c756bdc03dcf7d5aed6d74eb0c9e3e" translate="yes" xml:space="preserve">
          <source>Stubs</source>
          <target state="translated">Stubs</target>
        </trans-unit>
        <trans-unit id="130a26082452b602de072ae244a14d7c656d4205" translate="yes" xml:space="preserve">
          <source>Subclass PHPUnit\Framework\TestCase</source>
          <target state="translated">Subclase PHPUnit\Framework\NTestCase</target>
        </trans-unit>
        <trans-unit id="ad01c5f01996376e20d26c236754d61c656c65b9" translate="yes" xml:space="preserve">
          <source>Subclass PHPUnit_Extensions_TestDecorator</source>
          <target state="translated">Subclase PHPUnidad_Extensiones_TestDecorador</target>
        </trans-unit>
        <trans-unit id="c7acd44159798a4d30afd05442f60a36487a3d9d" translate="yes" xml:space="preserve">
          <source>Super-global variables are built-in variables that are always available in all scopes.</source>
          <target state="translated">Las variables superglobales son variables incorporadas que siempre están disponibles en todos los ámbitos.</target>
        </trans-unit>
        <trans-unit id="5823fd46abd94efb287392a640ac7d2b2dfd49dd" translate="yes" xml:space="preserve">
          <source>Supported Vendors for Database Testing</source>
          <target state="translated">Proveedores apoyados para la prueba de la base de datos</target>
        </trans-unit>
        <trans-unit id="0b28e087c84f9486e767387a394931771cdb6eca" translate="yes" xml:space="preserve">
          <source>Teardown</source>
          <target state="translated">Teardown</target>
        </trans-unit>
        <trans-unit id="36dd5675667d3929fbc53aebd125834b78fd5711" translate="yes" xml:space="preserve">
          <source>Test Dependencies</source>
          <target state="translated">Pruebe las dependencias</target>
        </trans-unit>
        <trans-unit id="8ca46ef63a3cf34638b522cfdf607fca7e78d4c0" translate="yes" xml:space="preserve">
          <source>Test Doubles</source>
          <target state="translated">Dobles de prueba</target>
        </trans-unit>
        <trans-unit id="60fabbf6eed3616b6ab797cab1b4dbb8648f3e66" translate="yes" xml:space="preserve">
          <source>Test Execution Timeout</source>
          <target state="translated">Tiempo de ejecución de la prueba</target>
        </trans-unit>
        <trans-unit id="dddb3d7341ecdc71821fdf432eeb7abfba4bc948" translate="yes" xml:space="preserve">
          <source>Test Listeners</source>
          <target state="translated">Escuchadores de prueba</target>
        </trans-unit>
        <trans-unit id="98ade78abe5775e572703302a9d9af51436a6b7a" translate="yes" xml:space="preserve">
          <source>Test Results (XML)</source>
          <target state="translated">Resultados de la prueba (XML)</target>
        </trans-unit>
        <trans-unit id="d5a326813d73a0152b05ec653cd778de1de65124" translate="yes" xml:space="preserve">
          <source>Test Suites</source>
          <target state="translated">Suites de prueba</target>
        </trans-unit>
        <trans-unit id="37733d7d69cdf89090c38da2a4832f20c9e04c2d" translate="yes" xml:space="preserve">
          <source>Test code should be as short and precise as possible for several reasons:</source>
          <target state="translated">El código de prueba debe ser lo más corto y preciso posible por varias razones:</target>
        </trans-unit>
        <trans-unit id="30271fdd4bbccc7ac4a8a31a93f85e22eadae576" translate="yes" xml:space="preserve">
          <source>TestNamespace\TestCaseClass::testMethod</source>
          <target state="translated">TestNamespace\TestCaseClass::testMethod</target>
        </trans-unit>
        <trans-unit id="47b97dc2236a95b7bf474f628fbbfc6afc41ba53" translate="yes" xml:space="preserve">
          <source>TestNamespace\TestCaseClass::testMethod with data set &quot;my named data&quot;</source>
          <target state="translated">TestNamespace\TestCaseClass::testMethod with data set &quot;my named data&quot;</target>
        </trans-unit>
        <trans-unit id="1486df7a08312babc0ab0c36aaed3a196db1f90c" translate="yes" xml:space="preserve">
          <source>TestNamespace\TestCaseClass::testMethod with data set #0</source>
          <target state="translated">TestNamespace\TestCaseClass::testMethod con el conjunto de datos #0</target>
        </trans-unit>
        <trans-unit id="40515ef277ef1a89e8fe08934c46dea0238f7ade" translate="yes" xml:space="preserve">
          <source>Testing Exceptions</source>
          <target state="translated">Excepciones de prueba</target>
        </trans-unit>
        <trans-unit id="eb9bc6f37773b470b19307a114b1e5643bc2c22f" translate="yes" xml:space="preserve">
          <source>Testing Output</source>
          <target state="translated">Prueba de salida</target>
        </trans-unit>
        <trans-unit id="f379bf7dbb840672dcd72036531284a2dc880805" translate="yes" xml:space="preserve">
          <source>Testing PHP Errors</source>
          <target state="translated">Probando los errores de PHP</target>
        </trans-unit>
        <trans-unit id="9ac78d923414adf5446f250b21421f16d2ecace7" translate="yes" xml:space="preserve">
          <source>Testing Practices</source>
          <target state="translated">Prácticas de prueba</target>
        </trans-unit>
        <trans-unit id="12ca4d589bcd08a7949ab4709614718f1e7b0490" translate="yes" xml:space="preserve">
          <source>Testing gives code authors and reviewers confidence that patches produce the correct results.</source>
          <target state="translated">Las pruebas dan a los autores de los códigos y a los revisores la confianza de que los parches producen los resultados correctos.</target>
        </trans-unit>
        <trans-unit id="985b343175dcc48aa07596ccb6a17f731a90eeeb" translate="yes" xml:space="preserve">
          <source>Testing provides a good way to catch regressions quickly, and to make sure that no regression will be repeated twice.</source>
          <target state="translated">Las pruebas proporcionan una buena manera de captar las regresiones rápidamente,y asegurarse de que ninguna regresión se repita dos veces.</target>
        </trans-unit>
        <trans-unit id="3a7d907119da653effcca1ec7c2406dbd8273d84" translate="yes" xml:space="preserve">
          <source>Testing the database requires you to hook into at least the setup and teardown to clean-up and write the required fixture data into your tables. However, the database extension has good reason to revert the four stages in a database test to resemble the following workflow that is executed for each single test:</source>
          <target state="translated">Probar la base de datos requiere que te enganches al menos a la configuración y desmontaje para limpiar y escribir los datos de la instalación requerida en tus tablas.Sin embargo,la extensión de la base de datos tiene una buena razón para revertir las cuatro etapas en una prueba de la base de datos para que se asemeje al siguiente flujo de trabajo que se ejecuta para cada prueba individual:</target>
        </trans-unit>
        <trans-unit id="e889f827f82246ecd04ad1861bc93af8e3385c3f" translate="yes" xml:space="preserve">
          <source>Tests can be selected for execution based on groups using the &lt;code&gt;--group&lt;/code&gt; and &lt;code&gt;--exclude-group&lt;/code&gt; options of the command-line test runner or using the respective directives of the XML configuration file.</source>
          <target state="translated">Las pruebas se pueden seleccionar para su ejecuci&amp;oacute;n en base a grupos usando las &lt;code&gt;--group&lt;/code&gt; y --exclude &lt;code&gt;--exclude-group&lt;/code&gt; del ejecutor de pruebas de l&amp;iacute;nea de comandos o usando las directivas respectivas del archivo de configuraci&amp;oacute;n XML.</target>
        </trans-unit>
        <trans-unit id="ff8ccced5d49268612f4e12fecd13a3c0ea42964" translate="yes" xml:space="preserve">
          <source>Tests need to be explicitly annotated by either &lt;code&gt;@small&lt;/code&gt;, &lt;code&gt;@medium&lt;/code&gt;, or &lt;code&gt;@large&lt;/code&gt; to enable run time limits.</source>
          <target state="translated">Las pruebas deben anotarse expl&amp;iacute;citamente mediante &lt;code&gt;@small&lt;/code&gt; , &lt;code&gt;@medium&lt;/code&gt; o &lt;code&gt;@large&lt;/code&gt; para habilitar los l&amp;iacute;mites de tiempo de ejecuci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="32b7add19944464840ed23bf15f0db5e22d1c19d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://php.net/manual/en/phar.installation.php&quot;&gt;phar&lt;/a&gt; extension is required for using PHP Archives (PHAR).</source>
          <target state="translated">La extensi&amp;oacute;n &lt;a href=&quot;http://php.net/manual/en/phar.installation.php&quot;&gt;phar&lt;/a&gt; es necesaria para utilizar archivos PHP (PHAR).</target>
        </trans-unit>
        <trans-unit id="10757842c7f604407097f8e09324720d9e126fa7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.doctrine-project.org&quot;&gt;Doctrine 2 project&lt;/a&gt;'s test suite, for example, currently has a test suite of about 1000 tests where nearly half of them accesses the database and still runs in 15 seconds against a MySQL database on a standard desktop computer.</source>
          <target state="translated">El conjunto de pruebas del &lt;a href=&quot;http://www.doctrine-project.org&quot;&gt;proyecto Doctrine 2&lt;/a&gt; , por ejemplo, tiene actualmente un conjunto de pruebas de aproximadamente 1000 pruebas donde casi la mitad de ellas accede a la base de datos y a&amp;uacute;n se ejecuta en 15 segundos contra una base de datos MySQL en una computadora de escritorio est&amp;aacute;ndar.</target>
        </trans-unit>
        <trans-unit id="07934fde393c219cfc48b588b42c8f8ae9441980" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$GLOBALS&lt;/code&gt; variable is a so-called &lt;em&gt;super-global&lt;/em&gt; variable.</source>
          <target state="translated">El &lt;code&gt;$GLOBALS&lt;/code&gt; variable es un llamado &lt;em&gt;super-mundial&lt;/em&gt; variable.</target>
        </trans-unit>
        <trans-unit id="933793c342aa1368517d8339c85bc25b1e2cd10e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$index&lt;/code&gt; parameter for the &lt;code&gt;at()&lt;/code&gt; matcher refers to the index, starting at zero, in &lt;em&gt;all method invocations&lt;/em&gt; for a given mock object. Exercise caution when using this matcher as it can lead to brittle tests which are too closely tied to specific implementation details.</source>
          <target state="translated">El par&amp;aacute;metro &lt;code&gt;$index&lt;/code&gt; para el comparador &lt;code&gt;at()&lt;/code&gt; refiere al &amp;iacute;ndice, comenzando en cero, en &lt;em&gt;todas las invocaciones de m&amp;eacute;todos&lt;/em&gt; para un objeto simulado dado. Tenga cuidado al utilizar este comparador, ya que puede dar lugar a pruebas fr&amp;aacute;giles que est&amp;aacute;n demasiado estrechamente vinculadas a detalles de implementaci&amp;oacute;n espec&amp;iacute;ficos.</target>
        </trans-unit>
        <trans-unit id="900d34630e1c1ed1e4b46aec6e78885aa098fd75" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;filter&amp;gt;&lt;/code&gt; element and its children can be used to configure the whitelist for the code coverage reporting.</source>
          <target state="translated">El elemento &lt;code&gt;&amp;lt;filter&amp;gt;&lt;/code&gt; y sus elementos secundarios se pueden utilizar para configurar la lista blanca para los informes de cobertura de c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="7d91061b9543b9732b944bf26bfd640c76cd336b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;groups&amp;gt;&lt;/code&gt; element and its &lt;code&gt;&amp;lt;include&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;exclude&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;group&amp;gt;&lt;/code&gt; children can be used to select groups of tests marked with the &lt;code&gt;@group&lt;/code&gt; annotation (documented in &lt;a href=&quot;appendixes.annotations#appendixes.annotations.group&quot;&gt;the section called &amp;ldquo;@group&amp;rdquo;&lt;/a&gt;) that should (not) be run.</source>
          <target state="translated">El elemento &lt;code&gt;&amp;lt;groups&amp;gt;&lt;/code&gt; y sus hijos &lt;code&gt;&amp;lt;include&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;exclude&amp;gt;&lt;/code&gt; y &lt;code&gt;&amp;lt;group&amp;gt;&lt;/code&gt; se pueden usar para seleccionar grupos de pruebas marcadas con la anotaci&amp;oacute;n &lt;code&gt;@group&lt;/code&gt; (documentada en &lt;a href=&quot;appendixes.annotations#appendixes.annotations.group&quot;&gt;la secci&amp;oacute;n llamada &quot;@group&quot;&lt;/a&gt; ) que deber&amp;iacute;an (no) ser ejecutado.</target>
        </trans-unit>
        <trans-unit id="508a8036917f62abd4cc4fa2acf1622b228ad0df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;listeners&amp;gt;&lt;/code&gt; element and its &lt;code&gt;&amp;lt;listener&amp;gt;&lt;/code&gt; children can be used to attach additional test listeners to the test execution.</source>
          <target state="translated">El elemento &lt;code&gt;&amp;lt;listeners&amp;gt;&lt;/code&gt; y sus hijos &lt;code&gt;&amp;lt;listener&amp;gt;&lt;/code&gt; pueden usarse para adjuntar oyentes de prueba adicionales a la ejecuci&amp;oacute;n de la prueba.</target>
        </trans-unit>
        <trans-unit id="313f204e5017217c537dcdd0d4f6816442884103" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;logging&amp;gt;&lt;/code&gt; element and its &lt;code&gt;&amp;lt;log&amp;gt;&lt;/code&gt; children can be used to configure the logging of the test execution.</source>
          <target state="translated">El elemento &lt;code&gt;&amp;lt;logging&amp;gt;&lt;/code&gt; y sus hijos &lt;code&gt;&amp;lt;log&amp;gt;&lt;/code&gt; se pueden usar para configurar el registro de la ejecuci&amp;oacute;n de la prueba.</target>
        </trans-unit>
        <trans-unit id="0a3c5961dfdad9711e235937fd66a0701353fed3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;php&amp;gt;&lt;/code&gt; element and its children can be used to configure PHP settings, constants, and global variables. It can also be used to prepend the &lt;code&gt;include_path&lt;/code&gt;.</source>
          <target state="translated">El elemento &lt;code&gt;&amp;lt;php&amp;gt;&lt;/code&gt; y sus elementos secundarios se pueden utilizar para configurar los par&amp;aacute;metros, las constantes y las variables globales de PHP. Tambi&amp;eacute;n se puede utilizar para anteponer el &lt;code&gt;include_path&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="471072cbaacaef945753828f7bf3fd63fd5c3688" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;testsuites&amp;gt;&lt;/code&gt; element and its one or more &lt;code&gt;&amp;lt;testsuite&amp;gt;&lt;/code&gt; children can be used to compose a test suite out of test suites and test cases.</source>
          <target state="translated">El elemento &lt;code&gt;&amp;lt;testsuites&amp;gt;&lt;/code&gt; y uno o m&amp;aacute;s &lt;code&gt;&amp;lt;testsuite&amp;gt;&lt;/code&gt; secundarios se pueden usar para componer un conjunto de pruebas a partir de conjuntos de pruebas y casos de prueba.</target>
        </trans-unit>
        <trans-unit id="d0f2e6cb3c3ed4592b98ae36d959efb58d2bcaef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@after&lt;/code&gt; annotation can be used to specify methods that should be called after each test method in a test case class.</source>
          <target state="translated">La anotaci&amp;oacute;n &lt;code&gt;@after&lt;/code&gt; se puede utilizar para especificar m&amp;eacute;todos que se deben llamar despu&amp;eacute;s de cada m&amp;eacute;todo de prueba en una clase de caso de prueba.</target>
        </trans-unit>
        <trans-unit id="a162271f9e4bdef938cc564e86bd86d787976f52" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@afterClass&lt;/code&gt; annotation can be used to specify static methods that should be called after all test methods in a test class have been run to clean up shared fixtures.</source>
          <target state="translated">La anotaci&amp;oacute;n &lt;code&gt;@afterClass&lt;/code&gt; se puede usar para especificar m&amp;eacute;todos est&amp;aacute;ticos que se deben llamar despu&amp;eacute;s de que se hayan ejecutado todos los m&amp;eacute;todos de prueba en una clase de prueba para limpiar los dispositivos compartidos.</target>
        </trans-unit>
        <trans-unit id="64a808a6856cca81e00781e3d0145b28340c89d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@author&lt;/code&gt; annotation is an alias for &lt;code&gt;@group&lt;/code&gt; allowing to filter tests based on their authors.</source>
          <target state="translated">La anotaci&amp;oacute;n &lt;code&gt;@author&lt;/code&gt; es un alias para &lt;code&gt;@group&lt;/code&gt; que permite filtrar las pruebas en funci&amp;oacute;n de sus autores.</target>
        </trans-unit>
        <trans-unit id="ab93cce524c64c8c632f83591bb039aa994f8643" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@author&lt;/code&gt; annotation is an alias for the &lt;code&gt;@group&lt;/code&gt; annotation (see &lt;a href=&quot;appendixes.annotations#appendixes.annotations.group&quot;&gt;the section called &amp;ldquo;@group&amp;rdquo;&lt;/a&gt;) and allows to filter tests based on their authors.</source>
          <target state="translated">La anotaci&amp;oacute;n &lt;code&gt;@author&lt;/code&gt; es un alias para la anotaci&amp;oacute;n &lt;code&gt;@group&lt;/code&gt; (ver &lt;a href=&quot;appendixes.annotations#appendixes.annotations.group&quot;&gt;la secci&amp;oacute;n llamada &amp;ldquo;@group&amp;rdquo;&lt;/a&gt; ) y permite filtrar pruebas en funci&amp;oacute;n de sus autores.</target>
        </trans-unit>
        <trans-unit id="4f59f39d78da9339335a72d059e2194688170bc4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@backupGlobals&lt;/code&gt; annotation can also be used on the test method level. This allows for a fine-grained configuration of the backup and restore operations:</source>
          <target state="translated">La anotaci&amp;oacute;n &lt;code&gt;@backupGlobals&lt;/code&gt; tambi&amp;eacute;n se puede utilizar en el nivel del m&amp;eacute;todo de prueba. Esto permite una configuraci&amp;oacute;n detallada de las operaciones de copia de seguridad y restauraci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="dbfd210adf12fc299a71ecbf43a76ffdefd36f21" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@backupGlobals&lt;/code&gt; annotation that is discussed in &lt;a href=&quot;appendixes.annotations#appendixes.annotations.backupGlobals&quot;&gt;the section called &amp;ldquo;@backupGlobals&amp;rdquo;&lt;/a&gt; can be used to control the backup and restore operations for global variables. Alternatively, you can provide a blacklist of global variables that are to be excluded from the backup and restore operations like this</source>
          <target state="translated">La anotaci&amp;oacute;n &lt;code&gt;@backupGlobals&lt;/code&gt; que se analiza en &lt;a href=&quot;appendixes.annotations#appendixes.annotations.backupGlobals&quot;&gt;la secci&amp;oacute;n denominada &amp;ldquo;@backupGlobals&amp;rdquo;&lt;/a&gt; se puede utilizar para controlar las operaciones de copia de seguridad y restauraci&amp;oacute;n de variables globales. Alternativamente, puede proporcionar una lista negra de variables globales que se excluir&amp;aacute;n de las operaciones de copia de seguridad y restauraci&amp;oacute;n como esta.</target>
        </trans-unit>
        <trans-unit id="58ec7678d5fde9d523c43ff7ed92bec70ef81921" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@backupStaticAttributes&lt;/code&gt; annotation can be used to back up all static property values in all declared classes before each test and restore them afterwards. It may be used at the test case class or test method level:</source>
          <target state="translated">La anotaci&amp;oacute;n &lt;code&gt;@backupStaticAttributes&lt;/code&gt; se puede utilizar para hacer una copia de seguridad de todos los valores de propiedad est&amp;aacute;tica en todas las clases declaradas antes de cada prueba y restaurarlas despu&amp;eacute;s. Se puede utilizar a nivel de clase de caso de prueba o m&amp;eacute;todo de prueba:</target>
        </trans-unit>
        <trans-unit id="19b6fb8e3e3e474c65b7fb22f9f01b5ad3b92c87" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@backupStaticAttributes&lt;/code&gt; annotation discussed in &lt;a href=&quot;appendixes.annotations#appendixes.annotations.backupStaticAttributes&quot;&gt;the section called &amp;ldquo;@backupStaticAttributes&amp;rdquo;&lt;/a&gt; can be used to back up all static property values in all declared classes before each test and restore them afterwards.</source>
          <target state="translated">La anotaci&amp;oacute;n &lt;code&gt;@backupStaticAttributes&lt;/code&gt; discutida en &lt;a href=&quot;appendixes.annotations#appendixes.annotations.backupStaticAttributes&quot;&gt;la secci&amp;oacute;n llamada &amp;ldquo;@backupStaticAttributes&amp;rdquo;&lt;/a&gt; se puede usar para hacer una copia de seguridad de todos los valores de propiedad est&amp;aacute;tica en todas las clases declaradas antes de cada prueba y restaurarlas despu&amp;eacute;s.</target>
        </trans-unit>
        <trans-unit id="3920f5f1e423ff6183e12f236771ab74b374a287" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@backupStaticAttributes&lt;/code&gt; operation is executed before a test method, but only if it is enabled. If a static value was changed by a previously executed test that did not have &lt;code&gt;@backupStaticAttributes&lt;/code&gt; enabled, then that value will be backed up and restored &amp;mdash; not the originally declared default value. PHP does not record the originally declared default value of any static variable.</source>
          <target state="translated">La operaci&amp;oacute;n &lt;code&gt;@backupStaticAttributes&lt;/code&gt; se ejecuta antes de un m&amp;eacute;todo de prueba, pero solo si est&amp;aacute; habilitado. Si un valor est&amp;aacute;tico fue cambiado por una prueba ejecutada previamente que no ten&amp;iacute;a &lt;code&gt;@backupStaticAttributes&lt;/code&gt; habilitado, entonces ese valor ser&amp;aacute; respaldado y restaurado, no el valor predeterminado originalmente declarado. PHP no registra el valor predeterminado originalmente declarado de ninguna variable est&amp;aacute;tica.</target>
        </trans-unit>
        <trans-unit id="10135c7a0d20a7937f2ca7b201399b947fdd7b37" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@before&lt;/code&gt; annotation can be used to specify methods that should be called before each test method in a test case class.</source>
          <target state="translated">La anotaci&amp;oacute;n &lt;code&gt;@before&lt;/code&gt; se puede usar para especificar m&amp;eacute;todos que deben llamarse antes de cada m&amp;eacute;todo de prueba en una clase de caso de prueba.</target>
        </trans-unit>
        <trans-unit id="22f032c688f84c9415d233752d94e06e178f4dc7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@beforeClass&lt;/code&gt; annotation can be used to specify static methods that should be called before any test methods in a test class are run to set up shared fixtures.</source>
          <target state="translated">La anotaci&amp;oacute;n &lt;code&gt;@beforeClass&lt;/code&gt; se puede usar para especificar m&amp;eacute;todos est&amp;aacute;ticos que deben llamarse antes de que se ejecute cualquier m&amp;eacute;todo de prueba en una clase de prueba para configurar dispositivos compartidos.</target>
        </trans-unit>
        <trans-unit id="5173a7aa46cf8222c1771ba4036ebe556abeb571" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@codeCoverageIgnore&lt;/code&gt;, &lt;code&gt;@codeCoverageIgnoreStart&lt;/code&gt; and &lt;code&gt;@codeCoverageIgnoreEnd&lt;/code&gt; annotations can be used to exclude lines of code from the coverage analysis.</source>
          <target state="translated">Las &lt;code&gt;@codeCoverageIgnore&lt;/code&gt; , &lt;code&gt;@codeCoverageIgnoreStart&lt;/code&gt; y &lt;code&gt;@codeCoverageIgnoreEnd&lt;/code&gt; se pueden utilizar para excluir l&amp;iacute;neas de c&amp;oacute;digo del an&amp;aacute;lisis de cobertura.</target>
        </trans-unit>
        <trans-unit id="7f4dccfa8c4078240d93bb5b8f4bfd5e02da68ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@covers&lt;/code&gt; annotation (see &lt;a href=&quot;appendixes.annotations#appendixes.annotations.covers.tables.annotations&quot;&gt;Table B.1&lt;/a&gt;) can be used in the test code to specify which method(s) a test method wants to test. If provided, only the code coverage information for the specified method(s) will be considered. &lt;a href=&quot;code-coverage-analysis#code-coverage-analysis.specifying-covered-methods.examples.BankAccountTest.php&quot;&gt;Example 11.2&lt;/a&gt; shows an example.</source>
          <target state="translated">La anotaci&amp;oacute;n &lt;code&gt;@covers&lt;/code&gt; (consulte la &lt;a href=&quot;appendixes.annotations#appendixes.annotations.covers.tables.annotations&quot;&gt;Tabla B.1&lt;/a&gt; ) se puede utilizar en el c&amp;oacute;digo de prueba para especificar qu&amp;eacute; m&amp;eacute;todo (s) desea probar un m&amp;eacute;todo de prueba. Si se proporciona, solo se considerar&amp;aacute; la informaci&amp;oacute;n de cobertura del c&amp;oacute;digo para el m&amp;eacute;todo o m&amp;eacute;todos especificados. &lt;a href=&quot;code-coverage-analysis#code-coverage-analysis.specifying-covered-methods.examples.BankAccountTest.php&quot;&gt;El ejemplo 11.2&lt;/a&gt; muestra un ejemplo.</target>
        </trans-unit>
        <trans-unit id="c854a797757c5c72b7f476a61b00450a49709e5b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@covers&lt;/code&gt; annotation can be used in the test code to specify which method(s) a test method wants to test:</source>
          <target state="translated">La anotaci&amp;oacute;n &lt;code&gt;@covers&lt;/code&gt; se puede usar en el c&amp;oacute;digo de prueba para especificar qu&amp;eacute; m&amp;eacute;todo (s) quiere probar un m&amp;eacute;todo de prueba:</target>
        </trans-unit>
        <trans-unit id="0c7409635f4aa8c2cdbaefef11ccc2ab0594b5fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@coversDefaultClass&lt;/code&gt; annotation can be used to specify a default namespace or class name. That way long names don't need to be repeated for every &lt;code&gt;@covers&lt;/code&gt; annotation. See &lt;a href=&quot;appendixes.annotations#appendixes.annotations.examples.CoversDefaultClassTest.php&quot;&gt;Example B.1&lt;/a&gt;.</source>
          <target state="translated">La anotaci&amp;oacute;n &lt;code&gt;@coversDefaultClass&lt;/code&gt; se puede utilizar para especificar un espacio de nombres predeterminado o un nombre de clase. De esa forma, no es necesario repetir los nombres largos para cada anotaci&amp;oacute;n &lt;code&gt;@covers&lt;/code&gt; . Vea el &lt;a href=&quot;appendixes.annotations#appendixes.annotations.examples.CoversDefaultClassTest.php&quot;&gt;ejemplo B.1&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="eeb6e1ced584fa86dc65ef7258086b6713ab60c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@coversNothing&lt;/code&gt; annotation can be used in the test code to specify that no code coverage information will be recorded for the annotated test case.</source>
          <target state="translated">La anotaci&amp;oacute;n &lt;code&gt;@coversNothing&lt;/code&gt; se puede utilizar en el c&amp;oacute;digo de prueba para especificar que no se registrar&amp;aacute; informaci&amp;oacute;n de cobertura de c&amp;oacute;digo para el caso de prueba anotado.</target>
        </trans-unit>
        <trans-unit id="d0d0d6147c40563f5255921b01f59f4ca39cb8d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@expectedExceptionCode&lt;/code&gt; annotation, in conjunction with the &lt;code&gt;@expectedException&lt;/code&gt; allows making assertions on the error code of a thrown exception thus being able to narrow down a specific exception.</source>
          <target state="translated">La anotaci&amp;oacute;n &lt;code&gt;@expectedExceptionCode&lt;/code&gt; , junto con la &lt;code&gt;@expectedException&lt;/code&gt; , permite hacer afirmaciones sobre el c&amp;oacute;digo de error de una excepci&amp;oacute;n lanzada y as&amp;iacute; poder reducir una excepci&amp;oacute;n espec&amp;iacute;fica.</target>
        </trans-unit>
        <trans-unit id="42cfa1ee7a5b14f768050b2cf0fc9bc927b3fa13" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@expectedExceptionMessage&lt;/code&gt; annotation works similar to &lt;code&gt;@expectedExceptionCode&lt;/code&gt; as it lets you make an assertion on the error message of an exception.</source>
          <target state="translated">La anotaci&amp;oacute;n &lt;code&gt;@expectedExceptionMessage&lt;/code&gt; funciona de manera similar a &lt;code&gt;@expectedExceptionCode&lt;/code&gt; , ya que le permite hacer una afirmaci&amp;oacute;n en el mensaje de error de una excepci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="a24520f213fda3f1ebc22a27c479f3e5c535c923" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@large&lt;/code&gt; annotation is an alias for &lt;code&gt;@group large&lt;/code&gt;.</source>
          <target state="translated">La anotaci&amp;oacute;n &lt;code&gt;@large&lt;/code&gt; es un alias de &lt;code&gt;@group large&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="524eb1bc8010ceada6555f13e7c804f3587a642d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@medium&lt;/code&gt; annotation is an alias for &lt;code&gt;@group medium&lt;/code&gt;. A medium test must not depend on a test marked as &lt;code&gt;@large&lt;/code&gt;.</source>
          <target state="translated">La anotaci&amp;oacute;n &lt;code&gt;@medium&lt;/code&gt; es un alias para &lt;code&gt;@group medium&lt;/code&gt; . Una prueba media no debe depender de una prueba marcada como &lt;code&gt;@large&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4210cf68e7cb5df0f98805f63b23b53972d17352" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@requires&lt;/code&gt; annotation can be used to skip tests when common preconditions, like the PHP Version or installed extensions, are not met.</source>
          <target state="translated">La anotaci&amp;oacute;n &lt;code&gt;@requires&lt;/code&gt; se puede usar para omitir pruebas cuando no se cumplen las condiciones previas comunes, como la versi&amp;oacute;n PHP o las extensiones instaladas.</target>
        </trans-unit>
        <trans-unit id="cb7ee1473f0e238baa8ff4a6c666e91bf98b5223" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@small&lt;/code&gt; annotation is an alias for &lt;code&gt;@group small&lt;/code&gt;. A small test must not depend on a test marked as &lt;code&gt;@medium&lt;/code&gt; or &lt;code&gt;@large&lt;/code&gt;.</source>
          <target state="translated">La anotaci&amp;oacute;n &lt;code&gt;@small&lt;/code&gt; es un alias de &lt;code&gt;@group small&lt;/code&gt; . Una peque&amp;ntilde;a prueba no debe depender de una prueba marcada como &lt;code&gt;@medium&lt;/code&gt; o &lt;code&gt;@large&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6086125621e0aa93a949eb49f9321713c29988a4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@uses&lt;/code&gt; annotation specifies code which will be executed by a test, but is not intended to be covered by the test. A good example is a value object which is necessary for testing a unit of code.</source>
          <target state="translated">La anotaci&amp;oacute;n &lt;code&gt;@uses&lt;/code&gt; especifica el c&amp;oacute;digo que se ejecutar&amp;aacute; mediante una prueba, pero no est&amp;aacute; destinado a ser cubierto por la prueba. Un buen ejemplo es un objeto de valor que es necesario para probar una unidad de c&amp;oacute;digo.</target>
        </trans-unit>
        <trans-unit id="950a91e85f37ddff185d1991094f06b46387ef0c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PHPUnit_Framework_Test&lt;/code&gt; interface is narrow and easy to implement. You can write an implementation of &lt;code&gt;PHPUnit_Framework_Test&lt;/code&gt; that is simpler than &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt; and that runs &lt;em&gt;data-driven tests&lt;/em&gt;, for instance.</source>
          <target state="translated">La interfaz &lt;code&gt;PHPUnit_Framework_Test&lt;/code&gt; es estrecha y f&amp;aacute;cil de implementar. Puede escribir una implementaci&amp;oacute;n de &lt;code&gt;PHPUnit_Framework_Test&lt;/code&gt; que sea m&amp;aacute;s simple que &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt; y que ejecute &lt;em&gt;pruebas basadas en datos&lt;/em&gt; , por ejemplo.</target>
        </trans-unit>
        <trans-unit id="a904bd1e6e4187e27f5d2c16c87c9d1acffd7d99" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;callback()&lt;/code&gt; constraint can be used for more complex argument verification. This constraint takes a PHP callback as its only argument. The PHP callback will receive the argument to be verified as its only argument and should return &lt;code&gt;true&lt;/code&gt; if the argument passes verification and &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">La restricci&amp;oacute;n &lt;code&gt;callback()&lt;/code&gt; se puede utilizar para una verificaci&amp;oacute;n de argumentos m&amp;aacute;s compleja. Esta restricci&amp;oacute;n toma una devoluci&amp;oacute;n de llamada de PHP como &amp;uacute;nico argumento. La devoluci&amp;oacute;n de llamada de PHP recibir&amp;aacute; el argumento para ser verificado como su &amp;uacute;nico argumento y deber&amp;iacute;a devolver &lt;code&gt;true&lt;/code&gt; si el argumento pasa la verificaci&amp;oacute;n y &lt;code&gt;false&lt;/code&gt; caso contrario.</target>
        </trans-unit>
        <trans-unit id="202c3266ea8ba4fabd9b5b814eb0b0b73004584c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;createDataSet()&lt;/code&gt; method creates a Database (DB) DataSet as described in the DataSet implementations section.</source>
          <target state="translated">El m&amp;eacute;todo &lt;code&gt;createDataSet()&lt;/code&gt; crea un DataSet de base de datos (DB) como se describe en la secci&amp;oacute;n de implementaciones de DataSet.</target>
        </trans-unit>
        <trans-unit id="96cb14a32952593c11cf3798c4f36e2246dfc5bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;createMock($type)&lt;/code&gt; and &lt;code&gt;getMockBuilder($type)&lt;/code&gt; methods provided by PHPUnit can be used in a test to automatically generate an object that can act as a test double for the specified original type (interface or class name). This test double object can be used in every context where an object of the original type is expected or required.</source>
          <target state="translated">Los &lt;code&gt;createMock($type)&lt;/code&gt; y &lt;code&gt;getMockBuilder($type)&lt;/code&gt; proporcionados por PHPUnit se pueden usar en una prueba para generar autom&amp;aacute;ticamente un objeto que pueda actuar como un doble de prueba para el tipo original especificado (interfaz o nombre de clase). Este objeto doble de prueba se puede utilizar en todos los contextos en los que se espera o requiere un objeto del tipo original.</target>
        </trans-unit>
        <trans-unit id="fe3df3bd94e0dd3a8f67ab7980e647c17ba25535" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;createMock($type)&lt;/code&gt; method immediately returns a test double object for the specified type (interface or class). The creation of this test double is performed using best practice defaults (the &lt;code&gt;__construct()&lt;/code&gt; and &lt;code&gt;__clone()&lt;/code&gt; methods of the original class are not executed) and the arguments passed to a method of the test double will not be cloned. If these defaults are not what you need then you can use the &lt;code&gt;getMockBuilder($type)&lt;/code&gt; method to customize the test double generation using a fluent interface.</source>
          <target state="translated">El &lt;code&gt;createMock($type)&lt;/code&gt; devuelve inmediatamente un objeto doble de prueba para el tipo especificado (interfaz o clase). La creaci&amp;oacute;n de este doble de prueba se realiza utilizando los valores predeterminados de las mejores pr&amp;aacute;cticas (los &lt;code&gt;__construct()&lt;/code&gt; y &lt;code&gt;__clone()&lt;/code&gt; de la clase original no se ejecutan) y los argumentos pasados ​​a un m&amp;eacute;todo del doble de prueba no se clonar&amp;aacute;n. Si estos valores predeterminados no son los que necesita, puede utilizar el &lt;code&gt;getMockBuilder($type)&lt;/code&gt; para personalizar la prueba de doble generaci&amp;oacute;n utilizando una interfaz fluida.</target>
        </trans-unit>
        <trans-unit id="fc2e07998e9233b8a77ed3de3cb46e852c1a6d70" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;createQueryTable()&lt;/code&gt; method can be used to create instances of a QueryTable, give them a result name and SQL query. This is a handy method when it comes to result/table assertions as will be shown in the next section on the Database Assertions API.</source>
          <target state="translated">El m&amp;eacute;todo &lt;code&gt;createQueryTable()&lt;/code&gt; se puede utilizar para crear instancias de una QueryTable, darles un nombre de resultado y una consulta SQL. Este es un m&amp;eacute;todo &amp;uacute;til cuando se trata de aserciones de resultados / tablas, como se mostrar&amp;aacute; en la siguiente secci&amp;oacute;n de la API de aserciones de base de datos.</target>
        </trans-unit>
        <trans-unit id="9bc71c2321b4100a158a657c32ddea3e71dcda9a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getDataSet()&lt;/code&gt; method defines how the initial state of the database should look before each test is executed. The state of a database is abstracted through the concepts DataSet and DataTable both being represented by the interfaces &lt;code&gt;PHPUnit_Extensions_Database_DataSet_IDataSet&lt;/code&gt; and &lt;code&gt;PHPUnit_Extensions_Database_DataSet_IDataTable&lt;/code&gt;. The next section will describe in detail how these concepts work and what the benefits are for using them in database testing.</source>
          <target state="translated">El m&amp;eacute;todo &lt;code&gt;getDataSet()&lt;/code&gt; define c&amp;oacute;mo debe verse el estado inicial de la base de datos antes de que se ejecute cada prueba. El estado de una base de datos se abstrae a trav&amp;eacute;s de los conceptos DataSet y DataTable, ambos representados por las interfaces &lt;code&gt;PHPUnit_Extensions_Database_DataSet_IDataSet&lt;/code&gt; y &lt;code&gt;PHPUnit_Extensions_Database_DataSet_IDataTable&lt;/code&gt; . La siguiente secci&amp;oacute;n describir&amp;aacute; en detalle c&amp;oacute;mo funcionan estos conceptos y cu&amp;aacute;les son los beneficios de usarlos en las pruebas de bases de datos.</target>
        </trans-unit>
        <trans-unit id="4f04f73e70a7e0224c4bca069e8af15aaa70a3e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getMockForAbstractClass()&lt;/code&gt; method returns a mock object for an abstract class. All abstract methods of the given abstract class are mocked. This allows for testing the concrete methods of an abstract class.</source>
          <target state="translated">El m&amp;eacute;todo &lt;code&gt;getMockForAbstractClass()&lt;/code&gt; devuelve un objeto simulado para una clase abstracta. Se simulan todos los m&amp;eacute;todos abstractos de la clase abstracta dada. Esto permite probar los m&amp;eacute;todos concretos de una clase abstracta.</target>
        </trans-unit>
        <trans-unit id="f67ec389a5cdc252d240635ac2ffeb2b8c82052b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getMockForTrait()&lt;/code&gt; method returns a mock object that uses a specified trait. All abstract methods of the given trait are mocked. This allows for testing the concrete methods of a trait.</source>
          <target state="translated">El m&amp;eacute;todo &lt;code&gt;getMockForTrait()&lt;/code&gt; devuelve un objeto simulado que usa un rasgo espec&amp;iacute;fico. Todos los m&amp;eacute;todos abstractos del rasgo dado son objeto de burla. Esto permite probar los m&amp;eacute;todos concretos de un rasgo.</target>
        </trans-unit>
        <trans-unit id="48e220439ed3e811cc4b8b3597fca597ab896d95" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getRowCount()&lt;/code&gt; method is a convienent way to access the number of rows in a table, optionally filtered by an additional where clause. This can be used with a simple equality assertion:</source>
          <target state="translated">El m&amp;eacute;todo &lt;code&gt;getRowCount()&lt;/code&gt; es una forma conveniente de acceder al n&amp;uacute;mero de filas en una tabla, opcionalmente filtrado por una cl&amp;aacute;usula adicional where. Esto se puede usar con una simple aserci&amp;oacute;n de igualdad:</target>
        </trans-unit>
        <trans-unit id="a3829ccfd52529ef8a2b57cfa4b7ffa3ed5c7326" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lowUpperBound&lt;/code&gt;, &lt;code&gt;highLowerBound&lt;/code&gt;, &lt;code&gt;logIncompleteSkipped&lt;/code&gt; and &lt;code&gt;showUncoveredFiles&lt;/code&gt; attributes have no equivalent TextUI test runner option.</source>
          <target state="translated">Los &lt;code&gt;lowUpperBound&lt;/code&gt; , &lt;code&gt;highLowerBound&lt;/code&gt; , &lt;code&gt;logIncompleteSkipped&lt;/code&gt; y &lt;code&gt;showUncoveredFiles&lt;/code&gt; no tienen una opci&amp;oacute;n de ejecuci&amp;oacute;n de prueba TextUI equivalente.</target>
        </trans-unit>
        <trans-unit id="0c293b7026d2e277660bfa6a863309870c93f5b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;phpVersionOperator&lt;/code&gt; attribute is optional and defaults to &lt;code&gt;&amp;gt;=&lt;/code&gt;.</source>
          <target state="translated">El atributo &lt;code&gt;phpVersionOperator&lt;/code&gt; es opcional y su valor predeterminado es &lt;code&gt;&amp;gt;=&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f1c42bbe39027f596994d55f5371b020447fb26" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setUp()&lt;/code&gt; and &lt;code&gt;tearDown()&lt;/code&gt; template methods are run once for each test method (and on fresh instances) of the test case class.</source>
          <target state="translated">Los m&amp;eacute;todos de plantilla &lt;code&gt;setUp()&lt;/code&gt; y &lt;code&gt;tearDown()&lt;/code&gt; se ejecutan una vez para cada m&amp;eacute;todo de prueba (y en instancias nuevas) de la clase de caso de prueba.</target>
        </trans-unit>
        <trans-unit id="5d88da73ee25b6088aca5a4fc663aee5ac38ae7d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;with()&lt;/code&gt; method can take any number of arguments, corresponding to the number of arguments to the method being mocked. You can specify more advanced constraints on the method's arguments than a simple match.</source>
          <target state="translated">El m&amp;eacute;todo &lt;code&gt;with()&lt;/code&gt; puede tomar cualquier n&amp;uacute;mero de argumentos, correspondiente al n&amp;uacute;mero de argumentos del m&amp;eacute;todo que se est&amp;aacute; simulando. Puede especificar restricciones m&amp;aacute;s avanzadas en los argumentos del m&amp;eacute;todo que una simple coincidencia.</target>
        </trans-unit>
        <trans-unit id="5535c5ea12f13f6f61c70b489f55f06b3dab0790" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;withConsecutive()&lt;/code&gt; method can take any number of arrays of arguments, depending on the calls you want to test against. Each array is a list of constraints corresponding to the arguments of the method being mocked, like in &lt;code&gt;with()&lt;/code&gt;.</source>
          <target state="translated">El m&amp;eacute;todo &lt;code&gt;withConsecutive()&lt;/code&gt; puede tomar cualquier n&amp;uacute;mero de matrices de argumentos, dependiendo de las llamadas con las que desee realizar la prueba. Cada matriz es una lista de restricciones correspondientes a los argumentos del m&amp;eacute;todo que se est&amp;aacute; imitando, como &lt;code&gt;with()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3289d1d490b1211a24481f134ba229a757161fb7" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Branch Coverage&lt;/em&gt; software metric measures whether the boolean expression of each control structure evaluated to both &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; while running the test suite.</source>
          <target state="translated">La m&amp;eacute;trica del software &lt;em&gt;Branch Coverage&lt;/em&gt; mide si la expresi&amp;oacute;n booleana de cada estructura de control se evalu&amp;oacute; como &lt;code&gt;true&lt;/code&gt; y &lt;code&gt;false&lt;/code&gt; mientras se ejecuta el conjunto de pruebas.</target>
        </trans-unit>
        <trans-unit id="75bd0043f046af43dc02c072fc47f32549185e42" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Change Risk Anti-Patterns (CRAP) Index&lt;/em&gt; is calculated based on the cyclomatic complexity and code coverage of a unit of code. Code that is not too complex and has an adequate test coverage will have a low CRAP index. The CRAP index can be lowered by writing tests and by refactoring the code to lower its complexity.</source>
          <target state="translated">El &lt;em&gt;&amp;iacute;ndice de anti-patrones de riesgo de cambio (CRAP)&lt;/em&gt; se calcula en funci&amp;oacute;n de la complejidad ciclom&amp;aacute;tica y la cobertura de c&amp;oacute;digo de una unidad de c&amp;oacute;digo. El c&amp;oacute;digo que no sea demasiado complejo y tenga una cobertura de prueba adecuada tendr&amp;aacute; un &amp;iacute;ndice CRAP bajo. El &amp;iacute;ndice CRAP se puede reducir escribiendo pruebas y refactorizando el c&amp;oacute;digo para reducir su complejidad.</target>
        </trans-unit>
        <trans-unit id="7ca5e556ff470862978361c3f8a4a70ed0418b08" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Class and Trait Coverage&lt;/em&gt; software metric measures whether each method of a class or trait is covered. PHP_CodeCoverage only considers a class or trait as covered when all of its methods are covered.</source>
          <target state="translated">La m&amp;eacute;trica del software &lt;em&gt;Cobertura de clase y rasgo&lt;/em&gt; mide si se cubre cada m&amp;eacute;todo de una clase o rasgo. PHP_CodeCoverage solo considera una clase o rasgo como cubierto cuando todos sus m&amp;eacute;todos est&amp;aacute;n cubiertos.</target>
        </trans-unit>
        <trans-unit id="317ecab3860fdcb769ef4c8135514ad36813753b" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Function and Method Coverage&lt;/em&gt; software metric measures whether each function or method has been invoked. PHP_CodeCoverage only considers a function or method as covered when all of its executable lines are covered.</source>
          <target state="translated">La m&amp;eacute;trica del software &lt;em&gt;Cobertura de funci&amp;oacute;n y m&amp;eacute;todo&lt;/em&gt; mide si se ha invocado cada funci&amp;oacute;n o m&amp;eacute;todo. PHP_CodeCoverage solo considera una funci&amp;oacute;n o m&amp;eacute;todo como cubierto cuando se cubren todas sus l&amp;iacute;neas ejecutables.</target>
        </trans-unit>
        <trans-unit id="a3e00b27ed3c8c9e3c913f3e009024ad23ce299a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Line Coverage&lt;/em&gt; software metric measures whether each executable line was executed.</source>
          <target state="translated">La m&amp;eacute;trica del software &lt;em&gt;Line Coverage&lt;/em&gt; mide si se ejecut&amp;oacute; cada l&amp;iacute;nea ejecutable.</target>
        </trans-unit>
        <trans-unit id="740d442f8ae7c1731b89853b522e0965ad3cb227" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Opcode Coverage&lt;/em&gt; software metric measures whether each opcode of a function or method has been executed while running the test suite. A line of code usually compiles into more than one opcode. Line Coverage regards a line of code as covered as soon as one of its opcodes is executed.</source>
          <target state="translated">La m&amp;eacute;trica del software &lt;em&gt;Opcode Coverage&lt;/em&gt; mide si cada c&amp;oacute;digo de operaci&amp;oacute;n de una funci&amp;oacute;n o m&amp;eacute;todo se ha ejecutado mientras se ejecuta el conjunto de pruebas. Una l&amp;iacute;nea de c&amp;oacute;digo generalmente se compila en m&amp;aacute;s de un c&amp;oacute;digo de operaci&amp;oacute;n. La cobertura de l&amp;iacute;nea considera que una l&amp;iacute;nea de c&amp;oacute;digo est&amp;aacute; cubierta tan pronto como se ejecuta uno de sus c&amp;oacute;digos de operaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="5ae5f41e411de482807718cc752c2300661c9307" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Opcode Coverage&lt;/em&gt;, &lt;em&gt;Branch Coverage&lt;/em&gt;, and &lt;em&gt;Path Coverage&lt;/em&gt; software metrics are not yet supported by PHP_CodeCoverage.</source>
          <target state="translated">La &lt;em&gt;cobertura de c&amp;oacute;digo de operaci&amp;oacute;n&lt;/em&gt; , &lt;em&gt;cobertura de sucursales&lt;/em&gt; , y la &lt;em&gt;ruta de cobertura&lt;/em&gt; m&amp;eacute;tricas de software a&amp;uacute;n no son compatibles con PHP_CodeCoverage.</target>
        </trans-unit>
        <trans-unit id="44ceda66b28187bce309b90da1080641efa0ff7d" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Path Coverage&lt;/em&gt; software metric measures whether each of the possible execution paths in a function or method has been followed while running the test suite. An execution path is a unique sequence of branches from the entry of the function or method to its exit.</source>
          <target state="translated">La m&amp;eacute;trica del software &lt;em&gt;Path Coverage&lt;/em&gt; mide si se ha seguido cada una de las posibles rutas de ejecuci&amp;oacute;n en una funci&amp;oacute;n o m&amp;eacute;todo mientras se ejecuta el conjunto de pruebas. Una ruta de ejecuci&amp;oacute;n es una secuencia &amp;uacute;nica de ramas desde la entrada de la funci&amp;oacute;n o m&amp;eacute;todo hasta su salida.</target>
        </trans-unit>
        <trans-unit id="8e5ac66657c2e1ac2e74cd490e2d0c91dab1ab5f" translate="yes" xml:space="preserve">
          <source>The Command-Line Test Runner</source>
          <target state="translated">El corredor de pruebas de la línea de mando</target>
        </trans-unit>
        <trans-unit id="89643cbcfec4ebddcde9f596d3f447b152bceb0f" translate="yes" xml:space="preserve">
          <source>The Connection API</source>
          <target state="translated">La conexión API</target>
        </trans-unit>
        <trans-unit id="417947145a9ca2e6538cafe6cf0228fbb8fba1a8" translate="yes" xml:space="preserve">
          <source>The DbUnit extension considerably simplifies the setup of a database for testing purposes and allows you to verify the contents of a database after performing a series of operations.</source>
          <target state="translated">La extensión DbUnit simplifica considerablemente la configuración de una base de datos con fines de prueba y permite verificar el contenido de una base de datos después de realizar una serie de operaciones.</target>
        </trans-unit>
        <trans-unit id="c99595fb95da146c7d10826cba92b99d6fe65f8f" translate="yes" xml:space="preserve">
          <source>The PHPUnit command-line test runner can be invoked through the &lt;code&gt;phpunit&lt;/code&gt; command. The following code shows how to run tests with the PHPUnit command-line test runner:</source>
          <target state="translated">El ejecutor de prueba de la l&amp;iacute;nea de comandos PHPUnit se puede invocar a trav&amp;eacute;s del comando &lt;code&gt;phpunit&lt;/code&gt; . El siguiente c&amp;oacute;digo muestra c&amp;oacute;mo ejecutar pruebas con el ejecutor de pruebas de l&amp;iacute;nea de comandos PHPUnit:</target>
        </trans-unit>
        <trans-unit id="310f3619cb946a7ab9e348b5998a338fe3b10370" translate="yes" xml:space="preserve">
          <source>The Replacement DataSet is a decorator for an existing dataset and allows you to replace values in any column of the dataset by another replacement value. To get our guestbook example working with NULL values we specify the file like:</source>
          <target state="translated">El Replacement DataSet es un decorador para un conjunto de datos existente y permite sustituir los valores de cualquier columna del conjunto de datos por otro valor de sustitución.Para obtener nuestro ejemplo del libro de visitas trabajando con valores NULL especificamos el archivo como:</target>
        </trans-unit>
        <trans-unit id="cb8dd646d83fb42929349206c9708f6415294d73" translate="yes" xml:space="preserve">
          <source>The SubSection &amp;ldquo;Use your own Abstract Database TestCase&amp;rdquo; shows how you can prevent this error from happening by using a single cached PDO instance in all your tests.</source>
          <target state="translated">La subsecci&amp;oacute;n &amp;ldquo;Use su propio caso de prueba de base de datos abstracta&amp;rdquo; muestra c&amp;oacute;mo puede evitar que suceda este error utilizando una sola instancia de PDO almacenada en cach&amp;eacute; en todas sus pruebas.</target>
        </trans-unit>
        <trans-unit id="764e63549ba7f657590ece0d4d401c1b245a0bd7" translate="yes" xml:space="preserve">
          <source>The XML Configuration File</source>
          <target state="translated">El archivo de configuración XML</target>
        </trans-unit>
        <trans-unit id="228b64dad9196904d05e4eb0ba453e6bcd25efa6" translate="yes" xml:space="preserve">
          <source>The XML configuration above corresponds to attaching the &lt;code&gt;$listener&lt;/code&gt; object (see below) to the test execution:</source>
          <target state="translated">La configuraci&amp;oacute;n XML anterior corresponde a adjuntar el objeto &lt;code&gt;$listener&lt;/code&gt; (ver m&amp;aacute;s abajo) a la ejecuci&amp;oacute;n de la prueba:</target>
        </trans-unit>
        <trans-unit id="75818fb49b97cd4fd720df8caad421d4191360b0" translate="yes" xml:space="preserve">
          <source>The XML configuration above corresponds to invoking the TextUI test runner with the following options:</source>
          <target state="translated">La configuración XML anterior corresponde a la invocación del corredor de prueba TextUI con las siguientes opciones:</target>
        </trans-unit>
        <trans-unit id="a4645a5b0cde6fb40a868281ef35b5ba30a3f1b2" translate="yes" xml:space="preserve">
          <source>The XML configuration above corresponds to the default behaviour of the TextUI test runner documented in &lt;a href=&quot;textui#textui.clioptions&quot;&gt;the section called &amp;ldquo;Command-Line Options&amp;rdquo;&lt;/a&gt;.</source>
          <target state="translated">La configuraci&amp;oacute;n XML anterior corresponde al comportamiento predeterminado del ejecutor de pruebas TextUI documentado en &lt;a href=&quot;textui#textui.clioptions&quot;&gt;la secci&amp;oacute;n llamada &quot;Opciones de la l&amp;iacute;nea de comandos&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0d2c27092bc84d0565c7e4b1a8daf95e5cded85f" translate="yes" xml:space="preserve">
          <source>The XML configuration above corresponds to the following PHP code:</source>
          <target state="translated">La configuración XML anterior corresponde al siguiente código PHP:</target>
        </trans-unit>
        <trans-unit id="26031d42845eb0f16ff5084563b8951b2dd38d1d" translate="yes" xml:space="preserve">
          <source>The XML format for code coverage information logging produced by PHPUnit is loosely based upon the one used by &lt;a href=&quot;http://www.atlassian.com/software/clover/&quot;&gt; Clover&lt;/a&gt;. The following example shows the XML logfile generated for the tests in &lt;code&gt;BankAccountTest&lt;/code&gt;:</source>
          <target state="translated">El formato XML para el registro de informaci&amp;oacute;n de cobertura de c&amp;oacute;digo producido por PHPUnit se basa libremente en el utilizado por &lt;a href=&quot;http://www.atlassian.com/software/clover/&quot;&gt;Clover&lt;/a&gt; . El siguiente ejemplo muestra el archivo de registro XML generado para las pruebas en &lt;code&gt;BankAccountTest&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cbbdb971258a9c2f1b86b907f07edc9b999f5295" translate="yes" xml:space="preserve">
          <source>The XML logfile for test results produced by PHPUnit is based upon the one used by the &lt;a href=&quot;http://ant.apache.org/manual/Tasks/junit.html&quot;&gt;JUnit task for Apache Ant&lt;/a&gt;. The following example shows the XML logfile generated for the tests in &lt;code&gt;ArrayTest&lt;/code&gt;:</source>
          <target state="translated">El archivo de registro XML para los resultados de las pruebas producidas por PHPUnit se basa en el utilizado por la &lt;a href=&quot;http://ant.apache.org/manual/Tasks/junit.html&quot;&gt;tarea JUnit para Apache Ant&lt;/a&gt; . El siguiente ejemplo muestra el archivo de registro XML generado para las pruebas en &lt;code&gt;ArrayTest&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="43cb67b01c7336c045798c5c8b1b7bd84b8e98e2" translate="yes" xml:space="preserve">
          <source>The YAML Dataset has no factory method on the Database TestCase currently, so you have to instantiate it manually:</source>
          <target state="translated">El conjunto de datos de YAML no tiene ningún método de fábrica en la base de datos TestCase actualmente,así que tienes que instanciarlo manualmente:</target>
        </trans-unit>
        <trans-unit id="4001c71f53f3a420ee4920e20a8d4d5f7c188336" translate="yes" xml:space="preserve">
          <source>The adjusted &lt;em&gt;expectedBook.xml&lt;/em&gt; Flat XML file would probably have to look like the following to make the assertion pass:</source>
          <target state="translated">El archivo XML plano &lt;em&gt;esperado de&lt;/em&gt; libro.xml ajustado probablemente tendr&amp;iacute;a que tener el siguiente aspecto para que la aserci&amp;oacute;n pase:</target>
        </trans-unit>
        <trans-unit id="817fd37fa940844c93a3db87cceac4f92613aaed" translate="yes" xml:space="preserve">
          <source>The annotation can be used on the class and the method level and will override any &lt;code&gt;@covers&lt;/code&gt; tags.</source>
          <target state="translated">La anotaci&amp;oacute;n se puede usar en el nivel de clase y m&amp;eacute;todo y anular&amp;aacute; cualquier etiqueta &lt;code&gt;@covers&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="17ecf26b1f7c08e938f420330b7a07a5cffda992" translate="yes" xml:space="preserve">
          <source>The approach above has several drawbacks:</source>
          <target state="translated">El enfoque anterior tiene varios inconvenientes:</target>
        </trans-unit>
        <trans-unit id="9c4fa902af70096427ee6125f242501b4715270b" translate="yes" xml:space="preserve">
          <source>The assertion methods are declared &lt;code&gt;static&lt;/code&gt; and can be invoked from any context using &lt;code&gt;PHPUnit\Framework\Assert::assertTrue()&lt;/code&gt;, for instance, or using &lt;code&gt;$this-&amp;gt;assertTrue()&lt;/code&gt; or &lt;code&gt;self::assertTrue()&lt;/code&gt;, for instance, in a class that extends &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt;.</source>
          <target state="translated">Los m&amp;eacute;todos de aserci&amp;oacute;n se declaran &lt;code&gt;static&lt;/code&gt; y se pueden invocar desde cualquier contexto usando &lt;code&gt;PHPUnit\Framework\Assert::assertTrue()&lt;/code&gt; , por ejemplo, o usando &lt;code&gt;$this-&amp;gt;assertTrue()&lt;/code&gt; o &lt;code&gt;self::assertTrue()&lt;/code&gt; , por ejemplo, en un clase que extiende &lt;code&gt;PHPUnit\Framework\TestCase&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f647813f91102b97725ba0cca72a2a6e9d8543d3" translate="yes" xml:space="preserve">
          <source>The attributes of the &lt;code&gt;&amp;lt;phpunit&amp;gt;&lt;/code&gt; element can be used to configure PHPUnit's core functionality.</source>
          <target state="translated">Los atributos del elemento &lt;code&gt;&amp;lt;phpunit&amp;gt;&lt;/code&gt; se pueden usar para configurar la funcionalidad principal de PHPUnit.</target>
        </trans-unit>
        <trans-unit id="bbb02dc0eb9f8e41a7f3640cc611093c964c82cd" translate="yes" xml:space="preserve">
          <source>The backup and restore operations for global variables and static class attributes use &lt;code&gt;serialize()&lt;/code&gt; and &lt;code&gt;unserialize()&lt;/code&gt;.</source>
          <target state="translated">Las operaciones de copia de seguridad y restauraci&amp;oacute;n para variables globales y atributos de clase est&amp;aacute;tica utilizan &lt;code&gt;serialize()&lt;/code&gt; y &lt;code&gt;unserialize()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e8318516d8bdf70614287e943186b66b21ec6b45" translate="yes" xml:space="preserve">
          <source>The backup and restore operations for global variables can be completely disabled for all tests of a test case class like this</source>
          <target state="translated">Las operaciones de copia de seguridad y restauración de las variables globales pueden ser completamente desactivadas para todas las pruebas de una clase de caso de prueba como esta</target>
        </trans-unit>
        <trans-unit id="89c1027002c8332ef0ed4348559458328c542f5a" translate="yes" xml:space="preserve">
          <source>The code communicates its design principles.</source>
          <target state="translated">El código comunica sus principios de diseño.</target>
        </trans-unit>
        <trans-unit id="d84402f7d03f44642669bf3b37df6d2c1d3ac5f2" translate="yes" xml:space="preserve">
          <source>The code contains no redundancies.</source>
          <target state="translated">El código no contiene ninguna redundancia.</target>
        </trans-unit>
        <trans-unit id="db2f2a3034f57717bc2ab060d56ccb8d8d2918c0" translate="yes" xml:space="preserve">
          <source>The code contains the minimal number of classes and methods.</source>
          <target state="translated">El código contiene el número mínimo de clases y métodos.</target>
        </trans-unit>
        <trans-unit id="c8f23824cc6c02b711fa422bddac9ca6317e27df" translate="yes" xml:space="preserve">
          <source>The code coverage report feature requires the &lt;a href=&quot;http://xdebug.org/&quot;&gt;Xdebug&lt;/a&gt; (2.5.0 or later) and &lt;a href=&quot;http://php.net/manual/en/tokenizer.installation.php&quot;&gt;tokenizer&lt;/a&gt; extensions. Generating XML reports requires the &lt;a href=&quot;http://php.net/manual/en/xmlwriter.installation.php&quot;&gt;xmlwriter&lt;/a&gt; extension.</source>
          <target state="translated">La funci&amp;oacute;n de informe de cobertura de c&amp;oacute;digo requiere las &lt;a href=&quot;http://xdebug.org/&quot;&gt;extensiones Xdebug&lt;/a&gt; (2.5.0 o posterior) y &lt;a href=&quot;http://php.net/manual/en/tokenizer.installation.php&quot;&gt;tokenizer&lt;/a&gt; . La generaci&amp;oacute;n de informes XML requiere la extensi&amp;oacute;n &lt;a href=&quot;http://php.net/manual/en/xmlwriter.installation.php&quot;&gt;xmlwriter&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ae886aff1d4bb7e4623342172c7ee9379e47e356" translate="yes" xml:space="preserve">
          <source>The composite DataSet is very useful for aggregating several already existing datasets into a single dataset. When several datasets contain the same table the rows are appended in the specified order. For example if we have two datasets &lt;em&gt;fixture1.xml&lt;/em&gt;:</source>
          <target state="translated">El conjunto de datos compuesto es muy &amp;uacute;til para agregar varios conjuntos de datos ya existentes en un solo conjunto de datos. Cuando varios conjuntos de datos contienen la misma tabla, las filas se agregan en el orden especificado. Por ejemplo, si tenemos dos conjuntos de datos &lt;em&gt;fixture1.xml&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="2d4a2061ea6a7410c1f0c4b56781ca6ed4e1dbbb" translate="yes" xml:space="preserve">
          <source>The database schema and tables</source>
          <target state="translated">El esquema de la base de datos y las tablas</target>
        </trans-unit>
        <trans-unit id="938c178311bb0af6c0d6c5bbea93006d94f5a118" translate="yes" xml:space="preserve">
          <source>The default test name format is the equivalent of using the &lt;code&gt;__METHOD__&lt;/code&gt; magic constant inside the test method.</source>
          <target state="translated">El formato de nombre de prueba predeterminado es el equivalente a usar la constante m&amp;aacute;gica &lt;code&gt;__METHOD__&lt;/code&gt; dentro del m&amp;eacute;todo de prueba.</target>
        </trans-unit>
        <trans-unit id="7bbc1742ec52ef9710087147de4efd64844996a4" translate="yes" xml:space="preserve">
          <source>The easiest way to obtain PHPUnit is to download a &lt;a href=&quot;http://php.net/phar&quot;&gt;PHP Archive (PHAR)&lt;/a&gt; that has all required (as well as some optional) dependencies of PHPUnit bundled in a single file.</source>
          <target state="translated">La forma m&amp;aacute;s f&amp;aacute;cil de obtener PHPUnit es descargar un &lt;a href=&quot;http://php.net/phar&quot;&gt;archivo PHP (PHAR)&lt;/a&gt; que tiene todas las dependencias requeridas (as&amp;iacute; como algunas opcionales) de PHPUnit agrupadas en un solo archivo.</target>
        </trans-unit>
        <trans-unit id="71c175c5291b428595e01b5b97f7fd89a34ff5ba" translate="yes" xml:space="preserve">
          <source>The effort of implementing the &lt;code&gt;assertTrue()&lt;/code&gt; and &lt;code&gt;isTrue()&lt;/code&gt; methods as well as the &lt;code&gt;PHPUnit_Framework_Constraint_IsTrue&lt;/code&gt; class yields the benefit that &lt;code&gt;assertThat()&lt;/code&gt; automatically takes care of evaluating the assertion and bookkeeping tasks such as counting it for statistics. Furthermore, the &lt;code&gt;isTrue()&lt;/code&gt; method can be used as a matcher when configuring mock objects.</source>
          <target state="translated">El esfuerzo de implementar los &lt;code&gt;assertTrue()&lt;/code&gt; e &lt;code&gt;isTrue()&lt;/code&gt; as&amp;iacute; como la clase &lt;code&gt;PHPUnit_Framework_Constraint_IsTrue&lt;/code&gt; produce el beneficio de que &lt;code&gt;assertThat()&lt;/code&gt; se encarga autom&amp;aacute;ticamente de evaluar la aserci&amp;oacute;n y las tareas de contabilidad, como contarla para las estad&amp;iacute;sticas. Adem&amp;aacute;s, el m&amp;eacute;todo &lt;code&gt;isTrue()&lt;/code&gt; se puede utilizar como comparador al configurar objetos simulados.</target>
        </trans-unit>
        <trans-unit id="10dfb122a8e8abb204758c4d444cf935f173050e" translate="yes" xml:space="preserve">
          <source>The example below shows all template methods that are available in a test case class.</source>
          <target state="translated">En el ejemplo que figura a continuación se muestran todos los métodos de plantilla disponibles en una clase de caso de prueba.</target>
        </trans-unit>
        <trans-unit id="f0191eb48825e581046f69f441455b1b4dd7a313" translate="yes" xml:space="preserve">
          <source>The example shown above only works when the original class does not declare a method named &quot;method&quot;.</source>
          <target state="translated">El ejemplo anterior sólo funciona cuando la clase original no declara un método llamado &quot;método&quot;.</target>
        </trans-unit>
        <trans-unit id="542526476171f549cd63c1b482aa12e5ac2e2c5e" translate="yes" xml:space="preserve">
          <source>The expected message can also be specified as a regular expression using the &lt;code&gt;@expectedExceptionMessageRegExp&lt;/code&gt; annotation. This is helpful for situations where a substring is not adequate for matching a given message.</source>
          <target state="translated">El mensaje esperado tambi&amp;eacute;n se puede especificar como una expresi&amp;oacute;n regular mediante la anotaci&amp;oacute;n &lt;code&gt;@expectedExceptionMessageRegExp&lt;/code&gt; . Esto es &amp;uacute;til para situaciones en las que una subcadena no es adecuada para hacer coincidir un mensaje determinado.</target>
        </trans-unit>
        <trans-unit id="3a988d61a0751672aaafde2cf98f863f01cffc3d" translate="yes" xml:space="preserve">
          <source>The expected message can be a substring of the exception Message. This can be useful to only assert that a certain name or parameter that was passed in shows up in the exception and not fixate the whole exception message in the test.</source>
          <target state="translated">El mensaje esperado puede ser una subcadena del mensaje de excepción.Esto puede ser útil para afirmar solamente que un determinado nombre o parámetro que se pasó en aparece en la excepción y no fijar todo el mensaje de excepción en la prueba.</target>
        </trans-unit>
        <trans-unit id="b14c86bca44a30a200c1de590f23e890b125bbd6" translate="yes" xml:space="preserve">
          <source>The file-based datasets and tables are generally used for the initial fixture and to describe the expected state of the database.</source>
          <target state="translated">Los conjuntos de datos y tablas basados en archivos se utilizan generalmente para el montaje inicial y para describir el estado previsto de la base de datos.</target>
        </trans-unit>
        <trans-unit id="626cef57956337081074e02c6e5a1eb0b1936d64" translate="yes" xml:space="preserve">
          <source>The flat xml dataset makes a crucial assumption now, defining that the attributes on the first defined row of a table define the columns of this table. In the previous example this would mean &amp;ldquo;id&amp;rdquo;, &amp;ldquo;content&amp;rdquo;, &amp;ldquo;user&amp;rdquo; and &amp;ldquo;created&amp;rdquo; are columns of the guestbook table. For the second row where &amp;ldquo;user&amp;rdquo; is not defined a NULL would be inserted into the database.</source>
          <target state="translated">El conjunto de datos xml plano hace una suposici&amp;oacute;n crucial ahora, definiendo que los atributos en la primera fila definida de una tabla definen las columnas de esta tabla. En el ejemplo anterior, esto significar&amp;iacute;a que &quot;id&quot;, &quot;contenido&quot;, &quot;usuario&quot; y &quot;creado&quot; son columnas de la tabla del libro de visitas. Para la segunda fila donde no se define &quot;usuario&quot;, se inserta un NULL en la base de datos.</target>
        </trans-unit>
        <trans-unit id="a3c4d50b1b8ad776f60daad1e986542d26adb9dc" translate="yes" xml:space="preserve">
          <source>The following XML logfile was generated for two tests, &lt;code&gt;testFailure&lt;/code&gt; and &lt;code&gt;testError&lt;/code&gt;, of a test case class named &lt;code&gt;FailureErrorTest&lt;/code&gt; and shows how failures and errors are denoted.</source>
          <target state="translated">El siguiente archivo de registro XML se gener&amp;oacute; para dos pruebas, &lt;code&gt;testFailure&lt;/code&gt; y &lt;code&gt;testError&lt;/code&gt; , de una clase de caso de prueba denominada &lt;code&gt;FailureErrorTest&lt;/code&gt; y muestra c&amp;oacute;mo se indican las fallas y los errores.</target>
        </trans-unit>
        <trans-unit id="8790de6b6ffc9899c041f8b3c0b1bc83bcb28c65" translate="yes" xml:space="preserve">
          <source>The following conditions will help you to improve the code and design of your project, while using unit tests to verify that the refactoring's transformation steps are, indeed, behavior-preserving and do not introduce errors:</source>
          <target state="translated">Las siguientes condiciones le ayudarán a mejorar el código y el diseño de su proyecto,a la vez que se utilizan pruebas unitarias para verificar que los pasos de transformación de la refactorización son,en efecto,conservadores del comportamiento y no introducen errores:</target>
        </trans-unit>
        <trans-unit id="7a14c0051ef28625d055434f6e70e2ba5f30d65d" translate="yes" xml:space="preserve">
          <source>The following example details how release verification works. We start by downloading &lt;code&gt;phpunit.phar&lt;/code&gt; as well as its detached PGP signature &lt;code&gt;phpunit.phar.asc&lt;/code&gt;:</source>
          <target state="translated">El siguiente ejemplo detalla c&amp;oacute;mo funciona la verificaci&amp;oacute;n de versiones. Comenzamos descargando &lt;code&gt;phpunit.phar&lt;/code&gt; , as&amp;iacute; como su firma PGP separada &lt;code&gt;phpunit.phar.asc&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="35faa202fa98bac6b163bda1061d6c07f0da8283" translate="yes" xml:space="preserve">
          <source>The following optional packages are available:</source>
          <target state="translated">Los siguientes paquetes opcionales están disponibles:</target>
        </trans-unit>
        <trans-unit id="1d21520321aef45cd8063336744f6a70f080fc19" translate="yes" xml:space="preserve">
          <source>The format string may contain the following placeholders:</source>
          <target state="translated">La cadena de formato puede contener los siguientes marcadores de posición:</target>
        </trans-unit>
        <trans-unit id="36fcd5239234f2eeefa02f5f9cf6be3da555413c" translate="yes" xml:space="preserve">
          <source>The four stages of a database test</source>
          <target state="translated">Las cuatro etapas de una prueba de la base de datos</target>
        </trans-unit>
        <trans-unit id="c6fd0d0f64f815eb09cc16a7d9bb07a3cf94e58b" translate="yes" xml:space="preserve">
          <source>The handling of NULL values with the flat xml dataset is tedious. A NULL value is different than an empty string value in almost any database (Oracle being an exception), something that is difficult to describe in the flat xml format. You can represent a NULL's value by omitting the attribute from the row specification. If our guestbook would allow anonymous entries represented by a NULL value in the user column, a hypothetical state of the guestbook table could look like:</source>
          <target state="translated">El manejo de los valores NULL con el conjunto de datos xml planos es tedioso.Un valor NULL es diferente a un valor de cadena vacía en casi cualquier base de datos (Oracle es una excepción),algo que es difícil de describir en el formato xml plano.Se puede representar el valor de un NULL omitiendo el atributo de la especificación de la fila.Si nuestro libro de visitas permitiera entradas anónimas representadas por un valor NULL en la columna del usuario,un hipotético estado de la tabla del libro de visitas podría parecer:</target>
        </trans-unit>
        <trans-unit id="57bd8c8c92de2670f3777436235ea33e685a33c0" translate="yes" xml:space="preserve">
          <source>The ignored lines of code (marked as ignored using the annotations) are counted as executed (if they are executable) and will not be highlighted.</source>
          <target state="translated">Las líneas de código ignoradas (marcadas como ignoradas usando las anotaciones)se cuentan como ejecutadas (si son ejecutables)y no se resaltarán.</target>
        </trans-unit>
        <trans-unit id="3370507adda7508de3877d98fe776d61a3d785b1" translate="yes" xml:space="preserve">
          <source>The implementation for this Array DataSet is simple and straightforward:</source>
          <target state="translated">La implementación de este conjunto de datos es simple y directa:</target>
        </trans-unit>
        <trans-unit id="80356cf45180bbaca54f22c4ac08c0fd96e4782f" translate="yes" xml:space="preserve">
          <source>The method you want to test executes a rather large JOIN operation and uses the data to calculate some important results.</source>
          <target state="translated">El método que quieres probar ejecuta una operación JOIN bastante grande y utiliza los datos para calcular algunos resultados importantes.</target>
        </trans-unit>
        <trans-unit id="75562a28741b6a3b377647f6a9875c41d10505ab" translate="yes" xml:space="preserve">
          <source>The most common dataset is called Flat XML. It is a very simple xml format where a tag inside the root node &lt;code&gt;&amp;lt;dataset&amp;gt;&lt;/code&gt; represents exactly one row in the database. The tags name equals the table to insert the row into and an attribute represents the column. An example for a simple guestbook application could look like this:</source>
          <target state="translated">El conjunto de datos m&amp;aacute;s com&amp;uacute;n se llama Flat XML. Es un formato xml muy simple donde una etiqueta dentro del nodo ra&amp;iacute;z &lt;code&gt;&amp;lt;dataset&amp;gt;&lt;/code&gt; representa exactamente una fila en la base de datos. El nombre de las etiquetas es igual a la tabla para insertar la fila y un atributo representa la columna. Un ejemplo de una aplicaci&amp;oacute;n de libro de visitas simple podr&amp;iacute;a verse as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="34dd41ead40b9f2efcae6427399d721238a1e269" translate="yes" xml:space="preserve">
          <source>The order in which tests are executed can be made explicit:</source>
          <target state="translated">El orden en que se ejecutan las pruebas puede ser explícito:</target>
        </trans-unit>
        <trans-unit id="f88ff1143bb2afe4c9685e63990ed885ac6ab25c" translate="yes" xml:space="preserve">
          <source>The possibility to run the database tests against different database targets easily is very important if you are developing on the development machine. If several developers run the database tests against the same database connection you can easily experience test-failures because of race-conditions.</source>
          <target state="translated">La posibilidad de ejecutar fácilmente las pruebas de la base de datos contra diferentes objetivos de la base de datos es muy importante si se está desarrollando en la máquina de desarrollo.Si varios desarrolladores ejecutan las pruebas de la base de datos contra la misma conexión de la base de datos,se pueden experimentar fácilmente fallos en las pruebas debido a las condiciones de la carrera.</target>
        </trans-unit>
        <trans-unit id="8c8681aef2412cda92eb8cb83b9d88d626b61f48" translate="yes" xml:space="preserve">
          <source>The practice of replacing an object with a test double that (optionally) returns configured return values is referred to as &lt;em&gt;stubbing&lt;/em&gt;. You can use a &lt;em&gt;stub&lt;/em&gt; to &quot;replace a real component on which the SUT depends so that the test has a control point for the indirect inputs of the SUT. This allows the test to force the SUT down paths it might not otherwise execute&quot;.</source>
          <target state="translated">La pr&amp;aacute;ctica de reemplazar un objeto con un doble de prueba que (opcionalmente) devuelve valores de retorno configurados se conoce como &lt;em&gt;stubbing&lt;/em&gt; . Puede usar un &lt;em&gt;stub&lt;/em&gt; para &quot;reemplazar un componente real del que depende el SUT de modo que la prueba tenga un punto de control para las entradas indirectas del SUT. Esto permite que la prueba fuerce al SUT por caminos que de otra manera no podr&amp;iacute;a ejecutar&quot;.</target>
        </trans-unit>
        <trans-unit id="54b5071b0361e07844192796d42ced7a7792cb89" translate="yes" xml:space="preserve">
          <source>The practice of replacing an object with a test double that verifies expectations, for instance asserting that a method has been called, is referred to as &lt;em&gt;mocking&lt;/em&gt;.</source>
          <target state="translated">La pr&amp;aacute;ctica de reemplazar un objeto con un doble de prueba que verifica las expectativas, por ejemplo, afirmar que se ha llamado a un m&amp;eacute;todo, se denomina &lt;em&gt;burla&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="17efd3eb9497510cc6dd62322c3bbd3ae8f134f7" translate="yes" xml:space="preserve">
          <source>The previous assertion is helpful, but we surely want to check the actual contents of the table to verify that all the values were written into the correct columns. This can be achieved by a table assertion.</source>
          <target state="translated">La afirmación anterior es útil,pero seguramente queremos comprobar el contenido real de la tabla para verificar que todos los valores fueron escritos en las columnas correctas.Esto puede lograrse mediante la afirmación de una tabla.</target>
        </trans-unit>
        <trans-unit id="cc09ba1ece3dc97d6701bd1bdc67d51487577aff" translate="yes" xml:space="preserve">
          <source>The public interface is used internally by the &lt;code&gt;assertDataSetsEqual()&lt;/code&gt; assertion on the Database TestCase to check for dataset quality. From the &lt;code&gt;IteratorAggregate&lt;/code&gt; interface the IDataSet inherits the &lt;code&gt;getIterator()&lt;/code&gt; method to iterate over all tables of the dataset. The reverse iterator allows PHPUnit to truncate tables opposite the order they were created to satisfy foreign key constraints.</source>
          <target state="translated">La interfaz p&amp;uacute;blica es utilizada internamente por la &lt;code&gt;assertDataSetsEqual()&lt;/code&gt; en el Database TestCase para verificar la calidad del conjunto de datos. Desde el &lt;code&gt;IteratorAggregate&lt;/code&gt; interfaz de la IDataSet hereda la &lt;code&gt;getIterator()&lt;/code&gt; m&amp;eacute;todo para iterar sobre todas las tablas de la base de datos. El iterador inverso permite a PHPUnit truncar tablas en sentido opuesto al orden en que fueron creadas para satisfacer las restricciones de clave externa.</target>
        </trans-unit>
        <trans-unit id="21bb118bcf37992474e6a634e350e7ab89ce4d3c" translate="yes" xml:space="preserve">
          <source>The return value yielded by a producer is passed &quot;as-is&quot; to its consumers by default. This means that when a producer returns an object, a reference to that object is passed to the consumers. When a copy should be used instead of a reference, then &lt;code&gt;@depends clone&lt;/code&gt; should be used instead of &lt;code&gt;@depends&lt;/code&gt;.</source>
          <target state="translated">El valor de retorno producido por un productor se pasa &quot;tal cual&quot; a sus consumidores de forma predeterminada. Esto significa que cuando un productor devuelve un objeto, se pasa una referencia a ese objeto a los consumidores. Cuando se debe usar una copia en lugar de una referencia, se debe usar &lt;code&gt;@depends clone&lt;/code&gt; en lugar de &lt;code&gt;@depends&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8ed433389df6f1aa848b4e229268e91f4753c9c" translate="yes" xml:space="preserve">
          <source>The same applies to static properties of classes that were newly loaded/declared within a test. They cannot be reset to their originally declared default value after the test, since that value is unknown. Whichever value is set will leak into subsequent tests.</source>
          <target state="translated">Lo mismo se aplica a las propiedades estáticas de las clases que fueron recién cargadas/declaradas dentro de una prueba.No se pueden restablecer a su valor predeterminado declarado originalmente después de la prueba,ya que ese valor es desconocido.Cualquiera que sea el valor establecido se filtrará en pruebas posteriores.</target>
        </trans-unit>
        <trans-unit id="387f8e603eee1f6b84a5322a6f58a36b175c81ac" translate="yes" xml:space="preserve">
          <source>The section &amp;ldquo;Using the Database Connection&amp;rdquo; explains the API of this interface and how you can make the best use of it.</source>
          <target state="translated">La secci&amp;oacute;n &quot;Uso de la conexi&amp;oacute;n a la base de datos&quot; explica la API de esta interfaz y c&amp;oacute;mo puede aprovecharla al m&amp;aacute;ximo.</target>
        </trans-unit>
        <trans-unit id="386cf0125afd518facf71323bdce056937c4e37c" translate="yes" xml:space="preserve">
          <source>The section on Database Assertions will show some more details on how to make use of the Query DataSet.</source>
          <target state="translated">La sección sobre Asignaciones de la base de datos mostrará algunos detalles más sobre cómo hacer uso del conjunto de datos de consulta.</target>
        </trans-unit>
        <trans-unit id="dcec9c3dbffecbdff28b777b0cab9c16c4bc9ddf" translate="yes" xml:space="preserve">
          <source>The standard test suite loader will look for the sourcefile in the current working directory and in each directory that is specified in PHP's &lt;code&gt;include_path&lt;/code&gt; configuration directive. A class name such as &lt;code&gt;Project_Package_Class&lt;/code&gt; is mapped to the source filename &lt;code&gt;Project/Package/Class.php&lt;/code&gt;.</source>
          <target state="translated">El cargador de la suite de pruebas est&amp;aacute;ndar buscar&amp;aacute; el archivo fuente en el directorio de trabajo actual y en cada directorio que se especifique en la directiva de configuraci&amp;oacute;n &lt;code&gt;include_path&lt;/code&gt; de PHP . Un nombre de clase como &lt;code&gt;Project_Package_Class&lt;/code&gt; se asigna al nombre de archivo de origen &lt;code&gt;Project/Package/Class.php&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="160f10ea7fc57fe909fba6e6b874175626aac209" translate="yes" xml:space="preserve">
          <source>The table name</source>
          <target state="translated">El nombre de la mesa</target>
        </trans-unit>
        <trans-unit id="496c4d74cbcf8bad3b09189b642e3f9fa335dd1f" translate="yes" xml:space="preserve">
          <source>The test itself is more concise.</source>
          <target state="translated">La prueba en sí es más concisa.</target>
        </trans-unit>
        <trans-unit id="d732cc0f6a73ef9cc4f9019b5cbb997d5650b9f4" translate="yes" xml:space="preserve">
          <source>The test name for a PHPT test is the filesystem path.</source>
          <target state="translated">El nombre de la prueba de PHPT es la ruta del sistema de archivos.</target>
        </trans-unit>
        <trans-unit id="1949cf215f75c47db940619879605780b278b8ce" translate="yes" xml:space="preserve">
          <source>The test names to match will be in one of the following formats:</source>
          <target state="translated">Los nombres de las pruebas que se deben hacer coincidir estarán en uno de los siguientes formatos:</target>
        </trans-unit>
        <trans-unit id="b7b998caa8ea272cf8d8918c703fe68bbfdb84fa" translate="yes" xml:space="preserve">
          <source>The tests are public methods that are named &lt;code&gt;test*&lt;/code&gt;.</source>
          <target state="translated">Las pruebas son m&amp;eacute;todos p&amp;uacute;blicos que se denominan &lt;code&gt;test*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="067e0acd96063588549c1264f3135b20895c6ea9" translate="yes" xml:space="preserve">
          <source>The tests for a class &lt;code&gt;Class&lt;/code&gt; go into a class &lt;code&gt;ClassTest&lt;/code&gt;.</source>
          <target state="translated">Las pruebas para una clase &lt;code&gt;Class&lt;/code&gt; van a una clase &lt;code&gt;ClassTest&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="98d0a3d3993a84844e9e3c508fe8766adbac3485" translate="yes" xml:space="preserve">
          <source>There are few good reasons to share fixtures between tests, but in most cases the need to share a fixture between tests stems from an unresolved design problem.</source>
          <target state="translated">Hay pocas buenas razones para compartir los accesorios entre las pruebas,pero en la mayoría de los casos la necesidad de compartir un accesorio entre las pruebas se debe a un problema de diseño no resuelto.</target>
        </trans-unit>
        <trans-unit id="992e15c23b7d890dda0fdc37581bff07bbc38563" translate="yes" xml:space="preserve">
          <source>There are several means to achieve this pre-condition to database testing.</source>
          <target state="translated">Hay varios medios para lograr esta condición previa a la prueba de la base de datos.</target>
        </trans-unit>
        <trans-unit id="ac1a8b3fe1b0f81c33c92ba4dbe72abc0fd463fe" translate="yes" xml:space="preserve">
          <source>There are three different types of datasets/datatables:</source>
          <target state="translated">Hay tres tipos diferentes de conjuntos de datos/tablas de datos:</target>
        </trans-unit>
        <trans-unit id="1528ac79f82c0177f97b41a721280907ad0e8f63" translate="yes" xml:space="preserve">
          <source>There are three interesting methods on the Connection interface which has to be returned from the &lt;code&gt;getConnection()&lt;/code&gt; method on the Database TestCase:</source>
          <target state="translated">Hay tres m&amp;eacute;todos interesantes en la interfaz de conexi&amp;oacute;n que deben devolverse desde el m&amp;eacute;todo &lt;code&gt;getConnection()&lt;/code&gt; en la base de datos TestCase:</target>
        </trans-unit>
        <trans-unit id="f6cdf1278a971e0beb06b88d9568dcedafe9fcea" translate="yes" xml:space="preserve">
          <source>There are three possible values for this option:</source>
          <target state="translated">Hay tres valores posibles para esta opción:</target>
        </trans-unit>
        <trans-unit id="ad75b53f50d95ecf15ca76e50d41d37cf4c24576" translate="yes" xml:space="preserve">
          <source>There is a good reason why all the examples on unit testing do not include interactions with the database: these kind of tests are both complex to setup and maintain. While testing against your database you need to take care of the following variables:</source>
          <target state="translated">Hay una buena razón por la que todos los ejemplos de pruebas de unidades no incluyen interacciones con la base de datos:este tipo de pruebas son a la vez complejas de configurar y mantener.Mientras se realizan las pruebas con la base de datos hay que tener cuidado con las siguientes variables:</target>
        </trans-unit>
        <trans-unit id="46fbee926b7a97f002f834163ac5262ffd44ff81" translate="yes" xml:space="preserve">
          <source>There is another more structured XML dataset, which is a bit more verbose to write but avoids the NULL problems of the Flat XML dataset. Inside the root node &lt;code&gt;&amp;lt;dataset&amp;gt;&lt;/code&gt; you can specify &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;column&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;row&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;null /&amp;gt;&lt;/code&gt; tags. An equivalent dataset to the previously defined Guestbook Flat XML looks like:</source>
          <target state="translated">Hay otro conjunto de datos XML m&amp;aacute;s estructurado, que es un poco m&amp;aacute;s detallado de escribir pero evita los problemas NULL del conjunto de datos XML plano. Dentro del nodo ra&amp;iacute;z &lt;code&gt;&amp;lt;dataset&amp;gt;&lt;/code&gt; puede especificar las etiquetas &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;column&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;row&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; y &lt;code&gt;&amp;lt;null /&amp;gt;&lt;/code&gt; . Un conjunto de datos equivalente al XML plano del libro de visitas definido anteriormente se ve as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="de8637931631873f6bca7dcced76c5f1a3e3e4a9" translate="yes" xml:space="preserve">
          <source>There is no Array based DataSet in PHPUnit's Database Extension (yet), but we can implement our own easily. Our guestbook example should look like:</source>
          <target state="translated">No hay ningún DataSet basado en matrices en la Extensión de Base de Datos de PHPUnit (todavía),pero podemos implementar el nuestro fácilmente.Nuestro ejemplo del libro de visitas debería ser como:</target>
        </trans-unit>
        <trans-unit id="57bb6b85e5611494208d3bb53e4fa8c13adb2482" translate="yes" xml:space="preserve">
          <source>This abstraction is necessary to compare the actual contents of a database against the expected contents. Expectations can be represented as XML, YAML, CSV files or PHP array for example. The DataSet and DataTable interfaces enable the comparison of these conceptually different sources, emulating relational database storage in a semantically similar approach.</source>
          <target state="translated">Esta abstracción es necesaria para comparar el contenido real de una base de datos con el contenido previsto.Las expectativas pueden representarse como archivos XML,YAML,CSV o matriz PHP por ejemplo.Las interfaces DataSet y DataTable permiten la comparación de estas fuentes conceptualmente diferentes,emulando el almacenamiento de bases de datos relacionales en un enfoque semánticamente similar.</target>
        </trans-unit>
        <trans-unit id="ed2643748a6d22c79a16e93e5ebc98c26e631756" translate="yes" xml:space="preserve">
          <source>This annotation is especially useful in strict coverage mode where unintentionally covered code will cause a test to fail. See &lt;a href=&quot;risky-tests#risky-tests.unintentionally-covered-code&quot;&gt;the section called &amp;ldquo;Unintentionally Covered Code&amp;rdquo;&lt;/a&gt; for more information regarding strict coverage mode.</source>
          <target state="translated">Esta anotaci&amp;oacute;n es especialmente &amp;uacute;til en el modo de cobertura estricta donde el c&amp;oacute;digo cubierto involuntariamente har&amp;aacute; que una prueba falle. Consulte &lt;a href=&quot;risky-tests#risky-tests.unintentionally-covered-code&quot;&gt;la secci&amp;oacute;n denominada &amp;ldquo;C&amp;oacute;digo cubierto involuntariamente&amp;rdquo;&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n sobre el modo de cobertura estricta.</target>
        </trans-unit>
        <trans-unit id="fdda88234f3ad6d83643ee78909fd84e6f7765bc" translate="yes" xml:space="preserve">
          <source>This appendix lists the various assertion methods that are available.</source>
          <target state="translated">En el presente apéndice se enumeran los diversos métodos de afirmación disponibles.</target>
        </trans-unit>
        <trans-unit id="13feb49855231d6be908a7feeaf57e1daa24472d" translate="yes" xml:space="preserve">
          <source>This appendix shows all the varieties of annotations supported by PHPUnit.</source>
          <target state="translated">Este apéndice muestra todas las variedades de anotaciones soportadas por PHPUnit.</target>
        </trans-unit>
        <trans-unit id="b98d13b9412fe4d25d8a37a20f86d7dba2004c97" translate="yes" xml:space="preserve">
          <source>This assertion would only pass on exactly one second of the universe though, on &lt;em&gt;2010&amp;ndash;05&amp;ndash;01 21:47:08&lt;/em&gt;. Dates pose a special problem to database testing and we can circumvent the failure by omitting the &amp;ldquo;created&amp;rdquo; column from the assertion.</source>
          <target state="translated">Sin embargo, esta afirmaci&amp;oacute;n solo pasar&amp;iacute;a exactamente un segundo del universo, en &lt;em&gt;2010&amp;ndash;05&amp;ndash;01 21:47:08&lt;/em&gt; . Las fechas plantean un problema especial para las pruebas de la base de datos y podemos evitar la falla omitiendo la columna &quot;creado&quot; de la aserci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="c251df74abf3228a7572f227758053c8d51e7776" translate="yes" xml:space="preserve">
          <source>This can be used for integration testing. See &lt;a href=&quot;code-coverage-analysis#code-coverage-analysis.specifying-covered-methods.examples.GuestbookIntegrationTest.php&quot;&gt;Example 11.3&lt;/a&gt; for an example.</source>
          <target state="translated">Esto se puede utilizar para pruebas de integraci&amp;oacute;n. Consulte el &lt;a href=&quot;code-coverage-analysis#code-coverage-analysis.specifying-covered-methods.examples.GuestbookIntegrationTest.php&quot;&gt;Ejemplo 11.3&lt;/a&gt; para ver un ejemplo.</target>
        </trans-unit>
        <trans-unit id="fbebb60844250b8630bc0f5677253e70f0f871eb" translate="yes" xml:space="preserve">
          <source>This file can be used in your Database TestCase by calling the &lt;code&gt;createMySQLXMLDataSet($filename)&lt;/code&gt; method:</source>
          <target state="translated">Este archivo se puede utilizar en su base de datos TestCase llamando al &lt;code&gt;createMySQLXMLDataSet($filename)&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0214e1ec5357308c35f9d649038202b86ff070b0" translate="yes" xml:space="preserve">
          <source>This has several advantages:</source>
          <target state="translated">Esto tiene varias ventajas:</target>
        </trans-unit>
        <trans-unit id="23cbd4cfaac0639512f842e62964bb192515290f" translate="yes" xml:space="preserve">
          <source>This has the database connection hardcoded in the PDO connection though. PHPUnit has another awesome feature that could make this testcase even more generic. If you use the &lt;a href=&quot;appendixes.configuration#appendixes.configuration.php-ini-constants-variables&quot;&gt;XML Configuration&lt;/a&gt; you could make the database connection configurable per test-run. First let's create a &amp;ldquo;phpunit.xml&amp;rdquo; file in our tests/ directory of the application that looks like:</source>
          <target state="translated">Sin embargo, esto tiene la conexi&amp;oacute;n de la base de datos codificada en la conexi&amp;oacute;n PDO. PHPUnit tiene otra caracter&amp;iacute;stica asombrosa que podr&amp;iacute;a hacer que este caso de prueba sea a&amp;uacute;n m&amp;aacute;s gen&amp;eacute;rico. Si utiliza la &lt;a href=&quot;appendixes.configuration#appendixes.configuration.php-ini-constants-variables&quot;&gt;configuraci&amp;oacute;n XML&lt;/a&gt; , puede hacer que la conexi&amp;oacute;n de la base de datos sea configurable por ejecuci&amp;oacute;n de prueba. Primero, creemos un archivo &quot;phpunit.xml&quot; en nuestro directorio tests / de la aplicaci&amp;oacute;n que se ve as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="6405333adb9b984030af95505c191ef40852e101" translate="yes" xml:space="preserve">
          <source>This interface also has an assertion that checks if two instances of Table Metadata equal each other, which is used by the data-set equality assertion.</source>
          <target state="translated">Esta interfaz también tiene una afirmación que comprueba si dos instancias de los metadatos de la tabla son iguales entre sí,que es utilizada por la afirmación de igualdad del conjunto de datos.</target>
        </trans-unit>
        <trans-unit id="20da57f85fd84eecf18489dd0dc006c2edbf48fc" translate="yes" xml:space="preserve">
          <source>This is obviously easy to write. Here &lt;code&gt;&amp;lt;guestbook&amp;gt;&lt;/code&gt; is the table name where two rows are inserted into each with four columns &amp;ldquo;id&amp;rdquo;, &amp;ldquo;content&amp;rdquo;, &amp;ldquo;user&amp;rdquo; and &amp;ldquo;created&amp;rdquo; with their respective values.</source>
          <target state="translated">Obviamente, esto es f&amp;aacute;cil de escribir. Aqu&amp;iacute; &lt;code&gt;&amp;lt;guestbook&amp;gt;&lt;/code&gt; es el nombre de la tabla donde se insertan dos filas en cada una con cuatro columnas &quot;id&quot;, &quot;contenido&quot;, &quot;usuario&quot; y &quot;creado&quot; con sus respectivos valores.</target>
        </trans-unit>
        <trans-unit id="785aef8ff808a171464fc55bb5c25972e90ae8ac" translate="yes" xml:space="preserve">
          <source>This is simple, convient AND it solves the NULL issue that the similar Flat XML dataset has. A NULL in YAML is just the column name without no value specified. An empty string is specified as &lt;code&gt;column1: &quot;&quot;&lt;/code&gt;.</source>
          <target state="translated">Esto es simple, conveniente Y resuelve el problema NULL que tiene el conjunto de datos Flat XML similar. Un NULL en YAML es solo el nombre de la columna sin ning&amp;uacute;n valor especificado. Una cadena vac&amp;iacute;a se especifica como &lt;code&gt;column1: &quot;&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2780fab7e8a832639b40ac03a385d4a0a85c6b82" translate="yes" xml:space="preserve">
          <source>This new XML format is specific to the &lt;a href=&quot;http://www.mysql.com&quot;&gt;MySQL database server&lt;/a&gt;. Support for it was added in PHPUnit 3.5. Files in this format can be generated using the &lt;a href=&quot;http://dev.mysql.com/doc/refman/5.0/en/mysqldump.html&quot;&gt;&lt;code&gt;mysqldump&lt;/code&gt;&lt;/a&gt; utility. Unlike CSV datasets, which &lt;code&gt;mysqldump&lt;/code&gt; also supports, a single file in this XML format can contain data for multiple tables. You can create a file in this format by invoking &lt;code&gt;mysqldump&lt;/code&gt; like so:</source>
          <target state="translated">Este nuevo formato XML es espec&amp;iacute;fico del &lt;a href=&quot;http://www.mysql.com&quot;&gt;servidor de base de datos MySQL&lt;/a&gt; . Se agreg&amp;oacute; soporte en PHPUnit 3.5. Los archivos en este formato se pueden generar usando la utilidad &lt;a href=&quot;http://dev.mysql.com/doc/refman/5.0/en/mysqldump.html&quot;&gt; &lt;code&gt;mysqldump&lt;/code&gt; &lt;/a&gt; . A diferencia de los conjuntos de datos CSV, que tambi&amp;eacute;n admite &lt;code&gt;mysqldump&lt;/code&gt; , un solo archivo en este formato XML puede contener datos para varias tablas. Puede crear un archivo en este formato invocando &lt;code&gt;mysqldump&lt;/code&gt; as&amp;iacute;:</target>
        </trans-unit>
        <trans-unit id="7b5902742491789dd48ddafc8ad0e2cee7d86e18" translate="yes" xml:space="preserve">
          <source>This only happens when using assertEquals or other 'weak' comparison functions on arrays or objects.</source>
          <target state="translated">Esto sólo ocurre cuando se utiliza assertEquals u otras funciones de comparación &quot;débiles&quot; en matrices u objetos.</target>
        </trans-unit>
        <trans-unit id="c226405ade73b18110ff28485c3ef78d7e4fee09" translate="yes" xml:space="preserve">
          <source>This package is included in the PHAR distribution of PHPUnit. It can be installed via Composer using the following command:</source>
          <target state="translated">Este paquete está incluido en la distribución PHAR de PHPUnit.Puede ser instalado a través de Composer usando el siguiente comando:</target>
        </trans-unit>
        <trans-unit id="6a4eb86935408edfd9cdaf6c1159bbe2483db04d" translate="yes" xml:space="preserve">
          <source>This package is not included in the PHAR distribution of PHPUnit. It can be installed via Composer using the following command:</source>
          <target state="translated">Este paquete no está incluido en la distribución PHAR de PHPUnit.Puede ser instalado a través de Composer usando el siguiente comando:</target>
        </trans-unit>
        <trans-unit id="ed32c14262af065016892351d1725e08847322bd" translate="yes" xml:space="preserve">
          <source>This section shows noteworthy edge cases that lead to confusing code coverage information.</source>
          <target state="translated">Esta sección muestra casos notables de borde que conducen a una información confusa sobre la cobertura del código.</target>
        </trans-unit>
        <trans-unit id="e7f18bd25f7016bf109727e49a5c12fd82ded0bf" translate="yes" xml:space="preserve">
          <source>Tip: Use your own Abstract Database TestCase</source>
          <target state="translated">Consejo:Use su propia base de datos de resúmenes TestCase</target>
        </trans-unit>
        <trans-unit id="731838b2c0adf2a7be75156ee0f58af256ad9c1e" translate="yes" xml:space="preserve">
          <source>To allow the clean-up and fixture loading functionalities to work the PHPUnit Database Extension requires access to a database connection abstracted across vendors through the PDO library. It is important to note that your application does not need to be based on PDO to use PHPUnit's database extension, the connection is merely used for the clean-up and fixture setup.</source>
          <target state="translated">Para permitir que las funcionalidades de limpieza y carga de accesorios funcionen,la Extensión de Base de Datos de la Unidad PHP requiere acceso a una conexión de base de datos abstraída a través de los vendedores a través de la biblioteca PDO.Es importante notar que su aplicación no necesita estar basada en PDO para usar la extensión de la base de datos de la Unidad PHP,la conexión es simplemente usada para la configuración de la limpieza y los accesorios.</target>
        </trans-unit>
        <trans-unit id="152b45fae7ec210e936a1c79aa3f6b701092acea" translate="yes" xml:space="preserve">
          <source>To ease testing and reduce duplication a shortcut can be used to specify a class constant as an &lt;code&gt;@expectedExceptionCode&lt;/code&gt; using the &quot;&lt;code&gt;@expectedExceptionCode ClassName::CONST&lt;/code&gt;&quot; syntax.</source>
          <target state="translated">Para facilitar las pruebas y reducir la duplicaci&amp;oacute;n, se puede usar un atajo para especificar una constante de clase como &lt;code&gt;@expectedExceptionCode&lt;/code&gt; usando la &lt;code&gt;@expectedExceptionCode ClassName::CONST&lt;/code&gt; &quot; @expectedExceptionCode ClassName :: CONST &quot;.</target>
        </trans-unit>
        <trans-unit id="c4dce95019cf5594b670c989434c5c4b98fd6660" translate="yes" xml:space="preserve">
          <source>To ease testing and reduce duplication a shortcut can be used to specify a class constant as an &lt;code&gt;@expectedExceptionMessage&lt;/code&gt; using the &quot;&lt;code&gt;@expectedExceptionMessage ClassName::CONST&lt;/code&gt;&quot; syntax. A sample can be found in &lt;a href=&quot;appendixes.annotations#appendixes.annotations.expectedExceptionCode&quot;&gt;the section called &amp;ldquo;@expectedExceptionCode&amp;rdquo;&lt;/a&gt;.</source>
          <target state="translated">Para facilitar las pruebas y reducir la duplicaci&amp;oacute;n, se puede usar un atajo para especificar una constante de clase como &lt;code&gt;@expectedExceptionMessage&lt;/code&gt; usando la &lt;code&gt;@expectedExceptionMessage ClassName::CONST&lt;/code&gt; &quot; @expectedExceptionMessage ClassName :: CONST &quot;. Puede encontrar una muestra en &lt;a href=&quot;appendixes.annotations#appendixes.annotations.expectedExceptionCode&quot;&gt;la secci&amp;oacute;n llamada &quot;@expectedExceptionCode&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="46429fc498e1292e82c066711078712dae0c4db7" translate="yes" xml:space="preserve">
          <source>To globally install the PHAR:</source>
          <target state="translated">Para instalar globalmente el PHAR:</target>
        </trans-unit>
        <trans-unit id="1347127258552b53b73162c50d7f9e4500fe52bf" translate="yes" xml:space="preserve">
          <source>To quickly localize defects, we want our attention to be focussed on relevant failing tests. This is why PHPUnit skips the execution of a test when a depended-upon test has failed. This improves defect localization by exploiting the dependencies between tests as shown in &lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.examples.DependencyFailureTest.php&quot;&gt;Example 2.3&lt;/a&gt;.</source>
          <target state="translated">Para localizar r&amp;aacute;pidamente los defectos, queremos que nuestra atenci&amp;oacute;n se centre en las pruebas que fallan relevantes. Esta es la raz&amp;oacute;n por la que PHPUnit omite la ejecuci&amp;oacute;n de una prueba cuando falla una prueba dependiente. Esto mejora la localizaci&amp;oacute;n de defectos al explotar las dependencias entre pruebas como se muestra en el &lt;a href=&quot;writing-tests-for-phpunit#writing-tests-for-phpunit.examples.DependencyFailureTest.php&quot;&gt;Ejemplo 2.3&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="052b76b68cfe966c5c79708451eba5f9546bf80c" translate="yes" xml:space="preserve">
          <source>To run all tests for the library we just need to point the PHPUnit command-line test runner to the test directory:</source>
          <target state="translated">Para ejecutar todas las pruebas de la biblioteca sólo tenemos que apuntar el ejecutor de pruebas de la línea de comandos de PHPUnit al directorio de pruebas:</target>
        </trans-unit>
        <trans-unit id="7e4be0289df3e2278e103388cf01e3bf0475b366" translate="yes" xml:space="preserve">
          <source>To run only the tests that are declared in the &lt;code&gt;CurrencyTest&lt;/code&gt; test case class in &lt;code&gt;tests/CurrencyTest.php&lt;/code&gt; we can use the following command:</source>
          <target state="translated">Para ejecutar solo las pruebas que est&amp;aacute;n declaradas en la clase de caso de prueba &lt;code&gt;CurrencyTest&lt;/code&gt; en &lt;code&gt;tests/CurrencyTest.php&lt;/code&gt; , podemos usar el siguiente comando:</target>
        </trans-unit>
        <trans-unit id="e15ac0a18971f18a613cffe43a3b94b3764c0f3f" translate="yes" xml:space="preserve">
          <source>To understand the internals of DataSets and DataTables, lets have a look at the interface of a DataSet. You can skip this part if you do not plan to implement your own DataSet or DataTable.</source>
          <target state="translated">Para entender el interior de los conjuntos de datos y las tablas de datos,echemos un vistazo a la interfaz de un conjunto de datos.Puedes saltarte esta parte si no planeas implementar tu propio DataSet o DataTable.</target>
        </trans-unit>
        <trans-unit id="af2e4c2ebedd7493808b9a8ce1195a0b6c4f8fbe" translate="yes" xml:space="preserve">
          <source>To use the Flat XML dataset effectively when NULL values are relevant the first row of each table must not contain any NULL value and only successive rows are allowed to omit attributes. This can be awkward, since the order of the rows is a relevant factor for database assertions.</source>
          <target state="translated">Para utilizar eficazmente el conjunto de datos XML plano cuando los valores NULL son relevantes,la primera fila de cada tabla no debe contener ningún valor NULL y sólo se permite que las filas sucesivas omitan los atributos.Esto puede resultar incómodo,ya que el orden de las filas es un factor relevante para las afirmaciones de la base de datos.</target>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="c02237c7b02e4b8fe882d91039fd1e35d3cabc4f" translate="yes" xml:space="preserve">
          <source>Typically, in a project that is developed using an agile process, such as Extreme Programming, the documentation cannot keep up with the frequent changes to the project's design and code. Extreme Programming demands &lt;em&gt;collective code ownership&lt;/em&gt;, so all developers need to know how the entire system works. If you are disciplined enough to consequently use &quot;speaking names&quot; for your tests that describe what a class should do, you can use PHPUnit's TestDox functionality to generate automated documentation for your project based on its tests. This documentation gives developers an overview of what each class of the project is supposed to do.</source>
          <target state="translated">Por lo general, en un proyecto que se desarrolla utilizando un proceso &amp;aacute;gil, como Extreme Programming, la documentaci&amp;oacute;n no puede mantenerse al d&amp;iacute;a con los frecuentes cambios en el dise&amp;ntilde;o y el c&amp;oacute;digo del proyecto. La programaci&amp;oacute;n extrema exige &lt;em&gt;la propiedad colectiva del c&amp;oacute;digo&lt;/em&gt; , por lo que todos los desarrolladores deben saber c&amp;oacute;mo funciona todo el sistema. Si eres lo suficientemente disciplinado como para usar &quot;nombres hablados&quot; para tus pruebas que describen lo que debe hacer una clase, puedes usar la funcionalidad TestDox de PHPUnit para generar documentaci&amp;oacute;n automatizada para tu proyecto basada en sus pruebas. Esta documentaci&amp;oacute;n brinda a los desarrolladores una descripci&amp;oacute;n general de lo que se supone que debe hacer cada clase del proyecto.</target>
        </trans-unit>
        <trans-unit id="b39fccec73003cdda9f4e39a9b8d1f79c5bd35c2" translate="yes" xml:space="preserve">
          <source>Understanding DataSets and DataTables</source>
          <target state="translated">Comprensión de los conjuntos de datos y las tablas de datos</target>
        </trans-unit>
        <trans-unit id="473a1a7ba7d5c6d4f91d2db14aa02df3adf85bc4" translate="yes" xml:space="preserve">
          <source>Unintentionally Covered Code</source>
          <target state="translated">Código de cobertura no intencional</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
