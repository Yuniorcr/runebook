<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="mocha">
    <body>
      <group id="mocha">
        <trans-unit id="4880e5997d2e5c91707be1f2cf1644a4e0521957" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2011&amp;ndash;2018 JS Foundation and contributors</source>
          <target state="translated">&amp;copy; 2011&amp;ndash;2018 JS Foundation y colaboradores</target>
        </trans-unit>
        <trans-unit id="0cf2f1a85ad7053644855b71c6a7053e215276b8" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Hanging&amp;rdquo; most often manifests itself if a server is still listening on a port, or a socket is still open, etc. It can also be something like a runaway &lt;code&gt;setInterval()&lt;/code&gt;, or even an errant &lt;code&gt;Promise&lt;/code&gt; that never fulfilled.</source>
          <target state="translated">La &amp;ldquo;suspensi&amp;oacute;n&amp;rdquo; se manifiesta con mayor frecuencia si un servidor todav&amp;iacute;a est&amp;aacute; escuchando en un puerto, o si un socket a&amp;uacute;n est&amp;aacute; abierto, etc. Tambi&amp;eacute;n puede ser algo as&amp;iacute; como un &lt;code&gt;setInterval()&lt;/code&gt; fuera de control o incluso una &lt;code&gt;Promise&lt;/code&gt; errante que nunca se cumpli&amp;oacute;.</target>
        </trans-unit>
        <trans-unit id="29ca21d51a81c6a488a2680abedc2d67a518ac71" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Pending&amp;rdquo;&amp;ndash;as in &amp;ldquo;someone should write these test cases eventually&amp;rdquo;&amp;ndash;test-cases are simply those &lt;em&gt;without&lt;/em&gt; a callback:</source>
          <target state="translated">&quot;Pendiente&quot;, como en &quot;alguien deber&amp;iacute;a escribir estos casos de prueba eventualmente&quot;, los casos de prueba son simplemente aquellos &lt;em&gt;sin&lt;/em&gt; devoluci&amp;oacute;n de llamada:</target>
        </trans-unit>
        <trans-unit id="25ed9012bafe6e305d78705fd4bf34bc131c9626" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://chaijs.com/&quot;&gt;chai&lt;/a&gt; - &lt;code&gt;expect()&lt;/code&gt;, &lt;code&gt;assert()&lt;/code&gt; and &lt;code&gt;should&lt;/code&gt;-style assertions</source>
          <target state="translated">&lt;a href=&quot;http://chaijs.com/&quot;&gt;chai&lt;/a&gt; - &lt;code&gt;expect()&lt;/code&gt; , &lt;code&gt;assert()&lt;/code&gt; y &lt;code&gt;should&lt;/code&gt; al estilo de las afirmaciones</target>
        </trans-unit>
        <trans-unit id="5bb4230cc3fd86b530db1acfe8036464113cd96d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://unexpected.js.org&quot;&gt;unexpected&lt;/a&gt; - &amp;ldquo;the extensible BDD assertion toolkit&amp;rdquo;</source>
          <target state="translated">&lt;a href=&quot;http://unexpected.js.org&quot;&gt;inesperado&lt;/a&gt; - &quot;el kit de herramientas extensible de aserci&amp;oacute;n BDD&quot;</target>
        </trans-unit>
        <trans-unit id="1564a69b76b202f4b70459e52fc79d3de8d7ccf7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/LearnBoost/expect.js&quot;&gt;expect.js&lt;/a&gt; - &lt;code&gt;expect()&lt;/code&gt; style assertions</source>
          <target state="translated">&lt;a href=&quot;https://github.com/LearnBoost/expect.js&quot;&gt;esperar.js&lt;/a&gt; - aserciones de estilo de &lt;code&gt;expect()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ccf6128796caad47bf922901f1f89ce8973d11ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/shouldjs/should.js&quot;&gt;should.js&lt;/a&gt; - BDD style shown throughout these docs</source>
          <target state="translated">&lt;a href=&quot;https://github.com/shouldjs/should.js&quot;&gt;should.js&lt;/a&gt; : estilo BDD que se muestra a lo largo de estos documentos</target>
        </trans-unit>
        <trans-unit id="f2735f46f5835a9f801e5ea1398a95235e55f2c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/visionmedia/better-assert&quot;&gt;better-assert&lt;/a&gt; - C-style self-documenting &lt;code&gt;assert()&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/visionmedia/better-assert&quot;&gt;mejor-aserci&amp;oacute;n&lt;/a&gt; - Aserci&amp;oacute;n de auto-documentaci&amp;oacute;n de estilo C &lt;code&gt;assert()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b71b6885763b5a41994b3d2a2cb89e5b27dcd14a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=maty.vscode-mocha-sidebar&quot;&gt;Mocha sidebar&lt;/a&gt; is the most complete mocha extension for vs code.</source>
          <target state="translated">&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=maty.vscode-mocha-sidebar&quot;&gt;La barra lateral de Mocha&lt;/a&gt; es la extensi&amp;oacute;n de mocha m&amp;aacute;s completa para el c&amp;oacute;digo vs.</target>
        </trans-unit>
        <trans-unit id="503fa814b546e45dd52784f0523272a9253e8f6c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://wallabyjs.com/&quot;&gt;Wallaby.js&lt;/a&gt; is a continuous testing tool that enables real-time code coverage for Mocha with any assertion library in VS Code, Atom, JetBrains IDEs (IntelliJ IDEA, WebStorm, etc.), Sublime Text and Visual Studio for both browser and node.js projects.</source>
          <target state="translated">&lt;a href=&quot;https://wallabyjs.com/&quot;&gt;Wallaby.js&lt;/a&gt; es una herramienta de prueba continua que permite la cobertura de c&amp;oacute;digo en tiempo real para Mocha con cualquier biblioteca de aserciones en VS Code, Atom, JetBrains IDE (IntelliJ IDEA, WebStorm, etc.), Sublime Text y Visual Studio tanto para el navegador como para el nodo. js proyectos.</target>
        </trans-unit>
        <trans-unit id="44372724c81d9e9e00f55a25b45700c20a62cfc6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.gnu.org/software/emacs/&quot;&gt;Emacs&lt;/a&gt; support for running Mocha tests is available via a 3rd party package &lt;a href=&quot;https://github.com/scottaj/mocha.el&quot;&gt;mocha.el&lt;/a&gt;. The package is available on MELPA, and can be installed via &lt;code&gt;M-x package-install mocha&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.gnu.org/software/emacs/&quot;&gt;El&lt;/a&gt; soporte de Emacs para ejecutar pruebas de Mocha est&amp;aacute; disponible a trav&amp;eacute;s de un paquete de terceros &lt;a href=&quot;https://github.com/scottaj/mocha.el&quot;&gt;mocha.el&lt;/a&gt; . El paquete est&amp;aacute; disponible en MELPA y se puede instalar a trav&amp;eacute;s de &lt;code&gt;M-x package-install mocha&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a4aaad3792c24d5288746210dca61d836f7a2b70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.jetbrains.com/&quot;&gt;JetBrains&lt;/a&gt; provides a &lt;a href=&quot;https://www.jetbrains.com/idea/features/nodejs.html&quot;&gt;NodeJS plugin&lt;/a&gt; for its suite of IDEs (IntelliJ IDEA, WebStorm, etc.), which contains a Mocha test runner, among other things.</source>
          <target state="translated">&lt;a href=&quot;https://www.jetbrains.com/&quot;&gt;JetBrains&lt;/a&gt; proporciona un &lt;a href=&quot;https://www.jetbrains.com/idea/features/nodejs.html&quot;&gt;complemento NodeJS&lt;/a&gt; para su suite de IDE (IntelliJ IDEA, WebStorm, etc.), que contiene un corredor de prueba Mocha, entre otras cosas.</target>
        </trans-unit>
        <trans-unit id="11291f2858e846ccb99830c798ce583b966f2c98" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.npmjs.com/package/mochawesome&quot;&gt;Mochawesome&lt;/a&gt; is a great alternative to the default HTML reporter.</source>
          <target state="translated">&lt;a href=&quot;https://www.npmjs.com/package/mochawesome&quot;&gt;Mochawesome&lt;/a&gt; es una gran alternativa al reportero HTML predeterminado.</target>
        </trans-unit>
        <trans-unit id="c5713812df5d43a6deaf12c65bcdb06b48905d51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--exit&lt;/code&gt; / &lt;code&gt;--no-exit&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--exit&lt;/code&gt; / &lt;code&gt;--no-exit&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="56b7c5cfeaded6ce0ea7e6c4d4d438bdd19cffbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context()&lt;/code&gt; is just an alias for &lt;code&gt;describe()&lt;/code&gt;, and behaves the same way; it just provides a way to keep tests easier to read and organized. Similarly, &lt;code&gt;specify()&lt;/code&gt; is an alias for &lt;code&gt;it()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;context()&lt;/code&gt; es solo un alias para &lt;code&gt;describe()&lt;/code&gt; y se comporta de la misma manera; simplemente proporciona una forma de mantener las pruebas m&amp;aacute;s f&amp;aacute;ciles de leer y organizar. Del mismo modo, &lt;code&gt;specify()&lt;/code&gt; es un alias para &lt;code&gt;it()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5068d189907c7d855768fab68d718a9be022de60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mocha.allowUncaught()&lt;/code&gt; : If called, uncaught errors will not be absorbed by the error handler.</source>
          <target state="translated">&lt;code&gt;mocha.allowUncaught()&lt;/code&gt; : si se llama, los errores no detectados no ser&amp;aacute;n absorbidos por el controlador de errores.</target>
        </trans-unit>
        <trans-unit id="bfedfd7c997cd3bf4a80b5a5f8369a1e541211bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;noHighlighting&lt;/code&gt;: If set to &lt;code&gt;true&lt;/code&gt;, do not attempt to use syntax highlighting on output test code.</source>
          <target state="translated">&lt;code&gt;noHighlighting&lt;/code&gt; : si se establece en &lt;code&gt;true&lt;/code&gt; , no intente utilizar el resaltado de sintaxis en el c&amp;oacute;digo de prueba de salida.</target>
        </trans-unit>
        <trans-unit id="0928996ca546cd8754bd4fbae4ffc7e1c53c09a7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Best practice&lt;/em&gt;: Don&amp;rsquo;t do nothing! A test should make an assertion or use &lt;code&gt;this.skip()&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;Pr&amp;aacute;ctica recomendada&lt;/em&gt; : &amp;iexcl;No hagas nada! Una prueba debe hacer una afirmaci&amp;oacute;n o usar &lt;code&gt;this.skip()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="89c3b78b1338c34c1054e3cfdcf74ed2974b90eb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Best practice&lt;/em&gt;: To avoid confusion, do not execute further instructions in a test or hook after calling &lt;code&gt;this.skip()&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;Pr&amp;aacute;ctica recomendada&lt;/em&gt; : para evitar confusiones, no ejecute m&amp;aacute;s instrucciones en una prueba o enganche despu&amp;eacute;s de llamar a &lt;code&gt;this.skip()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="334b6d6a556867914bb2b447cf3f8a036662d66b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Best practice&lt;/em&gt;: Use &lt;code&gt;.skip()&lt;/code&gt; instead of commenting tests out.</source>
          <target state="translated">&lt;em&gt;Pr&amp;aacute;ctica recomendada&lt;/em&gt; : utilice &lt;code&gt;.skip()&lt;/code&gt; lugar de comentar las pruebas.</target>
        </trans-unit>
        <trans-unit id="65eadcbf418cf5130eba58897cb4af4e5e2ea8c8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;If you do not need to use&lt;/em&gt; Mocha&amp;rsquo;s context, lambdas should work. However, the result will be more difficult to refactor if the need eventually arises.</source>
          <target state="translated">&lt;em&gt;Si no necesita utilizar&lt;/em&gt; el contexto de Mocha, las lambdas deber&amp;iacute;an funcionar. Sin embargo, el resultado ser&amp;aacute; m&amp;aacute;s dif&amp;iacute;cil de refactorizar si finalmente surge la necesidad.</target>
        </trans-unit>
        <trans-unit id="4a0edfb51f0156b9ebb2dc4a46c65c0e9b5e9717" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: All nested suites will still be executed.</source>
          <target state="translated">&lt;em&gt;Nota&lt;/em&gt; : todas las suites anidadas se seguir&amp;aacute;n ejecutando.</target>
        </trans-unit>
        <trans-unit id="4f727f5f0c387f4d76840c0b9751e20d642d7645" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: Double quotes around the glob are recommended for portability.</source>
          <target state="translated">&lt;em&gt;Nota&lt;/em&gt; : Se recomiendan comillas dobles alrededor del globo para la portabilidad.</target>
        </trans-unit>
        <trans-unit id="02ad39309be3772f389ea773e9d23183fe6d1694" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: Hooks, if present, will still be executed.</source>
          <target state="translated">&lt;em&gt;Nota&lt;/em&gt; : los Hooks, si est&amp;aacute;n presentes, se seguir&amp;aacute;n ejecutando.</target>
        </trans-unit>
        <trans-unit id="110e2d10c2ab554a2d2a5743c8a99ef43321577c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: The &lt;code&gt;require&lt;/code&gt; interface cannot be run via the &lt;code&gt;node&lt;/code&gt; executable, and must be run via &lt;code&gt;mocha&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;Nota&lt;/em&gt; : La interfaz &lt;code&gt;require&lt;/code&gt; no se puede ejecutar a trav&amp;eacute;s del ejecutable del &lt;code&gt;node&lt;/code&gt; , y debe ejecutarse a trav&amp;eacute;s de &lt;code&gt;mocha&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="27a683517748a0c2755328ea767522c20595a687" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Prior to&lt;/em&gt; version v4.0.0, &lt;em&gt;by default&lt;/em&gt;, Mocha would force its own process to exit once it was finished executing all tests. This behavior enables a set of potential problems; it&amp;rsquo;s indicative of tests (or fixtures, harnesses, code under test, etc.) which don&amp;rsquo;t clean up after themselves properly. Ultimately, &amp;ldquo;dirty&amp;rdquo; tests can (but not always) lead to &lt;em&gt;false positive&lt;/em&gt; or &lt;em&gt;false negative&lt;/em&gt; results.</source>
          <target state="translated">&lt;em&gt;Antes de la&lt;/em&gt; versi&amp;oacute;n v4.0.0, &lt;em&gt;de forma predeterminada&lt;/em&gt; , Mocha forzaba la salida de su propio proceso una vez que terminaba de ejecutar todas las pruebas. Este comportamiento habilita una serie de problemas potenciales; es indicativo de pruebas (o accesorios, arneses, c&amp;oacute;digo bajo prueba, etc.) que no se limpian correctamente. En &amp;uacute;ltima instancia, las pruebas &quot;sucias&quot; pueden (pero no siempre) dar lugar a resultados &lt;em&gt;falsos positivos&lt;/em&gt; o &lt;em&gt;falsos negativos&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="b1c748253cdbecc40d965c206f0cf424884c0b53" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Updated in Mocha v4.0.0&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Actualizado en Mocha v4.0.0&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7542c68c1542b245f7a2242d4daea6e0514d3bbd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;--compilers&lt;/code&gt; is deprecated as of Mocha v4.0.0. See &lt;a href=&quot;https://github.com/mochajs/mocha/wiki/compilers-deprecation&quot;&gt;further explanation and workarounds&lt;/a&gt;.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;--compilers&lt;/code&gt; est&amp;aacute; obsoleto a partir de Mocha v4.0.0. Consulte &lt;a href=&quot;https://github.com/mochajs/mocha/wiki/compilers-deprecation&quot;&gt;m&amp;aacute;s explicaciones y soluciones&lt;/a&gt; .&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ee8b552bf5ae2f79e3e3ef40675d7a798575de65" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: Example below was written using Selenium webdriver (which &lt;a href=&quot;https://github.com/SeleniumHQ/selenium/blob/c10e8a955883f004452cdde18096d70738397788/javascript/node/selenium-webdriver/testing/index.js&quot;&gt;overwrites global Mocha hooks&lt;/a&gt; for &lt;code&gt;Promise&lt;/code&gt; chain).</source>
          <target state="translated">&lt;strong&gt;NOTA&lt;/strong&gt; : El ejemplo a continuaci&amp;oacute;n se escribi&amp;oacute; usando Selenium webdriver (que &lt;a href=&quot;https://github.com/SeleniumHQ/selenium/blob/c10e8a955883f004452cdde18096d70738397788/javascript/node/selenium-webdriver/testing/index.js&quot;&gt;sobrescribe los ganchos de Mocha globales&lt;/a&gt; para la cadena &lt;code&gt;Promise&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="de16085c47655e171af51180d7ee56cc5015980b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The HTML reporter is not intended for use on the command-line.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;El reportero HTML no est&amp;aacute; dise&amp;ntilde;ado para su uso en la l&amp;iacute;nea de comandos.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="892de634332bd473af3b1289e44a4321bab50f85" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The easiest way to &amp;ldquo;fix&amp;rdquo; the issue is to simply pass &lt;code&gt;--exit&lt;/code&gt; to the Mocha process.&lt;/strong&gt; It &lt;em&gt;can&lt;/em&gt; be time-consuming to debug&amp;ndash;because it&amp;rsquo;s not always obvious where the problem is&amp;ndash;but it &lt;em&gt;is&lt;/em&gt; recommended to do so.</source>
          <target state="translated">&lt;strong&gt;La forma m&amp;aacute;s f&amp;aacute;cil de &quot;solucionar&quot; el problema es simplemente pasar - &lt;code&gt;--exit&lt;/code&gt; al proceso Mocha. &lt;/strong&gt;Se &lt;em&gt;puede&lt;/em&gt; llevar mucho tiempo para depurar, porque no siempre es obvio d&amp;oacute;nde est&amp;aacute; el problema, pero &lt;em&gt;se&lt;/em&gt; recomienda hacerlo.</target>
        </trans-unit>
        <trans-unit id="a0f13d884830b5fdf5116a0ae9b36c1b10716a99" translate="yes" xml:space="preserve">
          <source>A brief outline on the order Mocha&amp;rsquo;s components are executed. Worth noting that all hooks, &lt;code&gt;describe&lt;/code&gt; and &lt;code&gt;it&lt;/code&gt; callbacks are run in the order they are defined (i.e. found in the file).</source>
          <target state="translated">Un breve resumen sobre el orden en que se ejecutan los componentes de Mocha. A tener en cuenta que todos los ganchos, &lt;code&gt;describe&lt;/code&gt; n y &lt;code&gt;it&lt;/code&gt; devoluciones de llamada se ejecutan en el orden en que est&amp;aacute;n definidos (es decir, encontrarse en el archivo).</target>
        </trans-unit>
        <trans-unit id="0dddd338ac80883aa9a63cca03ecd57465127f01" translate="yes" xml:space="preserve">
          <source>A typical setup might look something like the following, where we call &lt;code&gt;mocha.setup('bdd')&lt;/code&gt; to use the &lt;strong&gt;BDD&lt;/strong&gt; interface before loading the test scripts, running them &lt;code&gt;onload&lt;/code&gt; with &lt;code&gt;mocha.run()&lt;/code&gt;.</source>
          <target state="translated">Una configuraci&amp;oacute;n t&amp;iacute;pica podr&amp;iacute;a parecerse a la siguiente, donde llamamos a &lt;code&gt;mocha.setup('bdd')&lt;/code&gt; para usar la interfaz &lt;strong&gt;BDD&lt;/strong&gt; antes de cargar los scripts de prueba, ejecut&amp;aacute;ndolos &lt;code&gt;onload&lt;/code&gt; con &lt;code&gt;mocha.run()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d93d10ff0fbef1b4aa0ddc24e10e907746d3c85a" translate="yes" xml:space="preserve">
          <source>API</source>
          <target state="translated">API</target>
        </trans-unit>
        <trans-unit id="390d8b7936094f003575622b17c10a13f1682936" translate="yes" xml:space="preserve">
          <source>About Babel</source>
          <target state="translated">Sobre Babel</target>
        </trans-unit>
        <trans-unit id="ce20799f82cbdcfea600bef25db5ac2131c4d651" translate="yes" xml:space="preserve">
          <source>Accepts a comma-delimited list of accepted global variable names. For example, suppose your app deliberately exposes a global named &lt;code&gt;app&lt;/code&gt; and &lt;code&gt;YUI&lt;/code&gt;, you may want to add &lt;code&gt;--globals app,YUI&lt;/code&gt;. It also accepts wildcards. You could do &lt;code&gt;--globals '*bar'&lt;/code&gt; and it would match &lt;code&gt;foobar&lt;/code&gt;, &lt;code&gt;barbar&lt;/code&gt;, etc. You can also simply pass in &lt;code&gt;'*'&lt;/code&gt; to ignore all globals.</source>
          <target state="translated">Acepta una lista delimitada por comas de nombres de variables globales aceptados. Por ejemplo, suponga que su aplicaci&amp;oacute;n expone deliberadamente una &lt;code&gt;app&lt;/code&gt; nombre global y &lt;code&gt;YUI&lt;/code&gt; , es posible que desee agregar &lt;code&gt;--globals app,YUI&lt;/code&gt; . Tambi&amp;eacute;n acepta comodines. Podr&amp;iacute;a hacer &lt;code&gt;--globals '*bar'&lt;/code&gt; y coincidir&amp;iacute;a con &lt;code&gt;foobar&lt;/code&gt; , &lt;code&gt;barbar&lt;/code&gt; , etc. Tambi&amp;eacute;n puede simplemente pasar &lt;code&gt;'*'&lt;/code&gt; para ignorar todos los globales.</target>
        </trans-unit>
        <trans-unit id="f6eb19d71e1ae75e095ac9db79aab38637aa620f" translate="yes" xml:space="preserve">
          <source>Add a file you want included first in a test suite. This is useful if you have some generic setup code that must be included within the test suite. The file passed is not affected by any other flags (&lt;code&gt;--recursive&lt;/code&gt; or &lt;code&gt;--sort&lt;/code&gt; have no effect). Accepts multiple &lt;code&gt;--file&lt;/code&gt; flags to include multiple files, the order in which the flags are given are the order in which the files are included in the test suite. Can also be used in &lt;code&gt;mocha.opts&lt;/code&gt;.</source>
          <target state="translated">Agregue un archivo que desee incluir primero en un conjunto de pruebas. Esto es &amp;uacute;til si tiene alg&amp;uacute;n c&amp;oacute;digo de configuraci&amp;oacute;n gen&amp;eacute;rico que debe incluirse dentro del conjunto de pruebas. El archivo pasado no se ve afectado por ning&amp;uacute;n otro indicador ( &lt;code&gt;--recursive&lt;/code&gt; o &lt;code&gt;--sort&lt;/code&gt; no tienen ning&amp;uacute;n efecto). Acepta varios indicadores de &lt;code&gt;--file&lt;/code&gt; para incluir varios archivos, el orden en el que se dan los indicadores es el orden en el que se incluyen los archivos en el conjunto de pruebas. Tambi&amp;eacute;n se puede utilizar en &lt;code&gt;mocha.opts&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d2f09268f0c41b32392346459a011f44d861320" translate="yes" xml:space="preserve">
          <source>Again, use &lt;code&gt;this.timeout(0)&lt;/code&gt; to disable the timeout for a hook.</source>
          <target state="translated">Nuevamente, use &lt;code&gt;this.timeout(0)&lt;/code&gt; para deshabilitar el tiempo de espera para un gancho.</target>
        </trans-unit>
        <trans-unit id="289af3fcb7614daa438cf729070ffef737957648" translate="yes" xml:space="preserve">
          <source>All hooks (&lt;code&gt;before()&lt;/code&gt;, &lt;code&gt;after()&lt;/code&gt;, &lt;code&gt;beforeEach()&lt;/code&gt;, &lt;code&gt;afterEach()&lt;/code&gt;) may be sync or async as well, behaving much like a regular test-case. For example, you may wish to populate database with dummy content before each test:</source>
          <target state="translated">Todos los ganchos ( &lt;code&gt;before()&lt;/code&gt; , &lt;code&gt;after()&lt;/code&gt; , &lt;code&gt;beforeEach()&lt;/code&gt; , &lt;code&gt;afterEach()&lt;/code&gt; ) pueden ser sincronizados o asincr&amp;oacute;nicos tambi&amp;eacute;n, comport&amp;aacute;ndose como un caso de prueba normal. Por ejemplo, es posible que desee completar la base de datos con contenido ficticio antes de cada prueba:</target>
        </trans-unit>
        <trans-unit id="a0600916547646b30608339ed0566a7a7311cb26" translate="yes" xml:space="preserve">
          <source>All of the previous examples were written using the &lt;strong&gt;BDD&lt;/strong&gt; interface.</source>
          <target state="translated">Todos los ejemplos anteriores se escribieron utilizando la interfaz &lt;strong&gt;BDD&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="6633fa7c33d41f9538bafc31713f5cc20e7e52c5" translate="yes" xml:space="preserve">
          <source>Alternately, instead of using the &lt;code&gt;done()&lt;/code&gt; callback, you may return a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise&lt;/a&gt;. This is useful if the APIs you are testing return promises instead of taking callbacks:</source>
          <target state="translated">Alternativamente, en lugar de usar la devoluci&amp;oacute;n de llamada &lt;code&gt;done()&lt;/code&gt; , puede devolver una &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promesa&lt;/a&gt; . Esto es &amp;uacute;til si las API que est&amp;aacute; probando devuelven promesas en lugar de recibir devoluciones de llamada:</target>
        </trans-unit>
        <trans-unit id="03f510bb6cb4dea10971d9bb6c0260d30a7de793" translate="yes" xml:space="preserve">
          <source>Any hook can be invoked with an optional description, making it easier to pinpoint errors in your tests. If a hook is given a named function, that name will be used if no description is supplied.</source>
          <target state="translated">Cualquier gancho puede ser invocado con una descripción opcional,facilitando la localización de errores en sus pruebas.Si a un gancho se le da una función con nombre,ese nombre se usará si no se proporciona una descripción.</target>
        </trans-unit>
        <trans-unit id="2eff12655bfd37e8aba34fc4ce9e8a7b43bbf939" translate="yes" xml:space="preserve">
          <source>Arrow Functions</source>
          <target state="translated">Funciones de las flechas</target>
        </trans-unit>
        <trans-unit id="49bf55dc112eb3597726ba8ecf785a4fae4cbce0" translate="yes" xml:space="preserve">
          <source>Assertions</source>
          <target state="translated">Assertions</target>
        </trans-unit>
        <trans-unit id="9dafd7cfbbe492b64e8825fd60794e30fb996eaa" translate="yes" xml:space="preserve">
          <source>Asynchronous Code</source>
          <target state="translated">Código asíncrono</target>
        </trans-unit>
        <trans-unit id="1dc7d645ff307166377bb1ae5a2ceb0ed4f4a597" translate="yes" xml:space="preserve">
          <source>Asynchronous Hooks</source>
          <target state="translated">Ganchos asíncronos</target>
        </trans-unit>
        <trans-unit id="38b5d0dd2a1d99cba157a215ae014edf10488b48" translate="yes" xml:space="preserve">
          <source>BDD</source>
          <target state="translated">BDD</target>
        </trans-unit>
        <trans-unit id="93c1dca080e0df99b78d4c9a4de497925b17b740" translate="yes" xml:space="preserve">
          <source>Back in the terminal:</source>
          <target state="translated">De vuelta en la terminal:</target>
        </trans-unit>
        <trans-unit id="76932969916b9530f79f906d201312b3c98aa939" translate="yes" xml:space="preserve">
          <source>Back on the server, Mocha will attempt to load &lt;code&gt;&quot;./test/mocha.opts&quot;&lt;/code&gt; as a Run-Control file of sorts.</source>
          <target state="translated">De vuelta en el servidor, Mocha intentar&amp;aacute; cargar &lt;code&gt;&quot;./test/mocha.opts&quot;&lt;/code&gt; como una especie de archivo de control de ejecuci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="6a9c9bab317fe02e67112c150ce937d254a60e32" translate="yes" xml:space="preserve">
          <source>Be mindful not to commit usages of &lt;code&gt;.only()&lt;/code&gt; to version control, unless you really mean it! To do so one can run mocha with the option &lt;code&gt;--forbid-only&lt;/code&gt; in the continuous integration test command (or in a git precommit hook).</source>
          <target state="translated">Tenga cuidado de no comprometer el uso de &lt;code&gt;.only()&lt;/code&gt; al control de versiones, a menos que realmente lo diga . Para hacerlo, se puede ejecutar mocha con la opci&amp;oacute;n &lt;code&gt;--forbid-only&lt;/code&gt; en el comando de prueba de integraci&amp;oacute;n continua (o en un gancho de confirmaci&amp;oacute;n previa de git).</target>
        </trans-unit>
        <trans-unit id="035742046edc6a28a1cf9823f15f50ac906b0794" translate="yes" xml:space="preserve">
          <source>Because this test &lt;em&gt;does nothing&lt;/em&gt;, it will be reported as &lt;em&gt;passing&lt;/em&gt;.</source>
          <target state="translated">Debido a que esta prueba &lt;em&gt;no hace nada&lt;/em&gt; , se informar&amp;aacute; como &lt;em&gt;aprobada&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="b9a22b5b44d7a2e3bf14c0874ea69cef878081f7" translate="yes" xml:space="preserve">
          <source>Before Mocha v3.0.0, &lt;code&gt;this.skip()&lt;/code&gt; was not supported in asynchronous tests and hooks.</source>
          <target state="translated">Antes de Mocha v3.0.0, &lt;code&gt;this.skip()&lt;/code&gt; no se admit&amp;iacute;a en pruebas as&amp;iacute;ncronas ni enganches.</target>
        </trans-unit>
        <trans-unit id="dd97b1d45a21d2dca8f76533e8120a4564b26f0f" translate="yes" xml:space="preserve">
          <source>Beginning-of-line comment support is available; any line &lt;em&gt;starting&lt;/em&gt; with a hash (#) symbol will be considered a comment. Blank lines may also be used. Any other line will be treated as a command-line argument (along with any associated option value) to be used as a default setting. Settings should be specified one per line.</source>
          <target state="translated">El soporte para comentarios de inicio de l&amp;iacute;nea est&amp;aacute; disponible; cualquier l&amp;iacute;nea que &lt;em&gt;comience&lt;/em&gt; con un s&amp;iacute;mbolo de almohadilla (#) se considerar&amp;aacute; un comentario. Tambi&amp;eacute;n se pueden utilizar l&amp;iacute;neas en blanco. Cualquier otra l&amp;iacute;nea se tratar&amp;aacute; como un argumento de l&amp;iacute;nea de comando (junto con cualquier valor de opci&amp;oacute;n asociado) para ser utilizado como configuraci&amp;oacute;n predeterminada. Los ajustes deben especificarse uno por l&amp;iacute;nea.</target>
        </trans-unit>
        <trans-unit id="1fe5f18a82f2f33248c686dc8605a6041ecad6f9" translate="yes" xml:space="preserve">
          <source>Browser Configuration</source>
          <target state="translated">Configuración del navegador</target>
        </trans-unit>
        <trans-unit id="7264b421a309869abd486d52587fd493e2717efb" translate="yes" xml:space="preserve">
          <source>Browser-specific Option(s)</source>
          <target state="translated">Opción(es)específica(s)del navegador</target>
        </trans-unit>
        <trans-unit id="ee269b8b06248dcfd3dcba5fa33bdeb97ed38dc6" translate="yes" xml:space="preserve">
          <source>Browser-specific methods</source>
          <target state="translated">Métodos específicos del navegador</target>
        </trans-unit>
        <trans-unit id="4334130e97520ac7097525a48ac1e304d360c7cb" translate="yes" xml:space="preserve">
          <source>But &lt;em&gt;tests will have precedence&lt;/em&gt;:</source>
          <target state="translated">Pero las &lt;em&gt;pruebas tendr&amp;aacute;n prioridad&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="84d09fc276227a99a85ff46a9de164688194ec4a" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;mocha&lt;/code&gt; looks for the glob &lt;code&gt;./test/*.js&lt;/code&gt;, so you may want to put your tests in &lt;code&gt;test/&lt;/code&gt; folder. If you want to include sub directories, pass the &lt;code&gt;--recursive&lt;/code&gt; option.</source>
          <target state="translated">De forma predeterminada, &lt;code&gt;mocha&lt;/code&gt; busca el glob &lt;code&gt;./test/*.js&lt;/code&gt; , por lo que es posible que desee poner sus pruebas en la carpeta &lt;code&gt;test/&lt;/code&gt; . Si desea incluir subdirectorios, pase la opci&amp;oacute;n &lt;code&gt;--recursive&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c7927d0b938949e3c69d17add97d21ff99bf3841" translate="yes" xml:space="preserve">
          <source>By default, it will output to the console. To write directly to a file, use &lt;code&gt;--reporter-options output=filename.xml&lt;/code&gt;.</source>
          <target state="translated">De forma predeterminada, se enviar&amp;aacute; a la consola. Para escribir directamente en un archivo, use &lt;code&gt;--reporter-options output=filename.xml&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="50b2705a7a7fbc592728f9775d0530826eb9332f" translate="yes" xml:space="preserve">
          <source>By using this option in conjunction with &lt;code&gt;--check-leaks&lt;/code&gt;, you can specify a whitelist of known global variables that you would expect to leak into global scope.</source>
          <target state="translated">Al usar esta opci&amp;oacute;n junto con &lt;code&gt;--check-leaks&lt;/code&gt; , puede especificar una lista blanca de variables globales conocidas que esperar&amp;iacute;a filtrar al alcance global.</target>
        </trans-unit>
        <trans-unit id="5df9bae9c75abec6d59a80bfbda9901d5365728f" translate="yes" xml:space="preserve">
          <source>CoffeeScript is no longer supported out of the box. CS and similar transpilers may be used by mapping the file extensions (for use with &lt;code&gt;--watch&lt;/code&gt;) and the module name. For example &lt;code&gt;--compilers coffee:coffee-script&lt;/code&gt; with CoffeeScript 1.6- or &lt;code&gt;--compilers coffee:coffee-script/register&lt;/code&gt; with CoffeeScript 1.7+.</source>
          <target state="translated">CoffeeScript ya no se admite de f&amp;aacute;brica. Se pueden usar CS y transpilers similares mapeando las extensiones de archivo (para usar con &lt;code&gt;--watch&lt;/code&gt; ) y el nombre del m&amp;oacute;dulo. Por ejemplo, &lt;code&gt;--compilers coffee:coffee-script&lt;/code&gt; con CoffeeScript 1.6- o &lt;code&gt;--compilers coffee:coffee-script/register&lt;/code&gt; con CoffeeScript 1.7+.</target>
        </trans-unit>
        <trans-unit id="b65463cb6a42a17de514acc4659f7fd331e0876a" translate="yes" xml:space="preserve">
          <source>Connect</source>
          <target state="translated">Connect</target>
        </trans-unit>
        <trans-unit id="66716e9eea1ed594ef32a49efc5599e83d44105f" translate="yes" xml:space="preserve">
          <source>Contrast the above test with the following code:</source>
          <target state="translated">Contrasta la prueba anterior con el siguiente código:</target>
        </trans-unit>
        <trans-unit id="e1e22a2edf0e09bfb03c176871687bac5efad07b" translate="yes" xml:space="preserve">
          <source>Delayed Root Suite</source>
          <target state="translated">Suite de la raíz retardada</target>
        </trans-unit>
        <trans-unit id="47eb9c334c8a2e0a8a91f2e8b48e60e41e096aef" translate="yes" xml:space="preserve">
          <source>Describing Hooks</source>
          <target state="translated">Describiendo los ganchos</target>
        </trans-unit>
        <trans-unit id="1c23dd4256655591e65e1cbc41de626aaf29c582" translate="yes" xml:space="preserve">
          <source>Detects Multiple Calls to &lt;code&gt;done()&lt;/code&gt;</source>
          <target state="translated">Detecta varias llamadas &lt;code&gt;done()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4ed7a7b52b1dde0f16ee0faa573e3bfbbef4f4db" translate="yes" xml:space="preserve">
          <source>Detects Multiple Calls to done()</source>
          <target state="translated">Detecta múltiples llamadas a done()</target>
        </trans-unit>
        <trans-unit id="f65624aa7c4a5284f37560a89a431cca52591579" translate="yes" xml:space="preserve">
          <source>Diffs</source>
          <target state="translated">Diffs</target>
        </trans-unit>
        <trans-unit id="018f842784720aaa37c65f55fdf9542a1da068a7" translate="yes" xml:space="preserve">
          <source>Disables timeouts. Equivalent to &lt;code&gt;--timeout 0&lt;/code&gt;.</source>
          <target state="translated">Desactiva los tiempos de espera. Equivalente a &lt;code&gt;--timeout 0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cdba60a525e91017acace2575a32341fe23198be" translate="yes" xml:space="preserve">
          <source>Doc</source>
          <target state="translated">Doc</target>
        </trans-unit>
        <trans-unit id="21c65003e5889c6eb18f808fd5fd858b05812ef2" translate="yes" xml:space="preserve">
          <source>Dot Matrix</source>
          <target state="translated">Matriz de puntos</target>
        </trans-unit>
        <trans-unit id="010f60616208f0911f365735f9d10694e2a3ff48" translate="yes" xml:space="preserve">
          <source>Dynamically Generating Tests</source>
          <target state="translated">Pruebas generadas dinámicamente</target>
        </trans-unit>
        <trans-unit id="df188f599aae58c67186d8ff806ff395566e71eb" translate="yes" xml:space="preserve">
          <source>Editor Plugins</source>
          <target state="translated">Plugins de edición</target>
        </trans-unit>
        <trans-unit id="d89a5ec1140ce5dd978c2baf15972fdf48b8b61f" translate="yes" xml:space="preserve">
          <source>Emacs</source>
          <target state="translated">Emacs</target>
        </trans-unit>
        <trans-unit id="33326c8c1b47f26cc19939feab6072343a029216" translate="yes" xml:space="preserve">
          <source>Enables node&amp;rsquo;s debugger support, this executes your script(s) with &lt;code&gt;node debug &amp;lt;file ...&amp;gt;&lt;/code&gt; allowing you to step through code and break with the &lt;code&gt;debugger&lt;/code&gt; statement. Note the difference between &lt;code&gt;mocha debug&lt;/code&gt; and &lt;code&gt;mocha --debug&lt;/code&gt;: &lt;code&gt;mocha debug&lt;/code&gt; will fire up node&amp;rsquo;s built-in debug client, &lt;code&gt;mocha --debug&lt;/code&gt; will allow you to use a different interface &amp;mdash; such as the Blink Developer Tools. Implies &lt;code&gt;--no-timeouts&lt;/code&gt;.</source>
          <target state="translated">Habilita la compatibilidad con el depurador del nodo, esto ejecuta su (s) script (s) con el &lt;code&gt;node debug &amp;lt;file ...&amp;gt;&lt;/code&gt; lo que le permite recorrer el c&amp;oacute;digo y romper con la declaraci&amp;oacute;n del &lt;code&gt;debugger&lt;/code&gt; . Tenga en cuenta la diferencia entre &lt;code&gt;mocha debug&lt;/code&gt; y &lt;code&gt;mocha --debug&lt;/code&gt; : &lt;code&gt;mocha debug&lt;/code&gt; activar&amp;aacute; el cliente de depuraci&amp;oacute;n integrado del nodo, &lt;code&gt;mocha --debug&lt;/code&gt; le permitir&amp;aacute; usar una interfaz diferente, como las herramientas de desarrollo Blink. Implica &lt;code&gt;--no-timeouts&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="c6b73f631d9ed023ec9b067a90f104d4c4a8d5e2" translate="yes" xml:space="preserve">
          <source>Exclusive Tests</source>
          <target state="translated">Pruebas exclusivas</target>
        </trans-unit>
        <trans-unit id="7ee1f8db6ab4251f4638f9fbba832f76a0ec0db6" translate="yes" xml:space="preserve">
          <source>Executes tests on changes to JavaScript in the CWD, and once initially.</source>
          <target state="translated">Ejecuta pruebas sobre los cambios de JavaScript en el CWD,y una vez inicialmente.</target>
        </trans-unit>
        <trans-unit id="0e16537914a0163e01ecd7e0945bc56c50eb3849" translate="yes" xml:space="preserve">
          <source>Exports</source>
          <target state="translated">Exports</target>
        </trans-unit>
        <trans-unit id="8b652040961793dd0ebfc35016e694eff7d88f91" translate="yes" xml:space="preserve">
          <source>Express</source>
          <target state="translated">Express</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Features</target>
        </trans-unit>
        <trans-unit id="e2b5dbde05a80900b6d36cfb626524c53a5cd0a7" translate="yes" xml:space="preserve">
          <source>For example, suppose you have the following &lt;code&gt;mocha.opts&lt;/code&gt; file:</source>
          <target state="translated">Por ejemplo, suponga que tiene el siguiente archivo &lt;code&gt;mocha.opts&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5f7c8b40764d6e6cba3037654fe88223f8cbc034" translate="yes" xml:space="preserve">
          <source>For example, suppose you have the following JavaScript:</source>
          <target state="translated">Por ejemplo,supongamos que tienes el siguiente JavaScript:</target>
        </trans-unit>
        <trans-unit id="010b85ad56b34c34c7c2a3b2436c740e30428ed5" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="translated">Empezando</target>
        </trans-unit>
        <trans-unit id="25f6f8824c49094eb1fdcf8139b250636d9a6086" translate="yes" xml:space="preserve">
          <source>Given Mocha&amp;rsquo;s use of &lt;code&gt;Function.prototype.call&lt;/code&gt; and function expressions to define suites and test cases, it&amp;rsquo;s straightforward to generate your tests dynamically. No special syntax is required &amp;mdash; plain ol&amp;rsquo; JavaScript can be used to achieve functionality similar to &amp;ldquo;parameterized&amp;rdquo; tests, which you may have seen in other frameworks.</source>
          <target state="translated">Dado el uso de Mocha de &lt;code&gt;Function.prototype.call&lt;/code&gt; y expresiones de funci&amp;oacute;n para definir suites y casos de prueba, es sencillo generar sus pruebas de forma din&amp;aacute;mica. No se requiere una sintaxis especial: se puede usar JavaScript simple para lograr una funcionalidad similar a las pruebas &quot;parametrizadas&quot;, que puede haber visto en otros marcos.</target>
        </trans-unit>
        <trans-unit id="2589b1f45c54b66754ff3a6ba0b78a1a2c58e37d" translate="yes" xml:space="preserve">
          <source>Grep</source>
          <target state="translated">Grep</target>
        </trans-unit>
        <trans-unit id="21a3c554b2b3f33d141b4b3dba634c148e87f258" translate="yes" xml:space="preserve">
          <source>HTML Reporter</source>
          <target state="translated">Reportero HTML</target>
        </trans-unit>
        <trans-unit id="7b84bacdbcc873fa7100354ef56eee9e3ca78c5f" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of executing an individual test case:</source>
          <target state="translated">A continuaci&amp;oacute;n, se muestra un ejemplo de ejecuci&amp;oacute;n de un caso de prueba individual:</target>
        </trans-unit>
        <trans-unit id="54601f868c7e4383dd09d71df7cfdac40c45ce96" translate="yes" xml:space="preserve">
          <source>Hook-level</source>
          <target state="translated">Hook-level</target>
        </trans-unit>
        <trans-unit id="5c7eb9c28bf847e23d9f404dedbac5f071586b71" translate="yes" xml:space="preserve">
          <source>Hook-level timeouts may also be applied:</source>
          <target state="translated">También pueden aplicarse tiempos de espera a nivel de gancho:</target>
        </trans-unit>
        <trans-unit id="4bd8f3f03a576b2088bd73a2339d07fca1de805d" translate="yes" xml:space="preserve">
          <source>Hooks</source>
          <target state="translated">Hooks</target>
        </trans-unit>
        <trans-unit id="98e19c16786b297b22eefa7e77183940457614e1" translate="yes" xml:space="preserve">
          <source>If you need to perform asynchronous operations before any of your suites are run, you may delay the root suite. Run &lt;code&gt;mocha&lt;/code&gt; with the &lt;code&gt;--delay&lt;/code&gt; flag. This will attach a special callback function, &lt;code&gt;run()&lt;/code&gt;, to the global context:</source>
          <target state="translated">Si necesita realizar operaciones asincr&amp;oacute;nicas antes de que se ejecute cualquiera de sus suites, puede retrasar la suite ra&amp;iacute;z. Ejecute &lt;code&gt;mocha&lt;/code&gt; con la bandera &lt;code&gt;--delay&lt;/code&gt; . Esto adjuntar&amp;aacute; una funci&amp;oacute;n de devoluci&amp;oacute;n de llamada especial, &lt;code&gt;run()&lt;/code&gt; , al contexto global:</target>
        </trans-unit>
        <trans-unit id="ced3214c512472a19816679d43a3cb0180c1f760" translate="yes" xml:space="preserve">
          <source>If you use callback-based async tests, Mocha will throw an error if &lt;code&gt;done()&lt;/code&gt; is called multiple times. This is handy for catching accidental double callbacks.</source>
          <target state="translated">Si usa pruebas as&amp;iacute;ncronas basadas en devoluci&amp;oacute;n de llamada, Mocha arrojar&amp;aacute; un error si se llama a &lt;code&gt;done()&lt;/code&gt; varias veces. Esto es &amp;uacute;til para detectar devoluciones de llamada dobles accidentales.</target>
        </trans-unit>
        <trans-unit id="e53b5d739b41e36dae9122b4b8c6364051302d79" translate="yes" xml:space="preserve">
          <source>If your ES6 modules have extension &lt;code&gt;.js&lt;/code&gt;, you can &lt;code&gt;npm install --save-dev babel-register&lt;/code&gt; and use &lt;code&gt;mocha --require babel-register&lt;/code&gt;; &lt;code&gt;--compilers&lt;/code&gt; is only necessary if you need to specify a file extension.</source>
          <target state="translated">Si sus m&amp;oacute;dulos ES6 tienen extensi&amp;oacute;n &lt;code&gt;.js&lt;/code&gt; , puede &lt;code&gt;npm install --save-dev babel-register&lt;/code&gt; y usar &lt;code&gt;mocha --require babel-register&lt;/code&gt; ; &lt;code&gt;--compilers&lt;/code&gt; solo es necesario si necesita especificar una extensi&amp;oacute;n de archivo.</target>
        </trans-unit>
        <trans-unit id="5f10ae75160b68a23b879ce505262f4e06bab893" translate="yes" xml:space="preserve">
          <source>If your JS environment supports &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Statements/async_function&quot;&gt;async / await&lt;/a&gt; you can also write asynchronous tests like this:</source>
          <target state="translated">Si su entorno JS admite &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Statements/async_function&quot;&gt;async / await&lt;/a&gt; , tambi&amp;eacute;n puede escribir pruebas asincr&amp;oacute;nicas como esta:</target>
        </trans-unit>
        <trans-unit id="67c9a62a8265332e6a725438c6dbed5631b96c93" translate="yes" xml:space="preserve">
          <source>In Mocha v3.0.0 and newer, returning a &lt;code&gt;Promise&lt;/code&gt;&lt;em&gt;and&lt;/em&gt; calling &lt;code&gt;done()&lt;/code&gt; will result in an exception, as this is generally a mistake:</source>
          <target state="translated">En Mocha v3.0.0 y m&amp;aacute;s reciente, devolver una &lt;code&gt;Promise&lt;/code&gt; &lt;em&gt;y&lt;/em&gt; llamar a &lt;code&gt;done()&lt;/code&gt; dar&amp;aacute; como resultado una excepci&amp;oacute;n, ya que esto generalmente es un error:</target>
        </trans-unit>
        <trans-unit id="e4957f53647ae1ea26d2f70a3e99bbe8d5ec37e7" translate="yes" xml:space="preserve">
          <source>In addition to chatting with us on &lt;a href=&quot;https://gitter.im/mochajs/mocha&quot;&gt;Gitter&lt;/a&gt;, for additional information such as using spies, mocking, and shared behaviours be sure to check out the &lt;a href=&quot;https://github.com/mochajs/mocha/wiki&quot;&gt;Mocha Wiki&lt;/a&gt; on GitHub. For discussions join the &lt;a href=&quot;https://groups.google.com/group/mochajs&quot;&gt;Google Group&lt;/a&gt;. For a running example of Mocha, view &lt;a href=&quot;https://mochajs.org/example/tests.html&quot;&gt;example/tests.html&lt;/a&gt;. For the JavaScript API, view the &lt;a href=&quot;https://mochajs.org/api/&quot;&gt;API documentation&lt;/a&gt; or the &lt;a href=&quot;https://github.com/mochajs/mocha/blob/master/lib/mocha.js#L51&quot;&gt;source&lt;/a&gt;.</source>
          <target state="translated">Adem&amp;aacute;s de chatear con nosotros en &lt;a href=&quot;https://gitter.im/mochajs/mocha&quot;&gt;Gitter&lt;/a&gt; , para obtener informaci&amp;oacute;n adicional como el uso de esp&amp;iacute;as, burlas y comportamientos compartidos, aseg&amp;uacute;rese de consultar la &lt;a href=&quot;https://github.com/mochajs/mocha/wiki&quot;&gt;Wiki de Mocha&lt;/a&gt; en GitHub. Para discusiones, &amp;uacute;nase al &lt;a href=&quot;https://groups.google.com/group/mochajs&quot;&gt;Grupo de Google&lt;/a&gt; . Para ver un ejemplo de ejecuci&amp;oacute;n de Mocha, vea &lt;a href=&quot;https://mochajs.org/example/tests.html&quot;&gt;example / tests.html&lt;/a&gt; . Para la API de JavaScript, consulte la &lt;a href=&quot;https://mochajs.org/api/&quot;&gt;documentaci&amp;oacute;n de&lt;/a&gt; la API o la &lt;a href=&quot;https://github.com/mochajs/mocha/blob/master/lib/mocha.js#L51&quot;&gt;fuente&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="01185b69a2c11773f1cd33b6b7ed8811ab0ff74f" translate="yes" xml:space="preserve">
          <source>In v3.0.0 or newer, a parameter passed to &lt;code&gt;this.timeout()&lt;/code&gt; greater than the &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/WindowTimers/setTimeout#Maximum_delay_value&quot;&gt;maximum delay value&lt;/a&gt; will cause the timeout to be disabled.</source>
          <target state="translated">En v3.0.0 o m&amp;aacute;s reciente, un par&amp;aacute;metro pasado a &lt;code&gt;this.timeout()&lt;/code&gt; mayor que el &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/WindowTimers/setTimeout#Maximum_delay_value&quot;&gt;valor de retardo m&amp;aacute;ximo&lt;/a&gt; har&amp;aacute; que el tiempo de espera sea deshabilitado.</target>
        </trans-unit>
        <trans-unit id="2526253f77ad1393ef0e5ead8d9eeed17e0a233b" translate="yes" xml:space="preserve">
          <source>In your editor:</source>
          <target state="translated">En tu editor:</target>
        </trans-unit>
        <trans-unit id="cf9c82da65b44e4184e1c5823378fdf93d0e9b32" translate="yes" xml:space="preserve">
          <source>Inclusive Tests</source>
          <target state="translated">Pruebas inclusivas</target>
        </trans-unit>
        <trans-unit id="fe49f05d2e68f4e9de00c0a17a8c0520bda7af2c" translate="yes" xml:space="preserve">
          <source>Install with &lt;a href=&quot;https://npmjs.org&quot;&gt;npm&lt;/a&gt; globally:</source>
          <target state="translated">Instalar con &lt;a href=&quot;https://npmjs.org&quot;&gt;npm&lt;/a&gt; globalmente:</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="b356313f979923fc829adb909098ed26a5a01aff" translate="yes" xml:space="preserve">
          <source>Interfaces</source>
          <target state="translated">Interfaces</target>
        </trans-unit>
        <trans-unit id="031a4e76f0b39d0df073d934da5fc48da8d737e5" translate="yes" xml:space="preserve">
          <source>JSON</source>
          <target state="translated">JSON</target>
        </trans-unit>
        <trans-unit id="a21d3253170de617a66bdbbbae1fd764d407b56b" translate="yes" xml:space="preserve">
          <source>JSON Stream</source>
          <target state="translated">Corriente JSON</target>
        </trans-unit>
        <trans-unit id="323c15dbe6740ee6540be2d0b506bd248ff8987b" translate="yes" xml:space="preserve">
          <source>JetBrains</source>
          <target state="translated">JetBrains</target>
        </trans-unit>
        <trans-unit id="b1d5bc4319f7f8bf5b33719fb0fb6310897e8fa3" translate="yes" xml:space="preserve">
          <source>Landing Strip</source>
          <target state="translated">Pista de aterrizaje</target>
        </trans-unit>
        <trans-unit id="a9ce522cb0a03624969154fd5e6aceacb8a3f714" translate="yes" xml:space="preserve">
          <source>Licensed under the Creative Commons Attribution 4.0 International License.</source>
          <target state="translated">Licenciado bajo la Licencia Internacional de Atribución 4.0 de Creative Commons.</target>
        </trans-unit>
        <trans-unit id="a1fffaaafb7cc996685bceb829c053cc4f7de43d" translate="yes" xml:space="preserve">
          <source>List</source>
          <target state="translated">List</target>
        </trans-unit>
        <trans-unit id="4e836fdc2572ab23d5dc8c36bd613ac6b0f82d63" translate="yes" xml:space="preserve">
          <source>Manual</source>
          <target state="translated">Manual</target>
        </trans-unit>
        <trans-unit id="bfb0bedadfed8788447822b5ff9afc80a1eced19" translate="yes" xml:space="preserve">
          <source>Many reporters will display test duration, as well as flagging tests that are slow, as shown here with the &amp;ldquo;spec&amp;rdquo; reporter:</source>
          <target state="translated">Muchos reporteros mostrar&amp;aacute;n la duraci&amp;oacute;n de la prueba, as&amp;iacute; como marcar&amp;aacute;n las pruebas que son lentas, como se muestra aqu&amp;iacute; con el reportero de &quot;especificaciones&quot;:</target>
        </trans-unit>
        <trans-unit id="23e67fceae0d77dd571dd25695fc0499faf1bb77" translate="yes" xml:space="preserve">
          <source>Markdown</source>
          <target state="translated">Markdown</target>
        </trans-unit>
        <trans-unit id="7eb0cee888ab55b559592d38eec027e9118d7d35" translate="yes" xml:space="preserve">
          <source>Min</source>
          <target state="translated">Min</target>
        </trans-unit>
        <trans-unit id="814d5c9075ac58da08deb4e3d88f6089a78f380d" translate="yes" xml:space="preserve">
          <source>Mocha</source>
          <target state="translated">Mocha</target>
        </trans-unit>
        <trans-unit id="2fcfac04215b5cfde8e6b64f5182684c5ddff757" translate="yes" xml:space="preserve">
          <source>Mocha Sidebar (VS Code)</source>
          <target state="translated">Mocha Sidebar (Código VS)</target>
        </trans-unit>
        <trans-unit id="6c79a6b78a1b13f1d9fff2ae10078198d72760ac" translate="yes" xml:space="preserve">
          <source>Mocha allows you to define custom reporters. For more information see the &lt;a href=&quot;https://github.com/mochajs/mocha/wiki/Third-party-reporters&quot;&gt;wiki&lt;/a&gt;. An example is the &lt;a href=&quot;https://github.com/travisjeffery/mocha-teamcity-reporter&quot;&gt;TeamCity reporter&lt;/a&gt;.</source>
          <target state="translated">Mocha te permite definir reporteros personalizados. Para obtener m&amp;aacute;s informaci&amp;oacute;n, consulte la &lt;a href=&quot;https://github.com/mochajs/mocha/wiki/Third-party-reporters&quot;&gt;wiki&lt;/a&gt; . Un ejemplo es el &lt;a href=&quot;https://github.com/travisjeffery/mocha-teamcity-reporter&quot;&gt;reportero de TeamCity&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3f59749d3a9db27b1ed50c290daac3034aeba7fb" translate="yes" xml:space="preserve">
          <source>Mocha allows you to use any assertion library you wish. In the above example, we&amp;rsquo;re using Node.js&amp;rsquo; built-in &lt;a href=&quot;https://nodejs.org/api/assert.html&quot;&gt;assert&lt;/a&gt; module&amp;ndash;but generally, if it throws an &lt;code&gt;Error&lt;/code&gt;, it will work! This means you can use libraries such as:</source>
          <target state="translated">Mocha le permite utilizar cualquier biblioteca de afirmaciones que desee. En el ejemplo anterior, estamos usando Node.js' incorporada &lt;a href=&quot;https://nodejs.org/api/assert.html&quot;&gt;afirman&lt;/a&gt; m&amp;oacute;dulo, pero en general, si se lanza un &lt;code&gt;Error&lt;/code&gt; , va a trabajar! Esto significa que puede utilizar bibliotecas como:</target>
        </trans-unit>
        <trans-unit id="e7c4e152770dd7db227ea5ce0c15dd7acf5fe835" translate="yes" xml:space="preserve">
          <source>Mocha currently requires Node.js v6.x or newer.</source>
          <target state="translated">Mocha actualmente requiere Node.js v6.x o más reciente.</target>
        </trans-unit>
        <trans-unit id="e4549e0da2843af2164ef0f1363635cac6c7a2b1" translate="yes" xml:space="preserve">
          <source>Mocha options can be set via &lt;code&gt;mocha.setup()&lt;/code&gt;. Examples:</source>
          <target state="translated">Las opciones de Mocha se pueden configurar a trav&amp;eacute;s de &lt;code&gt;mocha.setup()&lt;/code&gt; . Ejemplos:</target>
        </trans-unit>
        <trans-unit id="c9790eb8ea7d71a62db4b3faa0acda2f1f003d89" translate="yes" xml:space="preserve">
          <source>Mocha reporters adjust to the terminal window, and always disable ANSI-escape coloring when the stdio streams are not associated with a TTY.</source>
          <target state="translated">Los reporteros de Mocha se ajustan a la ventana de la terminal,y siempre desactivan la coloración ANSI-escape cuando los flujos de stdio no están asociados a un TTY.</target>
        </trans-unit>
        <trans-unit id="d8db60c9e0cda6e115805304c42eac4e4413bf8a" translate="yes" xml:space="preserve">
          <source>Mocha runs in the browser. Every release of Mocha will have new builds of &lt;code&gt;./mocha.js&lt;/code&gt; and &lt;code&gt;./mocha.css&lt;/code&gt; for use in the browser.</source>
          <target state="translated">Mocha se ejecuta en el navegador. Cada lanzamiento de Mocha tendr&amp;aacute; nuevas versiones de &lt;code&gt;./mocha.js&lt;/code&gt; y &lt;code&gt;./mocha.css&lt;/code&gt; para usar en el navegador.</target>
        </trans-unit>
        <trans-unit id="bdaf5d42996c9782025035e4e23b2ead0e71a84c" translate="yes" xml:space="preserve">
          <source>Mocha supports the &lt;code&gt;err.expected&lt;/code&gt; and &lt;code&gt;err.actual&lt;/code&gt; properties of any thrown &lt;code&gt;AssertionError&lt;/code&gt;s from an assertion library. Mocha will attempt to display the difference between what was expected, and what the assertion actually saw. Here&amp;rsquo;s an example of a &amp;ldquo;string&amp;rdquo; diff:</source>
          <target state="translated">Mocha admite las propiedades &lt;code&gt;err.expected&lt;/code&gt; y &lt;code&gt;err.actual&lt;/code&gt; de cualquier &lt;code&gt;AssertionError&lt;/code&gt; lanzado desde una biblioteca de aserciones. Mocha intentar&amp;aacute; mostrar la diferencia entre lo que se esperaba y lo que realmente vio la afirmaci&amp;oacute;n. A continuaci&amp;oacute;n, se muestra un ejemplo de una diferencia de &quot;cadena&quot;:</target>
        </trans-unit>
        <trans-unit id="986c77af424daa79d6d9089aa97d53b7cb4f282b" translate="yes" xml:space="preserve">
          <source>Mocha&amp;rsquo;s &amp;ldquo;interface&amp;rdquo; system allows developers to choose their style of DSL. Mocha has &lt;strong&gt;BDD&lt;/strong&gt;, &lt;strong&gt;TDD&lt;/strong&gt;, &lt;strong&gt;Exports&lt;/strong&gt;, &lt;strong&gt;QUnit&lt;/strong&gt; and &lt;strong&gt;Require&lt;/strong&gt;-style interfaces.</source>
          <target state="translated">El sistema de &quot;interfaz&quot; de Mocha permite a los desarrolladores elegir su estilo de DSL. Mocha tiene interfaces de estilo &lt;strong&gt;BDD&lt;/strong&gt; , &lt;strong&gt;TDD&lt;/strong&gt; , &lt;strong&gt;Exportaciones&lt;/strong&gt; , &lt;strong&gt;QUnit&lt;/strong&gt; y &lt;strong&gt;Require&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="22ffffbccfcf501db363d7084eeed3e3deb28b71" translate="yes" xml:space="preserve">
          <source>More Information</source>
          <target state="translated">Más información</target>
        </trans-unit>
        <trans-unit id="d178d5c2e5c837309098fe81d7dfb445cfcf5e3d" translate="yes" xml:space="preserve">
          <source>Nyan</source>
          <target state="translated">Nyan</target>
        </trans-unit>
        <trans-unit id="6c9c3c2d7cdb1a5c91ca482eb4a85c1635a147a9" translate="yes" xml:space="preserve">
          <source>Only interested in the first exception? use &lt;code&gt;--bail&lt;/code&gt;!</source>
          <target state="translated">&amp;iquest;Solo le interesa la primera excepci&amp;oacute;n? use &lt;code&gt;--bail&lt;/code&gt; &amp;iexcl; fianza !</target>
        </trans-unit>
        <trans-unit id="170cef265c96be8bcb76d1e2fa57cce18bef2e96" translate="yes" xml:space="preserve">
          <source>Or a specific test-case:</source>
          <target state="translated">O un caso de prueba específico:</target>
        </trans-unit>
        <trans-unit id="648c367a6a72cc9ba9319737869be7ad94adca1e" translate="yes" xml:space="preserve">
          <source>Passing &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions&quot;&gt;arrow functions&lt;/a&gt; (&amp;ldquo;lambdas&amp;rdquo;) to Mocha is discouraged. Lambdas lexically bind &lt;code&gt;this&lt;/code&gt; and cannot access the Mocha context. For example, the following code will fail:</source>
          <target state="translated">Se desaconseja pasar &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions&quot;&gt;funciones de flecha&lt;/a&gt; (&quot;lambdas&quot;) a Mocha. Lambdas enlaza l&amp;eacute;xicamente &lt;code&gt;this&lt;/code&gt; y no puede acceder al contexto Mocha. Por ejemplo, el siguiente c&amp;oacute;digo fallar&amp;aacute;:</target>
        </trans-unit>
        <trans-unit id="9451e4aac5f5c3fcea46531060b150e2b9a36c06" translate="yes" xml:space="preserve">
          <source>Pending Tests</source>
          <target state="translated">Pruebas pendientes</target>
        </trans-unit>
        <trans-unit id="f6f87e4ab77e9426de1be27e566eec10532e5475" translate="yes" xml:space="preserve">
          <source>Pending tests will be included in the test results, and marked as pending. A pending test is not considered a failed test.</source>
          <target state="translated">Las pruebas pendientes se incluirán en los resultados de la prueba,y se marcarán como pendientes.Una prueba pendiente no se considera una prueba fallida.</target>
        </trans-unit>
        <trans-unit id="6037078963a82ab9952637e38bf310d2bc92819c" translate="yes" xml:space="preserve">
          <source>Previous to v3.0.0, &lt;code&gt;.only()&lt;/code&gt; used string matching to decide which tests to execute. As of v3.0.0, this is no longer the case. In v3.0.0 or newer, &lt;code&gt;.only()&lt;/code&gt; can be used multiple times to define a subset of tests to run:</source>
          <target state="translated">Antes de v3.0.0, &lt;code&gt;.only()&lt;/code&gt; usaba la coincidencia de cadenas para decidir qu&amp;eacute; pruebas ejecutar. A partir de la v3.0.0, este ya no es el caso. En v3.0.0 o m&amp;aacute;s reciente, &lt;code&gt;.only()&lt;/code&gt; se puede usar varias veces para definir un subconjunto de pruebas para ejecutar:</target>
        </trans-unit>
        <trans-unit id="1b90271d66cf2d3ac755d49a550fe5f31b9eca5f" translate="yes" xml:space="preserve">
          <source>Progress</source>
          <target state="translated">Progress</target>
        </trans-unit>
        <trans-unit id="6392d1964def385ce87ea1765cc583aeecab5db6" translate="yes" xml:space="preserve">
          <source>QUnit</source>
          <target state="translated">QUnit</target>
        </trans-unit>
        <trans-unit id="065082ec90d58ac01e4f147aae2024dbd1935ef3" translate="yes" xml:space="preserve">
          <source>Real live example code:</source>
          <target state="translated">Código de ejemplo en vivo y en directo:</target>
        </trans-unit>
        <trans-unit id="4a28165bd85132c82d26771bbd29abef42ef343a" translate="yes" xml:space="preserve">
          <source>Reporters</source>
          <target state="translated">Reporters</target>
        </trans-unit>
        <trans-unit id="c9e579d6d1ba09edc7af3d2bf94ca4c747181eb4" translate="yes" xml:space="preserve">
          <source>Reporting</source>
          <target state="translated">Reporting</target>
        </trans-unit>
        <trans-unit id="bff5c4dd0585a4f0e68311b683e36c85f477b138" translate="yes" xml:space="preserve">
          <source>Require</source>
          <target state="translated">Require</target>
        </trans-unit>
        <trans-unit id="1d778624bd69fa07fabf3003c8ae159e173f0408" translate="yes" xml:space="preserve">
          <source>Retry Tests</source>
          <target state="translated">Pruebas de reintento</target>
        </trans-unit>
        <trans-unit id="25785cb889647cb80cd687be550b38d7f7bb2fa7" translate="yes" xml:space="preserve">
          <source>Root-Level Hooks</source>
          <target state="translated">Ganchos de nivel de raíz</target>
        </trans-unit>
        <trans-unit id="4dc6baa8ed35e401c3c76b62f93ec1655235ebb1" translate="yes" xml:space="preserve">
          <source>Run Cycle Overview</source>
          <target state="translated">Resumen del ciclo de ejecución</target>
        </trans-unit>
        <trans-unit id="74dc676b7dbb52e4370ff466a15d00f6536664dd" translate="yes" xml:space="preserve">
          <source>Running Mocha in the Browser</source>
          <target state="translated">Corriendo Mocha en el navegador</target>
        </trans-unit>
        <trans-unit id="71674a60d50c138461eacf95cfe2fab80c6d2435" translate="yes" xml:space="preserve">
          <source>Running the above test will give you the below error message:</source>
          <target state="translated">La ejecución de la prueba anterior le dará el siguiente mensaje de error:</target>
        </trans-unit>
        <trans-unit id="553ee09f100ae39f8a3fa8c7318da6a02b5987e5" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://nodejs.org/en/docs/inspector/&quot;&gt;Node.js guide to debugging&lt;/a&gt;</source>
          <target state="translated">Consulte la &lt;a href=&quot;https://nodejs.org/en/docs/inspector/&quot;&gt;gu&amp;iacute;a de depuraci&amp;oacute;n de Node.js&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fb9bc0e8eb2d2a1244e30e88e2759e92b67ca429" translate="yes" xml:space="preserve">
          <source>Set up a test script in package.json:</source>
          <target state="translated">Prepara un guión de prueba en el paquete.json:</target>
        </trans-unit>
        <trans-unit id="e3aed3813cd1d21207e380d65f283f43f45fe33e" translate="yes" xml:space="preserve">
          <source>Some shells support recursive matching by using the &lt;code&gt;**&lt;/code&gt; wildcard in a glob. Bash &amp;gt;= 4.3 supports this with the &lt;a href=&quot;https://www.gnu.org/software/bash/manual/html_node/The-Shopt-Builtin.html&quot;&gt;&lt;code&gt;globstar&lt;/code&gt; option&lt;/a&gt; which &lt;a href=&quot;https://github.com/mochajs/mocha/pull/3348#issuecomment-383937247&quot;&gt;must be enabled&lt;/a&gt; to get the same results as passing the &lt;code&gt;--recursive&lt;/code&gt; option (&lt;a href=&quot;http://zsh.sourceforge.net/Doc/Release/Expansion.html#Recursive-Globbing&quot;&gt;ZSH&lt;/a&gt; and &lt;a href=&quot;https://fishshell.com/docs/current/#expand-wildcard&quot;&gt;Fish&lt;/a&gt; support this by default). With recursive matching enabled, the following is the same as passing &lt;code&gt;--recursive&lt;/code&gt;:</source>
          <target state="translated">Algunas shells admiten la coincidencia recursiva mediante el uso del comod&amp;iacute;n &lt;code&gt;**&lt;/code&gt; en un globo. Bash&amp;gt; = 4.3 soportes esto con el &lt;a href=&quot;https://www.gnu.org/software/bash/manual/html_node/The-Shopt-Builtin.html&quot;&gt; &lt;code&gt;globstar&lt;/code&gt; opci&amp;oacute;n&lt;/a&gt; , que &lt;a href=&quot;https://github.com/mochajs/mocha/pull/3348#issuecomment-383937247&quot;&gt;debe ser habilitado&lt;/a&gt; para obtener los mismos resultados que pasar el &lt;code&gt;--recursive&lt;/code&gt; opci&amp;oacute;n ( &lt;a href=&quot;http://zsh.sourceforge.net/Doc/Release/Expansion.html#Recursive-Globbing&quot;&gt;ZSH&lt;/a&gt; y &lt;a href=&quot;https://fishshell.com/docs/current/#expand-wildcard&quot;&gt;pescado&lt;/a&gt; apoyan esto por defecto). Con la coincidencia recursiva habilitada, lo siguiente es lo mismo que pasar &lt;code&gt;--recursive&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8d89530314527c8d7d9d9cb95ec6f5bdd921a1b9" translate="yes" xml:space="preserve">
          <source>Spec</source>
          <target state="translated">Spec</target>
        </trans-unit>
        <trans-unit id="bc3e3590e34c5723bef3b0b8f869fa10928242fe" translate="yes" xml:space="preserve">
          <source>Specifies the test-case timeout, defaulting to 2 seconds. To override you may pass the timeout in milliseconds, or a value with the &lt;code&gt;s&lt;/code&gt; suffix, ex: &lt;code&gt;--timeout 2s&lt;/code&gt; or &lt;code&gt;--timeout 2000&lt;/code&gt; would be equivalent.</source>
          <target state="translated">Especifica el tiempo de espera del caso de prueba, con un valor predeterminado de 2 segundos. Para anularlo, puede pasar el tiempo de espera en milisegundos, o un valor con el sufijo &lt;code&gt;s&lt;/code&gt; , por ejemplo: &lt;code&gt;--timeout 2s&lt;/code&gt; o &lt;code&gt;--timeout 2000&lt;/code&gt; ser&amp;iacute;a equivalente.</target>
        </trans-unit>
        <trans-unit id="98a2ec177a17b29fd0e23e1b0c56a42c28684fcb" translate="yes" xml:space="preserve">
          <source>Specify the &amp;ldquo;slow&amp;rdquo; test threshold, defaulting to 75ms. Mocha uses this to highlight test-cases that are taking too long.</source>
          <target state="translated">Especifique el umbral de prueba &quot;lento&quot;, predeterminado en 75 ms. Mocha usa esto para resaltar los casos de prueba que est&amp;aacute;n tardando demasiado.</target>
        </trans-unit>
        <trans-unit id="c4ceaad1f510ef5ea705ba3585d2de1d4a13cb21" translate="yes" xml:space="preserve">
          <source>Suite-level</source>
          <target state="translated">Suite-level</target>
        </trans-unit>
        <trans-unit id="de6db89ceed0133d6ad5521c06e4b825b9904621" translate="yes" xml:space="preserve">
          <source>Suite-level timeouts may be applied to entire test &amp;ldquo;suites&amp;rdquo;, or disabled via &lt;code&gt;this.timeout(0)&lt;/code&gt;. This will be inherited by all nested suites and test-cases that do not override the value.</source>
          <target state="translated">Los tiempos de espera de nivel de suite se pueden aplicar a &quot;suites&quot; de prueba completas, o se pueden desactivar mediante &lt;code&gt;this.timeout(0)&lt;/code&gt; . Esto ser&amp;aacute; heredado por todas las suites anidadas y casos de prueba que no anulen el valor.</target>
        </trans-unit>
        <trans-unit id="3c2ff3b3d96a22f0b23ce441a04c0a0c2fa45884" translate="yes" xml:space="preserve">
          <source>SuperAgent</source>
          <target state="translated">SuperAgent</target>
        </trans-unit>
        <trans-unit id="3c8dc3c357e48b97bb72efa9edaf9b8260cf8b2f" translate="yes" xml:space="preserve">
          <source>Suppose, for example, you have &amp;ldquo;api&amp;rdquo; related tests, as well as &amp;ldquo;app&amp;rdquo; related tests, as shown in the following snippet; One could use &lt;code&gt;--grep api&lt;/code&gt; or &lt;code&gt;--grep app&lt;/code&gt; to run one or the other. The same goes for any other part of a suite or test-case title, &lt;code&gt;--grep users&lt;/code&gt; would be valid as well, or even &lt;code&gt;--grep GET&lt;/code&gt;.</source>
          <target state="translated">Suponga, por ejemplo, que tiene pruebas relacionadas con &quot;api&quot;, as&amp;iacute; como pruebas relacionadas con la &quot;aplicaci&amp;oacute;n&quot;, como se muestra en el siguiente fragmento; Se podr&amp;iacute;a usar &lt;code&gt;--grep api&lt;/code&gt; o &lt;code&gt;--grep app&lt;/code&gt; para ejecutar uno u otro. Lo mismo ocurre con cualquier otra parte de una suite o t&amp;iacute;tulo de caso de prueba, los &lt;code&gt;--grep users&lt;/code&gt; ser&amp;iacute;an v&amp;aacute;lidos, o incluso &lt;code&gt;--grep GET&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="db4a04db5ccf9a8f908403383aa7476a2855f541" translate="yes" xml:space="preserve">
          <source>Synchronous Code</source>
          <target state="translated">Código síncrono</target>
        </trans-unit>
        <trans-unit id="fb7bc71b84dc9f961e5538c6dc0bfa7d98e5f671" translate="yes" xml:space="preserve">
          <source>TAP</source>
          <target state="translated">TAP</target>
        </trans-unit>
        <trans-unit id="a296b616f4529b6139114abe32f60836e9b40b52" translate="yes" xml:space="preserve">
          <source>TDD</source>
          <target state="translated">TDD</target>
        </trans-unit>
        <trans-unit id="4e5c1cb438afe66a7a3ce7f0162632afd0f40816" translate="yes" xml:space="preserve">
          <source>Take the following example:</source>
          <target state="translated">Tomemos el siguiente ejemplo:</target>
        </trans-unit>
        <trans-unit id="d7d96b74e9a4844754af7453ceddbe412fc31872" translate="yes" xml:space="preserve">
          <source>Test duration</source>
          <target state="translated">La duración de la prueba</target>
        </trans-unit>
        <trans-unit id="9992314b32825a3bd8d55164b1d035efa115fc21" translate="yes" xml:space="preserve">
          <source>Test-level</source>
          <target state="translated">Test-level</target>
        </trans-unit>
        <trans-unit id="2da7e47e548df7e7571fdfa271f2a99f9c93ed57" translate="yes" xml:space="preserve">
          <source>Test-specific timeouts may also be applied, or the use of &lt;code&gt;this.timeout(0)&lt;/code&gt; to disable timeouts all together:</source>
          <target state="translated">Tambi&amp;eacute;n se pueden aplicar tiempos de espera espec&amp;iacute;ficos de la prueba, o el uso de &lt;code&gt;this.timeout(0)&lt;/code&gt; para deshabilitar los tiempos de espera todos juntos:</target>
        </trans-unit>
        <trans-unit id="547d8ac3e28e4f0acda600f6e096dac65de667c6" translate="yes" xml:space="preserve">
          <source>Testing Mocha</source>
          <target state="translated">Probando Mocha</target>
        </trans-unit>
        <trans-unit id="bab18b9734400748db3af2cebab49889718863f6" translate="yes" xml:space="preserve">
          <source>Testing asynchronous code with Mocha could not be simpler! Simply invoke the callback when your test is complete. By adding a callback (usually named &lt;code&gt;done&lt;/code&gt;) to &lt;code&gt;it()&lt;/code&gt;, Mocha will know that it should wait for this function to be called to complete the test. This callback accepts both an &lt;code&gt;Error&lt;/code&gt; instance (or subclass thereof) &lt;em&gt;or&lt;/em&gt; a falsy value; anything else will cause a failed test.</source>
          <target state="translated">&amp;iexcl;Probar c&amp;oacute;digo asincr&amp;oacute;nico con Mocha no podr&amp;iacute;a ser m&amp;aacute;s sencillo! Simplemente invoque la devoluci&amp;oacute;n de llamada cuando su prueba est&amp;eacute; completa. Al agregarle una devoluci&amp;oacute;n de llamada (generalmente llamada &lt;code&gt;done&lt;/code&gt; ) &lt;code&gt;it()&lt;/code&gt; , Mocha sabr&amp;aacute; que debe esperar a que se llame a esta funci&amp;oacute;n para completar la prueba. Esta devoluci&amp;oacute;n de llamada acepta tanto una instancia de &lt;code&gt;Error&lt;/code&gt; (o una subclase de la misma) &lt;em&gt;como&lt;/em&gt; un valor falso; cualquier otra cosa provocar&amp;aacute; una prueba fallida.</target>
        </trans-unit>
        <trans-unit id="2a8a0fd2032a59ba64906f503a8fcf520c263411" translate="yes" xml:space="preserve">
          <source>Tests can appear before, after, or interspersed with your hooks. Hooks will run in the order they are defined, as appropriate; all &lt;code&gt;before()&lt;/code&gt; hooks run (once), then any &lt;code&gt;beforeEach()&lt;/code&gt; hooks, tests, any &lt;code&gt;afterEach()&lt;/code&gt; hooks, and finally &lt;code&gt;after()&lt;/code&gt; hooks (once).</source>
          <target state="translated">Las pruebas pueden aparecer antes, despu&amp;eacute;s o intercaladas con sus ganchos. Los ganchos se ejecutar&amp;aacute;n en el orden en que se definan, seg&amp;uacute;n corresponda; todos los ganchos &lt;code&gt;before()&lt;/code&gt; ejecutan (una vez), luego los ganchos &lt;code&gt;beforeEach()&lt;/code&gt; , las pruebas, los ganchos &lt;code&gt;afterEach()&lt;/code&gt; y finalmente los ganchos &lt;code&gt;after()&lt;/code&gt; (una vez).</target>
        </trans-unit>
        <trans-unit id="cb66034b6a518b97ae4eb07cdc2717ab088f1068" translate="yes" xml:space="preserve">
          <source>TextMate</source>
          <target state="translated">TextMate</target>
        </trans-unit>
        <trans-unit id="2c6457fc57c8740f5cc64bb2c936f816468641c5" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;HTML&amp;rdquo; reporter is what you see when running Mocha in the browser. It looks like this:</source>
          <target state="translated">El reportero &quot;HTML&quot; es lo que ve cuando ejecuta Mocha en el navegador. Se parece a esto:</target>
        </trans-unit>
        <trans-unit id="5333d52961e14491540412769193ff75d5df45ca" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;JSON stream&amp;rdquo; reporter outputs newline-delimited JSON &amp;ldquo;events&amp;rdquo; as they occur, beginning with a &amp;ldquo;start&amp;rdquo; event, followed by test passes or failures, and then the final &amp;ldquo;end&amp;rdquo; event.</source>
          <target state="translated">El reportero de &quot;flujo JSON&quot; genera &quot;eventos&quot; JSON delimitados por saltos de l&amp;iacute;nea a medida que ocurren, comenzando con un evento de &quot;inicio&quot;, seguido de pruebas pasadas o fallidas, y luego el evento final &quot;final&quot;.</target>
        </trans-unit>
        <trans-unit id="3368e20feab3c06a96a469ab2bad643063f723e3" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;JSON&amp;rdquo; reporter outputs a single large JSON object when the tests have completed (failures or not).</source>
          <target state="translated">El informador &quot;JSON&quot; genera un &amp;uacute;nico objeto JSON grande cuando las pruebas se han completado (fallas o no).</target>
        </trans-unit>
        <trans-unit id="64c8c54c7f79b833030381e6e9717c6ff5bcf9be" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;doc&amp;rdquo; reporter outputs a hierarchical HTML body representation of your tests. Wrap it with a header, footer, and some styling, then you have some fantastic documentation!</source>
          <target state="translated">El reportero &quot;doc&quot; genera una representaci&amp;oacute;n jer&amp;aacute;rquica del cuerpo HTML de sus pruebas. Envu&amp;eacute;lvalo con un encabezado, pie de p&amp;aacute;gina y algo de estilo, &amp;iexcl;entonces tendr&amp;aacute; una documentaci&amp;oacute;n fant&amp;aacute;stica!</target>
        </trans-unit>
        <trans-unit id="0aad810ee8f2dec17d9ab81389da6967325218e4" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;list&amp;rdquo; reporter outputs a simple specifications list as test cases pass or fail, outputting the failure details at the bottom of the output.</source>
          <target state="translated">El informador de &quot;lista&quot; genera una lista de especificaciones simples a medida que los casos de prueba pasan o fallan, y muestra los detalles de la falla en la parte inferior de la salida.</target>
        </trans-unit>
        <trans-unit id="4f248694160214415f2b010680f15162b41fa9ec" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;markdown&amp;rdquo; reporter generates a markdown TOC and body for your test suite. This is great if you want to use the tests as documentation within a Github wiki page, or a markdown file in the repository that Github can render. For example here is the Connect &lt;a href=&quot;https://github.com/senchalabs/connect/blob/90a725343c2945aaee637e799b1cd11e065b2bff/tests.md&quot;&gt;test output&lt;/a&gt;.</source>
          <target state="translated">El reportero de &quot;rebajas&quot; genera un TOC y un cuerpo de rebajas para su conjunto de pruebas. Esto es genial si desea utilizar las pruebas como documentaci&amp;oacute;n dentro de una p&amp;aacute;gina wiki de Github, o un archivo de rebajas en el repositorio que Github puede representar. Por ejemplo, aqu&amp;iacute; est&amp;aacute; la &lt;a href=&quot;https://github.com/senchalabs/connect/blob/90a725343c2945aaee637e799b1cd11e065b2bff/tests.md&quot;&gt;salida de prueba&lt;/a&gt; Connect .</target>
        </trans-unit>
        <trans-unit id="e0d1db1adc546e3453bd023c105509dc9ff10741" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;min&amp;rdquo; reporter displays the summary only, while still outputting errors on failure. This reporter works great with &lt;code&gt;--watch&lt;/code&gt; as it clears the terminal in order to keep your test summary at the top.</source>
          <target state="translated">El informador &amp;ldquo;min&amp;rdquo; muestra solo el resumen, mientras sigue mostrando errores en caso de falla. Este reportero funciona muy bien con &lt;code&gt;--watch&lt;/code&gt; mientras borra la terminal para mantener el resumen de la prueba en la parte superior.</target>
        </trans-unit>
        <trans-unit id="661986fe32882ea8bd3d2690dacc77d81f35edc9" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;nyan&amp;rdquo; reporter is exactly what you might expect:</source>
          <target state="translated">El reportero &quot;nyan&quot; es exactamente lo que podr&amp;iacute;a esperar:</target>
        </trans-unit>
        <trans-unit id="39ee7d9c094fb73922b809761d1bec30a6aee208" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;progress&amp;rdquo; reporter implements a simple progress-bar:</source>
          <target state="translated">El reportero de &quot;progreso&quot; implementa una barra de progreso simple:</target>
        </trans-unit>
        <trans-unit id="be7f0cfae842826207ddea8730297b59a89f272c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/mochajs/mocha.tmbundle&quot;&gt;Mocha TextMate bundle&lt;/a&gt; includes snippets to make writing tests quicker and more enjoyable.</source>
          <target state="translated">El &lt;a href=&quot;https://github.com/mochajs/mocha.tmbundle&quot;&gt;paquete Mocha TextMate&lt;/a&gt; incluye fragmentos para que las pruebas de escritura sean m&amp;aacute;s r&amp;aacute;pidas y agradables.</target>
        </trans-unit>
        <trans-unit id="950b4f2098ee9a6022de133bca2fd3e30ab8b4cc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://qunitjs.com&quot;&gt;QUnit&lt;/a&gt;-inspired interface matches the &amp;ldquo;flat&amp;rdquo; look of QUnit, where the test suite title is simply defined before the test-cases. Like TDD, it uses &lt;code&gt;suite()&lt;/code&gt; and &lt;code&gt;test()&lt;/code&gt;, but resembling BDD, it also contains &lt;code&gt;before()&lt;/code&gt;, &lt;code&gt;after()&lt;/code&gt;, &lt;code&gt;beforeEach()&lt;/code&gt;, and &lt;code&gt;afterEach()&lt;/code&gt;.</source>
          <target state="translated">La interfaz inspirada en &lt;a href=&quot;https://qunitjs.com&quot;&gt;QUnit&lt;/a&gt; coincide con el aspecto &quot;plano&quot; de QUnit, donde el t&amp;iacute;tulo del conjunto de pruebas se define simplemente antes de los casos de prueba. Al igual que TDD, usa &lt;code&gt;suite()&lt;/code&gt; y &lt;code&gt;test()&lt;/code&gt; , pero al igual que BDD, tambi&amp;eacute;n contiene &lt;code&gt;before()&lt;/code&gt; , &lt;code&gt;after()&lt;/code&gt; , &lt;code&gt;beforeEach()&lt;/code&gt; y &lt;code&gt;afterEach()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0bcbec0f5943ef167d67d70d4e9e088446901237" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--grep&lt;/code&gt; option when specified will trigger mocha to only run tests matching the given &lt;code&gt;pattern&lt;/code&gt; which is internally compiled to a &lt;code&gt;RegExp&lt;/code&gt;.</source>
          <target state="translated">La opci&amp;oacute;n &lt;code&gt;--grep&lt;/code&gt; cuando se especifica activar&amp;aacute; a mocha para que solo ejecute pruebas que coincidan con el &lt;code&gt;pattern&lt;/code&gt; dado que se compila internamente en una &lt;code&gt;RegExp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1f5d1ce5911c30ebbdbdee19275338c5b20db5b2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--reporter&lt;/code&gt; option allows you to specify the reporter that will be used, defaulting to &amp;ldquo;spec&amp;rdquo;. This flag may also be used to utilize third-party reporters. For example if you &lt;code&gt;npm install mocha-lcov-reporter&lt;/code&gt; you may then do &lt;code&gt;--reporter mocha-lcov-reporter&lt;/code&gt;.</source>
          <target state="translated">La opci&amp;oacute;n &lt;code&gt;--reporter&lt;/code&gt; le permite especificar el reportero que se utilizar&amp;aacute;, por defecto a &quot;spec&quot;. Esta bandera tambi&amp;eacute;n se puede usar para utilizar reporteros de terceros. Por ejemplo, si &lt;code&gt;npm install mocha-lcov-reporter&lt;/code&gt; , puede hacer &lt;code&gt;--reporter mocha-lcov-reporter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b837e62d6ccb34aba9ee913d1bd84721c5ee4971" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--require&lt;/code&gt; option is useful for libraries such as &lt;a href=&quot;https://github.com/shouldjs/should.js&quot;&gt;should.js&lt;/a&gt;, so you may simply &lt;code&gt;--require should&lt;/code&gt; instead of manually invoking &lt;code&gt;require('should')&lt;/code&gt; within each test file. Note that this works well for &lt;code&gt;should&lt;/code&gt; as it augments &lt;code&gt;Object.prototype&lt;/code&gt;, however if you wish to access a module&amp;rsquo;s exports you will have to require them, for example &lt;code&gt;var should = require('should')&lt;/code&gt;. Furthermore, it can be used with relative paths, e.g. &lt;code&gt;--require ./test/helper.js&lt;/code&gt;</source>
          <target state="translated">La opci&amp;oacute;n &lt;code&gt;--require&lt;/code&gt; es &amp;uacute;til para bibliotecas como &lt;a href=&quot;https://github.com/shouldjs/should.js&quot;&gt;should.js&lt;/a&gt; , por lo que puede simplemente &lt;code&gt;--require should&lt;/code&gt; en lugar de invocar manualmente &lt;code&gt;require('should')&lt;/code&gt; dentro de cada archivo de prueba. Tenga en cuenta que esto funciona bien para &lt;code&gt;should&lt;/code&gt; , ya que aumenta &lt;code&gt;Object.prototype&lt;/code&gt; , sin embargo, si desea acceder a las exportaciones de un m&amp;oacute;dulo, tendr&amp;aacute; que solicitarlas, por ejemplo, &lt;code&gt;var should = require('should')&lt;/code&gt; . Adem&amp;aacute;s, se puede usar con rutas relativas, por ejemplo, &lt;code&gt;--require ./test/helper.js&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4c95a6e8fa7be939b839ec9ed431e8bb4e972c5c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--ui&lt;/code&gt; option lets you specify the interface to use, defaulting to &amp;ldquo;bdd&amp;rdquo;.</source>
          <target state="translated">La opci&amp;oacute;n &lt;code&gt;--ui&lt;/code&gt; le permite especificar la interfaz a utilizar, por defecto es &quot;bdd&quot;.</target>
        </trans-unit>
        <trans-unit id="c9edaa4bc7f927943c6a1ff634f69ebb2ef69a16" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;require&lt;/code&gt; interface allows you to require the &lt;code&gt;describe&lt;/code&gt; and friend words directly using &lt;code&gt;require&lt;/code&gt; and call them whatever you want. This interface is also useful if you want to avoid global variables in your tests.</source>
          <target state="translated">La interfaz &lt;code&gt;require&lt;/code&gt; le permite requerir las palabras &lt;code&gt;describe&lt;/code&gt; y friend directamente usando &lt;code&gt;require&lt;/code&gt; y ll&amp;aacute;malas como quieras. Esta interfaz tambi&amp;eacute;n es &amp;uacute;til si desea evitar variables globales en sus pruebas.</target>
        </trans-unit>
        <trans-unit id="7bf2c17fd8b3b553c9cde160ac5358d9bb3aee1c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;test/&lt;/code&gt; Directory</source>
          <target state="translated">La &lt;code&gt;test/&lt;/code&gt; Directorio</target>
        </trans-unit>
        <trans-unit id="7c70715d9a9f5600b6ff4177f08406292ceafebe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;xunit&lt;/code&gt; reporter is also available. It outputs an XUnit-compatible XML document, often applicable in CI servers.</source>
          <target state="translated">El reportero de &lt;code&gt;xunit&lt;/code&gt; tambi&amp;eacute;n est&amp;aacute; disponible. Genera un documento XML compatible con XUnit, a menudo aplicable en servidores CI.</target>
        </trans-unit>
        <trans-unit id="3b37a40988604936193e8ed0680d361779e5c577" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;default behavior&lt;/em&gt; in v4.0.0 is &lt;code&gt;--no-exit&lt;/code&gt;, where previously it was &lt;code&gt;--exit&lt;/code&gt;.</source>
          <target state="translated">El &lt;em&gt;comportamiento predeterminado&lt;/em&gt; en v4.0.0 es &lt;code&gt;--no-exit&lt;/code&gt; , donde antes estaba &lt;code&gt;--exit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c763b13298e1fb9caa00fce37d979e4c5d9f789c" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;BDD&lt;/strong&gt; interface provides &lt;code&gt;describe()&lt;/code&gt;, &lt;code&gt;context()&lt;/code&gt;, &lt;code&gt;it()&lt;/code&gt;, &lt;code&gt;specify()&lt;/code&gt;, &lt;code&gt;before()&lt;/code&gt;, &lt;code&gt;after()&lt;/code&gt;, &lt;code&gt;beforeEach()&lt;/code&gt;, and &lt;code&gt;afterEach()&lt;/code&gt;.</source>
          <target state="translated">La interfaz &lt;strong&gt;BDD&lt;/strong&gt; proporciona &lt;code&gt;describe()&lt;/code&gt; , &lt;code&gt;context()&lt;/code&gt; , &lt;code&gt;it()&lt;/code&gt; , &lt;code&gt;specify()&lt;/code&gt; , &lt;code&gt;before()&lt;/code&gt; , &lt;code&gt;after()&lt;/code&gt; , &lt;code&gt;beforeEach()&lt;/code&gt; y &lt;code&gt;afterEach()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9598d1f67c84a73ecf1910adbcd35914585a841a" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Exports&lt;/strong&gt; interface is much like Mocha&amp;rsquo;s predecessor &lt;a href=&quot;https://github.com/tj/expresso&quot;&gt;expresso&lt;/a&gt;. The keys &lt;code&gt;before&lt;/code&gt;, &lt;code&gt;after&lt;/code&gt;, &lt;code&gt;beforeEach&lt;/code&gt;, and &lt;code&gt;afterEach&lt;/code&gt; are special-cased, object values are suites, and function values are test-cases:</source>
          <target state="translated">La interfaz de &lt;strong&gt;Exportaciones&lt;/strong&gt; es muy parecida al &lt;a href=&quot;https://github.com/tj/expresso&quot;&gt;expresso&lt;/a&gt; predecesor de Mocha . Las claves &lt;code&gt;before&lt;/code&gt; , &lt;code&gt;after&lt;/code&gt; , &lt;code&gt;beforeEach&lt;/code&gt; y &lt;code&gt;afterEach&lt;/code&gt; tienen may&amp;uacute;sculas especiales, los valores de objeto son conjuntos y los valores de funci&amp;oacute;n son casos de prueba:</target>
        </trans-unit>
        <trans-unit id="e699cb022e1a1575f3e999f496d5f126cbc6b954" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;TDD&lt;/strong&gt; interface provides &lt;code&gt;suite()&lt;/code&gt;, &lt;code&gt;test()&lt;/code&gt;, &lt;code&gt;suiteSetup()&lt;/code&gt;, &lt;code&gt;suiteTeardown()&lt;/code&gt;, &lt;code&gt;setup()&lt;/code&gt;, and &lt;code&gt;teardown()&lt;/code&gt;:</source>
          <target state="translated">La interfaz &lt;strong&gt;TDD&lt;/strong&gt; proporciona &lt;code&gt;suite()&lt;/code&gt; , &lt;code&gt;test()&lt;/code&gt; , &lt;code&gt;suiteSetup()&lt;/code&gt; , &lt;code&gt;suiteTeardown()&lt;/code&gt; , &lt;code&gt;setup()&lt;/code&gt; y &lt;code&gt;teardown()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ad4c565465894c8ee61e971557b761d7a88df144" translate="yes" xml:space="preserve">
          <source>The Landing Strip (&lt;code&gt;landing&lt;/code&gt;) reporter is a gimmicky test reporter simulating a plane landing :) unicode ftw</source>
          <target state="translated">El reportero de Landing Strip ( &lt;code&gt;landing&lt;/code&gt; ) es un reportero de pruebas efectista que simula el aterrizaje de un avi&amp;oacute;n :) unicode ftw</target>
        </trans-unit>
        <trans-unit id="eba3b26cd15b029054ccfea1e07e24021de410dc" translate="yes" xml:space="preserve">
          <source>The SuperAgent request library &lt;a href=&quot;https://visionmedia.github.io/superagent/docs/test.html&quot;&gt;test documentation&lt;/a&gt; was generated with Mocha&amp;rsquo;s doc reporter using this Bash command:</source>
          <target state="translated">La &lt;a href=&quot;https://visionmedia.github.io/superagent/docs/test.html&quot;&gt;documentaci&amp;oacute;n de prueba de la&lt;/a&gt; biblioteca de solicitudes de SuperAgent se gener&amp;oacute; con el reportero de documentos de Mocha usando este comando Bash:</target>
        </trans-unit>
        <trans-unit id="1e1aa347e3007252705de1fb497adc5b25ccab0c" translate="yes" xml:space="preserve">
          <source>The TAP reporter emits lines for a &lt;a href=&quot;https://en.wikipedia.org/wiki/Test_Anything_Protocol&quot;&gt;Test-Anything-Protocol&lt;/a&gt; consumer.</source>
          <target state="translated">El reportero de TAP emite l&amp;iacute;neas para un consumidor de &lt;a href=&quot;https://en.wikipedia.org/wiki/Test_Anything_Protocol&quot;&gt;Test-Anything-Protocol&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="db8032248965c09d3c38c18fd4d34750b613f87a" translate="yes" xml:space="preserve">
          <source>The above code will produce a suite with three specs:</source>
          <target state="translated">El código anterior producirá una suite con tres especificaciones:</target>
        </trans-unit>
        <trans-unit id="565ecc014c359d6d8748abc8825f30c68254f333" translate="yes" xml:space="preserve">
          <source>The above test will be reported as &lt;a href=&quot;#pending-tests&quot;&gt;pending&lt;/a&gt;. It&amp;rsquo;s also important to note that calling &lt;code&gt;this.skip()&lt;/code&gt; will effectively &lt;em&gt;abort&lt;/em&gt; the test.</source>
          <target state="translated">La prueba anterior se informar&amp;aacute; como &lt;a href=&quot;#pending-tests&quot;&gt;pendiente&lt;/a&gt; . Tambi&amp;eacute;n es importante se&amp;ntilde;alar que llamar &lt;code&gt;this.skip()&lt;/code&gt; har&amp;aacute; efectiva &lt;em&gt;abortar&lt;/em&gt; la prueba.</target>
        </trans-unit>
        <trans-unit id="d2dd497c39681e399376a5d4b169a7504f7c7d8f" translate="yes" xml:space="preserve">
          <source>The above test will fail with &lt;code&gt;Error: Resolution method is overspecified. Specify a callback *or* return a Promise; not both.&lt;/code&gt;. In versions older than v3.0.0, the call to &lt;code&gt;done()&lt;/code&gt; is effectively ignored.</source>
          <target state="translated">La prueba anterior fallar&amp;aacute; con &lt;code&gt;Error: Resolution method is overspecified. Specify a callback *or* return a Promise; not both.&lt;/code&gt; . En versiones anteriores a la v3.0.0, la llamada a &lt;code&gt;done()&lt;/code&gt; se ignora efectivamente.</target>
        </trans-unit>
        <trans-unit id="a241b6cc077b36452b7f07c4225946989798ecf5" translate="yes" xml:space="preserve">
          <source>The browser may use the &lt;code&gt;--grep&lt;/code&gt; as functionality. Append a query-string to your URL: &lt;code&gt;?grep=api&lt;/code&gt;.</source>
          <target state="translated">El navegador puede usar &lt;code&gt;--grep&lt;/code&gt; como funcionalidad. Agregue una cadena de consulta a su URL &lt;code&gt;?grep=api&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f45d77921e402759985d1c018e180499c835b031" translate="yes" xml:space="preserve">
          <source>The command &lt;code&gt;mocha --reporter doc array&lt;/code&gt; would yield:</source>
          <target state="translated">El comando &lt;code&gt;mocha --reporter doc array&lt;/code&gt; producir&amp;iacute;a:</target>
        </trans-unit>
        <trans-unit id="5f7afc116111ee3a0af1a9b5d7649a87db9b33d9" translate="yes" xml:space="preserve">
          <source>The dot matrix (or &amp;ldquo;dot&amp;rdquo;) reporter is simply a series of characters which represent test cases. Failures highlight in red exclamation marks (&lt;code&gt;!&lt;/code&gt;), pending tests with a blue comma (&lt;code&gt;,&lt;/code&gt;), and slow tests as yellow. Good if you prefer minimal output.</source>
          <target state="translated">El reportero de matriz de puntos (o &amp;ldquo;punto&amp;rdquo;) es simplemente una serie de caracteres que representan casos de prueba. Las fallas se resaltan en signos de exclamaci&amp;oacute;n rojos ( &lt;code&gt;!&lt;/code&gt; ), Las pruebas pendientes con una coma azul ( &lt;code&gt;,&lt;/code&gt; ) y las pruebas lentas en amarillo. Bueno si prefiere un rendimiento m&amp;iacute;nimo.</target>
        </trans-unit>
        <trans-unit id="18c2a13535cef8cc9c7c5aa8dbed597228314d82" translate="yes" xml:space="preserve">
          <source>The exclusivity feature allows you to run &lt;em&gt;only&lt;/em&gt; the specified suite or test-case by appending &lt;code&gt;.only()&lt;/code&gt; to the function. Here&amp;rsquo;s an example of executing only a particular suite:</source>
          <target state="translated">La caracter&amp;iacute;stica de exclusividad le permite ejecutar &lt;em&gt;solo&lt;/em&gt; la suite o caso de prueba especificado agregando &lt;code&gt;.only()&lt;/code&gt; a la funci&amp;oacute;n. Aqu&amp;iacute; hay un ejemplo de c&amp;oacute;mo ejecutar solo una suite en particular:</target>
        </trans-unit>
        <trans-unit id="345c002964155b4ecb8800d430c5a697a4f87083" translate="yes" xml:space="preserve">
          <source>The following editor-related packages are available:</source>
          <target state="translated">Los siguientes paquetes relacionados con el editor están disponibles:</target>
        </trans-unit>
        <trans-unit id="8c066e5de249b831fcb1a137433b90c38715e5a5" translate="yes" xml:space="preserve">
          <source>The following method(s) &lt;em&gt;only&lt;/em&gt; function in a browser context:</source>
          <target state="translated">Los siguientes m&amp;eacute;todos &lt;em&gt;solo&lt;/em&gt; funcionan en el contexto de un navegador:</target>
        </trans-unit>
        <trans-unit id="447ede2a00c21abc1ae5460592695448444ebb10" translate="yes" xml:space="preserve">
          <source>The following option(s) &lt;em&gt;only&lt;/em&gt; function in a browser context:</source>
          <target state="translated">Las siguientes opciones &lt;em&gt;solo&lt;/em&gt; funcionan en el contexto de un navegador:</target>
        </trans-unit>
        <trans-unit id="2b9f45fc951a3f573a3abefe11f51cb8bbe4c380" translate="yes" xml:space="preserve">
          <source>The latter example uses &lt;a href=&quot;https://www.npmjs.com/package/chai-as-promised&quot;&gt;Chai as Promised&lt;/a&gt; for fluent promise assertions.</source>
          <target state="translated">El &amp;uacute;ltimo ejemplo usa &lt;a href=&quot;https://www.npmjs.com/package/chai-as-promised&quot;&gt;Chai como prometido&lt;/a&gt; para aseveraciones de promesa fluidas.</target>
        </trans-unit>
        <trans-unit id="802ceff010c366f7513ae9f2a1750f92540980f4" translate="yes" xml:space="preserve">
          <source>The lines in this file are prepended to any actual command-line arguments. As such, actual command-line arguments will take precedence over the defaults.</source>
          <target state="translated">Las líneas de este archivo están preparadas para cualquier argumento de la línea de comandos.Como tal,los argumentos de la línea de comandos reales tendrán prioridad sobre los predeterminados.</target>
        </trans-unit>
        <trans-unit id="d6fafdc37c0c812465c5b779825d606227ed3c0b" translate="yes" xml:space="preserve">
          <source>The plugin is titled &lt;strong&gt;NodeJS&lt;/strong&gt;, and can be installed via &lt;strong&gt;Preferences&lt;/strong&gt; &amp;gt; &lt;strong&gt;Plugins&lt;/strong&gt;, assuming your license allows it.</source>
          <target state="translated">El complemento se titula &lt;strong&gt;NodeJS&lt;/strong&gt; y se puede instalar a trav&amp;eacute;s de &lt;strong&gt;Preferencias&lt;/strong&gt; &amp;gt; &lt;strong&gt;Complementos&lt;/strong&gt; , suponiendo que su licencia lo permita.</target>
        </trans-unit>
        <trans-unit id="ff3f53522b46c827c4ab4a8231b5511e5bd9d7f6" translate="yes" xml:space="preserve">
          <source>The settings above will default the reporter to &lt;code&gt;dot&lt;/code&gt;, require the &lt;code&gt;should&lt;/code&gt; library, and use &lt;code&gt;bdd&lt;/code&gt; as the interface. With this, you may then invoke &lt;code&gt;mocha&lt;/code&gt; with additional arguments, here enabling &lt;a href=&quot;http://growl.info/&quot;&gt;Growl&lt;/a&gt; support, and changing the reporter to &lt;code&gt;list&lt;/code&gt;:</source>
          <target state="translated">Los ajustes anteriores se predeterminado El reportero a &lt;code&gt;dot&lt;/code&gt; , requerir la &lt;code&gt;should&lt;/code&gt; biblioteca, y el uso &lt;code&gt;bdd&lt;/code&gt; como la interfaz. Con esto, puede invocar &lt;code&gt;mocha&lt;/code&gt; con argumentos adicionales, aqu&amp;iacute; habilitando el soporte de &lt;a href=&quot;http://growl.info/&quot;&gt;Growl&lt;/a&gt; y cambiando el reportero a la &lt;code&gt;list&lt;/code&gt; a :</target>
        </trans-unit>
        <trans-unit id="74c14ebd3cffb48c3668201eb3d66bbad116c502" translate="yes" xml:space="preserve">
          <source>The test/ Directory</source>
          <target state="translated">El test/directorio</target>
        </trans-unit>
        <trans-unit id="56bc4260522d50687c27d129cd0392807c1034ea" translate="yes" xml:space="preserve">
          <source>Then run tests with:</source>
          <target state="translated">Entonces haz pruebas con:</target>
        </trans-unit>
        <trans-unit id="69262a2b56999cfe1e9fdda96faf079263c46e51" translate="yes" xml:space="preserve">
          <source>Third-Party Reporters</source>
          <target state="translated">Reporteros de terceros</target>
        </trans-unit>
        <trans-unit id="7939bc5c6712cd9ba0c108140dcbed3f31c76456" translate="yes" xml:space="preserve">
          <source>This feature does re-run &lt;code&gt;beforeEach/afterEach&lt;/code&gt; hooks but not &lt;code&gt;before/after&lt;/code&gt; hooks.</source>
          <target state="translated">Esta funci&amp;oacute;n se vuelve a ejecutar &lt;code&gt;beforeEach/afterEach&lt;/code&gt; ganchos pero no &lt;code&gt;before/after&lt;/code&gt; ganchos.</target>
        </trans-unit>
        <trans-unit id="60707f6239eafe97ee7fca274db835f26058a03c" translate="yes" xml:space="preserve">
          <source>This feature is the inverse of &lt;code&gt;.only()&lt;/code&gt;. By appending &lt;code&gt;.skip()&lt;/code&gt;, you may tell Mocha to simply ignore these suite(s) and test case(s). Anything skipped will be marked as &lt;a href=&quot;#pending-tests&quot;&gt;pending&lt;/a&gt;, and reported as such. Here&amp;rsquo;s an example of skipping an entire suite:</source>
          <target state="translated">Esta caracter&amp;iacute;stica es la inversa de &lt;code&gt;.only()&lt;/code&gt; . Al &lt;code&gt;.skip()&lt;/code&gt; , puede decirle a Mocha que simplemente ignore estos conjuntos y casos de prueba. Todo lo que se omita se marcar&amp;aacute; como &lt;a href=&quot;#pending-tests&quot;&gt;pendiente&lt;/a&gt; y se informar&amp;aacute; como tal. A continuaci&amp;oacute;n, se muestra un ejemplo de c&amp;oacute;mo omitir una suite completa:</target>
        </trans-unit>
        <trans-unit id="db6fb9c76f97b4dc11607aaf93d9c0861add85c8" translate="yes" xml:space="preserve">
          <source>This is the default reporter. The &amp;ldquo;spec&amp;rdquo; reporter outputs a hierarchical view nested just as the test cases are.</source>
          <target state="translated">Este es el reportero predeterminado. El informador de &quot;especificaciones&quot; genera una vista jer&amp;aacute;rquica anidada tal como est&amp;aacute;n los casos de prueba.</target>
        </trans-unit>
        <trans-unit id="27a4f2c5a6aa7d957af2668e0ec53e32944aba26" translate="yes" xml:space="preserve">
          <source>Timeouts</source>
          <target state="translated">Timeouts</target>
        </trans-unit>
        <trans-unit id="79d18461c6ac14a2122bc3476f1b9e29df62dcb9" translate="yes" xml:space="preserve">
          <source>To configure where &lt;code&gt;mocha&lt;/code&gt; looks for tests, you may pass your own glob:</source>
          <target state="translated">Para configurar d&amp;oacute;nde busca &lt;code&gt;mocha&lt;/code&gt; las pruebas, puede pasar su propio glob:</target>
        </trans-unit>
        <trans-unit id="f42dba1c3aa3966e335877c4abaa6c8d2851edbb" translate="yes" xml:space="preserve">
          <source>To ensure your tests aren&amp;rsquo;t leaving messes around, here are some ideas to get started:</source>
          <target state="translated">Para asegurarse de que sus pruebas no causen problemas, aqu&amp;iacute; hay algunas ideas para comenzar:</target>
        </trans-unit>
        <trans-unit id="8a094ac9a15fef3b07e9d66f499b8ea5894cc8b3" translate="yes" xml:space="preserve">
          <source>To make things even easier, the &lt;code&gt;done()&lt;/code&gt; callback also accepts an &lt;code&gt;Error&lt;/code&gt; instance (i.e. &lt;code&gt;new Error()&lt;/code&gt;), so we may use this directly:</source>
          <target state="translated">Para facilitar a&amp;uacute;n m&amp;aacute;s las cosas, la devoluci&amp;oacute;n de llamada &lt;code&gt;done()&lt;/code&gt; tambi&amp;eacute;n acepta una instancia de &lt;code&gt;Error&lt;/code&gt; (es decir, un &lt;code&gt;new Error()&lt;/code&gt; ), por lo que podemos usar esto directamente:</target>
        </trans-unit>
        <trans-unit id="181147873dde77a66b9e8936a82a57a1c0d43a0b" translate="yes" xml:space="preserve">
          <source>To run Mocha&amp;rsquo;s tests, you will need GNU Make or compatible; Cygwin should work.</source>
          <target state="translated">Para ejecutar las pruebas de Mocha, necesitar&amp;aacute; GNU Make o compatible; Cygwin deber&amp;iacute;a funcionar.</target>
        </trans-unit>
        <trans-unit id="124a97823b2ea07d462afbbcf69e674aeafa0dd8" translate="yes" xml:space="preserve">
          <source>To skip &lt;em&gt;multiple&lt;/em&gt; tests in this manner, use &lt;code&gt;this.skip()&lt;/code&gt; in a &amp;ldquo;before&amp;rdquo; hook:</source>
          <target state="translated">Para omitir &lt;em&gt;varias&lt;/em&gt; pruebas de esta manera, use &lt;code&gt;this.skip()&lt;/code&gt; en un gancho &quot;antes&quot;:</target>
        </trans-unit>
        <trans-unit id="7260172f73da876c1c01ac390ce0bacfa8301c04" translate="yes" xml:space="preserve">
          <source>To tweak what&amp;rsquo;s considered &amp;ldquo;slow&amp;rdquo;, you can use the &lt;code&gt;slow()&lt;/code&gt; method:</source>
          <target state="translated">Para modificar lo que se considera &quot;lento&quot;, puede utilizar el m&amp;eacute;todo &lt;code&gt;slow()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4aff415f99540d0b50b0e89660fe5754193c5ce0" translate="yes" xml:space="preserve">
          <source>To use a different reporter:</source>
          <target state="translated">Para usar un reportero diferente:</target>
        </trans-unit>
        <trans-unit id="4d67647d97898e9540d474b58f2a7cd6420e6599" translate="yes" xml:space="preserve">
          <source>Try something like &lt;a href=&quot;https://npm.im/why-is-node-running&quot;&gt;why-is-node-running&lt;/a&gt;</source>
          <target state="translated">Intente algo como &lt;a href=&quot;https://npm.im/why-is-node-running&quot;&gt;why-is-node-running&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="60ed9ffde5c3bc9c4eb8943a408076b8dfe51f28" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;#exclusive-tests&quot;&gt;&lt;code&gt;.only&lt;/code&gt;&lt;/a&gt; until you find the test that causes Mocha to hang</source>
          <target state="translated">Use &lt;a href=&quot;#exclusive-tests&quot;&gt; &lt;code&gt;.only&lt;/code&gt; &lt;/a&gt; hasta que encuentre la prueba que hace que Mocha se cuelgue</target>
        </trans-unit>
        <trans-unit id="ec02773b86986cfdb5c4d1ecb9e0c327c5d9c709" translate="yes" xml:space="preserve">
          <source>Use the new &lt;a href=&quot;https://github.com/nodejs/node/blob/master/doc/api/async_hooks.md&quot;&gt;&lt;code&gt;async_hooks&lt;/code&gt;&lt;/a&gt; API (&lt;a href=&quot;https://git.io/vdlNM&quot;&gt;example&lt;/a&gt;)</source>
          <target state="translated">Utilice la nueva API &lt;a href=&quot;https://github.com/nodejs/node/blob/master/doc/api/async_hooks.md&quot;&gt; &lt;code&gt;async_hooks&lt;/code&gt; &lt;/a&gt; ( &lt;a href=&quot;https://git.io/vdlNM&quot;&gt;ejemplo&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="337aaed86842f2d6aa0bad6af3291d8271ad3377" translate="yes" xml:space="preserve">
          <source>Use this option to have Mocha check for global variables that are leaked while running tests. Specify globals that are acceptable via the &lt;code&gt;--globals&lt;/code&gt; option (for example: &lt;code&gt;--check-leaks --globals jQuery,MyLib&lt;/code&gt;).</source>
          <target state="translated">Utilice esta opci&amp;oacute;n para que Mocha compruebe las variables globales que se filtran mientras se ejecutan las pruebas. Especifique globales que sean aceptables mediante la opci&amp;oacute;n &lt;code&gt;--globals&lt;/code&gt; (por ejemplo: &lt;code&gt;--check-leaks --globals jQuery,MyLib&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="6520ff806f47de65e65ee6d0478f3e24eb1fb32b" translate="yes" xml:space="preserve">
          <source>Using async / await</source>
          <target state="translated">Usando async/wait</target>
        </trans-unit>
        <trans-unit id="3524cc2fcdcb4100bc0a15fc50b996cff06a83f0" translate="yes" xml:space="preserve">
          <source>View SuperAgent&amp;rsquo;s &lt;a href=&quot;https://github.com/visionmedia/superagent/blob/master/Makefile&quot;&gt;Makefile&lt;/a&gt; for reference.</source>
          <target state="translated">Vea el &lt;a href=&quot;https://github.com/visionmedia/superagent/blob/master/Makefile&quot;&gt;Makefile&lt;/a&gt; de SuperAgent como referencia.</target>
        </trans-unit>
        <trans-unit id="46ce53208c0b44d4824e60e18f475a3488a4cf23" translate="yes" xml:space="preserve">
          <source>Wallaby.js</source>
          <target state="translated">Wallaby.js</target>
        </trans-unit>
        <trans-unit id="007f2a3d03e97100b115da180988c4633173e84d" translate="yes" xml:space="preserve">
          <source>WebSocket.io</source>
          <target state="translated">WebSocket.io</target>
        </trans-unit>
        <trans-unit id="9e83e679040d85a449b1822c88d3ad567f5eef32" translate="yes" xml:space="preserve">
          <source>When testing synchronous code, omit the callback and Mocha will automatically continue on to the next test.</source>
          <target state="translated">Al probar el código sincrónico,omite la llamada y Mocha pasará automáticamente a la siguiente prueba.</target>
        </trans-unit>
        <trans-unit id="dc62639f5265fad900da247d38f006b2a4ffdf0c" translate="yes" xml:space="preserve">
          <source>With its default &amp;ldquo;BDD&amp;rdquo;-style interface, Mocha provides the hooks &lt;code&gt;before()&lt;/code&gt;, &lt;code&gt;after()&lt;/code&gt;, &lt;code&gt;beforeEach()&lt;/code&gt;, and &lt;code&gt;afterEach()&lt;/code&gt;. These should be used to set up preconditions and clean up after your tests.</source>
          <target state="translated">Con su interfaz de estilo &quot;BDD&quot; predeterminada, Mocha proporciona los ganchos &lt;code&gt;before()&lt;/code&gt; , &lt;code&gt;after()&lt;/code&gt; , &lt;code&gt;beforeEach()&lt;/code&gt; y &lt;code&gt;afterEach()&lt;/code&gt; . Estos deben usarse para configurar las condiciones previas y limpiar despu&amp;eacute;s de sus pruebas.</target>
        </trans-unit>
        <trans-unit id="b0a77555be0622b8ee3dc42afae18948e8477c1b" translate="yes" xml:space="preserve">
          <source>Working with Promises</source>
          <target state="translated">Trabajando con promesas</target>
        </trans-unit>
        <trans-unit id="886a64c45d3e00ddc7bf5f5fb27189e7a4f8985b" translate="yes" xml:space="preserve">
          <source>XUnit</source>
          <target state="translated">XUnit</target>
        </trans-unit>
        <trans-unit id="4e19397d678bf6b1ecd2b44b2845afaa38c6ac24" translate="yes" xml:space="preserve">
          <source>You can choose to retry failed tests up to a certain number of times. This feature is designed to handle end-to-end tests (functional tests/Selenium&amp;hellip;) where resources cannot be easily mocked/stubbed. &lt;strong&gt;It&amp;rsquo;s not recommended to use this feature for unit tests&lt;/strong&gt;.</source>
          <target state="translated">Puede optar por volver a intentar las pruebas fallidas hasta un cierto n&amp;uacute;mero de veces. Esta caracter&amp;iacute;stica est&amp;aacute; dise&amp;ntilde;ada para manejar pruebas de un extremo a otro (pruebas funcionales / Selenium&amp;hellip;) donde los recursos no se pueden burlar / eliminar f&amp;aacute;cilmente. &lt;strong&gt;No se recomienda utilizar esta funci&amp;oacute;n para pruebas unitarias&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="f005210d275a1a8eb71a10ca4d3e586d175c0169" translate="yes" xml:space="preserve">
          <source>You may also choose multiple suites:</source>
          <target state="translated">También puede elegir varias suites:</target>
        </trans-unit>
        <trans-unit id="eb919cbe2da233a5f01bbc2c6d1554c50ab176a9" translate="yes" xml:space="preserve">
          <source>You may also pick any file and add &amp;ldquo;root&amp;rdquo;-level hooks. For example, add &lt;code&gt;beforeEach()&lt;/code&gt; outside of all &lt;code&gt;describe()&lt;/code&gt; blocks. This will cause the callback to &lt;code&gt;beforeEach()&lt;/code&gt; to run before any test case, regardless of the file it lives in (this is because Mocha has an &lt;em&gt;implied&lt;/em&gt;&lt;code&gt;describe()&lt;/code&gt; block, called the &amp;ldquo;root suite&amp;rdquo;).</source>
          <target state="translated">Tambi&amp;eacute;n puede elegir cualquier archivo y agregar ganchos de nivel &quot;ra&amp;iacute;z&quot;. Por ejemplo, agregue &lt;code&gt;beforeEach()&lt;/code&gt; fuera de todos los bloques &lt;code&gt;describe()&lt;/code&gt; . Esto har&amp;aacute; que la devoluci&amp;oacute;n de llamada a &lt;code&gt;beforeEach()&lt;/code&gt; ejecute antes de cualquier caso de prueba, independientemente del archivo en el que se encuentre (esto se debe a que Mocha tiene un bloque &lt;code&gt;describe()&lt;/code&gt; &lt;em&gt;impl&amp;iacute;cito&lt;/em&gt; , llamado &quot;suite ra&amp;iacute;z&quot;).</target>
        </trans-unit>
        <trans-unit id="53a40e9ac08f8e56ed58d18aad7e7338c0d58b43" translate="yes" xml:space="preserve">
          <source>You may also skip &lt;em&gt;at runtime&lt;/em&gt; using &lt;code&gt;this.skip()&lt;/code&gt;. If a test needs an environment or configuration which cannot be detected beforehand, a runtime skip is appropriate. For example:</source>
          <target state="translated">Tambi&amp;eacute;n puede omitir &lt;em&gt;en tiempo de ejecuci&amp;oacute;n&lt;/em&gt; usando &lt;code&gt;this.skip()&lt;/code&gt; . Si una prueba necesita un entorno o configuraci&amp;oacute;n que no se puede detectar de antemano, es apropiado omitir el tiempo de ejecuci&amp;oacute;n. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="32fab07543a277b879029abf99d6e89ba5b11c84" translate="yes" xml:space="preserve">
          <source>auto run tests on file save</source>
          <target state="translated">auto ejecutar las pruebas en el archivo de guardar</target>
        </trans-unit>
        <trans-unit id="f0f10b7b77b19c7640a562cf9060fead1bff0494" translate="yes" xml:space="preserve">
          <source>done()</source>
          <target state="translated">done()</target>
        </trans-unit>
        <trans-unit id="e87e846a2b2da5dfadb82e7cc09eefd99016f221" translate="yes" xml:space="preserve">
          <source>exports</source>
          <target state="translated">exports</target>
        </trans-unit>
        <trans-unit id="a619da43c8cb95adf890b628630836654a0a3077" translate="yes" xml:space="preserve">
          <source>mocha</source>
          <target state="translated">mocha</target>
        </trans-unit>
        <trans-unit id="4bfb16b073994e714d04294f5bca1c3e894db573" translate="yes" xml:space="preserve">
          <source>mocha.opts</source>
          <target state="translated">mocha.opts</target>
        </trans-unit>
        <trans-unit id="1859cc6fb110f181dca7c365469d9905153a1bd4" translate="yes" xml:space="preserve">
          <source>mocha.setup()</source>
          <target state="translated">mocha.setup()</target>
        </trans-unit>
        <trans-unit id="cbe19f375a678776beb07f153186eb8e9713ad96" translate="yes" xml:space="preserve">
          <source>only()</source>
          <target state="translated">only()</target>
        </trans-unit>
        <trans-unit id="66afd2a4fec11527d32e28b8e991cb7947e40089" translate="yes" xml:space="preserve">
          <source>or as a development dependency for your project:</source>
          <target state="translated">o como una dependencia de desarrollo para su proyecto:</target>
        </trans-unit>
        <trans-unit id="623e76c36aa2a886542011e28412cc761d7ceb01" translate="yes" xml:space="preserve">
          <source>require</source>
          <target state="translated">require</target>
        </trans-unit>
        <trans-unit id="f58113e053e9cfabd8f5da0edb51764ffe848135" translate="yes" xml:space="preserve">
          <source>run &amp;amp; debug tests for each level hierarchy from all tests to a single test (and each describe of course)</source>
          <target state="translated">ejecutar y depurar pruebas para cada jerarqu&amp;iacute;a de nivel desde todas las pruebas hasta una sola prueba (y cada una describe, por supuesto)</target>
        </trans-unit>
        <trans-unit id="75a7aab533cbd0d4b0a0f60439ef76ac4367c817" translate="yes" xml:space="preserve">
          <source>see all tests in VS Code sidebar menu</source>
          <target state="translated">ver todas las pruebas en el menú de la barra lateral del Código VS</target>
        </trans-unit>
        <trans-unit id="b015dd3ac23d491eb96c2099ff31b741d8ad935d" translate="yes" xml:space="preserve">
          <source>see tests results directly in the code editor</source>
          <target state="translated">ver los resultados de las pruebas directamente en el editor de código</target>
        </trans-unit>
        <trans-unit id="1c32fed0b0a4ddd34877f85ef98fc80b6eef760b" translate="yes" xml:space="preserve">
          <source>skip()</source>
          <target state="translated">skip()</target>
        </trans-unit>
        <trans-unit id="55187fbc9d22bfac69ba93172a722f9efba0e3ef" translate="yes" xml:space="preserve">
          <source>specify()</source>
          <target state="translated">specify()</target>
        </trans-unit>
        <trans-unit id="89dfaa12d7e423bcf84be8320838b8e822e3099d" translate="yes" xml:space="preserve">
          <source>teardown()</source>
          <target state="translated">teardown()</target>
        </trans-unit>
        <trans-unit id="1a13bd67d53c6ca5d0ba854cc1c6d8e1dc4db3cb" translate="yes" xml:space="preserve">
          <source>test()</source>
          <target state="translated">test()</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
