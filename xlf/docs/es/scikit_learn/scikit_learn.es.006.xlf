<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="scikit_learn">
    <body>
      <group id="scikit_learn">
        <trans-unit id="609c2899b7650adcd3ce5ddd63fcdf29f38e4664" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MaxAbsScaler.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MaxAbsScaler.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="108eeedc7f670546ed697c07c115467aa4a6750f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MaxAbsScaler.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MaxAbsScaler.fit_transform&quot;&gt; &lt;code&gt;fit_transform&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="10e8268dcd4e9e907144a1ca273eebc15132a931" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MaxAbsScaler.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MaxAbsScaler.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="877d5b432494d50744cc64a508e7c2590b45812c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MaxAbsScaler.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MaxAbsScaler.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="5e2bc525ed053aae9b3aa348eede0e0386688f33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MaxAbsScaler.partial_fit&quot;&gt;&lt;code&gt;partial_fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MaxAbsScaler.partial_fit&quot;&gt; &lt;code&gt;partial_fit&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="27bdcd15a19d29c6d88f9ffc7ce073cf2cd94db3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MaxAbsScaler.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MaxAbsScaler.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="1f4f33b9e0408dd5cd330e5d356eba5438ae0990" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MaxAbsScaler.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MaxAbsScaler.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="fd879c47fc662c91cdf08062a3b6941e074864ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MinMaxScaler.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MinMaxScaler.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="a3981f77fa0829d1713c86e373b1c7154fabaeb1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MinMaxScaler.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MinMaxScaler.fit_transform&quot;&gt; &lt;code&gt;fit_transform&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="a54e2f7268a5a18169139d2dfdb601f8b2e4b594" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MinMaxScaler.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MinMaxScaler.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="d25577b69fe18d2c8f51bfdde2f13df7c0f0bd4a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MinMaxScaler.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MinMaxScaler.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="f9eb2f9eefb296f237fb7f621a1aa0f0987e0794" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MinMaxScaler.partial_fit&quot;&gt;&lt;code&gt;partial_fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MinMaxScaler.partial_fit&quot;&gt; &lt;code&gt;partial_fit&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="3e001a89a48181ebf451f4762786ccae07758835" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MinMaxScaler.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MinMaxScaler.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="130c1f559b623e348c3b86750ec94cb8ea88358b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MinMaxScaler.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MinMaxScaler.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="494e472057b758144e2de1e7d6bafc6bf870497b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MultiLabelBinarizer.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(y)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MultiLabelBinarizer.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(y)</target>
        </trans-unit>
        <trans-unit id="6f38175d82defb32828561ab80858a27c66d5316" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MultiLabelBinarizer.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(y)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MultiLabelBinarizer.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(y)</target>
        </trans-unit>
        <trans-unit id="93709b4d583c445eba0188aa1cb11117221ec22b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MultiLabelBinarizer.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MultiLabelBinarizer.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="3cae91e6f3d02df652cc23be1877ef840def4fd8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MultiLabelBinarizer.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(yt)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MultiLabelBinarizer.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(yt)</target>
        </trans-unit>
        <trans-unit id="5e4c2f870e3926813d807af76271da7d61ef51e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MultiLabelBinarizer.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MultiLabelBinarizer.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="0f8a93ef67d4353f7e828d7db3c7f6f018481fb5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.MultiLabelBinarizer.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(y)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.MultiLabelBinarizer.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(y)</target>
        </trans-unit>
        <trans-unit id="99525b9f5190717849914b4baf440a53efcd70a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.Normalizer.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.Normalizer.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="71eb1c87958e3948518f0623227dab79f7bd7a89" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.Normalizer.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.Normalizer.fit_transform&quot;&gt; &lt;code&gt;fit_transform&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="7c5a7cab2e0297aeb6fcf2637ff58ae1ea02a974" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.Normalizer.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.Normalizer.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="58cb4f02109b1db11a4d5b5a7a4ad7d1ae586d71" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.Normalizer.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.Normalizer.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="6489072d183c21a8f50af405e81ed36336878521" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.Normalizer.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X[, copy])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="064492ad52805e309947e8398bb93c4915cc9011" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.Normalizer.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X[, y, copy])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.Normalizer.transform&quot;&gt; &lt;code&gt;transform&lt;/code&gt; ar&lt;/a&gt; (X [, y, copiar])</target>
        </trans-unit>
        <trans-unit id="12c5895bffaf3739d5789aa82779fbaed03af49a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="907c758253fdec591644c4d807f043410397e553" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.fit_transform&quot;&gt; &lt;code&gt;fit_transform&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="888dc43c6581a40d0d2d233070ad9924bd039584" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.get_feature_names&quot;&gt;&lt;code&gt;get_feature_names&lt;/code&gt;&lt;/a&gt;([input_features])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.get_feature_names&quot;&gt;&lt;code&gt;get_feature_names&lt;/code&gt;&lt;/a&gt;([input_features])</target>
        </trans-unit>
        <trans-unit id="7252e9690a3dfad09062a29efba24cb1ce12bd2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="c8de54bcf822d3073bc97ab00ee8e0914bb23120" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="a317d34d14ac5b850581f825b3e4b4cdbeaad3e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="7342350a4763063cffe9defd7e795651fbeb6002" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.OneHotEncoder.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="4b2ec09c31fd9f551550da0b7b3e0075b784e0e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.OrdinalEncoder.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.OrdinalEncoder.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="ce1af33182170f9132299d957b08302a193f4558" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.OrdinalEncoder.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.OrdinalEncoder.fit_transform&quot;&gt; &lt;code&gt;fit_transform&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="741af2c1f58d1845c9f05f3a5916cc330ece7cc3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.OrdinalEncoder.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.OrdinalEncoder.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="a61e496ab0cc79b17b78b646fcee158aaa4feb10" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.OrdinalEncoder.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.OrdinalEncoder.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="cdfc70e1811c3cead625394a5c4504e71b3133ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.OrdinalEncoder.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.OrdinalEncoder.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="e33f4663b7d12e40681ee8b2615785539779c45f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.OrdinalEncoder.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.OrdinalEncoder.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="a1763942ba02652bc492be37ed841f77d10fa033" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.PolynomialFeatures.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.PolynomialFeatures.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="253312aab53ddf2c2e2ada6eca74918094daaccc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.PolynomialFeatures.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.PolynomialFeatures.fit_transform&quot;&gt; &lt;code&gt;fit_transform&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="49b329f00dede10d3c8c7610bd709a8de587e4cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.PolynomialFeatures.get_feature_names&quot;&gt;&lt;code&gt;get_feature_names&lt;/code&gt;&lt;/a&gt;([input_features])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.PolynomialFeatures.get_feature_names&quot;&gt;&lt;code&gt;get_feature_names&lt;/code&gt;&lt;/a&gt;([input_features])</target>
        </trans-unit>
        <trans-unit id="ab1a825a0a4f8c894bd822687d86ef019d89a6d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.PolynomialFeatures.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.PolynomialFeatures.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="217021a82cecc7c622c7758c23e0076b5e36d73b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.PolynomialFeatures.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.PolynomialFeatures.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="b561441dcb5ee4d6afb05559fb0a8fe846551bbb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.PolynomialFeatures.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.PolynomialFeatures.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="25ab4107908611fb94f7c8468ff0dbee48f8f71b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.PowerTransformer.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.PowerTransformer.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="934c6d317927bf64b03033a56103d6c6df26c095" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.PowerTransformer.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b134cadf42805f23626a6f356a215571db637fa0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.PowerTransformer.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.PowerTransformer.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="a02f1b03de09cc573c18fc1b09949170a3b5d4dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.PowerTransformer.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.PowerTransformer.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="9a8517b5e077f709a72ec14a25a291b0cb328587" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.PowerTransformer.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.PowerTransformer.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="602433a2259cba932f43d710614b3b8c682aceef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.PowerTransformer.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.PowerTransformer.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="b5d1986c88da1574fb8671debc9e53b4b1ae349b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.QuantileTransformer.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.QuantileTransformer.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="fdae8893c6ba52b6ac24340a5b74fe5adcdf1672" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.QuantileTransformer.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.QuantileTransformer.fit_transform&quot;&gt; &lt;code&gt;fit_transform&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="20f8e48d49f8dcffb6111b1e904f1caecbb2d7b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.QuantileTransformer.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.QuantileTransformer.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="0b8f6d543c14fae3b80615ceb7ebd77102569216" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.QuantileTransformer.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.QuantileTransformer.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="7884e564bdbdbde88ce550c8e45ddff73219824c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.QuantileTransformer.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.QuantileTransformer.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="2e8612af1bc4e8bbaceb820639365ed35d96515b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.QuantileTransformer.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.QuantileTransformer.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="431d1063425f589ada0f92f2801f058b6e03c61b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.RobustScaler.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.RobustScaler.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="324f727d78ed824dc330a432e9dcc7a957ff8247" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.RobustScaler.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.RobustScaler.fit_transform&quot;&gt; &lt;code&gt;fit_transform&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="b755ab16a811d3fe05ce1f542d2c57159af3cd16" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.RobustScaler.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.RobustScaler.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="f917186bab461486bf2f9208ee6362918c0c74e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.RobustScaler.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.RobustScaler.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="7d764da5e1f7f138612d1a73821de6baeef686b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.RobustScaler.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.RobustScaler.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="f0c7686c1470d81b09ad7dfaf83cda86f1dc9f2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.RobustScaler.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.RobustScaler.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="61272ed6e5c8f6b927bd25e7f643fda6f3ad2f37" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.StandardScaler.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.StandardScaler.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="934d74037ceb0426d331ba2f1426f880f853dc33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.StandardScaler.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.StandardScaler.fit_transform&quot;&gt; &lt;code&gt;fit_transform&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="4900fa5eace012db65332672660850860c55b282" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.StandardScaler.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.StandardScaler.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="a1f3c6341a9aad6c22dc2d0146db3961ab363073" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.StandardScaler.inverse_transform&quot;&gt;&lt;code&gt;inverse_transform&lt;/code&gt;&lt;/a&gt;(X[, copy])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.StandardScaler.inverse_transform&quot;&gt; &lt;code&gt;inverse_transform&lt;/code&gt; &lt;/a&gt; (X [, copiar])</target>
        </trans-unit>
        <trans-unit id="a415d9dfe5d14669f4134fe83b0a41b52cf845e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.StandardScaler.partial_fit&quot;&gt;&lt;code&gt;partial_fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.StandardScaler.partial_fit&quot;&gt; &lt;code&gt;partial_fit&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="89a2bc9fe9f73d8c607f2276d98c06e203405701" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.StandardScaler.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.StandardScaler.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="8851da18426a2d0d3ecb013bb404081f71c5f8ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.StandardScaler.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X[, copy])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1febb3b8588eaabb828e6171d442e036b2f895e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.preprocessing.StandardScaler.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X[, y, copy])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.preprocessing.StandardScaler.transform&quot;&gt; &lt;code&gt;transform&lt;/code&gt; ar&lt;/a&gt; (X [, y, copiar])</target>
        </trans-unit>
        <trans-unit id="237f76a7aff0b42d1ce83f750d084a2ecb90e2bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.random_projection.GaussianRandomProjection.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.random_projection.GaussianRandomProjection.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="bc2ad30e94111b44ee9849199facfe60730b2d0a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.random_projection.GaussianRandomProjection.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.random_projection.GaussianRandomProjection.fit_transform&quot;&gt; &lt;code&gt;fit_transform&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="6ba0db0f32902d59d220742c64d5151773c5e106" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.random_projection.GaussianRandomProjection.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.random_projection.GaussianRandomProjection.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="e7b3d53385ec30771f82005232f0ef1ab5e24923" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.random_projection.GaussianRandomProjection.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.random_projection.GaussianRandomProjection.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="6fa24a2d3931f734f64c83917cdd41ed80e21e40" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.random_projection.GaussianRandomProjection.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.random_projection.GaussianRandomProjection.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="49eb083df941b9a06fb0e9e9e44c9ec22922dac2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.random_projection.SparseRandomProjection.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.random_projection.SparseRandomProjection.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="03810dace856edcd13e75d0d1d798cf82965c895" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.random_projection.SparseRandomProjection.fit_transform&quot;&gt;&lt;code&gt;fit_transform&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.random_projection.SparseRandomProjection.fit_transform&quot;&gt; &lt;code&gt;fit_transform&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="66db0b81c1ffc75aecb161909ad1d4c6c41e72e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.random_projection.SparseRandomProjection.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.random_projection.SparseRandomProjection.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="954a1f728bcf61e22cb313ccc0cbada15c355942" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.random_projection.SparseRandomProjection.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.random_projection.SparseRandomProjection.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="a4f05f5ce056fa76e1b18b82a0b59c56584fa8f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.random_projection.SparseRandomProjection.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.random_projection.SparseRandomProjection.transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="054184737ea3a7796996ab8d7d55f5cb42c17d65" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.semi_supervised.LabelPropagation.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d92f40ad8cd4f7d81565d3ac6d8592d74c8dd69" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.semi_supervised.LabelPropagation.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.semi_supervised.LabelPropagation.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="2384b6dd19a9b76471c5e116d320d2df5d1713d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.semi_supervised.LabelPropagation.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.semi_supervised.LabelPropagation.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="b2def215b040f8f609c1e0ef616e48565db25705" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.semi_supervised.LabelPropagation.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.semi_supervised.LabelPropagation.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="815e72b6c22f573d100da7f62e6f6984cbe01a6c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.semi_supervised.LabelPropagation.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.semi_supervised.LabelPropagation.score&quot;&gt; &lt;code&gt;score&lt;/code&gt; &lt;/a&gt; (X, y [, sample_weight])</target>
        </trans-unit>
        <trans-unit id="eadb5c500221df65a9f9866871486e05986c1c03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.semi_supervised.LabelPropagation.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.semi_supervised.LabelPropagation.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="b4c6b22a7a7ddaffa6b9441265cdab2817a1463e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.semi_supervised.LabelSpreading.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.semi_supervised.LabelSpreading.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X, y)</target>
        </trans-unit>
        <trans-unit id="8630cf34daeae7d19656dcf8831d170eb3f7ed61" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.semi_supervised.LabelSpreading.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.semi_supervised.LabelSpreading.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="0fde66af8971f6bf9fcb000e0cccd94a55c27619" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.semi_supervised.LabelSpreading.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.semi_supervised.LabelSpreading.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="365321ce62987c1e7636537cc3ed643e8ce05858" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.semi_supervised.LabelSpreading.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.semi_supervised.LabelSpreading.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="8d485f6b57cacf3c2c76fba0d8d010a0a74af30b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.semi_supervised.LabelSpreading.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.semi_supervised.LabelSpreading.score&quot;&gt; &lt;code&gt;score&lt;/code&gt; &lt;/a&gt; (X, y [, sample_weight])</target>
        </trans-unit>
        <trans-unit id="311f06ff8566df2d6679d7063f940f05a36c0e8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.semi_supervised.LabelSpreading.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.semi_supervised.LabelSpreading.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="6c3f20ec165f7aa6a3d670b32608245e6583f139" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.LinearSVC.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.LinearSVC.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="be9de40ad61af21f78b172836eaf9d693f1c45f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.LinearSVC.densify&quot;&gt;&lt;code&gt;densify&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.LinearSVC.densify&quot;&gt;&lt;code&gt;densify&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="bb809ab613454a3a1d026086cfba58e3c98d34d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.LinearSVC.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.LinearSVC.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X, y [, peso_muestra])</target>
        </trans-unit>
        <trans-unit id="f030a50178d03a16bd17c283b7665a3b7de48b9d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.LinearSVC.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.LinearSVC.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="4b6e54eb5d3c3e52e4d88cb2411f190d06aff596" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.LinearSVC.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.LinearSVC.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="641483ce095df447d49ca644ad2b5d4544707403" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.LinearSVC.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.LinearSVC.score&quot;&gt; &lt;code&gt;score&lt;/code&gt; &lt;/a&gt; (X, y [, sample_weight])</target>
        </trans-unit>
        <trans-unit id="c0b462e66676d7168cb3a0faffa8a5d61dd76bd8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.LinearSVC.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.LinearSVC.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="52a9f430850177d33347add14123d34c6b5d649d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.LinearSVC.sparsify&quot;&gt;&lt;code&gt;sparsify&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.LinearSVC.sparsify&quot;&gt;&lt;code&gt;sparsify&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="35f2edd484816f0feb15e246090f656c45f02c31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.LinearSVR.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.LinearSVR.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X, y [, peso_muestra])</target>
        </trans-unit>
        <trans-unit id="fb8535ffcb5e2ffc82509c2d34e8be0ba83686da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.LinearSVR.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.LinearSVR.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="8ed0e70a27a20df9975d03812ad230dd3ed98906" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.LinearSVR.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.LinearSVR.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="d26574828ca3a6596fb536af3be72a95bf48da5f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.LinearSVR.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.LinearSVR.score&quot;&gt; &lt;code&gt;score&lt;/code&gt; &lt;/a&gt; (X, y [, sample_weight])</target>
        </trans-unit>
        <trans-unit id="f7506b45c9ba11ef47ec5a4be3185e991367df26" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.LinearSVR.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.LinearSVR.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="c09ac5e766b0973e4b10c0434c7aa848ebdb68ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.NuSVC.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.NuSVC.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="0c13bb73d7e1cbc207d6bce94ffd8beca6980a7a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.NuSVC.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.NuSVC.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X, y [, peso_muestra])</target>
        </trans-unit>
        <trans-unit id="414f1914c62a6cda2a05c5c60f0496b8bd309898" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.NuSVC.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.NuSVC.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="fbe4fbca9b4e649f7a40b34b82ca7ac63f84ec2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.NuSVC.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.NuSVC.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="aa1bfac167bc1f1dc9edf2c525e2a55264a5cbfe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.NuSVC.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.NuSVC.score&quot;&gt; &lt;code&gt;score&lt;/code&gt; &lt;/a&gt; (X, y [, sample_weight])</target>
        </trans-unit>
        <trans-unit id="8f0d5832191fac150767cb6bc791f22d0819b82d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.NuSVC.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.NuSVC.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="0659659b2bcd23e814a5bf62c673bb51bf41dbd0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.NuSVR.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.NuSVR.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X, y [, peso_muestra])</target>
        </trans-unit>
        <trans-unit id="80b59c94fbf894a69de94585d1c7729bcf514f25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.NuSVR.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.NuSVR.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="dc2c40490029f48847332a1d7b7688c850285293" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.NuSVR.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.NuSVR.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="b05ccdc8913bd08854e73f84583c0929095e3a81" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.NuSVR.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.NuSVR.score&quot;&gt; &lt;code&gt;score&lt;/code&gt; &lt;/a&gt; (X, y [, sample_weight])</target>
        </trans-unit>
        <trans-unit id="221c7a8eae7188ea181b396dd1b90ac49256989b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.NuSVR.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.NuSVR.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="ad81c989ca74d7d05bc32460f7d151a89abf66e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.OneClassSVM.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.OneClassSVM.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="121e71cd0dc150bbcd6bf1af020b816dcb95fd9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.OneClassSVM.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X[, y, sample_weight])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.OneClassSVM.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X [, y, sample_weight])</target>
        </trans-unit>
        <trans-unit id="b99caa830d9c7da325413ebdae8b46d9352d967f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.OneClassSVM.fit_predict&quot;&gt;&lt;code&gt;fit_predict&lt;/code&gt;&lt;/a&gt;(X[, y])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.OneClassSVM.fit_predict&quot;&gt; &lt;code&gt;fit_predict&lt;/code&gt; &lt;/a&gt; (X [, y])</target>
        </trans-unit>
        <trans-unit id="0782d3c143737b310a2e1a45c87ef6ec48a1f142" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.OneClassSVM.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.OneClassSVM.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="adaf768a3bca7e61d312bd51fb3e59c6c309f799" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.OneClassSVM.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.OneClassSVM.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="73a6d0ef953f99b24ffb1c0786307accfb6fd690" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.OneClassSVM.score_samples&quot;&gt;&lt;code&gt;score_samples&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.OneClassSVM.score_samples&quot;&gt;&lt;code&gt;score_samples&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="fa0a19f5a77b03aa200160842aec0974a2ba67c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.OneClassSVM.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.OneClassSVM.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="13e66010824bf3b559373309bab2d2d61ae28bcb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.SVC.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.SVC.decision_function&quot;&gt;&lt;code&gt;decision_function&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="eaf32b3fba4e046e7f0dfbcceebab679aa0e9cae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.SVC.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.SVC.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X, y [, peso_muestra])</target>
        </trans-unit>
        <trans-unit id="b95149b0fbd0a334029835fb763d89a602030c35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.SVC.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.SVC.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="7024d28dc19312604573afcd8ee27c61976d0e55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.SVC.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.SVC.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="f7f1e3d3ab12c11542c3d93cb5ac4d441a537aaf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.SVC.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.SVC.score&quot;&gt; &lt;code&gt;score&lt;/code&gt; &lt;/a&gt; (X, y [, sample_weight])</target>
        </trans-unit>
        <trans-unit id="5caf9c0d345c40872c307e89f65c3d08261414ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.SVC.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.SVC.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="b18a48aa718fb82cc35acd42db5a888e525a5c39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.SVR.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.SVR.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X, y [, peso_muestra])</target>
        </trans-unit>
        <trans-unit id="97b0b717eb0320c8ed2d029a38a1ba4a118c4ae0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.SVR.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.SVR.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="ee3d7b7294e8e666e3aec92fbdc1cf010c57e954" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.SVR.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.SVR.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="db222a2a96730b45af0d6966dd8580010796e0cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.SVR.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.SVR.score&quot;&gt; &lt;code&gt;score&lt;/code&gt; &lt;/a&gt; (X, y [, sample_weight])</target>
        </trans-unit>
        <trans-unit id="da073250731dc3752cc16c9e590e6fe5d6b7dbfc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.svm.SVR.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.svm.SVR.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="d986e854a3b166ca430c98b4e83ca44f19ee3bba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.apply&quot;&gt;&lt;code&gt;apply&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.apply&quot;&gt; &lt;code&gt;apply&lt;/code&gt; &lt;/a&gt; (X [, check_input])</target>
        </trans-unit>
        <trans-unit id="3534c3155d431737a9fb32ea40d5029469ab18a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.cost_complexity_pruning_path&quot;&gt;&lt;code&gt;cost_complexity_pruning_path&lt;/code&gt;&lt;/a&gt;(X, y[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1f946c7b239c78964754a859f6961889fca632a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.decision_path&quot;&gt;&lt;code&gt;decision_path&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.decision_path&quot;&gt; &lt;code&gt;decision_path&lt;/code&gt; &lt;/a&gt; (X [, check_input])</target>
        </trans-unit>
        <trans-unit id="f15dd2da21da25f0b72636b05129a4f2ad44eb5a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight, check_input, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X, y [, sample_weight, check_input,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="a8b0051deac2fc54bc467e43833188c4ca132e14" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.get_depth&quot;&gt;&lt;code&gt;get_depth&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.get_depth&quot;&gt;&lt;code&gt;get_depth&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="16e470af7a2d670c967021e39a75d1f303c6c5d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.get_n_leaves&quot;&gt;&lt;code&gt;get_n_leaves&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.get_n_leaves&quot;&gt;&lt;code&gt;get_n_leaves&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="ed534d11e1cf0a3b7d5f1ba8d4ac2c534455b052" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="df0f801628b81edc9703115a2523da7c3297031f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.predict&quot;&gt; &lt;code&gt;predict&lt;/code&gt; &lt;/a&gt; (X [, check_input])</target>
        </trans-unit>
        <trans-unit id="c16a13f825775d4191c21a28a445cc069149b988" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.predict_log_proba&quot;&gt;&lt;code&gt;predict_log_proba&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.predict_log_proba&quot;&gt;&lt;code&gt;predict_log_proba&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="073619ef7719fa9c6cd60b378b8ac90f91c49967" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.predict_proba&quot;&gt; &lt;code&gt;predict_proba&lt;/code&gt; &lt;/a&gt; (X [, check_input])</target>
        </trans-unit>
        <trans-unit id="54a60fbc6050f842fbad040dc0b7aa5dbec0fdf9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.score&quot;&gt; &lt;code&gt;score&lt;/code&gt; &lt;/a&gt; (X, y [, sample_weight])</target>
        </trans-unit>
        <trans-unit id="2a7ab526fbe96bb45d2404082a436d3ae705798f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeClassifier.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="9e2c5f4b34bbb361501f217d7e2b203ea962daa7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.apply&quot;&gt;&lt;code&gt;apply&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.apply&quot;&gt; &lt;code&gt;apply&lt;/code&gt; &lt;/a&gt; (X [, check_input])</target>
        </trans-unit>
        <trans-unit id="cae3466d1b726fe655b7d74e50790974fc666679" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.cost_complexity_pruning_path&quot;&gt;&lt;code&gt;cost_complexity_pruning_path&lt;/code&gt;&lt;/a&gt;(X, y[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4225c1c44eee7c5ec47865cb59c23a54cf828b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.decision_path&quot;&gt;&lt;code&gt;decision_path&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.decision_path&quot;&gt; &lt;code&gt;decision_path&lt;/code&gt; &lt;/a&gt; (X [, check_input])</target>
        </trans-unit>
        <trans-unit id="daaa1401fc2e0e66ce34d9f12d8e7587874d83a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight, check_input, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X, y [, sample_weight, check_input,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="015305992aff1a0cb9ae7d9d03b688d425f0d07a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.get_depth&quot;&gt;&lt;code&gt;get_depth&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.get_depth&quot;&gt;&lt;code&gt;get_depth&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="9416b5186c87d54930384d8b4ee012f2f3fc4ecd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.get_n_leaves&quot;&gt;&lt;code&gt;get_n_leaves&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.get_n_leaves&quot;&gt;&lt;code&gt;get_n_leaves&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="726ba138eade24bae52f40bd26c71a25cdcaf83c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="994401ea46be57764b391b5b200ce9aed24caad2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.predict&quot;&gt; &lt;code&gt;predict&lt;/code&gt; &lt;/a&gt; (X [, check_input])</target>
        </trans-unit>
        <trans-unit id="65ff3b6ef210d4386ebb678005b2c672ac77d158" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.score&quot;&gt; &lt;code&gt;score&lt;/code&gt; &lt;/a&gt; (X, y [, sample_weight])</target>
        </trans-unit>
        <trans-unit id="a692ec644f74731db0443680d6e308ecc5a17044" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.DecisionTreeRegressor.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="bc62892f63d3a9cbab55981bbdc3efc558e37080" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.apply&quot;&gt;&lt;code&gt;apply&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.apply&quot;&gt; &lt;code&gt;apply&lt;/code&gt; &lt;/a&gt; (X [, check_input])</target>
        </trans-unit>
        <trans-unit id="6c564a6d1dd91607086781df86c7ddff8ef369e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.cost_complexity_pruning_path&quot;&gt;&lt;code&gt;cost_complexity_pruning_path&lt;/code&gt;&lt;/a&gt;(X, y[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d85ef496dc313b339fce98d49f0305055ad0fd99" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.decision_path&quot;&gt;&lt;code&gt;decision_path&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.decision_path&quot;&gt; &lt;code&gt;decision_path&lt;/code&gt; &lt;/a&gt; (X [, check_input])</target>
        </trans-unit>
        <trans-unit id="9290fa2e32c23849f534c4ec0b5688941351086b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight, check_input, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X, y [, sample_weight, check_input,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="7b68f057bbc95dc31ade10259d024a333b3a78a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.get_depth&quot;&gt;&lt;code&gt;get_depth&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.get_depth&quot;&gt;&lt;code&gt;get_depth&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="6e146ef604896aed29c88953a6ac934d1e9671d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.get_n_leaves&quot;&gt;&lt;code&gt;get_n_leaves&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.get_n_leaves&quot;&gt;&lt;code&gt;get_n_leaves&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="5a3ba55c4a55c3a86eb7527c695a560a010f2373" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="53913e1f39f53e714a3708c51f62056b1ecc0bf1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.predict&quot;&gt; &lt;code&gt;predict&lt;/code&gt; &lt;/a&gt; (X [, check_input])</target>
        </trans-unit>
        <trans-unit id="acbcfacac9580441f26e89b35ac1cd23803dc8e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.predict_log_proba&quot;&gt;&lt;code&gt;predict_log_proba&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.predict_log_proba&quot;&gt;&lt;code&gt;predict_log_proba&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="c5b625412cbe0e89bee6cf9f9d94da1f5acd8047" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.predict_proba&quot;&gt;&lt;code&gt;predict_proba&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.predict_proba&quot;&gt; &lt;code&gt;predict_proba&lt;/code&gt; &lt;/a&gt; (X [, check_input])</target>
        </trans-unit>
        <trans-unit id="58dee26c978e1620cbc0071b61c255257578e4ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.score&quot;&gt; &lt;code&gt;score&lt;/code&gt; &lt;/a&gt; (X, y [, sample_weight])</target>
        </trans-unit>
        <trans-unit id="942b9df16d517dfd8358deb8993ee47a76b81399" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeClassifier.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="0ea74c7de7f40ccb999bccbfc3c79a1b586190ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.apply&quot;&gt;&lt;code&gt;apply&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.apply&quot;&gt; &lt;code&gt;apply&lt;/code&gt; &lt;/a&gt; (X [, check_input])</target>
        </trans-unit>
        <trans-unit id="d698457c59aaf70fe5bc70d7422fa7875846b1e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.cost_complexity_pruning_path&quot;&gt;&lt;code&gt;cost_complexity_pruning_path&lt;/code&gt;&lt;/a&gt;(X, y[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5276183000dfbeb8a0a1913411460b0658af23de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.decision_path&quot;&gt;&lt;code&gt;decision_path&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.decision_path&quot;&gt; &lt;code&gt;decision_path&lt;/code&gt; &lt;/a&gt; (X [, check_input])</target>
        </trans-unit>
        <trans-unit id="0403cb18bc343bdfe95195e33961272fe68c1f19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.fit&quot;&gt;&lt;code&gt;fit&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight, check_input, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.fit&quot;&gt; &lt;code&gt;fit&lt;/code&gt; &lt;/a&gt; (X, y [, sample_weight, check_input,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="9e62edb59cb7f4ac79991f7c7259426f0a91ef56" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.get_depth&quot;&gt;&lt;code&gt;get_depth&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.get_depth&quot;&gt;&lt;code&gt;get_depth&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="94926e11f0a3ec9841c6edecd328eedabfb5dc56" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.get_n_leaves&quot;&gt;&lt;code&gt;get_n_leaves&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.get_n_leaves&quot;&gt;&lt;code&gt;get_n_leaves&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="8bd34d709cdb5aa4be85df11d9f9d82d5178f6b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.get_params&quot;&gt;&lt;code&gt;get_params&lt;/code&gt;&lt;/a&gt;([deep])</target>
        </trans-unit>
        <trans-unit id="0fddad60c342e7f6a0f90f2c41daa0945b17a29f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.predict&quot;&gt;&lt;code&gt;predict&lt;/code&gt;&lt;/a&gt;(X[, check_input])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.predict&quot;&gt; &lt;code&gt;predict&lt;/code&gt; &lt;/a&gt; (X [, check_input])</target>
        </trans-unit>
        <trans-unit id="1b46387aad6f982edd01a938124694a46881926d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.score&quot;&gt;&lt;code&gt;score&lt;/code&gt;&lt;/a&gt;(X, y[, sample_weight])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.score&quot;&gt; &lt;code&gt;score&lt;/code&gt; &lt;/a&gt; (X, y [, sample_weight])</target>
        </trans-unit>
        <trans-unit id="503054553a0d98904bea6720dd7ce9a2736cf2ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.tree.ExtraTreeRegressor.set_params&quot;&gt;&lt;code&gt;set_params&lt;/code&gt;&lt;/a&gt;(**params)</target>
        </trans-unit>
        <trans-unit id="c4d7f6d8e4fd6d09c383dc403bef887d28ff6577" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.utils.Memory.cache&quot;&gt;&lt;code&gt;cache&lt;/code&gt;&lt;/a&gt;([func, ignore, verbose, mmap_mode])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.utils.Memory.cache&quot;&gt; &lt;code&gt;cache&lt;/code&gt; &lt;/a&gt; ([func, ignore, verbose, mmap_mode])</target>
        </trans-unit>
        <trans-unit id="cbbd7395cfc079348c53ce24ecd5e92d5e1296ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.utils.Memory.clear&quot;&gt;&lt;code&gt;clear&lt;/code&gt;&lt;/a&gt;([warn])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.utils.Memory.clear&quot;&gt;&lt;code&gt;clear&lt;/code&gt;&lt;/a&gt;([warn])</target>
        </trans-unit>
        <trans-unit id="ee2b56aa3149f9e490e87ec82fec987be906a94e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.utils.Memory.eval&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt;(func, *args, **kwargs)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.utils.Memory.eval&quot;&gt; &lt;code&gt;eval&lt;/code&gt; &lt;/a&gt; (func, * args, ** kwargs)</target>
        </trans-unit>
        <trans-unit id="4200f25f6c85752e9e9dc85b9d3088f61f23a1a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.utils.Memory.format&quot;&gt;&lt;code&gt;format&lt;/code&gt;&lt;/a&gt;(obj[, indent])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.utils.Memory.format&quot;&gt; &lt;code&gt;format&lt;/code&gt; o&lt;/a&gt; (obj [, sangr&amp;iacute;a])</target>
        </trans-unit>
        <trans-unit id="9204d645d24081482d782f3bda1ae0c019af6dea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.utils.Memory.reduce_size&quot;&gt;&lt;code&gt;reduce_size&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.utils.Memory.reduce_size&quot;&gt;&lt;code&gt;reduce_size&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="fe97bdff76c4d8fc616e3cba00f74a8b16ec1c0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.utils.Parallel.dispatch_next&quot;&gt;&lt;code&gt;dispatch_next&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.utils.Parallel.dispatch_next&quot;&gt;&lt;code&gt;dispatch_next&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="e991b0616acafb2e9785c560e9c169a297b3dc13" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.utils.Parallel.dispatch_one_batch&quot;&gt;&lt;code&gt;dispatch_one_batch&lt;/code&gt;&lt;/a&gt;(iterator)</source>
          <target state="translated">&lt;a href=&quot;#sklearn.utils.Parallel.dispatch_one_batch&quot;&gt;&lt;code&gt;dispatch_one_batch&lt;/code&gt;&lt;/a&gt;(iterator)</target>
        </trans-unit>
        <trans-unit id="7a08d57eec9640a4518b2da114890ac2613c1d02" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.utils.Parallel.format&quot;&gt;&lt;code&gt;format&lt;/code&gt;&lt;/a&gt;(obj[, indent])</source>
          <target state="translated">&lt;a href=&quot;#sklearn.utils.Parallel.format&quot;&gt; &lt;code&gt;format&lt;/code&gt; o&lt;/a&gt; (obj [, sangr&amp;iacute;a])</target>
        </trans-unit>
        <trans-unit id="14196be009f261fb0694105a239ea5c1e25f9541" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sklearn.utils.Parallel.print_progress&quot;&gt;&lt;code&gt;print_progress&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;#sklearn.utils.Parallel.print_progress&quot;&gt;&lt;code&gt;print_progress&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="efbac796a7dfcdcf4e39203b4b0ec0407858b0db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#theil-sen-regression&quot;&gt;Theil Sen&lt;/a&gt; will cope better with medium-size outliers in the X direction, but this property will disappear in high-dimensional settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e53d9a60ee634f44f24c91f040ecc7bf285bdd4b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#theil-sen-regression&quot;&gt;Theil Sen&lt;/a&gt; will cope better with medium-size outliers in the X direction, but this property will disappear in large dimensional settings.</source>
          <target state="translated">&lt;a href=&quot;#theil-sen-regression&quot;&gt;Theil Sen se&lt;/a&gt; adaptar&amp;aacute; mejor a los valores at&amp;iacute;picos de tama&amp;ntilde;o mediano en la direcci&amp;oacute;n X, pero esta propiedad desaparecer&amp;aacute; en configuraciones dimensionales grandes.</target>
        </trans-unit>
        <trans-unit id="3340fb133daee19051282b36c1f0a858717abb3c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/decomposition#ica&quot;&gt;Independent component analysis (ICA)&lt;/a&gt; is used to estimate sources given noisy measurements. Imagine 3 instruments playing simultaneously and 3 microphones recording the mixed signals. ICA is used to recover the sources ie. what is played by each instrument. Importantly, PCA fails at recovering our &lt;code&gt;instruments&lt;/code&gt; since the related signals reflect non-Gaussian processes.</source>
          <target state="translated">&lt;a href=&quot;../../modules/decomposition#ica&quot;&gt;El an&amp;aacute;lisis de componentes independientes (ICA)&lt;/a&gt; se utiliza para estimar fuentes dadas mediciones ruidosas. Imag&amp;iacute;nese 3 instrumentos tocando simult&amp;aacute;neamente y 3 micr&amp;oacute;fonos grabando las se&amp;ntilde;ales mezcladas. ICA se utiliza para recuperar las fuentes, es decir. lo que toca cada instrumento. Es importante destacar que PCA falla en la recuperaci&amp;oacute;n de nuestros &lt;code&gt;instruments&lt;/code&gt; ya que las se&amp;ntilde;ales relacionadas reflejan procesos no gaussianos.</target>
        </trans-unit>
        <trans-unit id="0708446c01fcb547575dcd7398ebcb58d4d37ba0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/decomposition#ica&quot;&gt;Independent component analysis (ICA)&lt;/a&gt; selects components so that the distribution of their loadings carries a maximum amount of independent information. It is able to recover &lt;strong&gt;non-Gaussian&lt;/strong&gt; independent signals:</source>
          <target state="translated">&lt;a href=&quot;../../modules/decomposition#ica&quot;&gt;El an&amp;aacute;lisis de componentes independientes (ICA)&lt;/a&gt; selecciona componentes de modo que la distribuci&amp;oacute;n de sus cargas lleve una cantidad m&amp;aacute;xima de informaci&amp;oacute;n independiente. Es capaz de recuperar se&amp;ntilde;ales independientes &lt;strong&gt;no gaussianas&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="fa776087f556995b19edda096679fcd47ef04b0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/decomposition#ica&quot;&gt;Independent component analysis (ICA)&lt;/a&gt; vs &lt;a href=&quot;../../modules/decomposition#pca&quot;&gt;Principal component analysis (PCA)&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../modules/decomposition#ica&quot;&gt;An&amp;aacute;lisis de componentes independientes (ICA)&lt;/a&gt; vs &lt;a href=&quot;../../modules/decomposition#pca&quot;&gt;An&amp;aacute;lisis de componentes principales (PCA)&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cd02fba92261a4ec4d08b1b50b404c531a7c1f47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/decomposition#pca&quot;&gt;Principal component analysis (PCA)&lt;/a&gt; selects the successive components that explain the maximum variance in the signal.</source>
          <target state="translated">&lt;a href=&quot;../../modules/decomposition#pca&quot;&gt;El an&amp;aacute;lisis de componentes principales (PCA)&lt;/a&gt; selecciona los componentes sucesivos que explican la varianza m&amp;aacute;xima en la se&amp;ntilde;al.</target>
        </trans-unit>
        <trans-unit id="d7f501499f1936dae93ae4ac62ebe67d6a57ad02" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.covariance.ellipticenvelope#sklearn.covariance.EllipticEnvelope&quot;&gt;&lt;code&gt;sklearn.covariance.EllipticEnvelope&lt;/code&gt;&lt;/a&gt; assumes the data is Gaussian and learns an ellipse. It thus degrades when the data is not unimodal. Notice however that this estimator is robust to outliers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4730bc05d3c9f086749243493d2ff0d276711b93" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.datasets.fetch_openml#sklearn.datasets.fetch_openml&quot;&gt;&lt;code&gt;datasets.fetch_openml&lt;/code&gt;&lt;/a&gt; can now return pandas dataframe and thus properly handle datasets with heterogeneous data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca98af23d8a75a7dd4adbb8a1f3b9d144c3be240" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.ensemble.extratreesregressor#sklearn.ensemble.ExtraTreesRegressor&quot;&gt;&lt;code&gt;ExtraTreesRegressor&lt;/code&gt;&lt;/a&gt;: similar to missForest in R</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f7e50f6ad5f9bbca754077c6eacb425a09171b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.ensemble.isolationforest#sklearn.ensemble.IsolationForest&quot;&gt;&lt;code&gt;sklearn.ensemble.IsolationForest&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../modules/generated/sklearn.neighbors.localoutlierfactor#sklearn.neighbors.LocalOutlierFactor&quot;&gt;&lt;code&gt;sklearn.neighbors.LocalOutlierFactor&lt;/code&gt;&lt;/a&gt; seem to perform reasonably well for multi-modal data sets. The advantage of &lt;a href=&quot;../../modules/generated/sklearn.neighbors.localoutlierfactor#sklearn.neighbors.LocalOutlierFactor&quot;&gt;&lt;code&gt;sklearn.neighbors.LocalOutlierFactor&lt;/code&gt;&lt;/a&gt; over the other estimators is shown for the third data set, where the two modes have different densities. This advantage is explained by the local aspect of LOF, meaning that it only compares the score of abnormality of one sample with the scores of its neighbors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d887f29989bb29986e4da8b13c12b4284aa021d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.ensemble.stackingclassifier#sklearn.ensemble.StackingClassifier&quot;&gt;&lt;code&gt;StackingClassifier&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../modules/generated/sklearn.ensemble.stackingregressor#sklearn.ensemble.StackingRegressor&quot;&gt;&lt;code&gt;StackingRegressor&lt;/code&gt;&lt;/a&gt; allow you to have a stack of estimators with a final classifier or a regressor. Stacked generalization consists in stacking the output of individual estimators and use a classifier to compute the final prediction. Stacking allows to use the strength of each individual estimator by using their output as input of a final estimator. Base estimators are fitted on the full &lt;code&gt;X&lt;/code&gt; while the final estimator is trained using cross-validated predictions of the base estimators using &lt;code&gt;cross_val_predict&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8317624f45daa48dc8976e54f831ebcd9e88097c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.feature_extraction.text.countvectorizer#sklearn.feature_extraction.text.CountVectorizer&quot;&gt;&lt;code&gt;CountVectorizer&lt;/code&gt;&lt;/a&gt; supports counts of N-grams of words or consecutive characters. Once fitted, the vectorizer has built a dictionary of feature indices:</source>
          <target state="translated">&lt;a href=&quot;../../modules/generated/sklearn.feature_extraction.text.countvectorizer#sklearn.feature_extraction.text.CountVectorizer&quot;&gt; &lt;code&gt;CountVectorizer&lt;/code&gt; &lt;/a&gt; admite recuentos de N-gramos de palabras o caracteres consecutivos. Una vez instalado, el vectorizador ha creado un diccionario de &amp;iacute;ndices de caracter&amp;iacute;sticas:</target>
        </trans-unit>
        <trans-unit id="4e5fa7f6b9603e9e1ecc86e0bd2fcc6dc25f3a92" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.impute.knnimputer#sklearn.impute.KNNImputer&quot;&gt;&lt;code&gt;sklearn.impute.KNNImputer&lt;/code&gt;&lt;/a&gt; imputes missing values using the weighted or unweighted mean of the desired number of nearest neighbors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4391dae85624809d4343a259eca9e8710ff39137" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.linear_model.bayesianridge#sklearn.linear_model.BayesianRidge&quot;&gt;&lt;code&gt;BayesianRidge&lt;/code&gt;&lt;/a&gt;: regularized linear regression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e852e16a1ccbd8d83717ebb95990fe61614c1a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.linear_model.linearregression#sklearn.linear_model.LinearRegression&quot;&gt;&lt;code&gt;LinearRegression&lt;/code&gt;&lt;/a&gt;, in its simplest form, fits a linear model to the data set by adjusting a set of parameters in order to make the sum of the squared residuals of the model as small as possible.</source>
          <target state="translated">&lt;a href=&quot;../../modules/generated/sklearn.linear_model.linearregression#sklearn.linear_model.LinearRegression&quot;&gt; &lt;code&gt;LinearRegression&lt;/code&gt; &lt;/a&gt; , en su forma m&amp;aacute;s simple, ajusta un modelo lineal al conjunto de datos ajustando un conjunto de par&amp;aacute;metros para hacer que la suma de los residuales cuadrados del modelo sea lo m&amp;aacute;s peque&amp;ntilde;a posible.</target>
        </trans-unit>
        <trans-unit id="974a26689b53da1460a8a54c4a626c31f6297fe8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.linear_model.ridge#sklearn.linear_model.Ridge&quot;&gt;&lt;code&gt;Ridge&lt;/code&gt;&lt;/a&gt; Regression is the estimator used in this example. Each color in the left plot represents one different dimension of the coefficient vector, and this is displayed as a function of the regularization parameter. The right plot shows how exact the solution is. This example illustrates how a well defined solution is found by Ridge regression and how regularization affects the coefficients and their values. The plot on the right shows how the difference of the coefficients from the estimator changes as a function of regularization.</source>
          <target state="translated">&lt;a href=&quot;../../modules/generated/sklearn.linear_model.ridge#sklearn.linear_model.Ridge&quot;&gt; &lt;code&gt;Ridge&lt;/code&gt; &lt;/a&gt; Regression es el estimador utilizado en este ejemplo. Cada color en el gr&amp;aacute;fico de la izquierda representa una dimensi&amp;oacute;n diferente del vector de coeficientes, y esto se muestra como una funci&amp;oacute;n del par&amp;aacute;metro de regularizaci&amp;oacute;n. La gr&amp;aacute;fica de la derecha muestra qu&amp;eacute; tan exacta es la soluci&amp;oacute;n. Este ejemplo ilustra c&amp;oacute;mo la regresi&amp;oacute;n de Ridge encuentra una soluci&amp;oacute;n bien definida y c&amp;oacute;mo la regularizaci&amp;oacute;n afecta los coeficientes y sus valores. El gr&amp;aacute;fico de la derecha muestra c&amp;oacute;mo cambia la diferencia de los coeficientes del estimador en funci&amp;oacute;n de la regularizaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="f3b32fb083b81b2c513e3262fcd261d2509046ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.linear_model.ridge#sklearn.linear_model.Ridge&quot;&gt;&lt;code&gt;Ridge&lt;/code&gt;&lt;/a&gt; Regression is the estimator used in this example. Each color represents a different feature of the coefficient vector, and this is displayed as a function of the regularization parameter.</source>
          <target state="translated">&lt;a href=&quot;../../modules/generated/sklearn.linear_model.ridge#sklearn.linear_model.Ridge&quot;&gt; &lt;code&gt;Ridge&lt;/code&gt; &lt;/a&gt; Regression es el estimador utilizado en este ejemplo. Cada color representa una caracter&amp;iacute;stica diferente del vector de coeficientes, y esto se muestra en funci&amp;oacute;n del par&amp;aacute;metro de regularizaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="86565b85cea78fabec1bdc1da398314ff9e806d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.metrics.recall_score#sklearn.metrics.recall_score&quot;&gt;&lt;code&gt;sklearn.metrics.recall_score&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../modules/generated/sklearn.metrics.precision_score#sklearn.metrics.precision_score&quot;&gt;&lt;code&gt;sklearn.metrics.precision_score&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../modules/generated/sklearn.metrics.f1_score#sklearn.metrics.f1_score&quot;&gt;&lt;code&gt;sklearn.metrics.f1_score&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../../modules/generated/sklearn.metrics.recall_score#sklearn.metrics.recall_score&quot;&gt; &lt;code&gt;sklearn.metrics.recall_score&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;../../modules/generated/sklearn.metrics.precision_score#sklearn.metrics.precision_score&quot;&gt; &lt;code&gt;sklearn.metrics.precision_score&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;../../modules/generated/sklearn.metrics.f1_score#sklearn.metrics.f1_score&quot;&gt; &lt;code&gt;sklearn.metrics.f1_score&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b95d51f197cf77b6057df64318579bf546efd8bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.model_selection.cross_val_score#sklearn.model_selection.cross_val_score&quot;&gt;&lt;code&gt;sklearn.model_selection.cross_val_score&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;plot_roc#sphx-glr-auto-examples-model-selection-plot-roc-py&quot;&gt;Receiver Operating Characteristic (ROC)&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;../../modules/generated/sklearn.model_selection.cross_val_score#sklearn.model_selection.cross_val_score&quot;&gt; &lt;code&gt;sklearn.model_selection.cross_val_score&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;plot_roc#sphx-glr-auto-examples-model-selection-plot-roc-py&quot;&gt; Caracter&amp;iacute;stica de funcionamiento del receptor (ROC)&lt;/a&gt; ,</target>
        </trans-unit>
        <trans-unit id="3e2c4debd0c4978fc861a1a6759a1616605e4e05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.model_selection.groupkfold#sklearn.model_selection.GroupKFold&quot;&gt;&lt;code&gt;GroupKFold&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;(n_splits)&lt;/strong&gt;</source>
          <target state="translated">&lt;a href=&quot;../../modules/generated/sklearn.model_selection.groupkfold#sklearn.model_selection.GroupKFold&quot;&gt;&lt;code&gt;GroupKFold&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;(n_splits)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="323feb1523ae1df1e016eeec55adcac04a022e47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.model_selection.kfold#sklearn.model_selection.KFold&quot;&gt;&lt;code&gt;KFold&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;(n_splits, shuffle, random_state)&lt;/strong&gt;</source>
          <target state="translated">&lt;a href=&quot;../../modules/generated/sklearn.model_selection.kfold#sklearn.model_selection.KFold&quot;&gt; &lt;code&gt;KFold&lt;/code&gt; &lt;/a&gt;&lt;strong&gt; (n_splits, shuffle, random_state)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cf4fe73455f55b43f06ccab5ce9ff9f9742c6c50" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.model_selection.leaveonegroupout#sklearn.model_selection.LeaveOneGroupOut&quot;&gt;&lt;code&gt;LeaveOneGroupOut&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;()&lt;/strong&gt;</source>
          <target state="translated">&lt;a href=&quot;../../modules/generated/sklearn.model_selection.leaveonegroupout#sklearn.model_selection.LeaveOneGroupOut&quot;&gt;&lt;code&gt;LeaveOneGroupOut&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="483966b47af4dc78f56585b22f105868bda6e1dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.model_selection.leaveoneout#sklearn.model_selection.LeaveOneOut&quot;&gt;&lt;code&gt;LeaveOneOut&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;()&lt;/strong&gt;</source>
          <target state="translated">&lt;a href=&quot;../../modules/generated/sklearn.model_selection.leaveoneout#sklearn.model_selection.LeaveOneOut&quot;&gt;&lt;code&gt;LeaveOneOut&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;()&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0c5108a0ab0ac6bb52d13f14638b80e9a47e6fbb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.model_selection.leavepgroupsout#sklearn.model_selection.LeavePGroupsOut&quot;&gt;&lt;code&gt;LeavePGroupsOut&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;(n_groups)&lt;/strong&gt;</source>
          <target state="translated">&lt;a href=&quot;../../modules/generated/sklearn.model_selection.leavepgroupsout#sklearn.model_selection.LeavePGroupsOut&quot;&gt;&lt;code&gt;LeavePGroupsOut&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;(n_groups)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fae688046b40a14ef3430a3a2ff7ff60db4a5700" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.model_selection.leavepout#sklearn.model_selection.LeavePOut&quot;&gt;&lt;code&gt;LeavePOut&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;(p)&lt;/strong&gt;</source>
          <target state="translated">&lt;a href=&quot;../../modules/generated/sklearn.model_selection.leavepout#sklearn.model_selection.LeavePOut&quot;&gt;&lt;code&gt;LeavePOut&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;(p)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5b8bfb8e37d851e685fd8d627401ccb896f62727" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.model_selection.shufflesplit#sklearn.model_selection.ShuffleSplit&quot;&gt;&lt;code&gt;ShuffleSplit&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;(n_splits, test_size, train_size, random_state)&lt;/strong&gt;</source>
          <target state="translated">&lt;a href=&quot;../../modules/generated/sklearn.model_selection.shufflesplit#sklearn.model_selection.ShuffleSplit&quot;&gt; &lt;code&gt;ShuffleSplit&lt;/code&gt; &lt;/a&gt;&lt;strong&gt; (n_splits, test_size, train_size, random_state)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ef50307796f865a5db34c276ace8fe440647a050" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.model_selection.stratifiedkfold#sklearn.model_selection.StratifiedKFold&quot;&gt;&lt;code&gt;StratifiedKFold&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;(n_splits, shuffle, random_state)&lt;/strong&gt;</source>
          <target state="translated">&lt;a href=&quot;../../modules/generated/sklearn.model_selection.stratifiedkfold#sklearn.model_selection.StratifiedKFold&quot;&gt; &lt;code&gt;StratifiedKFold&lt;/code&gt; &lt;/a&gt;&lt;strong&gt; (n_splits, shuffle, random_state)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="67e6e8b674d048bbee7778cf2f258bc94106b9d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.neighbors.kneighborsregressor#sklearn.neighbors.KNeighborsRegressor&quot;&gt;&lt;code&gt;KNeighborsRegressor&lt;/code&gt;&lt;/a&gt;: comparable to other KNN imputation approaches</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce6ec2b7a21b7d9419d34f1a252d70eac98464a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/generated/sklearn.tree.decisiontreeregressor#sklearn.tree.DecisionTreeRegressor&quot;&gt;&lt;code&gt;DecisionTreeRegressor&lt;/code&gt;&lt;/a&gt;: non-linear regression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ed77fdfe478e82b6cafa0a5b918124d75b04f07" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/svm#svm&quot;&gt;Support Vector Machines&lt;/a&gt; belong to the discriminant model family: they try to find a combination of samples to build a plane maximizing the margin between the two classes. Regularization is set by the &lt;code&gt;C&lt;/code&gt; parameter: a small value for &lt;code&gt;C&lt;/code&gt; means the margin is calculated using many or all of the observations around the separating line (more regularization); a large value for &lt;code&gt;C&lt;/code&gt; means the margin is calculated on observations close to the separating line (less regularization).</source>
          <target state="translated">&lt;a href=&quot;../../modules/svm#svm&quot;&gt;Las m&amp;aacute;quinas de vectores de soporte&lt;/a&gt; pertenecen a la familia de modelos discriminantes: intentan encontrar una combinaci&amp;oacute;n de muestras para construir un plano maximizando el margen entre las dos clases. La regularizaci&amp;oacute;n se establece mediante el par&amp;aacute;metro &lt;code&gt;C&lt;/code&gt; : un valor peque&amp;ntilde;o para &lt;code&gt;C&lt;/code&gt; significa que el margen se calcula utilizando muchas o todas las observaciones alrededor de la l&amp;iacute;nea de separaci&amp;oacute;n (m&amp;aacute;s regularizaci&amp;oacute;n); un valor alto para &lt;code&gt;C&lt;/code&gt; significa que el margen se calcula en observaciones cercanas a la l&amp;iacute;nea de separaci&amp;oacute;n (menos regularizaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="252f42d4bf84393b3820af54e64cc21760a047ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../modules/svm#svm-outlier-detection&quot;&gt;One-class SVM&lt;/a&gt; is an unsupervised algorithm that learns a decision function for novelty detection: classifying new data as similar or different to the training set.</source>
          <target state="translated">&lt;a href=&quot;../../modules/svm#svm-outlier-detection&quot;&gt;La SVM de&lt;/a&gt; una clase es un algoritmo no supervisado que aprende una funci&amp;oacute;n de decisi&amp;oacute;n para la detecci&amp;oacute;n de novedades: clasificar nuevos datos como similares o diferentes al conjunto de entrenamiento.</target>
        </trans-unit>
        <trans-unit id="25cd5e36e35dabd3e6c256da0163359e2df881fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/applications/plot_stock_market#sphx-glr-auto-examples-applications-plot-stock-market-py&quot;&gt;Visualizing the stock market structure&lt;/a&gt; Affinity Propagation on Financial time series to find groups of companies</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/applications/plot_stock_market#sphx-glr-auto-examples-applications-plot-stock-market-py&quot;&gt;Visualizaci&amp;oacute;n de la estructura del mercado de valores&lt;/a&gt; Propagaci&amp;oacute;n de afinidad en series de tiempo financieras para encontrar grupos de empresas</target>
        </trans-unit>
        <trans-unit id="44be4400f60fc1f65ab4483f89053dc62ec071a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/applications/plot_stock_market#sphx-glr-auto-examples-applications-plot-stock-market-py&quot;&gt;Visualizing the stock market structure&lt;/a&gt;: example on real stock market data, finding which symbols are most linked.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/applications/plot_stock_market#sphx-glr-auto-examples-applications-plot-stock-market-py&quot;&gt;Visualizaci&amp;oacute;n de la estructura del mercado de valores&lt;/a&gt; : ejemplo sobre datos reales del mercado de valores, encontrar qu&amp;eacute; s&amp;iacute;mbolos est&amp;aacute;n m&amp;aacute;s vinculados.</target>
        </trans-unit>
        <trans-unit id="32d50677ba87f9c5d1eeb5008ccb348937924acc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/bicluster/plot_bicluster_newsgroups#sphx-glr-auto-examples-bicluster-plot-bicluster-newsgroups-py&quot;&gt;Biclustering documents with the Spectral Co-clustering algorithm&lt;/a&gt;: An example of finding biclusters in the twenty newsgroup dataset.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/bicluster/plot_bicluster_newsgroups#sphx-glr-auto-examples-bicluster-plot-bicluster-newsgroups-py&quot;&gt;Agrupaci&amp;oacute;n de documentos con el algoritmo de agrupaci&amp;oacute;n conjunta espectral&lt;/a&gt; : un ejemplo de c&amp;oacute;mo encontrar agrupaciones en el conjunto de datos de veinte grupos de noticias.</target>
        </trans-unit>
        <trans-unit id="792fd3934b8e5069f477376df1827207e7123ecc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/bicluster/plot_spectral_biclustering#sphx-glr-auto-examples-bicluster-plot-spectral-biclustering-py&quot;&gt;A demo of the Spectral Biclustering algorithm&lt;/a&gt;: a simple example showing how to generate a checkerboard matrix and bicluster it.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/bicluster/plot_spectral_biclustering#sphx-glr-auto-examples-bicluster-plot-spectral-biclustering-py&quot;&gt;Una demostraci&amp;oacute;n del algoritmo Spectral Biclustering&lt;/a&gt; : un ejemplo simple que muestra c&amp;oacute;mo generar una matriz de tablero de ajedrez y biclustering.</target>
        </trans-unit>
        <trans-unit id="9ba1096ff77a2d8f57a5003afef74f494f2260b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/bicluster/plot_spectral_coclustering#sphx-glr-auto-examples-bicluster-plot-spectral-coclustering-py&quot;&gt;A demo of the Spectral Co-Clustering algorithm&lt;/a&gt;: A simple example showing how to generate a data matrix with biclusters and apply this method to it.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/bicluster/plot_spectral_coclustering#sphx-glr-auto-examples-bicluster-plot-spectral-coclustering-py&quot;&gt;Una demostraci&amp;oacute;n del algoritmo Spectral Co-Clustering&lt;/a&gt; : un ejemplo simple que muestra c&amp;oacute;mo generar una matriz de datos con biclusters y aplicarle este m&amp;eacute;todo.</target>
        </trans-unit>
        <trans-unit id="e3535c5f9f05109b9c009dc4764a0a905544f682" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/classification/plot_lda#sphx-glr-auto-examples-classification-plot-lda-py&quot;&gt;Normal and Shrinkage Linear Discriminant Analysis for classification&lt;/a&gt;: Comparison of LDA classifiers with and without shrinkage.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/classification/plot_lda#sphx-glr-auto-examples-classification-plot-lda-py&quot;&gt;An&amp;aacute;lisis discriminante lineal normal y de contracci&amp;oacute;n para clasificaci&amp;oacute;n&lt;/a&gt; : Comparaci&amp;oacute;n de clasificadores LDA con y sin contracci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="944af6fad4aaf9d9de737c634557a10c8e138043" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/classification/plot_lda_qda#sphx-glr-auto-examples-classification-plot-lda-qda-py&quot;&gt;Linear and Quadratic Discriminant Analysis with covariance ellipsoid&lt;/a&gt;: Comparison of LDA and QDA on synthetic data.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/classification/plot_lda_qda#sphx-glr-auto-examples-classification-plot-lda-qda-py&quot;&gt;An&amp;aacute;lisis discriminante lineal y cuadr&amp;aacute;tico con elipsoide de covarianza&lt;/a&gt; : Comparaci&amp;oacute;n de LDA y QDA en datos sint&amp;eacute;ticos.</target>
        </trans-unit>
        <trans-unit id="081608ed075d14d6a33b709aba2f5a0785ff23d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_adjusted_for_chance_measures#sphx-glr-auto-examples-cluster-plot-adjusted-for-chance-measures-py&quot;&gt;Adjustment for chance in clustering performance evaluation&lt;/a&gt;: Analysis of the impact of the dataset size on the value of clustering measures for random assignments.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/cluster/plot_adjusted_for_chance_measures#sphx-glr-auto-examples-cluster-plot-adjusted-for-chance-measures-py&quot;&gt;Ajuste por azar en la evaluaci&amp;oacute;n del desempe&amp;ntilde;o de agrupaciones&lt;/a&gt; : an&amp;aacute;lisis del impacto del tama&amp;ntilde;o del conjunto de datos sobre el valor de las medidas de agrupaci&amp;oacute;n para asignaciones aleatorias.</target>
        </trans-unit>
        <trans-unit id="187d34d01b9be9a8171ce6a04c4b08e3a21fad92" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_adjusted_for_chance_measures#sphx-glr-auto-examples-cluster-plot-adjusted-for-chance-measures-py&quot;&gt;Adjustment for chance in clustering performance evaluation&lt;/a&gt;: Analysis of the impact of the dataset size on the value of clustering measures for random assignments. This example also includes the Adjusted Rand Index.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/cluster/plot_adjusted_for_chance_measures#sphx-glr-auto-examples-cluster-plot-adjusted-for-chance-measures-py&quot;&gt;Ajuste por azar en la evaluaci&amp;oacute;n del desempe&amp;ntilde;o de agrupaciones&lt;/a&gt; : an&amp;aacute;lisis del impacto del tama&amp;ntilde;o del conjunto de datos sobre el valor de las medidas de agrupaci&amp;oacute;n para asignaciones aleatorias. Este ejemplo tambi&amp;eacute;n incluye el &amp;iacute;ndice rand ajustado.</target>
        </trans-unit>
        <trans-unit id="8b5a14259f767f9088d2f473a3e935f71b2c585b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_affinity_propagation#sphx-glr-auto-examples-cluster-plot-affinity-propagation-py&quot;&gt;Demo of affinity propagation clustering algorithm&lt;/a&gt;: Affinity Propagation on a synthetic 2D datasets with 3 classes.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/cluster/plot_affinity_propagation#sphx-glr-auto-examples-cluster-plot-affinity-propagation-py&quot;&gt;Demostraci&amp;oacute;n del algoritmo de agrupaci&amp;oacute;n en cl&amp;uacute;steres de propagaci&amp;oacute;n por afinidad&lt;/a&gt; : Propagaci&amp;oacute;n por afinidad en conjuntos de datos 2D sint&amp;eacute;ticos con 3 clases.</target>
        </trans-unit>
        <trans-unit id="b1cc1fa9681d9dc465e839d7ce2fdf4f7aa536c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_coin_segmentation#sphx-glr-auto-examples-cluster-plot-coin-segmentation-py&quot;&gt;Segmenting the picture of greek coins in regions&lt;/a&gt;: Spectral clustering to split the image of coins in regions.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/cluster/plot_coin_segmentation#sphx-glr-auto-examples-cluster-plot-coin-segmentation-py&quot;&gt;Segmentaci&amp;oacute;n de la imagen de las monedas griegas en regiones&lt;/a&gt; : agrupaci&amp;oacute;n espectral para dividir la imagen de las monedas en regiones.</target>
        </trans-unit>
        <trans-unit id="50b36597780e6856f756f89f0e2e7c12b24f8501" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_coin_ward_segmentation#sphx-glr-auto-examples-cluster-plot-coin-ward-segmentation-py&quot;&gt;A demo of structured Ward hierarchical clustering on an image of coins&lt;/a&gt;: Ward clustering to split the image of coins in regions.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/cluster/plot_coin_ward_segmentation#sphx-glr-auto-examples-cluster-plot-coin-ward-segmentation-py&quot;&gt;Una demostraci&amp;oacute;n de agrupaci&amp;oacute;n jer&amp;aacute;rquica de Ward estructurada en una imagen de monedas&lt;/a&gt; : agrupaci&amp;oacute;n de Ward para dividir la imagen de monedas en regiones.</target>
        </trans-unit>
        <trans-unit id="547c011992d38403733e67a473aac01c8d218fbd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_digits_linkage#sphx-glr-auto-examples-cluster-plot-digits-linkage-py&quot;&gt;Various Agglomerative Clustering on a 2D embedding of digits&lt;/a&gt;: exploration of the different linkage strategies in a real dataset.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/cluster/plot_digits_linkage#sphx-glr-auto-examples-cluster-plot-digits-linkage-py&quot;&gt;Varias agrupaciones aglomerativas en una incrustaci&amp;oacute;n 2D de d&amp;iacute;gitos&lt;/a&gt; : exploraci&amp;oacute;n de las diferentes estrategias de vinculaci&amp;oacute;n en un conjunto de datos real.</target>
        </trans-unit>
        <trans-unit id="bc829166f42f9046d69ee97ccbe1453b3f4d9ae7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_feature_agglomeration_vs_univariate_selection#sphx-glr-auto-examples-cluster-plot-feature-agglomeration-vs-univariate-selection-py&quot;&gt;Feature agglomeration vs. univariate selection&lt;/a&gt;: Example of dimensionality reduction with feature agglomeration based on Ward hierarchical clustering.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/cluster/plot_feature_agglomeration_vs_univariate_selection#sphx-glr-auto-examples-cluster-plot-feature-agglomeration-vs-univariate-selection-py&quot;&gt;Aglomeraci&amp;oacute;n de caracter&amp;iacute;sticas frente a selecci&amp;oacute;n univariante&lt;/a&gt; : ejemplo de reducci&amp;oacute;n de dimensionalidad con aglomeraci&amp;oacute;n de caracter&amp;iacute;sticas basada en la agrupaci&amp;oacute;n jer&amp;aacute;rquica de Ward.</target>
        </trans-unit>
        <trans-unit id="1d8c45713569a9a5c39b47cf456ff9315c76d077" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_kmeans_assumptions#sphx-glr-auto-examples-cluster-plot-kmeans-assumptions-py&quot;&gt;Demonstration of k-means assumptions&lt;/a&gt;: Demonstrating when k-means performs intuitively and when it does not</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/cluster/plot_kmeans_assumptions#sphx-glr-auto-examples-cluster-plot-kmeans-assumptions-py&quot;&gt;Demostraci&amp;oacute;n de los supuestos de k-medias&lt;/a&gt; : demostrar cu&amp;aacute;ndo funciona k-means intuitivamente y cu&amp;aacute;ndo no</target>
        </trans-unit>
        <trans-unit id="3413ae75ec878d880736f31cf45172c75d5ab0ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_kmeans_digits#sphx-glr-auto-examples-cluster-plot-kmeans-digits-py&quot;&gt;A demo of K-Means clustering on the handwritten digits data&lt;/a&gt;: Clustering handwritten digits</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/cluster/plot_kmeans_digits#sphx-glr-auto-examples-cluster-plot-kmeans-digits-py&quot;&gt;Una demostraci&amp;oacute;n de la agrupaci&amp;oacute;n de K-medias en los datos de d&amp;iacute;gitos escritos a mano&lt;/a&gt; : agrupaci&amp;oacute;n de d&amp;iacute;gitos escritos a mano</target>
        </trans-unit>
        <trans-unit id="ccbc313c20268b02fdb60070ca95d2837b7ccde3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_kmeans_silhouette_analysis#sphx-glr-auto-examples-cluster-plot-kmeans-silhouette-analysis-py&quot;&gt;Selecting the number of clusters with silhouette analysis on KMeans clustering&lt;/a&gt; : In this example the silhouette analysis is used to choose an optimal value for n_clusters.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/cluster/plot_kmeans_silhouette_analysis#sphx-glr-auto-examples-cluster-plot-kmeans-silhouette-analysis-py&quot;&gt;Selecci&amp;oacute;n del n&amp;uacute;mero de cl&amp;uacute;steres con an&amp;aacute;lisis de silueta en cl&amp;uacute;steres de KMeans&lt;/a&gt; : En este ejemplo, el an&amp;aacute;lisis de silueta se utiliza para elegir un valor &amp;oacute;ptimo para n_clusters.</target>
        </trans-unit>
        <trans-unit id="4f8e7ad0cce139cea7cc063b2e7ef9f98d5fdfae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_mean_shift#sphx-glr-auto-examples-cluster-plot-mean-shift-py&quot;&gt;A demo of the mean-shift clustering algorithm&lt;/a&gt;: Mean Shift clustering on a synthetic 2D datasets with 3 classes.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/cluster/plot_mean_shift#sphx-glr-auto-examples-cluster-plot-mean-shift-py&quot;&gt;Una demostraci&amp;oacute;n del algoritmo de agrupamiento de cambio&lt;/a&gt; medio: agrupamiento de cambio medio en un conjunto de datos sint&amp;eacute;ticos 2D con 3 clases.</target>
        </trans-unit>
        <trans-unit id="170e65f032a1dde17e643e1cb24d69b496f652f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_mini_batch_kmeans#sphx-glr-auto-examples-cluster-plot-mini-batch-kmeans-py&quot;&gt;Comparison of the K-Means and MiniBatchKMeans clustering algorithms&lt;/a&gt;: Comparison of KMeans and MiniBatchKMeans</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/cluster/plot_mini_batch_kmeans#sphx-glr-auto-examples-cluster-plot-mini-batch-kmeans-py&quot;&gt;Comparaci&amp;oacute;n de los algoritmos de agrupaci&amp;oacute;n de K-Means y MiniBatchKMeans&lt;/a&gt; : Comparaci&amp;oacute;n de KMeans y MiniBatchKMeans</target>
        </trans-unit>
        <trans-unit id="71d42636674d5e7be533c19086ea1b7e51f44271" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_segmentation_toy#sphx-glr-auto-examples-cluster-plot-segmentation-toy-py&quot;&gt;Spectral clustering for image segmentation&lt;/a&gt;: Segmenting objects from a noisy background using spectral clustering.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/cluster/plot_segmentation_toy#sphx-glr-auto-examples-cluster-plot-segmentation-toy-py&quot;&gt;Agrupaci&amp;oacute;n espectral para la segmentaci&amp;oacute;n de im&amp;aacute;genes&lt;/a&gt; : segmentaci&amp;oacute;n de objetos de un fondo ruidoso mediante agrupaci&amp;oacute;n espectral.</target>
        </trans-unit>
        <trans-unit id="8622c246137caca261a8f8dab784e4834be626dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/cluster/plot_ward_structured_vs_unstructured#sphx-glr-auto-examples-cluster-plot-ward-structured-vs-unstructured-py&quot;&gt;Hierarchical clustering: structured vs unstructured ward&lt;/a&gt;: Example of Ward algorithm on a swiss-roll, comparison of structured approaches versus unstructured approaches.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/cluster/plot_ward_structured_vs_unstructured#sphx-glr-auto-examples-cluster-plot-ward-structured-vs-unstructured-py&quot;&gt;Agrupaci&amp;oacute;n jer&amp;aacute;rquica: sala estructurada versus no estructurada&lt;/a&gt; : Ejemplo de algoritmo de sala en un rollo suizo, comparaci&amp;oacute;n de enfoques estructurados versus enfoques no estructurados.</target>
        </trans-unit>
        <trans-unit id="a0f88a6fa73d890d432a6aa42399b9b09d116112" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/covariance/plot_sparse_cov#sphx-glr-auto-examples-covariance-plot-sparse-cov-py&quot;&gt;Sparse inverse covariance estimation&lt;/a&gt;: example on synthetic data showing some recovery of a structure, and comparing to other covariance estimators.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/covariance/plot_sparse_cov#sphx-glr-auto-examples-covariance-plot-sparse-cov-py&quot;&gt;Estimaci&amp;oacute;n de covarianza inversa dispersa&lt;/a&gt; : ejemplo de datos sint&amp;eacute;ticos que muestran cierta recuperaci&amp;oacute;n de una estructura y comparaci&amp;oacute;n con otros estimadores de covarianza.</target>
        </trans-unit>
        <trans-unit id="93b1310ce0bab5f07182a4fb1a5894503ca68b87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/decomposition/plot_pca_vs_lda#sphx-glr-auto-examples-decomposition-plot-pca-vs-lda-py&quot;&gt;Comparison of LDA and PCA 2D projection of Iris dataset&lt;/a&gt;: Comparison of LDA and PCA for dimensionality reduction of the Iris dataset</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/decomposition/plot_pca_vs_lda#sphx-glr-auto-examples-decomposition-plot-pca-vs-lda-py&quot;&gt;Comparaci&amp;oacute;n de la proyecci&amp;oacute;n 2D LDA y PCA del conjunto de datos Iris&lt;/a&gt; : Comparaci&amp;oacute;n de LDA y PCA para la reducci&amp;oacute;n de dimensionalidad del conjunto de datos Iris</target>
        </trans-unit>
        <trans-unit id="b0dd2f62cc3dfee226b121c6c421d1e26f52cda5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/ensemble/plot_adaboost_hastie_10_2#sphx-glr-auto-examples-ensemble-plot-adaboost-hastie-10-2-py&quot;&gt;Discrete versus Real AdaBoost&lt;/a&gt; compares the classification error of a decision stump, decision tree, and a boosted decision stump using AdaBoost-SAMME and AdaBoost-SAMME.R.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/ensemble/plot_adaboost_hastie_10_2#sphx-glr-auto-examples-ensemble-plot-adaboost-hastie-10-2-py&quot;&gt;Discreto versus Real AdaBoost&lt;/a&gt; compara el error de clasificaci&amp;oacute;n de un mu&amp;ntilde;&amp;oacute;n de decisi&amp;oacute;n, un &amp;aacute;rbol de decisi&amp;oacute;n y un mu&amp;ntilde;&amp;oacute;n de decisi&amp;oacute;n potenciado utilizando AdaBoost-SAMME y AdaBoost-SAMME.R.</target>
        </trans-unit>
        <trans-unit id="74a0d2bbda60559f425e07fcc7165a5bef04f382" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/ensemble/plot_adaboost_multiclass#sphx-glr-auto-examples-ensemble-plot-adaboost-multiclass-py&quot;&gt;Multi-class AdaBoosted Decision Trees&lt;/a&gt; shows the performance of AdaBoost-SAMME and AdaBoost-SAMME.R on a multi-class problem.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/ensemble/plot_adaboost_multiclass#sphx-glr-auto-examples-ensemble-plot-adaboost-multiclass-py&quot;&gt;Los &amp;aacute;rboles de decisi&amp;oacute;n AdaBoosted de varias clases&lt;/a&gt; muestran el rendimiento de AdaBoost-SAMME y AdaBoost-SAMME.R en un problema de varias clases.</target>
        </trans-unit>
        <trans-unit id="a7b0bc23565669714e4af29dd536270273f3402e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/ensemble/plot_adaboost_regression#sphx-glr-auto-examples-ensemble-plot-adaboost-regression-py&quot;&gt;Decision Tree Regression with AdaBoost&lt;/a&gt; demonstrates regression with the AdaBoost.R2 algorithm.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/ensemble/plot_adaboost_regression#sphx-glr-auto-examples-ensemble-plot-adaboost-regression-py&quot;&gt;La regresi&amp;oacute;n del &amp;aacute;rbol de decisiones con AdaBoost&lt;/a&gt; demuestra la regresi&amp;oacute;n con el algoritmo AdaBoost.R2.</target>
        </trans-unit>
        <trans-unit id="92c6d18139cc1cdd2de6eb6f4786a565e57db72c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/ensemble/plot_adaboost_twoclass#sphx-glr-auto-examples-ensemble-plot-adaboost-twoclass-py&quot;&gt;Two-class AdaBoost&lt;/a&gt; shows the decision boundary and decision function values for a non-linearly separable two-class problem using AdaBoost-SAMME.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/ensemble/plot_adaboost_twoclass#sphx-glr-auto-examples-ensemble-plot-adaboost-twoclass-py&quot;&gt;AdaBoost de dos clases&lt;/a&gt; muestra el l&amp;iacute;mite de decisi&amp;oacute;n y los valores de la funci&amp;oacute;n de decisi&amp;oacute;n para un problema de dos clases no separable linealmente usando AdaBoost-SAMME.</target>
        </trans-unit>
        <trans-unit id="017ef7814a79ae2025c6ec98cbfe58f80f9e673f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/ensemble/plot_feature_transformation#sphx-glr-auto-examples-ensemble-plot-feature-transformation-py&quot;&gt;Feature transformations with ensembles of trees&lt;/a&gt; compares supervised and unsupervised tree based feature transformations.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/ensemble/plot_feature_transformation#sphx-glr-auto-examples-ensemble-plot-feature-transformation-py&quot;&gt;Las transformaciones de caracter&amp;iacute;sticas con conjuntos de &amp;aacute;rboles&lt;/a&gt; comparan las transformaciones de caracter&amp;iacute;sticas basadas en &amp;aacute;rboles supervisados ​​y no supervisados.</target>
        </trans-unit>
        <trans-unit id="41e560c597aceeb951c8c67180435ee8b0e42ba5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/ensemble/plot_forest_importances#sphx-glr-auto-examples-ensemble-plot-forest-importances-py&quot;&gt;Feature importances with forests of trees&lt;/a&gt;: example on synthetic data showing the recovery of the actually meaningful features.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/ensemble/plot_forest_importances#sphx-glr-auto-examples-ensemble-plot-forest-importances-py&quot;&gt;Importancia de caracter&amp;iacute;sticas con bosques de &amp;aacute;rboles&lt;/a&gt; : ejemplo de datos sint&amp;eacute;ticos que muestran la recuperaci&amp;oacute;n de las caracter&amp;iacute;sticas realmente significativas.</target>
        </trans-unit>
        <trans-unit id="cb148629bec49066691c504d3215e85cac920009" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/ensemble/plot_forest_importances_faces#sphx-glr-auto-examples-ensemble-plot-forest-importances-faces-py&quot;&gt;Pixel importances with a parallel forest of trees&lt;/a&gt;: example on face recognition data.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/ensemble/plot_forest_importances_faces#sphx-glr-auto-examples-ensemble-plot-forest-importances-faces-py&quot;&gt;Importancia de p&amp;iacute;xeles con un bosque de &amp;aacute;rboles paralelo&lt;/a&gt; : ejemplo de datos de reconocimiento facial.</target>
        </trans-unit>
        <trans-unit id="a6c61fb360f3b55d34958b071bfbb98ddf45ee0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/feature_selection/plot_rfe_digits#sphx-glr-auto-examples-feature-selection-plot-rfe-digits-py&quot;&gt;Recursive feature elimination&lt;/a&gt;: A recursive feature elimination example showing the relevance of pixels in a digit classification task.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/feature_selection/plot_rfe_digits#sphx-glr-auto-examples-feature-selection-plot-rfe-digits-py&quot;&gt;Eliminaci&amp;oacute;n de caracter&amp;iacute;sticas recursivas&lt;/a&gt; : un ejemplo de eliminaci&amp;oacute;n de caracter&amp;iacute;sticas recursivas que muestra la relevancia de los p&amp;iacute;xeles en una tarea de clasificaci&amp;oacute;n de d&amp;iacute;gitos.</target>
        </trans-unit>
        <trans-unit id="2b001bec35db058b258a73d061dbf60b976bfe8a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/feature_selection/plot_rfe_with_cross_validation#sphx-glr-auto-examples-feature-selection-plot-rfe-with-cross-validation-py&quot;&gt;Recursive feature elimination with cross-validation&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/feature_selection/plot_rfe_with_cross_validation#sphx-glr-auto-examples-feature-selection-plot-rfe-with-cross-validation-py&quot;&gt;Eliminaci&amp;oacute;n de caracter&amp;iacute;sticas recursivas con validaci&amp;oacute;n cruzada&lt;/a&gt; ,</target>
        </trans-unit>
        <trans-unit id="a390bc20d8352b46fbd72dc13994978da78ba234" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/feature_selection/plot_rfe_with_cross_validation#sphx-glr-auto-examples-feature-selection-plot-rfe-with-cross-validation-py&quot;&gt;Recursive feature elimination with cross-validation&lt;/a&gt;: A recursive feature elimination example with automatic tuning of the number of features selected with cross-validation.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/feature_selection/plot_rfe_with_cross_validation#sphx-glr-auto-examples-feature-selection-plot-rfe-with-cross-validation-py&quot;&gt;Eliminaci&amp;oacute;n de caracter&amp;iacute;sticas recursivas con validaci&amp;oacute;n cruzada&lt;/a&gt; : un ejemplo de eliminaci&amp;oacute;n de caracter&amp;iacute;sticas recursivas con ajuste autom&amp;aacute;tico del n&amp;uacute;mero de caracter&amp;iacute;sticas seleccionadas con validaci&amp;oacute;n cruzada.</target>
        </trans-unit>
        <trans-unit id="328051f948fcba9623bf69836dca39c34ae81eac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/feature_selection/plot_select_from_model_boston#sphx-glr-auto-examples-feature-selection-plot-select-from-model-boston-py&quot;&gt;Feature selection using SelectFromModel and LassoCV&lt;/a&gt;: Selecting the two most important features from the Boston dataset without knowing the threshold beforehand.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/feature_selection/plot_select_from_model_boston#sphx-glr-auto-examples-feature-selection-plot-select-from-model-boston-py&quot;&gt;Selecci&amp;oacute;n de caracter&amp;iacute;sticas usando SelectFromModel y LassoCV&lt;/a&gt; : Seleccionar las dos caracter&amp;iacute;sticas m&amp;aacute;s importantes del conjunto de datos de Boston sin conocer el umbral de antemano.</target>
        </trans-unit>
        <trans-unit id="ac535e664a90b231be2ce16793ccfdc88819b9e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/feature_selection/plot_select_from_model_diabetes#sphx-glr-auto-examples-feature-selection-plot-select-from-model-diabetes-py&quot;&gt;Feature selection using SelectFromModel and LassoCV&lt;/a&gt;: Selecting the two most important features from the diabetes dataset without knowing the threshold beforehand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0650a2d5fcc4cb39ed3e3f859c0a39f3da833260" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/linear_model/plot_sgd_separating_hyperplane#sphx-glr-auto-examples-linear-model-plot-sgd-separating-hyperplane-py&quot;&gt;SGD: Maximum margin separating hyperplane&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/linear_model/plot_sgd_separating_hyperplane#sphx-glr-auto-examples-linear-model-plot-sgd-separating-hyperplane-py&quot;&gt;SGD: margen m&amp;aacute;ximo que separa el hiperplano&lt;/a&gt; ,</target>
        </trans-unit>
        <trans-unit id="dac83a4cc8d160aa3241174545e9812a22069f55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/manifold/plot_lle_digits#sphx-glr-auto-examples-manifold-plot-lle-digits-py&quot;&gt;Manifold learning on handwritten digits: Locally Linear Embedding, Isomap&amp;hellip;&lt;/a&gt; compares non-linear dimensionality reduction techniques on handwritten digits.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/manifold/plot_lle_digits#sphx-glr-auto-examples-manifold-plot-lle-digits-py&quot;&gt;Aprendizaje m&amp;uacute;ltiple en d&amp;iacute;gitos escritos a mano: incrustaci&amp;oacute;n lineal local, Isomap ...&lt;/a&gt; compara t&amp;eacute;cnicas de reducci&amp;oacute;n de dimensionalidad no lineal en d&amp;iacute;gitos escritos a mano.</target>
        </trans-unit>
        <trans-unit id="bb0d05f4848f22ea7094d5db3dd1f2bcf682eb88" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/miscellaneous/plot_multioutput_face_completion#sphx-glr-auto-examples-miscellaneous-plot-multioutput-face-completion-py&quot;&gt;Face completion with a multi-output estimators&lt;/a&gt;: an example of multi-output regression using nearest neighbors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da7f078993cb737a820cfb64f65c25e08ce9a434" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/mixture/plot_gmm_sin#sphx-glr-auto-examples-mixture-plot-gmm-sin-py&quot;&gt;Gaussian Mixture Model Sine Curve&lt;/a&gt; shows using &lt;a href=&quot;generated/sklearn.mixture.gaussianmixture#sklearn.mixture.GaussianMixture&quot;&gt;&lt;code&gt;GaussianMixture&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.mixture.bayesiangaussianmixture#sklearn.mixture.BayesianGaussianMixture&quot;&gt;&lt;code&gt;BayesianGaussianMixture&lt;/code&gt;&lt;/a&gt; to fit a sine wave.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/mixture/plot_gmm_sin#sphx-glr-auto-examples-mixture-plot-gmm-sin-py&quot;&gt;La curva sinusoidal del modelo de mezcla gaussiana&lt;/a&gt; muestra el uso de &lt;a href=&quot;generated/sklearn.mixture.gaussianmixture#sklearn.mixture.GaussianMixture&quot;&gt; &lt;code&gt;GaussianMixture&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;generated/sklearn.mixture.bayesiangaussianmixture#sklearn.mixture.BayesianGaussianMixture&quot;&gt; &lt;code&gt;BayesianGaussianMixture&lt;/code&gt; &lt;/a&gt; para ajustar una onda sinusoidal.</target>
        </trans-unit>
        <trans-unit id="5adde30104f8b2c420554d50b57864c2c3e4c6cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/model_selection/grid_search_text_feature_extraction#sphx-glr-auto-examples-model-selection-grid-search-text-feature-extraction-py&quot;&gt;Sample pipeline for text feature extraction and evaluation&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/model_selection/grid_search_text_feature_extraction#sphx-glr-auto-examples-model-selection-grid-search-text-feature-extraction-py&quot;&gt;Canal de muestra para la extracci&amp;oacute;n y evaluaci&amp;oacute;n de caracter&amp;iacute;sticas de texto&lt;/a&gt; ,</target>
        </trans-unit>
        <trans-unit id="7c4a2c6ba8a9a602ef1f99c87cb24ab3111954e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/model_selection/plot_cv_predict#sphx-glr-auto-examples-model-selection-plot-cv-predict-py&quot;&gt;Plotting Cross-Validated Predictions&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/model_selection/plot_cv_predict#sphx-glr-auto-examples-model-selection-plot-cv-predict-py&quot;&gt;Trazado de predicciones con validaci&amp;oacute;n cruzada&lt;/a&gt; ,</target>
        </trans-unit>
        <trans-unit id="fe57101a1e1b2447a7b87fe498377899b02fd2c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/model_selection/plot_grid_search_digits#sphx-glr-auto-examples-model-selection-plot-grid-search-digits-py&quot;&gt;Parameter estimation using grid search with cross-validation&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/model_selection/plot_grid_search_digits#sphx-glr-auto-examples-model-selection-plot-grid-search-digits-py&quot;&gt;Estimaci&amp;oacute;n de par&amp;aacute;metros mediante b&amp;uacute;squeda en cuadr&amp;iacute;cula con validaci&amp;oacute;n cruzada&lt;/a&gt; ,</target>
        </trans-unit>
        <trans-unit id="93d14e80cf909d5fa7e4eae41ab8f9596815b762" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/model_selection/plot_nested_cross_validation_iris#sphx-glr-auto-examples-model-selection-plot-nested-cross-validation-iris-py&quot;&gt;Nested versus non-nested cross-validation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/model_selection/plot_nested_cross_validation_iris#sphx-glr-auto-examples-model-selection-plot-nested-cross-validation-iris-py&quot;&gt;Validaci&amp;oacute;n cruzada anidada versus no anidada&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e111d3a9d189834c5fe59a20d99be346584627e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/model_selection/plot_randomized_search#sphx-glr-auto-examples-model-selection-plot-randomized-search-py&quot;&gt;Comparing randomized search and grid search for hyperparameter estimation&lt;/a&gt; compares the usage and efficiency of randomized search and grid search.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/model_selection/plot_randomized_search#sphx-glr-auto-examples-model-selection-plot-randomized-search-py&quot;&gt;La comparaci&amp;oacute;n de la b&amp;uacute;squeda aleatoria y la b&amp;uacute;squeda de cuadr&amp;iacute;cula para la estimaci&amp;oacute;n de hiperpar&amp;aacute;metros&lt;/a&gt; compara el uso y la eficiencia de la b&amp;uacute;squeda aleatoria y la b&amp;uacute;squeda de cuadr&amp;iacute;cula.</target>
        </trans-unit>
        <trans-unit id="b1a4ba435eae0a10b14f919f278d37388d9abe36" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/model_selection/plot_roc_crossval#sphx-glr-auto-examples-model-selection-plot-roc-crossval-py&quot;&gt;Receiver Operating Characteristic (ROC) with cross validation&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/model_selection/plot_roc_crossval#sphx-glr-auto-examples-model-selection-plot-roc-crossval-py&quot;&gt;Caracter&amp;iacute;stica de funcionamiento del receptor (ROC) con validaci&amp;oacute;n cruzada&lt;/a&gt; ,</target>
        </trans-unit>
        <trans-unit id="5e8ccd85fb039e33ab78113299814a337bcded32" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/neighbors/approximate_nearest_neighbors#sphx-glr-auto-examples-neighbors-approximate-nearest-neighbors-py&quot;&gt;Approximate nearest neighbors in TSNE&lt;/a&gt;: an example of pipelining &lt;a href=&quot;generated/sklearn.neighbors.kneighborstransformer#sklearn.neighbors.KNeighborsTransformer&quot;&gt;&lt;code&gt;KNeighborsTransformer&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.manifold.tsne#sklearn.manifold.TSNE&quot;&gt;&lt;code&gt;TSNE&lt;/code&gt;&lt;/a&gt;. Also proposes two custom nearest neighbors estimators based on external packages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5b1d23760229ddb77e1c62844eda584c3c62bc4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/neighbors/plot_caching_nearest_neighbors#sphx-glr-auto-examples-neighbors-plot-caching-nearest-neighbors-py&quot;&gt;Caching nearest neighbors&lt;/a&gt;: an example of pipelining &lt;a href=&quot;generated/sklearn.neighbors.kneighborstransformer#sklearn.neighbors.KNeighborsTransformer&quot;&gt;&lt;code&gt;KNeighborsTransformer&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.neighbors.kneighborsclassifier#sklearn.neighbors.KNeighborsClassifier&quot;&gt;&lt;code&gt;KNeighborsClassifier&lt;/code&gt;&lt;/a&gt; to enable caching of the neighbors graph during a hyper-parameter grid-search.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f6396b67460cfc40805ab78a4385e8a9ec731d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/neighbors/plot_classification#sphx-glr-auto-examples-neighbors-plot-classification-py&quot;&gt;Nearest Neighbors Classification&lt;/a&gt;: an example of classification using nearest neighbors.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/neighbors/plot_classification#sphx-glr-auto-examples-neighbors-plot-classification-py&quot;&gt;Clasificaci&amp;oacute;n de vecinos m&amp;aacute;s cercanos&lt;/a&gt; : un ejemplo de clasificaci&amp;oacute;n utilizando vecinos m&amp;aacute;s cercanos.</target>
        </trans-unit>
        <trans-unit id="0d8ce5a82b89c597118121d42998af05b147eefa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/neighbors/plot_digits_kde_sampling#sphx-glr-auto-examples-neighbors-plot-digits-kde-sampling-py&quot;&gt;Kernel Density Estimation&lt;/a&gt;: an example of using Kernel Density estimation to learn a generative model of the hand-written digits data, and drawing new samples from this model.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/neighbors/plot_digits_kde_sampling#sphx-glr-auto-examples-neighbors-plot-digits-kde-sampling-py&quot;&gt;Estimaci&amp;oacute;n de la densidad del kernel&lt;/a&gt; : un ejemplo del uso de la estimaci&amp;oacute;n de la densidad del kernel para aprender un modelo generativo de los datos de d&amp;iacute;gitos escritos a mano y extraer nuevas muestras de este modelo.</target>
        </trans-unit>
        <trans-unit id="b64c661b49277d749817df15a4f58fb6e36a7855" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/neighbors/plot_kde_1d#sphx-glr-auto-examples-neighbors-plot-kde-1d-py&quot;&gt;Simple 1D Kernel Density Estimation&lt;/a&gt;: computation of simple kernel density estimates in one dimension.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/neighbors/plot_kde_1d#sphx-glr-auto-examples-neighbors-plot-kde-1d-py&quot;&gt;Estimaci&amp;oacute;n&lt;/a&gt; simple de densidad de kernel 1D : c&amp;aacute;lculo de estimaciones simples de densidad de kernel en una dimensi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="ecce84d7cfed724a52c77cd7ba7bd40de8af129f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/neighbors/plot_nearest_centroid#sphx-glr-auto-examples-neighbors-plot-nearest-centroid-py&quot;&gt;Nearest Centroid Classification&lt;/a&gt;: an example of classification using nearest centroid with different shrink thresholds.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/neighbors/plot_nearest_centroid#sphx-glr-auto-examples-neighbors-plot-nearest-centroid-py&quot;&gt;Clasificaci&amp;oacute;n del centroide m&amp;aacute;s cercano&lt;/a&gt; : un ejemplo de clasificaci&amp;oacute;n utilizando el centroide m&amp;aacute;s cercano con diferentes umbrales de contracci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="3ae3f34bae8d4933f2c769f843a675fb23256c1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/neighbors/plot_regression#sphx-glr-auto-examples-neighbors-plot-regression-py&quot;&gt;Nearest Neighbors regression&lt;/a&gt;: an example of regression using nearest neighbors.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/neighbors/plot_regression#sphx-glr-auto-examples-neighbors-plot-regression-py&quot;&gt;Regresi&amp;oacute;n de vecinos m&amp;aacute;s cercanos&lt;/a&gt; : un ejemplo de regresi&amp;oacute;n usando vecinos m&amp;aacute;s cercanos.</target>
        </trans-unit>
        <trans-unit id="fa447910bde4a9b44ec54bf541e85f668f6cb525" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/neighbors/plot_species_kde#sphx-glr-auto-examples-neighbors-plot-species-kde-py&quot;&gt;Kernel Density Estimate of Species Distributions&lt;/a&gt;: an example of Kernel Density estimation using the Haversine distance metric to visualize geospatial data</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/neighbors/plot_species_kde#sphx-glr-auto-examples-neighbors-plot-species-kde-py&quot;&gt;Estimaci&amp;oacute;n de densidad de kernel de distribuciones de especies&lt;/a&gt; : un ejemplo de estimaci&amp;oacute;n de densidad de kernel utilizando la m&amp;eacute;trica de distancia de Haversine para visualizar datos geoespaciales</target>
        </trans-unit>
        <trans-unit id="6b133cfa28f75dfe2f07e6b07b1735ff088b0730" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/plot_multioutput_face_completion#sphx-glr-auto-examples-plot-multioutput-face-completion-py&quot;&gt;Face completion with a multi-output estimators&lt;/a&gt;: an example of multi-output regression using nearest neighbors.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/plot_multioutput_face_completion#sphx-glr-auto-examples-plot-multioutput-face-completion-py&quot;&gt;Finalizaci&amp;oacute;n de cara con estimadores de m&amp;uacute;ltiples salidas&lt;/a&gt; : un ejemplo de regresi&amp;oacute;n de m&amp;uacute;ltiples salidas utilizando vecinos m&amp;aacute;s cercanos.</target>
        </trans-unit>
        <trans-unit id="4d965cda82f943ebd05f20a86b4293b0d3bb1e0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/svm/plot_custom_kernel#sphx-glr-auto-examples-svm-plot-custom-kernel-py&quot;&gt;SVM with custom kernel&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/svm/plot_custom_kernel#sphx-glr-auto-examples-svm-plot-custom-kernel-py&quot;&gt;SVM con kernel personalizado&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="19052aa638c3743a930908ba39e554a66fa045a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/svm/plot_iris#sphx-glr-auto-examples-svm-plot-iris-py&quot;&gt;Plot different SVM classifiers in the iris dataset&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/svm/plot_iris#sphx-glr-auto-examples-svm-plot-iris-py&quot;&gt;Trazar diferentes clasificadores de SVM en el conjunto de datos de iris&lt;/a&gt; ,</target>
        </trans-unit>
        <trans-unit id="a47a052206b47a3928872d879a822ab408931d6c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/svm/plot_iris_svc#sphx-glr-auto-examples-svm-plot-iris-svc-py&quot;&gt;Plot different SVM classifiers in the iris dataset&lt;/a&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5add981a49cef1b0d860d0e917a34eb9f7a3691f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/svm/plot_separating_hyperplane#sphx-glr-auto-examples-svm-plot-separating-hyperplane-py&quot;&gt;SVM: Maximum margin separating hyperplane&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/svm/plot_separating_hyperplane#sphx-glr-auto-examples-svm-plot-separating-hyperplane-py&quot;&gt;SVM: margen m&amp;aacute;ximo que separa el hiperplano&lt;/a&gt; ,</target>
        </trans-unit>
        <trans-unit id="8b811e458696c59ceec8665a7b13533fba01aaad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/svm/plot_separating_hyperplane_unbalanced#sphx-glr-auto-examples-svm-plot-separating-hyperplane-unbalanced-py&quot;&gt;SVM: Separating hyperplane for unbalanced classes&lt;/a&gt; (See the &lt;code&gt;Note&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/svm/plot_separating_hyperplane_unbalanced#sphx-glr-auto-examples-svm-plot-separating-hyperplane-unbalanced-py&quot;&gt;SVM: hiperplano separador para clases no balanceadas&lt;/a&gt; (ver la &lt;code&gt;Note&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="0372123f2c65f3cdb3641f860fc1f7c1bb43c194" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/svm/plot_separating_hyperplane_unbalanced#sphx-glr-auto-examples-svm-plot-separating-hyperplane-unbalanced-py&quot;&gt;SVM: Separating hyperplane for unbalanced classes&lt;/a&gt; (See the Note in the example)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a447a3e4e0120d6c2471eb668972d816c954fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/svm/plot_svm_anova#sphx-glr-auto-examples-svm-plot-svm-anova-py&quot;&gt;SVM-Anova: SVM with univariate feature selection&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/svm/plot_svm_anova#sphx-glr-auto-examples-svm-plot-svm-anova-py&quot;&gt;SVM-Anova: SVM con selecci&amp;oacute;n de caracter&amp;iacute;sticas univariantes&lt;/a&gt; ,</target>
        </trans-unit>
        <trans-unit id="3a2fdc42dc8d5b94fb4d28ad400e5bb054529b31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/svm/plot_weighted_samples#sphx-glr-auto-examples-svm-plot-weighted-samples-py&quot;&gt;SVM: Weighted samples&lt;/a&gt;,</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/svm/plot_weighted_samples#sphx-glr-auto-examples-svm-plot-weighted-samples-py&quot;&gt;SVM: muestras ponderadas&lt;/a&gt; ,</target>
        </trans-unit>
        <trans-unit id="dcc0b020edb52bf4bce2266de7d77f784eb176c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/text/plot_document_classification_20newsgroups#sphx-glr-auto-examples-text-plot-document-classification-20newsgroups-py&quot;&gt;Classification of text documents using sparse features&lt;/a&gt;: Comparison of different algorithms for document classification including L1-based feature selection.</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/text/plot_document_classification_20newsgroups#sphx-glr-auto-examples-text-plot-document-classification-20newsgroups-py&quot;&gt;Clasificaci&amp;oacute;n de documentos de texto usando caracter&amp;iacute;sticas dispersas&lt;/a&gt; : Comparaci&amp;oacute;n de diferentes algoritmos para la clasificaci&amp;oacute;n de documentos, incluida la selecci&amp;oacute;n de caracter&amp;iacute;sticas basada en L1.</target>
        </trans-unit>
        <trans-unit id="aa739986683b2ab2c634f19f37f73f18f3720f71" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/text/plot_document_clustering#sphx-glr-auto-examples-text-plot-document-clustering-py&quot;&gt;Clustering text documents using k-means&lt;/a&gt;: Document clustering using sparse MiniBatchKMeans</source>
          <target state="translated">&lt;a href=&quot;../auto_examples/text/plot_document_clustering#sphx-glr-auto-examples-text-plot-document-clustering-py&quot;&gt;Agrupaci&amp;oacute;n de documentos de texto usando k-means&lt;/a&gt; : agrupaci&amp;oacute;n de documentos usando Sparse MiniBatchKMeans</target>
        </trans-unit>
        <trans-unit id="e400759c436faaf7af658b25249316acbd8f6fb9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auto_examples/tree/plot_unveil_tree_structure#sphx-glr-auto-examples-tree-plot-unveil-tree-structure-py&quot;&gt;Understanding the decision tree structure&lt;/a&gt; will help in gaining more insights about how the decision tree makes predictions, which is important for understanding the important features in the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="927635b0392b4ab1ade5afeacb28c91b55dab2cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../classes#module-sklearn.cluster&quot;&gt;&lt;code&gt;sklearn.cluster&lt;/code&gt;&lt;/a&gt; Estimator : If a model is provided, the model is fit treating the subclusters as new samples and the initial data is mapped to the label of the closest subcluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c06d58b53c81fb22cb4ae4eed88391f7d36fbd59" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_20newsgroups#sklearn.datasets.fetch_20newsgroups&quot;&gt;&lt;code&gt;fetch_20newsgroups&lt;/code&gt;&lt;/a&gt;(*[, data_home, subset, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e51e7c11dd8b29259adf7b6b09000415fe4434e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_20newsgroups#sklearn.datasets.fetch_20newsgroups&quot;&gt;&lt;code&gt;fetch_20newsgroups&lt;/code&gt;&lt;/a&gt;([data_home, subset, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_20newsgroups#sklearn.datasets.fetch_20newsgroups&quot;&gt; &lt;code&gt;fetch_20newsgroups&lt;/code&gt; &lt;/a&gt; ([inicio_datos, subconjunto,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="43a6c05b6a4f1ea430f43739e560c0a6db943a32" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_20newsgroups_vectorized#sklearn.datasets.fetch_20newsgroups_vectorized&quot;&gt;&lt;code&gt;fetch_20newsgroups_vectorized&lt;/code&gt;&lt;/a&gt;(*[, subset, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e8facad56e12884e4f6ab504bfcfce84190b3f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_20newsgroups_vectorized#sklearn.datasets.fetch_20newsgroups_vectorized&quot;&gt;&lt;code&gt;fetch_20newsgroups_vectorized&lt;/code&gt;&lt;/a&gt;([subset, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_20newsgroups_vectorized#sklearn.datasets.fetch_20newsgroups_vectorized&quot;&gt; &lt;code&gt;fetch_20newsgroups_vectorized&lt;/code&gt; &lt;/a&gt; ([subconjunto,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="de94fc920f74b3f94b8c744339671dc118b390f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_20newsgroups_vectorized#sklearn.datasets.fetch_20newsgroups_vectorized&quot;&gt;&lt;code&gt;sklearn.datasets.fetch_20newsgroups_vectorized&lt;/code&gt;&lt;/a&gt; is a function which returns ready-to-use token counts features instead of file names.</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_20newsgroups_vectorized#sklearn.datasets.fetch_20newsgroups_vectorized&quot;&gt; &lt;code&gt;sklearn.datasets.fetch_20newsgroups_vectorized&lt;/code&gt; &lt;/a&gt; es una funci&amp;oacute;n que devuelve caracter&amp;iacute;sticas de recuento de tokens listas para usar en lugar de nombres de archivos.</target>
        </trans-unit>
        <trans-unit id="2b7b1983e708b34007d7594b479387510add5554" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_california_housing#sklearn.datasets.fetch_california_housing&quot;&gt;&lt;code&gt;fetch_california_housing&lt;/code&gt;&lt;/a&gt;(*[, data_home, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd51720577ef8ceb452fd1e10725b5402de80381" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_california_housing#sklearn.datasets.fetch_california_housing&quot;&gt;&lt;code&gt;fetch_california_housing&lt;/code&gt;&lt;/a&gt;([data_home, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_california_housing#sklearn.datasets.fetch_california_housing&quot;&gt; &lt;code&gt;fetch_california_housing&lt;/code&gt; &lt;/a&gt; ([inicio_de_datos,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="be52da589eb1f5bbdb59cf276943cc774546da09" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_covtype#sklearn.datasets.fetch_covtype&quot;&gt;&lt;code&gt;fetch_covtype&lt;/code&gt;&lt;/a&gt;(*[, data_home, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af271a932f083f2d16f41ba60308d0fc5190e5f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_covtype#sklearn.datasets.fetch_covtype&quot;&gt;&lt;code&gt;fetch_covtype&lt;/code&gt;&lt;/a&gt;([data_home, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_covtype#sklearn.datasets.fetch_covtype&quot;&gt; &lt;code&gt;fetch_covtype&lt;/code&gt; &lt;/a&gt; ([inicio_datos,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="50de4697df9fcc442197a0baaea73bf43ee09751" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_covtype#sklearn.datasets.fetch_covtype&quot;&gt;&lt;code&gt;sklearn.datasets.fetch_covtype&lt;/code&gt;&lt;/a&gt; will load the covertype dataset; it returns a dictionary-like object with the feature matrix in the &lt;code&gt;data&lt;/code&gt; member and the target values in &lt;code&gt;target&lt;/code&gt;. The dataset will be downloaded from the web if necessary.</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_covtype#sklearn.datasets.fetch_covtype&quot;&gt; &lt;code&gt;sklearn.datasets.fetch_covtype&lt;/code&gt; &lt;/a&gt; cargar&amp;aacute; el conjunto de datos covertype; devuelve un objeto similar a un diccionario con la matriz de caracter&amp;iacute;sticas en elmiembro de &lt;code&gt;data&lt;/code&gt; y los valores de &lt;code&gt;target&lt;/code&gt; en destino . El conjunto de datos se descargar&amp;aacute; de la web si es necesario.</target>
        </trans-unit>
        <trans-unit id="a87d717a930701314c2e13bd24e77355662bf9e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_kddcup99#sklearn.datasets.fetch_kddcup99&quot;&gt;&lt;code&gt;fetch_kddcup99&lt;/code&gt;&lt;/a&gt;(*[, subset, data_home, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb89d0d40a2a8a2e054bab1505f9c4c1a6b7fbd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_kddcup99#sklearn.datasets.fetch_kddcup99&quot;&gt;&lt;code&gt;fetch_kddcup99&lt;/code&gt;&lt;/a&gt;([subset, data_home, shuffle, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_kddcup99#sklearn.datasets.fetch_kddcup99&quot;&gt; &lt;code&gt;fetch_kddcup99&lt;/code&gt; &lt;/a&gt; ([subconjunto, inicio_datos, aleatorio,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="b6d250ef70704f5874111c664c10fb0218f6b172" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_kddcup99#sklearn.datasets.fetch_kddcup99&quot;&gt;&lt;code&gt;sklearn.datasets.fetch_kddcup99&lt;/code&gt;&lt;/a&gt; will load the kddcup99 dataset; it returns a dictionary-like object with the feature matrix in the &lt;code&gt;data&lt;/code&gt; member and the target values in &lt;code&gt;target&lt;/code&gt;. The dataset will be downloaded from the web if necessary.</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_kddcup99#sklearn.datasets.fetch_kddcup99&quot;&gt; &lt;code&gt;sklearn.datasets.fetch_kddcup99&lt;/code&gt; &lt;/a&gt; cargar&amp;aacute; el conjunto de datos kddcup99; devuelve un objeto similar a un diccionario con la matriz de caracter&amp;iacute;sticas en elmiembro de &lt;code&gt;data&lt;/code&gt; y los valores de &lt;code&gt;target&lt;/code&gt; en destino . El conjunto de datos se descargar&amp;aacute; de la web si es necesario.</target>
        </trans-unit>
        <trans-unit id="9b35b9b68c7fa67ae13fdb67adc4ccf89a5d2ef0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_lfw_pairs#sklearn.datasets.fetch_lfw_pairs&quot;&gt;&lt;code&gt;fetch_lfw_pairs&lt;/code&gt;&lt;/a&gt;(*[, subset, data_home, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abea90ddece0419e822d5d73268f6b36609a98fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_lfw_pairs#sklearn.datasets.fetch_lfw_pairs&quot;&gt;&lt;code&gt;fetch_lfw_pairs&lt;/code&gt;&lt;/a&gt;([subset, data_home, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_lfw_pairs#sklearn.datasets.fetch_lfw_pairs&quot;&gt; &lt;code&gt;fetch_lfw_pairs&lt;/code&gt; &lt;/a&gt; ([subconjunto, inicio_datos,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="f01a28013dcc789ee4fc76f798d6fcbca30d5417" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_lfw_people#sklearn.datasets.fetch_lfw_people&quot;&gt;&lt;code&gt;fetch_lfw_people&lt;/code&gt;&lt;/a&gt;(*[, data_home, funneled, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43587b7cdf8ec51d183c0cf3b79ea83badf714e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_lfw_people#sklearn.datasets.fetch_lfw_people&quot;&gt;&lt;code&gt;fetch_lfw_people&lt;/code&gt;&lt;/a&gt;([data_home, funneled, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_lfw_people#sklearn.datasets.fetch_lfw_people&quot;&gt; &lt;code&gt;fetch_lfw_people&lt;/code&gt; &lt;/a&gt; ([data_home, canalizado,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="7563c2f2c17e444064844263edb86ba9fb43e62a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_olivetti_faces#sklearn.datasets.fetch_olivetti_faces&quot;&gt;&lt;code&gt;fetch_olivetti_faces&lt;/code&gt;&lt;/a&gt;(*[, data_home, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6e275393f243433879e30b34bc1a9a72870716c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_olivetti_faces#sklearn.datasets.fetch_olivetti_faces&quot;&gt;&lt;code&gt;fetch_olivetti_faces&lt;/code&gt;&lt;/a&gt;([data_home, shuffle, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_olivetti_faces#sklearn.datasets.fetch_olivetti_faces&quot;&gt; &lt;code&gt;fetch_olivetti_faces&lt;/code&gt; &lt;/a&gt; ([data_home, shuffle,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="48c98c17e0993aaa0689bd7091f122780a2ac7a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_rcv1#sklearn.datasets.fetch_rcv1&quot;&gt;&lt;code&gt;fetch_rcv1&lt;/code&gt;&lt;/a&gt;(*[, data_home, subset, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a78cf2bffc2f30bc99ea79586c8e01e69ea7312f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_rcv1#sklearn.datasets.fetch_rcv1&quot;&gt;&lt;code&gt;fetch_rcv1&lt;/code&gt;&lt;/a&gt;([data_home, subset, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_rcv1#sklearn.datasets.fetch_rcv1&quot;&gt; &lt;code&gt;fetch_rcv1&lt;/code&gt; &lt;/a&gt; ([inicio_datos, subconjunto,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="503ab3fb9446bb7c92c83e34572194cdb94e4853" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_rcv1#sklearn.datasets.fetch_rcv1&quot;&gt;&lt;code&gt;sklearn.datasets.fetch_rcv1&lt;/code&gt;&lt;/a&gt; will load the following version: RCV1-v2, vectors, full sets, topics multilabels:</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.fetch_rcv1#sklearn.datasets.fetch_rcv1&quot;&gt; &lt;code&gt;sklearn.datasets.fetch_rcv1&lt;/code&gt; &lt;/a&gt; cargar&amp;aacute; la siguiente versi&amp;oacute;n: RCV1-v2, vectores, conjuntos completos, temas multilabels:</target>
        </trans-unit>
        <trans-unit id="1b65e855d831ac202483723d41d242125ff7c0f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_boston#sklearn.datasets.load_boston&quot;&gt;&lt;code&gt;load_boston&lt;/code&gt;&lt;/a&gt;(*[, return_X_y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fc069ce82bdee95faaf90e1d342156219711a94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_boston#sklearn.datasets.load_boston&quot;&gt;&lt;code&gt;load_boston&lt;/code&gt;&lt;/a&gt;([return_X_y])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.load_boston#sklearn.datasets.load_boston&quot;&gt;&lt;code&gt;load_boston&lt;/code&gt;&lt;/a&gt;([return_X_y])</target>
        </trans-unit>
        <trans-unit id="a56737c2f5790b9680adcb5e8a9e991698edee62" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_breast_cancer#sklearn.datasets.load_breast_cancer&quot;&gt;&lt;code&gt;load_breast_cancer&lt;/code&gt;&lt;/a&gt;(*[, return_X_y, as_frame])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="114e7affefcdf791d57c12138eafbdf0150ed5a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_breast_cancer#sklearn.datasets.load_breast_cancer&quot;&gt;&lt;code&gt;load_breast_cancer&lt;/code&gt;&lt;/a&gt;([return_X_y])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.load_breast_cancer#sklearn.datasets.load_breast_cancer&quot;&gt;&lt;code&gt;load_breast_cancer&lt;/code&gt;&lt;/a&gt;([return_X_y])</target>
        </trans-unit>
        <trans-unit id="680cfad398fd4fce6f7d2723689235e6dafdedb3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_diabetes#sklearn.datasets.load_diabetes&quot;&gt;&lt;code&gt;load_diabetes&lt;/code&gt;&lt;/a&gt;(*[, return_X_y, as_frame])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5475774b62dc3c85aeab381258c350e3e94ca006" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_diabetes#sklearn.datasets.load_diabetes&quot;&gt;&lt;code&gt;load_diabetes&lt;/code&gt;&lt;/a&gt;([return_X_y])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.load_diabetes#sklearn.datasets.load_diabetes&quot;&gt;&lt;code&gt;load_diabetes&lt;/code&gt;&lt;/a&gt;([return_X_y])</target>
        </trans-unit>
        <trans-unit id="a485954ec5f5f923b02700e240446bf2fdbdf34a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_digits#sklearn.datasets.load_digits&quot;&gt;&lt;code&gt;load_digits&lt;/code&gt;&lt;/a&gt;(*[, n_class, return_X_y, as_frame])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b8f57fb423ab9cf3a53e30775b5e62a7f14e631" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_digits#sklearn.datasets.load_digits&quot;&gt;&lt;code&gt;load_digits&lt;/code&gt;&lt;/a&gt;([n_class, return_X_y])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.load_digits#sklearn.datasets.load_digits&quot;&gt; &lt;code&gt;load_digits&lt;/code&gt; &lt;/a&gt; ([n_clase, retorno_X_y])</target>
        </trans-unit>
        <trans-unit id="fa72e6ae213316216e559a4f55cbecf4dcb04a77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_iris#sklearn.datasets.load_iris&quot;&gt;&lt;code&gt;load_iris&lt;/code&gt;&lt;/a&gt;(*[, return_X_y, as_frame])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fee5523bb0f12898ca4d7259cb74cf38035959c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_iris#sklearn.datasets.load_iris&quot;&gt;&lt;code&gt;load_iris&lt;/code&gt;&lt;/a&gt;([return_X_y])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.load_iris#sklearn.datasets.load_iris&quot;&gt;&lt;code&gt;load_iris&lt;/code&gt;&lt;/a&gt;([return_X_y])</target>
        </trans-unit>
        <trans-unit id="bfc288a389a2859140d2872df14e1ae62ce4db25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_linnerud#sklearn.datasets.load_linnerud&quot;&gt;&lt;code&gt;load_linnerud&lt;/code&gt;&lt;/a&gt;(*[, return_X_y, as_frame])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd3cbd55f89cd5828e8328080716625c3ae513fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_linnerud#sklearn.datasets.load_linnerud&quot;&gt;&lt;code&gt;load_linnerud&lt;/code&gt;&lt;/a&gt;([return_X_y])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.load_linnerud#sklearn.datasets.load_linnerud&quot;&gt;&lt;code&gt;load_linnerud&lt;/code&gt;&lt;/a&gt;([return_X_y])</target>
        </trans-unit>
        <trans-unit id="9ad6809f4ea696af856bbdf5a6883fd1b42c84cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_sample_image#sklearn.datasets.load_sample_image&quot;&gt;&lt;code&gt;load_sample_image&lt;/code&gt;&lt;/a&gt;(image_name)</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.load_sample_image#sklearn.datasets.load_sample_image&quot;&gt;&lt;code&gt;load_sample_image&lt;/code&gt;&lt;/a&gt;(image_name)</target>
        </trans-unit>
        <trans-unit id="224ba39853f76ab922dd6bb5895fd38941d5be84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_sample_images#sklearn.datasets.load_sample_images&quot;&gt;&lt;code&gt;load_sample_images&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.load_sample_images#sklearn.datasets.load_sample_images&quot;&gt;&lt;code&gt;load_sample_images&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="b8e00258c439a830b9ccfba4539f966adc94c7e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_wine#sklearn.datasets.load_wine&quot;&gt;&lt;code&gt;load_wine&lt;/code&gt;&lt;/a&gt;(*[, return_X_y, as_frame])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25078b874bb45c1dff81765e1e96e7ab2a108971" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.load_wine#sklearn.datasets.load_wine&quot;&gt;&lt;code&gt;load_wine&lt;/code&gt;&lt;/a&gt;([return_X_y])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.load_wine#sklearn.datasets.load_wine&quot;&gt;&lt;code&gt;load_wine&lt;/code&gt;&lt;/a&gt;([return_X_y])</target>
        </trans-unit>
        <trans-unit id="a51d01a09cd1b456094d26673d980cc95a6fb890" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_biclusters#sklearn.datasets.make_biclusters&quot;&gt;&lt;code&gt;make_biclusters&lt;/code&gt;&lt;/a&gt;(shape, n_clusters, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0834712d93badaf504282d8c6a7ff9c190eb365b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_biclusters#sklearn.datasets.make_biclusters&quot;&gt;&lt;code&gt;make_biclusters&lt;/code&gt;&lt;/a&gt;(shape, n_clusters[, noise, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.make_biclusters#sklearn.datasets.make_biclusters&quot;&gt; &lt;code&gt;make_biclusters&lt;/code&gt; &lt;/a&gt; (forma, n_clusters [, ruido,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="8fe617b2b1a3305b551ec62306e83be2c92e7f28" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_checkerboard#sklearn.datasets.make_checkerboard&quot;&gt;&lt;code&gt;make_checkerboard&lt;/code&gt;&lt;/a&gt;(shape, n_clusters, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c860e34e901dcdabbfd4bdf6a39a73e12f2fa9aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_checkerboard#sklearn.datasets.make_checkerboard&quot;&gt;&lt;code&gt;make_checkerboard&lt;/code&gt;&lt;/a&gt;(shape, n_clusters[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.make_checkerboard#sklearn.datasets.make_checkerboard&quot;&gt; &lt;code&gt;make_checkerboard&lt;/code&gt; &lt;/a&gt; (forma, n_clusters [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="52a6f0198860de9fd06588c45c591db042284040" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_circles#sklearn.datasets.make_circles&quot;&gt;&lt;code&gt;make_circles&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../modules/generated/sklearn.datasets.make_moons#sklearn.datasets.make_moons&quot;&gt;&lt;code&gt;make_moons&lt;/code&gt;&lt;/a&gt; generate 2d binary classification datasets that are challenging to certain algorithms (e.g. centroid-based clustering or linear classification), including optional Gaussian noise. They are useful for visualisation. &lt;a href=&quot;../modules/generated/sklearn.datasets.make_circles#sklearn.datasets.make_circles&quot;&gt;&lt;code&gt;make_circles&lt;/code&gt;&lt;/a&gt; produces Gaussian data with a spherical decision boundary for binary classification, while &lt;a href=&quot;../modules/generated/sklearn.datasets.make_moons#sklearn.datasets.make_moons&quot;&gt;&lt;code&gt;make_moons&lt;/code&gt;&lt;/a&gt; produces two interleaving half circles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f30482253eb738861904d5cb711a0cc7592be281" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_circles#sklearn.datasets.make_circles&quot;&gt;&lt;code&gt;make_circles&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../modules/generated/sklearn.datasets.make_moons#sklearn.datasets.make_moons&quot;&gt;&lt;code&gt;make_moons&lt;/code&gt;&lt;/a&gt; generate 2d binary classification datasets that are challenging to certain algorithms (e.g. centroid-based clustering or linear classification), including optional Gaussian noise. They are useful for visualisation. produces Gaussian data with a spherical decision boundary for binary classification.</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.make_circles#sklearn.datasets.make_circles&quot;&gt; &lt;code&gt;make_circles&lt;/code&gt; &lt;/a&gt; y&lt;a href=&quot;../modules/generated/sklearn.datasets.make_moons#sklearn.datasets.make_moons&quot;&gt; &lt;code&gt;make_moons&lt;/code&gt; &lt;/a&gt; generan conjuntos de datos de clasificaci&amp;oacute;n binaria 2d que son un desaf&amp;iacute;o para ciertos algoritmos (por ejemplo, agrupaci&amp;oacute;n basada en centroides o clasificaci&amp;oacute;n lineal), incluido el ruido gaussiano opcional. Son &amp;uacute;tiles para la visualizaci&amp;oacute;n. produce datos gaussianos con un l&amp;iacute;mite de decisi&amp;oacute;n esf&amp;eacute;rico para la clasificaci&amp;oacute;n binaria.</target>
        </trans-unit>
        <trans-unit id="5e4172acd40132d919c3b5c2bb7bb83102e0040a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_gaussian_quantiles#sklearn.datasets.make_gaussian_quantiles&quot;&gt;&lt;code&gt;make_gaussian_quantiles&lt;/code&gt;&lt;/a&gt; divides a single Gaussian cluster into near-equal-size classes separated by concentric hyperspheres. &lt;a href=&quot;../modules/generated/sklearn.datasets.make_hastie_10_2#sklearn.datasets.make_hastie_10_2&quot;&gt;&lt;code&gt;make_hastie_10_2&lt;/code&gt;&lt;/a&gt; generates a similar binary, 10-dimensional problem.</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.make_gaussian_quantiles#sklearn.datasets.make_gaussian_quantiles&quot;&gt; &lt;code&gt;make_gaussian_quantiles&lt;/code&gt; &lt;/a&gt; divide un solo grupo gaussiano en clases de casi el mismo tama&amp;ntilde;o separadas por hiperesferas conc&amp;eacute;ntricas. &lt;a href=&quot;../modules/generated/sklearn.datasets.make_hastie_10_2#sklearn.datasets.make_hastie_10_2&quot;&gt; &lt;code&gt;make_hastie_10_2&lt;/code&gt; &lt;/a&gt; genera un problema binario de 10 dimensiones similar.</target>
        </trans-unit>
        <trans-unit id="eb0c3adf3bd4b3ef215aacc01e4771c94ee96a74" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_low_rank_matrix#sklearn.datasets.make_low_rank_matrix&quot;&gt;&lt;code&gt;make_low_rank_matrix&lt;/code&gt;&lt;/a&gt;([n_samples, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.make_low_rank_matrix#sklearn.datasets.make_low_rank_matrix&quot;&gt; &lt;code&gt;make_low_rank_matrix&lt;/code&gt; &lt;/a&gt; ([n_samples,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="f8ea78ce337dcd49fc746b0bacde7d25c51e2268" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_multilabel_classification#sklearn.datasets.make_multilabel_classification&quot;&gt;&lt;code&gt;make_multilabel_classification&lt;/code&gt;&lt;/a&gt; generates random samples with multiple labels, reflecting a bag of words drawn from a mixture of topics. The number of topics for each document is drawn from a Poisson distribution, and the topics themselves are drawn from a fixed random distribution. Similarly, the number of words is drawn from Poisson, with words drawn from a multinomial, where each topic defines a probability distribution over words. Simplifications with respect to true bag-of-words mixtures include:</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.make_multilabel_classification#sklearn.datasets.make_multilabel_classification&quot;&gt; &lt;code&gt;make_multilabel_classification&lt;/code&gt; &lt;/a&gt; genera muestras aleatorias con m&amp;uacute;ltiples etiquetas, que reflejan una bolsa de palabras extra&amp;iacute;das de una mezcla de temas. El n&amp;uacute;mero de temas de cada documento se extrae de una distribuci&amp;oacute;n de Poisson y los temas en s&amp;iacute; se extraen de una distribuci&amp;oacute;n aleatoria fija. De manera similar, el n&amp;uacute;mero de palabras se extrae de Poisson, con palabras extra&amp;iacute;das de un multinomio, donde cada tema define una distribuci&amp;oacute;n de probabilidad sobre las palabras. Las simplificaciones con respecto a las verdaderas mezclas de palabras incluyen:</target>
        </trans-unit>
        <trans-unit id="4edc48aec4ee4aefa8c5c9069cb0861d36599360" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_regression#sklearn.datasets.make_regression&quot;&gt;&lt;code&gt;make_regression&lt;/code&gt;&lt;/a&gt; produces regression targets as an optionally-sparse random linear combination of random features, with noise. Its informative features may be uncorrelated, or low rank (few features account for most of the variance).</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.make_regression#sklearn.datasets.make_regression&quot;&gt; &lt;code&gt;make_regression&lt;/code&gt; &lt;/a&gt; produce objetivos de regresi&amp;oacute;n como una combinaci&amp;oacute;n lineal aleatoria opcionalmente dispersa de caracter&amp;iacute;sticas aleatorias, con ruido. Sus caracter&amp;iacute;sticas informativas pueden no estar correlacionadas o tener un rango bajo (pocas caracter&amp;iacute;sticas explican la mayor parte de la variaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="497a36082fd17e880c172685d124ccd138fc7788" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_s_curve#sklearn.datasets.make_s_curve&quot;&gt;&lt;code&gt;make_s_curve&lt;/code&gt;&lt;/a&gt;([n_samples, noise, random_state])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.make_s_curve#sklearn.datasets.make_s_curve&quot;&gt; &lt;code&gt;make_s_curve&lt;/code&gt; &lt;/a&gt; ([n_samples, noise, random_state])</target>
        </trans-unit>
        <trans-unit id="b94485a36545d25c9ca1aac87f99e760429b69b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_sparse_coded_signal#sklearn.datasets.make_sparse_coded_signal&quot;&gt;&lt;code&gt;make_sparse_coded_signal&lt;/code&gt;&lt;/a&gt;(n_samples, &amp;hellip;[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.make_sparse_coded_signal#sklearn.datasets.make_sparse_coded_signal&quot;&gt; &lt;code&gt;make_sparse_coded_signal&lt;/code&gt; &lt;/a&gt; (n_samples,&amp;hellip; [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="ddeb4c37c4df3111b3786ef17f663c2798513cd5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_sparse_coded_signal#sklearn.datasets.make_sparse_coded_signal&quot;&gt;&lt;code&gt;make_sparse_coded_signal&lt;/code&gt;&lt;/a&gt;(n_samples, *, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f20dc3ba2bb4a702eaabae9293eeb4b24e156e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_sparse_spd_matrix#sklearn.datasets.make_sparse_spd_matrix&quot;&gt;&lt;code&gt;make_sparse_spd_matrix&lt;/code&gt;&lt;/a&gt;([dim, alpha, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.make_sparse_spd_matrix#sklearn.datasets.make_sparse_spd_matrix&quot;&gt; &lt;code&gt;make_sparse_spd_matrix&lt;/code&gt; &lt;/a&gt; ([dim, alpha,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="fb6819dfa4e211b5da88bced8eb3514a4fb65e98" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_spd_matrix#sklearn.datasets.make_spd_matrix&quot;&gt;&lt;code&gt;make_spd_matrix&lt;/code&gt;&lt;/a&gt;(n_dim, *[, random_state])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00c8a202b42ebb032f6b8c6be6db0a98aa6d0695" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_spd_matrix#sklearn.datasets.make_spd_matrix&quot;&gt;&lt;code&gt;make_spd_matrix&lt;/code&gt;&lt;/a&gt;(n_dim[, random_state])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.make_spd_matrix#sklearn.datasets.make_spd_matrix&quot;&gt; &lt;code&gt;make_spd_matrix&lt;/code&gt; &lt;/a&gt; (n_dim [, random_state])</target>
        </trans-unit>
        <trans-unit id="3508835fb056170ff26542c5032d077cc8a2b2f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../modules/generated/sklearn.datasets.make_swiss_roll#sklearn.datasets.make_swiss_roll&quot;&gt;&lt;code&gt;make_swiss_roll&lt;/code&gt;&lt;/a&gt;([n_samples, noise, random_state])</source>
          <target state="translated">&lt;a href=&quot;../modules/generated/sklearn.datasets.make_swiss_roll#sklearn.datasets.make_swiss_roll&quot;&gt; &lt;code&gt;make_swiss_roll&lt;/code&gt; &lt;/a&gt; ([n_samples, noise, random_state])</target>
        </trans-unit>
        <trans-unit id="f526e575e7d67dc918abd8642ba35107cf9ee255" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;classes#module-sklearn.neighbors&quot;&gt;&lt;code&gt;sklearn.neighbors&lt;/code&gt;&lt;/a&gt; provides functionality for unsupervised and supervised neighbors-based learning methods. Unsupervised nearest neighbors is the foundation of many other learning methods, notably manifold learning and spectral clustering. Supervised neighbors-based learning comes in two flavors: &lt;a href=&quot;#classification&quot;&gt;classification&lt;/a&gt; for data with discrete labels, and &lt;a href=&quot;#regression&quot;&gt;regression&lt;/a&gt; for data with continuous labels.</source>
          <target state="translated">&lt;a href=&quot;classes#module-sklearn.neighbors&quot;&gt; &lt;code&gt;sklearn.neighbors&lt;/code&gt; &lt;/a&gt; proporciona funcionalidad para m&amp;eacute;todos de aprendizaje basados ​​en vecinos supervisados ​​y no supervisados. Los vecinos m&amp;aacute;s cercanos sin supervisi&amp;oacute;n son la base de muchos otros m&amp;eacute;todos de aprendizaje, en particular el aprendizaje m&amp;uacute;ltiple y la agrupaci&amp;oacute;n espectral. El aprendizaje basado en vecinos supervisados ​​viene en dos formas:&lt;a href=&quot;#classification&quot;&gt; clasificaci&amp;oacute;n&lt;/a&gt; para datos con etiquetas discretas y&lt;a href=&quot;#regression&quot;&gt; regresi&amp;oacute;n&lt;/a&gt; para datos con etiquetas continuas.</target>
        </trans-unit>
        <trans-unit id="373a75690f94bd1176677d6d31b98a89d0c849f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;compose#pipeline&quot;&gt;Pipeline: chaining estimators&lt;/a&gt; describes building composite estimators whose parameter space can be searched with these tools.</source>
          <target state="translated">&lt;a href=&quot;compose#pipeline&quot;&gt;Pipeline: los estimadores de encadenamiento&lt;/a&gt; describen la construcci&amp;oacute;n de estimadores compuestos cuyo espacio de par&amp;aacute;metros se puede buscar con estas herramientas.</target>
        </trans-unit>
        <trans-unit id="152a6d06538d60f6a8d9b17aeb423f64680b6c32" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ensemble#random-trees-embedding&quot;&gt;Totally Random Trees Embedding&lt;/a&gt; can also be useful to derive non-linear representations of feature space, also it does not perform dimensionality reduction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d398e5c1b8a480bc7edafd64456e0ad26ec822f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.base.clone#sklearn.base.clone&quot;&gt;&lt;code&gt;base.clone&lt;/code&gt;&lt;/a&gt;(estimator, *[, safe])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40686b045b637e198477129079fdb16e07c0e1c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.base.clone#sklearn.base.clone&quot;&gt;&lt;code&gt;base.clone&lt;/code&gt;&lt;/a&gt;(estimator[, safe])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.base.clone#sklearn.base.clone&quot;&gt; &lt;code&gt;base.clone&lt;/code&gt; &lt;/a&gt; (estimador [, seguro])</target>
        </trans-unit>
        <trans-unit id="2b3fa29a7dd6280e762e75ea2b1a7a1a619cb6cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.base.is_classifier#sklearn.base.is_classifier&quot;&gt;&lt;code&gt;base.is_classifier&lt;/code&gt;&lt;/a&gt;(estimator)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.base.is_classifier#sklearn.base.is_classifier&quot;&gt;&lt;code&gt;base.is_classifier&lt;/code&gt;&lt;/a&gt;(estimator)</target>
        </trans-unit>
        <trans-unit id="a092a391ba6b76e252a7407c59d7ccb219d5534c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.base.is_regressor#sklearn.base.is_regressor&quot;&gt;&lt;code&gt;base.is_regressor&lt;/code&gt;&lt;/a&gt;(estimator)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.base.is_regressor#sklearn.base.is_regressor&quot;&gt;&lt;code&gt;base.is_regressor&lt;/code&gt;&lt;/a&gt;(estimator)</target>
        </trans-unit>
        <trans-unit id="847ee981b4d10a208202b9d6fa1407d9e925b929" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.calibration.calibratedclassifiercv#sklearn.calibration.CalibratedClassifierCV&quot;&gt;&lt;code&gt;CalibratedClassifierCV&lt;/code&gt;&lt;/a&gt; can also deal with classification tasks that involve more than two classes if the base estimator can do so. In this case, the classifier is calibrated first for each class separately in an one-vs-rest fashion. When predicting probabilities for unseen data, the calibrated probabilities for each class are predicted separately. As those probabilities do not necessarily sum to one, a postprocessing is performed to normalize them.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.calibration.calibratedclassifiercv#sklearn.calibration.CalibratedClassifierCV&quot;&gt; &lt;code&gt;CalibratedClassifierCV&lt;/code&gt; &lt;/a&gt; tambi&amp;eacute;n puede manejar tareas de clasificaci&amp;oacute;n que involucran m&amp;aacute;s de dos clases si el estimador base puede hacerlo. En este caso, el clasificador se calibra primero para cada clase por separado en una forma de uno contra el resto. Al predecir probabilidades para datos no vistos, las probabilidades calibradas para cada clase se predicen por separado. Como esas probabilidades no suman necesariamente uno, se realiza un posprocesamiento para normalizarlas.</target>
        </trans-unit>
        <trans-unit id="fed63b99ed48fe487834fc8caf24275923dcde6f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.calibration.calibratedclassifiercv#sklearn.calibration.CalibratedClassifierCV&quot;&gt;&lt;code&gt;CalibratedClassifierCV&lt;/code&gt;&lt;/a&gt; can calibrate probabilities in a multiclass setting if the base estimator supports multiclass predictions. The classifier is calibrated first for each class separately in a one-vs-rest fashion &lt;a href=&quot;#id9&quot; id=&quot;id5&quot;&gt;4&lt;/a&gt;. When predicting probabilities, the calibrated probabilities for each class are predicted separately. As those probabilities do not necessarily sum to one, a postprocessing is performed to normalize them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0966454d79bcf6c59ff1920129836d22c3017b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.calibration.calibratedclassifiercv#sklearn.calibration.CalibratedClassifierCV&quot;&gt;&lt;code&gt;CalibratedClassifierCV&lt;/code&gt;&lt;/a&gt; uses a cross-validation approach to fit both the classifier and the regressor. For each of the k &lt;code&gt;(trainset, testset)&lt;/code&gt; couple, a classifier is trained on the train set, and its predictions on the test set are used to fit a regressor. We end up with k &lt;code&gt;(classifier, regressor)&lt;/code&gt; couples where each regressor maps the output of its corresponding classifier into [0, 1]. Each couple is exposed in the &lt;code&gt;calibrated_classifiers_&lt;/code&gt; attribute, where each entry is a calibrated classifier with a &lt;a href=&quot;https://scikit-learn.org/0.23/glossary.html#term-predict-proba&quot;&gt;predict_proba&lt;/a&gt; method that outputs calibrated probabilities. The output of &lt;a href=&quot;https://scikit-learn.org/0.23/glossary.html#term-predict-proba&quot;&gt;predict_proba&lt;/a&gt; for the main &lt;a href=&quot;generated/sklearn.calibration.calibratedclassifiercv#sklearn.calibration.CalibratedClassifierCV&quot;&gt;&lt;code&gt;CalibratedClassifierCV&lt;/code&gt;&lt;/a&gt; instance corresponds to the average of the predicted probabilities of the &lt;code&gt;k&lt;/code&gt; estimators in the &lt;code&gt;calibrated_classifiers_&lt;/code&gt; list. The output of &lt;a href=&quot;https://scikit-learn.org/0.23/glossary.html#term-predict&quot;&gt;predict&lt;/a&gt; is the class that has the highest probability.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35b7b3a4b1dd74cc587c5aa91f91b030522c7a2d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.calibration.calibratedclassifiercv#sklearn.calibration.CalibratedClassifierCV&quot;&gt;&lt;code&gt;calibration.CalibratedClassifierCV&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.calibration.calibratedclassifiercv#sklearn.calibration.CalibratedClassifierCV&quot;&gt;&lt;code&gt;calibration.CalibratedClassifierCV&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="8b99fa2c7ee3091e973f9b961c4030c4584c4a90" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.calibration.calibration_curve#sklearn.calibration.calibration_curve&quot;&gt;&lt;code&gt;calibration.calibration_curve&lt;/code&gt;&lt;/a&gt;(y_true, y_prob)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.calibration.calibration_curve#sklearn.calibration.calibration_curve&quot;&gt; &lt;code&gt;calibration.calibration_curve&lt;/code&gt; &lt;/a&gt; (y_true, y_prob)</target>
        </trans-unit>
        <trans-unit id="6341d591e0aba36caf578869a074347f21088a84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.calibration.calibration_curve#sklearn.calibration.calibration_curve&quot;&gt;&lt;code&gt;calibration.calibration_curve&lt;/code&gt;&lt;/a&gt;(y_true, y_prob, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d0481be090ef391a09914812740253b09951d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.affinity_propagation#sklearn.cluster.affinity_propagation&quot;&gt;&lt;code&gt;cluster.affinity_propagation&lt;/code&gt;&lt;/a&gt;(S, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1454e397a1d8adf859b2ed5288bbfa1d2a4d29c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.affinity_propagation#sklearn.cluster.affinity_propagation&quot;&gt;&lt;code&gt;cluster.affinity_propagation&lt;/code&gt;&lt;/a&gt;(S[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.affinity_propagation#sklearn.cluster.affinity_propagation&quot;&gt; &lt;code&gt;cluster.affinity_propagation&lt;/code&gt; &lt;/a&gt; (S [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="54f9fc4205bf1caeed749d957c2bd4fc09ce3fb6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.affinitypropagation#sklearn.cluster.AffinityPropagation&quot;&gt;&lt;code&gt;AffinityPropagation&lt;/code&gt;&lt;/a&gt; creates clusters by sending messages between pairs of samples until convergence. A dataset is then described using a small number of exemplars, which are identified as those most representative of other samples. The messages sent between pairs represent the suitability for one sample to be the exemplar of the other, which is updated in response to the values from other pairs. This updating happens iteratively until convergence, at which point the final exemplars are chosen, and hence the final clustering is given.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.affinitypropagation#sklearn.cluster.AffinityPropagation&quot;&gt; &lt;code&gt;AffinityPropagation&lt;/code&gt; &lt;/a&gt; crea cl&amp;uacute;steres enviando mensajes entre pares de muestras hasta la convergencia. A continuaci&amp;oacute;n, se describe un conjunto de datos utilizando una peque&amp;ntilde;a cantidad de ejemplos, que se identifican como los m&amp;aacute;s representativos de otras muestras. Los mensajes enviados entre pares representan la idoneidad de una muestra para ser el modelo de la otra, que se actualiza en respuesta a los valores de otros pares. Esta actualizaci&amp;oacute;n ocurre de forma iterativa hasta la convergencia, momento en el que se eligen los ejemplos finales y, por tanto, se da el agrupamiento final.</target>
        </trans-unit>
        <trans-unit id="32e40c56fd5e2e790174d0aa6a7be94f3f77e7dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.affinitypropagation#sklearn.cluster.AffinityPropagation&quot;&gt;&lt;code&gt;cluster.AffinityPropagation&lt;/code&gt;&lt;/a&gt;(*[, damping, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbd649ccc42593843d8ff80686fc9618e6abfd73" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.affinitypropagation#sklearn.cluster.AffinityPropagation&quot;&gt;&lt;code&gt;cluster.AffinityPropagation&lt;/code&gt;&lt;/a&gt;([damping, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.affinitypropagation#sklearn.cluster.AffinityPropagation&quot;&gt; &lt;code&gt;cluster.AffinityPropagation&lt;/code&gt; &lt;/a&gt; ([amortiguaci&amp;oacute;n,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="6dc656359e2ef712fd43ce553377adb3f05ae0bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.agglomerativeclustering#sklearn.cluster.AgglomerativeClustering&quot;&gt;&lt;code&gt;AgglomerativeClustering&lt;/code&gt;&lt;/a&gt; can also scale to large number of samples when it is used jointly with a connectivity matrix, but is computationally expensive when no connectivity constraints are added between samples: it considers at each step all the possible merges.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.agglomerativeclustering#sklearn.cluster.AgglomerativeClustering&quot;&gt; &lt;code&gt;AgglomerativeClustering&lt;/code&gt; &lt;/a&gt; tambi&amp;eacute;n puede escalar a una gran cantidad de muestras cuando se usa junto con una matriz de conectividad, pero es computacionalmente costoso cuando no se agregan restricciones de conectividad entre muestras: considera en cada paso todas las posibles fusiones.</target>
        </trans-unit>
        <trans-unit id="00c180c2bb2be88e81d54d55191ae632024114f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.agglomerativeclustering#sklearn.cluster.AgglomerativeClustering&quot;&gt;&lt;code&gt;AgglomerativeClustering&lt;/code&gt;&lt;/a&gt; supports Ward, single, average, and complete linkage strategies.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.agglomerativeclustering#sklearn.cluster.AgglomerativeClustering&quot;&gt; &lt;code&gt;AgglomerativeClustering&lt;/code&gt; &lt;/a&gt; apoya las estrategias de vinculaci&amp;oacute;n Ward, simple, promedio y completa.</target>
        </trans-unit>
        <trans-unit id="e923a0d5f53fcfc8e41d2bce903e50c47d020319" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.agglomerativeclustering#sklearn.cluster.AgglomerativeClustering&quot;&gt;&lt;code&gt;cluster.AgglomerativeClustering&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.agglomerativeclustering#sklearn.cluster.AgglomerativeClustering&quot;&gt;&lt;code&gt;cluster.AgglomerativeClustering&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="3b41c18b1bd61ac180741124377953d36b6e6ced" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.bicluster.spectralbiclustering#sklearn.cluster.bicluster.SpectralBiclustering&quot;&gt;&lt;code&gt;SpectralBiclustering&lt;/code&gt;&lt;/a&gt;([n_clusters, method, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.bicluster.spectralbiclustering#sklearn.cluster.bicluster.SpectralBiclustering&quot;&gt; &lt;code&gt;SpectralBiclustering&lt;/code&gt; &lt;/a&gt; ([n_clusters, m&amp;eacute;todo,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="3eecc11c78b5c1a871b7d52cea732652b1f2f0c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.bicluster.spectralcoclustering#sklearn.cluster.bicluster.SpectralCoclustering&quot;&gt;&lt;code&gt;SpectralCoclustering&lt;/code&gt;&lt;/a&gt;([n_clusters, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.bicluster.spectralcoclustering#sklearn.cluster.bicluster.SpectralCoclustering&quot;&gt; &lt;code&gt;SpectralCoclustering&lt;/code&gt; &lt;/a&gt; ([n_clusters,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="8d68a69b778b87ff45aa38d6037664073de0abed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.birch#sklearn.cluster.Birch&quot;&gt;&lt;code&gt;cluster.Birch&lt;/code&gt;&lt;/a&gt;(*[, threshold, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acc147f9f9be8b65390df38d3567a3db7c6fd96f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.birch#sklearn.cluster.Birch&quot;&gt;&lt;code&gt;cluster.Birch&lt;/code&gt;&lt;/a&gt;([threshold, branching_factor, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.birch#sklearn.cluster.Birch&quot;&gt; &lt;code&gt;cluster.Birch&lt;/code&gt; &lt;/a&gt; ([umbral, factor de ramificaci&amp;oacute;n,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="be5b041778948940131d9555648cb306879b2ad3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.cluster_optics_dbscan#sklearn.cluster.cluster_optics_dbscan&quot;&gt;&lt;code&gt;cluster.cluster_optics_dbscan&lt;/code&gt;&lt;/a&gt;(*, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baf3dc6202b301d8177ba46bf8d902cfb17e4880" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.cluster_optics_xi#sklearn.cluster.cluster_optics_xi&quot;&gt;&lt;code&gt;cluster.cluster_optics_xi&lt;/code&gt;&lt;/a&gt;(*, reachability, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="915344b5a800fd48d7225ba4232c0538550ba701" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.compute_optics_graph#sklearn.cluster.compute_optics_graph&quot;&gt;&lt;code&gt;cluster.compute_optics_graph&lt;/code&gt;&lt;/a&gt;(X, *, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f74ce64787054d649a669d4132c468afc473d03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.dbscan#sklearn.cluster.DBSCAN&quot;&gt;&lt;code&gt;cluster.DBSCAN&lt;/code&gt;&lt;/a&gt;([eps, min_samples, metric, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.dbscan#sklearn.cluster.DBSCAN&quot;&gt; &lt;code&gt;cluster.DBSCAN&lt;/code&gt; &lt;/a&gt; ([eps, min_samples, metric,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="a4c36c7c5cc3b5aa4e8061c8a64e4d9db9c08ae9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.dbscan#sklearn.cluster.dbscan&quot;&gt;&lt;code&gt;cluster.dbscan&lt;/code&gt;&lt;/a&gt;(X[, eps, min_samples, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.dbscan#sklearn.cluster.dbscan&quot;&gt; &lt;code&gt;cluster.dbscan&lt;/code&gt; &lt;/a&gt; (X [, eps, min_samples,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="f35c7849750b7b963b4475c3ec7375ad3785d00b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.estimate_bandwidth#sklearn.cluster.estimate_bandwidth&quot;&gt;&lt;code&gt;cluster.estimate_bandwidth&lt;/code&gt;&lt;/a&gt;(X, *[, quantile, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51914bf6c7e6b950d00373a21419a4b04d5d2a68" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.estimate_bandwidth#sklearn.cluster.estimate_bandwidth&quot;&gt;&lt;code&gt;cluster.estimate_bandwidth&lt;/code&gt;&lt;/a&gt;(X[, quantile, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.estimate_bandwidth#sklearn.cluster.estimate_bandwidth&quot;&gt; &lt;code&gt;cluster.estimate_bandwidth&lt;/code&gt; &lt;/a&gt; (X [, cuantil,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="0c50d702ba29707744e776b124a1f0611aaf3516" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.featureagglomeration#sklearn.cluster.FeatureAgglomeration&quot;&gt;&lt;code&gt;cluster.FeatureAgglomeration&lt;/code&gt;&lt;/a&gt; applies &lt;a href=&quot;clustering#hierarchical-clustering&quot;&gt;Hierarchical clustering&lt;/a&gt; to group together features that behave similarly.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.featureagglomeration#sklearn.cluster.FeatureAgglomeration&quot;&gt; &lt;code&gt;cluster.FeatureAgglomeration&lt;/code&gt; &lt;/a&gt; aplica la&lt;a href=&quot;clustering#hierarchical-clustering&quot;&gt; agrupaci&amp;oacute;n&lt;/a&gt; en cl&amp;uacute;steres jer&amp;aacute;rquica para agrupar caracter&amp;iacute;sticas que se comportan de manera similar.</target>
        </trans-unit>
        <trans-unit id="f6119e2504cff1c4820a08317abf87569fe39d64" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.featureagglomeration#sklearn.cluster.FeatureAgglomeration&quot;&gt;&lt;code&gt;cluster.FeatureAgglomeration&lt;/code&gt;&lt;/a&gt;([n_clusters, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.featureagglomeration#sklearn.cluster.FeatureAgglomeration&quot;&gt; &lt;code&gt;cluster.FeatureAgglomeration&lt;/code&gt; &lt;/a&gt; ([n_clusters,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="68dc4e332c47ba8647f61a9d96b3492cf6dae4b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.k_means#sklearn.cluster.k_means&quot;&gt;&lt;code&gt;cluster.k_means&lt;/code&gt;&lt;/a&gt;(X, n_clusters, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6542e2a0450499e101f34ce5d4238820316a2b1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.k_means#sklearn.cluster.k_means&quot;&gt;&lt;code&gt;cluster.k_means&lt;/code&gt;&lt;/a&gt;(X, n_clusters[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.k_means#sklearn.cluster.k_means&quot;&gt; &lt;code&gt;cluster.k_means&lt;/code&gt; &lt;/a&gt; (X, n_clusters [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="164d2dd9bb54c905af4e3cdf5cadcf4dd79f2f3b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.kmeans#sklearn.cluster.KMeans&quot;&gt;&lt;code&gt;KMeans&lt;/code&gt;&lt;/a&gt; benefits from OpenMP based parallelism through Cython. Small chunks of data (256 samples) are processed in parallel, which in addition yields a low memory footprint. For more details on how to control the number of threads, please refer to our &lt;a href=&quot;computing#parallelism&quot;&gt;Parallelism&lt;/a&gt; notes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d94e9307d84954ab56ff338ce9ecced3488ab0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.kmeans#sklearn.cluster.KMeans&quot;&gt;&lt;code&gt;cluster.KMeans&lt;/code&gt;&lt;/a&gt;([n_clusters, init, n_init, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.kmeans#sklearn.cluster.KMeans&quot;&gt; &lt;code&gt;cluster.KMeans&lt;/code&gt; &lt;/a&gt; ([n_clusters, init, n_init,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="09675b5d45c0ab020ae488d4d9e13cc7309db458" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.mean_shift#sklearn.cluster.mean_shift&quot;&gt;&lt;code&gt;cluster.mean_shift&lt;/code&gt;&lt;/a&gt;(X, *[, bandwidth, seeds, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="971be528aef82b23ef655e30761b4d844d26e5a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.mean_shift#sklearn.cluster.mean_shift&quot;&gt;&lt;code&gt;cluster.mean_shift&lt;/code&gt;&lt;/a&gt;(X[, bandwidth, seeds, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.mean_shift#sklearn.cluster.mean_shift&quot;&gt; &lt;code&gt;cluster.mean_shift&lt;/code&gt; &lt;/a&gt; (X [, ancho de banda, semillas,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="1e69cb0b59dffb223cb6b813850674ca354e16f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.meanshift#sklearn.cluster.MeanShift&quot;&gt;&lt;code&gt;MeanShift&lt;/code&gt;&lt;/a&gt; clustering aims to discover &lt;em&gt;blobs&lt;/em&gt; in a smooth density of samples. It is a centroid based algorithm, which works by updating candidates for centroids to be the mean of the points within a given region. These candidates are then filtered in a post-processing stage to eliminate near-duplicates to form the final set of centroids.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.meanshift#sklearn.cluster.MeanShift&quot;&gt; &lt;code&gt;MeanShift&lt;/code&gt; &lt;/a&gt; agrupaci&amp;oacute;n en cl&amp;uacute;steres de MeanShift tiene como objetivo descubrir&lt;em&gt; manchas&lt;/em&gt; en una densidad uniforme de muestras. Es un algoritmo basado en centroides, que funciona actualizando candidatos para centroides para que sean la media de los puntos dentro de una regi&amp;oacute;n determinada. Estos candidatos luego se filtran en una etapa de posprocesamiento para eliminar casi duplicados para formar el conjunto final de centroides.</target>
        </trans-unit>
        <trans-unit id="9b9658051d0aa46a8fc11c1579a4b1463f1baec4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.meanshift#sklearn.cluster.MeanShift&quot;&gt;&lt;code&gt;cluster.MeanShift&lt;/code&gt;&lt;/a&gt;(*[, bandwidth, seeds, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="319ecff37d6f928eca5970e3cc32b3268c49849d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.meanshift#sklearn.cluster.MeanShift&quot;&gt;&lt;code&gt;cluster.MeanShift&lt;/code&gt;&lt;/a&gt;([bandwidth, seeds, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.meanshift#sklearn.cluster.MeanShift&quot;&gt; &lt;code&gt;cluster.MeanShift&lt;/code&gt; &lt;/a&gt; ([ancho de banda, semillas,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="7e3e7569496c39f993ee78b02c76d70311ecaad0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.minibatchkmeans#sklearn.cluster.MiniBatchKMeans&quot;&gt;&lt;code&gt;MiniBatchKMeans&lt;/code&gt;&lt;/a&gt; converges faster than &lt;a href=&quot;generated/sklearn.cluster.kmeans#sklearn.cluster.KMeans&quot;&gt;&lt;code&gt;KMeans&lt;/code&gt;&lt;/a&gt;, but the quality of the results is reduced. In practice this difference in quality can be quite small, as shown in the example and cited reference.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.minibatchkmeans#sklearn.cluster.MiniBatchKMeans&quot;&gt; &lt;code&gt;MiniBatchKMeans&lt;/code&gt; &lt;/a&gt; converge m&amp;aacute;s r&amp;aacute;pido que&lt;a href=&quot;generated/sklearn.cluster.kmeans#sklearn.cluster.KMeans&quot;&gt; &lt;code&gt;KMeans&lt;/code&gt; &lt;/a&gt; , pero la calidad de los resultados se reduce. En la pr&amp;aacute;ctica, esta diferencia de calidad puede ser bastante peque&amp;ntilde;a, como se muestra en el ejemplo y la referencia citada.</target>
        </trans-unit>
        <trans-unit id="0283c74111ba2a27b8497c875d77cccc3a19aaa4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.minibatchkmeans#sklearn.cluster.MiniBatchKMeans&quot;&gt;&lt;code&gt;cluster.MiniBatchKMeans&lt;/code&gt;&lt;/a&gt;([n_clusters, init, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.minibatchkmeans#sklearn.cluster.MiniBatchKMeans&quot;&gt; &lt;code&gt;cluster.MiniBatchKMeans&lt;/code&gt; &lt;/a&gt; ([n_clusters, init,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="8d931f327500840a4c90dd216d1b5b54e9cbb21e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.optics#sklearn.cluster.OPTICS&quot;&gt;&lt;code&gt;cluster.OPTICS&lt;/code&gt;&lt;/a&gt;(*[, min_samples, max_eps, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e749d11f936d893e5d4f0c8976005daaa94326c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.spectral_clustering#sklearn.cluster.spectral_clustering&quot;&gt;&lt;code&gt;cluster.spectral_clustering&lt;/code&gt;&lt;/a&gt;(affinity, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="118211338211806b2e2229ab17fd79c45195e168" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.spectral_clustering#sklearn.cluster.spectral_clustering&quot;&gt;&lt;code&gt;cluster.spectral_clustering&lt;/code&gt;&lt;/a&gt;(affinity[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.spectral_clustering#sklearn.cluster.spectral_clustering&quot;&gt; &lt;code&gt;cluster.spectral_clustering&lt;/code&gt; &lt;/a&gt; (afinidad [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="81209ef25ccdc0bb4e34504ace4a6adcd5c16832" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.spectralbiclustering#sklearn.cluster.SpectralBiclustering&quot;&gt;&lt;code&gt;cluster.SpectralBiclustering&lt;/code&gt;&lt;/a&gt;([n_clusters, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b976565f5f09c252f62f05d7ac51e340cb62fadf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.spectralclustering#sklearn.cluster.SpectralClustering&quot;&gt;&lt;code&gt;SpectralClustering&lt;/code&gt;&lt;/a&gt; does a low-dimension embedding of the affinity matrix between samples, followed by a KMeans in the low dimensional space. It is especially efficient if the affinity matrix is sparse and the &lt;a href=&quot;https://github.com/pyamg/pyamg&quot;&gt;pyamg&lt;/a&gt; module is installed. SpectralClustering requires the number of clusters to be specified. It works well for a small number of clusters but is not advised when using many clusters.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.spectralclustering#sklearn.cluster.SpectralClustering&quot;&gt; &lt;code&gt;SpectralClustering&lt;/code&gt; &lt;/a&gt; realiza una incrustaci&amp;oacute;n de baja dimensi&amp;oacute;n de la matriz de afinidad entre muestras, seguida de una KMeans en el espacio de baja dimensi&amp;oacute;n. Es especialmente eficaz si la matriz de afinidad es escasa y elm&amp;oacute;dulo&lt;a href=&quot;https://github.com/pyamg/pyamg&quot;&gt; pyamg&lt;/a&gt; est&amp;aacute; instalado. SpectralClustering requiere que se especifique el n&amp;uacute;mero de cl&amp;uacute;steres. Funciona bien para una peque&amp;ntilde;a cantidad de cl&amp;uacute;steres, pero no se recomienda cuando se utilizan muchos cl&amp;uacute;steres.</target>
        </trans-unit>
        <trans-unit id="43093513470a97aa5419cabeb064623359afb6bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.spectralclustering#sklearn.cluster.SpectralClustering&quot;&gt;&lt;code&gt;SpectralClustering&lt;/code&gt;&lt;/a&gt; performs a low-dimension embedding of the affinity matrix between samples, followed by clustering, e.g., by KMeans, of the components of the eigenvectors in the low dimensional space. It is especially computationally efficient if the affinity matrix is sparse and the &lt;code&gt;amg&lt;/code&gt; solver is used for the eigenvalue problem (Note, the &lt;code&gt;amg&lt;/code&gt; solver requires that the &lt;a href=&quot;https://github.com/pyamg/pyamg&quot;&gt;pyamg&lt;/a&gt; module is installed.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26d671ae70c6e355927e9bcd1ae32972c5d06461" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.spectralclustering#sklearn.cluster.SpectralClustering&quot;&gt;&lt;code&gt;cluster.SpectralClustering&lt;/code&gt;&lt;/a&gt;([n_clusters, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.spectralclustering#sklearn.cluster.SpectralClustering&quot;&gt; &lt;code&gt;cluster.SpectralClustering&lt;/code&gt; &lt;/a&gt; ([n_clusters,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="c63f27ed22a483504ca75e24893c4556a4072303" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.spectralcoclustering#sklearn.cluster.SpectralCoclustering&quot;&gt;&lt;code&gt;cluster.SpectralCoclustering&lt;/code&gt;&lt;/a&gt;([n_clusters, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b080576f568e68179262fc18639b3ed78b9e915d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.ward_tree#sklearn.cluster.ward_tree&quot;&gt;&lt;code&gt;cluster.ward_tree&lt;/code&gt;&lt;/a&gt;(X, *[, connectivity, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e817e7d25bf004469eb7f05074dcfae5a481b421" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cluster.ward_tree#sklearn.cluster.ward_tree&quot;&gt;&lt;code&gt;cluster.ward_tree&lt;/code&gt;&lt;/a&gt;(X[, connectivity, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cluster.ward_tree#sklearn.cluster.ward_tree&quot;&gt; &lt;code&gt;cluster.ward_tree&lt;/code&gt; &lt;/a&gt; (X [, conectividad,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="9cad5aada10cba5e17975e67a3ae8206ae6fb76e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.compose.columntransformer#sklearn.compose.ColumnTransformer&quot;&gt;&lt;code&gt;compose.ColumnTransformer&lt;/code&gt;&lt;/a&gt;(transformers, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="096575a0f141f71dde39613816f3ecddb55bf684" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.compose.columntransformer#sklearn.compose.ColumnTransformer&quot;&gt;&lt;code&gt;compose.ColumnTransformer&lt;/code&gt;&lt;/a&gt;(transformers[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.compose.columntransformer#sklearn.compose.ColumnTransformer&quot;&gt; &lt;code&gt;compose.ColumnTransformer&lt;/code&gt; &lt;/a&gt; (transformadores [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="50b6066ae638de9a68e1d737a3ac3e176f43b53d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.compose.make_column_selector#sklearn.compose.make_column_selector&quot;&gt;&lt;code&gt;compose.make_column_selector&lt;/code&gt;&lt;/a&gt;([pattern, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0648ff2b2824be8791be640933174004b4f10e84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.compose.make_column_transformer#sklearn.compose.make_column_transformer&quot;&gt;&lt;code&gt;compose.make_column_transformer&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.compose.make_column_transformer#sklearn.compose.make_column_transformer&quot;&gt;&lt;code&gt;compose.make_column_transformer&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="76b57b72face63d4309c1953da56bc8e424d2042" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.compose.transformedtargetregressor#sklearn.compose.TransformedTargetRegressor&quot;&gt;&lt;code&gt;TransformedTargetRegressor&lt;/code&gt;&lt;/a&gt; transforms the targets &lt;code&gt;y&lt;/code&gt; before fitting a regression model. The predictions are mapped back to the original space via an inverse transform. It takes as an argument the regressor that will be used for prediction, and the transformer that will be applied to the target variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4bf277c8a30bfb2c96321e65066f2ebe9272683" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.compose.transformedtargetregressor#sklearn.compose.TransformedTargetRegressor&quot;&gt;&lt;code&gt;compose.TransformedTargetRegressor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.compose.transformedtargetregressor#sklearn.compose.TransformedTargetRegressor&quot;&gt;&lt;code&gt;compose.TransformedTargetRegressor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="4aed4220e4b42c3ed2d4bd917a288d0319a7ba44" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.config_context#sklearn.config_context&quot;&gt;&lt;code&gt;config_context&lt;/code&gt;&lt;/a&gt;(**new_config)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.config_context#sklearn.config_context&quot;&gt;&lt;code&gt;config_context&lt;/code&gt;&lt;/a&gt;(**new_config)</target>
        </trans-unit>
        <trans-unit id="2b9e9ebab16e2d8d1aabc307b766b68b23ccc496" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.ellipticenvelope#sklearn.covariance.EllipticEnvelope&quot;&gt;&lt;code&gt;covariance.EllipticEnvelope&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00df1503d28926253ce5f11c8391ebc0bc277a86" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.ellipticenvelope#sklearn.covariance.EllipticEnvelope&quot;&gt;&lt;code&gt;covariance.EllipticEnvelope&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.covariance.ellipticenvelope#sklearn.covariance.EllipticEnvelope&quot;&gt;&lt;code&gt;covariance.EllipticEnvelope&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="640691ead99eaee6e0f16dabeca4f459fa7e4523" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.empirical_covariance#sklearn.covariance.empirical_covariance&quot;&gt;&lt;code&gt;covariance.empirical_covariance&lt;/code&gt;&lt;/a&gt;(X, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e51d82fb6a39c7387507567406805e37ab28de0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.empirical_covariance#sklearn.covariance.empirical_covariance&quot;&gt;&lt;code&gt;covariance.empirical_covariance&lt;/code&gt;&lt;/a&gt;(X[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.covariance.empirical_covariance#sklearn.covariance.empirical_covariance&quot;&gt; &lt;code&gt;covariance.empirical_covariance&lt;/code&gt; &lt;/a&gt; (X [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="70b3ecf4c3c3ab6a7bd278fd8ac09429af075047" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.empiricalcovariance#sklearn.covariance.EmpiricalCovariance&quot;&gt;&lt;code&gt;covariance.EmpiricalCovariance&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bffe4464c32b2598543950605e726dd21383baef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.empiricalcovariance#sklearn.covariance.EmpiricalCovariance&quot;&gt;&lt;code&gt;covariance.EmpiricalCovariance&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.covariance.empiricalcovariance#sklearn.covariance.EmpiricalCovariance&quot;&gt;&lt;code&gt;covariance.EmpiricalCovariance&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="0a61c16d7173244f321ed792c90a623f18effb4b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.graph_lasso#sklearn.covariance.graph_lasso&quot;&gt;&lt;code&gt;covariance.graph_lasso&lt;/code&gt;&lt;/a&gt;(emp_cov, alpha[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.covariance.graph_lasso#sklearn.covariance.graph_lasso&quot;&gt; &lt;code&gt;covariance.graph_lasso&lt;/code&gt; &lt;/a&gt; (emp_cov, alpha [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="a4a99c8d06b9751f6e81a34e386b5bfe401d12fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.graphical_lasso#sklearn.covariance.graphical_lasso&quot;&gt;&lt;code&gt;covariance.graphical_lasso&lt;/code&gt;&lt;/a&gt;(emp_cov, alpha, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59e347689901e4a41ae6912e00dfffd8e9ab4b89" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.graphical_lasso#sklearn.covariance.graphical_lasso&quot;&gt;&lt;code&gt;covariance.graphical_lasso&lt;/code&gt;&lt;/a&gt;(emp_cov, alpha[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.covariance.graphical_lasso#sklearn.covariance.graphical_lasso&quot;&gt; &lt;code&gt;covariance.graphical_lasso&lt;/code&gt; &lt;/a&gt; (emp_cov, alpha [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="c278cb012eda13c7c6937bff77a2ef7959eba33a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.graphicallasso#sklearn.covariance.GraphicalLasso&quot;&gt;&lt;code&gt;covariance.GraphicalLasso&lt;/code&gt;&lt;/a&gt;([alpha, mode, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.covariance.graphicallasso#sklearn.covariance.GraphicalLasso&quot;&gt; &lt;code&gt;covariance.GraphicalLasso&lt;/code&gt; &lt;/a&gt; ([alpha, mode,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="39a9a6ab78e314bc34d6825ab2517dc2f521ecf8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.graphicallassocv#sklearn.covariance.GraphicalLassoCV&quot;&gt;&lt;code&gt;covariance.GraphicalLassoCV&lt;/code&gt;&lt;/a&gt;(*[, alphas, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bfd18b1f59533f8e5de3e040fb6794bf1cd00d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.graphicallassocv#sklearn.covariance.GraphicalLassoCV&quot;&gt;&lt;code&gt;covariance.GraphicalLassoCV&lt;/code&gt;&lt;/a&gt;([alphas, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.covariance.graphicallassocv#sklearn.covariance.GraphicalLassoCV&quot;&gt; &lt;code&gt;covariance.GraphicalLassoCV&lt;/code&gt; &lt;/a&gt; ([alphas,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="b4b7e66cbeaa9014a0120b7d004eb9dba492015e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.graphlasso#sklearn.covariance.GraphLasso&quot;&gt;&lt;code&gt;covariance.GraphLasso&lt;/code&gt;&lt;/a&gt;(*args, **kwargs)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.covariance.graphlasso#sklearn.covariance.GraphLasso&quot;&gt; &lt;code&gt;covariance.GraphLasso&lt;/code&gt; &lt;/a&gt; (* args, ** kwargs)</target>
        </trans-unit>
        <trans-unit id="92c0ee3b069a9818bbd2168463c28ca4589a56f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.graphlassocv#sklearn.covariance.GraphLassoCV&quot;&gt;&lt;code&gt;covariance.GraphLassoCV&lt;/code&gt;&lt;/a&gt;(*args, **kwargs)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.covariance.graphlassocv#sklearn.covariance.GraphLassoCV&quot;&gt; &lt;code&gt;covariance.GraphLassoCV&lt;/code&gt; &lt;/a&gt; (* args, ** kwargs)</target>
        </trans-unit>
        <trans-unit id="26137e2b5d7dd579ba12fb7944070f72f33fe7e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.ledoit_wolf#sklearn.covariance.ledoit_wolf&quot;&gt;&lt;code&gt;covariance.ledoit_wolf&lt;/code&gt;&lt;/a&gt;(X, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ac790647f7ea5751f1ee3e35690c92d04c87a5f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.ledoit_wolf#sklearn.covariance.ledoit_wolf&quot;&gt;&lt;code&gt;covariance.ledoit_wolf&lt;/code&gt;&lt;/a&gt;(X[, assume_centered, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.covariance.ledoit_wolf#sklearn.covariance.ledoit_wolf&quot;&gt; &lt;code&gt;covariance.ledoit_wolf&lt;/code&gt; &lt;/a&gt; (X [, asumir_centrado,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="a7870814aa5dc78a3f5da183c0b769464fabd204" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.ledoitwolf#sklearn.covariance.LedoitWolf&quot;&gt;&lt;code&gt;covariance.LedoitWolf&lt;/code&gt;&lt;/a&gt;(*[, store_precision, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bfd336335e7c128e08d42fda8342ce13642fb2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.ledoitwolf#sklearn.covariance.LedoitWolf&quot;&gt;&lt;code&gt;covariance.LedoitWolf&lt;/code&gt;&lt;/a&gt;([store_precision, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.covariance.ledoitwolf#sklearn.covariance.LedoitWolf&quot;&gt; &lt;code&gt;covariance.LedoitWolf&lt;/code&gt; &lt;/a&gt; ([store_precision,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="ccc7255f46f84ba6924f8d9a6e552f88fe8e2ebc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.mincovdet#sklearn.covariance.MinCovDet&quot;&gt;&lt;code&gt;covariance.MinCovDet&lt;/code&gt;&lt;/a&gt;(*[, store_precision, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e50236ea9e91a91915bcf880b7575b572c19ca9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.mincovdet#sklearn.covariance.MinCovDet&quot;&gt;&lt;code&gt;covariance.MinCovDet&lt;/code&gt;&lt;/a&gt;([store_precision, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.covariance.mincovdet#sklearn.covariance.MinCovDet&quot;&gt; &lt;code&gt;covariance.MinCovDet&lt;/code&gt; &lt;/a&gt; ([store_precision,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="9441695823c6d42a3be0c52ef4fbef2dc5c9db81" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.oas#sklearn.covariance.OAS&quot;&gt;&lt;code&gt;covariance.OAS&lt;/code&gt;&lt;/a&gt;(*[, store_precision, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="778d71808300afebbe7905fb9e2c3e1f024fecb1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.oas#sklearn.covariance.OAS&quot;&gt;&lt;code&gt;covariance.OAS&lt;/code&gt;&lt;/a&gt;([store_precision, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.covariance.oas#sklearn.covariance.OAS&quot;&gt; &lt;code&gt;covariance.OAS&lt;/code&gt; &lt;/a&gt; ([store_precision,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="81031c872fae9a21af70372c06e8f5cba1a835cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.oas#sklearn.covariance.oas&quot;&gt;&lt;code&gt;covariance.oas&lt;/code&gt;&lt;/a&gt;(X, *[, assume_centered])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8367ebb53b65c33634c4ec1461a98c3024651db6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.oas#sklearn.covariance.oas&quot;&gt;&lt;code&gt;covariance.oas&lt;/code&gt;&lt;/a&gt;(X[, assume_centered])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.covariance.oas#sklearn.covariance.oas&quot;&gt; &lt;code&gt;covariance.oas&lt;/code&gt; &lt;/a&gt; (X [, asume_centrado])</target>
        </trans-unit>
        <trans-unit id="74c5dc944b25ce84eb46ec49143be4e7b992cd18" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.shrunk_covariance#sklearn.covariance.shrunk_covariance&quot;&gt;&lt;code&gt;covariance.shrunk_covariance&lt;/code&gt;&lt;/a&gt;(emp_cov[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.covariance.shrunk_covariance#sklearn.covariance.shrunk_covariance&quot;&gt; &lt;code&gt;covariance.shrunk_covariance&lt;/code&gt; &lt;/a&gt; (emp_cov [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="c948fb8dc5c48868f34308cd8c39d2e759eb6f21" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.shrunkcovariance#sklearn.covariance.ShrunkCovariance&quot;&gt;&lt;code&gt;covariance.ShrunkCovariance&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d18617e558345e96bc6cda6646dc16f5bbd95636" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.covariance.shrunkcovariance#sklearn.covariance.ShrunkCovariance&quot;&gt;&lt;code&gt;covariance.ShrunkCovariance&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.covariance.shrunkcovariance#sklearn.covariance.ShrunkCovariance&quot;&gt;&lt;code&gt;covariance.ShrunkCovariance&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="a9496909d61a774d9fd6d5aa247b28e7c9343e90" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cross_decomposition.cca#sklearn.cross_decomposition.CCA&quot;&gt;&lt;code&gt;cross_decomposition.CCA&lt;/code&gt;&lt;/a&gt;([n_components, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cross_decomposition.cca#sklearn.cross_decomposition.CCA&quot;&gt; &lt;code&gt;cross_decomposition.CCA&lt;/code&gt; &lt;/a&gt; ([n_components,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="1569a76a4c1dfa292545a391d0b79eacf2b8c215" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cross_decomposition.plscanonical#sklearn.cross_decomposition.PLSCanonical&quot;&gt;&lt;code&gt;cross_decomposition.PLSCanonical&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cross_decomposition.plscanonical#sklearn.cross_decomposition.PLSCanonical&quot;&gt;&lt;code&gt;cross_decomposition.PLSCanonical&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="4a3c618e1fd201f96e0f07d252adf3f0d1b8f480" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cross_decomposition.plsregression#sklearn.cross_decomposition.PLSRegression&quot;&gt;&lt;code&gt;cross_decomposition.PLSRegression&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cross_decomposition.plsregression#sklearn.cross_decomposition.PLSRegression&quot;&gt;&lt;code&gt;cross_decomposition.PLSRegression&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="e70394d8bdd125600bd0cd739da22c36cf2fb802" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.cross_decomposition.plssvd#sklearn.cross_decomposition.PLSSVD&quot;&gt;&lt;code&gt;cross_decomposition.PLSSVD&lt;/code&gt;&lt;/a&gt;([n_components, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.cross_decomposition.plssvd#sklearn.cross_decomposition.PLSSVD&quot;&gt; &lt;code&gt;cross_decomposition.PLSSVD&lt;/code&gt; &lt;/a&gt; ([n_components,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="58d4832ce114e3199c7d3fe8ff0a7822c241ad9e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.clear_data_home#sklearn.datasets.clear_data_home&quot;&gt;&lt;code&gt;datasets.clear_data_home&lt;/code&gt;&lt;/a&gt;([data_home])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.clear_data_home#sklearn.datasets.clear_data_home&quot;&gt;&lt;code&gt;datasets.clear_data_home&lt;/code&gt;&lt;/a&gt;([data_home])</target>
        </trans-unit>
        <trans-unit id="c5bb808d40edb6b2a67195311d32607811cf5913" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.dump_svmlight_file#sklearn.datasets.dump_svmlight_file&quot;&gt;&lt;code&gt;datasets.dump_svmlight_file&lt;/code&gt;&lt;/a&gt;(X, y, f, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="921af65675cdf15a546fa8856e235a9b132eaa08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.dump_svmlight_file#sklearn.datasets.dump_svmlight_file&quot;&gt;&lt;code&gt;datasets.dump_svmlight_file&lt;/code&gt;&lt;/a&gt;(X, y, f[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.dump_svmlight_file#sklearn.datasets.dump_svmlight_file&quot;&gt; &lt;code&gt;datasets.dump_svmlight_file&lt;/code&gt; &lt;/a&gt; (X, y, f [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="bd9ca651bf531f85b56037c095c24bdb628961d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_20newsgroups#sklearn.datasets.fetch_20newsgroups&quot;&gt;&lt;code&gt;datasets.fetch_20newsgroups&lt;/code&gt;&lt;/a&gt;(*[, data_home, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65478566490dc47a2145e3a48a4a1ccd33f2b635" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_20newsgroups#sklearn.datasets.fetch_20newsgroups&quot;&gt;&lt;code&gt;datasets.fetch_20newsgroups&lt;/code&gt;&lt;/a&gt;([data_home, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.fetch_20newsgroups#sklearn.datasets.fetch_20newsgroups&quot;&gt; &lt;code&gt;datasets.fetch_20newsgroups&lt;/code&gt; &lt;/a&gt; ([inicio_datos,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="d617d147157f8bd223a413c6d54171e6943e3da9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_20newsgroups_vectorized#sklearn.datasets.fetch_20newsgroups_vectorized&quot;&gt;&lt;code&gt;datasets.fetch_20newsgroups_vectorized&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21877412be208e763d404a09ac853c173fe978ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_20newsgroups_vectorized#sklearn.datasets.fetch_20newsgroups_vectorized&quot;&gt;&lt;code&gt;datasets.fetch_20newsgroups_vectorized&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.fetch_20newsgroups_vectorized#sklearn.datasets.fetch_20newsgroups_vectorized&quot;&gt;&lt;code&gt;datasets.fetch_20newsgroups_vectorized&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="ad7a189784aa378b24ec0fab1149438181f545a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_california_housing#sklearn.datasets.fetch_california_housing&quot;&gt;&lt;code&gt;datasets.fetch_california_housing&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d60ae467543ca83d24b19fb13f982ff98760ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_california_housing#sklearn.datasets.fetch_california_housing&quot;&gt;&lt;code&gt;datasets.fetch_california_housing&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.fetch_california_housing#sklearn.datasets.fetch_california_housing&quot;&gt;&lt;code&gt;datasets.fetch_california_housing&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="05dbd64250a4d21b9c1bc11b24ffde1f9778295d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_covtype#sklearn.datasets.fetch_covtype&quot;&gt;&lt;code&gt;datasets.fetch_covtype&lt;/code&gt;&lt;/a&gt;(*[, data_home, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb9cb8f573c667488959ecbc1c4b9afa78e77950" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_covtype#sklearn.datasets.fetch_covtype&quot;&gt;&lt;code&gt;datasets.fetch_covtype&lt;/code&gt;&lt;/a&gt;([data_home, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.fetch_covtype#sklearn.datasets.fetch_covtype&quot;&gt; &lt;code&gt;datasets.fetch_covtype&lt;/code&gt; &lt;/a&gt; ([inicio_datos,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="d47bc71db3af04a3eaf9f6697bb298ca8ad6a0b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_kddcup99#sklearn.datasets.fetch_kddcup99&quot;&gt;&lt;code&gt;datasets.fetch_kddcup99&lt;/code&gt;&lt;/a&gt;(*[, subset, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39c310f9ba89333cbb1505650f03e37fc1f18421" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_kddcup99#sklearn.datasets.fetch_kddcup99&quot;&gt;&lt;code&gt;datasets.fetch_kddcup99&lt;/code&gt;&lt;/a&gt;([subset, data_home, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.fetch_kddcup99#sklearn.datasets.fetch_kddcup99&quot;&gt; &lt;code&gt;datasets.fetch_kddcup99&lt;/code&gt; &lt;/a&gt; ([subconjunto, inicio_datos,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="54e8ccb67dd406615a2ece0baa8bc081ffaaac70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_lfw_pairs#sklearn.datasets.fetch_lfw_pairs&quot;&gt;&lt;code&gt;datasets.fetch_lfw_pairs&lt;/code&gt;&lt;/a&gt;(*[, subset, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f97364c2f96b1e8c0f27303d3572837a7eb2f59b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_lfw_pairs#sklearn.datasets.fetch_lfw_pairs&quot;&gt;&lt;code&gt;datasets.fetch_lfw_pairs&lt;/code&gt;&lt;/a&gt;([subset, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.fetch_lfw_pairs#sklearn.datasets.fetch_lfw_pairs&quot;&gt; &lt;code&gt;datasets.fetch_lfw_pairs&lt;/code&gt; &lt;/a&gt; ([subconjunto,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="7f02635ba6c110b4d68b9649d80f4a066b8dd2b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_lfw_people#sklearn.datasets.fetch_lfw_people&quot;&gt;&lt;code&gt;datasets.fetch_lfw_people&lt;/code&gt;&lt;/a&gt;(*[, data_home, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="770073e22334f1a88609409f8ba0799598a3a61a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_lfw_people#sklearn.datasets.fetch_lfw_people&quot;&gt;&lt;code&gt;datasets.fetch_lfw_people&lt;/code&gt;&lt;/a&gt;([data_home, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.fetch_lfw_people#sklearn.datasets.fetch_lfw_people&quot;&gt; &lt;code&gt;datasets.fetch_lfw_people&lt;/code&gt; &lt;/a&gt; ([data_home,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="b922020a2a8822cb8426ed59f95785c76e01bd13" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_mldata#sklearn.datasets.fetch_mldata&quot;&gt;&lt;code&gt;datasets.fetch_mldata&lt;/code&gt;&lt;/a&gt;(dataname[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.fetch_mldata#sklearn.datasets.fetch_mldata&quot;&gt; &lt;code&gt;datasets.fetch_mldata&lt;/code&gt; &lt;/a&gt; (nombre de datos [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="2e514209dcb521e11d84fb79349b73a79b6115d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_olivetti_faces#sklearn.datasets.fetch_olivetti_faces&quot;&gt;&lt;code&gt;datasets.fetch_olivetti_faces&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9384ded44c0c46b5ba4947af230975d25830ad5b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_olivetti_faces#sklearn.datasets.fetch_olivetti_faces&quot;&gt;&lt;code&gt;datasets.fetch_olivetti_faces&lt;/code&gt;&lt;/a&gt;([data_home, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.fetch_olivetti_faces#sklearn.datasets.fetch_olivetti_faces&quot;&gt; &lt;code&gt;datasets.fetch_olivetti_faces&lt;/code&gt; &lt;/a&gt; ([data_home,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="263ea682af63c9985dbf2a57b593291a27a643ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_openml#sklearn.datasets.fetch_openml&quot;&gt;&lt;code&gt;datasets.fetch_openml&lt;/code&gt;&lt;/a&gt;([name, version, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.fetch_openml#sklearn.datasets.fetch_openml&quot;&gt; &lt;code&gt;datasets.fetch_openml&lt;/code&gt; &lt;/a&gt; ([nombre, versi&amp;oacute;n,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="b01439b3d65013420bb6f1899ae13b7c05c55076" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_rcv1#sklearn.datasets.fetch_rcv1&quot;&gt;&lt;code&gt;datasets.fetch_rcv1&lt;/code&gt;&lt;/a&gt;(*[, data_home, subset, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86c178c9ab3e427095f5c8106931c5ca73a09118" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_rcv1#sklearn.datasets.fetch_rcv1&quot;&gt;&lt;code&gt;datasets.fetch_rcv1&lt;/code&gt;&lt;/a&gt;([data_home, subset, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.fetch_rcv1#sklearn.datasets.fetch_rcv1&quot;&gt; &lt;code&gt;datasets.fetch_rcv1&lt;/code&gt; &lt;/a&gt; ([inicio_datos, subconjunto,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="abcc84c8105b00d8cf4035e8c3ed06abdd9f0413" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_species_distributions#sklearn.datasets.fetch_species_distributions&quot;&gt;&lt;code&gt;datasets.fetch_species_distributions&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5277328e627134a7f6776c7b59466f115caab182" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.fetch_species_distributions#sklearn.datasets.fetch_species_distributions&quot;&gt;&lt;code&gt;datasets.fetch_species_distributions&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.fetch_species_distributions#sklearn.datasets.fetch_species_distributions&quot;&gt;&lt;code&gt;datasets.fetch_species_distributions&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="18d8577ff27f8c99666cd13dab92c8c26a6458a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.get_data_home#sklearn.datasets.get_data_home&quot;&gt;&lt;code&gt;datasets.get_data_home&lt;/code&gt;&lt;/a&gt;([data_home])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.get_data_home#sklearn.datasets.get_data_home&quot;&gt;&lt;code&gt;datasets.get_data_home&lt;/code&gt;&lt;/a&gt;([data_home])</target>
        </trans-unit>
        <trans-unit id="da1fd4531c33f9aa76976e71cdbb9312e5489f76" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_boston#sklearn.datasets.load_boston&quot;&gt;&lt;code&gt;datasets.load_boston&lt;/code&gt;&lt;/a&gt;(*[, return_X_y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b107fda677d1acc9bf95a83b0f33be296bec6dc1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_boston#sklearn.datasets.load_boston&quot;&gt;&lt;code&gt;datasets.load_boston&lt;/code&gt;&lt;/a&gt;([return_X_y])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.load_boston#sklearn.datasets.load_boston&quot;&gt;&lt;code&gt;datasets.load_boston&lt;/code&gt;&lt;/a&gt;([return_X_y])</target>
        </trans-unit>
        <trans-unit id="207fdbd8880481d5e2a9f7227b0b854efaa3b0b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_breast_cancer#sklearn.datasets.load_breast_cancer&quot;&gt;&lt;code&gt;datasets.load_breast_cancer&lt;/code&gt;&lt;/a&gt;(*[, return_X_y, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33f488d33ee8da669d0ae9fb394f4e08f422c5af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_breast_cancer#sklearn.datasets.load_breast_cancer&quot;&gt;&lt;code&gt;datasets.load_breast_cancer&lt;/code&gt;&lt;/a&gt;([return_X_y])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.load_breast_cancer#sklearn.datasets.load_breast_cancer&quot;&gt;&lt;code&gt;datasets.load_breast_cancer&lt;/code&gt;&lt;/a&gt;([return_X_y])</target>
        </trans-unit>
        <trans-unit id="e0b4e36abb42db5cd984f9fa265a0d2a47e7720a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_diabetes#sklearn.datasets.load_diabetes&quot;&gt;&lt;code&gt;datasets.load_diabetes&lt;/code&gt;&lt;/a&gt;(*[, return_X_y, as_frame])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fed9668198374a859f950024783ccc5f0f9ccede" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_diabetes#sklearn.datasets.load_diabetes&quot;&gt;&lt;code&gt;datasets.load_diabetes&lt;/code&gt;&lt;/a&gt;([return_X_y])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.load_diabetes#sklearn.datasets.load_diabetes&quot;&gt;&lt;code&gt;datasets.load_diabetes&lt;/code&gt;&lt;/a&gt;([return_X_y])</target>
        </trans-unit>
        <trans-unit id="0b7e5343786ec0bc959a43d1512dfadcd95196b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_digits#sklearn.datasets.load_digits&quot;&gt;&lt;code&gt;datasets.load_digits&lt;/code&gt;&lt;/a&gt;(*[, n_class, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eec480f3bdf9cde1f42496d15748048c9383a7d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_digits#sklearn.datasets.load_digits&quot;&gt;&lt;code&gt;datasets.load_digits&lt;/code&gt;&lt;/a&gt;([n_class, return_X_y])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.load_digits#sklearn.datasets.load_digits&quot;&gt; &lt;code&gt;datasets.load_digits&lt;/code&gt; &lt;/a&gt; ([n_clase, retorno_X_y])</target>
        </trans-unit>
        <trans-unit id="27ae691192a71da0c5c064f0b0369d7ca32405c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_files#sklearn.datasets.load_files&quot;&gt;&lt;code&gt;datasets.load_files&lt;/code&gt;&lt;/a&gt;(container_path, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba3183dc22d35a732df9072f7ccc717ed03dc649" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_files#sklearn.datasets.load_files&quot;&gt;&lt;code&gt;datasets.load_files&lt;/code&gt;&lt;/a&gt;(container_path[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.load_files#sklearn.datasets.load_files&quot;&gt; &lt;code&gt;datasets.load_files&lt;/code&gt; &lt;/a&gt; (container_path [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="f41b4a5c24b316f218c450c3411e0fdb1ad4542d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_iris#sklearn.datasets.load_iris&quot;&gt;&lt;code&gt;datasets.load_iris&lt;/code&gt;&lt;/a&gt;(*[, return_X_y, as_frame])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4e4a25343b011892c53c76f421e02103a3323fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_iris#sklearn.datasets.load_iris&quot;&gt;&lt;code&gt;datasets.load_iris&lt;/code&gt;&lt;/a&gt;([return_X_y])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.load_iris#sklearn.datasets.load_iris&quot;&gt;&lt;code&gt;datasets.load_iris&lt;/code&gt;&lt;/a&gt;([return_X_y])</target>
        </trans-unit>
        <trans-unit id="59b3c1bd83a869ed097c743fbdb6c5657f72e34b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_linnerud#sklearn.datasets.load_linnerud&quot;&gt;&lt;code&gt;datasets.load_linnerud&lt;/code&gt;&lt;/a&gt;(*[, return_X_y, as_frame])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f34fe08c89a7e25b54f668762979e4bf9cabbe20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_linnerud#sklearn.datasets.load_linnerud&quot;&gt;&lt;code&gt;datasets.load_linnerud&lt;/code&gt;&lt;/a&gt;([return_X_y])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.load_linnerud#sklearn.datasets.load_linnerud&quot;&gt;&lt;code&gt;datasets.load_linnerud&lt;/code&gt;&lt;/a&gt;([return_X_y])</target>
        </trans-unit>
        <trans-unit id="652598dc1c6c0db87dcea42be5e3c6d28f7d3270" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_mlcomp#sklearn.datasets.load_mlcomp&quot;&gt;&lt;code&gt;datasets.load_mlcomp&lt;/code&gt;&lt;/a&gt;(name_or_id[, set_, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.load_mlcomp#sklearn.datasets.load_mlcomp&quot;&gt; &lt;code&gt;datasets.load_mlcomp&lt;/code&gt; &lt;/a&gt; (name_or_id [, set_,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="81d606304c84c4163295ac7455558baac5ccae34" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_sample_image#sklearn.datasets.load_sample_image&quot;&gt;&lt;code&gt;datasets.load_sample_image&lt;/code&gt;&lt;/a&gt;(image_name)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.load_sample_image#sklearn.datasets.load_sample_image&quot;&gt;&lt;code&gt;datasets.load_sample_image&lt;/code&gt;&lt;/a&gt;(image_name)</target>
        </trans-unit>
        <trans-unit id="9faa7d0b7dc3b4fb46ad6a06ef936b589057c8e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_sample_images#sklearn.datasets.load_sample_images&quot;&gt;&lt;code&gt;datasets.load_sample_images&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.load_sample_images#sklearn.datasets.load_sample_images&quot;&gt;&lt;code&gt;datasets.load_sample_images&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="5a3064291e7c1bc10402e0af7e4f71072e911444" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_svmlight_file#sklearn.datasets.load_svmlight_file&quot;&gt;&lt;code&gt;datasets.load_svmlight_file&lt;/code&gt;&lt;/a&gt;(f, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0115827e9a8f73b7ceaa75daf74e9b7449a55db4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_svmlight_file#sklearn.datasets.load_svmlight_file&quot;&gt;&lt;code&gt;datasets.load_svmlight_file&lt;/code&gt;&lt;/a&gt;(f[, n_features, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.load_svmlight_file#sklearn.datasets.load_svmlight_file&quot;&gt; &lt;code&gt;datasets.load_svmlight_file&lt;/code&gt; &lt;/a&gt; (f [, n_features,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="bb339ff49c53d29436bac3c5574629d71d2b2a30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_svmlight_files#sklearn.datasets.load_svmlight_files&quot;&gt;&lt;code&gt;datasets.load_svmlight_files&lt;/code&gt;&lt;/a&gt;(files, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="406ad6345331d52f40fbd9283b553fa1ce2aef64" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_svmlight_files#sklearn.datasets.load_svmlight_files&quot;&gt;&lt;code&gt;datasets.load_svmlight_files&lt;/code&gt;&lt;/a&gt;(files[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.load_svmlight_files#sklearn.datasets.load_svmlight_files&quot;&gt; &lt;code&gt;datasets.load_svmlight_files&lt;/code&gt; &lt;/a&gt; (archivos [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="ed4e98c207e3de6fa57e890175ae58a9db63585b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_wine#sklearn.datasets.load_wine&quot;&gt;&lt;code&gt;datasets.load_wine&lt;/code&gt;&lt;/a&gt;(*[, return_X_y, as_frame])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37b7f2eebfd726ed333e9c28361042f0ed71b8f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.load_wine#sklearn.datasets.load_wine&quot;&gt;&lt;code&gt;datasets.load_wine&lt;/code&gt;&lt;/a&gt;([return_X_y])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.load_wine#sklearn.datasets.load_wine&quot;&gt;&lt;code&gt;datasets.load_wine&lt;/code&gt;&lt;/a&gt;([return_X_y])</target>
        </trans-unit>
        <trans-unit id="2f9709494d91cd998f4764746a72c7bbe376f5c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_biclusters#sklearn.datasets.make_biclusters&quot;&gt;&lt;code&gt;datasets.make_biclusters&lt;/code&gt;&lt;/a&gt;(shape, n_clusters)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_biclusters#sklearn.datasets.make_biclusters&quot;&gt; &lt;code&gt;datasets.make_biclusters&lt;/code&gt; &lt;/a&gt; (forma, n_clusters)</target>
        </trans-unit>
        <trans-unit id="b80a309e19372509326d10fc32050e9d37c8c8d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_biclusters#sklearn.datasets.make_biclusters&quot;&gt;&lt;code&gt;datasets.make_biclusters&lt;/code&gt;&lt;/a&gt;(shape, n_clusters, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf85ec98b171f3d0e2644d2b2a3c9e4725029c17" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_blobs#sklearn.datasets.make_blobs&quot;&gt;&lt;code&gt;datasets.make_blobs&lt;/code&gt;&lt;/a&gt;([n_samples, n_features, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_blobs#sklearn.datasets.make_blobs&quot;&gt; &lt;code&gt;datasets.make_blobs&lt;/code&gt; &lt;/a&gt; ([n_samples, n_features,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="211c74bfe11253011e727d89c7f0c0da35f86537" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_checkerboard#sklearn.datasets.make_checkerboard&quot;&gt;&lt;code&gt;datasets.make_checkerboard&lt;/code&gt;&lt;/a&gt;(shape, n_clusters)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_checkerboard#sklearn.datasets.make_checkerboard&quot;&gt; &lt;code&gt;datasets.make_checkerboard&lt;/code&gt; &lt;/a&gt; (forma, n_clusters)</target>
        </trans-unit>
        <trans-unit id="34885e5c2ab6f5922c46d6e86d836a04a04f120f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_checkerboard#sklearn.datasets.make_checkerboard&quot;&gt;&lt;code&gt;datasets.make_checkerboard&lt;/code&gt;&lt;/a&gt;(shape, n_clusters, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e2cad03353f800bd77a9d3b0bc13f9ead36398f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_circles#sklearn.datasets.make_circles&quot;&gt;&lt;code&gt;datasets.make_circles&lt;/code&gt;&lt;/a&gt;([n_samples, shuffle, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_circles#sklearn.datasets.make_circles&quot;&gt; &lt;code&gt;datasets.make_circles&lt;/code&gt; &lt;/a&gt; ([n_samples, shuffle,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="70bee3892f94a181a84b4f53bf3730ab2c70b890" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_classification#sklearn.datasets.make_classification&quot;&gt;&lt;code&gt;datasets.make_classification&lt;/code&gt;&lt;/a&gt;([n_samples, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_classification#sklearn.datasets.make_classification&quot;&gt; &lt;code&gt;datasets.make_classification&lt;/code&gt; &lt;/a&gt; ([n_samples,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="2bb6498162fcd4904b00b74436fe62165d37fd60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_friedman1#sklearn.datasets.make_friedman1&quot;&gt;&lt;code&gt;datasets.make_friedman1&lt;/code&gt;&lt;/a&gt;([n_samples, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_friedman1#sklearn.datasets.make_friedman1&quot;&gt; &lt;code&gt;datasets.make_friedman1&lt;/code&gt; &lt;/a&gt; ([n_samples,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="ead982c9efa3eb84f84413098686df0c62d6ced3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_friedman2#sklearn.datasets.make_friedman2&quot;&gt;&lt;code&gt;datasets.make_friedman2&lt;/code&gt;&lt;/a&gt;([n_samples, noise, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_friedman2#sklearn.datasets.make_friedman2&quot;&gt; &lt;code&gt;datasets.make_friedman2&lt;/code&gt; &lt;/a&gt; ([n_samples, noise,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="2067cdc0697632a2e4dedac4f38ba8320018301a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_friedman3#sklearn.datasets.make_friedman3&quot;&gt;&lt;code&gt;datasets.make_friedman3&lt;/code&gt;&lt;/a&gt;([n_samples, noise, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_friedman3#sklearn.datasets.make_friedman3&quot;&gt; &lt;code&gt;datasets.make_friedman3&lt;/code&gt; &lt;/a&gt; ([n_samples, noise,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="7981d85b27302b6659cec7f63370787b767feda3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_gaussian_quantiles#sklearn.datasets.make_gaussian_quantiles&quot;&gt;&lt;code&gt;datasets.make_gaussian_quantiles&lt;/code&gt;&lt;/a&gt;(*[, mean, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee171e7d4a72e9733fb29bd347a162d3ece8b27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_gaussian_quantiles#sklearn.datasets.make_gaussian_quantiles&quot;&gt;&lt;code&gt;datasets.make_gaussian_quantiles&lt;/code&gt;&lt;/a&gt;([mean, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_gaussian_quantiles#sklearn.datasets.make_gaussian_quantiles&quot;&gt; &lt;code&gt;datasets.make_gaussian_quantiles&lt;/code&gt; &lt;/a&gt; ([media,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="05a0f087adb4c6d1b83727115b3521d98a198828" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_hastie_10_2#sklearn.datasets.make_hastie_10_2&quot;&gt;&lt;code&gt;datasets.make_hastie_10_2&lt;/code&gt;&lt;/a&gt;([n_samples, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_hastie_10_2#sklearn.datasets.make_hastie_10_2&quot;&gt; &lt;code&gt;datasets.make_hastie_10_2&lt;/code&gt; &lt;/a&gt; ([n_samples,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="6f969e5f5f2a05f6145004039a256ee3d233f904" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_low_rank_matrix#sklearn.datasets.make_low_rank_matrix&quot;&gt;&lt;code&gt;datasets.make_low_rank_matrix&lt;/code&gt;&lt;/a&gt;([n_samples, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_low_rank_matrix#sklearn.datasets.make_low_rank_matrix&quot;&gt; &lt;code&gt;datasets.make_low_rank_matrix&lt;/code&gt; &lt;/a&gt; ([n_samples,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="985925136f65e7fc7c40bef1d880c24dbe2ae298" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_moons#sklearn.datasets.make_moons&quot;&gt;&lt;code&gt;datasets.make_moons&lt;/code&gt;&lt;/a&gt;([n_samples, shuffle, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_moons#sklearn.datasets.make_moons&quot;&gt; &lt;code&gt;datasets.make_moons&lt;/code&gt; &lt;/a&gt; ([n_samples, shuffle,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="2fa49dede815ade63674aca5d280514728c5e0a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_multilabel_classification#sklearn.datasets.make_multilabel_classification&quot;&gt;&lt;code&gt;datasets.make_multilabel_classification&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_multilabel_classification#sklearn.datasets.make_multilabel_classification&quot;&gt;&lt;code&gt;datasets.make_multilabel_classification&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="0562a9e71e973cd426769084db009622daaf956a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_regression#sklearn.datasets.make_regression&quot;&gt;&lt;code&gt;datasets.make_regression&lt;/code&gt;&lt;/a&gt;([n_samples, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_regression#sklearn.datasets.make_regression&quot;&gt; &lt;code&gt;datasets.make_regression&lt;/code&gt; &lt;/a&gt; ([n_samples,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="c6ec6b2c034582bae9622d06ce42f5c8b0c15b8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_s_curve#sklearn.datasets.make_s_curve&quot;&gt;&lt;code&gt;datasets.make_s_curve&lt;/code&gt;&lt;/a&gt;([n_samples, noise, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_s_curve#sklearn.datasets.make_s_curve&quot;&gt; &lt;code&gt;datasets.make_s_curve&lt;/code&gt; &lt;/a&gt; ([n_samples, noise,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="a05b26e420d8fedd519f80534e5450850abb35b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_sparse_coded_signal#sklearn.datasets.make_sparse_coded_signal&quot;&gt;&lt;code&gt;datasets.make_sparse_coded_signal&lt;/code&gt;&lt;/a&gt;(n_samples, &amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_sparse_coded_signal#sklearn.datasets.make_sparse_coded_signal&quot;&gt; &lt;code&gt;datasets.make_sparse_coded_signal&lt;/code&gt; &lt;/a&gt; (n_samples,&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="b2c40a4e55da5ea5b60e6ed21a93220fcef602a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_sparse_spd_matrix#sklearn.datasets.make_sparse_spd_matrix&quot;&gt;&lt;code&gt;datasets.make_sparse_spd_matrix&lt;/code&gt;&lt;/a&gt;([dim, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_sparse_spd_matrix#sklearn.datasets.make_sparse_spd_matrix&quot;&gt; &lt;code&gt;datasets.make_sparse_spd_matrix&lt;/code&gt; &lt;/a&gt; ([dim,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="4b808d3b9761c867874a47677ea5ab2c4538af6b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_sparse_uncorrelated#sklearn.datasets.make_sparse_uncorrelated&quot;&gt;&lt;code&gt;datasets.make_sparse_uncorrelated&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_sparse_uncorrelated#sklearn.datasets.make_sparse_uncorrelated&quot;&gt;&lt;code&gt;datasets.make_sparse_uncorrelated&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="3a75d17b5f041aa248c72d15a309abb95a4e015d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_spd_matrix#sklearn.datasets.make_spd_matrix&quot;&gt;&lt;code&gt;datasets.make_spd_matrix&lt;/code&gt;&lt;/a&gt;(n_dim, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84d28a1ac44f356d58d9f876ba3eb0206408bac0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_spd_matrix#sklearn.datasets.make_spd_matrix&quot;&gt;&lt;code&gt;datasets.make_spd_matrix&lt;/code&gt;&lt;/a&gt;(n_dim[, random_state])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_spd_matrix#sklearn.datasets.make_spd_matrix&quot;&gt; &lt;code&gt;datasets.make_spd_matrix&lt;/code&gt; &lt;/a&gt; (n_dim [, random_state])</target>
        </trans-unit>
        <trans-unit id="eb3197331c002949b36f41ef22b0b729d9522058" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.make_swiss_roll#sklearn.datasets.make_swiss_roll&quot;&gt;&lt;code&gt;datasets.make_swiss_roll&lt;/code&gt;&lt;/a&gt;([n_samples, noise, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.make_swiss_roll#sklearn.datasets.make_swiss_roll&quot;&gt; &lt;code&gt;datasets.make_swiss_roll&lt;/code&gt; &lt;/a&gt; ([n_samples, noise,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="9ec837732d011d88101cbf5a7698429b3c1e0d9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.datasets.mldata_filename#sklearn.datasets.mldata_filename&quot;&gt;&lt;code&gt;datasets.mldata_filename&lt;/code&gt;&lt;/a&gt;(dataname)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.datasets.mldata_filename#sklearn.datasets.mldata_filename&quot;&gt;&lt;code&gt;datasets.mldata_filename&lt;/code&gt;&lt;/a&gt;(dataname)</target>
        </trans-unit>
        <trans-unit id="a812c809afea22d8fc58f33e0efb64f78f545418" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.dict_learning#sklearn.decomposition.dict_learning&quot;&gt;&lt;code&gt;decomposition.dict_learning&lt;/code&gt;&lt;/a&gt;(X, n_components, &amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.dict_learning#sklearn.decomposition.dict_learning&quot;&gt; &lt;code&gt;decomposition.dict_learning&lt;/code&gt; &lt;/a&gt; (X, n_components,&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="9be9ade43ea6b59fdfb34c8d1a92b5451817fd29" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.dict_learning_online#sklearn.decomposition.dict_learning_online&quot;&gt;&lt;code&gt;decomposition.dict_learning_online&lt;/code&gt;&lt;/a&gt;(X[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.dict_learning_online#sklearn.decomposition.dict_learning_online&quot;&gt; &lt;code&gt;decomposition.dict_learning_online&lt;/code&gt; &lt;/a&gt; (X [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="44c27a97e10196e776caa1235bcd48381d675fe9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.dictionarylearning#sklearn.decomposition.DictionaryLearning&quot;&gt;&lt;code&gt;decomposition.DictionaryLearning&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.dictionarylearning#sklearn.decomposition.DictionaryLearning&quot;&gt;&lt;code&gt;decomposition.DictionaryLearning&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="e57432ca8ff235deb860474d9f59541f538abd4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.factoranalysis#sklearn.decomposition.FactorAnalysis&quot;&gt;&lt;code&gt;decomposition.FactorAnalysis&lt;/code&gt;&lt;/a&gt;([n_components, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.factoranalysis#sklearn.decomposition.FactorAnalysis&quot;&gt; &lt;code&gt;decomposition.FactorAnalysis&lt;/code&gt; &lt;/a&gt; ([n_components,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="89fdb56c5d3c8ab7d274c759eb31a29526a04761" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.fastica#sklearn.decomposition.FastICA&quot;&gt;&lt;code&gt;decomposition.FastICA&lt;/code&gt;&lt;/a&gt;([n_components, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.fastica#sklearn.decomposition.FastICA&quot;&gt; &lt;code&gt;decomposition.FastICA&lt;/code&gt; &lt;/a&gt; ([n_components,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="708bebad5510ebcfc6b329957c8444785d4dca29" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.fastica#sklearn.decomposition.fastica&quot;&gt;&lt;code&gt;decomposition.fastica&lt;/code&gt;&lt;/a&gt;(X[, n_components, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.fastica#sklearn.decomposition.fastica&quot;&gt; &lt;code&gt;decomposition.fastica&lt;/code&gt; &lt;/a&gt; (X [, n_components,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="c0fd18248e4090019765a49490a5206fc8fb7d52" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.incrementalpca#sklearn.decomposition.IncrementalPCA&quot;&gt;&lt;code&gt;IncrementalPCA&lt;/code&gt;&lt;/a&gt; only stores estimates of component and noise variances, in order update &lt;code&gt;explained_variance_ratio_&lt;/code&gt; incrementally. This is why memory usage depends on the number of samples per batch, rather than the number of samples to be processed in the dataset.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.incrementalpca#sklearn.decomposition.IncrementalPCA&quot;&gt; &lt;code&gt;IncrementalPCA&lt;/code&gt; &lt;/a&gt; solo almacena estimaciones de las variaciones de ruido y componentes, para actualizar larelaci&amp;oacute;n devariaci&amp;oacute;n &lt;code&gt;explained_variance_ratio_&lt;/code&gt; incremental. Esta es la raz&amp;oacute;n por la que el uso de la memoria depende de la cantidad de muestras por lote, en lugar de la cantidad de muestras que se procesar&amp;aacute;n en el conjunto de datos.</target>
        </trans-unit>
        <trans-unit id="6c1cfed6c7e670c560a14821f785f633f24977cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.incrementalpca#sklearn.decomposition.IncrementalPCA&quot;&gt;&lt;code&gt;decomposition.IncrementalPCA&lt;/code&gt;&lt;/a&gt;([n_components, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.incrementalpca#sklearn.decomposition.IncrementalPCA&quot;&gt; &lt;code&gt;decomposition.IncrementalPCA&lt;/code&gt; &lt;/a&gt; IncrementalPCA ([n_components,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="cc69f4fdb72950073daa1c077872bb083e369489" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.kernelpca#sklearn.decomposition.KernelPCA&quot;&gt;&lt;code&gt;KernelPCA&lt;/code&gt;&lt;/a&gt; is an extension of PCA which achieves non-linear dimensionality reduction through the use of kernels (see &lt;a href=&quot;metrics#metrics&quot;&gt;Pairwise metrics, Affinities and Kernels&lt;/a&gt;). It has many applications including denoising, compression and structured prediction (kernel dependency estimation). &lt;a href=&quot;generated/sklearn.decomposition.kernelpca#sklearn.decomposition.KernelPCA&quot;&gt;&lt;code&gt;KernelPCA&lt;/code&gt;&lt;/a&gt; supports both &lt;code&gt;transform&lt;/code&gt; and &lt;code&gt;inverse_transform&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.kernelpca#sklearn.decomposition.KernelPCA&quot;&gt; &lt;code&gt;KernelPCA&lt;/code&gt; &lt;/a&gt; es una extensi&amp;oacute;n de PCA que logra una reducci&amp;oacute;n de dimensionalidad no lineal mediante el uso de kernels (consulte&lt;a href=&quot;metrics#metrics&quot;&gt; M&amp;eacute;tricas por pares, Afinidades y Kernels&lt;/a&gt; ). Tiene muchas aplicaciones que incluyen eliminaci&amp;oacute;n de ruido, compresi&amp;oacute;n y predicci&amp;oacute;n estructurada (estimaci&amp;oacute;n de dependencia del kernel). &lt;a href=&quot;generated/sklearn.decomposition.kernelpca#sklearn.decomposition.KernelPCA&quot;&gt; &lt;code&gt;KernelPCA&lt;/code&gt; &lt;/a&gt; admite tanto &lt;code&gt;transform&lt;/code&gt; como &lt;code&gt;inverse_transform&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="060b452a77047e8520f36a02661fdca980722942" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.kernelpca#sklearn.decomposition.KernelPCA&quot;&gt;&lt;code&gt;decomposition.KernelPCA&lt;/code&gt;&lt;/a&gt;([n_components, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.kernelpca#sklearn.decomposition.KernelPCA&quot;&gt; &lt;code&gt;decomposition.KernelPCA&lt;/code&gt; &lt;/a&gt; ([n_components,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="c02b142b6de2044a18790219e6d4465348b2d2e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.latentdirichletallocation#sklearn.decomposition.LatentDirichletAllocation&quot;&gt;&lt;code&gt;LatentDirichletAllocation&lt;/code&gt;&lt;/a&gt; also implements &lt;code&gt;partial_fit&lt;/code&gt; method. This is used when data can be fetched sequentially.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.latentdirichletallocation#sklearn.decomposition.LatentDirichletAllocation&quot;&gt; &lt;code&gt;LatentDirichletAllocation&lt;/code&gt; &lt;/a&gt; tambi&amp;eacute;n implementa &lt;code&gt;partial_fit&lt;/code&gt; m&amp;eacute;todo. Se utiliza cuando los datos se pueden obtener de forma secuencial.</target>
        </trans-unit>
        <trans-unit id="df335eec147a3e2f594ac269626ffcc0f8b6c9f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.latentdirichletallocation#sklearn.decomposition.LatentDirichletAllocation&quot;&gt;&lt;code&gt;LatentDirichletAllocation&lt;/code&gt;&lt;/a&gt; implements online variational Bayes algorithm and supports both online and batch update method. While batch method updates variational variables after each full pass through the data, online method updates variational variables from mini-batch data points.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.latentdirichletallocation#sklearn.decomposition.LatentDirichletAllocation&quot;&gt; &lt;code&gt;LatentDirichletAllocation&lt;/code&gt; &lt;/a&gt; implementa el algoritmo de Bayes variacional en l&amp;iacute;nea y admite el m&amp;eacute;todo de actualizaci&amp;oacute;n en l&amp;iacute;nea y por lotes. Mientras que el m&amp;eacute;todo por lotes actualiza las variables variacionales despu&amp;eacute;s de cada pasada completa a trav&amp;eacute;s de los datos, el m&amp;eacute;todo en l&amp;iacute;nea actualiza las variables variacionales de los puntos de datos del mini lote.</target>
        </trans-unit>
        <trans-unit id="ce8cdf4ae84caa888a8e0fc518a21bf80641ac6c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.latentdirichletallocation#sklearn.decomposition.LatentDirichletAllocation&quot;&gt;&lt;code&gt;LatentDirichletAllocation&lt;/code&gt;&lt;/a&gt; implements the online variational Bayes algorithm and supports both online and batch update methods. While the batch method updates variational variables after each full pass through the data, the online method updates variational variables from mini-batch data points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5154be2f3f9c6c44355a9117558d026d0e25c4a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.latentdirichletallocation#sklearn.decomposition.LatentDirichletAllocation&quot;&gt;&lt;code&gt;decomposition.LatentDirichletAllocation&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.latentdirichletallocation#sklearn.decomposition.LatentDirichletAllocation&quot;&gt;&lt;code&gt;decomposition.LatentDirichletAllocation&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="42ca6aa072ad1c3f8e5f3803e56f82e76b95fb55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.minibatchdictionarylearning#sklearn.decomposition.MiniBatchDictionaryLearning&quot;&gt;&lt;code&gt;MiniBatchDictionaryLearning&lt;/code&gt;&lt;/a&gt; implements a faster, but less accurate version of the dictionary learning algorithm that is better suited for large datasets.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.minibatchdictionarylearning#sklearn.decomposition.MiniBatchDictionaryLearning&quot;&gt; &lt;code&gt;MiniBatchDictionaryLearning&lt;/code&gt; &lt;/a&gt; implementa una versi&amp;oacute;n m&amp;aacute;s r&amp;aacute;pida, pero menos precisa, del algoritmo de aprendizaje del diccionario que se adapta mejor a grandes conjuntos de datos.</target>
        </trans-unit>
        <trans-unit id="33b8edd5885663a6750603a5607907b53f396a79" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.minibatchdictionarylearning#sklearn.decomposition.MiniBatchDictionaryLearning&quot;&gt;&lt;code&gt;decomposition.MiniBatchDictionaryLearning&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.minibatchdictionarylearning#sklearn.decomposition.MiniBatchDictionaryLearning&quot;&gt;&lt;code&gt;decomposition.MiniBatchDictionaryLearning&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="6daead0e12971443542eba8ba091fed2d6f4e56f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.minibatchsparsepca#sklearn.decomposition.MiniBatchSparsePCA&quot;&gt;&lt;code&gt;decomposition.MiniBatchSparsePCA&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.minibatchsparsepca#sklearn.decomposition.MiniBatchSparsePCA&quot;&gt;&lt;code&gt;decomposition.MiniBatchSparsePCA&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="b44e0ec3380a1234a43390f5148b42951542558a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt;&lt;code&gt;NMF&lt;/code&gt;&lt;/a&gt; can also be initialized with correctly scaled random non-negative matrices by setting &lt;code&gt;init=&quot;random&quot;&lt;/code&gt;. An integer seed or a &lt;code&gt;RandomState&lt;/code&gt; can also be passed to &lt;code&gt;random_state&lt;/code&gt; to control reproducibility.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt; &lt;code&gt;NMF&lt;/code&gt; &lt;/a&gt; tambi&amp;eacute;n se puede inicializar con matrices aleatorias no negativas correctamente escaladas estableciendo &lt;code&gt;init=&quot;random&quot;&lt;/code&gt; . Tambi&amp;eacute;n se puede pasaruna semilla entera o un &lt;code&gt;RandomState&lt;/code&gt; a &lt;code&gt;random_state&lt;/code&gt; para controlar la reproducibilidad.</target>
        </trans-unit>
        <trans-unit id="a6b72d362a1cf9cd076e61508a11370d7e2d7d4c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt;&lt;code&gt;NMF&lt;/code&gt;&lt;/a&gt; implements two solvers, using Coordinate Descent (&amp;lsquo;cd&amp;rsquo;) &lt;a href=&quot;#id14&quot; id=&quot;id9&quot;&gt;5&lt;/a&gt;, and Multiplicative Update (&amp;lsquo;mu&amp;rsquo;) &lt;a href=&quot;#id15&quot; id=&quot;id10&quot;&gt;6&lt;/a&gt;. The &amp;lsquo;mu&amp;rsquo; solver can optimize every beta-divergence, including of course the Frobenius norm (\(\beta=2\)), the (generalized) Kullback-Leibler divergence (\(\beta=1\)) and the Itakura-Saito divergence (\(\beta=0\)). Note that for \(\beta \in (1; 2)\), the &amp;lsquo;mu&amp;rsquo; solver is significantly faster than for other values of \(\beta\). Note also that with a negative (or 0, i.e. &amp;lsquo;itakura-saito&amp;rsquo;) \(\beta\), the input matrix cannot contain zero values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a2eac41caca70f78264e445fd358031043da4b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt;&lt;code&gt;NMF&lt;/code&gt;&lt;/a&gt; implements two solvers, using Coordinate Descent (&amp;lsquo;cd&amp;rsquo;) &lt;a href=&quot;#id14&quot; id=&quot;id9&quot;&gt;[5]&lt;/a&gt;, and Multiplicative Update (&amp;lsquo;mu&amp;rsquo;) &lt;a href=&quot;#id15&quot; id=&quot;id10&quot;&gt;[6]&lt;/a&gt;. The &amp;lsquo;mu&amp;rsquo; solver can optimize every beta-divergence, including of course the Frobenius norm (\(\beta=2\)), the (generalized) Kullback-Leibler divergence (\(\beta=1\)) and the Itakura-Saito divergence (\(\beta=0\)). Note that for \(\beta \in (1; 2)\), the &amp;lsquo;mu&amp;rsquo; solver is significantly faster than for other values of \(\beta\). Note also that with a negative (or 0, i.e. &amp;lsquo;itakura-saito&amp;rsquo;) \(\beta\), the input matrix cannot contain zero values.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt; &lt;code&gt;NMF&lt;/code&gt; &lt;/a&gt; implementa dos solucionadores, usando Descenso de coordenadas ('cd')&lt;a href=&quot;#id14&quot; id=&quot;id9&quot;&gt; [5]&lt;/a&gt; y Actualizaci&amp;oacute;n multiplicativa ('mu')&lt;a href=&quot;#id15&quot; id=&quot;id10&quot;&gt; [6]&lt;/a&gt; . El solucionador 'mu' puede optimizar todas las divergencias beta, incluida, por supuesto, la norma de Frobenius (\ (\ beta = 2 \)), la divergencia (generalizada) Kullback-Leibler (\ (\ beta = 1 \)) y la Itakura -Divergencia de Saito (\ (\ beta = 0 \)). Tenga en cuenta que para \ (\ beta \ in (1; 2) \), el solucionador 'mu' es significativamente m&amp;aacute;s r&amp;aacute;pido que para otros valores de \ (\ beta \). Tenga en cuenta tambi&amp;eacute;n que con un negativo (o 0, es decir, 'itakura-saito') \ (\ beta \), la matriz de entrada no puede contener valores cero.</target>
        </trans-unit>
        <trans-unit id="0239fb64ccb93a653f3240be9977c15c8d65c8f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt;&lt;code&gt;NMF&lt;/code&gt;&lt;/a&gt; regularizes both W and H. The public function &lt;a href=&quot;generated/sklearn.decomposition.non_negative_factorization#sklearn.decomposition.non_negative_factorization&quot;&gt;&lt;code&gt;non_negative_factorization&lt;/code&gt;&lt;/a&gt; allows a finer control through the &lt;code&gt;regularization&lt;/code&gt; attribute, and may regularize only W, only H, or both.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42e6b4cbb7054f0d89862ee0c8059d8402bd2761" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt;&lt;code&gt;NMF&lt;/code&gt;&lt;/a&gt; regularizes both W and H. The public function &lt;code&gt;non_negative_factorization&lt;/code&gt; allows a finer control through the &lt;code&gt;regularization&lt;/code&gt; attribute, and may regularize only W, only H, or both.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt; &lt;code&gt;NMF&lt;/code&gt; &lt;/a&gt; regulariza tanto W como H. La funci&amp;oacute;n p&amp;uacute;blica &lt;code&gt;non_negative_factorization&lt;/code&gt; permite un control m&amp;aacute;s fino a trav&amp;eacute;s delatributo de &lt;code&gt;regularization&lt;/code&gt; , y puede regularizar solo W, solo H o ambos.</target>
        </trans-unit>
        <trans-unit id="d888190d27a28c44172db68ee22a07106edcee72" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt;&lt;code&gt;NMF&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;#id11&quot; id=&quot;id5&quot;&gt;1&lt;/a&gt; is an alternative approach to decomposition that assumes that the data and the components are non-negative. &lt;a href=&quot;generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt;&lt;code&gt;NMF&lt;/code&gt;&lt;/a&gt; can be plugged in instead of &lt;a href=&quot;generated/sklearn.decomposition.pca#sklearn.decomposition.PCA&quot;&gt;&lt;code&gt;PCA&lt;/code&gt;&lt;/a&gt; or its variants, in the cases where the data matrix does not contain negative values. It finds a decomposition of samples \(X\) into two matrices \(W\) and \(H\) of non-negative elements, by optimizing the distance \(d\) between \(X\) and the matrix product \(WH\). The most widely used distance function is the squared Frobenius norm, which is an obvious extension of the Euclidean norm to matrices:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a81f1e169716dc98f9e4004fb1420aecb4816b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt;&lt;code&gt;NMF&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;#id11&quot; id=&quot;id5&quot;&gt;[1]&lt;/a&gt; is an alternative approach to decomposition that assumes that the data and the components are non-negative. &lt;a href=&quot;generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt;&lt;code&gt;NMF&lt;/code&gt;&lt;/a&gt; can be plugged in instead of &lt;a href=&quot;generated/sklearn.decomposition.pca#sklearn.decomposition.PCA&quot;&gt;&lt;code&gt;PCA&lt;/code&gt;&lt;/a&gt; or its variants, in the cases where the data matrix does not contain negative values. It finds a decomposition of samples \(X\) into two matrices \(W\) and \(H\) of non-negative elements, by optimizing the distance \(d\) between \(X\) and the matrix product \(WH\). The most widely used distance function is the squared Frobenius norm, which is an obvious extension of the Euclidean norm to matrices:</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt; &lt;code&gt;NMF&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#id11&quot; id=&quot;id5&quot;&gt; [1]&lt;/a&gt; es un enfoque alternativo a la descomposici&amp;oacute;n que asume que los datos y los componentes no son negativos. Se puede conectar&lt;a href=&quot;generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt; &lt;code&gt;NMF&lt;/code&gt; &lt;/a&gt; en lugar de&lt;a href=&quot;generated/sklearn.decomposition.pca#sklearn.decomposition.PCA&quot;&gt; &lt;code&gt;PCA&lt;/code&gt; &lt;/a&gt; o sus variantes, en los casos en que la matriz de datos no contenga valores negativos. Encuentra una descomposici&amp;oacute;n de muestras \ (X \) en dos matrices \ (W \) y \ (H \) de elementos no negativos, optimizando la distancia \ (d \) entre \ (X \) y el producto matricial \ (WH \). La funci&amp;oacute;n de distancia m&amp;aacute;s utilizada es la norma de Frobenius al cuadrado, que es una extensi&amp;oacute;n obvia de la norma euclidiana a las matrices:</target>
        </trans-unit>
        <trans-unit id="4cbae39e490f6cdaa6503a3909b02cf72fa29e12" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt;&lt;code&gt;decomposition.NMF&lt;/code&gt;&lt;/a&gt;([n_components, init, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.nmf#sklearn.decomposition.NMF&quot;&gt; &lt;code&gt;decomposition.NMF&lt;/code&gt; &lt;/a&gt; ([n_components, init,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="8542cf6dfefe8b72df26695e7434715e9ad310b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.non_negative_factorization#sklearn.decomposition.non_negative_factorization&quot;&gt;&lt;code&gt;decomposition.non_negative_factorization&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.non_negative_factorization#sklearn.decomposition.non_negative_factorization&quot;&gt;&lt;code&gt;decomposition.non_negative_factorization&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="4542c2753c4b7005d0f16896f18d83e22721661a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.pca#sklearn.decomposition.PCA&quot;&gt;&lt;code&gt;decomposition.PCA&lt;/code&gt;&lt;/a&gt; looks for a combination of features that capture well the variance of the original features. See &lt;a href=&quot;decomposition#decompositions&quot;&gt;Decomposing signals in components (matrix factorization problems)&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.pca#sklearn.decomposition.PCA&quot;&gt; &lt;code&gt;decomposition.PCA&lt;/code&gt; &lt;/a&gt; busca una combinaci&amp;oacute;n de caracter&amp;iacute;sticas que capturen bien la variaci&amp;oacute;n de las caracter&amp;iacute;sticas originales. Consulte&lt;a href=&quot;decomposition#decompositions&quot;&gt; Descomposici&amp;oacute;n de se&amp;ntilde;ales en componentes (problemas de factorizaci&amp;oacute;n matricial)&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b3ff87d58deba7d232d1a035d3623b38a53db1e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.pca#sklearn.decomposition.PCA&quot;&gt;&lt;code&gt;decomposition.PCA&lt;/code&gt;&lt;/a&gt;([n_components, copy, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.pca#sklearn.decomposition.PCA&quot;&gt; &lt;code&gt;decomposition.PCA&lt;/code&gt; &lt;/a&gt; ([n_components, copy,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="b222dfa4570f9064c89e87c18d55c61f97f1c5b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.sparse_encode#sklearn.decomposition.sparse_encode&quot;&gt;&lt;code&gt;decomposition.sparse_encode&lt;/code&gt;&lt;/a&gt;(X, dictionary, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3e06fd2df13ff51efd3e00b91a2c8a2ed25d85b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.sparse_encode#sklearn.decomposition.sparse_encode&quot;&gt;&lt;code&gt;decomposition.sparse_encode&lt;/code&gt;&lt;/a&gt;(X, dictionary[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.sparse_encode#sklearn.decomposition.sparse_encode&quot;&gt; &lt;code&gt;decomposition.sparse_encode&lt;/code&gt; &lt;/a&gt; (X, diccionario [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="51c295fa8ef1a7bc7688b806e4493bbe0eba8614" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.sparsecoder#sklearn.decomposition.SparseCoder&quot;&gt;&lt;code&gt;decomposition.SparseCoder&lt;/code&gt;&lt;/a&gt;(dictionary, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd4900c4f7b4a921ee0574be2a1923586617b1cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.sparsecoder#sklearn.decomposition.SparseCoder&quot;&gt;&lt;code&gt;decomposition.SparseCoder&lt;/code&gt;&lt;/a&gt;(dictionary[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.sparsecoder#sklearn.decomposition.SparseCoder&quot;&gt; &lt;code&gt;decomposition.SparseCoder&lt;/code&gt; &lt;/a&gt; (diccionario [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="2b142b7e076ab502ceaed3f20c836f800a6f7f32" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.sparsepca#sklearn.decomposition.SparsePCA&quot;&gt;&lt;code&gt;SparsePCA&lt;/code&gt;&lt;/a&gt; is a variant of PCA, with the goal of extracting the set of sparse components that best reconstruct the data.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.sparsepca#sklearn.decomposition.SparsePCA&quot;&gt; &lt;code&gt;SparsePCA&lt;/code&gt; &lt;/a&gt; es una variante de PCA, con el objetivo de extraer el conjunto de componentes dispersos que mejor reconstruyen los datos.</target>
        </trans-unit>
        <trans-unit id="1372bb96a5791b626dc2680095893e3f826d0c2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.sparsepca#sklearn.decomposition.SparsePCA&quot;&gt;&lt;code&gt;decomposition.SparsePCA&lt;/code&gt;&lt;/a&gt;([n_components, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.sparsepca#sklearn.decomposition.SparsePCA&quot;&gt; &lt;code&gt;decomposition.SparsePCA&lt;/code&gt; &lt;/a&gt; ([n_components,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="ef66c9fef15448e6d22ca354a6caa20721a0e489" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.truncatedsvd#sklearn.decomposition.TruncatedSVD&quot;&gt;&lt;code&gt;TruncatedSVD&lt;/code&gt;&lt;/a&gt; implements a variant of singular value decomposition (SVD) that only computes the \(k\) largest singular values, where \(k\) is a user-specified parameter.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.truncatedsvd#sklearn.decomposition.TruncatedSVD&quot;&gt; &lt;code&gt;TruncatedSVD&lt;/code&gt; &lt;/a&gt; implementa una variante de descomposici&amp;oacute;n de valores singulares (SVD) que solo calcula los \ (k \) valores singulares m&amp;aacute;s grandes, donde \ (k \) es un par&amp;aacute;metro especificado por el usuario.</target>
        </trans-unit>
        <trans-unit id="c4a8b3ac8fbeff90fb497d72e9e50ecae0bc6bdb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.truncatedsvd#sklearn.decomposition.TruncatedSVD&quot;&gt;&lt;code&gt;TruncatedSVD&lt;/code&gt;&lt;/a&gt; is very similar to &lt;a href=&quot;generated/sklearn.decomposition.pca#sklearn.decomposition.PCA&quot;&gt;&lt;code&gt;PCA&lt;/code&gt;&lt;/a&gt;, but differs in that it works on sample matrices \(X\) directly instead of their covariance matrices. When the columnwise (per-feature) means of \(X\) are subtracted from the feature values, truncated SVD on the resulting matrix is equivalent to PCA. In practical terms, this means that the &lt;a href=&quot;generated/sklearn.decomposition.truncatedsvd#sklearn.decomposition.TruncatedSVD&quot;&gt;&lt;code&gt;TruncatedSVD&lt;/code&gt;&lt;/a&gt; transformer accepts &lt;code&gt;scipy.sparse&lt;/code&gt; matrices without the need to densify them, as densifying may fill up memory even for medium-sized document collections.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.truncatedsvd#sklearn.decomposition.TruncatedSVD&quot;&gt; &lt;code&gt;TruncatedSVD&lt;/code&gt; &lt;/a&gt; es muy similar a&lt;a href=&quot;generated/sklearn.decomposition.pca#sklearn.decomposition.PCA&quot;&gt; &lt;code&gt;PCA&lt;/code&gt; &lt;/a&gt; , pero se diferencia en que funciona en matrices de muestra \ (X \) directamente en lugar de sus matrices de covarianza. Cuando las medias en columnas (por caracter&amp;iacute;stica) de \ (X \) se restan de los valores de las caracter&amp;iacute;sticas, la SVD truncada en la matriz resultante es equivalente a PCA. En t&amp;eacute;rminos pr&amp;aacute;cticos, esto significa que eltransformador&lt;a href=&quot;generated/sklearn.decomposition.truncatedsvd#sklearn.decomposition.TruncatedSVD&quot;&gt; &lt;code&gt;TruncatedSVD&lt;/code&gt; &lt;/a&gt; aceptamatrices &lt;code&gt;scipy.sparse&lt;/code&gt; sin necesidad de densificarlas, ya que la densificaci&amp;oacute;n puede llenar la memoria incluso para colecciones de documentos de tama&amp;ntilde;o mediano.</target>
        </trans-unit>
        <trans-unit id="ca87752400b0688ebb3f650c7b8103a92e19938d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.truncatedsvd#sklearn.decomposition.TruncatedSVD&quot;&gt;&lt;code&gt;TruncatedSVD&lt;/code&gt;&lt;/a&gt; is very similar to &lt;a href=&quot;generated/sklearn.decomposition.pca#sklearn.decomposition.PCA&quot;&gt;&lt;code&gt;PCA&lt;/code&gt;&lt;/a&gt;, but differs in that the matrix \(X\) does not need to be centered. When the columnwise (per-feature) means of \(X\) are subtracted from the feature values, truncated SVD on the resulting matrix is equivalent to PCA. In practical terms, this means that the &lt;a href=&quot;generated/sklearn.decomposition.truncatedsvd#sklearn.decomposition.TruncatedSVD&quot;&gt;&lt;code&gt;TruncatedSVD&lt;/code&gt;&lt;/a&gt; transformer accepts &lt;code&gt;scipy.sparse&lt;/code&gt; matrices without the need to densify them, as densifying may fill up memory even for medium-sized document collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="076a7222294c7a32114d77a711ae0bbe2cd5b125" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.decomposition.truncatedsvd#sklearn.decomposition.TruncatedSVD&quot;&gt;&lt;code&gt;decomposition.TruncatedSVD&lt;/code&gt;&lt;/a&gt;([n_components, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.decomposition.truncatedsvd#sklearn.decomposition.TruncatedSVD&quot;&gt; &lt;code&gt;decomposition.TruncatedSVD&lt;/code&gt; &lt;/a&gt; ([n_components,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="75ea132af6a874f02129ad9d0e923cde9de69c1f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.discriminant_analysis.lineardiscriminantanalysis#sklearn.discriminant_analysis.LinearDiscriminantAnalysis&quot;&gt;&lt;code&gt;LinearDiscriminantAnalysis&lt;/code&gt;&lt;/a&gt; can be used to perform supervised dimensionality reduction, by projecting the input data to a linear subspace consisting of the directions which maximize the separation between classes (in a precise sense discussed in the mathematics section below). The dimension of the output is necessarily less than the number of classes, so this is in general a rather strong dimensionality reduction, and only makes sense in a multiclass setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dcd71cf475fe554229b8de9346d3227498e3580" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.discriminant_analysis.lineardiscriminantanalysis#sklearn.discriminant_analysis.LinearDiscriminantAnalysis&quot;&gt;&lt;code&gt;discriminant_analysis.LinearDiscriminantAnalysis&lt;/code&gt;&lt;/a&gt; can be used to perform supervised dimensionality reduction, by projecting the input data to a linear subspace consisting of the directions which maximize the separation between classes (in a precise sense discussed in the mathematics section below). The dimension of the output is necessarily less than the number of classes, so this is, in general, a rather strong dimensionality reduction, and only makes sense in a multiclass setting.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.discriminant_analysis.lineardiscriminantanalysis#sklearn.discriminant_analysis.LinearDiscriminantAnalysis&quot;&gt; &lt;code&gt;discriminant_analysis.LinearDiscriminantAnalysis&lt;/code&gt; &lt;/a&gt; se puede utilizar para realizar una reducci&amp;oacute;n de dimensionalidad supervisada, proyectando los datos de entrada a un subespacio lineal que consta de las direcciones que maximizan la separaci&amp;oacute;n entre clases (en un sentido preciso que se analiza en la secci&amp;oacute;n de matem&amp;aacute;ticas a continuaci&amp;oacute;n). La dimensi&amp;oacute;n de la salida es necesariamente menor que el n&amp;uacute;mero de clases, por lo que, en general, esto es una reducci&amp;oacute;n de dimensionalidad bastante fuerte y solo tiene sentido en un entorno multiclase.</target>
        </trans-unit>
        <trans-unit id="009c9114f5641cfb5323d60b72119372317a8d5d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.discriminant_analysis.lineardiscriminantanalysis#sklearn.discriminant_analysis.LinearDiscriminantAnalysis&quot;&gt;&lt;code&gt;discriminant_analysis.LinearDiscriminantAnalysis&lt;/code&gt;&lt;/a&gt;(*)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.discriminant_analysis.lineardiscriminantanalysis#sklearn.discriminant_analysis.LinearDiscriminantAnalysis&quot;&gt;&lt;code&gt;discriminant_analysis.LinearDiscriminantAnalysis&lt;/code&gt;&lt;/a&gt;(*)</target>
        </trans-unit>
        <trans-unit id="49ad3b1ba031d7faaa2d40419354e1bd00f8b1b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.discriminant_analysis.lineardiscriminantanalysis#sklearn.discriminant_analysis.LinearDiscriminantAnalysis&quot;&gt;&lt;code&gt;discriminant_analysis.LinearDiscriminantAnalysis&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.discriminant_analysis.lineardiscriminantanalysis#sklearn.discriminant_analysis.LinearDiscriminantAnalysis&quot;&gt;&lt;code&gt;discriminant_analysis.LinearDiscriminantAnalysis&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="92459bb834ef32fcd810e86f53556ad4cc240ab1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.discriminant_analysis.quadraticdiscriminantanalysis#sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis&quot;&gt;&lt;code&gt;discriminant_analysis.QuadraticDiscriminantAnalysis&lt;/code&gt;&lt;/a&gt;(*)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.discriminant_analysis.quadraticdiscriminantanalysis#sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis&quot;&gt;&lt;code&gt;discriminant_analysis.QuadraticDiscriminantAnalysis&lt;/code&gt;&lt;/a&gt;(*)</target>
        </trans-unit>
        <trans-unit id="55dc76ca3044e92c1f0a818b4ef781332a2ce07a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.discriminant_analysis.quadraticdiscriminantanalysis#sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis&quot;&gt;&lt;code&gt;discriminant_analysis.QuadraticDiscriminantAnalysis&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.discriminant_analysis.quadraticdiscriminantanalysis#sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis&quot;&gt;&lt;code&gt;discriminant_analysis.QuadraticDiscriminantAnalysis&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="663572b300aee95337cc57368a0c0d7edc3be238" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.dummy.dummyclassifier#sklearn.dummy.DummyClassifier&quot;&gt;&lt;code&gt;dummy.DummyClassifier&lt;/code&gt;&lt;/a&gt;(*[, strategy, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="023b98a9e14e40a63c85b5fdc9a204506623f507" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.dummy.dummyclassifier#sklearn.dummy.DummyClassifier&quot;&gt;&lt;code&gt;dummy.DummyClassifier&lt;/code&gt;&lt;/a&gt;([strategy, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.dummy.dummyclassifier#sklearn.dummy.DummyClassifier&quot;&gt; &lt;code&gt;dummy.DummyClassifier&lt;/code&gt; &lt;/a&gt; ([estrategia,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="d547ddcd36f9bd9a3f60c4035b99ffcb5ff12290" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.dummy.dummyregressor#sklearn.dummy.DummyRegressor&quot;&gt;&lt;code&gt;DummyRegressor&lt;/code&gt;&lt;/a&gt; also implements four simple rules of thumb for regression:</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.dummy.dummyregressor#sklearn.dummy.DummyRegressor&quot;&gt; &lt;code&gt;DummyRegressor&lt;/code&gt; &lt;/a&gt; tambi&amp;eacute;n implementa cuatro reglas pr&amp;aacute;cticas simples para la regresi&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="a43cb4522464b684d748d8c36095d4703ed1cc93" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.dummy.dummyregressor#sklearn.dummy.DummyRegressor&quot;&gt;&lt;code&gt;dummy.DummyRegressor&lt;/code&gt;&lt;/a&gt;(*[, strategy, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6226ae362dfae9634bfc6cf33c89068d0fc9af2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.dummy.dummyregressor#sklearn.dummy.DummyRegressor&quot;&gt;&lt;code&gt;dummy.DummyRegressor&lt;/code&gt;&lt;/a&gt;([strategy, constant, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.dummy.dummyregressor#sklearn.dummy.DummyRegressor&quot;&gt; &lt;code&gt;dummy.DummyRegressor&lt;/code&gt; &lt;/a&gt; ([estrategia, constante,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="82c1e2113f637cb8a643843dafae489d7dbc9230" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.adaboostclassifier#sklearn.ensemble.AdaBoostClassifier&quot;&gt;&lt;code&gt;ensemble.AdaBoostClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.adaboostclassifier#sklearn.ensemble.AdaBoostClassifier&quot;&gt;&lt;code&gt;ensemble.AdaBoostClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="b8d637143b06af3f9df695d14f47bc3eeac2df01" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.adaboostregressor#sklearn.ensemble.AdaBoostRegressor&quot;&gt;&lt;code&gt;ensemble.AdaBoostRegressor&lt;/code&gt;&lt;/a&gt;([base_estimator, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.adaboostregressor#sklearn.ensemble.AdaBoostRegressor&quot;&gt; &lt;code&gt;ensemble.AdaBoostRegressor&lt;/code&gt; &lt;/a&gt; ([base_estimator,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="e6df8a2a146f833477378aea6f6629fc96e513e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.baggingclassifier#sklearn.ensemble.BaggingClassifier&quot;&gt;&lt;code&gt;ensemble.BaggingClassifier&lt;/code&gt;&lt;/a&gt;([base_estimator, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.baggingclassifier#sklearn.ensemble.BaggingClassifier&quot;&gt; &lt;code&gt;ensemble.BaggingClassifier&lt;/code&gt; &lt;/a&gt; ([base_estimator,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="3b7431316440cad4fa7fd79c2adfd1181c3daf8f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.baggingregressor#sklearn.ensemble.BaggingRegressor&quot;&gt;&lt;code&gt;ensemble.BaggingRegressor&lt;/code&gt;&lt;/a&gt;([base_estimator, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.baggingregressor#sklearn.ensemble.BaggingRegressor&quot;&gt; &lt;code&gt;ensemble.BaggingRegressor&lt;/code&gt; &lt;/a&gt; ([base_estimator,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="d6ca4bbb93ffc03665651d9d7a8083870456167e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.extratreesclassifier#sklearn.ensemble.ExtraTreesClassifier&quot;&gt;&lt;code&gt;ensemble.ExtraTreesClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.extratreesclassifier#sklearn.ensemble.ExtraTreesClassifier&quot;&gt;&lt;code&gt;ensemble.ExtraTreesClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="8af339fe35f937cd5948e61d0d233ab708b99768" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.extratreesregressor#sklearn.ensemble.ExtraTreesRegressor&quot;&gt;&lt;code&gt;ensemble.ExtraTreesRegressor&lt;/code&gt;&lt;/a&gt;([n_estimators, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.extratreesregressor#sklearn.ensemble.ExtraTreesRegressor&quot;&gt; &lt;code&gt;ensemble.ExtraTreesRegressor&lt;/code&gt; &lt;/a&gt; ([n_estimators,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="55ebba809208e0f1fa839430f154a89d63d5e9e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.gradientboostingclassifier#sklearn.ensemble.GradientBoostingClassifier&quot;&gt;&lt;code&gt;GradientBoostingClassifier&lt;/code&gt;&lt;/a&gt; supports both binary and multi-class classification. The following example shows how to fit a gradient boosting classifier with 100 decision stumps as weak learners:</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.gradientboostingclassifier#sklearn.ensemble.GradientBoostingClassifier&quot;&gt; &lt;code&gt;GradientBoostingClassifier&lt;/code&gt; &lt;/a&gt; admite clasificaci&amp;oacute;n binaria y de clases m&amp;uacute;ltiples. El siguiente ejemplo muestra c&amp;oacute;mo ajustar un clasificador de aumento de gradiente con 100 elementos de decisi&amp;oacute;n como aprendices d&amp;eacute;biles:</target>
        </trans-unit>
        <trans-unit id="dc57e29c62bd82cab79d3f2a2294745e23d9ad8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.gradientboostingclassifier#sklearn.ensemble.GradientBoostingClassifier&quot;&gt;&lt;code&gt;ensemble.GradientBoostingClassifier&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d0d80858c341384175b5febb880a235761d73cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.gradientboostingclassifier#sklearn.ensemble.GradientBoostingClassifier&quot;&gt;&lt;code&gt;ensemble.GradientBoostingClassifier&lt;/code&gt;&lt;/a&gt;([loss, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.gradientboostingclassifier#sklearn.ensemble.GradientBoostingClassifier&quot;&gt; &lt;code&gt;ensemble.GradientBoostingClassifier&lt;/code&gt; &lt;/a&gt; ([p&amp;eacute;rdida,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="e2145fa80e48b64b35ee442565f0a1c9c4d93c80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.gradientboostingregressor#sklearn.ensemble.GradientBoostingRegressor&quot;&gt;&lt;code&gt;GradientBoostingRegressor&lt;/code&gt;&lt;/a&gt; supports a number of &lt;a href=&quot;#gradient-boosting-loss&quot;&gt;different loss functions&lt;/a&gt; for regression which can be specified via the argument &lt;code&gt;loss&lt;/code&gt;; the default loss function for regression is least squares (&lt;code&gt;'ls'&lt;/code&gt;).</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.gradientboostingregressor#sklearn.ensemble.GradientBoostingRegressor&quot;&gt; &lt;code&gt;GradientBoostingRegressor&lt;/code&gt; &lt;/a&gt; admite varias&lt;a href=&quot;#gradient-boosting-loss&quot;&gt; funciones de p&amp;eacute;rdida diferentes&lt;/a&gt; para la regresi&amp;oacute;n que se pueden especificar mediante la &lt;code&gt;loss&lt;/code&gt; argumentos; la funci&amp;oacute;n de p&amp;eacute;rdida predeterminada para la regresi&amp;oacute;n es m&amp;iacute;nimos cuadrados ( &lt;code&gt;'ls'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="8b606202100c346d77d9fdcbb0da3725079e2129" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.gradientboostingregressor#sklearn.ensemble.GradientBoostingRegressor&quot;&gt;&lt;code&gt;ensemble.GradientBoostingRegressor&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d3292d65811c4e54b9dd5f83951dac41b17f1d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.gradientboostingregressor#sklearn.ensemble.GradientBoostingRegressor&quot;&gt;&lt;code&gt;ensemble.GradientBoostingRegressor&lt;/code&gt;&lt;/a&gt;([loss, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.gradientboostingregressor#sklearn.ensemble.GradientBoostingRegressor&quot;&gt; &lt;code&gt;ensemble.GradientBoostingRegressor&lt;/code&gt; &lt;/a&gt; ([p&amp;eacute;rdida,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="6347de2567b89b8422e3b6593e966a533343aad2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.histgradientboostingclassifier#sklearn.ensemble.HistGradientBoostingClassifier&quot;&gt;&lt;code&gt;HistGradientBoostingClassifier&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.ensemble.histgradientboostingregressor#sklearn.ensemble.HistGradientBoostingRegressor&quot;&gt;&lt;code&gt;HistGradientBoostingRegressor&lt;/code&gt;&lt;/a&gt; have built-in support for missing values (NaNs).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cd6ededde3dd4c511bf3b2780a2d4ea3f1d7d86" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.histgradientboostingclassifier#sklearn.ensemble.HistGradientBoostingClassifier&quot;&gt;&lt;code&gt;HistGradientBoostingClassifier&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.ensemble.histgradientboostingregressor#sklearn.ensemble.HistGradientBoostingRegressor&quot;&gt;&lt;code&gt;HistGradientBoostingRegressor&lt;/code&gt;&lt;/a&gt; have implementations that use OpenMP for parallelization through Cython. For more details on how to control the number of threads, please refer to our &lt;a href=&quot;computing#parallelism&quot;&gt;Parallelism&lt;/a&gt; notes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bcb2249b01c0eaeb3d9fae4455b641cb6262509" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.histgradientboostingclassifier#sklearn.ensemble.HistGradientBoostingClassifier&quot;&gt;&lt;code&gt;HistGradientBoostingClassifier&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.ensemble.histgradientboostingregressor#sklearn.ensemble.HistGradientBoostingRegressor&quot;&gt;&lt;code&gt;HistGradientBoostingRegressor&lt;/code&gt;&lt;/a&gt; sample support weights during &lt;a href=&quot;https://scikit-learn.org/0.23/glossary.html#term-fit&quot;&gt;fit&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ba9c257639d086463f46653b85647dabceef9fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.histgradientboostingclassifier#sklearn.ensemble.HistGradientBoostingClassifier&quot;&gt;&lt;code&gt;HistGradientBoostingClassifier&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.ensemble.histgradientboostingregressor#sklearn.ensemble.HistGradientBoostingRegressor&quot;&gt;&lt;code&gt;HistGradientBoostingRegressor&lt;/code&gt;&lt;/a&gt;, in contrast, do not require sorting the feature values and instead use a data-structure called a histogram, where the samples are implicitly ordered. Building a histogram has a \(\mathcal{O}(n)\) complexity, so the node splitting procedure has a \(\mathcal{O}(n_\text{features} \times n)\) complexity, much smaller than the previous one. In addition, instead of considering \(n\) split points, we here consider only &lt;code&gt;max_bins&lt;/code&gt; split points, which is much smaller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c615f4c76df25282cf9dc7bd7ce02a4e20241af3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.histgradientboostingclassifier#sklearn.ensemble.HistGradientBoostingClassifier&quot;&gt;&lt;code&gt;ensemble.HistGradientBoostingClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.histgradientboostingclassifier#sklearn.ensemble.HistGradientBoostingClassifier&quot;&gt;&lt;code&gt;ensemble.HistGradientBoostingClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="f6e7f9395d0ec16b249525cf070d616a04ccd2a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.histgradientboostingregressor#sklearn.ensemble.HistGradientBoostingRegressor&quot;&gt;&lt;code&gt;ensemble.HistGradientBoostingRegressor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.histgradientboostingregressor#sklearn.ensemble.HistGradientBoostingRegressor&quot;&gt;&lt;code&gt;ensemble.HistGradientBoostingRegressor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="fa333d4534beb2c3ebd4e0e84f60cc53a45186dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.isolationforest#sklearn.ensemble.IsolationForest&quot;&gt;&lt;code&gt;ensemble.IsolationForest&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.neighbors.localoutlierfactor#sklearn.neighbors.LocalOutlierFactor&quot;&gt;&lt;code&gt;neighbors.LocalOutlierFactor&lt;/code&gt;&lt;/a&gt; perform reasonably well on the data sets considered here. The &lt;a href=&quot;generated/sklearn.svm.oneclasssvm#sklearn.svm.OneClassSVM&quot;&gt;&lt;code&gt;svm.OneClassSVM&lt;/code&gt;&lt;/a&gt; is known to be sensitive to outliers and thus does not perform very well for outlier detection. Finally, &lt;a href=&quot;generated/sklearn.covariance.ellipticenvelope#sklearn.covariance.EllipticEnvelope&quot;&gt;&lt;code&gt;covariance.EllipticEnvelope&lt;/code&gt;&lt;/a&gt; assumes the data is Gaussian and learns an ellipse. For more details on the different estimators refer to the example &lt;a href=&quot;../auto_examples/miscellaneous/plot_anomaly_comparison#sphx-glr-auto-examples-miscellaneous-plot-anomaly-comparison-py&quot;&gt;Comparing anomaly detection algorithms for outlier detection on toy datasets&lt;/a&gt; and the sections hereunder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d01ef66796cfd668ccf031a639314869d492c68" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.isolationforest#sklearn.ensemble.IsolationForest&quot;&gt;&lt;code&gt;ensemble.IsolationForest&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.neighbors.localoutlierfactor#sklearn.neighbors.LocalOutlierFactor&quot;&gt;&lt;code&gt;neighbors.LocalOutlierFactor&lt;/code&gt;&lt;/a&gt; perform reasonably well on the data sets considered here. The &lt;a href=&quot;generated/sklearn.svm.oneclasssvm#sklearn.svm.OneClassSVM&quot;&gt;&lt;code&gt;svm.OneClassSVM&lt;/code&gt;&lt;/a&gt; is known to be sensitive to outliers and thus does not perform very well for outlier detection. Finally, &lt;a href=&quot;generated/sklearn.covariance.ellipticenvelope#sklearn.covariance.EllipticEnvelope&quot;&gt;&lt;code&gt;covariance.EllipticEnvelope&lt;/code&gt;&lt;/a&gt; assumes the data is Gaussian and learns an ellipse. For more details on the different estimators refer to the example &lt;a href=&quot;../auto_examples/plot_anomaly_comparison#sphx-glr-auto-examples-plot-anomaly-comparison-py&quot;&gt;Comparing anomaly detection algorithms for outlier detection on toy datasets&lt;/a&gt; and the sections hereunder.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.isolationforest#sklearn.ensemble.IsolationForest&quot;&gt; &lt;code&gt;ensemble.IsolationForest&lt;/code&gt; &lt;/a&gt; y&lt;a href=&quot;generated/sklearn.neighbors.localoutlierfactor#sklearn.neighbors.LocalOutlierFactor&quot;&gt; &lt;code&gt;neighbors.LocalOutlierFactor&lt;/code&gt; &lt;/a&gt; funcionan razonablemente bien en los conjuntos de datos considerados aqu&amp;iacute;. Sesabe que&lt;a href=&quot;generated/sklearn.svm.oneclasssvm#sklearn.svm.OneClassSVM&quot;&gt; &lt;code&gt;svm.OneClassSVM&lt;/code&gt; &lt;/a&gt; es sensible a valores at&amp;iacute;picos y, por lo tanto, no funciona muy bien para la detecci&amp;oacute;n de valores at&amp;iacute;picos. Finalmente,&lt;a href=&quot;generated/sklearn.covariance.ellipticenvelope#sklearn.covariance.EllipticEnvelope&quot;&gt; &lt;code&gt;covariance.EllipticEnvelope&lt;/code&gt; &lt;/a&gt; asume que los datos son gaussianos y aprenden una elipse. Para obtener m&amp;aacute;s detalles sobre los diferentes estimadores, consulte el ejemplo&lt;a href=&quot;../auto_examples/plot_anomaly_comparison#sphx-glr-auto-examples-plot-anomaly-comparison-py&quot;&gt; Comparaci&amp;oacute;n de algoritmos de detecci&amp;oacute;n de anomal&amp;iacute;as para la detecci&amp;oacute;n de valores at&amp;iacute;picos en conjuntos de datos de juguetes&lt;/a&gt; y las secciones siguientes.</target>
        </trans-unit>
        <trans-unit id="8ac2d1879d58bad21403fd5871ac0e593fb2c98e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.isolationforest#sklearn.ensemble.IsolationForest&quot;&gt;&lt;code&gt;ensemble.IsolationForest&lt;/code&gt;&lt;/a&gt;(*[, n_estimators, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5005ace05eb20ea34f91b82c60d4cdb017dc472c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.isolationforest#sklearn.ensemble.IsolationForest&quot;&gt;&lt;code&gt;ensemble.IsolationForest&lt;/code&gt;&lt;/a&gt;([n_estimators, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.isolationforest#sklearn.ensemble.IsolationForest&quot;&gt; &lt;code&gt;ensemble.IsolationForest&lt;/code&gt; &lt;/a&gt; ([n_estimators,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="0186941db443820a1e87db24081e94713229454e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.partial_dependence.partial_dependence#sklearn.ensemble.partial_dependence.partial_dependence&quot;&gt;&lt;code&gt;ensemble.partial_dependence.partial_dependence&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.partial_dependence.partial_dependence#sklearn.ensemble.partial_dependence.partial_dependence&quot;&gt;&lt;code&gt;ensemble.partial_dependence.partial_dependence&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="c231206b3a7c70755877ae081f9c6fa2004e722f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.partial_dependence.plot_partial_dependence#sklearn.ensemble.partial_dependence.plot_partial_dependence&quot;&gt;&lt;code&gt;ensemble.partial_dependence.plot_partial_dependence&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.partial_dependence.plot_partial_dependence#sklearn.ensemble.partial_dependence.plot_partial_dependence&quot;&gt;&lt;code&gt;ensemble.partial_dependence.plot_partial_dependence&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="a9e2e359837f80e06c1c0008e1d0be6ce6eca866" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.randomforestclassifier#sklearn.ensemble.RandomForestClassifier&quot;&gt;&lt;code&gt;RandomForestClassifier&lt;/code&gt;&lt;/a&gt; shows the opposite behavior: the histograms show peaks at approximately 0.2 and 0.9 probability, while probabilities close to 0 or 1 are very rare. An explanation for this is given by Niculescu-Mizil and Caruana &lt;a href=&quot;#id4&quot; id=&quot;id1&quot;&gt;[4]&lt;/a&gt;: &amp;ldquo;Methods such as bagging and random forests that average predictions from a base set of models can have difficulty making predictions near 0 and 1 because variance in the underlying base models will bias predictions that should be near zero or one away from these values. Because predictions are restricted to the interval [0,1], errors caused by variance tend to be one-sided near zero and one. For example, if a model should predict p = 0 for a case, the only way bagging can achieve this is if all bagged trees predict zero. If we add noise to the trees that bagging is averaging over, this noise will cause some trees to predict values larger than 0 for this case, thus moving the average prediction of the bagged ensemble away from 0. We observe this effect most strongly with random forests because the base-level trees trained with random forests have relatively high variance due to feature subsetting.&amp;rdquo; As a result, the calibration curve also referred to as the reliability diagram (Wilks 1995 &lt;a href=&quot;#id5&quot; id=&quot;id2&quot;&gt;[5]&lt;/a&gt;) shows a characteristic sigmoid shape, indicating that the classifier could trust its &amp;ldquo;intuition&amp;rdquo; more and return probabilities closer to 0 or 1 typically.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.randomforestclassifier#sklearn.ensemble.RandomForestClassifier&quot;&gt; &lt;code&gt;RandomForestClassifier&lt;/code&gt; &lt;/a&gt; muestra el comportamiento opuesto: los histogramas muestran picos en aproximadamente 0,2 y 0,9 de probabilidad, mientras que las probabilidades cercanas a 0 o 1 son muy raras. Niculescu-Mizil y Caruana dan una explicaci&amp;oacute;n de esto&lt;a href=&quot;#id4&quot; id=&quot;id1&quot;&gt; [4].&lt;/a&gt;: &amp;ldquo;Los m&amp;eacute;todos como el ensacado y los bosques aleatorios que promedian las predicciones de un conjunto base de modelos pueden tener dificultades para hacer predicciones cercanas a 0 y 1 porque la varianza en los modelos base subyacentes sesgar&amp;aacute; las predicciones que deber&amp;iacute;an estar cerca de cero o una distancia de estos valores. Debido a que las predicciones est&amp;aacute;n restringidas al intervalo [0,1], los errores causados ​​por la varianza tienden a ser unilaterales cerca de cero y uno. Por ejemplo, si un modelo debe predecir p = 0 para un caso, la &amp;uacute;nica forma en que el ensacado puede lograr esto es si todos los &amp;aacute;rboles empacados predicen cero. Si agregamos ruido a los &amp;aacute;rboles sobre los que se promedia el ensacado, este ruido har&amp;aacute; que algunos &amp;aacute;rboles predigan valores mayores que 0 para este caso, alejando as&amp;iacute; la predicci&amp;oacute;n promedio del conjunto ensacado de 0.Observamos este efecto con m&amp;aacute;s fuerza con los bosques aleatorios porque los &amp;aacute;rboles de nivel base entrenados con bosques aleatorios tienen una variaci&amp;oacute;n relativamente alta debido a la subconjunto de caracter&amp;iacute;sticas &quot;. Como resultado, la curva de calibraci&amp;oacute;n tambi&amp;eacute;n se conoce como diagrama de confiabilidad (Wilks 1995&lt;a href=&quot;#id5&quot; id=&quot;id2&quot;&gt;[5]&lt;/a&gt; ) muestra una forma sigmoidea caracter&amp;iacute;stica, lo que indica que el clasificador podr&amp;iacute;a confiar m&amp;aacute;s en su &quot;intuici&amp;oacute;n&quot; y devolver probabilidades m&amp;aacute;s cercanas a 0 o 1 t&amp;iacute;picamente.</target>
        </trans-unit>
        <trans-unit id="8c426aa6ad13ddeef0a3120b753becc7473451f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.randomforestclassifier#sklearn.ensemble.RandomForestClassifier&quot;&gt;&lt;code&gt;RandomForestClassifier&lt;/code&gt;&lt;/a&gt; shows the opposite behavior: the histograms show peaks at approximately 0.2 and 0.9 probability, while probabilities close to 0 or 1 are very rare. An explanation for this is given by Niculescu-Mizil and Caruana &lt;a href=&quot;#id6&quot; id=&quot;id1&quot;&gt;1&lt;/a&gt;: &amp;ldquo;Methods such as bagging and random forests that average predictions from a base set of models can have difficulty making predictions near 0 and 1 because variance in the underlying base models will bias predictions that should be near zero or one away from these values. Because predictions are restricted to the interval [0,1], errors caused by variance tend to be one-sided near zero and one. For example, if a model should predict p = 0 for a case, the only way bagging can achieve this is if all bagged trees predict zero. If we add noise to the trees that bagging is averaging over, this noise will cause some trees to predict values larger than 0 for this case, thus moving the average prediction of the bagged ensemble away from 0. We observe this effect most strongly with random forests because the base-level trees trained with random forests have relatively high variance due to feature subsetting.&amp;rdquo; As a result, the calibration curve also referred to as the reliability diagram (Wilks 1995 &lt;a href=&quot;#id7&quot; id=&quot;id2&quot;&gt;2&lt;/a&gt;) shows a characteristic sigmoid shape, indicating that the classifier could trust its &amp;ldquo;intuition&amp;rdquo; more and return probabilities closer to 0 or 1 typically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56c77092b3759936b9746d0950a3566679be2401" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.randomforestclassifier#sklearn.ensemble.RandomForestClassifier&quot;&gt;&lt;code&gt;ensemble.RandomForestClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.randomforestclassifier#sklearn.ensemble.RandomForestClassifier&quot;&gt;&lt;code&gt;ensemble.RandomForestClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="21fb13b74ba39bd2ce3b9350b49a8350b5727b9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.randomforestregressor#sklearn.ensemble.RandomForestRegressor&quot;&gt;&lt;code&gt;ensemble.RandomForestRegressor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.randomforestregressor#sklearn.ensemble.RandomForestRegressor&quot;&gt;&lt;code&gt;ensemble.RandomForestRegressor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="115bb0b0e8789ec5dfba7787892fe55d99dc48de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.randomtreesembedding#sklearn.ensemble.RandomTreesEmbedding&quot;&gt;&lt;code&gt;RandomTreesEmbedding&lt;/code&gt;&lt;/a&gt; implements an unsupervised transformation of the data. Using a forest of completely random trees, &lt;a href=&quot;generated/sklearn.ensemble.randomtreesembedding#sklearn.ensemble.RandomTreesEmbedding&quot;&gt;&lt;code&gt;RandomTreesEmbedding&lt;/code&gt;&lt;/a&gt; encodes the data by the indices of the leaves a data point ends up in. This index is then encoded in a one-of-K manner, leading to a high dimensional, sparse binary coding. This coding can be computed very efficiently and can then be used as a basis for other learning tasks. The size and sparsity of the code can be influenced by choosing the number of trees and the maximum depth per tree. For each tree in the ensemble, the coding contains one entry of one. The size of the coding is at most &lt;code&gt;n_estimators * 2
** max_depth&lt;/code&gt;, the maximum number of leaves in the forest.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.randomtreesembedding#sklearn.ensemble.RandomTreesEmbedding&quot;&gt; &lt;code&gt;RandomTreesEmbedding&lt;/code&gt; &lt;/a&gt; implementa una transformaci&amp;oacute;n no supervisada de los datos. Utilizando un bosque de &amp;aacute;rboles completamente aleatorios,&lt;a href=&quot;generated/sklearn.ensemble.randomtreesembedding#sklearn.ensemble.RandomTreesEmbedding&quot;&gt; &lt;code&gt;RandomTreesEmbedding&lt;/code&gt; &lt;/a&gt; codifica los datos por los &amp;iacute;ndices de las hojas en las que termina un punto de datos. Este &amp;iacute;ndice luego se codifica de una manera &amp;uacute;nica de K, lo que lleva a una codificaci&amp;oacute;n binaria escasa y de alta dimensi&amp;oacute;n. Esta codificaci&amp;oacute;n se puede calcular de manera muy eficiente y luego se puede utilizar como base para otras tareas de aprendizaje. El tama&amp;ntilde;o y la escasez del c&amp;oacute;digo se pueden influir eligiendo el n&amp;uacute;mero de &amp;aacute;rboles y la profundidad m&amp;aacute;xima por &amp;aacute;rbol. Para cada &amp;aacute;rbol del conjunto, la codificaci&amp;oacute;n contiene una entrada de uno. El tama&amp;ntilde;o de la codificaci&amp;oacute;n es como m&amp;aacute;ximo &lt;code&gt;n_estimators * 2 ** max_depth&lt;/code&gt; , el n&amp;uacute;mero m&amp;aacute;ximo de hojas en el bosque.</target>
        </trans-unit>
        <trans-unit id="4c838abc759fc7e678a40f22e5e90127d606e0c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.randomtreesembedding#sklearn.ensemble.RandomTreesEmbedding&quot;&gt;&lt;code&gt;ensemble.RandomTreesEmbedding&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.randomtreesembedding#sklearn.ensemble.RandomTreesEmbedding&quot;&gt;&lt;code&gt;ensemble.RandomTreesEmbedding&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="301294d6f520f3966d5036eca087b3f24fdc5590" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.stackingclassifier#sklearn.ensemble.StackingClassifier&quot;&gt;&lt;code&gt;ensemble.StackingClassifier&lt;/code&gt;&lt;/a&gt;(estimators[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1947d3378aecfa8f04716442c8123c3a2f41972" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.stackingregressor#sklearn.ensemble.StackingRegressor&quot;&gt;&lt;code&gt;ensemble.StackingRegressor&lt;/code&gt;&lt;/a&gt;(estimators[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aab8932924c8b34e3cb491d79e12fd830e628da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.votingclassifier#sklearn.ensemble.VotingClassifier&quot;&gt;&lt;code&gt;ensemble.VotingClassifier&lt;/code&gt;&lt;/a&gt;(estimators, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5377d8aa988bfd357764fb7db1bd5f152e7842ee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.votingclassifier#sklearn.ensemble.VotingClassifier&quot;&gt;&lt;code&gt;ensemble.VotingClassifier&lt;/code&gt;&lt;/a&gt;(estimators[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.ensemble.votingclassifier#sklearn.ensemble.VotingClassifier&quot;&gt; &lt;code&gt;ensemble.VotingClassifier&lt;/code&gt; &lt;/a&gt; (estimadores [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="d2eebddcd41a4da45d2e1bc2db5e4745a5f9b8a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.ensemble.votingregressor#sklearn.ensemble.VotingRegressor&quot;&gt;&lt;code&gt;ensemble.VotingRegressor&lt;/code&gt;&lt;/a&gt;(estimators, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c5afb094ce641820cdbeb685a54a2c66fb93d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.dictvectorizer#sklearn.feature_extraction.DictVectorizer&quot;&gt;&lt;code&gt;DictVectorizer&lt;/code&gt;&lt;/a&gt; implements what is called one-of-K or &amp;ldquo;one-hot&amp;rdquo; coding for categorical (aka nominal, discrete) features. Categorical features are &amp;ldquo;attribute-value&amp;rdquo; pairs where the value is restricted to a list of discrete of possibilities without ordering (e.g. topic identifiers, types of objects, tags, names&amp;hellip;).</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.dictvectorizer#sklearn.feature_extraction.DictVectorizer&quot;&gt; &lt;code&gt;DictVectorizer&lt;/code&gt; &lt;/a&gt; implementa lo que se llama codificaci&amp;oacute;n one-of-K o &quot;one-hot&quot; para caracter&amp;iacute;sticas categ&amp;oacute;ricas (tambi&amp;eacute;n conocidas como nominales, discretas). Las caracter&amp;iacute;sticas categ&amp;oacute;ricas son pares &quot;atributo-valor&quot; donde el valor se restringe a una lista de posibilidades discretas sin ordenar (por ejemplo, identificadores de temas, tipos de objetos, etiquetas, nombres ...).</target>
        </trans-unit>
        <trans-unit id="1cb5bed40da3090a6151533941fc8790bf25ca2d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.dictvectorizer#sklearn.feature_extraction.DictVectorizer&quot;&gt;&lt;code&gt;DictVectorizer&lt;/code&gt;&lt;/a&gt; is also a useful representation transformation for training sequence classifiers in Natural Language Processing models that typically work by extracting feature windows around a particular word of interest.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.dictvectorizer#sklearn.feature_extraction.DictVectorizer&quot;&gt; &lt;code&gt;DictVectorizer&lt;/code&gt; &lt;/a&gt; tambi&amp;eacute;n es una transformaci&amp;oacute;n de representaci&amp;oacute;n &amp;uacute;til para entrenar clasificadores de secuencia en modelos de procesamiento de lenguaje natural que normalmente funcionan extrayendo ventanas de caracter&amp;iacute;sticas alrededor de una palabra de inter&amp;eacute;s en particular.</target>
        </trans-unit>
        <trans-unit id="68d0da585c170ca4eb6ffc677953d8541eb3cdce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.dictvectorizer#sklearn.feature_extraction.DictVectorizer&quot;&gt;&lt;code&gt;feature_extraction.DictVectorizer&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31032ccc123c3d4eceef5becabb4a2f3fb8de6e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.dictvectorizer#sklearn.feature_extraction.DictVectorizer&quot;&gt;&lt;code&gt;feature_extraction.DictVectorizer&lt;/code&gt;&lt;/a&gt;([dtype, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.dictvectorizer#sklearn.feature_extraction.DictVectorizer&quot;&gt; &lt;code&gt;feature_extraction.DictVectorizer&lt;/code&gt; &lt;/a&gt; ([dtype,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="f8d4b6eea25406e64622efb691b2b08de3f5637e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.featurehasher#sklearn.feature_extraction.FeatureHasher&quot;&gt;&lt;code&gt;FeatureHasher&lt;/code&gt;&lt;/a&gt; accepts either mappings (like Python&amp;rsquo;s &lt;code&gt;dict&lt;/code&gt; and its variants in the &lt;code&gt;collections&lt;/code&gt; module), &lt;code&gt;(feature, value)&lt;/code&gt; pairs, or strings, depending on the constructor parameter &lt;code&gt;input_type&lt;/code&gt;. Mapping are treated as lists of &lt;code&gt;(feature, value)&lt;/code&gt; pairs, while single strings have an implicit value of 1, so &lt;code&gt;['feat1', 'feat2', 'feat3']&lt;/code&gt; is interpreted as &lt;code&gt;[('feat1', 1), ('feat2', 1), ('feat3', 1)]&lt;/code&gt;. If a single feature occurs multiple times in a sample, the associated values will be summed (so &lt;code&gt;('feat', 2)&lt;/code&gt; and &lt;code&gt;('feat', 3.5)&lt;/code&gt; become &lt;code&gt;('feat', 5.5)&lt;/code&gt;). The output from &lt;a href=&quot;generated/sklearn.feature_extraction.featurehasher#sklearn.feature_extraction.FeatureHasher&quot;&gt;&lt;code&gt;FeatureHasher&lt;/code&gt;&lt;/a&gt; is always a &lt;code&gt;scipy.sparse&lt;/code&gt; matrix in the CSR format.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.featurehasher#sklearn.feature_extraction.FeatureHasher&quot;&gt; &lt;code&gt;FeatureHasher&lt;/code&gt; &lt;/a&gt; acepta cualquier Mapa de (como la de Python &lt;code&gt;dict&lt;/code&gt; y sus variantes en la &lt;code&gt;collections&lt;/code&gt; m&amp;oacute;dulo), &lt;code&gt;(feature, value)&lt;/code&gt; pares, o cadenas, en funci&amp;oacute;n del par&amp;aacute;metro constructor &lt;code&gt;input_type&lt;/code&gt; . Los mapeos se tratan como listas depares &lt;code&gt;(feature, value)&lt;/code&gt; , mientras que las cadenas individuales tienen un valor impl&amp;iacute;cito de 1, por lo que &lt;code&gt;['feat1', 'feat2', 'feat3']&lt;/code&gt; se interpreta como &lt;code&gt;[('feat1', 1), ('feat2', 1), ('feat3', 1)]&lt;/code&gt; . Si una sola caracter&amp;iacute;stica ocurre varias veces en una muestra, los valores asociados se sumar&amp;aacute;n (por lo que &lt;code&gt;('feat', 2)&lt;/code&gt; y &lt;code&gt;('feat', 3.5)&lt;/code&gt; convertir&amp;aacute;n en &lt;code&gt;('feat', 5.5)&lt;/code&gt; ).&lt;a href=&quot;generated/sklearn.feature_extraction.featurehasher#sklearn.feature_extraction.FeatureHasher&quot;&gt; &lt;code&gt;FeatureHasher&lt;/code&gt; &lt;/a&gt; es siempre unamatriz &lt;code&gt;scipy.sparse&lt;/code&gt; en formato CSR.</target>
        </trans-unit>
        <trans-unit id="db9aaad1a1da2a8d32410e23b6dd0e00cbe36efc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.featurehasher#sklearn.feature_extraction.FeatureHasher&quot;&gt;&lt;code&gt;FeatureHasher&lt;/code&gt;&lt;/a&gt; uses the signed 32-bit variant of MurmurHash3. As a result (and because of limitations in &lt;code&gt;scipy.sparse&lt;/code&gt;), the maximum number of features supported is currently \(2^{31} - 1\).</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.featurehasher#sklearn.feature_extraction.FeatureHasher&quot;&gt; &lt;code&gt;FeatureHasher&lt;/code&gt; &lt;/a&gt; utiliza la variante firmada de 32 bits de MurmurHash3. Como resultado (y debido a las limitaciones de &lt;code&gt;scipy.sparse&lt;/code&gt; ), el n&amp;uacute;mero m&amp;aacute;ximo de funciones admitidas actualmente es \ (2 ^ {31} - 1 \).</target>
        </trans-unit>
        <trans-unit id="fc55db510f56d523f5334aab3007bd0c7d1781c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.featurehasher#sklearn.feature_extraction.FeatureHasher&quot;&gt;&lt;code&gt;feature_extraction.FeatureHasher&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.featurehasher#sklearn.feature_extraction.FeatureHasher&quot;&gt;&lt;code&gt;feature_extraction.FeatureHasher&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="1124a3003490415eb6fc8142a05b80e8eec75ec1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.image.extract_patches_2d#sklearn.feature_extraction.image.extract_patches_2d&quot;&gt;&lt;code&gt;feature_extraction.image.extract_patches_2d&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.image.extract_patches_2d#sklearn.feature_extraction.image.extract_patches_2d&quot;&gt;&lt;code&gt;feature_extraction.image.extract_patches_2d&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="a5b3f99ce04c35a2339a337b235b5e007a78565a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.image.grid_to_graph#sklearn.feature_extraction.image.grid_to_graph&quot;&gt;&lt;code&gt;feature_extraction.image.grid_to_graph&lt;/code&gt;&lt;/a&gt;(n_x, n_y)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.image.grid_to_graph#sklearn.feature_extraction.image.grid_to_graph&quot;&gt; &lt;code&gt;feature_extraction.image.grid_to_graph&lt;/code&gt; &lt;/a&gt; (n_x, n_y)</target>
        </trans-unit>
        <trans-unit id="6e4d009643759dac294e10fb3dd9bfecde30ba51" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.image.img_to_graph#sklearn.feature_extraction.image.img_to_graph&quot;&gt;&lt;code&gt;feature_extraction.image.img_to_graph&lt;/code&gt;&lt;/a&gt;(img, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c451e02ce81d485b64b1947b1884eac30f8ddca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.image.img_to_graph#sklearn.feature_extraction.image.img_to_graph&quot;&gt;&lt;code&gt;feature_extraction.image.img_to_graph&lt;/code&gt;&lt;/a&gt;(img[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.image.img_to_graph#sklearn.feature_extraction.image.img_to_graph&quot;&gt; &lt;code&gt;feature_extraction.image.img_to_graph&lt;/code&gt; &lt;/a&gt; (img [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="bf4d0dec18426fecb9499deaf84af9d90611cb72" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.image.patchextractor#sklearn.feature_extraction.image.PatchExtractor&quot;&gt;&lt;code&gt;feature_extraction.image.PatchExtractor&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc2343a5863471d5d816b16b2868de6e2c88634b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.image.patchextractor#sklearn.feature_extraction.image.PatchExtractor&quot;&gt;&lt;code&gt;feature_extraction.image.PatchExtractor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.image.patchextractor#sklearn.feature_extraction.image.PatchExtractor&quot;&gt;&lt;code&gt;feature_extraction.image.PatchExtractor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="2c0b77d575d98d27d89d05faf98dd25557e62039" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.image.reconstruct_from_patches_2d#sklearn.feature_extraction.image.reconstruct_from_patches_2d&quot;&gt;&lt;code&gt;feature_extraction.image.reconstruct_from_patches_2d&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.image.reconstruct_from_patches_2d#sklearn.feature_extraction.image.reconstruct_from_patches_2d&quot;&gt;&lt;code&gt;feature_extraction.image.reconstruct_from_patches_2d&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="7a79ef532e02e2f7573dad6a21a58025af09a1ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.text.countvectorizer#sklearn.feature_extraction.text.CountVectorizer&quot;&gt;&lt;code&gt;CountVectorizer&lt;/code&gt;&lt;/a&gt; implements both tokenization and occurrence counting in a single class:</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.text.countvectorizer#sklearn.feature_extraction.text.CountVectorizer&quot;&gt; &lt;code&gt;CountVectorizer&lt;/code&gt; &lt;/a&gt; implementa tanto la tokenizaci&amp;oacute;n como el recuento de ocurrencias en una sola clase:</target>
        </trans-unit>
        <trans-unit id="45c180df83c4445b9b4f257595762271b0ff7353" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.text.countvectorizer#sklearn.feature_extraction.text.CountVectorizer&quot;&gt;&lt;code&gt;feature_extraction.text.CountVectorizer&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2785d8676c2894c904e7f89c755882ec10a0e28b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.text.countvectorizer#sklearn.feature_extraction.text.CountVectorizer&quot;&gt;&lt;code&gt;feature_extraction.text.CountVectorizer&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.text.countvectorizer#sklearn.feature_extraction.text.CountVectorizer&quot;&gt;&lt;code&gt;feature_extraction.text.CountVectorizer&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="c8a9a5abc92f6b34886d183abd578352946b395f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.text.hashingvectorizer#sklearn.feature_extraction.text.HashingVectorizer&quot;&gt;&lt;code&gt;feature_extraction.text.HashingVectorizer&lt;/code&gt;&lt;/a&gt;(*)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.text.hashingvectorizer#sklearn.feature_extraction.text.HashingVectorizer&quot;&gt;&lt;code&gt;feature_extraction.text.HashingVectorizer&lt;/code&gt;&lt;/a&gt;(*)</target>
        </trans-unit>
        <trans-unit id="49966a80db07f49687fe8a8b70f5eb636c947257" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.text.hashingvectorizer#sklearn.feature_extraction.text.HashingVectorizer&quot;&gt;&lt;code&gt;feature_extraction.text.HashingVectorizer&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.text.hashingvectorizer#sklearn.feature_extraction.text.HashingVectorizer&quot;&gt;&lt;code&gt;feature_extraction.text.HashingVectorizer&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="95e611be95d65a8074d6762b14615ee9b6899638" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.text.tfidftransformer#sklearn.feature_extraction.text.TfidfTransformer&quot;&gt;&lt;code&gt;feature_extraction.text.TfidfTransformer&lt;/code&gt;&lt;/a&gt;(*)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.text.tfidftransformer#sklearn.feature_extraction.text.TfidfTransformer&quot;&gt;&lt;code&gt;feature_extraction.text.TfidfTransformer&lt;/code&gt;&lt;/a&gt;(*)</target>
        </trans-unit>
        <trans-unit id="f236e80d783ed335ff2075120a87cec20a2756c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.text.tfidftransformer#sklearn.feature_extraction.text.TfidfTransformer&quot;&gt;&lt;code&gt;feature_extraction.text.TfidfTransformer&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.text.tfidftransformer#sklearn.feature_extraction.text.TfidfTransformer&quot;&gt;&lt;code&gt;feature_extraction.text.TfidfTransformer&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="bacf1c6fddb7116c2aeac8ddccfdeccc7d3b140f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.text.tfidfvectorizer#sklearn.feature_extraction.text.TfidfVectorizer&quot;&gt;&lt;code&gt;feature_extraction.text.TfidfVectorizer&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85b6618e4aba300b78b9bbe54e69257ecee27565" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_extraction.text.tfidfvectorizer#sklearn.feature_extraction.text.TfidfVectorizer&quot;&gt;&lt;code&gt;feature_extraction.text.TfidfVectorizer&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_extraction.text.tfidfvectorizer#sklearn.feature_extraction.text.TfidfVectorizer&quot;&gt;&lt;code&gt;feature_extraction.text.TfidfVectorizer&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="adf918669c622f017287b914b82a05012185f241" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.chi2#sklearn.feature_selection.chi2&quot;&gt;&lt;code&gt;feature_selection.chi2&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.chi2#sklearn.feature_selection.chi2&quot;&gt; &lt;code&gt;feature_selection.chi2&lt;/code&gt; &lt;/a&gt; (X, y)</target>
        </trans-unit>
        <trans-unit id="f3a9375d86406c8d00263a91ba831e0187caf7b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.f_classif#sklearn.feature_selection.f_classif&quot;&gt;&lt;code&gt;feature_selection.f_classif&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.f_classif#sklearn.feature_selection.f_classif&quot;&gt; &lt;code&gt;feature_selection.f_classif&lt;/code&gt; &lt;/a&gt; (X, y)</target>
        </trans-unit>
        <trans-unit id="529d60cc8ca22431f06e54c5e472e798ddf20336" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.f_regression#sklearn.feature_selection.f_regression&quot;&gt;&lt;code&gt;feature_selection.f_regression&lt;/code&gt;&lt;/a&gt;(X, y, *[, center])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0d8c6e0fb058cfe37dfaa9529b5511abdfc643e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.f_regression#sklearn.feature_selection.f_regression&quot;&gt;&lt;code&gt;feature_selection.f_regression&lt;/code&gt;&lt;/a&gt;(X, y[, center])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.f_regression#sklearn.feature_selection.f_regression&quot;&gt; &lt;code&gt;feature_selection.f_regression&lt;/code&gt; &lt;/a&gt; (X, y [, center])</target>
        </trans-unit>
        <trans-unit id="a5b29bb7ffb4ed8ecc8f37e367bb4c2d426d8b92" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.genericunivariateselect#sklearn.feature_selection.GenericUnivariateSelect&quot;&gt;&lt;code&gt;GenericUnivariateSelect&lt;/code&gt;&lt;/a&gt; allows to perform univariate feature selection with a configurable strategy. This allows to select the best univariate selection strategy with hyper-parameter search estimator.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.genericunivariateselect#sklearn.feature_selection.GenericUnivariateSelect&quot;&gt; &lt;code&gt;GenericUnivariateSelect&lt;/code&gt; &lt;/a&gt; permite realizar una selecci&amp;oacute;n de caracter&amp;iacute;sticas univariadas con una estrategia configurable. Esto permite seleccionar la mejor estrategia de selecci&amp;oacute;n univariante con estimador de b&amp;uacute;squeda de hiperpar&amp;aacute;metros.</target>
        </trans-unit>
        <trans-unit id="fb177f1244583ebcdb5ecff0faea0809c9952106" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.genericunivariateselect#sklearn.feature_selection.GenericUnivariateSelect&quot;&gt;&lt;code&gt;feature_selection.GenericUnivariateSelect&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.genericunivariateselect#sklearn.feature_selection.GenericUnivariateSelect&quot;&gt;&lt;code&gt;feature_selection.GenericUnivariateSelect&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="b3b27214f2f1014b3a0abbe46bc3c9bf4002b1cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.mutual_info_classif#sklearn.feature_selection.mutual_info_classif&quot;&gt;&lt;code&gt;feature_selection.mutual_info_classif&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.mutual_info_classif#sklearn.feature_selection.mutual_info_classif&quot;&gt; &lt;code&gt;feature_selection.mutual_info_classif&lt;/code&gt; &lt;/a&gt; (X, y)</target>
        </trans-unit>
        <trans-unit id="14f97ae73b1b992e2fa2e3834d120236fa32399f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.mutual_info_classif#sklearn.feature_selection.mutual_info_classif&quot;&gt;&lt;code&gt;feature_selection.mutual_info_classif&lt;/code&gt;&lt;/a&gt;(X, y, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44310524c1dadee19954a73a7fc6e03f4abc6027" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.mutual_info_regression#sklearn.feature_selection.mutual_info_regression&quot;&gt;&lt;code&gt;feature_selection.mutual_info_regression&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.mutual_info_regression#sklearn.feature_selection.mutual_info_regression&quot;&gt; &lt;code&gt;feature_selection.mutual_info_regression&lt;/code&gt; &lt;/a&gt; (X, y)</target>
        </trans-unit>
        <trans-unit id="b6127922745000b05458a137e934b65823c8a5a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.mutual_info_regression#sklearn.feature_selection.mutual_info_regression&quot;&gt;&lt;code&gt;feature_selection.mutual_info_regression&lt;/code&gt;&lt;/a&gt;(X, y, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5f2db0bdfc0f5e300b0702197f1d0f34f55c6c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.rfe#sklearn.feature_selection.RFE&quot;&gt;&lt;code&gt;feature_selection.RFE&lt;/code&gt;&lt;/a&gt;(estimator, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45710fb9d2236142417859a2ba412cbb1b418d8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.rfe#sklearn.feature_selection.RFE&quot;&gt;&lt;code&gt;feature_selection.RFE&lt;/code&gt;&lt;/a&gt;(estimator[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.rfe#sklearn.feature_selection.RFE&quot;&gt; &lt;code&gt;feature_selection.RFE&lt;/code&gt; &lt;/a&gt; (estimador [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="d80f02fa02daf62a11de75741cf7807671e36c0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.rfecv#sklearn.feature_selection.RFECV&quot;&gt;&lt;code&gt;RFECV&lt;/code&gt;&lt;/a&gt; performs RFE in a cross-validation loop to find the optimal number of features.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.rfecv#sklearn.feature_selection.RFECV&quot;&gt; &lt;code&gt;RFECV&lt;/code&gt; &lt;/a&gt; realiza RFE en un ciclo de validaci&amp;oacute;n cruzada para encontrar el n&amp;uacute;mero &amp;oacute;ptimo de caracter&amp;iacute;sticas.</target>
        </trans-unit>
        <trans-unit id="60b79c3666b9862d16b515ee70a282ad32d77243" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.rfecv#sklearn.feature_selection.RFECV&quot;&gt;&lt;code&gt;feature_selection.RFECV&lt;/code&gt;&lt;/a&gt;(estimator, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34ee82952a2a24bc5f25f463ea2b210729661d48" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.rfecv#sklearn.feature_selection.RFECV&quot;&gt;&lt;code&gt;feature_selection.RFECV&lt;/code&gt;&lt;/a&gt;(estimator[, step, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.rfecv#sklearn.feature_selection.RFECV&quot;&gt; &lt;code&gt;feature_selection.RFECV&lt;/code&gt; &lt;/a&gt; (estimador [, paso,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="dc81b59ed4ab18d9d5357dc59d38327a901e4116" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.selectfdr#sklearn.feature_selection.SelectFdr&quot;&gt;&lt;code&gt;feature_selection.SelectFdr&lt;/code&gt;&lt;/a&gt;([score_func, alpha])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.selectfdr#sklearn.feature_selection.SelectFdr&quot;&gt; &lt;code&gt;feature_selection.SelectFdr&lt;/code&gt; &lt;/a&gt; ([score_func, alpha])</target>
        </trans-unit>
        <trans-unit id="e9891455be9ff2bd2a35731dd6db00381fca2bf6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.selectfpr#sklearn.feature_selection.SelectFpr&quot;&gt;&lt;code&gt;feature_selection.SelectFpr&lt;/code&gt;&lt;/a&gt;([score_func, alpha])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.selectfpr#sklearn.feature_selection.SelectFpr&quot;&gt; &lt;code&gt;feature_selection.SelectFpr&lt;/code&gt; &lt;/a&gt; ([score_func, alpha])</target>
        </trans-unit>
        <trans-unit id="3c5a0ad12494f3451ae42dda190a45197b1d09e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.selectfrommodel#sklearn.feature_selection.SelectFromModel&quot;&gt;&lt;code&gt;SelectFromModel&lt;/code&gt;&lt;/a&gt; is a meta-transformer that can be used along with any estimator that has a &lt;code&gt;coef_&lt;/code&gt; or &lt;code&gt;feature_importances_&lt;/code&gt; attribute after fitting. The features are considered unimportant and removed, if the corresponding &lt;code&gt;coef_&lt;/code&gt; or &lt;code&gt;feature_importances_&lt;/code&gt; values are below the provided &lt;code&gt;threshold&lt;/code&gt; parameter. Apart from specifying the threshold numerically, there are built-in heuristics for finding a threshold using a string argument. Available heuristics are &amp;ldquo;mean&amp;rdquo;, &amp;ldquo;median&amp;rdquo; and float multiples of these like &amp;ldquo;0.1*mean&amp;rdquo;.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.selectfrommodel#sklearn.feature_selection.SelectFromModel&quot;&gt; &lt;code&gt;SelectFromModel&lt;/code&gt; &lt;/a&gt; es un metatransformador que se puede utilizar junto con cualquier estimador que tenga un &lt;code&gt;coef_&lt;/code&gt; o &lt;code&gt;feature_importances_&lt;/code&gt; despu&amp;eacute;s del ajuste. Las caracter&amp;iacute;sticas se consideran sin importancia y se eliminan, si los &lt;code&gt;coef_&lt;/code&gt; correspondientes de coef_ o &lt;code&gt;feature_importances_&lt;/code&gt; est&amp;aacute;n por debajo delpar&amp;aacute;metro de &lt;code&gt;threshold&lt;/code&gt; proporcionado. Adem&amp;aacute;s de especificar el umbral num&amp;eacute;ricamente, existen heur&amp;iacute;sticas integradas para encontrar un umbral utilizando un argumento de cadena. Las heur&amp;iacute;sticas disponibles son &quot;media&quot;, &quot;mediana&quot; y m&amp;uacute;ltiplos flotantes de estos como &quot;0,1 * media&quot;.</target>
        </trans-unit>
        <trans-unit id="33a4062795dd8cb50b238a2c27150afd47933d94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.selectfrommodel#sklearn.feature_selection.SelectFromModel&quot;&gt;&lt;code&gt;SelectFromModel&lt;/code&gt;&lt;/a&gt; is a meta-transformer that can be used along with any estimator that has a &lt;code&gt;coef_&lt;/code&gt; or &lt;code&gt;feature_importances_&lt;/code&gt; attribute after fitting. The features are considered unimportant and removed, if the corresponding &lt;code&gt;coef_&lt;/code&gt; or &lt;code&gt;feature_importances_&lt;/code&gt; values are below the provided &lt;code&gt;threshold&lt;/code&gt; parameter. Apart from specifying the threshold numerically, there are built-in heuristics for finding a threshold using a string argument. Available heuristics are &amp;ldquo;mean&amp;rdquo;, &amp;ldquo;median&amp;rdquo; and float multiples of these like &amp;ldquo;0.1*mean&amp;rdquo;. In combination with the &lt;code&gt;threshold&lt;/code&gt; criteria, one can use the &lt;code&gt;max_features&lt;/code&gt; parameter to set a limit on the number of features to select.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec240538d63c3f501a01ff6f2f6ba218f76985e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.selectfrommodel#sklearn.feature_selection.SelectFromModel&quot;&gt;&lt;code&gt;feature_selection.SelectFromModel&lt;/code&gt;&lt;/a&gt;(estimator)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.selectfrommodel#sklearn.feature_selection.SelectFromModel&quot;&gt;&lt;code&gt;feature_selection.SelectFromModel&lt;/code&gt;&lt;/a&gt;(estimator)</target>
        </trans-unit>
        <trans-unit id="ee607a873dfb6232d2b44b51a8cdf59f154a0919" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.selectfrommodel#sklearn.feature_selection.SelectFromModel&quot;&gt;&lt;code&gt;feature_selection.SelectFromModel&lt;/code&gt;&lt;/a&gt;(estimator, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae7b9a1b641d9a650ce5c990c7d827534ce13932" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.selectfwe#sklearn.feature_selection.SelectFwe&quot;&gt;&lt;code&gt;feature_selection.SelectFwe&lt;/code&gt;&lt;/a&gt;([score_func, alpha])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.selectfwe#sklearn.feature_selection.SelectFwe&quot;&gt; &lt;code&gt;feature_selection.SelectFwe&lt;/code&gt; &lt;/a&gt; ([score_func, alpha])</target>
        </trans-unit>
        <trans-unit id="69c8010300752bc5d2b22b38562e2114dbdf078a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.selectkbest#sklearn.feature_selection.SelectKBest&quot;&gt;&lt;code&gt;SelectKBest&lt;/code&gt;&lt;/a&gt; removes all but the \(k\) highest scoring features</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.selectkbest#sklearn.feature_selection.SelectKBest&quot;&gt; &lt;code&gt;SelectKBest&lt;/code&gt; &lt;/a&gt; elimina todas las caracter&amp;iacute;sticas de puntuaci&amp;oacute;n m&amp;aacute;s alta excepto \ (k \)</target>
        </trans-unit>
        <trans-unit id="bb02fbc4fc44a0c91c89555cbd7cf3d3c98e4979" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.selectkbest#sklearn.feature_selection.SelectKBest&quot;&gt;&lt;code&gt;feature_selection.SelectKBest&lt;/code&gt;&lt;/a&gt;([score_func, k])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.selectkbest#sklearn.feature_selection.SelectKBest&quot;&gt; &lt;code&gt;feature_selection.SelectKBest&lt;/code&gt; &lt;/a&gt; ([score_func, k])</target>
        </trans-unit>
        <trans-unit id="91ba1e6e588ae6ab026f98f6373511731d2b14ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.selectpercentile#sklearn.feature_selection.SelectPercentile&quot;&gt;&lt;code&gt;SelectPercentile&lt;/code&gt;&lt;/a&gt; removes all but a user-specified highest scoring percentage of features</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.selectpercentile#sklearn.feature_selection.SelectPercentile&quot;&gt; &lt;code&gt;SelectPercentile&lt;/code&gt; &lt;/a&gt; elimina todas las funciones excepto un porcentaje de puntuaci&amp;oacute;n m&amp;aacute;s alto especificado por el usuario</target>
        </trans-unit>
        <trans-unit id="3a60a6417e76fb7a238f6a397baf953ef2956a77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.selectpercentile#sklearn.feature_selection.SelectPercentile&quot;&gt;&lt;code&gt;feature_selection.SelectPercentile&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.selectpercentile#sklearn.feature_selection.SelectPercentile&quot;&gt;&lt;code&gt;feature_selection.SelectPercentile&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="044d9493f7a2099e98c2ced40b996e4591896166" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.variancethreshold#sklearn.feature_selection.VarianceThreshold&quot;&gt;&lt;code&gt;VarianceThreshold&lt;/code&gt;&lt;/a&gt; is a simple baseline approach to feature selection. It removes all features whose variance doesn&amp;rsquo;t meet some threshold. By default, it removes all zero-variance features, i.e. features that have the same value in all samples.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.variancethreshold#sklearn.feature_selection.VarianceThreshold&quot;&gt; &lt;code&gt;VarianceThreshold&lt;/code&gt; &lt;/a&gt; es un enfoque b&amp;aacute;sico simple para la selecci&amp;oacute;n de caracter&amp;iacute;sticas. Elimina todas las caracter&amp;iacute;sticas cuya variaci&amp;oacute;n no alcanza alg&amp;uacute;n umbral. De forma predeterminada, elimina todas las caracter&amp;iacute;sticas de varianza cero, es decir, las caracter&amp;iacute;sticas que tienen el mismo valor en todas las muestras.</target>
        </trans-unit>
        <trans-unit id="7c877666a1ebfd2b4274d66780f0b5307e389891" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.feature_selection.variancethreshold#sklearn.feature_selection.VarianceThreshold&quot;&gt;&lt;code&gt;feature_selection.VarianceThreshold&lt;/code&gt;&lt;/a&gt;([threshold])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.feature_selection.variancethreshold#sklearn.feature_selection.VarianceThreshold&quot;&gt;&lt;code&gt;feature_selection.VarianceThreshold&lt;/code&gt;&lt;/a&gt;([threshold])</target>
        </trans-unit>
        <trans-unit id="22652dec81acc1283c813305c9271231d930a820" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.gaussianprocessclassifier#sklearn.gaussian_process.GaussianProcessClassifier&quot;&gt;&lt;code&gt;GaussianProcessClassifier&lt;/code&gt;&lt;/a&gt; supports multi-class classification by performing either one-versus-rest or one-versus-one based training and prediction. In one-versus-rest, one binary Gaussian process classifier is fitted for each class, which is trained to separate this class from the rest. In &amp;ldquo;one_vs_one&amp;rdquo;, one binary Gaussian process classifier is fitted for each pair of classes, which is trained to separate these two classes. The predictions of these binary predictors are combined into multi-class predictions. See the section on &lt;a href=&quot;multiclass#multiclass&quot;&gt;multi-class classification&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.gaussianprocessclassifier#sklearn.gaussian_process.GaussianProcessClassifier&quot;&gt; &lt;code&gt;GaussianProcessClassifier&lt;/code&gt; &lt;/a&gt; admite la clasificaci&amp;oacute;n de clases m&amp;uacute;ltiples al realizar entrenamiento y predicci&amp;oacute;n basados ​​en uno contra descanso o uno contra uno. En uno versus reposo, se ajusta un clasificador de proceso gaussiano binario para cada clase, que est&amp;aacute; entrenado para separar esta clase del resto. En &amp;ldquo;one_vs_one&amp;rdquo;, se ajusta un clasificador de proceso gaussiano binario para cada par de clases, que se entrena para separar estas dos clases. Las predicciones de estos predictores binarios se combinan en predicciones de varias clases. Consulte la secci&amp;oacute;n sobre&lt;a href=&quot;multiclass#multiclass&quot;&gt; clasificaci&amp;oacute;n de clases m&amp;uacute;ltiples&lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="fdd56d0834201a119c09d735190ede32d8c1bc7e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.gaussianprocessclassifier#sklearn.gaussian_process.GaussianProcessClassifier&quot;&gt;&lt;code&gt;gaussian_process.GaussianProcessClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.gaussianprocessclassifier#sklearn.gaussian_process.GaussianProcessClassifier&quot;&gt;&lt;code&gt;gaussian_process.GaussianProcessClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="5322b91eab7af477ef6901ae246a9be2492ce2ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.gaussianprocessclassifier#sklearn.gaussian_process.GaussianProcessClassifier&quot;&gt;&lt;code&gt;sklearn.gaussian_process.GaussianProcessClassifier&lt;/code&gt;&lt;/a&gt; (setting multi_class = &amp;ldquo;one_vs_one&amp;rdquo;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.gaussianprocessclassifier#sklearn.gaussian_process.GaussianProcessClassifier&quot;&gt; &lt;code&gt;sklearn.gaussian_process.GaussianProcessClassifier&lt;/code&gt; &lt;/a&gt; (configurando multi_class = &amp;ldquo;one_vs_one&amp;rdquo;)</target>
        </trans-unit>
        <trans-unit id="cd08f370b97326c6d08f5f1724e124bfed5dd6a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.gaussianprocessclassifier#sklearn.gaussian_process.GaussianProcessClassifier&quot;&gt;&lt;code&gt;sklearn.gaussian_process.GaussianProcessClassifier&lt;/code&gt;&lt;/a&gt; (setting multi_class = &amp;ldquo;one_vs_rest&amp;rdquo;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.gaussianprocessclassifier#sklearn.gaussian_process.GaussianProcessClassifier&quot;&gt; &lt;code&gt;sklearn.gaussian_process.GaussianProcessClassifier&lt;/code&gt; &lt;/a&gt; (configurando multi_class = &amp;ldquo;one_vs_rest&amp;rdquo;)</target>
        </trans-unit>
        <trans-unit id="8de3ee96f5f01d430f020114d18a454a4020262d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.gaussianprocessregressor#sklearn.gaussian_process.GaussianProcessRegressor&quot;&gt;&lt;code&gt;gaussian_process.GaussianProcessRegressor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.gaussianprocessregressor#sklearn.gaussian_process.GaussianProcessRegressor&quot;&gt;&lt;code&gt;gaussian_process.GaussianProcessRegressor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="2b08588e82fcd327d6b91869b4615d6eac928a72" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.compoundkernel#sklearn.gaussian_process.kernels.CompoundKernel&quot;&gt;&lt;code&gt;gaussian_process.kernels.CompoundKernel&lt;/code&gt;&lt;/a&gt;(kernels)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.compoundkernel#sklearn.gaussian_process.kernels.CompoundKernel&quot;&gt;&lt;code&gt;gaussian_process.kernels.CompoundKernel&lt;/code&gt;&lt;/a&gt;(kernels)</target>
        </trans-unit>
        <trans-unit id="815d6023a6697cdbf3d07d272617c442ac11c2b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.constantkernel#sklearn.gaussian_process.kernels.ConstantKernel&quot;&gt;&lt;code&gt;gaussian_process.kernels.ConstantKernel&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.constantkernel#sklearn.gaussian_process.kernels.ConstantKernel&quot;&gt;&lt;code&gt;gaussian_process.kernels.ConstantKernel&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="f1a53dd3b09a49ccad1f76a8be6b281006ab35af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.dotproduct#sklearn.gaussian_process.kernels.DotProduct&quot;&gt;&lt;code&gt;gaussian_process.kernels.DotProduct&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.dotproduct#sklearn.gaussian_process.kernels.DotProduct&quot;&gt;&lt;code&gt;gaussian_process.kernels.DotProduct&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="ed593e0e20db54c1e1a1b144257a29eccd342c90" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.exponentiation#sklearn.gaussian_process.kernels.Exponentiation&quot;&gt;&lt;code&gt;gaussian_process.kernels.Exponentiation&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.exponentiation#sklearn.gaussian_process.kernels.Exponentiation&quot;&gt;&lt;code&gt;gaussian_process.kernels.Exponentiation&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="1b549179a39ca48f936a53b1913041e4b5973684" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.expsinesquared#sklearn.gaussian_process.kernels.ExpSineSquared&quot;&gt;&lt;code&gt;gaussian_process.kernels.ExpSineSquared&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.expsinesquared#sklearn.gaussian_process.kernels.ExpSineSquared&quot;&gt;&lt;code&gt;gaussian_process.kernels.ExpSineSquared&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="13d4e33ab278a59a48456d657091a0434022e414" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.matern#sklearn.gaussian_process.kernels.Matern&quot;&gt;&lt;code&gt;gaussian_process.kernels.Matern&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.matern#sklearn.gaussian_process.kernels.Matern&quot;&gt;&lt;code&gt;gaussian_process.kernels.Matern&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="e68405b2a68d44a9c9ed6d618182d170eac139bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.pairwisekernel#sklearn.gaussian_process.kernels.PairwiseKernel&quot;&gt;&lt;code&gt;gaussian_process.kernels.PairwiseKernel&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.pairwisekernel#sklearn.gaussian_process.kernels.PairwiseKernel&quot;&gt;&lt;code&gt;gaussian_process.kernels.PairwiseKernel&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="3044c4c3761fb3be525ab760dbfde797c8b526d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.product#sklearn.gaussian_process.kernels.Product&quot;&gt;&lt;code&gt;gaussian_process.kernels.Product&lt;/code&gt;&lt;/a&gt;(k1, k2)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.product#sklearn.gaussian_process.kernels.Product&quot;&gt; &lt;code&gt;gaussian_process.kernels.Product&lt;/code&gt; &lt;/a&gt; (k1, k2)</target>
        </trans-unit>
        <trans-unit id="71d5cad59224cd62715df45b67b8e625f4c6434e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.rationalquadratic#sklearn.gaussian_process.kernels.RationalQuadratic&quot;&gt;&lt;code&gt;gaussian_process.kernels.RationalQuadratic&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.rationalquadratic#sklearn.gaussian_process.kernels.RationalQuadratic&quot;&gt;&lt;code&gt;gaussian_process.kernels.RationalQuadratic&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="86c8f9443de9bbdae398550f3856a549ef22d2e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.rbf#sklearn.gaussian_process.kernels.RBF&quot;&gt;&lt;code&gt;gaussian_process.kernels.RBF&lt;/code&gt;&lt;/a&gt;([length_scale, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.rbf#sklearn.gaussian_process.kernels.RBF&quot;&gt; &lt;code&gt;gaussian_process.kernels.RBF&lt;/code&gt; &lt;/a&gt; ([length_scale,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="37516a63d2fa2efe1e4e73459efd6194d1dac9b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.sum#sklearn.gaussian_process.kernels.Sum&quot;&gt;&lt;code&gt;gaussian_process.kernels.Sum&lt;/code&gt;&lt;/a&gt;(k1, k2)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.sum#sklearn.gaussian_process.kernels.Sum&quot;&gt; &lt;code&gt;gaussian_process.kernels.Sum&lt;/code&gt; &lt;/a&gt; (k1, k2)</target>
        </trans-unit>
        <trans-unit id="a29ef926106e264e7e34fcc406e6beae3a9432a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.whitekernel#sklearn.gaussian_process.kernels.WhiteKernel&quot;&gt;&lt;code&gt;gaussian_process.kernels.WhiteKernel&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.gaussian_process.kernels.whitekernel#sklearn.gaussian_process.kernels.WhiteKernel&quot;&gt;&lt;code&gt;gaussian_process.kernels.WhiteKernel&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="b60a50333125887b505e4c252d225ceecde61b64" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.get_config#sklearn.get_config&quot;&gt;&lt;code&gt;get_config&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.get_config#sklearn.get_config&quot;&gt;&lt;code&gt;get_config&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="a3b5279dd9ef1fcb47c3969cc288d48712558ed6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.impute.iterativeimputer#sklearn.impute.IterativeImputer&quot;&gt;&lt;code&gt;impute.IterativeImputer&lt;/code&gt;&lt;/a&gt;([estimator, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9550edaff411ebae6d893c34bd07c50e76c7066" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.impute.knnimputer#sklearn.impute.KNNImputer&quot;&gt;&lt;code&gt;impute.KNNImputer&lt;/code&gt;&lt;/a&gt;(*[, missing_values, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca6cb284224930c7f903ec059fa9a1069a99f20c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.impute.missingindicator#sklearn.impute.MissingIndicator&quot;&gt;&lt;code&gt;impute.MissingIndicator&lt;/code&gt;&lt;/a&gt;(*[, missing_values, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a74fe3209807b9a59e1c186b1e744bba1df41e78" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.impute.missingindicator#sklearn.impute.MissingIndicator&quot;&gt;&lt;code&gt;impute.MissingIndicator&lt;/code&gt;&lt;/a&gt;([missing_values, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.impute.missingindicator#sklearn.impute.MissingIndicator&quot;&gt; &lt;code&gt;impute.MissingIndicator&lt;/code&gt; &lt;/a&gt; ([missing_values,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="147bffd28e4cc951e06f9cfba5c2a8382913dd3d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.impute.simpleimputer#sklearn.impute.SimpleImputer&quot;&gt;&lt;code&gt;SimpleImputer&lt;/code&gt;&lt;/a&gt; can be used in a Pipeline as a way to build a composite estimator that supports imputation. See &lt;a href=&quot;../auto_examples/plot_missing_values#sphx-glr-auto-examples-plot-missing-values-py&quot;&gt;Imputing missing values before building an estimator&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.impute.simpleimputer#sklearn.impute.SimpleImputer&quot;&gt; &lt;code&gt;SimpleImputer&lt;/code&gt; &lt;/a&gt; se puede usar en un Pipeline como una forma de construir un estimador compuesto que admita la imputaci&amp;oacute;n. Consulte&lt;a href=&quot;../auto_examples/plot_missing_values#sphx-glr-auto-examples-plot-missing-values-py&quot;&gt; Imputaci&amp;oacute;n de valores perdidos antes de crear un estimador&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="49170a557821ccbde60a3a0fdd42d5cb8c0a31e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.impute.simpleimputer#sklearn.impute.SimpleImputer&quot;&gt;&lt;code&gt;impute.SimpleImputer&lt;/code&gt;&lt;/a&gt;(*[, missing_values, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2c6396e08188deb8eaff6bcb76e7959158f6dfa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.impute.simpleimputer#sklearn.impute.SimpleImputer&quot;&gt;&lt;code&gt;impute.SimpleImputer&lt;/code&gt;&lt;/a&gt;([missing_values, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.impute.simpleimputer#sklearn.impute.SimpleImputer&quot;&gt; &lt;code&gt;impute.SimpleImputer&lt;/code&gt; &lt;/a&gt; ([missing_values,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="dcd4f9ce1f902bdeab52cb3e553259e58af71f69" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.inspection.partial_dependence#sklearn.inspection.partial_dependence&quot;&gt;&lt;code&gt;inspection.partial_dependence&lt;/code&gt;&lt;/a&gt;(estimator, X, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9b03d604fc7f720fac6c6bfedc8bdf6966b36d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.inspection.partialdependencedisplay#sklearn.inspection.PartialDependenceDisplay&quot;&gt;&lt;code&gt;inspection.PartialDependenceDisplay&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.inspection.partialdependencedisplay#sklearn.inspection.PartialDependenceDisplay&quot;&gt;&lt;code&gt;inspection.PartialDependenceDisplay&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="46770377353775b0c4b8b3ba25b76eca1eb6de5e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.inspection.permutation_importance#sklearn.inspection.permutation_importance&quot;&gt;&lt;code&gt;inspection.permutation_importance&lt;/code&gt;&lt;/a&gt;(estimator, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6749ee64d49eb526918c63f707212010db5bc1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.inspection.plot_partial_dependence#sklearn.inspection.plot_partial_dependence&quot;&gt;&lt;code&gt;inspection.plot_partial_dependence&lt;/code&gt;&lt;/a&gt;(&amp;hellip;[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="917ca251c02b98662dfdf6922cb93a1ea03df782" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.isotonic.check_increasing#sklearn.isotonic.check_increasing&quot;&gt;&lt;code&gt;isotonic.check_increasing&lt;/code&gt;&lt;/a&gt;(x, y)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.isotonic.check_increasing#sklearn.isotonic.check_increasing&quot;&gt; &lt;code&gt;isotonic.check_increasing&lt;/code&gt; &lt;/a&gt; (x, y)</target>
        </trans-unit>
        <trans-unit id="d45415bf08bea40b699037e74cfb535465f65352" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.isotonic.isotonic_regression#sklearn.isotonic.isotonic_regression&quot;&gt;&lt;code&gt;isotonic.isotonic_regression&lt;/code&gt;&lt;/a&gt;(y, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aa23fe350124b0e719eb698a6a718e721c14f87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.isotonic.isotonic_regression#sklearn.isotonic.isotonic_regression&quot;&gt;&lt;code&gt;isotonic.isotonic_regression&lt;/code&gt;&lt;/a&gt;(y[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.isotonic.isotonic_regression#sklearn.isotonic.isotonic_regression&quot;&gt; &lt;code&gt;isotonic.isotonic_regression&lt;/code&gt; &lt;/a&gt; (y [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="9dc161d76b120ba7e1860bb77d341ae485bf6ee7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.isotonic.isotonicregression#sklearn.isotonic.IsotonicRegression&quot;&gt;&lt;code&gt;IsotonicRegression&lt;/code&gt;&lt;/a&gt; produces a series of predictions \(\hat{y}_i\) for the training data which are the closest to the targets \(y\) in terms of mean squared error. These predictions are interpolated for predicting to unseen data. The predictions of &lt;a href=&quot;generated/sklearn.isotonic.isotonicregression#sklearn.isotonic.IsotonicRegression&quot;&gt;&lt;code&gt;IsotonicRegression&lt;/code&gt;&lt;/a&gt; thus form a function that is piecewise linear:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ccfcdea5caafc19963722982aa178163502a0af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.isotonic.isotonicregression#sklearn.isotonic.IsotonicRegression&quot;&gt;&lt;code&gt;isotonic.IsotonicRegression&lt;/code&gt;&lt;/a&gt;(*[, y_min, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d93bb84c61df15aead0ac1224117b486f70c954" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.isotonic.isotonicregression#sklearn.isotonic.IsotonicRegression&quot;&gt;&lt;code&gt;isotonic.IsotonicRegression&lt;/code&gt;&lt;/a&gt;([y_min, y_max, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.isotonic.isotonicregression#sklearn.isotonic.IsotonicRegression&quot;&gt; &lt;code&gt;isotonic.IsotonicRegression&lt;/code&gt; &lt;/a&gt; ([m&amp;iacute;n_y, m&amp;aacute;x_y, ...])</target>
        </trans-unit>
        <trans-unit id="bc6bd327c82d008e35c6fe07a82c45ca94d0c647" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.kernel_approximation.additivechi2sampler#sklearn.kernel_approximation.AdditiveChi2Sampler&quot;&gt;&lt;code&gt;kernel_approximation.AdditiveChi2Sampler&lt;/code&gt;&lt;/a&gt;(*)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.kernel_approximation.additivechi2sampler#sklearn.kernel_approximation.AdditiveChi2Sampler&quot;&gt;&lt;code&gt;kernel_approximation.AdditiveChi2Sampler&lt;/code&gt;&lt;/a&gt;(*)</target>
        </trans-unit>
        <trans-unit id="d3a5ab18128fdd9051ee7e26d1989f5fe79a85b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.kernel_approximation.additivechi2sampler#sklearn.kernel_approximation.AdditiveChi2Sampler&quot;&gt;&lt;code&gt;kernel_approximation.AdditiveChi2Sampler&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.kernel_approximation.additivechi2sampler#sklearn.kernel_approximation.AdditiveChi2Sampler&quot;&gt;&lt;code&gt;kernel_approximation.AdditiveChi2Sampler&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="c15e18a23b6aceb31106f2ae683829a43b46dcf6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.kernel_approximation.nystroem#sklearn.kernel_approximation.Nystroem&quot;&gt;&lt;code&gt;kernel_approximation.Nystroem&lt;/code&gt;&lt;/a&gt;([kernel, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.kernel_approximation.nystroem#sklearn.kernel_approximation.Nystroem&quot;&gt; &lt;code&gt;kernel_approximation.Nystroem&lt;/code&gt; &lt;/a&gt; ([kernel,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="fb2688440bb9f60859c2ad9f302e83945adb7005" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.kernel_approximation.rbfsampler#sklearn.kernel_approximation.RBFSampler&quot;&gt;&lt;code&gt;kernel_approximation.RBFSampler&lt;/code&gt;&lt;/a&gt;(*[, gamma, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74870e36cbd22817ba9e6a0937b948cda244f4ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.kernel_approximation.rbfsampler#sklearn.kernel_approximation.RBFSampler&quot;&gt;&lt;code&gt;kernel_approximation.RBFSampler&lt;/code&gt;&lt;/a&gt;([gamma, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.kernel_approximation.rbfsampler#sklearn.kernel_approximation.RBFSampler&quot;&gt; &lt;code&gt;kernel_approximation.RBFSampler&lt;/code&gt; &lt;/a&gt; ([gamma,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="04e76409a0f488e64a8692b168ea67e0c4a1251f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.kernel_approximation.skewedchi2sampler#sklearn.kernel_approximation.SkewedChi2Sampler&quot;&gt;&lt;code&gt;kernel_approximation.SkewedChi2Sampler&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99373ea8262ced9b9ac126172101181a9c4ba5a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.kernel_approximation.skewedchi2sampler#sklearn.kernel_approximation.SkewedChi2Sampler&quot;&gt;&lt;code&gt;kernel_approximation.SkewedChi2Sampler&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.kernel_approximation.skewedchi2sampler#sklearn.kernel_approximation.SkewedChi2Sampler&quot;&gt;&lt;code&gt;kernel_approximation.SkewedChi2Sampler&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="aa595f1efba3e28d225adf72abd9000b5a06e2d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.kernel_ridge.kernelridge#sklearn.kernel_ridge.KernelRidge&quot;&gt;&lt;code&gt;kernel_ridge.KernelRidge&lt;/code&gt;&lt;/a&gt;([alpha, kernel, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.kernel_ridge.kernelridge#sklearn.kernel_ridge.KernelRidge&quot;&gt; &lt;code&gt;kernel_ridge.KernelRidge&lt;/code&gt; &lt;/a&gt; ([alpha, kernel,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="d9951e87a310b9386c7069f4214385dbdefe604e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.ardregression#sklearn.linear_model.ARDRegression&quot;&gt;&lt;code&gt;ARDRegression&lt;/code&gt;&lt;/a&gt; is very similar to &lt;a href=&quot;#id13&quot;&gt;Bayesian Ridge Regression&lt;/a&gt;, but can lead to sparser weights \(w\)&lt;a href=&quot;#id18&quot; id=&quot;id14&quot;&gt;[1]&lt;/a&gt;&lt;a href=&quot;#id19&quot; id=&quot;id15&quot;&gt;[2]&lt;/a&gt;. &lt;a href=&quot;generated/sklearn.linear_model.ardregression#sklearn.linear_model.ARDRegression&quot;&gt;&lt;code&gt;ARDRegression&lt;/code&gt;&lt;/a&gt; poses a different prior over \(w\), by dropping the assumption of the Gaussian being spherical.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.ardregression#sklearn.linear_model.ARDRegression&quot;&gt; &lt;code&gt;ARDRegression&lt;/code&gt; &lt;/a&gt; es muy similar a&lt;a href=&quot;#id13&quot;&gt; la Regresi&amp;oacute;n de la cresta bayesiana&lt;/a&gt; , pero puede conducir a pesos m&amp;aacute;s dispersos \ (w \)&lt;a href=&quot;#id18&quot; id=&quot;id14&quot;&gt; [1] &lt;/a&gt;&lt;a href=&quot;#id19&quot; id=&quot;id15&quot;&gt;[2]&lt;/a&gt; . &lt;a href=&quot;generated/sklearn.linear_model.ardregression#sklearn.linear_model.ARDRegression&quot;&gt; &lt;code&gt;ARDRegression&lt;/code&gt; &lt;/a&gt; plantea un anterior diferente sobre \ (w \), al descartar la suposici&amp;oacute;n de que el Gauss es esf&amp;eacute;rico.</target>
        </trans-unit>
        <trans-unit id="2b30e210354dd8872216ae6c70bba869177347d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.ardregression#sklearn.linear_model.ARDRegression&quot;&gt;&lt;code&gt;ARDRegression&lt;/code&gt;&lt;/a&gt; is very similar to &lt;a href=&quot;#id9&quot;&gt;Bayesian Ridge Regression&lt;/a&gt;, but can lead to sparser coefficients \(w\)&lt;a href=&quot;#id14&quot; id=&quot;id10&quot;&gt;1&lt;/a&gt;&lt;a href=&quot;#id15&quot; id=&quot;id11&quot;&gt;2&lt;/a&gt;. &lt;a href=&quot;generated/sklearn.linear_model.ardregression#sklearn.linear_model.ARDRegression&quot;&gt;&lt;code&gt;ARDRegression&lt;/code&gt;&lt;/a&gt; poses a different prior over \(w\), by dropping the assumption of the Gaussian being spherical.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0de65fd186cce0ea2e4ffa41ef42f3bbe240f207" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.ardregression#sklearn.linear_model.ARDRegression&quot;&gt;&lt;code&gt;linear_model.ARDRegression&lt;/code&gt;&lt;/a&gt;(*[, n_iter, tol, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bb4f723c281937b48f50f6d2437227cf2396cde" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.ardregression#sklearn.linear_model.ARDRegression&quot;&gt;&lt;code&gt;linear_model.ARDRegression&lt;/code&gt;&lt;/a&gt;([n_iter, tol, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.ardregression#sklearn.linear_model.ARDRegression&quot;&gt; &lt;code&gt;linear_model.ARDRegression&lt;/code&gt; &lt;/a&gt; ([n_iter, tol,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="9046e91fb6a6fbc3bf2462d140cdbade489ba3dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.bayesianridge#sklearn.linear_model.BayesianRidge&quot;&gt;&lt;code&gt;BayesianRidge&lt;/code&gt;&lt;/a&gt; estimates a probabilistic model of the regression problem as described above. The prior for the coefficient \(w\) is given by a spherical Gaussian:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2053491901e6666bcd9398a44de26d51d986167" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.bayesianridge#sklearn.linear_model.BayesianRidge&quot;&gt;&lt;code&gt;BayesianRidge&lt;/code&gt;&lt;/a&gt; estimates a probabilistic model of the regression problem as described above. The prior for the parameter \(w\) is given by a spherical Gaussian:</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.bayesianridge#sklearn.linear_model.BayesianRidge&quot;&gt; &lt;code&gt;BayesianRidge&lt;/code&gt; &lt;/a&gt; estima un modelo probabil&amp;iacute;stico del problema de regresi&amp;oacute;n como se describi&amp;oacute; anteriormente. La prioridad para el par&amp;aacute;metro \ (w \) viene dada por un gaussiano esf&amp;eacute;rico:</target>
        </trans-unit>
        <trans-unit id="2a6cacb137d05f7f537b5bfecb93685b584c107a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.bayesianridge#sklearn.linear_model.BayesianRidge&quot;&gt;&lt;code&gt;linear_model.BayesianRidge&lt;/code&gt;&lt;/a&gt;(*[, n_iter, tol, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7007b16b8f8cfb9734c4b40612b23b7d25dbdcf0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.bayesianridge#sklearn.linear_model.BayesianRidge&quot;&gt;&lt;code&gt;linear_model.BayesianRidge&lt;/code&gt;&lt;/a&gt;([n_iter, tol, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.bayesianridge#sklearn.linear_model.BayesianRidge&quot;&gt; &lt;code&gt;linear_model.BayesianRidge&lt;/code&gt; &lt;/a&gt; ([n_iter, tol,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="c53f22d10dffa4b4c725209b80bca9facb1296c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.elasticnet#sklearn.linear_model.ElasticNet&quot;&gt;&lt;code&gt;ElasticNet&lt;/code&gt;&lt;/a&gt; is a linear regression model trained with L1 and L2 prior as regularizer. This combination allows for learning a sparse model where few of the weights are non-zero like &lt;a href=&quot;generated/sklearn.linear_model.lasso#sklearn.linear_model.Lasso&quot;&gt;&lt;code&gt;Lasso&lt;/code&gt;&lt;/a&gt;, while still maintaining the regularization properties of &lt;a href=&quot;generated/sklearn.linear_model.ridge#sklearn.linear_model.Ridge&quot;&gt;&lt;code&gt;Ridge&lt;/code&gt;&lt;/a&gt;. We control the convex combination of L1 and L2 using the &lt;code&gt;l1_ratio&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.elasticnet#sklearn.linear_model.ElasticNet&quot;&gt; &lt;code&gt;ElasticNet&lt;/code&gt; &lt;/a&gt; es un modelo de regresi&amp;oacute;n lineal entrenado con L1 y L2 antes como regularizador. Esta combinaci&amp;oacute;n permite aprender un modelo disperso donde algunos de los pesos son distintos de cero como&lt;a href=&quot;generated/sklearn.linear_model.lasso#sklearn.linear_model.Lasso&quot;&gt; &lt;code&gt;Lasso&lt;/code&gt; &lt;/a&gt; , mientras se mantienen las propiedades de regularizaci&amp;oacute;n de&lt;a href=&quot;generated/sklearn.linear_model.ridge#sklearn.linear_model.Ridge&quot;&gt; &lt;code&gt;Ridge&lt;/code&gt; &lt;/a&gt; . Controlamos la combinaci&amp;oacute;n convexa de L1 y L2 usando elpar&amp;aacute;metro &lt;code&gt;l1_ratio&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7e16862029230219c4101d6de22050e7b8132998" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.elasticnet#sklearn.linear_model.ElasticNet&quot;&gt;&lt;code&gt;ElasticNet&lt;/code&gt;&lt;/a&gt; is a linear regression model trained with both \(\ell_1\) and \(\ell_2\)-norm regularization of the coefficients. This combination allows for learning a sparse model where few of the weights are non-zero like &lt;a href=&quot;generated/sklearn.linear_model.lasso#sklearn.linear_model.Lasso&quot;&gt;&lt;code&gt;Lasso&lt;/code&gt;&lt;/a&gt;, while still maintaining the regularization properties of &lt;a href=&quot;generated/sklearn.linear_model.ridge#sklearn.linear_model.Ridge&quot;&gt;&lt;code&gt;Ridge&lt;/code&gt;&lt;/a&gt;. We control the convex combination of \(\ell_1\) and \(\ell_2\) using the &lt;code&gt;l1_ratio&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a7af8585ba011b70e07b8132f31ab81638386da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.elasticnet#sklearn.linear_model.ElasticNet&quot;&gt;&lt;code&gt;linear_model.ElasticNet&lt;/code&gt;&lt;/a&gt;([alpha, l1_ratio, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.elasticnet#sklearn.linear_model.ElasticNet&quot;&gt; &lt;code&gt;linear_model.ElasticNet&lt;/code&gt; &lt;/a&gt; ([alpha, l1_ratio,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="1e93135912cd99974c57ef0653180fee4a1f84f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.elasticnetcv#sklearn.linear_model.ElasticNetCV&quot;&gt;&lt;code&gt;linear_model.ElasticNetCV&lt;/code&gt;&lt;/a&gt;(*[, l1_ratio, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f66e5ace7c54e2b3806c8e21cea467b0ae435392" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.elasticnetcv#sklearn.linear_model.ElasticNetCV&quot;&gt;&lt;code&gt;linear_model.ElasticNetCV&lt;/code&gt;&lt;/a&gt;([l1_ratio, eps, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.elasticnetcv#sklearn.linear_model.ElasticNetCV&quot;&gt; &lt;code&gt;linear_model.ElasticNetCV&lt;/code&gt; &lt;/a&gt; ([l1_ratio, eps,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="fefaaff4dba09ed97e28b30115d4fbbc600c4660" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.enet_path#sklearn.linear_model.enet_path&quot;&gt;&lt;code&gt;linear_model.enet_path&lt;/code&gt;&lt;/a&gt;(X, y, *[, l1_ratio, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be8ccdb319576dbe3186affdb4d80747fdc3eb03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.enet_path#sklearn.linear_model.enet_path&quot;&gt;&lt;code&gt;linear_model.enet_path&lt;/code&gt;&lt;/a&gt;(X, y[, l1_ratio, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.enet_path#sklearn.linear_model.enet_path&quot;&gt; &lt;code&gt;linear_model.enet_path&lt;/code&gt; &lt;/a&gt; (X, y [, l1_ratio,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="c39aa4cf4770df429cfa8b4daa25debc9e2f8474" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.gammaregressor#sklearn.linear_model.GammaRegressor&quot;&gt;&lt;code&gt;linear_model.GammaRegressor&lt;/code&gt;&lt;/a&gt;(*[, alpha, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4decbec8ca1de7810069a3a6e2d984d5785c5b9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.huberregressor#sklearn.linear_model.HuberRegressor&quot;&gt;&lt;code&gt;HuberRegressor&lt;/code&gt;&lt;/a&gt; is scaling invariant. Once &lt;code&gt;epsilon&lt;/code&gt; is set, scaling &lt;code&gt;X&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; down or up by different values would produce the same robustness to outliers as before. as compared to &lt;a href=&quot;generated/sklearn.linear_model.sgdregressor#sklearn.linear_model.SGDRegressor&quot;&gt;&lt;code&gt;SGDRegressor&lt;/code&gt;&lt;/a&gt; where &lt;code&gt;epsilon&lt;/code&gt; has to be set again when &lt;code&gt;X&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are scaled.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.huberregressor#sklearn.linear_model.HuberRegressor&quot;&gt; &lt;code&gt;HuberRegressor&lt;/code&gt; no cambia de&lt;/a&gt; escala. Una vez &lt;code&gt;epsilon&lt;/code&gt; se establece, escalado &lt;code&gt;X&lt;/code&gt; e &lt;code&gt;y&lt;/code&gt; abajo o hacia arriba por los diferentes valores producir&amp;iacute;a la misma solidez a los valores at&amp;iacute;picos como antes. en comparaci&amp;oacute;n con&lt;a href=&quot;generated/sklearn.linear_model.sgdregressor#sklearn.linear_model.SGDRegressor&quot;&gt; &lt;code&gt;SGDRegressor&lt;/code&gt; ,&lt;/a&gt; donde &lt;code&gt;epsilon&lt;/code&gt; debe configurarse de nuevo cuandose escalan &lt;code&gt;X&lt;/code&gt; e &lt;code&gt;y&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8b8b8746171b3b291ce75003aeaa2d37051cf57e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.huberregressor#sklearn.linear_model.HuberRegressor&quot;&gt;&lt;code&gt;HuberRegressor&lt;/code&gt;&lt;/a&gt; should be more efficient to use on data with small number of samples while &lt;a href=&quot;generated/sklearn.linear_model.sgdregressor#sklearn.linear_model.SGDRegressor&quot;&gt;&lt;code&gt;SGDRegressor&lt;/code&gt;&lt;/a&gt; needs a number of passes on the training data to produce the same robustness.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.huberregressor#sklearn.linear_model.HuberRegressor&quot;&gt; &lt;code&gt;HuberRegressor&lt;/code&gt; &lt;/a&gt; deber&amp;iacute;a ser m&amp;aacute;s eficiente para usar en datos con una peque&amp;ntilde;a cantidad de muestras, mientras que&lt;a href=&quot;generated/sklearn.linear_model.sgdregressor#sklearn.linear_model.SGDRegressor&quot;&gt; &lt;code&gt;SGDRegressor&lt;/code&gt; &lt;/a&gt; necesita varias transferencias de los datos de entrenamiento para producir la misma solidez.</target>
        </trans-unit>
        <trans-unit id="52b2ff16cfba86ec1d3c0205f4ae2d5e8bf7753a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.huberregressor#sklearn.linear_model.HuberRegressor&quot;&gt;&lt;code&gt;linear_model.HuberRegressor&lt;/code&gt;&lt;/a&gt;(*[, epsilon, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5c84d7aa989af1d1f0c132314330aceda91cf42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.huberregressor#sklearn.linear_model.HuberRegressor&quot;&gt;&lt;code&gt;linear_model.HuberRegressor&lt;/code&gt;&lt;/a&gt;([epsilon, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.huberregressor#sklearn.linear_model.HuberRegressor&quot;&gt; &lt;code&gt;linear_model.HuberRegressor&lt;/code&gt; &lt;/a&gt; ([epsilon,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="992452013da134cdf189b41eb20398a9f34c414e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lars#sklearn.linear_model.Lars&quot;&gt;&lt;code&gt;linear_model.Lars&lt;/code&gt;&lt;/a&gt;(*[, fit_intercept, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="487d020cc7c6245afd4df7ce21bb620202e87861" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lars#sklearn.linear_model.Lars&quot;&gt;&lt;code&gt;linear_model.Lars&lt;/code&gt;&lt;/a&gt;([fit_intercept, verbose, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.lars#sklearn.linear_model.Lars&quot;&gt; &lt;code&gt;linear_model.Lars&lt;/code&gt; &lt;/a&gt; ([fit_intercept, verbose,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="ff0316157338886d8656c35f581f9292ce71f448" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lars_path#sklearn.linear_model.lars_path&quot;&gt;&lt;code&gt;linear_model.lars_path&lt;/code&gt;&lt;/a&gt;(X, y[, Xy, Gram, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.lars_path#sklearn.linear_model.lars_path&quot;&gt; &lt;code&gt;linear_model.lars_path&lt;/code&gt; &lt;/a&gt; (X, y [, Xy, Gram,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="ce556e422580c0644caadf01637c67e3cdeaa5b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lars_path_gram#sklearn.linear_model.lars_path_gram&quot;&gt;&lt;code&gt;linear_model.lars_path_gram&lt;/code&gt;&lt;/a&gt;(Xy, Gram, *, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="072a7d03905b71c0fb10011174ddceaabf51fdac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.larscv#sklearn.linear_model.LarsCV&quot;&gt;&lt;code&gt;linear_model.LarsCV&lt;/code&gt;&lt;/a&gt;(*[, fit_intercept, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9b104e20462543e5ec2bb6c8d1f1fbf14660e69" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.larscv#sklearn.linear_model.LarsCV&quot;&gt;&lt;code&gt;linear_model.LarsCV&lt;/code&gt;&lt;/a&gt;([fit_intercept, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.larscv#sklearn.linear_model.LarsCV&quot;&gt; &lt;code&gt;linear_model.LarsCV&lt;/code&gt; &lt;/a&gt; ([fit_intercept,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="947eeb5a688642d845372cc1cb057f0078cf705e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lasso#sklearn.linear_model.Lasso&quot;&gt;&lt;code&gt;linear_model.Lasso&lt;/code&gt;&lt;/a&gt;([alpha, fit_intercept, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.lasso#sklearn.linear_model.Lasso&quot;&gt; &lt;code&gt;linear_model.Lasso&lt;/code&gt; &lt;/a&gt; ([alpha, fit_intercept,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="89ac1ab9f534b3b57c74a8d4fa0001914404aab7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lasso_path#sklearn.linear_model.lasso_path&quot;&gt;&lt;code&gt;linear_model.lasso_path&lt;/code&gt;&lt;/a&gt;(X, y, *[, eps, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31f74e089a17a57238a7d8a5bba41cdf2c77662d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lasso_path#sklearn.linear_model.lasso_path&quot;&gt;&lt;code&gt;linear_model.lasso_path&lt;/code&gt;&lt;/a&gt;(X, y[, eps, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.lasso_path#sklearn.linear_model.lasso_path&quot;&gt; &lt;code&gt;linear_model.lasso_path&lt;/code&gt; &lt;/a&gt; (X, y [, eps,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="66877a744f2538d5f69331f9b1a7f52a81592ba3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lasso_stability_path#sklearn.linear_model.lasso_stability_path&quot;&gt;&lt;code&gt;linear_model.lasso_stability_path&lt;/code&gt;&lt;/a&gt;(X, y[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.lasso_stability_path#sklearn.linear_model.lasso_stability_path&quot;&gt; &lt;code&gt;linear_model.lasso_stability_path&lt;/code&gt; &lt;/a&gt; (X, y [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="987b0b86cd3cc14e7f517c07a7a545040b4dde5f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lassocv#sklearn.linear_model.LassoCV&quot;&gt;&lt;code&gt;linear_model.LassoCV&lt;/code&gt;&lt;/a&gt;(*[, eps, n_alphas, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb0d424edef0409eb642c0b39f08bee4d60b5321" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lassocv#sklearn.linear_model.LassoCV&quot;&gt;&lt;code&gt;linear_model.LassoCV&lt;/code&gt;&lt;/a&gt;([eps, n_alphas, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.lassocv#sklearn.linear_model.LassoCV&quot;&gt; &lt;code&gt;linear_model.LassoCV&lt;/code&gt; &lt;/a&gt; ([eps, n_alphas,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="ad85e3abb6227b3ebb2861d4e9654f82e9f700cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lassolars#sklearn.linear_model.LassoLars&quot;&gt;&lt;code&gt;LassoLars&lt;/code&gt;&lt;/a&gt; is a lasso model implemented using the LARS algorithm, and unlike the implementation based on coordinate descent, this yields the exact solution, which is piecewise linear as a function of the norm of its coefficients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="968c1d59187f56882bc3fbd09b187c63129651f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lassolars#sklearn.linear_model.LassoLars&quot;&gt;&lt;code&gt;LassoLars&lt;/code&gt;&lt;/a&gt; is a lasso model implemented using the LARS algorithm, and unlike the implementation based on coordinate_descent, this yields the exact solution, which is piecewise linear as a function of the norm of its coefficients.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.lassolars#sklearn.linear_model.LassoLars&quot;&gt; &lt;code&gt;LassoLars&lt;/code&gt; &lt;/a&gt; es un modelo de lazo implementado mediante el algoritmo LARS y, a diferencia de la implementaci&amp;oacute;n basada en coordenada_descendente, este arroja la soluci&amp;oacute;n exacta, que es por partes lineal en funci&amp;oacute;n de la norma de sus coeficientes.</target>
        </trans-unit>
        <trans-unit id="d52faabfb3b0ecb538f9cbf9deb29429c9555574" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lassolars#sklearn.linear_model.LassoLars&quot;&gt;&lt;code&gt;linear_model.LassoLars&lt;/code&gt;&lt;/a&gt;([alpha, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.lassolars#sklearn.linear_model.LassoLars&quot;&gt; &lt;code&gt;linear_model.LassoLars&lt;/code&gt; &lt;/a&gt; ([alpha,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="c88a3bdcf22fda25970063fbfa850ede00737969" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lassolarscv#sklearn.linear_model.LassoLarsCV&quot;&gt;&lt;code&gt;linear_model.LassoLarsCV&lt;/code&gt;&lt;/a&gt;(*[, fit_intercept, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f1c0a7209b66b90efc735eb2b032820f501f80f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lassolarscv#sklearn.linear_model.LassoLarsCV&quot;&gt;&lt;code&gt;linear_model.LassoLarsCV&lt;/code&gt;&lt;/a&gt;([fit_intercept, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.lassolarscv#sklearn.linear_model.LassoLarsCV&quot;&gt; &lt;code&gt;linear_model.LassoLarsCV&lt;/code&gt; &lt;/a&gt; ([fit_intercept,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="77753da375928863059a28d1d6fbd122e6856e85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.lassolarsic#sklearn.linear_model.LassoLarsIC&quot;&gt;&lt;code&gt;linear_model.LassoLarsIC&lt;/code&gt;&lt;/a&gt;([criterion, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.lassolarsic#sklearn.linear_model.LassoLarsIC&quot;&gt; &lt;code&gt;linear_model.LassoLarsIC&lt;/code&gt; &lt;/a&gt; ([criterio,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="e96b03d398fc6f5cdfad88b412cea9e9d66eb5c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.linearregression#sklearn.linear_model.LinearRegression&quot;&gt;&lt;code&gt;LinearRegression&lt;/code&gt;&lt;/a&gt; fits a linear model with coefficients \(w = (w_1, ..., w_p)\) to minimize the residual sum of squares between the observed responses in the dataset, and the responses predicted by the linear approximation. Mathematically it solves a problem of the form:</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.linearregression#sklearn.linear_model.LinearRegression&quot;&gt; &lt;code&gt;LinearRegression&lt;/code&gt; se&lt;/a&gt; ajusta a un modelo lineal con coeficientes \ (w = (w_1, ..., w_p) \) para minimizar la suma residual de cuadrados entre las respuestas observadas en el conjunto de datos y las respuestas predichas por la aproximaci&amp;oacute;n lineal. Matem&amp;aacute;ticamente resuelve un problema de la forma:</target>
        </trans-unit>
        <trans-unit id="c0b6c6f818edd689db499e65bfe1800aeaa71fa1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.linearregression#sklearn.linear_model.LinearRegression&quot;&gt;&lt;code&gt;LinearRegression&lt;/code&gt;&lt;/a&gt; fits a linear model with coefficients \(w = (w_1, ..., w_p)\) to minimize the residual sum of squares between the observed targets in the dataset, and the targets predicted by the linear approximation. Mathematically it solves a problem of the form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="707c09c449a34044b52576176f97c46d850c9643" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.linearregression#sklearn.linear_model.LinearRegression&quot;&gt;&lt;code&gt;LinearRegression&lt;/code&gt;&lt;/a&gt; will take in its &lt;code&gt;fit&lt;/code&gt; method arrays X, y and will store the coefficients \(w\) of the linear model in its &lt;code&gt;coef_&lt;/code&gt; member:</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.linearregression#sklearn.linear_model.LinearRegression&quot;&gt; &lt;code&gt;LinearRegression&lt;/code&gt; &lt;/a&gt; tomar&amp;aacute; en sum&amp;eacute;todo de &lt;code&gt;fit&lt;/code&gt; matrices X, y y almacenar&amp;aacute; los coeficientes \ (w \) del modelo lineal en sumiembro &lt;code&gt;coef_&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9eeb977d7742197b330a9577c2633d4d5f45bf66" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.linearregression#sklearn.linear_model.LinearRegression&quot;&gt;&lt;code&gt;linear_model.LinearRegression&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88df752d6ab48a5b55ccff5853c9a71a55494749" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.linearregression#sklearn.linear_model.LinearRegression&quot;&gt;&lt;code&gt;linear_model.LinearRegression&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.linearregression#sklearn.linear_model.LinearRegression&quot;&gt;&lt;code&gt;linear_model.LinearRegression&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="5fa4bf95b39a85729d30092440cb8723118496b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.logistic_regression_path#sklearn.linear_model.logistic_regression_path&quot;&gt;&lt;code&gt;linear_model.logistic_regression_path&lt;/code&gt;&lt;/a&gt;(X, y)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.logistic_regression_path#sklearn.linear_model.logistic_regression_path&quot;&gt; &lt;code&gt;linear_model.logistic_regression_path&lt;/code&gt; &lt;/a&gt; (X, y)</target>
        </trans-unit>
        <trans-unit id="a969e686b19caee8b03f87b495e87c2ebd9bc8e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.logisticregression#sklearn.linear_model.LogisticRegression&quot;&gt;&lt;code&gt;LogisticRegression&lt;/code&gt;&lt;/a&gt; returns well calibrated predictions by default as it directly optimizes log-loss. In contrast, the other methods return biased probabilities; with different biases per method:</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.logisticregression#sklearn.linear_model.LogisticRegression&quot;&gt; &lt;code&gt;LogisticRegression&lt;/code&gt; &lt;/a&gt; devuelve predicciones bien calibradas de forma predeterminada, ya que optimiza directamente la p&amp;eacute;rdida de registros. En contraste, los otros m&amp;eacute;todos devuelven probabilidades sesgadas; con diferentes sesgos por m&amp;eacute;todo:</target>
        </trans-unit>
        <trans-unit id="5d4a08a63174d9c78d3859503a392d6e9b3b516e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.logisticregression#sklearn.linear_model.LogisticRegression&quot;&gt;&lt;code&gt;linear_model.LogisticRegression&lt;/code&gt;&lt;/a&gt;([penalty, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.logisticregression#sklearn.linear_model.LogisticRegression&quot;&gt; &lt;code&gt;linear_model.LogisticRegression&lt;/code&gt; &lt;/a&gt; ([penalizaci&amp;oacute;n,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="42ffc6248b165b74338396462a350e84e14bcf69" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.logisticregression#sklearn.linear_model.LogisticRegression&quot;&gt;&lt;code&gt;sklearn.linear_model.LogisticRegression&lt;/code&gt;&lt;/a&gt; (setting multi_class=&amp;rdquo;multinomial&amp;rdquo;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.logisticregression#sklearn.linear_model.LogisticRegression&quot;&gt; &lt;code&gt;sklearn.linear_model.LogisticRegression&lt;/code&gt; &lt;/a&gt; (configurando multi_class = &amp;rdquo;multinomial&amp;rdquo;)</target>
        </trans-unit>
        <trans-unit id="34fc0c3a8ed105a5aeee6c9304b0cd0c8d9c9b5c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.logisticregression#sklearn.linear_model.LogisticRegression&quot;&gt;&lt;code&gt;sklearn.linear_model.LogisticRegression&lt;/code&gt;&lt;/a&gt; (setting multi_class=&amp;rdquo;ovr&amp;rdquo;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.logisticregression#sklearn.linear_model.LogisticRegression&quot;&gt; &lt;code&gt;sklearn.linear_model.LogisticRegression&lt;/code&gt; &lt;/a&gt; (configurando multi_class = &amp;rdquo;ovr&amp;rdquo;)</target>
        </trans-unit>
        <trans-unit id="a578ab823711b5b5835f3c805a89fb86cae0e2e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.logisticregressioncv#sklearn.linear_model.LogisticRegressionCV&quot;&gt;&lt;code&gt;LogisticRegressionCV&lt;/code&gt;&lt;/a&gt; implements Logistic Regression with built-in cross-validation support, to find the optimal &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;l1_ratio&lt;/code&gt; parameters according to the &lt;code&gt;scoring&lt;/code&gt; attribute. The &amp;ldquo;newton-cg&amp;rdquo;, &amp;ldquo;sag&amp;rdquo;, &amp;ldquo;saga&amp;rdquo; and &amp;ldquo;lbfgs&amp;rdquo; solvers are found to be faster for high-dimensional dense data, due to warm-starting (see &lt;a href=&quot;https://scikit-learn.org/0.23/glossary.html#term-warm-start&quot;&gt;Glossary&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f7fe500f6a163e946df405096cb05bcbb642b49" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.logisticregressioncv#sklearn.linear_model.LogisticRegressionCV&quot;&gt;&lt;code&gt;LogisticRegressionCV&lt;/code&gt;&lt;/a&gt; implements Logistic Regression with builtin cross-validation to find out the optimal C parameter. &amp;ldquo;newton-cg&amp;rdquo;, &amp;ldquo;sag&amp;rdquo;, &amp;ldquo;saga&amp;rdquo; and &amp;ldquo;lbfgs&amp;rdquo; solvers are found to be faster for high-dimensional dense data, due to warm-starting. For the multiclass case, if &lt;code&gt;multi_class&lt;/code&gt; option is set to &amp;ldquo;ovr&amp;rdquo;, an optimal C is obtained for each class and if the &lt;code&gt;multi_class&lt;/code&gt; option is set to &amp;ldquo;multinomial&amp;rdquo;, an optimal C is obtained by minimizing the cross-entropy loss.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.logisticregressioncv#sklearn.linear_model.LogisticRegressionCV&quot;&gt; &lt;code&gt;LogisticRegressionCV&lt;/code&gt; &lt;/a&gt; implementa la Regresi&amp;oacute;n log&amp;iacute;stica con validaci&amp;oacute;n cruzada incorporada para encontrar el par&amp;aacute;metro C &amp;oacute;ptimo. Los solucionadores &amp;ldquo;newton-cg&amp;rdquo;, &amp;ldquo;sag&amp;rdquo;, &amp;ldquo;saga&amp;rdquo; y &amp;ldquo;lbfgs&amp;rdquo; resultan m&amp;aacute;s r&amp;aacute;pidos para datos densos de alta dimensi&amp;oacute;n, debido al arranque en caliente. Para el caso multiclase, si laopci&amp;oacute;n &lt;code&gt;multi_class&lt;/code&gt; se establece en &amp;ldquo;ovr&amp;rdquo;, se obtiene una C &amp;oacute;ptima para cada clase y si laopci&amp;oacute;n &lt;code&gt;multi_class&lt;/code&gt; se establece en &amp;ldquo;multinomial&amp;rdquo;, se obtiene una C &amp;oacute;ptima minimizando la p&amp;eacute;rdida de entrop&amp;iacute;a cruzada.</target>
        </trans-unit>
        <trans-unit id="c7222b1eed2eb4c743bdd9d9c0404f4807c631c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.logisticregressioncv#sklearn.linear_model.LogisticRegressionCV&quot;&gt;&lt;code&gt;linear_model.LogisticRegressionCV&lt;/code&gt;&lt;/a&gt;(*[, Cs, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feb52fca0b9554a7bc0d942859b6dedae79406a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.logisticregressioncv#sklearn.linear_model.LogisticRegressionCV&quot;&gt;&lt;code&gt;linear_model.LogisticRegressionCV&lt;/code&gt;&lt;/a&gt;([Cs, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.logisticregressioncv#sklearn.linear_model.LogisticRegressionCV&quot;&gt; &lt;code&gt;linear_model.LogisticRegressionCV&lt;/code&gt; &lt;/a&gt; ([Cs,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="5b41e9710da750e528a16662f808c3a36f50943e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.logisticregressioncv#sklearn.linear_model.LogisticRegressionCV&quot;&gt;&lt;code&gt;sklearn.linear_model.LogisticRegressionCV&lt;/code&gt;&lt;/a&gt; (setting multi_class=&amp;rdquo;multinomial&amp;rdquo;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.logisticregressioncv#sklearn.linear_model.LogisticRegressionCV&quot;&gt; &lt;code&gt;sklearn.linear_model.LogisticRegressionCV&lt;/code&gt; &lt;/a&gt; (configuraci&amp;oacute;n multi_class = &amp;rdquo;multinomial&amp;rdquo;)</target>
        </trans-unit>
        <trans-unit id="e62161fcd419cbb993025b5417f1bdc6ec21685e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.logisticregressioncv#sklearn.linear_model.LogisticRegressionCV&quot;&gt;&lt;code&gt;sklearn.linear_model.LogisticRegressionCV&lt;/code&gt;&lt;/a&gt; (setting multi_class=&amp;rdquo;ovr&amp;rdquo;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.logisticregressioncv#sklearn.linear_model.LogisticRegressionCV&quot;&gt; &lt;code&gt;sklearn.linear_model.LogisticRegressionCV&lt;/code&gt; &lt;/a&gt; (configurando multi_class = &amp;rdquo;ovr&amp;rdquo;)</target>
        </trans-unit>
        <trans-unit id="405d294c7e04b7b10ac1230c80f90eae6ade9e42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.multitaskelasticnet#sklearn.linear_model.MultiTaskElasticNet&quot;&gt;&lt;code&gt;linear_model.MultiTaskElasticNet&lt;/code&gt;&lt;/a&gt;([alpha, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.multitaskelasticnet#sklearn.linear_model.MultiTaskElasticNet&quot;&gt; &lt;code&gt;linear_model.MultiTaskElasticNet&lt;/code&gt; &lt;/a&gt; ([alpha,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="a795579f2b7770ba4d61d700ad0848aede899f19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.multitaskelasticnetcv#sklearn.linear_model.MultiTaskElasticNetCV&quot;&gt;&lt;code&gt;linear_model.MultiTaskElasticNetCV&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a63211b0aabe4faba36d4e45cd30a14b9b712cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.multitaskelasticnetcv#sklearn.linear_model.MultiTaskElasticNetCV&quot;&gt;&lt;code&gt;linear_model.MultiTaskElasticNetCV&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.multitaskelasticnetcv#sklearn.linear_model.MultiTaskElasticNetCV&quot;&gt;&lt;code&gt;linear_model.MultiTaskElasticNetCV&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="7760ce392ed26864b431e66a041080aa45172417" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.multitasklasso#sklearn.linear_model.MultiTaskLasso&quot;&gt;&lt;code&gt;linear_model.MultiTaskLasso&lt;/code&gt;&lt;/a&gt;([alpha, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.multitasklasso#sklearn.linear_model.MultiTaskLasso&quot;&gt; &lt;code&gt;linear_model.MultiTaskLasso&lt;/code&gt; &lt;/a&gt; ([alpha,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="b027e5e3329b650aef295f39da902fc5de0752dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.multitasklassocv#sklearn.linear_model.MultiTaskLassoCV&quot;&gt;&lt;code&gt;linear_model.MultiTaskLassoCV&lt;/code&gt;&lt;/a&gt;(*[, eps, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="561fe99c60fda49820a4077cda1eafe603e88742" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.multitasklassocv#sklearn.linear_model.MultiTaskLassoCV&quot;&gt;&lt;code&gt;linear_model.MultiTaskLassoCV&lt;/code&gt;&lt;/a&gt;([eps, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.multitasklassocv#sklearn.linear_model.MultiTaskLassoCV&quot;&gt; &lt;code&gt;linear_model.MultiTaskLassoCV&lt;/code&gt; &lt;/a&gt; ([eps,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="e6b589fe3e0114294176621af04db41f6d1876a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.orthogonal_mp#sklearn.linear_model.orthogonal_mp&quot;&gt;&lt;code&gt;linear_model.orthogonal_mp&lt;/code&gt;&lt;/a&gt;(X, y, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="430f692b6def8e513401bdb0e7603ed256a17322" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.orthogonal_mp#sklearn.linear_model.orthogonal_mp&quot;&gt;&lt;code&gt;linear_model.orthogonal_mp&lt;/code&gt;&lt;/a&gt;(X, y[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.orthogonal_mp#sklearn.linear_model.orthogonal_mp&quot;&gt; &lt;code&gt;linear_model.orthogonal_mp&lt;/code&gt; &lt;/a&gt; (X, y [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="e99439c66053393093faf826a11ed7a35b05d9eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.orthogonal_mp_gram#sklearn.linear_model.orthogonal_mp_gram&quot;&gt;&lt;code&gt;linear_model.orthogonal_mp_gram&lt;/code&gt;&lt;/a&gt;(Gram, Xy, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ccdb567ce658b7290c2a2774715b126b6394f87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.orthogonal_mp_gram#sklearn.linear_model.orthogonal_mp_gram&quot;&gt;&lt;code&gt;linear_model.orthogonal_mp_gram&lt;/code&gt;&lt;/a&gt;(Gram, Xy[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.orthogonal_mp_gram#sklearn.linear_model.orthogonal_mp_gram&quot;&gt; &lt;code&gt;linear_model.orthogonal_mp_gram&lt;/code&gt; &lt;/a&gt; (Gram, Xy [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="0ad9d0ea0b8c7fc58c3c3323cff008e5ea4d36b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.orthogonalmatchingpursuit#sklearn.linear_model.OrthogonalMatchingPursuit&quot;&gt;&lt;code&gt;OrthogonalMatchingPursuit&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.linear_model.orthogonal_mp#sklearn.linear_model.orthogonal_mp&quot;&gt;&lt;code&gt;orthogonal_mp&lt;/code&gt;&lt;/a&gt; implements the OMP algorithm for approximating the fit of a linear model with constraints imposed on the number of non-zero coefficients (ie. the L &lt;sub&gt;0&lt;/sub&gt; pseudo-norm).</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.orthogonalmatchingpursuit#sklearn.linear_model.OrthogonalMatchingPursuit&quot;&gt; &lt;code&gt;OrthogonalMatchingPursuit&lt;/code&gt; &lt;/a&gt; y&lt;a href=&quot;generated/sklearn.linear_model.orthogonal_mp#sklearn.linear_model.orthogonal_mp&quot;&gt; &lt;code&gt;orthogonal_mp&lt;/code&gt; &lt;/a&gt; implementan el algoritmo OMP para aproximar el ajuste de un modelo lineal con restricciones impuestas sobre el n&amp;uacute;mero de coeficientes distintos de cero (es decir, lapseudo-normaL&lt;sub&gt; 0&lt;/sub&gt; ).</target>
        </trans-unit>
        <trans-unit id="a681c704e57ac3eae30d7fca45ccbd6601b3572a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.orthogonalmatchingpursuit#sklearn.linear_model.OrthogonalMatchingPursuit&quot;&gt;&lt;code&gt;OrthogonalMatchingPursuit&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.linear_model.orthogonal_mp#sklearn.linear_model.orthogonal_mp&quot;&gt;&lt;code&gt;orthogonal_mp&lt;/code&gt;&lt;/a&gt; implements the OMP algorithm for approximating the fit of a linear model with constraints imposed on the number of non-zero coefficients (ie. the \(\ell_0\) pseudo-norm).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab5ee1d1190ffeda3ae27571ec9bb1648fce817" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.orthogonalmatchingpursuit#sklearn.linear_model.OrthogonalMatchingPursuit&quot;&gt;&lt;code&gt;linear_model.OrthogonalMatchingPursuit&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d2aaef516d717e163886b2593d69f09af4fa258" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.orthogonalmatchingpursuit#sklearn.linear_model.OrthogonalMatchingPursuit&quot;&gt;&lt;code&gt;linear_model.OrthogonalMatchingPursuit&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.orthogonalmatchingpursuit#sklearn.linear_model.OrthogonalMatchingPursuit&quot;&gt;&lt;code&gt;linear_model.OrthogonalMatchingPursuit&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="5e6df18a2c1c159aeaac8bbdc0ce2bcd14f2bb6e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.orthogonalmatchingpursuitcv#sklearn.linear_model.OrthogonalMatchingPursuitCV&quot;&gt;&lt;code&gt;linear_model.OrthogonalMatchingPursuitCV&lt;/code&gt;&lt;/a&gt;(*)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.orthogonalmatchingpursuitcv#sklearn.linear_model.OrthogonalMatchingPursuitCV&quot;&gt;&lt;code&gt;linear_model.OrthogonalMatchingPursuitCV&lt;/code&gt;&lt;/a&gt;(*)</target>
        </trans-unit>
        <trans-unit id="9e136cc7f452a43e6575040310db410b65682fa5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.orthogonalmatchingpursuitcv#sklearn.linear_model.OrthogonalMatchingPursuitCV&quot;&gt;&lt;code&gt;linear_model.OrthogonalMatchingPursuitCV&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.orthogonalmatchingpursuitcv#sklearn.linear_model.OrthogonalMatchingPursuitCV&quot;&gt;&lt;code&gt;linear_model.OrthogonalMatchingPursuitCV&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="9e816f8c440404e59db0fac29e5fddfcf444f0c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.passiveaggressiveclassifier#sklearn.linear_model.PassiveAggressiveClassifier&quot;&gt;&lt;code&gt;linear_model.PassiveAggressiveClassifier&lt;/code&gt;&lt;/a&gt;(*)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.passiveaggressiveclassifier#sklearn.linear_model.PassiveAggressiveClassifier&quot;&gt;&lt;code&gt;linear_model.PassiveAggressiveClassifier&lt;/code&gt;&lt;/a&gt;(*)</target>
        </trans-unit>
        <trans-unit id="b48387c92086d5b7e2e7df17f23be1f7e2396b0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.passiveaggressiveclassifier#sklearn.linear_model.PassiveAggressiveClassifier&quot;&gt;&lt;code&gt;linear_model.PassiveAggressiveClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.passiveaggressiveclassifier#sklearn.linear_model.PassiveAggressiveClassifier&quot;&gt;&lt;code&gt;linear_model.PassiveAggressiveClassifier&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="f93f29e279ec0ab717943996c1a38d78f0ee2b18" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.passiveaggressiveregressor#sklearn.linear_model.PassiveAggressiveRegressor&quot;&gt;&lt;code&gt;linear_model.PassiveAggressiveRegressor&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96d3285db04f5c5aea982ffdd253a2127db924a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.passiveaggressiveregressor#sklearn.linear_model.PassiveAggressiveRegressor&quot;&gt;&lt;code&gt;linear_model.PassiveAggressiveRegressor&lt;/code&gt;&lt;/a&gt;([C, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.passiveaggressiveregressor#sklearn.linear_model.PassiveAggressiveRegressor&quot;&gt; &lt;code&gt;linear_model.PassiveAggressiveRegressor&lt;/code&gt; &lt;/a&gt; ([C,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="a02958163789b327f967be0b9dacc3194144fc67" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.perceptron#sklearn.linear_model.Perceptron&quot;&gt;&lt;code&gt;linear_model.Perceptron&lt;/code&gt;&lt;/a&gt;(*[, penalty, alpha, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7541fdb961e26731ba9e6ca71375098ce610f2de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.perceptron#sklearn.linear_model.Perceptron&quot;&gt;&lt;code&gt;linear_model.Perceptron&lt;/code&gt;&lt;/a&gt;([penalty, alpha, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.perceptron#sklearn.linear_model.Perceptron&quot;&gt; &lt;code&gt;linear_model.Perceptron&lt;/code&gt; &lt;/a&gt; ([penalizaci&amp;oacute;n, alfa,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="4e2cd6699364025892354e0f08c7aa15821e402f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.poissonregressor#sklearn.linear_model.PoissonRegressor&quot;&gt;&lt;code&gt;linear_model.PoissonRegressor&lt;/code&gt;&lt;/a&gt;(*[, alpha, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e8a96cdd61b7e903112e87af81166325d820301" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.randomizedlasso#sklearn.linear_model.RandomizedLasso&quot;&gt;&lt;code&gt;linear_model.RandomizedLasso&lt;/code&gt;&lt;/a&gt;(*args, **kwargs)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.randomizedlasso#sklearn.linear_model.RandomizedLasso&quot;&gt; &lt;code&gt;linear_model.RandomizedLasso&lt;/code&gt; &lt;/a&gt; (* argumentos , ** kwargs)</target>
        </trans-unit>
        <trans-unit id="e81da02cd5d324f06a59a4f217383ea7191fec75" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.randomizedlogisticregression#sklearn.linear_model.RandomizedLogisticRegression&quot;&gt;&lt;code&gt;linear_model.RandomizedLogisticRegression&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.randomizedlogisticregression#sklearn.linear_model.RandomizedLogisticRegression&quot;&gt;&lt;code&gt;linear_model.RandomizedLogisticRegression&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="fe84b99c32c92bcec146c407c6a8afab5da366e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.ransacregressor#sklearn.linear_model.RANSACRegressor&quot;&gt;&lt;code&gt;linear_model.RANSACRegressor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.ransacregressor#sklearn.linear_model.RANSACRegressor&quot;&gt;&lt;code&gt;linear_model.RANSACRegressor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="e9a350b22dad2212bd3d9d24d852990982fa018d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.ridge#sklearn.linear_model.Ridge&quot;&gt;&lt;code&gt;Ridge&lt;/code&gt;&lt;/a&gt; regression addresses some of the problems of &lt;a href=&quot;#ordinary-least-squares&quot;&gt;Ordinary Least Squares&lt;/a&gt; by imposing a penalty on the size of coefficients. The ridge coefficients minimize a penalized residual sum of squares,</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.ridge#sklearn.linear_model.Ridge&quot;&gt; &lt;code&gt;Ridge&lt;/code&gt; &lt;/a&gt; regresi&amp;oacute;n de crestas aborda algunos de los problemas de&lt;a href=&quot;#ordinary-least-squares&quot;&gt; m&amp;iacute;nimos cuadrados ordinarios&lt;/a&gt; al imponer una penalizaci&amp;oacute;n sobre el tama&amp;ntilde;o de los coeficientes. Los coeficientes de cresta minimizan una suma de cuadrados residual penalizada,</target>
        </trans-unit>
        <trans-unit id="a2a3e113d1640c0cd63c14c94871cd5c99908a7a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.ridge#sklearn.linear_model.Ridge&quot;&gt;&lt;code&gt;Ridge&lt;/code&gt;&lt;/a&gt; regression addresses some of the problems of &lt;a href=&quot;#ordinary-least-squares&quot;&gt;Ordinary Least Squares&lt;/a&gt; by imposing a penalty on the size of the coefficients. The ridge coefficients minimize a penalized residual sum of squares:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef6b703cca66415cd15341c40f378a048fedfb70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.ridge#sklearn.linear_model.Ridge&quot;&gt;&lt;code&gt;linear_model.Ridge&lt;/code&gt;&lt;/a&gt;([alpha, fit_intercept, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.ridge#sklearn.linear_model.Ridge&quot;&gt; &lt;code&gt;linear_model.Ridge&lt;/code&gt; &lt;/a&gt; ([alpha, fit_intercept,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="85470215b400e66d76a1ac3c94090967d1d18838" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.ridge_regression#sklearn.linear_model.ridge_regression&quot;&gt;&lt;code&gt;linear_model.ridge_regression&lt;/code&gt;&lt;/a&gt;(X, y, alpha, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5bfd9ff1752f80364e362781e05ab8a54719454" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.ridge_regression#sklearn.linear_model.ridge_regression&quot;&gt;&lt;code&gt;linear_model.ridge_regression&lt;/code&gt;&lt;/a&gt;(X, y, alpha[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.ridge_regression#sklearn.linear_model.ridge_regression&quot;&gt; &lt;code&gt;linear_model.ridge_regression&lt;/code&gt; &lt;/a&gt; (X, y, alpha [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="32e163705030687e88d469e2936228447890b622" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.ridgeclassifier#sklearn.linear_model.RidgeClassifier&quot;&gt;&lt;code&gt;linear_model.RidgeClassifier&lt;/code&gt;&lt;/a&gt;([alpha, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.ridgeclassifier#sklearn.linear_model.RidgeClassifier&quot;&gt; &lt;code&gt;linear_model.RidgeClassifier&lt;/code&gt; &lt;/a&gt; ([alpha,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="5745dc98a0741f4ced2c0b50303c2e40f523e205" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.ridgeclassifiercv#sklearn.linear_model.RidgeClassifierCV&quot;&gt;&lt;code&gt;linear_model.RidgeClassifierCV&lt;/code&gt;&lt;/a&gt;([alphas, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.ridgeclassifiercv#sklearn.linear_model.RidgeClassifierCV&quot;&gt; &lt;code&gt;linear_model.RidgeClassifierCV&lt;/code&gt; &lt;/a&gt; ([ alphas ,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="d7ec5deb7b4d5506eea68ea0bcfac5ba07314f7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.ridgecv#sklearn.linear_model.RidgeCV&quot;&gt;&lt;code&gt;RidgeCV&lt;/code&gt;&lt;/a&gt; implements ridge regression with built-in cross-validation of the alpha parameter. The object works in the same way as GridSearchCV except that it defaults to Generalized Cross-Validation (GCV), an efficient form of leave-one-out cross-validation:</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.ridgecv#sklearn.linear_model.RidgeCV&quot;&gt; &lt;code&gt;RidgeCV&lt;/code&gt; &lt;/a&gt; implementa la regresi&amp;oacute;n de crestas con validaci&amp;oacute;n cruzada incorporada del par&amp;aacute;metro alfa. El objeto funciona de la misma manera que GridSearchCV excepto que por defecto es Validaci&amp;oacute;n cruzada generalizada (GCV), una forma eficiente de validaci&amp;oacute;n cruzada de dejar uno fuera:</target>
        </trans-unit>
        <trans-unit id="220e364d8f7843dd2c60eba6d89b3111c88ea922" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.ridgecv#sklearn.linear_model.RidgeCV&quot;&gt;&lt;code&gt;linear_model.RidgeCV&lt;/code&gt;&lt;/a&gt;([alphas, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.ridgecv#sklearn.linear_model.RidgeCV&quot;&gt; &lt;code&gt;linear_model.RidgeCV&lt;/code&gt; &lt;/a&gt; ([ alphas ,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="8409dcaaf7076d82e8df96d235fc3c8f1e55b3fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier&quot;&gt;&lt;code&gt;SGDClassifier&lt;/code&gt;&lt;/a&gt; supports averaged SGD (ASGD) &lt;a href=&quot;#id14&quot; id=&quot;id2&quot;&gt;10&lt;/a&gt;. Averaging can be enabled by setting &lt;code&gt;average=True&lt;/code&gt;. ASGD performs the same updates as the regular SGD (see &lt;a href=&quot;#sgd-mathematical-formulation&quot;&gt;Mathematical formulation&lt;/a&gt;), but instead of using the last value of the coefficients as the &lt;code&gt;coef_&lt;/code&gt; attribute (i.e. the values of the last update), &lt;code&gt;coef_&lt;/code&gt; is set instead to the &lt;strong&gt;average&lt;/strong&gt; value of the coefficients across all updates. The same is done for the &lt;code&gt;intercept_&lt;/code&gt; attribute. When using ASGD the learning rate can be larger and even constant, leading on some datasets to a speed up in training time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75405cda57083d7644b5700b33fd06c38bc467c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier&quot;&gt;&lt;code&gt;SGDClassifier&lt;/code&gt;&lt;/a&gt; supports averaged SGD (ASGD). Averaging can be enabled by setting &lt;code&gt;`average=True`&lt;/code&gt;. ASGD works by averaging the coefficients of the plain SGD over each iteration over a sample. When using ASGD the learning rate can be larger and even constant leading on some datasets to a speed up in training time.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier&quot;&gt; &lt;code&gt;SGDClassifier&lt;/code&gt; &lt;/a&gt; admite SGD promediado (ASGD). El promedio se puede habilitar configurando &lt;code&gt;`average=True`&lt;/code&gt; . ASGD funciona promediando los coeficientes del SGD simple en cada iteraci&amp;oacute;n sobre una muestra. Cuando se usa ASGD, la tasa de aprendizaje puede ser mayor e incluso constante, lo que lleva en algunos conjuntos de datos a una aceleraci&amp;oacute;n del tiempo de entrenamiento.</target>
        </trans-unit>
        <trans-unit id="b6526e9882ab2a712026b51fd440ecd58c5a4d42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier&quot;&gt;&lt;code&gt;SGDClassifier&lt;/code&gt;&lt;/a&gt; supports both weighted classes and weighted instances via the fit parameters &lt;code&gt;class_weight&lt;/code&gt; and &lt;code&gt;sample_weight&lt;/code&gt;. See the examples below and the doc string of &lt;a href=&quot;generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier.fit&quot;&gt;&lt;code&gt;SGDClassifier.fit&lt;/code&gt;&lt;/a&gt; for further information.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier&quot;&gt; &lt;code&gt;SGDClassifier&lt;/code&gt; &lt;/a&gt; admite tanto clases ponderadas como instancias ponderadas mediante los par&amp;aacute;metros de ajuste &lt;code&gt;class_weight&lt;/code&gt; y &lt;code&gt;sample_weight&lt;/code&gt; . Consulte los ejemplos a continuaci&amp;oacute;n y la cadena de documentos de&lt;a href=&quot;generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier.fit&quot;&gt; &lt;code&gt;SGDClassifier.fit&lt;/code&gt; &lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="c674920bb2e0bfdedc850f15dd45e5d774a717b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier&quot;&gt;&lt;code&gt;SGDClassifier&lt;/code&gt;&lt;/a&gt; supports both weighted classes and weighted instances via the fit parameters &lt;code&gt;class_weight&lt;/code&gt; and &lt;code&gt;sample_weight&lt;/code&gt;. See the examples below and the docstring of &lt;a href=&quot;generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier.fit&quot;&gt;&lt;code&gt;SGDClassifier.fit&lt;/code&gt;&lt;/a&gt; for further information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb65f144814037383da79748d09855b3e6bdc429" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier&quot;&gt;&lt;code&gt;SGDClassifier&lt;/code&gt;&lt;/a&gt; supports multi-class classification by combining multiple binary classifiers in a &amp;ldquo;one versus all&amp;rdquo; (OVA) scheme. For each of the \(K\) classes, a binary classifier is learned that discriminates between that and all other \(K-1\) classes. At testing time, we compute the confidence score (i.e. the signed distances to the hyperplane) for each classifier and choose the class with the highest confidence. The Figure below illustrates the OVA approach on the iris dataset. The dashed lines represent the three OVA classifiers; the background colors show the decision surface induced by the three classifiers.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier&quot;&gt; &lt;code&gt;SGDClassifier&lt;/code&gt; &lt;/a&gt; admite la clasificaci&amp;oacute;n de clases m&amp;uacute;ltiples mediante la combinaci&amp;oacute;n de varios clasificadores binarios en un esquema de &quot;uno contra todos&quot; (OVA). Para cada una de las clases \ (K \), se aprende un clasificador binario que discrimina entre esa y todas las dem&amp;aacute;s clases \ (K-1 \). En el momento de la prueba, calculamos la puntuaci&amp;oacute;n de confianza (es decir, las distancias firmadas al hiperplano) para cada clasificador y elegimos la clase con la mayor confianza. La Figura siguiente ilustra el enfoque OVA en el conjunto de datos del iris. Las l&amp;iacute;neas discontinuas representan los tres clasificadores OVA; los colores de fondo muestran la superficie de decisi&amp;oacute;n inducida por los tres clasificadores.</target>
        </trans-unit>
        <trans-unit id="63890c28d41a79b72601dca28594018a216e2437" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier&quot;&gt;&lt;code&gt;linear_model.SGDClassifier&lt;/code&gt;&lt;/a&gt;([loss, penalty, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier&quot;&gt; &lt;code&gt;linear_model.SGDClassifier&lt;/code&gt; &lt;/a&gt; ([p&amp;eacute;rdida, penalizaci&amp;oacute;n,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="e814df0a89b7eb8945307c604ecff1c66d2def36" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.sgdregressor#sklearn.linear_model.SGDRegressor&quot;&gt;&lt;code&gt;SGDRegressor&lt;/code&gt;&lt;/a&gt; also supports averaged SGD &lt;a href=&quot;#id14&quot; id=&quot;id3&quot;&gt;10&lt;/a&gt; (here again, see description above in the classification section).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9abd9abad448a0d68f5d6136ebfe2c611f12a9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.sgdregressor#sklearn.linear_model.SGDRegressor&quot;&gt;&lt;code&gt;SGDRegressor&lt;/code&gt;&lt;/a&gt; supports averaged SGD as &lt;a href=&quot;generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier&quot;&gt;&lt;code&gt;SGDClassifier&lt;/code&gt;&lt;/a&gt;. Averaging can be enabled by setting &lt;code&gt;`average=True`&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.sgdregressor#sklearn.linear_model.SGDRegressor&quot;&gt; &lt;code&gt;SGDRegressor&lt;/code&gt; &lt;/a&gt; admite SGD promediado como&lt;a href=&quot;generated/sklearn.linear_model.sgdclassifier#sklearn.linear_model.SGDClassifier&quot;&gt; &lt;code&gt;SGDClassifier&lt;/code&gt; &lt;/a&gt; . El promedio se puede habilitar configurando &lt;code&gt;`average=True`&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3318424d4c487157b671901bdcdbbad91740f6e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.sgdregressor#sklearn.linear_model.SGDRegressor&quot;&gt;&lt;code&gt;linear_model.SGDRegressor&lt;/code&gt;&lt;/a&gt;([loss, penalty, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.sgdregressor#sklearn.linear_model.SGDRegressor&quot;&gt; &lt;code&gt;linear_model.SGDRegressor&lt;/code&gt; &lt;/a&gt; ([p&amp;eacute;rdida, penalizaci&amp;oacute;n,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="73aef0828ef291a27c1af87537f3e49e4cd3be6b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.theilsenregressor#sklearn.linear_model.TheilSenRegressor&quot;&gt;&lt;code&gt;TheilSenRegressor&lt;/code&gt;&lt;/a&gt; is comparable to the &lt;a href=&quot;#ordinary-least-squares&quot;&gt;Ordinary Least Squares (OLS)&lt;/a&gt; in terms of asymptotic efficiency and as an unbiased estimator. In contrast to OLS, Theil-Sen is a non-parametric method which means it makes no assumption about the underlying distribution of the data. Since Theil-Sen is a median-based estimator, it is more robust against corrupted data aka outliers. In univariate setting, Theil-Sen has a breakdown point of about 29.3% in case of a simple linear regression which means that it can tolerate arbitrary corrupted data of up to 29.3%.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.theilsenregressor#sklearn.linear_model.TheilSenRegressor&quot;&gt; &lt;code&gt;TheilSenRegressor&lt;/code&gt; &lt;/a&gt; es comparable a los&lt;a href=&quot;#ordinary-least-squares&quot;&gt; m&amp;iacute;nimos cuadrados ordinarios (MCO)&lt;/a&gt; en t&amp;eacute;rminos de eficiencia asint&amp;oacute;tica y como estimador insesgado. A diferencia de OLS, Theil-Sen es un m&amp;eacute;todo no param&amp;eacute;trico, lo que significa que no asume la distribuci&amp;oacute;n subyacente de los datos. Dado que Theil-Sen es un estimador basado en la mediana, es m&amp;aacute;s robusto contra datos corruptos, tambi&amp;eacute;n conocidos como valores at&amp;iacute;picos. En un entorno univariado, Theil-Sen tiene un punto de ruptura de aproximadamente 29,3% en el caso de una regresi&amp;oacute;n lineal simple, lo que significa que puede tolerar datos corruptos arbitrarios de hasta un 29,3%.</target>
        </trans-unit>
        <trans-unit id="b79501bf7666e48fc6df0cd74635180c3f3f37d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.theilsenregressor#sklearn.linear_model.TheilSenRegressor&quot;&gt;&lt;code&gt;linear_model.TheilSenRegressor&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b78ecf2afca80fc1f0cb01ba6720640958c508fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.theilsenregressor#sklearn.linear_model.TheilSenRegressor&quot;&gt;&lt;code&gt;linear_model.TheilSenRegressor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.linear_model.theilsenregressor#sklearn.linear_model.TheilSenRegressor&quot;&gt;&lt;code&gt;linear_model.TheilSenRegressor&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="c05c09901dfaf0c952f798b287abde34f92dfac4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.tweedieregressor#sklearn.linear_model.TweedieRegressor&quot;&gt;&lt;code&gt;TweedieRegressor&lt;/code&gt;&lt;/a&gt; implements a generalized linear model for the Tweedie distribution, that allows to model any of the above mentioned distributions using the appropriate &lt;code&gt;power&lt;/code&gt; parameter. In particular:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df95db646ba25781ab2c42d049552c8afe39c4c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.linear_model.tweedieregressor#sklearn.linear_model.TweedieRegressor&quot;&gt;&lt;code&gt;linear_model.TweedieRegressor&lt;/code&gt;&lt;/a&gt;(*[, power, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b0ec9526e9709be1c792583d5910e47f6a5f3b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.manifold.isomap#sklearn.manifold.Isomap&quot;&gt;&lt;code&gt;manifold.Isomap&lt;/code&gt;&lt;/a&gt;(*[, n_neighbors, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e16f6846ead489a805d5268a0989d49c9adcba81" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.manifold.isomap#sklearn.manifold.Isomap&quot;&gt;&lt;code&gt;manifold.Isomap&lt;/code&gt;&lt;/a&gt;([n_neighbors, n_components, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.manifold.isomap#sklearn.manifold.Isomap&quot;&gt; &lt;code&gt;manifold.Isomap&lt;/code&gt; &lt;/a&gt; ([n_vecinos, n_components,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="c9977621e4918fd92c32a53ef59ecd4f3fa4fe80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.manifold.locally_linear_embedding#sklearn.manifold.locally_linear_embedding&quot;&gt;&lt;code&gt;manifold.locally_linear_embedding&lt;/code&gt;&lt;/a&gt;(X, &amp;hellip;[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.manifold.locally_linear_embedding#sklearn.manifold.locally_linear_embedding&quot;&gt; &lt;code&gt;manifold.locally_linear_embedding&lt;/code&gt; &lt;/a&gt; (X,&amp;hellip; [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="ca84b513e6bc3d2409c194d40e447ade5a501f44" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.manifold.locally_linear_embedding#sklearn.manifold.locally_linear_embedding&quot;&gt;&lt;code&gt;manifold.locally_linear_embedding&lt;/code&gt;&lt;/a&gt;(X, *, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a122566dc9cb3331e1ede9627b01ea53ab01ea5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.manifold.locallylinearembedding#sklearn.manifold.LocallyLinearEmbedding&quot;&gt;&lt;code&gt;manifold.LocallyLinearEmbedding&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de9cff79f6fb556527a449e14e58e28a7eadd6f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.manifold.locallylinearembedding#sklearn.manifold.LocallyLinearEmbedding&quot;&gt;&lt;code&gt;manifold.LocallyLinearEmbedding&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.manifold.locallylinearembedding#sklearn.manifold.LocallyLinearEmbedding&quot;&gt;&lt;code&gt;manifold.LocallyLinearEmbedding&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="43d25ff4452139d0c7b5143aa3cd657324926892" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.manifold.mds#sklearn.manifold.MDS&quot;&gt;&lt;code&gt;manifold.MDS&lt;/code&gt;&lt;/a&gt;([n_components, metric, n_init, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.manifold.mds#sklearn.manifold.MDS&quot;&gt; &lt;code&gt;manifold.MDS&lt;/code&gt; &lt;/a&gt; ([n_components, metric, n_init,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="0b594d96e36a0be97014316e30571a5733270a4b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.manifold.smacof#sklearn.manifold.smacof&quot;&gt;&lt;code&gt;manifold.smacof&lt;/code&gt;&lt;/a&gt;(dissimilarities, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da40f534f3f8957e12cabff483d7807c93c64dcd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.manifold.smacof#sklearn.manifold.smacof&quot;&gt;&lt;code&gt;manifold.smacof&lt;/code&gt;&lt;/a&gt;(dissimilarities[, metric, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.manifold.smacof#sklearn.manifold.smacof&quot;&gt; &lt;code&gt;manifold.smacof&lt;/code&gt; &lt;/a&gt; (disimilitudes [, m&amp;eacute;trico,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="84a92fc7241a8c0d083f27b28e953668dbb4322c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.manifold.spectral_embedding#sklearn.manifold.spectral_embedding&quot;&gt;&lt;code&gt;manifold.spectral_embedding&lt;/code&gt;&lt;/a&gt;(adjacency, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="049576d011b6452684f25fb1fa6e9184a1db8204" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.manifold.spectral_embedding#sklearn.manifold.spectral_embedding&quot;&gt;&lt;code&gt;manifold.spectral_embedding&lt;/code&gt;&lt;/a&gt;(adjacency[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.manifold.spectral_embedding#sklearn.manifold.spectral_embedding&quot;&gt; &lt;code&gt;manifold.spectral_embedding&lt;/code&gt; &lt;/a&gt; (adyacencia [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="aa5d3b1487f8401627f2c81a670ffd8188ab09bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.manifold.spectralembedding#sklearn.manifold.SpectralEmbedding&quot;&gt;&lt;code&gt;manifold.SpectralEmbedding&lt;/code&gt;&lt;/a&gt;([n_components, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.manifold.spectralembedding#sklearn.manifold.SpectralEmbedding&quot;&gt; &lt;code&gt;manifold.SpectralEmbedding&lt;/code&gt; &lt;/a&gt; ([n_components,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="94dfb155ee1042c77f1504c7623adb05c86f02e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.manifold.trustworthiness#sklearn.manifold.trustworthiness&quot;&gt;&lt;code&gt;manifold.trustworthiness&lt;/code&gt;&lt;/a&gt;(X, X_embedded, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc82ca3aebb671d854010e240331655d0021151f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.manifold.tsne#sklearn.manifold.TSNE&quot;&gt;&lt;code&gt;manifold.TSNE&lt;/code&gt;&lt;/a&gt;([n_components, perplexity, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.manifold.tsne#sklearn.manifold.TSNE&quot;&gt; &lt;code&gt;manifold.TSNE&lt;/code&gt; &lt;/a&gt; ([n_components, perplejidad,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="cf115bdfcc340056351417dd062df3e4387d45e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.accuracy_score#sklearn.metrics.accuracy_score&quot;&gt;&lt;code&gt;accuracy_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca06d3db09115f4a2bd0486ade0162c5c55ddb2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.accuracy_score#sklearn.metrics.accuracy_score&quot;&gt;&lt;code&gt;accuracy_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, normalize, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.accuracy_score#sklearn.metrics.accuracy_score&quot;&gt; &lt;code&gt;accuracy_score&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [, normalizar, ...])</target>
        </trans-unit>
        <trans-unit id="d55d875fa633fe12dacd777f0ca41aefeb5e98ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.accuracy_score#sklearn.metrics.accuracy_score&quot;&gt;&lt;code&gt;metrics.accuracy_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22a6e639f8b15ea914f39eb4c73657519065186c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.accuracy_score#sklearn.metrics.accuracy_score&quot;&gt;&lt;code&gt;metrics.accuracy_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.accuracy_score#sklearn.metrics.accuracy_score&quot;&gt; &lt;code&gt;metrics.accuracy_score&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [...])</target>
        </trans-unit>
        <trans-unit id="42450c817fec8598a41aa2bc594bb37bb9ed0a00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.adjusted_mutual_info_score#sklearn.metrics.adjusted_mutual_info_score&quot;&gt;&lt;code&gt;metrics.adjusted_mutual_info_score&lt;/code&gt;&lt;/a&gt;(&amp;hellip;[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.adjusted_mutual_info_score#sklearn.metrics.adjusted_mutual_info_score&quot;&gt; &lt;code&gt;metrics.adjusted_mutual_info_score&lt;/code&gt; &lt;/a&gt; (&amp;hellip; [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="c19ffc352279495dec5b7a2e79d93119a8d658ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.adjusted_rand_score#sklearn.metrics.adjusted_rand_score&quot;&gt;&lt;code&gt;metrics.adjusted_rand_score&lt;/code&gt;&lt;/a&gt;(labels_true, &amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.adjusted_rand_score#sklearn.metrics.adjusted_rand_score&quot;&gt; &lt;code&gt;metrics.adjusted_rand_score&lt;/code&gt; &lt;/a&gt; (labels_true, ...)</target>
        </trans-unit>
        <trans-unit id="6123271f7ab064b59cc485c273ec1d0a6bad5111" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.auc#sklearn.metrics.auc&quot;&gt;&lt;code&gt;metrics.auc&lt;/code&gt;&lt;/a&gt;(x, y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fc5c1baff1eabc15ac4cc0462335e3ef1127286" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.auc#sklearn.metrics.auc&quot;&gt;&lt;code&gt;metrics.auc&lt;/code&gt;&lt;/a&gt;(x, y[, reorder])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.auc#sklearn.metrics.auc&quot;&gt; &lt;code&gt;metrics.auc&lt;/code&gt; &lt;/a&gt; (x, y [, reordenar])</target>
        </trans-unit>
        <trans-unit id="bfb75c7855bb656f2d7547f5fad25263bc145b8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.average_precision_score#sklearn.metrics.average_precision_score&quot;&gt;&lt;code&gt;average_precision_score&lt;/code&gt;&lt;/a&gt;(y_true, y_score, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="115164329fd1eb43ec219f713b05f0647df46668" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.average_precision_score#sklearn.metrics.average_precision_score&quot;&gt;&lt;code&gt;average_precision_score&lt;/code&gt;&lt;/a&gt;(y_true, y_score[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.average_precision_score#sklearn.metrics.average_precision_score&quot;&gt; &lt;code&gt;average_precision_score&lt;/code&gt; &lt;/a&gt; (y_true, y_score [...])</target>
        </trans-unit>
        <trans-unit id="06c68468b12ea7b548f53cf2f3aa4142d7ae1d7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.average_precision_score#sklearn.metrics.average_precision_score&quot;&gt;&lt;code&gt;metrics.average_precision_score&lt;/code&gt;&lt;/a&gt;(y_true, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f337b7aa61edd37ee5067920277a94bd9571fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.average_precision_score#sklearn.metrics.average_precision_score&quot;&gt;&lt;code&gt;metrics.average_precision_score&lt;/code&gt;&lt;/a&gt;(y_true, y_score)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.average_precision_score#sklearn.metrics.average_precision_score&quot;&gt; &lt;code&gt;metrics.average_precision_score&lt;/code&gt; &lt;/a&gt; (y_true, y_score)</target>
        </trans-unit>
        <trans-unit id="2e1f6ced5a000400d9ed798d3229bd18f57876b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.balanced_accuracy_score#sklearn.metrics.balanced_accuracy_score&quot;&gt;&lt;code&gt;balanced_accuracy_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ed7de4657e89e361665ebc2739fc0043b5d95c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.balanced_accuracy_score#sklearn.metrics.balanced_accuracy_score&quot;&gt;&lt;code&gt;balanced_accuracy_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.balanced_accuracy_score#sklearn.metrics.balanced_accuracy_score&quot;&gt; &lt;code&gt;balanced_accuracy_score&lt;/code&gt; &lt;/a&gt;puntuaci&amp;oacute;n_de_precisi&amp;oacute;n_ equilibrada (y_verdadero, y_pred [, ...])</target>
        </trans-unit>
        <trans-unit id="fa8c587d94c21bf8638f2cfb4c2bedf6fc775f41" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.balanced_accuracy_score#sklearn.metrics.balanced_accuracy_score&quot;&gt;&lt;code&gt;metrics.balanced_accuracy_score&lt;/code&gt;&lt;/a&gt;(y_true, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f318acdaeade8445683db03d0de352a6da9d6d0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.balanced_accuracy_score#sklearn.metrics.balanced_accuracy_score&quot;&gt;&lt;code&gt;metrics.balanced_accuracy_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.balanced_accuracy_score#sklearn.metrics.balanced_accuracy_score&quot;&gt; &lt;code&gt;metrics.balanced_accuracy_score&lt;/code&gt; &lt;/a&gt; (y_true, y_pred)</target>
        </trans-unit>
        <trans-unit id="372d18486b9b72d91ce50260c7e4d8d60fa4cbf6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.brier_score_loss#sklearn.metrics.brier_score_loss&quot;&gt;&lt;code&gt;metrics.brier_score_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_prob, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="518b0ee171d7383a4dfa83154ff878b00c2efb70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.brier_score_loss#sklearn.metrics.brier_score_loss&quot;&gt;&lt;code&gt;metrics.brier_score_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_prob[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.brier_score_loss#sklearn.metrics.brier_score_loss&quot;&gt; &lt;code&gt;metrics.brier_score_loss&lt;/code&gt; &lt;/a&gt; (y_true, y_prob [...])</target>
        </trans-unit>
        <trans-unit id="9771826a4577fa2ae45b3730ca3a6e113a391b67" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.calinski_harabasz_score#sklearn.metrics.calinski_harabasz_score&quot;&gt;&lt;code&gt;metrics.calinski_harabasz_score&lt;/code&gt;&lt;/a&gt;(X, labels)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7ec130993d3dec170503a83765c2f08b25b1cc8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.calinski_harabaz_score#sklearn.metrics.calinski_harabaz_score&quot;&gt;&lt;code&gt;metrics.calinski_harabaz_score&lt;/code&gt;&lt;/a&gt;(X, labels)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.calinski_harabaz_score#sklearn.metrics.calinski_harabaz_score&quot;&gt; &lt;code&gt;metrics.calinski_harabaz_score&lt;/code&gt; &lt;/a&gt; (X, etiquetas)</target>
        </trans-unit>
        <trans-unit id="a6819694c0d2c3075e4ec7d7d4d6865e42149a22" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.check_scoring#sklearn.metrics.check_scoring&quot;&gt;&lt;code&gt;metrics.check_scoring&lt;/code&gt;&lt;/a&gt;(estimator[, scoring, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.check_scoring#sklearn.metrics.check_scoring&quot;&gt; &lt;code&gt;metrics.check_scoring&lt;/code&gt; &lt;/a&gt; (estimador [, puntuaci&amp;oacute;n,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="c95b931c44366b614c906c224bbe8c0274b25fd6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.classification_report#sklearn.metrics.classification_report&quot;&gt;&lt;code&gt;classification_report&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcd1789147412af0b8a25ff211cc76994a6ab4ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.classification_report#sklearn.metrics.classification_report&quot;&gt;&lt;code&gt;classification_report&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.classification_report#sklearn.metrics.classification_report&quot;&gt; &lt;code&gt;classification_report&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [...])</target>
        </trans-unit>
        <trans-unit id="01326779a02906bc694323633d7d4ac43f41297f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.classification_report#sklearn.metrics.classification_report&quot;&gt;&lt;code&gt;metrics.classification_report&lt;/code&gt;&lt;/a&gt;(y_true, y_pred)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.classification_report#sklearn.metrics.classification_report&quot;&gt; &lt;code&gt;metrics.classification_report&lt;/code&gt; &lt;/a&gt; (y_true, y_pred)</target>
        </trans-unit>
        <trans-unit id="f3d08c5649ce29090b4c117946cde1d9432fdb12" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.classification_report#sklearn.metrics.classification_report&quot;&gt;&lt;code&gt;metrics.classification_report&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09e667df22bbe43d1b397057631e0ef4fd359af1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.cluster.contingency_matrix#sklearn.metrics.cluster.contingency_matrix&quot;&gt;&lt;code&gt;metrics.cluster.contingency_matrix&lt;/code&gt;&lt;/a&gt;(&amp;hellip;[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.cluster.contingency_matrix#sklearn.metrics.cluster.contingency_matrix&quot;&gt; &lt;code&gt;metrics.cluster.contingency_matrix&lt;/code&gt; &lt;/a&gt; (&amp;hellip; [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="5227d60473d90b58fc7087b6e089214d0907e812" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.cohen_kappa_score#sklearn.metrics.cohen_kappa_score&quot;&gt;&lt;code&gt;cohen_kappa_score&lt;/code&gt;&lt;/a&gt;(y1, y2, *[, labels, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80c3cf92808cfcb6ba314b1910354e417c5b45db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.cohen_kappa_score#sklearn.metrics.cohen_kappa_score&quot;&gt;&lt;code&gt;cohen_kappa_score&lt;/code&gt;&lt;/a&gt;(y1, y2[, labels, weights, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.cohen_kappa_score#sklearn.metrics.cohen_kappa_score&quot;&gt; &lt;code&gt;cohen_kappa_score&lt;/code&gt; &lt;/a&gt; (y1, y2 [, etiquetas, pesos,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="6a1da57686be6c14534ee7d895c743154fd77ecc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.cohen_kappa_score#sklearn.metrics.cohen_kappa_score&quot;&gt;&lt;code&gt;metrics.cohen_kappa_score&lt;/code&gt;&lt;/a&gt;(y1, y2, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0508c996bffe2bbbd1f542e102c39f9f059f476c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.cohen_kappa_score#sklearn.metrics.cohen_kappa_score&quot;&gt;&lt;code&gt;metrics.cohen_kappa_score&lt;/code&gt;&lt;/a&gt;(y1, y2[, labels, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.cohen_kappa_score#sklearn.metrics.cohen_kappa_score&quot;&gt; &lt;code&gt;metrics.cohen_kappa_score&lt;/code&gt; &lt;/a&gt; (y1, y2 [, etiquetas,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="c50a0faad697fac695cdd34a6056c09f2567cb1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.completeness_score#sklearn.metrics.completeness_score&quot;&gt;&lt;code&gt;metrics.completeness_score&lt;/code&gt;&lt;/a&gt;(labels_true, &amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.completeness_score#sklearn.metrics.completeness_score&quot;&gt; &lt;code&gt;metrics.completeness_score&lt;/code&gt; &lt;/a&gt; (labels_true, ...)</target>
        </trans-unit>
        <trans-unit id="f3e9ba7b4c88698f35c08c965397e1fa587c5cf7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.confusion_matrix#sklearn.metrics.confusion_matrix&quot;&gt;&lt;code&gt;confusion_matrix&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f449a771955b13f372fd5cc991687e1a2e9b80be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.confusion_matrix#sklearn.metrics.confusion_matrix&quot;&gt;&lt;code&gt;confusion_matrix&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, labels, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.confusion_matrix#sklearn.metrics.confusion_matrix&quot;&gt; &lt;code&gt;confusion_matrix&lt;/code&gt; &lt;/a&gt; (y_verdadero, y_pred [, etiquetas,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="e11a7a7b85c31d1e276693c7c0f73d1b28dfd8df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.confusion_matrix#sklearn.metrics.confusion_matrix&quot;&gt;&lt;code&gt;metrics.confusion_matrix&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14def393ff43672f999afbcde10cc8af40ad6e6e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.confusion_matrix#sklearn.metrics.confusion_matrix&quot;&gt;&lt;code&gt;metrics.confusion_matrix&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.confusion_matrix#sklearn.metrics.confusion_matrix&quot;&gt; &lt;code&gt;metrics.confusion_matrix&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [...])</target>
        </trans-unit>
        <trans-unit id="379844541163fbb715c664c8f8dc89bdf626d194" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.confusionmatrixdisplay#sklearn.metrics.ConfusionMatrixDisplay&quot;&gt;&lt;code&gt;metrics.ConfusionMatrixDisplay&lt;/code&gt;&lt;/a&gt;(&amp;hellip;[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29da0d96c87c128edfb9d93131ecbc517d56098d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.consensus_score#sklearn.metrics.consensus_score&quot;&gt;&lt;code&gt;metrics.consensus_score&lt;/code&gt;&lt;/a&gt;(a, b, *[, similarity])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a84940a184a8fb862b513934e5be9cca7a1a4335" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.consensus_score#sklearn.metrics.consensus_score&quot;&gt;&lt;code&gt;metrics.consensus_score&lt;/code&gt;&lt;/a&gt;(a, b[, similarity])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.consensus_score#sklearn.metrics.consensus_score&quot;&gt; &lt;code&gt;metrics.consensus_score&lt;/code&gt; &lt;/a&gt; (a, b [, similitud])</target>
        </trans-unit>
        <trans-unit id="cc8dddf79f471ed6b611a21347a96ed9b41112d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.coverage_error#sklearn.metrics.coverage_error&quot;&gt;&lt;code&gt;metrics.coverage_error&lt;/code&gt;&lt;/a&gt;(y_true, y_score, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aea6a69e67b4dd0c56df0b9d9f3cf0910b9e846e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.coverage_error#sklearn.metrics.coverage_error&quot;&gt;&lt;code&gt;metrics.coverage_error&lt;/code&gt;&lt;/a&gt;(y_true, y_score[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.coverage_error#sklearn.metrics.coverage_error&quot;&gt; &lt;code&gt;metrics.coverage_error&lt;/code&gt; &lt;/a&gt; (y_true, y_score [...])</target>
        </trans-unit>
        <trans-unit id="4edf3ec5897c57b7d0f7f2d90776691b908a7afc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.davies_bouldin_score#sklearn.metrics.davies_bouldin_score&quot;&gt;&lt;code&gt;metrics.davies_bouldin_score&lt;/code&gt;&lt;/a&gt;(X, labels)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.davies_bouldin_score#sklearn.metrics.davies_bouldin_score&quot;&gt; &lt;code&gt;metrics.davies_bouldin_score&lt;/code&gt; &lt;/a&gt; (X, etiquetas)</target>
        </trans-unit>
        <trans-unit id="01afd8401c8126dba7e7a3e8b76951ed4f3888d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.dcg_score#sklearn.metrics.dcg_score&quot;&gt;&lt;code&gt;metrics.dcg_score&lt;/code&gt;&lt;/a&gt;(y_true, y_score, *[, k, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d146a473d986d371b0c8039c5bb9e115a75537d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.explained_variance_score#sklearn.metrics.explained_variance_score&quot;&gt;&lt;code&gt;metrics.explained_variance_score&lt;/code&gt;&lt;/a&gt;(y_true, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4585efe73e8721fa9194d084a6a42f2aad197411" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.explained_variance_score#sklearn.metrics.explained_variance_score&quot;&gt;&lt;code&gt;metrics.explained_variance_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.explained_variance_score#sklearn.metrics.explained_variance_score&quot;&gt; &lt;code&gt;metrics.explained_variance_score&lt;/code&gt; &lt;/a&gt; (y_true, y_pred)</target>
        </trans-unit>
        <trans-unit id="3f0958c71cc5a5c9d75256ce1c053ff992866041" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.f1_score#sklearn.metrics.f1_score&quot;&gt;&lt;code&gt;f1_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, labels, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e33455e3ec85b7a5241dc32ebc4a9352e12ffcab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.f1_score#sklearn.metrics.f1_score&quot;&gt;&lt;code&gt;f1_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, labels, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.f1_score#sklearn.metrics.f1_score&quot;&gt; &lt;code&gt;f1_score&lt;/code&gt; &lt;/a&gt; (y_verdadero, y_pred [, etiquetas,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="55bbfc09e4e5429eaa2be170f496c20b4102bacb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.f1_score#sklearn.metrics.f1_score&quot;&gt;&lt;code&gt;metrics.f1_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1331880df8107052479a3f50c2964fd07c4058bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.f1_score#sklearn.metrics.f1_score&quot;&gt;&lt;code&gt;metrics.f1_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, labels, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.f1_score#sklearn.metrics.f1_score&quot;&gt; &lt;code&gt;metrics.f1_score&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [, etiquetas, ...])</target>
        </trans-unit>
        <trans-unit id="dd5f7bcedbdd588a0069388e08af4ac1db2b63f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.fbeta_score#sklearn.metrics.fbeta_score&quot;&gt;&lt;code&gt;fbeta_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *, beta[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cc9bc3d79efff9118ea74b433b8afc29cd8774c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.fbeta_score#sklearn.metrics.fbeta_score&quot;&gt;&lt;code&gt;fbeta_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, beta[, labels, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.fbeta_score#sklearn.metrics.fbeta_score&quot;&gt; &lt;code&gt;fbeta_score&lt;/code&gt; &lt;/a&gt; (y_true, y_pred, beta [, etiquetas,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="23c0046b4800bc0bfbcec19f087be14678ded833" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.fbeta_score#sklearn.metrics.fbeta_score&quot;&gt;&lt;code&gt;metrics.fbeta_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *, beta)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1f0570545009a65b7313cd8018fce6c6cef837b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.fbeta_score#sklearn.metrics.fbeta_score&quot;&gt;&lt;code&gt;metrics.fbeta_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, beta[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.fbeta_score#sklearn.metrics.fbeta_score&quot;&gt; &lt;code&gt;metrics.fbeta_score&lt;/code&gt; &lt;/a&gt; (y_true, y_pred, beta [...])</target>
        </trans-unit>
        <trans-unit id="136237868cf2dd5bdd9cda5197649ecab5f491b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.fowlkes_mallows_score#sklearn.metrics.fowlkes_mallows_score&quot;&gt;&lt;code&gt;metrics.fowlkes_mallows_score&lt;/code&gt;&lt;/a&gt;(labels_true, &amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.fowlkes_mallows_score#sklearn.metrics.fowlkes_mallows_score&quot;&gt; &lt;code&gt;metrics.fowlkes_mallows_score&lt;/code&gt; &lt;/a&gt; (labels_true, ...)</target>
        </trans-unit>
        <trans-unit id="a1d642290e877d2252a9ed0817d66591bf44d471" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.get_scorer#sklearn.metrics.get_scorer&quot;&gt;&lt;code&gt;metrics.get_scorer&lt;/code&gt;&lt;/a&gt;(scoring)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.get_scorer#sklearn.metrics.get_scorer&quot;&gt;&lt;code&gt;metrics.get_scorer&lt;/code&gt;&lt;/a&gt;(scoring)</target>
        </trans-unit>
        <trans-unit id="fd20cdaf5ceca03f2a7c2d34879dfbc57fbf281f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.hamming_loss#sklearn.metrics.hamming_loss&quot;&gt;&lt;code&gt;hamming_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, sample_weight])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeac7a3e8b7290409ce2069b775933934afc58e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.hamming_loss#sklearn.metrics.hamming_loss&quot;&gt;&lt;code&gt;hamming_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, labels, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.hamming_loss#sklearn.metrics.hamming_loss&quot;&gt; &lt;code&gt;hamming_loss&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [, etiquetas,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="2aa2483ab142f5199ad8eacc8b6eb63ac36cc3af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.hamming_loss#sklearn.metrics.hamming_loss&quot;&gt;&lt;code&gt;metrics.hamming_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c38e16260589fa6b93b773c5168b9289484d8af0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.hamming_loss#sklearn.metrics.hamming_loss&quot;&gt;&lt;code&gt;metrics.hamming_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.hamming_loss#sklearn.metrics.hamming_loss&quot;&gt; &lt;code&gt;metrics.hamming_loss&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [...])</target>
        </trans-unit>
        <trans-unit id="e23e4e0689b4914cd8223c341ffc5c214871d9d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.hinge_loss#sklearn.metrics.hinge_loss&quot;&gt;&lt;code&gt;hinge_loss&lt;/code&gt;&lt;/a&gt;(y_true, pred_decision, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a1983028f247edee1b8ce66e446c535108d97d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.hinge_loss#sklearn.metrics.hinge_loss&quot;&gt;&lt;code&gt;hinge_loss&lt;/code&gt;&lt;/a&gt;(y_true, pred_decision[, labels, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.hinge_loss#sklearn.metrics.hinge_loss&quot;&gt; &lt;code&gt;hinge_loss&lt;/code&gt; &lt;/a&gt; (y_true, pred_decision [, etiquetas,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="0792180b9fefa139e4bcdd1cdbaecea3d060917d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.hinge_loss#sklearn.metrics.hinge_loss&quot;&gt;&lt;code&gt;metrics.hinge_loss&lt;/code&gt;&lt;/a&gt;(y_true, pred_decision, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e3f579bb481dfe29cacba52210694024875b347" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.hinge_loss#sklearn.metrics.hinge_loss&quot;&gt;&lt;code&gt;metrics.hinge_loss&lt;/code&gt;&lt;/a&gt;(y_true, pred_decision[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.hinge_loss#sklearn.metrics.hinge_loss&quot;&gt; &lt;code&gt;metrics.hinge_loss&lt;/code&gt; &lt;/a&gt; (y_true, pred_decision [...])</target>
        </trans-unit>
        <trans-unit id="5f80070e87a216fbdb60499328a823596213efe0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.homogeneity_completeness_v_measure#sklearn.metrics.homogeneity_completeness_v_measure&quot;&gt;&lt;code&gt;metrics.homogeneity_completeness_v_measure&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.homogeneity_completeness_v_measure#sklearn.metrics.homogeneity_completeness_v_measure&quot;&gt;&lt;code&gt;metrics.homogeneity_completeness_v_measure&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="230d8b1efb230df71cd701df80478ca2758e6351" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.homogeneity_score#sklearn.metrics.homogeneity_score&quot;&gt;&lt;code&gt;metrics.homogeneity_score&lt;/code&gt;&lt;/a&gt;(labels_true, &amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.homogeneity_score#sklearn.metrics.homogeneity_score&quot;&gt; &lt;code&gt;metrics.homogeneity_score&lt;/code&gt; &lt;/a&gt; (labels_true, ...)</target>
        </trans-unit>
        <trans-unit id="f3f9011a7a6e9124d3d3fb55ff14bcee01b78d78" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.jaccard_score#sklearn.metrics.jaccard_score&quot;&gt;&lt;code&gt;jaccard_score&lt;/code&gt;&lt;/a&gt; works like &lt;a href=&quot;generated/sklearn.metrics.precision_recall_fscore_support#sklearn.metrics.precision_recall_fscore_support&quot;&gt;&lt;code&gt;precision_recall_fscore_support&lt;/code&gt;&lt;/a&gt; as a naively set-wise measure applying natively to binary targets, and extended to apply to multilabel and multiclass through the use of &lt;code&gt;average&lt;/code&gt; (see &lt;a href=&quot;#average&quot;&gt;above&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da63218ff97ceae37ad5090235e7f2aa5003a561" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.jaccard_score#sklearn.metrics.jaccard_score&quot;&gt;&lt;code&gt;jaccard_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, labels, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="919d08d97e54997fef0b7058b7b740b79189415d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.jaccard_score#sklearn.metrics.jaccard_score&quot;&gt;&lt;code&gt;metrics.jaccard_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24a7b04ca323c5dc52841fb17cb8dcb421f0a1e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.jaccard_similarity_score#sklearn.metrics.jaccard_similarity_score&quot;&gt;&lt;code&gt;jaccard_similarity_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.jaccard_similarity_score#sklearn.metrics.jaccard_similarity_score&quot;&gt; &lt;code&gt;jaccard_similarity_score&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="e743eb987e20e6c904359e71de0095772927afbf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.jaccard_similarity_score#sklearn.metrics.jaccard_similarity_score&quot;&gt;&lt;code&gt;metrics.jaccard_similarity_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.jaccard_similarity_score#sklearn.metrics.jaccard_similarity_score&quot;&gt; &lt;code&gt;metrics.jaccard_similarity_score&lt;/code&gt; &lt;/a&gt; (y_true, y_pred)</target>
        </trans-unit>
        <trans-unit id="d89ea8e30e3c5dc62222b774d3442eb72aba1194" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.label_ranking_average_precision_score#sklearn.metrics.label_ranking_average_precision_score&quot;&gt;&lt;code&gt;metrics.label_ranking_average_precision_score&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.label_ranking_average_precision_score#sklearn.metrics.label_ranking_average_precision_score&quot;&gt;&lt;code&gt;metrics.label_ranking_average_precision_score&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="f8a0cec34505e7675ef24f8c0f72b781d76abb1f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.label_ranking_loss#sklearn.metrics.label_ranking_loss&quot;&gt;&lt;code&gt;metrics.label_ranking_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_score)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.label_ranking_loss#sklearn.metrics.label_ranking_loss&quot;&gt; &lt;code&gt;metrics.label_ranking_loss&lt;/code&gt; &lt;/a&gt; (y_true, y_score)</target>
        </trans-unit>
        <trans-unit id="dcab618b23dcb8546d30403c7be9bef876f71ebd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.label_ranking_loss#sklearn.metrics.label_ranking_loss&quot;&gt;&lt;code&gt;metrics.label_ranking_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_score, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab649c84c58eb8910a32c216a7388b9e3072123b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.log_loss#sklearn.metrics.log_loss&quot;&gt;&lt;code&gt;log_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, eps, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff30307c3e93aa3b3d2b032fc08f6e5d4842d852" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.log_loss#sklearn.metrics.log_loss&quot;&gt;&lt;code&gt;log_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, eps, normalize, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.log_loss#sklearn.metrics.log_loss&quot;&gt; &lt;code&gt;log_loss&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [, eps, normalize,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="8568742fbd03108ac80d177970d1ea4bc57a61f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.log_loss#sklearn.metrics.log_loss&quot;&gt;&lt;code&gt;metrics.log_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, eps, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfcf1154e7eb4ebb97e5c0b0b66b803608b91235" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.log_loss#sklearn.metrics.log_loss&quot;&gt;&lt;code&gt;metrics.log_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, eps, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.log_loss#sklearn.metrics.log_loss&quot;&gt; &lt;code&gt;metrics.log_loss&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [, EPS, ...])</target>
        </trans-unit>
        <trans-unit id="557df1bc5875864e78b772b8041fc8d2a6092056" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.make_scorer#sklearn.metrics.make_scorer&quot;&gt;&lt;code&gt;metrics.make_scorer&lt;/code&gt;&lt;/a&gt;(score_func, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07fbfea8a39bdae39a985f32124b9666db89a614" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.make_scorer#sklearn.metrics.make_scorer&quot;&gt;&lt;code&gt;metrics.make_scorer&lt;/code&gt;&lt;/a&gt;(score_func[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.make_scorer#sklearn.metrics.make_scorer&quot;&gt; &lt;code&gt;metrics.make_scorer&lt;/code&gt; &lt;/a&gt; (score_func [...])</target>
        </trans-unit>
        <trans-unit id="3ac7b2a707133ed3d222ee661492a15350fc32d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.matthews_corrcoef#sklearn.metrics.matthews_corrcoef&quot;&gt;&lt;code&gt;matthews_corrcoef&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87d869dc6c8d89d54b886e970bbfa21358fb3b5f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.matthews_corrcoef#sklearn.metrics.matthews_corrcoef&quot;&gt;&lt;code&gt;matthews_corrcoef&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.matthews_corrcoef#sklearn.metrics.matthews_corrcoef&quot;&gt; &lt;code&gt;matthews_corrcoef&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="2f0bd06bd676c26767d834747c335b5eb0b8503d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.matthews_corrcoef#sklearn.metrics.matthews_corrcoef&quot;&gt;&lt;code&gt;metrics.matthews_corrcoef&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16bc2ef47c98cc6a3d18404cd14faa44fe3ef52c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.matthews_corrcoef#sklearn.metrics.matthews_corrcoef&quot;&gt;&lt;code&gt;metrics.matthews_corrcoef&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.matthews_corrcoef#sklearn.metrics.matthews_corrcoef&quot;&gt; &lt;code&gt;metrics.matthews_corrcoef&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [...])</target>
        </trans-unit>
        <trans-unit id="3d0e44c42d2def3ae327f7c1239366121ad4e7b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.max_error#sklearn.metrics.max_error&quot;&gt;&lt;code&gt;metrics.max_error&lt;/code&gt;&lt;/a&gt;(y_true, y_pred)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44c0be874b88c6452a418f652c180d842b7f6821" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.mean_absolute_error#sklearn.metrics.mean_absolute_error&quot;&gt;&lt;code&gt;metrics.mean_absolute_error&lt;/code&gt;&lt;/a&gt;(y_true, y_pred)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.mean_absolute_error#sklearn.metrics.mean_absolute_error&quot;&gt; &lt;code&gt;metrics.mean_absolute_error&lt;/code&gt; &lt;/a&gt; (y_true, y_pred)</target>
        </trans-unit>
        <trans-unit id="4fd8d741db92173a6322aa2badd38bc9f1324775" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.mean_absolute_error#sklearn.metrics.mean_absolute_error&quot;&gt;&lt;code&gt;metrics.mean_absolute_error&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8c7c916deb5d467ed16e32876bed565c768c25b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.mean_gamma_deviance#sklearn.metrics.mean_gamma_deviance&quot;&gt;&lt;code&gt;metrics.mean_gamma_deviance&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a084b883a9a8b9cf9fcfc22e1c5d3a0a110d1280" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.mean_poisson_deviance#sklearn.metrics.mean_poisson_deviance&quot;&gt;&lt;code&gt;metrics.mean_poisson_deviance&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb050ea068aa15fb88bf8060a35ee6c799761f93" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.mean_squared_error#sklearn.metrics.mean_squared_error&quot;&gt;&lt;code&gt;metrics.mean_squared_error&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b3289d457452bf79f70f4e545ea62a8f9b74022" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.mean_squared_error#sklearn.metrics.mean_squared_error&quot;&gt;&lt;code&gt;metrics.mean_squared_error&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.mean_squared_error#sklearn.metrics.mean_squared_error&quot;&gt; &lt;code&gt;metrics.mean_squared_error&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [...])</target>
        </trans-unit>
        <trans-unit id="4a99be033d780c89a26380078c25be0410db63e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.mean_squared_log_error#sklearn.metrics.mean_squared_log_error&quot;&gt;&lt;code&gt;metrics.mean_squared_log_error&lt;/code&gt;&lt;/a&gt;(y_true, y_pred)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.mean_squared_log_error#sklearn.metrics.mean_squared_log_error&quot;&gt; &lt;code&gt;metrics.mean_squared_log_error&lt;/code&gt; &lt;/a&gt; (y_true, y_pred)</target>
        </trans-unit>
        <trans-unit id="4bd024e01f7172177a9d221ea9b9d4343cd8f9f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.mean_squared_log_error#sklearn.metrics.mean_squared_log_error&quot;&gt;&lt;code&gt;metrics.mean_squared_log_error&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4d7409ae6817c93ad080d40cfd35d142fe5607d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.mean_tweedie_deviance#sklearn.metrics.mean_tweedie_deviance&quot;&gt;&lt;code&gt;metrics.mean_tweedie_deviance&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81e54595f22880b31b064071ce71406b172bc82a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.median_absolute_error#sklearn.metrics.median_absolute_error&quot;&gt;&lt;code&gt;metrics.median_absolute_error&lt;/code&gt;&lt;/a&gt;(y_true, y_pred)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.median_absolute_error#sklearn.metrics.median_absolute_error&quot;&gt; &lt;code&gt;metrics.median_absolute_error&lt;/code&gt; &lt;/a&gt; (y_true, y_pred)</target>
        </trans-unit>
        <trans-unit id="e40402d56395b788563ad5fe4ad24ba12bd2ad5b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.median_absolute_error#sklearn.metrics.median_absolute_error&quot;&gt;&lt;code&gt;metrics.median_absolute_error&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcb434a615a9a7b8f6655e047905644b440f6a44" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.multilabel_confusion_matrix#sklearn.metrics.multilabel_confusion_matrix&quot;&gt;&lt;code&gt;metrics.multilabel_confusion_matrix&lt;/code&gt;&lt;/a&gt;(y_true, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3c67ca10e05193c7d461d314838435d4f08ac60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.multilabel_confusion_matrix#sklearn.metrics.multilabel_confusion_matrix&quot;&gt;&lt;code&gt;multilabel_confusion_matrix&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7d76dcd64afd60860d3db9bbd44cd8fb3fcaedd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.mutual_info_score#sklearn.metrics.mutual_info_score&quot;&gt;&lt;code&gt;metrics.mutual_info_score&lt;/code&gt;&lt;/a&gt;(labels_true, &amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.mutual_info_score#sklearn.metrics.mutual_info_score&quot;&gt; &lt;code&gt;metrics.mutual_info_score&lt;/code&gt; &lt;/a&gt; (labels_true, ...)</target>
        </trans-unit>
        <trans-unit id="1ad1008f9de3cb1e63c428552caea39411c8d2cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.ndcg_score#sklearn.metrics.ndcg_score&quot;&gt;&lt;code&gt;metrics.ndcg_score&lt;/code&gt;&lt;/a&gt;(y_true, y_score, *[, k, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a702c0eb05f50ca1e247a9b5e62f28a596afb43" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.normalized_mutual_info_score#sklearn.metrics.normalized_mutual_info_score&quot;&gt;&lt;code&gt;metrics.normalized_mutual_info_score&lt;/code&gt;&lt;/a&gt;(&amp;hellip;[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.normalized_mutual_info_score#sklearn.metrics.normalized_mutual_info_score&quot;&gt; &lt;code&gt;metrics.normalized_mutual_info_score&lt;/code&gt; &lt;/a&gt; (&amp;hellip; [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="f5d6b060215e46a3c5f7cc1e3fe45e462824ea68" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.additive_chi2_kernel#sklearn.metrics.pairwise.additive_chi2_kernel&quot;&gt;&lt;code&gt;metrics.pairwise.additive_chi2_kernel&lt;/code&gt;&lt;/a&gt;(X[, Y])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.additive_chi2_kernel#sklearn.metrics.pairwise.additive_chi2_kernel&quot;&gt; &lt;code&gt;metrics.pairwise.additive_chi2_kernel&lt;/code&gt; &lt;/a&gt; (X [, Y])</target>
        </trans-unit>
        <trans-unit id="dcfae0e0223b57e54672884d64e5f753e4f1bcc9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.chi2_kernel#sklearn.metrics.pairwise.chi2_kernel&quot;&gt;&lt;code&gt;metrics.pairwise.chi2_kernel&lt;/code&gt;&lt;/a&gt;(X[, Y, gamma])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.chi2_kernel#sklearn.metrics.pairwise.chi2_kernel&quot;&gt; &lt;code&gt;metrics.pairwise.chi2_kernel&lt;/code&gt; &lt;/a&gt; (X [, Y, gamma])</target>
        </trans-unit>
        <trans-unit id="a2fec23b88836a55dacba5cda35c73880269ed53" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.cosine_distances#sklearn.metrics.pairwise.cosine_distances&quot;&gt;&lt;code&gt;metrics.pairwise.cosine_distances&lt;/code&gt;&lt;/a&gt;(X[, Y])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.cosine_distances#sklearn.metrics.pairwise.cosine_distances&quot;&gt; &lt;code&gt;metrics.pairwise.cosine_distances&lt;/code&gt; &lt;/a&gt; (X [, Y])</target>
        </trans-unit>
        <trans-unit id="516dd8a92e3fe1a5ff9b735e4103d12317b70eb7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.cosine_similarity#sklearn.metrics.pairwise.cosine_similarity&quot;&gt;&lt;code&gt;cosine_similarity&lt;/code&gt;&lt;/a&gt; computes the L2-normalized dot product of vectors. That is, if \(x\) and \(y\) are row vectors, their cosine similarity \(k\) is defined as:</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.cosine_similarity#sklearn.metrics.pairwise.cosine_similarity&quot;&gt; &lt;code&gt;cosine_similarity&lt;/code&gt; &lt;/a&gt; calcula el producto escalar de vectores normalizado en L2. Es decir, si \ (x \) y \ (y \) son vectores de fila, su similitud de coseno \ (k \) se define como:</target>
        </trans-unit>
        <trans-unit id="c51be90ddb6cfff8939459aefa1531facc132bcb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.cosine_similarity#sklearn.metrics.pairwise.cosine_similarity&quot;&gt;&lt;code&gt;metrics.pairwise.cosine_similarity&lt;/code&gt;&lt;/a&gt;(X[, Y, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.cosine_similarity#sklearn.metrics.pairwise.cosine_similarity&quot;&gt; &lt;code&gt;metrics.pairwise.cosine_similarity&lt;/code&gt; &lt;/a&gt; (X [, Y,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="3ca078f31e9f0264fa3fdf0b868b6b48ddeaba18" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.distance_metrics#sklearn.metrics.pairwise.distance_metrics&quot;&gt;&lt;code&gt;metrics.pairwise.distance_metrics&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.distance_metrics#sklearn.metrics.pairwise.distance_metrics&quot;&gt;&lt;code&gt;metrics.pairwise.distance_metrics&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="02fa06873d7ae6e743287863eb0c2c5400cd54c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.euclidean_distances#sklearn.metrics.pairwise.euclidean_distances&quot;&gt;&lt;code&gt;metrics.pairwise.euclidean_distances&lt;/code&gt;&lt;/a&gt;(X[, Y, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.euclidean_distances#sklearn.metrics.pairwise.euclidean_distances&quot;&gt; &lt;code&gt;metrics.pairwise.euclidean_distances&lt;/code&gt; &lt;/a&gt; (X [, Y,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="2549fa44fe7b1fcea91cb30f36e75483d859c1d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.haversine_distances#sklearn.metrics.pairwise.haversine_distances&quot;&gt;&lt;code&gt;metrics.pairwise.haversine_distances&lt;/code&gt;&lt;/a&gt;(X[, Y])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a49ba1b0044824b27093c413751a215f61b76ff8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.kernel_metrics#sklearn.metrics.pairwise.kernel_metrics&quot;&gt;&lt;code&gt;metrics.pairwise.kernel_metrics&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.kernel_metrics#sklearn.metrics.pairwise.kernel_metrics&quot;&gt;&lt;code&gt;metrics.pairwise.kernel_metrics&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="befbc67231334b2301f2d9cce35a95028c4bb4cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.laplacian_kernel#sklearn.metrics.pairwise.laplacian_kernel&quot;&gt;&lt;code&gt;metrics.pairwise.laplacian_kernel&lt;/code&gt;&lt;/a&gt;(X[, Y, gamma])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.laplacian_kernel#sklearn.metrics.pairwise.laplacian_kernel&quot;&gt; &lt;code&gt;metrics.pairwise.laplacian_kernel&lt;/code&gt; &lt;/a&gt; (X [, Y, gamma])</target>
        </trans-unit>
        <trans-unit id="8888c1e796f4c2797dd5072c57e800e9a529764c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.linear_kernel#sklearn.metrics.pairwise.linear_kernel&quot;&gt;&lt;code&gt;metrics.pairwise.linear_kernel&lt;/code&gt;&lt;/a&gt;(X[, Y, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.linear_kernel#sklearn.metrics.pairwise.linear_kernel&quot;&gt; &lt;code&gt;metrics.pairwise.linear_kernel&lt;/code&gt; &lt;/a&gt; (X [, Y,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="4de4414fc49f46303b5202b9de68954923fe70b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.manhattan_distances#sklearn.metrics.pairwise.manhattan_distances&quot;&gt;&lt;code&gt;metrics.pairwise.manhattan_distances&lt;/code&gt;&lt;/a&gt;(X[, Y, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.manhattan_distances#sklearn.metrics.pairwise.manhattan_distances&quot;&gt; &lt;code&gt;metrics.pairwise.manhattan_distances&lt;/code&gt; &lt;/a&gt; (X [, Y,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="c75219240535ddc55570c1c31e017f5821cf653f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.nan_euclidean_distances#sklearn.metrics.pairwise.nan_euclidean_distances&quot;&gt;&lt;code&gt;metrics.pairwise.nan_euclidean_distances&lt;/code&gt;&lt;/a&gt;(X)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.nan_euclidean_distances#sklearn.metrics.pairwise.nan_euclidean_distances&quot;&gt;&lt;code&gt;metrics.pairwise.nan_euclidean_distances&lt;/code&gt;&lt;/a&gt;(X)</target>
        </trans-unit>
        <trans-unit id="d285af17f3f864745356dbcf11079de3f851996c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.paired_cosine_distances#sklearn.metrics.pairwise.paired_cosine_distances&quot;&gt;&lt;code&gt;metrics.pairwise.paired_cosine_distances&lt;/code&gt;&lt;/a&gt;(X, Y)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.paired_cosine_distances#sklearn.metrics.pairwise.paired_cosine_distances&quot;&gt; &lt;code&gt;metrics.pairwise.paired_cosine_distances&lt;/code&gt; &lt;/a&gt; (X, Y)</target>
        </trans-unit>
        <trans-unit id="15d94bd4c1d71c297855668e9d5789a3d4f01319" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.paired_distances#sklearn.metrics.pairwise.paired_distances&quot;&gt;&lt;code&gt;metrics.pairwise.paired_distances&lt;/code&gt;&lt;/a&gt;(X, Y, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66425e6640b5605e8a4778475e447040775ade9d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.paired_distances#sklearn.metrics.pairwise.paired_distances&quot;&gt;&lt;code&gt;metrics.pairwise.paired_distances&lt;/code&gt;&lt;/a&gt;(X, Y[, metric])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.paired_distances#sklearn.metrics.pairwise.paired_distances&quot;&gt; &lt;code&gt;metrics.pairwise.paired_distances&lt;/code&gt; &lt;/a&gt; (X, Y [, metric])</target>
        </trans-unit>
        <trans-unit id="989ac0d0d7e50a566e76df6405f98b1ebfbb9e8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.paired_euclidean_distances#sklearn.metrics.pairwise.paired_euclidean_distances&quot;&gt;&lt;code&gt;metrics.pairwise.paired_euclidean_distances&lt;/code&gt;&lt;/a&gt;(X, Y)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.paired_euclidean_distances#sklearn.metrics.pairwise.paired_euclidean_distances&quot;&gt; &lt;code&gt;metrics.pairwise.paired_euclidean_distances&lt;/code&gt; &lt;/a&gt; (X, Y)</target>
        </trans-unit>
        <trans-unit id="8d129f9020632e1e732d0b3becd968dd53a40d8f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.paired_manhattan_distances#sklearn.metrics.pairwise.paired_manhattan_distances&quot;&gt;&lt;code&gt;metrics.pairwise.paired_manhattan_distances&lt;/code&gt;&lt;/a&gt;(X, Y)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.paired_manhattan_distances#sklearn.metrics.pairwise.paired_manhattan_distances&quot;&gt; &lt;code&gt;metrics.pairwise.paired_manhattan_distances&lt;/code&gt; &lt;/a&gt; (X, Y)</target>
        </trans-unit>
        <trans-unit id="d0fe656fcf3c22351435eeabab839a9aab56a478" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.pairwise_kernels#sklearn.metrics.pairwise.pairwise_kernels&quot;&gt;&lt;code&gt;metrics.pairwise.pairwise_kernels&lt;/code&gt;&lt;/a&gt;(X[, Y, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.pairwise_kernels#sklearn.metrics.pairwise.pairwise_kernels&quot;&gt; &lt;code&gt;metrics.pairwise.pairwise_kernels&lt;/code&gt; &lt;/a&gt; (X [, Y,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="920c2335f02cec189da8dc1bdf83b36c38677bd4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.polynomial_kernel#sklearn.metrics.pairwise.polynomial_kernel&quot;&gt;&lt;code&gt;metrics.pairwise.polynomial_kernel&lt;/code&gt;&lt;/a&gt;(X[, Y, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.polynomial_kernel#sklearn.metrics.pairwise.polynomial_kernel&quot;&gt; &lt;code&gt;metrics.pairwise.polynomial_kernel&lt;/code&gt; &lt;/a&gt; (X [, Y,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="9b8ab65eb268a371cc32dbe8241f5bba2900bcbc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.rbf_kernel#sklearn.metrics.pairwise.rbf_kernel&quot;&gt;&lt;code&gt;metrics.pairwise.rbf_kernel&lt;/code&gt;&lt;/a&gt;(X[, Y, gamma])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.rbf_kernel#sklearn.metrics.pairwise.rbf_kernel&quot;&gt; &lt;code&gt;metrics.pairwise.rbf_kernel&lt;/code&gt; &lt;/a&gt; (X [, Y, gamma])</target>
        </trans-unit>
        <trans-unit id="bbf0d27e7a63843e1cc7b49b021de81c3e39f933" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise.sigmoid_kernel#sklearn.metrics.pairwise.sigmoid_kernel&quot;&gt;&lt;code&gt;metrics.pairwise.sigmoid_kernel&lt;/code&gt;&lt;/a&gt;(X[, Y, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise.sigmoid_kernel#sklearn.metrics.pairwise.sigmoid_kernel&quot;&gt; &lt;code&gt;metrics.pairwise.sigmoid_kernel&lt;/code&gt; &lt;/a&gt; (X [, Y,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="ccc319dd25faa6977bcede1110bc736980839019" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise_distances#sklearn.metrics.pairwise_distances&quot;&gt;&lt;code&gt;metrics.pairwise_distances&lt;/code&gt;&lt;/a&gt;(X[, Y, metric, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise_distances#sklearn.metrics.pairwise_distances&quot;&gt; &lt;code&gt;metrics.pairwise_distances&lt;/code&gt; &lt;/a&gt; (X [, Y, metric,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="2470f9284fa143f7c00f72e99ae8598c3b3b4bf6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise_distances_argmin#sklearn.metrics.pairwise_distances_argmin&quot;&gt;&lt;code&gt;metrics.pairwise_distances_argmin&lt;/code&gt;&lt;/a&gt;(X, Y, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a5e685da980638552134c3fccda7335d774fc1a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise_distances_argmin#sklearn.metrics.pairwise_distances_argmin&quot;&gt;&lt;code&gt;metrics.pairwise_distances_argmin&lt;/code&gt;&lt;/a&gt;(X, Y[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise_distances_argmin#sklearn.metrics.pairwise_distances_argmin&quot;&gt; &lt;code&gt;metrics.pairwise_distances_argmin&lt;/code&gt; &lt;/a&gt; (X, Y [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="0b9d76f22402485a21b18bc2ad1f0638a2e16685" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise_distances_argmin_min#sklearn.metrics.pairwise_distances_argmin_min&quot;&gt;&lt;code&gt;metrics.pairwise_distances_argmin_min&lt;/code&gt;&lt;/a&gt;(X, Y)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise_distances_argmin_min#sklearn.metrics.pairwise_distances_argmin_min&quot;&gt; &lt;code&gt;metrics.pairwise_distances_argmin_min&lt;/code&gt; &lt;/a&gt; (X, Y)</target>
        </trans-unit>
        <trans-unit id="0ef869d7841dc0228c07b812828acb8ac79d392c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise_distances_argmin_min#sklearn.metrics.pairwise_distances_argmin_min&quot;&gt;&lt;code&gt;metrics.pairwise_distances_argmin_min&lt;/code&gt;&lt;/a&gt;(X, Y, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba628c7031a5d0ea578d20ea605706a1c651fa55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.pairwise_distances_chunked#sklearn.metrics.pairwise_distances_chunked&quot;&gt;&lt;code&gt;metrics.pairwise_distances_chunked&lt;/code&gt;&lt;/a&gt;(X[, Y, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.pairwise_distances_chunked#sklearn.metrics.pairwise_distances_chunked&quot;&gt; &lt;code&gt;metrics.pairwise_distances_chunked&lt;/code&gt; &lt;/a&gt; (X [, Y,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="0d7db343961d3843a3b379b6e76a92cab4d23d36" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.plot_confusion_matrix#sklearn.metrics.plot_confusion_matrix&quot;&gt;&lt;code&gt;metrics.plot_confusion_matrix&lt;/code&gt;&lt;/a&gt;(estimator, X, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f320a0589d98e9aaa2ec71c0208645b02c13117b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.plot_confusion_matrix#sklearn.metrics.plot_confusion_matrix&quot;&gt;&lt;code&gt;plot_confusion_matrix&lt;/code&gt;&lt;/a&gt; can be used to visually represent a confusion matrix as shown in the &lt;a href=&quot;../auto_examples/model_selection/plot_confusion_matrix#sphx-glr-auto-examples-model-selection-plot-confusion-matrix-py&quot;&gt;Confusion matrix&lt;/a&gt; example, which creates the following figure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fa54bf25f788d3f806d78c292fc891353b2dc17" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.plot_precision_recall_curve#sklearn.metrics.plot_precision_recall_curve&quot;&gt;&lt;code&gt;metrics.plot_precision_recall_curve&lt;/code&gt;&lt;/a&gt;(&amp;hellip;[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3250efd51db1af1b5478548390df10bc82e46191" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.plot_roc_curve#sklearn.metrics.plot_roc_curve&quot;&gt;&lt;code&gt;metrics.plot_roc_curve&lt;/code&gt;&lt;/a&gt;(estimator, X, y, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff640cc505f29e816eac84dd1e8cb2add2c38e91" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.precision_recall_curve#sklearn.metrics.precision_recall_curve&quot;&gt;&lt;code&gt;metrics.precision_recall_curve&lt;/code&gt;&lt;/a&gt;(y_true, &amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.precision_recall_curve#sklearn.metrics.precision_recall_curve&quot;&gt; &lt;code&gt;metrics.precision_recall_curve&lt;/code&gt; &lt;/a&gt; (y_true, ...)</target>
        </trans-unit>
        <trans-unit id="9d3b0022f5b282a51d63dce8d50ba8675220c58b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.precision_recall_curve#sklearn.metrics.precision_recall_curve&quot;&gt;&lt;code&gt;precision_recall_curve&lt;/code&gt;&lt;/a&gt;(y_true, probas_pred)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.precision_recall_curve#sklearn.metrics.precision_recall_curve&quot;&gt; &lt;code&gt;precision_recall_curve&lt;/code&gt; &lt;/a&gt; (y_true, probas_pred)</target>
        </trans-unit>
        <trans-unit id="b2fd77574ce813c175d6d469f426f7693eae7e6d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.precision_recall_curve#sklearn.metrics.precision_recall_curve&quot;&gt;&lt;code&gt;precision_recall_curve&lt;/code&gt;&lt;/a&gt;(y_true, probas_pred, *)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e730d4484b9169ac15ec99c164dd62349dc5dd9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.precision_recall_fscore_support#sklearn.metrics.precision_recall_fscore_support&quot;&gt;&lt;code&gt;metrics.precision_recall_fscore_support&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.precision_recall_fscore_support#sklearn.metrics.precision_recall_fscore_support&quot;&gt;&lt;code&gt;metrics.precision_recall_fscore_support&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="3ac7b3d81cf6dd1abe8ccf2904566a0bb03ee25e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.precision_recall_fscore_support#sklearn.metrics.precision_recall_fscore_support&quot;&gt;&lt;code&gt;precision_recall_fscore_support&lt;/code&gt;&lt;/a&gt;(y_true, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9985525d633c42e944a563170af01920c7bcd0ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.precision_recall_fscore_support#sklearn.metrics.precision_recall_fscore_support&quot;&gt;&lt;code&gt;precision_recall_fscore_support&lt;/code&gt;&lt;/a&gt;(y_true, y_pred)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.precision_recall_fscore_support#sklearn.metrics.precision_recall_fscore_support&quot;&gt; &lt;code&gt;precision_recall_fscore_support&lt;/code&gt; &lt;/a&gt; (y_true, y_pred)</target>
        </trans-unit>
        <trans-unit id="17cd7547019bd31bbcda1d7469edcf29704e9e26" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.precision_score#sklearn.metrics.precision_score&quot;&gt;&lt;code&gt;metrics.precision_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a8fb4fcc9ed93549a73c87b7422e37cea309ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.precision_score#sklearn.metrics.precision_score&quot;&gt;&lt;code&gt;metrics.precision_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.precision_score#sklearn.metrics.precision_score&quot;&gt; &lt;code&gt;metrics.precision_score&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [...])</target>
        </trans-unit>
        <trans-unit id="971718a02fe0cf6ec34496d544599a63747557cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.precision_score#sklearn.metrics.precision_score&quot;&gt;&lt;code&gt;precision_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, labels, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3601afdaf343d1911ddad9c52ec1a3e3d5832dae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.precision_score#sklearn.metrics.precision_score&quot;&gt;&lt;code&gt;precision_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, labels, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.precision_score#sklearn.metrics.precision_score&quot;&gt; &lt;code&gt;precision_score&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [, etiquetas,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="d51a3bf41a257cb70a18e91293d52f4b1fe0507e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.precisionrecalldisplay#sklearn.metrics.PrecisionRecallDisplay&quot;&gt;&lt;code&gt;metrics.PrecisionRecallDisplay&lt;/code&gt;&lt;/a&gt;(precision, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cf74f94b8a47fb010545c6e826235444f04acf7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.r2_score#sklearn.metrics.r2_score&quot;&gt;&lt;code&gt;metrics.r2_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61f68fea98c57127efba0e0bbd11175998310f39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.r2_score#sklearn.metrics.r2_score&quot;&gt;&lt;code&gt;metrics.r2_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.r2_score#sklearn.metrics.r2_score&quot;&gt; &lt;code&gt;metrics.r2_score&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [...])</target>
        </trans-unit>
        <trans-unit id="96f28e957b5cab116105e05ff87327dc60b2c1f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.recall_score#sklearn.metrics.recall_score&quot;&gt;&lt;code&gt;metrics.recall_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1012b134faf4510d6581f6f871d1ce33dd6d0e3a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.recall_score#sklearn.metrics.recall_score&quot;&gt;&lt;code&gt;metrics.recall_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.recall_score#sklearn.metrics.recall_score&quot;&gt; &lt;code&gt;metrics.recall_score&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [...])</target>
        </trans-unit>
        <trans-unit id="511b462e85581a569454c3256792d0eb2727ff9e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.recall_score#sklearn.metrics.recall_score&quot;&gt;&lt;code&gt;recall_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, labels, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03edf0ab3bc08a300860ac752381b74a70f28f65" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.recall_score#sklearn.metrics.recall_score&quot;&gt;&lt;code&gt;recall_score&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, labels, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.recall_score#sklearn.metrics.recall_score&quot;&gt; &lt;code&gt;recall_score&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [, labels,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="3b7ae1e213b14f2c17fed0999322caca8ce9f66d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.roc_auc_score#sklearn.metrics.roc_auc_score&quot;&gt;&lt;code&gt;metrics.roc_auc_score&lt;/code&gt;&lt;/a&gt;(y_true, y_score, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="054fb756965230a8694203880b072a83cfa1eacf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.roc_auc_score#sklearn.metrics.roc_auc_score&quot;&gt;&lt;code&gt;metrics.roc_auc_score&lt;/code&gt;&lt;/a&gt;(y_true, y_score[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.roc_auc_score#sklearn.metrics.roc_auc_score&quot;&gt; &lt;code&gt;metrics.roc_auc_score&lt;/code&gt; &lt;/a&gt; (y_true, y_score [...])</target>
        </trans-unit>
        <trans-unit id="d864869ca20f2384acf108f4aeb51f4a132fe292" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.roc_auc_score#sklearn.metrics.roc_auc_score&quot;&gt;&lt;code&gt;roc_auc_score&lt;/code&gt;&lt;/a&gt;(y_true, y_score, *[, average, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a61864a7909213497d8da3a36e2abf35fcf0a08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.roc_auc_score#sklearn.metrics.roc_auc_score&quot;&gt;&lt;code&gt;roc_auc_score&lt;/code&gt;&lt;/a&gt;(y_true, y_score[, average, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.roc_auc_score#sklearn.metrics.roc_auc_score&quot;&gt; &lt;code&gt;roc_auc_score&lt;/code&gt; &lt;/a&gt; (y_true, y_score [, promedio,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="ff11b7642453c97dcf999e6bf65adcb86a0924bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.roc_curve#sklearn.metrics.roc_curve&quot;&gt;&lt;code&gt;metrics.roc_curve&lt;/code&gt;&lt;/a&gt;(y_true, y_score, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="871803b28b7a5d5621c9449064931630b01aa09a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.roc_curve#sklearn.metrics.roc_curve&quot;&gt;&lt;code&gt;metrics.roc_curve&lt;/code&gt;&lt;/a&gt;(y_true, y_score[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.roc_curve#sklearn.metrics.roc_curve&quot;&gt; &lt;code&gt;metrics.roc_curve&lt;/code&gt; &lt;/a&gt; (y_true, y_score [...])</target>
        </trans-unit>
        <trans-unit id="7ea00ce55387e3722a2f3d517aedeb0442084df0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.roc_curve#sklearn.metrics.roc_curve&quot;&gt;&lt;code&gt;roc_curve&lt;/code&gt;&lt;/a&gt;(y_true, y_score, *[, pos_label, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b68259d68163fc35f4264aa268b3ca675e3ef80b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.roc_curve#sklearn.metrics.roc_curve&quot;&gt;&lt;code&gt;roc_curve&lt;/code&gt;&lt;/a&gt;(y_true, y_score[, pos_label, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.roc_curve#sklearn.metrics.roc_curve&quot;&gt; &lt;code&gt;roc_curve&lt;/code&gt; &lt;/a&gt; (y_verdadero, y_score [, pos_label,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="95007dc611604ad4a52cbcf7ddef72c887de8410" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.roccurvedisplay#sklearn.metrics.RocCurveDisplay&quot;&gt;&lt;code&gt;metrics.RocCurveDisplay&lt;/code&gt;&lt;/a&gt;(*, fpr, tpr[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81bdf8e1940272ecf3fdda569fba4dd1f8bca2cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.silhouette_samples#sklearn.metrics.silhouette_samples&quot;&gt;&lt;code&gt;metrics.silhouette_samples&lt;/code&gt;&lt;/a&gt;(X, labels, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="256c2ae5c11ff01401a23bbf0f53dcbb32799bc7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.silhouette_samples#sklearn.metrics.silhouette_samples&quot;&gt;&lt;code&gt;metrics.silhouette_samples&lt;/code&gt;&lt;/a&gt;(X, labels[, metric])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.silhouette_samples#sklearn.metrics.silhouette_samples&quot;&gt; &lt;code&gt;metrics.silhouette_samples&lt;/code&gt; &lt;/a&gt; (X, etiquetas [, m&amp;eacute;trica])</target>
        </trans-unit>
        <trans-unit id="c72c0dd9ff55454034b586c6c619cfcb815f476b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.silhouette_score#sklearn.metrics.silhouette_score&quot;&gt;&lt;code&gt;metrics.silhouette_score&lt;/code&gt;&lt;/a&gt;(X, labels, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab3e31f881de9b59a6cb93a7e1e057f9fa01dbb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.silhouette_score#sklearn.metrics.silhouette_score&quot;&gt;&lt;code&gt;metrics.silhouette_score&lt;/code&gt;&lt;/a&gt;(X, labels[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.silhouette_score#sklearn.metrics.silhouette_score&quot;&gt; &lt;code&gt;metrics.silhouette_score&lt;/code&gt; &lt;/a&gt; (X, etiquetas [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="176090b0e2a110aeb8d512c4319fb485889121fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.v_measure_score#sklearn.metrics.v_measure_score&quot;&gt;&lt;code&gt;metrics.v_measure_score&lt;/code&gt;&lt;/a&gt;(labels_true, &amp;hellip;[, beta])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="791361a2c951ebea1be4fe4f04c96ccf6006605e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.v_measure_score#sklearn.metrics.v_measure_score&quot;&gt;&lt;code&gt;metrics.v_measure_score&lt;/code&gt;&lt;/a&gt;(labels_true, labels_pred)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.v_measure_score#sklearn.metrics.v_measure_score&quot;&gt; &lt;code&gt;metrics.v_measure_score&lt;/code&gt; &lt;/a&gt; (labels_true, labels_pred)</target>
        </trans-unit>
        <trans-unit id="a2a20831223963ad6b577990bc0df333dc898a5e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.v_measure_score#sklearn.metrics.v_measure_score&quot;&gt;&lt;code&gt;v_measure_score&lt;/code&gt;&lt;/a&gt; is &lt;strong&gt;symmetric&lt;/strong&gt;: it can be used to evaluate the &lt;strong&gt;agreement&lt;/strong&gt; of two independent assignments on the same dataset.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.v_measure_score#sklearn.metrics.v_measure_score&quot;&gt; &lt;code&gt;v_measure_score&lt;/code&gt; &lt;/a&gt; es&lt;strong&gt; sim&amp;eacute;trico&lt;/strong&gt; : se puede utilizar para evaluar la&lt;strong&gt; concordancia&lt;/strong&gt; de dos asignaciones independientes en el mismo conjunto de datos.</target>
        </trans-unit>
        <trans-unit id="1a623f29d25cb9195b80be9d9db03be1aa0dbf62" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.zero_one_loss#sklearn.metrics.zero_one_loss&quot;&gt;&lt;code&gt;metrics.zero_one_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d11e5a02ea8f02b9c1b2d6a4808f855f7fdaca96" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.zero_one_loss#sklearn.metrics.zero_one_loss&quot;&gt;&lt;code&gt;metrics.zero_one_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.zero_one_loss#sklearn.metrics.zero_one_loss&quot;&gt; &lt;code&gt;metrics.zero_one_loss&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [...])</target>
        </trans-unit>
        <trans-unit id="ec909e2bc81e39383241d491228e0dc17350f44e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.zero_one_loss#sklearn.metrics.zero_one_loss&quot;&gt;&lt;code&gt;zero_one_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_pred, *[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7622fc184b380772f258797bb0af537a938c55e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.metrics.zero_one_loss#sklearn.metrics.zero_one_loss&quot;&gt;&lt;code&gt;zero_one_loss&lt;/code&gt;&lt;/a&gt;(y_true, y_pred[, normalize, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.metrics.zero_one_loss#sklearn.metrics.zero_one_loss&quot;&gt; &lt;code&gt;zero_one_loss&lt;/code&gt; &lt;/a&gt; (y_true, y_pred [, normalize,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="7a06c182531f677096fa7f0eb0d90e46d958ffdc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.mixture.bayesiangaussianmixture#sklearn.mixture.BayesianGaussianMixture&quot;&gt;&lt;code&gt;mixture.BayesianGaussianMixture&lt;/code&gt;&lt;/a&gt;(*[, &amp;hellip;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="330d0414c477271cf843e5d313deaca5d143e455" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.mixture.bayesiangaussianmixture#sklearn.mixture.BayesianGaussianMixture&quot;&gt;&lt;code&gt;mixture.BayesianGaussianMixture&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.mixture.bayesiangaussianmixture#sklearn.mixture.BayesianGaussianMixture&quot;&gt;&lt;code&gt;mixture.BayesianGaussianMixture&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="2a2adc8e9ac75966ece39eb5cc369d61af606544" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.mixture.gaussianmixture#sklearn.mixture.GaussianMixture&quot;&gt;&lt;code&gt;mixture.GaussianMixture&lt;/code&gt;&lt;/a&gt;([n_components, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.mixture.gaussianmixture#sklearn.mixture.GaussianMixture&quot;&gt; &lt;code&gt;mixture.GaussianMixture&lt;/code&gt; &lt;/a&gt; ([n_components, ...])</target>
        </trans-unit>
        <trans-unit id="f0a8d3a028d0afb4562f94b2767840e4809583c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.check_cv#sklearn.model_selection.check_cv&quot;&gt;&lt;code&gt;model_selection.check_cv&lt;/code&gt;&lt;/a&gt;([cv, y, classifier])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.check_cv#sklearn.model_selection.check_cv&quot;&gt; &lt;code&gt;model_selection.check_cv&lt;/code&gt; &lt;/a&gt; ([cv, y, clasificador])</target>
        </trans-unit>
        <trans-unit id="c04afbc03b466916ff6ee790aaba00db041895be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.cross_val_predict#sklearn.model_selection.cross_val_predict&quot;&gt;&lt;code&gt;model_selection.cross_val_predict&lt;/code&gt;&lt;/a&gt;(estimator, X)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.cross_val_predict#sklearn.model_selection.cross_val_predict&quot;&gt; &lt;code&gt;model_selection.cross_val_predict&lt;/code&gt; &lt;/a&gt; (estimador, X)</target>
        </trans-unit>
        <trans-unit id="dc8b4237b0e8b2e771b39a6a29ef9e3994bedf8d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.cross_val_score#sklearn.model_selection.cross_val_score&quot;&gt;&lt;code&gt;model_selection.cross_val_score&lt;/code&gt;&lt;/a&gt;(estimator, X)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.cross_val_score#sklearn.model_selection.cross_val_score&quot;&gt; &lt;code&gt;model_selection.cross_val_score&lt;/code&gt; &lt;/a&gt; (estimador, X)</target>
        </trans-unit>
        <trans-unit id="15da6fb2306caab2f9c7c47f8e1f82b53b6440d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.cross_validate#sklearn.model_selection.cross_validate&quot;&gt;&lt;code&gt;model_selection.cross_validate&lt;/code&gt;&lt;/a&gt;(estimator, X)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.cross_validate#sklearn.model_selection.cross_validate&quot;&gt; &lt;code&gt;model_selection.cross_validate&lt;/code&gt; &lt;/a&gt; (estimador, X)</target>
        </trans-unit>
        <trans-unit id="14807d3070569abb986dbd0966ec00b0d0edf4ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.fit_grid_point#sklearn.model_selection.fit_grid_point&quot;&gt;&lt;code&gt;model_selection.fit_grid_point&lt;/code&gt;&lt;/a&gt;(X, y, &amp;hellip;[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.fit_grid_point#sklearn.model_selection.fit_grid_point&quot;&gt; &lt;code&gt;model_selection.fit_grid_point&lt;/code&gt; &lt;/a&gt; (X, y,&amp;hellip; [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="322f4c41be7a5bdc4d702ed380ca043ee11ee17c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.gridsearchcv#sklearn.model_selection.GridSearchCV&quot;&gt;&lt;code&gt;GridSearchCV&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.model_selection.randomizedsearchcv#sklearn.model_selection.RandomizedSearchCV&quot;&gt;&lt;code&gt;RandomizedSearchCV&lt;/code&gt;&lt;/a&gt; allow searching over parameters of composite or nested estimators such as &lt;a href=&quot;generated/sklearn.pipeline.pipeline#sklearn.pipeline.Pipeline&quot;&gt;&lt;code&gt;Pipeline&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/sklearn.compose.columntransformer#sklearn.compose.ColumnTransformer&quot;&gt;&lt;code&gt;ColumnTransformer&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/sklearn.ensemble.votingclassifier#sklearn.ensemble.VotingClassifier&quot;&gt;&lt;code&gt;VotingClassifier&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;generated/sklearn.calibration.calibratedclassifiercv#sklearn.calibration.CalibratedClassifierCV&quot;&gt;&lt;code&gt;CalibratedClassifierCV&lt;/code&gt;&lt;/a&gt; using a dedicated &lt;code&gt;&amp;lt;estimator&amp;gt;__&amp;lt;parameter&amp;gt;&lt;/code&gt; syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="183d83ae83b45906f3b5f33f65ceac4bc22a0379" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.gridsearchcv#sklearn.model_selection.GridSearchCV&quot;&gt;&lt;code&gt;GridSearchCV&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.model_selection.randomizedsearchcv#sklearn.model_selection.RandomizedSearchCV&quot;&gt;&lt;code&gt;RandomizedSearchCV&lt;/code&gt;&lt;/a&gt; evaluate each parameter setting independently. Computations can be run in parallel if your OS supports it, by using the keyword &lt;code&gt;n_jobs=-1&lt;/code&gt;. See function signature for more details.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.gridsearchcv#sklearn.model_selection.GridSearchCV&quot;&gt; &lt;code&gt;GridSearchCV&lt;/code&gt; &lt;/a&gt; y&lt;a href=&quot;generated/sklearn.model_selection.randomizedsearchcv#sklearn.model_selection.RandomizedSearchCV&quot;&gt; &lt;code&gt;RandomizedSearchCV&lt;/code&gt; &lt;/a&gt; eval&amp;uacute;an la configuraci&amp;oacute;n de cada par&amp;aacute;metro de forma independiente. Los c&amp;aacute;lculos se pueden ejecutar en paralelo si su sistema operativo lo admite, utilizando la palabra clave &lt;code&gt;n_jobs=-1&lt;/code&gt; . Consulte la firma de la funci&amp;oacute;n para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="cd7cf2e763018321ac20801d9fe922740cae452c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.gridsearchcv#sklearn.model_selection.GridSearchCV&quot;&gt;&lt;code&gt;model_selection.GridSearchCV&lt;/code&gt;&lt;/a&gt;(estimator, &amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.gridsearchcv#sklearn.model_selection.GridSearchCV&quot;&gt; &lt;code&gt;model_selection.GridSearchCV&lt;/code&gt; &lt;/a&gt; (estimador,&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="3b97527ba72207f0586c0829ce4406e10bf02b3a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.groupkfold#sklearn.model_selection.GroupKFold&quot;&gt;&lt;code&gt;GroupKFold&lt;/code&gt;&lt;/a&gt; is a variation of k-fold which ensures that the same group is not represented in both testing and training sets. For example if the data is obtained from different subjects with several samples per-subject and if the model is flexible enough to learn from highly person specific features it could fail to generalize to new subjects. &lt;a href=&quot;generated/sklearn.model_selection.groupkfold#sklearn.model_selection.GroupKFold&quot;&gt;&lt;code&gt;GroupKFold&lt;/code&gt;&lt;/a&gt; makes it possible to detect this kind of overfitting situations.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.groupkfold#sklearn.model_selection.GroupKFold&quot;&gt; &lt;code&gt;GroupKFold&lt;/code&gt; &lt;/a&gt; es una variaci&amp;oacute;n de k-fold que asegura que el mismo grupo no est&amp;eacute; representado en los conjuntos de prueba y entrenamiento. Por ejemplo, si los datos se obtienen de diferentes sujetos con varias muestras por sujeto y si el modelo es lo suficientemente flexible como para aprender de caracter&amp;iacute;sticas altamente espec&amp;iacute;ficas de la persona, podr&amp;iacute;a fallar en generalizar a nuevos sujetos. &lt;a href=&quot;generated/sklearn.model_selection.groupkfold#sklearn.model_selection.GroupKFold&quot;&gt; &lt;code&gt;GroupKFold&lt;/code&gt; &lt;/a&gt; permite detectar este tipo de situaciones de sobreajuste.</target>
        </trans-unit>
        <trans-unit id="2cf78bd298d83802ec0868a0320da79e345e1c3b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.groupkfold#sklearn.model_selection.GroupKFold&quot;&gt;&lt;code&gt;model_selection.GroupKFold&lt;/code&gt;&lt;/a&gt;([n_splits])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.groupkfold#sklearn.model_selection.GroupKFold&quot;&gt;&lt;code&gt;model_selection.GroupKFold&lt;/code&gt;&lt;/a&gt;([n_splits])</target>
        </trans-unit>
        <trans-unit id="75b94d74125119734988e4587691c8368ab4d68c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.groupshufflesplit#sklearn.model_selection.GroupShuffleSplit&quot;&gt;&lt;code&gt;model_selection.GroupShuffleSplit&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.groupshufflesplit#sklearn.model_selection.GroupShuffleSplit&quot;&gt;&lt;code&gt;model_selection.GroupShuffleSplit&lt;/code&gt;&lt;/a&gt;([&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="5d525c53c96fc601b1814435bc8dd2a1e815e8f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.kfold#sklearn.model_selection.KFold&quot;&gt;&lt;code&gt;KFold&lt;/code&gt;&lt;/a&gt; divides all the samples in \(k\) groups of samples, called folds (if \(k = n\), this is equivalent to the &lt;em&gt;Leave One Out&lt;/em&gt; strategy), of equal sizes (if possible). The prediction function is learned using \(k - 1\) folds, and the fold left out is used for test.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.kfold#sklearn.model_selection.KFold&quot;&gt; &lt;code&gt;KFold&lt;/code&gt; &lt;/a&gt; divide todas las muestras en \ (k \) grupos de muestras, llamados pliegues (si \ (k = n \), esto es equivalente a laestrategia&lt;em&gt; Leave One Out&lt;/em&gt; ), de igual tama&amp;ntilde;o (si es posible). La funci&amp;oacute;n de predicci&amp;oacute;n se aprende usando \ (k - 1 \) pliegues, y el pliegue que queda fuera se usa para la prueba.</target>
        </trans-unit>
        <trans-unit id="9c318541f7809097db03cc2c4c929e1e69690416" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.kfold#sklearn.model_selection.KFold&quot;&gt;&lt;code&gt;model_selection.KFold&lt;/code&gt;&lt;/a&gt;([n_splits, shuffle, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.kfold#sklearn.model_selection.KFold&quot;&gt; &lt;code&gt;model_selection.KFold&lt;/code&gt; &lt;/a&gt; ([n_splits, shuffle,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="fe9c7435f66828942d1d484122d7d0d3691db469" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.learning_curve#sklearn.model_selection.learning_curve&quot;&gt;&lt;code&gt;model_selection.learning_curve&lt;/code&gt;&lt;/a&gt;(estimator, X, &amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d37125d9b9f5d015b083786c1ac208fb257f026" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.learning_curve#sklearn.model_selection.learning_curve&quot;&gt;&lt;code&gt;model_selection.learning_curve&lt;/code&gt;&lt;/a&gt;(estimator, X, y)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.learning_curve#sklearn.model_selection.learning_curve&quot;&gt; &lt;code&gt;model_selection.learning_curve&lt;/code&gt; &lt;/a&gt; (estimador, X, y)</target>
        </trans-unit>
        <trans-unit id="306f754cc8eb54da216588bd1c9a296c11f39228" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.leaveonegroupout#sklearn.model_selection.LeaveOneGroupOut&quot;&gt;&lt;code&gt;LeaveOneGroupOut&lt;/code&gt;&lt;/a&gt; is a cross-validation scheme which holds out the samples according to a third-party provided array of integer groups. This group information can be used to encode arbitrary domain specific pre-defined cross-validation folds.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.leaveonegroupout#sklearn.model_selection.LeaveOneGroupOut&quot;&gt; &lt;code&gt;LeaveOneGroupOut&lt;/code&gt; &lt;/a&gt; es un esquema de validaci&amp;oacute;n cruzada que mantiene las muestras de acuerdo con una matriz de grupos de enteros proporcionada por un tercero. Esta informaci&amp;oacute;n de grupo se puede utilizar para codificar pliegues de validaci&amp;oacute;n cruzada predefinidos espec&amp;iacute;ficos de dominio arbitrario.</target>
        </trans-unit>
        <trans-unit id="1ade3102d5b46283b770a43651835b77303de35f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.leaveonegroupout#sklearn.model_selection.LeaveOneGroupOut&quot;&gt;&lt;code&gt;model_selection.LeaveOneGroupOut&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.leaveonegroupout#sklearn.model_selection.LeaveOneGroupOut&quot;&gt;&lt;code&gt;model_selection.LeaveOneGroupOut&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="1bc4a694b4724b5766d84c78fc02897e31629ac5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.leaveoneout#sklearn.model_selection.LeaveOneOut&quot;&gt;&lt;code&gt;LeaveOneOut&lt;/code&gt;&lt;/a&gt; (or LOO) is a simple cross-validation. Each learning set is created by taking all the samples except one, the test set being the sample left out. Thus, for \(n\) samples, we have \(n\) different training sets and \(n\) different tests set. This cross-validation procedure does not waste much data as only one sample is removed from the training set:</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.leaveoneout#sklearn.model_selection.LeaveOneOut&quot;&gt; &lt;code&gt;LeaveOneOut&lt;/code&gt; &lt;/a&gt; (o LOO) es una simple validaci&amp;oacute;n cruzada. Cada conjunto de aprendizaje se crea tomando todas las muestras excepto una, siendo el conjunto de prueba la muestra omitida. Por lo tanto, para \ (n \) muestras, tenemos \ (n \) conjuntos de entrenamiento diferentes y \ (n \) conjuntos de pruebas diferentes. Este procedimiento de validaci&amp;oacute;n cruzada no desperdicia muchos datos ya que solo se elimina una muestra del conjunto de entrenamiento:</target>
        </trans-unit>
        <trans-unit id="6dc43efe437de7e280c4dc95ec8aa58db9a130fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.leaveoneout#sklearn.model_selection.LeaveOneOut&quot;&gt;&lt;code&gt;model_selection.LeaveOneOut&lt;/code&gt;&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.leaveoneout#sklearn.model_selection.LeaveOneOut&quot;&gt;&lt;code&gt;model_selection.LeaveOneOut&lt;/code&gt;&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="6be1d6b6d07331d34ea841bdfb01ba937bd10897" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.leavepgroupsout#sklearn.model_selection.LeavePGroupsOut&quot;&gt;&lt;code&gt;LeavePGroupsOut&lt;/code&gt;&lt;/a&gt; is similar as &lt;a href=&quot;generated/sklearn.model_selection.leaveonegroupout#sklearn.model_selection.LeaveOneGroupOut&quot;&gt;&lt;code&gt;LeaveOneGroupOut&lt;/code&gt;&lt;/a&gt;, but removes samples related to \(P\) groups for each training/test set.</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.leavepgroupsout#sklearn.model_selection.LeavePGroupsOut&quot;&gt; &lt;code&gt;LeavePGroupsOut&lt;/code&gt; &lt;/a&gt; es similar a&lt;a href=&quot;generated/sklearn.model_selection.leaveonegroupout#sklearn.model_selection.LeaveOneGroupOut&quot;&gt; &lt;code&gt;LeaveOneGroupOut&lt;/code&gt; &lt;/a&gt; , pero elimina las muestras relacionadas con los grupos \ (P \) para cada conjunto de entrenamiento / prueba.</target>
        </trans-unit>
        <trans-unit id="316c020c7acc565e8c2e63d46353618fc0fcbf03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.leavepgroupsout#sklearn.model_selection.LeavePGroupsOut&quot;&gt;&lt;code&gt;model_selection.LeavePGroupsOut&lt;/code&gt;&lt;/a&gt;(n_groups)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.leavepgroupsout#sklearn.model_selection.LeavePGroupsOut&quot;&gt;&lt;code&gt;model_selection.LeavePGroupsOut&lt;/code&gt;&lt;/a&gt;(n_groups)</target>
        </trans-unit>
        <trans-unit id="866b3d39c95ea4724371fa9b770e5f79f89afbbd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.leavepout#sklearn.model_selection.LeavePOut&quot;&gt;&lt;code&gt;LeavePOut&lt;/code&gt;&lt;/a&gt; is very similar to &lt;a href=&quot;generated/sklearn.model_selection.leaveoneout#sklearn.model_selection.LeaveOneOut&quot;&gt;&lt;code&gt;LeaveOneOut&lt;/code&gt;&lt;/a&gt; as it creates all the possible training/test sets by removing \(p\) samples from the complete set. For \(n\) samples, this produces \({n \choose p}\) train-test pairs. Unlike &lt;a href=&quot;generated/sklearn.model_selection.leaveoneout#sklearn.model_selection.LeaveOneOut&quot;&gt;&lt;code&gt;LeaveOneOut&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.model_selection.kfold#sklearn.model_selection.KFold&quot;&gt;&lt;code&gt;KFold&lt;/code&gt;&lt;/a&gt;, the test sets will overlap for \(p &amp;gt; 1\).</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.leavepout#sklearn.model_selection.LeavePOut&quot;&gt; &lt;code&gt;LeavePOut&lt;/code&gt; &lt;/a&gt; es muy similar a&lt;a href=&quot;generated/sklearn.model_selection.leaveoneout#sklearn.model_selection.LeaveOneOut&quot;&gt; &lt;code&gt;LeaveOneOut&lt;/code&gt; &lt;/a&gt; ya que crea todos los conjuntos de entrenamiento / prueba posibles eliminando \ (p \) muestras del conjunto completo. Para \ (n \) muestras, esto produce \ ({n \ elija p} \) pares de tren-prueba. A diferencia de&lt;a href=&quot;generated/sklearn.model_selection.leaveoneout#sklearn.model_selection.LeaveOneOut&quot;&gt; &lt;code&gt;LeaveOneOut&lt;/code&gt; &lt;/a&gt; y&lt;a href=&quot;generated/sklearn.model_selection.kfold#sklearn.model_selection.KFold&quot;&gt; &lt;code&gt;KFold&lt;/code&gt; &lt;/a&gt; , los conjuntos de prueba se superpondr&amp;aacute;n para \ (p&amp;gt; 1 \).</target>
        </trans-unit>
        <trans-unit id="b0d09c866378cad32de3d3081d7ff25e71c44d30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.leavepout#sklearn.model_selection.LeavePOut&quot;&gt;&lt;code&gt;model_selection.LeavePOut&lt;/code&gt;&lt;/a&gt;(p)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.leavepout#sklearn.model_selection.LeavePOut&quot;&gt;&lt;code&gt;model_selection.LeavePOut&lt;/code&gt;&lt;/a&gt;(p)</target>
        </trans-unit>
        <trans-unit id="41aaab95cc47ec6eeb4b703393fddc68f271fc9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.parametergrid#sklearn.model_selection.ParameterGrid&quot;&gt;&lt;code&gt;model_selection.ParameterGrid&lt;/code&gt;&lt;/a&gt;(param_grid)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.parametergrid#sklearn.model_selection.ParameterGrid&quot;&gt;&lt;code&gt;model_selection.ParameterGrid&lt;/code&gt;&lt;/a&gt;(param_grid)</target>
        </trans-unit>
        <trans-unit id="2c49665ea93c6bccf110b0d876c9b51d1421c6b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.parametersampler#sklearn.model_selection.ParameterSampler&quot;&gt;&lt;code&gt;model_selection.ParameterSampler&lt;/code&gt;&lt;/a&gt;(&amp;hellip;[, &amp;hellip;])</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.parametersampler#sklearn.model_selection.ParameterSampler&quot;&gt; &lt;code&gt;model_selection.ParameterSampler&lt;/code&gt; &lt;/a&gt; (&amp;hellip; [,&amp;hellip;])</target>
        </trans-unit>
        <trans-unit id="29149d5ab3bb9c611a4bc26e308c80a0c07267f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.permutation_test_score#sklearn.model_selection.permutation_test_score&quot;&gt;&lt;code&gt;model_selection.permutation_test_score&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.permutation_test_score#sklearn.model_selection.permutation_test_score&quot;&gt;&lt;code&gt;model_selection.permutation_test_score&lt;/code&gt;&lt;/a&gt;(&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="e03f22b8ad3f4876b45b4304be636b7057801329" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;generated/sklearn.model_selection.predefinedsplit#sklearn.model_selection.PredefinedSplit&quot;&gt;&lt;code&gt;model_selection.PredefinedSplit&lt;/code&gt;&lt;/a&gt;(test_fold)</source>
          <target state="translated">&lt;a href=&quot;generated/sklearn.model_selection.predefinedsplit#sklearn.model_selection.PredefinedSplit&quot;&gt;&lt;code&gt;model_selection.PredefinedSplit&lt;/code&gt;&lt;/a&gt;(test_fold)</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
