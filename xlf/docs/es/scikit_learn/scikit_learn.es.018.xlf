<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="scikit_learn">
    <body>
      <group id="scikit_learn">
        <trans-unit id="0cb878c6eb08bc32d947d6ddc4baaa42377cefd9" translate="yes" xml:space="preserve">
          <source>[VVZ2010]</source>
          <target state="translated">[VVZ2010]</target>
        </trans-unit>
        <trans-unit id="3db6db2379703ce194c034f1bb123b847f702832" translate="yes" xml:space="preserve">
          <source>[VZ2010]</source>
          <target state="translated">[VZ2010]</target>
        </trans-unit>
        <trans-unit id="70b15e6dab0cb6917fd158eac29a9ddf08fcef21" translate="yes" xml:space="preserve">
          <source>[YAT2016] Yang, Algesheimer, and Tessone, (2016). &amp;ldquo;A comparative analysis of community detection algorithms on artificial networks&amp;rdquo;. Scientific Reports 6: 30750. &lt;a href=&quot;https://www.nature.com/articles/srep30750&quot;&gt;doi:10.1038/srep30750&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="652e235b7dc2f3d75c7f909152b3819c6c97a6ec" translate="yes" xml:space="preserve">
          <source>[Yates2011]</source>
          <target state="translated">[Yates2011]</target>
        </trans-unit>
        <trans-unit id="e3b9ec6790a1b2a9d7bcca67037f67b282ccc4ee" translate="yes" xml:space="preserve">
          <source>[ZZRH2009]</source>
          <target state="translated">[ZZRH2009]</target>
        </trans-unit>
        <trans-unit id="96b76160e0ad993ba5f0d18a67c96f386933b35a" translate="yes" xml:space="preserve">
          <source>[[1, x_1, x_1 ** 2, x_1 ** 3, &amp;hellip;],</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eab98aedd6e4787cc1b6ed7c5288a5a2279237c" translate="yes" xml:space="preserve">
          <source>[callable] : a user-defined function which accepts an array of distances, and returns an array of the same shape containing the weights.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b622702bcf4592f09f68d731f0a4b9f486da53eb" translate="yes" xml:space="preserve">
          <source>[n_samples_a, n_features] otherwise Array of pairwise distances between samples, or a feature array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="361169bda90a02e4e54f39ff838115b39a75d83d" translate="yes" xml:space="preserve">
          <source>[wk]</source>
          <target state="translated">[wk]</target>
        </trans-unit>
        <trans-unit id="cade30b6baa03b8bc431f6cb3586bc5b1d642a6f" translate="yes" xml:space="preserve">
          <source>\(C\) is used to set the amount of regularization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad93e4d23ea1b4d81a2b3f3c3d29dff7d49b5d27" translate="yes" xml:space="preserve">
          <source>\(D\) : input dimension</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a32e93d880aaba8a860e59edd1cb39f288e59537" translate="yes" xml:space="preserve">
          <source>\(F1 = 2\frac{P \times R}{P+R}\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e8b3587e80a2131c2360cdeb81572614017e523" translate="yes" xml:space="preserve">
          <source>\(F_\beta(A, B) := \left(1 + \beta^2\right) \frac{P(A, B) \times R(A, B)}{\beta^2 P(A, B) + R(A, B)}\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a350d9475f7eafeffa8a9835bca28d431bee93e" translate="yes" xml:space="preserve">
          <source>\(F_\beta(y, \hat{y})\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09eb5f139bd0c207766706ffe3b5d171a556d4ec" translate="yes" xml:space="preserve">
          <source>\(K(x; h) \propto 1 - \frac{x^2}{h^2}\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95dfc8e81899d8cb940cb0df0bfaa1052ffb36d2" translate="yes" xml:space="preserve">
          <source>\(K(x; h) \propto 1 - x/h\) if \(x &amp;lt; h\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a910118bdbf495d82747952ba6971367b93dfac" translate="yes" xml:space="preserve">
          <source>\(K(x; h) \propto 1\) if \(x &amp;lt; h\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b298d5bd2fdf7182db10bf076925db3745527a8" translate="yes" xml:space="preserve">
          <source>\(K(x; h) \propto \cos(\frac{\pi x}{2h})\) if \(x &amp;lt; h\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4443829e2c48ab72daedb9b74f9dc8debc9681a" translate="yes" xml:space="preserve">
          <source>\(K(x; h) \propto \exp(- \frac{x^2}{2h^2} )\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c70853c06adf6986de8dcbc5a8f801fc0502ae1b" translate="yes" xml:space="preserve">
          <source>\(K(x; h) \propto \exp(-x/h)\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d9776eac061dd7f197e8155c6784a047082de92" translate="yes" xml:space="preserve">
          <source>\(L\) the set of labels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0f78908f9cef66c5c39e39b004aba794a24d223" translate="yes" xml:space="preserve">
          <source>\(N\) : number of training data points</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85d811223bbd2564d928a5184adabae9693a9903" translate="yes" xml:space="preserve">
          <source>\(P = \frac{T_p}{T_p+F_p}\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c7b5d8ee367861eab9617a9df8debede099fe4a" translate="yes" xml:space="preserve">
          <source>\(P(A, B) := \frac{\left| A \cap B \right|}{\left|A\right|}\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c180cdb6205e02ec243b8a0c392cb71991d0a3d0" translate="yes" xml:space="preserve">
          <source>\(P(y, \hat{y})\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c753c8fc287915fbc16c3d512099716031e38eb4" translate="yes" xml:space="preserve">
          <source>\(R = \frac{T_p}{T_p + F_n}\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d1e6161821a7c78dd1e8cc86ac7329f67bfcf0c" translate="yes" xml:space="preserve">
          <source>\(R(A, B) := \frac{\left| A \cap B \right|}{\left|B\right|}\) (Conventions vary on handling \(B = \emptyset\); this implementation uses \(R(A, B):=0\), and similar for \(P\).)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76e12b53dc747a452508648de37b3bbf1292886a" translate="yes" xml:space="preserve">
          <source>\(R(y, \hat{y})\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe30e7d28d145393d116de8ccfdb95f1930cc647" translate="yes" xml:space="preserve">
          <source>\(S\) the set of samples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d975b6c5632f1c81d6cf8cc9f674c8e0d143548" translate="yes" xml:space="preserve">
          <source>\(X\): data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59b5b0f07758a431bbb7dbf6ebe63bc98b0cd7dd" translate="yes" xml:space="preserve">
          <source>\(\Omega\) is a &lt;code&gt;penalty&lt;/code&gt; function of our model parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d82693345c0acee22512b8f82f5807d2eafe4d72" translate="yes" xml:space="preserve">
          <source>\(\Psi = \mathrm{diag}(\psi_1, \psi_2, \dots, \psi_n)\): This model is called &lt;a href=&quot;generated/sklearn.decomposition.factoranalysis#sklearn.decomposition.FactorAnalysis&quot;&gt;&lt;code&gt;FactorAnalysis&lt;/code&gt;&lt;/a&gt;, a classical statistical model. The matrix W is sometimes called the &amp;ldquo;factor loading matrix&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbd9ea497a59df8b22d9aee98766b15298f6f7b0" translate="yes" xml:space="preserve">
          <source>\(\Psi = \sigma^2 \mathbf{I}\): This assumption leads to the probabilistic model of &lt;a href=&quot;generated/sklearn.decomposition.pca#sklearn.decomposition.PCA&quot;&gt;&lt;code&gt;PCA&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f8f0e3a7f60922aad934db70b43f4626579a4f" translate="yes" xml:space="preserve">
          <source>\(\alpha^{0}_{0,1}\)</source>
          <target state="translated">\(\alpha^{0}_{0,1}\)</target>
        </trans-unit>
        <trans-unit id="51f4c7f6d4e230692f7f7ca95d3a951f2ccb6900" translate="yes" xml:space="preserve">
          <source>\(\alpha^{0}_{0,2}\)</source>
          <target state="translated">\(\alpha^{0}_{0,2}\)</target>
        </trans-unit>
        <trans-unit id="fc59eea930c0650810949c61616237e10d7608e7" translate="yes" xml:space="preserve">
          <source>\(\alpha^{0}_{1,0}\)</source>
          <target state="translated">\(\alpha^{0}_{1,0}\)</target>
        </trans-unit>
        <trans-unit id="b7a1987ec2f1ae255445b9203ba76dab46f8180e" translate="yes" xml:space="preserve">
          <source>\(\alpha^{0}_{1,2}\)</source>
          <target state="translated">\(\alpha^{0}_{1,2}\)</target>
        </trans-unit>
        <trans-unit id="ddda7bd4dda2cccb6220d08cd96b97d2564703fc" translate="yes" xml:space="preserve">
          <source>\(\alpha^{0}_{2,0}\)</source>
          <target state="translated">\(\alpha^{0}_{2,0}\)</target>
        </trans-unit>
        <trans-unit id="cd76d3a6ac27cf4608fdba8c1bcefea98e40a082" translate="yes" xml:space="preserve">
          <source>\(\alpha^{0}_{2,1}\)</source>
          <target state="translated">\(\alpha^{0}_{2,1}\)</target>
        </trans-unit>
        <trans-unit id="670a0c506ecd80ad22241edc90899b4ca5a65063" translate="yes" xml:space="preserve">
          <source>\(\alpha^{1}_{0,1}\)</source>
          <target state="translated">\(\alpha^{1}_{0,1}\)</target>
        </trans-unit>
        <trans-unit id="715b85177f34a3aec41f1d6aca5ea943c045452d" translate="yes" xml:space="preserve">
          <source>\(\alpha^{1}_{0,2}\)</source>
          <target state="translated">\(\alpha^{1}_{0,2}\)</target>
        </trans-unit>
        <trans-unit id="9bafd2e8e2343917301e41ef344db246b60c40d3" translate="yes" xml:space="preserve">
          <source>\(\alpha^{1}_{1,0}\)</source>
          <target state="translated">\(\alpha^{1}_{1,0}\)</target>
        </trans-unit>
        <trans-unit id="bd6409137f75a05bb280bc5000840c3e16f9d850" translate="yes" xml:space="preserve">
          <source>\(\alpha^{1}_{1,2}\)</source>
          <target state="translated">\(\alpha^{1}_{1,2}\)</target>
        </trans-unit>
        <trans-unit id="e31f66e6ca63dbde84a383e5d61ebb97f39d2fa6" translate="yes" xml:space="preserve">
          <source>\(\alpha^{1}_{2,0}\)</source>
          <target state="translated">\(\alpha^{1}_{2,0}\)</target>
        </trans-unit>
        <trans-unit id="603e33877eb24d9878fa7efb61a9c926fb80dd71" translate="yes" xml:space="preserve">
          <source>\(\alpha^{1}_{2,1}\)</source>
          <target state="translated">\(\alpha^{1}_{2,1}\)</target>
        </trans-unit>
        <trans-unit id="9ffe8c9fb6dee2771ab0ca39575e1df479c8a1ca" translate="yes" xml:space="preserve">
          <source>\(\alpha^{2}_{0,1}\)</source>
          <target state="translated">\(\alpha^{2}_{0,1}\)</target>
        </trans-unit>
        <trans-unit id="7f0fc3efbc7900034a8626635972b65d78e7a257" translate="yes" xml:space="preserve">
          <source>\(\alpha^{2}_{0,2}\)</source>
          <target state="translated">\(\alpha^{2}_{0,2}\)</target>
        </trans-unit>
        <trans-unit id="69166f5380836f7b04cceea34acce5263efbceff" translate="yes" xml:space="preserve">
          <source>\(\beta\): Coefficients</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fec074bbf7d22c3b3d841bc5e89270a0a2f32779" translate="yes" xml:space="preserve">
          <source>\(\epsilon\): Observation noise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08cc56772d86f4dfece03ec8003aba4f776d2aab" translate="yes" xml:space="preserve">
          <source>\(\frac{1}{\left|L\right|} \sum_{l \in L} F_\beta(y_l, \hat{y}_l)\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c4693b66d3ba7a40d8a9abfe000616818f55aaf" translate="yes" xml:space="preserve">
          <source>\(\frac{1}{\left|L\right|} \sum_{l \in L} P(y_l, \hat{y}_l)\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52e6ce52e9b8ae2877c124e769de40084f5638d9" translate="yes" xml:space="preserve">
          <source>\(\frac{1}{\left|L\right|} \sum_{l \in L} R(y_l, \hat{y}_l)\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f2d1bc16a43e60170cc4d3e4429f1eaefb3b9b2" translate="yes" xml:space="preserve">
          <source>\(\frac{1}{\left|S\right|} \sum_{s \in S} F_\beta(y_s, \hat{y}_s)\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="301209259a59426be923af21027651f698a1adbb" translate="yes" xml:space="preserve">
          <source>\(\frac{1}{\left|S\right|} \sum_{s \in S} P(y_s, \hat{y}_s)\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76d3b6c7bb7266c85c29df970c85d63d00762934" translate="yes" xml:space="preserve">
          <source>\(\frac{1}{\left|S\right|} \sum_{s \in S} R(y_s, \hat{y}_s)\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="771a76dcfeccc7d1c5c81729270313804a1579cd" translate="yes" xml:space="preserve">
          <source>\(\frac{1}{\sum_{l \in L} \left|\hat{y}_l\right|} \sum_{l \in L} \left|\hat{y}_l\right| F_\beta(y_l, \hat{y}_l)\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c17ed8e7ab856a74c9c5ce2466ffe22f7bfd45b" translate="yes" xml:space="preserve">
          <source>\(\frac{1}{\sum_{l \in L} \left|\hat{y}_l\right|} \sum_{l \in L} \left|\hat{y}_l\right| P(y_l, \hat{y}_l)\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="084995f248284e6186e09f61b6402476e717eb20" translate="yes" xml:space="preserve">
          <source>\(\frac{1}{\sum_{l \in L} \left|\hat{y}_l\right|} \sum_{l \in L} \left|\hat{y}_l\right| R(y_l, \hat{y}_l)\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e89e30113ce1a3053ff34b9257e3d282abe2f88" translate="yes" xml:space="preserve">
          <source>\(\frac{[3, 0, 1.8473]}{\sqrt{\big(3^2 + 0^2 + 1.8473^2\big)}} = [0.8515, 0, 0.5243]\):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="673551b6d125b3cd94d7674f49f994c6afdd6f65" translate="yes" xml:space="preserve">
          <source>\(\frac{[3, 0, 2.0986]}{\sqrt{\big(3^2 + 0^2 + 2.0986^2\big)}} = [ 0.819, 0, 0.573].\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a5082b9d05f10e66dae95fed7849c72d0a8cfc1" translate="yes" xml:space="preserve">
          <source>\(\gamma\) is known as slope</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="126898e7757cd77e4cefb87e42f683763bf54571" translate="yes" xml:space="preserve">
          <source>\(\hat{y}\) the set of &lt;em&gt;true&lt;/em&gt;\((sample, label)\) pairs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f39f60cd1f2428420af5f2dec2780245432c521" translate="yes" xml:space="preserve">
          <source>\(\langle F_\beta(y_l, \hat{y}_l) | l \in L \rangle\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3dc3b8f8243a37f6cfc63694bfee10bbc8dbb16" translate="yes" xml:space="preserve">
          <source>\(\langle P(y_l, \hat{y}_l) | l \in L \rangle\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c6337bdf58558dfa45a337181a8da415d8b489c" translate="yes" xml:space="preserve">
          <source>\(\langle R(y_l, \hat{y}_l) | l \in L \rangle\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="825ca6208fb0c99a89fb31d3479b162477b3c1b6" translate="yes" xml:space="preserve">
          <source>\(\mathcal{L}\) is a &lt;code&gt;loss&lt;/code&gt; function of our samples and our model parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a02f90f2b2001d6562373a7ae2a2e1dfb4565e2" translate="yes" xml:space="preserve">
          <source>\(\text{AP} = \sum_n (R_n - R_{n-1}) P_n\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db505c609ecce8b6164765bd7848f3b41ea35f0d" translate="yes" xml:space="preserve">
          <source>\(\text{df}(d, t)_{\text{term1}} = 6\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3761c41a5e61f125696abaab3d6ab5e6c9467a9a" translate="yes" xml:space="preserve">
          <source>\(\text{idf}(d, t)_{\text{term1}} = log \frac{n_d}{\text{df}(d, t)} + 1 = log(1)+1 = 1\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="418ed87bb3a9ff83d64cef6c0afed152e2ce9063" translate="yes" xml:space="preserve">
          <source>\(\text{idf}(t) = log{\frac{1 + n_d}{1+\text{df}(d,t)}} + 1\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbf2fa82ddd1456d42b5d1023dd8e97cfb8e3a89" translate="yes" xml:space="preserve">
          <source>\(\text{idf}(t) = log{\frac{1 + n_d}{1+\text{df}(d,t)}} + 1\),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b7b756caf347e71181dfa1202016ab8356f261a" translate="yes" xml:space="preserve">
          <source>\(\text{idf}(t) = log{\frac{n_d}{1+\text{df}(d,t)}}.\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4034a1550b8c7d630dbd8eba4c06d1a4f1d30dc5" translate="yes" xml:space="preserve">
          <source>\(\text{idf}(t) = log{\frac{n_d}{\text{df}(d,t)}} + 1\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f18c6689111b29d4354e7fffcee7cc0802b481a5" translate="yes" xml:space="preserve">
          <source>\(\text{tf-idf}_{\text{raw}} = [3, 0, 2.0986].\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80aba8c317a078e4609ae8bd36660d65edad7083" translate="yes" xml:space="preserve">
          <source>\(\text{tf-idf}_{\text{term1}} = \text{tf} \times \text{idf} = 3 \times 1 = 3\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f8322f95350f60ce08c7cdd3032f22e074bd2b1" translate="yes" xml:space="preserve">
          <source>\(\text{tf-idf}_{\text{term2}} = 0 \times (log(6/1)+1) = 0\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcd228feb463195495d0b530544c87a8f5f36307" translate="yes" xml:space="preserve">
          <source>\(\text{tf-idf}_{\text{term3}} = 1 \times (log(6/2)+1) \approx 2.0986\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8c4b99bd2ff2af3e5f2b8ace2008c6e0a9ef2e7" translate="yes" xml:space="preserve">
          <source>\(\text{tf-idf}_{\text{term3}} = 1 \times log(7/3)+1 \approx 1.8473\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1e424267dd17efa4321c87fe24219eaad1c3249" translate="yes" xml:space="preserve">
          <source>\(a\), the number of pairs of elements that are in the same set in C and in the same set in K</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffa07cceebbfadc52e2be9cdf6b9599e34083b82" translate="yes" xml:space="preserve">
          <source>\(b\), the number of pairs of elements that are in different sets in C and in different sets in K</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9634b82eb2f3a1a53f10d0105fa96b96683012b1" translate="yes" xml:space="preserve">
          <source>\(c=\sum_{k}^{K} C_{kk}\) the total number of samples correctly predicted,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0b006e0f953d2967208fad0e101db9a95b1773e" translate="yes" xml:space="preserve">
          <source>\(c_0\) is known as intercept</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20f463b5231561db0d1529b308e8cd1a67579869" translate="yes" xml:space="preserve">
          <source>\(d\) : output dimension</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c2644dcb6baee3a2f0954ec1f4febb35c2c968e" translate="yes" xml:space="preserve">
          <source>\(d_{ij}\), the distance between cluster centroids \(i\) and \(j\).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="464de6af9c88cdb5c8c4a2137401febf7a5e41c7" translate="yes" xml:space="preserve">
          <source>\(k\) : number of nearest neighbors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f8783323f752c7593ada8acf8c4d67282a83607" translate="yes" xml:space="preserve">
          <source>\(n_{d} = 6\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13e265f7db3a9509d50f014f7170db211a73f394" translate="yes" xml:space="preserve">
          <source>\(p_k=\sum_{i}^{K} C_{ki}\) the number of times class \(k\) was predicted,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc4e2c50ba94767cc02eead7002753560f0219c2" translate="yes" xml:space="preserve">
          <source>\(s=\sum_{i}^{K} \sum_{j}^{K} C_{ij}\) the total number of samples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eb93fac640cf512d1e63922116e7722c92fabe0" translate="yes" xml:space="preserve">
          <source>\(s_i\), the average distance between each point of cluster \(i\) and the centroid of that cluster &amp;ndash; also know as cluster diameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2904d711734ca668dfddae3cff9c273e4d482636" translate="yes" xml:space="preserve">
          <source>\(t_k=\sum_{i}^{K} C_{ik}\) the number of times class \(k\) truly occurred,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a59d79c97bec565e1c47b5aab7109c37d7376fa" translate="yes" xml:space="preserve">
          <source>\(v_{norm} = \frac{v}{||v||_2} = \frac{v}{\sqrt{v{_1}^2 + v{_2}^2 + \dots + v{_n}^2}}\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef3a9e22b14c74ec22385c615853f9e45898420d" translate="yes" xml:space="preserve">
          <source>\(v_{norm} = \frac{v}{||v||_2} = \frac{v}{\sqrt{v{_1}^2 + v{_2}^2 + \dots + v{_n}^2}}\).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f32f66d76e16029cdb54470231bf86f45c56290" translate="yes" xml:space="preserve">
          <source>\(y\) the set of &lt;em&gt;predicted&lt;/em&gt;\((sample, label)\) pairs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84dbf0f25232d7453b4b36e6d3fffb9c5594408b" translate="yes" xml:space="preserve">
          <source>\(y\): target variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29655c66149656107eee3658832dbefda0f10f88" translate="yes" xml:space="preserve">
          <source>\(y_l\) the subset of \(y\) with label \(l\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e082165475a8fcee912e7d794c4b87072c02854" translate="yes" xml:space="preserve">
          <source>\(y_s\) the subset of \(y\) with sample \(s\), i.e. \(y_s := \left\{(s', l) \in y | s' = s\right\}\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83a2c7fcc781f513174d7284ba894e2de571456a" translate="yes" xml:space="preserve">
          <source>\[ \begin{align}\begin{aligned}P(y \mid x_1, \dots, x_n) \propto P(y) \prod_{i=1}^{n} P(x_i \mid y)\\\Downarrow\\\hat{y} = \arg\max_y P(y) \prod_{i=1}^{n} P(x_i \mid y),\end{aligned}\end{align} \]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c500aca02db178fd925a59974dd45ddee8face02" translate="yes" xml:space="preserve">
          <source>\[ \begin{align}\begin{aligned}Q_{left}(\theta) = {(x, y) | x_j &amp;lt;= t_m}\\Q_{right}(\theta) = Q \setminus Q_{left}(\theta)\end{aligned}\end{align} \]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d63d132be650c44cbd8191fea374d6099c68415" translate="yes" xml:space="preserve">
          <source>\[ \begin{align}\begin{aligned}\bar{y}_m = \frac{1}{N_m} \sum_{i \in N_m} y_i\\H(X_m) = \frac{1}{N_m} \sum_{i \in N_m} (y_i - \bar{y}_m)^2\end{aligned}\end{align} \]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09657abb97474afe531f716bc21393139a923381" translate="yes" xml:space="preserve">
          <source>\[ \begin{align}\begin{aligned}\bar{y}_m = \frac{1}{N_m} \sum_{i \in N_m} y_i\\H(X_m) = \frac{1}{N_m} \sum_{i \in N_m} |y_i - \bar{y}_m|\end{aligned}\end{align} \]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6a013161b26d9345009bc657a0fa52bacc545a7" translate="yes" xml:space="preserve">
          <source>\[ \begin{align}\begin{aligned}\hat{\theta}_{ci} = \frac{\alpha_i + \sum_{j:y_j \neq c} d_{ij}} {\alpha + \sum_{j:y_j \neq c} \sum_{k} d_{kj}}\\w_{ci} = \log \hat{\theta}_{ci}\\w_{ci} = \frac{w_{ci}}{\sum_{j} |w_{cj}|}\end{aligned}\end{align} \]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d5da4b9043141ddac28de63232838abbbe5a18b" translate="yes" xml:space="preserve">
          <source>\[ \begin{align}\begin{aligned}\log\left(\frac{P(y=k|X)}{P(y=l|X)}\right)= \log\left(\frac{P(X|y=k)P(y=k)}{P(X|y=l)P(y=l)}\right)=0 \Leftrightarrow\\(\mu_k-\mu_l)^t\Sigma^{-1} X = \frac{1}{2} (\mu_k^t \Sigma^{-1} \mu_k - \mu_l^t \Sigma^{-1} \mu_l) - \log\frac{P(y=k)}{P(y=l)}\end{aligned}\end{align} \]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="970228f13e58c5000f67243636530c2e6768a476" translate="yes" xml:space="preserve">
          <source>\[ \begin{align}\begin{aligned}\min_ {w, b, \zeta, \zeta^*} \frac{1}{2} w^T w + C \sum_{i=1}^{n} (\zeta_i + \zeta_i^*)\\\begin{split}\textrm {subject to } &amp;amp; y_i - w^T \phi (x_i) - b \leq \varepsilon + \zeta_i,\\ &amp;amp; w^T \phi (x_i) + b - y_i \leq \varepsilon + \zeta_i^*,\\ &amp;amp; \zeta_i, \zeta_i^* \geq 0, i=1, ..., n\end{split}\end{aligned}\end{align} \]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7cf54257feefa3a1cdfa65288e5d1230916a9ce" translate="yes" xml:space="preserve">
          <source>\[ \begin{align}\begin{aligned}\min_ {w, b, \zeta} \frac{1}{2} w^T w + C \sum_{i=1}^{n} \zeta_i\\\begin{split}\textrm {subject to } &amp;amp; y_i (w^T \phi (x_i) + b) \geq 1 - \zeta_i,\\ &amp;amp; \zeta_i \geq 0, i=1, ..., n\end{split}\end{aligned}\end{align} \]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80291068f9bc632282f639938cf37593076f7e40" translate="yes" xml:space="preserve">
          <source>\[ \begin{align}\begin{aligned}\min_{\alpha, \alpha^*} \frac{1}{2} (\alpha - \alpha^*)^T Q (\alpha - \alpha^*) + \varepsilon e^T (\alpha + \alpha^*) - y^T (\alpha - \alpha^*)\\\begin{split} \textrm {subject to } &amp;amp; e^T (\alpha - \alpha^*) = 0\\ &amp;amp; 0 \leq \alpha_i, \alpha_i^* \leq C, i=1, ..., n\end{split}\end{aligned}\end{align} \]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c7b70ef69da1a978d3d70eb6e72d1cfe185904a" translate="yes" xml:space="preserve">
          <source>\[ \begin{align}\begin{aligned}\min_{\alpha} \frac{1}{2} \alpha^T Q \alpha - e^T \alpha\\\begin{split} \textrm {subject to } &amp;amp; y^T \alpha = 0\\ &amp;amp; 0 \leq \alpha_i \leq C, i=1, ..., n\end{split}\end{aligned}\end{align} \]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6188a7c021d3288e439ea7246a74358b63a884c" translate="yes" xml:space="preserve">
          <source>\[(1 - eps) \|u - v\|^2 &amp;lt; \|p(u) - p(v)\|^2 &amp;lt; (1 + eps) \|u - v\|^2\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4407dbb151e2710b04032ff6939f68ed3c7179c" translate="yes" xml:space="preserve">
          <source>\[A_n = R^{-1/2} A C^{-1/2}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b0d9bcf51ca0db910abd2831694b2e6df3d3e4" translate="yes" xml:space="preserve">
          <source>\[BS = \frac{1}{N} \sum_{t=1}^{N}(f_t - o_t)^2\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c92a9c50030567e1c914fdb60f6f36c624d7857a" translate="yes" xml:space="preserve">
          <source>\[B_k = \sum_q n_q (c_q - c) (c_q - c)^T\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7004892a8adf03dbfdffcdcf3787b7ebb419e77" translate="yes" xml:space="preserve">
          <source>\[C \sum_{i=1, n} \mathcal{L} (f(x_i), y_i) + \Omega (w)\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69d401f524d7e967afe2dcb64dc99487200dfcd8" translate="yes" xml:space="preserve">
          <source>\[DB = \frac{1}{k} \sum{i=1}^k \max_{i \neq j} R_{ij}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e40c0ff9b9201b3e6cc8ee7f729672fe6ce4c93" translate="yes" xml:space="preserve">
          <source>\[E(\mathbf{v}, \mathbf{h}) = -\sum_i \sum_j w_{ij}v_ih_j - \sum_i b_iv_i - \sum_j c_jh_j\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="783de3e797180d6f4ba6c3e9379606ecef2ead2a" translate="yes" xml:space="preserve">
          <source>\[E(w,b) = \frac{1}{n}\sum_{i=1}^{n} L(y_i, f(x_i)) + \alpha R(w)\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="365f54944565346973bba6038073efb7e313ed11" translate="yes" xml:space="preserve">
          <source>\[E[\text{MI}(U,V)]=\sum_{i=1}^{|U|} \sum_{j=1}^{|V|} \sum_{n_{ij}=(a_i+b_j-N)^+ }^{\min(a_i, b_j)} \frac{n_{ij}}{N}\log \left( \frac{ N.n_{ij}}{a_i b_j}\right) \frac{a_i!b_j!(N-a_i)!(N-b_j)!}{N!n_{ij}!(a_i-n_{ij})!(b_j-n_{ij})! (N-a_i-b_j+n_{ij})!}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa1ff8faa81d9e66252f62a095f5cf70ca1078c1" translate="yes" xml:space="preserve">
          <source>\[F(x) = \sum_{m=1}^{M} \gamma_m h_m(x)\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b0368e365c0b4ab2c5226a46b2b8384821b7abd" translate="yes" xml:space="preserve">
          <source>\[F_\beta = (1 + \beta^2) \frac{\text{precision} \times \text{recall}}{\beta^2 \text{precision} + \text{recall}}.\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9eeb87b260c2954980548a507a8b1393c039854" translate="yes" xml:space="preserve">
          <source>\[F_m(x) = F_{m-1}(x) + \arg\min_{h} \sum_{i=1}^{n} L(y_i, F_{m-1}(x_i) + h(x))\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3b959c536d9b51ce676e93f30895d0c6d681eae" translate="yes" xml:space="preserve">
          <source>\[F_m(x) = F_{m-1}(x) + \gamma_m h_m(x)\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b119698c7b1cbf47db5678415973bc69f053f0c" translate="yes" xml:space="preserve">
          <source>\[F_m(x) = F_{m-1}(x) + \nu \gamma_m h_m(x)\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79620d3f64f3ecc0a5f216eb6a57691d801c15cd" translate="yes" xml:space="preserve">
          <source>\[F_m(x) = F_{m-1}(x) - \gamma_m \sum_{i=1}^{n} \nabla_F L(y_i, F_{m-1}(x_i))\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90cafad385d21b4d4db9860dff7480af31e6cc3a" translate="yes" xml:space="preserve">
          <source>\[G(Q, \theta) = \frac{n_{left}}{N_m} H(Q_{left}(\theta)) + \frac{n_{right}}{N_m} H(Q_{right}(\theta))\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3b30c3461532826adfe7425f51daed9aaf98e97" translate="yes" xml:space="preserve">
          <source>\[H(C) = - \sum_{c=1}^{|C|} \frac{n_c}{n} \cdot \log\left(\frac{n_c}{n}\right)\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="672f9873cccc012ff842c8c7fce069ac5cd92675" translate="yes" xml:space="preserve">
          <source>\[H(C|K) = - \sum_{c=1}^{|C|} \sum_{k=1}^{|K|} \frac{n_{c,k}}{n} \cdot \log\left(\frac{n_{c,k}}{n_k}\right)\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dcc776906a998f47112457373d3636e82b5c382" translate="yes" xml:space="preserve">
          <source>\[H(U) = - \sum_{i=1}^{|U|}P(i)\log(P(i))\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf873d01bafa66fa00d4a9abe244e71c3ad5c483" translate="yes" xml:space="preserve">
          <source>\[H(V) = - \sum_{j=1}^{|V|}P'(j)\log(P'(j))\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="825bd8051092a0ff4da11fbb8a018da499318440" translate="yes" xml:space="preserve">
          <source>\[H(X_m) = - \sum_k p_{mk} \log(p_{mk})\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86fb9fbe52343d6db8c412062ca26e8b3a61d7f8" translate="yes" xml:space="preserve">
          <source>\[H(X_m) = 1 - \max(p_{mk})\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="471e679a9a1baa18ae5b83f786849ce5561bcf62" translate="yes" xml:space="preserve">
          <source>\[H(X_m) = \sum_k p_{mk} (1 - p_{mk})\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d07612141f923e53a5d822ae265800fc511ebfa2" translate="yes" xml:space="preserve">
          <source>\[J(A, B) = \frac{|A \cap B|}{|A| + |B| - |A \cap B|}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b38d8ccb5f6105408ebebb5c4de384f0bcc0244c" translate="yes" xml:space="preserve">
          <source>\[J(y_i, \hat{y}_i) = \frac{|y_i \cap \hat{y}_i|}{|y_i \cup \hat{y}_i|}.\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d318f9ea1800cd74dd7a27a0e7aa26e39a217efa" translate="yes" xml:space="preserve">
          <source>\[K_{ij} = L_{ij} - \overline{L_{i \cdot}} - \overline{L_{\cdot j}} + \overline{L_{\cdot \cdot}}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f142a1b3f1a25b7844f5bd577802840d9086424" translate="yes" xml:space="preserve">
          <source>\[LRAP(y, \hat{f}) = \frac{1}{n_{\text{samples}}} \sum_{i=0}^{n_{\text{samples}} - 1} \frac{1}{||y_i||_0} \sum_{j:y_{ij} = 1} \frac{|\mathcal{L}_{ij}|}{\text{rank}_{ij}}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce318e5aa62c88285e6dbc3450ddc43884867d96" translate="yes" xml:space="preserve">
          <source>\[L_\text{Hinge}(y, w) = \max\left\{1 - wy, 0\right\} = \left|1 - wy\right|_+\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba42e2e6c73e49cc69262971d98739da8f3de127" translate="yes" xml:space="preserve">
          <source>\[L_\text{Hinge}(y_w, y_t) = \max\left\{1 + y_t - y_w, 0\right\}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d42c3e71601b07673f2ff67be6498a9b9b5b660" translate="yes" xml:space="preserve">
          <source>\[L_{0-1}(y_i, \hat{y}_i) = 1(\hat{y}_i \not= y_i)\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d55be0d74f5ef605272bd6c32e6867b2bf3e8e6" translate="yes" xml:space="preserve">
          <source>\[L_{Hamming}(y, \hat{y}) = \frac{1}{n_\text{labels}} \sum_{j=0}^{n_\text{labels} - 1} 1(\hat{y}_j \not= y_j)\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3092c91dac051243dcdc2b0e51b2cc71f3f1851" translate="yes" xml:space="preserve">
          <source>\[L_{\log}(Y, P) = -\log \operatorname{Pr}(Y|P) = - \frac{1}{N} \sum_{i=0}^{N-1} \sum_{k=0}^{K-1} y_{i,k} \log p_{i,k}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="253a9ad7d14147f9b4d52f808d7adc29f4f1d369" translate="yes" xml:space="preserve">
          <source>\[L_{\log}(y, p) = -\log \operatorname{Pr}(y|p) = -(y \log (p) + (1 - y) \log (1 - p))\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2efbeda9bdd157cc2d7a3c7780634a18e9cf252c" translate="yes" xml:space="preserve">
          <source>\[Loss(\hat{y},y,W) = -y \ln {\hat{y}} - (1-y) \ln{(1-\hat{y})} + \alpha ||W||_2^2\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad216be468be053e061c385b7f1c21d710fe84a9" translate="yes" xml:space="preserve">
          <source>\[Loss(\hat{y},y,W) = \frac{1}{2}||\hat{y} - y ||_2^2 + \frac{\alpha}{2} ||W||_2^2\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d4d43e0aa8af2572cd4c7afaa27772d600c52ba" translate="yes" xml:space="preserve">
          <source>\[MCC = \frac{ c \times s - \sum_{k}^{K} p_k \times t_k }{\sqrt{ (s^2 - \sum_{k}^{K} p_k^2) \times (s^2 - \sum_{k}^{K} t_k^2) }}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5497e39840904c9cb7d2472c1ab3621a66cd485" translate="yes" xml:space="preserve">
          <source>\[MCC = \frac{tp \times tn - fp \times fn}{\sqrt{(tp + fp)(tp + fn)(tn + fp)(tn + fn)}}.\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3da3c85336ea30ff991df5f7886c792d671d3d1" translate="yes" xml:space="preserve">
          <source>\[MI(U,V)=\sum_{i=1}^{|U|} \sum_{j=1}^{|V|} \frac{|U_i\cap V_j|}{N} \log\frac{N|U_i \cap V_j|}{|U_i||V_j|}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c94cfec038c55c60afa9fef476e0a1aad2563170" translate="yes" xml:space="preserve">
          <source>\[P(X | y=k) = \frac{1}{(2\pi)^{d/2} |\Sigma_k|^{1/2}}\exp\left(-\frac{1}{2} (X-\mu_k)^t \Sigma_k^{-1} (X-\mu_k)\right)\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd893dbc741157abd91341aed411a740724f85fa" translate="yes" xml:space="preserve">
          <source>\[P(\mathbf{v}, \mathbf{h}) = \frac{e^{-E(\mathbf{v}, \mathbf{h})}}{Z}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a8ab66c6ea03a89651facccbd08d5f0c9be8c6d" translate="yes" xml:space="preserve">
          <source>\[P(x_i \mid y) = P(i \mid y) x_i + (1 - P(i \mid y)) (1 - x_i)\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33b093ce0e5d6e386417ef609cc2f6a855343cc3" translate="yes" xml:space="preserve">
          <source>\[P(x_i \mid y) = \frac{1}{\sqrt{2\pi\sigma^2_y}} \exp\left(-\frac{(x_i - \mu_y)^2}{2\sigma^2_y}\right)\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f013d2ae1dd46efa06019f68c7849dc72ce7f4e" translate="yes" xml:space="preserve">
          <source>\[P(x_i | y, x_1, \dots, x_{i-1}, x_{i+1}, \dots, x_n) = P(x_i | y),\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c732ad1752bec3f2371482df4bfec3ce784d1ec4" translate="yes" xml:space="preserve">
          <source>\[P(y \mid x_1, \dots, x_n) = \frac{P(y) P(x_1, \dots x_n \mid y)} {P(x_1, \dots, x_n)}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84c8d40000ffaabc15011af6c72fc5efaa03e40c" translate="yes" xml:space="preserve">
          <source>\[P(y \mid x_1, \dots, x_n) = \frac{P(y) \prod_{i=1}^{n} P(x_i \mid y)} {P(x_1, \dots, x_n)}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edcd72a09735a7f6adceea22c0b30c20fbfbd80a" translate="yes" xml:space="preserve">
          <source>\[P(y=k | X) = \frac{P(X | y=k) P(y=k)}{P(X)} = \frac{P(X | y=k) P(y = k)}{ \sum_{l} P(X | y=l) \cdot P(y=l)}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a07827e49a88167851d8970eaa9edda3b99d65" translate="yes" xml:space="preserve">
          <source>\[R^2(y, \hat{y}) = 1 - \frac{\sum_{i=0}^{n_{\text{samples}} - 1} (y_i - \hat{y}_i)^2}{\sum_{i=0}^{n_\text{samples} - 1} (y_i - \bar{y})^2}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4a8061b9eb9628b02ec75d4e5fc5a21d09cd880" translate="yes" xml:space="preserve">
          <source>\[R_{ij} = \frac{s_i + s_j}{d_{ij}}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7faa52dada966b566ea53656a8bd94425e2b50a6" translate="yes" xml:space="preserve">
          <source>\[W^{i+1} = W^i - \epsilon \nabla {Loss}_{W}^{i}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e598814b9bd2e3db200ccff196ebf646bf738ec7" translate="yes" xml:space="preserve">
          <source>\[W_k = \sum_{q=1}^k \sum_{x \in C_q} (x - c_q) (x - c_q)^T\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eb30be4ba7f05878cf003c46dfa54b35d57c946" translate="yes" xml:space="preserve">
          <source>\[X \approx X_k = U_k \Sigma_k V_k^\top\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7c03179d6deebc1c581ff68076935c59051f655" translate="yes" xml:space="preserve">
          <source>\[X' = X V_k\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b12fce875e4a7610479762a7e27b3b69634b6af" translate="yes" xml:space="preserve">
          <source>\[X^* = D^{-1/2}U^t X\text{ with }\Sigma = UDU^t\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15463a9b27ce80c407246ad66ee390a5bc003068" translate="yes" xml:space="preserve">
          <source>\[\alpha \rho ||W||_1 + \alpha \rho ||H||_1 + \frac{\alpha(1-\rho)}{2} ||W||_{\mathrm{Fro}} ^ 2 + \frac{\alpha(1-\rho)}{2} ||H||_{\mathrm{Fro}} ^ 2\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecb4b9fe8fc24f73a20eeac8e7781ad331ab3cc6" translate="yes" xml:space="preserve">
          <source>\[\begin{split}(U^*, V^*) = \underset{U, V}{\operatorname{arg\,min\,}} &amp;amp; \frac{1}{2} ||X-UV||_2^2+\alpha||U||_1 \\ \text{subject to } &amp;amp; ||V_k||_2 = 1 \text{ for all } 0 \leq k &amp;lt; n_{\mathrm{atoms}}\end{split}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="113192b0908b5ad7f78568d56440ab2d30ef92e9" translate="yes" xml:space="preserve">
          <source>\[\begin{split}(U^*, V^*) = \underset{U, V}{\operatorname{arg\,min\,}} &amp;amp; \frac{1}{2} ||X-UV||_2^2+\alpha||V||_1 \\ \text{subject to } &amp;amp; ||U_k||_2 = 1 \text{ for all } 0 \leq k &amp;lt; n_{components}\end{split}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3136579a6b2a85a0be46315eb9cbc3ba1e261551" translate="yes" xml:space="preserve">
          <source>\[\begin{split}H_{\epsilon}(z) = \begin{cases} z^2, &amp;amp; \text {if } |z| &amp;lt; \epsilon, \\ 2\epsilon|z| - \epsilon^2, &amp;amp; \text{otherwise} \end{cases}\end{split}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b46cf81ba2e913dc611a985b07c8255c093eef0a" translate="yes" xml:space="preserve">
          <source>\[\begin{split}P(v_i=1|\mathbf{h}) = \sigma(\sum_j w_{ij}h_j + b_i) \\ P(h_i=1|\mathbf{v}) = \sigma(\sum_i w_{ij}v_i + c_j)\end{split}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a61de83e06a531ec76671fed3f61a04aabc9bf7" translate="yes" xml:space="preserve">
          <source>\[\begin{split}Z = \begin{bmatrix} R^{-1/2} U \\\\ C^{-1/2} V \end{bmatrix}\end{split}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd5d1a7323dcc269879eaa3da3604856f3eb3a0" translate="yes" xml:space="preserve">
          <source>\[\begin{split}\left\{ \begin{array}{c c l} -\sqrt{\frac{s}{n_{\text{components}}}} &amp;amp; &amp;amp; 1 / 2s\\ 0 &amp;amp;\text{with probability} &amp;amp; 1 - 1 / s \\ +\sqrt{\frac{s}{n_{\text{components}}}} &amp;amp; &amp;amp; 1 / 2s\\ \end{array} \right.\end{split}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d0ec223c44ca16fb23a31d32e7c757a5e38ba8" translate="yes" xml:space="preserve">
          <source>\[\begin{split}h_i \bot h_j | \mathbf{v} \\ v_i \bot v_j | \mathbf{h}\end{split}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3198bb38407bb1554dc0d1959561349fcfcad349" translate="yes" xml:space="preserve">
          <source>\[\begin{split}x_i^{(\lambda)} = \begin{cases} [(x_i + 1)^\lambda - 1] / \lambda &amp;amp; \text{if } \lambda \neq 0, x_i \geq 0, \\[8pt] \ln{(x_i) + 1} &amp;amp; \text{if } \lambda = 0, x_i \geq 0 \\[8pt] -[(-x_i + 1)^{2 - \lambda} - 1] / (2 - \lambda) &amp;amp; \text{if } \lambda \neq 2, x_i &amp;lt; 0, \\[8pt] - \ln (- x_i + 1) &amp;amp; \text{if } \lambda = 2, x_i &amp;lt; 0 \end{cases}\end{split}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc87ecfd4801e13673bdd8bb567f720368f1d00c" translate="yes" xml:space="preserve">
          <source>\[\begin{split}x_i^{(\lambda)} = \begin{cases} \dfrac{x_i^\lambda - 1}{\lambda} &amp;amp; \text{if } \lambda \neq 0, \\[8pt] \ln{(x_i)} &amp;amp; \text{if } \lambda = 0, \end{cases}\end{split}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a73d653ad8356da32b64d5107d59910b4574da8f" translate="yes" xml:space="preserve">
          <source>\[\binom{n_{samples}}{n_{subsamples}}\]</source>
          <target state="translated">\[\binom{n_{samples}}{n_{subsamples}}\]</target>
        </trans-unit>
        <trans-unit id="ac1ff82d2bb9be7a891279ff19e58ef9606ac1e2" translate="yes" xml:space="preserve">
          <source>\[\eta^{(t)} = \frac {1}{\alpha (t_0 + t)}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94fa32af9a54520431e5e0db6110f5f4be3adb89" translate="yes" xml:space="preserve">
          <source>\[\eta^{(t)} = \frac{eta_0}{t^{power\_t}}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ab74fa9a47831af7bc26708f2eb4bb36eb7c478" translate="yes" xml:space="preserve">
          <source>\[\gamma_m = \arg\min_{\gamma} \sum_{i=1}^{n} L(y_i, F_{m-1}(x_i) - \gamma \frac{\partial L(y_i, F_{m-1}(x_i))}{\partial F_{m-1}(x_i)})\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03488d7aa371e338e3a792b1ee0314e7750d1c23" translate="yes" xml:space="preserve">
          <source>\[\hat{K} = \mathrm{argmin}_K \big( \mathrm{tr} S K - \mathrm{log} \mathrm{det} K + \alpha \|K\|_1 \big)\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d564db2d54a230e005c20037b5a37d139fd79dd" translate="yes" xml:space="preserve">
          <source>\[\hat{\theta}_{yi} = \frac{ N_{yi} + \alpha}{N_y + \alpha n}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c11c6e06d183bd2451c8cb2b3112bec0b1bc1ee8" translate="yes" xml:space="preserve">
          <source>\[\hat{c} = \arg\min_c \sum_{i} t_i w_{ci}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d0878697ede61cc2d8e8a17d350fedc4b3570ca" translate="yes" xml:space="preserve">
          <source>\[\hat{w}_i = \frac{w_i}{\sum_j{1(y_j = y_i) w_j}}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="463125ace329bbcbe2634beaad2a87856ea8f696" translate="yes" xml:space="preserve">
          <source>\[\hat{y}(w, x) = w_0 + w_1 x_1 + ... + w_p x_p\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7104cc52e967d53cc9bb7db2f89101bc8dd84a8" translate="yes" xml:space="preserve">
          <source>\[\hat{y}(w, x) = w_0 + w_1 x_1 + w_2 x_2 + w_3 x_1 x_2 + w_4 x_1^2 + w_5 x_2^2\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="658832cb765efda37a6b6c541d565e8e7abeaf9e" translate="yes" xml:space="preserve">
          <source>\[\hat{y}(w, x) = w_0 + w_1 x_1 + w_2 x_2\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e16dea6416d3f9e94f0e5c1b50c7914fc96699e9" translate="yes" xml:space="preserve">
          <source>\[\hat{y}(w, x) = w_0 + w_1 z_1 + w_2 z_2 + w_3 z_3 + w_4 z_4 + w_5 z_5\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ee9d5e754305261d56bc754281eac2d4bc47e43" translate="yes" xml:space="preserve">
          <source>\[\kappa = (p_o - p_e) / (1 - p_e)\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="167a98e04ab5b59774a90feac289ea3a97af6579" translate="yes" xml:space="preserve">
          <source>\[\log P(v) = \log \sum_h e^{-E(v, h)} - \log \sum_{x, y} e^{-E(x, y)}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad74f3245329845209a6a11327e3e01ab638c922" translate="yes" xml:space="preserve">
          <source>\[\log\: P(w | \alpha, \eta) \geq L(w,\phi,\gamma,\lambda) \overset{\triangle}{=} E_{q}[\log\:p(w,z,\theta,\beta|\alpha,\eta)] - E_{q}[\log\:q(z, \theta, \beta)]\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acd2ba041ece952cccd5e4312456e983a53c6177" translate="yes" xml:space="preserve">
          <source>\[\mathbf{X} = W \mathbf{H} + \mathbf{M} + \mathbf{E}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fc441ca9a3b802fffa9f5232b4a01983592e3f6" translate="yes" xml:space="preserve">
          <source>\[\mathrm{Var}[X] = p(1 - p)\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7372ca4e923643687d4df5df75f6e7ff9db3abee" translate="yes" xml:space="preserve">
          <source>\[\min_{W} { \frac{1}{2n_{samples}} ||X W - Y||_{Fro}^2 + \alpha \rho ||W||_{2 1} + \frac{\alpha(1-\rho)}{2} ||W||_{Fro}^2}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="548c3bcfa8dd96c460c27fa073154f30b3b246a6" translate="yes" xml:space="preserve">
          <source>\[\min_{w, \sigma} {\sum_{i=1}^n\left(\sigma + H_{\epsilon}\left(\frac{X_{i}w - y_{i}}{\sigma}\right)\sigma\right) + \alpha {||w||_2}^2}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f3066db7d2cbca0197d7b0000b6b3a905d0765e" translate="yes" xml:space="preserve">
          <source>\[\min_{w, c} \frac{1}{2}w^T w + C \sum_{i=1}^n \log(\exp(- y_i (X_i^T w + c)) + 1) .\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8b095fe52ca8c5392f5be3d4a7ed348bc0c6152" translate="yes" xml:space="preserve">
          <source>\[\min_{w, c} \|w\|_1 + C \sum_{i=1}^n \log(\exp(- y_i (X_i^T w + c)) + 1).\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cfdc1a0909ab37e379c4d212b8450734d121a0a" translate="yes" xml:space="preserve">
          <source>\[\min_{w} { \frac{1}{2n_{samples}} ||X W - Y||_{Fro} ^ 2 + \alpha ||W||_{21}}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84675599bc54bd8ca11befb3a8ba977b967c5f4b" translate="yes" xml:space="preserve">
          <source>\[\min_{w} { \frac{1}{2n_{samples}} ||X w - y||_2 ^ 2 + \alpha \rho ||w||_1 + \frac{\alpha(1-\rho)}{2} ||w||_2 ^ 2}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65860eb28e0c461a7c3dd02c6a1f351fba1ebb10" translate="yes" xml:space="preserve">
          <source>\[\min_{w} { \frac{1}{2n_{samples}} ||X w - y||_2 ^ 2 + \alpha ||w||_1}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af20f4a95d5e54bc8772e5c9d7579462ea8e8fd2" translate="yes" xml:space="preserve">
          <source>\[\min_{w} {{|| X w - y||_2}^2 + \alpha {||w||_2}^2}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db497507cf821b4b3eb8d48ea8152589c5757fd5" translate="yes" xml:space="preserve">
          <source>\[\min_{w} {|| X w - y||_2}^2\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="538048a5b6524013b5d90001511f7c3fd802f62e" translate="yes" xml:space="preserve">
          <source>\[\operatorname{sgn}(\sum_{i=1}^n y_i \alpha_i K(x_i, x) + \rho)\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1031f45b52dde163d138d20fcbf10f33144316c0" translate="yes" xml:space="preserve">
          <source>\[\rho_K(y) = \sum_{i=1}^{N} K((y - x_i) / h)\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d41e3812edabc07c552e877efcc63ad61c457347" translate="yes" xml:space="preserve">
          <source>\[\sigma(x) = \frac{1}{1 + e^{-x}}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1617dc4c9b73383a7a58fdc6c1f4e694bb1dd1c3" translate="yes" xml:space="preserve">
          <source>\[\sum_{i=0}^{n}\min_{\mu_j \in C}(||x_i - \mu_j||^2)\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31025087e6fd3a69063dd94346140423c115a047" translate="yes" xml:space="preserve">
          <source>\[\sum_{i=1}^n (\alpha_i - \alpha_i^*) K(x_i, x) + \rho\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52776b63064b4107b577c54508df69965be309ad" translate="yes" xml:space="preserve">
          <source>\[\texttt{accuracy}(y, \hat{y}) = \frac{1}{n_\text{samples}} \sum_{i=0}^{n_\text{samples}-1} 1(\hat{y}_i = y_i)\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25e5ac6d4fcfe41ff00f8212671c4fa416bd63a2" translate="yes" xml:space="preserve">
          <source>\[\texttt{balanced-accuracy}(y, \hat{y}, w) = \frac{1}{\sum{\hat{w}_i}} \sum_i 1(\hat{y}_i = y_i) \hat{w}_i\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25babb40d19ccc36270f5bbbb59a229d7eea6445" translate="yes" xml:space="preserve">
          <source>\[\texttt{explained\_{}variance}(y, \hat{y}) = 1 - \frac{Var\{ y - \hat{y}\}}{Var\{y\}}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86d09f9b41403ef3125bdfe3d5df1339ef29e85b" translate="yes" xml:space="preserve">
          <source>\[\text{AMI} = \frac{\text{MI} - E[\text{MI}]}{\text{mean}(H(U), H(V)) - E[\text{MI}]}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b5fad107ca6376b689791294a1a407a754a6699" translate="yes" xml:space="preserve">
          <source>\[\text{AP} = \sum_n (R_n - R_{n-1}) P_n\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48b110aa97345a4cd38fea22e10dace286f6ded2" translate="yes" xml:space="preserve">
          <source>\[\text{ARI} = \frac{\text{RI} - E[\text{RI}]}{\max(\text{RI}) - E[\text{RI}]}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d813e8b2f8c6dcc64dfd5aa82a4910f31cb40983" translate="yes" xml:space="preserve">
          <source>\[\text{FMI} = \frac{\text{TP}}{\sqrt{(\text{TP} + \text{FP}) (\text{TP} + \text{FN})}}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e489730991d71cf979680e5e1ea3688bd6627812" translate="yes" xml:space="preserve">
          <source>\[\text{MAE}(y, \hat{y}) = \frac{1}{n_{\text{samples}}} \sum_{i=0}^{n_{\text{samples}}-1} \left| y_i - \hat{y}_i \right|.\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69c677e423f352917e76ed4cf213abc9ad405a9e" translate="yes" xml:space="preserve">
          <source>\[\text{MI}(U, V) = \sum_{i=1}^{|U|} \sum_{j=1}^{|V|} \frac{|U_i \cap V_j|}{N}\log\left(\frac{N|U_i \cap V_j|}{|U_i||V_j|}\right)\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="189595ace9a1d1452cc423bbbc0b9f80ae660553" translate="yes" xml:space="preserve">
          <source>\[\text{MI}(U, V) = \sum_{i=1}^{|U|}\sum_{j=1}^{|V|}P(i, j)\log\left(\frac{P(i,j)}{P(i)P'(j)}\right)\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da895b4026ff2634b0b6680eab3ee97cbcd0faa" translate="yes" xml:space="preserve">
          <source>\[\text{MSE}(y, \hat{y}) = \frac{1}{n_\text{samples}} \sum_{i=0}^{n_\text{samples} - 1} (y_i - \hat{y}_i)^2.\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1751bb66360153c0af22240eb96c04b88acbb4c2" translate="yes" xml:space="preserve">
          <source>\[\text{MSLE}(y, \hat{y}) = \frac{1}{n_\text{samples}} \sum_{i=0}^{n_\text{samples} - 1} (\log_e (1 + y_i) - \log_e (1 + \hat{y}_i) )^2.\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="895e0ce2acb986dc70bd161ede36d8d0e5b45c68" translate="yes" xml:space="preserve">
          <source>\[\text{MedAE}(y, \hat{y}) = \text{median}(\mid y_1 - \hat{y}_1 \mid, \ldots, \mid y_n - \hat{y}_n \mid).\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="412551eeb8707009cf37a3614bb2ac413242db3e" translate="yes" xml:space="preserve">
          <source>\[\text{NMI}(U, V) = \frac{\text{MI}(U, V)}{\text{mean}(H(U), H(V))}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1ba82e2823989269e5ff6555a5640f07730f209" translate="yes" xml:space="preserve">
          <source>\[\text{RI} = \frac{a + b}{C_2^{n_{samples}}}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31c0b4da7d07b71d295123bdcbe3784734d8dc3a" translate="yes" xml:space="preserve">
          <source>\[\text{precision} = \frac{tp}{tp + fp},\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83516b6b4e5da60bda72a55a4d2dd76a9885d9a7" translate="yes" xml:space="preserve">
          <source>\[\text{ranking\_loss}(y, \hat{f}) = \frac{1}{n_{\text{samples}}} \sum_{i=0}^{n_{\text{samples}} - 1} \frac{1}{||y_i||_0(n_\text{labels} - ||y_i||_0)} \left|\left\{(k, l): \hat{f}_{ik} \leq \hat{f}_{il}, y_{ik} = 1, y_{il} = 0 \right\}\right|\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0f09a332432559795f1be86ce84fd4caf247c64" translate="yes" xml:space="preserve">
          <source>\[\text{recall} = \frac{tp}{tp + fn},\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b04b913f9d9ce1396e74d1c3743ae337e99b5a17" translate="yes" xml:space="preserve">
          <source>\[\text{softmax}(z)_i = \frac{\exp(z_i)}{\sum_{l=1}^k\exp(z_l)}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dddff3021d1ffa0a14ec1cfbdee6940b190a7af" translate="yes" xml:space="preserve">
          <source>\[\theta^* = \operatorname{argmin}_\theta G(Q, \theta)\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59540c38d097134d915591a68937a2be75771c6a" translate="yes" xml:space="preserve">
          <source>\[\underset{\gamma}{\operatorname{arg\,min\,}} ||\gamma||_0 \text{ subject to } ||y-X\gamma||_2^2 \leq \text{tol}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ffaeaf57d7208fde2b67e9518ba984d5aa70bf7" translate="yes" xml:space="preserve">
          <source>\[\underset{\gamma}{\operatorname{arg\,min\,}} ||y - X\gamma||_2^2 \text{ subject to } ||\gamma||_0 \leq n_{nonzero\_coefs}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cce43a5152cb0323abd8da4f2f9ff36af004039e" translate="yes" xml:space="preserve">
          <source>\[a(i, k) \leftarrow min [0, r(k, k) + \sum_{i'~s.t.~i' \notin \{i, k\}}{r(i', k)}]\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1500097a0487ab3deaafcdfeb09be9c0da1d82c" translate="yes" xml:space="preserve">
          <source>\[a_{t+1}(i, k) = \lambda\cdot a_{t}(i, k) + (1-\lambda)\cdot a_{t+1}(i, k)\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c48e0a2e5b680054ed9fdb6e3017d5b8930d27a" translate="yes" xml:space="preserve">
          <source>\[c = 1 - \frac{H(K|C)}{H(K)}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3bee00e6c9ea4a130d64b8f00e025f6da17606a" translate="yes" xml:space="preserve">
          <source>\[coverage(y, \hat{f}) = \frac{1}{n_{\text{samples}}} \sum_{i=0}^{n_{\text{samples}} - 1} \max_{j:y_{ij} = 1} \text{rank}_{ij}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74cc9f36b103a92947613f04e1f6b852fce97d22" translate="yes" xml:space="preserve">
          <source>\[d(u,v) = \sqrt{\frac{|v|+|s|} {T}d(v,s)^2 + \frac{|v|+|t|} {T}d(v,t)^2 - \frac{|v|} {T}d(s,t)^2}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="480da563cf939cfc2c0b93f338867f43a605e85e" translate="yes" xml:space="preserve">
          <source>\[d_{IS}(X, Y) = \sum_{i,j} (\frac{X_{ij}}{Y_{ij}} - \log(\frac{X_{ij}}{Y_{ij}}) - 1)\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc4abfc0d04451359bc31ea2d81166903f73993b" translate="yes" xml:space="preserve">
          <source>\[d_{KL}(X, Y) = \sum_{i,j} (X_{ij} \log(\frac{X_{ij}}{Y_{ij}}) - X_{ij} + Y_{ij})\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d61f209890859a99a2f7972770f88723b9e9f288" translate="yes" xml:space="preserve">
          <source>\[d_{\beta}(X, Y) = \sum_{i,j} \frac{1}{\beta(\beta - 1)}(X_{ij}^\beta + (\beta-1)Y_{ij}^\beta - \beta X_{ij} Y_{ij}^{\beta - 1})\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bab23176ba2262142089493d1ee5e5f3b147b84" translate="yes" xml:space="preserve">
          <source>\[d_{\mathrm{Fro}}(X, WH) + \alpha \rho ||W||_1 + \alpha \rho ||H||_1 + \frac{\alpha(1-\rho)}{2} ||W||_{\mathrm{Fro}} ^ 2 + \frac{\alpha(1-\rho)}{2} ||H||_{\mathrm{Fro}} ^ 2\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a55b6dba1380f242b7669a1c47052c0e18faba9" translate="yes" xml:space="preserve">
          <source>\[d_{\mathrm{Fro}}(X, Y) = \frac{1}{2} ||X - Y||_{Fro}^2 = \frac{1}{2} \sum_{i,j} (X_{ij} - {Y}_{ij})^2\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56333bbec607dfeae0b8b1cf6b25ae18d8ca600b" translate="yes" xml:space="preserve">
          <source>\[d_{\mathrm{Fro}}(X, Y) = \frac{1}{2} ||X - Y||_{\mathrm{Fro}}^2 = \frac{1}{2} \sum_{i,j} (X_{ij} - {Y}_{ij})^2\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98e96c568e40f1cb62391ee5b93872f2ba812b87" translate="yes" xml:space="preserve">
          <source>\[g(z)= \frac{e^z-e^{-z}}{e^z+e^{-z}}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="047ff68f0b75c33af529cb789d1a14b0ef90844c" translate="yes" xml:space="preserve">
          <source>\[h = 1 - \frac{H(C|K)}{H(C)}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14eab476de3a1a1ee342fd83f277ecf56cf587a2" translate="yes" xml:space="preserve">
          <source>\[k(x, y) = (\gamma x^\top y +c_0)^d\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e05b8652cadaa0e18137519c34038bd9b4d49f33" translate="yes" xml:space="preserve">
          <source>\[k(x, y) = \exp \left (-\gamma \sum_i \frac{(x[i] - y[i]) ^ 2}{x[i] + y[i]} \right )\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c42135f259284ae147f5637733e7be44be817638" translate="yes" xml:space="preserve">
          <source>\[k(x, y) = \exp( -\gamma \| x-y \|^2)\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b8fc89b3b85d611a5f886d8a0d4b6da16bebda1" translate="yes" xml:space="preserve">
          <source>\[k(x, y) = \exp( -\gamma \| x-y \|_1)\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb7a2295705ca06e99d20557827885f894b2ab6c" translate="yes" xml:space="preserve">
          <source>\[k(x, y) = \frac{x y^\top}{\|x\| \|y\|}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bd88d65fbd1165f221254ac7c878599a9587be3" translate="yes" xml:space="preserve">
          <source>\[k(x, y) = \sum_i \frac{2x_iy_i}{x_i+y_i}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef79e071dd75972c935522fbdf963bac162d5503" translate="yes" xml:space="preserve">
          <source>\[k(x, y) = \tanh( \gamma x^\top y + c_0)\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b8ce427dc31a31366625d6ecd5ce9fc1d102f97" translate="yes" xml:space="preserve">
          <source>\[k(x, y) = x^\top y\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c62075221809bab41c0c4d9d1ff84bf7fd63201" translate="yes" xml:space="preserve">
          <source>\[k(x,y) = \langle \phi(x), \phi(y) \rangle\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83acee2c44cf70341a68e1a309e5bb4b7ecd5db2" translate="yes" xml:space="preserve">
          <source>\[k(x,y) = \prod_i \frac{2\sqrt{x_i+c}\sqrt{y_i+c}}{x_i + y_i + 2c}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af6b9cea6312e583b845b8b8798e2b1cdb9ea81d" translate="yes" xml:space="preserve">
          <source>\[k(x_i, x_j) = \left(1 + \frac{d(x_i, x_j)^2}{2\alpha l^2}\right)^{-\alpha}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d84e505291d385ed53cc26b7fb64b95b6f06cc0" translate="yes" xml:space="preserve">
          <source>\[k(x_i, x_j) = \sigma^2 \Bigg(1 + \gamma \sqrt{3} d(x_i / l, x_j / l)\Bigg) \exp \Bigg(-\gamma \sqrt{3}d(x_i / l, x_j / l) \Bigg) \quad \quad \nu= \tfrac{3}{2}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43b1859920e8e6cb9af583f113a6ac7a676b55c4" translate="yes" xml:space="preserve">
          <source>\[k(x_i, x_j) = \sigma^2 \Bigg(1 + \gamma \sqrt{5}d(x_i / l, x_j / l) +\frac{5}{3} \gamma^2d(x_i / l, x_j / l)^2 \Bigg) \exp \Bigg(-\gamma \sqrt{5}d(x_i / l, x_j / l) \Bigg) \quad \quad \nu= \tfrac{5}{2}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="603f899398abb04b02817e5c2bd85f44bd93da61" translate="yes" xml:space="preserve">
          <source>\[k(x_i, x_j) = \sigma^2 \exp \Bigg(-\gamma d(x_i / l, x_j / l) \Bigg) \quad \quad \nu= \tfrac{1}{2}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ad52ad84761592aeeb479502b21b650699d8437" translate="yes" xml:space="preserve">
          <source>\[k(x_i, x_j) = \sigma^2\frac{1}{\Gamma(\nu)2^{\nu-1}}\Bigg(\gamma\sqrt{2\nu} d(x_i / l, x_j / l)\Bigg)^\nu K_\nu\Bigg(\gamma\sqrt{2\nu} d(x_i / l, x_j / l)\Bigg),\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99015976377487efe5a824d1fb0be559b9f4ca9c" translate="yes" xml:space="preserve">
          <source>\[k(x_i, x_j) = \sigma_0 ^ 2 + x_i \cdot x_j\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36e12ad790c0a4a69ac8f062b4956f87ed668eee" translate="yes" xml:space="preserve">
          <source>\[k(x_i, x_j) = \text{exp}\left(-2 \left(\text{sin}(\pi / p * d(x_i, x_j)) / l\right)^2\right)\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="415d996748fd08d2238902644ff2a268df10cb47" translate="yes" xml:space="preserve">
          <source>\[k(x_i, x_j) = \text{exp}\left(-\frac{1}{2} d(x_i / l, x_j / l)^2\right)\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36e4eb74c50919e414e6b108387fe9129c6d50ee" translate="yes" xml:space="preserve">
          <source>\[k(x_i, x_j) = constant\_value \;\forall\; x_1, x_2\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50267237ad942d0c7128de1a701b2c29e824d32f" translate="yes" xml:space="preserve">
          <source>\[k(x_i, x_j) = noise\_level \text{ if } x_i == x_j \text{ else } 0\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="452121457c58082f4ae7e7b3966fbf073b89442b" translate="yes" xml:space="preserve">
          <source>\[m(x_i) = \frac{\sum_{x_j \in N(x_i)}K(x_j - x_i)x_j}{\sum_{x_j \in N(x_i)}K(x_j - x_i)}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7f42725a8776d252581312266356660412f55bd" translate="yes" xml:space="preserve">
          <source>\[n\_components &amp;gt;= 4 log(n\_samples) / (eps^2 / 2 - eps^3 / 3)\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47f37fcacab09bb064b0ce9d07854aae7026a3e1" translate="yes" xml:space="preserve">
          <source>\[p(w|\lambda) = \mathcal{N}(w|0,A^{-1})\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76fe4b7f00d8e74cc6f509ef2ed6adf5b269e431" translate="yes" xml:space="preserve">
          <source>\[p(w|\lambda) = \mathcal{N}(w|0,\lambda^{-1}\mathbf{I}_{p})\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f791a613679c9fa31c1412048ac8eb382120f2db" translate="yes" xml:space="preserve">
          <source>\[p(x) = \mathcal{N}(\mu, WW^T + \Psi)\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54b190a56761829b19e9c279d6bc1847fd176fbf" translate="yes" xml:space="preserve">
          <source>\[p(x_i|h_i) = \mathcal{N}(Wh_i + \mu, \Psi)\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab31cf0bde7433e0561fc4f6975481acca47fec2" translate="yes" xml:space="preserve">
          <source>\[p(y|X,w,\alpha) = \mathcal{N}(y|X w,\alpha)\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffc1ab7bd20ed397ca1c92384e2aa6e35969d0a6" translate="yes" xml:space="preserve">
          <source>\[p(z, \theta, \beta |w, \alpha, \eta) = \frac{p(z, \theta, \beta|\alpha, \eta)}{p(w|\alpha, \eta)}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cb8704f9ab5cd0e32a5d8955d234b9caf0590d2" translate="yes" xml:space="preserve">
          <source>\[p_{mk} = 1/ N_m \sum_{x_i \in R_m} I(y_i = k)\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1d1fad5034ccb3f56aa5328368f6024c6d712db" translate="yes" xml:space="preserve">
          <source>\[r(i, k) \leftarrow s(i, k) - max [ a(i, k') + s(i, k') \forall k' \neq k ]\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa4c0db3b7864a2d406c092e8cdc4009566083de" translate="yes" xml:space="preserve">
          <source>\[r_{t+1}(i, k) = \lambda\cdot r_{t}(i, k) + (1-\lambda)\cdot r_{t+1}(i, k)\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a93038df8e707b3676b9f1dca71196afcda01748" translate="yes" xml:space="preserve">
          <source>\[s = \frac{b - a}{max(a, b)}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5018a2cca1ead247f7aa8d74f59ad3d866117a8" translate="yes" xml:space="preserve">
          <source>\[s(k) = \frac{\mathrm{Tr}(B_k)}{\mathrm{Tr}(W_k)} \times \frac{N - k}{k - 1}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab966207fd4ba1f52b6607f8e8a42fee44aa232e" translate="yes" xml:space="preserve">
          <source>\[v = 2 \cdot \frac{h \cdot c}{h + c}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6660d7adfa67de5cfeb78361325dfe02bc1ec82" translate="yes" xml:space="preserve">
          <source>\[w \leftarrow w - \eta (\alpha \frac{\partial R(w)}{\partial w} + \frac{\partial L(w^T x_i + b, y_i)}{\partial w})\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b52f18be8f1857bea899749b4c7627e54e454737" translate="yes" xml:space="preserve">
          <source>\[w \leftarrow w - \eta (\alpha \frac{\partial R(w)}{\partial w} + \frac{\partial Loss}{\partial w})\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0035659ebd39a2be4fa3daf32c625e49f013246" translate="yes" xml:space="preserve">
          <source>\[x_i = W h_i + \mu + \epsilon\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8b388e281ca8e6334d43ce9734202c410c57cc3" translate="yes" xml:space="preserve">
          <source>\[x_i^{t+1} = x_i^t + m(x_i^t)\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2698212d1558542a91906a4257038de493aec6bc" translate="yes" xml:space="preserve">
          <source>\[y = \textrm{sigmoid}(X\beta - \textrm{offset}) + \epsilon = \frac{1}{1 + \textrm{exp}(- X\beta + \textrm{offset})} + \epsilon\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35c4f7c4adbdf891119576a9364a0198d8067cd8" translate="yes" xml:space="preserve">
          <source>\[z = [x_1, x_2, x_1 x_2, x_1^2, x_2^2]\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc736a2908f556978dbd34b11d3c83b32582ca9" translate="yes" xml:space="preserve">
          <source>\[|x+y| \leq |x| + |y|\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2463242ba416d424646e07f845a361e3f4da0dae" translate="yes" xml:space="preserve">
          <source>\[||A||_{2 1} = \sum_i \sqrt{\sum_j a_{ij}^2}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8505f39fdca6c5194a2cedd052d7d782d5f5198e" translate="yes" xml:space="preserve">
          <source>\[||A||_{Fro} = \sqrt{\sum_{ij} a_{ij}^2}\]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8541241ddb96eebbcdf0b8ae02dac06bbbb0c45b" translate="yes" xml:space="preserve">
          <source>a &amp;ldquo;noise&amp;rdquo; term, consisting of an RBF kernel contribution, which shall explain the correlated noise components such as local weather phenomena, and a WhiteKernel contribution for the white noise. The relative amplitudes and the RBF&amp;rsquo;s length scale are further free parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6553126c0697a5621c2c5e6dcff12d73cf6261a" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;#gridsearch-scoring&quot;&gt;score function&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="142fa63997084030cbf35690e1fd3db283492550" translate="yes" xml:space="preserve">
          <source>a cross-validation scheme; and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15c0893dd4ae7d2a43a87255b6f6702ed8c200f7" translate="yes" xml:space="preserve">
          <source>a folder pointed by the JOBLIB_TEMP_FOLDER environment variable,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ded93ba3bb666a39ddf84ee0cab187d8350457fc" translate="yes" xml:space="preserve">
          <source>a generalization of this dataset approach</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3ca12b4cb3b79a196c2ee46ce1be3a91b70fe36" translate="yes" xml:space="preserve">
          <source>a long term, smooth rising trend is to be explained by an RBF kernel. The RBF kernel with a large length-scale enforces this component to be smooth; it is not enforced that the trend is rising which leaves this choice to the GP. The specific length-scale and the amplitude are free hyperparameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70be59080e96ac416e034711314715635a2cfba6" translate="yes" xml:space="preserve">
          <source>a matrix of term/token counts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="159e16be77a274f6c51c16d2a61f0e8895526fd3" translate="yes" xml:space="preserve">
          <source>a method for searching or sampling candidates;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11e7ac1bbc0e6e34c48a0334becaae5bf1ae3ed9" translate="yes" xml:space="preserve">
          <source>a more intricate variant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f45aaace4d32289e988c4f59f6d396f2043476f" translate="yes" xml:space="preserve">
          <source>a parameter space;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01b2eda2b1ccd5d6bdb0e5827ea7cfabe7f2ec6c" translate="yes" xml:space="preserve">
          <source>a seasonal component, which is to be explained by the periodic ExpSineSquared kernel with a fixed periodicity of 1 year. The length-scale of this periodic component, controlling its smoothness, is a free parameter. In order to allow decaying away from exact periodicity, the product with an RBF kernel is taken. The length-scale of this RBF component controls the decay time and is a further free parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="597a2fab7da53ee40527d8bc376cd90cf42dfd6e" translate="yes" xml:space="preserve">
          <source>a way to extract features from instances</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0cf1b4bd982a092e07a74886218ec8afbefa43f" translate="yes" xml:space="preserve">
          <source>a way to stream instances</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ec40370cf44d28b4935c8aed54047eb0e251337" translate="yes" xml:space="preserve">
          <source>absolute additive value to variances</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2bee247c22e4cb5996fc97d96dae949021b41fd" translate="yes" xml:space="preserve">
          <source>accuracy_score of self.predict(X) versus y</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98fbd6d81c140eb903fe3dc307cda5c5ef511828" translate="yes" xml:space="preserve">
          <source>additional arguments will be passed to the requested metric</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ef7003b67aac1f9435353437937dd12d98e5942" translate="yes" xml:space="preserve">
          <source>additional keyword arguments for the metric function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba14b50f88426d2bce38e07832c450379f400809" translate="yes" xml:space="preserve">
          <source>adjacency matrix of a graph,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96575a18605696f1b5be8dd1c65ad10050ad7d84" translate="yes" xml:space="preserve">
          <source>adjusted Rand index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cd5fbe6eab2524245b0d201d2c7b8c6c94ae7c7" translate="yes" xml:space="preserve">
          <source>adjusted mutual information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e4c352f64cc111d0bca352b75f517ea62dad5be" translate="yes" xml:space="preserve">
          <source>algorithm to use for nearest neighbors search, passed to neighbors.NearestNeighbors instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e429ab36709e3b1899e09ec3be150a71e0f0784" translate="yes" xml:space="preserve">
          <source>all components share the same general covariance matrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc195b52fa003ccbbf979b9307151baea6b44517" translate="yes" xml:space="preserve">
          <source>all the values of alpha along the path for the different folds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c06bfc2b92d4dbbca0614637d826f0d549aa1ff4" translate="yes" xml:space="preserve">
          <source>allows prediction without prior fitting (based on the GP prior)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d03ca4a41927e42279d3bf8f0909a362283ada05" translate="yes" xml:space="preserve">
          <source>alternatively, the first column stores target values, and the second data values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba7d54ecd1917afe34b6dae3c6c0678f98233ce4" translate="yes" xml:space="preserve">
          <source>an estimator (regressor or classifier such as &lt;code&gt;sklearn.svm.SVC()&lt;/code&gt;);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a952072b42fd970b83503a7505c302068a13a6f5" translate="yes" xml:space="preserve">
          <source>an incremental algorithm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff12ff2686bbfa204aee9bf76cff51625341c8d" translate="yes" xml:space="preserve">
          <source>an iterable which yields either str, unicode or file objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="772abafb3e150da1eff7d829a9f59ba09dbbd388" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;digits.target&lt;/code&gt; gives the ground truth for the digit dataset, that is the number corresponding to each digit image that we are trying to learn:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e472995eaa87739b06b355f499896708de8f139" translate="yes" xml:space="preserve">
          <source>and Misclassification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f312ce3e7e3d19af1e7bbd8bf3f9d328b87c3416" translate="yes" xml:space="preserve">
          <source>and \(H(C)\) is the &lt;strong&gt;entropy of the classes&lt;/strong&gt; and is given by:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0611d2f9d75336b54bd563217a5bfc1cebbcd704" translate="yes" xml:space="preserve">
          <source>and \(\ell_1\)\(\ell_2\) reads:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c1807fcec5685492440f4b4fb0af1ab3280692" translate="yes" xml:space="preserve">
          <source>and \(\nu = 5/2\):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74a94202d292312aa4c14454af46d38d26d50dac" translate="yes" xml:space="preserve">
          <source>and all regression losses below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="146f0922de0687a511bbc366c977dc3aad3e2d5b" translate="yes" xml:space="preserve">
          <source>and as a &lt;code&gt;dict&lt;/code&gt; in &lt;code&gt;named_steps&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c61c29db1fd3d600787a4b79e0f46756c1e73d49" translate="yes" xml:space="preserve">
          <source>and fed to a hasher with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b02e3e8b45d5e3b4f158d775d76e9a6639ee0f9" translate="yes" xml:space="preserve">
          <source>and the regularized objective function is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d192439d84ad5782fbb8d648a968c2c289213e8" translate="yes" xml:space="preserve">
          <source>and the vector of raw tf-idfs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ded875ce2892ebec393a64b1bd941e62f85c06ee" translate="yes" xml:space="preserve">
          <source>and we can use Maximum A Posteriori (MAP) estimation to estimate \(P(y)\) and \(P(x_i \mid y)\); the former is then the relative frequency of class \(y\) in the training set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68a09ddc9c2934ebb24049c72d3681f3723fa992" translate="yes" xml:space="preserve">
          <source>and we select the class \(k\) which maximizes this conditional probability.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa213ecc242d534953fc383131a0270756c286da" translate="yes" xml:space="preserve">
          <source>angle (not used in the exact method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74bac8cea1c60f677f28dac93e311a4e22af85f3" translate="yes" xml:space="preserve">
          <source>any additional parameters, such as &lt;code&gt;beta&lt;/code&gt; or &lt;code&gt;labels&lt;/code&gt; in &lt;a href=&quot;generated/sklearn.metrics.f1_score#sklearn.metrics.f1_score&quot;&gt;&lt;code&gt;f1_score&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c33c4cea9fb7beeca35e91bcc8184bfe85e761da" translate="yes" xml:space="preserve">
          <source>are popular choices for learning functions that are not infinitely differentiable (as assumed by the RBF kernel) but at least once (\(\nu = 3/2\)) or twice differentiable (\(\nu = 5/2\)).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="699e8ae92ca31d0753b1eacb9fbc3f555d78fbd6" translate="yes" xml:space="preserve">
          <source>area</source>
          <target state="translated">area</target>
        </trans-unit>
        <trans-unit id="875504e90ff6da84e66e3585108530be84f0569a" translate="yes" xml:space="preserve">
          <source>area (mean):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43625672859c9234855c14586ffca9f624987854" translate="yes" xml:space="preserve">
          <source>area (standard error):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4da84e63d94c16b5bb44cb3192414720684cc29d" translate="yes" xml:space="preserve">
          <source>area (worst):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3030e728f154bf51419109efb93b6b8aeec9a976" translate="yes" xml:space="preserve">
          <source>args</source>
          <target state="translated">args</target>
        </trans-unit>
        <trans-unit id="0d83b50e1fbcae40e90670094d5d538020eb07ad" translate="yes" xml:space="preserve">
          <source>arpack :</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="963af96bf4bafdfa48ede0bad65d74a5c483740d" translate="yes" xml:space="preserve">
          <source>array of indices: Array of categorical feature indices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e15d0b5f4ad690bfd25c5b230ebf2c5a7783700b" translate="yes" xml:space="preserve">
          <source>array-like of shape (n_classifiers, n_samples, n_classes)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef55815b84c5668714a56a890167bccc1846fc26" translate="yes" xml:space="preserve">
          <source>array-like of shape (n_samples, n_classifiers), being class labels predicted by each classifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b1e0d3bdde56527d9f1f1cc52976cb2ce8e483c" translate="yes" xml:space="preserve">
          <source>assume_finite:</source>
          <target state="translated">assume_finite:</target>
        </trans-unit>
        <trans-unit id="42c389bc6edb3096d0af10fcb7ccf7ff733e26ad" translate="yes" xml:space="preserve">
          <source>auto :</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0b886d7b289aab9637727f6acb1816fb9285b21" translate="yes" xml:space="preserve">
          <source>auto : algorithm will attempt to choose the best method for input data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be210eb440b1cc80b5cce9cf91fe825324f74869" translate="yes" xml:space="preserve">
          <source>average and complete linkage perform well on cleanly separated globular clusters, but have mixed results otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1245d91029f686045e2ab12acabf8b6dbee18dff" translate="yes" xml:space="preserve">
          <source>average uses the average of the distances of each feature of the two sets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b4a017957bb6c89fb69dcf60ea2b31cf71ac77f" translate="yes" xml:space="preserve">
          <source>average uses the average of the distances of each observation of the two sets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92bdbd0a195836c39e98be6183652f2a9f38a336" translate="yes" xml:space="preserve">
          <source>avg / total</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0959db8ebd685a591a8fb3384e138131c034ae81" translate="yes" xml:space="preserve">
          <source>axis used to compute the means and standard deviations along. If 0, independently standardize each feature, otherwise (if 1) standardize each sample.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3108f83015352a2da77ab226e6b1b15fd698f2b6" translate="yes" xml:space="preserve">
          <source>axis used to compute the medians and IQR along. If 0, independently scale each feature, otherwise (if 1) scale each sample.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="280af64c1f5a83f3b9f1f4edd7fdd546e6581958" translate="yes" xml:space="preserve">
          <source>axis used to normalize the data along. If 1, independently normalize each sample, otherwise (if 0) normalize each feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e5a2c0e9b14ae0b7ec59487570cdd9023c07e74" translate="yes" xml:space="preserve">
          <source>axis used to scale along. If 0, independently scale each feature, otherwise (if 1) scale each sample.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d86429f168397ead82dd6dc020cd087dc3302a8" translate="yes" xml:space="preserve">
          <source>bandwidth</source>
          <target state="translated">bandwidth</target>
        </trans-unit>
        <trans-unit id="1405df66cbe219b0bf6355bc3d60361a8376b6b4" translate="yes" xml:space="preserve">
          <source>base</source>
          <target state="translated">base</target>
        </trans-unit>
        <trans-unit id="743540abf1878d96f997b10bc662b2d254b4b267" translate="yes" xml:space="preserve">
          <source>be the proportion of class k observations in node \(m\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ec0ddb44c78153bd1b8ee3c24fd8b48910fee41" translate="yes" xml:space="preserve">
          <source>best l1_ratio obtained by cross-validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32d83a5c97de73b67d2b568cec2f6fc37cbd5d24" translate="yes" xml:space="preserve">
          <source>binarizes labels in a one-vs-all fashion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c10b368f07fa83e551b02c82861cc8221fdd6139" translate="yes" xml:space="preserve">
          <source>branching factor, threshold, optional global clusterer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="768fe50a7a22e4753c2ea80f901b57f2d08decf9" translate="yes" xml:space="preserve">
          <source>building the word-mapping requires a full pass over the dataset hence it is not possible to fit text classifiers in a strictly online manner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4dd4d8a033871069967870a31e158c8c40402a5" translate="yes" xml:space="preserve">
          <source>bunch.data: list, length [n_samples] bunch.target: array, shape [n_samples] bunch.filenames: list, length [n_classes] bunch.DESCR: a description of the dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e03275ac8578bb5fce43fe82825f8726ee1c7b6" translate="yes" xml:space="preserve">
          <source>bunch.data: sparse matrix, shape [n_samples, n_features] bunch.target: array, shape [n_samples] bunch.target_names: list, length [n_classes] bunch.DESCR: a description of the dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d18e632262a2dea6a7af8d1c5c8ae606fd55672" translate="yes" xml:space="preserve">
          <source>but uses much less memory, and is faster for large arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41de41903a2925cc2a69f7bc9cdc816ca89c5698" translate="yes" xml:space="preserve">
          <source>by multilabel sample</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba3cc415a112f0134c084a1145e1acc0a99416aa" translate="yes" xml:space="preserve">
          <source>calculate one or more scores and timings for each CV split</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcda0ad098bfca065eb2e29d6721689e8109319f" translate="yes" xml:space="preserve">
          <source>calculate score for each CV split</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="384509ed5413ccc81328cf8c55cc6af078b8c444" translate="yes" xml:space="preserve">
          <source>calibration</source>
          <target state="translated">calibration</target>
        </trans-unit>
        <trans-unit id="1ec43d3a00217a11d8c34236534a25f67e36acb7" translate="yes" xml:space="preserve">
          <source>callable : use passed in function as affinity the function takes in data matrix (n_samples, n_features) and return affinity matrix (n_samples, n_samples).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="275f43cade9bcfa05b7d9f40e9eef079d44776d3" translate="yes" xml:space="preserve">
          <source>callable that gets invoked every five iterations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8daea4b2d97994f6c4a6cb9e3afb105c55c0e4cc" translate="yes" xml:space="preserve">
          <source>category_1_folder/</source>
          <target state="translated">category_1_folder/</target>
        </trans-unit>
        <trans-unit id="e06b3bba32f6d0670d4d1b761e2bef1f9b254870" translate="yes" xml:space="preserve">
          <source>category_2_folder/</source>
          <target state="translated">category_2_folder/</target>
        </trans-unit>
        <trans-unit id="472780054f36c82498bd47317beecb779b85953d" translate="yes" xml:space="preserve">
          <source>chi2 statistics of each feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec737c6e2a9746ab56cb3ccd795b91c8fcaa746" translate="yes" xml:space="preserve">
          <source>class 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a881c3a5642d3fff34f7076f148e8ffa4c71a834" translate="yes" xml:space="preserve">
          <source>class 2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa8a944846d0be63b91156a52be840770730db19" translate="yes" xml:space="preserve">
          <source>class 3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d76c34c79cf00add93e463054fe4592f63967161" translate="yes" xml:space="preserve">
          <source>class name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1f1ff4c22b07b2cf987fd366297ab4386814cc0" translate="yes" xml:space="preserve">
          <source>class used to bin values as &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt; based on a parameter &lt;code&gt;threshold&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d1dfeec34fdc9a5874f2dc3829878f1f054de2f" translate="yes" xml:space="preserve">
          <source>class used to wrap the functionality of label_binarize and allow for fitting to classes independently of the transform operation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef958ab46a4f3085af1d4d4f55658cb4444ca230" translate="yes" xml:space="preserve">
          <source>class:</source>
          <target state="translated">class:</target>
        </trans-unit>
        <trans-unit id="338184fce04a55616308c85f1053dfc02cc466a8" translate="yes" xml:space="preserve">
          <source>class:&lt;code&gt;ParameterGrid&lt;/code&gt; to perform a full parallelized parameter search.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f2f5dcd9bb9847311a205d4bbad5114fc8df872" translate="yes" xml:space="preserve">
          <source>class_0</source>
          <target state="translated">class_0</target>
        </trans-unit>
        <trans-unit id="3e6e8590c7280488ebf4482c61b3eba03092b499" translate="yes" xml:space="preserve">
          <source>class_0 (59), class_1 (71), class_2 (48)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44edd77144f7e85ce7d95aa03815b2f9c8f03aa4" translate="yes" xml:space="preserve">
          <source>class_1</source>
          <target state="translated">class_1</target>
        </trans-unit>
        <trans-unit id="517e3e28ddd13b137f8ae69710760dc3aed362c5" translate="yes" xml:space="preserve">
          <source>class_2</source>
          <target state="translated">class_2</target>
        </trans-unit>
        <trans-unit id="49061e96f40a33a23aa888e4a796825e63255147" translate="yes" xml:space="preserve">
          <source>classifier</source>
          <target state="translated">classifier</target>
        </trans-unit>
        <trans-unit id="dadef8fc0235b10b9b83de80df90c9c0c57a4a14" translate="yes" xml:space="preserve">
          <source>classifier 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ee34a81f762d169fbe2f4bd5ac5f7cffea9dbe2" translate="yes" xml:space="preserve">
          <source>classifier 1 -&amp;gt; class 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca97944a06715b3cb9e12f8ceaa39c7cae0bb222" translate="yes" xml:space="preserve">
          <source>classifier 1 -&amp;gt; class 2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b68460bc9627ad52f00dad534db4a2a4a720ea3d" translate="yes" xml:space="preserve">
          <source>classifier 2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42bcae87b69a4330ca041e8e14ab033d760a7ceb" translate="yes" xml:space="preserve">
          <source>classifier 2 -&amp;gt; class 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d0f98f90fb967dd4d0a9a66d74756bd0ba23fae" translate="yes" xml:space="preserve">
          <source>classifier 3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0a723d27a786dc9cc89c6d9f8907012bcff7eb9" translate="yes" xml:space="preserve">
          <source>classifier 3 -&amp;gt; class 2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da68bf3a55223d19ffeabebe48b0af570d763307" translate="yes" xml:space="preserve">
          <source>cluster</source>
          <target state="translated">cluster</target>
        </trans-unit>
        <trans-unit id="9bfb49df377e36b59e2f6cfc7e232ccb84fd50ab" translate="yes" xml:space="preserve">
          <source>cluster labels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8816f462ce890fa01069c293ae2a03ba99c1a4ab" translate="yes" xml:space="preserve">
          <source>cluster labels are used to define the color of the nodes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a736884f8edf825c37a9a43f300f5a1657db27" translate="yes" xml:space="preserve">
          <source>cluster labels for each feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d0b94f24b1ac328c001170267adec0d56cf11b0" translate="yes" xml:space="preserve">
          <source>cluster labels for each point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80323c62cb76a1d48b705e4db05daa0c1bee9de3" translate="yes" xml:space="preserve">
          <source>cluster labels to evaluate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8442d9ec32e96f37d6b3bc820ff1bf30dd0748cd" translate="yes" xml:space="preserve">
          <source>cluster.bicluster</source>
          <target state="translated">cluster.bicluster</target>
        </trans-unit>
        <trans-unit id="629961e40a92425da1b8a42752f437732a932b77" translate="yes" xml:space="preserve">
          <source>coefficient in the convex combination used for the computation of the shrunk estimate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb1f60878b3e8e16fe2e601abdac82db4be77e54" translate="yes" xml:space="preserve">
          <source>coefficients of support vectors in decision function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9934c20e1c783b884e8837ea9cfd6a44766eb618" translate="yes" xml:space="preserve">
          <source>compactness (mean):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2e31b4f56b402fff8f7309e794c648cb07d6b7a" translate="yes" xml:space="preserve">
          <source>compactness (perimeter^2 / area - 1.0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2575965731d439ca8f5974fc21a3de4a710a0107" translate="yes" xml:space="preserve">
          <source>compactness (standard error):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f9a52e442c2c59f3b9801122b100780b543afac" translate="yes" xml:space="preserve">
          <source>compactness (worst):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7f7346844ecf89dd54561ce268a5450bbe9faa3" translate="yes" xml:space="preserve">
          <source>compl</source>
          <target state="translated">compl</target>
        </trans-unit>
        <trans-unit id="14e88fc8c825bef0b09b2aa5538812ac3d12eedb" translate="yes" xml:space="preserve">
          <source>complete or maximum linkage uses the maximum distances between all features of the two sets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaab4bb083aeed01576e53507898ccba20d0e32a" translate="yes" xml:space="preserve">
          <source>complete or maximum linkage uses the maximum distances between all observations of the two sets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3826f637a101290ddd72465ff86a6161c3a24dd1" translate="yes" xml:space="preserve">
          <source>completeness score</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46e7f996428200e640e741c2f2658ef6c43df001" translate="yes" xml:space="preserve">
          <source>components extracted from the data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="537bac49fb381519e179be6b0008c6ba0263e54a" translate="yes" xml:space="preserve">
          <source>compose</source>
          <target state="translated">compose</target>
        </trans-unit>
        <trans-unit id="853865685357b7715435e4292bbb80ec3ca537a1" translate="yes" xml:space="preserve">
          <source>concave points (mean):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f93f0ad62935e7bc78205e47843a74f80563830" translate="yes" xml:space="preserve">
          <source>concave points (number of concave portions of the contour)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00384f801bd4e68f737da1d4ff3aa77676b89a1d" translate="yes" xml:space="preserve">
          <source>concave points (standard error):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7253e71ccba85bf752f22f5c07a0a4f026093942" translate="yes" xml:space="preserve">
          <source>concave points (worst):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d057eea2fde2c20650ef437cc7415efa350c1a5f" translate="yes" xml:space="preserve">
          <source>concavity (mean):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10297dd1a91a6cd1b04f3e4264d0e8f509d11b06" translate="yes" xml:space="preserve">
          <source>concavity (severity of concave portions of the contour)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="641320a8269da5f0f9c2ac6dd82833e87ba08fef" translate="yes" xml:space="preserve">
          <source>concavity (standard error):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c947723d66e0f5429cc4465b2618332021a43924" translate="yes" xml:space="preserve">
          <source>concavity (worst):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4fabb6040f132bd597c7ece027495ca447d7963" translate="yes" xml:space="preserve">
          <source>conda install python-graphviz</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="425be0ecc26fc7ec480f9ed590313a845de4c45c" translate="yes" xml:space="preserve">
          <source>config_context()</source>
          <target state="translated">config_context()</target>
        </trans-unit>
        <trans-unit id="c6de0f41c40c54bee56c2d51201f2e69f28d5934" translate="yes" xml:space="preserve">
          <source>connectivity matrix. Defines for each sample the neighboring samples following a given structure of the data. The matrix is assumed to be symmetric and only the upper triangular half is used. Default is None, i.e, the Ward algorithm is unstructured.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2fe712466b598f517e89242a1a3d357a3aa491b" translate="yes" xml:space="preserve">
          <source>constant values, constant rows, or constant columns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c25c6a8d5918897a208eb291b69befd03b675371" translate="yes" xml:space="preserve">
          <source>container_folder/</source>
          <target state="translated">container_folder/</target>
        </trans-unit>
        <trans-unit id="3a3b1b701f0dd7f7ed87cb7cb0b9ea413d56a62c" translate="yes" xml:space="preserve">
          <source>convenience function for combining the outputs of multiple transformer objects applied to column subsets of the original feature space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f3502fbe78001c322f963bffec209ace5e9e5e8" translate="yes" xml:space="preserve">
          <source>convenience function for simplified feature union construction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da766a42748699442b4341f92a23b70474615fe1" translate="yes" xml:space="preserve">
          <source>convenience function for simplified pipeline construction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dde0b99f8240db14164c61a4310d5d4678e04dd9" translate="yes" xml:space="preserve">
          <source>correlated rows or columns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62b7f7bf504d9ca6e7ab1e214005273845de25b1" translate="yes" xml:space="preserve">
          <source>counts[i] contains the number of pairs of points with distance less than or equal to r[i]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d591af8d11b931f893168804de1dc4c09a11d0e1" translate="yes" xml:space="preserve">
          <source>covariance</source>
          <target state="translated">covariance</target>
        </trans-unit>
        <trans-unit id="bd49faa8585850b3df735710fc4d7aa1203e2b4c" translate="yes" xml:space="preserve">
          <source>covariance.OAS</source>
          <target state="translated">covariance.OAS</target>
        </trans-unit>
        <trans-unit id="29b283f6f5d72abbc3939d6ac4f478f32fc81f4e" translate="yes" xml:space="preserve">
          <source>cross_decomposition</source>
          <target state="translated">cross_decomposition</target>
        </trans-unit>
        <trans-unit id="280c00edf2c52e904e93b5e4324a3fb8a9dfd00f" translate="yes" xml:space="preserve">
          <source>cross_decomposition.CCA</source>
          <target state="translated">cross_decomposition.CCA</target>
        </trans-unit>
        <trans-unit id="face2d0539df65ec949c2bfcf7bdb62bb75dc277" translate="yes" xml:space="preserve">
          <source>damping, sample preference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf8b4a74fa97e6d691329ddd20a59dac87666e41" translate="yes" xml:space="preserve">
          <source>data structure: &lt;em&gt;intrinsic dimensionality&lt;/em&gt; of the data and/or &lt;em&gt;sparsity&lt;/em&gt; of the data. Intrinsic dimensionality refers to the dimension \(d \le D\) of a manifold on which the data lies, which can be linearly or non-linearly embedded in the parameter space. Sparsity refers to the degree to which the data fills the parameter space (this is to be distinguished from the concept as used in &amp;ldquo;sparse&amp;rdquo; matrices. The data matrix may have no zero entries, but the &lt;strong&gt;structure&lt;/strong&gt; can still be &amp;ldquo;sparse&amp;rdquo; in this sense).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60cdec9471ebda9dcb039464ac0bbef95b547c8c" translate="yes" xml:space="preserve">
          <source>data values are stored in the column &amp;lsquo;data&amp;rsquo;, and target values in the column &amp;lsquo;label&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="061ac740047f24dd9f97cb2877be98357cf56f7b" translate="yes" xml:space="preserve">
          <source>datasets</source>
          <target state="translated">datasets</target>
        </trans-unit>
        <trans-unit id="f71c7d17362f48644a64c7d5d864c30f9f3e40bf" translate="yes" xml:space="preserve">
          <source>decomposition</source>
          <target state="translated">decomposition</target>
        </trans-unit>
        <trans-unit id="1ce8f69466a333a9c8ffda55a36f16b39da637ba" translate="yes" xml:space="preserve">
          <source>decomposition. For this method, M must be an array or matrix type. This method should be avoided for large problems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d42f308c12ab83dee78109067085c128ac3e445" translate="yes" xml:space="preserve">
          <source>decomposition.NMF</source>
          <target state="translated">decomposition.NMF</target>
        </trans-unit>
        <trans-unit id="68d6b466ed92f7d506319dee1571b82af058c3c5" translate="yes" xml:space="preserve">
          <source>decomposition.PCA</source>
          <target state="translated">decomposition.PCA</target>
        </trans-unit>
        <trans-unit id="63c818289552a4a952bcbaf743a553ce051a71b7" translate="yes" xml:space="preserve">
          <source>deep belief nets. Neural Computation 18, pp 1527-1554. &lt;a href=&quot;http://www.cs.toronto.edu/~hinton/absps/fastnc.pdf&quot;&gt;http://www.cs.toronto.edu/~hinton/absps/fastnc.pdf&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc94dcd0ce3a30c1b6e7379bfa83c868c50c7987" translate="yes" xml:space="preserve">
          <source>def my_g(x):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22b321555223811f7442d499f322ddb2977afee8" translate="yes" xml:space="preserve">
          <source>dict with classes as the keys, and the path of coefficients obtained during cross-validating across each fold and then across each Cs after doing an OvR for the corresponding class as values. If the &amp;lsquo;multi_class&amp;rsquo; option is set to &amp;lsquo;multinomial&amp;rsquo;, then the coefs_paths are the coefficients corresponding to each class. Each dict value has shape &lt;code&gt;(n_folds, len(Cs_), n_features)&lt;/code&gt; or &lt;code&gt;(n_folds, len(Cs_), n_features + 1)&lt;/code&gt; depending on whether the intercept is fit or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f46ccf8f4eb5dbc73b35401555b82925feda2c77" translate="yes" xml:space="preserve">
          <source>dict with classes as the keys, and the values as the grid of scores obtained during cross-validating each fold, after doing an OvR for the corresponding class. If the &amp;lsquo;multi_class&amp;rsquo; option given is &amp;lsquo;multinomial&amp;rsquo; then the same scores are repeated across all classes, since this is the multinomial class. Each dict value has shape (n_folds, len(Cs))</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6911226990a1ada9477fcf3e223e0501176ae27d" translate="yes" xml:space="preserve">
          <source>dictionary atoms extracted from the data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed52e2b025679157e37e0bc54abfc34ddbe124ed" translate="yes" xml:space="preserve">
          <source>discrete (int) or continuous (float)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2aaca8c5b95653e9cde1536bdbddb5195f0318c" translate="yes" xml:space="preserve">
          <source>discriminant_analysis</source>
          <target state="translated">discriminant_analysis</target>
        </trans-unit>
        <trans-unit id="5ff80d2c4a0500b28afae3ff7faa711b102a0e00" translate="yes" xml:space="preserve">
          <source>distance function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba1d369d1bcba340355fd0070852a034dba66122" translate="yes" xml:space="preserve">
          <source>distances betweens pairs of elements of X and Y.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de0133aa19c5a9f91176cdb8b7df9a7a8db1f6af" translate="yes" xml:space="preserve">
          <source>distances[i] is the distance between the i-th row in X and the argmin[i]-th row in Y.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e70d41694edaaa54bd2e646dc7298f28d8b6a1a3" translate="yes" xml:space="preserve">
          <source>due to the incorporation of prior information, variational solutions have less pathological special cases than expectation-maximization solutions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="829c3804401b0727f70f73d4415e162400cbe57b" translate="yes" xml:space="preserve">
          <source>dummy</source>
          <target state="translated">dummy</target>
        </trans-unit>
        <trans-unit id="68129c50d1f39178001938677e4b22731600d75c" translate="yes" xml:space="preserve">
          <source>each &lt;strong&gt;individual token occurrence frequency&lt;/strong&gt; (normalized or not) is treated as a &lt;strong&gt;feature&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93d426dc79c22590f6d4ab1122e112a9cb92b598" translate="yes" xml:space="preserve">
          <source>each component has its own diagonal covariance matrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67ea39fbc9a7f005ad3a445394febe5ce015d1f4" translate="yes" xml:space="preserve">
          <source>each component has its own general covariance matrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf9e5dcc1be13aa0390cbc461d1b8d18324c95a6" translate="yes" xml:space="preserve">
          <source>each component has its own single variance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c196496f37f20fa82d73c10a8a67059bf6fe33e" translate="yes" xml:space="preserve">
          <source>each element is a numpy double array listing the distances corresponding to indices in i.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b0c121355accfc37a632253fd5a19be3e97ab0b" translate="yes" xml:space="preserve">
          <source>each element is a numpy integer array listing the indices of neighbors of the corresponding point. Note that unlike the results of a k-neighbors query, the returned neighbors are not sorted by distance by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c4aab31b948aab90bc8499da68721527ae72364" translate="yes" xml:space="preserve">
          <source>each entry gives the list of distances to the neighbors of the corresponding point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1233c246204da26d074f783cc7312daff1490fe2" translate="yes" xml:space="preserve">
          <source>each entry gives the list of indices of neighbors of the corresponding point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec4923ab99047dec4924d764c71c7aa1925c0465" translate="yes" xml:space="preserve">
          <source>each entry gives the number of neighbors within a distance r of the corresponding point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f277e949c102674b302389182d0879466eb090cf" translate="yes" xml:space="preserve">
          <source>early capture of pickling errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97df8055f2826eaf7ca93c4ef0bd5d541fc08371" translate="yes" xml:space="preserve">
          <source>early exaggeration factor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cecbdd2cd4478519df349f0b6e3094f5122e234" translate="yes" xml:space="preserve">
          <source>encode categorical features using a one-hot aka one-of-K scheme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d286af7e8122038faee0158e1a053d0b146aea" translate="yes" xml:space="preserve">
          <source>encode categorical features using a one-hot or ordinal encoding scheme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f57c1f768a270899efcc09e6c1185ceea1ac398f" translate="yes" xml:space="preserve">
          <source>encodes target labels with values between 0 and n_classes-1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56040ec464d8db3812caad21cb0a8f8b139e21b2" translate="yes" xml:space="preserve">
          <source>ensemble</source>
          <target state="translated">ensemble</target>
        </trans-unit>
        <trans-unit id="c8b30e3581dff98ad4feeac38af35e29d758a5ab" translate="yes" xml:space="preserve">
          <source>ensemble.partial_dependence</source>
          <target state="translated">ensemble.partial_dependence</target>
        </trans-unit>
        <trans-unit id="be94d4d905a1912c88ec136d34dfdcd834b0eb90" translate="yes" xml:space="preserve">
          <source>epsilon Support Vector Machine for regression implemented with libsvm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb51a9f20832adcd8270881697d80ce27adf277b" translate="yes" xml:space="preserve">
          <source>error correcting output codes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d91165bc0abb5d052d7e062abe76b1f331c1cae4" translate="yes" xml:space="preserve">
          <source>estimated precision of the noise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ad1a4d1bdbf74df3493b2ff0cec788fd73a2e29" translate="yes" xml:space="preserve">
          <source>estimated precision of the weights.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2efbec2ff8a2de210797189c046a6711d276014" translate="yes" xml:space="preserve">
          <source>estimated precisions of the weights.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eec76aebb5674a0c35211b09c1193f907810db9b" translate="yes" xml:space="preserve">
          <source>estimated variance-covariance matrix of the weights</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="313802b51a80e849f31ebfc2eaba106e2cfd1cdc" translate="yes" xml:space="preserve">
          <source>estimator instance for which the check is performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb1d5846f86807baf86fefbf6e09659afb947520" translate="yes" xml:space="preserve">
          <source>eta = 1.0 / (alpha * (t + t0)) where t0 is chosen by a heuristic proposed by Leon Bottou.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dabbffd2c9e8782856a4d180772b22f342cff68" translate="yes" xml:space="preserve">
          <source>eta = eta0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2397eca51e793b8de84179a363846cb8903093c9" translate="yes" xml:space="preserve">
          <source>eta = eta0 / pow(t, power_t)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee807fabfa0972ae28740e7c44d15c7c19520c1a" translate="yes" xml:space="preserve">
          <source>eta = eta0, as long as the training keeps decreasing. Each time n_iter_no_change consecutive epochs fail to decrease the training loss by tol or fail to increase validation score by tol if early_stopping is True, the current learning rate is divided by 5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be51ea0d2df953559db847ba84b885b258389873" translate="yes" xml:space="preserve">
          <source>exceptions</source>
          <target state="translated">exceptions</target>
        </trans-unit>
        <trans-unit id="5ac3b3d5487e3cb4c6d1f6e77b9d873d1ab368a2" translate="yes" xml:space="preserve">
          <source>exposes a method &lt;code&gt;log_marginal_likelihood(theta)&lt;/code&gt;, which can be used externally for other ways of selecting hyperparameters, e.g., via Markov chain Monte Carlo.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90468236de7011f0207d02d5377234f84c63124d" translate="yes" xml:space="preserve">
          <source>exposes a method log_marginal_likelihood(theta), which can be used externally for other ways of selecting hyperparameters, e.g., via Markov chain Monte Carlo.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb73959646d4ef09860af35a24d92326099e50dc" translate="yes" xml:space="preserve">
          <source>extract feature vectors suitable for machine learning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b970d863e6098084e2db36d96a651e4ee5e772f7" translate="yes" xml:space="preserve">
          <source>feature 1: \({[-\infty, -1), [-1, 2), [2, \infty)}\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c523c44ffe3661b9a2c06fc64c248fb8cbe475" translate="yes" xml:space="preserve">
          <source>feature 2: \({[-\infty, 5), [5, \infty)}\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab6d669773f0d4a0be25bceb03bed1c68ebc97bf" translate="yes" xml:space="preserve">
          <source>feature 3: \({[-\infty, 14), [14, \infty)}\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25f0858a66b1eb33d46616701d5fd07c878fa4a3" translate="yes" xml:space="preserve">
          <source>feature agglomeration with Ward hierarchical clustering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83314e5fae249eae17e8a6f5404af15a192af434" translate="yes" xml:space="preserve">
          <source>feature matrix representing n_samples samples to be clustered</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42e030cb342262bad715032ca66c2f64979166a0" translate="yes" xml:space="preserve">
          <source>feature).</source>
          <target state="translated">feature).</target>
        </trans-unit>
        <trans-unit id="cd9652d0ce79d2e14e22b791513a56cb8e314335" translate="yes" xml:space="preserve">
          <source>feature_extraction</source>
          <target state="translated">feature_extraction</target>
        </trans-unit>
        <trans-unit id="607983b18d5053c3c743c7a4840a1691ab53717a" translate="yes" xml:space="preserve">
          <source>feature_extraction.image</source>
          <target state="translated">feature_extraction.image</target>
        </trans-unit>
        <trans-unit id="1b5d3f7db19425104b682716579740e465338c77" translate="yes" xml:space="preserve">
          <source>feature_extraction.text</source>
          <target state="translated">feature_extraction.text</target>
        </trans-unit>
        <trans-unit id="bfda08ef7416f6c3938b676b6b733da964dc0a06" translate="yes" xml:space="preserve">
          <source>feature_selection</source>
          <target state="translated">feature_selection</target>
        </trans-unit>
        <trans-unit id="4ee19399bda62f9d32cb8408307abd524b72a72e" translate="yes" xml:space="preserve">
          <source>feature_selection.RFE</source>
          <target state="translated">feature_selection.RFE</target>
        </trans-unit>
        <trans-unit id="64a8dd4089141417f99eb791cd7ce8ffef5e398e" translate="yes" xml:space="preserve">
          <source>features.</source>
          <target state="translated">features.</target>
        </trans-unit>
        <trans-unit id="e9fd04bf6632de92b37d4b6caafdd2edc31b413e" translate="yes" xml:space="preserve">
          <source>file_1.txt file_2.txt &amp;hellip; file_42.txt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1dfef8ca1cbf46f822fc9398687dbbd16bd6a8b" translate="yes" xml:space="preserve">
          <source>file_43.txt file_44.txt &amp;hellip;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdf9291bdab28f8a6207887843973b4d2ad50633" translate="yes" xml:space="preserve">
          <source>finally, you can register backends by calling register_parallel_backend. This will allow you to implement a backend of your liking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c24c07f98a8c85958e8c9f3752efdab4029a3909" translate="yes" xml:space="preserve">
          <source>fitting requires the allocation of intermediate data structures of size proportional to that of the original dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6984bef51674af0226d496904f4013ecbaa9228a" translate="yes" xml:space="preserve">
          <source>float between 0 and 1 passed to ElasticNet (scaling between l1 and l2 penalties). For &lt;code&gt;l1_ratio = 0&lt;/code&gt; the penalty is an L2 penalty. For &lt;code&gt;l1_ratio = 1&lt;/code&gt; it is an L1 penalty. For &lt;code&gt;0 &amp;lt; l1_ratio &amp;lt; 1&lt;/code&gt;, the penalty is a combination of L1 and L2 This parameter can be a list, in which case the different values are tested by cross-validation and the one giving the best prediction score is used. Note that a good choice of list of values for l1_ratio is often to put more values close to 1 (i.e. Lasso) and less close to 0 (i.e. Ridge), as in &lt;code&gt;[.1, .5, .7,
.9, .95, .99, 1]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7595912c38a05a6c2f11ad25034bcf83e4569ac0" translate="yes" xml:space="preserve">
          <source>float between 0 and 1 passed to elastic net (scaling between l1 and l2 penalties). &lt;code&gt;l1_ratio=1&lt;/code&gt; corresponds to the Lasso</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66b8eb06d59a3acde7a596e78c60d12e70810dd2" translate="yes" xml:space="preserve">
          <source>float between 0 and 1: fixed shrinkage parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="892cf819206064c3ce3c672de5bcbe86504a8328" translate="yes" xml:space="preserve">
          <source>fn (false negative) Missing result</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e28ef662a5e0dec1b2202f5c0a36e5b44286a077" translate="yes" xml:space="preserve">
          <source>for all \(i\), this relationship is simplified to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03872fe24b480396bd2f536f04d3ab1f03cfffa8" translate="yes" xml:space="preserve">
          <source>for binary targets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe6ca9cd774cfcef4eb943f4b96cc43e09fc8236" translate="yes" xml:space="preserve">
          <source>for classification metrics only: whether the python function you provided requires continuous decision certainties (&lt;code&gt;needs_threshold=True&lt;/code&gt;). The default value is False.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2944fea855cc33ca4358cc2207a3c8447a4c7fc3" translate="yes" xml:space="preserve">
          <source>for each pair of rows x in X and y in Y.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6de6495dbe566b7c5e41f1515a199e06cd815ecd" translate="yes" xml:space="preserve">
          <source>for each pair of rows x in X and y in Y. Read more in the &lt;a href=&quot;../metrics#laplacian-kernel&quot;&gt;User Guide&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="add5301d0f506716e66166aeea0fd1fb05370632" translate="yes" xml:space="preserve">
          <source>for other styles of preprocessing; examples include stemming, lemmatization, or normalizing numerical tokens, with the latter illustrated in:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e50f6431f302d24e4c6987b62ce61db74f1f2c4" translate="yes" xml:space="preserve">
          <source>for the 20 newsgroups dataset some 500 documents with 100k features in total are projected using a sparse random matrix to smaller euclidean spaces with various values for the target number of dimensions &lt;code&gt;n_components&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdddcc67d32968990003f49fce3c8695abf9b0d4" translate="yes" xml:space="preserve">
          <source>for the digits dataset, some 8x8 gray level pixels data for 500 handwritten digits pictures are randomly projected to spaces for various larger number of dimensions &lt;code&gt;n_components&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5492663e2f37c16ba73ed4089dfe1d71f904f7c0" translate="yes" xml:space="preserve">
          <source>for:</source>
          <target state="translated">for:</target>
        </trans-unit>
        <trans-unit id="406e5783ca5b3b173ffbd64fef264a51b37f652a" translate="yes" xml:space="preserve">
          <source>fp (false positive) Unexpected result</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d071cf3d3ea3c923944089331d8c7c6c23e1afeb" translate="yes" xml:space="preserve">
          <source>fractal dimension (&amp;ldquo;coastline approximation&amp;rdquo; - 1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23805dd7b541c1163732514e97b0810b75f16767" translate="yes" xml:space="preserve">
          <source>fractal dimension (mean):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b5aacbb1de395617aa675836f0cf06f734b8000" translate="yes" xml:space="preserve">
          <source>fractal dimension (standard error):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1a72b119d7fa8ff75ae37ca5cae5602f6db9755" translate="yes" xml:space="preserve">
          <source>fractal dimension (worst):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a513e11f550502dd9c04b0929821d4525f0fb8cb" translate="yes" xml:space="preserve">
          <source>from -(2 ** 31) to 2 ** 31 - 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="976593aaad1d5e5e1949bd7b435519ef7a78b123" translate="yes" xml:space="preserve">
          <source>from 0 to 2 ** 32 - 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91677d56502bc1ada4c10973edb8f9de1637675a" translate="yes" xml:space="preserve">
          <source>from scikit-learn: [&amp;lsquo;cityblock&amp;rsquo;, &amp;lsquo;cosine&amp;rsquo;, &amp;lsquo;euclidean&amp;rsquo;, &amp;lsquo;l1&amp;rsquo;, &amp;lsquo;l2&amp;rsquo;, &amp;lsquo;manhattan&amp;rsquo;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3b37bd07887cfa15f97241b4a36b3f8ddc31ce7" translate="yes" xml:space="preserve">
          <source>from scipy.spatial.distance: [&amp;lsquo;braycurtis&amp;rsquo;, &amp;lsquo;canberra&amp;rsquo;, &amp;lsquo;chebyshev&amp;rsquo;, &amp;lsquo;correlation&amp;rsquo;, &amp;lsquo;dice&amp;rsquo;, &amp;lsquo;hamming&amp;rsquo;, &amp;lsquo;jaccard&amp;rsquo;, &amp;lsquo;kulsinski&amp;rsquo;, &amp;lsquo;mahalanobis&amp;rsquo;, &amp;lsquo;minkowski&amp;rsquo;, &amp;lsquo;rogerstanimoto&amp;rsquo;, &amp;lsquo;russellrao&amp;rsquo;, &amp;lsquo;seuclidean&amp;rsquo;, &amp;lsquo;sokalmichener&amp;rsquo;, &amp;lsquo;sokalsneath&amp;rsquo;, &amp;lsquo;sqeuclidean&amp;rsquo;, &amp;lsquo;yule&amp;rsquo;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10f7b097a1398844aa3755539361641c4dc3986e" translate="yes" xml:space="preserve">
          <source>ftp ftp.cs.wisc.edu cd math-prog/cpo-dataset/machine-learn/WDBC/</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f6597920f95b6633a680aa524dd3a9a14cc90d1" translate="yes" xml:space="preserve">
          <source>full :</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f626892d30cd04459f4571971f1fb675445565ba" translate="yes" xml:space="preserve">
          <source>full name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99fdb3623cf5c6ad0283ca5c096018dd2f2ff5ad" translate="yes" xml:space="preserve">
          <source>func</source>
          <target state="translated">func</target>
        </trans-unit>
        <trans-unit id="64ebfe33bfd83ee66922b6e6e1ad073a713692b2" translate="yes" xml:space="preserve">
          <source>function to perform the transform operation of LabelBinarizer with fixed classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59be163fac927b3bca0aa517e2832cd96159b687" translate="yes" xml:space="preserve">
          <source>functions ending with &lt;code&gt;_error&lt;/code&gt; or &lt;code&gt;_loss&lt;/code&gt; return a value to minimize, the lower the better. When converting into a scorer object using &lt;a href=&quot;generated/sklearn.metrics.make_scorer#sklearn.metrics.make_scorer&quot;&gt;&lt;code&gt;make_scorer&lt;/code&gt;&lt;/a&gt;, set the &lt;code&gt;greater_is_better&lt;/code&gt; parameter to False (True by default; see the parameter description below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49911adb14be74693d9611f548795ee8ca431d7b" translate="yes" xml:space="preserve">
          <source>functions ending with &lt;code&gt;_score&lt;/code&gt; return a value to maximize, the higher the better.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2eb6eda81beffdfab5180779840402659b8f404" translate="yes" xml:space="preserve">
          <source>gaussian_process</source>
          <target state="translated">gaussian_process</target>
        </trans-unit>
        <trans-unit id="c26801d156daf28b293b07e6629090e72143b147" translate="yes" xml:space="preserve">
          <source>gaussian_process.kernels</source>
          <target state="translated">gaussian_process.kernels</target>
        </trans-unit>
        <trans-unit id="6692e220345a7e7fcf788b9370d38a06c6676af3" translate="yes" xml:space="preserve">
          <source>gaussian_process.kernels.RBF</source>
          <target state="translated">gaussian_process.kernels.RBF</target>
        </trans-unit>
        <trans-unit id="320a34cee2a448f604b06f4db1667121b5fe9dd2" translate="yes" xml:space="preserve">
          <source>gaussian_process.kernels.Sum</source>
          <target state="translated">gaussian_process.kernels.Sum</target>
        </trans-unit>
        <trans-unit id="a00a2f7eb04e4de8883b33fd6d27ccc6dfbcca63" translate="yes" xml:space="preserve">
          <source>generates all the combinations of a hyperparameter grid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15da5be471de2a2f3881e21442ec0b421110e796" translate="yes" xml:space="preserve">
          <source>get_config()</source>
          <target state="translated">get_config()</target>
        </trans-unit>
        <trans-unit id="db215ed01e3c6b621437f037cac4f2617fe3c9c8" translate="yes" xml:space="preserve">
          <source>gray level pictures of faces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfe11877618c890e73078e49ef180b84a39876f3" translate="yes" xml:space="preserve">
          <source>ground truth class labels to be used as a reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73e3ad9742fd9bb8d90908d45c6a1367fce2b0df" translate="yes" xml:space="preserve">
          <source>handles nominal/categorical features encoded as columns of arbitrary data types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce8bb4ed103038f597d1f29f07d4a4ed0bb2dc7d" translate="yes" xml:space="preserve">
          <source>handles nominal/categorical features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f69a979efea376079007b23d3885572f8b14abc" translate="yes" xml:space="preserve">
          <source>harmonic mean of the first two</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e24ea64d737dcb20137e0fb7dd6f634d1e575f8" translate="yes" xml:space="preserve">
          <source>heat kernel of the pairwise distance matrix of the samples,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b659ecdc30b0d162b28abaef99068410504b4428" translate="yes" xml:space="preserve">
          <source>helper function to emulate function total_seconds,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f05dbebb40bf79d5b19c7e84f35d7da568baefe" translate="yes" xml:space="preserve">
          <source>helper function to emulate function total_seconds, introduced in python2.7</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c71230fc13c6460d5a6a731cc29e7ccb5a89a434" translate="yes" xml:space="preserve">
          <source>homo</source>
          <target state="translated">homo</target>
        </trans-unit>
        <trans-unit id="481d9dd925d0897a2a61830a7096a697e8f2411e" translate="yes" xml:space="preserve">
          <source>homogeneity score</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e211547a57ee5426f7cdc397adf28364c006acea" translate="yes" xml:space="preserve">
          <source>hstack of results of transformers. sum_n_components is the sum of n_components (output dimension) over transformers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f857ef49c9807a11e6b3ced0a310c7988e3ddc0" translate="yes" xml:space="preserve">
          <source>hstack of results of transformers. sum_n_components is the sum of n_components (output dimension) over transformers. If any result is a sparse matrix, everything will be converted to sparse matrices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb14581be4e0bc147b76431583a995af7cd915a2" translate="yes" xml:space="preserve">
          <source>http structure :</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3ba74ec77dc2a1448f4b2e310e23c04c5c73ec7" translate="yes" xml:space="preserve">
          <source>i.e. the sum of norm of each row.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e5aee61edf102ec3993824d4e681fc9abe968c2" translate="yes" xml:space="preserve">
          <source>i.e., a document is assigned to the class that is the &lt;em&gt;poorest&lt;/em&gt; complement match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fae9fd39301eb7e657d4dad32a828cda5d7399e5" translate="yes" xml:space="preserve">
          <source>identifier</source>
          <target state="translated">identifier</target>
        </trans-unit>
        <trans-unit id="cdc8d4201171ae7c081dbd2bc89bdc10d4b99ee8" translate="yes" xml:space="preserve">
          <source>if False, use a version of Sparse PCA without components normalization and without data centering. This is likely a bug and even though it&amp;rsquo;s the default for backward compatibility, this should not be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="142907fde72868b09839dffb3d42b346dda7b78e" translate="yes" xml:space="preserve">
          <source>if None, defaults to 1.0 / n_features</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d72ec88d442491561691c2377f4fbf5fed726cb" translate="yes" xml:space="preserve">
          <source>if None:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00e0c8a127cc52804ca89c2bdef1d82093fce9b3" translate="yes" xml:space="preserve">
          <source>if True, return a tuple (d, i) of distances and indices if False, return array i</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbfcda4d6869069ed3169d0ae42ee80fdee96d44" translate="yes" xml:space="preserve">
          <source>if True, return distances to neighbors of each point if False, return only neighbors Note that unlike the query() method, setting return_distance=True here adds to the computation time. Not all distances need to be calculated explicitly for return_distance=False. Results are not sorted by default: see &lt;code&gt;sort_results&lt;/code&gt; keyword.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a762ccf619bb08d807cc41b39020bb79403d1403" translate="yes" xml:space="preserve">
          <source>if True, return only the count of points within distance r if False, return the indices of all points within distance r If return_distance==True, setting count_only=True will result in an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3185cbbefc812b8cb7e43998afb89d561e0136b0" translate="yes" xml:space="preserve">
          <source>if True, the distances and indices will be sorted before being returned. If False, the results will not be sorted. If return_distance == False, setting sort_results = True will result in an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23c17006ff2bde0dc41648a1db802b38ced198c8" translate="yes" xml:space="preserve">
          <source>if True, then distances and indices of each point are sorted on return, so that the first column contains the closest points. Otherwise, neighbors are returned in an arbitrary order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1540ed3e6765cbdc35e55deb60a7b14bb2bc801" translate="yes" xml:space="preserve">
          <source>if True, then find the shortest path on a directed graph: only progress from a point to its neighbors, not the other way around. if False, then find the shortest path on an undirected graph: the algorithm can progress from a point to its neighbors and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="233128b9570c795d7b79a57ab6fbb2e2c8e79488" translate="yes" xml:space="preserve">
          <source>if True, then query the nodes in a breadth-first manner. Otherwise, query the nodes in a depth-first manner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1365a075f84354efcb3002a52baba9706023f786" translate="yes" xml:space="preserve">
          <source>if True, use a breadth-first search. If False (default) use a depth-first search. Breadth-first is generally faster for compact kernels and/or high tolerances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09aa0772c8d45ea8037007b9d4c8b0d93a1f7243" translate="yes" xml:space="preserve">
          <source>if True, use a version of Sparse PCA with components normalization and data centering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47a1699aedc9e9a6085bcfb0ba25cbab55a7d3bc" translate="yes" xml:space="preserve">
          <source>if True, use the dual tree formalism for the query: a tree is built for the query points, and the pair of trees is used to efficiently search this space. This can lead to better performance as the number of points grows large.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2db4241ae712b2f9734eda67a8d9305b3263c81" translate="yes" xml:space="preserve">
          <source>if computed, value of the objective function (to be maximized)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ad04548314d1d31a618c8dc9a28bc287fa42ce" translate="yes" xml:space="preserve">
          <source>if not None:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56797091d2b4235a800fd7480945c5a7a63436ae" translate="yes" xml:space="preserve">
          <source>implements elastic net regression with incremental training.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f683350bd6318b3033966bc6784e590f77530f41" translate="yes" xml:space="preserve">
          <source>implements logistic regression with elastic net penalty (&lt;code&gt;SGDClassifier(loss=&quot;log&quot;, penalty=&quot;elasticnet&quot;)&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e52552e3cc8ce62615152efc019cfbcb98228549" translate="yes" xml:space="preserve">
          <source>impute</source>
          <target state="translated">impute</target>
        </trans-unit>
        <trans-unit id="f18f5966aa3198be3514cc6c062dfc8cf764d66f" translate="yes" xml:space="preserve">
          <source>in large minority among the observations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f73513a4cff4022d9f0d55470d996d9482e462f" translate="yes" xml:space="preserve">
          <source>in the IPython-console. You can then simply copy and paste the examples directly into IPython without having to worry about removing the &lt;strong&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/strong&gt; manually.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3b31f37314f7a44b8b6b2e7211e8d3cf7f181e5" translate="yes" xml:space="preserve">
          <source>in the case of method=&amp;rsquo;lars&amp;rsquo;, the objective function is only known in the form of an implicit equation (see discussion in [1])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcb869b9988843238e7c46618dbbd4d9c7ced74c" translate="yes" xml:space="preserve">
          <source>incrementally trained logistic regression (when given the parameter &lt;code&gt;loss=&quot;log&quot;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55d0ab34b06528fb4e06226f5817574418be7828" translate="yes" xml:space="preserve">
          <source>independent term in decision function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f789137fee87d6f3d13e0578691bbfcc14c4c5e9" translate="yes" xml:space="preserve">
          <source>independent term in decision function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f2f829049f6ccce96f82ffe4a5e8488e3dadd1d" translate="yes" xml:space="preserve">
          <source>index of clusters centers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dee2481eecab2fbdf4312aca77984832a8ca222" translate="yes" xml:space="preserve">
          <source>index of support vectors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eae5911e0aeabf5c10eb04d42394853554bf448a" translate="yes" xml:space="preserve">
          <source>informative tracebacks even when the error happens on the client side</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f4f19e8fccf9131775082d9be4050cfff44553b" translate="yes" xml:space="preserve">
          <source>initial value for the code, for warm restart</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a98a7442387e763443107f8e834e49128755e04d" translate="yes" xml:space="preserve">
          <source>initial value of the dictionary for warm restart scenarios</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0569a16de880c1b4065df922b4a0dff8a50464ef" translate="yes" xml:space="preserve">
          <source>initial values for the dictionary, for warm restart</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b92b5a6fc48c7b55c677f9ab541eeb1f859cd45" translate="yes" xml:space="preserve">
          <source>initialization (better for sparseness)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46f8ab7c0cff9df7cd124852e26022a6bf89e315" translate="yes" xml:space="preserve">
          <source>int</source>
          <target state="translated">int</target>
        </trans-unit>
        <trans-unit id="1178cafbd64bbbfa77f5ac0a9d5032ed88162781" translate="yes" xml:space="preserve">
          <source>integer</source>
          <target state="translated">integer</target>
        </trans-unit>
        <trans-unit id="b2c7294297926b3666fc5606ea7f4c30a18f3acd" translate="yes" xml:space="preserve">
          <source>integer 25 - 346</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee4ca4076bad786eaf8df01d4bcd749722399bcc" translate="yes" xml:space="preserve">
          <source>integer seed for the hashing algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e187e1ca2fda0174d4bc787f33a6ca5867142de" translate="yes" xml:space="preserve">
          <source>integer, to specify the number of folds in a (Stratified)KFold,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b516739ce8e327192d568094ac61554edecf3a7" translate="yes" xml:space="preserve">
          <source>integer, to specify the number of folds in a &lt;code&gt;(Stratified)KFold&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba5ba887b3181fb9757196852761a22c0a43a766" translate="yes" xml:space="preserve">
          <source>integer, to specify the number of folds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ba2786f7c3911bc0a181c32559c96c1e5b22799" translate="yes" xml:space="preserve">
          <source>integers 0-16</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dc2603a2467152b6fd08577f899dc77f57b73eb" translate="yes" xml:space="preserve">
          <source>intercept in decision function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3acf146c08bb58a5b0f62aa84198e3628b336f32" translate="yes" xml:space="preserve">
          <source>ipython command line:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="530faf42f1a18476ffa3a3c0b3cee748c544a4f9" translate="yes" xml:space="preserve">
          <source>isotonic</source>
          <target state="translated">isotonic</target>
        </trans-unit>
        <trans-unit id="8d4a5cbcb2ca0b8bd3808c9267e35560f0e54910" translate="yes" xml:space="preserve">
          <source>it can be used in a streaming (partial fit) or parallel pipeline as there is no state computed during fit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69989146732c0698330878cb3f0ec755e7101255" translate="yes" xml:space="preserve">
          <source>it does not provide IDF weighting as that would introduce statefulness in the model. A &lt;a href=&quot;generated/sklearn.feature_extraction.text.tfidftransformer#sklearn.feature_extraction.text.TfidfTransformer&quot;&gt;&lt;code&gt;TfidfTransformer&lt;/code&gt;&lt;/a&gt; can be appended to it in a pipeline if required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1779138a5fedad36d367d96d24825c3c9f714219" translate="yes" xml:space="preserve">
          <source>it is fast to pickle and un-pickle as it holds no state besides the constructor parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5d3b8f30e9a443055a0564f1b84e6ad844b8ff9" translate="yes" xml:space="preserve">
          <source>it is not easily possible to split the vectorization work into concurrent sub tasks as the &lt;code&gt;vocabulary_&lt;/code&gt; attribute would have to be a shared state with a fine grained synchronization barrier: the mapping from token string to feature index is dependent on ordering of the first occurrence of each token hence would have to be shared, potentially harming the concurrent workers&amp;rsquo; performance to the point of making them slower than the sequential variant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="530bc22c484d0a59e8965e520b0aa2eebf9c8af7" translate="yes" xml:space="preserve">
          <source>it is not possible to invert the model (no &lt;code&gt;inverse_transform&lt;/code&gt; method), nor to access the original string representation of the features, because of the one-way nature of the hash function that performs the mapping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94119703aa7fd537aff2114af847113c9c3faecb" translate="yes" xml:space="preserve">
          <source>it is very low memory scalable to large datasets as there is no need to store a vocabulary dictionary in memory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3981fac47c02c318efa5882474e431eb2e09c3ac" translate="yes" xml:space="preserve">
          <source>joblib.Memory-like means that &lt;code&gt;memory&lt;/code&gt; can be converted into a sklearn.utils.Memory instance (typically a str denoting the &lt;code&gt;cachedir&lt;/code&gt;) or has the same interface (has a &lt;code&gt;cache&lt;/code&gt; method).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7ff216a3788e48503ea6276a503bb821f97df3c" translate="yes" xml:space="preserve">
          <source>k times, choose a word: w ~ Multinomial(theta_c)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cde1551a26d23c57afaa6b1cc1ce8c6b0c8d8376" translate="yes" xml:space="preserve">
          <source>k(x_1, x_2) = constant_value for all x_1, x_2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfc0bb87dde2a07fcb18a7ed9e68883bbd4dbb1d" translate="yes" xml:space="preserve">
          <source>k(x_1, x_2) = noise_level if x_1 == x_2 else 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcba761255337e59b16d9255cecdb10fcbc8f5bb" translate="yes" xml:space="preserve">
          <source>k(x_i, x_j) = (1 + d(x_i, x_j)^2 / (2*alpha * length_scale^2))^-alpha</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d42d80be38c3db063cfaeaa3b47e0e677a2a7cc" translate="yes" xml:space="preserve">
          <source>k(x_i, x_j) = exp(-1 / 2 d(x_i / length_scale, x_j / length_scale)^2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48bb0ab0ab83f54503a93a2ee798930a56f572e3" translate="yes" xml:space="preserve">
          <source>k(x_i, x_j) = exp(-2 (sin(pi / periodicity * d(x_i, x_j)) / length_scale) ^ 2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6b95c6f796f3dfd0e16b0456361fb58cf97d28f" translate="yes" xml:space="preserve">
          <source>k(x_i, x_j) = sigma_0 ^ 2 + x_i cdot x_j</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94a440c3970643628b1a4aa3d46eee6da87cd1ae" translate="yes" xml:space="preserve">
          <source>k-Nearest neighbors classifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c011226b3d59420f0ecbbf3d06e25d424a7c98d6" translate="yes" xml:space="preserve">
          <source>kernel_approximation</source>
          <target state="translated">kernel_approximation</target>
        </trans-unit>
        <trans-unit id="a3ec02b587162f1883f2f44e9bd5e31882789fc7" translate="yes" xml:space="preserve">
          <source>kernel_ridge</source>
          <target state="translated">kernel_ridge</target>
        </trans-unit>
        <trans-unit id="1346ba4e8562b075970714ff9db073ae5ab05915" translate="yes" xml:space="preserve">
          <source>kernels support only isotropic distances. The parameter gamma is considered to be a hyperparameter and may be optimized. The other kernel parameters are set directly at initialization and are kept fixed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d57dd802f111bd841ab7b0762a349000d1ee0c4" translate="yes" xml:space="preserve">
          <source>keyword arguments passed to the coordinate descent solver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1dc780cf82295de2bedfb33923350c93ac978d1" translate="yes" xml:space="preserve">
          <source>keyword arguments to pass to specified metric function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="259c1f0b29cdae237dd64db1b474cce5ddc424ff" translate="yes" xml:space="preserve">
          <source>kmeans</source>
          <target state="translated">kmeans</target>
        </trans-unit>
        <trans-unit id="4eb1f8eff3aa1a6600255865d7059f5a7065ccce" translate="yes" xml:space="preserve">
          <source>knn (\(1[x' \in kNN(x)]\)). \(k\) is specified by keyword n_neighbors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e5c8c0c7ce87002fe43934d5ae2f81a36bd79ec" translate="yes" xml:space="preserve">
          <source>l1-penalized covariance estimator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f176d2617abee9fa4e7388714bb5b723fb689697" translate="yes" xml:space="preserve">
          <source>l1-penalty case</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce2b6058988d93d3f8d6d451531441c16f1f12b5" translate="yes" xml:space="preserve">
          <source>l2-penalty case</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2da247156938fa4b9192d0fa505083a1ac49f2a9" translate="yes" xml:space="preserve">
          <source>label values for each sample</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="547f03a735e1f4e5ad1e0675e88a8ae60626ea0e" translate="yes" xml:space="preserve">
          <source>label[i] is the code or index of the centroid the i&amp;rsquo;th observation is closest to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a06f194bb5d2bbb58b1a2f8e3683cad8169513f7" translate="yes" xml:space="preserve">
          <source>lars: uses the least angle regression method (linear_model.lars_path) lasso_lars: uses Lars to compute the Lasso solution lasso_cd: uses the coordinate descent method to compute the Lasso solution (linear_model.Lasso). lasso_lars will be faster if the estimated components are sparse. omp: uses orthogonal matching pursuit to estimate the sparse solution threshold: squashes to zero all coefficients less than alpha from the projection dictionary * X&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="202aa5c42a7903eca0c8ff089a354e4dce3fada9" translate="yes" xml:space="preserve">
          <source>lars: uses the least angle regression method to solve the lasso problem (linear_model.lars_path) cd: uses the coordinate descent method to compute the Lasso solution (linear_model.Lasso). Lars will be faster if the estimated components are sparse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37508ed23fcd3c3b7e22b1e19215ff4148073a23" translate="yes" xml:space="preserve">
          <source>last_mean, last_var are the statistics computed at the last step by this function. Both must be initialized to 0-arrays of the proper size, i.e. the number of features in X. last_n is the number of samples encountered until now.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="221ace742bd76e8b0752aeb2290e25b1cd5b590d" translate="yes" xml:space="preserve">
          <source>learning rate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c3168d1288852c50141aa6bbb19df4d1b273783" translate="yes" xml:space="preserve">
          <source>learning rate shrinks the contribution of each tree by &lt;code&gt;learning_rate&lt;/code&gt;. There is a trade-off between learning_rate and n_estimators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2608ee8d475420270a25daa8414ced6e636aeb66" translate="yes" xml:space="preserve">
          <source>linear: \(\langle x, x'\rangle\).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4e127652adcca77de63bb70becb59d4deff6b11" translate="yes" xml:space="preserve">
          <source>linear_model</source>
          <target state="translated">linear_model</target>
        </trans-unit>
        <trans-unit id="eed91ee751445d662206a112aa0643bce894cb79" translate="yes" xml:space="preserve">
          <source>linear_model.Lars</source>
          <target state="translated">linear_model.Lars</target>
        </trans-unit>
        <trans-unit id="2c11a9dc5866752a28a41359ec171deeb7a65e1c" translate="yes" xml:space="preserve">
          <source>list : &lt;code&gt;categories[i]&lt;/code&gt; holds the categories expected in the ith column. The passed categories should not mix strings and numeric values within a single feature, and should be sorted in case of numeric values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2985b36618e4c02de2b9856ba27ff6915d5dfb99" translate="yes" xml:space="preserve">
          <source>list : &lt;code&gt;categories[i]&lt;/code&gt; holds the categories expected in the ith column. The passed categories should not mix strings and numeric values, and should be sorted in case of numeric values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="900e79206536fb805d7a1dec55efed8017b958fd" translate="yes" xml:space="preserve">
          <source>load the file contents and the categories</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0efafc0346977fcc7968d9cec0b7f34fe84118f9" translate="yes" xml:space="preserve">
          <source>loss function to be optimized. &amp;lsquo;deviance&amp;rsquo; refers to deviance (= logistic regression) for classification with probabilistic outputs. For loss &amp;lsquo;exponential&amp;rsquo; gradient boosting recovers the AdaBoost algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a01f2fc396c497e048408284787f6409a079d1" translate="yes" xml:space="preserve">
          <source>loss function to be optimized. &amp;lsquo;ls&amp;rsquo; refers to least squares regression. &amp;lsquo;lad&amp;rsquo; (least absolute deviation) is a highly robust loss function solely based on order information of the input variables. &amp;lsquo;huber&amp;rsquo; is a combination of the two. &amp;lsquo;quantile&amp;rsquo; allows quantile regression (use &lt;code&gt;alpha&lt;/code&gt; to specify the quantile).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b285c9dadd643a585cdb22f4a2e6ad178aece7e8" translate="yes" xml:space="preserve">
          <source>lowest hash length to be searched when candidate selection is performed for nearest neighbors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a7b31b0bfcf4ea2db3165ac72c7228d1c578e3a" translate="yes" xml:space="preserve">
          <source>macro-averaged</source>
          <target state="translated">macro-averaged</target>
        </trans-unit>
        <trans-unit id="68520dd38b2e67bae8c40908196fe0b8b3d9adb2" translate="yes" xml:space="preserve">
          <source>manifold</source>
          <target state="translated">manifold</target>
        </trans-unit>
        <trans-unit id="4be2f752f6f9f22ce102629c7cb2e3a6709ab977" translate="yes" xml:space="preserve">
          <source>manifold.MDS</source>
          <target state="translated">manifold.MDS</target>
        </trans-unit>
        <trans-unit id="e6f363d913e1113ffae79df10d76628029b891bb" translate="yes" xml:space="preserve">
          <source>manifold.TSNE</source>
          <target state="translated">manifold.TSNE</target>
        </trans-unit>
        <trans-unit id="f25470201a131e127feab62862c4c9a8b033b071" translate="yes" xml:space="preserve">
          <source>many</source>
          <target state="translated">many</target>
        </trans-unit>
        <trans-unit id="db1ddf02a8ebf74c2038149f9d3324e26fc59fcc" translate="yes" xml:space="preserve">
          <source>mask: Array of length n_features and with dtype=bool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="100e132fb656a718e525e729eb228ba44c3dc705" translate="yes" xml:space="preserve">
          <source>maximum depth of the individual regression estimators. The maximum depth limits the number of nodes in the tree. Tune this parameter for best performance; the best value depends on the interaction of the input variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e05366bcb8d301ccaa9fd8f36ec529a2b5f215f" translate="yes" xml:space="preserve">
          <source>maximum number of iterations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a467036db46f62c54506949458632d889669bf5" translate="yes" xml:space="preserve">
          <source>maximum number of iterations allowed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dea456b1600ac2221c3a31f6e97251268d58cc9" translate="yes" xml:space="preserve">
          <source>maximum number of iterations for the arpack solver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da9f4a59618ccebe5fa9b65706732691be674699" translate="yes" xml:space="preserve">
          <source>maximum number of iterations for the arpack solver. Not used if eigen_solver==&amp;rsquo;dense&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d476c4a9aeb13e35eb797d6f67054bbc66337fd" translate="yes" xml:space="preserve">
          <source>maximum number of iterations to perform</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c699b8e3ba5942aac0d99fc95521d668361b21af" translate="yes" xml:space="preserve">
          <source>mean of each feature per class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e3be33a7723bb372b7018f68c3b6c162d88214d" translate="yes" xml:space="preserve">
          <source>mean square error for the test set on each fold, varying alpha</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f41c0c538de0570de4f881286b34eb53e1619f8" translate="yes" xml:space="preserve">
          <source>means that the first model in the chain will make predictions for column 1 in the Y matrix, the second model will make predictions for column 3, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4af42d22cef5b06029e60f66d51575e3c28b976" translate="yes" xml:space="preserve">
          <source>method to use. Options are &amp;lsquo;auto&amp;rsquo; : attempt to choose the best method for the current problem &amp;lsquo;FW&amp;rsquo; : Floyd-Warshall algorithm. O[N^3] &amp;lsquo;D&amp;rsquo; : Dijkstra&amp;rsquo;s algorithm with Fibonacci stacks. O[(k+log(N))N^2]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a6b7441444825e448e366618cad8eb818b55760" translate="yes" xml:space="preserve">
          <source>methods for logistic regression and maximum entropy models. Machine Learning 85(1-2):41-75. &lt;a href=&quot;http://www.csie.ntu.edu.tw/~cjlin/papers/maxent_dual.pdf&quot;&gt;http://www.csie.ntu.edu.tw/~cjlin/papers/maxent_dual.pdf&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5a39a3a7b3df7a7c25d3954cca5306e26c2073a" translate="yes" xml:space="preserve">
          <source>metric</source>
          <target state="translated">metric</target>
        </trans-unit>
        <trans-unit id="68e09fc7ffa4d1c965f978b58aac7da4d57de9c7" translate="yes" xml:space="preserve">
          <source>metric to use for distance computation. Any metric from scikit-learn or scipy.spatial.distance can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5493bf994c467badb2f629def11903b5b8cd3e9c" translate="yes" xml:space="preserve">
          <source>metric used for the distance computation. Any metric from scikit-learn or scipy.spatial.distance can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="966b9734015a6d617d09dae170c907a100bded72" translate="yes" xml:space="preserve">
          <source>metrics</source>
          <target state="translated">metrics</target>
        </trans-unit>
        <trans-unit id="0681afb55b758008eb875e7e8bad7b6a48b206c7" translate="yes" xml:space="preserve">
          <source>metrics.cluster</source>
          <target state="translated">metrics.cluster</target>
        </trans-unit>
        <trans-unit id="02a3f48f651b550b8defa5a772e1a056e363bace" translate="yes" xml:space="preserve">
          <source>metrics.pairwise</source>
          <target state="translated">metrics.pairwise</target>
        </trans-unit>
        <trans-unit id="35ee479d45309bef59c7fdabd0c0a7d9dc24635e" translate="yes" xml:space="preserve">
          <source>metrics.pairwise.cosine_distances</source>
          <target state="translated">metrics.pairwise.cosine_distances</target>
        </trans-unit>
        <trans-unit id="4b350aaf734c51afeefb306d047294f2a4e88207" translate="yes" xml:space="preserve">
          <source>metrics.pairwise.euclidean_distances</source>
          <target state="translated">metrics.pairwise.euclidean_distances</target>
        </trans-unit>
        <trans-unit id="d2062c96614bad9191feac615b62d0cdd0b87d8e" translate="yes" xml:space="preserve">
          <source>metrics.pairwise.manhattan_distances</source>
          <target state="translated">metrics.pairwise.manhattan_distances</target>
        </trans-unit>
        <trans-unit id="3c4c5a9db02ac5a145265bdfb69aef6023747c8f" translate="yes" xml:space="preserve">
          <source>micro-averaged</source>
          <target state="translated">micro-averaged</target>
        </trans-unit>
        <trans-unit id="8b51680238e6f7ba732a8a4c5f97e1f16f7f2991" translate="yes" xml:space="preserve">
          <source>minimize \(\sum_i w_i (y_i - \hat{y}_i)^2\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c6232e73f136f1201bdcb8934b3772c8f597ab5" translate="yes" xml:space="preserve">
          <source>minimum value for C</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf0d95de4e1792f8cd6d85a82360c7bae4cf702e" translate="yes" xml:space="preserve">
          <source>mix of label indicator matrices of different sizes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="410e3bc9144f0911fb575d7694d336e9571a35fd" translate="yes" xml:space="preserve">
          <source>mix of label indicator matrix and anything else, because there are no explicit labels)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b478346eec86e54b7c9501f1fc478197478b1c47" translate="yes" xml:space="preserve">
          <source>mix of multilabel and multiclass (single label) targets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec8bc0c489a2cf0d9c9599cef4f1d9127a348781" translate="yes" xml:space="preserve">
          <source>mix of string and integer labels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab41eb3febbf7b751e0c6c4ae8fb9de7dc543acf" translate="yes" xml:space="preserve">
          <source>mixture</source>
          <target state="translated">mixture</target>
        </trans-unit>
        <trans-unit id="d0889b35857797a7db2af6c9896b70c612e7a197" translate="yes" xml:space="preserve">
          <source>mldata.org data sets may have multiple columns, which are stored in the Bunch object with their original name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3afef08efd8fd8f98c44de735c37a7abca50bf61" translate="yes" xml:space="preserve">
          <source>mldata.org does not have an enforced convention for storing data or naming the columns in a data set. The default behavior of this function works well with the most common cases:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7106057194a55b8f3c70e392516a1253fa501c80" translate="yes" xml:space="preserve">
          <source>mldata.org is no longer operational.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31e588c1be2f8256fff5b35478cf07834e0dc824" translate="yes" xml:space="preserve">
          <source>model_selection</source>
          <target state="translated">model_selection</target>
        </trans-unit>
        <trans-unit id="805cccd42d32c5e1fd1c3ff101dcf0e59dcdb0d0" translate="yes" xml:space="preserve">
          <source>multiclass</source>
          <target state="translated">multiclass</target>
        </trans-unit>
        <trans-unit id="1301b0a7d8bf2f3c7343e76ba859177123dd3a4d" translate="yes" xml:space="preserve">
          <source>multioutput</source>
          <target state="translated">multioutput</target>
        </trans-unit>
        <trans-unit id="9b176228bbcdcf7199c3a28ea08f76235d37416f" translate="yes" xml:space="preserve">
          <source>n times, choose a class c: c ~ Multinomial(theta)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f02f14b007139a5229a52dddadde29dffef31df2" translate="yes" xml:space="preserve">
          <source>n-dimensional array of weights for each value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c2062dcf69c677b64b7a5d1bdf9659111d5e98b" translate="yes" xml:space="preserve">
          <source>n-dimensional array of which to find mode(s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="610df06a28f3eda8e1e40ee647f53d567e8cc044" translate="yes" xml:space="preserve">
          <source>n_components &amp;gt;= 4 log(n_samples) / (eps^2 / 2 - eps^3 / 3)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="805cdf141e7e1e68e64090e9c5ad2eeb04ae4a9a" translate="yes" xml:space="preserve">
          <source>n_components can be automatically adjusted according to the number of samples in the dataset and the bound given by the Johnson-Lindenstrauss lemma. In that case the quality of the embedding is controlled by the &lt;code&gt;eps&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe6e941d0732fe6aba91ba259416f31f917d8db5" translate="yes" xml:space="preserve">
          <source>n_labeled_samples (unlabeled points are marked as -1) All unlabeled samples will be transductively assigned labels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ad963a58975c6352aaadc0fe054de51321ef2eb" translate="yes" xml:space="preserve">
          <source>n_neighbors &amp;gt; n_components * (1 + (n_components + 1) / 2. see reference &lt;a href=&quot;#rb2a5641379f7-2&quot; id=&quot;id2&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9333e37619cc1992aa8724f987644cec75219b2" translate="yes" xml:space="preserve">
          <source>n_samples is the number of points in the data set, and n_features is the dimension of the parameter space. Note: if X is a C-contiguous array of doubles then data will not be copied. Otherwise, an internal copy will be made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d27c7d339b3249301e0627484c62e994c6ba49c" translate="yes" xml:space="preserve">
          <source>n_samples_fit is the number of samples in the fitted data A[i, j] is assigned the weight of edge that connects i to j.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02aba43ccd266cbdca1f9820b7b461fda577cd2a" translate="yes" xml:space="preserve">
          <source>naive_bayes</source>
          <target state="translated">naive_bayes</target>
        </trans-unit>
        <trans-unit id="538614d38e385c956d46decdc113694fa8f5c93b" translate="yes" xml:space="preserve">
          <source>nearest neighbors classifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a7bc24d845dd35db0817f78a4872eefab9a6e06" translate="yes" xml:space="preserve">
          <source>neighborhood size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a24fee51aa8bc94ea37cdce2db4901ba906b88e2" translate="yes" xml:space="preserve">
          <source>neighbors</source>
          <target state="translated">neighbors</target>
        </trans-unit>
        <trans-unit id="0144ab02e60784ebe99327eddac5c9249607ee92" translate="yes" xml:space="preserve">
          <source>neural_network</source>
          <target state="translated">neural_network</target>
        </trans-unit>
        <trans-unit id="9283d34c9f812f7d15d6f5f09ea98b93740c05ad" translate="yes" xml:space="preserve">
          <source>new observations can then be sorted as inliers or outliers with a &lt;code&gt;predict&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd1286353570c5703799ba76999323b7c7447b06" translate="yes" xml:space="preserve">
          <source>no</source>
          <target state="translated">no</target>
        </trans-unit>
        <trans-unit id="63992970d93ef5acc0c739eb4538b553ac447166" translate="yes" xml:space="preserve">
          <source>no IDF weighting as this would render the transformer stateful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10b8fa7af4b4d8879c35c79c071b7002ab4228f4" translate="yes" xml:space="preserve">
          <source>not used, present for API consistence purpose.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="875c84040719fc6b0c356aaa1613a87c3fd1d529" translate="yes" xml:space="preserve">
          <source>not used, present for API consistency by convention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97b5587270a3d7d15da4a2138d847db801ebf221" translate="yes" xml:space="preserve">
          <source>not used, present here for API consistency by convention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c212e34680e6210f43dace190eca76e60ea7c5" translate="yes" xml:space="preserve">
          <source>novelty detection:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5811cfbade239ecbcaf3cc94ba12ab7a97dfa9b2" translate="yes" xml:space="preserve">
          <source>np.empty(0) by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca395db7ebc55885d395ae49eddb2f3cd3ac3859" translate="yes" xml:space="preserve">
          <source>number of Monte Carlo samples per original feature. Equals the dimensionality of the computed feature space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa9731e1997e0a380e3917708236f7006c6162f" translate="yes" xml:space="preserve">
          <source>number of active (non-zero) coefficients in each sample</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="588602a7df41508b6f864d897ea97480aa0e522f" translate="yes" xml:space="preserve">
          <source>number of clusters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="377f530b8e4caf8bfa0bce81db1eb00d9ff75189" translate="yes" xml:space="preserve">
          <source>number of clusters, linkage type, distance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8555cff63ba0e6750e54d77c8c1bf8609ac4c09a" translate="yes" xml:space="preserve">
          <source>number of components in the dictionary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97c9ec1bad78106d4d6986888736608e9913f26e" translate="yes" xml:space="preserve">
          <source>number of components to keep.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57b58be95fccc944e0afa0bb20adc35ffc711ba6" translate="yes" xml:space="preserve">
          <source>number of coordinates for the manifold</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ad9dabb3c80ca74d49e7ad0308f7614bad7af4a" translate="yes" xml:space="preserve">
          <source>number of coordinates for the manifold.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0cd9a6212dc992029e4daf39d9d72bacc91d04b" translate="yes" xml:space="preserve">
          <source>number of dictionary elements to extract</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44f5412426aa19a9a4cd9594b80461f3baecc74f" translate="yes" xml:space="preserve">
          <source>number of features of the dataset to generate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a463fe0a5655710dfa639f449ae29386b72e1c2" translate="yes" xml:space="preserve">
          <source>number of iterations run by lars_path to find the grid of alphas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f42f26c169e85983843b9eb9d01cbbf5c67c780d" translate="yes" xml:space="preserve">
          <source>number of iterations run by the coordinate descent solver to reach the specified tolerance for the optimal alpha.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9acb53e53f4f8d3e936a37d1dccfa5cfec8317ea" translate="yes" xml:space="preserve">
          <source>number of iterations run by the coordinate descent solver to reach the specified tolerance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52ba57c65c4918cd7d1205a5a4b128d327e949ae" translate="yes" xml:space="preserve">
          <source>number of iterations run. Returned only if &lt;code&gt;return_n_iter&lt;/code&gt; is set to True.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eca57b4a375c70087fcd5307ccc80ce55a15db1" translate="yes" xml:space="preserve">
          <source>number of iterations to perform for each mini batch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="679b9351aa743ee31a1b495edf4ed9e4e8769f82" translate="yes" xml:space="preserve">
          <source>number of jobs to run in parallel. &lt;code&gt;None&lt;/code&gt; means 1 unless in a &lt;a href=&quot;https://joblib.readthedocs.io/en/latest/parallel.html#joblib.parallel_backend&quot;&gt;&lt;code&gt;joblib.parallel_backend&lt;/code&gt;&lt;/a&gt; context. &lt;code&gt;-1&lt;/code&gt; means using all processors. See &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#term-n-jobs&quot;&gt;Glossary&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb482871acefba032bc1ddde7cdaf534b28d63bd" translate="yes" xml:space="preserve">
          <source>number of neighbors \(k\) requested for a query point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce046ea3286ae47b7391d4753ab80875d309648d" translate="yes" xml:space="preserve">
          <source>number of neighbors to consider for each point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b575eb007df94ff0a3767e6a37b7c31af6cad6e1" translate="yes" xml:space="preserve">
          <source>number of query points. Both the ball tree and the KD Tree require a construction phase. The cost of this construction becomes negligible when amortized over many queries. If only a small number of queries will be performed, however, the construction can make up a significant fraction of the total cost. If very few query points will be required, brute force is better than a tree-based method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a2e6da18bc176063f19f67517214e1790eefb96" translate="yes" xml:space="preserve">
          <source>number of samples \(N\) (i.e. &lt;code&gt;n_samples&lt;/code&gt;) and dimensionality \(D\) (i.e. &lt;code&gt;n_features&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b31f4e412396828b3cffa34287e142f29512918" translate="yes" xml:space="preserve">
          <source>number of samples in each mini-batch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fad950b5f90132e92b46c57166caaf36056046e" translate="yes" xml:space="preserve">
          <source>number of samples to generate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="420eddc800a421666eb15b0de0509f212ab0bdc1" translate="yes" xml:space="preserve">
          <source>number of sparse atoms to extract</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="863b91146e277c44690b36595651c3c5a049e190" translate="yes" xml:space="preserve">
          <source>number of support vectors in each class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75dc500219d986a05b747aaf433a2b65850c4be1" translate="yes" xml:space="preserve">
          <source>number of training samples observed in each class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5007902b323d5da0bff94bc7c7a011f4f53bed73" translate="yes" xml:space="preserve">
          <source>occurred in too few documents (&lt;code&gt;min_df&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ccafb9db48a4e022c954de863d346751df89af9" translate="yes" xml:space="preserve">
          <source>occurred in too many documents (&lt;code&gt;max_df&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22c1edb129883fd94914ad987d41d4c6d6971936" translate="yes" xml:space="preserve">
          <source>of such arrays if n_outputs &amp;gt; 1. The class probabilities of the input samples. Classes are ordered by lexicographic order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7423aec369b363e2418f78d2f553c235bafd0bce" translate="yes" xml:space="preserve">
          <source>one-vs-one</source>
          <target state="translated">one-vs-one</target>
        </trans-unit>
        <trans-unit id="cd67d51a6ed090a13ae1636d76030d3c673397d7" translate="yes" xml:space="preserve">
          <source>one-vs-the-rest / one-vs-all</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82ca751c9162c4eacf0f41cea2ab24bf297a78cf" translate="yes" xml:space="preserve">
          <source>onehot</source>
          <target state="translated">onehot</target>
        </trans-unit>
        <trans-unit id="541b38c47455e70f54a1cea9266855f5dbe61368" translate="yes" xml:space="preserve">
          <source>onehot-dense</source>
          <target state="translated">onehot-dense</target>
        </trans-unit>
        <trans-unit id="5ac098bb9ae6de2aef470bfafa8102d84237dbcb" translate="yes" xml:space="preserve">
          <source>optimization.&amp;rdquo; arXiv preprint arXiv:1412.6980 (2014).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78cd49dabed3589e516a597e905eb1849130c36d" translate="yes" xml:space="preserve">
          <source>or [n_samples, n_outputs]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6a53d1002fc762613b960d65f12003a264f2ca0" translate="yes" xml:space="preserve">
          <source>or a k-nearest neighbors connectivity matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="004bbcd5f22a5bdcd066cd71ffe19b6a30673c0a" translate="yes" xml:space="preserve">
          <source>or array-like of shape (n_outputs) Defines aggregating of multiple output values. Array-like value defines weights used to average errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d9ad0addee82809659247e9008e6f9e82aa9000" translate="yes" xml:space="preserve">
          <source>or:</source>
          <target state="translated">or:</target>
        </trans-unit>
        <trans-unit id="ec10b73d4109575df29dd7fb554a2fcbc4c763bf" translate="yes" xml:space="preserve">
          <source>ordinal</source>
          <target state="translated">ordinal</target>
        </trans-unit>
        <trans-unit id="c6bd2fba2cf5e9d988d97477ce10fa41c14a85f9" translate="yes" xml:space="preserve">
          <source>outlier detection:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="516b9783fca517eecbd1d064da2d165310b19759" translate="yes" xml:space="preserve">
          <source>p</source>
          <target state="translated">p</target>
        </trans-unit>
        <trans-unit id="0deda59e89925689c7e9a767a7ba7902d2ffee6b" translate="yes" xml:space="preserve">
          <source>p, w</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfad58aa08b416c25c983e6487b3b0331a453dce" translate="yes" xml:space="preserve">
          <source>p-values of F-scores.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61f2757c0dd450611c0562969dc92d0c5b62c52c" translate="yes" xml:space="preserve">
          <source>p-values of each feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3c52a34d7e25c4a1f87a129667afd396c6addf7" translate="yes" xml:space="preserve">
          <source>p-values of feature scores, None if &lt;code&gt;score_func&lt;/code&gt; returned only scores.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5320b5825b45936d5e7da76181799c4e74a2a6e6" translate="yes" xml:space="preserve">
          <source>p-values of feature scores, None if &lt;code&gt;score_func&lt;/code&gt; returned scores only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="956974a9024aac5c76642142263c6f9c0cacc9c6" translate="yes" xml:space="preserve">
          <source>p-values of feature scores.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36c229b1e6f4bb4761a8afe9d3c3b81cfec55e4f" translate="yes" xml:space="preserve">
          <source>pairwise_distances(X, Y=Y, metric=metric).argmin(axis=axis)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89b040d9f06dbc4a1cb9949946d60318485eee8d" translate="yes" xml:space="preserve">
          <source>pairwise_distances(X, Y=Y, metric=metric).min(axis=axis))</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33f8248f4fda2a7502c0be02a6e0fe86f70bf2f4" translate="yes" xml:space="preserve">
          <source>param_degree</source>
          <target state="translated">param_degree</target>
        </trans-unit>
        <trans-unit id="e72f30454cf5c3809c45e36837ee643358ad66f2" translate="yes" xml:space="preserve">
          <source>param_gamma</source>
          <target state="translated">param_gamma</target>
        </trans-unit>
        <trans-unit id="9eb9e52fcaa6667396b73dff16498c5a2e38ecdf" translate="yes" xml:space="preserve">
          <source>param_kernel</source>
          <target state="translated">param_kernel</target>
        </trans-unit>
        <trans-unit id="0872b6a1e678c07eaf14b0721fb290624714851b" translate="yes" xml:space="preserve">
          <source>parameter for knn kernel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce761d909093c65cdc4f36abce52cc267aaa3ee5" translate="yes" xml:space="preserve">
          <source>parameter for rbf kernel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1021a0c921dddc9ae225de9eba35993f6ba6d81" translate="yes" xml:space="preserve">
          <source>parameter vector (w in the cost function formula)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="576220c82a5aeea82866a36cac612e72687232ce" translate="yes" xml:space="preserve">
          <source>parameter vector (w in the formula)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbaa8d31f74bac5fd5e11976b9050dc4a42a964f" translate="yes" xml:space="preserve">
          <source>parameter vector (w in the formulation formula)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42240bf3aa2186e2afe02efec13674a1002e463f" translate="yes" xml:space="preserve">
          <source>partial dependence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81e1cf8a57b6180ecdda36ec937fa86819cc48e6" translate="yes" xml:space="preserve">
          <source>passes an input whose shape can be interpreted ambiguously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13ee6aed8f5e1d616eb2ed44dc5e50c160fa0bee" translate="yes" xml:space="preserve">
          <source>passes an integer array to a function which expects float input and will convert the input</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c135e9246e107960183c2ff12c040340b014d0d" translate="yes" xml:space="preserve">
          <source>performance on imagenet classification.&amp;rdquo; arXiv preprint arXiv:1502.01852 (2015).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3513ea6aa3cbdfe411cb8a751e8c458cc2cb200c" translate="yes" xml:space="preserve">
          <source>performs a one-hot encoding of categorical features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="943d92fa4983a1ac7840193352435e24aca79fea" translate="yes" xml:space="preserve">
          <source>performs a one-hot encoding of dictionary items (also handles string-valued features).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05a8d7d3e67cf972a9a27939711282ce56b10a7a" translate="yes" xml:space="preserve">
          <source>performs an approximate one-hot encoding of dictionary items or strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44395f3132351eaa465ef788851d29717c8f43bb" translate="yes" xml:space="preserve">
          <source>performs an ordinal (integer) encoding of the categorical features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66dcb263c6eb2bcd4823e629f8b6fc1c1f62f18b" translate="yes" xml:space="preserve">
          <source>performs the same calculation as this function, but returns a generator of chunks of the distance matrix, in order to limit memory usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9c37e673dbdbe4127d3bfb268c06056d6254952" translate="yes" xml:space="preserve">
          <source>performs vectorization using only a hash function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94ef9c27ad34c0746a34cca300c65a7f9451a679" translate="yes" xml:space="preserve">
          <source>perimeter</source>
          <target state="translated">perimeter</target>
        </trans-unit>
        <trans-unit id="dc9a64521a9dba18f557c9b49691423f31544ff9" translate="yes" xml:space="preserve">
          <source>perimeter (mean):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5ecaa47fb1dddbb5b66ad9e43814d53b475ead3" translate="yes" xml:space="preserve">
          <source>perimeter (standard error):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a0fcec121131e7c5a3b714a121189fa86360c73" translate="yes" xml:space="preserve">
          <source>perimeter (worst):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2441362bc7f29122950b08eaf01a805e6a2b3c30" translate="yes" xml:space="preserve">
          <source>perplexity</source>
          <target state="translated">perplexity</target>
        </trans-unit>
        <trans-unit id="5a86fc47911ef6175373e7c599cba1b9e9476a0b" translate="yes" xml:space="preserve">
          <source>petal length in cm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2f714edfbec7adc970477e304420a9e9f6b9d4d" translate="yes" xml:space="preserve">
          <source>petal length:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6454231da244b6441434819ca4824a95bcc8fac5" translate="yes" xml:space="preserve">
          <source>petal width in cm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59704ff4a53c8190962a1a99d0b3971843bfadb7" translate="yes" xml:space="preserve">
          <source>petal width:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c07dfc379b06f53044a066d8d1ca459e1f69685b" translate="yes" xml:space="preserve">
          <source>pick the document length: k ~ Poisson(length)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e4d1050bf497e6d9f60ac562aae36a7a0d17c6c" translate="yes" xml:space="preserve">
          <source>pick the number of labels: n ~ Poisson(n_labels)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e06248cf1de5fbcf9035e2cec78adacf23f990e6" translate="yes" xml:space="preserve">
          <source>pickle (and joblib by extension), has some issues regarding maintainability and security. Because of this,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e8a15526910760a43f1ddc096e73579112ac0b3" translate="yes" xml:space="preserve">
          <source>pickling and un-pickling vectorizers with a large &lt;code&gt;vocabulary_&lt;/code&gt; can be very slow (typically much slower than pickling / un-pickling flat data structures such as a NumPy array of the same size),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="992b5d666718483c9676361ebc685d122089e3eb" translate="yes" xml:space="preserve">
          <source>pipeline</source>
          <target state="translated">pipeline</target>
        </trans-unit>
        <trans-unit id="b27df1d1caa0891b0b65df979a1e4cbab845c36e" translate="yes" xml:space="preserve">
          <source>polynomial: \((\gamma \langle x, x'\rangle + r)^d\). \(d\) is specified by keyword &lt;code&gt;degree&lt;/code&gt;, \(r\) by &lt;code&gt;coef0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0dd8611438f5b6bfe096a5dfc887f1e66987282" translate="yes" xml:space="preserve">
          <source>powers_[i, j] is the exponent of the jth input in the ith output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c6f0fa0f549f0813255ea75d095f99ac26c577f" translate="yes" xml:space="preserve">
          <source>predicted values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="416e762665dd122de1e192dd764a4872244dd057" translate="yes" xml:space="preserve">
          <source>preprocessing</source>
          <target state="translated">preprocessing</target>
        </trans-unit>
        <trans-unit id="0b87f3f5e910ceac54c2d69dd977d8e64a8b3815" translate="yes" xml:space="preserve">
          <source>probability estimates, empty array for probability=False</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1670ac5502e1d41781de0f01fe2046e61462aa95" translate="yes" xml:space="preserve">
          <source>probability of each class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5597821b4bc1cc915c3c9e23cf2a95e053c7bb1" translate="yes" xml:space="preserve">
          <source>provides an additional method &lt;code&gt;sample_y(X)&lt;/code&gt;, which evaluates samples drawn from the GPR (prior or posterior) at given inputs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ba147255c90301e6f98070c3a92fd823eece291" translate="yes" xml:space="preserve">
          <source>provides an additional method sample_y(X), which evaluates samples drawn from the GPR (prior or posterior) at given inputs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b381e0c6e2d2c97834fdb1a6df347de32726626" translate="yes" xml:space="preserve">
          <source>qualitatively different from normal data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c73eaf9f4bd6d3df699128ec062add0c564ca2f" translate="yes" xml:space="preserve">
          <source>quantile</source>
          <target state="translated">quantile</target>
        </trans-unit>
        <trans-unit id="52f6ab3a7484848610927759ae609a11024f568b" translate="yes" xml:space="preserve">
          <source>quantile&amp;rsquo;: The discretization is done on the quantiled values, which means that each bin has approximately the same number of samples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e4b6a918613f94dbf0d8967724b39dd0e198b5" translate="yes" xml:space="preserve">
          <source>query the tree for neighbors within a radius r</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da038d9bbbfc80029f4e7216424f780d39ce8233" translate="yes" xml:space="preserve">
          <source>query the tree for the k nearest neighbors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bedd819b13665794f54fd0ab5d96b2c9f18bab1c" translate="yes" xml:space="preserve">
          <source>query_id for each sample. Only returned when query_id is set to True.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1778d3cf1073c688717804291c29ebe44fa5e6e" translate="yes" xml:space="preserve">
          <source>query_radius(self, X, r, count_only = False):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d53b470a2b3a9d43e483e834f85d8b76493ce4" translate="yes" xml:space="preserve">
          <source>r can be a single value, or an array of values of shape x.shape[:-1] if different radii are desired for each point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dc330b06233c28a2b19e36d0949c7aad1837a1c" translate="yes" xml:space="preserve">
          <source>radius (mean of distances from center to points on the perimeter)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fad0e16890c96f3ca08161e2f37b536fb9ee1727" translate="yes" xml:space="preserve">
          <source>radius (mean):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16aeb78e912fcd7ce1cb323267dec9dd9b7b3534" translate="yes" xml:space="preserve">
          <source>radius (standard error):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6af0d02e40aaa813369647b1a135afa468090f4" translate="yes" xml:space="preserve">
          <source>radius (worst):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1823e99f6dab800c56d4ea2a224c069843d6e830" translate="yes" xml:space="preserve">
          <source>random_projection</source>
          <target state="translated">random_projection</target>
        </trans-unit>
        <trans-unit id="07f0290b74624f40a60416f5fb864cee57361f13" translate="yes" xml:space="preserve">
          <source>random_trees_embedding can also be useful to derive non-linear representations of feature space, also it does not perform dimensionality reduction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6583df2f87a26bcd8fc39e7c88d20dfea78bd72f" translate="yes" xml:space="preserve">
          <source>randomized :</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebd7d37b5c91a0acafeb8c71383ec65389919e14" translate="yes" xml:space="preserve">
          <source>rank_t&amp;hellip;</source>
          <target state="translated">rank_t&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="e23a938fe6551b0b1611b89e604bc44939d36a9b" translate="yes" xml:space="preserve">
          <source>rank_test_score</source>
          <target state="translated">rank_test_score</target>
        </trans-unit>
        <trans-unit id="3fdba4583b3f80ce2987d9124a25fa876fb2df87" translate="yes" xml:space="preserve">
          <source>rbf (\(\exp(-\gamma |x-y|^2), \gamma &amp;gt; 0\)). \(\gamma\) is specified by keyword gamma.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc160825cc389688ccd1a965ecbbf69499a9962" translate="yes" xml:space="preserve">
          <source>rbf: \(\exp(-\gamma \|x-x'\|^2)\). \(\gamma\) is specified by keyword &lt;code&gt;gamma&lt;/code&gt;, must be greater than 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9c64e071d2853bc7906c017a231ad1cc46ab630" translate="yes" xml:space="preserve">
          <source>real</source>
          <target state="translated">real</target>
        </trans-unit>
        <trans-unit id="314e6a0feb8abf718e6d4605fc7552b62bc62bd6" translate="yes" xml:space="preserve">
          <source>real 0.15 - 5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b39960ba230e7bacd091284bf35d2cdd43c64e6" translate="yes" xml:space="preserve">
          <source>real 5. - 50.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff04f4862a22d11291021d0bfeb356ec738478c6" translate="yes" xml:space="preserve">
          <source>real, -.2 &amp;lt; x &amp;lt; .2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c191f9468ef79eed41afe55861609d674164804" translate="yes" xml:space="preserve">
          <source>real, between 0 and 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="422c7e9995ce1f51ebfdafffb87d60c154d0bf76" translate="yes" xml:space="preserve">
          <source>real, between 0 and 255</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="096867b6ddf929c12c615fbf0f5dabc25ffce60d" translate="yes" xml:space="preserve">
          <source>real, positive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75a3c1b9fec1c559e115b3d6356b3341c5add55c" translate="yes" xml:space="preserve">
          <source>reference [1]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54bb5f4569b11a3bfc1de854de90ea79975941cf" translate="yes" xml:space="preserve">
          <source>regularization constant, multiplies the trace of the local covariance matrix of the distances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="102bc2ad1523097995652f9d8855aa66272480ab" translate="yes" xml:space="preserve">
          <source>requests a non-copying operation, but a copy is required to meet the implementation&amp;rsquo;s data-type expectations;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8ad5b2687a3b15a29aa0f1a78eb7859ac8adb13" translate="yes" xml:space="preserve">
          <source>requires &lt;code&gt;predict_proba&lt;/code&gt; support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdcb8d01b90ba48dbf1a0fc4b37b418ab08c5ba8" translate="yes" xml:space="preserve">
          <source>return the logarithm of the result. This can be more accurate than returning the result itself for narrow kernels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a79ac38a17499b3b842f1dd13c79fe0166e53bdb" translate="yes" xml:space="preserve">
          <source>return x ** 3, 3 * x ** 2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36cd15283eefaa5bec48a973b3c63ae195ed9fd4" translate="yes" xml:space="preserve">
          <source>returns an instance of self.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="933ac8f878e03f8b2ee55e77269d94e2ddd8f881" translate="yes" xml:space="preserve">
          <source>returns array-like of shape (n_classifiers, n_samples * n_classes), being class probabilities calculated by each classifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d4dd106c67f97356b8a4dbffd4e1bfb8937624b" translate="yes" xml:space="preserve">
          <source>run SVD truncated to n_components calling ARPACK solver via &lt;code&gt;scipy.sparse.linalg.svds&lt;/code&gt;. It requires strictly 0 &amp;lt; n_components &amp;lt; min(X.shape)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d917c6898d77d48e449a9a2eeb4f9df8a83ef308" translate="yes" xml:space="preserve">
          <source>run exact full SVD calling the standard LAPACK solver via &lt;code&gt;scipy.linalg.svd&lt;/code&gt; and select the components by postprocessing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71f13461b771aefb23eece362c191e1fbff905ae" translate="yes" xml:space="preserve">
          <source>run randomized SVD by the method of Halko et al.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffe14662a1c3987b97ab1639df4331ec4251e01f" translate="yes" xml:space="preserve">
          <source>scikit-learn</source>
          <target state="translated">scikit-learn</target>
        </trans-unit>
        <trans-unit id="98f0a339de2708a5fd04a8d1b258640a7a86fd7f" translate="yes" xml:space="preserve">
          <source>scikit-learn Tutorials</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fa3e79b7efbce737a5c15fb6d86ad19400259e1" translate="yes" xml:space="preserve">
          <source>scikit-learn comes with a few small standard datasets that do not require to download any file from some external website.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd158c3cc7ba6b2687bba56b6a66d272d7f44169" translate="yes" xml:space="preserve">
          <source>scikit-learn developer performance documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="424569ae6696bceabb3d1a223bae710f0f42c262" translate="yes" xml:space="preserve">
          <source>scikit-learn estimators follow certain rules to make their behavior more predictive. These are described in more detail in the &lt;a href=&quot;http://scikit-learn.org/stable/glossary.html#glossary&quot;&gt;Glossary of Common Terms and API Elements&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0afa4c4ddc1c37550f2b02e475f48656c3950ce1" translate="yes" xml:space="preserve">
          <source>scikit-learn exposes objects that set the Lasso &lt;code&gt;alpha&lt;/code&gt; parameter by cross-validation: &lt;a href=&quot;generated/sklearn.linear_model.lassocv#sklearn.linear_model.LassoCV&quot;&gt;&lt;code&gt;LassoCV&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;generated/sklearn.linear_model.lassolarscv#sklearn.linear_model.LassoLarsCV&quot;&gt;&lt;code&gt;LassoLarsCV&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;generated/sklearn.linear_model.lassolarscv#sklearn.linear_model.LassoLarsCV&quot;&gt;&lt;code&gt;LassoLarsCV&lt;/code&gt;&lt;/a&gt; is based on the &lt;a href=&quot;#least-angle-regression&quot;&gt;Least Angle Regression&lt;/a&gt; algorithm explained below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4874a9fac96bc6ca8b3579f9778bd01b60238db4" translate="yes" xml:space="preserve">
          <source>scikit-learn implements two different nearest neighbors classifiers: &lt;a href=&quot;generated/sklearn.neighbors.kneighborsclassifier#sklearn.neighbors.KNeighborsClassifier&quot;&gt;&lt;code&gt;KNeighborsClassifier&lt;/code&gt;&lt;/a&gt; implements learning based on the \(k\) nearest neighbors of each query point, where \(k\) is an integer value specified by the user. &lt;a href=&quot;generated/sklearn.neighbors.radiusneighborsclassifier#sklearn.neighbors.RadiusNeighborsClassifier&quot;&gt;&lt;code&gt;RadiusNeighborsClassifier&lt;/code&gt;&lt;/a&gt; implements learning based on the number of neighbors within a fixed radius \(r\) of each training point, where \(r\) is a floating-point value specified by the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bcada056b6d11c8dd527d7ca3167c0270a56702" translate="yes" xml:space="preserve">
          <source>scikit-learn implements two different neighbors regressors: &lt;a href=&quot;generated/sklearn.neighbors.kneighborsregressor#sklearn.neighbors.KNeighborsRegressor&quot;&gt;&lt;code&gt;KNeighborsRegressor&lt;/code&gt;&lt;/a&gt; implements learning based on the \(k\) nearest neighbors of each query point, where \(k\) is an integer value specified by the user. &lt;a href=&quot;generated/sklearn.neighbors.radiusneighborsregressor#sklearn.neighbors.RadiusNeighborsRegressor&quot;&gt;&lt;code&gt;RadiusNeighborsRegressor&lt;/code&gt;&lt;/a&gt; implements learning based on the neighbors within a fixed radius \(r\) of the query point, where \(r\) is a floating-point value specified by the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a122522aebdadd343d55b40c4fd6297a6f46317" translate="yes" xml:space="preserve">
          <source>scikit-learn includes utility functions for loading datasets in the svmlight / libsvm format. In this format, each line takes the form &lt;code&gt;&amp;lt;label&amp;gt; &amp;lt;feature-id&amp;gt;:&amp;lt;feature-value&amp;gt;
&amp;lt;feature-id&amp;gt;:&amp;lt;feature-value&amp;gt; ...&lt;/code&gt;. This format is especially suitable for sparse datasets. In this module, scipy sparse CSR matrices are used for &lt;code&gt;X&lt;/code&gt; and numpy arrays are used for &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b43411431280a9ed4afc34afdfa5cf5bf3515920" translate="yes" xml:space="preserve">
          <source>scikit-learn provides an object that, given data, computes the score during the fit of an estimator on a parameter grid and chooses the parameters to maximize the cross-validation score. This object takes an estimator during the construction and exposes an estimator API:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10a17b9629b6192fc98223934744e94d1411e183" translate="yes" xml:space="preserve">
          <source>scikit-learn provides tools to load larger datasets, downloading them if necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5112be592bab329fbe29ff4e4d9826a7cee3b22" translate="yes" xml:space="preserve">
          <source>scikit-learn uses an optimised version of the CART algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8ead57c792cc3651c8c5c7fd8bf7bec96f50cab" translate="yes" xml:space="preserve">
          <source>scikit-learn works on any numeric data stored as numpy arrays or scipy sparse matrices. Other types that are convertible to numeric arrays such as pandas DataFrame are also acceptable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="267a661cb7a173e2e3ac92cf76afb3615dedfeb5" translate="yes" xml:space="preserve">
          <source>scikit-learn&amp;rsquo;s &lt;code&gt;datasets.load_files&lt;/code&gt; for directories of text files where the name of each directory is the name of each category and each file inside of each directory corresponds to one sample from that category</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d845e1218ed24cf23dfd8a821b0d0dca85d4717" translate="yes" xml:space="preserve">
          <source>scikit-learn&amp;rsquo;s &lt;code&gt;datasets.load_svmlight_file&lt;/code&gt; for the svmlight or libSVM sparse format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8afb540b047bc533d84523e7a48799650a1a5bc0" translate="yes" xml:space="preserve">
          <source>score between 0.0 and 1.0. 1.0 stands for perfectly complete labeling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae587e031575c114a403caf6e9a18734e42749c7" translate="yes" xml:space="preserve">
          <source>score between 0.0 and 1.0. 1.0 stands for perfectly homogeneous labeling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f64ecfe90b56248a823d9aee205c426a4dbc2fac" translate="yes" xml:space="preserve">
          <source>scoring method as string. If callable it is returned as is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="355c62342f181569148d74130136dedf81d9485e" translate="yes" xml:space="preserve">
          <source>see reference &lt;a href=&quot;#rb2a5641379f7-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59a43e73d254c4f698c80985f13b49ca7266f552" translate="yes" xml:space="preserve">
          <source>see reference &lt;a href=&quot;#rb2a5641379f7-3&quot; id=&quot;id3&quot;&gt;[3]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ac0258ac5a15e88f8225ead356bf27f24e226db" translate="yes" xml:space="preserve">
          <source>see reference &lt;a href=&quot;#rb2a5641379f7-4&quot; id=&quot;id4&quot;&gt;[4]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38244aaeb50492b3e16c7c9cc3d90de10892a0c8" translate="yes" xml:space="preserve">
          <source>see reference [3]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e904257667d994ef8112b7278500225a86c1df6" translate="yes" xml:space="preserve">
          <source>see reference [4]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6184b2a070cb86019437f4486764d2972cca0bfa" translate="yes" xml:space="preserve">
          <source>semi_supervised</source>
          <target state="translated">semi_supervised</target>
        </trans-unit>
        <trans-unit id="c1c8cad332942af05401883c2d10e39405c6dab6" translate="yes" xml:space="preserve">
          <source>sepal length in cm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8d5e238d21ca1bc75b0994ea98139f9dbebc5f2" translate="yes" xml:space="preserve">
          <source>sepal length:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50dbcfb843aa1d57bceb19638c8956e19c9d4e3e" translate="yes" xml:space="preserve">
          <source>sepal width in cm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74737cab6e8ac719507a072e07d6c745040a630f" translate="yes" xml:space="preserve">
          <source>sepal width:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41e4f6f1d88798f212c01c7876aa952aa5caf025" translate="yes" xml:space="preserve">
          <source>set (X, y).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72b4132c29edfb910cdfe67f0bc559988f681bcb" translate="yes" xml:space="preserve">
          <source>set to False to perform inplace binarization and avoid a copy (if the input is already a numpy array or a scipy.sparse CSR / CSC matrix and if axis is 1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d25a2172da7e8b231250f814344bcc4b2721ede" translate="yes" xml:space="preserve">
          <source>set to False to perform inplace binarization and avoid a copy (if the input is already a numpy array or a scipy.sparse CSR matrix).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97451528034bb90b219b02f4c90ad3a06b93054e" translate="yes" xml:space="preserve">
          <source>set to False to perform inplace row normalization and avoid a copy (if the input is already a numpy array or a scipy.sparse CSC matrix and if axis is 1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51aa752b3a5722c8a646bfa9787b002655268f53" translate="yes" xml:space="preserve">
          <source>set to False to perform inplace row normalization and avoid a copy (if the input is already a numpy array or a scipy.sparse CSR matrix and if axis is 1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8830b8f813d82a1001659fb2393f1bc45e711c7" translate="yes" xml:space="preserve">
          <source>set to False to perform inplace row normalization and avoid a copy (if the input is already a numpy array or a scipy.sparse CSR matrix).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7197769f2b3f2c46a46ed8f0faee7ce18ff60517" translate="yes" xml:space="preserve">
          <source>set_config()</source>
          <target state="translated">set_config()</target>
        </trans-unit>
        <trans-unit id="3490760482767a30e09e02bb36203b9a833bfe75" translate="yes" xml:space="preserve">
          <source>shape = [n_samples, n_features] Training data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac3df235f00a2af5aabf15ee0940538ce6cf3aba" translate="yes" xml:space="preserve">
          <source>shape = [n_targets] if array-like Regularization strength; must be a positive float. Regularization improves the conditioning of the problem and reduces the variance of the estimates. Larger values specify stronger regularization. Alpha corresponds to &lt;code&gt;C^-1&lt;/code&gt; in other linear models such as LogisticRegression or LinearSVC. If an array is passed, penalties are assumed to be specific to the targets. Hence they must correspond in number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0e5806be2968167121d5b2f42084f69143d1dac" translate="yes" xml:space="preserve">
          <source>should be between [0, 1] 0.5 means that the median of all pairwise distances is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de667e54a3676294de9e35d8e5cf9b8bcf2c028f" translate="yes" xml:space="preserve">
          <source>show_versions()</source>
          <target state="translated">show_versions()</target>
        </trans-unit>
        <trans-unit id="8eb2537e918c4074a3899906734481121a1102bd" translate="yes" xml:space="preserve">
          <source>sigmoid (\(\tanh(\gamma \langle x,x'\rangle + r)\)), where \(r\) is specified by &lt;code&gt;coef0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a5232113830617e7533e745b011a39d84470ad" translate="yes" xml:space="preserve">
          <source>silhouette</source>
          <target state="translated">silhouette</target>
        </trans-unit>
        <trans-unit id="2a01b1e320ad1bd49e6bd998379b2b01874e5a2a" translate="yes" xml:space="preserve">
          <source>silhouette coefficient</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a6ebc54e1c406f20adfa8fa7ca9a1550c21ffaa" translate="yes" xml:space="preserve">
          <source>similar function for loading multiple files in this</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb31e65eb87b26230d0a09c04a583e7f1da4d41f" translate="yes" xml:space="preserve">
          <source>similarly, \(\hat{y}_s\) and \(\hat{y}_l\) are subsets of \(\hat{y}\)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b21f04eca6ff7ce6ea28c686333f1fc503bbd79d" translate="yes" xml:space="preserve">
          <source>simplified variant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2203bf91c0fe6bbd5bee2aa4a97ad9d35935035" translate="yes" xml:space="preserve">
          <source>single linkage is fast, and can perform well on non-globular data, but it performs poorly in the presence of noise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="539c8a82ca01f748ddcd1a8df444c0777ebe723c" translate="yes" xml:space="preserve">
          <source>single uses the minimum of the distances between all observations of the two sets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baf2ff5d6314798258dc79e8ad95ead3ac8ba145" translate="yes" xml:space="preserve">
          <source>sklearn</source>
          <target state="translated">sklearn</target>
        </trans-unit>
        <trans-unit id="04d0705efecc39232e0287a1460d4de82f335b9e" translate="yes" xml:space="preserve">
          <source>sklearn.base.BaseEstimator</source>
          <target state="translated">sklearn.base.BaseEstimator</target>
        </trans-unit>
        <trans-unit id="cef4cee6adac0140991b1ff5b38745ebf57af8c6" translate="yes" xml:space="preserve">
          <source>sklearn.base.BiclusterMixin</source>
          <target state="translated">sklearn.base.BiclusterMixin</target>
        </trans-unit>
        <trans-unit id="c6e8fd4d9fe53a554e790cf69806f133025a92fc" translate="yes" xml:space="preserve">
          <source>sklearn.base.ClassifierMixin</source>
          <target state="translated">sklearn.base.ClassifierMixin</target>
        </trans-unit>
        <trans-unit id="8bec78e590427cbdc2a62da49d9e42db8d84661c" translate="yes" xml:space="preserve">
          <source>sklearn.base.ClusterMixin</source>
          <target state="translated">sklearn.base.ClusterMixin</target>
        </trans-unit>
        <trans-unit id="6cee85ed47d4ff44fc5f314ad18a081b1dbec7b6" translate="yes" xml:space="preserve">
          <source>sklearn.base.DensityMixin</source>
          <target state="translated">sklearn.base.DensityMixin</target>
        </trans-unit>
        <trans-unit id="ba12799765d27c96819a5c5a943b13c62f065b56" translate="yes" xml:space="preserve">
          <source>sklearn.base.RegressorMixin</source>
          <target state="translated">sklearn.base.RegressorMixin</target>
        </trans-unit>
        <trans-unit id="efe7906461995e7191174ef64e3da5cfa4745c5d" translate="yes" xml:space="preserve">
          <source>sklearn.base.TransformerMixin</source>
          <target state="translated">sklearn.base.TransformerMixin</target>
        </trans-unit>
        <trans-unit id="a63b42a3a313bad2f304ce758c3b5ccdfda88cdf" translate="yes" xml:space="preserve">
          <source>sklearn.base.clone</source>
          <target state="translated">sklearn.base.clone</target>
        </trans-unit>
        <trans-unit id="d7d6046a9a9f3daa3a0f86393f78e7f3c583f7da" translate="yes" xml:space="preserve">
          <source>sklearn.base.clone()</source>
          <target state="translated">sklearn.base.clone()</target>
        </trans-unit>
        <trans-unit id="90106e826e9be3ae1047f8263ff3097f9a8c6f27" translate="yes" xml:space="preserve">
          <source>sklearn.base.is_classifier</source>
          <target state="translated">sklearn.base.is_classifier</target>
        </trans-unit>
        <trans-unit id="ac401fd4d097eeccb5c434cbec6b3a04141c9ef8" translate="yes" xml:space="preserve">
          <source>sklearn.base.is_classifier()</source>
          <target state="translated">sklearn.base.is_classifier()</target>
        </trans-unit>
        <trans-unit id="43dd13672c076c163c3fd64f3282d6e2cd16b524" translate="yes" xml:space="preserve">
          <source>sklearn.base.is_regressor</source>
          <target state="translated">sklearn.base.is_regressor</target>
        </trans-unit>
        <trans-unit id="5670128d83271246d02194551b3a3c8533ec9726" translate="yes" xml:space="preserve">
          <source>sklearn.base.is_regressor()</source>
          <target state="translated">sklearn.base.is_regressor()</target>
        </trans-unit>
        <trans-unit id="0ecae99ca15b8503f58d2d666a69f6687a8e6f3c" translate="yes" xml:space="preserve">
          <source>sklearn.base: Base classes and utility functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa59444f9e74d6a12f65aba27eba977144194c0a" translate="yes" xml:space="preserve">
          <source>sklearn.calibration.CalibratedClassifierCV</source>
          <target state="translated">sklearn.calibration.CalibratedClassifierCV</target>
        </trans-unit>
        <trans-unit id="f4ec20c2b06a95da56e9ee3ce6f13ae9d863a1ad" translate="yes" xml:space="preserve">
          <source>sklearn.calibration.calibration_curve</source>
          <target state="translated">sklearn.calibration.calibration_curve</target>
        </trans-unit>
        <trans-unit id="f5787e104856a30957424dd856bba4b5a512e3a6" translate="yes" xml:space="preserve">
          <source>sklearn.calibration.calibration_curve()</source>
          <target state="translated">sklearn.calibration.calibration_curve()</target>
        </trans-unit>
        <trans-unit id="b0d1e9ba7ce753636943ae7ed8fd96e4afae350e" translate="yes" xml:space="preserve">
          <source>sklearn.calibration: Probability Calibration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5037e3093cbb0aed189f56e9e4a54225330febc0" translate="yes" xml:space="preserve">
          <source>sklearn.cluster.AffinityPropagation</source>
          <target state="translated">sklearn.cluster.AffinityPropagation</target>
        </trans-unit>
        <trans-unit id="aee8e46aeb0fe536708a8be3029f6004de394852" translate="yes" xml:space="preserve">
          <source>sklearn.cluster.AgglomerativeClustering</source>
          <target state="translated">sklearn.cluster.AgglomerativeClustering</target>
        </trans-unit>
        <trans-unit id="cbf784d3d785eac27bc2bb92d650e42c760068c2" translate="yes" xml:space="preserve">
          <source>sklearn.cluster.Birch</source>
          <target state="translated">sklearn.cluster.Birch</target>
        </trans-unit>
        <trans-unit id="d1ebb4342176b724892d9f253963a850cf8781f1" translate="yes" xml:space="preserve">
          <source>sklearn.cluster.DBSCAN</source>
          <target state="translated">sklearn.cluster.DBSCAN</target>
        </trans-unit>
        <trans-unit id="e79fcfe20a4172835e8be97172cd89aef7450870" translate="yes" xml:space="preserve">
          <source>sklearn.cluster.FeatureAgglomeration</source>
          <target state="translated">sklearn.cluster.FeatureAgglomeration</target>
        </trans-unit>
        <trans-unit id="8466a60f9e7298671c1a61a2b1efde9b1b5eb7e6" translate="yes" xml:space="preserve">
          <source>sklearn.cluster.KMeans</source>
          <target state="translated">sklearn.cluster.KMeans</target>
        </trans-unit>
        <trans-unit id="5009c697b9ad5ef74e914d7f6a47cb16c045dfb6" translate="yes" xml:space="preserve">
          <source>sklearn.cluster.MeanShift</source>
          <target state="translated">sklearn.cluster.MeanShift</target>
        </trans-unit>
        <trans-unit id="9bd32a279fa57f37fa9a60bdba6f9aed01c84d60" translate="yes" xml:space="preserve">
          <source>sklearn.cluster.MiniBatchKMeans</source>
          <target state="translated">sklearn.cluster.MiniBatchKMeans</target>
        </trans-unit>
        <trans-unit id="71c4c17b0f1d2139bba49a1304cd5e7b7ecdd7e6" translate="yes" xml:space="preserve">
          <source>sklearn.cluster.SpectralClustering</source>
          <target state="translated">sklearn.cluster.SpectralClustering</target>
        </trans-unit>
        <trans-unit id="62c72b976d9cb4a9bf24fbda1905e657092f403f" translate="yes" xml:space="preserve">
          <source>sklearn.cluster.affinity_propagation</source>
          <target state="translated">sklearn.cluster.affinity_propagation</target>
        </trans-unit>
        <trans-unit id="34f45c3379b8ad6707b6a24fe7f8d60e42b8103e" translate="yes" xml:space="preserve">
          <source>sklearn.cluster.affinity_propagation()</source>
          <target state="translated">sklearn.cluster.affinity_propagation()</target>
        </trans-unit>
        <trans-unit id="ebf4476d451ff7ac764f88da4167c8c420fcd4f6" translate="yes" xml:space="preserve">
          <source>sklearn.cluster.bicluster.SpectralBiclustering</source>
          <target state="translated">sklearn.cluster.bicluster.SpectralBiclustering</target>
        </trans-unit>
        <trans-unit id="f162ede30a4db51d6f88a5957ec5b2eb5e3ec4ef" translate="yes" xml:space="preserve">
          <source>sklearn.cluster.bicluster.SpectralCoclustering</source>
          <target state="translated">sklearn.cluster.bicluster.SpectralCoclustering</target>
        </trans-unit>
        <trans-unit id="30f5ac513267437c5573e520f6985fe281cb9e7b" translate="yes" xml:space="preserve">
          <source>sklearn.cluster.bicluster: Biclustering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c9f6f1c9c33a5e7f4c4f945d4bd0ebff1df423c" translate="yes" xml:space="preserve">
          <source>sklearn.cluster.estimate_bandwidth</source>
          <target state="translated">sklearn.cluster.estimate_bandwidth</target>
        </trans-unit>
        <trans-unit id="654aa9a9fd0c879f075e02daf885f91337484f6f" translate="yes" xml:space="preserve">
          <source>sklearn.cluster.estimate_bandwidth()</source>
          <target state="translated">sklearn.cluster.estimate_bandwidth()</target>
        </trans-unit>
        <trans-unit id="7636f8305a0afa4222b30818eb92a8256f18da50" translate="yes" xml:space="preserve">
          <source>sklearn.cluster.k_means</source>
          <target state="translated">sklearn.cluster.k_means</target>
        </trans-unit>
        <trans-unit id="6d63cc683fbc7cafd7569eb3d4fec51537b211f0" translate="yes" xml:space="preserve">
          <source>sklearn.cluster.k_means()</source>
          <target state="translated">sklearn.cluster.k_means()</target>
        </trans-unit>
        <trans-unit id="75166aec79cdcc2a4852e951564ff367d8b0a283" translate="yes" xml:space="preserve">
          <source>sklearn.cluster.mean_shift</source>
          <target state="translated">sklearn.cluster.mean_shift</target>
        </trans-unit>
        <trans-unit id="48e04e0e7081ae7c16597e411cb46626fb13a003" translate="yes" xml:space="preserve">
          <source>sklearn.cluster.mean_shift()</source>
          <target state="translated">sklearn.cluster.mean_shift()</target>
        </trans-unit>
        <trans-unit id="dffcd99cfdab2f04fd7e65e32a06ea0756ef587a" translate="yes" xml:space="preserve">
          <source>sklearn.cluster.spectral_clustering</source>
          <target state="translated">sklearn.cluster.spectral_clustering</target>
        </trans-unit>
        <trans-unit id="157905d7a38847fdb51d620b12f01dec82f2a152" translate="yes" xml:space="preserve">
          <source>sklearn.cluster.spectral_clustering()</source>
          <target state="translated">sklearn.cluster.spectral_clustering()</target>
        </trans-unit>
        <trans-unit id="509320b898ea1c1aaf2456d1de96f9565626314b" translate="yes" xml:space="preserve">
          <source>sklearn.cluster.ward_tree</source>
          <target state="translated">sklearn.cluster.ward_tree</target>
        </trans-unit>
        <trans-unit id="08a3cbdb2082d56a7b4a7860dd8e1cb4c1fa433a" translate="yes" xml:space="preserve">
          <source>sklearn.cluster.ward_tree()</source>
          <target state="translated">sklearn.cluster.ward_tree()</target>
        </trans-unit>
        <trans-unit id="95cef3b2f01734ab3c96c290b75fcc4aa0e814c6" translate="yes" xml:space="preserve">
          <source>sklearn.cluster: Clustering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45b0602f53f076c9f17481728416a0f677d1684e" translate="yes" xml:space="preserve">
          <source>sklearn.compose.ColumnTransformer</source>
          <target state="translated">sklearn.compose.ColumnTransformer</target>
        </trans-unit>
        <trans-unit id="33c944c1d88efcc8314fc50f7753d457c8935a73" translate="yes" xml:space="preserve">
          <source>sklearn.compose.TransformedTargetRegressor</source>
          <target state="translated">sklearn.compose.TransformedTargetRegressor</target>
        </trans-unit>
        <trans-unit id="41657af3b3b4fdd439e743d76dbe4376e13caf37" translate="yes" xml:space="preserve">
          <source>sklearn.compose.make_column_transformer</source>
          <target state="translated">sklearn.compose.make_column_transformer</target>
        </trans-unit>
        <trans-unit id="17b5d4f5fb13bdfb6bdf9e1110dcde28848bde6e" translate="yes" xml:space="preserve">
          <source>sklearn.compose.make_column_transformer()</source>
          <target state="translated">sklearn.compose.make_column_transformer()</target>
        </trans-unit>
        <trans-unit id="03b45fbccc6c902646248847f067fcf6de0595a8" translate="yes" xml:space="preserve">
          <source>sklearn.compose: Composite Estimators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e0a5f3ef9c03ee7da38ea413aff5b165f7c9f4a" translate="yes" xml:space="preserve">
          <source>sklearn.config_context</source>
          <target state="translated">sklearn.config_context</target>
        </trans-unit>
        <trans-unit id="8eb1a18202aa1aad3fd982cf054a1fa2abbe2508" translate="yes" xml:space="preserve">
          <source>sklearn.covariance.EllipticEnvelope</source>
          <target state="translated">sklearn.covariance.EllipticEnvelope</target>
        </trans-unit>
        <trans-unit id="9ebf717c16cc4b1117f79c01f31641320cf30ccd" translate="yes" xml:space="preserve">
          <source>sklearn.covariance.EmpiricalCovariance</source>
          <target state="translated">sklearn.covariance.EmpiricalCovariance</target>
        </trans-unit>
        <trans-unit id="a9bfd3d5f43442ede4bd0207af9ed878a72efec8" translate="yes" xml:space="preserve">
          <source>sklearn.covariance.GraphLasso</source>
          <target state="translated">sklearn.covariance.GraphLasso</target>
        </trans-unit>
        <trans-unit id="7bbc6e182655d7de0d375064a89e304ca0fe472b" translate="yes" xml:space="preserve">
          <source>sklearn.covariance.GraphLassoCV</source>
          <target state="translated">sklearn.covariance.GraphLassoCV</target>
        </trans-unit>
        <trans-unit id="31b9d606a7bee4f4246488611f0cc44363e1211a" translate="yes" xml:space="preserve">
          <source>sklearn.covariance.GraphicalLasso</source>
          <target state="translated">sklearn.covariance.GraphicalLasso</target>
        </trans-unit>
        <trans-unit id="c92601ccb801da9540cf556731b9d0b952105e73" translate="yes" xml:space="preserve">
          <source>sklearn.covariance.GraphicalLassoCV</source>
          <target state="translated">sklearn.covariance.GraphicalLassoCV</target>
        </trans-unit>
        <trans-unit id="f760b0545dbba140ec38b0f7638d9b003be17d0e" translate="yes" xml:space="preserve">
          <source>sklearn.covariance.LedoitWolf</source>
          <target state="translated">sklearn.covariance.LedoitWolf</target>
        </trans-unit>
        <trans-unit id="f905f82b01457b173b12c9f50a0a51e3f529624c" translate="yes" xml:space="preserve">
          <source>sklearn.covariance.MinCovDet</source>
          <target state="translated">sklearn.covariance.MinCovDet</target>
        </trans-unit>
        <trans-unit id="1cc339d249b81be54d7062500c925938bb86b6a3" translate="yes" xml:space="preserve">
          <source>sklearn.covariance.OAS</source>
          <target state="translated">sklearn.covariance.OAS</target>
        </trans-unit>
        <trans-unit id="483e7d958cace6f439546317d99ddb60a3a831e4" translate="yes" xml:space="preserve">
          <source>sklearn.covariance.ShrunkCovariance</source>
          <target state="translated">sklearn.covariance.ShrunkCovariance</target>
        </trans-unit>
        <trans-unit id="51024d4e5df4b58092b37f9dc20c8e8e25c969e0" translate="yes" xml:space="preserve">
          <source>sklearn.covariance.empirical_covariance</source>
          <target state="translated">sklearn.covariance.empirical_covariance</target>
        </trans-unit>
        <trans-unit id="998f5af73910485c4c7d7f38020521f5331170a0" translate="yes" xml:space="preserve">
          <source>sklearn.covariance.empirical_covariance()</source>
          <target state="translated">sklearn.covariance.empirical_covariance()</target>
        </trans-unit>
        <trans-unit id="b8db9b00cac88324766699e7fa1bbc4f70ad655a" translate="yes" xml:space="preserve">
          <source>sklearn.covariance.graph_lasso</source>
          <target state="translated">sklearn.covariance.graph_lasso</target>
        </trans-unit>
        <trans-unit id="1094e56e92da2ec0ed94a351cd61f792e3be0133" translate="yes" xml:space="preserve">
          <source>sklearn.covariance.graph_lasso()</source>
          <target state="translated">sklearn.covariance.graph_lasso()</target>
        </trans-unit>
        <trans-unit id="4841f6c2d9b09f5aa4ece65aebc80c55acd9e1fa" translate="yes" xml:space="preserve">
          <source>sklearn.covariance.graphical_lasso</source>
          <target state="translated">sklearn.covariance.graphical_lasso</target>
        </trans-unit>
        <trans-unit id="0abcc8b896081724c9e570c98beb1a6a2bf1ef25" translate="yes" xml:space="preserve">
          <source>sklearn.covariance.graphical_lasso()</source>
          <target state="translated">sklearn.covariance.graphical_lasso()</target>
        </trans-unit>
        <trans-unit id="85625c5ad2f3f97cadfcf3fabe5d619c1f9c188a" translate="yes" xml:space="preserve">
          <source>sklearn.covariance.ledoit_wolf</source>
          <target state="translated">sklearn.covariance.ledoit_wolf</target>
        </trans-unit>
        <trans-unit id="826262e9e1949bcbf985c2b2b4b45b0e924a561a" translate="yes" xml:space="preserve">
          <source>sklearn.covariance.ledoit_wolf()</source>
          <target state="translated">sklearn.covariance.ledoit_wolf()</target>
        </trans-unit>
        <trans-unit id="df2d32a086623b594613c8b10e4e2afe6e3347d0" translate="yes" xml:space="preserve">
          <source>sklearn.covariance.shrunk_covariance</source>
          <target state="translated">sklearn.covariance.shrunk_covariance</target>
        </trans-unit>
        <trans-unit id="2eaadba10428a12c5980ded25445cd6d0258e13d" translate="yes" xml:space="preserve">
          <source>sklearn.covariance.shrunk_covariance()</source>
          <target state="translated">sklearn.covariance.shrunk_covariance()</target>
        </trans-unit>
        <trans-unit id="684667b26b6da7bc0d6c541d5ba9719126625fb6" translate="yes" xml:space="preserve">
          <source>sklearn.covariance: Covariance Estimators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a05fbec3a3cdd6202051e5885b4ead986c9a46b9" translate="yes" xml:space="preserve">
          <source>sklearn.cross_decomposition.CCA</source>
          <target state="translated">sklearn.cross_decomposition.CCA</target>
        </trans-unit>
        <trans-unit id="835aaf9a1ac88f244eb3f678edcbcfcf0cbdb175" translate="yes" xml:space="preserve">
          <source>sklearn.cross_decomposition.PLSCanonical</source>
          <target state="translated">sklearn.cross_decomposition.PLSCanonical</target>
        </trans-unit>
        <trans-unit id="225b60bec486f4b0ff01b1e23ac4789549a97f2e" translate="yes" xml:space="preserve">
          <source>sklearn.cross_decomposition.PLSRegression</source>
          <target state="translated">sklearn.cross_decomposition.PLSRegression</target>
        </trans-unit>
        <trans-unit id="1a548a3d895271ed85553e30ade37d8e14ca952e" translate="yes" xml:space="preserve">
          <source>sklearn.cross_decomposition.PLSSVD</source>
          <target state="translated">sklearn.cross_decomposition.PLSSVD</target>
        </trans-unit>
        <trans-unit id="d009fbf16e13b11adb2524e5d26a75ab88c52e1c" translate="yes" xml:space="preserve">
          <source>sklearn.cross_decomposition: Cross decomposition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d108d1374c59e3df953982bb3aa79882a526c3a" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.clear_data_home</source>
          <target state="translated">sklearn.datasets.clear_data_home</target>
        </trans-unit>
        <trans-unit id="55a888c9219f91ce3a2584cadd44a973801bd93b" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.clear_data_home()</source>
          <target state="translated">sklearn.datasets.clear_data_home()</target>
        </trans-unit>
        <trans-unit id="a949b031fe88cd308613a6fef85798fc2227f6b2" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.dump_svmlight_file</source>
          <target state="translated">sklearn.datasets.dump_svmlight_file</target>
        </trans-unit>
        <trans-unit id="9374151cf2eb61a6a0e40e2df7da7cd24a8ab961" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.dump_svmlight_file()</source>
          <target state="translated">sklearn.datasets.dump_svmlight_file()</target>
        </trans-unit>
        <trans-unit id="9196cdad1766047b40bc9a3911d58d689e4bbaa0" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.fetch_20newsgroups</source>
          <target state="translated">sklearn.datasets.fetch_20newsgroups</target>
        </trans-unit>
        <trans-unit id="d3e36fe734eab37dd9f5b3d92ab8fd4c72daf95a" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.fetch_20newsgroups()</source>
          <target state="translated">sklearn.datasets.fetch_20newsgroups()</target>
        </trans-unit>
        <trans-unit id="3f31cee0851606e0f8135be0ebeff4e66bd95252" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.fetch_20newsgroups_vectorized</source>
          <target state="translated">sklearn.datasets.fetch_20newsgroups_vectorized</target>
        </trans-unit>
        <trans-unit id="0dfedbf4996db5d6a5dbd295e2cc2c3931d599af" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.fetch_20newsgroups_vectorized()</source>
          <target state="translated">sklearn.datasets.fetch_20newsgroups_vectorized()</target>
        </trans-unit>
        <trans-unit id="2e9e3405b29ced46c392d047acfe852478079e10" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.fetch_california_housing</source>
          <target state="translated">sklearn.datasets.fetch_california_housing</target>
        </trans-unit>
        <trans-unit id="3b68623291df92465834190e00e44e0deeff6bbe" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.fetch_california_housing()</source>
          <target state="translated">sklearn.datasets.fetch_california_housing()</target>
        </trans-unit>
        <trans-unit id="8508de118b60b679a63de5c487dc61bd40768fc7" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.fetch_covtype</source>
          <target state="translated">sklearn.datasets.fetch_covtype</target>
        </trans-unit>
        <trans-unit id="7125b6645fc7f0cf446fd8eda1de602bbc39917f" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.fetch_covtype()</source>
          <target state="translated">sklearn.datasets.fetch_covtype()</target>
        </trans-unit>
        <trans-unit id="c2629d353629327297d4690f1819052eb6ec816d" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.fetch_kddcup99</source>
          <target state="translated">sklearn.datasets.fetch_kddcup99</target>
        </trans-unit>
        <trans-unit id="966d26c1b2abb7d048322e1b9b35751ec4d3ab1f" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.fetch_kddcup99()</source>
          <target state="translated">sklearn.datasets.fetch_kddcup99()</target>
        </trans-unit>
        <trans-unit id="545be75527b7eb6ba05dcd43b60311608a1c3211" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.fetch_lfw_pairs</source>
          <target state="translated">sklearn.datasets.fetch_lfw_pairs</target>
        </trans-unit>
        <trans-unit id="8606a07fcd987ec07587ffab2738f8dce3f8b691" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.fetch_lfw_pairs()</source>
          <target state="translated">sklearn.datasets.fetch_lfw_pairs()</target>
        </trans-unit>
        <trans-unit id="0c527078b41835ca0db23bee26095510936511f9" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.fetch_lfw_people</source>
          <target state="translated">sklearn.datasets.fetch_lfw_people</target>
        </trans-unit>
        <trans-unit id="8c62221fbda26977ae8ef20811bc83703c1985a0" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.fetch_lfw_people()</source>
          <target state="translated">sklearn.datasets.fetch_lfw_people()</target>
        </trans-unit>
        <trans-unit id="dc3a6998bb6aa004603128ea2df143af5ffdafb1" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.fetch_mldata</source>
          <target state="translated">sklearn.datasets.fetch_mldata</target>
        </trans-unit>
        <trans-unit id="a1226650fd888ecbcb90e4c2498da2273557cda5" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.fetch_mldata()</source>
          <target state="translated">sklearn.datasets.fetch_mldata()</target>
        </trans-unit>
        <trans-unit id="5968c739834adf2f675b59613ca16447b9e3fec7" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.fetch_olivetti_faces</source>
          <target state="translated">sklearn.datasets.fetch_olivetti_faces</target>
        </trans-unit>
        <trans-unit id="28495c0d19aac8848bbddd285084c5a6fe28a06e" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.fetch_olivetti_faces()</source>
          <target state="translated">sklearn.datasets.fetch_olivetti_faces()</target>
        </trans-unit>
        <trans-unit id="eae784716acc836138953fba20b0e2a7205d4b3d" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.fetch_openml</source>
          <target state="translated">sklearn.datasets.fetch_openml</target>
        </trans-unit>
        <trans-unit id="4540876f9b76945c79c27fb6af04418d7144fa02" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.fetch_openml()</source>
          <target state="translated">sklearn.datasets.fetch_openml()</target>
        </trans-unit>
        <trans-unit id="d912eea746318a74c4047e978daab3ca9e134914" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.fetch_rcv1</source>
          <target state="translated">sklearn.datasets.fetch_rcv1</target>
        </trans-unit>
        <trans-unit id="bb809faf96461671c14c3084fdea6ca91a54e93f" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.fetch_rcv1()</source>
          <target state="translated">sklearn.datasets.fetch_rcv1()</target>
        </trans-unit>
        <trans-unit id="41f901e24fda43b32eb100ba7e5c7feccabcd8f2" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.fetch_species_distributions</source>
          <target state="translated">sklearn.datasets.fetch_species_distributions</target>
        </trans-unit>
        <trans-unit id="a8c78e1508b3bc5eef1e4f7561253d92e52ef8b9" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.fetch_species_distributions()</source>
          <target state="translated">sklearn.datasets.fetch_species_distributions()</target>
        </trans-unit>
        <trans-unit id="d3654d234a9b8d7fab432e23709bb355599d05d0" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.get_data_home</source>
          <target state="translated">sklearn.datasets.get_data_home</target>
        </trans-unit>
        <trans-unit id="c145e1c24f4bb22ed0eef32ac18093dc2c73eae9" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.get_data_home()</source>
          <target state="translated">sklearn.datasets.get_data_home()</target>
        </trans-unit>
        <trans-unit id="02a9e0f8ba0186fbacde07a100c0fdadd50fda96" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.load_boston</source>
          <target state="translated">sklearn.datasets.load_boston</target>
        </trans-unit>
        <trans-unit id="d59cdeda9217d30a8687be94a5c4affc34723f6b" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.load_boston()</source>
          <target state="translated">sklearn.datasets.load_boston()</target>
        </trans-unit>
        <trans-unit id="6c88a6b03989cd247222bcecb437f1f3dc6eb251" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.load_breast_cancer</source>
          <target state="translated">sklearn.datasets.load_breast_cancer</target>
        </trans-unit>
        <trans-unit id="b88470144d3889e39967c5de61e0182a8940f0d3" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.load_breast_cancer()</source>
          <target state="translated">sklearn.datasets.load_breast_cancer()</target>
        </trans-unit>
        <trans-unit id="c0209d6f1d3442161ca21ec1eec65200c2cf2b46" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.load_diabetes</source>
          <target state="translated">sklearn.datasets.load_diabetes</target>
        </trans-unit>
        <trans-unit id="1074d670b8c5eb184510bd2754c6a2379d44f93a" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.load_diabetes()</source>
          <target state="translated">sklearn.datasets.load_diabetes()</target>
        </trans-unit>
        <trans-unit id="70a37259da23a95a844192b8f03ef858e5e0268a" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.load_digits</source>
          <target state="translated">sklearn.datasets.load_digits</target>
        </trans-unit>
        <trans-unit id="99c89a4335fdcd8983c36c7a28b3dc246b8b5944" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.load_digits()</source>
          <target state="translated">sklearn.datasets.load_digits()</target>
        </trans-unit>
        <trans-unit id="9b10b1374c80fface7671d699dae970bcbaa1e3c" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.load_files</source>
          <target state="translated">sklearn.datasets.load_files</target>
        </trans-unit>
        <trans-unit id="6c486c41a8592c59030d56b34abcea2c3e29993f" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.load_files()</source>
          <target state="translated">sklearn.datasets.load_files()</target>
        </trans-unit>
        <trans-unit id="ba0f861bec1efce433a11da0fcaa2858c2e7d24f" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.load_iris</source>
          <target state="translated">sklearn.datasets.load_iris</target>
        </trans-unit>
        <trans-unit id="9cddcaa781f8186ba2c52002c811a75ca39abf50" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.load_iris()</source>
          <target state="translated">sklearn.datasets.load_iris()</target>
        </trans-unit>
        <trans-unit id="57104924ecbf5fc0dceadceb711e5bcdc6b2cc8d" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.load_linnerud</source>
          <target state="translated">sklearn.datasets.load_linnerud</target>
        </trans-unit>
        <trans-unit id="4eae1ee8a91d21e45cf38a7e5d432e900f268d72" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.load_linnerud()</source>
          <target state="translated">sklearn.datasets.load_linnerud()</target>
        </trans-unit>
        <trans-unit id="c720952e9bed28bb4828d22b18a4ece62d289c5b" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.load_mlcomp</source>
          <target state="translated">sklearn.datasets.load_mlcomp</target>
        </trans-unit>
        <trans-unit id="553a14f0952568eb8b352cad3c32c5789e772919" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.load_mlcomp()</source>
          <target state="translated">sklearn.datasets.load_mlcomp()</target>
        </trans-unit>
        <trans-unit id="27cf1f6b3d215b30d2464d5ee6b2188feaff7c90" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.load_sample_image</source>
          <target state="translated">sklearn.datasets.load_sample_image</target>
        </trans-unit>
        <trans-unit id="160a00ce0f09c53b2e7002785ee5c7a4f1fe20ed" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.load_sample_image()</source>
          <target state="translated">sklearn.datasets.load_sample_image()</target>
        </trans-unit>
        <trans-unit id="9303393446ebf5c4e7a4038417ccb3a8f6276df0" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.load_sample_images</source>
          <target state="translated">sklearn.datasets.load_sample_images</target>
        </trans-unit>
        <trans-unit id="33d1fd45a5637a00fe3cf7be79dbf27e7a1f55e3" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.load_sample_images()</source>
          <target state="translated">sklearn.datasets.load_sample_images()</target>
        </trans-unit>
        <trans-unit id="3bb70a2d6b445107f08f691e2f01b133e0f46b7b" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.load_svmlight_file</source>
          <target state="translated">sklearn.datasets.load_svmlight_file</target>
        </trans-unit>
        <trans-unit id="474ff80e34661ede2463062422a5002d8ea765ab" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.load_svmlight_file()</source>
          <target state="translated">sklearn.datasets.load_svmlight_file()</target>
        </trans-unit>
        <trans-unit id="fbd73eef550217b9e278e1f7ea76d06f7b4030e2" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.load_svmlight_files</source>
          <target state="translated">sklearn.datasets.load_svmlight_files</target>
        </trans-unit>
        <trans-unit id="bcd2e65bb5b9e199a44ed6fdd81fed9578fc9c65" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.load_svmlight_files()</source>
          <target state="translated">sklearn.datasets.load_svmlight_files()</target>
        </trans-unit>
        <trans-unit id="ca3784e4bede245e7cdab06494109c7134522867" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.load_wine</source>
          <target state="translated">sklearn.datasets.load_wine</target>
        </trans-unit>
        <trans-unit id="399346793b279b2757e8a75cb09f8ad29d2ce82b" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.load_wine()</source>
          <target state="translated">sklearn.datasets.load_wine()</target>
        </trans-unit>
        <trans-unit id="8995bf478c47ecc4cdbe5006f0a7e337f0168985" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.make_biclusters</source>
          <target state="translated">sklearn.datasets.make_biclusters</target>
        </trans-unit>
        <trans-unit id="f8f37592f4ff8db35f6d0d72ad2a0d432c7ebe2e" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.make_biclusters()</source>
          <target state="translated">sklearn.datasets.make_biclusters()</target>
        </trans-unit>
        <trans-unit id="e1b4dee62c3c7cdfa97ab5a7e81e9f6f1421f9e1" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.make_blobs</source>
          <target state="translated">sklearn.datasets.make_blobs</target>
        </trans-unit>
        <trans-unit id="e3575726aa399a974ffdb7d1f1ad47e8b48f86b5" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.make_blobs()</source>
          <target state="translated">sklearn.datasets.make_blobs()</target>
        </trans-unit>
        <trans-unit id="0ee1e25d2192a76617133f287c7ad0cd0a028224" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.make_checkerboard</source>
          <target state="translated">sklearn.datasets.make_checkerboard</target>
        </trans-unit>
        <trans-unit id="f1522df72a1bcd1bc09ff3b2209c7ce3b9e7b65b" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.make_checkerboard()</source>
          <target state="translated">sklearn.datasets.make_checkerboard()</target>
        </trans-unit>
        <trans-unit id="6e7c28b9cc5c542955b31a4a7e59fa46cfd79355" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.make_circles</source>
          <target state="translated">sklearn.datasets.make_circles</target>
        </trans-unit>
        <trans-unit id="901b93f6505e82a773e59935eee6feae140cb82b" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.make_circles()</source>
          <target state="translated">sklearn.datasets.make_circles()</target>
        </trans-unit>
        <trans-unit id="9caebfb34736c79da0fc1c3938b1b29e379d85da" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.make_classification</source>
          <target state="translated">sklearn.datasets.make_classification</target>
        </trans-unit>
        <trans-unit id="0872ccda7aaf0ecdd9f59fa39842f138767ab437" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.make_classification()</source>
          <target state="translated">sklearn.datasets.make_classification()</target>
        </trans-unit>
        <trans-unit id="ba18a87cda4cbf15303ca41eee9ff9114aef911b" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.make_friedman1</source>
          <target state="translated">sklearn.datasets.make_friedman1</target>
        </trans-unit>
        <trans-unit id="fdae1f24f8668f1c9aa75af65ab641d0fecb1f13" translate="yes" xml:space="preserve">
          <source>sklearn.datasets.make_friedman1()</source>
          <target state="translated">sklearn.datasets.make_friedman1()</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
