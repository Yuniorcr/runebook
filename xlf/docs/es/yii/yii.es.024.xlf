<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="yii">
    <body>
      <group id="yii">
        <trans-unit id="91941be21d3b0d1708385cb757b8e3cda6338fdb" translate="yes" xml:space="preserve">
          <source>Upload file max size in bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a21f7ea8a132950b8a16a0e5e6d856dc7fd2af71" translate="yes" xml:space="preserve">
          <source>Upload options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="695e441a1bff312decca7f007cccf67cb0611bd6" translate="yes" xml:space="preserve">
          <source>Uploaded file passed to check against a set of rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acba7772c538ca6ee5afbbdb760f54d607294d21" translate="yes" xml:space="preserve">
          <source>UploadedFile represents the information for an uploaded file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="943e26649b772824ba55708d2fd502f15bc84dd0" translate="yes" xml:space="preserve">
          <source>Uploading Files</source>
          <target state="translated">Subir archivos</target>
        </trans-unit>
        <trans-unit id="3c5e550cab5c0520628b4535b4c7973cc534bec2" translate="yes" xml:space="preserve">
          <source>Uploading Multiple Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="371206e2508145eb7c3a0de88f9e4f9a8edf81e1" translate="yes" xml:space="preserve">
          <source>Uploading files in Yii is usually done with the help of &lt;a href=&quot;yii-web-uploadedfile&quot;&gt;yii\web\UploadedFile&lt;/a&gt; which encapsulates each uploaded file as an &lt;code&gt;UploadedFile&lt;/code&gt; object. Combined with &lt;a href=&quot;yii-widgets-activeform&quot;&gt;yii\widgets\ActiveForm&lt;/a&gt; and &lt;a href=&quot;guide-structure-models&quot;&gt;models&lt;/a&gt;, you can easily implement a secure file uploading mechanism.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46080f643fe29b1aa21591c2179678cc780b3c04" translate="yes" xml:space="preserve">
          <source>Upper limit of the date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f30929d4dc33963eb60db13783938c71dc4df1d" translate="yes" xml:space="preserve">
          <source>Upper limit of the date. Defaults to null, meaning no upper limit. This can be a unix timestamp or a string representing a date time value. If this property is a string, &lt;a href=&quot;yii-validators-datevalidator#%24format-detail&quot;&gt;$format&lt;/a&gt; will be used to parse it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cade8759f45d9b0dd4d8e33c2dec9f6396ddfb61" translate="yes" xml:space="preserve">
          <source>Upper limit of the number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adc35480281bd5c2224f4b1236d43edc164dd0d4" translate="yes" xml:space="preserve">
          <source>Upper limit of the number. Defaults to null, meaning no upper limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="438d436e9e795334015357012b191fc69d10c95f" translate="yes" xml:space="preserve">
          <source>Url Helper</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aba8572d36f9935b63dbf10dd2e7f53fbe38b07" translate="yes" xml:space="preserve">
          <source>Url attribute input search value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22290e15672c558f7dd1320bb4177f08c7856071" translate="yes" xml:space="preserve">
          <source>Url helper provides a set of static methods for managing URLs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="774d6001029a832bbee7e3ab0929da2dc6ff9fc2" translate="yes" xml:space="preserve">
          <source>Url provides a set of static methods for managing URLs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e3ef494ca5715c44ebac7b58d7fcb19e436c80b" translate="yes" xml:space="preserve">
          <source>UrlManager handles HTTP request parsing and creation of URLs based on a set of rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91d3c6b00d164d4a8a4a904feb833cbfbb46bafe" translate="yes" xml:space="preserve">
          <source>UrlManager is configured as an application component in &lt;a href=&quot;yii-base-application&quot;&gt;yii\base\Application&lt;/a&gt; by default. You can access that instance via &lt;code&gt;Yii::$app-&amp;gt;urlManager&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3360d5ff43612dd78a0f4a303ee4d4b70cae6602" translate="yes" xml:space="preserve">
          <source>UrlNormalizer normalizes URLs for &lt;a href=&quot;yii-web-urlmanager&quot;&gt;yii\web\UrlManager&lt;/a&gt; and &lt;a href=&quot;yii-web-urlrule&quot;&gt;yii\web\UrlRule&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fce67d8bd187abbc54ad0036389343bca6412bbc" translate="yes" xml:space="preserve">
          <source>UrlNormalizerRedirectException represents an information for redirection which should be performed during the URL normalization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6e827a672504a0884407d7f1c4de28d3c96cbfe" translate="yes" xml:space="preserve">
          <source>UrlRule is provided to simplify the creation of URL rules for RESTful API support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e43a1dfc022c6b8a3fb681aeddafc0439044e86d" translate="yes" xml:space="preserve">
          <source>UrlRule represents a rule used by &lt;a href=&quot;yii-web-urlmanager&quot;&gt;yii\web\UrlManager&lt;/a&gt; for parsing and generating URLs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97e3f9790d3e2aea592b21bcc75232c5c08e3d06" translate="yes" xml:space="preserve">
          <source>UrlRuleInterface is the interface that should be implemented by URL rule classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc058b4161eb5ebf4bdc86c0d476156904c152f5" translate="yes" xml:space="preserve">
          <source>UrlValidator validates that the attribute value is a valid http or https URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11a57bc42a76d6820ca213de67e8d0ccc774864f" translate="yes" xml:space="preserve">
          <source>Urlencoded by PHP_QUERY_RFC3986 query string, like name1=value1&amp;amp;name2=value2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="214395afa160fb0b57c25901352bc87be413cb9e" translate="yes" xml:space="preserve">
          <source>Urlencoded by RFC1738 query string, like name1=value1&amp;amp;name2=value2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="fec43ce445f974147bd0eb223a50147e7fb7202d" translate="yes" xml:space="preserve">
          <source>Usage example:</source>
          <target state="translated">Ejemplo de uso:</target>
        </trans-unit>
        <trans-unit id="4203badea9d25afe8a571ce990ef871bace98bc5" translate="yes" xml:space="preserve">
          <source>Usage examples,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8c2b54fe6b8618e4992a4a2584ac707c363077a" translate="yes" xml:space="preserve">
          <source>Usage is as simple as the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="translated">Usage:</target>
        </trans-unit>
        <trans-unit id="a0e30a98d0b0602d8fbd452e36add70bbb5e1150" translate="yes" xml:space="preserve">
          <source>Usage: list($width, $height) = ConsoleHelper::getScreenSize();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94c34541d9e848fcc2550b54a6986d72f12b1675" translate="yes" xml:space="preserve">
          <source>Usages</source>
          <target state="translated">Usages</target>
        </trans-unit>
        <trans-unit id="c52723cb8121038cab34e6eb11cb8614b47334de" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;yii-helpers-baseconsole#showCursor()-detail&quot;&gt;showCursor()&lt;/a&gt; to bring it back. Do not forget to show cursor when your application exits. Cursor might stay hidden in terminal after exit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd2fce87b3907f4cdcd0ebd955020b8bae05dc4" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;yii migrate&lt;/code&gt; tool to upgrade your test database to the latest version;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94ad7ff9fe1289e210923ac325e7d4f205d11033" translate="yes" xml:space="preserve">
          <source>Use a Query object to represent a sub-query. In this case, the corresponding array key will be used as the alias for the sub-query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7e1dc7c157ddb738de3a20d5e0aac35762c4652" translate="yes" xml:space="preserve">
          <source>Use a string to represent a URL (e.g. &lt;code&gt;http://some-domain.com&lt;/code&gt;, &lt;code&gt;item/list&lt;/code&gt;), or an array to represent a URL with query parameters (e.g. &lt;code&gt;['item/list', 'param1' =&amp;gt; 'value1']&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a11371b5365cd00ce1020326c7bb433c99b90ea7" translate="yes" xml:space="preserve">
          <source>Use a string to represent a URL (e.g. `&lt;a href=&quot;http://some-domain&quot;&gt;http://some-domain&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53e3481462cef477d9bb848f2ee324566e2232a4" translate="yes" xml:space="preserve">
          <source>Use a string to represent a route (e.g. &lt;code&gt;index&lt;/code&gt;, &lt;code&gt;site/index&lt;/code&gt;), or an array to represent a route with query parameters (e.g. &lt;code&gt;['site/index', 'param1' =&amp;gt; 'value1']&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bafc45e940ffd5231e7816543fb607497c760229" translate="yes" xml:space="preserve">
          <source>Use a string to represent a route (e.g. &lt;code&gt;site/index&lt;/code&gt;), or an array to represent a route with query parameters (e.g. &lt;code&gt;['site/index', 'param1' =&amp;gt; 'value1']&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="160a374fe00c6bd51d566f40f772a0e444c21861" translate="yes" xml:space="preserve">
          <source>Use a string to represent the name of the table to be joined. The table name can contain a schema prefix (e.g. 'public.user') and/or table alias (e.g. 'user u'). The method will automatically quote the table name unless it contains some parenthesis (which means the table is given as a sub-query or DB expression).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e1adddfdd721cdc7c7d79d85acdc80ff8c3e9b" translate="yes" xml:space="preserve">
          <source>Use an array to represent joining with a sub-query. The array must contain only one element. The value must be a &lt;a href=&quot;yii-db-query&quot;&gt;yii\db\Query&lt;/a&gt; object representing the sub-query while the corresponding key represents the alias for the sub-query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89c34ed1f1d76bf5e2fa16c8a1835f29bea89433" translate="yes" xml:space="preserve">
          <source>Use an array to represent joining with a sub-query. The array must contain only one element. The value must be a &lt;a href=&quot;yii-sphinx-query&quot;&gt;yii\sphinx\Query&lt;/a&gt; object representing the sub-query while the corresponding key represents the alias for the sub-query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd6a2ee58475945b4733ae6a32f6ce1e910641f2" translate="yes" xml:space="preserve">
          <source>Use each active rule to validate each active attribute which is associated with the rule. The validation rules are evaluated in the order they are listed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce0c7f83fb3f02d83ba2a8a25448c52df216abcf" translate="yes" xml:space="preserve">
          <source>Use existing tools (e.g. &lt;a href=&quot;https://developers.google.com/closure/compiler/&quot;&gt;Closure Compiler&lt;/a&gt;, &lt;a href=&quot;https://github.com/yui/yuicompressor/&quot;&gt;YUI Compressor&lt;/a&gt;) to combine and compress CSS and JavaScript files in all the bundles. Note that the files should be combined in the order that satisfies the dependencies among the bundles. For example, if Bundle A depends on B which depends on both C and D, then you should list the asset files starting from C and D, followed by B and finally A.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="014866148da0c4c369734082439aff89f8085b9c" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;|&lt;/code&gt; operators to concatenate the above constants to indicate multiple operations. You may also use the shortcut constant &lt;a href=&quot;yii-db-activerecord#OP_ALL-detail&quot;&gt;OP_ALL&lt;/a&gt; to refer to all three operations above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd93855da78efeb97df543c2fd171713b8dce291" translate="yes" xml:space="preserve">
          <source>Use the Template</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab6709a1b5d0a260154ba478c839a7fa434abc29" translate="yes" xml:space="preserve">
          <source>Use the following configuration in Apache's &lt;code&gt;httpd.conf&lt;/code&gt; file or within a virtual host configuration. Note that you should replace &lt;code&gt;path/to/basic/web&lt;/code&gt; with the actual path for &lt;code&gt;basic/web&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45c2f29bdf9759bb851d33ded6128eb51db0abae" translate="yes" xml:space="preserve">
          <source>Use this exception to indicate that a client has made too many requests in a given period of time. For example, you would throw this exception when 'throttling' an API user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa11cf9f4bce641294fa25e6164799a7a130a09b" translate="yes" xml:space="preserve">
          <source>Use this exception to indicate that a client needs to authenticate via WWW-Authenticate header to perform the requested action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83b20869e54b3e2aa37821a7fedc0981c88e563a" translate="yes" xml:space="preserve">
          <source>Use this exception to inform that the server understands the content type of the request entity and the syntax of that request entity is correct but the server was unable to process the contained instructions. For example, to return form validation errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d7be807d5687ea68b7f2f5846356706d0c5d113" translate="yes" xml:space="preserve">
          <source>Use this exception to represent a generic client error. In many cases, there may be an HTTP exception that more precisely describes the error. In that case, consider using the more precise exception to provide the user with additional information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a359c44a02515eb48fe554949f5a47e49d379828" translate="yes" xml:space="preserve">
          <source>Use this exception when a user is not allowed to perform the requested action. Using different credentials might or might not allow performing the requested action. If you do not want to expose authorization information to the user, it is valid to respond with a 404 &lt;a href=&quot;yii-web-notfoundhttpexception&quot;&gt;yii\web\NotFoundHttpException&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="613aaddcbb784d3f9c0b6165eaa87eef1b2170ed" translate="yes" xml:space="preserve">
          <source>Use this exception when the client requests a Content-Type that your application cannot return. Note that, according to the HTTP 1.1 specification, you are not required to respond with this status code in this situation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="455f7ebf24df53ced6d14a20f72734436cb3d457" translate="yes" xml:space="preserve">
          <source>Use this exception when the client sends data in a format that your application does not understand. For example, you would throw this exception if the client POSTs XML data to an action or controller that only accepts JSON.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10a4e67660b8903a4a79970dc4eb6a6f4cefa3a5" translate="yes" xml:space="preserve">
          <source>Use this method to specify a junction table when declaring a relation in the &lt;a href=&quot;yii-db-activerecord&quot;&gt;yii\db\ActiveRecord&lt;/a&gt; class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb2141d7fcb64e1814d7a553b55daa4b4765d5e2" translate="yes" xml:space="preserve">
          <source>Use this method to specify a pivot record/table when declaring a relation in the &lt;a href=&quot;yii-db-activerecord&quot;&gt;yii\db\ActiveRecord&lt;/a&gt; class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b52dc3a03b5d55d0a1fafbe069762c9371833723" translate="yes" xml:space="preserve">
          <source>Use this method to specify additional conditions when declaring a relation in the &lt;a href=&quot;yii-db-activerecord&quot;&gt;yii\db\ActiveRecord&lt;/a&gt; class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="312f3beb456dd84a033e8d6d895cb8339ac62a8b" translate="yes" xml:space="preserve">
          <source>Use this method when declaring a relation in the &lt;a href=&quot;yii-db-activerecord&quot;&gt;yii\db\ActiveRecord&lt;/a&gt; class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4c1a83178db1d6e131cd405bed09ce5493fdf7f" translate="yes" xml:space="preserve">
          <source>Useful Properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c4f27d7ec15bc7da641a291ae85c59d19694aa9" translate="yes" xml:space="preserve">
          <source>User ID (see &lt;a href=&quot;yii-web-user#%24id-detail&quot;&gt;yii\web\User::$id&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="317322c7294557d99a8b1cacfa2c101114f0bd4f" translate="yes" xml:space="preserve">
          <source>User IP address, null if not available</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d595aa76a4732aec206327ba534fe2d354b676" translate="yes" xml:space="preserve">
          <source>User agent, null if not available</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1e680325b7b2e73f8fd702c90a9cf421be3f065" translate="yes" xml:space="preserve">
          <source>User authorization in regard to the requested action and resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c60ff063d013a500bde5299056f832569edfe03" translate="yes" xml:space="preserve">
          <source>User friendly value of lower limit to display in the error message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92d704f3a1031c3f01006a1ca23176cb74a3bc36" translate="yes" xml:space="preserve">
          <source>User friendly value of lower limit to display in the error message. If this property is null, the value of &lt;a href=&quot;yii-validators-datevalidator#%24min-detail&quot;&gt;$min&lt;/a&gt; will be used (before parsing).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6de67e797f571445467eeedd5e2b2a7922843aa" translate="yes" xml:space="preserve">
          <source>User friendly value of upper limit to display in the error message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e015e8a0ee7a385a714fcd675f3ba44352d13c04" translate="yes" xml:space="preserve">
          <source>User friendly value of upper limit to display in the error message. If this property is null, the value of &lt;a href=&quot;yii-validators-datevalidator#%24max-detail&quot;&gt;$max&lt;/a&gt; will be used (before parsing).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b898b5b4fc2f88c24319f137fc595a6d5ad0600" translate="yes" xml:space="preserve">
          <source>User host name, null if not available</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09099af5b046928eebce82ffe20cae42387454fa" translate="yes" xml:space="preserve">
          <source>User input</source>
          <target state="translated">La entrada del usuario...</target>
        </trans-unit>
        <trans-unit id="595dbb8b84e57462091e98a5f8262c13b8c306ea" translate="yes" xml:space="preserve">
          <source>User inputs often need to be filtered or preprocessed. For example, you may want to trim the spaces around the &lt;code&gt;username&lt;/code&gt; input. You may use validation rules to achieve this goal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3f2a33be5104473c59b9de56b11d7935f88d091" translate="yes" xml:space="preserve">
          <source>User is configured as an application component in &lt;a href=&quot;yii-web-application&quot;&gt;yii\web\Application&lt;/a&gt; by default. You can access that instance via &lt;code&gt;Yii::$app-&amp;gt;user&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44a4a135bc8f6e8c5a29c5ee997285b26259fee5" translate="yes" xml:space="preserve">
          <source>User is the class for the &lt;code&gt;user&lt;/code&gt; application component that manages the user authentication status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10ef42a45644103797c878bfd194ec705ff80ac2" translate="yes" xml:space="preserve">
          <source>User name.</source>
          <target state="translated">Nombre de usuario.</target>
        </trans-unit>
        <trans-unit id="7eb3ae892ee6c2bcf7f651ba54e208a50df0aa86" translate="yes" xml:space="preserve">
          <source>User password.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0d4308715ade756c06d502e79ce39df63ffeb9f" translate="yes" xml:space="preserve">
          <source>User specifies which command to run on the command line;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a7cbd7c2b80847ab71268938f779c96cc3e0b46" translate="yes" xml:space="preserve">
          <source>User-defined error message is used when validation fails due to &lt;a href=&quot;yii-validators-ipvalidator#%24subnet-detail&quot;&gt;$subnet&lt;/a&gt; is false, but CIDR prefix is present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d468a726d2b124bb9b891f440331c5c3ed5496ca" translate="yes" xml:space="preserve">
          <source>User-defined error message is used when validation fails due to IP address is not not allowed by &lt;a href=&quot;yii-validators-ipvalidator#%24ranges-detail&quot;&gt;$ranges&lt;/a&gt; check.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89c8c244001731e59850869e2de3fa00cdb77bd1" translate="yes" xml:space="preserve">
          <source>User-defined error message is used when validation fails due to subnet &lt;a href=&quot;yii-validators-ipvalidator#%24subnet-detail&quot;&gt;$subnet&lt;/a&gt; set to 'only', but the CIDR prefix is not set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86854be6642546d75166faffecce0cca93ebcb49" translate="yes" xml:space="preserve">
          <source>User-defined error message is used when validation fails due to the disabled IPv4 validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25e775d899f56539323ba38bd7e249865e222beb" translate="yes" xml:space="preserve">
          <source>User-defined error message is used when validation fails due to the disabled IPv6 validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b02b3c74ff27e16d51888b5c973e93242d47a61" translate="yes" xml:space="preserve">
          <source>User-defined error message is used when validation fails due to the wrong CIDR.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6c4e8ac4af0ff5982ca700fbb9774bf48d71b78" translate="yes" xml:space="preserve">
          <source>User-defined error message is used when validation fails due to the wrong IP address format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df77fdcd3d29f35ac1a78c0f65d7481adce7ab27" translate="yes" xml:space="preserve">
          <source>User-defined error message used when the length of the value is greater than &lt;a href=&quot;yii-validators-stringvalidator#%24max-detail&quot;&gt;$max&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="649d7d9a41a0f59fee6cd597f28fd83d8a364828" translate="yes" xml:space="preserve">
          <source>User-defined error message used when the length of the value is not equal to &lt;a href=&quot;yii-validators-stringvalidator#%24length-detail&quot;&gt;$length&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85ad27903c299ff41cebdac76ee3dbf6f259f833" translate="yes" xml:space="preserve">
          <source>User-defined error message used when the length of the value is smaller than &lt;a href=&quot;yii-validators-stringvalidator#%24min-detail&quot;&gt;$min&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f30864f5b1083020615da766af41f4ed937a9589" translate="yes" xml:space="preserve">
          <source>User-defined error message used when the value is bigger than &lt;a href=&quot;yii-validators-datevalidator#%24max-detail&quot;&gt;$max&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37e21ee440d9f61824dcd66916930a18c833bee7" translate="yes" xml:space="preserve">
          <source>User-defined error message used when the value is bigger than &lt;a href=&quot;yii-validators-numbervalidator#%24max-detail&quot;&gt;$max&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ebf09a8eeb4696dbc7dd5f4ad1eadb6ba84bb81" translate="yes" xml:space="preserve">
          <source>User-defined error message used when the value is not a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5e7b6525182caee15820f7ddc78c77d27c3664a" translate="yes" xml:space="preserve">
          <source>User-defined error message used when the value is smaller than &lt;a href=&quot;yii-validators-datevalidator#%24min-detail&quot;&gt;$min&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fb06a6eb109fd8ef618ed8693ea902c1030ed29" translate="yes" xml:space="preserve">
          <source>User-defined error message used when the value is smaller than &lt;a href=&quot;yii-validators-numbervalidator#%24min-detail&quot;&gt;$min&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83b60c3498a6fc898a39a4655adb60b47f7fca89" translate="yes" xml:space="preserve">
          <source>User-supplied string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a8f4ed235319297bb117631ad503d0bf08cc8cb" translate="yes" xml:space="preserve">
          <source>UserException is the base class for exceptions that are meant to be shown to end users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcff96ccdfb67a64f49d2a1e0785f31fc4f65359" translate="yes" xml:space="preserve">
          <source>Users may click on the checkboxes to select rows of the grid. The selected rows may be obtained by calling the following JavaScript code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e0da11a6fd6ee9332698bdfd4c51136940f57f" translate="yes" xml:space="preserve">
          <source>Users specify a view in the format of &lt;code&gt;path/to/view&lt;/code&gt;, which translates to the view name &lt;code&gt;ViewPrefix/path/to/view&lt;/code&gt; where &lt;code&gt;ViewPrefix&lt;/code&gt; is given by &lt;a href=&quot;yii-web-viewaction#%24viewPrefix-detail&quot;&gt;$viewPrefix&lt;/a&gt;. The view will then be rendered by the &lt;a href=&quot;yii-base-controller#render()-detail&quot;&gt;render()&lt;/a&gt; method of the currently active controller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10d7fa1c9b563404751c55fc03ef6f45046363d6" translate="yes" xml:space="preserve">
          <source>Uses Traits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73e8c1ee8ecc0482b8aeae9ce1f176f9dd915e06" translate="yes" xml:space="preserve">
          <source>Uses almost the same syntax as &lt;a href=&quot;https://github.com/pear/Console_Color2/blob/master/Console/Color2.php&quot;&gt;https://github.com/pear/Console_Color2/blob/master/Console/Color2.php&lt;/a&gt; The conversion table is: ('bold' meaning 'light' on some terminals). It's almost the same conversion table irssi uses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a17325b93e5cbf67837eec7ce4f39c12b38f5f3" translate="yes" xml:space="preserve">
          <source>Uses query cache for the queries performed with the callable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b973bab1eb3419f17e465ee3c8675c5b00ea11ba" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;http://gordalina.github.io/cachetool/&quot;&gt;Cachetool&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a44c62c08ee0571df31a9574de494781383732db" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;https://gordalina.github.io/cachetool/&quot;&gt;Cachetool&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8b72fed360df7474ccc3ff2023cdbd93dacb0a" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;yii-di-container&quot;&gt;dependency injection container&lt;/a&gt;, this method can also identify dependent objects, instantiate them and inject them into the newly created object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6beb678d132d02757d362aad57a475633fac703f" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;yii-web-user&quot;&gt;yii\web\User&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88e2ddd87b2d036f4ab44890e3b6ceace47636d2" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;DbManager&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eda1993e731e4f8d1612f258aca6fb140e528ecf" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;PhpManager&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5e9428f47d16242d86657d86f943a8fa41bf9b9" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;TimestampBehavior&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15d80064a8c9efd9dd4d02ec71a6016ff226a590" translate="yes" xml:space="preserve">
          <source>Using Active Record, you can easily save data to the database by taking the following steps:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53e010b8c422ba34ec224e7f9dbb8eefed763ce5" translate="yes" xml:space="preserve">
          <source>Using Aliases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e1925e4edc72c631c9df1fe48dd24498ac2e60e" translate="yes" xml:space="preserve">
          <source>Using Asset Bundles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2779937ea86f29adfdde6dcc60a9f7aabdbc47f6" translate="yes" xml:space="preserve">
          <source>Using Assets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a32eea76841ea065691e4cd85f9832e10ddde365" translate="yes" xml:space="preserve">
          <source>Using Behaviors</source>
          <target state="translated">Usando comportamientos</target>
        </trans-unit>
        <trans-unit id="6790aa0871b5a22aba4914c2aca702feae6e26fa" translate="yes" xml:space="preserve">
          <source>Using Blocks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0ee1799f669d58f6c2bd12733f38c709ccf4e45" translate="yes" xml:space="preserve">
          <source>Using CAPTCHA involves the following steps:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98dce63129e63a9f29444adf7743a7a23e3615b9" translate="yes" xml:space="preserve">
          <source>Using Client-Side Validation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c18ac5cef8b33c8463c07e17802ede5492fd487" translate="yes" xml:space="preserve">
          <source>Using Command Line Options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd6c359b09eb2dde02c82e12edc0dfad0a9c4617" translate="yes" xml:space="preserve">
          <source>Using Configurations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd4ea5269d6efaa929d215ac689d453b8b6d674d" translate="yes" xml:space="preserve">
          <source>Using Default Roles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a9fab8ec5c0dd2f69f70cbd3cc3bfa1e3d3b1b4" translate="yes" xml:space="preserve">
          <source>Using Error Actions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="398a7226501fb7a7d133aea4eeee61e048522ef1" translate="yes" xml:space="preserve">
          <source>Using Error Handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa10774d0e271ce1daa32ba7d67741dff0dd4dd8" translate="yes" xml:space="preserve">
          <source>Using Extensions</source>
          <target state="translated">Usando las extensiones</target>
        </trans-unit>
        <trans-unit id="04a0afebc28cc1af019bbcc8893f1fbc50902b77" translate="yes" xml:space="preserve">
          <source>Using Filters</source>
          <target state="translated">Usando filtros</target>
        </trans-unit>
        <trans-unit id="14361736cf5dba3928bf58562efc0d5ef071c2de" translate="yes" xml:space="preserve">
          <source>Using Fixtures</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8231fa615bb712a11116440f2385ec37f270d94" translate="yes" xml:space="preserve">
          <source>Using GridView with Pjax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aec1a90d25b2cb10fd7c2801da626df83c39ae6" translate="yes" xml:space="preserve">
          <source>Using Layouts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b74d8a06cce7b65888ba4e8c7818fe0688bd9a8" translate="yes" xml:space="preserve">
          <source>Using Modules</source>
          <target state="translated">Usando módulos</target>
        </trans-unit>
        <trans-unit id="d3623deb3bf7e5bcd71ec1ed28b4b30a5095551c" translate="yes" xml:space="preserve">
          <source>Using Other Autoloaders</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79dc91493fcedf81216294b8414b24176e9e935c" translate="yes" xml:space="preserve">
          <source>Using Pretty URLs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b894fc0c3ebb43536aba7cff3ee7b0a0ad457202" translate="yes" xml:space="preserve">
          <source>Using RBAC involves two parts of work. The first part is to build up the RBAC authorization data, and the second part is to use the authorization data to perform access check in places where it is needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e55c84af9148d0ec072a8ff744b8224e7cf8f30b" translate="yes" xml:space="preserve">
          <source>Using Rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe5ae5ebf19cac6f7455e2cfded092a7c08da389" translate="yes" xml:space="preserve">
          <source>Using SQL views for filtering, sorting and displaying data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eb9f0e6e6f55a780c2240e72256d1db899c5026" translate="yes" xml:space="preserve">
          <source>Using Table Prefix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eefb6ee1ab5282e9ad8244d8905caf051495aa3" translate="yes" xml:space="preserve">
          <source>Using TimestampBehavior</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19b4ebc5745d358f9aea4564a483902f9e908fea" translate="yes" xml:space="preserve">
          <source>Using View Components</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="191ca63904679c8c2fb73cea1a7d31af1ef2de37" translate="yes" xml:space="preserve">
          <source>Using Widgets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90a54315131251756b5c20a621f6d555e61a0733" translate="yes" xml:space="preserve">
          <source>Using a &lt;code&gt;DateInterval&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dedc07b600d21ab851f5e76b88465ab5b3a74795" translate="yes" xml:space="preserve">
          <source>Using a GroupUrlRule is more efficient than directly declaring the individual rules it contains. This is because GroupUrlRule can quickly determine if it should process a URL parsing or creation request by simply checking if the prefix matches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="914abdc0a7924165aa2ed6d4c9ee7be21f44b402" translate="yes" xml:space="preserve">
          <source>Using a magic function call would not be necessary if Smarty would support closures. Smarty closure support is announced for 3.2, until its release magic function calls are used to pass the tag name to the callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb9eb5763408cba588171fd39b56e72887700b6c" translate="yes" xml:space="preserve">
          <source>Using a method to fetch an existing record (or records) from the database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f192d802fe93a08f1615139cb06534a1353dec3" translate="yes" xml:space="preserve">
          <source>Using a timestamp that is relative to &lt;code&gt;now&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="497e9fc5e2470e563884b65be03d88192c5a1008" translate="yes" xml:space="preserve">
          <source>Using a timestamp that is relative to the &lt;code&gt;$referenceTime&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ed4b753034f21d1cef4c505f810cea96379f225" translate="yes" xml:space="preserve">
          <source>Using asset-packagist repository</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0ab65f29c9a7d361df26e878dd3a4e31e0846a3" translate="yes" xml:space="preserve">
          <source>Using console command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bf5dea7ee0a9dba1eac0372741424134da917da" translate="yes" xml:space="preserve">
          <source>Using exit codes is a best practice for console application development. Conventionally, a command returns &lt;code&gt;0&lt;/code&gt; to indicate that everything is OK. If the command returns a number greater than zero, that's considered to be indicative of an error. The number returned will be the error code, potentially usable to find out details about the error. For example &lt;code&gt;1&lt;/code&gt; could stand generally for an unknown error and all codes above would be reserved for specific cases: input errors, missing files, and so forth.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="696fec8ef27a6191e6090f38fa41b522de2692b8" translate="yes" xml:space="preserve">
          <source>Using fxp/composer-asset-plugin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67b136683376285ae1feb9c5fe30f4ae4c281abb" translate="yes" xml:space="preserve">
          <source>Using global fixtures is similar to using non-global ones. The only difference is that you declare these fixtures in &lt;a href=&quot;yii-test-fixturetrait#globalFixtures()-detail&quot;&gt;yii\codeception\TestCase::globalFixtures()&lt;/a&gt; instead of &lt;code&gt;fixtures()&lt;/code&gt;. When a test case loads fixtures, it will first load global fixtures and then non-global ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d85ed11f319c2b91a5b859ac443e619552d056ba" translate="yes" xml:space="preserve">
          <source>Using migrations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f76d7168495dbdd20ea1aba34992f3f939f892a0" translate="yes" xml:space="preserve">
          <source>Using other role names will trigger the invocation of &lt;a href=&quot;yii-web-user#can()-detail&quot;&gt;yii\web\User::can()&lt;/a&gt;, which requires enabling RBAC (to be described in the next subsection). If this option is empty or not set, it means this rule applies to all roles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf4ca17f420303e353e8e1aee1c992484ee5bc88" translate="yes" xml:space="preserve">
          <source>Using query builder usually involves two steps:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f833e4f464c07fedd3b0e6d3d75eebbbbd9722a6" translate="yes" xml:space="preserve">
          <source>Using secure connection over TLS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9b6ae40f9186fabc4b4168dcbf96172047ea1e2" translate="yes" xml:space="preserve">
          <source>Using template engines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b95e8dac335027658df6ddd3b85d430d213cb8" translate="yes" xml:space="preserve">
          <source>Using the &lt;a href=&quot;yii-db-baseactiverecord#__get()-detail&quot;&gt;__get()&lt;/a&gt; and &lt;a href=&quot;yii-db-baseactiverecord#__set()-detail&quot;&gt;__set()&lt;/a&gt; magic methods we can emulate the behavior of a property:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="549fa49cb6a889549c3f856a3e8d0d2e5a6b2eac" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;asset&lt;/code&gt; Command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6cc158d6d205f77fcd2145f6b8172b0e5b84674" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;fields&lt;/code&gt; and &lt;code&gt;expand&lt;/code&gt; parameters, you may also specify which fields should be included in the result. For example, the URL &lt;code&gt;http://localhost/users?fields=id,email&lt;/code&gt; will only return the &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;email&lt;/code&gt; fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a46308c4b6cf843ca6e3ed49296e45881a34e7" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;message&lt;/code&gt; command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bfc1757498fefb892fd51f9bdd682bee8d9af54" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;new&lt;/code&gt; operator to create a new, empty object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ba5484f3feaef8284f43ee7c2f7d0cf37d1f6c8" translate="yes" xml:space="preserve">
          <source>Using the Hash Format, Yii internally uses parameter binding so in contrast to the &lt;a href=&quot;#string-format&quot;&gt;string format&lt;/a&gt;, here you do not have to add parameters manually.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37d7b97775a4bae1cf24a2f13764215effc6f72e" translate="yes" xml:space="preserve">
          <source>Using the Operator Format, Yii internally uses parameter binding so in contrast to the &lt;a href=&quot;#string-format&quot;&gt;string format&lt;/a&gt;, here you do not have to add parameters manually.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55d46c10313ccf6f19cab656affccb4ba84e48bd" translate="yes" xml:space="preserve">
          <source>Using the Yii Autoloader</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="175d46bd15fddda4af92d9500013b978aabbc243" translate="yes" xml:space="preserve">
          <source>Using the Yii RESTful API framework, you implement an API endpoint in terms of a controller action, and you use a controller to organize the actions that implement the endpoints for a single type of resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44a4efeb734147c52735ba061d1f99e7fe354627" translate="yes" xml:space="preserve">
          <source>Using the Yii logging framework involves the following steps:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908782db9b9b3db48e1d2d136494d3f2f5ba031a" translate="yes" xml:space="preserve">
          <source>Using the above approach, you can nest layouts in more than one levels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06faeaa73c9e5051b3dae3501bb1526b6bc2b28d" translate="yes" xml:space="preserve">
          <source>Using the shortcut format the configuration for columns in simple cases would look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b44c88194a70bdcf46d89ad23ef8633e204ac362" translate="yes" xml:space="preserve">
          <source>Using this approach, when you register an asset bundle in a view, it causes the automatic registration of the new asset bundle for the group that the original bundle belongs to. And as a result, the combined/compressed asset files are included in the page, instead of the original ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="252f0b240fc987b4f46c3bb477c4b92cb88fc881" translate="yes" xml:space="preserve">
          <source>Using this method you are able to check cookie presence without instantiating &lt;a href=&quot;yii-web-cookiecollection&quot;&gt;yii\web\CookieCollection&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eda563eecb49e3f3ce7f335b627ba44d16e81e2" translate="yes" xml:space="preserve">
          <source>Using this method you are able to check cookie presence without instantiating &lt;a href=&quot;yii-web-headercollection&quot;&gt;yii\web\HeaderCollection&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb3b9f6f32ecb838589a2d39670ad8e2f3c331a9" translate="yes" xml:space="preserve">
          <source>Using yii\web\User</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f53de7005c07ec68d63e47ba928e6b6ca71bda2" translate="yes" xml:space="preserve">
          <source>Usually authentication via external services is performed inside the popup window. This action handles the redirection and closing of popup window correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e403a5cbbc326ea04e1ceb4ab87c05ca36e1c74" translate="yes" xml:space="preserve">
          <source>Usually the dependencies of a class are passed to the constructor and are available inside of the class during the whole lifecycle. With Method Injection it is possible to provide a dependency that is only needed by a single method of the class and passing it to the constructor may not be possible or may cause too much overhead in the majority of use cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c1d5f599a04c63cf92da37173956d22b9b1a4ba" translate="yes" xml:space="preserve">
          <source>Usually, a controller is designed to handle the requests regarding a particular type of resource. For this reason, controller IDs are often nouns referring to the types of the resources that they are handling. For example, you may use &lt;code&gt;article&lt;/code&gt; as the ID of a controller that handles article data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49b17b54afd3e88be2454ee54b4881d2979bca1f" translate="yes" xml:space="preserve">
          <source>Validate that the value is an integer greater than 0 if it is not empty. Normal validators have &lt;a href=&quot;yii-validators-validator#%24skipOnEmpty-detail&quot;&gt;$skipOnEmpty&lt;/a&gt; set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="159415f559c63feacb34936f28dab7b11f797893" translate="yes" xml:space="preserve">
          <source>Validates &lt;a href=&quot;yii-gii-generators-form-generator#%24viewPath-detail&quot;&gt;$viewPath&lt;/a&gt; to make sure it is a valid path or path alias and exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6af2c2815871f4a152f6910a4a317836a5bb3100" translate="yes" xml:space="preserve">
          <source>Validates &lt;a href=&quot;yii-gii-generators-module-generator#%24moduleClass-detail&quot;&gt;$moduleClass&lt;/a&gt; to make sure it is a fully qualified class name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d2b69b99a1c5b625b7bab9caf3bff3a14f18c05" translate="yes" xml:space="preserve">
          <source>Validates IPv4 address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c6935fd67af61bc72c319021873108a9b83e83c" translate="yes" xml:space="preserve">
          <source>Validates IPv6 address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84893916c5c4588b428579b6597094af17a01271" translate="yes" xml:space="preserve">
          <source>Validates a given value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5564be4b22951911e14d09ffa46de30805b72ba" translate="yes" xml:space="preserve">
          <source>Validates a single attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43b9df96dd915bf5e9dd6343a6262a67d3b8d89b" translate="yes" xml:space="preserve">
          <source>Validates a value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c34ef967d0aec53b2a7e77570761367ad63b4279" translate="yes" xml:space="preserve">
          <source>Validates an array of model instances and returns an error message array indexed by the attribute IDs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36c7e818fb4a03ecfb473d7792aacf9bbe4c6fd" translate="yes" xml:space="preserve">
          <source>Validates an image file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c3bbe471eaf171249933e2e4adafc535d7c9773" translate="yes" xml:space="preserve">
          <source>Validates if the HTTP cache contains valid content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d7bda3a88e183135ddc94b0254ffbaf49d08985" translate="yes" xml:space="preserve">
          <source>Validates if the given class is a valid console controller class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="678c728ea86cf8ea7bc35c88606a0d5255217545" translate="yes" xml:space="preserve">
          <source>Validates if the given data is tampered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d462fe67343e92c02da562e93f29ef3873b87dea" translate="yes" xml:space="preserve">
          <source>Validates multiple models.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="632be079aa34ab7fd2f1c024a37f75a8c5efb959" translate="yes" xml:space="preserve">
          <source>Validates one or several models and returns an error message array indexed by the attribute IDs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b4198cf4a4549a0c126d601cc42fa686d80e4d9" translate="yes" xml:space="preserve">
          <source>Validates the &lt;a href=&quot;yii-gii-generators-model-generator#%24db-detail&quot;&gt;$db&lt;/a&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7783e535be979e3b3f98a34cc7a5871b4603e1ab" translate="yes" xml:space="preserve">
          <source>Validates the &lt;a href=&quot;yii-gii-generators-model-generator#%24modelClass-detail&quot;&gt;$modelClass&lt;/a&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47aa1b5cfe1f879f3e60a999b33094a1ed617b31" translate="yes" xml:space="preserve">
          <source>Validates the &lt;a href=&quot;yii-gii-generators-model-generator#%24tableName-detail&quot;&gt;$tableName&lt;/a&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de1d585fb4f80593e6bc763c3411e418de3e6dbf" translate="yes" xml:space="preserve">
          <source>Validates the &lt;a href=&quot;yii-mongodb-gii-model-generator#%24collectionName-detail&quot;&gt;$collectionName&lt;/a&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43aea6f8e11061130b27342d8b431cdecbc9ca6f" translate="yes" xml:space="preserve">
          <source>Validates the &lt;a href=&quot;yii-mongodb-gii-model-generator#%24db-detail&quot;&gt;$db&lt;/a&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17217bc34d060c8f19313f6c46473738f9090353" translate="yes" xml:space="preserve">
          <source>Validates the &lt;a href=&quot;yii-mongodb-gii-model-generator#%24modelClass-detail&quot;&gt;$modelClass&lt;/a&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="630b465d4f251255ed5c55b8852ef69659c4bf5a" translate="yes" xml:space="preserve">
          <source>Validates the &lt;a href=&quot;yii-mongodb-gii-model-generator#%24ns-detail&quot;&gt;$ns&lt;/a&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e88b0cdfad2bc89c545af5ded542a9e33dbf9fa" translate="yes" xml:space="preserve">
          <source>Validates the &lt;a href=&quot;yii-sphinx-gii-model-generator#%24db-detail&quot;&gt;$db&lt;/a&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0026ac4e6b16baa32a7566a9276d40decba7d3ee" translate="yes" xml:space="preserve">
          <source>Validates the &lt;a href=&quot;yii-sphinx-gii-model-generator#%24indexName-detail&quot;&gt;$indexName&lt;/a&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de762fc6182f36ce207c7dfdf53acf2cad794c6" translate="yes" xml:space="preserve">
          <source>Validates the &lt;a href=&quot;yii-sphinx-gii-model-generator#%24modelClass-detail&quot;&gt;$modelClass&lt;/a&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b527cf874ec77f15066176355b04465054e6587" translate="yes" xml:space="preserve">
          <source>Validates the &lt;a href=&quot;yii-sphinx-gii-model-generator#%24ns-detail&quot;&gt;$ns&lt;/a&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20e78acb8e0df75163cd4a48e0dc0cb1890e59cf" translate="yes" xml:space="preserve">
          <source>Validates the given auth key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc91dbf6e5170e7014954b7cadd07c656d1bcc02" translate="yes" xml:space="preserve">
          <source>Validates the given data with the specified validation rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b136b71f5f3690c26dfe751e7fbb228ef97eaa4" translate="yes" xml:space="preserve">
          <source>Validates the input to see if it matches the generated code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea24ad48e42e51f9cc02db2a33926ad1a5946eff" translate="yes" xml:space="preserve">
          <source>Validates the namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e191abce9f61ac1548a284a7a9d08cec7eee632e" translate="yes" xml:space="preserve">
          <source>Validates the specified object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a0a4fd11f12a3d323f00f261f0d77bc626e2797" translate="yes" xml:space="preserve">
          <source>Validates the template selection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8e39c87d6406211a3deb36ef171235df97eb64f" translate="yes" xml:space="preserve">
          <source>Validating Input</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4671901e28bcb16f197ffce606fdea481a83e78" translate="yes" xml:space="preserve">
          <source>Validating request method (see &lt;a href=&quot;yii-rest-controller#verbs()-detail&quot;&gt;verbs()&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c3ffd6c63c688ef2084a3c36c96682569d2dcbb" translate="yes" xml:space="preserve">
          <source>Validation Events</source>
          <target state="translated">Eventos de validación</target>
        </trans-unit>
        <trans-unit id="90994f8c13576f561a78973c21b200badf20f316" translate="yes" xml:space="preserve">
          <source>Validation Rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4efe737d1c009f95d6ed51674722eb53308e4035" translate="yes" xml:space="preserve">
          <source>Validation rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9617c39ba36f702803e8e605b2ff5ac5452534e8" translate="yes" xml:space="preserve">
          <source>Validation rules are used by &lt;a href=&quot;yii-base-model#validate()-detail&quot;&gt;validate()&lt;/a&gt; to check if attribute values are valid. Child classes may override this method to declare different validation rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d601624c98190de99d37d1c3d3df5d22509edd7" translate="yes" xml:space="preserve">
          <source>Validator declares a set of &lt;a href=&quot;yii-validators-validator#%24builtInValidators-detail&quot;&gt;built-in validators&lt;/a&gt; which can be referenced using short names. They are listed as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ab4dbc325b0545c11e52cb2d9d7c646f36f909c" translate="yes" xml:space="preserve">
          <source>Validator is the base class for all validators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="762f13c2259b5fbab6d8f1bdbab081fc48bc558f" translate="yes" xml:space="preserve">
          <source>Validators</source>
          <target state="translated">Validators</target>
        </trans-unit>
        <trans-unit id="8dce170de238b1feda2ecd9674ea3ca0d068fbcb" translate="yes" xml:space="preserve">
          <source>Value</source>
          <target state="translated">Value</target>
        </trans-unit>
        <trans-unit id="85fa8d14f1533236e71cf8bd7c3d7dc213acfcdf" translate="yes" xml:space="preserve">
          <source>Value in bytes to be formatted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="162a02233acfe88fa65373815dd9e805330a96fb" translate="yes" xml:space="preserve">
          <source>Value is calculated from current &lt;a href=&quot;yii-web-request#getHostInfo()-detail&quot;&gt;hostInfo&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="657d37ad2fbe9019ca9d6e894cdad33b527d9073" translate="yes" xml:space="preserve">
          <source>Value of the cookie</source>
          <target state="translated">El valor de la galleta</target>
        </trans-unit>
        <trans-unit id="ded70e591808c2051bd2d5ad7a22b6d2864f7bdd" translate="yes" xml:space="preserve">
          <source>Value to be matched</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1263c3458fdef04a5ed6da00586b897ef4670f74" translate="yes" xml:space="preserve">
          <source>Value to be returned if the flash message does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0677618a797d7f463e3bce75a9cc7c39cd02e0ed" translate="yes" xml:space="preserve">
          <source>Value to be type-casted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fd235e54b9cc6d369ed77c4b23398680f5b4ea7" translate="yes" xml:space="preserve">
          <source>Value used as replacement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df5d31f2082fdfec34679e4c920e1802ac26a06" translate="yes" xml:space="preserve">
          <source>Values for the placeholders in the error message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="596e530019dcbce4c655523c34563f14f36e06fe" translate="yes" xml:space="preserve">
          <source>Values given in terms of name-value pairs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="936494a1d40142dfb79a8c0c35b08816d6087497" translate="yes" xml:space="preserve">
          <source>Values in Submit Buttons and File Upload</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0ccab0e27c7dbaefdadb328c5ab547c4d79b27c" translate="yes" xml:space="preserve">
          <source>VarDumper can be used as follows,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aef4f340b7c91d3e390b8169aded01038329ae39" translate="yes" xml:space="preserve">
          <source>VarDumper is intended to replace the buggy PHP function var_dump and print_r.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39179cd35bae6acb4335b9b9e003594af804dab0" translate="yes" xml:space="preserve">
          <source>Variable name</source>
          <target state="translated">Nombre de la variable</target>
        </trans-unit>
        <trans-unit id="3c9b2fcb4108e4a930fc418dc2a39b096afbe9ee" translate="yes" xml:space="preserve">
          <source>Variable to be dumped</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e07a2e2c0ea698617dab68da34e58abd026703e" translate="yes" xml:space="preserve">
          <source>Variable value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fba657a2566a29bb2eae7ad600ea97c18865719" translate="yes" xml:space="preserve">
          <source>Variations</source>
          <target state="translated">Variations</target>
        </trans-unit>
        <trans-unit id="506aa8bdf465bdab0a80864814e29f26f966b120" translate="yes" xml:space="preserve">
          <source>VerbFilter</source>
          <target state="translated">VerbFilter</target>
        </trans-unit>
        <trans-unit id="1e79c5106b7c98127e0b9b4717fee1d88a88a5a9" translate="yes" xml:space="preserve">
          <source>VerbFilter checks if the HTTP request methods are allowed by the requested actions. If not allowed, it will throw an HTTP 405 exception. In the following example, VerbFilter is declared to specify a typical set of allowed request methods for CRUD actions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b2a58995a3259b1599301cb3406d490a70ce684" translate="yes" xml:space="preserve">
          <source>VerbFilter is an action filter that filters by HTTP request methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="738cbca46da22b4db3ffff551de3e08270e68705" translate="yes" xml:space="preserve">
          <source>Verbose file size maximum required value, pass null to skip maximum check.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ea46e37373862c7db2ac81bb4778e01012f73cb" translate="yes" xml:space="preserve">
          <source>Verbose file size minimum required value, pass null to skip minimum check.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1df83791aeb5060f8410c808ec67c878a64806d8" translate="yes" xml:space="preserve">
          <source>Verbose size representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb769365c336387b8c9a070ac1dce31bd4af556e" translate="yes" xml:space="preserve">
          <source>Verifies a password against a hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6315de804f2a146a3a507270000027b0451c1cde" translate="yes" xml:space="preserve">
          <source>Verifies and decrypts data encrypted with &lt;a href=&quot;yii-base-security#encryptByKey()-detail&quot;&gt;encryptByKey()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54cc53819d7896324e9d75b41a832f4a89ee2b46" translate="yes" xml:space="preserve">
          <source>Verifies and decrypts data encrypted with &lt;a href=&quot;yii-base-security#encryptByPassword()-detail&quot;&gt;encryptByPassword()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="911d0bbbad9ee10efbb09d556063a871191ca970" translate="yes" xml:space="preserve">
          <source>Verifies given OAuth request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="254879acda81403a2f65e923ed8f1513486cd671" translate="yes" xml:space="preserve">
          <source>Verifying the Installation</source>
          <target state="translated">Verificando la instalación</target>
        </trans-unit>
        <trans-unit id="2750d3223582565870adf32b96da562927d7229f" translate="yes" xml:space="preserve">
          <source>Versioning</source>
          <target state="translated">Versioning</target>
        </trans-unit>
        <trans-unit id="a77e6decaadbd6c9dba17ef5c3aebc35f9567bb7" translate="yes" xml:space="preserve">
          <source>View Events</source>
          <target state="translated">Ver Eventos</target>
        </trans-unit>
        <trans-unit id="25099e1ee6930f8a2a5a3a54ebaf239c5e871ac3" translate="yes" xml:space="preserve">
          <source>View Translation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7c0a3820b7798fd5c6471798cbc8ee011709953" translate="yes" xml:space="preserve">
          <source>View components provide the following useful view-related features, each described in more details in a separate section:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="603793b17dd2b17abdf50c22507677f6e7d78927" translate="yes" xml:space="preserve">
          <source>View configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e31a7ee30152b17cfa09a60581f285a13a6e075" translate="yes" xml:space="preserve">
          <source>View file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16f450674763eb48da927fe1d51f8b8daee0defe" translate="yes" xml:space="preserve">
          <source>View instance or its array configuration that will be used to render message bodies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b35bdb7acaa3c7c56892f652df86a0610ce37b0a" translate="yes" xml:space="preserve">
          <source>View instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7ab8350038bcbfd15e28e483f56fc1af4578641" translate="yes" xml:space="preserve">
          <source>View is configured as an application component in &lt;a href=&quot;yii-base-application&quot;&gt;yii\base\Application&lt;/a&gt; by default. You can access that instance via &lt;code&gt;Yii::$app-&amp;gt;view&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f13b6b7a495df98a8e07db207cb7db3a5ea31a42" translate="yes" xml:space="preserve">
          <source>View name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b6a1e7223ad9ec84a8e8eb68b449c9b51cc5ca1" translate="yes" xml:space="preserve">
          <source>View options in format: optionName =&amp;gt; optionValue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13a29bf3cf9a5a2f94bedba8b99426cd36154a4d" translate="yes" xml:space="preserve">
          <source>View provides a set of methods (e.g. &lt;a href=&quot;yii-base-view#render()-detail&quot;&gt;render()&lt;/a&gt;) for rendering purpose.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d7dc62a3fd7181b2d0caa8d2e259373f1e990dc" translate="yes" xml:space="preserve">
          <source>View rendering result can be wrapped into the layout, which can be setup using &lt;a href=&quot;yii-mail-basemailer#%24htmlLayout-detail&quot;&gt;yii\mail\BaseMailer::$htmlLayout&lt;/a&gt; and &lt;a href=&quot;yii-mail-basemailer#%24textLayout-detail&quot;&gt;yii\mail\BaseMailer::$textLayout&lt;/a&gt;. It will work the same way like layouts in regular web application. Layout can be used to setup mail CSS styles or other shared content:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab7dda61017136ea876c53b4e994c951b552df80" translate="yes" xml:space="preserve">
          <source>View represents a view object in the MVC pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3718bc8d2d696fcb33015ebe60d7dae2a87ef419" translate="yes" xml:space="preserve">
          <source>View:</source>
          <target state="translated">View:</target>
        </trans-unit>
        <trans-unit id="37b92bdcccd4dd1866d9c10c6aa6735ee0777895" translate="yes" xml:space="preserve">
          <source>ViewAction implements the API endpoint for returning the detailed information about a model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2f01d5881f5b9dab1f8a10da6f780e0c1dd2f94" translate="yes" xml:space="preserve">
          <source>ViewAction represents an action that displays a view according to a user-specified parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9d390b66417054531d7ede1797488b87ba0f519" translate="yes" xml:space="preserve">
          <source>ViewContextInterface is the interface that should implemented by classes who want to support relative view names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16cee77ac0581a824fdd3345de421acf0d5f93f6" translate="yes" xml:space="preserve">
          <source>ViewEvent represents events triggered by the &lt;a href=&quot;yii-base-view&quot;&gt;yii\base\View&lt;/a&gt; component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60a2db2b681537b645974069e201a4d4aa4c4ea5" translate="yes" xml:space="preserve">
          <source>ViewFinderTrait implements the method getViewNames for finding views in a database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d6cf70fd830a62a5240ee896bc37123620b16ea" translate="yes" xml:space="preserve">
          <source>ViewNotFoundException represents an exception caused by view file not found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c005c007e08aa562dc26f05ac9352372ed5d5e2" translate="yes" xml:space="preserve">
          <source>ViewRenderer is the base class for view renderer classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24be61285e096fa817d4cdb0a0ed8294ea5bd2fb" translate="yes" xml:space="preserve">
          <source>Views</source>
          <target state="translated">Views</target>
        </trans-unit>
        <trans-unit id="e1cba24801011e23c6dd90d1a44482a4ca83249b" translate="yes" xml:space="preserve">
          <source>Views are part of the &lt;a href=&quot;http://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller&quot;&gt;MVC&lt;/a&gt; architecture. They are code responsible for presenting data to end users. In a Web application, views are usually created in terms of &lt;em&gt;view templates&lt;/em&gt; which are PHP script files containing mainly HTML code and presentational PHP code. They are managed by the &lt;a href=&quot;yii-web-view&quot;&gt;view&lt;/a&gt;&lt;a href=&quot;guide-structure-application-components&quot;&gt;application component&lt;/a&gt; which provides commonly used methods to facilitate view composition and rendering. For simplicity, we often call view templates or view template files as views.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7933f24a9dceeee1fef644ffda4842e0e52f5b3b" translate="yes" xml:space="preserve">
          <source>Views are part of the &lt;a href=&quot;https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller&quot;&gt;MVC&lt;/a&gt; architecture. They are code responsible for presenting data to end users. In a Web application, views are usually created in terms of &lt;em&gt;view templates&lt;/em&gt; which are PHP script files containing mainly HTML code and presentational PHP code. They are managed by the &lt;a href=&quot;yii-web-view&quot;&gt;view&lt;/a&gt;&lt;a href=&quot;guide-structure-application-components&quot;&gt;application component&lt;/a&gt; which provides commonly used methods to facilitate view composition and rendering. For simplicity, we often call view templates or view template files as views.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="581ccede7c5f2a6a018b3a5f22b89b4bd2713530" translate="yes" xml:space="preserve">
          <source>Views are responsible for presenting models in the format that end users desire. In general, views</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab2b99e279f6f6ff751b75966d2855598574a18f" translate="yes" xml:space="preserve">
          <source>Views in Modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1727c8966e83c56c02a4f209515afa8ea6dc3099" translate="yes" xml:space="preserve">
          <source>Views in a module should be put in the &lt;code&gt;views&lt;/code&gt; directory within the module's &lt;a href=&quot;yii-base-module#%24basePath-detail&quot;&gt;base path&lt;/a&gt;. For views rendered by a controller in the module, they should be put under the directory &lt;code&gt;views/ControllerID&lt;/code&gt;, where &lt;code&gt;ControllerID&lt;/code&gt; refers to the &lt;a href=&quot;guide-structure-controllers#routes&quot;&gt;controller ID&lt;/a&gt;. For example, if the controller class is &lt;code&gt;PostController&lt;/code&gt;, the directory would be &lt;code&gt;views/post&lt;/code&gt; within the module's &lt;a href=&quot;yii-base-module#%24basePath-detail&quot;&gt;base path&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6373fef2a2fa5d9bb3e80b25dd288ee46e949aa8" translate="yes" xml:space="preserve">
          <source>Views security</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d9fdaacedb7e5bb3a8126ef34ff171adf925b73" translate="yes" xml:space="preserve">
          <source>Views: &lt;code&gt;views/country/*.php&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d8b45539ccf8c821a63305df0fa009226c67d38" translate="yes" xml:space="preserve">
          <source>Visibility conditions for each button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dc94beb83977b028da3ba2b672d0939970ca196" translate="yes" xml:space="preserve">
          <source>Visibility conditions for each button. The array keys are the button names (without curly brackets), and the values are the boolean true/false or the anonymous function. When the button name is not specified in this array it will be shown by default. The callbacks must use the following signature:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fb92c579de402b114b25b5356db61cb540e89c2" translate="yes" xml:space="preserve">
          <source>Visit &lt;a href=&quot;https://asset-packagist.org&quot;&gt;asset-packagist.org&lt;/a&gt; to know, how it works.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebab36827f1279de0d1decdf343f03eeef4562af" translate="yes" xml:space="preserve">
          <source>WARNING: If you do not specify any condition, this method will delete ALL rows in the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5032c33be2dc4631381d00e5ffe088a63f68c615" translate="yes" xml:space="preserve">
          <source>WARNING: If you do not specify any condition, this method will delete documents rows in the collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7863810d8c5cc2d88a8757a92bc7061aa9222354" translate="yes" xml:space="preserve">
          <source>WITHIN GROUP ORDER BY clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a082338951f81ac65e0a0eb7c67dfe180719756d" translate="yes" xml:space="preserve">
          <source>WITHIN GROUP ORDER BY clause. This is a Sphinx specific extension that lets you control how the best row within a group will to be selected. The possible value matches the &lt;a href=&quot;yii-db-querytrait#orderBy()-detail&quot;&gt;orderBy()&lt;/a&gt; one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e916fa28b24ff8ebeb42b713c0c9961d3f6b8386" translate="yes" xml:space="preserve">
          <source>Warning message level. A warning message is one that indicates some abnormal happens but the application is able to continue to run. Developers should pay attention to this message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b2134783f3e1ff500abcd8c7f8df107c06a06f0" translate="yes" xml:space="preserve">
          <source>Warning: due to &lt;code&gt;flock()&lt;/code&gt; function nature this component is unreliable when using a multithreaded server API like ISAPI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="398d231527008d68ba6afc9d2778cdb08c26bdf0" translate="yes" xml:space="preserve">
          <source>Warning: even if you do not set any query limit, implicit LIMIT 0,20 is present by default!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2424d880dfc7ec1b19a94156ed18b24cde2944e3" translate="yes" xml:space="preserve">
          <source>Warning: in case 'new' option is set to 'false' (which is by default) usage of this method may lead to unexpected behavior at some Active Record features, because object will be populated by outdated data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8b9a3aed7cc4094a683cc3596077e6c8a93246a" translate="yes" xml:space="preserve">
          <source>Warning: optimistic lock will NOT work in case of updating fields (not attributes) for the runtime indexes!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d977dfd8e7e03bba622ba9f99977d13eca24c1a" translate="yes" xml:space="preserve">
          <source>Warning: this option should NOT be used with &lt;a href=&quot;yii-db-activequerytrait#asArray()-detail&quot;&gt;asArray()&lt;/a&gt; at the same time!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cfa322871e5a90c404ddc9353bc119e7ed92899" translate="yes" xml:space="preserve">
          <source>We are at the last step now. Configure the &lt;a href=&quot;yii-web-assetmanager&quot;&gt;asset manager&lt;/a&gt; as follows in the application configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be3006bbec109e79d8ea483ae6e39d6c96044dd" translate="yes" xml:space="preserve">
          <source>We are starting with the &lt;code&gt;updatePost&lt;/code&gt; and going through &lt;code&gt;updateOwnPost&lt;/code&gt;. In order to pass the access check, &lt;code&gt;AuthorRule&lt;/code&gt; should return &lt;code&gt;true&lt;/code&gt; from its &lt;code&gt;execute()&lt;/code&gt; method. The method receives its &lt;code&gt;$params&lt;/code&gt; from the &lt;code&gt;can()&lt;/code&gt; method call so the value is &lt;code&gt;['post' =&amp;gt; $post]&lt;/code&gt;. If everything is fine, we will get to &lt;code&gt;author&lt;/code&gt; which is assigned to John.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60b7683f53bbba1643aa6c402095325432848f2d" translate="yes" xml:space="preserve">
          <source>We can create the following URL rule class to solve this problem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cbc9be76f0ae95b76263380b473d6909b006e87" translate="yes" xml:space="preserve">
          <source>We can use ActiveField &lt;a href=&quot;yii-widgets-activefield#checkboxList()-detail&quot;&gt;yii\widgets\ActiveField::checkboxList()&lt;/a&gt; method to create a checkbox list:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5e220005cc7afa92d644a09887778791667f72b" translate="yes" xml:space="preserve">
          <source>We can use ActiveField &lt;a href=&quot;yii-widgets-activefield#dropDownList()-detail&quot;&gt;yii\widgets\ActiveField::dropDownList()&lt;/a&gt; method to create a drop-down list:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae6649b5ed15c2f489ac3b4399eaa176983023a5" translate="yes" xml:space="preserve">
          <source>We can use ActiveField &lt;a href=&quot;yii-widgets-activefield#radioList()-detail&quot;&gt;yii\widgets\ActiveField::radioList()&lt;/a&gt; method to create a radio list:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbc9eba24110a750797f1f360ff8a1dc2b08783a" translate="yes" xml:space="preserve">
          <source>We recommend you prefix &lt;code&gt;yii2-&lt;/code&gt; to the project name for packages representing Yii 2 extensions, for example, &lt;code&gt;myname/yii2-mywidget&lt;/code&gt;. This will allow users to more easily tell whether a package is a Yii 2 extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa74b41605a4411f5e0ebfc8e727c48714427a5a" translate="yes" xml:space="preserve">
          <source>We recommend you use the second approach so that your extension can be more easily used by other people. Please refer to the &lt;a href=&quot;guide-structure-assets&quot;&gt;Assets&lt;/a&gt; section for more details about how to work with assets in general.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28ed1ba89b87a669389978895b5f300f241cbb39" translate="yes" xml:space="preserve">
          <source>We would think &lt;code&gt;$customer&lt;/code&gt; and &lt;code&gt;$customer2&lt;/code&gt; are the same, but they are not! Actually they do contain the same customer data, but they are different objects. When accessing &lt;code&gt;$order-&amp;gt;customer&lt;/code&gt;, an extra SQL statement is executed to populate a new object &lt;code&gt;$customer2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3a7f52b84c836256521e390f2c37bcd0a03a02e" translate="yes" xml:space="preserve">
          <source>Weak ETags should be used if the content should be considered semantically equivalent, but not byte-equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e3061957eef1d435c60aa8de43f59b3f9568007" translate="yes" xml:space="preserve">
          <source>Web Applications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2cc3ed9ede92a5b401e2ea92526fce95dbbb2b6" translate="yes" xml:space="preserve">
          <source>Web pages usually need to generate various meta tags needed by different parties. Like page titles, meta tags appear in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; section and are usually generated in layouts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8f4f6da92c7760b72b48e348756217893d38bca" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;yii-base-model#validate()-detail&quot;&gt;yii\base\Model::validate()&lt;/a&gt; is called, it will call two methods that you may override to customize the validation process:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a68a88e0842496729f08a475fa9c970ee97c2d4" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;yii-base-view&quot;&gt;yii\base\View&lt;/a&gt; renders a view file, it will check the &lt;a href=&quot;yii-base-view#%24theme-detail&quot;&gt;active theme&lt;/a&gt; to see if there is a themed version of the view file exists. If so, the themed version will be rendered instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec8cf09d385b3b0669d5613ba0bc155f2ba23e90" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;yii-caching-chaineddependency#%24dependOnAll-detail&quot;&gt;$dependOnAll&lt;/a&gt; is true, if any of the dependencies has changed, this dependency is considered changed; When &lt;a href=&quot;yii-caching-chaineddependency#%24dependOnAll-detail&quot;&gt;$dependOnAll&lt;/a&gt; is false, if one of the dependencies has NOT changed, this dependency is considered NOT changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47097335ded856e80358d0bbddcb5c27d7d3301a" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;yii-data-basedataprovider#%24pagination-detail&quot;&gt;$pagination&lt;/a&gt; is false, this returns the same value as &lt;a href=&quot;yii-data-basedataprovider#%24count-detail&quot;&gt;$count&lt;/a&gt;. Otherwise, it will call &lt;a href=&quot;yii-data-basedataprovider#prepareTotalCount()-detail&quot;&gt;prepareTotalCount()&lt;/a&gt; to get the count.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edbae0dc0fe0e0ec9080b9cd736711db7a81347e" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;yii-data-dataproviderinterface#getPagination()-detail&quot;&gt;pagination&lt;/a&gt; is false, this is the same as &lt;a href=&quot;yii-data-dataproviderinterface#getCount()-detail&quot;&gt;count&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a28c0f4d9c86fabf94f35aca99b2148e0ba2fc8" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;yii-db-connection#%24enableSlaves-detail&quot;&gt;$enableSlaves&lt;/a&gt; is true, one of the slaves will be used for read queries, and its PDO instance will be returned by this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16310c998be8ca0dba6cc7dbadea24129776c914" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;yii-web-user#%24enableSession-detail&quot;&gt;$enableSession&lt;/a&gt; is true, this method may attempt to read the user's authentication data stored in session and reconstruct the corresponding identity object, if it has not done so before.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d31a36aa6e5e3899d029a74d7f37f831c2966d62" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;yii-web-user#%24enableSession-detail&quot;&gt;$enableSession&lt;/a&gt; is true, this method may use session and/or cookie to store the user identity information, according to the value of &lt;code&gt;$duration&lt;/code&gt;. Please refer to &lt;a href=&quot;yii-web-user#login()-detail&quot;&gt;login()&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d18c58c30c4b1c2f3dc24881938f1e99f91e0a66" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;$scheme&lt;/code&gt; is specified (either a string or &lt;code&gt;true&lt;/code&gt;), an absolute URL with host info (obtained from &lt;a href=&quot;yii-web-urlmanager#%24hostInfo-detail&quot;&gt;yii\web\UrlManager::$hostInfo&lt;/a&gt;) will be returned. If &lt;code&gt;$url&lt;/code&gt; is already an absolute URL, its scheme will be replaced with the specified one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79c83d1146a0ad20566441542b866a93eaa38ae5" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;null&lt;/code&gt; is passed, it means caching is not enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c7bf7cd54e60b354e7fdb11157ce481203e3796" translate="yes" xml:space="preserve">
          <source>When ACF determines a user is not authorized to access the current action, it takes the following measure by default:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1c9b49e0c9e94ff701872ab8af17ae98f4c717c" translate="yes" xml:space="preserve">
          <source>When Active Record instance is populated from query results, its attributes are filled up by corresponding column values from received data set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcdb948fa0e5cb262783441cdd3c5630f47cc0f6" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;UserResource&lt;/code&gt; object is returned in a response, it will contain a &lt;code&gt;_links&lt;/code&gt; element representing the links related to the user, for example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09a233a054871903b1ffab0152db40df94e56d49" translate="yes" xml:space="preserve">
          <source>When a Yii application starts processing a requested URL, the first step it takes is to parse the URL into a &lt;a href=&quot;guide-structure-controllers#routes&quot;&gt;route&lt;/a&gt;. The route is then used to instantiate the corresponding &lt;a href=&quot;guide-structure-controllers&quot;&gt;controller action&lt;/a&gt; to handle the request. This whole process is called &lt;em&gt;routing&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b09ef72de3dcf2ee0b21d7ddfe254f5274c27243" translate="yes" xml:space="preserve">
          <source>When a class-level event is triggered, event handlers attached to that class and all parent classes will be invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59b1d421c5f1a02c924e9910a0151c0d861d8664" translate="yes" xml:space="preserve">
          <source>When a configuration is very complex, a common practice is to store it in one or multiple PHP files, known as &lt;em&gt;configuration files&lt;/em&gt;. A configuration file returns a PHP array representing the configuration. For example, you may keep an application configuration in a file named &lt;code&gt;web.php&lt;/code&gt;, like the following,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4073694f55fea6f63e7bfb304c53a85091dde52b" translate="yes" xml:space="preserve">
          <source>When a data provider is being sent in a RESTful API response, &lt;a href=&quot;yii-rest-serializer&quot;&gt;yii\rest\Serializer&lt;/a&gt; will take out the current page of resources and serialize them as an array of resource objects. Additionally, &lt;a href=&quot;yii-rest-serializer&quot;&gt;yii\rest\Serializer&lt;/a&gt; will also include the pagination information by the following HTTP headers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a85a6cf621f995ed2d77829ef7ad66dc79a79162" translate="yes" xml:space="preserve">
          <source>When a junction table is involved in a relation, calling &lt;a href=&quot;yii-db-baseactiverecord#unlink()-detail&quot;&gt;unlink()&lt;/a&gt; will cause the foreign keys in the junction table to be cleared, or the deletion of the corresponding row in the junction table if &lt;code&gt;$delete&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3f21f8267dda68a0f539cca7ff5078ceca2ad2e" translate="yes" xml:space="preserve">
          <source>When a page uses session, PHP will automatically send some cache-related HTTP headers as specified in the &lt;code&gt;session.cache_limiter&lt;/code&gt; PHP INI setting. These headers may interfere or disable the caching that you want from &lt;code&gt;HttpCache&lt;/code&gt;. To prevent this problem, by default &lt;code&gt;HttpCache&lt;/code&gt; will disable sending these headers automatically. If you want to change this behavior, you should configure the &lt;a href=&quot;yii-filters-httpcache#%24sessionCacheLimiter-detail&quot;&gt;yii\filters\HttpCache::$sessionCacheLimiter&lt;/a&gt; property. The property can take a string value, including &lt;code&gt;public&lt;/code&gt;, &lt;code&gt;private&lt;/code&gt;, &lt;code&gt;private_no_expire&lt;/code&gt;, and &lt;code&gt;nocache&lt;/code&gt;. Please refer to the PHP manual about &lt;a href=&quot;http://www.php.net/manual/en/function.session-cache-limiter.php&quot;&gt;session_cache_limiter()&lt;/a&gt; for explanations about these values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00bedb0cdec2cff7770c649bd6fbc7f30824caf0" translate="yes" xml:space="preserve">
          <source>When a request is parsed into an empty route, the so-called &lt;em&gt;default route&lt;/em&gt; will be used, instead. By default, the default route is &lt;code&gt;site/index&lt;/code&gt;, which refers to the &lt;code&gt;index&lt;/code&gt; action of the &lt;code&gt;site&lt;/code&gt; controller. You may customize it by configuring the &lt;a href=&quot;yii-web-application#%24defaultRoute-detail&quot;&gt;defaultRoute&lt;/a&gt; property of the application in the application configuration like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d078a29cf586255a1f2640de2fa87b641d87eff7" translate="yes" xml:space="preserve">
          <source>When a rule is used to parse a URL, it will fill the associated parameters with values matching the corresponding parts of the URL, and these parameters will be made available in &lt;code&gt;$_GET&lt;/code&gt; later by the &lt;code&gt;request&lt;/code&gt; application component. When the rule is used to create a URL, it will take the values of the provided parameters and insert them at the places where the parameters are declared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0134b0a0e03ac2ea1fae2c515fbe81ff4a1c2053" translate="yes" xml:space="preserve">
          <source>When a translation is not found for an original message specified in &lt;code&gt;Yii::t()&lt;/code&gt; call, the plural rules for the &lt;a href=&quot;yii-base-application#%24sourceLanguage-detail&quot;&gt;source language&lt;/a&gt; will be applied to the original message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e2c57da68d2023021ec5d718cefd309c7d256f9" translate="yes" xml:space="preserve">
          <source>When a user attempts to log in, the submitted password must be verified against the previously hashed and stored password:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50eaa72b73167f3aa36ecc8d0f3004c3c08ad27a" translate="yes" xml:space="preserve">
          <source>When a user provides a password for the first time (e.g., upon registration), the password needs to be hashed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2912e0c67fc2b666fe01557a72fb3c8628f6bf4c" translate="yes" xml:space="preserve">
          <source>When a user runs &lt;code&gt;composer install&lt;/code&gt; to install an extension, the file &lt;code&gt;vendor/yiisoft/extensions.php&lt;/code&gt; will be automatically updated to include the information about the new extension. From this file, Yii applications can know which extensions are installed (the information can be accessed via &lt;a href=&quot;yii-base-application#%24extensions-detail&quot;&gt;yii\base\Application::$extensions&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75dcd49d323e5db26234949a00df1c4cdf924d1f" translate="yes" xml:space="preserve">
          <source>When a widget contains view code only, it is very similar to a &lt;a href=&quot;guide-structure-views&quot;&gt;view&lt;/a&gt;. In fact, in this case, their only difference is that a widget is a redistributable class, while a view is just a plain PHP script that you would prefer to keep within your application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="159dda63def5e5d0e75f65c8b733ec95ec60d41e" translate="yes" xml:space="preserve">
          <source>When an &lt;a href=&quot;guide-structure-entry-scripts&quot;&gt;entry script&lt;/a&gt; creates an application, it will load a &lt;a href=&quot;guide-concept-configurations&quot;&gt;configuration&lt;/a&gt; and apply it to the application, as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fd1e399789d3a115b1db840c9d29ad5a56e534b" translate="yes" xml:space="preserve">
          <source>When an &lt;a href=&quot;guide-structure-entry-scripts&quot;&gt;entry script&lt;/a&gt; is being executed to handle a request, an application will undergo the following lifecycle:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5b1f14796c8daecb51c320f71ae6ca256d7ee93" translate="yes" xml:space="preserve">
          <source>When an Expression object is embedded within a SQL statement or fragment, it will be replaced with the &lt;a href=&quot;yii-db-expression#%24expression-detail&quot;&gt;$expression&lt;/a&gt; property value without any DB escaping or quoting. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd505bf67d863a2732d910206db4d30e2994a1eb" translate="yes" xml:space="preserve">
          <source>When an application finishes handling a &lt;a href=&quot;guide-runtime-requests&quot;&gt;request&lt;/a&gt;, it generates a &lt;a href=&quot;yii-web-response&quot;&gt;response&lt;/a&gt; object and sends it to the end user. The response object contains information such as the HTTP status code, HTTP headers and body. The ultimate goal of Web application development is essentially to build such response objects upon various requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="088d3c1384c9aa10041539c7743d11156c0c66e8" translate="yes" xml:space="preserve">
          <source>When an asset bundle is registered with a view, behind the scenes Yii will register all its dependent asset bundles. And if an asset bundle is located in a directory inaccessible through the Web, it will be published to a Web directory. Later, when the view renders a page, it will generate &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tags for the CSS and JavaScript files listed in the registered bundles. The order of these tags is determined by the dependencies among the registered bundles and the order of the assets listed in the &lt;a href=&quot;yii-web-assetbundle#%24css-detail&quot;&gt;yii\web\AssetBundle::$css&lt;/a&gt; and &lt;a href=&quot;yii-web-assetbundle#%24js-detail&quot;&gt;yii\web\AssetBundle::$js&lt;/a&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b38dab77a2f02d21f7fe9bc9f33e11957da71391" translate="yes" xml:space="preserve">
          <source>When an object triggers an event, it will first call instance-level handlers, followed by the class-level handlers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f793b1ff3221a9420b2de3780a54c1f3b0b22f5b" translate="yes" xml:space="preserve">
          <source>When and how to test</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f15712d2886094eb8c21eca062a92c1f16e9a2c0" translate="yes" xml:space="preserve">
          <source>When attaching an event handler, you may provide additional data as the third parameter to &lt;a href=&quot;yii-base-component#on()-detail&quot;&gt;yii\base\Component::on()&lt;/a&gt;. The data will be made available to the handler when the event is triggered and the handler is called. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4116759aa238375dc2e3602be272ddf9b7db4950" translate="yes" xml:space="preserve">
          <source>When both &lt;code&gt;enableClientValidation&lt;/code&gt; and &lt;code&gt;enableAjaxValidation&lt;/code&gt; are set to &lt;code&gt;true&lt;/code&gt;, AJAX validation request will be triggered only after the successful client validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="505a768dbf97e5a1175145f855e0f10b4b94217c" translate="yes" xml:space="preserve">
          <source>When building &lt;code&gt;WHERE&lt;/code&gt; conditions based on input from end users, you usually want to ignore those input values, that are empty. For example, in a search form that allows you to search by username and email, you would like to ignore the username/email condition if the user does not enter anything in the username/email input field. You can achieve this goal by using the &lt;a href=&quot;yii-db-querytrait#filterWhere()-detail&quot;&gt;filterWhere()&lt;/a&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d6701c57efa0963fdc5ef3502d02951083d59dc" translate="yes" xml:space="preserve">
          <source>When building options for HTML tags we often start with defaults which we need to modify. In order to add or remove a CSS class you can use the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23ada67eba4a864cf3cbb65c1b97aea4a45c4830" translate="yes" xml:space="preserve">
          <source>When cache has data associated with the &lt;code&gt;$key&lt;/code&gt;, the cached value will be returned. Otherwise, the passed anonymous function will be executed to calculate the value that will be cached and returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d508b1a0da1995beb657ff4bdadd80c27c7a1a08" translate="yes" xml:space="preserve">
          <source>When calling &lt;a href=&quot;yii-db-activerecord#delete()-detail&quot;&gt;delete()&lt;/a&gt; to delete an Active Record instance, the following life cycle will happen:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00db742ee95efcbfaaea61ac961bafeddb6af2cc" translate="yes" xml:space="preserve">
          <source>When calling &lt;a href=&quot;yii-db-baseactiverecord#refresh()-detail&quot;&gt;refresh()&lt;/a&gt; to refresh an Active Record instance, the &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_REFRESH-detail&quot;&gt;EVENT_AFTER_REFRESH&lt;/a&gt; event is triggered if refresh is successful and the method returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1f79b72da964304ace33dc5526adf86e3464d6e" translate="yes" xml:space="preserve">
          <source>When calling &lt;a href=&quot;yii-db-baseactiverecord#save()-detail&quot;&gt;save()&lt;/a&gt; to insert or update an Active Record instance, the following life cycle will happen:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b76bdc3ad56f724e29a6534ab34d8344c5cc9d" translate="yes" xml:space="preserve">
          <source>When calling this method manually you should call &lt;a href=&quot;yii-db-baseactiverecord#afterFind()-detail&quot;&gt;afterFind()&lt;/a&gt; on the created record to trigger the &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_FIND-detail&quot;&gt;afterFind Event&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a967b62e0d0bd1798705711d50f02537508cdad" translate="yes" xml:space="preserve">
          <source>When configuring a DB connection, you should always specify its Data Source Name (DSN) via the &lt;a href=&quot;yii-db-connection#%24dsn-detail&quot;&gt;dsn&lt;/a&gt; property. The format of DSN varies for different databases. Please refer to the &lt;a href=&quot;http://www.php.net/manual/en/function.PDO-construct.php&quot;&gt;PHP manual&lt;/a&gt; for more details. Below are some examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2c838db7ce59adaa8522cc65f039a70e1057157" translate="yes" xml:space="preserve">
          <source>When configuring a dependency injection container, you use Instance to reference a class name, interface name or alias name. The reference can later be resolved into the actual object by the container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b71e3a4caa2d5989cfaa0433dac8b5645fb3a3e" translate="yes" xml:space="preserve">
          <source>When creating a DB command from a SQL with parameters, you should almost always use the approach of binding parameters to prevent SQL injection attacks. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="492f39a5fbe4869593b9670e4042aa3d1eed2404" translate="yes" xml:space="preserve">
          <source>When creating a new Active Record instance via the &lt;code&gt;new&lt;/code&gt; operator, the following life cycle will happen:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05168e478debb1479fbd2e8d9c19959185c2115c" translate="yes" xml:space="preserve">
          <source>When creating a new controller class, a convention in naming the controller class is to use the type name of the resource and use singular form. For example, to serve user information, the controller may be named as &lt;code&gt;UserController&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ffcf6b490544953dc6d9f124311a717774815c" translate="yes" xml:space="preserve">
          <source>When creating controllers in a module, a convention is to put the controller classes under the &lt;code&gt;controllers&lt;/code&gt; sub-namespace of the namespace of the module class. This also means the controller class files should be put in the &lt;code&gt;controllers&lt;/code&gt; directory within the module's &lt;a href=&quot;yii-base-module#%24basePath-detail&quot;&gt;base path&lt;/a&gt;. For example, to create a &lt;code&gt;post&lt;/code&gt; controller in the &lt;code&gt;forum&lt;/code&gt; module shown in the last subsection, you should declare the controller class like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0944ecdbcaa1846e8939b16b4c6bcd9557e41319" translate="yes" xml:space="preserve">
          <source>When creating views that generate HTML pages, it is important that you encode and/or filter the data coming from end users before presenting them. Otherwise, your application may be subject to &lt;a href=&quot;http://en.wikipedia.org/wiki/Cross-site_scripting&quot;&gt;cross-site scripting&lt;/a&gt; attacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="843f4e1c4d20668c17b227a78f240b17a8645988" translate="yes" xml:space="preserve">
          <source>When creating views that generate HTML pages, it is important that you encode and/or filter the data coming from end users before presenting them. Otherwise, your application may be subject to &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_scripting&quot;&gt;cross-site scripting&lt;/a&gt; attacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d30aebd73d6d830b5c174b5c239b589f1b5390ca" translate="yes" xml:space="preserve">
          <source>When creating widgets, you should still follow the MVC pattern. In general, you should keep logic in widget classes and keep presentation in &lt;a href=&quot;guide-structure-views&quot;&gt;views&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="006c3d6085b9b3df4f56882f74fc61ff6243f660" translate="yes" xml:space="preserve">
          <source>When customizing the relational query for a relation, you should specify the relation name as an array key and use an anonymous function as the corresponding array value. The anonymous function will receive a &lt;code&gt;$query&lt;/code&gt; parameter which represents the &lt;a href=&quot;yii-db-activequery&quot;&gt;yii\db\ActiveQuery&lt;/a&gt; object used to perform the relational query for the relation. In the code example above, we are modifying the relational query by appending an additional condition about order status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f32e3ddab5ac45844cf094f538d5b327dae463f" translate="yes" xml:space="preserve">
          <source>When data needs to be rendered in multiple pages, Pagination can be used to represent information such as &lt;a href=&quot;yii-data-pagination#%24totalCount-detail&quot;&gt;total item count&lt;/a&gt;, &lt;a href=&quot;yii-data-pagination#%24pageSize-detail&quot;&gt;page size&lt;/a&gt;, &lt;a href=&quot;yii-data-pagination#%24page-detail&quot;&gt;current page&lt;/a&gt;, etc. These information can be passed to &lt;a href=&quot;yii-widgets-linkpager&quot;&gt;pagers&lt;/a&gt; to render pagination buttons or links.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c34f72f082f9f7e8c8c79005561f51059ec946d" translate="yes" xml:space="preserve">
          <source>When data needs to be sorted according to one or several attributes, we can use Sort to represent the sorting information and generate appropriate hyperlinks that can lead to sort actions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d32507d58d1acbae2181354589dbd03abcd10654" translate="yes" xml:space="preserve">
          <source>When dealing with some complex data, it is possible that you may need to use multiple different models to collect the user input. For example, assuming the user login information is stored in the &lt;code&gt;user&lt;/code&gt; table while the user profile information is stored in the &lt;code&gt;profile&lt;/code&gt; table, you may want to collect the input data about a user through a &lt;code&gt;User&lt;/code&gt; model and a &lt;code&gt;Profile&lt;/code&gt; model. With the Yii model and form support, you can solve this problem in a way that is not much different from handling a single model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ab4630c02396c1f7f6ecce764803df7148f84b3" translate="yes" xml:space="preserve">
          <source>When declaring such relations, you would call either &lt;a href=&quot;yii-db-activerelationtrait#via()-detail&quot;&gt;via()&lt;/a&gt; or &lt;a href=&quot;yii-db-activequery#viaTable()-detail&quot;&gt;viaTable()&lt;/a&gt; to specify the junction table. The difference between &lt;a href=&quot;yii-db-activerelationtrait#via()-detail&quot;&gt;via()&lt;/a&gt; and &lt;a href=&quot;yii-db-activequery#viaTable()-detail&quot;&gt;viaTable()&lt;/a&gt; is that the former specifies the junction table in terms of an existing relation name while the latter directly uses the junction table. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="514ee303b41bd272ad495b71609ca615e52a904e" translate="yes" xml:space="preserve">
          <source>When defining a constant, we often use the code like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88382fae7a1e6cc62a50783f9cb43810d3ea168d" translate="yes" xml:space="preserve">
          <source>When defining an asset bundle class, if you specify the &lt;a href=&quot;yii-web-assetbundle#%24sourcePath-detail&quot;&gt;sourcePath&lt;/a&gt; property, it means any assets listed using relative paths will be considered as source assets. If you do not specify this property, it means those assets are published assets (you should therefore specify &lt;a href=&quot;yii-web-assetbundle#%24basePath-detail&quot;&gt;basePath&lt;/a&gt; and &lt;a href=&quot;yii-web-assetbundle#%24baseUrl-detail&quot;&gt;baseUrl&lt;/a&gt; to let Yii know where they are located).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7893c0a69f5a19ccbcf492278c6f98ad40686a9" translate="yes" xml:space="preserve">
          <source>When developing a complex Web application, it is important to optimize URL rules so that it takes less time to parse requests and create URLs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b406f26d2d3c4f017654a06771d3fb9640906596" translate="yes" xml:space="preserve">
          <source>When displaying active records in a GridView you might encounter the case where you display values of related columns such as the post author's name instead of just his &lt;code&gt;id&lt;/code&gt;. You do this by defining the attribute name in &lt;a href=&quot;yii-grid-gridview#%24columns-detail&quot;&gt;yii\grid\GridView::$columns&lt;/a&gt; as &lt;code&gt;author.name&lt;/code&gt; when the &lt;code&gt;Post&lt;/code&gt; model has a relation named &lt;code&gt;author&lt;/code&gt; and the author model has an attribute &lt;code&gt;name&lt;/code&gt;. The GridView will then display the name of the author but sorting and filtering are not enabled by default. You have to adjust the &lt;code&gt;PostSearch&lt;/code&gt; model that has been introduced in the last section to add this functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42d58a7b3ef6bf985ae7066f3406454cac0f76f6" translate="yes" xml:space="preserve">
          <source>When displaying multiple rows of data, it is often needed that the data be sorted according to some columns specified by end users. Yii uses a &lt;a href=&quot;yii-data-sort&quot;&gt;yii\data\Sort&lt;/a&gt; object to represent the information about a sorting schema. In particular,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0d3248968eef9f919898b8bc84d8be586252eb8" translate="yes" xml:space="preserve">
          <source>When displaying values or getting input for attributes, you often need to display some labels associated with attributes. For example, given an attribute named &lt;code&gt;firstName&lt;/code&gt;, you may want to display a label &lt;code&gt;First Name&lt;/code&gt; which is more user-friendly when displayed to end users in places such as form inputs and error messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0054c0149954cc06cfcca8e37955084fb23ac85" translate="yes" xml:space="preserve">
          <source>When eagerly loading a relation, you can customize the corresponding relational query using an anonymous function. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="575ef21e5b210c7af7c779d4924830051670a375" translate="yes" xml:space="preserve">
          <source>When exposing resources through RESTful APIs, you often need to check if the current user has the permission to access and manipulate the requested resource(s). With &lt;a href=&quot;yii-rest-activecontroller&quot;&gt;yii\rest\ActiveController&lt;/a&gt;, this can be done by overriding the &lt;a href=&quot;yii-rest-activecontroller#checkAccess()-detail&quot;&gt;checkAccess()&lt;/a&gt; method like the following,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8493d4f4f27cb1e46221f9354eebf3412fe4bcf7" translate="yes" xml:space="preserve">
          <source>When extending your class from &lt;a href=&quot;yii-base-component&quot;&gt;yii\base\Component&lt;/a&gt; or &lt;a href=&quot;yii-base-object&quot;&gt;yii\base\Object&lt;/a&gt;, it is recommended that you follow these conventions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37611e807c06bb650e1a2ed9ca936464ea0d5b4b" translate="yes" xml:space="preserve">
          <source>When formatting date and time values, Yii will convert them to the target &lt;a href=&quot;yii-i18n-formatter#%24timeZone-detail&quot;&gt;time zone&lt;/a&gt;. The value being formatted is assumed to be in UTC, unless a time zone is explicitly given or you have configured &lt;a href=&quot;yii-i18n-formatter#%24defaultTimeZone-detail&quot;&gt;yii\i18n\Formatter::$defaultTimeZone&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8ca9ce9a85d85b096a12a1f4490388c9008dda2" translate="yes" xml:space="preserve">
          <source>When found - replaces this placeholder key with a appropriate name of matching parameter. Used in &lt;a href=&quot;yii-web-urlrule#parseRequest()-detail&quot;&gt;parseRequest()&lt;/a&gt;, &lt;a href=&quot;yii-web-urlrule#createUrl()-detail&quot;&gt;createUrl()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71af3fbeaaa11e649507aab35a24b97d7da47814" translate="yes" xml:space="preserve">
          <source>When handling a RESTful API request, an application usually takes the following steps that are related with response formatting:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f18698ff63c41e954e75e41bf7eb4ea96077e75" translate="yes" xml:space="preserve">
          <source>When implementing &lt;a href=&quot;guide-rest-quick-start&quot;&gt;RESTful APIs&lt;/a&gt;, you often need to retrieve parameters that are submitted via PUT, PATCH or other &lt;a href=&quot;#request-methods&quot;&gt;request methods&lt;/a&gt;. You can get these parameters by calling the &lt;a href=&quot;yii-web-request#getBodyParam()-detail&quot;&gt;yii\web\Request::getBodyParam()&lt;/a&gt; methods. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11a34e1a4968054ddd7db1c44679ea50a76ea17f" translate="yes" xml:space="preserve">
          <source>When implementing RESTful APIs, it is commonly needed that the same URL be parsed into different routes according to the HTTP methods being used. This can be easily achieved by prefixing the supported HTTP methods to the patterns of the rules. If a rule supports multiple HTTP methods, separate the method names with commas. For example, the following rules have the same pattern &lt;code&gt;post/&amp;lt;id:\d+&amp;gt;&lt;/code&gt; with different HTTP method support. A request for &lt;code&gt;PUT post/100&lt;/code&gt; will be parsed into &lt;code&gt;post/update&lt;/code&gt;, while a request for &lt;code&gt;GET post/100&lt;/code&gt; will be parsed into &lt;code&gt;post/view&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eae8b10e216e9af3cbc121e7420b2a12291ffabd" translate="yes" xml:space="preserve">
          <source>When including a resource in a RESTful API response, the resource needs to be serialized into a string. Yii breaks this process into two steps. First, the resource is converted into an array by &lt;a href=&quot;yii-rest-serializer&quot;&gt;yii\rest\Serializer&lt;/a&gt;. Second, the array is serialized into a string in a requested format (e.g. JSON, XML) by &lt;a href=&quot;yii-web-responseformatterinterface&quot;&gt;response formatters&lt;/a&gt;. The first step is what you should mainly focus when developing a resource class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d854e287e218a490c8c6d68767c40308565c8c07" translate="yes" xml:space="preserve">
          <source>When input data are submitted from HTML forms, you often need to assign some default values to the inputs if they are empty. You can do so by using the &lt;a href=&quot;guide-tutorial-core-validators#default&quot;&gt;default&lt;/a&gt; validator. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a59f18b0b818ecd1c0cea36bd4b779901409194" translate="yes" xml:space="preserve">
          <source>When multiple filters are configured for a single action, they are applied according to the rules described below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c78c7fcbcc71604b22c7d70ba1dccbc84feb86e" translate="yes" xml:space="preserve">
          <source>When overriding this method, make sure you call the parent implementation like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6262ecadc4874a331190f38cbabe1c9130ee3d7" translate="yes" xml:space="preserve">
          <source>When overwriting an existing file, check the box next to &quot;overwrite&quot; and then click the &quot;Generate&quot; button. If creating a new file, you can just click &quot;Generate&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f9949b4c0fb9df51dccd787a8210db4856224b3" translate="yes" xml:space="preserve">
          <source>When parsing or creating URLs, &lt;a href=&quot;yii-web-urlmanager&quot;&gt;URL manager&lt;/a&gt; examines URL rules in the order they are declared. Therefore, you may consider adjusting the order of the URL rules so that more specific and/or more commonly used rules are placed before less used ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5539cde2d1341179cb45ea15329026dc41cac51c" translate="yes" xml:space="preserve">
          <source>When processing a request, an &lt;a href=&quot;guide-structure-applications&quot;&gt;application&lt;/a&gt; will create a controller based on the requested &lt;a href=&quot;#routes&quot;&gt;route&lt;/a&gt;. The controller will then undergo the following lifecycle to fulfill the request:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a10097406354c81f5ab5fac2f85fe87df462055" translate="yes" xml:space="preserve">
          <source>When query caching is enabled (&lt;a href=&quot;yii-db-connection#%24enableQueryCache-detail&quot;&gt;$enableQueryCache&lt;/a&gt; is true and &lt;a href=&quot;yii-db-connection#%24queryCache-detail&quot;&gt;$queryCache&lt;/a&gt; refers to a valid cache), queries performed within the callable will be cached and their results will be fetched from cache if available. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c08249b6b24cc18188f8737e7ee25a581e0bd17d" translate="yes" xml:space="preserve">
          <source>When querying data through one of the &lt;a href=&quot;#querying-data&quot;&gt;querying methods&lt;/a&gt;, each newly populated Active Record will undergo the following life cycle:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6441081114c7137d3ada30f5cb166d1f87b31a37" translate="yes" xml:space="preserve">
          <source>When rate limiting is enabled, by default every response will be sent with the following HTTP headers containing the current rate limiting information:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4567f4f1a8ad53b1eea9075b1bb7663f849d1fc2" translate="yes" xml:space="preserve">
          <source>When returning data from a database using the &lt;a href=&quot;guide-db-dao&quot;&gt;DAO&lt;/a&gt; database layer all data will be represented as strings, which is not always the expected result especially numeric values should be represented as numbers in JSON. When using the ActiveRecord layer for retrieving data from the database, the values for numeric columns will be converted to integers when data is fetched from the database in &lt;a href=&quot;yii-db-activerecord#populateRecord()-detail&quot;&gt;yii\db\ActiveRecord::populateRecord()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91aed86ea2e16209a33754b2e41179100f0514c0" translate="yes" xml:space="preserve">
          <source>When rows of data are being fetched, the corresponding column value will be set in the variable. Note, the fetch mode must include PDO::FETCH_BOUND.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50264ce7a13974694497a667e940a53496b97c2e" translate="yes" xml:space="preserve">
          <source>When running a command, you need to specify the route to the controller action. For example, the route &lt;code&gt;migrate/create&lt;/code&gt; invokes the sub-command that corresponds to the &lt;a href=&quot;yii-console-controllers-basemigratecontroller#actionCreate()-detail&quot;&gt;MigrateController::actionCreate()&lt;/a&gt; action method. If a route offered during execution does not contain an action ID, the default action will be executed (as with a web controller).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b38301b5c7cceb4841f0e5bbc5e176e3a97f1bb" translate="yes" xml:space="preserve">
          <source>When running multiple related queries in a sequence, you may need to wrap them in a transaction to ensure the integrity and consistency of your database. If any of the queries fails, the database will be rolled back to the state as if none of these queries were executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f5ca0357ecb81c84c057cf460f235fc9576a263" translate="yes" xml:space="preserve">
          <source>When specifying fixtures in &lt;code&gt;fixtures()&lt;/code&gt;, you may use either a class name or a configuration array to refer to a fixture. The configuration array will let you customize the fixture properties when the fixture is loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbc8566eb1129f4c4b6dbcbc5ea569f353ee04e3" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;guide-runtime-handling-errors&quot;&gt;error handler&lt;/a&gt; catches an exception, it will extract the status code from the exception and assign it to the response. For the &lt;a href=&quot;yii-web-notfoundhttpexception&quot;&gt;yii\web\NotFoundHttpException&lt;/a&gt; above, it is associated with the HTTP status 404. The following HTTP exceptions are predefined in Yii:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2857eb4b1ceba03b822ee8aa133556cebe6778d4" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;yii-base-component#trigger()-detail&quot;&gt;yii\base\Component::trigger()&lt;/a&gt; method is called, it will call all handlers attached to the named event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2577ed56e3a0fe53541cb7928bf922c0724cd10" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;yii-filters-contentnegotiator#%24formats-detail&quot;&gt;supported formats&lt;/a&gt; property is specified, ContentNegotiator will support response format negotiation based on the value of the GET parameter &lt;a href=&quot;yii-filters-contentnegotiator#%24formatParam-detail&quot;&gt;$formatParam&lt;/a&gt; and the &lt;code&gt;Accept&lt;/code&gt; HTTP header. If a match is found, the &lt;a href=&quot;yii-web-response#%24format-detail&quot;&gt;yii\web\Response::$format&lt;/a&gt; property will be set as the chosen format. The &lt;a href=&quot;yii-web-response#%24acceptMimeType-detail&quot;&gt;yii\web\Response::$acceptMimeType&lt;/a&gt; as well as &lt;a href=&quot;yii-web-response#%24acceptParams-detail&quot;&gt;yii\web\Response::$acceptParams&lt;/a&gt; will also be updated accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d995a8a1d44a5f3f24006683ba09b205188c29cc" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;yii-filters-contentnegotiator#%24languages-detail&quot;&gt;supported languages&lt;/a&gt; is specified, ContentNegotiator will support application language negotiation based on the value of the GET parameter &lt;a href=&quot;yii-filters-contentnegotiator#%24languageParam-detail&quot;&gt;$languageParam&lt;/a&gt; and the &lt;code&gt;Accept-Language&lt;/code&gt; HTTP header. If a match is found, the &lt;a href=&quot;yii-base-application#%24language-detail&quot;&gt;yii\base\Application::$language&lt;/a&gt; property will be set as the chosen language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fe2032447f19b11d530970a6a9d490dd2b82230" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;yii-log-logger&quot;&gt;logger object&lt;/a&gt; flushes log messages to &lt;a href=&quot;#log-targets&quot;&gt;log targets&lt;/a&gt;, they do not get exported immediately. Instead, the message exporting only occurs when a log target accumulates certain number of the filtered messages. You can customize this number by configuring the &lt;a href=&quot;yii-log-target#%24exportInterval-detail&quot;&gt;exportInterval&lt;/a&gt; property of individual &lt;a href=&quot;#log-targets&quot;&gt;log targets&lt;/a&gt;, like the following,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fc79ca4cef1dc10e283f7c49d126432c1b9b4be" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;validate()&lt;/code&gt; method is called, it does the following steps to perform validation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a63335c30adb69b838c07acab54e4bb7704bda76" translate="yes" xml:space="preserve">
          <source>When the application ends or &lt;a href=&quot;yii-log-logger#%24flushInterval-detail&quot;&gt;$flushInterval&lt;/a&gt; is reached, Logger will call &lt;a href=&quot;yii-log-logger#flush()-detail&quot;&gt;flush()&lt;/a&gt; to send logged messages to different log targets, such as &lt;a href=&quot;yii-log-filetarget&quot;&gt;file&lt;/a&gt;, &lt;a href=&quot;yii-log-emailtarget&quot;&gt;email&lt;/a&gt;, or &lt;a href=&quot;yii-log-dbtarget&quot;&gt;database&lt;/a&gt;, with the help of the &lt;a href=&quot;yii-log-logger#%24dispatcher-detail&quot;&gt;$dispatcher&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="589ed079602409be89215de54e775e0cd37ab6dd" translate="yes" xml:space="preserve">
          <source>When the array is empty, or the option is not set, all the IP addresses are allowed. Otherwise, the rules are checked sequentially until the first match is found. IP address is forbidden, when it has not matched any of the rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ff600c3a40951ddf4adfe11704a6c17c09bc1ec" translate="yes" xml:space="preserve">
          <source>When the array is empty, or the option not set, all IP addresses are allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb5a900e01a00552031886b1d53d02900da703d7" translate="yes" xml:space="preserve">
          <source>When the columns are specified as an array, you may also use array keys as the column aliases (if a column does not need alias, do not use a string key).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfa378160423a86b0556aee08d606c4969ecc3d5" translate="yes" xml:space="preserve">
          <source>When the connection is no longer necessary and the result set has been retrieved, it can be closed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c5b9ffa10d6df2cd9c308303c5c1ae6bf13591b" translate="yes" xml:space="preserve">
          <source>When the current request is an AJAX request, sending a &lt;code&gt;Location&lt;/code&gt; header will not automatically cause the browser to redirect. To solve this problem, the &lt;a href=&quot;yii-web-response#redirect()-detail&quot;&gt;yii\web\Response::redirect()&lt;/a&gt; method sets an &lt;code&gt;X-Redirect&lt;/code&gt; header with the redirection URL as its value. On the client-side, you may write JavaScript code to read this header value and redirect the browser accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa5b7d242ac26a26fc21b723fa55ad161ccb8b16" translate="yes" xml:space="preserve">
          <source>When the data for a model is received from end users, it should be validated to make sure it satisfies certain rules (called &lt;em&gt;validation rules&lt;/em&gt;, also known as &lt;em&gt;business rules&lt;/em&gt;). For example, given a &lt;code&gt;ContactForm&lt;/code&gt; model, you may want to make sure all attributes are not empty and the &lt;code&gt;email&lt;/code&gt; attribute contains a valid email address. If the values for some attributes do not satisfy the corresponding business rules, appropriate error messages should be displayed to help the user to fix the errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e9720f6824004be4869d54b6220a653713fee5d" translate="yes" xml:space="preserve">
          <source>When the extension is installed in an application, Yii will automatically instantiate the bootstrapping class and call its &lt;a href=&quot;yii-base-bootstrapinterface#bootstrap()-detail&quot;&gt;bootstrap()&lt;/a&gt; method during the bootstrapping process for every request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="930c4880f6e59d62e0a4dbd3867d5e2b9b9f1f4c" translate="yes" xml:space="preserve">
          <source>When the extension is installed in an application, Yii will create for each listed root namespace an &lt;a href=&quot;guide-concept-aliases#extension-aliases&quot;&gt;alias&lt;/a&gt; that refers to the directory corresponding to the namespace. For example, the above &lt;code&gt;autoload&lt;/code&gt; declaration will correspond to an alias named &lt;code&gt;@yii/imagine&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8cfdd7dbf3fc664932e6f546f4cb7d30b0b588b" translate="yes" xml:space="preserve">
          <source>When the fixture is being loaded, it will first call &lt;a href=&quot;yii-elasticsearch-activefixture#resetIndex()-detail&quot;&gt;resetIndex()&lt;/a&gt; to remove any existing data in the index for the &lt;a href=&quot;yii-elasticsearch-activefixture#%24type-detail&quot;&gt;$type&lt;/a&gt;. It will then populate the index with the data returned by &lt;a href=&quot;yii-elasticsearch-activefixture#getData()-detail&quot;&gt;getData()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80351077f96132533a03ec64ea2a0032203d2d3b" translate="yes" xml:space="preserve">
          <source>When the fixture is being loaded, it will first call &lt;a href=&quot;yii-mongodb-activefixture#resetCollection()-detail&quot;&gt;resetCollection()&lt;/a&gt; to remove any existing data in the collection. It will then populate the collection with the data returned by &lt;a href=&quot;yii-mongodb-activefixture#getData()-detail&quot;&gt;getData()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e98ac7e183438b58d400f572531ac9354606d6e6" translate="yes" xml:space="preserve">
          <source>When the fixture is being loaded, it will first call &lt;a href=&quot;yii-sphinx-activefixture#resetIndex()-detail&quot;&gt;resetIndex()&lt;/a&gt; to remove any existing data in the index. It will then populate the index with the data returned by &lt;a href=&quot;yii-sphinx-activefixture#getData()-detail&quot;&gt;getData()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b57913cc507d8dff3f4dab8944c0ebc0a25c67d4" translate="yes" xml:space="preserve">
          <source>When the fixture is being loaded, it will first call &lt;a href=&quot;yii-test-activefixture#resetTable()-detail&quot;&gt;resetTable()&lt;/a&gt; to remove any existing data in the table. It will then populate the table with the data returned by &lt;a href=&quot;yii-test-activefixture#getData()-detail&quot;&gt;getData()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12a9800e0b9dd5b13d937de0254bbbff41e189bd" translate="yes" xml:space="preserve">
          <source>When the model is in the &lt;code&gt;login&lt;/code&gt; scenario, all three attributes will be validated. However, only the &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; attributes can be massively assigned. To assign an input value to the &lt;code&gt;secret&lt;/code&gt; attribute, you have to do it explicitly as follows,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdceace3f5a600041a1a28cdfc749220d3fa8150" translate="yes" xml:space="preserve">
          <source>When the pretty URL format is enabled, the &lt;a href=&quot;yii-web-urlmanager&quot;&gt;URL manager&lt;/a&gt; uses the URL rules declared in its &lt;a href=&quot;yii-web-urlmanager#%24rules-detail&quot;&gt;rules&lt;/a&gt; property to parse incoming requests and create URLs. In particular, to parse an incoming request, the &lt;a href=&quot;yii-web-urlmanager&quot;&gt;URL manager&lt;/a&gt; examines the rules in the order they are declared and looks for the &lt;em&gt;first&lt;/em&gt; rule that matches the requested URL. The matching rule is then used to parse the URL into a route and its associated parameters. Similarly, to create a URL, the &lt;a href=&quot;yii-web-urlmanager&quot;&gt;URL manager&lt;/a&gt; looks for the first rule that matches the given route and parameters and uses that to create a URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c183df5dcf8bdbe0abccca858f4a3f900f73c60a" translate="yes" xml:space="preserve">
          <source>When the rules are used to parse URLs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78223e28d23e5218fdec369c582b0c44753a79fc" translate="yes" xml:space="preserve">
          <source>When the same cache storage is used by different applications, you should specify a unique cache key prefix for each application to avoid conflicts of cache keys. This can be done by configuring the &lt;a href=&quot;yii-caching-cache#%24keyPrefix-detail&quot;&gt;yii\caching\Cache::$keyPrefix&lt;/a&gt; property. For example, in the application configuration you can write the following code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8b554a405da88d0c5b7191fba8ba63e40662467" translate="yes" xml:space="preserve">
          <source>When the select query doesn't provide the volume, the model will be able to calculate it automatically using the attributes of the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6598d5280a70f607dc6d16d37c01c2eb837dbfdf" translate="yes" xml:space="preserve">
          <source>When the tables are specified as an array, you may also use the array keys as the table aliases (if a table does not need alias, do not use a string key).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c9150a32a290a9f54646fa3129972096b8dcaf5" translate="yes" xml:space="preserve">
          <source>When the user clicks on the CAPTCHA image, it will cause the CAPTCHA image to be refreshed with a new CAPTCHA.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0582364eef729e036e5cc542711d4880e0c1067e" translate="yes" xml:space="preserve">
          <source>When the user has exceeded his rate limit, RateLimiter will throw a &lt;a href=&quot;yii-web-toomanyrequestshttpexception&quot;&gt;yii\web\TooManyRequestsHttpException&lt;/a&gt; exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d73f3902937cf2c6cb34a1f47642d6dba27033f" translate="yes" xml:space="preserve">
          <source>When there are too much data to be displayed on a single page, a common strategy is to display them in multiple pages and on each page only display a small portion of the data. This strategy is known as &lt;em&gt;pagination&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f08cc912f1050120aeaf54ee64157cc92921b02" translate="yes" xml:space="preserve">
          <source>When there can be name conflicts among different behaviors attached to the same component, the conflicts are automatically resolved by prioritizing the behavior attached to the component first. Name conflicts caused by different traits requires manual resolution by renaming the affected properties or methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="424512d3b6d67e9c86bff8317b4f576367df3223" translate="yes" xml:space="preserve">
          <source>When this event is triggered, the application instance has been configured and initialized. So it is a good place to insert your custom code via the event mechanism to intercept the request handling process. For example, in the event handler, you may dynamically set the &lt;a href=&quot;yii-base-application#%24language-detail&quot;&gt;yii\base\Application::$language&lt;/a&gt; property based on some parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e7e192fadff52b295230394c03387f6e07b7aa8" translate="yes" xml:space="preserve">
          <source>When this event is triggered, the request handling is completed and you may take this chance to do some postprocessing of the request or customize the response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="220e9b7fb93b379a2481fb12f2c35e18c8ec4c67" translate="yes" xml:space="preserve">
          <source>When this is not set, it means caching is not enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da4691fba3a173a21e985af1b342ce88c1ad9bb0" translate="yes" xml:space="preserve">
          <source>When this method is used to validate multiple models, this parameter will be interpreted as a model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e4c81891f7d8da291c69a375ecfcfef166e1b02" translate="yes" xml:space="preserve">
          <source>When this property is not set (null) the filtering feature is disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0eb522f85aec497bef0f52c7d50bfb1486532c0" translate="yes" xml:space="preserve">
          <source>When to Register Dependencies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9901df1af15ac1d86da217006985b5633a9e3d0a" translate="yes" xml:space="preserve">
          <source>When translating a message, you can embed some placeholders and have them replaced by dynamic parameter values. You can even use special placeholder syntax to have the parameter values formatted according to the target language. In this subsection, we will describe different ways of formatting messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15a0968992d4e57c742c05b988c3487e904eb9ba" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;guide-structure-widgets&quot;&gt;widgets&lt;/a&gt;, you often need to use configurations to customize the widget properties. Both of the &lt;a href=&quot;yii-base-widget#widget()-detail&quot;&gt;yii\base\Widget::widget()&lt;/a&gt; and &lt;a href=&quot;yii-base-widget#begin()-detail&quot;&gt;yii\base\Widget::begin()&lt;/a&gt; methods can be used to create a widget. They take a configuration array, like the following,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56fd5727c83bffacf66d54075889034af2d7299f" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;yii-helpers-basehtml#addCssStyle()-detail&quot;&gt;addCssStyle()&lt;/a&gt;, you can specify either an array of key-value pairs, corresponding to CSS property names and values, or a string such as &lt;code&gt;width: 100px; height: 200px;&lt;/code&gt;. These formats can be converted from one to the other using &lt;a href=&quot;yii-helpers-basehtml#cssStyleFromArray()-detail&quot;&gt;cssStyleFromArray()&lt;/a&gt; and &lt;a href=&quot;yii-helpers-basehtml#cssStyleToArray()-detail&quot;&gt;cssStyleToArray()&lt;/a&gt;. The &lt;a href=&quot;yii-helpers-basehtml#removeCssStyle()-detail&quot;&gt;removeCssStyle()&lt;/a&gt; method accepts an array of properties to remove. If it's a single property, it can be specified as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f951538412b880232f879d54cf5335953bb71094" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;yii-helpers-basejson#encode()-detail&quot;&gt;yii\helpers\Json::encode()&lt;/a&gt; or &lt;a href=&quot;yii-helpers-basejson#htmlEncode()-detail&quot;&gt;yii\helpers\Json::htmlEncode()&lt;/a&gt; to encode a value, JsonExpression objects will be specially handled and encoded as a JavaScript expression instead of a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d02d4d0d6ec5efa64747239eaf619d991c0cfcc" translate="yes" xml:space="preserve">
          <source>When using DbCache in a production server, we recommend you create a DB index for the 'expire' column in the cache table to improve the performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb6fde209058c03fb4a59d30a6ede7850303eac" translate="yes" xml:space="preserve">
          <source>When using DbSession in a production server, we recommend you create a DB index for the 'expire' column in the session table to improve the performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f59635af8f3342bc7f292860c8f6050c3bc8af2" translate="yes" xml:space="preserve">
          <source>When using Gii, if you have already created the same file and would be overwriting it, click the &lt;code&gt;diff&lt;/code&gt; button next to the file name to see the differences between the code to be generated and the existing version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aac4e9c52de683019bdd025253e31374108d6455" translate="yes" xml:space="preserve">
          <source>When using Yii DAO, you mainly need to deal with plain SQLs and PHP arrays. As a result, it is the most efficient way to access databases. However, because SQL syntax may vary for different databases, using Yii DAO also means you have to take extra effort to create a database-agnostic application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65403b0ce5d10d14404efcc6727df5f39a12bb57" translate="yes" xml:space="preserve">
          <source>When using a &lt;a href=&quot;yii-widgets-baselistview#%24dataProvider-detail&quot;&gt;$dataProvider&lt;/a&gt; with active records, you can also display values from related records, e.g. the &lt;code&gt;name&lt;/code&gt; attribute of the &lt;code&gt;author&lt;/code&gt; relation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ebd2667deb43f96ab9b9d568b4c7bb08be3e51c" translate="yes" xml:space="preserve">
          <source>When using cookie validation, you must specify a &lt;a href=&quot;yii-web-request#%24cookieValidationKey-detail&quot;&gt;yii\web\Request::$cookieValidationKey&lt;/a&gt; that will be used to generate the aforementioned hash strings. You can do so by configuring the &lt;code&gt;request&lt;/code&gt; component in the application configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a06df862eef65f284f61bc35ad1dbe1ea288dbea" translate="yes" xml:space="preserve">
          <source>When using fragment caching, you may encounter the situation where a large fragment of content is relatively static except at one or a few places. For example, a page header may display the main menu bar together with the name of the current user. Another problem is that the content being cached may contain PHP code that must be executed for every request (e.g. the code for registering an asset bundle). Both problems can be solved by the so-called &lt;em&gt;dynamic content&lt;/em&gt; feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d85d7368ee249319a9697deae98d575bb2bf9404" translate="yes" xml:space="preserve">
          <source>When using parameter binding, you may call &lt;a href=&quot;yii-db-query#params()-detail&quot;&gt;params()&lt;/a&gt; or &lt;a href=&quot;yii-db-query#addParams()-detail&quot;&gt;addParams()&lt;/a&gt; to specify parameters separately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b1dd1a3a6155faed38242d54d1908b206bbb4c" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;guide-start-installation&quot;&gt;Basic Project Template&lt;/a&gt;, you may put your classes under the top-level namespace &lt;code&gt;app&lt;/code&gt; so that they can be autoloaded by Yii without the need of defining a new alias. This is because &lt;code&gt;@app&lt;/code&gt; is a &lt;a href=&quot;guide-concept-aliases#predefined-aliases&quot;&gt;predefined alias&lt;/a&gt;, and a class name like &lt;code&gt;app\components\MyClass&lt;/code&gt; can be resolved into the class file &lt;code&gt;AppBasePath/components/MyClass.php&lt;/code&gt;, according to the algorithm just described.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4c044eb8a8e79a9b815ad439f1c7e8fb74778c0" translate="yes" xml:space="preserve">
          <source>When using the Yii autoloader together with other autoloaders, you should include the &lt;code&gt;Yii.php&lt;/code&gt; file &lt;em&gt;after&lt;/em&gt; all other autoloaders are installed. This will make the Yii autoloader the first one responding to any class autoloading request. For example, the following code is extracted from the &lt;a href=&quot;guide-structure-entry-scripts&quot;&gt;entry script&lt;/a&gt; of the &lt;a href=&quot;guide-start-installation&quot;&gt;Basic Project Template&lt;/a&gt;. The first line installs the Composer autoloader, while the second line installs the Yii autoloader:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a0876a706dcdbb99ed4f1ef689f16b2059a65aa" translate="yes" xml:space="preserve">
          <source>When using the data items returned by a data provider, you often need to identify each data item with a unique key. For example, if the data items represent customer information, you may want to use the customer ID as the key for each customer data. Data providers can return a list of such keys corresponding with the data items returned by &lt;a href=&quot;yii-data-dataproviderinterface#getModels()-detail&quot;&gt;yii\data\DataProviderInterface::getModels()&lt;/a&gt;. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72a6f6740504142653ec6cd1bf78fd8e83f0ed4d" translate="yes" xml:space="preserve">
          <source>When using the default URL format, parsing a request into a route is as simple as getting the value of a &lt;code&gt;GET&lt;/code&gt; query parameter named &lt;code&gt;r&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cef16920ded20194190e8f5c8a3dac1385787f6" translate="yes" xml:space="preserve">
          <source>When using the pretty URL format, the &lt;a href=&quot;yii-web-urlmanager&quot;&gt;URL manager&lt;/a&gt; will examine the registered &lt;a href=&quot;yii-web-urlmanager#%24rules-detail&quot;&gt;URL rules&lt;/a&gt; to find matching one that can resolve the request into a route. If such a rule cannot be found, a &lt;a href=&quot;yii-web-notfoundhttpexception&quot;&gt;yii\web\NotFoundHttpException&lt;/a&gt; exception will be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="510a8ced8830eda2b0af7e3b9e31494812c2b277" translate="yes" xml:space="preserve">
          <source>When using this configuration, you should also set &lt;code&gt;cgi.fix_pathinfo=0&lt;/code&gt; in the &lt;code&gt;php.ini&lt;/code&gt; file in order to avoid many unnecessary system &lt;code&gt;stat()&lt;/code&gt; calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72e9e43938addb790113f38a55ab6c12f9169c5e" translate="yes" xml:space="preserve">
          <source>When validating mutliple attributes, it may contain the following placeholders:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce33f2ef516d57156fa66c9c7025992803f852b4" translate="yes" xml:space="preserve">
          <source>When validating single attribute, it may contain the following placeholders which will be replaced accordingly by the validator:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2253368a9f2ba9b6193c18f051c98dd911938f74" translate="yes" xml:space="preserve">
          <source>When working with applications that need to support multiple languages, you often need to specify different date and time formats for different locales. To simplify this task, you may use format shortcuts (e.g. &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;), instead. The formatter will turn a format shortcut into an appropriate format according to the currently active &lt;a href=&quot;yii-i18n-formatter#%24locale-detail&quot;&gt;locale&lt;/a&gt;. The following format shortcuts are supported (the examples assume &lt;code&gt;en_GB&lt;/code&gt; is the active locale):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ba8514cfa529e33d50890f34a8456b0e0e91c7" translate="yes" xml:space="preserve">
          <source>When working with large amounts of data, methods such as &lt;a href=&quot;yii-db-query#all()-detail&quot;&gt;yii\db\Query::all()&lt;/a&gt; are not suitable because they require loading the whole query result into the client's memory. To solve this issue Yii provides batch query support. The server holds the query result, and the client uses a cursor to iterate over the result set one batch at a time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="186f6f4153aa4454ad8295feeb4d3616f5e9b4ab" translate="yes" xml:space="preserve">
          <source>When working with relational data, you often need to establish relationships between different data or destroy existing relationships. This requires setting proper values for the columns that define the relations. Using Active Record, you may end up writing the code like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b2d241c3c3b04d55306c57bfcf19d273883d625" translate="yes" xml:space="preserve">
          <source>When working with session data that are arrays, the &lt;code&gt;session&lt;/code&gt; component has a limitation which prevents you from directly modifying an array element. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0ff59f8cc5cf0b8b06d20af00694cea26475a7b" translate="yes" xml:space="preserve">
          <source>When working with the &lt;a href=&quot;yii-web-view&quot;&gt;yii\web\View&lt;/a&gt; object you can dynamically register frontend scripts. There are two dedicated methods for this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff468fa92fcbd91a89fabb13c1db40aa90d6d2a" translate="yes" xml:space="preserve">
          <source>When writing database-agnostic code, properly quoting table and column names is often a headache because different databases have different name quoting rules. To overcome this problem, you may use the following quoting syntax introduced by Yii:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="590874f0745d4b3072089e8d04fcbba075d04d6f" translate="yes" xml:space="preserve">
          <source>When you access a relation property for the first time, a SQL statement will be executed, like shown in the above example. If the same property is accessed again, the previous result will be returned without re-executing the SQL statement. To force re-executing the SQL statement, you should unset the relation property first: &lt;code&gt;unset($customer-&amp;gt;orders)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84296826636518c1644ab9f825ec7eb9f1dc446d" translate="yes" xml:space="preserve">
          <source>When you are reading and sending cookies through the &lt;code&gt;request&lt;/code&gt; and &lt;code&gt;response&lt;/code&gt; components as shown in the last two subsections, you enjoy the added security of cookie validation which protects cookies from being modified on the client-side. This is achieved by signing each cookie with a hash string, which allows the application to tell if a cookie has been modified on the client-side. If so, the cookie will NOT be accessible through the &lt;a href=&quot;yii-web-request#%24cookies-detail&quot;&gt;cookie collection&lt;/a&gt; of the &lt;code&gt;request&lt;/code&gt; component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="777ef026fbc1061810afadfe65dbeb09c45d7157" translate="yes" xml:space="preserve">
          <source>When you call &lt;a href=&quot;yii-db-baseactiverecord#save()-detail&quot;&gt;save()&lt;/a&gt; to save an Active Record instance, only &lt;em&gt;dirty attributes&lt;/em&gt; are being saved. An attribute is considered &lt;em&gt;dirty&lt;/em&gt; if its value has been modified since it was loaded from DB or saved to DB most recently. Note that data validation will be performed regardless if the Active Record instance has dirty attributes or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46588924869bc9cc9c2797d4977e8d09cc2a84b2" translate="yes" xml:space="preserve">
          <source>When you call &lt;a href=&quot;yii-db-baseactiverecord#save()-detail&quot;&gt;save()&lt;/a&gt;, by default it will call &lt;a href=&quot;yii-base-model#validate()-detail&quot;&gt;validate()&lt;/a&gt; automatically. Only when the validation passes, will it actually save the data; otherwise it will simply return &lt;code&gt;false&lt;/code&gt;, and you can check the &lt;a href=&quot;yii-base-model#%24errors-detail&quot;&gt;errors&lt;/a&gt; property to retrieve the validation error messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="741d98e4aff77f5e2e778a7d3d370113963a9977" translate="yes" xml:space="preserve">
          <source>When you call &lt;a href=&quot;yii-db-query#all()-detail&quot;&gt;all()&lt;/a&gt;, it will return an array of rows which are indexed by consecutive integers. Sometimes you may want to index them differently, such as indexing by a particular column or expression values. You can achieve this goal by calling &lt;a href=&quot;yii-db-querytrait#indexBy()-detail&quot;&gt;indexBy()&lt;/a&gt; before &lt;a href=&quot;yii-db-query#all()-detail&quot;&gt;all()&lt;/a&gt;. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b61f296b7df5f714c9be53e174cea8617374158" translate="yes" xml:space="preserve">
          <source>When you call &lt;a href=&quot;yii-web-session#setFlash()-detail&quot;&gt;yii\web\Session::setFlash()&lt;/a&gt;, it will overwrite any existing flash data that has the same name. To append new flash data to an existing message of the same name, you may call &lt;a href=&quot;yii-web-session#addFlash()-detail&quot;&gt;yii\web\Session::addFlash()&lt;/a&gt; instead. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c94c2c89eed2ab43f33c2b98e99341ef2156888" translate="yes" xml:space="preserve">
          <source>When you call a query method of &lt;a href=&quot;yii-db-query&quot;&gt;yii\db\Query&lt;/a&gt;, it actually does the following work internally:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="596bda6bdd631c772bb138c03ef15465a85668a6" translate="yes" xml:space="preserve">
          <source>When you include multiple CSS or JavaScript files in a Web page, they have to follow a certain order to avoid overriding issues. For example, if you are using a jQuery UI widget in a Web page, you have to make sure the jQuery JavaScript file is included before the jQuery UI JavaScript file. We call such ordering the dependencies among assets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ee8eeddc9a44acfde3194e11e89514b9a23b899" translate="yes" xml:space="preserve">
          <source>When you need to invalidate all the stored cache data, you can call &lt;a href=&quot;yii-caching-cache#flush()-detail&quot;&gt;yii\caching\Cache::flush()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c847af291c0738cce74bc0c032da91a5028fb8e" translate="yes" xml:space="preserve">
          <source>When you register such an asset bundle with a view, the &lt;a href=&quot;yii-web-assetmanager&quot;&gt;asset manager&lt;/a&gt; will automatically run the pre-processor tools to convert assets in recognized extended syntax into CSS/JavaScript. When the view finally renders a page, it will include the CSS/JavaScript files in the page, instead of the original assets in extended syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99a97796ed486e4883c8d218bd465f3439b968e3" translate="yes" xml:space="preserve">
          <source>When you render a view, you can specify the view using either a view name or a view file path/alias. In most cases, you would use the former because it is more concise and flexible. We call views specified using names as &lt;em&gt;named views&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84a1e27fedca44218e0b8415df62cf4c11636cf3" translate="yes" xml:space="preserve">
          <source>When you set this to &lt;code&gt;get&lt;/code&gt; you may see the url parameters repeated on each request. This is because the default value of &lt;a href=&quot;yii-widgets-activeform#%24action-detail&quot;&gt;$action&lt;/a&gt; is set to be the current request url and each submit will add new parameters instead of replacing existing ones. You may set &lt;a href=&quot;yii-widgets-activeform#%24action-detail&quot;&gt;$action&lt;/a&gt; explicitly to avoid this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ae813b0a5ec7346979269f97dadaa4a781c9823" translate="yes" xml:space="preserve">
          <source>When you want to compare numbers, make sure to also set &lt;a href=&quot;yii-validators-comparevalidator#%24type-detail&quot;&gt;$type&lt;/a&gt; to &lt;code&gt;number&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="869dfadbb1ea8c9c05492ab742826a13f8823d71" translate="yes" xml:space="preserve">
          <source>Whether $var is array-like</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efdf3f8ffaa7f1631c0bc1ecc735d87e18da4945" translate="yes" xml:space="preserve">
          <source>Whether &lt;code&gt;$child&lt;/code&gt; is already a child of &lt;code&gt;$parent&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2ec3eec9e1bba7519f97808abf7b842e238e9d1" translate="yes" xml:space="preserve">
          <source>Whether &lt;code&gt;load()&lt;/code&gt; found the expected form in &lt;code&gt;$data&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4359be1db1ded93bef12653e779b46d683721a86" translate="yes" xml:space="preserve">
          <source>Whether CSRF token is valid. If &lt;a href=&quot;yii-web-request#%24enableCsrfValidation-detail&quot;&gt;$enableCsrfValidation&lt;/a&gt; is false, this method will return true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6691a657a33877c9fd27f13c60fa032921fd8bae" translate="yes" xml:space="preserve">
          <source>Whether URLs are equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c186b6c1e182c98bcdd7d99deac6a627e237f4c0" translate="yes" xml:space="preserve">
          <source>Whether a SQL statement is for read purpose.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dc055d40df5cc6f2375e978b7c810ce83231d1d" translate="yes" xml:space="preserve">
          <source>Whether a handler is found and detached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85c7d307734eb1b2d260e02b553fa79a2295e455" translate="yes" xml:space="preserve">
          <source>Whether a loop exists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f35eedb031d047d5282b3792ab0884d8d3df1011" translate="yes" xml:space="preserve">
          <source>Whether address may have a &lt;a href=&quot;yii-validators-ipvalidator#NEGATION_CHAR-detail&quot;&gt;NEGATION_CHAR&lt;/a&gt; character at the beginning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8364ceba47860a3d6c5470765e3cc9bfe5fa92e8" translate="yes" xml:space="preserve">
          <source>Whether address may have a &lt;a href=&quot;yii-validators-ipvalidator#NEGATION_CHAR-detail&quot;&gt;NEGATION_CHAR&lt;/a&gt; character at the beginning. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9fb47dbfb4ec84f0cbbb65429a897705bcfd1bb" translate="yes" xml:space="preserve">
          <source>Whether all locks acquired in this process (i.e. local locks) must be released automatically before finishing script execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a6eef3d17cf8a5b16047318fa3cac0d53f82502" translate="yes" xml:space="preserve">
          <source>Whether all locks acquired in this process (i.e. local locks) must be released automatically before finishing script execution. Defaults to true. Setting this property to true means that all locks acquired in this process must be released (regardless of errors or exceptions).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb6a336be1b5ac50ece82a99820d9d1b94ce9b1b" translate="yes" xml:space="preserve">
          <source>Whether all models are valid. False will be returned if one or multiple models have validation error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd0629529f9a2d1e5356998796326be86f0821cf" translate="yes" xml:space="preserve">
          <source>Whether all required attributes are present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29e18337d371c3b102ff6fc0d7f3310a6df21289" translate="yes" xml:space="preserve">
          <source>Whether any flash messages exist under specified key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f24e788c3c00d46453badd8b45bab136ef111423" translate="yes" xml:space="preserve">
          <source>Whether any of the dropdown items is &lt;code&gt;active&lt;/code&gt; or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44bea59745c68f0c056afc2204e574af35f44466" translate="yes" xml:space="preserve">
          <source>Whether any of the specified columns is auto incremental.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4ceef37f66176d319f008bfd8985bf99f7c811" translate="yes" xml:space="preserve">
          <source>Whether array of $assignments is empty and &lt;a href=&quot;yii-rbac-basemanager#%24defaultRoles-detail&quot;&gt;$defaultRoles&lt;/a&gt; property is empty as well</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59dd5765a95516a05bd0898981843e1c26a88b78" translate="yes" xml:space="preserve">
          <source>Whether at least one of the models is successfully populated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc60161229baeecedfa04b4391907250fcd0c8f6" translate="yes" xml:space="preserve">
          <source>Whether authentication is optional or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36cd8d21d845345ef9b8a8f8a2b0242cce137de1" translate="yes" xml:space="preserve">
          <source>Whether cached data was successfully stored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7743dda5a50686dea1ed9f917538100324517e8f" translate="yes" xml:space="preserve">
          <source>Whether client exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe416a7554667ee6b4a0889e84fb6d2a440081f5" translate="yes" xml:space="preserve">
          <source>Whether column should be specified as 'ignored'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b034c2c66a43180edf8ac137a1cab8d5a22e75a4" translate="yes" xml:space="preserve">
          <source>Whether cookie should be sent via secure connection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d598b1c8068ba34486f866bd380ddf8c4c1c73d9" translate="yes" xml:space="preserve">
          <source>Whether cookies should be validated to ensure they are not tampered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="616f9c779a3e1fea190c1461de99fba4019a4afc" translate="yes" xml:space="preserve">
          <source>Whether cookies should be validated to ensure they are not tampered. Defaults to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c3d399a1003c49af619bd69d57d222ac8989060" translate="yes" xml:space="preserve">
          <source>Whether existing value should be preserved. This will only set defaults for attributes that are &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="743c4bcd149dcfef1f6884ce2ca0b8a761b6f6ea" translate="yes" xml:space="preserve">
          <source>Whether field exists or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00504612e94f7a43f84a5e270132dcfd73f2a8d7" translate="yes" xml:space="preserve">
          <source>Whether files are successfully saved without any error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56ae6eae011100fdc7bfa4b8f1e3c8404c0bae01" translate="yes" xml:space="preserve">
          <source>Whether given name of the file belongs to the framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6599c3dc931f6bcfe6925a6502b0f68086caf821" translate="yes" xml:space="preserve">
          <source>Whether it is possible to select multiple rows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa2a15453a4efb91ec590a85032d9069235297fd" translate="yes" xml:space="preserve">
          <source>Whether it is possible to select multiple rows. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c38df82a7478c109508cf4ddc7a877c273222cb" translate="yes" xml:space="preserve">
          <source>Whether log files should be rotated when they reach a certain &lt;a href=&quot;yii-log-filetarget#%24maxFileSize-detail&quot;&gt;maximum size&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fea168e5efd6e87959f827d6713521b9da92a98" translate="yes" xml:space="preserve">
          <source>Whether log files should be rotated when they reach a certain &lt;a href=&quot;yii-log-filetarget#%24maxFileSize-detail&quot;&gt;maximum size&lt;/a&gt;. Log rotation is enabled by default. This property allows you to disable it, when you have configured an external tools for log rotation on your server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7405ad4beb58c6ca932d8ec32ecb8a6719352a18" translate="yes" xml:space="preserve">
          <source>Whether message contains any cookie.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac4494065f33b0939d8214bdf08ded623843b3bf" translate="yes" xml:space="preserve">
          <source>Whether message contains any header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4afedc737f0a915fb440ef3160d51950cb13ca88" translate="yes" xml:space="preserve">
          <source>Whether operation is successful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0736777017382d2399d33f45f951db9c7692748d" translate="yes" xml:space="preserve">
          <source>Whether operation was successful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d570c14f2f5f7cd14846f0db56c9cf7528a21fbf" translate="yes" xml:space="preserve">
          <source>Whether or not an offset exists.</source>
          <target state="translated">Si existe o no una compensación.</target>
        </trans-unit>
        <trans-unit id="289dd3d0363636c0bfc552a79df8dc7806ec17fd" translate="yes" xml:space="preserve">
          <source>Whether relation has been populated with records.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebdebc63f509a85f7886b67673906b286d45e156" translate="yes" xml:space="preserve">
          <source>Whether response is OK.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64155a202cbca5c6caba8a8563dcc2eaefedd3a1" translate="yes" xml:space="preserve">
          <source>Whether session is GCed successfully</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2bd37fb3875831aa3001325b084ac2a29c811cc" translate="yes" xml:space="preserve">
          <source>Whether session is closed successfully</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6db95624a02906092bd3e112cd661fc0a892adfc" translate="yes" xml:space="preserve">
          <source>Whether session is destroyed successfully</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86277119d6a666fa76063ac1b9c7dd0429a29b4d" translate="yes" xml:space="preserve">
          <source>Whether session is opened successfully</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd5dd37a8f32687696c867cf18ebc028a60b41d5" translate="yes" xml:space="preserve">
          <source>Whether session write is successful</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1f0c0401b8118312a3b51e617ed426176a055b7" translate="yes" xml:space="preserve">
          <source>Whether slashes should be collapsed, for example &lt;code&gt;site///index&lt;/code&gt; will be converted into &lt;code&gt;site/index&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d97756c8f43f8e7dd72f8ad2fdd8656070599a56" translate="yes" xml:space="preserve">
          <source>Whether slug is unique.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="949ec2f8eb2fddbda03cce8f9f51febb218c3af6" translate="yes" xml:space="preserve">
          <source>Whether strings are equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a32485735c69ceef1fd1870bd95c8e775ee7e16" translate="yes" xml:space="preserve">
          <source>Whether the $file mimeType is allowed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc2c2518b3476dd4a57ed08a623677b1a6697f8f" translate="yes" xml:space="preserve">
          <source>Whether the DB component has support for EXPLAIN queries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63ce35c3a2c360d165581938f566bfff0cf75227" translate="yes" xml:space="preserve">
          <source>Whether the DB connection is established</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="925da730b22e727d19231f8cb5f4f9ca71d721da" translate="yes" xml:space="preserve">
          <source>Whether the HTTP cache is still valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7676792f5147f95c2dde4faa2bf2f83b764234d9" translate="yes" xml:space="preserve">
          <source>Whether the Mongo connection is established</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0251a78aee208890effe4979b9512f4e76d02671" translate="yes" xml:space="preserve">
          <source>Whether the URL is relative</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d51c62f34f227fcf6d1cafc6493282c99e67da8" translate="yes" xml:space="preserve">
          <source>Whether the action should continue to be executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c8c362862fb7a02e302e74cae7f3b326e25a5f1" translate="yes" xml:space="preserve">
          <source>Whether the action should continue to run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99a250be64ee06cf378680263c76f0ae505c9355" translate="yes" xml:space="preserve">
          <source>Whether the address can be an IP with CIDR subnet, like &lt;code&gt;192.168.10.0/24&lt;/code&gt;. The following values are possible:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1af32741fb534a6ec1b3474ad2ce42d7129c9268" translate="yes" xml:space="preserve">
          <source>Whether the address can be an IP with CIDR subnet, like `192.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51779875918359cfc5e850f0fcabf2620408030d" translate="yes" xml:space="preserve">
          <source>Whether the argument is required</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3483be93d0aca67df202d55de65dd42bed50b25" translate="yes" xml:space="preserve">
          <source>Whether the array contains the specified key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4bf42e669caf54311df68e61939256ca5218db0" translate="yes" xml:space="preserve">
          <source>Whether the array is associative</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e9cbcadfb3f6ae35e53145c119724190a661412" translate="yes" xml:space="preserve">
          <source>Whether the array keys must be a consecutive sequence in order for the array to be treated as indexed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc92b7d08ea79827acee75a73fee5d8533296de0" translate="yes" xml:space="preserve">
          <source>Whether the array keys must be all strings in order for the array to be treated as associative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf1b480f7f833db3569d80c545ca06aceec4dd76" translate="yes" xml:space="preserve">
          <source>Whether the assignments should only be done to the safe attributes. A safe attribute is one that is associated with a validation rule in the current &lt;a href=&quot;yii-base-model#%24scenario-detail&quot;&gt;$scenario&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e92833ea568619b98d9ff1c68b59f3d149804fe7" translate="yes" xml:space="preserve">
          <source>Whether the attribute has been changed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb27702ed94aca730d13972ed2471d4ff7795bf" translate="yes" xml:space="preserve">
          <source>Whether the attribute is active in the current scenario</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6622c625ab019c2d849303864053e3e42a9eb721" translate="yes" xml:space="preserve">
          <source>Whether the attribute is required</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c69fbb16764488d6131aeba32b6b7e5db684697" translate="yes" xml:space="preserve">
          <source>Whether the attribute is safe for massive assignments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="239e44bbb235a31c3569a60fdc5002d9dcccc080" translate="yes" xml:space="preserve">
          <source>Whether the attribute value can only be an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="565ecb44582b577f9068ad8bf70b55668c57e0ab" translate="yes" xml:space="preserve">
          <source>Whether the attribute value can only be an integer. Defaults to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4890a2ae60a9451a09959b2c361af548dbeb96f4" translate="yes" xml:space="preserve">
          <source>Whether the attributes are valid and the record is inserted successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be2a66382a8a1c26f8e534cf2284699c04a152b9" translate="yes" xml:space="preserve">
          <source>Whether the auth item is successfully added to the system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e027eadb2666bdf47c4334d27664ac27e0adbf6e" translate="yes" xml:space="preserve">
          <source>Whether the auth item is successfully updated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af20301ac875e66e08df9d57d8b6485948dca68e" translate="yes" xml:space="preserve">
          <source>Whether the browser should open the file within the browser window. Defaults to false, meaning a download dialog will pop up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58bd56d6602ce280629983a69f1f35dc489a8a8c" translate="yes" xml:space="preserve">
          <source>Whether the checkbox should be checked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73350a4666ecc903d93a6d48ab3e85a6feb7abfa" translate="yes" xml:space="preserve">
          <source>Whether the child successfully added</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aef4ed6e98b8b8b4a89694b5a9acd49a021a1f36" translate="yes" xml:space="preserve">
          <source>Whether the column is or not nullable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42b1e7ca95d479598dfa3b8501f02e29106512a9" translate="yes" xml:space="preserve">
          <source>Whether the column is or not nullable. If this is &lt;code&gt;true&lt;/code&gt;, a &lt;code&gt;NOT NULL&lt;/code&gt; constraint will be added. If this is &lt;code&gt;false&lt;/code&gt;, a &lt;code&gt;NULL&lt;/code&gt; constraint will be added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8cb1e7d975cfd9fef4e2ea6869446f7f1aa1ed8" translate="yes" xml:space="preserve">
          <source>Whether the column values should be unique.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc0b6675123c0fa84e1f5dbc241ceebcad0a22c5" translate="yes" xml:space="preserve">
          <source>Whether the column values should be unique. If this is &lt;code&gt;true&lt;/code&gt;, a &lt;code&gt;UNIQUE&lt;/code&gt; constraint will be added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="616984d702a7073efb16d42fefb578bd0aedff0d" translate="yes" xml:space="preserve">
          <source>Whether the column values should be unsigned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc05e822ac73fc90ff39423cd278c65e96dfedbd" translate="yes" xml:space="preserve">
          <source>Whether the column values should be unsigned. If this is &lt;code&gt;true&lt;/code&gt;, an &lt;code&gt;UNSIGNED&lt;/code&gt; keyword will be added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1f50522fdcb251b093d0f4de32fb24a42a87be3" translate="yes" xml:space="preserve">
          <source>Whether the comparison between the attribute value and &lt;a href=&quot;yii-validators-requiredvalidator#%24requiredValue-detail&quot;&gt;$requiredValue&lt;/a&gt; is strict.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="561a6d5743376d8f64d48f7e13ae2f03fc404c12" translate="yes" xml:space="preserve">
          <source>Whether the comparison between the attribute value and &lt;a href=&quot;yii-validators-requiredvalidator#%24requiredValue-detail&quot;&gt;$requiredValue&lt;/a&gt; is strict. When this is true, both the values and types must match. Defaults to false, meaning only the values need to match. Note that when &lt;a href=&quot;yii-validators-requiredvalidator#%24requiredValue-detail&quot;&gt;$requiredValue&lt;/a&gt; is null, if this property is true, the validator will check if the attribute value is null; If this property is false, the validator will call &lt;a href=&quot;yii-validators-validator#isEmpty()-detail&quot;&gt;isEmpty()&lt;/a&gt; to check if the attribute value is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc231dbf4e77592281089bc052ae486ea95c9afd" translate="yes" xml:space="preserve">
          <source>Whether the comparison is case sensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca3fdf003d1eabee61499cfc70440abf4275a01" translate="yes" xml:space="preserve">
          <source>Whether the comparison is case sensitive. Defaults to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1ba2194258306d2c62ecc6c5445eb182ab45907" translate="yes" xml:space="preserve">
          <source>Whether the comparison is strict (both type and value must be the same)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eab2e0f9fc3096a487d28520e85189da005485b0" translate="yes" xml:space="preserve">
          <source>Whether the comparison of new and old value is made for identical values using &lt;code&gt;===&lt;/code&gt;, defaults to &lt;code&gt;true&lt;/code&gt;. Otherwise &lt;code&gt;==&lt;/code&gt; is used for comparison. This parameter is available since version 2.0.4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6196bc632f476727a19ea79cf53e9f9752e9d679" translate="yes" xml:space="preserve">
          <source>Whether the comparison should be case-sensitive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="213bb5835f71fe6b4aec826066a6ec8f8d3af293" translate="yes" xml:space="preserve">
          <source>Whether the comparison to &lt;a href=&quot;yii-validators-booleanvalidator#%24trueValue-detail&quot;&gt;$trueValue&lt;/a&gt; and &lt;a href=&quot;yii-validators-booleanvalidator#%24falseValue-detail&quot;&gt;$falseValue&lt;/a&gt; is strict.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d389b0d6d40329089a6711b0e3a4040cbd2a87c" translate="yes" xml:space="preserve">
          <source>Whether the comparison to &lt;a href=&quot;yii-validators-booleanvalidator#%24trueValue-detail&quot;&gt;$trueValue&lt;/a&gt; and &lt;a href=&quot;yii-validators-booleanvalidator#%24falseValue-detail&quot;&gt;$falseValue&lt;/a&gt; is strict. When this is true, the attribute value and type must both match those of &lt;a href=&quot;yii-validators-booleanvalidator#%24trueValue-detail&quot;&gt;$trueValue&lt;/a&gt; or &lt;a href=&quot;yii-validators-booleanvalidator#%24falseValue-detail&quot;&gt;$falseValue&lt;/a&gt;. Defaults to false, meaning only the value needs to be matched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa4f796842166a8064e320dd04a45ff512b46b0c" translate="yes" xml:space="preserve">
          <source>Whether the comparison using the specified operator is true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dcee0e1b4f40b28a20fd410df8c04d2b0e1c376" translate="yes" xml:space="preserve">
          <source>Whether the container has the definition of the specified name..</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9462bb571958e6fb38ef6d7c1fd5ccd638a87479" translate="yes" xml:space="preserve">
          <source>Whether the content being cached should be differentiated according to the route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be4b015f15a628fb99c181ef0de947a294c532d9" translate="yes" xml:space="preserve">
          <source>Whether the content being cached should be differentiated according to the route. A route consists of the requested controller ID and action ID. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4d6cf6591584111905097f32f5ede3c0638c7fe" translate="yes" xml:space="preserve">
          <source>Whether the cookie should be accessible only through the HTTP protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75f15113efa2ccb52303279caca4025e106a655a" translate="yes" xml:space="preserve">
          <source>Whether the cookie should be accessible only through the HTTP protocol. By setting this property to true, the cookie will not be accessible by scripting languages, such as JavaScript, which can effectively help to reduce identity theft through XSS attacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5cc91351fd3e8581f8335de76fb5a6e45983b53" translate="yes" xml:space="preserve">
          <source>Whether the current request has sent the session ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eafa4ec015abb354f35869c98b398ef6ee5f0996" translate="yes" xml:space="preserve">
          <source>Whether the current request requires pjax response from this widget</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50770c25a196f72d258ef0407195308ced9fa730" translate="yes" xml:space="preserve">
          <source>Whether the current user is a guest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53b37df2b473d632694f70eecf0c5ac5d0a92bc2" translate="yes" xml:space="preserve">
          <source>Whether the data is valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc09ce8e45f8b064d4f4bf99a3896558af1ce48" translate="yes" xml:space="preserve">
          <source>Whether the database supports cascading update and delete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87f0a28c0242c91438812b9a9b81e6a026edb0fb" translate="yes" xml:space="preserve">
          <source>Whether the dependency has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ca8a9dd228d07c89ecab707e08aba9e0edcd7fa" translate="yes" xml:space="preserve">
          <source>Whether the directory being published should be copied even if it is found in the target directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e25590e190fc44265f0b4dbe7dc6165e377083e" translate="yes" xml:space="preserve">
          <source>Whether the directory being published should be copied even if it is found in the target directory. This option is used only when publishing a directory. You may want to set this to be &lt;code&gt;true&lt;/code&gt; during the development stage to make sure the published directory is always up-to-date. Do not set this to true on production servers as it will significantly degrade the performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5113c1c2e9e739ff0d6c1859521db49df7ce0fb" translate="yes" xml:space="preserve">
          <source>Whether the directory is created successfully</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4c0b16f7af52b4d82a9adf5ee1b79b82e38aeb" translate="yes" xml:space="preserve">
          <source>Whether the event is handled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6220e35a723b84f85a645e7d4e2f4cd004097c0" translate="yes" xml:space="preserve">
          <source>Whether the event is handled. Defaults to &lt;code&gt;false&lt;/code&gt;. When a handler sets this to be &lt;code&gt;true&lt;/code&gt;, the event processing will stop and ignore the rest of the uninvoked event handlers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f468ba4c2163cb58025b8f4e663ae1eb9d01486b" translate="yes" xml:space="preserve">
          <source>Whether the file or directory satisfies the filtering options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19ad6597a6d2c66a7e989ee4db629c08a80b510c" translate="yes" xml:space="preserve">
          <source>Whether the filter is active for the given action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8ca13d5a688570f716cbdc3127d57f857aa6030" translate="yes" xml:space="preserve">
          <source>Whether the filter should be skipped if an array input is given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51d33efea2fc5c3098ae11cd3b630c33f91833ea" translate="yes" xml:space="preserve">
          <source>Whether the filter should be skipped if an array input is given. If true and an array input is given, the filter will not be applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cf870c65fa320042ba6168ca03d628d61a7427b" translate="yes" xml:space="preserve">
          <source>Whether the filters should be displayed in the grid view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="689638fc3acf694a5c5bb3f39999a790c837b2dd" translate="yes" xml:space="preserve">
          <source>Whether the filters should be displayed in the grid view. Valid values include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e27a925575043d4b74d14a096c0e59b4d6a0b849" translate="yes" xml:space="preserve">
          <source>Whether the flash message should be automatically removed only if it is accessed. If false, the flash message will be automatically removed after the next request, regardless if it is accessed or not. If true (default value), the flash message will remain until after it is accessed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b80e8dbae939ffd64c31868681650af92b7c9d7" translate="yes" xml:space="preserve">
          <source>Whether the flush operation was successful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a9b05f40991470828d24d695a1a5f7573b40f43" translate="yes" xml:space="preserve">
          <source>Whether the generated URLs should be absolute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be40b10ef09ccb29c8308afef13043ebc61e8920" translate="yes" xml:space="preserve">
          <source>Whether the generated hash value is in raw binary format. If false, lowercase hex digits will be generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51534b2b059e18321e6ed9054a9738e83f08bbd7" translate="yes" xml:space="preserve">
          <source>Whether the given auth key is valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10b867c4a1a87e4ac75e75cdd9060e48ad46c7ab" translate="yes" xml:space="preserve">
          <source>Whether the given name corresponds to a registered singleton. If &lt;code&gt;$checkInstance&lt;/code&gt; is true, the method should return a value indicating whether the singleton has been instantiated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="007accab8f170744e55c9fcbb9da8b874a63a3e7" translate="yes" xml:space="preserve">
          <source>Whether the given set of attributes represents the primary key for this model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cdcea6315af1a19ca83a82541fc885ef3f4640d" translate="yes" xml:space="preserve">
          <source>Whether the header label should be HTML-encoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a33c67878e1a773e7ee43a0354d2272f8edfc88f" translate="yes" xml:space="preserve">
          <source>Whether the index exists in the database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1c5ec7f279721f67aa86be632cb168fec843042" translate="yes" xml:space="preserve">
          <source>Whether the input is valid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a4b210e4a141efed14862f1ab458a297d3f60e1" translate="yes" xml:space="preserve">
          <source>Whether the insertion or updating should continue. If &lt;code&gt;false&lt;/code&gt;, the insertion or updating will be cancelled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e1a75eadb50d8ae00e372bc8e6eb5ae2b9ce0d1" translate="yes" xml:space="preserve">
          <source>Whether the items labels should be HTML-encoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bc36c0dab246a9ddc181650ed623804376080d4" translate="yes" xml:space="preserve">
          <source>Whether the key comparison should be case-sensitive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b790c0c478b355bb04b9f11c29f0ef9df1809d66" translate="yes" xml:space="preserve">
          <source>Whether the label should be HTML-encoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="295addeb77ef5795436feb0268da2abe86775ead" translate="yes" xml:space="preserve">
          <source>Whether the labels for header items should be HTML-encoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a359094da785648ca61b2f892687421246f9687" translate="yes" xml:space="preserve">
          <source>Whether the labels for menu items should be HTML-encoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36309a2d8cf885fe4e2fcdc3f3e1cc051fca26cb" translate="yes" xml:space="preserve">
          <source>Whether the limit is effective</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40ef8690d95db4df661280f8d3bff768b877b43f" translate="yes" xml:space="preserve">
          <source>Whether the locator has the specified component definition or has instantiated the component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e14ce3e4bbd76b57ad50c98e5ec5a7475f174d80" translate="yes" xml:space="preserve">
          <source>Whether the login is cookie-based</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1c5200f56e6b3b76a8afa47396f6ba78b246d56" translate="yes" xml:space="preserve">
          <source>Whether the login is cookie-based.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="625946e3bd32603cfba1c44786317db5f3473e2e" translate="yes" xml:space="preserve">
          <source>Whether the login is cookie-based. This property is only meaningful for &lt;a href=&quot;yii-web-user#EVENT_BEFORE_LOGIN-detail&quot;&gt;yii\web\User::EVENT_BEFORE_LOGIN&lt;/a&gt; and &lt;a href=&quot;yii-web-user#EVENT_AFTER_LOGIN-detail&quot;&gt;yii\web\User::EVENT_AFTER_LOGIN&lt;/a&gt; events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="079e10edc3c315791aeeed4d7592e40b3f827562" translate="yes" xml:space="preserve">
          <source>Whether the login or logout should proceed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69a242ccbd5455cc5a0ce410c72eb3a4edd0f332" translate="yes" xml:space="preserve">
          <source>Whether the login or logout should proceed. Event handlers may modify this property to determine whether the login or logout should proceed. This property is only meaningful for &lt;a href=&quot;yii-web-user#EVENT_BEFORE_LOGIN-detail&quot;&gt;yii\web\User::EVENT_BEFORE_LOGIN&lt;/a&gt; and &lt;a href=&quot;yii-web-user#EVENT_BEFORE_LOGOUT-detail&quot;&gt;yii\web\User::EVENT_BEFORE_LOGOUT&lt;/a&gt; events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3c7fe96d5046e5d3dccb222000ff05a5bae6c9e" translate="yes" xml:space="preserve">
          <source>Whether the menu item is active</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f77efa0977be5c830db579b2fdebeca1244f03e1" translate="yes" xml:space="preserve">
          <source>Whether the message file should be overwritten with the merged messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49ba45628f17abf9eb0972a229075212f14d49eb" translate="yes" xml:space="preserve">
          <source>Whether the message has been sent successfully</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deeb5863171ac3af9eaf7b9e57dea5e5da5fbea5" translate="yes" xml:space="preserve">
          <source>Whether the message is saved successfully</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="923c77783195b9376357c5cccbf793a571ca5ad9" translate="yes" xml:space="preserve">
          <source>Whether the message is sent successfully</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a36a9d325c8a2c66cf7117549b861cb12df8f74" translate="yes" xml:space="preserve">
          <source>Whether the method is defined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8992299be79f735e7a9e02bd1695303e537a846c" translate="yes" xml:space="preserve">
          <source>Whether the method should check if the component is shared and instantiated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a6ef90275d50f13d8e68e0bcf8583d89e673f3c" translate="yes" xml:space="preserve">
          <source>Whether the migration is successful</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad62d103022812206dfbf654c5ca47e95273b867" translate="yes" xml:space="preserve">
          <source>Whether the model has an attribute with the specified name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24ef5e2baae567795ea0b1611fb2f9633c680f09" translate="yes" xml:space="preserve">
          <source>Whether the model is in valid status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2577e93b9f1bdf30d92a71ab1212f0b3346b8684" translate="yes" xml:space="preserve">
          <source>Whether the model is in valid status. Defaults to true. A model is in valid status if it passes validations or certain checks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="291de0532e932a8dba69bfae8f97501cf569ea84" translate="yes" xml:space="preserve">
          <source>Whether the module can be accessed by the current user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e632f3c75033c68920ae73ef87c1785cc32ae1e" translate="yes" xml:space="preserve">
          <source>Whether the named cookie exists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f417370766e38637408ff2ffce79d2026429ce1" translate="yes" xml:space="preserve">
          <source>Whether the named header exists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd34632cfa0eae82dc9f2a4d808d5e7057e7462a" translate="yes" xml:space="preserve">
          <source>Whether the named module exists. Both loaded and unloaded modules are considered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8d3916d5ea201614df0c3ea1b20697ccefa42c9" translate="yes" xml:space="preserve">
          <source>Whether the named property is set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="545fc43a7ed3f2e95a8253c9df6d06c8a0bfa71d" translate="yes" xml:space="preserve">
          <source>Whether the named property is set (not null).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f36a61c7f1b0ff40dbd90f1479a1e0b69473a8fe" translate="yes" xml:space="preserve">
          <source>Whether the nav items labels should be HTML-encoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d1f077b8a67a40ed5292e7959aa704c05c6ac77" translate="yes" xml:space="preserve">
          <source>Whether the navbar content should be included in an inner div container which by default adds left and right padding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cffcdd05099a60a65045fb368bb54e755c086ecb" translate="yes" xml:space="preserve">
          <source>Whether the navbar content should be included in an inner div container which by default adds left and right padding. Set this to false for a 100% width navbar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5ebef509290ef804f8eb01e5947f5af5a6d1f00" translate="yes" xml:space="preserve">
          <source>Whether the normal error handler continues.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48302f450da169969efaa777f8d99faef1ce1658" translate="yes" xml:space="preserve">
          <source>Whether the offset is effective</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf8c7ec1b30c689a98ce79761b14eeb2a505a70" translate="yes" xml:space="preserve">
          <source>Whether the operation successful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af644639c1ff3c147bef6ae3930c29e2257284ff" translate="yes" xml:space="preserve">
          <source>Whether the operation was successful.</source>
          <target state="translated">Si la operación tuvo éxito.</target>
        </trans-unit>
        <trans-unit id="f41a551c558d37571b4e82246833283beb2fbb24" translate="yes" xml:space="preserve">
          <source>Whether the operations can be performed by the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3771f6f5f49ca86369bf164d1927cf80f891145e" translate="yes" xml:space="preserve">
          <source>Whether the password is correct.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f11f5336889f2007c827e8398727af7e87755e19" translate="yes" xml:space="preserve">
          <source>Whether the property can be read</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92a9a400c67e2ba704481034d3f561fdfd57eb56" translate="yes" xml:space="preserve">
          <source>Whether the property can be written</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7b45d962d1b5c7f58e3e2a73d9b6f0ff4489f72" translate="yes" xml:space="preserve">
          <source>Whether the property is defined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3522032b754c79f2c4828809062fc70f51ebebe5" translate="yes" xml:space="preserve">
          <source>Whether the property value is null</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8de203385e8174a489cfe0c39079c3b50d34e248" translate="yes" xml:space="preserve">
          <source>Whether the query result contains any row of data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3003507f2dbb757886b2018809aff4fe7cd02787" translate="yes" xml:space="preserve">
          <source>Whether the radio button should be checked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a05441b5b38b7251bcfb2a81866a0cd76509d4" translate="yes" xml:space="preserve">
          <source>Whether the reader is closed or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bcf7e872981568e53f80ad52f670109ff4e6c08" translate="yes" xml:space="preserve">
          <source>Whether the record has an attribute with the specified name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a544191cc34aef19dfb7520bb5b70d71da8dcf" translate="yes" xml:space="preserve">
          <source>Whether the record is inserted successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ffb679eb2ed4ee57583dc8215ffa78458bc5b93" translate="yes" xml:space="preserve">
          <source>Whether the record is new and should be inserted when calling &lt;a href=&quot;yii-db-activerecordinterface#save()-detail&quot;&gt;save()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e74ce3e5d47ac26074aaff3819a919d29a28e8a" translate="yes" xml:space="preserve">
          <source>Whether the record is new and should be inserted when calling &lt;a href=&quot;yii-db-baseactiverecord#save()-detail&quot;&gt;save()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e600a8c2f623d56cc8a41407278fdbb52d743c95" translate="yes" xml:space="preserve">
          <source>Whether the record should be deleted. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82912fbfcef6ab457fc077aac8c6d079f9c9f4d6" translate="yes" xml:space="preserve">
          <source>Whether the removal is successful</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d443c3e51a6346b500be2ce1e7972a5176d776a2" translate="yes" xml:space="preserve">
          <source>Whether the rendering result should be returned as a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="220da3e85cd645d3b7ccff0c77f806b1be23bb4b" translate="yes" xml:space="preserve">
          <source>Whether the requested language is supported</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="594a515a7703d24d9ab0fda9a29387ddd3e7c3d1" translate="yes" xml:space="preserve">
          <source>Whether the response has been sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1603f3885a006c976ba0de8c34d10a8d5d97fc0f" translate="yes" xml:space="preserve">
          <source>Whether the response has been sent. If this is true, calling &lt;a href=&quot;yii-web-response#send()-detail&quot;&gt;send()&lt;/a&gt; will do nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e28b96aec8ef3fef14f9bc0723445d941501f1" translate="yes" xml:space="preserve">
          <source>Whether the result should be syntax-highlighted</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbcccef1dab09fa91ea9a0ad8f663bfe53d04768" translate="yes" xml:space="preserve">
          <source>Whether the revoking is successful</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbc1f9121df5d239618348ce4cc915e4f5169760" translate="yes" xml:space="preserve">
          <source>Whether the role or permission is successfully removed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe453a5a1c90d91a13e3797815e1f887d6ed019" translate="yes" xml:space="preserve">
          <source>Whether the role, permission or rule is successfully added to the system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6cb4fa0dd5d700ae2042cab19b1e10c81db9846" translate="yes" xml:space="preserve">
          <source>Whether the role, permission or rule is successfully removed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f61f7e9779dbe5c7dd808c6e22dacf2119c8bbe" translate="yes" xml:space="preserve">
          <source>Whether the row still exists in the database. If &lt;code&gt;true&lt;/code&gt;, the latest data will be populated to this active record. Otherwise, this record will remain unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0269abab5f3e812365ee8703b6fa69ce22d19307" translate="yes" xml:space="preserve">
          <source>Whether the rule applies to the IP address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c6a2d82d86e5fb2136b5699cf303959f3a625c" translate="yes" xml:space="preserve">
          <source>Whether the rule applies to the action</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca129ff9a8e12a61bf544416d8f26124556a758a" translate="yes" xml:space="preserve">
          <source>Whether the rule applies to the controller</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab12a4383e1c87c8f35cd2bcd3407b3d14d6684b" translate="yes" xml:space="preserve">
          <source>Whether the rule applies to the request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="308c77a1adfcfc8651bf7e0b01a7109c453ed0b6" translate="yes" xml:space="preserve">
          <source>Whether the rule applies to the role</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32e4fc4f4736d7541ea8660733b9cba5ef470925" translate="yes" xml:space="preserve">
          <source>Whether the rule is successfully added to the system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8431459f27b408f907628484348100328cba3cf3" translate="yes" xml:space="preserve">
          <source>Whether the rule is successfully removed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e22b3b11d61443eef7d4ed51b9b6f03e35f82ae" translate="yes" xml:space="preserve">
          <source>Whether the rule is successfully updated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80c4466404507e67ebf9ed0bd69d884cea685245" translate="yes" xml:space="preserve">
          <source>Whether the rule should be applied</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef19acdada4f7b74975474f2f0e26cf430ad3054" translate="yes" xml:space="preserve">
          <source>Whether the saving is successful</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67c084127b50040a84b47e407df469c95d155427" translate="yes" xml:space="preserve">
          <source>Whether the saving succeeded (i.e. no validation errors occurred).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c3945fdd886b64d88357129237bbe44f9a796b5" translate="yes" xml:space="preserve">
          <source>Whether the sequence exists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1272ae82ba211b0f8c868ff571900f9a1f095e79" translate="yes" xml:space="preserve">
          <source>Whether the session has started</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98894ccb07dfff19cd5340bfe1a4547d4ef1ab47" translate="yes" xml:space="preserve">
          <source>Whether the sort definition supports sorting by the named attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3bfac4eb889899e2d78883d71433ab5c6e9f464" translate="yes" xml:space="preserve">
          <source>Whether the sorting can be applied to multiple attributes simultaneously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4274081a038f14cd37d50aad87dfa56b01d54d40" translate="yes" xml:space="preserve">
          <source>Whether the sorting can be applied to multiple attributes simultaneously. Defaults to &lt;code&gt;false&lt;/code&gt;, which means each time the data can only be sorted by one attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7a5b98bc07bceb8301e64da0a44e9b5b9687f00" translate="yes" xml:space="preserve">
          <source>Whether the source asset file should be converted even if its result already exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a518a27146a1d08db6c8ca87adf2fbd45ff96e55" translate="yes" xml:space="preserve">
          <source>Whether the source asset file should be converted even if its result already exists. You may want to set this to be &lt;code&gt;true&lt;/code&gt; during the development stage to make sure the converted assets are always up-to-date. Do not set this to true on production servers as it will significantly degrade the performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ebba5beddffcb7f514ec85a91fb4a7e26647399" translate="yes" xml:space="preserve">
          <source>Whether the specified operation is transactional in the current &lt;a href=&quot;yii-base-model#%24scenario-detail&quot;&gt;$scenario&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="575970571c5d60dba73f56ffcdccc87082e325cc" translate="yes" xml:space="preserve">
          <source>Whether the strings will be generated using &lt;code&gt;Yii::t()&lt;/code&gt; or normal strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a013210581ce641a27bea0fcab2c2000672935" translate="yes" xml:space="preserve">
          <source>Whether the table exists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3318d9033a5623ad8e756166ef9974d0d218f9d7" translate="yes" xml:space="preserve">
          <source>Whether the table exists in the database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e28d9193be6050ade93fb9d67e223c27a2e7255" translate="yes" xml:space="preserve">
          <source>Whether the two active records refer to the same row in the same Mongo collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d2c846956891985c71a72bcc6f6efe19b91d33" translate="yes" xml:space="preserve">
          <source>Whether the two active records refer to the same row in the same database table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37df96bc2e9eeff04f16c8d874bef6e9ad605d19" translate="yes" xml:space="preserve">
          <source>Whether the two active records refer to the same row in the same index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5328e95e3af77741a34d16278c373b9b4536bd81" translate="yes" xml:space="preserve">
          <source>Whether the update is successful</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="391e02973ebb05c953b5ec38ad399fa4f0632c83" translate="yes" xml:space="preserve">
          <source>Whether the user can perform the operation as specified by the given permission.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac199dcaead8d6526d1e01553843c2a1fa294a5b" translate="yes" xml:space="preserve">
          <source>Whether the user has the specified permission.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33ea303e259c47cd95463b8b4de8ad0c0f2c1300" translate="yes" xml:space="preserve">
          <source>Whether the user is logged in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ffebde4b58e49ee8394640dcd6121fea9a2bcdd" translate="yes" xml:space="preserve">
          <source>Whether the user is logged out</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e911be98cf6d4bad1778b9f84bf84ab76d5b79d" translate="yes" xml:space="preserve">
          <source>Whether the user should continue to be logged in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2a3cd6f49e4041db0fed16b0e436c84aa92b5e8" translate="yes" xml:space="preserve">
          <source>Whether the user should continue to be logged out</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ada156d6a6003a228e5544f2a6b7f8d17c1f1bf7" translate="yes" xml:space="preserve">
          <source>Whether the validating value can be an IPv4 address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="341a9711f06c4ebc9423d9418a18ca28b32944ab" translate="yes" xml:space="preserve">
          <source>Whether the validating value can be an IPv4 address. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57422ccdb13095902559afddd997f965113e68c3" translate="yes" xml:space="preserve">
          <source>Whether the validating value can be an IPv6 address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35ab985ce9721336cda2f6ff8fc2251e1cb45f0d" translate="yes" xml:space="preserve">
          <source>Whether the validating value can be an IPv6 address. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30192ca350178980d7a6e7e541d5b68b5d470559" translate="yes" xml:space="preserve">
          <source>Whether the validation is successful without any error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="171c56a3da34bcade843e98f010fc6c298b9414d" translate="yes" xml:space="preserve">
          <source>Whether the validation should be executed. Defaults to true. If false is returned, the validation will stop and the model is considered invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d178958ef346fd92ec7a565a9ce50d9c7f58a1a" translate="yes" xml:space="preserve">
          <source>Whether the validator applies to the specified scenario.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51e107329f6dfb75b443d8598070ad8e5418509b" translate="yes" xml:space="preserve">
          <source>Whether the value is a reserved PHP keyword.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df22108f2f43026df724adc0183a3216a0e9e1bd" translate="yes" xml:space="preserve">
          <source>Whether the value is empty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3215d88824f7e0ebca0cdefa0f44b2eb22542eaa" translate="yes" xml:space="preserve">
          <source>Whether the value is successfully stored into cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="475fb1de458f7dce7e36671e25b0ae61d26ecb6a" translate="yes" xml:space="preserve">
          <source>Whether the verification code should be regenerated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68dbd267d5b537da2c1e9514dd3892477703094d" translate="yes" xml:space="preserve">
          <source>Whether the verification was successful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86dc0122bc6a338c8429134e34751b45ef195f86" translate="yes" xml:space="preserve">
          <source>Whether the version of the MSSQL being used is older than 2012.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72581b9e34e67fabde4dfc511a099cd76f013820" translate="yes" xml:space="preserve">
          <source>Whether the view is rendering in AJAX mode. If true, the JS scripts registered at &lt;a href=&quot;yii-web-view#POS_READY-detail&quot;&gt;POS_READY&lt;/a&gt; and &lt;a href=&quot;yii-web-view#POS_LOAD-detail&quot;&gt;POS_LOAD&lt;/a&gt; positions will be rendered at the end of the view like normal scripts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="872ca1a88754f45e8c08f1fe266ef18ddc42fe84" translate="yes" xml:space="preserve">
          <source>Whether the widget should continue to be executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66640331e3ed52d4b7942504481317868f7485a3" translate="yes" xml:space="preserve">
          <source>Whether there is a row of data at current position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67787796786f6a0c200f0bc2d71c613599e532da" translate="yes" xml:space="preserve">
          <source>Whether there is a valid dataset at the current position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05fb6fe2910a3651cbc47e9587de6aaa75a3ed21" translate="yes" xml:space="preserve">
          <source>Whether there is an active child menu item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4175494e4d6dc4ec20548650fbb1a1bffdd6e72" translate="yes" xml:space="preserve">
          <source>Whether there is an element at the specified offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f144b7f9f7431acd976a4387b24f59a29627cf5" translate="yes" xml:space="preserve">
          <source>Whether there is an error with the uploaded file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a133ce53738f4cfbc38529b2a22aaca3d2c679e" translate="yes" xml:space="preserve">
          <source>Whether there is an error with the uploaded file. Check &lt;a href=&quot;yii-web-uploadedfile#%24error-detail&quot;&gt;$error&lt;/a&gt; for detailed error code information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1e6bc2f1e18361ecf85ab81114eb0947fd6f9fc" translate="yes" xml:space="preserve">
          <source>Whether there is any error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9905a3ab84d6ba0951f5dc2cf98bf171aac728e0" translate="yes" xml:space="preserve">
          <source>Whether there is any handler attached to the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab4874ebac7501d86cf810d38ac009476e8fbb61" translate="yes" xml:space="preserve">
          <source>Whether there is the named session variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="747771f3454d599ffb781fe446522746407ab090" translate="yes" xml:space="preserve">
          <source>Whether this DBMS supports &lt;a href=&quot;http://en.wikipedia.org/wiki/Savepoint&quot;&gt;savepoint&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e7f447da30c214221f81f6f782c81395b215f74" translate="yes" xml:space="preserve">
          <source>Whether this DBMS supports &lt;a href=&quot;https://en.wikipedia.org/wiki/Savepoint&quot;&gt;savepoint&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da381cc41c76f491b9407f862ebf3d3ea4391d68" translate="yes" xml:space="preserve">
          <source>Whether this collection is read only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b8596327a27dc2cc99de254369badb9f481f674" translate="yes" xml:space="preserve">
          <source>Whether this column can be null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d254bb27012a01287ac12e823e5db13663164841" translate="yes" xml:space="preserve">
          <source>Whether this column is a indexed field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83d34a542d269c2a992b58c3fb0dda51abf42b59" translate="yes" xml:space="preserve">
          <source>Whether this column is a multi value attribute (MVA)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="078e4f9be55cf444ce0a8083530f26f8bd72ded6" translate="yes" xml:space="preserve">
          <source>Whether this column is a primary key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908cdae0c11756ca5bd8c422669beaf75f0ded00" translate="yes" xml:space="preserve">
          <source>Whether this column is an attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9222a569923637c8dcf6276b3c5da4eb776b6571" translate="yes" xml:space="preserve">
          <source>Whether this column is auto-incremental</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7b0a382fee2ea9f3888cdd66cc6199984da807c" translate="yes" xml:space="preserve">
          <source>Whether this column is to be inserted at the beginning of the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65da1889a1af089702d59252349f6b5f0a4ed3fd" translate="yes" xml:space="preserve">
          <source>Whether this column is unsigned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="592f953a634010b7b2892f773c15ca770f7a8a77" translate="yes" xml:space="preserve">
          <source>Whether this column is unsigned. This is only meaningful when &lt;a href=&quot;yii-db-columnschema#%24type-detail&quot;&gt;$type&lt;/a&gt; is &lt;code&gt;smallint&lt;/code&gt;, &lt;code&gt;integer&lt;/code&gt; or &lt;code&gt;bigint&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="782799f12b712e829c62146a69748e115aace1f4" translate="yes" xml:space="preserve">
          <source>Whether this column is visible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f98ff63a7d7157324660c770fa7a3949a8a923e2" translate="yes" xml:space="preserve">
          <source>Whether this column is visible. Defaults to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41e1c3be90bb53f9bc4a4d44ffd03ece9801e725" translate="yes" xml:space="preserve">
          <source>Whether this dependency is depending on every dependency in &lt;a href=&quot;yii-caching-chaineddependency#%24dependencies-detail&quot;&gt;$dependencies&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e35efe4b18bfefd85bad8420cf4d75cc930fe4d4" translate="yes" xml:space="preserve">
          <source>Whether this dependency is depending on every dependency in &lt;a href=&quot;yii-caching-chaineddependency#%24dependencies-detail&quot;&gt;$dependencies&lt;/a&gt;. Defaults to true, meaning if any of the dependencies has changed, this dependency is considered changed. When it is set false, it means if one of the dependencies has NOT changed, this dependency is considered NOT changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dc0f114d63b9dbe5ef4c4fa9a01b9f90aa74995" translate="yes" xml:space="preserve">
          <source>Whether this dependency is reusable or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7296c9b31741b158fcb938dbea9b1ec63b1877fa" translate="yes" xml:space="preserve">
          <source>Whether this dependency is reusable or not. True value means that dependent data for this cache dependency will be generated only once per request. This allows you to use the same cache dependency for multiple separate cache calls while generating the same page without an overhead of re-evaluating dependency data each time. Defaults to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8a724b63294c1333e6837fa464b277b0f887dac" translate="yes" xml:space="preserve">
          <source>Whether this index is a real-time index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="372a1d9ea405091236e78d27aa6013685f330bfd" translate="yes" xml:space="preserve">
          <source>Whether this is a DELETE request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ff1ed016619dc35997b7beea4604db94eba2f1c" translate="yes" xml:space="preserve">
          <source>Whether this is a GET request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfd03d3db1105d282f335b80e959f0fe8505885c" translate="yes" xml:space="preserve">
          <source>Whether this is a HEAD request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24e7b21041cd589bf0c2a8471e43b0455edaba0f" translate="yes" xml:space="preserve">
          <source>Whether this is a OPTIONS request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1ecb72575e97b8c13cfe4f0374300026fccbd55" translate="yes" xml:space="preserve">
          <source>Whether this is a PATCH request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a30d032a476a59350b564d7636c5748ccb48684e" translate="yes" xml:space="preserve">
          <source>Whether this is a PJAX request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9300ad4a2b66c45698cacbf77a525a01bfc5b15" translate="yes" xml:space="preserve">
          <source>Whether this is a POST request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18d517b5372d22b049e28914ade01d4a05279add" translate="yes" xml:space="preserve">
          <source>Whether this is a PUT request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72223d6b6e2bdffc02dc69ed8d54f8284542b655" translate="yes" xml:space="preserve">
          <source>Whether this is a final call during a request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59d6eab05ac46dec563cc368f613be7a24ed4784" translate="yes" xml:space="preserve">
          <source>Whether this is a has-many relation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52f34ad919e0496c2aa47fadbb55b00d1880e25b" translate="yes" xml:space="preserve">
          <source>Whether this is an 'allow' rule or 'deny' rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de821741c48d9e32a3c88e7ea2c2bf3000261bd1" translate="yes" xml:space="preserve">
          <source>Whether this is an AJAX (XMLHttpRequest) request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93267a56e4645d5096bfc576c34bcc18615451ce" translate="yes" xml:space="preserve">
          <source>Whether this is an Adobe Flash or Adobe Flex request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7d4919b0732fcfb649bdd49f8db811e24f5dde0" translate="yes" xml:space="preserve">
          <source>Whether this message is sent successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc5070447231239266dccd6cd76ac3026c5fff23" translate="yes" xml:space="preserve">
          <source>Whether this method called while inserting a record. If &lt;code&gt;false&lt;/code&gt;, it means the method is called while updating a record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d16c0a10ebbbd96dbf890e5e542c6dc7fd8d1fca" translate="yes" xml:space="preserve">
          <source>Whether this method is called at the end of the current application</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1e5ee5977b717941615293ea2e15f73ffb59600" translate="yes" xml:space="preserve">
          <source>Whether this method is called for a read query. If null, it means the SQL statement should be used to determine whether it is for read or write.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b68c807e27211460fbe7dce1345922e954159da1" translate="yes" xml:space="preserve">
          <source>Whether this page button is active</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac2326ac140ec4acff3f83ce73b81dc6f118cea" translate="yes" xml:space="preserve">
          <source>Whether this page button is disabled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d7fda23f2b1bf51b74c4916939c7aa89e1c3c24" translate="yes" xml:space="preserve">
          <source>Whether this query represents a relation to more than one record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7560018269bc4988a0bb25cfd50e8f9abd73f1b9" translate="yes" xml:space="preserve">
          <source>Whether this query represents a relation to more than one record. This property is only used in relational context. If true, this relation will populate all query results into AR instances using &lt;a href=&quot;yii-db-query#all()-detail&quot;&gt;all()&lt;/a&gt;. If false, only the first row of the results will be retrieved using &lt;a href=&quot;yii-db-query#one()-detail&quot;&gt;one()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf896564f8a0baa1afd53dac41ebc15b1cd02488" translate="yes" xml:space="preserve">
          <source>Whether this request may be redirected to the login page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72465bcb1ddae84fc47bf203fc49284a929e041d" translate="yes" xml:space="preserve">
          <source>Whether this response has a valid &lt;a href=&quot;yii-web-response#%24statusCode-detail&quot;&gt;$statusCode&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f9b1ed508d413ef1953fe2a0603c4b9acdc30ee" translate="yes" xml:space="preserve">
          <source>Whether this response indicates a client error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b35bb96d6b4fbd186ec1bffea095eeb0bf49764" translate="yes" xml:space="preserve">
          <source>Whether this response indicates a server error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87ebebce7db2d181db62161eb14e1c6ec482a56f" translate="yes" xml:space="preserve">
          <source>Whether this response indicates the current request is forbidden</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79aa4ce6465707ba1a7cc3fd1a2fd313d0364076" translate="yes" xml:space="preserve">
          <source>Whether this response indicates the currently requested resource is not found</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="215c37cf3e41f5316774c37c606dea21f17d8a27" translate="yes" xml:space="preserve">
          <source>Whether this response is OK</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f4f1d430a4deb5a1ea9c2e23dfd77f05cddd51e" translate="yes" xml:space="preserve">
          <source>Whether this response is a redirection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9705fb145c6090a30b44c9f2841dab5f2bd82a0" translate="yes" xml:space="preserve">
          <source>Whether this response is empty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0192a81388402b77aef66b7ca12b2ea36d94181e" translate="yes" xml:space="preserve">
          <source>Whether this response is informational</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e560b5b303ad367ae4ee72aab13c6dbcbbaa8ee4" translate="yes" xml:space="preserve">
          <source>Whether this response is successful</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e1bd6c243242b1f6988b9725cc129bc1550838" translate="yes" xml:space="preserve">
          <source>Whether this transaction is active.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0a39d4ba1cfae5574435d51dca3290883063898" translate="yes" xml:space="preserve">
          <source>Whether this transaction is active. Only an active transaction can &lt;a href=&quot;yii-db-transaction#commit()-detail&quot;&gt;commit()&lt;/a&gt; or &lt;a href=&quot;yii-db-transaction#rollBack()-detail&quot;&gt;rollBack()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9c7cf68a627e2f36f4043a9eb3847a395e0af70" translate="yes" xml:space="preserve">
          <source>Whether this validation rule should be skipped if the attribute being validated already has some validation error according to some previous rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dc8e3551dc58ef8aaa08c5d95917da4ae8c9335" translate="yes" xml:space="preserve">
          <source>Whether this validation rule should be skipped if the attribute being validated already has some validation error according to some previous rules. Defaults to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de15c3465b8958c33a94afa3a4e648da57fa76be" translate="yes" xml:space="preserve">
          <source>Whether this validation rule should be skipped if the attribute value is null or an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b2c5ecce2f9ec04e1a3e2b9f8e37a555b3af856" translate="yes" xml:space="preserve">
          <source>Whether this widget is associated with a data model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad3bee9f889496ed024255120696569698bf7403" translate="yes" xml:space="preserve">
          <source>Whether to HTML-encode the button labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2865bfbe4c2c6b041bcc029499f991b3f0086f92" translate="yes" xml:space="preserve">
          <source>Whether to HTML-encode the link labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="821df514c9dc87324a9cc802566e75f4247a439a" translate="yes" xml:space="preserve">
          <source>Whether to SELECT DISTINCT or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60a29cd1096c7fc19d714814d1ab4c88b648d2fe" translate="yes" xml:space="preserve">
          <source>Whether to activate parent menu items when one of the corresponding child menu items is active.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24b580976662c9d187dae4d721e8731615190a64" translate="yes" xml:space="preserve">
          <source>Whether to activate parent menu items when one of the corresponding child menu items is active. The activated parent menu items will also have its CSS classes appended with &lt;a href=&quot;yii-widgets-menu#%24activeCssClass-detail&quot;&gt;$activeCssClass&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4deaa8a95beeaa1042a057d027f09e35dc6d7415" translate="yes" xml:space="preserve">
          <source>Whether to add UNIQUE constraint on the created index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1865ddfe8821e7cdb06446aea49c505866961663" translate="yes" xml:space="preserve">
          <source>Whether to add the CIDR prefix with the smallest length (32 for IPv4 and 128 for IPv6) to an address without it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c735304239c63fe35e47942fb383cdabcb014ba6" translate="yes" xml:space="preserve">
          <source>Whether to add the CIDR prefix with the smallest length (32 for IPv4 and 128 for IPv6) to an address without it. Works only when &lt;code&gt;subnet&lt;/code&gt; is not &lt;code&gt;false&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab22a5b34850ceee3e26bc7a508be04e127172fe" translate="yes" xml:space="preserve">
          <source>Whether to add the new rules by appending them to the end of the existing rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="162f7a79a13999ccb013761958242567c41f7ac8" translate="yes" xml:space="preserve">
          <source>Whether to allow array type attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e65e77b9852b607d5179fda9e074866e8a3501ae" translate="yes" xml:space="preserve">
          <source>Whether to allow caching the result of access check. When this parameter is true (default), if the access check of an operation was performed before, its result will be directly returned when calling this method to check the same operation. If this parameter is false, this method will always call &lt;a href=&quot;yii-rbac-checkaccessinterface#checkAccess()-detail&quot;&gt;yii\rbac\CheckAccessInterface::checkAccess()&lt;/a&gt; to obtain the up-to-date access result. Note that this caching is effective only within the same request and only works when &lt;code&gt;$params = []&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="296aba7ea474ae506a967cc73f2c7710e92e2b46" translate="yes" xml:space="preserve">
          <source>Whether to allow name in the email address (e.g. &quot;John Smith &amp;lt;john.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a0ab4131781ac1abb7f67ef9d32119fc3ebdd5f" translate="yes" xml:space="preserve">
          <source>Whether to allow name in the email address (e.g. &quot;John Smith &lt;a href=&quot;mailto:john.smith@example.com&quot;&gt;john.smith@example.com&lt;/a&gt;&quot;). Defaults to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="363c29a0750061c8d80304075d2bc2a901af7909" translate="yes" xml:space="preserve">
          <source>Whether to allow sorting by this column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ec44e5757db55512a95cae9504e12a64596e412" translate="yes" xml:space="preserve">
          <source>Whether to allow sorting by this column. If true and &lt;a href=&quot;yii-grid-datacolumn#%24attribute-detail&quot;&gt;$attribute&lt;/a&gt; is found in the sort definition of &lt;a href=&quot;yii-widgets-baselistview#%24dataProvider-detail&quot;&gt;yii\grid\GridView::$dataProvider&lt;/a&gt;, then the header cell of this column will contain a link that may trigger the sorting when being clicked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de712d2ae48ed309312d6192d8b123e0e32e9a11" translate="yes" xml:space="preserve">
          <source>Whether to also check if the date/time value has some time and date information attached. Defaults to &lt;code&gt;false&lt;/code&gt;. If &lt;code&gt;true&lt;/code&gt;, the method will then return an array with the first element being the normalized timestamp, the second a boolean indicating whether the timestamp has time information and third a boolean indicating whether the timestamp has date information. This parameter is available since version 2.0.1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c7314a69789936cd5dd402ea67a3dfaae177a94" translate="yes" xml:space="preserve">
          <source>Whether to always have the page parameter in the URL created by &lt;a href=&quot;yii-data-pagination#createUrl()-detail&quot;&gt;createUrl()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42d1f746fac730d90f66ec3d283e08831131c3ac" translate="yes" xml:space="preserve">
          <source>Whether to always have the page parameter in the URL created by &lt;a href=&quot;yii-data-pagination#createUrl()-detail&quot;&gt;createUrl()&lt;/a&gt;. If false and &lt;a href=&quot;yii-data-pagination#%24page-detail&quot;&gt;$page&lt;/a&gt; is 0, the page parameter will not be put in the URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e0c5ff0174d29229909ccfa6afe0b66fe1d7af9" translate="yes" xml:space="preserve">
          <source>Whether to append a timestamp to the URL of every published asset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf2007cc707a588f64f94b46c742ea82b5f1a325" translate="yes" xml:space="preserve">
          <source>Whether to append a timestamp to the URL of every published asset. When this is true, the URL of a published asset may look like &lt;code&gt;/path/to/asset?v=timestamp&lt;/code&gt;, where &lt;code&gt;timestamp&lt;/code&gt; is the last modification time of the published asset file. You normally would want to set this property to true when you have enabled HTTP caching for assets, because it allows you to bust caching when the assets are updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bb2435a2758db8a017a804f095d2a66c62be11c" translate="yes" xml:space="preserve">
          <source>Whether to append new event handler to the end of the existing handler list. If &lt;code&gt;false&lt;/code&gt;, the new handler will be inserted at the beginning of the existing handler list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22948b01f3fcfb7c624b035ad06459f5e8d123b6" translate="yes" xml:space="preserve">
          <source>Whether to append new event handler to the end of the existing handler list. If false, the new handler will be inserted at the beginning of the existing handler list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5876620812e340a65809c66b4c74d1d03bba1191" translate="yes" xml:space="preserve">
          <source>Whether to autodetect available cluster nodes on &lt;a href=&quot;yii-elasticsearch-connection#open()-detail&quot;&gt;open()&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="001d6304be4009602df4c3a02b4e6309a281193e" translate="yes" xml:space="preserve">
          <source>Whether to automatically activate items according to whether their route setting matches the currently requested route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13b80442ac12490f8fbce0c836e3239f9def12d8" translate="yes" xml:space="preserve">
          <source>Whether to automatically generate the needed language js files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74b7cdf39b57249736dc9330d7625636587b9d52" translate="yes" xml:space="preserve">
          <source>Whether to automatically generate the needed language js files. If this is true, the language js files will be determined based on the actual usage of &lt;a href=&quot;yii-jui-datepicker&quot;&gt;yii\jui\DatePicker&lt;/a&gt; and its language settings. If this is false, you should explicitly specify the language js files via &lt;a href=&quot;yii-web-assetbundle#%24js-detail&quot;&gt;$js&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83cce226e099235e1d749602bede0f7250fd870b" translate="yes" xml:space="preserve">
          <source>Whether to automatically perform 'SHOW META'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26d5ab3e8928dd8d8b5405da5dd2a72ffba87ad1" translate="yes" xml:space="preserve">
          <source>Whether to automatically perform 'SHOW META' query against main one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e3766b85ccb6c95f81d058552bca7165ef18291" translate="yes" xml:space="preserve">
          <source>Whether to automatically perform 'SHOW META' query against main one. You may set this value to be string or &lt;a href=&quot;yii-db-expression&quot;&gt;yii\db\Expression&lt;/a&gt; instance, in this case its value will be used as 'LIKE' condition for 'SHOW META' statement. You need to use &lt;a href=&quot;yii-sphinx-query#search()-detail&quot;&gt;search()&lt;/a&gt; method in order to fetch 'meta' results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcfcc2c47a7596d2b8af2fb6b0ef6f9f2c67a64f" translate="yes" xml:space="preserve">
          <source>Whether to automatically perform 'refresh access token' request on expired access token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="663421c6e4c67b85854af9f98dc7634355a66538" translate="yes" xml:space="preserve">
          <source>Whether to automatically pluralize the URL names for controllers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a683740613f0bca60505ba2f9c691a03fd0a983" translate="yes" xml:space="preserve">
          <source>Whether to automatically pluralize the URL names for controllers. If true, a controller ID will appear in plural form in URLs. For example, &lt;code&gt;user&lt;/code&gt; controller will appear as &lt;code&gt;users&lt;/code&gt; in URLs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2005084b66d9c8c72eec9758b0cdc49cd69256f8" translate="yes" xml:space="preserve">
          <source>Whether to automatically renew authentication status if it has not been done so before. This is only useful when &lt;a href=&quot;yii-web-user#%24enableSession-detail&quot;&gt;$enableSession&lt;/a&gt; is true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a22142d4e70df4777583fcc6230b2d24b6ce70c" translate="yes" xml:space="preserve">
          <source>Whether to automatically renew the identity cookie each time a page is requested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a83e396b1519a438a8459bed7fc81575e1ea2156" translate="yes" xml:space="preserve">
          <source>Whether to automatically renew the identity cookie each time a page is requested. This property is effective only when &lt;a href=&quot;yii-web-user#%24enableAutoLogin-detail&quot;&gt;$enableAutoLogin&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt;. When this is &lt;code&gt;false&lt;/code&gt;, the identity cookie will expire after the specified duration since the user is initially logged in. When this is &lt;code&gt;true&lt;/code&gt;, the identity cookie will expire after the specified duration since the user visits the site the last time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74ec911afe69167de85fb5eb73e52e7c5df7beec" translate="yes" xml:space="preserve">
          <source>Whether to automatically upgrade short-live (2 hours) access token to long-live (60 days) one, after fetching it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7ed6af06768161909b2e6608c882232d2f553d4" translate="yes" xml:space="preserve">
          <source>Whether to cache or not, return an array instead of &lt;code&gt;true&lt;/code&gt; to store an additional data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5435e6e8c448e79c5291562033095f5d1e5b96a8" translate="yes" xml:space="preserve">
          <source>Whether to call &lt;a href=&quot;yii-base-model#clearErrors()-detail&quot;&gt;clearErrors()&lt;/a&gt; before performing validation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a6234cb01e22579a074c5ca51a7a8f73b3554d6" translate="yes" xml:space="preserve">
          <source>Whether to capitalize the first letter in each word</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9066f2c17b815a3a451889d55ff2e64355fc5838" translate="yes" xml:space="preserve">
          <source>Whether to check file type (extension) with mime-type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b806e246d69283c02d5480b4d12f5ffa6272353f" translate="yes" xml:space="preserve">
          <source>Whether to check file type (extension) with mime-type. If extension produced by file mime-type check differs from uploaded file extension, the file will be considered as invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="661383a1333d30ab6c9f90f242e67a03fb32a7bf" translate="yes" xml:space="preserve">
          <source>Whether to check if &lt;a href=&quot;yii-data-pagination#%24page-detail&quot;&gt;$page&lt;/a&gt; is within valid range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="338ef2c32df33a260911f1e7bcca0f91705a986a" translate="yes" xml:space="preserve">
          <source>Whether to check if &lt;a href=&quot;yii-data-pagination#%24page-detail&quot;&gt;$page&lt;/a&gt; is within valid range. When this property is true, the value of &lt;a href=&quot;yii-data-pagination#%24page-detail&quot;&gt;$page&lt;/a&gt; will always be between 0 and (&lt;a href=&quot;yii-data-pagination#%24pageCount-detail&quot;&gt;$pageCount&lt;/a&gt;-1). Because &lt;a href=&quot;yii-data-pagination#%24pageCount-detail&quot;&gt;$pageCount&lt;/a&gt; relies on the correct value of &lt;a href=&quot;yii-data-pagination#%24totalCount-detail&quot;&gt;$totalCount&lt;/a&gt; which may not be available in some cases (e.g. MongoDB), you may want to set this property to be false to disable the page number validation. By doing so, &lt;a href=&quot;yii-data-pagination#%24page-detail&quot;&gt;$page&lt;/a&gt; will return the value indexed by &lt;a href=&quot;yii-data-pagination#%24pageParam-detail&quot;&gt;$pageParam&lt;/a&gt; in &lt;a href=&quot;yii-data-pagination#%24params-detail&quot;&gt;$params&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="109fbb641537549915d7e4e339c9145e79017aef" translate="yes" xml:space="preserve">
          <source>Whether to check if the request accepts HTML responses. Defaults to &lt;code&gt;true&lt;/code&gt;. When this is true and the request does not accept HTML responses the current URL will not be SET as the return URL. Also instead of redirecting the user an ForbiddenHttpException is thrown. This parameter is available since version 2.0.8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef05276e80536c74a8442078a6c524f87b9efb86" translate="yes" xml:space="preserve">
          <source>Whether to check if the request is an AJAX request. When this is true and the request is an AJAX request, the current URL (for AJAX request) will NOT be set as the return URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="945b2f480bb03e8a59601af018bea3c23e69f1d4" translate="yes" xml:space="preserve">
          <source>Whether to check if the singleton has been instantiated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cfb614b118f8ee0be1573f649574c1176adacb9" translate="yes" xml:space="preserve">
          <source>Whether to check whether the email's domain exists and has either an A or MX record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="430b150ac7d7baa04d490c5421564caa26a55161" translate="yes" xml:space="preserve">
          <source>Whether to check whether the email's domain exists and has either an A or MX record. Be aware that this check can fail due to temporary DNS problems even if the email address is valid and an email would be deliverable. Defaults to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="901fbc1d4c924bb37784db72738ccff61be7bd9b" translate="yes" xml:space="preserve">
          <source>Whether to close other items if an item is opened.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8ceecc5f75a480e42d8bfeb53160a744613f373" translate="yes" xml:space="preserve">
          <source>Whether to close other items if an item is opened. Defaults to &lt;code&gt;true&lt;/code&gt; which causes an accordion effect. Set this to &lt;code&gt;false&lt;/code&gt; to allow keeping multiple items open at once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a27564a3f2387355bb7ea0a8288055b514a649" translate="yes" xml:space="preserve">
          <source>Whether to continue rendering the view file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="883817c1a9df76c0b3e6d9a15250b4db0611ef0b" translate="yes" xml:space="preserve">
          <source>Whether to continue rendering the view file. Event handlers of &lt;a href=&quot;yii-base-view#EVENT_BEFORE_RENDER-detail&quot;&gt;yii\base\View::EVENT_BEFORE_RENDER&lt;/a&gt; may set this property to decide whether to continue rendering the current view file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="761329263683466e35a72c3a901e1ffe2da57661" translate="yes" xml:space="preserve">
          <source>Whether to continue running the action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba0366f9349b63c0e504bca317d08271baa9e233" translate="yes" xml:space="preserve">
          <source>Whether to continue running the action. Event handlers of &lt;a href=&quot;yii-base-controller#EVENT_BEFORE_ACTION-detail&quot;&gt;yii\base\Controller::EVENT_BEFORE_ACTION&lt;/a&gt; may set this property to decide whether to continue running the current action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f41e5e2a813414542c5a5ff6719c5166c09572" translate="yes" xml:space="preserve">
          <source>Whether to continue running the widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e38aeb7765ff60a555bf9f0c0699870b12b9bd67" translate="yes" xml:space="preserve">
          <source>Whether to continue running the widget. Event handlers of &lt;a href=&quot;yii-base-widget#EVENT_BEFORE_RUN-detail&quot;&gt;yii\base\Widget::EVENT_BEFORE_RUN&lt;/a&gt; may set this property to decide whether to continue running the current widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6dc09243b39d5b388e412c66cebe0031c139086" translate="yes" xml:space="preserve">
          <source>Whether to continue sending an email.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdeed89165019d42dfe7b6127c15015f03d6a5e7" translate="yes" xml:space="preserve">
          <source>Whether to continue sending an email. Event handlers of &lt;a href=&quot;yii-mail-basemailer#EVENT_BEFORE_SEND-detail&quot;&gt;yii\mail\BaseMailer::EVENT_BEFORE_SEND&lt;/a&gt; may set this property to decide whether to continue send or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b0560c1bb87223a2b1415bfbad4fa8b0e91a44e" translate="yes" xml:space="preserve">
          <source>Whether to create an absolute URL. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="583a59a262d93685b841e44a79e9da1e9d782031" translate="yes" xml:space="preserve">
          <source>Whether to create parent directories if they do not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1939c65acbda371d30bed7a43a539c8289894a9e" translate="yes" xml:space="preserve">
          <source>Whether to decode array values only. If false, both the array keys and array values will be decoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b054e2cf89eb2f66df49a841d21c4392a33b4bf" translate="yes" xml:space="preserve">
          <source>Whether to delete asset source files after compression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4b65206b7fa6a2d453742767088ee74c2719e68" translate="yes" xml:space="preserve">
          <source>Whether to delete asset source files after compression. This option affects only those bundles, which have &lt;a href=&quot;yii-web-assetbundle#%24sourcePath-detail&quot;&gt;yii\web\AssetBundle::$sourcePath&lt;/a&gt; is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3180669e497e3eb061a92a7d5aa8e79eaf101ef" translate="yes" xml:space="preserve">
          <source>Whether to delete the flash messages right after this method is called. If false, the flash messages will be automatically deleted in the next request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de044b5d5a21fa7efc99737bd112d342942ffbb" translate="yes" xml:space="preserve">
          <source>Whether to delete the model that contains the foreign key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ecd471d00526531cc85697b0c9f3ff647b9fcb9" translate="yes" xml:space="preserve">
          <source>Whether to delete the model that contains the foreign key. If &lt;code&gt;false&lt;/code&gt;, the model's foreign key will be set &lt;code&gt;null&lt;/code&gt; and saved. If &lt;code&gt;true&lt;/code&gt;, the model containing the foreign key will be deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="512001401cb3411de17225663d4f9affe741703d" translate="yes" xml:space="preserve">
          <source>Whether to delete the model that contains the foreign key. If false, the model's foreign key will be set &lt;code&gt;null&lt;/code&gt; and saved. If true, the model containing the foreign key will be deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0abb7b31850b941b566255d833ce3e4bd465dc6d" translate="yes" xml:space="preserve">
          <source>Whether to delete the old associated session file or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de0c6290fff6805985bf9b8207eeaacc0117f20e" translate="yes" xml:space="preserve">
          <source>Whether to delete the temporary file after saving. If true, you will not be able to save the uploaded file again in the current request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccf493008955358ab8b816b2bfeb3960795e9bfd" translate="yes" xml:space="preserve">
          <source>Whether to delete this flash message right after this method is called. If false, the flash message will be automatically deleted in the next request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7bcdc313725ccc09de9eb796a793ebc020a77b5" translate="yes" xml:space="preserve">
          <source>Whether to destroy the whole session. Defaults to true. This parameter is ignored if &lt;a href=&quot;yii-web-user#%24enableSession-detail&quot;&gt;$enableSession&lt;/a&gt; is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9189fe378c766ccab4a1a4b7756b8f5f3bc64ae9" translate="yes" xml:space="preserve">
          <source>Whether to discard any existing page output before error display.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf99c4d99312326e9843141a7448313fab6c0dc4" translate="yes" xml:space="preserve">
          <source>Whether to discard any existing page output before error display. Defaults to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="259613d688fbb5850dbc32b3f1acafb41fc2ba13" translate="yes" xml:space="preserve">
          <source>Whether to display a group of split-styled button group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aac99bca6b54e3b3add5986ff03302d990d25722" translate="yes" xml:space="preserve">
          <source>Whether to display help information about current command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19e89ba971e179c7d91c304e4c070fb670d25a82" translate="yes" xml:space="preserve">
          <source>Whether to eager load the relations specified in &lt;code&gt;$with&lt;/code&gt;. When this is a boolean, it applies to all relations specified in &lt;code&gt;$with&lt;/code&gt;. Use an array to explicitly list which relations in &lt;code&gt;$with&lt;/code&gt; need to be eagerly loaded. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c75f37b87e3cbf4ea79021458869ba739b2b201" translate="yes" xml:space="preserve">
          <source>Whether to eager loading the relations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da2ff02b5a5c318e4ddfc85ab48b8aded4b47ccb" translate="yes" xml:space="preserve">
          <source>Whether to emulate the actual query execution, returning empty or false results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30edeb62027ca2f86db9aab038bce12a931eea6a" translate="yes" xml:space="preserve">
          <source>Whether to enable &lt;a href=&quot;http://en.wikipedia.org/wiki/Savepoint&quot;&gt;savepoint&lt;/a&gt;. Note that if the underlying DBMS does not support savepoint, setting this property to be true will have no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="802cc4f67cf74bfe287e3bcab7d0e57e19fc36ba" translate="yes" xml:space="preserve">
          <source>Whether to enable &lt;a href=&quot;https://en.wikipedia.org/wiki/Savepoint&quot;&gt;savepoint&lt;/a&gt;. Note that if the underlying DBMS does not support savepoint, setting this property to be true will have no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89ec0ae7681ef10b805f0a095635a750f013a222" translate="yes" xml:space="preserve">
          <source>Whether to enable AJAX-based data validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dc316795deb4648b7656216ec64860cbc2cbba1" translate="yes" xml:space="preserve">
          <source>Whether to enable AJAX-based data validation. If &lt;a href=&quot;yii-widgets-activefield#%24enableAjaxValidation-detail&quot;&gt;yii\widgets\ActiveField::$enableAjaxValidation&lt;/a&gt; is set, its value will take precedence for that input field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99b99e9445dab0e4a932eaf579a917886df09e94" translate="yes" xml:space="preserve">
          <source>Whether to enable AJAX-based data validation. If not set, it will take the value of &lt;a href=&quot;yii-widgets-activeform#%24enableAjaxValidation-detail&quot;&gt;yii\widgets\ActiveForm::$enableAjaxValidation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6caccf051c2d4035a7f66784d5a97b037487448c" translate="yes" xml:space="preserve">
          <source>Whether to enable ANSI color in the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eec89db97c3384903772c8683a54cd394358bc70" translate="yes" xml:space="preserve">
          <source>Whether to enable ANSI color in the output. If not set, ANSI color will only be enabled for terminals that support it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a101844d89c6acec8456bbe2a10d0afaa3ebda6c" translate="yes" xml:space="preserve">
          <source>Whether to enable ANSI style in output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d642ddc2e9292459bde70d4495eb6f34e2a7ac" translate="yes" xml:space="preserve">
          <source>Whether to enable CSRF (Cross-Site Request Forgery) validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4318e3abc05b0600418aa082bf13d1f823762f55" translate="yes" xml:space="preserve">
          <source>Whether to enable CSRF (Cross-Site Request Forgery) validation. Defaults to true. When CSRF validation is enabled, forms submitted to an Yii Web application must be originated from the same application. If not, a 400 HTTP exception will be raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84b567e0eea21917214d1c08b00b2b4deb99aaaa" translate="yes" xml:space="preserve">
          <source>Whether to enable CSRF validation for the actions in this controller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d4b97bd39d1a6681e5b919f552d2cc10aca0bf5" translate="yes" xml:space="preserve">
          <source>Whether to enable CSRF validation for the actions in this controller. CSRF validation is enabled only when both this property and &lt;a href=&quot;yii-web-request#%24enableCsrfValidation-detail&quot;&gt;yii\web\Request::$enableCsrfValidation&lt;/a&gt; are true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b263af89cdcea515281e8bdb7c0d26fb94aa4a6" translate="yes" xml:space="preserve">
          <source>Whether to enable [savepoint](&lt;a href=&quot;http://en&quot;&gt;http://en&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f78e0b06c18afe56d1bb8d34ca82765a9bd5980" translate="yes" xml:space="preserve">
          <source>Whether to enable caching translated messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4e07c0f6988b8f26c5268324e2e02fb78576d8d" translate="yes" xml:space="preserve">
          <source>Whether to enable client-side data validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0367fa573f5cbdf1867f8238aa17ddf5cbd5da6" translate="yes" xml:space="preserve">
          <source>Whether to enable client-side data validation. If &lt;a href=&quot;yii-widgets-activefield#%24enableClientValidation-detail&quot;&gt;yii\widgets\ActiveField::$enableClientValidation&lt;/a&gt; is set, its value will take precedence for that input field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e484d0ab2f69eb36231457f2427e7cc92879514" translate="yes" xml:space="preserve">
          <source>Whether to enable client-side data validation. If not set, it will take the value of &lt;a href=&quot;yii-widgets-activeform#%24enableClientValidation-detail&quot;&gt;yii\widgets\ActiveForm::$enableClientValidation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fc2743f72cb7e153b9219c1fb57b37a9895b398" translate="yes" xml:space="preserve">
          <source>Whether to enable client-side validation for this validator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef576f2fdb60acb9491a71b9ffc03b105e1afeaa" translate="yes" xml:space="preserve">
          <source>Whether to enable client-side validation for this validator. The actual client-side validation is done via the JavaScript code returned by &lt;a href=&quot;yii-validators-validator#clientValidateAttribute()-detail&quot;&gt;clientValidateAttribute()&lt;/a&gt;. If that method returns null, even if this property is true, no client-side validation will be done by this validator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="817712982ed5b0f4442d65c4a2090297a5efe73a" translate="yes" xml:space="preserve">
          <source>Whether to enable conversion of the float query params into the direct literal SQL insertion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef28447ec0eaccec2a909f3ed488576e469ca3e" translate="yes" xml:space="preserve">
          <source>Whether to enable conversion of the float query params into the direct literal SQL insertion. This allows processing of the float values, since PDO does not provide specific param type for float binding, while Sphinx is unable to process float values passed as quoted strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="407a9b200b2937b4ff3615fd9a09641a24e85cda" translate="yes" xml:space="preserve">
          <source>Whether to enable cookie-based login.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d8f4c99e302d23189029adb4d1637745aa2668a" translate="yes" xml:space="preserve">
          <source>Whether to enable cookie-based login. Defaults to &lt;code&gt;false&lt;/code&gt;. Note that this property will be ignored if &lt;a href=&quot;yii-web-user#%24enableSession-detail&quot;&gt;$enableSession&lt;/a&gt; is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c86ec364fa1324e8149cb186cc837d37279b791" translate="yes" xml:space="preserve">
          <source>Whether to enable logging of database queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ac2a5fd89fc87d876a7e2e449ce801624f6db98" translate="yes" xml:space="preserve">
          <source>Whether to enable logging of database queries. Defaults to true. You may want to disable this option in a production environment to gain performance if you do not need the information being logged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1727dd3341e654e4b34dcc89c73b9735e26e7835" translate="yes" xml:space="preserve">
          <source>Whether to enable message logging for the requests about debug module actions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="232321dc89b64e678ca006cc45121c2300a6dc2c" translate="yes" xml:space="preserve">
          <source>Whether to enable message logging for the requests about debug module actions. You normally do not want to keep these logs because they may distract you from the logs about your applications. You may want to enable the debug logs if you want to investigate how the debug module itself works.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="332dfb7451394176bc385207d0070576d0a04a86" translate="yes" xml:space="preserve">
          <source>Whether to enable pretty URLs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70c5dc9bf91305372ec232a9ca64aeeb02a6a24c" translate="yes" xml:space="preserve">
          <source>Whether to enable pretty URLs. Instead of putting all parameters in the query string part of a URL, pretty URLs allow using path info to represent some of the parameters and can thus produce more user-friendly URLs, such as &quot;/news/Yii-is-released&quot;, instead of &quot;/index.php?r=news%2Fview&amp;amp;id=100&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05df26e519b965bf93f26b3213041fa1921c2b57" translate="yes" xml:space="preserve">
          <source>Whether to enable profiling of database queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e3b5ef71bbb30600d9a4eadb291620bdba12da3" translate="yes" xml:space="preserve">
          <source>Whether to enable profiling of database queries. Defaults to true. You may want to disable this option in a production environment to gain performance if you do not need the information being logged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68a5436429fb0638412ab39f2fab08e5ba119b1c" translate="yes" xml:space="preserve">
          <source>Whether to enable profiling the commands and queries being executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f055d44e07f6ae89ce23866c55ad2f6bab35741" translate="yes" xml:space="preserve">
          <source>Whether to enable profiling the commands and queries being executed. This option will have no effect in case &lt;a href=&quot;yii-mongodb-connection#%24enableLogging-detail&quot;&gt;$enableLogging&lt;/a&gt; is disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dbe84e092d8b718f49af182cccf3ad8dec7b041" translate="yes" xml:space="preserve">
          <source>Whether to enable push state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d185fc4821ebea7dd391125883dfa0c0cc993ed" translate="yes" xml:space="preserve">
          <source>Whether to enable query caching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e214238e9e56c06b64ef665db4abe5e85493314" translate="yes" xml:space="preserve">
          <source>Whether to enable query caching. Note that in order to enable query caching, a valid cache component as specified by &lt;a href=&quot;yii-db-connection#%24queryCache-detail&quot;&gt;$queryCache&lt;/a&gt; must be enabled and &lt;a href=&quot;yii-db-connection#%24enableQueryCache-detail&quot;&gt;$enableQueryCache&lt;/a&gt; must be set true. Also, only the results of the queries enclosed within &lt;a href=&quot;yii-db-connection#cache()-detail&quot;&gt;cache()&lt;/a&gt; will be cached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed56e548cbe45da4f880bac75523612ede819fe5" translate="yes" xml:space="preserve">
          <source>Whether to enable read/write splitting by using &lt;a href=&quot;yii-db-connection#%24slaves-detail&quot;&gt;$slaves&lt;/a&gt; to read data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03670614edabec9aa9797f3ea3be1251dd2b3b8d" translate="yes" xml:space="preserve">
          <source>Whether to enable read/write splitting by using &lt;a href=&quot;yii-db-connection#%24slaves-detail&quot;&gt;$slaves&lt;/a&gt; to read data. Note that if &lt;a href=&quot;yii-db-connection#%24slaves-detail&quot;&gt;$slaves&lt;/a&gt; is empty, read/write splitting will NOT be enabled no matter what value this property takes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cbce1724cdcdf198bf5e83780acf0432bbf0849" translate="yes" xml:space="preserve">
          <source>Whether to enable replace state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a058ee1d0c02718c7286b579f83b3c9fc6966f44" translate="yes" xml:space="preserve">
          <source>Whether to enable schema caching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a972c650569c948789374880d33ad5d9e2e1e523" translate="yes" xml:space="preserve">
          <source>Whether to enable schema caching. Note that in order to enable truly schema caching, a valid cache component as specified by &lt;a href=&quot;yii-db-connection#%24schemaCache-detail&quot;&gt;$schemaCache&lt;/a&gt; must be enabled and &lt;a href=&quot;yii-db-connection#%24enableSchemaCache-detail&quot;&gt;$enableSchemaCache&lt;/a&gt; must be set true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56d4790333616659ebcd34c523aa0ebd3814b99c" translate="yes" xml:space="preserve">
          <source>Whether to enable strict (&lt;code&gt;===&lt;/code&gt;) comparison.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f4204cf754713fbddc7997fcf1c37446bf67d82" translate="yes" xml:space="preserve">
          <source>Whether to enable strict parsing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="588170c397bd7e3a7d4ee790a6cc04d360488553" translate="yes" xml:space="preserve">
          <source>Whether to enable strict parsing. If strict parsing is enabled, the incoming requested URL must match at least one of the &lt;a href=&quot;yii-web-urlmanager#%24rules-detail&quot;&gt;$rules&lt;/a&gt; in order to be treated as a valid request. Otherwise, the path info part of the request will be treated as the requested route. This property is used only when &lt;a href=&quot;yii-web-urlmanager#%24enablePrettyUrl-detail&quot;&gt;$enablePrettyUrl&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30168f33825917afb56c5da2f4fa5c38e1992326" translate="yes" xml:space="preserve">
          <source>Whether to enable the commands provided by the core framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0830e16657365d7c8d9432c4f3bfe20838b2dac2" translate="yes" xml:space="preserve">
          <source>Whether to enable the commands provided by the core framework. Defaults to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6de161ee58c967a6c3a45cb908d87946e73b816f" translate="yes" xml:space="preserve">
          <source>Whether to enable the fragment cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="954033d43a06625961487c4a3b8cf567eda09768" translate="yes" xml:space="preserve">
          <source>Whether to enable the fragment cache. You may use this property to turn on and off the fragment cache according to specific setting (e.g. enable fragment cache only for GET requests).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1878557b1898f5f9b00cb0fc4c8b002691497886" translate="yes" xml:space="preserve">
          <source>Whether to enable the page cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5c057da828e6386c058fd612a8242ce05f23484" translate="yes" xml:space="preserve">
          <source>Whether to enable the page cache. You may use this property to turn on and off the page cache according to specific setting (e.g. enable page cache only for GET requests).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a850d3d512bf69ffbaaf3d62d333e588f935c42" translate="yes" xml:space="preserve">
          <source>Whether to enable this log target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83f98f091dfe2ada45dc6a7020066bbdd7db281b" translate="yes" xml:space="preserve">
          <source>Whether to enable this log target. Defaults to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18af4b23b708ee051c96fb4cb66acf31aae8f2b5" translate="yes" xml:space="preserve">
          <source>Whether to enable writing of the SwiftMailer internal logs using Yii log mechanism.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25c99aa36b8d0a7592f779d37544114ccec027f8" translate="yes" xml:space="preserve">
          <source>Whether to enable writing of the SwiftMailer internal logs using Yii log mechanism. If enabled &lt;a href=&quot;yii-swiftmailer-logger&quot;&gt;yii\swiftmailer\Logger&lt;/a&gt; plugin will be attached to the &lt;a href=&quot;yii-swiftmailer-mailer#%24transport-detail&quot;&gt;$transport&lt;/a&gt; for this purpose.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c71699ddb994213d664fb78647b5d948bbee23b" translate="yes" xml:space="preserve">
          <source>Whether to enclose the checkbox within the label. If &lt;code&gt;true&lt;/code&gt;, the method will still use &lt;a href=&quot;yii-widgets-activefield#%24template-detail&quot;&gt;$template&lt;/a&gt; to layout the checkbox and the error message except that the checkbox is enclosed by the label tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a087a97a8223306a691f3d22b851ce05d7fb56" translate="yes" xml:space="preserve">
          <source>Whether to enclose the radio within the label. If &lt;code&gt;true&lt;/code&gt;, the method will still use &lt;a href=&quot;yii-widgets-activefield#%24template-detail&quot;&gt;$template&lt;/a&gt; to layout the radio button and the error message except that the radio is enclosed by the label tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="977b365610eff447edb378a0d49e86e2d1f1f472" translate="yes" xml:space="preserve">
          <source>Whether to encode HTML entities in &lt;code&gt;$content&lt;/code&gt;. If false, HTML entities in &lt;code&gt;$content&lt;/code&gt; will not be further encoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="294bca168477eb4ced05a89de9a40349e63b5862" translate="yes" xml:space="preserve">
          <source>Whether to encode array values only. If false, both the array keys and array values will be encoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83789f2b0c2967ae2bdf046967ad9837ca8756db" translate="yes" xml:space="preserve">
          <source>Whether to enforce registration even wrapper has been already registered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b262205d6642bcab3375e9aab99b0626368594f" translate="yes" xml:space="preserve">
          <source>Whether to enforce the garbage collection regardless of &lt;a href=&quot;yii-caching-dbcache#%24gcProbability-detail&quot;&gt;$gcProbability&lt;/a&gt;. Defaults to false, meaning the actual deletion happens with the probability as specified by &lt;a href=&quot;yii-caching-dbcache#%24gcProbability-detail&quot;&gt;$gcProbability&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2302491c8384ddfdac24246ef8b8b82b29a5bde6" translate="yes" xml:space="preserve">
          <source>Whether to enforce the garbage collection regardless of &lt;a href=&quot;yii-caching-filecache#%24gcProbability-detail&quot;&gt;$gcProbability&lt;/a&gt;. Defaults to false, meaning the actual deletion happens with the probability as specified by &lt;a href=&quot;yii-caching-filecache#%24gcProbability-detail&quot;&gt;$gcProbability&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="598e1cb69a2150b1ae37741636fae94d7abbe122" translate="yes" xml:space="preserve">
          <source>Whether to enforce the garbage collection regardless of &lt;a href=&quot;yii-mongodb-cache#%24gcProbability-detail&quot;&gt;$gcProbability&lt;/a&gt;. Defaults to false, meaning the actual deletion happens with the probability as specified by &lt;a href=&quot;yii-mongodb-cache#%24gcProbability-detail&quot;&gt;$gcProbability&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1de43cdde0fb2c1ee83a476f9ddce9d0e1c8163b" translate="yes" xml:space="preserve">
          <source>Whether to ensure generated slug value to be unique among owner class records.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="248a4c05b69e6fa434ccfcb5664a17ce940e82a8" translate="yes" xml:space="preserve">
          <source>Whether to ensure generated slug value to be unique among owner class records. If enabled behavior will validate slug uniqueness automatically. If validation fails it will attempt generating unique slug value from based one until success.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9a4df18466834715d01e5055f8180c659a2d6ab" translate="yes" xml:space="preserve">
          <source>Whether to expand an IPv6 address to the full notation format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3922b320416e55e37fccca3d8a3db46ea786db0c" translate="yes" xml:space="preserve">
          <source>Whether to expand an IPv6 address to the full notation format. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0db08fb6514f51ff33b69c6de13f914b5a79d48e" translate="yes" xml:space="preserve">
          <source>Whether to fetch all rows or only first one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f64052cc98c3c6e3a1efb65d7cf1d04c6d16b8df" translate="yes" xml:space="preserve">
          <source>Whether to fetch the latest available index names. If this is false, index names fetched previously (if available) will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d8207a1560cbad5f03f5b183fc5f95e7d2c7451" translate="yes" xml:space="preserve">
          <source>Whether to fetch the latest available index schemas. If this is false, cached data may be returned if available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b1ec9f4a58dd5012ae66b03fd09a30bec9d3b5" translate="yes" xml:space="preserve">
          <source>Whether to fetch the latest available index types. If this is false, index types fetched previously (if available) will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7a262bb54ea2a3eddddcff3303592bdb760818f" translate="yes" xml:space="preserve">
          <source>Whether to fetch the latest available schema names. If this is false, schema names fetched previously (if available) will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf3b8c8e48366054c900b0cb1c8d0e6669f617f0" translate="yes" xml:space="preserve">
          <source>Whether to fetch the latest available table names. If this is false, table names fetched previously (if available) will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="103bba2b4398064a77cdb880c4cdc28730d3a849" translate="yes" xml:space="preserve">
          <source>Whether to fetch the latest available table schemas. If this is false, cached data may be returned if available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9d46adfb1f096dea71dce8e46cf7f854c4e173e" translate="yes" xml:space="preserve">
          <source>Whether to fetch the latest available view names. If this is false, view names fetched previously (if available) will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dae01388518b385c71f6ea3191805a530fbc30ca" translate="yes" xml:space="preserve">
          <source>Whether to force checking and not re-use cached size value. This is useful to detect changing window size while the application is running but may not get up to date values on every terminal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0861b0fe5df5fb72b792b7a0bd0d9818efea39f5" translate="yes" xml:space="preserve">
          <source>Whether to force data preparation even if it has been done before.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a43c5dffe54af2842babaf0da2b687a936d1f8c6" translate="yes" xml:space="preserve">
          <source>Whether to force message translation when the source and target languages are the same.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd0edacc0206ddd4b0a0bcb65259d8f59c84fe2e" translate="yes" xml:space="preserve">
          <source>Whether to force message translation when the source and target languages are the same. Defaults to false, meaning translation is only performed when source and target languages are different.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0935ba26ac80676dfc3c4b61b57da375f6e128ae" translate="yes" xml:space="preserve">
          <source>Whether to force refresh of screen size. This will be passed to &lt;a href=&quot;yii-helpers-baseconsole#getScreenSize()-detail&quot;&gt;getScreenSize()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d755c41dba5d323f3903932f9d75356ccf123771" translate="yes" xml:space="preserve">
          <source>Whether to format the output in a readable &quot;pretty&quot; format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b98c751865f773c8692e5cad7f4980ee41ce616b" translate="yes" xml:space="preserve">
          <source>Whether to format the output in a readable &quot;pretty&quot; format. This can be useful for debugging purpose. If this is true, &lt;code&gt;JSON_PRETTY_PRINT&lt;/code&gt; will be added to &lt;a href=&quot;yii-web-jsonresponseformatter#%24encodeOptions-detail&quot;&gt;$encodeOptions&lt;/a&gt;. Defaults to &lt;code&gt;false&lt;/code&gt;. This property has no effect, when &lt;a href=&quot;yii-web-jsonresponseformatter#%24useJsonp-detail&quot;&gt;$useJsonp&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a81c23a6a8c9bce3d759b36294e3deee69908628" translate="yes" xml:space="preserve">
          <source>Whether to generate a new slug if it has already been generated before.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fc7a2e492d1b150bc1f2c0882bfe8929b1faaf2" translate="yes" xml:space="preserve">
          <source>Whether to generate a new slug if it has already been generated before. If true, the behavior will not generate a new slug even if &lt;a href=&quot;yii-behaviors-sluggablebehavior#%24attribute-detail&quot;&gt;$attribute&lt;/a&gt; is changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d16ed61fdb9b88d83b397a1cae7ceda89b8b049d" translate="yes" xml:space="preserve">
          <source>Whether to generate an ID if it is not set previously</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81a97312ed7d9bb427baf606ddd185b9b51f8e3d" translate="yes" xml:space="preserve">
          <source>Whether to generate weak ETags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8ad976334c4cc057d9446c666f8751f0a8f2c1e" translate="yes" xml:space="preserve">
          <source>Whether to hide empty menu items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dae7ee3e5a68545888b5b0502d668aba558eb7d" translate="yes" xml:space="preserve">
          <source>Whether to hide empty menu items. An empty menu item is one whose &lt;code&gt;url&lt;/code&gt; option is not set and which has no visible child menu items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e19911c48c26b23da7a7ee830510e546a9ab7219" translate="yes" xml:space="preserve">
          <source>Whether to hook up &lt;code&gt;yii.activeForm&lt;/code&gt; JavaScript plugin. This property must be set &lt;code&gt;true&lt;/code&gt; if you want to support client validation and/or AJAX validation, or if you want to take advantage of the &lt;code&gt;yii.activeForm&lt;/code&gt; plugin. When this is &lt;code&gt;false&lt;/code&gt;, the form will not generate any JavaScript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92a6040de4e05f2c98490b63323c42475da11b8e" translate="yes" xml:space="preserve">
          <source>Whether to hook up `yii.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90a587b30607852628249b372f48b7792cc59120" translate="yes" xml:space="preserve">
          <source>Whether to ignore internal collection instance cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="042092d50e8c652a8ba9e3a482f5341db8a5d677" translate="yes" xml:space="preserve">
          <source>Whether to include rate limit headers in the response</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4898758461b5c12e4dfdaf43166906821031c28" translate="yes" xml:space="preserve">
          <source>Whether to insert a separator between two consecutive uppercase chars, defaults to false</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d3e4ed4f321545755dc1409cffd16f897073a7b" translate="yes" xml:space="preserve">
          <source>Whether to interpret objects implementing the &lt;a href=&quot;http://www.php.net/class.traversable&quot;&gt;Traversable&lt;/a&gt; interface as arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c743fb8ce89f40bf713b0d682d6f42936782cac" translate="yes" xml:space="preserve">
          <source>Whether to interpret objects implementing the &lt;a href=&quot;http://www.php.net/class.traversable&quot;&gt;Traversable&lt;/a&gt; interface as arrays. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f8a82f9dd3ae7c1aa3f878025cdd02557bd1bf7" translate="yes" xml:space="preserve">
          <source>Whether to invert the validation logic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b5a983366775fda201a56b4a2a548ccf286e8a6" translate="yes" xml:space="preserve">
          <source>Whether to invert the validation logic. Defaults to false. If set to true, the attribute value should NOT be among the list of values defined via &lt;a href=&quot;yii-validators-rangevalidator#%24range-detail&quot;&gt;$range&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2cc1eed73d1477e662e0f9f6cce118e4a5cac6c" translate="yes" xml:space="preserve">
          <source>Whether to invert the validation logic. Defaults to false. If set to true, the regular expression defined via &lt;a href=&quot;yii-validators-regularexpressionvalidator#%24pattern-detail&quot;&gt;$pattern&lt;/a&gt; should NOT match the attribute value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc9df38a2b0296e1a304eef3538817eb48d11e6d" translate="yes" xml:space="preserve">
          <source>Whether to keep the prefix that has been specified for the progressbar when progressbar gets removed. Defaults to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bd46650704a3ca976405f8a2f5cd6d058cd2774" translate="yes" xml:space="preserve">
          <source>Whether to load the module if it is not yet loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="984dd6f62624fe2f91e5800c9abb8dd0d7bff69d" translate="yes" xml:space="preserve">
          <source>Whether to log command and query executions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c701d08b99afcd7cab9bc9a1c924005340b82bb" translate="yes" xml:space="preserve">
          <source>Whether to log command and query executions. When enabled this option may reduce performance. MongoDB commands may contain large data, consuming both CPU and memory. It makes sense to disable this option in the production environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d0bc9deb5d6470669b3bff9471c45de7f692566" translate="yes" xml:space="preserve">
          <source>Whether to maintain the array keys. If false, the resulting array will be re-indexed with integers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f8e53c7011c33f4d7fe0db6f79a232eac204769" translate="yes" xml:space="preserve">
          <source>Whether to make this a UNIQUE index constraint. You can pass &lt;code&gt;true&lt;/code&gt; or &lt;a href=&quot;yii-db-pgsql-querybuilder#INDEX_UNIQUE-detail&quot;&gt;INDEX_UNIQUE&lt;/a&gt; to create a unique index, &lt;code&gt;false&lt;/code&gt; to make a non-unique index using the default index type, or one of the following constants to specify the index method to use: &lt;a href=&quot;yii-db-pgsql-querybuilder#INDEX_B_TREE-detail&quot;&gt;INDEX_B_TREE&lt;/a&gt;, &lt;a href=&quot;yii-db-pgsql-querybuilder#INDEX_HASH-detail&quot;&gt;INDEX_HASH&lt;/a&gt;, &lt;a href=&quot;yii-db-pgsql-querybuilder#INDEX_GIST-detail&quot;&gt;INDEX_GIST&lt;/a&gt;, &lt;a href=&quot;yii-db-pgsql-querybuilder#INDEX_GIN-detail&quot;&gt;INDEX_GIN&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a8fd6b885b05a28d37b71f610d3590e82c0a593" translate="yes" xml:space="preserve">
          <source>Whether to mark messages that no longer appear in the source code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab422ea0cb216a66a400c5475db091b061cfb074" translate="yes" xml:space="preserve">
          <source>Whether to mark messages that no longer appear in the source code. Defaults to true, which means each of these messages will be enclosed with a pair of '@@' marks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee1db025b4186947e0b55c6c0f40154e7642e8bd" translate="yes" xml:space="preserve">
          <source>Whether to only remove expired cache files. If false, all files under &lt;code&gt;$path&lt;/code&gt; will be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee7fe2f08a15922783a0e1b4eee7fed89c7d6ee" translate="yes" xml:space="preserve">
          <source>Whether to only return the first header of the specified name. If false, all headers of the specified name will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3b1f38c583add12ec99be3238c1feec4659a9ae" translate="yes" xml:space="preserve">
          <source>Whether to overwrite all existing code files when in non-interactive mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c85381f79a832c0e3eab005efd6eb569857dcc62" translate="yes" xml:space="preserve">
          <source>Whether to overwrite all existing code files when in non-interactive mode. Defaults to false, meaning none of the existing code files will be overwritten. This option is used only when &lt;code&gt;--interactive=0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f0c2b06192a1c5b7a3c7a33d6afd01d672a1538" translate="yes" xml:space="preserve">
          <source>Whether to overwrite existing CSS properties if the new style contain them too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f76d84d8bce85429db1a783c1607c655f576bb01" translate="yes" xml:space="preserve">
          <source>Whether to perform encoding on the error summary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8680867f7f89161f1652622f614305089bc0dc4" translate="yes" xml:space="preserve">
          <source>Whether to perform typecasting after owner model validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba2f88b81b4aa804588fd91a27f940ec5d8b046" translate="yes" xml:space="preserve">
          <source>Whether to perform typecasting after owner model validation. Note that typecasting will be performed only if validation was successful, e.g. owner model has no errors. Note that changing this option value will have no effect after this behavior has been attached to the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30f03e017ee915f54dcfa818b31eb14e6b60e7aa" translate="yes" xml:space="preserve">
          <source>Whether to perform typecasting after retrieving owner model data from the database (after find or refresh).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62e157c4244dae4793ec6ea3fadef176cafa3ce4" translate="yes" xml:space="preserve">
          <source>Whether to perform typecasting after retrieving owner model data from the database (after find or refresh). This option may be disabled in order to achieve better performance. For example, in case of &lt;a href=&quot;yii-db-activerecord&quot;&gt;yii\db\ActiveRecord&lt;/a&gt; usage, typecasting after find will grant no benefit in most cases an thus can be disabled. Note that changing this option value will have no effect after this behavior has been attached to the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f17186128186789fb55502d121992e92dd7455c" translate="yes" xml:space="preserve">
          <source>Whether to perform typecasting before saving owner model (insert or update).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44be16f77c3ce41252c70201b5f3db4aa3023596" translate="yes" xml:space="preserve">
          <source>Whether to perform typecasting before saving owner model (insert or update). This option may be disabled in order to achieve better performance. For example, in case of &lt;a href=&quot;yii-db-activerecord&quot;&gt;yii\db\ActiveRecord&lt;/a&gt; usage, typecasting before save will grant no benefit an thus can be disabled. Note that changing this option value will have no effect after this behavior has been attached to the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90152b576b076e387d0f821562b00d1c1d4bfa75" translate="yes" xml:space="preserve">
          <source>Whether to perform validation (calling &lt;a href=&quot;yii-base-model#validate()-detail&quot;&gt;validate()&lt;/a&gt;) before saving the record. Defaults to &lt;code&gt;true&lt;/code&gt;. If the validation fails, the record will not be saved to the database and this method will return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5453421b02076ca848e1b1b219d73af3c0747d58" translate="yes" xml:space="preserve">
          <source>Whether to perform validation before saving the record. If the validation fails, the record will not be inserted into the collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fb1ef67687bdb07dc9025e61ba5c75253cf555d" translate="yes" xml:space="preserve">
          <source>Whether to perform validation before saving the record. If the validation fails, the record will not be inserted into the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afd1d35b021a0cf8280e0491a6ba56f9e0683674" translate="yes" xml:space="preserve">
          <source>Whether to perform validation before saving the record. If the validation fails, the record will not be inserted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f07d531bec9c618b0d3898331e1336aaf844e7c4" translate="yes" xml:space="preserve">
          <source>Whether to perform validation when an input field loses focus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b6328d3e70dbfde5c4886ae95fe92a978b8adb8" translate="yes" xml:space="preserve">
          <source>Whether to perform validation when an input field loses focus. If &lt;a href=&quot;yii-widgets-activefield#%24validateOnBlur-detail&quot;&gt;yii\widgets\ActiveField::$validateOnBlur&lt;/a&gt; is set, its value will take precedence for that input field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf1ed28755a6bd097ca8f3eef9f4efa3afc90f23" translate="yes" xml:space="preserve">
          <source>Whether to perform validation when the form is submitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="711b2dbf213cbc2803abc0088733c41789ca6d1c" translate="yes" xml:space="preserve">
          <source>Whether to perform validation when the input field loses focus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d19e36ca0fe69db25f9c5d22adfc3787c67ae1b5" translate="yes" xml:space="preserve">
          <source>Whether to perform validation when the input field loses focus. If not set, it will take the value of &lt;a href=&quot;yii-widgets-activeform#%24validateOnBlur-detail&quot;&gt;yii\widgets\ActiveForm::$validateOnBlur&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8122663c9051a0161801f3fabad91a02e74f0824" translate="yes" xml:space="preserve">
          <source>Whether to perform validation when the value of an input field is changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a12cf85e6e11d37ef135a35ccb59d80b2f923ca9" translate="yes" xml:space="preserve">
          <source>Whether to perform validation when the value of an input field is changed. If &lt;a href=&quot;yii-widgets-activefield#%24validateOnChange-detail&quot;&gt;yii\widgets\ActiveField::$validateOnChange&lt;/a&gt; is set, its value will take precedence for that input field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24c3cd2c276f7027d5b73035d7cf6803b4595089" translate="yes" xml:space="preserve">
          <source>Whether to perform validation when the value of the input field is changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c42468fdde9a673df3fef54405fc9888b349b388" translate="yes" xml:space="preserve">
          <source>Whether to perform validation when the value of the input field is changed. If not set, it will take the value of &lt;a href=&quot;yii-widgets-activeform#%24validateOnChange-detail&quot;&gt;yii\widgets\ActiveForm::$validateOnChange&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78f35a659a6c9a864196b4cf4fb86ca794a2b481" translate="yes" xml:space="preserve">
          <source>Whether to perform validation while the user is typing in an input field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="608f7e00663d38dcbfaf65bb8b2d9c7f9f22cee6" translate="yes" xml:space="preserve">
          <source>Whether to perform validation while the user is typing in an input field. If &lt;a href=&quot;yii-widgets-activefield#%24validateOnType-detail&quot;&gt;yii\widgets\ActiveField::$validateOnType&lt;/a&gt; is set, its value will take precedence for that input field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4578f4ee3ea95249b78076d5db17d5d8f31638e2" translate="yes" xml:space="preserve">
          <source>Whether to perform validation while the user is typing in the input field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="247f33110175cf6f061cb1043ea20046b639b01a" translate="yes" xml:space="preserve">
          <source>Whether to perform validation while the user is typing in the input field. If not set, it will take the value of &lt;a href=&quot;yii-widgets-activeform#%24validateOnType-detail&quot;&gt;yii\widgets\ActiveForm::$validateOnType&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d3dbf340a91c5f5382bc277510a425ed4b2ce5e" translate="yes" xml:space="preserve">
          <source>Whether to preserve array keys when serializing collection data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="344372379d0e2607b336c83425b567a1ad8ed1f6" translate="yes" xml:space="preserve">
          <source>Whether to preserve array keys when serializing collection data. Set this to &lt;code&gt;true&lt;/code&gt; to allow serialization of a collection as a JSON object where array keys are used to index the model objects. The default is to serialize all collections as array, regardless of how the array is indexed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2304edccd1bde880b0c2d83e512f40caa7760dca" translate="yes" xml:space="preserve">
          <source>Whether to preserve non-empty attribute values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="660554266a7a85edc6439b288cbb44201b52bc81" translate="yes" xml:space="preserve">
          <source>Whether to prevent query execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a91eb6c3608528e062c56537d0fd5e863deb73d9" translate="yes" xml:space="preserve">
          <source>Whether to publish the asset files in the asset bundle before it is returned. If you set this false, you must manually call &lt;code&gt;AssetBundle::publish()&lt;/code&gt; to publish the asset files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cd2031eb8930823b43e292597e2f1cbb10cca4a" translate="yes" xml:space="preserve">
          <source>Whether to recalculate the current page based on the page size and item count.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="954237edfd4f9e265a5351589b562bfa67d8a8f9" translate="yes" xml:space="preserve">
          <source>Whether to recalculate the sort directions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7da5ea77c7d510a64918cc5ed6299dbfe35cb7bd" translate="yes" xml:space="preserve">
          <source>Whether to recreate cursor, if it is already exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="623686aa33ecc4d352c5ff14ffa848202bc7fd7a" translate="yes" xml:space="preserve">
          <source>Whether to recreate iterator, if it is already exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02b51f0762195bb4a926780f6f996fe0aa4c812a" translate="yes" xml:space="preserve">
          <source>Whether to recursively converts properties which are objects into arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88b175d55a3d3ee394c038a35700c592e4a8587a" translate="yes" xml:space="preserve">
          <source>Whether to recursively return array representation of embedded objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cea65dea3db7ed45c726e247adca59c6a378d5f9" translate="yes" xml:space="preserve">
          <source>Whether to reestablish the database connection even, if it is found in the cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3814a9f061f4bd33fc44a85ce0108613d3634d3" translate="yes" xml:space="preserve">
          <source>Whether to regenerate CSRF token. When this parameter is true, each time this method is called, a new CSRF token will be generated and persisted (in session or cookie).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15db7c863a41fd1d1b7f5615b85ffd0cc1f122f2" translate="yes" xml:space="preserve">
          <source>Whether to register link tags in the HTML header for prev, next, first and last page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80dc4632e5767d16ac38cb27e2fc547eed6b9c0c" translate="yes" xml:space="preserve">
          <source>Whether to register link tags in the HTML header for prev, next, first and last page. Defaults to &lt;code&gt;false&lt;/code&gt; to avoid conflicts when multiple pagers are used on one page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13fdd9c5827472dfd81db33dfe1601f2177b0079" translate="yes" xml:space="preserve">
          <source>Whether to register wrapper, even if protocol is already taken.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19c2ec33f67245061dc7d1e09482e5cf3cc5115a" translate="yes" xml:space="preserve">
          <source>Whether to release lock on commit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63dda965f69190487b2bd461d604bb383f83fb41" translate="yes" xml:space="preserve">
          <source>Whether to reload the collection instance even if it is found in the cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908c9bc4609f8a5cc8eb4e1e829fdeed77c9a8eb" translate="yes" xml:space="preserve">
          <source>Whether to reload the index schema even if it is found in the cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d7f1af3eac3922031eb96caebde492d0b39bffc" translate="yes" xml:space="preserve">
          <source>Whether to reload the table schema even if it is found in the cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1f0c58399b7a4c9d7ab76a10e4c74470f5a411d" translate="yes" xml:space="preserve">
          <source>Whether to remove messages that no longer appear in the source code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="743559916aa0539a8ffce1ca425a0324e3e997ee" translate="yes" xml:space="preserve">
          <source>Whether to remove messages that no longer appear in the source code. Defaults to false, which means these messages will NOT be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bc02effc0cbe60b766ea91ad11c7a25becbf918" translate="yes" xml:space="preserve">
          <source>Whether to remove the cookie from browser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5ef427473a48061392603d83a8b87bda85c097d" translate="yes" xml:space="preserve">
          <source>Whether to removed expired cache files only. If false, all cache files under &lt;a href=&quot;yii-caching-filecache#%24cachePath-detail&quot;&gt;$cachePath&lt;/a&gt; will be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f2287b9b411aebfd7e66b94441cafc8d6ec981a" translate="yes" xml:space="preserve">
          <source>Whether to render &lt;a href=&quot;yii-bootstrap-activefield#checkboxList()-detail&quot;&gt;checkboxList()&lt;/a&gt; and &lt;a href=&quot;yii-bootstrap-activefield#radioList()-detail&quot;&gt;radioList()&lt;/a&gt; inline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="436fd1f837b164664dbffae0ab4d0a6a8918f064" translate="yes" xml:space="preserve">
          <source>Whether to render a inline list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="716f6a6916a9d2062a0240c47ee91010e95445c5" translate="yes" xml:space="preserve">
          <source>Whether to render current page button as disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="156bbb218572bcf13db819b19c4deec1db755d4a" translate="yes" xml:space="preserve">
          <source>Whether to render the &lt;code&gt;tab-content&lt;/code&gt; container and its content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebc202facf05a0952f78fdfdca2931f69b39c464" translate="yes" xml:space="preserve">
          <source>Whether to render the &lt;code&gt;tab-content&lt;/code&gt; container and its content. You may set this property to be false so that you can manually render &lt;code&gt;tab-content&lt;/code&gt; yourself in case your tab contents are complex.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3569cfe72281b90701b44a7ac743d7964311c21" translate="yes" xml:space="preserve">
          <source>Whether to render the block content in place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="316222cffbc334fdaa308076d29ed7d32cb822a7" translate="yes" xml:space="preserve">
          <source>Whether to render the block content in place. Defaults to false, meaning the captured block content will not be displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c10f1d08d0b401906b6669b21e5890092620f936" translate="yes" xml:space="preserve">
          <source>Whether to render the block content in place. Defaults to false, meaning the captured block will not be displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d23e11f6435cfdbb3f2fa82a857b4bd169388849" translate="yes" xml:space="preserve">
          <source>Whether to render the error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80e4e7a786fc9d9b11f78723418d198fcc112ae1" translate="yes" xml:space="preserve">
          <source>Whether to render the error. Default is &lt;code&gt;true&lt;/code&gt; except for layout &lt;code&gt;inline&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0d37aefda9f93ade74edb8de93b1e70e8bad297" translate="yes" xml:space="preserve">
          <source>Whether to render the label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0232f072922a7f05456a407cee67e6904f52555f" translate="yes" xml:space="preserve">
          <source>Whether to render the label. Default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76f47b223ee0ef14ca1dc46cee801fd8146c1fed" translate="yes" xml:space="preserve">
          <source>Whether to request OP to select identity for an user in OpenID 2, does not affect OpenID 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b1f3f454dbb04c1138f3031c57ba605a8f6b4da" translate="yes" xml:space="preserve">
          <source>Whether to return a master PDO in case none of the slave connections is available.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
