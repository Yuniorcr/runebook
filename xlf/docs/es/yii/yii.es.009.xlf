<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="yii">
    <body>
      <group id="yii">
        <trans-unit id="715da66facd0e9bb5b7d4bc1ff8f833abf4cb870" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Sets whether to emulate query execution, preventing any interaction with data storage.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed5814050f0c8533cd2d1a57dc60b6fa0098f580" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Sets write concern for this command.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38e96973368b6d4c98ff755d1235375d85fb273b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Setting headers to transfer debug data in AJAX requests without interfering with the request itself.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b4a0fc03717c65d20f9f322cce61c8841f33849" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Side effects&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e85b4a06a73e4e61448e47e418d0a3e2d617b5b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Sign given request with &lt;a href=&quot;yii-authclient-baseoauth#%24signatureMethod-detail&quot;&gt;$signatureMethod&lt;/a&gt;.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5764476c346173a2b81402e1d6b491ca1777eaa3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Slider renders a slider jQuery UI widget.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30b35a61a80c48e775b0e3df01115372a4dc298d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SliderInput renders a slider jQuery UI widget that writes its value into hidden input.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e3307189e98a8dfa2b789fdcf11abc12a80ff72" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SluggableBehavior automatically fills the specified attribute with a value that can be used a slug in a URL.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab8f68e4f28abf7ce29129656a2d6956bd1105fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SmartyViewRenderer allows you to use Smarty templates in views.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e9be309840219ac1c9692c6cd3495d135868bfd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Sort represents information relevant to sorting.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c920e7d92aa2fb3570fa6e331a86be4554790493" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Sortable renders a sortable jQuery UI widget.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c93c626c9f70e829dfaff8674d47ff0d9de4eea8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Sorts an array of objects or arrays (with the same structure) by one or several keys.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01cf9b36c7568db0ea86a6ca7adde8cb64f176b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Sorts the data models according to the given sort definition&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4f9e9e13042552d50dd69fdd553aaec78ebf122" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Spaceless widget removes whitespace characters between HTML tags. Whitespaces within HTML tags or in a plain text are always left untouched.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c80c36385d9541a8092fc80c1c9966202eb52f1a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Specifies the SQL statement to be executed.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da35b4ad1420c27a38e6b05c199006b40b056c87" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Specifies the comment for column.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="954f62b9b520d911d819e5a8bcc9897f8d302f90" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Specifies the junction table for a relational query.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17bf26302bd1e4373b537569ec03227058c1ffc2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Specifies the relation associated with the junction table for use in relational query.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d18d741f32acb689b09e2c9ae55ac2926c2b5ab1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Specifies the relation associated with the junction table.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47ffa970b188fa40aa7ea49ac083b3da29fb7145" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Specifies the relations with which this query should be performed.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48340ffef144bcff86f4132e587a29dac8def271" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Specify additional SQL to be appended to column definition.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc9a54890e5c74eb731012286c6154eb8c70375f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Specify the default SQL expression for the column.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fe29f2b1257e7e75fec2ea4e8d538c89607d057" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Specify the default value for the column.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b521879b062b4633a416e18f830225babff25fd9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Spinner renders an spinner jQuery UI widget.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b463b7de7b1d3b422fa64fd98f55e7548c50f528" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SqlDataProvider implements a data provider based on a plain SQL statement.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80e346fd0f26445cba4ae2709d3aa60a1b75d997" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Start request, timestamp (obtained by microtime(true))&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="047001130925a79353ae47b8be872387183cc7ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Starts a batch query and retrieves data row by row.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3602834c7f65427c515224a54da910f19fdfceed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Starts a batch query.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d584b6a97a39f3b66717bd7c61c145c19d894f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Starts a transaction. It is necessary to override PDO's method as MSSQL PDO driver does not natively support transactions.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3bf0622ca80a263ea5878f6baa421776f8da331" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Starts a transaction.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92551d9d22248b38fa4026587a7a96442375067c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Starts capturing an output to be cleaned from whitespace characters between HTML tags.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7ec1c0174a11a4f71f4023fdad68b68bc8dc883" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Starts display of a progress bar on screen.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53bda938c95a045bccb30bd4eb4b4bb1acd47389" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Starts recording a block.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8c5cbdc5c4fa907e16d54cf5349ba988160a47e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Starts recording a clip.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfbfef1386e7f7d0ba1cbcba4d81d9b2b2388bb7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Starts the session.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d66f42192e7803037a12a3d158746bfb4a9dd037" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;StateStorageInterface is an interface for Auth client state storage.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b4c7f634ed780066e10e9a1dfb2d7e641b034e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Store rule (e.g. &lt;a href=&quot;yii-web-urlrule&quot;&gt;yii\web\UrlRule&lt;/a&gt;) to internal cache&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fea9ae11666a2c1a22bcdf24cce5b3254fa31d16" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Stores a value identified by a key in cache.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90361eb69d4dac84aa66a55b4febf426c08c3c16" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Stores a value identified by a key into cache if the cache does not contain this key.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4940f35b0fb9b7299a29ed828c3b63fb6976e83" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Stores a value identified by a key into cache.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3221eb7891a8f492b4dd30e403b1f724c774e6e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Stores log messages to DB.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21989ed154c1411bd934b62fb549fe1d189a1a2a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Stores log messages to MongoDB collection.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f5929c0a643ff332ea4f94d48f1b7db867045c4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Stores multiple items in cache. Each item contains a value identified by a key.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d48a9a4b4e61302f948ba02ef5a523cf55c5495" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Stores multiple key-value pairs in cache.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e59f720b6f15279c02792121efb7d5dfb9e9c0cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Stores the value identified by a key into cache.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54aa5496e3b3b42c46852c2e682cf306ffdff8d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;StreamTransport sends HTTP messages using &lt;a href=&quot;http://php.net/manual/en/book.stream.php&quot;&gt;Streams&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4ce9a31a0308beff78d4edaa1bb3b3aa83aab11" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;StreamTransport sends HTTP messages using &lt;a href=&quot;https://php.net/manual/en/book.stream.php&quot;&gt;Streams&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77432c117f8e5ddae5645e0b423ba27b034a7ecd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;StreamWrapper provides stream wrapper for MongoDB GridFS, allowing file operations via regular PHP stream resources.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21957f9fe00a144213b046b59df6ca80ae118303" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;String magic method&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a46185bb28704001a0eaa373bd6e90e00fd74dac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;String output.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2dd76029536dbeecce970c49967b851770c8434" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;StringHelper&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;StringHelper&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bb029017e677845868dea9d119f52e4f630b46a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;StringValidator validates that the attribute value is of certain length.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bd600646ef597f157ab8d094b8352124362763a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Strips ANSI control codes from a string&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc93b055aa9fab9168155d5f2cb0f11717f4faf9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Suggest alternative commands for &lt;a href=&quot;yii-console-unknowncommandexception#%24command-detail&quot;&gt;$command&lt;/a&gt; based on string similarity.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e36c760cec02733554a6446733b48a39cc06920" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Svg is used to draw a graph using SVG&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="624fab2a40d273d894909f432d13e5f13060486b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Switch to user by identity&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ed690c66943502f2b315284eeed329102c92645" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Switch user&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0c73770645e6a2b3d4b439949201dda4a8bf37b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Switches to a new identity for the current user.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="644ceb793ba7645ee8760ba9c8655fc21f522b94" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SyslogTarget writes log to syslog.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="962788c80c41813de521d7f190fa8441069f92d0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;TableSchema represents the metadata of a database table.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="242b749b85ff81896aa06814d645ea3bcedd878f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tabs renders a Tab bootstrap javascript component.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0890d136ee81cd3cf4933e2244041b394d048b2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tabs renders a tabs jQuery UI widget.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed9530e2eb3fd8d5bb42a6da749955304599e32a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;TagDependency associates a cached data item with one or multiple &lt;a href=&quot;yii-caching-tagdependency#%24tags-detail&quot;&gt;$tags&lt;/a&gt;.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9316ea6058fa91ad6bfe3a1ff0b82f2fa13e261" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Target is the base class for all log target classes.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adee9f793d19fa0a58db1bfe90dcb8e4d11ab107" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Terminates the application.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c46ea2a5f5168cfeaaba392feef80cb266d2f596" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;TestCase is the base class for all codeception unit tests&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdb0b5da8c92ca9464006d7e0b9df6da92952451" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tests for end-of-file on a file pointer.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e74adaae544e227f7ecd314bf03aa4017eaf9ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The &lt;a href=&quot;yii-elasticsearch-bulkcommand&quot;&gt;yii\elasticsearch\BulkCommand&lt;/a&gt; class implements the API for accessing the elasticsearch bulk REST API.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f245ec0abf064da6cc685a6fc24fbfdd511146c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The AssetConverterInterface must be implemented by asset converter classes.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18f20b68ca71ab9456241879f4f6a5560b15b50b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The BaseQuery trait represents the minimum method set of a database Query.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4d579468c17064dbe5928176a94b1fdc0c9c790" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The Command class implements the API for accessing the elasticsearch REST API.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ed4387d1cb81ade48e0686792be4a27b34594ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The GridView widget is used to display data in a grid.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcc6df1dba2997d24c707b75545e334141c0be1a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The ListView widget is used to display data from data provider. Each data model is rendered using the view specified.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e67de8fadec04aec865fa5f5498fc81da5d9db6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The MigrationInterface defines the minimum set of methods to be implemented by a database migration.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b885e9aadc891e23f368e689913fb4be3b56f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The Mutex component allows mutual execution of concurrent processes in order to prevent &quot;race conditions&quot;.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae0d0e7169b351734a4464af29149555647b7f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The PHP magic function converting an object into a string.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f194bc165e0786760b303a767ec5dd94343f46dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The QueryInterface defines the minimum set of methods to be implemented by a database query.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23cff34bf8b4a2097f63454e51c4e82955ebc059" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The Yii Debug Module provides the debug toolbar and debugger&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4855fd4f012293da18741a1ce33adbee3e2dac9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The asset bundle for the &lt;a href=&quot;yii-widgets-maskedinput&quot;&gt;yii\widgets\MaskedInput&lt;/a&gt; widget.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a379186dba95cd9599bf5531f3227dcf698ce8f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The console Request represents the environment information for a console application.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7d17b83bef478c8ab746122fc6ee3ebef32cb32" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The console Response represents the result of a console application.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac98b0d76c5bbf1277d82eaeadfe0b05da84f4c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The debug LogTarget is used to store logs for later use in the debugger tool&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90924c10f9565a7c58f233aea44c881a15a9c33d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The directory can be specified in Yii's standard convention using @, // and / prefixes or no prefix for view relative directories.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d146e43d766091f5156afe19baaa917c37bc14" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The method builds the &lt;a href=&quot;yii-db-query&quot;&gt;yii\db\Query&lt;/a&gt; object for the fallback language messages search.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d53992e53703390f162a93f1909fc7b00e6de240" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The method checks, whether the $category is ignored according to $ignoreCategories array.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a17cec28f8d6590b214c75b98f2d84fe708ebd4e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The method is normally called by &lt;a href=&quot;yii-i18n-gettextmessagesource#loadMessages()-detail&quot;&gt;loadMessages()&lt;/a&gt; to load the fallback messages for the language.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bc9dd2639b35eb23dc51a3a2e26cbe519643d79" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The method is normally called by &lt;a href=&quot;yii-i18n-phpmessagesource#loadMessages()-detail&quot;&gt;loadMessages()&lt;/a&gt; to load the fallback messages for the language.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="944b6adc45847175b1cb77e62894e87967b60e09" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The redis connection class is used to establish a connection to a &lt;a href=&quot;http://redis.io/&quot;&gt;redis&lt;/a&gt; server.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59b17402da925817d8ffa977d7570e3fe46a99e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The validator checks if the attribute value is a valid IPv4/IPv6 address or subnet.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c11f5d8b8fa5ca49fa1333908b634c006b4dcb3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The web Request class represents an HTTP request&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="373aff3666943ff9940356bb255737365013a1c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The web Response class represents an HTTP response&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba805f018051b8a723f766feda671a3331fc7324" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Theme represents an application theme.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a857a0ed161be92ff27888cbb01c6e238fb896" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This asset bundle provides the &lt;a href=&quot;http://jquery.com/&quot;&gt;jQuery&lt;/a&gt; JavaScript library.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="471be81a1863f9d495b550793aa6eac1ec17de93" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This asset bundle provides the &lt;a href=&quot;https://jquery.com/&quot;&gt;jQuery&lt;/a&gt; JavaScript library.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36df49634229d674a1540688c4d4c211bd23eb1d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This asset bundle provides the base JavaScript files for the Yii Framework.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92b0bd8efb7c479ebe63f14d8c246bf125605238" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This asset bundle provides the javascript files for client validation.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b803828e1ded24a1729845e26a924182d63fb069" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This asset bundle provides the javascript files for the &lt;a href=&quot;yii-grid-gridview&quot;&gt;yii\grid\GridView&lt;/a&gt; widget.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a540fa65a7d3f6a76e020c3ce361dbecb4b33765" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This asset bundle provides the javascript files needed for the &lt;a href=&quot;yii-captcha-captcha&quot;&gt;yii\captcha\Captcha&lt;/a&gt; widget.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="028dfb68b080c629a6b8b705c8e9cfbd230c9d35" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This asset bundle provides the javascript files needed for the &lt;a href=&quot;yii-validators-emailvalidator&quot;&gt;yii\validators\EmailValidator&lt;/a&gt;s client validation.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f22b4d365321d450624814e28eecd1079b583494" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This asset bundle provides the javascript files required by &lt;a href=&quot;yii-widgets-pjax&quot;&gt;yii\widgets\Pjax&lt;/a&gt; widget.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="526d3d729fc0d0d17ba70cc7e6b5ac260abd04e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This class represents an access rule defined by the &lt;a href=&quot;yii-filters-accesscontrol&quot;&gt;yii\filters\AccessControl&lt;/a&gt; action filter&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8032b8a8725948981b67d040ea0e0a398b7f8e26" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This command creates fixtures based on a given template.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae29795462ad3177641a477558e97c89b53332c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This declares the asset files for jQuery 'typeahead' plugin.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c1a2d9d19141ba480f22e14ed6fede039640f50" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This declares the asset files required by Gii.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03843414c231be9da885a4ec78b7e78f1021ac9d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This event class is used for Events triggered by the &lt;a href=&quot;yii-web-user&quot;&gt;yii\web\User&lt;/a&gt; class.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67bda5257ba9eecb05daaac9cb1b8f27f4d88c10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This function tries to guess the columns to show from the given data if &lt;a href=&quot;yii-grid-gridview#%24columns-detail&quot;&gt;$columns&lt;/a&gt; are not explicitly specified.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efe0f3bfdead69477ff7b5f2d28a37611ec94a16" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This generator will generate ActiveRecord class for the specified MongoDB collection.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8f66195024f9311342cba8fcd1ad50029840181" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This generator will generate a controller and one or a few action view files.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2ae47c38f9ff9738efbf07bd519d9d1d89dd0b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This generator will generate an action view file based on the specified model class.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="473f1809fb5c772615dfd9cd17c147fcda1af5f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This generator will generate one or multiple ActiveRecord classes for the specified Sphinx index.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2872263fbe4c2cf57eec33ad42c2acaf1b8c5975" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This generator will generate one or multiple ActiveRecord classes for the specified database table.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f33a64e880545324b90c49cab8c92a6b3e245776" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This generator will generate the skeleton code needed by a module.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aa98992f422e7fc53123462aed85ebaf20e4f56" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This generator will generate the skeleton files needed by an extension.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ba4f10683f46a31894297dfd82b0ace2f02df97" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This is an extension of the default PDO class of MSSQL and DBLIB drivers.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae198b0c673028f296b463847fc0d58c70bbf5b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This is an extension of the default PDO class of SQLSRV driver.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="910b97d2cbf11da7e1a2269cc913938273179bee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This is the base class for all generator classes.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="039bb8a2a3ed212b3150f94702976350255648b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This is the command line version of Gii - a code generator.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7512841483e0e0d860c97a81923829e690993d55" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This is the main module class for the Gii module.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08f09a49938139e0277574be4fc3f9cc5df7cc32" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method contains the logic to be executed when applying this migration.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe31a176e1a7825b15dfba46ff62777644e85821" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method contains the logic to be executed when removing this migration.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bc6d90abdda78d40cbf9f636532a29a83215fed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method defines the attribute that uniquely identifies a record.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="916a26592c7f20476b4b00ab3728ab738b969d6e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method has no effect in Elasticsearch ActiveRecord.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5bfae606caf3778fb3ca0aec962d5ac09f5971b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is called AFTER all fixture data have been loaded for the current test.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77925a975140d58fff147344912a493dac4ef519" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is called AFTER all fixture data have been unloaded for the current test.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b5b43f4218f740d55848002e91d4a487e000ed7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is called BEFORE any fixture data is loaded for the current test.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6137cc1b37897f9c8ce17375adb6057fe95d3553" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is called BEFORE any fixture data is unloaded for the current test.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62f757588bb0f273f1f22ba0201848c0af7c701f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is called after the object is created by cloning an existing one.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dce367d27353e15f44e2f38988adf4966bbb5001" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is called after the user is successfully logged in.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbbe186ffb4bb21d4963f38881d52f1ece6bacca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is called at the beginning of inserting or updating a record.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a51b7bb125a1236ad45e8ca2ceaa252a85b045bd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is called at the end of inserting or updating a record.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aa65f7c51c738c8a554bfec04b905793ded4cb8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is called before logging in a user.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35342b1939b2d000eb47150ed464162af33fead0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is called by &lt;a href=&quot;yii-behaviors-sluggablebehavior#getValue()-detail&quot;&gt;getValue()&lt;/a&gt; to generate the slug.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5992bdc884efa6f29369644673faefcce1c60f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is called by &lt;a href=&quot;yii-behaviors-sluggablebehavior#getValue()-detail&quot;&gt;getValue()&lt;/a&gt; when &lt;a href=&quot;yii-behaviors-sluggablebehavior#%24ensureUnique-detail&quot;&gt;$ensureUnique&lt;/a&gt; is true to generate the unique slug.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8e605b5e99cb9f08d813fe989ec0c5f54a7b83b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is called in response to &lt;code&gt;fflush()&lt;/code&gt; and when the stream is being closed while any unflushed data has been written to it before.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="729f0ac8dd6c835b4f47d8813cb89eada2b29f6e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is called right after &lt;code&gt;run()&lt;/code&gt; is executed.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c707bb8473c3125f1f3547ed47bb939324ea6d12" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is called right before &lt;code&gt;run()&lt;/code&gt; is executed.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4353a0762a8a6eb04f3aac94831e33bf19212f34" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is called when the AR object is created and populated with the query result.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02e26040771749a30c82fb476c93902911b4d079" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is called when the AR object is refreshed.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2195c1c1bcbbd54ebdd2ae0cab07241634e1659" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is invoked after deleting a record.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0169aaa92af8d422baaadfcb815af04b49f2332d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is invoked after validation ends.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0d703e9ce97a54650266754bfd6a2a6fa5dc874" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is invoked before deleting a record.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c26a28ada488af0bb1968c2b2f618727d0c2ef89" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is invoked before validation starts.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b347c1f40bd37e8b683946bf863c7398e215903" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is invoked in case of successful authentication via auth client.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c25b5c14ce0b6890895a26866b629dd4ed7a47bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is invoked right after &lt;a href=&quot;yii-base-view#renderFile()-detail&quot;&gt;renderFile()&lt;/a&gt; renders a view file.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="166ea47d3c15baf04bde62f377af1d33bb26b14d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is invoked right after a user is logged out via &lt;a href=&quot;yii-web-user#logout()-detail&quot;&gt;logout()&lt;/a&gt;.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e0d8b2d565b6a73eef43c8dcfc37d74c64cad4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is invoked right after a widget is executed.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e40663029167d082af64e5e0255a849473ecfd01" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is invoked right after an action is executed.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="790c91b5c2b0d2bf083b367ece9d72136443937d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is invoked right after an action within this module is executed.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8497921faa02cb3d2e43d41785cb9f460d8a08e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is invoked right after mail was send.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c96bb70c3360e3d67dfbe4de2b971863fd744783" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is invoked right after request is sent.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b1aebe51271e4a1a4c976a925af00a8778f1ad2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is invoked right after the response restoring is finished (but before the response is sent).&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ab7f38970cbe8ceb802faaf95d1ae9884d0acf1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is invoked right after this request is sent.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aa7728d46f44aab2b35dd03f147b813c4366244" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is invoked right before &lt;a href=&quot;yii-base-view#renderFile()-detail&quot;&gt;renderFile()&lt;/a&gt; renders a view file.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06bb5e77034b7e2326d9b402aaf595e883c52be8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is invoked right before an action is executed.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f342fdfb5ccdb342fed84e0a45674f215e51bc5d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is invoked right before an action is to be executed (after all possible filters.) It checks the existence of the &lt;a href=&quot;yii-console-controllers-basemigratecontroller#%24migrationPath-detail&quot;&gt;$migrationPath&lt;/a&gt;.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5948764e3fe3bdab257a1b756a58036ac46d4fdb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is invoked right before an action is to be executed (after all possible filters.) You may override this method to do last-minute preparation for the action.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92249d19c808361bf2bf7107def2d403ab544c54" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is invoked right before an action within this module is executed.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9087231dca3a7721f238fb899bc09e8ec6a5e27f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is invoked right before mail send.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f9f04dcededa5397271cf9400faabcd8ec9dd98" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is invoked right before request is sent.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c65bd2e2ad873a789b14191d2a567fbde570777" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is invoked right before the response caching is to be started.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc81171dd78275c4f3c110bef8185babda79f286" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is invoked right before the widget is executed.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a5182a626e61683f468ce638b104e2d60e0b1ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is invoked right before this request is sent.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6a23c92ed1e35748bfb2d737e4c1bf588e536ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is invoked when an unsafe attribute is being massively assigned.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0072b2235c8a5117c0f4dfca5473fe4d5b38f91d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is invoked when calling &lt;a href=&quot;yii-web-user#logout()-detail&quot;&gt;logout()&lt;/a&gt; to log out a user.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33a6433302c49d656f3c89da088d24415da97dae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is not supported by Sphinx.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa1f13837e6cdf5a81393ef98e77b9e99f2488b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is required by the interface &lt;a href=&quot;http://www.php.net/class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt;.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6359f35abdad8287f9653e256f37d711db92037b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method returns a stream resource that can be used with all file functions in PHP, which deal with reading files. The contents of the file are pulled out of MongoDB on the fly, so that the whole file does not have to be loaded into memory first.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34d9598d3de5fbbe92ba49d765d9fedaa9ba2ed8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method should be extended by a concrete Mutex implementations. Acquires lock by name.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc0a58c7f6885f64bcc397bebb48a6b279f25114" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method should be extended by a concrete Mutex implementations. Releases lock by given name.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15431308e8a03de788bf4dcc1717e84b206db6a9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method will initialize the \yii\elasticsearch\elasticsearch property to make sure it refers to a valid Elasticsearch connection.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cccb33aadef2db67e9123659fcae6c3f6dafb577" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method will return sub path for controller if it is located in subdirectory of application controllers dir&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="751baef3d168a5566ac46a0d02062059e6cb3290" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This registers the necessary JavaScript code.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d774b4b519e85864d727c520f1aea96f1fd08bd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Timeline asset bundle&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ed67e6820f9b1fe4cfb38f4735f491696f7d5f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;TimestampBehavior automatically fills the specified attributes with the current timestamp.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08e062842d741a3224a76c4aaebedb935a9774e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;Be careful with the links inside the &lt;a href=&quot;yii-widgets-pjax&quot;&gt;Pjax&lt;/a&gt; widget since the response will also be rendered inside the widget. To prevent this, use the &lt;code&gt;data-pjax=&quot;0&quot;&lt;/code&gt; HTML attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d66310b8d1d810128c7fb955a7bf53340ae0bd99" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;Besides setting the &lt;a href=&quot;yii-db-migration#%24db-detail&quot;&gt;db&lt;/a&gt; property, you can also operate on different databases by creating new database connections to them in your migration classes. You then use the &lt;a href=&quot;guide-db-dao&quot;&gt;DAO methods&lt;/a&gt; with these connections to manipulate different databases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78e2daa3d4a8bb688a738966e4029910fe7272ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;Container may be configured in declarative style using application configuration since version 2.0.11. Check out the &lt;a href=&quot;guide-concept-configurations#application-configurations&quot;&gt;Application Configurations&lt;/a&gt; subsection of the &lt;a href=&quot;guide-concept-configurations&quot;&gt;Configurations&lt;/a&gt; guide article.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22ca5215907e04e006c05381b4dcc6e23938c423" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;Each &lt;code&gt;ActiveFixture&lt;/code&gt; is about preparing a DB table for testing purpose. You may specify the table by setting either the &lt;a href=&quot;yii-test-activefixture#%24tableName-detail&quot;&gt;yii\test\ActiveFixture::$tableName&lt;/a&gt; property or the &lt;a href=&quot;yii-test-baseactivefixture#%24modelClass-detail&quot;&gt;yii\test\ActiveFixture::$modelClass&lt;/a&gt; property. If the latter, the table name will be taken from the &lt;code&gt;ActiveRecord&lt;/code&gt; class specified by &lt;code&gt;modelClass&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="990c85fd756dc4970737dec579a1a36b3ee61b42" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;For displaying Flash messages you can use &lt;a href=&quot;yii-bootstrap-alert&quot;&gt;bootstrap Alert&lt;/a&gt; widget in the following way:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a560af8b0a520c2ae606e471882243f2ec3d1b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;If a dependency name is the same as the corresponding dependency definition, you do not need to register it with the DI container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="671d8439c4a87da6a48ba89da93348e14e4e98ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;If the form fields are different from database columns or there are formatting and logic that is specific to that form only, prefer creating a separate model extended from &lt;a href=&quot;yii-base-model&quot;&gt;yii\base\Model&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="937857fe5833c6ff18dd7c527297ac3ec5da4818" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;If you are certain that your data do not need validation (e.g., the data comes from trustable sources), you can call &lt;code&gt;save(false)&lt;/code&gt; to skip the validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="986e0dcbce40a2d34979864f8ff8028c404a2598" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;If you are uploading an image, you may consider using the &lt;code&gt;image&lt;/code&gt; validator instead. The &lt;code&gt;image&lt;/code&gt; validator is implemented via &lt;a href=&quot;yii-validators-imagevalidator&quot;&gt;yii\validators\ImageValidator&lt;/a&gt; which verifies if an attribute has received a valid image that can be then either saved or processed using the &lt;a href=&quot;https://github.com/yiisoft/yii2-imagine&quot;&gt;Imagine Extension&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="740166e797bd47ed2976024ca2addf036ea194db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;If you are using Twitter Bootstrap CSS in your application you may want to use &lt;a href=&quot;yii-bootstrap-activeform&quot;&gt;yii\bootstrap\ActiveForm&lt;/a&gt; instead of &lt;a href=&quot;yii-widgets-activeform&quot;&gt;yii\widgets\ActiveForm&lt;/a&gt;. The former extends from the latter and uses Bootstrap-specific styles when generating form input fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c69a06cbf861a1f4d3f3ac2768b74cd932a4df9c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;If you feel that you are losing time doing a lot of small and simple iterations, try covering more by your test scenario so you do more before executing tests again. If you're debugging too much, try doing the opposite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a1782c7b56bfaeb2f3eaf9b48f05abf5b5cbeb7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;If you have only one model in a form and want to simplify the input names you may skip the array part by overriding the &lt;a href=&quot;yii-base-model#formName()-detail&quot;&gt;formName()&lt;/a&gt; method of the model to return an empty string. This can be useful for filter models used in the &lt;a href=&quot;guide-output-data-widgets#grid-view&quot;&gt;GridView&lt;/a&gt; to create nicer URLs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ecce5eb04bdf4066cdabb45542ae4d4110f0e41" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;If you need to work with client validation manually i.e. dynamically add fields or do some custom UI logic, refer to &lt;a href=&quot;https://github.com/samdark/yii2-cookbook/blob/master/book/forms-activeform-js.md&quot;&gt;Working with ActiveForm via JavaScript&lt;/a&gt; in Yii 2.0 Cookbook.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e605d5f2e1e12c7076e03eed7bd79728cd16db7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;If you want to install the latest development version of Yii, you may use the following command instead, which adds a &lt;a href=&quot;https://getcomposer.org/doc/04-schema.md#minimum-stability&quot;&gt;stability option&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccba6f9577c6bd784630b5d8e48365c1467a2773" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;If you want to know more about the principles for gathering software requirements and modeling the subject matter it's good to learn &lt;a href=&quot;https://en.wikipedia.org/wiki/Domain-driven_design&quot;&gt;Domain Driven Development (DDD)&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c8dc3c3ebbf8cb812dd2e03b9a992fac0b18a43" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;If you want to trim input values, you may directly use the &lt;a href=&quot;#trim&quot;&gt;trim&lt;/a&gt; validator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d598f02de8df8ccbf7ae98dc7a8fe3c7826c5675" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;If your source language varies among different parts of your code, you can override the source language for different message sources, which are described in the next section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bad8bbebe0cee0a5c8196e6e0eef95f632ef9bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;In big projects, it is recommended that you use customized query classes to hold most query-related code so that the Active Record classes can be kept clean.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e56317babe5ce10e225fe205d5a9100917e63f1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;In case you don't have command line at your server you may try &lt;a href=&quot;https://github.com/samdark/yii2-webshell&quot;&gt;web shell&lt;/a&gt; extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e86ee156567814b83ee6c7644638c23dcc5e6b91" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;In most cases you should use named placeholders. This is because the names will make the translators understand better the whole messages being translated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f5cf2d10bddc26d013f4d4f9af272bae8f7d4e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;In order to style required fields with asterisks, you can use the following CSS:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f566545443a312ed96e82101ced34dd91abc1212" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;Instead of creating your own loggers you may try any PSR-3 compatible logger such as &lt;a href=&quot;https://github.com/Seldaek/monolog&quot;&gt;Monolog&lt;/a&gt; by using &lt;a href=&quot;https://github.com/samdark/yii2-psr-log-target&quot;&gt;PSR log target extension&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38a97ff205b46bc0a9ca04a196f64052841fd1ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;It is recommended to use class constants to represent event names. In the above example, the constant &lt;code&gt;EVENT_HELLO&lt;/code&gt; represents the &lt;code&gt;hello&lt;/code&gt; event. This approach has three benefits. First, it prevents typos. Second, it can make events recognizable for IDE auto-completion support. Third, you can tell what events are supported in a class by simply checking its constant declarations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af9e0f514fdd298eaac0cf9d9b939a8f01d86317" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;See &lt;a href=&quot;guide-db-query-builder&quot;&gt;Query Builder&lt;/a&gt; and especially &lt;a href=&quot;guide-db-query-builder#filter-conditions&quot;&gt;Filter Conditions&lt;/a&gt; to learn how to build filtering query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65248c99738826de69f02ad32350a5cd10e5acf9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;Sometimes you may want to execute some queries right after the database connection is established to initialize some environment variables (e.g., to set the timezone or character set). You can do so by registering an event handler for the &lt;a href=&quot;yii-db-connection#EVENT_AFTER_OPEN-detail&quot;&gt;afterOpen&lt;/a&gt; event of the database connection. You may register the handler directly in the application configuration like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad16efde83cb3d20e3abef6d52b8fe37fb309de3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;Sometimes, you may want to run a console command using an application configuration that is different from the one specified in the entry script. For example, you may want to use the &lt;code&gt;yii migrate&lt;/code&gt; command to upgrade your test databases, which are configured in each individual test suite. To change the configuration dynamically, simply specify a custom application configuration file via the &lt;code&gt;appconfig&lt;/code&gt; option when executing the command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98f6670645a5c5da8c2f93c8177a8a3a65fc8cc2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;The above code is given mainly to demonstrate how to support client-side validation. In practice, you may use the &lt;a href=&quot;guide-tutorial-core-validators#in&quot;&gt;in&lt;/a&gt; core validator to achieve the same goal. You may write the validation rule like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb307077b5a11555e4ace2c9a89a2254d27ef929" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;The above example shows a generic way of transforming data in different formats. If you are working with date values, you may use &lt;a href=&quot;guide-tutorial-core-validators#date&quot;&gt;DateValidator&lt;/a&gt; and &lt;a href=&quot;yii-jui-datepicker&quot;&gt;DatePicker&lt;/a&gt;, which is easier to use and more powerful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3773ab07f9a93e04d166357ff32046da71ab1e11" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;The predefined variables are listed in a comment block at beginning of a view so that they can be recognized by IDEs. It is also a good way of documenting your views.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23e199d093f0f31e70f6196e9ae2f414822027de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;There are many PHP functions that have the signature expected for the &lt;code&gt;filter&lt;/code&gt; callback. For example to apply type casting (using e.g. &lt;a href=&quot;http://php.net/manual/en/function.intval.php&quot;&gt;intval&lt;/a&gt;, &lt;a href=&quot;http://php.net/manual/en/function.boolval.php&quot;&gt;boolval&lt;/a&gt;, ...) to ensure a specific type for an attribute, you can simply specify the function names of the filter without the need to wrap them in a closure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="930ab7164ee0f719ead6ae16f27aa076a2e69ec8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;There are many PHP functions that have the signature expected for the &lt;code&gt;filter&lt;/code&gt; callback. For example to apply type casting (using e.g. &lt;a href=&quot;https://php.net/manual/en/function.intval.php&quot;&gt;intval&lt;/a&gt;, &lt;a href=&quot;https://php.net/manual/en/function.boolval.php&quot;&gt;boolval&lt;/a&gt;, ...) to ensure a specific type for an attribute, you can simply specify the function names of the filter without the need to wrap them in a closure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad2fbb78afb6d16623cbc6394c899eb3c150346a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;To simplify the routing of RESTful APIs, Yii provides a special URL rule class &lt;a href=&quot;yii-rest-urlrule&quot;&gt;yii\rest\UrlRule&lt;/a&gt; which is very efficient and supports some fancy features such as automatic pluralization of controller IDs. For more details, please refer to the &lt;a href=&quot;guide-rest-routing&quot;&gt;Routing&lt;/a&gt; section in the RESTful APIs chapter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24d860f57345d04432886b75bf5b9b7e2a1aa8db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;While HTMLPurifier does excellent job in making output safe, it is not fast. You should consider &lt;a href=&quot;guide-caching-overview&quot;&gt;caching&lt;/a&gt; the filtering result if your application requires high performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="340357a46f451f7e96d28bda277a90096a688090" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;Within a behavior, you can access the component that the behavior is attached to through the &lt;a href=&quot;yii-base-behavior#%24owner-detail&quot;&gt;yii\base\Behavior::$owner&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72cc43b60fa89aa5fe214a492e690eeb21400dcd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;You can call &lt;a href=&quot;yii-db-activerecord#insert()-detail&quot;&gt;insert()&lt;/a&gt; or &lt;a href=&quot;yii-db-activerecord#update()-detail&quot;&gt;update()&lt;/a&gt; directly to insert or update a row.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7845c27328b9adc62c5b70bff826d55945d925b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;You can conditionally choose which assets to use in an asset bundle. The following example shows how to use &lt;code&gt;jquery.js&lt;/code&gt; in the development environment and &lt;code&gt;jquery.min.js&lt;/code&gt; otherwise:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d37f60204f45872a7ebbc6d58c07fe968d0abe0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;You can configure multiple DB application components if your application needs to access multiple databases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29a6bbaf1fcba733255b10186c2447e2de47a778" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;You can customize the name of the &lt;code&gt;page&lt;/code&gt; query parameter by configuring the &lt;a href=&quot;yii-data-pagination#%24pageParam-detail&quot;&gt;pageParam&lt;/a&gt; property when creating the pagination object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11aad572ff537bd669475f9e149f22dc997e85a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;You can register multiple cache application components. The component named &lt;code&gt;cache&lt;/code&gt; is used by default by many cache-dependent classes (e.g. &lt;a href=&quot;yii-web-urlmanager&quot;&gt;yii\web\UrlManager&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c842b1d51055b287642e98068c400b973f93064e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;You may also access your APIs via Web browser by entering the URL &lt;code&gt;http://localhost/users&lt;/code&gt;. However, you may need some browser plugins to send specific request headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="337fbc6b65a7e62fe571d09492394f378acbc3c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;You may also use the &lt;a href=&quot;guide-start-gii&quot;&gt;Gii code generator&lt;/a&gt; to generate ActiveRecord classes from your database tables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f19746f70f1dca65fcf048a622622f71312fefc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;You may also use the &lt;a href=&quot;yii-filters-contentnegotiator&quot;&gt;ContentNegotiator&lt;/a&gt; filter to dynamically determine what content type and language should be used in the response. The filter implements the content negotiation on top of the properties and methods described above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de63834098a58b28882dc7006d0b83dce56960a9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;You may configure &lt;a href=&quot;yii-web-user#%24enableSession-detail&quot;&gt;enableSession&lt;/a&gt; of the &lt;code&gt;user&lt;/code&gt; application component in application configurations if you are developing RESTful APIs in terms of an application. If you develop RESTful APIs as a module, you may put the following line in the module's &lt;code&gt;init()&lt;/code&gt; method, like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="267f6edd44a1a83459bbeeaf7f165169668ecf10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;You may customize the location of the data file by setting the &lt;a href=&quot;yii-test-activefixture#%24dataFile-detail&quot;&gt;yii\test\ActiveFixture::$dataFile&lt;/a&gt; property. You may also override &lt;a href=&quot;yii-test-activefixture#getData()-detail&quot;&gt;yii\test\ActiveFixture::getData()&lt;/a&gt; to provide the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="265ea439cd1cc3a6d24746069c98d342bd120deb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;You may implement &lt;code&gt;checkAccess()&lt;/code&gt; by using the &lt;a href=&quot;guide-security-authorization&quot;&gt;Role-Based Access Control (RBAC) component&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a873c2498f52c05d495237194976473a18142de0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;You may set &lt;code&gt;/&lt;/code&gt; as the URL suffix so that the URLs all end with a slash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91906e3fa4cf652065a92675f998408ee21f8f06" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;You may use different cache storage in the same application. A common strategy is to use memory-based cache storage to store data that is small but constantly used (e.g. statistical data), and use file-based or database-based cache storage to store data that is big and less frequently used (e.g. page content).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cd0f8d18802c4b00084e5eefc49c622504d81c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;migrations could affect not only database schema but adjust existing data to fit new schema, create RBAC hierarchy or clean up cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f51b0b30b4087323c955569f3a087b918ff4b10f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;since version 2.0.8, &lt;a href=&quot;yii-widgets-activefield#fileInput()-detail&quot;&gt;fileInput&lt;/a&gt; adds &lt;code&gt;enctype&lt;/code&gt; option to the form automatically when file input field is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a9155a75201b9538f7e62766c2694915e6f39d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip: &lt;/strong&gt;you may use &lt;a href=&quot;yii-behaviors-attributetypecastbehavior&quot;&gt;yii\behaviors\AttributeTypecastBehavior&lt;/a&gt; to facilitate attribute values typecasting on ActiveRecord validation or saving.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="508c9d0db82e5c1b8224cd93059c24f7a8e18184" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To be cleaned up below&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="513dd2bc01b2d153b18537b892a256c0b5715375" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ToggleButtonGroup allows rendering form inputs Checkbox/Radio toggle button groups.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90084b2a68111df7e81030bb040be85f65c7348f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Toggles the DB integrity check.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8939071fcbea3e1f9fda0015ee11cb185fb725a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Token represents OAuth token.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a997101128f026f260d81ce5ebf653afe785ab9f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;TooManyRequestsHttpException represents a &quot;Too Many Requests&quot; HTTP exception with status code 429&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd50709c297c4f7944bc91d5ee75ac2b09b1edbc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Transaction represents a DB transaction.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5586a7cce7a8bd6918e60052f6afc8b966b987c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Translates a message to the specified language.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89809ad30eb9d80486618ea82697dd6e15b6fea4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Translates a path alias into an actual path.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b3a31dffaf2db0383cde34f87490e777c1da8de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Translates the specified message.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49a1281637c16390043429dffdecb96019404c67" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Transport performs actual HTTP request sending.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d738bd7ae4036a1ddc61b0cfad576c00f2bd837" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Triggers a class-level event.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b1766fb99af22c06bbe3321b65a048374bb7b91" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Triggers an event.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c1ea1c540f37f6384be58d1dee4b7858413a386" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Truncate a string while preserving the HTML.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f50915d6212a3612294b146ba4f173eb850cc1f9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Truncates a string to the number of characters specified.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1ab4a7aa22ad41ce77f7332e851133dc16787b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Truncates a string to the number of words specified.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78e27db7768d593dfa1468b847412047f1d4e370" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Truncates the specified index removing all existing data from it.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb3a81aa0ab4720bdd408c63e042c3c2b77984d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Try to decode error information if it is valid json, return it if not.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dedacdcd597e6d76b518d65b90905c94b725cd84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;TwigViewRenderer allows you to use Twig templates in views.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fed17f03f4d25571b87d69ed94e3501a2b05939" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Twitter allows authentication via Twitter OAuth.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc410f7667c500b7b25dad11a7739451033158e0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Typecast owner attributes according to &lt;a href=&quot;yii-behaviors-attributetypecastbehavior#%24attributeTypes-detail&quot;&gt;$attributeTypes&lt;/a&gt;.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2661ba4ac3bccdb47061d4d406b6c4de37a2d1de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UnauthorizedHttpException represents an &quot;Unauthorized&quot; HTTP exception with status code 401&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51ed6568ec7f4d0d42aa1e195dd2ab66242da05a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Undefines an attribute.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b75b6cefa3f4455addd7df04cd5bcb439a4cf1a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UniqueValidator validates that the attribute value is unique in the specified database table.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f263d056c20af94410b539e1cce841e5838f59" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UnknownClassException represents an exception caused by using an unknown class.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c835097c966a1c20a21122f0f19fe417806f727c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UnknownCommandException represents an exception caused by incorrect usage of a console command.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b553581ffc0f751936d64eba4624dcbff4e8cf0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UnknownMethodException represents an exception caused by accessing an unknown object method.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25da929a10f1840ebd6c346d2981b0f4efe976dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UnknownPropertyException represents an exception caused by accessing unknown object properties.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d57a181d4ee870a5aaa201e6589bd0e6493c49e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unloads the fixture.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b210026fb9d7e4e7f30a5fb27544e060a39bbdcd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unloads the specified fixtures.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0dbfdf2a2753347f88a091309f97dfd6b415080" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unmasks a token previously masked by &lt;code&gt;maskToken&lt;/code&gt;.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61c82bf96561c202044c953f5989b7d7e2cce26c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UnprocessableEntityHttpException represents an &quot;Unprocessable Entity&quot; HTTP exception with status code 422.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f064a767d97f05d54f2a804f5d41809b6ad01da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unregisters this error handler by restoring the PHP error and exception handlers.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03d94176c33417eeba628a04ae51eb512427a189" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UnsupportedMediaTypeHttpException represents an &quot;Unsupported Media Type&quot; HTTP exception with status code 415&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d48d20c6e9bfc6e1ea8620cb2c3da13ceb861b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update existing documents in the collection.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0d8e057dbaf02a600633e7f55c338057df86d49" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Update the existing database data, otherwise insert this data&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a64e3da8b0be4c744e7a5e540d3373b62a502f0e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UpdateAction implements the API endpoint for updating a model.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94e6fbc2746f2adc7dce779bc0d1d545850d17ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Updates a document and returns it.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05868bd4fd0249c5e495379b6c315b83ddb3accb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Updates a document&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20b6dffe937c3d36137f5d7f903e160e6dd0f05e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Updates a progress bar that has been started by &lt;a href=&quot;yii-helpers-baseconsole#startProgress()-detail&quot;&gt;startProgress()&lt;/a&gt;.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e2f034df160c137514531b05d0649ea8a795a12" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Updates a rule to the RBAC system.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c7d5c762f805cbd6aba0b6b85ae41f29cccf2fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Updates a timestamp attribute to the current timestamp.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f252b9437f8050be08622d5e4ce172a3712ea7c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Updates all documents in the collection using the provided attribute values and conditions.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c98778b96282415c60f659636b04d8b7bf9aab56" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Updates all documents in the collection using the provided counter changes and conditions.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="703e51eff1094108e48559de96633aea197e0449" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Updates all matching records using the provided counter changes and conditions.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="116945ac55d56abb505fd8bed994ef406c49f0ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Updates all records whos primary keys are given.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa68b6bc6f59d63242e3d8aa3cbaf64d1626ad80" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Updates an auth item in the RBAC system.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9efa4f276ae803f47388a852f67a79c35d7e9a7e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Updates an existing model.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e0b0d512698c900100d1ca295e20f551f01a9e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Updates one or several counter columns for the current AR object.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55fe4126b29ae3d45e6eac3bc860d66c4fc4e509" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Updates records using the provided attribute values and conditions.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62eb32b3b32d4ae07e3a79071a0637bcf8785b60" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Updates the authentication status using the information from session and cookie.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd487f8c0765691d2d5a102c136bd0357d8f55b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Updates the counters for flash messages and removes outdated flash messages.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c50ebb936d20e50e2bca28f40cac4829c14995de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Updates the current session ID with a newly generated one .&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ec10052d2113342f67bdd4afa7ea8c44f2ee87" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Updates the current session ID with a newly generated one.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f0331974b2d5628f9851c7fc5f286398907b663" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Updates the rows, which matches given criteria by given data.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee883688890452cd79314f4758df997bbe0678c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Updates the specified attributes.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e796f0d8abd3347a6e762fbbcd9ab7b0db79a0f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Updates the specified role, permission or rule in the system.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4366fba5774cc21f8399e5fdc35459d25ad0546" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Updates the whole table using the provided attribute values and conditions.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7bfae35b998b256ae8c9721f83d3a96adbea1fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Updates the whole table using the provided counter changes and conditions.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed76dd7c21ed930ed76c128ca6bd68be06b8eaf7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Upgrades or downgrades till the specified version.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f7868305fcd92822b4d854c0c37148fb666bcd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Upgrades the application by applying new migrations.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec011be0dc11f130c6b96f10d7408f3de165b4c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Upgrades with the specified migration class.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a649a1765750533b439a20d9e164a66fd414608" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Upload represents the GridFS upload operation.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f44c533bc9fd69b9a22051ba2f471a7bad43c042" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UploadedFile represents the information for an uploaded file.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6b1129385aba0993f11ecfba2eb0455448fbc88" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Url provides a set of static methods for managing URLs.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0cba6d4e322d2662130ac704cd28d1e993f304d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UrlEncodedFormatter formats HTTP message as 'application/x-www-form-urlencoded'.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b2a6fc2daa7032daee7d8d249b2f4df2e16d62a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UrlEncodedParser parses HTTP message content as 'application/x-www-form-urlencoded'.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1f0a38ba5a180ac784a1003f3d49696a817ce1e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UrlManager handles HTTP request parsing and creation of URLs based on a set of rules.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86b0e624e5062ce3ffed1ec8ba3436cec50e4dab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UrlNormalizer normalizes URLs for &lt;a href=&quot;yii-web-urlmanager&quot;&gt;yii\web\UrlManager&lt;/a&gt; and &lt;a href=&quot;yii-web-urlrule&quot;&gt;yii\web\UrlRule&lt;/a&gt;.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddf70273f19990f31bcf9da8b25232bf49efc4c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UrlNormalizerRedirectException represents an information for redirection which should be performed during the URL normalization.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18129437986f8b9425489faf1bcfafc1d0df033c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UrlRule is provided to simplify the creation of URL rules for RESTful API support.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b23ab1adb6a9858be422326fcbc96da07c87ba35" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UrlRule represents a rule used by &lt;a href=&quot;yii-web-urlmanager&quot;&gt;yii\web\UrlManager&lt;/a&gt; for parsing and generating URLs.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a0d7958970fc5c20ddec929365fe103d5956dc8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UrlRuleInterface is the interface that should be implemented by URL rule classes.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf5d6a10c86696fc36b7de31d334ada6d5ae85fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UrlValidator validates that the attribute value is a valid http or https URL.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e05f444eceae05cb2d02f9908487b58ba5d03831" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Usage: list($width, $height) = ConsoleHelper::getScreenSize();&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c80d074784eb27562151d99f4fe23a6cf5823cfa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User controller&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d6e04282617acb7b2f023cf727fa59e274a9b9d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User is the class for the &lt;code&gt;user&lt;/code&gt; application component that manages the user authentication status.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3acd84117634cc206f389ead32fedfed2d111e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UserException is the base class for exceptions that are meant to be shown to end users.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5124159598ab1650e0b9061d62a827d3c40ed2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UserSearchInterface is the interface that should be implemented by a class providing identity information and search method.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a94e261881e9656c6705a83bb1979d1565d49741" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;UserSwitch is a model used to temporary logging in another user&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3766786a7176ddc944b00f9e07ad54026919e9d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Userswitch asset bundle&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="532f80c4f94d7e401bcbcc8c5bf39dbc3f69fa4f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Uses query cache for the queries performed with the callable.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e032dfcf28e355433d32efff321eaef4a141f015" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;VKontakte allows authentication via VKontakte OAuth.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0e22bf48d82643ec3622c76029a02ab1ecea6b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Validates &lt;a href=&quot;yii-gii-generators-form-generator#%24viewPath-detail&quot;&gt;$viewPath&lt;/a&gt; to make sure it is a valid path or path alias and exists.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5e195a43011bf2f48731d775b8bfed7c2b170c1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Validates &lt;a href=&quot;yii-gii-generators-module-generator#%24moduleClass-detail&quot;&gt;$moduleClass&lt;/a&gt; to make sure it is a fully qualified class name.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="920f0e931afef71d18e75c45f52bcbaf59d26479" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Validates IPv4 address&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c84db4b2fb14e94266fad1fb35f6b521f521e70" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Validates IPv6 address&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0556aa2593578faba9cef8f7cfc77f9c3ac8dd6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Validates a given value.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13befcd2a5646b5c11d2b171ab8e8c815bce75a8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Validates a single attribute.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3752b8d8630590a34d64a9210cb0ac2c5f36d7d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Validates a value.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9570f06ea3e0a33628c778e7e95eb2f2ba361e91" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Validates an array of model instances and returns an error message array indexed by the attribute IDs.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfd4b7d6931dc0564346ab368b23c5f08b699676" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Validates an image file.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f9f4d9fb4703da5eaa4d968e1deb13005995c9f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Validates if the HTTP cache contains valid content.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99749a643a37946e9353bb9b645e477bca547d00" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Validates if the given class is a valid console controller class.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="687e746d2a22d95ad3ee24ad810e28eb283f65ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Validates if the given data is tampered.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6af04c5d9b96e325fbd0bd120e0197f7428a98dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Validates multiple models.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6df5dd6582e32dd3e61c51f9efa395f74d1e959" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Validates one or several models and returns an error message array indexed by the attribute IDs.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfbe57558becf54278f94abdb15c9d114c24ca24" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Validates the &lt;a href=&quot;yii-gii-generators-model-generator#%24db-detail&quot;&gt;$db&lt;/a&gt; attribute.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9465cdeecfd523ba5d70977c92086c52792d834" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Validates the &lt;a href=&quot;yii-gii-generators-model-generator#%24modelClass-detail&quot;&gt;$modelClass&lt;/a&gt; attribute.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49cd1adadb4c2aa24b73e93c5b9963b77da9b395" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Validates the &lt;a href=&quot;yii-gii-generators-model-generator#%24tableName-detail&quot;&gt;$tableName&lt;/a&gt; attribute.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da7a2c878940a2ade75863e418e561264f2b5315" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Validates the &lt;a href=&quot;yii-mongodb-gii-model-generator#%24collectionName-detail&quot;&gt;$collectionName&lt;/a&gt; attribute.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9babf2cd4c05840adf4092e4b43409797841132e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Validates the &lt;a href=&quot;yii-mongodb-gii-model-generator#%24db-detail&quot;&gt;$db&lt;/a&gt; attribute.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0e3ed626d67ad11d9908ea048380311f009f82f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Validates the &lt;a href=&quot;yii-mongodb-gii-model-generator#%24modelClass-detail&quot;&gt;$modelClass&lt;/a&gt; attribute.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfddf6192c1a69ade87a7f546c77f12dee79c20c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Validates the &lt;a href=&quot;yii-mongodb-gii-model-generator#%24ns-detail&quot;&gt;$ns&lt;/a&gt; attribute.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dd31af06cdbd43dafda443d0034192c19bf68d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Validates the &lt;a href=&quot;yii-sphinx-gii-model-generator#%24db-detail&quot;&gt;$db&lt;/a&gt; attribute.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="889bbe4a20f74cd1ee4f403a25bf2ee77178a4b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Validates the &lt;a href=&quot;yii-sphinx-gii-model-generator#%24indexName-detail&quot;&gt;$indexName&lt;/a&gt; attribute.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="293cdabcae46b4d749a6b05b211eb001caa10974" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Validates the &lt;a href=&quot;yii-sphinx-gii-model-generator#%24modelClass-detail&quot;&gt;$modelClass&lt;/a&gt; attribute.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41f02348a59fbe7ad922e3eefa44fea1557384e0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Validates the &lt;a href=&quot;yii-sphinx-gii-model-generator#%24ns-detail&quot;&gt;$ns&lt;/a&gt; attribute.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcf540e804ab44cdd70b9a030c79b7ae9a69e85e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Validates the given auth key.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b926b069426297589948d3f6c38a557fec18a95" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Validates the given data with the specified validation rules.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="846cc8a3e54d59ffff032c5e912eb498260317b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Validates the input to see if it matches the generated code.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd94d388a2b10a19b1303440706f79e8a34cb437" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Validates the namespace.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="126898960b0f7b38c2d34b452c8ef24c42e6dc6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Validates the specified object.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b9f68c101d92a38809fb37d5af50d32dc967149" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Validates the template selection.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71e06a632e9b2c3da02dc15df7ad94f5a7cba4f5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Validator is the base class for all validators.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2bfe6d2d6d734acde2098387d8c491aa01b51bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;VarDumper is intended to replace the buggy PHP function var_dump and print_r.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aba4f3d47e446e452acbe61c1d78a5e0e76038b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;VerbFilter is an action filter that filters by HTTP request methods.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39ed4b2d49466d85c118374ae5c57e83277a791d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Verifies a password against a hash.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18fef123d27059974f36314ae2d6e6eef30c8d96" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Verifies and decrypts data encrypted with &lt;a href=&quot;yii-base-security#encryptByKey()-detail&quot;&gt;encryptByKey()&lt;/a&gt;.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adc25471e48408f00510ec77dc0a6ebe41149c20" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Verifies and decrypts data encrypted with &lt;a href=&quot;yii-base-security#encryptByPassword()-detail&quot;&gt;encryptByPassword()&lt;/a&gt;.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="520e1db9348651191da9657b8d4fd608c19ef276" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Verifies given OAuth request.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb3ce6e24b72b0878139adce35cb106c80f123dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;View represents a view object in the MVC pattern.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0419f1f3abd33434e1c2a91c31eec3540f966b99" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ViewAction implements the API endpoint for returning the detailed information about a model.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="767b848bfb635f8958ab1a2fda9eee5e9f26c72d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ViewAction represents an action that displays a view according to a user-specified parameter.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc00421f50f2227f6ccfa10965d526b9f84b641b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ViewContextInterface is the interface that should implemented by classes who want to support relative view names.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abb3f3aebda188ea95da352273e88da60f322189" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ViewEvent represents events triggered by the &lt;a href=&quot;yii-base-view&quot;&gt;yii\base\View&lt;/a&gt; component.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1c036e09ea05767f8c321c4abf30d677b75d0cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ViewFinderTrait implements the method getViewNames for finding views in a database.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e67177d4a9e0a5f661f631792d710dfcfac628ed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ViewNotFoundException represents an exception caused by view file not found.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bd1ae560390be8ab663dcf6af4e06487c36dd9b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ViewRenderer is the base class for view renderer classes.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9ddb415e925156b1580784cc7b131b2d38f0bc6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning: &lt;/strong&gt;All OpenSSL ciphers that we recommend are in the default value, i.e. AES in CBC mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cc9d5d2bfac5111d4a8ca865ccc040da8d90d4c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning: &lt;/strong&gt;Because by default all attributes of a model will be included in the API result, you should examine your data to make sure they do not contain sensitive information. If there is such information, you should override &lt;code&gt;fields()&lt;/code&gt; to filter them out. In the above example, we choose to filter out &lt;code&gt;auth_key&lt;/code&gt;, &lt;code&gt;password_hash&lt;/code&gt; and &lt;code&gt;password_reset_token&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b67a48878ef46c1892c3a39c62dcbd3bfe69a79" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning: &lt;/strong&gt;Because by default all attributes of a model will be included in the exported array, you should examine your data to make sure they do not contain sensitive information. If there is such information, you should override &lt;code&gt;fields()&lt;/code&gt; to filter them out. In the above example, we choose to filter out &lt;code&gt;auth_key&lt;/code&gt;, &lt;code&gt;password_hash&lt;/code&gt; and &lt;code&gt;password_reset_token&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d9d47a3fab148fc95e528e7dfcf39e87e89c000" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning: &lt;/strong&gt;Dependent on the server configuration this information may not be reliable and &lt;a href=&quot;https://www.acunetix.com/vulnerabilities/web/host-header-attack&quot;&gt;may be faked by the user sending the HTTP request&lt;/a&gt;. If the webserver is configured to serve the same site independent of the value of the &lt;code&gt;Host&lt;/code&gt; header, this value is not reliable. In such situations you should either fix your webserver configuration or explicitly set the value by setting the &lt;a href=&quot;yii-web-request#setHostInfo()-detail&quot;&gt;hostInfo&lt;/a&gt; property. If you don't have access to the server configuration, you can setup &lt;a href=&quot;yii-filters-hostcontrol&quot;&gt;yii\filters\HostControl&lt;/a&gt; filter at application level in order to protect against such kind of attack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbf25bf72d809d8183dd3df22d5221aef53c63a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning: &lt;/strong&gt;Disabling CSRF will allow any site to send POST requests to your site. It is important to implement extra validation such as checking an IP address or a secret token in this case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db1ec0dc7f1ea58af0c1dbf4e877701026e3ad5a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning: &lt;/strong&gt;If you do not specify any condition, this method will delete &lt;strong&gt;all&lt;/strong&gt; rows in the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bed83c00b463c392461be9e15da1c6918c6fe838" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning: &lt;/strong&gt;If you do not specify any condition, this method will update &lt;strong&gt;all&lt;/strong&gt; rows in the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e74c3570285786d650f4449e6d21d67eac2ed796" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning: &lt;/strong&gt;The content of this value may not be reliable, dependent on the server configuration. Please refer to &lt;a href=&quot;yii-web-request#getHostInfo()-detail&quot;&gt;getHostInfo()&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29c0348552a9c6ed84d7c6d8832990a4cb0a384d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning: &lt;/strong&gt;There are known limitations and workarounds for the MySQL implementation of batch queries. See below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c109dea97efd3f95a91a78a972af87383345874b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Whether the reader is closed or not.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="193b8e7d28922dfc4f167381c0caf563b44625a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Widget is the base class for widgets.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd183374a074231d0997035774fd8cba1cbc3ca6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WidgetEvent represents the event parameter used for a widget event.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="454aaa602320d7f97c6613d80025ed7cc5f7487e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Will return a string formatted with the given ANSI style&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c178235e3787c4918236236a4ef9c732457f5931" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Will show a cursor again when it has been hidden by &lt;a href=&quot;yii-helpers-baseconsole#hideCursor()-detail&quot;&gt;hideCursor()&lt;/a&gt; by sending ANSI DECTCEM code ?25h to the terminal.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f667c4686143f6cd1da92014a0a1036528976216" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WinCache provides Windows Cache caching in terms of an application component.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc21e5d69bee50f2e5cbe0070e6c2f8719e9f32c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Word wrap text with indentation to fit the screen size&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a76e79992091e9e255b869fa2bfa19ce94d20ff4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Write bytes.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="972f4b7b9adc828365b5110e5a17bc66e03b87a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Writes a 4-byte integer.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d8beaaa1f02c85f561fffc0a92323fbb14474db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Writes a string.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e13a8e99d0e280121b44b06bc448d10b06476f4d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Writes category messages into PHP file&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f55215a8df9cc55d1e659990cdcd3eacfcfdf3f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Writes log messages to a file.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="720205443b6c88a6437e2db67a115855f09f0d58" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Writes log messages to syslog&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb11732f601cf5277a42b3a7d3f1a5880f58e08" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Writes messages into PHP files&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ad31c6fe37487580af56295f536f3e0ce017a95" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Writes messages into PO file&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec97254e2e03c303d8d2c1a2913e3268ff0f6aa6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Writes messages into POT file&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e6211b9f9bcaade7034287c9ffa07c61a9bcade" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Writes the the internal file content into the given filename.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ea53cc32197d4136fbe9d59bb625894ceaf444" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Writes to stream.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20d23028bdeb19f5e5860f1cc2f5619c246c8f7d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;XCache provides XCache caching in terms of an application component.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b80716383561f09b6af359262ca04632215c371" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;XmlFormatter formats HTTP message as XML.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d901f0786769258edee1d0937f94692e78151f90" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;XmlParser parses HTTP message content as XML.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="078810177332bb083d4a6bace7205f0eab4436b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;XmlResponseFormatter formats the given data into an XML response content.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3298405de153d14a8cfd6e9796a42481608b42e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yandex allows authentication via Yandex OAuth.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c9652a747d16b76293cc51944c2cba9fae4b184" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Yii is a helper class serving common framework functionalities.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f20f5051ff3fffaebe45fb757de13067e2a22a9f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;YiiRequirementChecker allows checking, if current system meets the requirements for running the Yii application.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b92350b0c953d68ff157486d548447b67b2b58f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ZendDataCache provides Zend data caching in terms of an application component.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee3bb49d58b44e22689a45850cc1f1c2cb396c3e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;\yii\bootstrap\Widget is the base class for all bootstrap widgets.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20fd61c768ff23ad0bf5ec7d24e62be868c729f6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;\yii\jui\Widget is the base class for all jQuery UI widgets.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f20b0488ea13045a6afc7cdf51b16aa6fe8ea04" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;and&lt;/strong&gt;: the operands should be concatenated together using &lt;code&gt;AND&lt;/code&gt;. For example, &lt;code&gt;['and', 'id=1', 'id=2']&lt;/code&gt; will generate &lt;code&gt;id=1 AND id=2&lt;/code&gt;. If an operand is an array, it will be converted into a string using the rules described here. For example, &lt;code&gt;['and', 'type=1', ['or', 'id=1', 'id=2']]&lt;/code&gt; will generate &lt;code&gt;type=1 AND (id=1 OR id=2)&lt;/code&gt;. The method will &lt;em&gt;not&lt;/em&gt; do any quoting or escaping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60822e52dea9561ec4595a467fc3ae27be3d11e4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;between&lt;/strong&gt;: operand 1 should be the column name, and operand 2 and 3 should be the starting and ending values of the range that the column is in. For example, &lt;code&gt;['between', 'id', 1, 10]&lt;/code&gt; will generate &lt;code&gt;id BETWEEN 1 AND 10&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13a3d6ade4d4fec1024dbb8a62f353e1c45daf84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;exists&lt;/strong&gt;: operand 1 is a query object that used to build an &lt;code&gt;EXISTS&lt;/code&gt; condition. For example &lt;code&gt;['exists', (new Query())-&amp;gt;select('id')-&amp;gt;from('users')-&amp;gt;where(['active' =&amp;gt; 1])]&lt;/code&gt; will result in the following SQL expression: &lt;code&gt;EXISTS (SELECT &quot;id&quot; FROM &quot;users&quot; WHERE &quot;active&quot;=1)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82bc3b41191cb3e9704e5a9983a24fd735820541" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;in&lt;/strong&gt;: operand 1 should be a column or DB expression, and operand 2 be an array representing the range of the values that the column or DB expression should be in. For example, &lt;code&gt;['in', 'id', [1, 2, 3]]&lt;/code&gt; will generate &lt;code&gt;id IN (1, 2, 3)&lt;/code&gt;. The method will properly quote the column name and escape values in the range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="670421c68121c71a942c6e8d24440a9a594806ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;like&lt;/strong&gt;: operand 1 should be a column or DB expression, and operand 2 be a string or an array representing the values that the column or DB expression should be like. For example, &lt;code&gt;['like', 'name', 'tester']&lt;/code&gt; will generate &lt;code&gt;name LIKE '%tester%'&lt;/code&gt;. When the value range is given as an array, multiple &lt;code&gt;LIKE&lt;/code&gt; predicates will be generated and concatenated using &lt;code&gt;AND&lt;/code&gt;. For example, &lt;code&gt;['like', 'name', ['test', 'sample']]&lt;/code&gt; will generate &lt;code&gt;name LIKE '%test%' AND name LIKE '%sample%'&lt;/code&gt;. The method will properly quote the column name and escape special characters in the values. Sometimes, you may want to add the percentage characters to the matching value by yourself, you may supply a third operand &lt;code&gt;false&lt;/code&gt; to do so. For example, &lt;code&gt;['like', 'name', '%tester', false]&lt;/code&gt; will generate &lt;code&gt;name LIKE '%tester'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e374967dfa2e6d75e12f3e67575e1955b01c6670" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;not between&lt;/strong&gt;: similar to &lt;code&gt;between&lt;/code&gt; except the &lt;code&gt;BETWEEN&lt;/code&gt; is replaced with &lt;code&gt;NOT BETWEEN&lt;/code&gt; in the generated condition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c834c2dc731e902b666ddf9e6879c7db8e8999a1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;not exists&lt;/strong&gt;: similar to the &lt;code&gt;exists&lt;/code&gt; operator except that &lt;code&gt;EXISTS&lt;/code&gt; is replaced with &lt;code&gt;NOT EXISTS&lt;/code&gt; in the generated condition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd01d836b3e4743847b204017127b4538b05123" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;not in&lt;/strong&gt;: similar to the &lt;code&gt;in&lt;/code&gt; operator except that &lt;code&gt;IN&lt;/code&gt; is replaced with &lt;code&gt;NOT IN&lt;/code&gt; in the generated condition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8af9fdb3bfc70dba838a53a79493b18cbc89c1ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;not like&lt;/strong&gt;: similar to the &lt;code&gt;like&lt;/code&gt; operator except that &lt;code&gt;LIKE&lt;/code&gt; is replaced with &lt;code&gt;NOT LIKE&lt;/code&gt; in the generated condition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f81467691b5965fef5aa4368d48c4d4785d996b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;not&lt;/strong&gt;: this will take only one operand and build the negation of it by prefixing the query string with &lt;code&gt;NOT&lt;/code&gt;. For example &lt;code&gt;['not', ['attribute' =&amp;gt; null]]&lt;/code&gt; will result in the condition &lt;code&gt;NOT (attribute IS NULL)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e8493cf93ecae0f4e2153fb552de85be3649443" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;or like&lt;/strong&gt;: similar to the &lt;code&gt;like&lt;/code&gt; operator except that &lt;code&gt;OR&lt;/code&gt; is used to concatenate the &lt;code&gt;LIKE&lt;/code&gt; predicates when operand 2 is an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6481a9965eb5db1ec1b7648c1bd0351bd30f16c4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;or not like&lt;/strong&gt;: similar to the &lt;code&gt;not like&lt;/code&gt; operator except that &lt;code&gt;OR&lt;/code&gt; is used to concatenate the &lt;code&gt;NOT LIKE&lt;/code&gt; predicates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af5c18a5b21715f6dade7ffd865fe00be6b6ff1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;or&lt;/strong&gt;: similar to the &lt;code&gt;and&lt;/code&gt; operator except that the operands are concatenated using &lt;code&gt;OR&lt;/code&gt;. For example, &lt;code&gt;['or', ['type' =&amp;gt; [7, 8, 9]], ['id' =&amp;gt; [1, 2, 3]]]&lt;/code&gt; will generate &lt;code&gt;(type IN (7, 8, 9) OR (id IN (1, 2, 3)))&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f47a552a6a4fcd33841f9ecff1b3963eab20d95c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;{@inheritdoc}&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;{@inheritdoc}&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="253e7d1da40c93957e4b4c2a0a00f3888c299f11" translate="yes" xml:space="preserve">
          <source>@see items</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="338138b4e145f8b22a9f6f11cb995740b512eb7e" translate="yes" xml:space="preserve">
          <source>@see self::$extensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02d79d4621405a7c843ad13250074150e2f0b842" translate="yes" xml:space="preserve">
          <source>@see self::$filters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fba4529694a881e2f8a92f84f90ae3ee574fd644" translate="yes" xml:space="preserve">
          <source>@see self::$functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a68f471d1d5ab15e11dabfc4efe67c709d6bd348" translate="yes" xml:space="preserve">
          <source>@see self::$globals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="292b236a7690017149a03bb208d9d05f6253e828" translate="yes" xml:space="preserve">
          <source>@see self::$lexerOptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10347d85ff23372c024485360bf6201f445636d1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Download&lt;/code&gt; object is usually created by calling &lt;a href=&quot;yii-mongodb-file-collection#get()-detail&quot;&gt;yii\mongodb\file\Collection::get()&lt;/a&gt; or &lt;a href=&quot;yii-mongodb-file-collection#createDownload()-detail&quot;&gt;yii\mongodb\file\Collection::createDownload()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3386b52de82ce8464f14443b87083fedaf5bdb61" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;has-many&lt;/code&gt; relation means that there are multiple related records matching the criteria set by this relation, e.g., a customer has many orders.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c99f1777f2e18116e370daf5fe4014ac2a0c3025" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;has-one&lt;/code&gt; relation means that there is at most one related record matching the criteria set by this relation, e.g., a customer has one country.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91cfa82c7b0f9b5acda8c50bfac3391f34d8bcfc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;help&lt;/code&gt; command is provided by default, which lists available commands and shows their usage. To use this command, simply type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79ebc1589b6c8f920f17cf599f4395fd889c141c" translate="yes" xml:space="preserve">
          <source>A CSS file can be registered using the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6360acd9034174898f0c0a0dabe1bce97b82ff66" translate="yes" xml:space="preserve">
          <source>A JavaScript function name whose return value determines whether this validator should be applied on the client-side.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="913a2034fa5d86a419d821f9e7b3e3fe61266989" translate="yes" xml:space="preserve">
          <source>A JavaScript function name whose return value determines whether this validator should be applied on the client-side. The signature of the function should be &lt;code&gt;function (attribute, value)&lt;/code&gt;, where &lt;code&gt;attribute&lt;/code&gt; is an object describing the attribute being validated (see &lt;a href=&quot;yii-validators-validator#clientValidateAttribute()-detail&quot;&gt;clientValidateAttribute()&lt;/a&gt;) and &lt;code&gt;value&lt;/code&gt; the current value of the attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6efaff8118b9bf3cc2f2274d018c73acb44a39ed" translate="yes" xml:space="preserve">
          <source>A Logger instance can be accessed via &lt;code&gt;Yii::getLogger()&lt;/code&gt;. You can call the method &lt;a href=&quot;yii-log-logger#log()-detail&quot;&gt;log()&lt;/a&gt; to record a single log message. For convenience, a set of shortcut methods are provided for logging messages of various severity levels via the &lt;a href=&quot;yii&quot;&gt;Yii&lt;/a&gt; class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a83ff589022d09b8c15d49a6584f834a0f9d215" translate="yes" xml:space="preserve">
          <source>A Markdown parser that enhances markdown for reading in console environments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="300e197c9db08524fb94a92f11917a76f5b28ab9" translate="yes" xml:space="preserve">
          <source>A PHP callable that contains DB queries which should not use query cache. The signature of the callable is &lt;code&gt;function (Connection $db)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af53d28a6bc815ec5cbf370176b8e0838f50a17f" translate="yes" xml:space="preserve">
          <source>A PHP callable that contains DB queries which will make use of query cache. The signature of the callable is &lt;code&gt;function (Connection $db)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fd39975e4ab76e052260d4b5d505ee8a4b33e38" translate="yes" xml:space="preserve">
          <source>A PHP callable that replaces the default implementation of &lt;a href=&quot;yii-validators-validator#isEmpty()-detail&quot;&gt;isEmpty()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95550820a27b633d5e0318067c9fa641b3d4d7b1" translate="yes" xml:space="preserve">
          <source>A PHP callable that replaces the default implementation of &lt;a href=&quot;yii-validators-validator#isEmpty()-detail&quot;&gt;isEmpty()&lt;/a&gt;. If not set, &lt;a href=&quot;yii-validators-validator#isEmpty()-detail&quot;&gt;isEmpty()&lt;/a&gt; will be used to check if a value is empty. The signature of the callable should be &lt;code&gt;function ($value)&lt;/code&gt; which returns a boolean indicating whether the value is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="489f63b93b8e01d3b745f18fe31f259a67f9ddbe" translate="yes" xml:space="preserve">
          <source>A PHP callable that returns a string to be prefixed to every exported message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="010dd65d20d2e3421679dc46fdc0864e92e08f2b" translate="yes" xml:space="preserve">
          <source>A PHP callable that will authenticate the user with the HTTP basic auth information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63de590cde6eb99290c288639a0928c0de16087" translate="yes" xml:space="preserve">
          <source>A PHP callable that will authenticate the user with the HTTP basic auth information. The callable receives a username and a password as its parameters. It should return an identity object that matches the username and password. Null should be returned if there is no such identity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63f45a39cf1bd9635ffa137e341cff0f3c62157f" translate="yes" xml:space="preserve">
          <source>A PHP callable that will be called to prepare a data provider that should return a collection of the models.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="533ce24ab1071aaab9d54bffac06225eb1459c77" translate="yes" xml:space="preserve">
          <source>A PHP callable that will be called to prepare a data provider that should return a collection of the models. If not set, &lt;a href=&quot;yii-rest-indexaction#prepareDataProvider()-detail&quot;&gt;prepareDataProvider()&lt;/a&gt; will be used instead. The signature of the callable should be:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0212c0dda5bbd702735b8a09da03fd1ee01f2ab" translate="yes" xml:space="preserve">
          <source>A PHP callable that will be called to return the model corresponding to the specified primary key value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="566b4ade6abacb3f50954e4789c2f6eb14bbe076" translate="yes" xml:space="preserve">
          <source>A PHP callable that will be called to return the model corresponding to the specified primary key value. If not set, &lt;a href=&quot;yii-rest-action#findModel()-detail&quot;&gt;findModel()&lt;/a&gt; will be used instead. The signature of the callable should be:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a69a011e03a769b8ad2539688963830b9261dc76" translate="yes" xml:space="preserve">
          <source>A PHP callable that will be called when running an action to determine if the current user has the permission to execute the action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43e0963422dd7ea6f32b59120fd992e1a1ce75e6" translate="yes" xml:space="preserve">
          <source>A PHP callable that will be called when running an action to determine if the current user has the permission to execute the action. If not set, the access check will not be performed. The signature of the callable should be as follows,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31f1b4902573a16e263cd5c0185cb63ba87529d4" translate="yes" xml:space="preserve">
          <source>A PHP callable to be executed by this method. Its signature is &lt;code&gt;function (Connection $db)&lt;/code&gt;. Its return value will be returned by this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0109a8651fd28b791798c40e31622793b076181" translate="yes" xml:space="preserve">
          <source>A PHP callable whose return value determines whether this validator should be applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f595a5c4eea0e9c5b99b6985c56ff16241763cca" translate="yes" xml:space="preserve">
          <source>A PHP callable whose return value determines whether this validator should be applied. The signature of the callable should be &lt;code&gt;function ($model, $attribute)&lt;/code&gt;, where &lt;code&gt;$model&lt;/code&gt; and &lt;code&gt;$attribute&lt;/code&gt; refer to the model and the attribute currently being validated. The callable should return a boolean value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c037f583779381933ed324101afd5dd1a76fded" translate="yes" xml:space="preserve">
          <source>A PHP callback for customizing the relation associated with the junction table. Its signature should be &lt;code&gt;function($query)&lt;/code&gt;, where &lt;code&gt;$query&lt;/code&gt; is the query to be customized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1e8d6a7bb73077a67a5d8f95bc2dcca3455342d" translate="yes" xml:space="preserve">
          <source>A PHP callback that generates the ETag seed string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bac7e752595fe406fc84927c40461394f20e02a2" translate="yes" xml:space="preserve">
          <source>A PHP callback that generates the ETag seed string. The callback's signature should be:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e10b68851afec32b5a1048d9e2ec70275db3efe" translate="yes" xml:space="preserve">
          <source>A PHP callback that is called after a sub-directory or file is successfully copied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9386a5325a8028a9725450bca0ddec015006f8e1" translate="yes" xml:space="preserve">
          <source>A PHP callback that is called after a sub-directory or file is successfully copied. This option is used only when publishing a directory. The signature of the callback is the same as for &lt;a href=&quot;yii-web-assetmanager#%24beforeCopy-detail&quot;&gt;$beforeCopy&lt;/a&gt;. This is passed as a parameter &lt;code&gt;afterCopy&lt;/code&gt; to &lt;a href=&quot;yii-helpers-basefilehelper#copyDirectory()-detail&quot;&gt;yii\helpers\FileHelper::copyDirectory()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9587a841c988f0a1599f95d635fa5a4414ed986e" translate="yes" xml:space="preserve">
          <source>A PHP callback that is called before copying each sub-directory or file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d4b61c6f116dc81fcd07cf53d21ebd38ce8444a" translate="yes" xml:space="preserve">
          <source>A PHP callback that is called before copying each sub-directory or file. This option is used only when publishing a directory. If the callback returns false, the copy operation for the sub-directory or file will be cancelled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17005459ecb2caf21352925dc32e1c32b79e91d7" translate="yes" xml:space="preserve">
          <source>A PHP callback that returns the UNIX timestamp of the last modification time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a90b5073983905e35c30e3420587048b8b08b59c" translate="yes" xml:space="preserve">
          <source>A PHP callback that returns the UNIX timestamp of the last modification time. The callback's signature should be:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5574235f3a5e68a8d3eb10dcc863241f3f6f91de" translate="yes" xml:space="preserve">
          <source>A PHP callback that will be called by &lt;a href=&quot;yii-mail-basemailer#send()-detail&quot;&gt;send()&lt;/a&gt; when &lt;a href=&quot;yii-mail-basemailer#%24useFileTransport-detail&quot;&gt;$useFileTransport&lt;/a&gt; is true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17026956059e71af2087a9f6dff951b6ef0df704" translate="yes" xml:space="preserve">
          <source>A PHP callback that will be called by &lt;a href=&quot;yii-mail-basemailer#send()-detail&quot;&gt;send()&lt;/a&gt; when &lt;a href=&quot;yii-mail-basemailer#%24useFileTransport-detail&quot;&gt;$useFileTransport&lt;/a&gt; is true. The callback should return a file name which will be used to save the email message. If not set, the file name will be generated based on the current timestamp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8986befb98020c273ff645bcce31a55867c273bd" translate="yes" xml:space="preserve">
          <source>A PHP expression can be any PHP code that has a value. To learn more about what an expression is, please refer to the &lt;a href=&quot;http://www.php.net/manual/en/language.expressions.php&quot;&gt;php manual&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ea97d3189676943e86ac49bbbc206cdfaea91bd" translate="yes" xml:space="preserve">
          <source>A PHP expression to be evaluated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f272f157ee31b38b24990c393c6823659efa8552" translate="yes" xml:space="preserve">
          <source>A UNIX timestamp or &lt;code&gt;false&lt;/code&gt; on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88cbb1e5c43b4295a438038eac3d21807fb9cff1" translate="yes" xml:space="preserve">
          <source>A URI &lt;a href=&quot;https://tools.ietf.org/html/rfc3986&quot;&gt;RFC3986&lt;/a&gt; or URI template &lt;a href=&quot;https://tools.ietf.org/html/rfc6570&quot;&gt;RFC6570&lt;/a&gt;. This property is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a87a7323bb5d3bf8c38abde3cd31e7abfbe2103" translate="yes" xml:space="preserve">
          <source>A URI [RFC3986](&lt;a href=&quot;https://tools&quot;&gt;https://tools&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06bf1585a6418e343b50a7e1e6e6add098846c0e" translate="yes" xml:space="preserve">
          <source>A URI that hints about the profile of the target resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d33f0bd0e3da27edbbb468d8a9e9ed75af5558f" translate="yes" xml:space="preserve">
          <source>A URL rule can be associated with named query parameters which are specified in the pattern in the format of &lt;code&gt;&amp;lt;ParamName:RegExp&amp;gt;&lt;/code&gt;, where &lt;code&gt;ParamName&lt;/code&gt; specifies the parameter name and &lt;code&gt;RegExp&lt;/code&gt; is an optional regular expression used to match parameter values. If &lt;code&gt;RegExp&lt;/code&gt; is not specified, it means the parameter value should be a string without any slash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c0518658c8eab0bd8ea275ee45d2da89b575529" translate="yes" xml:space="preserve">
          <source>A URL rule is a class implementing the &lt;a href=&quot;yii-web-urlruleinterface&quot;&gt;yii\web\UrlRuleInterface&lt;/a&gt;, usually &lt;a href=&quot;yii-web-urlrule&quot;&gt;yii\web\UrlRule&lt;/a&gt;. Each URL rule consists of a pattern used for matching the path info part of URLs, a route, and a few query parameters. A URL rule can be used to parse a request if its pattern matches the requested URL. A URL rule can be used to create a URL if its route and query parameter names match those that are given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10f18af0f55a3e3379a9fd1a6ecd16a43de458b0" translate="yes" xml:space="preserve">
          <source>A Web page can include many CSS and/or JavaScript files. To reduce the number of HTTP requests and the overall download size of these files, a common practice is to combine and compress multiple CSS/JavaScript files into one or very few files, and then include these compressed files instead of the original ones in the Web pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="535c63f2f089327bb0b85ef7e344c00a86e25131" translate="yes" xml:space="preserve">
          <source>A Yii application uses two kinds of languages:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45eaa15158c157e33c96c4accc953058fd567ba9" translate="yes" xml:space="preserve">
          <source>A base name that the relation name may be generated from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc61f1d000cb5a5bf6fd72ad86131875a7faa39d" translate="yes" xml:space="preserve">
          <source>A basic usage looks like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76169598b853ad5197ffa8901f9a79b7f6843b48" translate="yes" xml:space="preserve">
          <source>A batch query supports fetching data in batches, which can keep the memory usage under a limit. This method will return a &lt;a href=&quot;yii-db-batchqueryresult&quot;&gt;yii\db\BatchQueryResult&lt;/a&gt; object which implements the &lt;a href=&quot;http://www.php.net/class.iterator&quot;&gt;Iterator&lt;/a&gt; interface and can be traversed to retrieve the data in batches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2654b44dfae53d2664066f9012515c13a7f6aa5f" translate="yes" xml:space="preserve">
          <source>A batch query supports fetching data in batches, which can keep the memory usage under a limit. This method will return a &lt;a href=&quot;yii-elasticsearch-batchqueryresult&quot;&gt;yii\elasticsearch\BatchQueryResult&lt;/a&gt; object which implements the &lt;a href=&quot;http://www.php.net/class.iterator&quot;&gt;Iterator&lt;/a&gt; interface and can be traversed to retrieve the data in batches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98d4828f82ea23e7cab39c8ee64276c00b328665" translate="yes" xml:space="preserve">
          <source>A batch query supports fetching data in batches, which can keep the memory usage under a limit. This method will return a &lt;a href=&quot;yii-mongodb-batchqueryresult&quot;&gt;yii\mongodb\BatchQueryResult&lt;/a&gt; object which implements the &lt;code&gt;Iterator&lt;/code&gt; interface and can be traversed to retrieve the data in batches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39ec6eaa5e066c56a3d26e51e6dcf997f0c2aaa0" translate="yes" xml:space="preserve">
          <source>A behavior can be used to enhance the functionality of an existing component without modifying its code. In particular, it can &quot;inject&quot; its own methods and properties into the component and make them directly accessible via the component. It can also respond to the events triggered in the component and thus intercept the normal code execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9ce73f7a5f425caa0cc3b0896d02bf9fc9bba3d" translate="yes" xml:space="preserve">
          <source>A behavior is an instance of &lt;a href=&quot;yii-base-behavior&quot;&gt;yii\base\Behavior&lt;/a&gt; or its child class. A component can be attached with one or multiple behaviors. When a behavior is attached to a component, its public properties and methods can be accessed via the component directly, as if the component owns those properties and methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ebfc7d878a3fb1b338f7fdb1c63e9d4f05734b" translate="yes" xml:space="preserve">
          <source>A behavior may be associated with a name when it is attached to a component. If this is the case, you may access the behavior object using the name:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3587afd2df7beea44bdf795e302a1f2e7cc93c6b" translate="yes" xml:space="preserve">
          <source>A benefit of using global events is that you do not need an object when attaching a handler to the event which will be triggered by the object. Instead, the handler attachment and the event triggering are both done through the Singleton (e.g. the application instance).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fae232510bb35762bf5eee1f5b35bb7af52520e1" translate="yes" xml:space="preserve">
          <source>A better way of customizing the error display is to use dedicated error &lt;a href=&quot;guide-structure-controllers&quot;&gt;actions&lt;/a&gt;. To do so, first configure the &lt;a href=&quot;yii-web-errorhandler#%24errorAction-detail&quot;&gt;errorAction&lt;/a&gt; property of the &lt;code&gt;errorHandler&lt;/code&gt; component like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c350118ab696d4f86566f2e082585b67c464bb94" translate="yes" xml:space="preserve">
          <source>A boolean value indicating whether to cache all HTTP headers, or an array of HTTP header names (case-insensitive) indicating which HTTP headers can be cached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd0c1115505d6a559af4623e2d68df2eed6d336d" translate="yes" xml:space="preserve">
          <source>A boolean value indicating whether to cache all HTTP headers, or an array of HTTP header names (case-insensitive) indicating which HTTP headers can be cached. Note if your HTTP headers contain sensitive information, you should white-list which headers can be cached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c01f4b7144fcd620ab61d85087253148cce3e27e" translate="yes" xml:space="preserve">
          <source>A boolean value indicating whether to cache all cookies, or an array of cookie names indicating which cookies can be cached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2770dcf786ca7a0973e2302531079a72e68bb296" translate="yes" xml:space="preserve">
          <source>A boolean value indicating whether to cache all cookies, or an array of cookie names indicating which cookies can be cached. Be very careful with caching cookies, because it may leak sensitive or private data stored in cookies to unwanted users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="477b3b211b05c0e8b6f17410abae5050f6759025" translate="yes" xml:space="preserve">
          <source>A callback returning a value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b33f7efc0712dc87237f989ff322981d13463fc" translate="yes" xml:space="preserve">
          <source>A callback that creates a button URL using the specified model information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ff7607d060974ef7ce49c6c891139f28770eb04" translate="yes" xml:space="preserve">
          <source>A callback that creates a button URL using the specified model information. The signature of the callback should be the same as that of &lt;a href=&quot;yii-grid-actioncolumn#createUrl()-detail&quot;&gt;createUrl()&lt;/a&gt; Since 2.0.10 it can accept additional parameter, which refers to the column instance itself:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="086d76300544b9825ac4fe167b0742916203523f" translate="yes" xml:space="preserve">
          <source>A callback that will be called during session data reading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b106b485ab6bed313eac4d0722e74bd5cc24e6c" translate="yes" xml:space="preserve">
          <source>A callback that will be called during session data reading. The signature of the callback should be as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a5fed275b859e232e18f2feaf4c31c121661c05" translate="yes" xml:space="preserve">
          <source>A callback that will be called during session data writing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad28e2361615d62a8d40621fdbccf864ce6ca35e" translate="yes" xml:space="preserve">
          <source>A callback that will be called during session data writing. The signature of the callback should be as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ee2a56e96d930696fde2f9c453303592a9643c4" translate="yes" xml:space="preserve">
          <source>A callback that will be called if the access should be denied to the current user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a879888cf106533c7d134ab4738854d5cda9d3a" translate="yes" xml:space="preserve">
          <source>A callback that will be called if the access should be denied to the current user. If not set, &lt;a href=&quot;yii-filters-accesscontrol#denyAccess()-detail&quot;&gt;denyAccess()&lt;/a&gt; will be called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67acf8e4ffc23f9abeecfaf9bec8c839c1743bc8" translate="yes" xml:space="preserve">
          <source>A callback that will be called if the current host does not match &lt;a href=&quot;yii-filters-hostcontrol#%24allowedHosts-detail&quot;&gt;$allowedHosts&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dfe54c7482df571b51362e0ca2b34508592e421" translate="yes" xml:space="preserve">
          <source>A callback that will be called if the current host does not match &lt;a href=&quot;yii-filters-hostcontrol#%24allowedHosts-detail&quot;&gt;$allowedHosts&lt;/a&gt;. If not set, &lt;a href=&quot;yii-filters-hostcontrol#denyAccess()-detail&quot;&gt;denyAccess()&lt;/a&gt; will be called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6112b34dd5337bcbc85d35dfb37d93c9cf46de8d" translate="yes" xml:space="preserve">
          <source>A callback that will be called if this rule determines the access to the current action should be denied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="451eb53ef4f3ecd59bed86fe6ece6f4461bae91f" translate="yes" xml:space="preserve">
          <source>A callback that will be called if this rule determines the access to the current action should be denied. If not set, the behavior will be determined by &lt;a href=&quot;yii-filters-accesscontrol&quot;&gt;yii\filters\AccessControl&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b9b5a5dc2fa8c617965d9feb1d1c7f010b67e11" translate="yes" xml:space="preserve">
          <source>A callback that will be called to determine if the rule should be applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e2d413586376610da9833522cafc7363f8cbfc1" translate="yes" xml:space="preserve">
          <source>A callback that will be called to determine if the rule should be applied. The signature of the callback should be as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eefe82e5e2ae3c9c1226e14729051f8c56a58c4b" translate="yes" xml:space="preserve">
          <source>A callback that will be called to produce hash for asset directory generation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71ee64add5ff41caf49b05efcc430d45e42f2dae" translate="yes" xml:space="preserve">
          <source>A callback that will be called to produce hash for asset directory generation. The signature of the callback should be as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ef7ef0e189cb84a1fc135e99dd829781697b07e" translate="yes" xml:space="preserve">
          <source>A changelog file in the package root directory: it lists what changes are made in each release. The file may be written in Markdown format and named as &lt;code&gt;changelog.md&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d27becb22e3f87f54be955873a8894806efcb8d5" translate="yes" xml:space="preserve">
          <source>A checkbox list allows multiple selection, like &lt;a href=&quot;yii-helpers-basehtml#listBox()-detail&quot;&gt;listBox()&lt;/a&gt;. As a result, the corresponding submitted value is an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57c585651e7820949684345f28de2351cd3b5c61" translate="yes" xml:space="preserve">
          <source>A checkbox list allows multiple selection, like &lt;a href=&quot;yii-helpers-basehtml#listBox()-detail&quot;&gt;listBox()&lt;/a&gt;. As a result, the corresponding submitted value is an array. The selection of the checkbox list is taken from the value of the model attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23f335e740ffee78c418d2e616db94e3ed4d734a" translate="yes" xml:space="preserve">
          <source>A checkbox list allows multiple selection, like &lt;a href=&quot;yii-widgets-activefield#listBox()-detail&quot;&gt;listBox()&lt;/a&gt;. As a result, the corresponding submitted value is an array. The selection of the checkbox list is taken from the value of the model attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d66574da3325100a3ff19ab6ad97dad9b9f666de" translate="yes" xml:space="preserve">
          <source>A class implementing this interface should also use &lt;a href=&quot;yii-db-activequerytrait&quot;&gt;yii\db\ActiveQueryTrait&lt;/a&gt; and &lt;a href=&quot;yii-db-activerelationtrait&quot;&gt;yii\db\ActiveRelationTrait&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="750fdc31aa11632195eafdba3faf6688773054d3" translate="yes" xml:space="preserve">
          <source>A class method can be defined like the &lt;code&gt;doSomething()&lt;/code&gt; method in the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a97984c4960fee92780e50f0aa1834b9d870cb5f" translate="yes" xml:space="preserve">
          <source>A collection object is usually created by calling &lt;a href=&quot;yii-mongodb-database#getCollection()-detail&quot;&gt;yii\mongodb\Database::getCollection()&lt;/a&gt; or &lt;a href=&quot;yii-mongodb-connection#getCollection()-detail&quot;&gt;yii\mongodb\Connection::getCollection()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4749ea0d8bb99358eb66e7f6c6dbfd50a8586ae" translate="yes" xml:space="preserve">
          <source>A command object is usually created by calling &lt;a href=&quot;yii-db-connection#createCommand()-detail&quot;&gt;yii\db\Connection::createCommand()&lt;/a&gt;. The SQL statement it represents can be set via the &lt;a href=&quot;yii-db-command#%24sql-detail&quot;&gt;$sql&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c4a43c195b1392db18662f7c89b8b1f2ecd9685" translate="yes" xml:space="preserve">
          <source>A command object is usually created by calling &lt;a href=&quot;yii-mongodb-connection#createCommand()-detail&quot;&gt;yii\mongodb\Connection::createCommand()&lt;/a&gt; or &lt;a href=&quot;yii-mongodb-database#createCommand()-detail&quot;&gt;yii\mongodb\Database::createCommand()&lt;/a&gt;. The statement it represents can be set via the &lt;a href=&quot;yii-mongodb-command#%24document-detail&quot;&gt;$document&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="951c179cec1e6bd37899ec2ac7c96e11ec8b8a93" translate="yes" xml:space="preserve">
          <source>A command object is usually created by calling &lt;a href=&quot;yii-sphinx-connection#createCommand()-detail&quot;&gt;yii\sphinx\Connection::createCommand()&lt;/a&gt;. The SQL statement it represents can be set via the &lt;a href=&quot;yii-db-command#%24sql-detail&quot;&gt;$sql&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a308c067bdf45f7145c93ae414f5d618c681d39" translate="yes" xml:space="preserve">
          <source>A common strategy of defining a cache key is to include all determining factors in terms of an array. For example, &lt;a href=&quot;yii-db-schema&quot;&gt;yii\db\Schema&lt;/a&gt; uses the following key to cache schema information about a database table:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="571f7d0659178ebbbc305b42e22df1861dba869b" translate="yes" xml:space="preserve">
          <source>A complete processing of user input is shown in the following example code, which will ensure only integer values are stored in an attribute:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1c33fa3475341ab0bcb4e04acd9c80feb69b705" translate="yes" xml:space="preserve">
          <source>A condition in hash format represents the following SQL expression in general: &lt;code&gt;column1=value1 AND column2=value2 AND ...&lt;/code&gt;. In case when a value is an array, an &lt;code&gt;IN&lt;/code&gt; expression will be generated. And if a value is &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;IS NULL&lt;/code&gt; will be used in the generated expression. Below are some examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8b3d036f35509a735bccc34423fd872d862dcbd" translate="yes" xml:space="preserve">
          <source>A condition in operator format generates the SQL expression according to the specified operator, which can be one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba04898eba26d7e29d42796c2849c97b4140a39e" translate="yes" xml:space="preserve">
          <source>A console application consists of one or several possible user commands;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b9fef7564108e7634aaa67df0e472766a381733" translate="yes" xml:space="preserve">
          <source>A console command is defined as a controller class extending from &lt;a href=&quot;yii-console-controller&quot;&gt;yii\console\Controller&lt;/a&gt;. In the controller class, you define one or more actions that correspond to sub-commands of the controller. Within each action, you write code that implements the appropriate tasks for that particular sub-command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e7ff9aa6f4469f00b9ebb21a309557ab2b120d6" translate="yes" xml:space="preserve">
          <source>A console controller consists of one or several actions known as sub-commands. Users call a console command by specifying the corresponding route which identifies a controller action. The &lt;code&gt;yii&lt;/code&gt; program is used when calling a console command, like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4199e348d1c525154564b49609856012aad67316" translate="yes" xml:space="preserve">
          <source>A constant representing the transaction isolation level &lt;code&gt;READ COMMITTED&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3d2acd697cd32d24b36f7c58d4d1693e6166eaa" translate="yes" xml:space="preserve">
          <source>A constant representing the transaction isolation level &lt;code&gt;READ UNCOMMITTED&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14fe3499298ac39ec7c3b213264c34a7416fa65e" translate="yes" xml:space="preserve">
          <source>A constant representing the transaction isolation level &lt;code&gt;REPEATABLE READ&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b2f5ecc1970859e271f42c367b1d66674038481" translate="yes" xml:space="preserve">
          <source>A constant representing the transaction isolation level &lt;code&gt;SERIALIZABLE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8248a6dc202b1b894d692ba962c0f7fd1a3d52b7" translate="yes" xml:space="preserve">
          <source>A controller ID may also contain a subdirectory prefix. For example, &lt;code&gt;admin/article&lt;/code&gt; stands for an &lt;code&gt;article&lt;/code&gt; controller in the &lt;code&gt;admin&lt;/code&gt; subdirectory under the &lt;a href=&quot;yii-base-application#%24controllerNamespace-detail&quot;&gt;controller namespace&lt;/a&gt;. Valid characters for subdirectory prefixes include: English letters in lower and upper cases, digits, underscores, and forward slashes, where forward slashes are used as separators for multi-level subdirectories (e.g. &lt;code&gt;panels/admin&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79b4bc968f1e6b6afabdbf68f0085a0a95d44a1c" translate="yes" xml:space="preserve">
          <source>A counter used to generate &lt;a href=&quot;yii-base-widget#%24id-detail&quot;&gt;$id&lt;/a&gt; for widgets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75203b567ca5ce9cffe1c94064d5bda5e60f60b2" translate="yes" xml:space="preserve">
          <source>A data column differentiates between the &lt;a href=&quot;yii-grid-datacolumn#getDataCellValue()-detail&quot;&gt;data cell value&lt;/a&gt; and the &lt;a href=&quot;yii-grid-datacolumn#renderDataCellContent()-detail&quot;&gt;data cell content&lt;/a&gt;. The cell value is an un-formatted value that may be used for calculation, while the actual cell content is a &lt;a href=&quot;yii-grid-datacolumn#%24format-detail&quot;&gt;formatted&lt;/a&gt; version of that value which may contain HTML markup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eff7e1e253ab940829f9b30c3048df3414cbcf0" translate="yes" xml:space="preserve">
          <source>A data item can be stored in the cache by calling &lt;a href=&quot;yii-caching-cache#set()-detail&quot;&gt;set()&lt;/a&gt; and be retrieved back later (in the same or different request) by &lt;a href=&quot;yii-caching-cache#get()-detail&quot;&gt;get()&lt;/a&gt;. In both operations, a key identifying the data item is required. An expiration time and/or a &lt;a href=&quot;yii-caching-dependency&quot;&gt;dependency&lt;/a&gt; can also be specified when calling &lt;a href=&quot;yii-caching-cache#set()-detail&quot;&gt;set()&lt;/a&gt;. If the data item expires or the dependency changes at the time of calling &lt;a href=&quot;yii-caching-cache#get()-detail&quot;&gt;get()&lt;/a&gt;, the cache will return no data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e84e0d12cfa497f7969fc3d4547f5fae2dbd5ba" translate="yes" xml:space="preserve">
          <source>A data item can be stored in the cache by calling &lt;a href=&quot;yii-caching-cacheinterface#set()-detail&quot;&gt;set()&lt;/a&gt; and be retrieved back later (in the same or different request) by &lt;a href=&quot;yii-caching-cacheinterface#get()-detail&quot;&gt;get()&lt;/a&gt;. In both operations, a key identifying the data item is required. An expiration time and/or a &lt;a href=&quot;yii-caching-dependency&quot;&gt;dependency&lt;/a&gt; can also be specified when calling &lt;a href=&quot;yii-caching-cacheinterface#set()-detail&quot;&gt;set()&lt;/a&gt;. If the data item expires or the dependency changes at the time of calling &lt;a href=&quot;yii-caching-cacheinterface#get()-detail&quot;&gt;get()&lt;/a&gt;, the cache will return no data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b586541ccb8c669391f82376016ac1b547a6fef4" translate="yes" xml:space="preserve">
          <source>A data item stored in a cache will remain there forever unless it is removed because of some caching policy enforcement (e.g. caching space is full and the oldest data are removed). To change this behavior, you can provide an expiration parameter when calling &lt;a href=&quot;yii-caching-cache#set()-detail&quot;&gt;set()&lt;/a&gt; to store a data item. The parameter indicates for how many seconds the data item can remain valid in the cache. When you call &lt;a href=&quot;yii-caching-cache#get()-detail&quot;&gt;get()&lt;/a&gt; to retrieve the data item, if it has passed the expiration time, the method will return &lt;code&gt;false&lt;/code&gt;, indicating the data item is not found in the cache. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21c6268048d79252e6c44f9a5bc017a7a4cbc97d" translate="yes" xml:space="preserve">
          <source>A data provider is a class implementing &lt;a href=&quot;yii-data-dataproviderinterface&quot;&gt;yii\data\DataProviderInterface&lt;/a&gt;. It mainly supports retrieving paginated and sorted data. It is usually used to work with &lt;a href=&quot;guide-output-data-widgets&quot;&gt;data widgets&lt;/a&gt; so that end users can interactively paginate and sort data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c5af291e93cc7247fcb4037cc643316b54c9fe4" translate="yes" xml:space="preserve">
          <source>A default role is a role that is &lt;em&gt;implicitly&lt;/em&gt; assigned to &lt;em&gt;all&lt;/em&gt; users. The call to &lt;a href=&quot;yii-rbac-managerinterface#assign()-detail&quot;&gt;yii\rbac\ManagerInterface::assign()&lt;/a&gt; is not needed, and the authorization data does not contain its assignment information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc5edfd855e7e6f662efe7b56018dfc1c6c224b7" translate="yes" xml:space="preserve">
          <source>A default role is usually associated with a rule which determines if the role applies to the user being checked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5da568ecb9bc9ba951f10b55c10dc83f5e324560" translate="yes" xml:space="preserve">
          <source>A dependency injection (DI) container is an object that knows how to instantiate and configure objects and all their dependent objects. &lt;a href=&quot;http://martinfowler.com/articles/injection.html&quot;&gt;Martin Fowler's article&lt;/a&gt; has well explained why DI container is useful. Here we will mainly explain the usage of the DI container provided by Yii.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7ea82838a42da64991e52ede1019be816658248" translate="yes" xml:space="preserve">
          <source>A dependency injection (DI) container is an object that knows how to instantiate and configure objects and all their dependent objects. For more information about DI, please refer to &lt;a href=&quot;http://martinfowler.com/articles/injection.html&quot;&gt;Martin Fowler's article&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ffa8a37257fe2acff0534c427794988f0d172fb" translate="yes" xml:space="preserve">
          <source>A dependency registered via &lt;code&gt;set()&lt;/code&gt; will generate an instance each time the dependency is needed. You can use &lt;a href=&quot;yii-di-container#setSingleton()-detail&quot;&gt;yii\di\Container::setSingleton()&lt;/a&gt; to register a dependency that only generates a single instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3742d1b4dff865e3198250a313e43575c46c2c2e" translate="yes" xml:space="preserve">
          <source>A developer often has to check, what actual emails are sent by the application, what was their content and so on. Such ability is granted by Yii via &lt;code&gt;yii\mail\BaseMailer::useFileTransport&lt;/code&gt;. If enabled, this option enforces saving mail message data into the local files instead of regular sending. These files will be saved under &lt;code&gt;yii\mail\BaseMailer::fileTransportPath&lt;/code&gt;, which is &lt;code&gt;@runtime/mail&lt;/code&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce89a98e177d0c035bb064e99e4946399b79a1a4" translate="yes" xml:space="preserve">
          <source>A disadvantage of using this method would be that, if the information isn't loaded on the SQL query - it has to be calculated separately. Thus, if you have found particular record via regular query without extra select statements, it will be unable to return actual value for the extra field. Same will happen for the newly saved record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fce7381f6906e52b149b3c5db3977949b929fa8" translate="yes" xml:space="preserve">
          <source>A dynamic content means a fragment of output that should not be cached even if it is enclosed within a fragment cache. To make the content dynamic all the time, it has to be generated by executing some PHP code for every request, even if the enclosing content is being served from cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e5f75d5448f1e4be556f0b019963b1a22ad7ea5" translate="yes" xml:space="preserve">
          <source>A field is a named element in the returned array by &lt;a href=&quot;yii-base-arrayable#toArray()-detail&quot;&gt;toArray()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daf8dd03fab1f374be8abeb1f5cb005eb2aa5a29" translate="yes" xml:space="preserve">
          <source>A field is a named element in the returned array by &lt;a href=&quot;yii-base-arrayabletrait#toArray()-detail&quot;&gt;toArray()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ea5fdb6d48bbe695914f2d18bcefdb2358cc383" translate="yes" xml:space="preserve">
          <source>A field is simply a named element in the array that is obtained by calling the &lt;a href=&quot;yii-base-arrayabletrait#toArray()-detail&quot;&gt;yii\base\Model::toArray()&lt;/a&gt; method of a model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f4bdf1b432c983eeaab711702315800d5ec06cb" translate="yes" xml:space="preserve">
          <source>A field name to include as is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c38129eca8260e448344185df0236141e263d1eb" translate="yes" xml:space="preserve">
          <source>A file collection object is usually created by calling \yii\mongodb\file\Database::getFileCollection() or \yii\mongodb\file\Connection::getFileCollection().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecce7b8433817015d159e5b407875ab58ecdb56b" translate="yes" xml:space="preserve">
          <source>A filter may consist of a pre-filter (filtering logic applied &lt;em&gt;before&lt;/em&gt; actions) and/or a post-filter (logic applied &lt;em&gt;after&lt;/em&gt; actions).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3648dd11081eea44a4f6d467d519b799cd08c40" translate="yes" xml:space="preserve">
          <source>A fixture may depend on other fixtures, specified via its &lt;a href=&quot;yii-test-fixture#%24depends-detail&quot;&gt;yii\test\Fixture::$depends&lt;/a&gt; property. When a fixture is being loaded, the fixtures it depends on will be automatically loaded BEFORE the fixture; and when the fixture is being unloaded, the dependent fixtures will be unloaded AFTER the fixture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4810cbda724fb65530c433f32b997209cacf48b6" translate="yes" xml:space="preserve">
          <source>A fixture may depend on other fixtures, specified via the &lt;a href=&quot;yii-test-fixture#%24depends-detail&quot;&gt;$depends&lt;/a&gt; property. When a fixture is being loaded, its dependent fixtures will be automatically loaded BEFORE the fixture; and when the fixture is being unloaded, its dependent fixtures will be unloaded AFTER the fixture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5faf6404e87452058ee47859905162c1fd2e6d7b" translate="yes" xml:space="preserve">
          <source>A flash message will be automatically deleted after it is accessed in a request and the deletion will happen in the next request. If there is already an existing flash message with the same key, it will be overwritten by the new one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd14527e5b6fd4f62c168abaf30d3c5b668f416d" translate="yes" xml:space="preserve">
          <source>A form field is associated with a model and an attribute. It contains a label, an input and an error message and use them to interact with end users to collect their inputs for the attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e056f10c93f21e3ce4be575850607e2dba422dd0" translate="yes" xml:space="preserve">
          <source>A form, that is displayed on the client-side, will in most cases have a corresponding &lt;a href=&quot;guide-structure-models&quot;&gt;model&lt;/a&gt; which is used to validate its input on the server-side (Check the &lt;a href=&quot;guide-input-validation&quot;&gt;Validating Input&lt;/a&gt; section for more details on validation). When creating model-based forms, the first step is to define the model itself. The model can be either based upon an &lt;a href=&quot;guide-db-active-record&quot;&gt;Active Record&lt;/a&gt; class, representing some data from the database, or a generic Model class (extending from &lt;a href=&quot;yii-base-model&quot;&gt;yii\base\Model&lt;/a&gt;) to capture arbitrary input, for example a login form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80d468797ba7c06d85cb817614db6a57c696e52c" translate="yes" xml:space="preserve">
          <source>A function may be used to assign different attributes to different rows based on the data in that row. Specifically if you want to set a different value for the radio button you can use this option in the following way (in this example using the &lt;code&gt;name&lt;/code&gt; attribute of the model): &lt;code&gt;`&lt;/code&gt;php 'radioOptions' =&amp;gt; function ($model, $key, $index, $column) {</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0bc169de8e952591ed52b8ffeebeeafdbfeeb30" translate="yes" xml:space="preserve">
          <source>A generator class typically needs to implement the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b98b89f903ceddf57902cb09069095fb950125c1" translate="yes" xml:space="preserve">
          <source>A generator instance is responsible for taking user inputs, validating them, and using them to generate the corresponding code based on a set of code template files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f538a8133193ea0ece08112fd5f480e861d27a9" translate="yes" xml:space="preserve">
          <source>A getter method is a method whose name starts with the word &lt;code&gt;get&lt;/code&gt;; a setter method starts with &lt;code&gt;set&lt;/code&gt;. The name after the &lt;code&gt;get&lt;/code&gt; or &lt;code&gt;set&lt;/code&gt; prefix defines the name of a property. For example, a getter &lt;code&gt;getLabel()&lt;/code&gt; and/or a setter &lt;code&gt;setLabel()&lt;/code&gt; defines a property named &lt;code&gt;label&lt;/code&gt;, as shown in the following code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb320a21eeee4077f50a86a5d5a57518c6bba62d" translate="yes" xml:space="preserve">
          <source>A good example could be &lt;code&gt;app\storage\FileStorage&lt;/code&gt; class, that executes some operations on file system with a simple API (e.g. &lt;code&gt;$fs-&amp;gt;read()&lt;/code&gt;, &lt;code&gt;$fs-&amp;gt;write()&lt;/code&gt;). These operations do not change the internal class state, so we can create its instance once and use it multiple times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57e2626cc09c24be65e2d528a18b284e3f977a3c" translate="yes" xml:space="preserve">
          <source>A hash algorithm supported by &lt;code&gt;hash_hmac()&lt;/code&gt;, e.g. 'SHA-256'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e7e8776b8bb334adfa997543f2348cd4c541ab" translate="yes" xml:space="preserve">
          <source>A hash code generated from the CAPTCHA code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="168133b92a45de70d9312072926cafe95775fbfd" translate="yes" xml:space="preserve">
          <source>A hint to indicate the media type expected when dereferencing the target resource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d15403459e2c64eae2bc5ab14392285f80e93e6" translate="yes" xml:space="preserve">
          <source>A json encoded array with the given keywords</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca276f34232d9067229d400aed89f4fc9aa1f3c9" translate="yes" xml:space="preserve">
          <source>A key concept in the Yii fixture framework is the so-called &lt;em&gt;fixture object&lt;/em&gt;. A fixture object represents a particular aspect of a test environment and is an instance of &lt;a href=&quot;yii-test-fixture&quot;&gt;yii\test\Fixture&lt;/a&gt; or its child class. For example, you may use &lt;code&gt;UserFixture&lt;/code&gt; to make sure the user DB table contains a fixed set of data. You load one or multiple fixture objects before running a test and unload them when finishing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18103a30a5b40aeb615a31b95ca57b75603e84d2" translate="yes" xml:space="preserve">
          <source>A key identifying the cached value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a592fd320fc5fbe6f68e7e4fd22610c903e31509" translate="yes" xml:space="preserve">
          <source>A key identifying the cached value. This can be a simple string or a complex data structure consisting of factors representing the key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1371b8b87aded235b743eeefaaafbdd17b683477" translate="yes" xml:space="preserve">
          <source>A key identifying the value to be cached. This can be a simple string or a complex data structure consisting of factors representing the key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16f14560acbb2e75e617be93fce00badb6b2a91d" translate="yes" xml:space="preserve">
          <source>A key identifying the value to be deleted from cache. This can be a simple string or a complex data structure consisting of factors representing the key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bc9e9c684538f7dfbd1383b4361742b9a59bd82" translate="yes" xml:space="preserve">
          <source>A key that is used to check the validity of a given identity ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78226c8aa050a25cb79c7a26a14c979b8d6c8afb" translate="yes" xml:space="preserve">
          <source>A key-value pair of desired array key name and a callback which returns value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58a40d0a3f373727c9e0fa902bf502308dcb7dac" translate="yes" xml:space="preserve">
          <source>A key-value pair of desired array key name and model column name to take value from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a805c4a8229f596a7cc7d7923f1e9c179c2f4b14" translate="yes" xml:space="preserve">
          <source>A label describing the link</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e03c773ddc7f9b6584d6dc52c5ade35b8a17523f" translate="yes" xml:space="preserve">
          <source>A label of the item group &lt;a href=&quot;yii-bootstrap-collapse#%24items-detail&quot;&gt;$items&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dba811fb3481429803fac41e96fe4b2f24a249b" translate="yes" xml:space="preserve">
          <source>A list of access rule objects or configuration arrays for creating the rule objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9976e529715fb25f34c02683e2e327fcbb02fdff" translate="yes" xml:space="preserve">
          <source>A list of access rule objects or configuration arrays for creating the rule objects. If a rule is specified via a configuration array, it will be merged with &lt;a href=&quot;yii-filters-accesscontrol#%24ruleConfig-detail&quot;&gt;$ruleConfig&lt;/a&gt; first before it is used for creating the rule object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29a9f1a5ed6761e1a95f74c506ac788893d443b5" translate="yes" xml:space="preserve">
          <source>A list of all available methods for defining the column types is available in the API documentation of &lt;a href=&quot;yii-db-schemabuildertrait&quot;&gt;yii\db\SchemaBuilderTrait&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c555bfcd288ccb9b61608e89c034ee3d5508868e" translate="yes" xml:space="preserve">
          <source>A list of arrays with highlighted excerpts indexed by field names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4898a1fe8f052752d2087b19ae643f8575be6c55" translate="yes" xml:space="preserve">
          <source>A list of attributes that should be treated as array valued when retrieved through &lt;a href=&quot;yii-elasticsearch-query#fields()-detail&quot;&gt;yii\elasticsearch\ActiveQuery::fields()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05f5ff8516eff2451237f0702a8cc66bb331bb10" translate="yes" xml:space="preserve">
          <source>A list of attributes to be displayed in the detail view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ca5f89d281b57dd92935bcd9b6d98699c2b43d6" translate="yes" xml:space="preserve">
          <source>A list of attributes to be displayed in the detail view. Each array element represents the specification for displaying one particular attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39bed4e83c0f26ecf2a14e45158b7fdf36398eab" translate="yes" xml:space="preserve">
          <source>A list of available code templates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="003ddb710d9dcda34015e777fda3d856ad5f0e3e" translate="yes" xml:space="preserve">
          <source>A list of available code templates. The array keys are the template names, and the array values are the corresponding template paths or path aliases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59de6f55f3d81b6e5f3ac90ec52879b2a26518ee" translate="yes" xml:space="preserve">
          <source>A list of available renderers indexed by their corresponding supported file extensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c47824a2eea91b9181470292a68970a9c1b35a89" translate="yes" xml:space="preserve">
          <source>A list of available renderers indexed by their corresponding supported file extensions. Each renderer may be a view renderer object or the configuration for creating the renderer object. For example, the following configuration enables both Smarty and Twig view renderers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="966206007a807f6c2e7fc67e28a560f65a60ec86" translate="yes" xml:space="preserve">
          <source>A list of cached values indexed by the keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a2f45f2919a3c520d3dba06200f65b548d04838" translate="yes" xml:space="preserve">
          <source>A list of code files to be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f51a3b08db2cea26de1496079233dcebaed34d1" translate="yes" xml:space="preserve">
          <source>A list of constructor parameter values. The parameters should be provided in the order they appear in the constructor declaration. If you want to skip some parameters, you should index the remaining ones with the integers that represent their positions in the constructor parameter list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fd99c2b74bebcf64a6d230c6f6de85241528560" translate="yes" xml:space="preserve">
          <source>A list of currently active fragment cache widgets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51b80178b52c774bc78f22969a544a267f7d12d8" translate="yes" xml:space="preserve">
          <source>A list of currently active fragment cache widgets. This property is used internally to implement the content caching feature. Do not modify it directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c1155a51a8ee24040964f8465773123ec8718d9" translate="yes" xml:space="preserve">
          <source>A list of errors. The array keys must be attribute names. The array values should be error messages. If an attribute has multiple errors, these errors must be given in terms of an array. You may use the result of &lt;a href=&quot;yii-base-model#getErrors()-detail&quot;&gt;getErrors()&lt;/a&gt; as the value for this parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e79673a378403e8ac9510ea8c9810766aaeda82a" translate="yes" xml:space="preserve">
          <source>A list of file MIME types that are allowed to be uploaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d48fc0b56483b2bacb23bc213f84781927b6a07" translate="yes" xml:space="preserve">
          <source>A list of file MIME types that are allowed to be uploaded. This can be either an array or a string consisting of file MIME types separated by space or comma (e.g. &quot;text/plain, image/png&quot;). The mask with the special character &lt;code&gt;*&lt;/code&gt; can be used to match groups of mime types. For example &lt;code&gt;image/*&lt;/code&gt; will pass all mime types, that begin with &lt;code&gt;image/&lt;/code&gt; (e.g. &lt;code&gt;image/jpeg&lt;/code&gt;, &lt;code&gt;image/png&lt;/code&gt;). Mime type names are case-insensitive. Defaults to null, meaning all MIME types are allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b27c163f4d92dc723a6c953a5df1926cc312dde" translate="yes" xml:space="preserve">
          <source>A list of file name extensions that are allowed to be uploaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7267185caf3143c007b6bf0fa78fa0e0f26b8619" translate="yes" xml:space="preserve">
          <source>A list of file name extensions that are allowed to be uploaded. This can be either an array or a string consisting of file extension names separated by space or comma (e.g. &quot;gif, jpg&quot;). Extension names are case-insensitive. Defaults to null, meaning all file name extensions are allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab78cd9f7a94a6e4ec1bd47054db85570c77efba" translate="yes" xml:space="preserve">
          <source>A list of generator configurations or instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53aa0b2cb2b73f4fd1ac11d35a2bcd792c96e2e8" translate="yes" xml:space="preserve">
          <source>A list of generator configurations or instances. The array keys are the generator IDs (e.g. &quot;crud&quot;), and the array elements are the corresponding generator configurations or the instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebb6c8c28fe76feee24cec58a9c20a1a6f11a178" translate="yes" xml:space="preserve">
          <source>A list of keys identifying the cached values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c76471271059c891416423b352c9e4f250b5c31" translate="yes" xml:space="preserve">
          <source>A list of name value pairs that are passed to the intl &lt;a href=&quot;http://php.net/manual/en/numberformatter.setattribute.php&quot;&gt;NumberFormatter::setAttribute()&lt;/a&gt; method of all the number formatter objects created by &lt;a href=&quot;yii-i18n-formatter#createNumberFormatter()-detail&quot;&gt;createNumberFormatter()&lt;/a&gt;. This property takes only effect if the &lt;a href=&quot;http://php.net/manual/en/book.intl.php&quot;&gt;PHP intl extension&lt;/a&gt; is installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3690f6bf15d9d70f9902a73d7dc3a133babe6e7d" translate="yes" xml:space="preserve">
          <source>A list of name value pairs that are passed to the intl &lt;a href=&quot;http://php.net/manual/en/numberformatter.setsymbol.php&quot;&gt;NumberFormatter::setSymbol()&lt;/a&gt; method of all the number formatter objects created by &lt;a href=&quot;yii-i18n-formatter#createNumberFormatter()-detail&quot;&gt;createNumberFormatter()&lt;/a&gt;. This property takes only effect if the &lt;a href=&quot;http://php.net/manual/en/book.intl.php&quot;&gt;PHP intl extension&lt;/a&gt; is installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ddc70a09706ff7792d1f7ce6e68b0f6a5b3ed13" translate="yes" xml:space="preserve">
          <source>A list of name value pairs that are passed to the intl &lt;a href=&quot;http://php.net/manual/en/numberformatter.settextattribute.php&quot;&gt;NumberFormatter::setTextAttribute()&lt;/a&gt; method of all the number formatter objects created by &lt;a href=&quot;yii-i18n-formatter#createNumberFormatter()-detail&quot;&gt;createNumberFormatter()&lt;/a&gt;. This property takes only effect if the &lt;a href=&quot;http://php.net/manual/en/book.intl.php&quot;&gt;PHP intl extension&lt;/a&gt; is installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67645a9851e4381841026edd8dbd893d581f9187" translate="yes" xml:space="preserve">
          <source>A list of name value pairs that are passed to the intl &lt;a href=&quot;https://php.net/manual/en/numberformatter.setattribute.php&quot;&gt;NumberFormatter::setAttribute()&lt;/a&gt; method of all the number formatter objects created by &lt;a href=&quot;yii-i18n-formatter#createNumberFormatter()-detail&quot;&gt;createNumberFormatter()&lt;/a&gt;. This property takes only effect if the &lt;a href=&quot;https://php.net/manual/en/book.intl.php&quot;&gt;PHP intl extension&lt;/a&gt; is installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c734fcf66c16cb0a572ecd453686374a7215a4f" translate="yes" xml:space="preserve">
          <source>A list of name value pairs that are passed to the intl &lt;a href=&quot;https://php.net/manual/en/numberformatter.setsymbol.php&quot;&gt;NumberFormatter::setSymbol()&lt;/a&gt; method of all the number formatter objects created by &lt;a href=&quot;yii-i18n-formatter#createNumberFormatter()-detail&quot;&gt;createNumberFormatter()&lt;/a&gt;. This property takes only effect if the &lt;a href=&quot;https://php.net/manual/en/book.intl.php&quot;&gt;PHP intl extension&lt;/a&gt; is installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60dfe83ccfbd613cc816aca66ac01d3bd05b5761" translate="yes" xml:space="preserve">
          <source>A list of name value pairs that are passed to the intl &lt;a href=&quot;https://php.net/manual/en/numberformatter.settextattribute.php&quot;&gt;NumberFormatter::setTextAttribute()&lt;/a&gt; method of all the number formatter objects created by &lt;a href=&quot;yii-i18n-formatter#createNumberFormatter()-detail&quot;&gt;createNumberFormatter()&lt;/a&gt;. This property takes only effect if the &lt;a href=&quot;https://php.net/manual/en/book.intl.php&quot;&gt;PHP intl extension&lt;/a&gt; is installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b82a7abe53b05a5fd66367682371c4dde54ca26" translate="yes" xml:space="preserve">
          <source>A list of name value pairs that are passed to the intl [NumberFormatter::setAttribute()](&lt;a href=&quot;http://php&quot;&gt;http://php&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7770f9f6a49261e8b3ad4245d0ea1d5cd1cc5f67" translate="yes" xml:space="preserve">
          <source>A list of name value pairs that are passed to the intl [NumberFormatter::setSymbol()](&lt;a href=&quot;http://php&quot;&gt;http://php&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="255fa93c8ab22f08263d44f0c9a2bf357eb00cb4" translate="yes" xml:space="preserve">
          <source>A list of name value pairs that are passed to the intl [NumberFormatter::setTextAttribute()](&lt;a href=&quot;http://php&quot;&gt;http://php&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1708c588bb5859718811f8c0d5cc1bd319e3a03" translate="yes" xml:space="preserve">
          <source>A list of name-value pairs that will be used to initialize the object properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28d351f387840d30fe2ffa01a91cd43bc9d199c6" translate="yes" xml:space="preserve">
          <source>A list of named output blocks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f51cf3b6cb871253a76825485b234b4c7cd392e" translate="yes" xml:space="preserve">
          <source>A list of named output blocks. The keys are the block names and the values are the corresponding block content. You can call &lt;a href=&quot;yii-base-view#beginBlock()-detail&quot;&gt;beginBlock()&lt;/a&gt; and &lt;a href=&quot;yii-base-view#endBlock()-detail&quot;&gt;endBlock()&lt;/a&gt; to capture small fragments of a view. They can be later accessed somewhere else through this property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3328a467ae83dcdb66f5941d5791aa23c385fca2" translate="yes" xml:space="preserve">
          <source>A list of placeholders for embedding dynamic contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbbc0d2ef4c7d4d14f70d36d364343813a0d5946" translate="yes" xml:space="preserve">
          <source>A list of placeholders for embedding dynamic contents. This property is used internally to implement the content caching feature. Do not modify it directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d42fdee3fd5359d0400e11940687fa355b13bb" translate="yes" xml:space="preserve">
          <source>A list of placeholders for embedding dynamic contents. This property is used internally to implement the content caching feature. Do not modify it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32a37a6d8dc3fefc2eda1ad87084c8c3a2e7ac59" translate="yes" xml:space="preserve">
          <source>A list of relations that this query should be joined with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c65eb5b8e50f47ad12d5e7903d4eae6c8df14f7" translate="yes" xml:space="preserve">
          <source>A list of relations that this query should be performed with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="294b802ec21f7f03d460bc92bef0bd6760906af4" translate="yes" xml:space="preserve">
          <source>A list of relations that this query should be performed with. Please refer to &lt;a href=&quot;yii-db-activequerytrait#with()-detail&quot;&gt;with()&lt;/a&gt; for details about specifying this parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a0750b714031855edbec70eda80feac9220708" translate="yes" xml:space="preserve">
          <source>A list of role names that are assigned to every user automatically without calling &lt;a href=&quot;yii-rbac-managerinterface#assign()-detail&quot;&gt;assign()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5ecc5c2434c4bab76633bd0a22c05188a4c40b0" translate="yes" xml:space="preserve">
          <source>A list of scenarios and the corresponding active attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1aa30a36445f062d0b0b8d274e1e23082c0bb55" translate="yes" xml:space="preserve">
          <source>A list of suggested alternatives sorted by similarity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e5ff253cb62620f4d21eee81978e3713628d610" translate="yes" xml:space="preserve">
          <source>A list of supported languages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb57a3f92db0a03ccc8f6902b6bbe86257464f70" translate="yes" xml:space="preserve">
          <source>A list of supported languages. The array keys are the supported language variants (e.g. &lt;code&gt;en-GB&lt;/code&gt;, &lt;code&gt;en-US&lt;/code&gt;), while the array values are the corresponding language codes (e.g. &lt;code&gt;en&lt;/code&gt;, &lt;code&gt;de&lt;/code&gt;) recognized by the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cbc7ec88d12ac80a30aad849ce4bcc62cc8845c" translate="yes" xml:space="preserve">
          <source>A list of tag names for this dependency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e93fa643eb9f1ab0a001767484af9c9dae853221" translate="yes" xml:space="preserve">
          <source>A list of tag names for this dependency. For a single tag, you may specify it as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="924c0f78d759f6be73a579a41489f3b85d69ac26" translate="yes" xml:space="preserve">
          <source>A list of the available code generators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a669a5965e94038b4fa61202f05c955d0f7498b" translate="yes" xml:space="preserve">
          <source>A list of the languages supported by the application. If this is empty, the current application language will be returned without further processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d204d6f3ae2f7627f4cc4f2f85767ebefb88fda" translate="yes" xml:space="preserve">
          <source>A list of valid values that the attribute value should be among or an anonymous function that returns such a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94ed317f66d61f2f9f58610d31ddd5755bf92a26" translate="yes" xml:space="preserve">
          <source>A list of valid values that the attribute value should be among or an anonymous function that returns such a list. The signature of the anonymous function should be as follows,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15f17ca12dcb596c5a325f6592459326642a2974" translate="yes" xml:space="preserve">
          <source>A log target is an instance of the &lt;a href=&quot;yii-log-target&quot;&gt;yii\log\Target&lt;/a&gt; class or its child class. It filters the log messages by their severity levels and categories and then exports them to some medium. For example, a &lt;a href=&quot;yii-log-dbtarget&quot;&gt;database target&lt;/a&gt; exports the filtered log messages to a database table, while an &lt;a href=&quot;yii-log-emailtarget&quot;&gt;email target&lt;/a&gt; exports the log messages to specified email addresses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="453118d454a6ab1d03ffe91827383130fe7bb304" translate="yes" xml:space="preserve">
          <source>A log target object will filter the messages logged by &lt;a href=&quot;yii-log-logger&quot;&gt;yii\log\Logger&lt;/a&gt; according to its &lt;a href=&quot;yii-log-target#%24levels-detail&quot;&gt;$levels&lt;/a&gt; and &lt;a href=&quot;yii-log-target#%24categories-detail&quot;&gt;$categories&lt;/a&gt; properties. It may also export the filtered messages to specific destination defined by the target, such as emails, files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c78a370323d2c420a3c422714ae2cc07dbd821ad" translate="yes" xml:space="preserve">
          <source>A mail message file can be opened by a regular text file editor, so you can browse the actual message headers, content and so on. This mechanism may prove itself, while debugging application or running unit test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f6511ebc0f4140d34c24e85bc24929417027dce" translate="yes" xml:space="preserve">
          <source>A mailer should mainly support creating and sending &lt;a href=&quot;yii-mail-messageinterface&quot;&gt;mail messages&lt;/a&gt;. It should also support composition of the message body through the view rendering mechanism. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c391d9c8eff8e378e446352125dc9e6e93fdae2a" translate="yes" xml:space="preserve">
          <source>A map of markdown flavor names to corresponding parser class configurations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d000aac4e57a4a4a155c8f2b7dc79613e7fd3f0" translate="yes" xml:space="preserve">
          <source>A mapping from object class names to the properties that need to put into the resulting arrays. The properties specified for each class is an array of the following format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f2f7008a5d362ecc006e0e3eaa94e76bb7d4280" translate="yes" xml:space="preserve">
          <source>A masked token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e98287b8010796267c0b93f8bdad9f2d5ae04f1" translate="yes" xml:space="preserve">
          <source>A message represents the settings and content of an email, such as the sender, recipient, subject, body, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05e8e8a7326f7959cfccd9e35e33c640a978f356" translate="yes" xml:space="preserve">
          <source>A message source stores message translations in some persistent storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67949a577e1c61949b8c51c4e45178d35919af4f" translate="yes" xml:space="preserve">
          <source>A method is defined if:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79812bf4557e4b248b4361608958af6ce90eefd0" translate="yes" xml:space="preserve">
          <source>A migration means a set of persistent changes to the application environment that is shared among different developers. For example, in an application backed by a database, a migration may refer to a set of changes to the database, such as creating a new table, adding a new table column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54e7b98d54d9200d6d274489bbee6b1912b4956f" translate="yes" xml:space="preserve">
          <source>A model may be used in different &lt;em&gt;scenarios&lt;/em&gt;. For example, a &lt;code&gt;User&lt;/code&gt; model may be used to collect user login inputs, but it may also be used for the user registration purpose. In different scenarios, a model may use different business rules and logic. For example, the &lt;code&gt;email&lt;/code&gt; attribute may be required during user registration, but not so during user login.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3df1ce5ad214dda082591e10802a09c820708a1" translate="yes" xml:space="preserve">
          <source>A model name is the key of the corresponding data row in &lt;a href=&quot;yii-test-baseactivefixture#%24data-detail&quot;&gt;$data&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fa26af203ca3cad2e9edea819b06c18b1296f09" translate="yes" xml:space="preserve">
          <source>A model uses the &lt;a href=&quot;yii-base-model#%24scenario-detail&quot;&gt;yii\base\Model::$scenario&lt;/a&gt; property to keep track of the scenario it is being used in. By default, a model supports only a single scenario named &lt;code&gt;default&lt;/code&gt;. The following code shows two ways of setting the scenario of a model:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="480250cdc6906b4d2f7605735f5b3af70691148c" translate="yes" xml:space="preserve">
          <source>A module can specify a &lt;a href=&quot;guide-structure-views#layouts&quot;&gt;layout&lt;/a&gt; that is applied to the views rendered by the module's controllers. The layout should be put in the &lt;code&gt;views/layouts&lt;/code&gt; directory by default, and you should configure the &lt;a href=&quot;yii-base-module#%24layout-detail&quot;&gt;yii\base\Module::$layout&lt;/a&gt; property to point to the layout name. If you do not configure the &lt;code&gt;layout&lt;/code&gt; property, the application's layout will be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa8db78f782e9be7949b1430eddcaa2dfc14f82c" translate="yes" xml:space="preserve">
          <source>A module is organized as a directory which is called the &lt;a href=&quot;yii-base-module#%24basePath-detail&quot;&gt;base path&lt;/a&gt; of the module. Within the directory, there are sub-directories, such as &lt;code&gt;controllers&lt;/code&gt;, &lt;code&gt;models&lt;/code&gt;, &lt;code&gt;views&lt;/code&gt;, which hold controllers, models, views, and other code, just like in an application. The following example shows the content within a module:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a485a2b712ff4f506a950407791cfc8e522d2ad1" translate="yes" xml:space="preserve">
          <source>A module may consist of &lt;a href=&quot;yii-base-module#%24modules-detail&quot;&gt;sub-modules&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9310695208b2fba90433ff8a8886ad9ef99e6a5" translate="yes" xml:space="preserve">
          <source>A module represents a sub-application which contains MVC elements by itself, such as models, views, controllers, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db11d2b64fbc852f88d81438cd31df5c8a124a7b" translate="yes" xml:space="preserve">
          <source>A more detailed usage guide on how to work with Query can be found in the &lt;a href=&quot;guide-db-query-builder&quot;&gt;guide article on Query Builder&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a9ade6a7f1caa7dfc1ec4362b88ec0fae364d66" translate="yes" xml:space="preserve">
          <source>A more flexible and powerful way of converting a model into an array is to use the &lt;a href=&quot;yii-base-arrayabletrait#toArray()-detail&quot;&gt;yii\base\Model::toArray()&lt;/a&gt; method. Its default behavior is the same as that of &lt;a href=&quot;yii-base-model#%24attributes-detail&quot;&gt;yii\base\Model::$attributes&lt;/a&gt;. However, it allows you to choose which data items, called &lt;em&gt;fields&lt;/em&gt;, to be put in the resulting array and how they should be formatted. In fact, it is the default way of exporting models in RESTful Web service development, as described in the &lt;a href=&quot;guide-rest-response-formatting&quot;&gt;Response Formatting&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="001dcb7d6efc2fce69cb553e840dd1ed96258d85" translate="yes" xml:space="preserve">
          <source>A normal call to &lt;code&gt;property_exists()&lt;/code&gt; does not work to determine magic properties. You should call &lt;a href=&quot;yii-base-object#canGetProperty()-detail&quot;&gt;canGetProperty()&lt;/a&gt; or &lt;a href=&quot;yii-base-object#canSetProperty()-detail&quot;&gt;canSetProperty()&lt;/a&gt; respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e76608c92aefb0b37052e907cc65b415f48d40c9" translate="yes" xml:space="preserve">
          <source>A one-line short summary describing the specified action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77bc7a949918d43e5f9c89a22c1ab771f9c3d0b2" translate="yes" xml:space="preserve">
          <source>A path alias is a short name representing a long path (a file path, a URL, etc.) For example, we use '@yii' as the alias of the path to the Yii framework directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f173bd5ff67598ad6634cb891ac991249c3be42a" translate="yes" xml:space="preserve">
          <source>A path alias must start with the character '@' so that it can be easily differentiated from non-alias paths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c3a41623f1a51318c2437478b293197065d7c2b" translate="yes" xml:space="preserve">
          <source>A path info refers to the part that is after the entry script and before the question mark (query string). The starting and ending slashes are both removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ec7824059ece38a41b707f97ecde08bd9be610c" translate="yes" xml:space="preserve">
          <source>A path info refers to the part that is after the entry script and before the question mark (query string). The starting slashes are both removed (ending slashes will be kept).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1099eeef41e19dd031513a8f684122fa1c08c4ce" translate="yes" xml:space="preserve">
          <source>A path string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51f48df8345d61b41a510e538a67bebbf6da963f" translate="yes" xml:space="preserve">
          <source>A prefix internally used to handle JS expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe291f50956632ab66d2a1180878057ba5241f1c" translate="yes" xml:space="preserve">
          <source>A prepared query instance which will be used by &lt;a href=&quot;yii-db-querybuilder&quot;&gt;yii\db\QueryBuilder&lt;/a&gt; to build the SQL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="073c069f28dcdd7fb8a123703e81af84336e43de" translate="yes" xml:space="preserve">
          <source>A prepared query instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11e9d00c6e46274d00062119400f9536d740b97c" translate="yes" xml:space="preserve">
          <source>A property can be accessed like a member variable of an object. Reading or writing a property will cause the invocation of the corresponding getter or setter method. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e6c73bd9205696410101876b8f48a74976334a" translate="yes" xml:space="preserve">
          <source>A property can be read if:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7807b9a0caa392506937989b9ef0c4878efbd294" translate="yes" xml:space="preserve">
          <source>A property can be written if:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ecad297c0c1df3fb454540d0311aa3a8e8c8b57" translate="yes" xml:space="preserve">
          <source>A property defined by a getter without a setter is &lt;em&gt;read only&lt;/em&gt;. Trying to assign a value to such a property will cause an &lt;a href=&quot;yii-base-invalidcallexception&quot;&gt;InvalidCallException&lt;/a&gt;. Similarly, a property defined by a setter without a getter is &lt;em&gt;write only&lt;/em&gt;, and trying to read such a property will also cause an exception. It is not common to have write-only properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="388146d78ec187d958e7cb622bf64be6ddd0c0e4" translate="yes" xml:space="preserve">
          <source>A property is defined by a getter method (e.g. &lt;code&gt;getLabel&lt;/code&gt;), and/or a setter method (e.g. &lt;code&gt;setLabel&lt;/code&gt;). For example, the following getter and setter methods define a property named &lt;code&gt;label&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20463c0f586fafdd4d89070f83b23ca976e95087" translate="yes" xml:space="preserve">
          <source>A property is defined if:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f4e1a84e3ef6844e07c24fd27a85de6d77bd2bb" translate="yes" xml:space="preserve">
          <source>A property is readable if:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="183bfef4f51f17268e5e1fd84f58e36d95d3493a" translate="yes" xml:space="preserve">
          <source>A property is writable if:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7b5a0572fe920a100af0be823193c3bba113cc0" translate="yes" xml:space="preserve">
          <source>A radio button list is like a checkbox list, except that it only allows single selection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57bdcd510501c5712dcc2bf9625f2f20ef0d359f" translate="yes" xml:space="preserve">
          <source>A radio button list is like a checkbox list, except that it only allows single selection. The selection of the radio buttons is taken from the value of the model attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4515e13294827dcf3e3dbb59f7df4551728a86a" translate="yes" xml:space="preserve">
          <source>A readme file in the package root directory: it describes what your extension does and how to install and use it. We recommend you write it in &lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; format and name the file as &lt;code&gt;readme.md&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d02616ab14e35b5712f5292cc7d8af856327fcbd" translate="yes" xml:space="preserve">
          <source>A readme file in the package root directory: it describes what your extension does and how to install and use it. We recommend you write it in &lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; format and name the file as &lt;code&gt;readme.md&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5fe283468a9a7cc6c14ca66f346f9172c8e0cc5" translate="yes" xml:space="preserve">
          <source>A reference to the &lt;a href=&quot;yii-filters-accessrule&quot;&gt;yii\filters\AccessRule&lt;/a&gt; instance will be passed to the closure as the first parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="738e4101017399c3902670350999beb70a7a5167" translate="yes" xml:space="preserve">
          <source>A relation is defined by a getter method which returns an &lt;a href=&quot;yii-db-activequeryinterface&quot;&gt;yii\db\ActiveQueryInterface&lt;/a&gt; object. It can be declared in either the Active Record class itself or one of its behaviors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b06782678f095a32317cf9b0c786242cb6f8e4b6" translate="yes" xml:space="preserve">
          <source>A relation is defined by a getter method which returns an object implementing the &lt;a href=&quot;yii-db-activequeryinterface&quot;&gt;yii\db\ActiveQueryInterface&lt;/a&gt; (normally this would be a relational &lt;a href=&quot;yii-db-activequery&quot;&gt;yii\db\ActiveQuery&lt;/a&gt; object). It can be declared in either the ActiveRecord class itself or one of its behaviors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72368e3d79e151a9cb0ef025531c175bb8e1a8e4" translate="yes" xml:space="preserve">
          <source>A relation is specified by &lt;a href=&quot;yii-db-activerelationtrait#%24link-detail&quot;&gt;$link&lt;/a&gt; which represents the association between columns of different collections; and the multiplicity of the relation is indicated by &lt;a href=&quot;yii-db-activerelationtrait#%24multiple-detail&quot;&gt;$multiple&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="011966459d29f1efd2e9b84836b7400f4aae3ee9" translate="yes" xml:space="preserve">
          <source>A relation is specified by &lt;a href=&quot;yii-db-activerelationtrait#%24link-detail&quot;&gt;$link&lt;/a&gt; which represents the association between columns of different tables; and the multiplicity of the relation is indicated by &lt;a href=&quot;yii-db-activerelationtrait#%24multiple-detail&quot;&gt;$multiple&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e009a8f00de95f6a7ebbf4ff45faf44fd6692aa" translate="yes" xml:space="preserve">
          <source>A relation name can refer to a relation defined in &lt;a href=&quot;yii-db-activequerytrait#%24modelClass-detail&quot;&gt;$modelClass&lt;/a&gt; or a sub-relation that stands for a relation of a related record. For example, &lt;code&gt;orders.address&lt;/code&gt; means the &lt;code&gt;address&lt;/code&gt; relation defined in the model class corresponding to the &lt;code&gt;orders&lt;/code&gt; relation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0a8f3acb638b94226d37f33a2abb547bbdf6464" translate="yes" xml:space="preserve">
          <source>A relation name can refer to a relation defined in &lt;a href=&quot;yii-db-activequerytrait#%24modelClass-detail&quot;&gt;modelClass&lt;/a&gt; or a sub-relation that stands for a relation of a related record. For example, &lt;code&gt;orders.address&lt;/code&gt; means the &lt;code&gt;address&lt;/code&gt; relation defined in the model class corresponding to the &lt;code&gt;orders&lt;/code&gt; relation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e47f65e60c48b50c284ff81a8ef82335d2a8cb35" translate="yes" xml:space="preserve">
          <source>A relative URL does not have host info part.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ca32a4092ab397472e1c8d17a177e18ea0d83c7" translate="yes" xml:space="preserve">
          <source>A relative route is a route without a leading slash, such as &quot;view&quot;, &quot;post/view&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="257c7fa69f40bd23bfabd699ee4e7bfbe9962ba1" translate="yes" xml:space="preserve">
          <source>A response that is configured to send &lt;code&gt;$data&lt;/code&gt; formatted as JSON.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b6a3fa4b8498a2f99bc177a199a16007d9a9fb2" translate="yes" xml:space="preserve">
          <source>A response that is configured to send &lt;code&gt;$data&lt;/code&gt; formatted as XML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a29007c025c5b3860ce751cb860c4513d897180" translate="yes" xml:space="preserve">
          <source>A role represents a collection of &lt;em&gt;permissions&lt;/em&gt; (e.g. creating posts, updating posts). A role may be assigned to one or multiple users. To check if a user has a specified permission, we may check if the user is assigned with a role that contains that permission.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8154f0540932277ac4b25853c86ca6e897849043" translate="yes" xml:space="preserve">
          <source>A root alias is an alias that has been registered via &lt;a href=&quot;yii-baseyii#setAlias()-detail&quot;&gt;setAlias()&lt;/a&gt; previously. If a given alias matches multiple root aliases, the longest one will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="613ece0a283213cd200b271ee44e3781827c7430" translate="yes" xml:space="preserve">
          <source>A root alias may also contain slash &lt;code&gt;/&lt;/code&gt; characters. The &lt;a href=&quot;yii-baseyii#getAlias()-detail&quot;&gt;Yii::getAlias()&lt;/a&gt; method is intelligent enough to tell which part of an alias is a root alias and thus correctly determines the corresponding file path or URL:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a22c3a73922ebce5d485bdf3f82bce586583e196" translate="yes" xml:space="preserve">
          <source>A route may be either absolute or relative. An absolute route has a leading slash (e.g. &lt;code&gt;/site/index&lt;/code&gt;) while a relative route has none (e.g. &lt;code&gt;site/index&lt;/code&gt; or &lt;code&gt;index&lt;/code&gt;). A relative route will be converted into an absolute one by the following rules:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aed71c8044271ac564927c78d1a7fbb876c046d" translate="yes" xml:space="preserve">
          <source>A route may be either absolute or relative. An absolute route has a leading slash (e.g. &lt;code&gt;/site/index&lt;/code&gt;), while a relative route has none (e.g. &lt;code&gt;site/index&lt;/code&gt; or &lt;code&gt;index&lt;/code&gt;). A relative route will be converted into an absolute one by the following rules:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d46d66a1c8c6647aa6982fe3eec65f1315eeb591" translate="yes" xml:space="preserve">
          <source>A rule can be used to validate one or multiple attributes, and an attribute may be validated by one or multiple rules. A rule may be applied in certain &lt;a href=&quot;guide-structure-models#scenarios&quot;&gt;scenarios&lt;/a&gt; only by specifying the &lt;code&gt;on&lt;/code&gt; option. If you do not specify an &lt;code&gt;on&lt;/code&gt; option, it means the rule will be applied to all scenarios.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5a33abf38d3089f8a112d7544953fead9ba1cfc" translate="yes" xml:space="preserve">
          <source>A rule can be used to validate one or multiple attributes, and an attribute may be validated by one or multiple rules. Please refer to the &lt;a href=&quot;guide-input-validation&quot;&gt;Validating Input&lt;/a&gt; section for more details on how to declare validation rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f92cfc24d490de29f3db9447dffde6db2a6056c9" translate="yes" xml:space="preserve">
          <source>A safe cache key associated with the mutex name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cd52665c96433b171bdc41f24707043c1069e23" translate="yes" xml:space="preserve">
          <source>A safe cache key associated with the session variable name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54afcc9f8815c084033eccdc04ba56f3503cf0e4" translate="yes" xml:space="preserve">
          <source>A search timeout, bounding the search request to be executed within the specified time value and bail with the hits accumulated up to that point when expired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c02a008c38be5bf94f4177204b7180e6397a74eb" translate="yes" xml:space="preserve">
          <source>A search timeout, bounding the search request to be executed within the specified time value and bail with the hits accumulated up to that point when expired. Defaults to no timeout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cda0f2e509eba565a2725d926c424a7e11f7349" translate="yes" xml:space="preserve">
          <source>A secondary key for selecting Link Objects which share the same relation type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad3f55bcb14a6f3450d7df9976b84bcb8f41e957" translate="yes" xml:space="preserve">
          <source>A secret key used for cookie validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d07293985acd1e2afa91481b1ef2c84cbc284b4d" translate="yes" xml:space="preserve">
          <source>A secret key used for cookie validation. This property must be set if &lt;a href=&quot;yii-web-request#%24enableCookieValidation-detail&quot;&gt;$enableCookieValidation&lt;/a&gt; is true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23d12f495e0654f08ef92ad735000633bcbeaaa5" translate="yes" xml:space="preserve">
          <source>A service locator is an object that knows how to provide all sorts of services (or components) that an application might need. Within a service locator, each component exists as only a single instance, uniquely identified by an ID. You use the ID to retrieve a component from the service locator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7846c2fe3d97f0904ddfd15cc40053faa9bf7ef4" translate="yes" xml:space="preserve">
          <source>A set of bars that are stacked together to form a single progress bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c681a223d16a20440870f8bc0fe3789338c85a34" translate="yes" xml:space="preserve">
          <source>A set of bars that are stacked together to form a single progress bar. Each bar is an array of the following structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b0b6edc71665ce376bfb0e3d32049a6c2399582" translate="yes" xml:space="preserve">
          <source>A set of commonly needed actions: &lt;code&gt;index&lt;/code&gt;, &lt;code&gt;view&lt;/code&gt;, &lt;code&gt;create&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, &lt;code&gt;delete&lt;/code&gt;, &lt;code&gt;options&lt;/code&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f35d2c0a03914f7507acda8d7d6f09deb5b410b8" translate="yes" xml:space="preserve">
          <source>A set of template paths for generating migration code automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="048f8a87ccfbb2098de3a6a3a123d8b69970e7d6" translate="yes" xml:space="preserve">
          <source>A simple column name has no prefix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76cd393d61803490f51de46f9b7c9f6c20d3058b" translate="yes" xml:space="preserve">
          <source>A simple column name should contain the column name only without any prefix. If the column name is already quoted or is the asterisk character '*', this method will do nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="536ea72777526c8be677765bdeb761cb2a6e4f9c" translate="yes" xml:space="preserve">
          <source>A simple data column definition refers to an attribute in the data model of the GridView's data provider. The name of the attribute is specified by &lt;a href=&quot;yii-grid-datacolumn#%24attribute-detail&quot;&gt;$attribute&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="807aeaf8bd7e69d918dc37f4c6313802ebf9764a" translate="yes" xml:space="preserve">
          <source>A simple index name has no schema prefix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e4cee89e826f15884acbb4d75905c1102e7ae2a" translate="yes" xml:space="preserve">
          <source>A simple table name has no schema prefix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="654d06a9878cb460146694b2d35dde1a42e763e6" translate="yes" xml:space="preserve">
          <source>A simple table name should contain the table name only without any schema prefix. If the table name is already quoted, this method will do nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26c83643a57f1f72d325bbd09ae97e4a6af00290" translate="yes" xml:space="preserve">
          <source>A single item from &lt;a href=&quot;yii-bootstrap-carousel#%24items-detail&quot;&gt;$items&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66f8fd08acf7f4b81c7c37c18fa2bdbbb7b82741" translate="yes" xml:space="preserve">
          <source>A single item from &lt;a href=&quot;yii-bootstrap-collapse#%24items-detail&quot;&gt;$items&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c710ff262afcb2c5957dcdae10055bc6c1139ab1" translate="yes" xml:space="preserve">
          <source>A single row of query result. Depending on the setting of &lt;a href=&quot;yii-db-activequeryinterface#asArray()-detail&quot;&gt;asArray()&lt;/a&gt;, the query result may be either an array or an ActiveRecord object. &lt;code&gt;null&lt;/code&gt; will be returned if the query results in nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbfd66602c8ead133ab734d620558084d8826962" translate="yes" xml:space="preserve">
          <source>A single row of query result. Depending on the setting of &lt;a href=&quot;yii-db-activequerytrait#asArray()-detail&quot;&gt;asArray()&lt;/a&gt;, the query result may be either an array or an ActiveRecord object. &lt;code&gt;null&lt;/code&gt; will be returned if the query results in nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2307fed938e12c94856b3af6691535b9173e84c" translate="yes" xml:space="preserve">
          <source>A single row of query result. Depending on the setting of &lt;a href=&quot;yii-db-activequerytrait#asArray()-detail&quot;&gt;asArray()&lt;/a&gt;, the query result may be either an array or an ActiveRecord object. Null will be returned if the query results in nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0df95c179b7987716059518665d7b2c9264e3e0e" translate="yes" xml:space="preserve">
          <source>A special shortcut format can be used if a rule only specifies &lt;a href=&quot;yii-web-urlrule#%24pattern-detail&quot;&gt;pattern&lt;/a&gt; and &lt;a href=&quot;yii-web-urlrule#%24route-detail&quot;&gt;route&lt;/a&gt;: &lt;code&gt;'pattern' =&amp;gt; 'route'&lt;/code&gt;. That is, instead of using a configuration array, one can use the key to represent the pattern and the value the corresponding route. For example, &lt;code&gt;'post/&amp;lt;id:\d+&amp;gt;' =&amp;gt; 'post/view'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="067903670085f641392d7660dd5a9528b9951134" translate="yes" xml:space="preserve">
          <source>A standalone validator is a class extending &lt;a href=&quot;yii-validators-validator&quot;&gt;yii\validators\Validator&lt;/a&gt; or its child class. You may implement its validation logic by overriding the &lt;a href=&quot;yii-validators-validator#validateAttribute()-detail&quot;&gt;yii\validators\Validator::validateAttribute()&lt;/a&gt; method. If an attribute fails the validation, call &lt;a href=&quot;yii-base-model#addError()-detail&quot;&gt;yii\base\Model::addError()&lt;/a&gt; to save the error message in the model, like you do with &lt;a href=&quot;#inline-validators&quot;&gt;inline validators&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43155e79bee4fe658ee21964ce9227adf214f2af" translate="yes" xml:space="preserve">
          <source>A sticky attribute will remember its value and will initialize the attribute with this value when the generator is restarted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c8f0a490bed53f60b70e9f7f920a7154ec6e6ed" translate="yes" xml:space="preserve">
          <source>A string containing UNSIGNED keyword.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad867179224ebf9b0e711de60680e50428d2e306" translate="yes" xml:space="preserve">
          <source>A string containing the AFTER constraint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddc0ae41212a1f95a316bd8b1b1c165d89a9f2c0" translate="yes" xml:space="preserve">
          <source>A string containing the CHECK constraint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18e2d3fc47df4b709301e296ee165dc332542440" translate="yes" xml:space="preserve">
          <source>A string containing the COMMENT keyword and the comment itself</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6c5b8806c7898fa9fc1354d0758f54ac022d66e" translate="yes" xml:space="preserve">
          <source>A string containing the FIRST constraint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c2b75e8e7c9a1c4c48a11436f35552ac389e520" translate="yes" xml:space="preserve">
          <source>A string containing the column type category name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25b0e9f67898201ebc5b49f80220870e216d9f1c" translate="yes" xml:space="preserve">
          <source>A string containing the complete column definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce910ca9a84fcdb948b3c2bea1b825efbc8726c1" translate="yes" xml:space="preserve">
          <source>A string prefixed to every cache key so that it is unique globally in the whole cache storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63bbd4f3dfab4d77ee7f44cb41c054138b04a601" translate="yes" xml:space="preserve">
          <source>A string prefixed to every cache key so that it is unique globally in the whole cache storage. It is recommended that you set a unique cache key prefix for each application if the same cache storage is being used by different applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="639a43e019b0a3732e8c25be55fa0c3aa82ee219" translate="yes" xml:space="preserve">
          <source>A string prefixed to every cache key so that it is unique.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f9a571728824d63952a7a289b304385408df1c6" translate="yes" xml:space="preserve">
          <source>A string prefixed to every cache key so that it is unique. If not set, it will use a prefix generated from \yii\redis\Application::id. You may set this property to be an empty string if you don't want to use key prefix. It is recommended that you explicitly set this property to some static value if the cached data needs to be shared among multiple applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9fd15157ff9d6e2f41b4f44596de572947f90ab" translate="yes" xml:space="preserve">
          <source>A string prefixed to every cache key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31ec2fc2cb9e42414924205b462ab827ea7db865" translate="yes" xml:space="preserve">
          <source>A string prefixed to every cache key. This is needed when you store cache data under the same &lt;a href=&quot;yii-caching-filecache#%24cachePath-detail&quot;&gt;$cachePath&lt;/a&gt; for different applications to avoid conflict.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c78b7095ff8ba0e74674d4c410f5ceaf64261ed" translate="yes" xml:space="preserve">
          <source>A string representation of the variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6580a2bc62902cfd9426b5f4bff8840810ee6c8c" translate="yes" xml:space="preserve">
          <source>A string to be prefixed to the user-specified view name to form a complete view name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39fb9f09488d197c87c03c9a7baeea4a084db613" translate="yes" xml:space="preserve">
          <source>A string to be prefixed to the user-specified view name to form a complete view name. For example, if a user requests for &lt;code&gt;tutorial/chap1&lt;/code&gt;, the corresponding view name will be &lt;code&gt;pages/tutorial/chap1&lt;/code&gt;, assuming the prefix is &lt;code&gt;pages&lt;/code&gt;. The actual view file is determined by &lt;a href=&quot;yii-base-view#findViewFile()-detail&quot;&gt;yii\base\View::findViewFile()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55752370620b49834b8778ad5155bfc0081202fb" translate="yes" xml:space="preserve">
          <source>A successful call returns the value of the requested PDO attribute. An unsuccessful call returns null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40b8276f308f51c9271f667d411bf5f391cc36cd" translate="yes" xml:space="preserve">
          <source>A theme is a directory consisting of view files which are meant to replace their non-themed counterparts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2af883dc3330f14571f9dc203578f91b216202f4" translate="yes" xml:space="preserve">
          <source>A typical usage example is as follows,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0afc23834d5e0b3fbe3dc9bd8c4f76f9b17f5925" translate="yes" xml:space="preserve">
          <source>A typical usage is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80294200bf12f3eab6c363009a81ed9098216b6a" translate="yes" xml:space="preserve">
          <source>A typical usage looks like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d01eca31a8a6447246c28944c16af347d4ef1d8" translate="yes" xml:space="preserve">
          <source>A typical usage of DetailView is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f5cb77d20d66330b22f7e4107a10a8923442fc9" translate="yes" xml:space="preserve">
          <source>A typical usage pattern of cache is like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba60d739ff502e8037ed4152515cd04dc6a6044" translate="yes" xml:space="preserve">
          <source>A unique ID identifying the fragment to be cached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97090c5bcd4a30ab3c20d207d0b363a6467ef5cc" translate="yes" xml:space="preserve">
          <source>A unique hash value for this cache dependency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e55c013d2f5333c3d053bf4fab1d65e873ebcac4" translate="yes" xml:space="preserve">
          <source>A unique key identifying the cached value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f523e170c23788a942fe6511a6ad7eec011a8b2" translate="yes" xml:space="preserve">
          <source>A valid PHP callback that performs the job. Accepts connection instance as parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad6cda17d4fa78fca44f23878160c8b9777a814f" translate="yes" xml:space="preserve">
          <source>A valid cache key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0c063d8800fa8b377cc8f9a5d86868aa88363e3" translate="yes" xml:space="preserve">
          <source>A validator can be either an object of a class extending &lt;a href=&quot;yii-validators-validator&quot;&gt;yii\validators\Validator&lt;/a&gt;, or a model class method (called &lt;em&gt;inline validator&lt;/em&gt;) that has the following signature:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="585ab2a5e2c2bccf192b37fcbd547ff998b6c7d3" translate="yes" xml:space="preserve">
          <source>A validator can be either an object of a class extending \Validator, or a model class method (called &lt;em&gt;inline validator&lt;/em&gt;) that has the following signature:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4b82d6ad0beb0a1270ac2ea2a335c707b93ac3b" translate="yes" xml:space="preserve">
          <source>A validator can be either an object of a class extending \yii\debug\models\Validator, or a model class method (called &lt;em&gt;inline validator&lt;/em&gt;) that has the following signature:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0d94eb40c615a82676aacac61c4aebd677434f2" translate="yes" xml:space="preserve">
          <source>A validator can be either an object of a class extending \yii\debug\models\search\Validator, or a model class method (called &lt;em&gt;inline validator&lt;/em&gt;) that has the following signature:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff661693a4ed70d1c4f41bfac4ff3b00b1d6c4bb" translate="yes" xml:space="preserve">
          <source>A validator can be either an object of a class extending \yii\debug\models\timeline\Validator, or a model class method (called &lt;em&gt;inline validator&lt;/em&gt;) that has the following signature:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d22107d5979167a81bd1215ed89e70895021a2cb" translate="yes" xml:space="preserve">
          <source>A validator can be either an object of a class extending \yii\gii\Validator, or a model class method (called &lt;em&gt;inline validator&lt;/em&gt;) that has the following signature:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2828850225b4b2a27fa801a09476ef6df30c1a4" translate="yes" xml:space="preserve">
          <source>A validator can be either an object of a class extending \yii\gii\generators\controller\Validator, or a model class method (called &lt;em&gt;inline validator&lt;/em&gt;) that has the following signature:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef3bad7b9a97c85700d15fd1eac21c281196de7e" translate="yes" xml:space="preserve">
          <source>A validator can be either an object of a class extending \yii\gii\generators\crud\Validator, or a model class method (called &lt;em&gt;inline validator&lt;/em&gt;) that has the following signature:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1233d742872a710f9b60ad43551cb4b316cedd06" translate="yes" xml:space="preserve">
          <source>A validator can be either an object of a class extending \yii\gii\generators\extension\Validator, or a model class method (called &lt;em&gt;inline validator&lt;/em&gt;) that has the following signature:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd88e101313f0cf194657755d96af0b58d040545" translate="yes" xml:space="preserve">
          <source>A validator can be either an object of a class extending \yii\gii\generators\form\Validator, or a model class method (called &lt;em&gt;inline validator&lt;/em&gt;) that has the following signature:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94837370fd6f115a145645be6af5d5e16af90459" translate="yes" xml:space="preserve">
          <source>A validator can be either an object of a class extending \yii\gii\generators\model\Validator, or a model class method (called &lt;em&gt;inline validator&lt;/em&gt;) that has the following signature:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="070e4f1c2bd22a456eefefd261ac97c33a0cc412" translate="yes" xml:space="preserve">
          <source>A validator can be either an object of a class extending \yii\gii\generators\module\Validator, or a model class method (called &lt;em&gt;inline validator&lt;/em&gt;) that has the following signature:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12a8091ea0668be756de4b302054edbedbcdcd28" translate="yes" xml:space="preserve">
          <source>A validator can be either an object of a class extending \yii\mongodb\gii\model\Validator, or a model class method (called &lt;em&gt;inline validator&lt;/em&gt;) that has the following signature:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c61dcb8bdbdffdbd1163c719206619e74eedc1af" translate="yes" xml:space="preserve">
          <source>A validator can be either an object of a class extending \yii\sphinx\gii\model\Validator, or a model class method (called &lt;em&gt;inline validator&lt;/em&gt;) that has the following signature:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="758faf6d5d158b58ccd35e06e79c2269e1e82292" translate="yes" xml:space="preserve">
          <source>A validator class can implement this method to support data validation out of the context of a data model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8906a508e6cbb19a2d0a48cfe87041ba6eacdc27" translate="yes" xml:space="preserve">
          <source>A validator is active if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec4d6a2ad333c14d6c716a85cff620f6d2a57c53" translate="yes" xml:space="preserve">
          <source>A value indicating if parameters should be url encoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9862af41a1fe7332298b7cec02d87f1245c8bfd6" translate="yes" xml:space="preserve">
          <source>A value indicating if this rule should be used for both request parsing and URL creation, parsing only, or creation only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba22a5160d5a90170abad101b6218c860effe471" translate="yes" xml:space="preserve">
          <source>A value indicating if this rule should be used for both request parsing and URL creation, parsing only, or creation only. If not set or 0, it means the rule is both request parsing and URL creation. If it is &lt;a href=&quot;yii-web-urlrule#PARSING_ONLY-detail&quot;&gt;PARSING_ONLY&lt;/a&gt;, the rule is for request parsing only. If it is &lt;a href=&quot;yii-web-urlrule#CREATION_ONLY-detail&quot;&gt;CREATION_ONLY&lt;/a&gt;, the rule is for URL creation only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a48ee1f07baba3a760e392b9171d7154aafbb5a8" translate="yes" xml:space="preserve">
          <source>A value indicating whether &lt;a href=&quot;yii-web-link#%24href-detail&quot;&gt;$href&lt;/a&gt; refers to a URI or URI template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab06d07a41ae07f15d8fa03328deec02bfb7710" translate="yes" xml:space="preserve">
          <source>A value indicating whether the rule permits the auth item it is associated with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c0f135f7a715b6c5cfc6a3093dcd8c5695c0165" translate="yes" xml:space="preserve">
          <source>A value indicating whether this filter should be enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44c3a89c4b6950b9429d80d938064be2149025cd" translate="yes" xml:space="preserve">
          <source>A value is considered empty if it is null, an empty array, or an empty string. Note that this method is different from PHP empty(). It will return false when the value is 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8e5e971de2631327793b935572535dc9f5ede4c" translate="yes" xml:space="preserve">
          <source>A view name is resolved into the corresponding view file path according to the following rules:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="840f4d6945b588b6cf4e0ea174f0412c52dfbedf" translate="yes" xml:space="preserve">
          <source>A view name may omit the file extension name. In this case, &lt;code&gt;.php&lt;/code&gt; will be used as the extension. For example, the view name &lt;code&gt;about&lt;/code&gt; corresponds to the file name &lt;code&gt;about.php&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d1151a2cef022d840b5eb34fe9153132452796" translate="yes" xml:space="preserve">
          <source>A warning message is typically logged when an error occurs while the execution can still continue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97dc0697a50d81f13e3bc18de6e63cd617315379" translate="yes" xml:space="preserve">
          <source>ACF performs the authorization check by examining the access rules one by one from top to bottom until it finds a rule that matches the current execution context. The &lt;code&gt;allow&lt;/code&gt; value of the matching rule will then be used to judge if the user is authorized or not. If none of the rules matches, it means the user is NOT authorized, and ACF will stop further action execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff3b084b6301e00e55895b7a5669c036b2fae337" translate="yes" xml:space="preserve">
          <source>ACTION_NOT_FOUND</source>
          <target state="translated">ACTION_NOT_FOUND</target>
        </trans-unit>
        <trans-unit id="ac0076d3761b8f332bd997521d302e577266d351" translate="yes" xml:space="preserve">
          <source>ACTION_REDIRECT_PERMANENT</source>
          <target state="translated">ACTION_REDIRECT_PERMANENT</target>
        </trans-unit>
        <trans-unit id="9bd487e3e220666c7d42489ab575fae04c7b2f71" translate="yes" xml:space="preserve">
          <source>ACTION_REDIRECT_TEMPORARY</source>
          <target state="translated">ACTION_REDIRECT_TEMPORARY</target>
        </trans-unit>
        <trans-unit id="fb9ad8c74af4d6f6435ae132e62544eb7123ddfb" translate="yes" xml:space="preserve">
          <source>AJAX Validation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d7a5667b9080576591dfbc191f70a742b622886" translate="yes" xml:space="preserve">
          <source>ANSI color is enabled only if &lt;a href=&quot;yii-console-controller#%24color-detail&quot;&gt;$color&lt;/a&gt; is set true or is not set and the terminal supports ANSI color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="575c050fc37b3a3d68d121c2da2d423d0ca23469" translate="yes" xml:space="preserve">
          <source>APC is not shared between PHP processes so flushing cache from command line has no effect on web. Flushing web cache could be either done by:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9f5da2649237ccb620bf9aec50c6ab8aaca33ee" translate="yes" xml:space="preserve">
          <source>API base URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="035e47863f002b22f65a1b035e3ec7869280f204" translate="yes" xml:space="preserve">
          <source>API base URL. This field will be used as &lt;a href=&quot;yii-httpclient-client#%24baseUrl-detail&quot;&gt;yii\httpclient\Client::$baseUrl&lt;/a&gt; value of &lt;a href=&quot;yii-authclient-baseclient#%24httpClient-detail&quot;&gt;$httpClient&lt;/a&gt;. Note: changing this property will take no effect after &lt;a href=&quot;yii-authclient-baseclient#%24httpClient-detail&quot;&gt;$httpClient&lt;/a&gt; is instantiated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e047e1b9fe61bdc1983adbfab2cfdde63eb803c" translate="yes" xml:space="preserve">
          <source>API documentation: your code should be well documented to allow other people to more easily read and understand it. You may refer to the &lt;a href=&quot;https://github.com/yiisoft/yii2/blob/master/framework/base/Object.php&quot;&gt;Object class file&lt;/a&gt; to learn how to document your code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e39e98c6d1f1ec72526061fbd182c4d181d74b9a" translate="yes" xml:space="preserve">
          <source>API response data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec4f119077fac0a3b2a58ca6c95b0f3a16432cfd" translate="yes" xml:space="preserve">
          <source>API sub URL, which will be append to &lt;a href=&quot;yii-authclient-baseoauth#%24apiBaseUrl-detail&quot;&gt;$apiBaseUrl&lt;/a&gt;, or absolute API URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5e9ccadee646719b99a12d7541758ec555f1688" translate="yes" xml:space="preserve">
          <source>AX and SREG extensions are supported. To use them, specify &lt;a href=&quot;yii-authclient-openid#%24requiredAttributes-detail&quot;&gt;$requiredAttributes&lt;/a&gt; and/or &lt;a href=&quot;yii-authclient-openid#%24optionalAttributes-detail&quot;&gt;$optionalAttributes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca510dc89a10fe1d10447041110d4e4dca4be58b" translate="yes" xml:space="preserve">
          <source>AX parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c039d31249d848df316f917794076321903e1fd" translate="yes" xml:space="preserve">
          <source>Ability to select extra fields can be exceptionally useful for aggregation queries. Assume you need to display a list of customers with the count of orders they have made. First of all, you need to declare a &lt;code&gt;Customer&lt;/code&gt; class with &lt;code&gt;orders&lt;/code&gt; relation and extra field for count storage:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="686c9c7627a34054f8f755c493f6043ff5f91820" translate="yes" xml:space="preserve">
          <source>Abstract Class yii\authclient\BaseClient</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3598bcb2329b8ee876fdaed18e6b0e2f275a841f" translate="yes" xml:space="preserve">
          <source>Abstract Class yii\authclient\BaseOAuth</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d0454e6ca6f35f44fa4a8c8ec8631712f8c8663" translate="yes" xml:space="preserve">
          <source>Abstract Class yii\authclient\OAuth1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e777f81de47d6dc5c3f9c12b6f7f6eac20c244de" translate="yes" xml:space="preserve">
          <source>Abstract Class yii\authclient\OAuth2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71f959f66d5aadf68f6494b7606e79cf1fa1182b" translate="yes" xml:space="preserve">
          <source>Abstract Class yii\authclient\signature\BaseMethod</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2796700b6ae82d81a6149aff69eff19c84a9c48e" translate="yes" xml:space="preserve">
          <source>Abstract Class yii\base\Application</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="227c1cc9c0808e35aa9b59b7f809299b606cdc09" translate="yes" xml:space="preserve">
          <source>Abstract Class yii\base\ErrorHandler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a63000d8ee37fc11296249d89535c8f654c1dba" translate="yes" xml:space="preserve">
          <source>Abstract Class yii\base\Request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2f58620ce6478884d6416decd5866aa78457b20" translate="yes" xml:space="preserve">
          <source>Abstract Class yii\base\ViewRenderer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec15520cd090046b3da93710da4c69b7e5579ccf" translate="yes" xml:space="preserve">
          <source>Abstract Class yii\caching\Cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4f789a5b1b6e15b9832d7de9a8c7a96c80015a1" translate="yes" xml:space="preserve">
          <source>Abstract Class yii\caching\Dependency</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de22d41ab0484f57820221367a300a189341c556" translate="yes" xml:space="preserve">
          <source>Abstract Class yii\codeception\BasePage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05b80ebed76b76bb5a4dd839c4772c8442ab585d" translate="yes" xml:space="preserve">
          <source>Abstract Class yii\console\controllers\BaseMigrateController</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="277754cf9cf569ad9442d4736bb0d950ba4e77f5" translate="yes" xml:space="preserve">
          <source>Abstract Class yii\data\BaseDataProvider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc2715b1170a974eb2e40ad015865513c5c2d5ed" translate="yes" xml:space="preserve">
          <source>Abstract Class yii\db\BaseActiveRecord</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67ffeeb313f3034ddf3764f215e6a9f38017be31" translate="yes" xml:space="preserve">
          <source>Abstract Class yii\db\Schema</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b605faf32e892fab8c18f5403b485e12a11d9641" translate="yes" xml:space="preserve">
          <source>Abstract Class yii\debug\components\search\matchers\Base</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d8164a5820cc2f02afc4031ff16dc66a2f04702" translate="yes" xml:space="preserve">
          <source>Abstract Class yii\filters\auth\AuthMethod</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b579887feb9a3c9869181722e5b8b05e218db1d" translate="yes" xml:space="preserve">
          <source>Abstract Class yii\gii\Generator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="513a6bca9d5845eae4abcd2eb73909b8a97e35a1" translate="yes" xml:space="preserve">
          <source>Abstract Class yii\httpclient\Transport</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd1c8bdabd6c72a1daba9995098891b7a0760f1c" translate="yes" xml:space="preserve">
          <source>Abstract Class yii\i18n\GettextFile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33e4b14e19536c6b2378bd297f1e612e0ebe3b4a" translate="yes" xml:space="preserve">
          <source>Abstract Class yii\log\Target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b704f4cbe5fb356be8cfa81f01fd91f42e90672" translate="yes" xml:space="preserve">
          <source>Abstract Class yii\mail\BaseMailer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79af9f4459841e955d2468979d8fb5c603c9feb7" translate="yes" xml:space="preserve">
          <source>Abstract Class yii\mail\BaseMessage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33f6b1ce6ac0bf1d5db9d187f436127690435d01" translate="yes" xml:space="preserve">
          <source>Abstract Class yii\mongodb\ActiveRecord</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79cbcf02a4db65a492771ca89574ed432e158290" translate="yes" xml:space="preserve">
          <source>Abstract Class yii\mongodb\Migration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3ea0bcd8612049ee7416ddd90fa2e9d68d46bd2" translate="yes" xml:space="preserve">
          <source>Abstract Class yii\mongodb\file\ActiveRecord</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0afc9d48cbeebc1e5724d10a4a4a9007b3ff4857" translate="yes" xml:space="preserve">
          <source>Abstract Class yii\mutex\DbMutex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbcb8252c244dee5ed643e0da4758ed1207f25f7" translate="yes" xml:space="preserve">
          <source>Abstract Class yii\mutex\Mutex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="614015b43d6f4ae503859865fbfdb5181c59dbc1" translate="yes" xml:space="preserve">
          <source>Abstract Class yii\rbac\BaseManager</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91c52063d7c0174a97d874e69f9ef2f438d8bcbc" translate="yes" xml:space="preserve">
          <source>Abstract Class yii\rbac\Rule</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="217803d98a7abb20e19320b38dfa0b6d4b9949f7" translate="yes" xml:space="preserve">
          <source>Abstract Class yii\sphinx\ActiveRecord</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="befb87189da8c5bd06f5efd86e232d85b0c1d718" translate="yes" xml:space="preserve">
          <source>Abstract Class yii\test\BaseActiveFixture</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e84c3ce302bf79154ee8dfa621a8b5bedf8671fa" translate="yes" xml:space="preserve">
          <source>Abstract Class yii\test\DbFixture</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf2c189b8e984231964a6081505f7dd3b9235b5f" translate="yes" xml:space="preserve">
          <source>Abstract Class yii\web\CompositeUrlRule</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70dea50822bf10e8d4b7da7d2224099a1c68afa2" translate="yes" xml:space="preserve">
          <source>Abstract Class yii\web\MultiFieldSession</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db1bc92821ceb9bfdd204ec4597a533939d0f9c0" translate="yes" xml:space="preserve">
          <source>Abstract Class yii\widgets\BaseListView</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed590942d8462aabac4e6797be61d4ec39d547d" translate="yes" xml:space="preserve">
          <source>Abstract column type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a9117f84e83b64a82895b1d9a622210c735dc40" translate="yes" xml:space="preserve">
          <source>Abstract type of this column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6073ae4a23583763b1a90b7b43724caf3de30204" translate="yes" xml:space="preserve">
          <source>Abstract type of this column. Possible abstract types include: char, string, text, boolean, smallint, integer, bigint, float, decimal, datetime, timestamp, time, date, binary, and money.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="510d622b33321a9c6b75c1cbd1cb4e6b86f680f7" translate="yes" xml:space="preserve">
          <source>Abstract type of this column. Possible abstract types include: string, text, boolean, smallint, integer, bigint, float, decimal, datetime, timestamp, time, date, binary, and money.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9965899354285ef3b93811bbd3e348cb4b99c95" translate="yes" xml:space="preserve">
          <source>Access Check</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dde6c04197aaf695e30f05fbd4c8e426edc026de" translate="yes" xml:space="preserve">
          <source>Access Control Filter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9b095e46c74338e1864ac0daf554653e0bdfdd5" translate="yes" xml:space="preserve">
          <source>Access Control Filter (ACF) is a simple authorization method implemented as &lt;a href=&quot;yii-filters-accesscontrol&quot;&gt;yii\filters\AccessControl&lt;/a&gt; which is best used by applications that only need some simple access control. As its name indicates, ACF is an action &lt;a href=&quot;guide-structure-filters&quot;&gt;filter&lt;/a&gt; that can be used in a controller or a module. While a user is requesting to execute an action, ACF will check a list of &lt;a href=&quot;yii-filters-accesscontrol#%24rules-detail&quot;&gt;access rules&lt;/a&gt; to determine if the user is allowed to access the requested action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2570b82986c3bad7c84268af7bf27c9a2dce0c0c" translate="yes" xml:space="preserve">
          <source>Access token HTTP method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f92fd6531f81c75ed3f07046571ee35d83f570ed" translate="yes" xml:space="preserve">
          <source>Access token instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c083ab94c3e162c55dbe930772a5a500ba91cad0" translate="yes" xml:space="preserve">
          <source>Access token or its configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf0254d03177db26696e7241a40b4775b202aca5" translate="yes" xml:space="preserve">
          <source>Access token, if not set &lt;a href=&quot;yii-authclient-baseoauth#%24accessToken-detail&quot;&gt;$accessToken&lt;/a&gt; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04c34d537aa320da186044675a098799c56219e7" translate="yes" xml:space="preserve">
          <source>Access token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bab410f35604dbc00e74c5d402dad135da62de9c" translate="yes" xml:space="preserve">
          <source>AccessControl</source>
          <target state="translated">AccessControl</target>
        </trans-unit>
        <trans-unit id="f4b8f66e4523be8079afdd5fbbaaed001935bebf" translate="yes" xml:space="preserve">
          <source>AccessControl is an action filter. It will check its &lt;a href=&quot;yii-filters-accesscontrol#%24rules-detail&quot;&gt;$rules&lt;/a&gt; to find the first rule that matches the current context variables (such as user IP address, user role). The matching rule will dictate whether to allow or deny the access to the requested controller action. If no rule matches, the access will be denied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2abeb03c01a07e4551235e635d139db2f265e35" translate="yes" xml:space="preserve">
          <source>AccessControl provides simple access control based on a set of &lt;a href=&quot;yii-filters-accesscontrol#%24rules-detail&quot;&gt;rules&lt;/a&gt;. In particular, before an action is executed, AccessControl will examine the listed rules and find the first one that matches the current context variables (such as user IP address, user login status, etc.) The matching rule will dictate whether to allow or deny the execution of the requested action. If no rule matches, the access will be denied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a60c6ffc2d9ba78a5e288db0106a19d3c43e705" translate="yes" xml:space="preserve">
          <source>AccessControl provides simple access control based on a set of rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceb18768a0b04323fb20e4968fad3a7bba6c794d" translate="yes" xml:space="preserve">
          <source>Accessing Data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84196546302f89ef7432f479e9f85cde6d8f8c7d" translate="yes" xml:space="preserve">
          <source>Accessing Data in Layouts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5536b4cb3362e5c886a285db6c80a4c26775a32c" translate="yes" xml:space="preserve">
          <source>Accessing Data in Views</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8222ba96afdc9ef3e4d4ca3c1be4bf128303a8ad" translate="yes" xml:space="preserve">
          <source>Accessing Modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="814bcc225f913516ca26ebfd427a8d65ea3c988f" translate="yes" xml:space="preserve">
          <source>Accessing Relational Data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34f440e86884f24d40b177e6dfafd8346984a66f" translate="yes" xml:space="preserve">
          <source>Accessing Session Data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f71e8547bad6071426abe3d699a3863c5232859" translate="yes" xml:space="preserve">
          <source>According to the above rules, calling &lt;code&gt;$this-&amp;gt;render('view')&lt;/code&gt; in a controller &lt;code&gt;app\controllers\PostController&lt;/code&gt; will actually render the view file &lt;code&gt;@app/views/post/view.php&lt;/code&gt;, while calling &lt;code&gt;$this-&amp;gt;render('_overview')&lt;/code&gt; in that view will render the view file &lt;code&gt;@app/views/post/_overview.php&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be3b5595afaa344ed51a973387931d699514894f" translate="yes" xml:space="preserve">
          <source>According to the above validation steps, an attribute will be validated if and only if it is an active attribute declared in &lt;code&gt;scenarios()&lt;/code&gt; and is associated with one or multiple active rules declared in &lt;code&gt;rules()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d91505279a925bb97cc5839faa4a463b93177ba7" translate="yes" xml:space="preserve">
          <source>Acquires a lock by name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b1169536bd0a550695478efef55b5a2c8209039" translate="yes" xml:space="preserve">
          <source>Acquires lock by given name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8329658f187f1b66e84cc8b41f649fdcdde69007" translate="yes" xml:space="preserve">
          <source>Acquiring result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aceeccbf340de43892867121bc32491b11116c4c" translate="yes" xml:space="preserve">
          <source>Action ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="373b38823352f879d10157848e960bb63dcf5215" translate="yes" xml:space="preserve">
          <source>Action IDs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="617f82299f3621e8f106b178792e79a9d42f9c01" translate="yes" xml:space="preserve">
          <source>Action Parameters</source>
          <target state="translated">Parámetros de acción</target>
        </trans-unit>
        <trans-unit id="ba8155c0a36c153912e66f00a159b1abfc1f919b" translate="yes" xml:space="preserve">
          <source>Action Results</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9ee51d74abd4a8779c2eed9ba8b65f2044ea62d" translate="yes" xml:space="preserve">
          <source>Action column</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eaf5fc6c96e0bb33873996e800d9f4deeb06dea" translate="yes" xml:space="preserve">
          <source>Action is the base class for action classes that implement RESTful API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b027e09aae8a1b4630e2cda8417466d6ecc0a30" translate="yes" xml:space="preserve">
          <source>Action is the base class for all controller action classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ba314cf25f01460c73b650e986aea3e755f953e" translate="yes" xml:space="preserve">
          <source>Action parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e6e97220a03282117ae94868b3e9d9bfe154450" translate="yes" xml:space="preserve">
          <source>Action provides a way to reuse action method code. An action method in an Action class can be used in multiple controllers or in different projects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1747d3da5d4d828a60ef825eccbd1b4d751b6b8" translate="yes" xml:space="preserve">
          <source>Action response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bba8cdd11fb3cf6d858bc86a7acfa7a3c5c4fc92" translate="yes" xml:space="preserve">
          <source>Action to be checked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d367662f225a0c1a952f1ddf9143765a77ac955f" translate="yes" xml:space="preserve">
          <source>Action to get help for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="913bea15a560446b6b23904a63282564538532d6" translate="yes" xml:space="preserve">
          <source>Action to get summary for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fbce063b01d6d419fbbf9714bc7a791b0b70676" translate="yes" xml:space="preserve">
          <source>Action to perform during route normalization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dfa66799bd02fc2452f6021e5c21d7311d31f6a" translate="yes" xml:space="preserve">
          <source>Action to perform during route normalization. Available options are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1404fe1f6bde354e45ec54d0807b2ee3d18eb56d" translate="yes" xml:space="preserve">
          <source>ActionColumn is a column for the &lt;a href=&quot;yii-grid-gridview&quot;&gt;yii\grid\GridView&lt;/a&gt; widget that displays buttons for viewing and manipulating the items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b13261993d70153571a059ce2c103460b811ac40" translate="yes" xml:space="preserve">
          <source>ActionEvent represents the event parameter used for an action event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d444333681ce8c6c77191c284c8ad126d2bd82f1" translate="yes" xml:space="preserve">
          <source>ActionFilter is the base class for action filters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3cd636a585b20c40ac2df5ffb403e83cb2eef51" translate="yes" xml:space="preserve">
          <source>Actions</source>
          <target state="translated">Actions</target>
        </trans-unit>
        <trans-unit id="60e60765fba66b1d7abcb1790dce9f21533f74aa" translate="yes" xml:space="preserve">
          <source>Actions to be executed in this bulk command, given as either an array of arrays or as one newline-delimited string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e62412d31981b5c1ebefc55569ac72fd9868473" translate="yes" xml:space="preserve">
          <source>Actions to be executed in this bulk command, given as either an array of arrays or as one newline-delimited string. All actions except delete span two lines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f699e7bf3b9d73585cd373cfbee033f708d7f5" translate="yes" xml:space="preserve">
          <source>Active Data Provider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c56ace212803860c39af85632d205438bc84aece" translate="yes" xml:space="preserve">
          <source>Active Record</source>
          <target state="translated">Registro activo</target>
        </trans-unit>
        <trans-unit id="802b116bfdb43ab4399a592327c7db6a8c936ae6" translate="yes" xml:space="preserve">
          <source>Active Record Life Cycles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5d8da6772a1759f6d38f082f6823782afcc1b24" translate="yes" xml:space="preserve">
          <source>Active Record allows you to declare relations between Active Record classes that are powered by different databases. The databases can be of different types (e.g. MySQL and PostgreSQL, or MS SQL and MongoDB), and they can run on different servers. You can use the same syntax to perform relational queries. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="655beef1c2bc0d67ed0bebd9d8f95d5abaf99ef3" translate="yes" xml:space="preserve">
          <source>Active Record automatically maintains the list of dirty attributes. It does so by maintaining an older version of the attribute values and comparing them with the latest one. You can call &lt;a href=&quot;yii-db-baseactiverecord#getDirtyAttributes()-detail&quot;&gt;yii\db\ActiveRecord::getDirtyAttributes()&lt;/a&gt; to get the attributes that are currently dirty. You can also call &lt;a href=&quot;yii-db-baseactiverecord#markAttributeDirty()-detail&quot;&gt;yii\db\ActiveRecord::markAttributeDirty()&lt;/a&gt; to explicitly mark an attribute as dirty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31b20072c8ac7ec57fb61bc8d67ac26b597b97f8" translate="yes" xml:space="preserve">
          <source>Active Record implements the &lt;a href=&quot;http://en.wikipedia.org/wiki/Active_record&quot;&gt;Active Record design pattern&lt;/a&gt;. The premise behind Active Record is that an individual &lt;a href=&quot;yii-db-activerecord&quot;&gt;yii\db\ActiveRecord&lt;/a&gt; object is associated with a specific row in a database table. The object's attributes are mapped to the columns of the corresponding table. Referencing an Active Record attribute is equivalent to accessing the corresponding table column for that record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dda4d5f85ebb06304b6f62c3d032ad3a2ed0f940" translate="yes" xml:space="preserve">
          <source>Active Record implements the &lt;a href=&quot;https://en.wikipedia.org/wiki/Active_record&quot;&gt;Active Record design pattern&lt;/a&gt;. The premise behind Active Record is that an individual &lt;a href=&quot;yii-db-activerecord&quot;&gt;yii\db\ActiveRecord&lt;/a&gt; object is associated with a specific row in a database table. The object's attributes are mapped to the columns of the corresponding table. Referencing an Active Record attribute is equivalent to accessing the corresponding table column for that record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a5701d31d5fd85495fbd07756f94c648a1c6878" translate="yes" xml:space="preserve">
          <source>Active Record instances are considered as &lt;a href=&quot;guide-structure-models&quot;&gt;models&lt;/a&gt;. For this reason, we usually put Active Record classes under the &lt;code&gt;app\models&lt;/code&gt; namespace (or other namespaces for keeping model classes).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75e18b0277b01a808776fd63ab76565699972328" translate="yes" xml:space="preserve">
          <source>Active Record provides the &lt;a href=&quot;yii-db-baseactiverecord#link()-detail&quot;&gt;link()&lt;/a&gt; method that allows you to accomplish this task more nicely:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fc8ab3e96671ff341bf77e0e126ce70b20dd972" translate="yes" xml:space="preserve">
          <source>Active input field, which triggers this widget rendering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec8ad019b402049096de71e89ce1dd407136f46f" translate="yes" xml:space="preserve">
          <source>Active input field, which triggers this widget rendering. This field will be automatically filled up in case widget instance is created via &lt;a href=&quot;yii-widgets-activefield#widget()-detail&quot;&gt;yii\widgets\ActiveField::widget()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bb53a39b482d4fb24ee104fcd0262d9c86ade79" translate="yes" xml:space="preserve">
          <source>Active records are called &quot;models&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c82a1c9198c2ed03695591c62b2fdd221686c191" translate="yes" xml:space="preserve">
          <source>ActiveController implements a common set of actions for supporting RESTful access to ActiveRecord.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14359b54fdd4a2b2eb39a13f37faf80ddc753c20" translate="yes" xml:space="preserve">
          <source>ActiveDataProvider implements a data provider based on &lt;a href=&quot;yii-db-query&quot;&gt;yii\db\Query&lt;/a&gt; and &lt;a href=&quot;yii-db-activequery&quot;&gt;yii\db\ActiveQuery&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7db7ec913076c88af2b9ecb33506d16c39b491b" translate="yes" xml:space="preserve">
          <source>ActiveDataProvider provides data by performing DB queries using &lt;a href=&quot;yii-data-activedataprovider#%24query-detail&quot;&gt;$query&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd1177d706e89c202280c52dd40a1ab88a6fa989" translate="yes" xml:space="preserve">
          <source>ActiveField .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4dd56e29bb7ff719d04123925e7d9e126625a1f" translate="yes" xml:space="preserve">
          <source>ActiveField represents a form input field within an &lt;a href=&quot;yii-widgets-activeform&quot;&gt;yii\widgets\ActiveForm&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58773dc7c847c2ec6d38424b9b45bbe23151dc05" translate="yes" xml:space="preserve">
          <source>ActiveFixture represents a fixture backed up by a &lt;a href=&quot;yii-test-baseactivefixture#%24modelClass-detail&quot;&gt;ActiveRecord class&lt;/a&gt; or a &lt;a href=&quot;yii-test-activefixture#%24tableName-detail&quot;&gt;database table&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2af8f63c8606d93c94fc8d36828f5be4b4af935" translate="yes" xml:space="preserve">
          <source>ActiveForm is a widget that builds an interactive HTML form for one or multiple data models.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26dd505aa31d07ba78398656df6481d476e0954e" translate="yes" xml:space="preserve">
          <source>ActiveQuery allows to build the snippets using sources provided by ActiveRecord. You can use &lt;a href=&quot;yii-sphinx-activequery#snippetByModel()-detail&quot;&gt;snippetByModel()&lt;/a&gt; method to enable this. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4acaa9e0f375cb4d030ee8e50cf88cec592d506c" translate="yes" xml:space="preserve">
          <source>ActiveQuery also provides the following additional query options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64aab00ba4c6a718858ff85308fec3e3db6485de" translate="yes" xml:space="preserve">
          <source>ActiveQuery instances are usually created by &lt;a href=&quot;yii-db-activerecord#find()-detail&quot;&gt;yii\db\ActiveRecord::find()&lt;/a&gt; and &lt;a href=&quot;yii-db-activerecord#findBySql()-detail&quot;&gt;yii\db\ActiveRecord::findBySql()&lt;/a&gt;. Relational queries are created by &lt;a href=&quot;yii-db-baseactiverecord#hasOne()-detail&quot;&gt;yii\db\ActiveRecord::hasOne()&lt;/a&gt; and &lt;a href=&quot;yii-db-baseactiverecord#hasMany()-detail&quot;&gt;yii\db\ActiveRecord::hasMany()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fecc318a2cea32de999b7296dbd16939a066a6f" translate="yes" xml:space="preserve">
          <source>ActiveQuery instances are usually created by &lt;a href=&quot;yii-elasticsearch-activerecord#find()-detail&quot;&gt;yii\elasticsearch\ActiveRecord::find()&lt;/a&gt;. Relational queries are created by &lt;a href=&quot;yii-db-baseactiverecord#hasOne()-detail&quot;&gt;yii\elasticsearch\ActiveRecord::hasOne()&lt;/a&gt; and &lt;a href=&quot;yii-db-baseactiverecord#hasMany()-detail&quot;&gt;yii\elasticsearch\ActiveRecord::hasMany()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bffb66c16ca32c3a5687cafef283bf114e50b85b" translate="yes" xml:space="preserve">
          <source>ActiveQuery instances are usually created by &lt;a href=&quot;yii-mongodb-activerecord#find()-detail&quot;&gt;yii\mongodb\ActiveRecord::find()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0778e5a9c15592fb1a31e2362e0dd4dc9eb64b1a" translate="yes" xml:space="preserve">
          <source>ActiveQuery instances are usually created by &lt;a href=&quot;yii-mongodb-activerecord#find()-detail&quot;&gt;yii\mongodb\ActiveRecord::find()&lt;/a&gt;. Relational queries are created by &lt;a href=&quot;yii-db-baseactiverecord#hasOne()-detail&quot;&gt;yii\mongodb\ActiveRecord::hasOne()&lt;/a&gt; and &lt;a href=&quot;yii-db-baseactiverecord#hasMany()-detail&quot;&gt;yii\mongodb\ActiveRecord::hasMany()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8fc1883e981c552c6d9948dabfac2540d19a9f1" translate="yes" xml:space="preserve">
          <source>ActiveQuery instances are usually created by &lt;a href=&quot;yii-mongodb-file-activerecord#find()-detail&quot;&gt;yii\mongodb\file\ActiveRecord::find()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0deab4a488b28ca182b365772e8768c533ba29e3" translate="yes" xml:space="preserve">
          <source>ActiveQuery instances are usually created by &lt;a href=&quot;yii-redis-activerecord#find()-detail&quot;&gt;yii\redis\ActiveRecord::find()&lt;/a&gt;. Relational queries are created by &lt;a href=&quot;yii-db-baseactiverecord#hasOne()-detail&quot;&gt;yii\redis\ActiveRecord::hasOne()&lt;/a&gt; and &lt;a href=&quot;yii-db-baseactiverecord#hasMany()-detail&quot;&gt;yii\redis\ActiveRecord::hasMany()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc8213c2304edff98c2d0063cbaedb29534ab96a" translate="yes" xml:space="preserve">
          <source>ActiveQuery instances are usually created by &lt;a href=&quot;yii-sphinx-activerecord#find()-detail&quot;&gt;yii\sphinx\ActiveRecord::find()&lt;/a&gt; and &lt;a href=&quot;yii-sphinx-activerecord#findBySql()-detail&quot;&gt;yii\sphinx\ActiveRecord::findBySql()&lt;/a&gt;. Relational queries are created by &lt;a href=&quot;yii-db-baseactiverecord#hasOne()-detail&quot;&gt;yii\sphinx\ActiveRecord::hasOne()&lt;/a&gt; and &lt;a href=&quot;yii-db-baseactiverecord#hasMany()-detail&quot;&gt;yii\sphinx\ActiveRecord::hasMany()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23fca20c5d61c1276c571253ca109b0ca1473957" translate="yes" xml:space="preserve">
          <source>ActiveQuery mainly provides the following methods to retrieve the query results:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31164a74f87748e825619bccce22b02233dc7993" translate="yes" xml:space="preserve">
          <source>ActiveQuery represents a DB query associated with an Active Record class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c039886c2c82e0e1205d41a54320aa525ca73c93" translate="yes" xml:space="preserve">
          <source>ActiveQueryInterface defines the common interface to be implemented by active record query classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="618b09402a493920f326b893c317406913b83a85" translate="yes" xml:space="preserve">
          <source>ActiveQueryTrait implements the common methods and properties for active record query classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="421a8e1234fb61d6703fc3e2776bd4cb0aa6d96f" translate="yes" xml:space="preserve">
          <source>ActiveRecord based forms: ActiveForm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d800a4952bef9da8e0a7fc9cb5567ee7c36403c" translate="yes" xml:space="preserve">
          <source>ActiveRecord instance matching the condition, or &lt;code&gt;null&lt;/code&gt; if nothing matches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11d1fec84aa372f38e395116cce6c79d3611da85" translate="yes" xml:space="preserve">
          <source>ActiveRecord is the base class for classes representing relational data in terms of objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7f3968b9a66aace08ddad891960ea563437eefa" translate="yes" xml:space="preserve">
          <source>ActiveRecordInterface</source>
          <target state="translated">ActiveRecordInterface</target>
        </trans-unit>
        <trans-unit id="65668ecafe597471f2b4131a4904bc666b680c84" translate="yes" xml:space="preserve">
          <source>ActiveRelationTrait implements the common methods and properties for active record relational queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09f5232f2fef847f60c968c4c8ae7a3427a36f55" translate="yes" xml:space="preserve">
          <source>Actual URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="865d4cd34dd1f13c52d00d6d3d07b691b9185744" translate="yes" xml:space="preserve">
          <source>Actual key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="491fce126b209adb5ca7b4c2886c5e1241812856" translate="yes" xml:space="preserve">
          <source>Actual size in bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efcc1dea63e4e4e108ec29b37bd8a58887294321" translate="yes" xml:space="preserve">
          <source>Ad Hoc Validation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59120ae1123460c0a07ff2cc9f5b45f55e852480" translate="yes" xml:space="preserve">
          <source>Add Column</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6c50d01fbc4478a8051f88d0ac2e0ef3e637a3" translate="yes" xml:space="preserve">
          <source>Add Junction Table</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e05ac987cecb29fc3e5d8f9ceff7ce1f58264d62" translate="yes" xml:space="preserve">
          <source>Add a &lt;code&gt;required&lt;/code&gt; validation rule for the version column to ensure the version value is submitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0a5513b520605e0f85d5150b39ca700c55b3aa8" translate="yes" xml:space="preserve">
          <source>Add a common error (not related to particular attribute). We can use the not existing attribute name for adding error, for example &lt;code&gt;*&lt;/code&gt;, because attribute existence is not checked at that point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bdd0d209b489375389944e6db3ef09ebd37fc59" translate="yes" xml:space="preserve">
          <source>Add additional directories to Smarty's search path for plugins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd4ac385ba0998cc47548f02fb030d7ba95f7210" translate="yes" xml:space="preserve">
          <source>Add extras for webserver</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2c4f447228e836b57d01aa2da445cc8d28853ae" translate="yes" xml:space="preserve">
          <source>Add more columns to the SELECT part of the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b8384e04a430385b98564a0f8f62f6cdb92408d" translate="yes" xml:space="preserve">
          <source>Add servers to the server pool of the cache specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="414ef6514ffc16245fe8b5f7a8db0788deaf9d26" translate="yes" xml:space="preserve">
          <source>Add servers to the server pool of the cache specified Used for memcache PECL extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37fe4b75896a46df0414198eacc282f7e8a2eb10" translate="yes" xml:space="preserve">
          <source>Add servers to the server pool of the cache specified Used for memcached PECL extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d6ba7e556778facaa847cbc3080c5d7812f1cd5" translate="yes" xml:space="preserve">
          <source>Add the following lines to &lt;code&gt;composer.json&lt;/code&gt; of your project to adjust directories where the installed packages will be placed, if you want to publish them using Yii:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ae52b7a12b1f06a40fb5a04c1bb786a38d87bb8" translate="yes" xml:space="preserve">
          <source>Added points</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7be55a6bb7f530d5763d620e7063f0c10a19bba" translate="yes" xml:space="preserve">
          <source>Adding Rules Dynamically</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7890dae10284c7cf29c2759f3cfa82957fecd45" translate="yes" xml:space="preserve">
          <source>Adding error in case of multiple attributes can vary depending on desired form design:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb160f1aab6205330382a30f2eb6de23b2e6195c" translate="yes" xml:space="preserve">
          <source>Adding errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06eb6c9b0fb39b005c6c9f2cd3082ecf2f1f1994" translate="yes" xml:space="preserve">
          <source>Adding the &lt;a href=&quot;guide-structure-filters#cors&quot;&gt;Cross-Origin Resource Sharing&lt;/a&gt; filter to a controller is a bit more complicated than adding other filters described above, because the CORS filter has to be applied before authentication methods and thus needs a slightly different approach compared to other filters. Also authentication has to be disabled for the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS#Preflighted_requests&quot;&gt;CORS Preflight requests&lt;/a&gt; so that a browser can safely determine whether a request can be made beforehand without the need for sending authentication credentials. The following shows the code that is needed to add the &lt;a href=&quot;yii-filters-cors&quot;&gt;yii\filters\Cors&lt;/a&gt; filter to an existing controller that extends from &lt;a href=&quot;yii-rest-activecontroller&quot;&gt;yii\rest\ActiveController&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f923f80c72d86a9b38dd041c8fdcae532d48d81" translate="yes" xml:space="preserve">
          <source>Additional HTML attributes for the hyperlink tag. There is one special attribute &lt;code&gt;label&lt;/code&gt; which will be used as the label of the hyperlink. If this is not set, the label defined in &lt;a href=&quot;yii-data-sort#%24attributes-detail&quot;&gt;$attributes&lt;/a&gt; will be used. If no label is defined, &lt;a href=&quot;yii-helpers-baseinflector#camel2words()-detail&quot;&gt;yii\helpers\Inflector::camel2words()&lt;/a&gt; will be called to get a label. Note that it will not be HTML-encoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b16d62c45efcfcc20cf385b99e084fdc611fd95" translate="yes" xml:space="preserve">
          <source>Additional HTML tags can be added to the form using plain HTML or using the methods from the &lt;a href=&quot;yii-helpers-html&quot;&gt;Html&lt;/a&gt;-helper class like it is done in the above example with &lt;a href=&quot;yii-helpers-basehtml#submitButton()-detail&quot;&gt;Html::submitButton()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7c9f96392519193bb60ef9ac94aa79ec455676a" translate="yes" xml:space="preserve">
          <source>Additional SQL fragment that will be appended to the generated SQL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75b4a7cf6f8d5860e26428f5e664f5b1cd4445a9" translate="yes" xml:space="preserve">
          <source>Additional Smarty options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a70948cbe18fb4f53571d18f6e53babc6fa8385" translate="yes" xml:space="preserve">
          <source>Additional URL string or information array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f42e6ca631d67f832991911ec9880cc2bab3e3d" translate="yes" xml:space="preserve">
          <source>Additional attributes can be added file document using $metadata.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b680fc26524bf82c58f7daa4ddb27a553936a87b" translate="yes" xml:space="preserve">
          <source>Additional auth GET params.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b26d5eae2dd457593b6b37918173f162da17cf1" translate="yes" xml:space="preserve">
          <source>Additional column values to be saved into the junction table. This parameter is only meaningful for a relationship involving a junction table (i.e., a relation set with &lt;a href=&quot;yii-db-activequeryinterface#via()-detail&quot;&gt;yii\db\ActiveQueryInterface::via()&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ebc11a913e9d99b40907cd70a0a7e1ff2648c2a" translate="yes" xml:space="preserve">
          <source>Additional column values to be saved into the junction table. This parameter is only meaningful for a relationship involving a junction table (i.e., a relation set with &lt;a href=&quot;yii-db-activerelationtrait#via()-detail&quot;&gt;yii\db\ActiveRelationTrait::via()&lt;/a&gt; or &lt;a href=&quot;yii-db-activequery#viaTable()-detail&quot;&gt;yii\db\ActiveQuery::viaTable()&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56da7808f5a7a596f6a38562c6e5475eb71f1540" translate="yes" xml:space="preserve">
          <source>Additional columns to be grouped by. Columns can be specified in either a string (e.g. &quot;id, name&quot;) or an array (e.g. ['id', 'name']). The method will automatically quote the column names unless a column contains some parenthesis (which means the column contains a DB expression).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d678fe9985a08ebaf351627db3efcb562e62813c" translate="yes" xml:space="preserve">
          <source>Additional configurations for this object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b9b5558f75eb884b43cb31565b1cd23d86bee4" translate="yes" xml:space="preserve">
          <source>Additional content data fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="255869089d6d8a3b6d79e782487242e843c20b9b" translate="yes" xml:space="preserve">
          <source>Additional cookies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8db01b0eff64b429dfae05d5c877f47e0a5fdfe" translate="yes" xml:space="preserve">
          <source>Additional data providers that can be created by user and will be added to the Faker generator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0010199213b03188752f61fd64596a136380a415" translate="yes" xml:space="preserve">
          <source>Additional data providers that can be created by user and will be added to the Faker generator. More info in &lt;a href=&quot;https://github.com/fzaninotto/Faker.&quot;&gt;Faker&lt;/a&gt; library docs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2d58e03700a6dfa1f2b6bf8d8cce7062e388de9" translate="yes" xml:space="preserve">
          <source>Additional definitions can be set through the &lt;a href=&quot;yii-widgets-maskedinput#%24definitions-detail&quot;&gt;$definitions&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ddf912d0f3f1a95402655bacb7958e7df39e57" translate="yes" xml:space="preserve">
          <source>Additional file document contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6836966e4ea4ebd6128d75af4045128cd3f9d955" translate="yes" xml:space="preserve">
          <source>Additional file document contents. Common GridFS columns:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43e50c99857e43f0cce6786f7db806e1a3c657d4" translate="yes" xml:space="preserve">
          <source>Additional filter to be applied to the DB query used to check the existence of the attribute value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="850ac5d22a0493b2ead70328e32f814302fb6d7f" translate="yes" xml:space="preserve">
          <source>Additional filter to be applied to the DB query used to check the existence of the attribute value. This can be a string or an array representing the additional query condition (refer to &lt;a href=&quot;yii-db-query#where()-detail&quot;&gt;yii\db\Query::where()&lt;/a&gt; on the format of query condition), or an anonymous function with the signature &lt;code&gt;function ($query)&lt;/code&gt;, where &lt;code&gt;$query&lt;/code&gt; is the &lt;a href=&quot;yii-db-query&quot;&gt;Query&lt;/a&gt; object that you can modify in the function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efb46086039076ac4070a20de631d0d2ed6ce06e" translate="yes" xml:space="preserve">
          <source>Additional filter to be applied to the DB query used to check the uniqueness of the attribute value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3295f66d4872547d100ce369a075064372d1acab" translate="yes" xml:space="preserve">
          <source>Additional filter to be applied to the DB query used to check the uniqueness of the attribute value. This can be a string or an array representing the additional query condition (refer to &lt;a href=&quot;yii-db-query#where()-detail&quot;&gt;yii\db\Query::where()&lt;/a&gt; on the format of query condition), or an anonymous function with the signature &lt;code&gt;function ($query)&lt;/code&gt;, where &lt;code&gt;$query&lt;/code&gt; is the &lt;a href=&quot;yii-db-query&quot;&gt;Query&lt;/a&gt; object that you can modify in the function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77914ad97a19f2fd3c7d5a22400abe726f833e89" translate="yes" xml:space="preserve">
          <source>Additional flags set by the streams API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff0e4fd1b2058f5b8d8790b5bd92a65d3e0ec4a" translate="yes" xml:space="preserve">
          <source>Additional footer options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31eb0e780cfa60785b9b25857c2128fccaf1efc6" translate="yes" xml:space="preserve">
          <source>Additional formatting for view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ff838f899e4f40a7e91419b11af7f3074e2972b" translate="yes" xml:space="preserve">
          <source>Additional header options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5f2998aa3aef84548066e0229f60d574f55ef2d" translate="yes" xml:space="preserve">
          <source>Additional headers in format: [headerName =&amp;gt; headerValue]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="392d6058e9b49ab93732bc600b7e4d20bb104cdb" translate="yes" xml:space="preserve">
          <source>Additional jQuery selector for selecting filter input fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="620dab26b6a0bafb3114234cf1a22768d41c34c8" translate="yes" xml:space="preserve">
          <source>Additional option that should be appended to the 'SELECT' keyword.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7174f01d4dff8490102a33a725480433a4fd05d3" translate="yes" xml:space="preserve">
          <source>Additional option that should be appended to the 'SELECT' keyword. For example, in MySQL, the option 'SQL_CALC_FOUND_ROWS' can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3cd94e233de164291ad995115e2f8fb8947891f" translate="yes" xml:space="preserve">
          <source>Additional optional parameters to the mapReduce command. Valid options include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd2f4e0a349f619c579154919fd169e95098538a" translate="yes" xml:space="preserve">
          <source>Additional options</source>
          <target state="translated">Opciones adicionales</target>
        </trans-unit>
        <trans-unit id="921fd8ddbf2b8da4ab84a71d2cb5603c645384b4" translate="yes" xml:space="preserve">
          <source>Additional options for sending the file. The following options are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f8851e8dd646df48957ef8990e103b503d6772" translate="yes" xml:space="preserve">
          <source>Additional options to be passed to the pjax JS plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ad80a8c89177340b3dccd15667cb2423e9f374d" translate="yes" xml:space="preserve">
          <source>Additional options to be passed to the pjax JS plugin. Please refer to the &lt;a href=&quot;https://github.com/yiisoft/jquery-pjax&quot;&gt;pjax project page&lt;/a&gt; for available options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cd829d0391af77dfaf02ce3cf4e6681d8e81cef" translate="yes" xml:space="preserve">
          <source>Additional options to be passed to the underlying JS plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67854f4152ac54c3fcd75638b6aa94524b25af67" translate="yes" xml:space="preserve">
          <source>Additional options. Valid options are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9ca1471a1c5c73c1eaf333a7d893c103077a28a" translate="yes" xml:space="preserve">
          <source>Additional parameters</source>
          <target state="translated">Parámetros adicionales</target>
        </trans-unit>
        <trans-unit id="9e73b6f786b7141e7e4d0c73858f2d1cacdd4bb7" translate="yes" xml:space="preserve">
          <source>Additional parameters that are passed to the validation method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47634cc34e6019932f913dcc05ee2765e25f0fda" translate="yes" xml:space="preserve">
          <source>Additional parameters that should be passed to the &lt;a href=&quot;yii-filters-httpcache#%24lastModified-detail&quot;&gt;$lastModified&lt;/a&gt; and &lt;a href=&quot;yii-filters-httpcache#%24etagSeed-detail&quot;&gt;$etagSeed&lt;/a&gt; callbacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c166147c4e861fb2f1de9081137b4fa7b09cd5ee" translate="yes" xml:space="preserve">
          <source>Additional parameters to be passed to &lt;a href=&quot;yii-widgets-listview#%24itemView-detail&quot;&gt;$itemView&lt;/a&gt; when it is being rendered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e77f47320e4896151348627b88a79fc3fffa6288" translate="yes" xml:space="preserve">
          <source>Additional parameters to be passed to &lt;a href=&quot;yii-widgets-listview#%24itemView-detail&quot;&gt;$itemView&lt;/a&gt; when it is being rendered. This property is used only when &lt;a href=&quot;yii-widgets-listview#%24itemView-detail&quot;&gt;$itemView&lt;/a&gt; is a string representing a view name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3551414d47abf9373dc4ca3b2938be58d2729d24" translate="yes" xml:space="preserve">
          <source>Additional request headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc08df59bd0e5c74c5e18f9e0cb631a731c3973f" translate="yes" xml:space="preserve">
          <source>Additional request params.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7ca426e66aa4d1475e5138782428292932ae638" translate="yes" xml:space="preserve">
          <source>Additional special options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb13b82bb4ba2f928f1767c1e8da1bcec779705e" translate="yes" xml:space="preserve">
          <source>Additional to validating the date it can also export the parsed timestamp as a machine readable format which can be configured using &lt;a href=&quot;yii-validators-datevalidator#%24timestampAttribute-detail&quot;&gt;$timestampAttribute&lt;/a&gt;. For values that include time information (not date-only values) also the time zone will be adjusted. The time zone of the input value is assumed to be the one specified by the &lt;a href=&quot;yii-validators-datevalidator#%24timeZone-detail&quot;&gt;$timeZone&lt;/a&gt; property and the target timeZone will be UTC when &lt;a href=&quot;yii-validators-datevalidator#%24timestampAttributeFormat-detail&quot;&gt;$timestampAttributeFormat&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt; (exporting as UNIX timestamp) or &lt;a href=&quot;yii-validators-datevalidator#%24timestampAttributeTimeZone-detail&quot;&gt;$timestampAttributeTimeZone&lt;/a&gt; otherwise. If you want to avoid the time zone conversion, make sure that &lt;a href=&quot;yii-validators-datevalidator#%24timeZone-detail&quot;&gt;$timeZone&lt;/a&gt; and &lt;a href=&quot;yii-validators-datevalidator#%24timestampAttributeTimeZone-detail&quot;&gt;$timestampAttributeTimeZone&lt;/a&gt; are the same.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01fd7678977c242e3aab2d24b58d5333c530040c" translate="yes" xml:space="preserve">
          <source>Additionally the information in the time zone database shipped with the ICU library may be outdated. Please refer to the &lt;a href=&quot;http://userguide.icu-project.org/datetime/timezone#TOC-Updating-the-Time-Zone-Data&quot;&gt;ICU manual&lt;/a&gt; for details on updating the time zone database. While for output formatting the ICU timezone database is used, the time zone database used by PHP may be relevant too. You can update it by installing the latest version of the &lt;a href=&quot;http://pecl.php.net/package/timezonedb&quot;&gt;pecl package &lt;code&gt;timezonedb&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a548c0d113584422732a87498a268651d533fff" translate="yes" xml:space="preserve">
          <source>Additionally the information in the time zone database shipped with the ICU library may be outdated. Please refer to the &lt;a href=&quot;http://userguide.icu-project.org/datetime/timezone#TOC-Updating-the-Time-Zone-Data&quot;&gt;ICU manual&lt;/a&gt; for details on updating the time zone database. While for output formatting the ICU timezone database is used, the time zone database used by PHP may be relevant too. You can update it by installing the latest version of the &lt;a href=&quot;https://pecl.php.net/package/timezonedb&quot;&gt;pecl package &lt;code&gt;timezonedb&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="004a28ebc4dc944dddae46a33995d16f65f09bcb" translate="yes" xml:space="preserve">
          <source>Additionally to the &lt;a href=&quot;http://php.net/manual/en/book.array.php&quot;&gt;rich set of PHP array functions&lt;/a&gt;, the Yii array helper provides extra static methods allowing you to deal with arrays more efficiently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd32a3650ddce8db3d06bbb0b3423ac8f3782859" translate="yes" xml:space="preserve">
          <source>Additionally to the &lt;a href=&quot;https://php.net/manual/en/book.array.php&quot;&gt;rich set of PHP array functions&lt;/a&gt;, the Yii array helper provides extra static methods allowing you to deal with arrays more efficiently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d742ed647ea202f9923fad689baee7f7e4ca2e0f" translate="yes" xml:space="preserve">
          <source>Additionally you can specify arbitrary operators as follows: A condition of &lt;code&gt;['&amp;gt;=', 'id', 10]&lt;/code&gt; will result in the following SQL expression: &lt;code&gt;id &amp;gt;= 10&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b3a1c5ca263529b1219394a7df8ae7f3f04fdd0" translate="yes" xml:space="preserve">
          <source>Additionally, Yii also supports using Active Record with the following NoSQL databases:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66cb36aa8d7c0cf3869b8014770fa39b11aa77d1" translate="yes" xml:space="preserve">
          <source>Additionally, there is &lt;a href=&quot;yii-db-query#andFilterCompare()-detail&quot;&gt;yii\db\Query::andFilterCompare()&lt;/a&gt; that can intelligently determine operator based on what's in the value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2eb3524efc3dedf4f0c85e2e08bee5ef710efda" translate="yes" xml:space="preserve">
          <source>Additionally, when attaching an event handler, extra data may be passed and be available via the &lt;a href=&quot;yii-base-event#%24data-detail&quot;&gt;$data&lt;/a&gt; property when the event handler is invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ac34ca4ddf1cdc92294a508c2309296f6ec0a00" translate="yes" xml:space="preserve">
          <source>Address to serve on. Either &quot;host&quot; or &quot;host:port&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="028efed7d95911f99ed7d94000b20f1426e8167f" translate="yes" xml:space="preserve">
          <source>Adds HTTP headers about the pagination to the response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="430fba9b9cd899dcfa82abd33a62bd256813f964" translate="yes" xml:space="preserve">
          <source>Adds a 'stats' part to the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="448b09a8d1bd4f8ada2d6f40f0eb17ea13a45beb" translate="yes" xml:space="preserve">
          <source>Adds a &lt;code&gt;NOT NULL&lt;/code&gt; constraint to the column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="276e5c7c2d7e170b89f714ceb15178aae3dada12" translate="yes" xml:space="preserve">
          <source>Adds a &lt;code&gt;NULL&lt;/code&gt; constraint to the column</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e79789ad0428433d72aa427efc4a9b5ee3c946cb" translate="yes" xml:space="preserve">
          <source>Adds a &lt;code&gt;UNIQUE&lt;/code&gt; constraint to the column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="240a70f427bd2c79dde98decdc61abc442a8f6a7" translate="yes" xml:space="preserve">
          <source>Adds a CSS class (or several classes) to the specified options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="883d2a72fbe2f1082d758ef824b542f0cbf8bfa7" translate="yes" xml:space="preserve">
          <source>Adds a content part for multi-part content request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8d92e962a328db80d43d35cbb86629a99daeacc" translate="yes" xml:space="preserve">
          <source>Adds a cookie to the collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3387ca73129467b87a5652f311a86c759a21a9e9" translate="yes" xml:space="preserve">
          <source>Adds a delete action to the command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36868163520a38da1c9a1c51c7b037ddd756720f" translate="yes" xml:space="preserve">
          <source>Adds a file content to the upload.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8310658af6fde8c16b411c4db44751e9448cebdc" translate="yes" xml:space="preserve">
          <source>Adds a file for upload as multi-part content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0c81b5c4a5b3bb4b66f6c9c43a76ffc03822357" translate="yes" xml:space="preserve">
          <source>Adds a filtering condition for a specific column and allow the user to choose a filter operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d14c4fe8801c47c4c9753f78c1c5a148c045d03" translate="yes" xml:space="preserve">
          <source>Adds a flash message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d0a19818312ec20c9816b4da428dd35491aec8d" translate="yes" xml:space="preserve">
          <source>Adds a list of errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acf81ade7bde0efdfa99dc7d46016f96cb434234" translate="yes" xml:space="preserve">
          <source>Adds a new error to the specified attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="282a7acffb9cf47eeacbef316cf93276c051961d" translate="yes" xml:space="preserve">
          <source>Adds a new header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d5d620e524b2944c991cb43602688ca75110e02" translate="yes" xml:space="preserve">
          <source>Adds a placeholder for dynamic content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d3b16a92a181bc695241d4cde2bd20c9d1a4100" translate="yes" xml:space="preserve">
          <source>Adds a role, permission or rule to the RBAC system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51de4c7aa3810a98cbc1324fc0057d1d6f27deb8" translate="yes" xml:space="preserve">
          <source>Adds a rule to the RBAC system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26aacd3a744d84d1833786ab82f2f5509cac7f5d" translate="yes" xml:space="preserve">
          <source>Adds a session variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5ff374d4408a4d1c79567c234390bf14940315d" translate="yes" xml:space="preserve">
          <source>Adds a state variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e16ba57bbb32e45f91602f35e1fe8571f7e6957f" translate="yes" xml:space="preserve">
          <source>Adds a string as a file upload.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e12f35e575a4fe34c354fe3e0b344bf6db2ba41" translate="yes" xml:space="preserve">
          <source>Adds a sub-module to this module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="398ca16ca2ac6cb5cac3019e9eb8c348056c38f8" translate="yes" xml:space="preserve">
          <source>Adds a suggester to this query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10c626de483b1159096b74bda85e4edb9df60faa" translate="yes" xml:space="preserve">
          <source>Adds a validation rule to this model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5937c2401c9bf369eaf48a44b571c18cbfeba56b" translate="yes" xml:space="preserve">
          <source>Adds additional FACET part of the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9d722aa89263bd82b798f5103f5172fc054e051" translate="yes" xml:space="preserve">
          <source>Adds additional ORDER BY columns to the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdd760788ef3f5999c781a83801f0ccfbc9088c5" translate="yes" xml:space="preserve">
          <source>Adds additional URL rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b97ba31b34276c84c8c769a741264597b22dbbb2" translate="yes" xml:space="preserve">
          <source>Adds additional WITHIN GROUP ORDER BY columns to the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b3fc9aa2c2174345f73e887e9d72469db554ff8" translate="yes" xml:space="preserve">
          <source>Adds additional cursor options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bf445e3673221067464c83c67be6158fbba207d" translate="yes" xml:space="preserve">
          <source>Adds additional group-by columns to the existing ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d0e53834241d878e4489b37276fef965c4abcda" translate="yes" xml:space="preserve">
          <source>Adds additional parameters to be bound to the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9af667bba96e00dc27dba3e765f0125b3bf7b0ae" translate="yes" xml:space="preserve">
          <source>Adds additional parameters to be parsed into the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d7a623c3ecc959bd310153429ad12dccc45b9b7" translate="yes" xml:space="preserve">
          <source>Adds additional query options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d898b101e346664c7bca462c25e2771140349982" translate="yes" xml:space="preserve">
          <source>Adds aliases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f3e4e34448e01410bb95fa64a4a681aeb8715fe" translate="yes" xml:space="preserve">
          <source>Adds an &lt;code&gt;AFTER&lt;/code&gt; constraint to the column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f04ae2433e2bf0597725209af7c5d12cf8a71dfb" translate="yes" xml:space="preserve">
          <source>Adds an &lt;code&gt;FIRST&lt;/code&gt; constraint to the column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9f98c36f9a36d5e0dee06a6454323c52df6f985" translate="yes" xml:space="preserve">
          <source>Adds an action to the command. Will overwrite existing actions if they are specified as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca9c1f969e2cac5fa38f807947fa6724f6b9b480" translate="yes" xml:space="preserve">
          <source>Adds an additional HAVING condition to the existing one but ignores &lt;a href=&quot;yii-db-querytrait#isEmpty()-detail&quot;&gt;empty operands&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cae76c1e44bed10f3726ca307a26b848567a3ba3" translate="yes" xml:space="preserve">
          <source>Adds an additional HAVING condition to the existing one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72bbe3ccaeb206dffa9df704cf94be48295967cd" translate="yes" xml:space="preserve">
          <source>Adds an additional MATCH condition to the existing one but ignores &lt;a href=&quot;yii-sphinx-matchexpression#isEmpty()-detail&quot;&gt;empty operands&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62d0495d5796e3f55b8fd33577174c51cb0f54d0" translate="yes" xml:space="preserve">
          <source>Adds an additional MATCH condition to the existing one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e4a85af8c8f690b20b5ba12547ed5ed0f5adfe7" translate="yes" xml:space="preserve">
          <source>Adds an additional ON condition to the existing one.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
