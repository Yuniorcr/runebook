<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="webpack">
    <body>
      <group id="webpack">
        <trans-unit id="7bb05d7ee20a6c1cefef0b3ccead645eb8b52568" translate="yes" xml:space="preserve">
          <source>&quot;Hey webpack compiler, when you come across a path that resolves to a '.txt' file inside of a &lt;code&gt;require()&lt;/code&gt;/&lt;code&gt;import&lt;/code&gt; statement, &lt;strong&gt;use&lt;/strong&gt; the &lt;code&gt;raw-loader&lt;/code&gt; to transform it before you add it to the bundle.&quot;</source>
          <target state="translated">&quot;Oye, compilador de paquetes web, cuando encuentres una ruta que se resuelva en un archivo '.txt' dentro de una instrucci&amp;oacute;n &lt;code&gt;require()&lt;/code&gt; / &lt;code&gt;import&lt;/code&gt; , &lt;strong&gt;usa&lt;/strong&gt; el &lt;code&gt;raw-loader&lt;/code&gt; para transformarlo antes de agregarlo al paquete&quot;.</target>
        </trans-unit>
        <trans-unit id="7f860626b139ec296f319e19486e8f3d19ce5252" translate="yes" xml:space="preserve">
          <source>&quot;Raw&quot; Loader</source>
          <target state="translated">Cargador &quot;sin procesar&quot;</target>
        </trans-unit>
        <trans-unit id="db0454432fcf67ee00b8b39ba84820f77da54dcd" translate="yes" xml:space="preserve">
          <source>&amp;copy; JS Foundation and other contributors</source>
          <target state="translated">&amp;copy; JS Foundation y otros colaboradores</target>
        </trans-unit>
        <trans-unit id="ffb741d69b0b20643ee151c779aa4dfe1cd90448" translate="yes" xml:space="preserve">
          <source>&amp;lt;link rel=&amp;rdquo;prefetch/preload&amp;rdquo;&amp;gt; in webpack</source>
          <target state="translated">&amp;lt;link rel = &quot;prefetch / preload&quot;&amp;gt; en paquete web</target>
        </trans-unit>
        <trans-unit id="db3115f2d3fdb0d2086235d6d94e6d140eec6f31" translate="yes" xml:space="preserve">
          <source>'Root-relative' URLs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a42530deec511f778a481ebaeb7a84754096d7f" translate="yes" xml:space="preserve">
          <source>(1) &lt;code&gt;electron&lt;/code&gt;, &lt;code&gt;worker&lt;/code&gt; and &lt;code&gt;worklet&lt;/code&gt; comes combined with either &lt;code&gt;node&lt;/code&gt; or &lt;code&gt;browser&lt;/code&gt;, depending on the context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="155c57beffe2e6cea927d0c7373e6b4b9c9bb0dc" translate="yes" xml:space="preserve">
          <source>(1) &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;require&lt;/code&gt; are both set independent of referencing syntax. &lt;code&gt;require&lt;/code&gt; has always lower priority.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35d43d6dc582e5f7a3415cdaffaeef1797d7b559" translate="yes" xml:space="preserve">
          <source>(1) deprecated in Node.js, &lt;code&gt;*&lt;/code&gt; should be preferred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7db9e8aeb906e6c974f3d3284311961e892f47b0" translate="yes" xml:space="preserve">
          <source>(2) &lt;code&gt;&quot;./&quot;&lt;/code&gt; is intentionally ignored as key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d65bf9ecf10b77cf27c5d791f2c6adc75a6079c1" translate="yes" xml:space="preserve">
          <source>(2) This is set for browser target environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1df571eb0a87a45c64342d2c862a55f2b4ff39b1" translate="yes" xml:space="preserve">
          <source>(3) The property value is ignored and property key is used as target. Effectively only allowing mappings with key and value are identical.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cab3621d00cfdccb864840094ca1869b44373f3" translate="yes" xml:space="preserve">
          <source>(4) The syntax is supported, but always the first entry is used, which makes it unusable for any practical use case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffed151df1c8d3aa089da3ee213502a98357ee53" translate="yes" xml:space="preserve">
          <source>(5) Fallback to alternative sibling parent conditions is handling incorrectly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4510f2eb485ade85024bc1bba38dc8b04374ba0" translate="yes" xml:space="preserve">
          <source>(6) For the &lt;code&gt;require&lt;/code&gt; condition object order is handled incorrectly. This is intentionally as wmr doesn't differ between referencing syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="912f96714dcf7e2d5459cb9cc7f5896fe1efcb50" translate="yes" xml:space="preserve">
          <source>(7) When using &lt;code&gt;&quot;exports&quot;: &quot;./file.js&quot;&lt;/code&gt; abbreviation, any request e. g. &lt;code&gt;package/not-existing&lt;/code&gt; will resolve to that. When not using the abbreviation, direct file access e. g. &lt;code&gt;package/file.js&lt;/code&gt; will not lead to an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e3550cac5d8175ae22a407324a9418b3751380a" translate="yes" xml:space="preserve">
          <source>(Loaders options left out for clarity, adapt accordingly to your needs.)</source>
          <target state="translated">(Las opciones de cargadores quedan fuera para mayor claridad, ad&amp;aacute;ptese de acuerdo a sus necesidades).</target>
        </trans-unit>
        <trans-unit id="ad976f33858c56765e6b244f53a720c534ca0e7f" translate="yes" xml:space="preserve">
          <source>(Recommended). The plugin may emit messages in &lt;code&gt;result.messages&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c6b183d348f955357b33a3fba45083e98ab8125" translate="yes" xml:space="preserve">
          <source>(none)</source>
          <target state="translated">(none)</target>
        </trans-unit>
        <trans-unit id="61dd263ede1adab233628e0671fed0ca330c935b" translate="yes" xml:space="preserve">
          <source>(only combined with &lt;code&gt;import&lt;/code&gt; or &lt;code&gt;require&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a979ef10cc6f6a36df6b8a323307ee3bb2e2db9c" translate="yes" xml:space="preserve">
          <source>+</source>
          <target state="translated">+</target>
        </trans-unit>
        <trans-unit id="b84da6d40abc1f06bf25fb9e2240531ded3dac3a" translate="yes" xml:space="preserve">
          <source>++</source>
          <target state="translated">++</target>
        </trans-unit>
        <trans-unit id="86c3ea5ab6f1797abaf2328d1855b266cbb1c869" translate="yes" xml:space="preserve">
          <source>+++</source>
          <target state="translated">+++</target>
        </trans-unit>
        <trans-unit id="3bc15c8aae3e4124dd409035f32ea2fd6835efc9" translate="yes" xml:space="preserve">
          <source>-</source>
          <target state="translated">-</target>
        </trans-unit>
        <trans-unit id="e6a9fc04320a924f46c7c737432bb0389d9dd095" translate="yes" xml:space="preserve">
          <source>--</source>
          <target state="translated">--</target>
        </trans-unit>
        <trans-unit id="dd387504ef20516c937a463491eb5028b76ad4af" translate="yes" xml:space="preserve">
          <source>--no-color</source>
          <target state="translated">--no-color</target>
        </trans-unit>
        <trans-unit id="f8709ae8ac2f42bae497e637497dceefd5124505" translate="yes" xml:space="preserve">
          <source>--no-hot</source>
          <target state="translated">--no-hot</target>
        </trans-unit>
        <trans-unit id="70ae65db8456c24c60f9494305deb0a662d68ec5" translate="yes" xml:space="preserve">
          <source>--no-stats</source>
          <target state="translated">--no-stats</target>
        </trans-unit>
        <trans-unit id="5261014df3d421f1bc985b781d416aa946ed61e3" translate="yes" xml:space="preserve">
          <source>--resolve-alias jquery-plugin=jquery.plugin</source>
          <target state="translated">--resolve-alias jquery-plugin = jquery.plugin</target>
        </trans-unit>
        <trans-unit id="0804cc8c5bd8a87d00a6d6f957a7a51e3df1abc5" translate="yes" xml:space="preserve">
          <source>--resolve-extensions .es6 .js .ts</source>
          <target state="translated">--resolve-extensions .es6 .js .ts</target>
        </trans-unit>
        <trans-unit id="d5537351313df4188977a7d2a773daedb94d0b26" translate="yes" xml:space="preserve">
          <source>-d</source>
          <target state="translated">-d</target>
        </trans-unit>
        <trans-unit id="f768616ef823e7864962e05cfb8231fce774193d" translate="yes" xml:space="preserve">
          <source>-p</source>
          <target state="translated">-p</target>
        </trans-unit>
        <trans-unit id="6eae3a5b062c6d0d79f070c26e6d62486b40cb46" translate="yes" xml:space="preserve">
          <source>...</source>
          <target state="translated">...</target>
        </trans-unit>
        <trans-unit id="d0a1e2ac81eb4e29255d2a38cdaf4ad96c8858ea" translate="yes" xml:space="preserve">
          <source>... we can see that all three have. This is because each &lt;a href=&quot;../api/module-variables#module-id-commonjs-&quot;&gt;&lt;code&gt;module.id&lt;/code&gt;&lt;/a&gt; is incremented based on resolving order by default. Meaning when the order of resolving is changed, the IDs will be changed as well. So, to recap:</source>
          <target state="translated">... podemos ver que los tres tienen. Esto se debe a que cada &lt;a href=&quot;../api/module-variables#module-id-commonjs-&quot;&gt; &lt;code&gt;module.id&lt;/code&gt; &lt;/a&gt; se incrementa seg&amp;uacute;n el orden de resoluci&amp;oacute;n de forma predeterminada. Lo que significa que cuando se cambia el orden de resoluci&amp;oacute;n, tambi&amp;eacute;n se cambiar&amp;aacute;n los ID. Entonces, para recapitular:</target>
        </trans-unit>
        <trans-unit id="941f9235edb56638128c1955a58938dded4560b8" translate="yes" xml:space="preserve">
          <source>... we can see that all three have. This is because each &lt;a href=&quot;../api/module-variables#moduleid-commonjs&quot;&gt;&lt;code&gt;module.id&lt;/code&gt;&lt;/a&gt; is incremented based on resolving order by default. Meaning when the order of resolving is changed, the IDs will be changed as well. So, to recap:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4c1ef5aa45202042f5a97bd617e44888bf5b62b" translate="yes" xml:space="preserve">
          <source>...to have something that will not only let us write modules but also support any module format (at least until we get to ESM) and handle resources and assets at the same time?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d52b92dc2a57290e8448c7137edcfa7daee2779" translate="yes" xml:space="preserve">
          <source>...which means &quot;any require statement matching &lt;code&gt;'./locale'&lt;/code&gt; from any directories ending with &lt;code&gt;'moment'&lt;/code&gt; will be ignored.</source>
          <target state="translated">... lo que significa que &quot;cualquier instrucci&amp;oacute;n require que coincida con &lt;code&gt;'./locale'&lt;/code&gt; de cualquier directorio que termine con &lt;code&gt;'moment'&lt;/code&gt; ser&amp;aacute; ignorada.</target>
        </trans-unit>
        <trans-unit id="ae8d8b0660792a09f1e3209ff7707a65cabcdbc9" translate="yes" xml:space="preserve">
          <source>...your first regexp must match that &lt;code&gt;'./locale/'&lt;/code&gt; string. The second &lt;code&gt;contextRegExp&lt;/code&gt; parameter is then used to select specific directories from where the import took place. The following will cause those locale files to be ignored:</source>
          <target state="translated">... su primera &lt;code&gt;'./locale/'&lt;/code&gt; debe coincidir con esa cadena './locale/' . El segundo par&amp;aacute;metro &lt;code&gt;contextRegExp&lt;/code&gt; se utiliza para seleccionar directorios espec&amp;iacute;ficos desde donde se realiz&amp;oacute; la importaci&amp;oacute;n. Lo siguiente har&amp;aacute; que se ignoren esos archivos de configuraci&amp;oacute;n regional:</target>
        </trans-unit>
        <trans-unit id="1e835b7212a0acc496ccb0b14bab58f8077d82b3" translate="yes" xml:space="preserve">
          <source>./colors.json</source>
          <target state="translated">./colors.json</target>
        </trans-unit>
        <trans-unit id="6dc390c6abe7d38b170d7554a35b11cacddfc2e6" translate="yes" xml:space="preserve">
          <source>./de-de.colors.json</source>
          <target state="translated">./de-de.colors.json</target>
        </trans-unit>
        <trans-unit id="42099b4af021e53fd8fd4e056c2568d7c2e3ffa8" translate="yes" xml:space="preserve">
          <source>/</source>
          <target state="translated">/</target>
        </trans-unit>
        <trans-unit id="264c4522d846d7fed4f171645ce4610b00166766" translate="yes" xml:space="preserve">
          <source>:heavy_check_mark:</source>
          <target state="translated">:heavy_check_mark:</target>
        </trans-unit>
        <trans-unit id="577615a4c49147a7f35b0693b2c4dba2723efbdd" translate="yes" xml:space="preserve">
          <source>:heavy_multiplication_x:</source>
          <target state="translated">:heavy_multiplication_x:</target>
        </trans-unit>
        <trans-unit id="0d7b1f31576be399cdc30628e8acc38af16b6ecc" translate="yes" xml:space="preserve">
          <source>:information_source: Source maps and assets referenced with &lt;code&gt;url&lt;/code&gt;: when style loader is used with &lt;code&gt;{ options: { sourceMap: true } }&lt;/code&gt; option, the CSS modules will be generated as &lt;code&gt;Blob&lt;/code&gt;s, so relative paths don't work (they would be relative to &lt;code&gt;chrome:blob&lt;/code&gt; or &lt;code&gt;chrome:devtools&lt;/code&gt;). In order for assets to maintain correct paths setting &lt;code&gt;output.publicPath&lt;/code&gt; property of webpack configuration must be set, so that absolute paths are generated. Alternatively you can enable the &lt;code&gt;convertToAbsoluteUrls&lt;/code&gt; option mentioned above.</source>
          <target state="translated">: information_source: mapas de origen y activos referenciados con &lt;code&gt;url&lt;/code&gt; : cuando se usa el cargador de estilo con la &lt;code&gt;{ options: { sourceMap: true } }&lt;/code&gt; , los m&amp;oacute;dulos CSS se generar&amp;aacute;n como &lt;code&gt;Blob&lt;/code&gt; s, por lo que las rutas relativas no funcionan (ser&amp;iacute;an relativas a &lt;code&gt;chrome:blob&lt;/code&gt; o &lt;code&gt;chrome:devtools&lt;/code&gt; ). Para que los activos mantengan las rutas correctas, se &lt;code&gt;output.publicPath&lt;/code&gt; establecer la propiedad output.publicPath de la configuraci&amp;oacute;n del paquete web, de modo que se generen rutas absolutas. Alternativamente, puede habilitar la opci&amp;oacute;n &lt;code&gt;convertToAbsoluteUrls&lt;/code&gt; mencionada anteriormente.</target>
        </trans-unit>
        <trans-unit id="464b666700a1606ecdbfed0b4d25868a9d6dc0dc" translate="yes" xml:space="preserve">
          <source>:warning: &lt;a href=&quot;https://github.com/csstools/postcss-preset-env&quot;&gt;&lt;code&gt;postcss-preset-env&lt;/code&gt;&lt;/a&gt; includes &lt;a href=&quot;https://github.com/postcss/autoprefixer&quot;&gt;&lt;code&gt;autoprefixer&lt;/code&gt;&lt;/a&gt;, so adding it separately is not necessary if you already use the preset.</source>
          <target state="translated">: advertencia: &lt;a href=&quot;https://github.com/csstools/postcss-preset-env&quot;&gt; &lt;code&gt;postcss-preset-env&lt;/code&gt; &lt;/a&gt; incluye &lt;a href=&quot;https://github.com/postcss/autoprefixer&quot;&gt; &lt;code&gt;autoprefixer&lt;/code&gt; &lt;/a&gt; , por lo que no es necesario agregarlo por separado si ya usa el preset.</target>
        </trans-unit>
        <trans-unit id="0057fa4b59e3039f104cee4870ecd836e2b06bf7" translate="yes" xml:space="preserve">
          <source>:warning: &lt;a href=&quot;https://github.com/csstools/postcss-preset-env&quot;&gt;&lt;code&gt;postcss-preset-env&lt;/code&gt;&lt;/a&gt; includes &lt;a href=&quot;https://github.com/postcss/autoprefixer&quot;&gt;&lt;code&gt;autoprefixer&lt;/code&gt;&lt;/a&gt;, so adding it separately is not necessary if you already use the preset. More &lt;a href=&quot;https://github.com/csstools/postcss-preset-env#autoprefixer&quot;&gt;information&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee6793b1aa0618d36dcedad4603334699fe21d9e" translate="yes" xml:space="preserve">
          <source>:warning: &lt;code&gt;-attributes&lt;/code&gt; sets &lt;code&gt;attributes: false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be307fac62e409b693f0c839ab98eee881a43799" translate="yes" xml:space="preserve">
          <source>:warning: &lt;code&gt;ExtractTextPlugin&lt;/code&gt; generates a file &lt;strong&gt;per entry&lt;/strong&gt;, so you must use &lt;code&gt;[name]&lt;/code&gt;, &lt;code&gt;[id]&lt;/code&gt; or &lt;code&gt;[contenthash]&lt;/code&gt; when using multiple entries.</source>
          <target state="translated">: advertencia: &lt;code&gt;ExtractTextPlugin&lt;/code&gt; genera un archivo &lt;strong&gt;por entrada&lt;/strong&gt; , por lo que debe utilizar &lt;code&gt;[name]&lt;/code&gt; , &lt;code&gt;[id]&lt;/code&gt; o &lt;code&gt;[contenthash]&lt;/code&gt; cuando utilice varias entradas.</target>
        </trans-unit>
        <trans-unit id="78fe44e3bef9c13d1391256274032011ecef3738" translate="yes" xml:space="preserve">
          <source>:warning: Behavior is undefined when &lt;code&gt;unuse&lt;/code&gt;/&lt;code&gt;unref&lt;/code&gt; is called more often than &lt;code&gt;use&lt;/code&gt;/&lt;code&gt;ref&lt;/code&gt;. Don't do that.</source>
          <target state="translated">: advertencia: El comportamiento no est&amp;aacute; definido cuando se llama a &lt;code&gt;unuse&lt;/code&gt; / &lt;code&gt;unref&lt;/code&gt; con m&amp;aacute;s frecuencia que &lt;code&gt;use&lt;/code&gt; / &lt;code&gt;ref&lt;/code&gt; . No hagas eso.</target>
        </trans-unit>
        <trans-unit id="e94493787adfb9ff98f06a109c74e8a5f9817c68" translate="yes" xml:space="preserve">
          <source>:warning: Doesn't work in NodeJS</source>
          <target state="translated">: advertencia: no funciona en NodeJS</target>
        </trans-unit>
        <trans-unit id="43efa7c5e46d3bd06bd2ee328cb48dd54fe0c477" translate="yes" xml:space="preserve">
          <source>:warning: For webpack v1, see &lt;a href=&quot;https://github.com/webpack/extract-text-webpack-plugin/blob/webpack-1/README.md&quot;&gt;the README in the webpack-1 branch&lt;/a&gt;.</source>
          <target state="translated">: advertencia: Para webpack v1, consulte &lt;a href=&quot;https://github.com/webpack/extract-text-webpack-plugin/blob/webpack-1/README.md&quot;&gt;el archivo README en la rama webpack-1&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="acf67e65c7cacdc688d3145c921806e347553fc8" translate="yes" xml:space="preserve">
          <source>:warning: If you are using Babel you need to do the following in order for the setup to work</source>
          <target state="translated">: advertencia: si est&amp;aacute; utilizando Babel, debe hacer lo siguiente para que la configuraci&amp;oacute;n funcione</target>
        </trans-unit>
        <trans-unit id="5edb940c189d2e2c14006c1f29209aca2d18c365" translate="yes" xml:space="preserve">
          <source>:warning: Since webpack v4 the &lt;code&gt;extract-text-webpack-plugin&lt;/code&gt; should not be used for css. Use &lt;a href=&quot;mini-css-extract-plugin&quot;&gt;mini-css-extract-plugin&lt;/a&gt; instead.</source>
          <target state="translated">: advertencia: Desde webpack v4, el &lt;code&gt;extract-text-webpack-plugin&lt;/code&gt; no debe usarse para css. En su lugar, utilice &lt;a href=&quot;mini-css-extract-plugin&quot;&gt;mini-css-extract-plugin&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="685a7f1368d3bca35cd1d7166ededed3acd9f566" translate="yes" xml:space="preserve">
          <source>:warning: chunks created by the loader will be named according to the &lt;a href=&quot;../configuration/output#output-chunkfilename&quot;&gt;&lt;code&gt;output.chunkFilename&lt;/code&gt;&lt;/a&gt; rule, which defaults to &lt;code&gt;[id].[name]&lt;/code&gt;. Here &lt;code&gt;[name]&lt;/code&gt; corresponds to the chunk name set in the &lt;code&gt;name&lt;/code&gt; options parameter.</source>
          <target state="translated">: advertencia: los fragmentos creados por el cargador se nombrar&amp;aacute;n de acuerdo con la regla &lt;a href=&quot;../configuration/output#output-chunkfilename&quot;&gt; &lt;code&gt;output.chunkFilename&lt;/code&gt; &lt;/a&gt; , que por defecto es &lt;code&gt;[id].[name]&lt;/code&gt; . Aqu&amp;iacute; &lt;code&gt;[name]&lt;/code&gt; corresponde al nombre del fragmento establecido en el par&amp;aacute;metro de opciones de &lt;code&gt;name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="825e8dbe2115d276ea12ed480896f38abf3a2135" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#cli&quot;&gt;CLI&lt;/a&gt;: Specify them within a shell command.</source>
          <target state="translated">&lt;a href=&quot;#cli&quot;&gt;CLI&lt;/a&gt; : especif&amp;iacute;quelos dentro de un comando de shell.</target>
        </trans-unit>
        <trans-unit id="67ce247d8111ebe5a7257b9de641f9462a6872ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#configuration&quot;&gt;Configuration&lt;/a&gt; (recommended): Specify them in your &lt;strong&gt;webpack.config.js&lt;/strong&gt; file.</source>
          <target state="translated">&lt;a href=&quot;#configuration&quot;&gt;Configuraci&amp;oacute;n&lt;/a&gt; (recomendado): &lt;strong&gt;especif&amp;iacute;quelos&lt;/strong&gt; en su archivo &lt;strong&gt;webpack.config.js&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="73264e224eb2ad575f26dfde1aa629ea764a72c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#devserverwatchoptions-&quot;&gt;&lt;code&gt;watchOptions&lt;/code&gt;&lt;/a&gt; will have no effect when used with &lt;strong&gt;lazy mode&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81d793a42a79e3652e8242f326fe89a0c8802703" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#inline&quot;&gt;Inline&lt;/a&gt;: Specify them explicitly in each &lt;code&gt;import&lt;/code&gt; statement.</source>
          <target state="translated">&lt;a href=&quot;#inline&quot;&gt;En l&amp;iacute;nea&lt;/a&gt; : especif&amp;iacute;quelos expl&amp;iacute;citamente en cada declaraci&amp;oacute;n de &lt;code&gt;import&lt;/code&gt; aci&amp;oacute;n .</target>
        </trans-unit>
        <trans-unit id="1d5d6c5fd30a87eb1777cc69533d4adbad2cbe87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../concepts/loaders&quot;&gt;Usage&lt;/a&gt;&lt;a&gt;Usage&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#usage&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;../concepts/loaders&quot;&gt;Uso &lt;/a&gt;&lt;a&gt;Uso&lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # uso &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="715de71e1b82d0f0a38d8aa2945f2f59705d777e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../configuration/module#module-rules&quot;&gt;&lt;code&gt;module.rules&lt;/code&gt;&lt;/a&gt; allows you to specify several loaders within your webpack configuration. This is a concise way to display loaders, and helps to maintain clean code. It also offers you a full overview of each respective loader.</source>
          <target state="translated">&lt;a href=&quot;../configuration/module#module-rules&quot;&gt; &lt;code&gt;module.rules&lt;/code&gt; le&lt;/a&gt; permite especificar varios cargadores dentro de la configuraci&amp;oacute;n de su paquete web. Esta es una forma concisa de mostrar los cargadores y ayuda a mantener un c&amp;oacute;digo limpio. Tambi&amp;eacute;n le ofrece una descripci&amp;oacute;n completa de cada cargador respectivo.</target>
        </trans-unit>
        <trans-unit id="1f82b391c492ff36e97a28c53fdae578035e1f2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../configuration/module#modulerules&quot;&gt;&lt;code&gt;module.rules&lt;/code&gt;&lt;/a&gt; allows you to specify several loaders within your webpack configuration. This is a concise way to display loaders, and helps to maintain clean code. It also offers you a full overview of each respective loader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f2d1ac0594213142e32a551dfa67a70764bc8ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../configuration/output#outputchunkfilename&quot;&gt;&lt;code&gt;output.chunkFilename&lt;/code&gt;&lt;/a&gt; - for &lt;code&gt;non-initial&lt;/code&gt; chunk files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c1bc05b2bf96744999d49e273b2a45f72b35b18" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../configuration/output#outputfilename&quot;&gt;&lt;code&gt;output.filename&lt;/code&gt;&lt;/a&gt; - for &lt;code&gt;initial&lt;/code&gt; chunk files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2148a4526e4817d33935bcf508c6bb4b3db0ab0a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../loaders/bundle-loader&quot;&gt;&lt;code&gt;bundle-loader&lt;/code&gt;&lt;/a&gt;: Used to split code and lazy load the resulting bundles.</source>
          <target state="translated">&lt;a href=&quot;../loaders/bundle-loader&quot;&gt; &lt;code&gt;bundle-loader&lt;/code&gt; &lt;/a&gt; : se utiliza para dividir el c&amp;oacute;digo y cargar de forma diferida los paquetes resultantes.</target>
        </trans-unit>
        <trans-unit id="d3938acecafabab920ffa0cbb9e877e57ff207a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../loaders/file-loader&quot;&gt;&lt;code&gt;file-loader&lt;/code&gt;&lt;/a&gt; to emit a file into the output directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c63e6f4673d0f3491c0692adbcc03c6e7675df1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../loaders/raw-loader&quot;&gt;&lt;code&gt;raw-loader&lt;/code&gt;&lt;/a&gt; to import a file as a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9adcf3673d4f592b3f70b186023a68ad79cf8da7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../loaders/url-loader&quot;&gt;&lt;code&gt;url-loader&lt;/code&gt;&lt;/a&gt; to inline a file into the bundle as a data URI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deb7c4c81843bd736e62fbcf123dbc265d9a8440" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../plugins/extract-text-webpack-plugin&quot;&gt;extract-text-webpack-plugin&lt;/a&gt; (more complex, but works in all use-cases)</source>
          <target state="translated">&lt;a href=&quot;../plugins/extract-text-webpack-plugin&quot;&gt;extract-text-webpack-plugin&lt;/a&gt; (m&amp;aacute;s complejo, pero funciona en todos los casos de uso)</target>
        </trans-unit>
        <trans-unit id="25e37d5e9101f30b64071c9d5d3d5e19ab779c19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;&lt;code&gt;mini-css-extract-plugin&lt;/code&gt;&lt;/a&gt;: Useful for splitting CSS out from the main application.</source>
          <target state="translated">&lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt; &lt;code&gt;mini-css-extract-plugin&lt;/code&gt; &lt;/a&gt; : &amp;uacute;til para dividir CSS desde la aplicaci&amp;oacute;n principal.</target>
        </trans-unit>
        <trans-unit id="3afec9357248b4bb2ba6fd11fc209763ebb181ee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;MiniCssExtractPlugin&lt;/a&gt; (more complex, but works in all use-cases)</source>
          <target state="translated">&lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;MiniCssExtractPlugin&lt;/a&gt; (m&amp;aacute;s complejo, pero funciona en todos los casos de uso)</target>
        </trans-unit>
        <trans-unit id="7c9f1a0f45a01b15557e22e208dce14fadfc97e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;mini-css-extract-plugin&lt;/a&gt; (use this, when using webpack 4 configuration. Works in all use-cases)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2734b503b72dcebd5ac6f35b77bc406bfc3cfcf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../plugins/module-concatenation-plugin&quot;&gt;&lt;code&gt;ModuleConcatenationPlugin&lt;/code&gt;&lt;/a&gt; is needed for the tree shaking to work. It is added by &lt;code&gt;mode: 'production'&lt;/code&gt;. If you are not using it, remember to add the &lt;a href=&quot;../plugins/module-concatenation-plugin&quot;&gt;&lt;code&gt;ModuleConcatenationPlugin&lt;/code&gt;&lt;/a&gt; manually.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05c1e3f3a0d1441fe3c61304406072ce64f9be0e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../plugins/module-concatenation-plugin&quot;&gt;ModuleConcatenationPlugin&lt;/a&gt; is needed for the tree shaking to work. It is added by &lt;code&gt;mode: &quot;production&quot;&lt;/code&gt;. If you are not using it, remember to add the &lt;a href=&quot;../plugins/module-concatenation-plugin&quot;&gt;ModuleConcatenationPlugin&lt;/a&gt; manually.</source>
          <target state="translated">&lt;a href=&quot;../plugins/module-concatenation-plugin&quot;&gt;ModuleConcatenationPlugin&lt;/a&gt; es necesario para que funcione el temblor del &amp;aacute;rbol. Se agrega por &lt;code&gt;mode: &quot;production&quot;&lt;/code&gt; . Si no lo est&amp;aacute; utilizando, recuerde agregar el &lt;a href=&quot;../plugins/module-concatenation-plugin&quot;&gt;ModuleConcatenationPlugin&lt;/a&gt; manualmente.</target>
        </trans-unit>
        <trans-unit id="e18eb076f40a648696d6bd3cd309bb42ba51d4a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../plugins/uglifyjs-webpack-plugin&quot;&gt;UglifyJsPlugin&lt;/a&gt; &amp;amp; &lt;a href=&quot;../plugins/loader-options-plugin&quot;&gt;LoaderOptionsPlugin&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../plugins/uglifyjs-webpack-plugin&quot;&gt;UglifyJsPlugin&lt;/a&gt; &amp;amp; &lt;a href=&quot;../plugins/loader-options-plugin&quot;&gt;LoaderOptionsPlugin&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="daba29b182a0d14a8184be43c71f7a1feabfc66d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;babel-loader&quot;&gt;&lt;code&gt;babel-loader&lt;/code&gt;&lt;/a&gt; Loads ES2015+ code and transpiles to ES5 using &lt;a href=&quot;https://babeljs.io/&quot;&gt;Babel&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;babel-loader&quot;&gt; &lt;code&gt;babel-loader&lt;/code&gt; &lt;/a&gt; Carga el c&amp;oacute;digo ES2015 + y lo transpila a ES5 usando&lt;a href=&quot;https://babeljs.io/&quot;&gt; Babel&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6a1646dc9f8649a9fa1f600c4cc29268ba1bc83f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;coffee-loader&quot;&gt;&lt;code&gt;coffee-loader&lt;/code&gt;&lt;/a&gt; Loads &lt;a href=&quot;http://coffeescript.org/&quot;&gt;CoffeeScript&lt;/a&gt; like JavaScript</source>
          <target state="translated">&lt;a href=&quot;coffee-loader&quot;&gt; &lt;code&gt;coffee-loader&lt;/code&gt; &lt;/a&gt; Carga&lt;a href=&quot;http://coffeescript.org/&quot;&gt; CoffeeScript&lt;/a&gt; como JavaScript</target>
        </trans-unit>
        <trans-unit id="c4ffac3e8cf062fd36e1d2592e4b716f883b73b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;coverjs-loader&quot;&gt;&lt;code&gt;coverjs-loader&lt;/code&gt;&lt;/a&gt; PreLoader to determine the testing coverage using &lt;a href=&quot;https://github.com/arian/CoverJS&quot;&gt;CoverJS&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;coverjs-loader&quot;&gt; &lt;code&gt;coverjs-loader&lt;/code&gt; &lt;/a&gt; PreLoader para determinar la cobertura de prueba usando&lt;a href=&quot;https://github.com/arian/CoverJS&quot;&gt; CoverJS&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f5f1fa5500702b18f78b56fdbec661b87cc53194" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;css-loader&quot;&gt;&lt;code&gt;css-loader&lt;/code&gt;&lt;/a&gt; Loads CSS file with resolved imports and returns CSS code</source>
          <target state="translated">&lt;a href=&quot;css-loader&quot;&gt; &lt;code&gt;css-loader&lt;/code&gt; &lt;/a&gt; Carga el archivo CSS con importaciones resueltas y devuelve c&amp;oacute;digo CSS</target>
        </trans-unit>
        <trans-unit id="5b83a7f435984c565dd14a4ee19ee29c588d7e1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;externals#externalstype&quot;&gt;Default type&lt;/a&gt; will be used if you specify &lt;code&gt;externals&lt;/code&gt; without a type e.g. &lt;code&gt;externals: { react: 'react' }&lt;/code&gt; instead of &lt;code&gt;externals: { react: 'commonjs-module react' }&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9129942e1653977fac3de734f8315dd62c35f72" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;file-loader&quot;&gt;&lt;code&gt;file-loader&lt;/code&gt;&lt;/a&gt; Emits the file into the output folder and returns the (relative) URL</source>
          <target state="translated">&lt;a href=&quot;file-loader&quot;&gt; &lt;code&gt;file-loader&lt;/code&gt; &lt;/a&gt; Emite el archivo en la carpeta de salida y devuelve la URL (relativa)</target>
        </trans-unit>
        <trans-unit id="77c5ca750b87c23ca35398c6cfa0a2b8e1eb9f94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;html-loader&quot;&gt;&lt;code&gt;html-loader&lt;/code&gt;&lt;/a&gt; Exports HTML as string, require references to static resources</source>
          <target state="translated">&lt;a href=&quot;html-loader&quot;&gt; &lt;code&gt;html-loader&lt;/code&gt; &lt;/a&gt; Exporta HTML como cadena, requiere referencias a recursos est&amp;aacute;ticos</target>
        </trans-unit>
        <trans-unit id="e56a2634465846ed3062e4cb3ce8bd242ffc96aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://coffeescript.org/#literate&quot;&gt;&lt;code&gt;Literate&lt;/code&gt;&lt;/a&gt;&lt;a&gt;&lt;code&gt;Literate&lt;/code&gt;&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#literate&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;http://coffeescript.org/#literate&quot;&gt; &lt;code&gt;Literate&lt;/code&gt; &lt;/a&gt;&lt;a&gt; &lt;code&gt;Literate&lt;/code&gt; &lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # literate &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5a14918d312b4c28f680d14cb1a406515332c3ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://coffeescript.org/#transpilation&quot;&gt;&lt;code&gt;Transpile&lt;/code&gt;&lt;/a&gt;&lt;a&gt;&lt;code&gt;Transpile&lt;/code&gt;&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#transpile&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;http://coffeescript.org/#transpilation&quot;&gt; &lt;code&gt;Transpile&lt;/code&gt; &lt;/a&gt;&lt;a&gt; &lt;code&gt;Transpile&lt;/code&gt; &lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # transpile &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="8b1aa32f1794377d2fe3bd76612bff9d56525c0b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://alexkuz.github.io/webpack-chart/&quot;&gt;webpack-chart&lt;/a&gt;: Interactive pie chart for webpack stats.</source>
          <target state="translated">&lt;a href=&quot;https://alexkuz.github.io/webpack-chart/&quot;&gt;webpack-chart&lt;/a&gt; : gr&amp;aacute;fico circular interactivo para estad&amp;iacute;sticas de paquetes web.</target>
        </trans-unit>
        <trans-unit id="62cdb2314d4248138e5d1d2f32295f705e4381a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://chrisbateman.github.io/webpack-visualizer/&quot;&gt;webpack-visualizer&lt;/a&gt;: Visualize and analyze your bundles to see which modules are taking up space and which might be duplicates.</source>
          <target state="translated">&lt;a href=&quot;https://chrisbateman.github.io/webpack-visualizer/&quot;&gt;webpack-visualizer&lt;/a&gt; : visualice y analice sus paquetes para ver qu&amp;eacute; m&amp;oacute;dulos est&amp;aacute;n ocupando espacio y cu&amp;aacute;les podr&amp;iacute;an estar duplicados.</target>
        </trans-unit>
        <trans-unit id="535a26a69134e475dfc35b8757a5bf599f5ad461" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://couto.mit-license.org/&quot;&gt;License&lt;/a&gt;&lt;a&gt;License&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#license&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://couto.mit-license.org/&quot;&gt;Licencia &lt;/a&gt;&lt;a&gt;Licencia&lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # licencia &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="3582ad0013ce1cc37b6e6c31a2ca9dcf12604258" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://createapp.dev/webpack&quot;&gt;createapp.dev - create a webpack configuration in your browser&lt;/a&gt; is an online tool for creating custom webpack configuration. It allows you to select various features that will be combined and added to resulting configuration file. Also, it generates an example project based on provided webpack configuration that you can review in your browser and download.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cac55337e3acdcd28c27a788765a3faa810667e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt;&lt;code&gt;WebWorkers&lt;/code&gt;&lt;/a&gt; are restricted by a &lt;a href=&quot;https://en.wikipedia.org/wiki/Same-origin_policy&quot;&gt;same-origin policy&lt;/a&gt;, so if your &lt;code&gt;webpack&lt;/code&gt; assets are not being served from the same origin as your application, their download may be blocked by your browser. This scenario can commonly occur if you are hosting your assets under a CDN domain. Even downloads from the &lt;code&gt;webpack-dev-server&lt;/code&gt; could be blocked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4753dd94b2dcee9b3023bcd4619fab7928e2235" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt;&lt;code&gt;WebWorkers&lt;/code&gt;&lt;/a&gt; are restricted by a &lt;a href=&quot;https://en.wikipedia.org/wiki/Same-origin_policy&quot;&gt;same-origin policy&lt;/a&gt;, so if your &lt;code&gt;webpack&lt;/code&gt; assets are not being served from the same origin as your application, their download may be blocked by your browser. This scenario can commonly occur if you are hosting your assets under a CDN domain. Even downloads from the &lt;code&gt;webpack-dev-server&lt;/code&gt; could be blocked. There are two workarounds:</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt; &lt;code&gt;WebWorkers&lt;/code&gt; &lt;/a&gt; est&amp;aacute;n restringidos por una&lt;a href=&quot;https://en.wikipedia.org/wiki/Same-origin_policy&quot;&gt; pol&amp;iacute;tica del mismo origen&lt;/a&gt; , por lo que si losactivos desu &lt;code&gt;webpack&lt;/code&gt; no se sirven desde el mismo origen que su aplicaci&amp;oacute;n, su navegador puede bloquear su descarga. Este escenario puede ocurrir com&amp;uacute;nmente si aloja sus activos bajo un dominio CDN. Incluso las descargas del &lt;code&gt;webpack-dev-server&lt;/code&gt; podr&amp;iacute;an bloquearse. Hay dos soluciones alternativas:</target>
        </trans-unit>
        <trans-unit id="b2977795a0ee6d5dd09df030c9a47da1838e7dc4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developers.google.com/closure/compiler/&quot;&gt;Closure-Compiler&lt;/a&gt; is a full optimizing compiler and transpiler. It offers unmatched optimizations, provides type checking and can easily target transpilation to different versions of ECMASCRIPT.</source>
          <target state="translated">&lt;a href=&quot;https://developers.google.com/closure/compiler/&quot;&gt;Closure-Compiler&lt;/a&gt; es un compilador y transpilador de optimizaci&amp;oacute;n completa. Ofrece optimizaciones inigualables, proporciona verificaci&amp;oacute;n de tipos y puede orientar f&amp;aacute;cilmente la transpilaci&amp;oacute;n a diferentes versiones de ECMASCRIPT.</target>
        </trans-unit>
        <trans-unit id="fe9d24b23646b86f08ce34c3633c956dd61396f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developers.google.com/closure/library/&quot;&gt;Closure-Library&lt;/a&gt; is a utility library designed for full compatibility with Closure-Compiler.</source>
          <target state="translated">&lt;a href=&quot;https://developers.google.com/closure/library/&quot;&gt;Closure-Library&lt;/a&gt; es una biblioteca de utilidades dise&amp;ntilde;ada para una compatibilidad total con Closure-Compiler.</target>
        </trans-unit>
        <trans-unit id="9c0b9a88c6a70bf2b97da8273f2a41d7cbac3b9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Brotli&quot;&gt;Brotli&lt;/a&gt; is a compression algorithm originally developed by Google, and offers compression superior to gzip.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="171c30b17a52db10b2a1f7f2c4557b9515a3045e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Lossless_compression&quot;&gt;Lossless&lt;/a&gt; (without loss of quality).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="756b7d5e750540240afa3063199e88de125904d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Lossy_compression&quot;&gt;Lossy&lt;/a&gt; (with loss of quality).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="794041d1b65a601535f2653529d6624cd58dfb8f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://generatewebpackconfig.netlify.com/&quot;&gt;Generate Custom Webpack Configuration&lt;/a&gt; is an interactive portal you can play around by selecting custom webpack configuration options tailored for your frontend project. It automatically generates a minimal webpack configuration based on your selection of loaders/plugins, etc.</source>
          <target state="translated">&lt;a href=&quot;https://generatewebpackconfig.netlify.com/&quot;&gt;Generate Custom Webpack Configuration&lt;/a&gt; es un portal interactivo con el que puedes jugar seleccionando opciones de configuraci&amp;oacute;n de webpack personalizadas adaptadas a tu proyecto de interfaz. Genera autom&amp;aacute;ticamente una configuraci&amp;oacute;n de paquete web m&amp;iacute;nima basada en su selecci&amp;oacute;n de cargadores / complementos, etc.</target>
        </trans-unit>
        <trans-unit id="62404634508ba21fee61785b28310dec150b57a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/TheLarkInn/angular2-template-loader&quot;&gt;&lt;code&gt;angular2-template-loader&lt;/code&gt;&lt;/a&gt; Loads and compiles &lt;a href=&quot;https://angular.io/&quot;&gt;Angular&lt;/a&gt; Components</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6819d598c8d00970b069d162f1964f6e5f89d230" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/TypeStrong/ts-loader&quot;&gt;&lt;code&gt;ts-loader&lt;/code&gt;&lt;/a&gt; Loads &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; 2.0+ like JavaScript</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1c380dabdeaf76c3306c5a62670c9f618986424" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/TypeStrong/ts-loader&quot;&gt;&lt;code&gt;ts-loader&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://github.com/s-panferov/awesome-typescript-loader&quot;&gt;&lt;code&gt;awesome-typescript-loader&lt;/code&gt;&lt;/a&gt; Loads &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; 2.0+ like JavaScript</source>
          <target state="translated">&lt;a href=&quot;https://github.com/TypeStrong/ts-loader&quot;&gt; &lt;code&gt;ts-loader&lt;/code&gt; &lt;/a&gt; o&lt;a href=&quot;https://github.com/s-panferov/awesome-typescript-loader&quot;&gt; &lt;code&gt;awesome-typescript-loader&lt;/code&gt; &lt;/a&gt; Carga&lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt; TypeScript&lt;/a&gt; 2.0+ como JavaScript</target>
        </trans-unit>
        <trans-unit id="377d8d352c2dd3f75ff4831b4833910cf7076768" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/asnowwolf/markup-inline-loader&quot;&gt;&lt;code&gt;markup-inline-loader&lt;/code&gt;&lt;/a&gt; Inline SVG/MathML files to HTML. It&amp;rsquo;s useful when applying icon font or applying CSS animation to SVG.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/asnowwolf/markup-inline-loader&quot;&gt; &lt;code&gt;markup-inline-loader&lt;/code&gt; &lt;/a&gt; Archivos SVG / MathML en l&amp;iacute;nea a HTML. Es &amp;uacute;til al aplicar fuentes de iconos o aplicar animaciones CSS a SVG.</target>
        </trans-unit>
        <trans-unit id="c7232dbef90598b35df228908036f04ce85d5ebb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/awnist/cson-loader&quot;&gt;&lt;code&gt;cson-loader&lt;/code&gt;&lt;/a&gt; Loads and transpiles a &lt;a href=&quot;https://github.com/bevry/cson#what-is-cson&quot;&gt;CSON&lt;/a&gt; file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f720ba376b9d69d347e86c5007cc1a33df849a8d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/bundle-stats/bundle-stats&quot;&gt;bundle-stats&lt;/a&gt;: Generate a bundle report(bundle size, assets, modules) and compare the results between different builds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df5c3b0a8dca04d21c04c8e5948610b30199ae3b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/css-modules/css-modules&quot;&gt;&lt;code&gt;modules&lt;/code&gt;&lt;/a&gt;&lt;a&gt;&lt;code&gt;modules&lt;/code&gt;&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#modules&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/css-modules/css-modules&quot;&gt; &lt;code&gt;modules&lt;/code&gt; &lt;/a&gt;&lt;a&gt; &lt;code&gt;modules&lt;/code&gt; &lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # m&amp;oacute;dulos &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="163bc1afcb195e2a9dc10638b032caed0094b260" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/elm-community/elm-webpack-loader&quot;&gt;&lt;code&gt;elm-webpack-loader&lt;/code&gt;&lt;/a&gt; Loads &lt;a href=&quot;https://elm-lang.org/&quot;&gt;Elm&lt;/a&gt; like JavaScript</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8ea08b0b1d61617e081f5bbb151c71356ca461c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/expressjs/serve-index&quot;&gt;&lt;code&gt;serveIndex&lt;/code&gt;&lt;/a&gt; middleware generates directory listings on viewing directories that don't have an index.html file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="648bc985f39a72bdf1443b490a4f39e50c5ae324" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/fengari-lua/fengari-loader/&quot;&gt;&lt;code&gt;fengari-loader&lt;/code&gt;&lt;/a&gt; Loads Lua code using &lt;a href=&quot;https://fengari.io/&quot;&gt;fengari&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/fengari-lua/fengari-loader/&quot;&gt; &lt;code&gt;fengari-loader&lt;/code&gt; &lt;/a&gt; Carga el c&amp;oacute;digo Lua usando&lt;a href=&quot;https://fengari.io/&quot;&gt; fengari&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="79f9315efd11ae35f49e7fa2cb00aaf0761e6f7a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/fluxxu/elm-hot-loader&quot;&gt;Elm Hot Loader&lt;/a&gt;: Supports HMR for the Elm programming language.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/fluxxu/elm-hot-loader&quot;&gt;Elm Hot Loader&lt;/a&gt; : admite HMR para el lenguaje de programaci&amp;oacute;n Elm.</target>
        </trans-unit>
        <trans-unit id="1b4295ef4939c9474212c6931c69832fefe9341c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/gaearon/promise-loader&quot;&gt;&lt;code&gt;promise-loader&lt;/code&gt;&lt;/a&gt;: Similar to the &lt;code&gt;bundle-loader&lt;/code&gt; but uses promises.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/gaearon/promise-loader&quot;&gt; &lt;code&gt;promise-loader&lt;/code&gt; &lt;/a&gt; : Similar al &lt;code&gt;bundle-loader&lt;/code&gt; pero usa promesas.</target>
        </trans-unit>
        <trans-unit id="4e7e99af9c472411a9ea650cd60606e2628c8f32" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/gaearon/react-hot-loader&quot;&gt;React Hot Loader&lt;/a&gt;: Tweak react components in real time.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/gaearon/react-hot-loader&quot;&gt;React Hot Loader&lt;/a&gt; : ajusta los componentes de reacci&amp;oacute;n en tiempo real.</target>
        </trans-unit>
        <trans-unit id="15d1dfdc953110a9e0860101d14381ec08fcfe95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/gdi2290/angular-hmr&quot;&gt;Angular HMR&lt;/a&gt;: No loader necessary! A simple change to your main NgModule file is all that's required to have full control over the HMR APIs.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/gdi2290/angular-hmr&quot;&gt;HMR angular&lt;/a&gt; : &amp;iexcl;No se necesita cargador! Un simple cambio en su archivo NgModule principal es todo lo que se requiere para tener un control total sobre las API de HMR.</target>
        </trans-unit>
        <trans-unit id="4e45ac1434dd47e275c5c058ced9cc9fde6e3101" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/imagemin/imagemin-mozjpeg&quot;&gt;imagemin-mozjpeg&lt;/a&gt; can be configured in lossless and lossy mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf99528cf8a6c0d617699b79c9126a301f423f04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/imagemin/imagemin-svgo&quot;&gt;imagemin-svgo&lt;/a&gt; can be configured in lossless and lossy mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ff7b4e48fe873ee8397dfbaffc86f59b865b4e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/istanbuljs/istanbuljs/blob/master/packages/istanbul-lib-instrument/api.md#instrumenter&quot;&gt;Options&lt;/a&gt;&lt;a&gt;Options&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#options&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/istanbuljs/istanbuljs/blob/master/packages/istanbul-lib-instrument/api.md#instrumenter&quot;&gt;Opciones &lt;/a&gt;&lt;a&gt;Opciones&lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # opciones &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="134728c395af562e49ba98ebecd76a26fed0a9f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/javiercf/react-markdown-loader&quot;&gt;&lt;code&gt;react-markdown-loader&lt;/code&gt;&lt;/a&gt; Compiles Markdown to a React Component using the markdown-parse parser</source>
          <target state="translated">&lt;a href=&quot;https://github.com/javiercf/react-markdown-loader&quot;&gt; &lt;code&gt;react-markdown-loader&lt;/code&gt; &lt;/a&gt; compila Markdown en un componente de React usando el analizador markdown-parse</target>
        </trans-unit>
        <trans-unit id="bbb81aa2e9e775baaac70f55de0436b09cd6c026" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/jupl/traceur-loader&quot;&gt;&lt;code&gt;traceur-loader&lt;/code&gt;&lt;/a&gt; Loads ES2015+ code and transpiles to ES5 using &lt;a href=&quot;https://github.com/google/traceur-compiler#readme&quot;&gt;Traceur&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0abb5f5d5ccd442e0ffb920e0dd6315ddf5116c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/klazuka/elm-hot-webpack-loader&quot;&gt;Elm Hot webpack Loader&lt;/a&gt;: Supports HMR for the Elm programming language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9115cb2110fdd2e3ba549602510d05dd96c8ec63" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/mishoo/UglifyJS2/tree/harmony#minify-options&quot;&gt;&lt;code&gt;uglifyOptions&lt;/code&gt;&lt;/a&gt;&lt;a&gt;&lt;code&gt;uglifyOptions&lt;/code&gt;&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#uglifyoptions&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/mishoo/UglifyJS2/tree/harmony#minify-options&quot;&gt; &lt;code&gt;uglifyOptions&lt;/code&gt; &lt;/a&gt;&lt;a&gt; &lt;code&gt;uglifyOptions&lt;/code&gt; &lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # uglifyoptions &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="df3176660a11eb78c9e7c0a9e8c105f9f1a251e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/pcardune/handlebars-loader&quot;&gt;&lt;code&gt;handlebars-loader&lt;/code&gt;&lt;/a&gt; Compiles Handlebars to HTML</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f081d03f2732619466b8c9523e23f043db7c6d63" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/peerigon/extract-loader&quot;&gt;&lt;code&gt;extract-loader&lt;/code&gt;&lt;/a&gt; (simpler, but specialized on the css-loader's output)</source>
          <target state="translated">&lt;a href=&quot;https://github.com/peerigon/extract-loader&quot;&gt; &lt;code&gt;extract-loader&lt;/code&gt; &lt;/a&gt; (m&amp;aacute;s simple, pero especializado en la salida de css-loader)</target>
        </trans-unit>
        <trans-unit id="41f167c1c616d04bf898a9764ad4431f04e224de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/peerigon/extract-loader&quot;&gt;extract-loader&lt;/a&gt; (simpler, but specialized on the css-loader's output)</source>
          <target state="translated">&lt;a href=&quot;https://github.com/peerigon/extract-loader&quot;&gt;extract-loader&lt;/a&gt; (m&amp;aacute;s simple, pero especializado en la salida de css-loader)</target>
        </trans-unit>
        <trans-unit id="4eddda528718fec7063db0336f46b3d48ef97aac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/peerigon/extract-loader/tree/master/examples/index-html&quot;&gt;Extracting the index.html&lt;/a&gt;&lt;a&gt;Extracting the index.html&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#extracting-the-index-html&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/peerigon/extract-loader/tree/master/examples/index-html&quot;&gt;Extrayendo el index.html &lt;/a&gt;&lt;a&gt;Extrayendo el index.html&lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # extracting-the-index-html &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="8a408d00016704c8e2269e10ab6feeb2ef7dab61" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/peerigon/markdown-loader&quot;&gt;&lt;code&gt;markdown-loader&lt;/code&gt;&lt;/a&gt; Compiles Markdown to HTML</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="430bef9e1189dca7adad2df98dfb4fcd37f68649" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/posthtml/posthtml-loader&quot;&gt;&lt;code&gt;posthtml-loader&lt;/code&gt;&lt;/a&gt; Loads and transforms a HTML file using &lt;a href=&quot;https://github.com/posthtml/posthtml&quot;&gt;PostHTML&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="febf17eba9ca4848506488c7b582aaa7d2de70b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/pugjs/pug-loader&quot;&gt;&lt;code&gt;pug-loader&lt;/code&gt;&lt;/a&gt; Loads Pug and Jade templates and returns a function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef5180b75611c06b7c0526ac620704a986d45077" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/sairion/buble-loader&quot;&gt;&lt;code&gt;buble-loader&lt;/code&gt;&lt;/a&gt; Loads ES2015+ code and transpiles to ES5 using &lt;a href=&quot;https://buble.surge.sh/guide/&quot;&gt;Bubl&amp;eacute;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9f1d80b120f52004c8e8664a3a97d036e9bf7f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/sass/dart-sass#javascript-api&quot;&gt;Dart Sass documentation&lt;/a&gt; for all available &lt;code&gt;sass&lt;/code&gt; options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd9a3edbbb864a4dee740d1bbc14d154358032b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/sass/node-sass/#options&quot;&gt;Node Sass documentation&lt;/a&gt; for all available &lt;code&gt;node-sass&lt;/code&gt; options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9adbe5973df05bc60a1e7142a81d8688cc91d7e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/sindresorhus/globby#options&quot;&gt;Options&lt;/a&gt; passed to the glob pattern matching library including &lt;code&gt;ignore&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca818139588d06e54f40fa91b7b892932fea6c88" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/sveltejs/svelte-loader&quot;&gt;Svelte Loader&lt;/a&gt;: This loader supports HMR for Svelte components out of the box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="304e267cee51c12b50671f04d79ac74520a28238" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/trivago/parallel-webpack&quot;&gt;&lt;code&gt;parallel-webpack&lt;/code&gt;&lt;/a&gt;: It allows for compilation in a worker pool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c4af5ba59f3a50bfefe64122d4ad23b2c7c07dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/trivago/parallel-webpack&quot;&gt;&lt;code&gt;parallel-webpack&lt;/code&gt;&lt;/a&gt;: It allows to do compilation in a worker pool.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/trivago/parallel-webpack&quot;&gt; &lt;code&gt;parallel-webpack&lt;/code&gt; &lt;/a&gt; : permite realizar compilaciones en un pool de trabajadores.</target>
        </trans-unit>
        <trans-unit id="b1239ec17ce15d5f33b54fd64f592d6f646e083f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/vuejs/vue-loader&quot;&gt;&lt;code&gt;vue-loader&lt;/code&gt;&lt;/a&gt; Loads and compiles &lt;a href=&quot;https://vuejs.org/v2/guide/components.html&quot;&gt;Vue Components&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f42438eb5e8340d08323c78d6901e136fbb5286e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/vuejs/vue-loader&quot;&gt;Vue Loader&lt;/a&gt;: This loader supports HMR for vue components out of the box.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/vuejs/vue-loader&quot;&gt;Vue Loader&lt;/a&gt; : este cargador admite HMR para componentes vue listos para usar.</target>
        </trans-unit>
        <trans-unit id="3234fc315cfeeafb4a329ce53a074d6d0c725a63" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/webpack-contrib/eslint-loader&quot;&gt;&lt;code&gt;eslint-loader&lt;/code&gt;&lt;/a&gt; PreLoader for linting code using &lt;a href=&quot;https://eslint.org/&quot;&gt;ESLint&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/webpack-contrib/eslint-loader&quot;&gt; &lt;code&gt;eslint-loader&lt;/code&gt; &lt;/a&gt; PreLoader para linting code usando&lt;a href=&quot;https://eslint.org/&quot;&gt; ESLint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="14a82ef669e00b2ef6f887a32ee7caa7a73e72f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/webpack-contrib/null-loader&quot;&gt;&lt;code&gt;null-loader&lt;/code&gt;&lt;/a&gt; is deprecated in webpack 5. use &lt;code&gt;alias: { xyz$: false }&lt;/code&gt; or absolute path &lt;code&gt;alias: {[path.resolve(__dirname, './path/to/module')]: false }&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb1c03cdb4bd9cb48205422475037058ab90e69f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/webpack-contrib/polymer-webpack-loader&quot;&gt;&lt;code&gt;polymer-loader&lt;/code&gt;&lt;/a&gt; Process HTML &amp;amp; CSS with preprocessor of choice and &lt;code&gt;require()&lt;/code&gt; Web Components like first-class modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b14bee727634c8ac4868b3ded19eaabbf63d013a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/webpack-contrib/remark-loader&quot;&gt;&lt;code&gt;remark-loader&lt;/code&gt;&lt;/a&gt; Load markdown through &lt;code&gt;remark&lt;/code&gt; with built-in image resolution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c52ff52b8c59e0b1a812567a7ae5b77338e61f06" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/webpack-contrib/webpack-bundle-analyzer&quot;&gt;webpack-bundle-analyzer&lt;/a&gt;: A plugin and CLI utility that represents bundle content as a convenient interactive zoomable treemap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e6e71b07c95b488b5928ad95690f7fc408a3598" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/webpack-contrib/webpack-bundle-analyzer&quot;&gt;webpack-bundle-analyzer&lt;/a&gt;: A plugin and CLI utility that represents bundle content as convenient interactive zoomable treemap.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/webpack-contrib/webpack-bundle-analyzer&quot;&gt;webpack-bundle-analyzer&lt;/a&gt; : un complemento y una utilidad CLI que representa el contenido del paquete como un pr&amp;aacute;ctico mapa de &amp;aacute;rbol interactivo con zoom.</target>
        </trans-unit>
        <trans-unit id="cb4ae94364d5c4331056baa604a442e7f0acff0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/webpack-contrib/webpack-command&quot;&gt;webpack-command&lt;/a&gt;: the lightweight, opinionated and modern CLI.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/webpack-contrib/webpack-command&quot;&gt;webpack-command&lt;/a&gt; : el CLI ligero, obstinado y moderno.</target>
        </trans-unit>
        <trans-unit id="3e5a7afd6473cda1f0713c7beb1811f4662e3f75" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/webpack/webpack-cli&quot;&gt;webpack-cli&lt;/a&gt;: the original webpack full-featured CLI.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/webpack/webpack-cli&quot;&gt;webpack-cli&lt;/a&gt; : la CLI con todas las funciones del paquete web original.</target>
        </trans-unit>
        <trans-unit id="2aae044cd9f332001e5935574e235aa60016bba5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt; can be used to quickly develop an application. See the &lt;a href=&quot;../guides/development&quot;&gt;development guide&lt;/a&gt; to get started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="801ec59ac2548740c897b02a7082a04237bbb231" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/webpack/webpack/tree/master/examples/dll&quot;&gt;Vendor&lt;/a&gt; and &lt;a href=&quot;https://github.com/webpack/webpack/tree/master/examples/dll-user&quot;&gt;User&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/webpack/webpack/tree/master/examples/dll&quot;&gt;Proveedor&lt;/a&gt; y &lt;a href=&quot;https://github.com/webpack/webpack/tree/master/examples/dll-user&quot;&gt;usuario&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bb5b23f9adbbef439312a17d229ff6b9d492344a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/zimmo-be/twig-loader&quot;&gt;&lt;code&gt;twig-loader&lt;/code&gt;&lt;/a&gt; Compiles Twig templates and returns a function</source>
          <target state="translated">&lt;a href=&quot;https://github.com/zimmo-be/twig-loader&quot;&gt; &lt;code&gt;twig-loader&lt;/code&gt; &lt;/a&gt; Compila plantillas Twig y devuelve una funci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="efbc708860856603c43be48cf64334ab9707f1d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://oss.ninja/mit/developit&quot;&gt;MIT License&lt;/a&gt; &amp;copy; &lt;a href=&quot;https://jasonformat.com/&quot;&gt;Jason Miller&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://oss.ninja/mit/developit&quot;&gt;Licencia del MIT&lt;/a&gt; &amp;copy; &lt;a href=&quot;https://jasonformat.com/&quot;&gt;Jason Miller&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="96205a8e774eb9f156b9af68c672d9aeb46b46b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/config-loader/master/.github/CONTRIBUTING.md&quot;&gt;CONTRIBUTING&lt;/a&gt;&lt;a&gt;CONTRIBUTING&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#contributing&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/config-loader/master/.github/CONTRIBUTING.md&quot;&gt;CONTRIBUYENDO &lt;/a&gt;&lt;a&gt;CONTRIBUYENDO&lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # contribuyendo &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="8b271293b8deeca920b790417531d1d5ed3b1882" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/config-loader/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/config-loader/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="c2c7836b151ae2d0e3a48f2119a281ab68a895ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/eslint-loader/master/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt;&lt;a&gt;Changelog&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#changelog&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/eslint-loader/master/CHANGELOG.md&quot;&gt;Registro de &lt;/a&gt;&lt;a&gt;cambios &lt;/a&gt;Registro de cambios &quot;class =&quot; icon-link &quot;href =&quot; # registro de cambios &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="8d5599a70d1c382cb11c548be606834447b1a6cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/eslint-loader/master/LICENSE&quot;&gt;License&lt;/a&gt;&lt;a&gt;License&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#license&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/eslint-loader/master/LICENSE&quot;&gt;Licencia &lt;/a&gt;&lt;a&gt;Licencia&lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # licencia &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="8ffa6d3c5daf707ce7faa68fea673e4da7cec344" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/exports-loader/master/.github/CONTRIBUTING.md&quot;&gt;CONTRIBUTING&lt;/a&gt;&lt;a&gt;CONTRIBUTING&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#contributing&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/exports-loader/master/.github/CONTRIBUTING.md&quot;&gt;CONTRIBUYENDO &lt;/a&gt;&lt;a&gt;CONTRIBUYENDO&lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # contribuyendo &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5f89fa7e506831478797417595c842430f9fa876" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/exports-loader/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/exports-loader/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="93cacbc66d7bb936f9d2f989ff5a2d27d6a321ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/expose-loader/master/.github/CONTRIBUTING&quot;&gt;CONTRIBUTING&lt;/a&gt;&lt;a&gt;CONTRIBUTING&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#contributing&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/expose-loader/master/.github/CONTRIBUTING&quot;&gt;CONTRIBUYENDO &lt;/a&gt;&lt;a&gt;CONTRIBUYENDO&lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # contribuyendo &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="93decd75579e77565f9786a403d66911a065ed75" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/expose-loader/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/expose-loader/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="6449bf3643be9bd6a962d8efaca7da3f3dd054fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/file-loader/master/.github/CONTRIBUTING&quot;&gt;CONTRIBUTING&lt;/a&gt;&lt;a&gt;CONTRIBUTING&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#contributing&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/file-loader/master/.github/CONTRIBUTING&quot;&gt;CONTRIBUYENDO &lt;/a&gt;&lt;a&gt;CONTRIBUYENDO&lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # contribuyendo &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="49553ca7ea2c31c6d65db40cabb4e0a6dac9810a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/file-loader/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/file-loader/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="7357dd01d9d531aa5caa19d814b013dbb6b29d0b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/jshint-loader/master/.github/CONTRIBUTING&quot;&gt;CONTRIBUTING&lt;/a&gt;&lt;a&gt;CONTRIBUTING&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#contributing&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/jshint-loader/master/.github/CONTRIBUTING&quot;&gt;CONTRIBUYENDO &lt;/a&gt;&lt;a&gt;CONTRIBUYENDO&lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # contribuyendo &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="8dafe8b074d7ef49ebdf773eae5319f2b878c7a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/jshint-loader/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/jshint-loader/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="808a4400a4b4fab4b843b80daaacef3adfba376b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/less-loader/master/.github/CONTRIBUTING&quot;&gt;CONTRIBUTING&lt;/a&gt;&lt;a&gt;CONTRIBUTING&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#contributing&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/less-loader/master/.github/CONTRIBUTING&quot;&gt;CONTRIBUYENDO &lt;/a&gt;&lt;a&gt;CONTRIBUYENDO&lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # contribuyendo &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ebd1608311e23e5ecf51604773a43407a1c0e274" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/less-loader/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/less-loader/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5743f3fe80cd5e56282ee8a891c85dd222fdbec7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/mini-css-extract-plugin/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/mini-css-extract-plugin/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="6505340e4348ec63db84bad1fd4ad0b6694cb25d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/mocha-loader/master/.github/CONTRIBUTING&quot;&gt;CONTRIBUTING&lt;/a&gt;&lt;a&gt;CONTRIBUTING&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#contributing&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/mocha-loader/master/.github/CONTRIBUTING&quot;&gt;CONTRIBUYENDO &lt;/a&gt;&lt;a&gt;CONTRIBUYENDO&lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # contribuyendo &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="a91e2f6a97834a034487f757422e7e9270336325" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/mocha-loader/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/mocha-loader/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="d6cffddd6c5a6a1adaaefa33c94daa479d53cee7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/multi-loader/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/multi-loader/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="88cf846d3e11acf17c48cf70ebeec8215b05245e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/node-loader/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/node-loader/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="59ced50a629958005d96938f7ceb254d235fad4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/null-loader/master/.github/CONTRIBUTING&quot;&gt;CONTRIBUTING&lt;/a&gt;&lt;a&gt;CONTRIBUTING&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#contributing&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/null-loader/master/.github/CONTRIBUTING&quot;&gt;CONTRIBUYENDO &lt;/a&gt;&lt;a&gt;CONTRIBUYENDO&lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # contribuyendo &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="932dcb972e11a28418487e3302b1fbfb64d2db1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/null-loader/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/null-loader/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="9525a06db101205322e59e727cccf41f2a87f78d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/raw-loader/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/raw-loader/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="58af7f2c999167de7356f0596b62b13f82a1c64d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/react-proxy-loader/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/react-proxy-loader/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="cf33f0c3b26524509da2b366eaedc83ef6fd8522" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/stylelint-webpack-plugin/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/stylelint-webpack-plugin/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="98a61c3a5aec594c4707f0801a6932ee4ad44083" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/terser-webpack-plugin/master/.github/CONTRIBUTING&quot;&gt;CONTRIBUTING&lt;/a&gt;&lt;a&gt;CONTRIBUTING&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#contributing&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/terser-webpack-plugin/master/.github/CONTRIBUTING&quot;&gt;CONTRIBUYENDO &lt;/a&gt;&lt;a&gt;CONTRIBUYENDO&lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # contribuyendo &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="0df6ce92a3a6ad813cc151961775d5550813e38b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/terser-webpack-plugin/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/terser-webpack-plugin/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ba53fda207ea5b8accfdc83e119a5146f6f7970b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/transform-loader/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/transform-loader/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="1cbd24f608eeaa9ddf3cb4361f941d5c8d088bf8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/url-loader/master/.github/CONTRIBUTING.md&quot;&gt;CONTRIBUTING&lt;/a&gt;&lt;a&gt;CONTRIBUTING&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#contributing&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/url-loader/master/.github/CONTRIBUTING.md&quot;&gt;CONTRIBUYENDO &lt;/a&gt;&lt;a&gt;CONTRIBUYENDO&lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # contribuyendo &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="269ad2f4ff43c4f87479476762bf0c47c64a5160" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/url-loader/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/url-loader/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ff1286cb4ec35f2a52a4636ac8850472ef7bcc23" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/val-loader/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/val-loader/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="37ee48c5610c0ff366269db314f55acbf307c607" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/worker-loader/master/.github/CONTRIBUTING.md&quot;&gt;CONTRIBUTING&lt;/a&gt;&lt;a&gt;CONTRIBUTING&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#contributing&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/worker-loader/master/.github/CONTRIBUTING.md&quot;&gt;CONTRIBUYENDO &lt;/a&gt;&lt;a&gt;CONTRIBUYENDO&lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # contribuyendo &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="baa601e3b1c2ce82a620bc39daf87b05d63fafed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/worker-loader/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/worker-loader/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="0e83bcf3ab733282ae7041787ebff7fd3250b3f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/yaml-frontmatter-loader/master/LICENSE&quot;&gt;MIT&lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt;&quot; class=&quot;icon-link&quot; href=&quot;#mit&quot;&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;https://raw.githubusercontent.com/webpack-contrib/yaml-frontmatter-loader/master/LICENSE&quot;&gt;MIT &lt;/a&gt;&lt;a&gt;MIT&lt;/a&gt; &quot;class =&quot; icon-link &quot;href =&quot; # mit &quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="b79e2b896026d6de9a89759a8b235bd5a84fedf3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://survivejs.com/webpack/loading/fonts/&quot;&gt;Loading Fonts&lt;/a&gt; on SurviveJS</source>
          <target state="translated">&lt;a href=&quot;https://survivejs.com/webpack/loading/fonts/&quot;&gt;Cargando fuentes&lt;/a&gt; en SurviveJS</target>
        </trans-unit>
        <trans-unit id="873ceab2217bae95eb611589f9732e6f99b46085" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://webpack.jakoblind.no/optimize&quot;&gt;webpack bundle optimize helper&lt;/a&gt;: This tool will analyze your bundle and give you actionable suggestions on what to improve to reduce your bundle size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18e5d4bf02fcafd6013bb0f3776a1a933e716286" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.npmjs.com/package/ref-loader&quot;&gt;&lt;code&gt;ref-loader&lt;/code&gt;&lt;/a&gt; Create dependencies between any files manually</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcf48a7e45cefabfbe0ef5ab650010d01c6b467f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.polymer-project.org/&quot;&gt;Polymer&lt;/a&gt; component loader for &lt;a href=&quot;https://webpack.js.org/&quot;&gt;webpack&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.polymer-project.org/&quot;&gt;&lt;/a&gt;Cargador de componentes polim&amp;eacute;ricos para &lt;a href=&quot;https://webpack.js.org/&quot;&gt;webpack&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="db1ca4a6e55477df7c9e772112cfdc2c81bcf58d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.typescriptlang.org&quot;&gt;TypeScript&lt;/a&gt; is a typed superset of JavaScript that compiles to plain JavaScript. In this guide we will learn how to integrate TypeScript with webpack.</source>
          <target state="translated">&lt;a href=&quot;https://www.typescriptlang.org&quot;&gt;TypeScript&lt;/a&gt; es un superconjunto escrito de JavaScript que se compila en JavaScript simple. En esta gu&amp;iacute;a aprenderemos c&amp;oacute;mo integrar TypeScript con webpack.</target>
        </trans-unit>
        <trans-unit id="9729d2612dc9a2d8c66843d36f1aa9e1cb40f7d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;jshint-loader&quot;&gt;&lt;code&gt;jshint-loader&lt;/code&gt;&lt;/a&gt; PreLoader for linting code using &lt;a href=&quot;http://jshint.com/about/&quot;&gt;JSHint&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;jshint-loader&quot;&gt; &lt;code&gt;jshint-loader&lt;/code&gt; &lt;/a&gt; para linting c&amp;oacute;digo usando&lt;a href=&quot;http://jshint.com/about/&quot;&gt; JSHint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7bfbeceee5e47192dc45d1478d47dbde8e780cc3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;json-loader&quot;&gt;&lt;code&gt;json-loader&lt;/code&gt;&lt;/a&gt; Loads a &lt;a href=&quot;http://json.org/&quot;&gt;JSON&lt;/a&gt; file (included by default)</source>
          <target state="translated">&lt;a href=&quot;json-loader&quot;&gt; &lt;code&gt;json-loader&lt;/code&gt; &lt;/a&gt; Carga unarchivo&lt;a href=&quot;http://json.org/&quot;&gt; JSON&lt;/a&gt; (incluido de forma predeterminada)</target>
        </trans-unit>
        <trans-unit id="a5ff0bbb02c69453d945ea03fef36c8b50c81658" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;json5-loader&quot;&gt;&lt;code&gt;json5-loader&lt;/code&gt;&lt;/a&gt; Loads and transpiles a &lt;a href=&quot;https://json5.org/&quot;&gt;JSON 5&lt;/a&gt; file</source>
          <target state="translated">&lt;a href=&quot;json5-loader&quot;&gt; &lt;code&gt;json5-loader&lt;/code&gt; &lt;/a&gt; Carga y transpila unarchivo&lt;a href=&quot;https://json5.org/&quot;&gt; JSON 5&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b511ef2600dc26d34f2962337d54036f27f39398" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;less-loader&quot;&gt;&lt;code&gt;less-loader&lt;/code&gt;&lt;/a&gt; Loads and compiles a LESS file</source>
          <target state="translated">&lt;a href=&quot;less-loader&quot;&gt; &lt;code&gt;less-loader&lt;/code&gt; &lt;/a&gt; Carga y compila un archivo MENOS</target>
        </trans-unit>
        <trans-unit id="f96170842d85c141e1fcc83116192d4a44f25f52" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mocha-loader&quot;&gt;&lt;code&gt;mocha-loader&lt;/code&gt;&lt;/a&gt; Tests with &lt;a href=&quot;https://mochajs.org/&quot;&gt;mocha&lt;/a&gt; (Browser/NodeJS)</source>
          <target state="translated">&lt;a href=&quot;mocha-loader&quot;&gt; &lt;code&gt;mocha-loader&lt;/code&gt; &lt;/a&gt;Pruebas de mocha-loader con&lt;a href=&quot;https://mochajs.org/&quot;&gt; mocha&lt;/a&gt; (navegador / NodeJS)</target>
        </trans-unit>
        <trans-unit id="fc4735092598281ce135fc06246b49f02e9e533b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;output#outputpublicpath&quot;&gt;&lt;code&gt;output.publicPath&lt;/code&gt;&lt;/a&gt; won't be added to the provided URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b86d5dfba1c02505ccdb6a9fbd31492a1abdb6ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;postcss-loader&quot;&gt;&lt;code&gt;postcss-loader&lt;/code&gt;&lt;/a&gt; Loads and transforms a CSS/SSS file using &lt;a href=&quot;http://postcss.org&quot;&gt;PostCSS&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;postcss-loader&quot;&gt; &lt;code&gt;postcss-loader&lt;/code&gt; &lt;/a&gt; Carga y transforma un archivo CSS / SSS usando&lt;a href=&quot;http://postcss.org&quot;&gt; PostCSS&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="280059c08d0961b65fcb9056b52e054ea764ceb3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;raw-loader&quot;&gt;&lt;code&gt;raw-loader&lt;/code&gt;&lt;/a&gt; Loads raw content of a file (utf-8)</source>
          <target state="translated">&lt;a href=&quot;raw-loader&quot;&gt; &lt;code&gt;raw-loader&lt;/code&gt; &lt;/a&gt; Carga el contenido sin procesar de un archivo (utf-8)</target>
        </trans-unit>
        <trans-unit id="3807c34b6bad4d11ec69b79619c66923c36fb6ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;sass-loader&quot;&gt;&lt;code&gt;sass-loader&lt;/code&gt;&lt;/a&gt; Loads and compiles a SASS/SCSS file</source>
          <target state="translated">&lt;a href=&quot;sass-loader&quot;&gt; &lt;code&gt;sass-loader&lt;/code&gt; &lt;/a&gt; Carga y compila un archivo SASS / SCSS</target>
        </trans-unit>
        <trans-unit id="26b2530e9a6fa89a37b78811f7e68642286be298" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;script-loader&quot;&gt;&lt;code&gt;script-loader&lt;/code&gt;&lt;/a&gt; Executes a JavaScript file once in global context (like in script tag), requires are not parsed</source>
          <target state="translated">&lt;a href=&quot;script-loader&quot;&gt; &lt;code&gt;script-loader&lt;/code&gt; &lt;/a&gt; Ejecuta un archivo JavaScript una vez en el contexto global (como en la etiqueta de script), los requisitos no se analizan</target>
        </trans-unit>
        <trans-unit id="9f4dd0355fb6aa4f9881b5276dafc682d7dbefcf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;style-loader&quot;&gt;&lt;code&gt;style-loader&lt;/code&gt;&lt;/a&gt; Add exports of a module as style to DOM</source>
          <target state="translated">&lt;a href=&quot;style-loader&quot;&gt; &lt;code&gt;style-loader&lt;/code&gt; &lt;/a&gt; Agregar exportaciones de un m&amp;oacute;dulo como estilo a DOM</target>
        </trans-unit>
        <trans-unit id="6612362adc91906fd6bbe162b9345ae5dca623dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;stylus-loader&quot;&gt;&lt;code&gt;stylus-loader&lt;/code&gt;&lt;/a&gt; Loads and compiles a Stylus file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8730588cf55c941ee85bfac8cf11d64660947d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;url-loader&quot;&gt;&lt;code&gt;url-loader&lt;/code&gt;&lt;/a&gt; Works like the file loader, but can return a &lt;a href=&quot;https://tools.ietf.org/html/rfc2397&quot;&gt;data URL&lt;/a&gt; if the file is smaller than a limit</source>
          <target state="translated">&lt;a href=&quot;url-loader&quot;&gt; &lt;code&gt;url-loader&lt;/code&gt; &lt;/a&gt; Funciona como el cargador de archivos, pero puede devolver una&lt;a href=&quot;https://tools.ietf.org/html/rfc2397&quot;&gt; URL de datos&lt;/a&gt; si el archivo es m&amp;aacute;s peque&amp;ntilde;o que un l&amp;iacute;mite</target>
        </trans-unit>
        <trans-unit id="bebb845952ecf93232f428f12a803428d0ea4abb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;val-loader&quot;&gt;&lt;code&gt;val-loader&lt;/code&gt;&lt;/a&gt; Executes code as module and consider exports as JS code</source>
          <target state="translated">&lt;a href=&quot;val-loader&quot;&gt; &lt;code&gt;val-loader&lt;/code&gt; &lt;/a&gt; Ejecuta c&amp;oacute;digo como m&amp;oacute;dulo y considera las exportaciones como c&amp;oacute;digo JS</target>
        </trans-unit>
        <trans-unit id="ab7d6779836500af158972526bf25c415b871e86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;.&quot;&lt;/code&gt; property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2bd56a06c773957a6dd0637de4971a1da775004" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;default&quot;&lt;/code&gt; condition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c9869a8aa628f926d7fd7328c69d39c4b894eb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;eager&quot;&lt;/code&gt;: Generates no extra chunk. All modules are included in the current chunk and no additional network requests are made. A &lt;code&gt;Promise&lt;/code&gt; is still returned but is already resolved. In contrast to a static import, the module isn't executed until the call to &lt;code&gt;import()&lt;/code&gt; is made.</source>
          <target state="translated">&lt;code&gt;&quot;eager&quot;&lt;/code&gt; : no genera ning&amp;uacute;n fragmento adicional. Todos los m&amp;oacute;dulos est&amp;aacute;n incluidos en el bloque actual y no se realizan solicitudes de red adicionales. A&amp;uacute;n se devuelve una &lt;code&gt;Promise&lt;/code&gt; pero ya est&amp;aacute; resuelta. A diferencia de una importaci&amp;oacute;n est&amp;aacute;tica, el m&amp;oacute;dulo no se ejecuta hasta que se realiza la llamada a &lt;code&gt;import()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="454229e132d4caf2c640a62096e4ee04980589c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;empty&quot;&lt;/code&gt;: Provide an empty object.</source>
          <target state="translated">&lt;code&gt;&quot;empty&quot;&lt;/code&gt; : proporciona un objeto vac&amp;iacute;o.</target>
        </trans-unit>
        <trans-unit id="22ac464689091f51e40ac4510c4634d992abcb44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;eval&quot;&lt;/code&gt; has the best performance, but doesn't assist you for transpiled code.</source>
          <target state="translated">&lt;code&gt;&quot;eval&quot;&lt;/code&gt; tiene el mejor rendimiento, pero no le ayuda con el c&amp;oacute;digo transpilado.</target>
        </trans-unit>
        <trans-unit id="b3e5d3577d159a04689ab48742b45ee356b57089" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;lazy&quot;&lt;/code&gt; (default): Generates a lazy-loadable chunk for each &lt;code&gt;import()&lt;/code&gt;ed module.</source>
          <target state="translated">&lt;code&gt;&quot;lazy&quot;&lt;/code&gt; (predeterminado): genera un fragmento de carga diferida para cada m&amp;oacute;dulo &lt;code&gt;import()&lt;/code&gt; ed.</target>
        </trans-unit>
        <trans-unit id="13f5e9e255393bb1d3cb667fcc0eb97f429ec272" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;lazy-once&quot;&lt;/code&gt;: Generates a single lazy-loadable chunk that can satisfy all calls to &lt;code&gt;import()&lt;/code&gt;. The chunk will be fetched on the first call to &lt;code&gt;import()&lt;/code&gt;, and subsequent calls to &lt;code&gt;import()&lt;/code&gt; will use the same network response. Note that this only makes sense in the case of a partially dynamic statement, e.g. &lt;code&gt;import(`./locales/${language}.json`)&lt;/code&gt;, where there are multiple module paths that could potentially be requested.</source>
          <target state="translated">&lt;code&gt;&quot;lazy-once&quot;&lt;/code&gt; : genera un solo fragmento de carga diferida que puede satisfacer todas las llamadas a &lt;code&gt;import()&lt;/code&gt; . El fragmento se obtendr&amp;aacute; en la primera llamada a &lt;code&gt;import()&lt;/code&gt; y las llamadas posteriores a &lt;code&gt;import()&lt;/code&gt; utilizar&amp;aacute;n la misma respuesta de red. Tenga en cuenta que esto solo tiene sentido en el caso de una declaraci&amp;oacute;n parcialmente din&amp;aacute;mica, por ejemplo, &lt;code&gt;import(`./locales/${language}.json`)&lt;/code&gt; , donde hay m&amp;uacute;ltiples rutas de m&amp;oacute;dulo que podr&amp;iacute;an ser solicitadas.</target>
        </trans-unit>
        <trans-unit id="2a9dd170a4b81b44c7f739d4150c4aba8a229e1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;mock&quot;&lt;/code&gt;: Provide a mock that implements the expected interface but has little or no functionality.</source>
          <target state="translated">&lt;code&gt;&quot;mock&quot;&lt;/code&gt; : proporciona un simulacro que implementa la interfaz esperada pero tiene poca o ninguna funcionalidad.</target>
        </trans-unit>
        <trans-unit id="dcc76a5893a8b3b567403e09a05033b87f637dd2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;mock&quot;&lt;/code&gt;: The fixed value &lt;code&gt;&quot;/&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;mock&quot;&lt;/code&gt; : el valor fijo &lt;code&gt;&quot;/&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="60ace8cab2a8e66ce52d2aa779b407418060397a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;mock&quot;&lt;/code&gt;: The fixed value &lt;code&gt;&quot;index.js&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;mock&quot;&lt;/code&gt; : el valor fijo &lt;code&gt;&quot;index.js&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6a46beb12caa70fc4c0cc2b8c24cc6f282184e2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;module&quot;&lt;/code&gt;: Use with ES6 ready code.</source>
          <target state="translated">&lt;code&gt;&quot;module&quot;&lt;/code&gt; : &amp;Uacute;selo con el c&amp;oacute;digo listo para ES6.</target>
        </trans-unit>
        <trans-unit id="28eb623b095ec9cb44037a3df025c53efb8a6c88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;text/javascript&quot;&lt;/code&gt; (default)</source>
          <target state="translated">&lt;code&gt;&quot;text/javascript&quot;&lt;/code&gt; (predeterminado)</target>
        </trans-unit>
        <trans-unit id="a5fb48393c47a72370a59a9d76552c8abcc4e5bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;weak&quot;&lt;/code&gt;: Tries to load the module if the module function has already been loaded in some other way (i. e. another chunk imported it or a script containing the module was loaded). A &lt;code&gt;Promise&lt;/code&gt; is still returned but, only successfully resolves if the chunks are already on the client. If the module is not available, the &lt;code&gt;Promise&lt;/code&gt; is rejected. A network request will never be performed. This is useful for universal rendering when required chunks are always manually served in initial requests (embedded within the page), but not in cases where app navigation will trigger an import not initially served.</source>
          <target state="translated">&lt;code&gt;&quot;weak&quot;&lt;/code&gt; : intenta cargar el m&amp;oacute;dulo si la funci&amp;oacute;n del m&amp;oacute;dulo ya se ha cargado de alguna otra manera (es decir, se import&amp;oacute; otro fragmento o se carg&amp;oacute; un script que contiene el m&amp;oacute;dulo). A&amp;uacute;n se devuelve una &lt;code&gt;Promise&lt;/code&gt; , pero solo se resuelve correctamente si los fragmentos ya est&amp;aacute;n en el cliente. Si el m&amp;oacute;dulo no est&amp;aacute; disponible, la &lt;code&gt;Promise&lt;/code&gt; se rechaza. Nunca se realizar&amp;aacute; una solicitud de red. Esto es &amp;uacute;til para la representaci&amp;oacute;n universal cuando los fragmentos requeridos siempre se entregan manualmente en las solicitudes iniciales (incrustados dentro de la p&amp;aacute;gina), pero no en los casos en que la navegaci&amp;oacute;n de la aplicaci&amp;oacute;n activar&amp;aacute; una importaci&amp;oacute;n que no se entreg&amp;oacute; inicialmente.</target>
        </trans-unit>
        <trans-unit id="fd3de7a1d16fa13e0b02f7dec5cb10d244f367a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;dom-module&amp;gt;&lt;/code&gt; becomes a string which is registered at runtime</source>
          <target state="translated">&lt;code&gt;&amp;lt;dom-module&amp;gt;&lt;/code&gt; se convierte en una cadena que se registra en tiempo de ejecuci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="e1061453c8724ac605a6d81ab1ee06fba8cd5168" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;link rel=&quot;import&quot; href=&quot;./my-other-element.html&quot;&amp;gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;import './my-other-element.html';&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;link rel=&quot;import&quot; href=&quot;./my-other-element.html&quot;&amp;gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;import './my-other-element.html';&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e039440616b0670952e02ad565fc9c503af7f647" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; paths matching these conditions (see [Condition] in the webpack documentation) will not be changed when transformed into &lt;code&gt;import&lt;/code&gt;s. This can be useful for respecting aliases, loader syntax (e.g. &lt;code&gt;markup-inline-loader!./my-element.html&lt;/code&gt;), or module paths.</source>
          <target state="translated">&lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; rutas que coincidan con estas condiciones (ver [Condici&amp;oacute;n] en la documentaci&amp;oacute;n del paquete web) no se cambiar&amp;aacute;n cuando se transformen en &lt;code&gt;import&lt;/code&gt; s. Esto puede resultar &amp;uacute;til para respetar los alias, la sintaxis del cargador (por ejemplo, &lt;code&gt;markup-inline-loader!./my-element.html&lt;/code&gt; ) o rutas de m&amp;oacute;dulos.</target>
        </trans-unit>
        <trans-unit id="59b4c6c2723609be66bf3da428ae932401f2baf0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;s pointing to paths matching these conditions (see [Condition] in the webpack documentation) will not be transformed into &lt;code&gt;import&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; apunten a rutas que coincidan con estas condiciones (consulte [Condici&amp;oacute;n] en la documentaci&amp;oacute;n del paquete web) no se transformar&amp;aacute;n en &lt;code&gt;import&lt;/code&gt; s.</target>
        </trans-unit>
        <trans-unit id="98b42ba6b69900518f8a2df6ca3d3cabab0fdf4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;script src=&quot;./other-script.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;import './other-script.js';&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;script src=&quot;./other-script.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;import './other-script.js';&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="632a29d792c57f0be300ba9e356c269dba652af3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;script&amp;gt;/* contents */&amp;lt;/script&amp;gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;/* contents */&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;script&amp;gt;/* contents */&amp;lt;/script&amp;gt;&lt;/code&gt; -&amp;gt; &lt;code&gt;/* contents */&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7cdea2ebbabf8852830fac0659e92a8d62d863fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'...'&lt;/code&gt; can be used in &lt;code&gt;optimization.minimizer&lt;/code&gt; to access the defaults.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="814e67b888106bbe7c79bce8f3359d30af04269d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'anonymous'&lt;/code&gt; - Enable cross-origin loading &lt;strong&gt;without credentials&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="365df4730d1be88b509441ebfaaa734bfc4b3fcd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'auto'&lt;/code&gt; - emit warnings in &lt;code&gt;development&lt;/code&gt; mode and emit errors in &lt;code&gt;production&lt;/code&gt; mode (default behavior)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b48816273bdaca38c37a4985c2114556c838c386" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'built'&lt;/code&gt; - whether the asset has been built;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67abbfdb29f2e3f3d10fd513cc843fb92961775d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'cacheable'&lt;/code&gt; - whether the item is cacheable;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcab918cdd05495b4b5a6c090acb82e6d2cc6b6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'chunks'&lt;/code&gt; - what chunks the item originates from (for example, if there are multiple subchunks for one chunk - the subchunks will be grouped together according to their main chunk);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b231a4449849ccb56ad1f2031583a008e6c5eb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'eager'&lt;/code&gt;: Generates no extra chunk. All modules are included in the current chunk and no additional network requests are made. A &lt;code&gt;Promise&lt;/code&gt; is still returned but is already resolved. In contrast to a static import, the module isn't executed until the call to &lt;code&gt;import()&lt;/code&gt; is made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="745bd896e1112def1aedaf368147fb6aa3e20324" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'error'&lt;/code&gt; - errors only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaac5b19e71ccedae2548184dae489b3f5ea0cdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'errors'&lt;/code&gt; - amount of errors in items;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fda204873b3032e3657887f03e255b342f0ae68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'failed'&lt;/code&gt; - whether the item has failed compilation;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8da0c3f447cc48398a2c43749d1e5a3961a202e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'id'&lt;/code&gt; is the item's id;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d70a5fd940608617a7f41c4a57ca64a8cb5c3938" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'identifier'&lt;/code&gt; - identifier of the item;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3142e6b06d4255afa99c29ff3b3c98bb8f30d69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'import'&lt;/code&gt; - uses &lt;code&gt;import()&lt;/code&gt; to load a native EcmaScript module (async module)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ba8920d0a1157585f97242622d18d7ed0f6c7cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'index'&lt;/code&gt; - item's processing index;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb81d9125c062a324935d125d887f9700ab009ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'info'&lt;/code&gt; - errors, warnings, and info messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49f156233d8703995c492afcec5de9208e9de491" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'issuer'&lt;/code&gt; - an identifier of the issuer;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="740094b143bd18029074f9b14f05482f50b4d8cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'issuerId'&lt;/code&gt; - an id of the issuer;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="903437367ea57d5945530f7495000291d07751cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'issuerName'&lt;/code&gt; - a name of the issuer;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e085e651af860f95569bbf7c8b8a007484b696b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'issuerPath'&lt;/code&gt; - a full issuer object. There's no real need to sort by this field;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4b333ff591cbb15e28d64534df03d675dfc2a5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'lazy'&lt;/code&gt; (default): Generates a lazy-loadable chunk for each &lt;code&gt;import()&lt;/code&gt;ed module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8666b8371a057fbd979bfc1c5034ebfac8ffcbda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'lazy-once'&lt;/code&gt;: Generates a single lazy-loadable chunk that can satisfy all calls to &lt;code&gt;import()&lt;/code&gt;. The chunk will be fetched on the first call to &lt;code&gt;import()&lt;/code&gt;, and subsequent calls to &lt;code&gt;import()&lt;/code&gt; will use the same network response. Note that this only makes sense in the case of a partially dynamic statement, e.g. &lt;code&gt;import(`./locales/${language}.json`)&lt;/code&gt;, where multiple module paths that can potentially be requested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b0188b6ce16ec55643943cd70deeaa66fd12606" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'log'&lt;/code&gt; - errors, warnings, info messages, log messages, groups, clears. Collapsed groups are displayed in a collapsed state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="167f7af88a4837be8f61f3101f241179e2ba3df5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'log'&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt; - errors, warnings, info messages, log messages, groups, clears. Collapsed groups are displayed in a collapsed state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="486fd79dc3216139aa77a648df90f0201238b279" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'mock'&lt;/code&gt;: The fixed value &lt;code&gt;'/'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ad0e199cd923e4a1c3a9ddf327baafce49b18b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'mock'&lt;/code&gt;: The fixed value &lt;code&gt;'/index.js'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbd33d07af7834c8e2bf7feb1afebd4a865171ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'name'&lt;/code&gt; - a item's name that was assigned to it upon importing;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b8af8197f416fbb4e5ae9e2ab37a63438af6b31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'none'&lt;/code&gt; - disable logging</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7337e2e23e5df243016aeb437bb516fa8bf6a44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'none'&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt; - disable logging</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b47fba1e27af10e75c217221ad5c1657e78c4fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'optional'&lt;/code&gt; - whether the asset is optional;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c41efb60bf66f5163d8e5e11a990b75bb9a28a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'pack'&lt;/code&gt;: Store data when compiler is idle in a single file for all cached items</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5995c43a385876ddbc6779c7e4c4e2f6035b42a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'prefetched'&lt;/code&gt; - whether the asset will be prefetched;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b54947f9c5e6a86db32569551794b07899862e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'promise'&lt;/code&gt; - same as &lt;code&gt;'var'&lt;/code&gt; but awaits the result (async module)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eda38e73910083dbd2d851742fd5e959177caa4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'script'&lt;/code&gt; - load script exposing predefined global variables with HTML &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b09d857461a566f350e98afe8442d6afa0cbf7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'size'&lt;/code&gt; - a size of item in bytes;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c1ebccc9863f92f4ee8c1b7661416859cddef48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'use-credentials'&lt;/code&gt; - Enable cross-origin loading &lt;strong&gt;with credentials&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="230e1b622a251fceaadab9915080a0bd40449935" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'verbose'&lt;/code&gt; - log everything except debug and trace. Collapsed groups are displayed in expanded state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb70c40f72c89a521ed0c6512a163eccf7f405b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'warn'&lt;/code&gt; - errors and warnings only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c256dd3d1996b064a261dccf11a256d477921dd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'warning'&lt;/code&gt; - emit warnings instead errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22fa439861fa988484c7c41f9ea29ed4b888980e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'warnings'&lt;/code&gt; - amount of warnings in items;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ded2b7c2a7f000de66d5d12224792569e582ef2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'weak'&lt;/code&gt;: Tries to load the module if the module function has already been loaded in some other way (e.g. another chunk imported it or a script containing the module was loaded). A &lt;code&gt;Promise&lt;/code&gt; is still returned, but only successfully resolves if the chunks are already on the client. If the module is not available, the &lt;code&gt;Promise&lt;/code&gt; is rejected. A network request will never be performed. This is useful for universal rendering when required chunks are always manually served in initial requests (embedded within the page), but not in cases where app navigation will trigger an import not initially served.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73c1f93af8272669899c64463fd71c34b11e0ce8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'ws'&lt;/code&gt; mode will become the default mode in the next major &lt;code&gt;devServer&lt;/code&gt; version. This mode uses &lt;a href=&quot;https://www.npmjs.com/package/ws&quot;&gt;ws&lt;/a&gt; as a server, and native WebSockets on the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa02df8659aa48962e047c0b458350f4258cb54d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(assets) =&amp;gt; {}&lt;/code&gt; - Run this specified callback against assets added later by plugins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="562d5b4054a0c406f5fd98f86eff0da3f6af8ed4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(lines only)&lt;/code&gt; - Source Maps are simplified to a single mapping per line. This usually means a single mapping per statement (assuming you author is this way). This prevents you from debugging execution on statement level and from settings breakpoints on columns of a line. Combining with minimizing is not possible as minimizers usually only emit a single line.</source>
          <target state="translated">&lt;code&gt;(lines only)&lt;/code&gt; : los mapas de origen se simplifican a un solo mapa por l&amp;iacute;nea. Por lo general, esto significa un &amp;uacute;nico mapeo por declaraci&amp;oacute;n (suponiendo que su autor sea as&amp;iacute;). Esto le impide depurar la ejecuci&amp;oacute;n a nivel de instrucci&amp;oacute;n y configurar puntos de interrupci&amp;oacute;n en columnas de una l&amp;iacute;nea. La combinaci&amp;oacute;n con minimizaci&amp;oacute;n no es posible ya que los minimizadores generalmente solo emiten una sola l&amp;iacute;nea.</target>
        </trans-unit>
        <trans-unit id="ec90877471f4612d98d64d85238cf15fb77d2eb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(lines only)&lt;/code&gt; - Source Maps are simplified to a single mapping per line. This usually means a single mapping per statement (assuming you author it this way). This prevents you from debugging execution on statement level and from settings breakpoints on columns of a line. Combining with minimizing is not possible as minimizers usually only emit a single line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="482e870d3b738fa303bc274cfb55157c1b373ef3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(none)&lt;/code&gt; (Omit the &lt;code&gt;devtool&lt;/code&gt; option) - No SourceMap is emitted. This is a good option to start with.</source>
          <target state="translated">&lt;code&gt;(none)&lt;/code&gt; (Omita la opci&amp;oacute;n &lt;code&gt;devtool&lt;/code&gt; ) - No se emite ning&amp;uacute;n SourceMap. Esta es una buena opci&amp;oacute;n para empezar.</target>
        </trans-unit>
        <trans-unit id="d33cd4ba7a368efa85e3c31f8dd4395de4c3a8ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+++&lt;/code&gt; super fast, &lt;code&gt;++&lt;/code&gt; fast, &lt;code&gt;+&lt;/code&gt; pretty fast, &lt;code&gt;o&lt;/code&gt; medium, &lt;code&gt;-&lt;/code&gt; pretty slow, &lt;code&gt;--&lt;/code&gt; slow</source>
          <target state="translated">&lt;code&gt;+++&lt;/code&gt; super r&amp;aacute;pido, &lt;code&gt;++&lt;/code&gt; r&amp;aacute;pido, &lt;code&gt;+&lt;/code&gt; bastante r&amp;aacute;pido, &lt;code&gt;o&lt;/code&gt; medio, &lt;code&gt;-&lt;/code&gt; bastante lento, &lt;code&gt;--&lt;/code&gt; lento</target>
        </trans-unit>
        <trans-unit id="74680ed0790256b280d22a14869c99ad91e1038e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--color&lt;/code&gt;, &lt;code&gt;--colors&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--color&lt;/code&gt; , &lt;code&gt;--colors&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7cf9f15213d828b5696d240088ac7abeab369dcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--optimize-minimize --define process.env.NODE_ENV=&quot;production&quot;&lt;/code&gt;, see &lt;a href=&quot;../guides/production&quot;&gt;building for production&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;--optimize-minimize --define process.env.NODE_ENV=&quot;production&quot;&lt;/code&gt; , ver &lt;a href=&quot;../guides/production&quot;&gt;construcci&amp;oacute;n para producci&amp;oacute;n&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e24bc84b66fadfeb411239f148ff3342b1bd095c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--watch-poll&lt;/code&gt; makes sure that webpack can detect changes in your files. By default webpack listens to events triggered by the filesystem, but VirtualBox has many problems with this.</source>
          <target state="translated">&lt;code&gt;--watch-poll&lt;/code&gt; se asegura de que el paquete web pueda detectar cambios en sus archivos. De forma predeterminada, el paquete web escucha los eventos activados por el sistema de archivos, pero VirtualBox tiene muchos problemas con esto.</target>
        </trans-unit>
        <trans-unit id="b38a0ff2ddf14c820a4c9b3d7d62cfdfb2d54a8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--watch-poll&lt;/code&gt; makes sure that webpack can detect changes in your files. By default, webpack listens to events triggered by the filesystem, but VirtualBox has many problems with this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2036647ec0cda69b0b80d7ab49ae2431eac0ff67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--watch-stdin&lt;/code&gt;, &lt;code&gt;--stdin&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--watch-stdin&lt;/code&gt; , &lt;code&gt;--stdin&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="043e74d8968e5d3c0e9f3b99ad2398bc4a605915" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--watch&lt;/code&gt;, &lt;code&gt;-w&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--watch&lt;/code&gt; , &lt;code&gt;-w&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="109b9bbcdad30cee44b5d3c257c4a3336a093a7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;...args&lt;/code&gt;: Any number of strings, which will be passed to the &lt;code&gt;ProgressPlugin&lt;/code&gt; handler to be reported to the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7071858fb27e19f5f7cd41f7300ad32838311365" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;...args&lt;/code&gt;: zero or more additional strings describing the current progress</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ed594d5e10b615f210b0ef30673b1508fa99e3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.cjs&lt;/code&gt; or &lt;code&gt;.js&lt;/code&gt; with &lt;code&gt;&quot;type&quot;: &quot;commonjs&quot;&lt;/code&gt; in &lt;code&gt;package.json&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20b8e4bd749ff4351319d9318d1ed5596d3c4430" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.custom&lt;/code&gt; accepts a callback that will be called with the loader's instance of &lt;code&gt;babel&lt;/code&gt; so that tooling can ensure that it using exactly the same &lt;code&gt;@babel/core&lt;/code&gt; instance as the loader itself.</source>
          <target state="translated">&lt;code&gt;.custom&lt;/code&gt; acepta una devoluci&amp;oacute;n de llamada que se llamar&amp;aacute; con la instancia de &lt;code&gt;babel&lt;/code&gt; del cargador para que las herramientas puedan garantizar que se use exactamente la misma instancia de &lt;code&gt;@babel/core&lt;/code&gt; que el cargador en s&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="888787651454d8f1e65a12114b3c75dc4dc796df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.mjs&lt;/code&gt; or &lt;code&gt;.js&lt;/code&gt; with &lt;code&gt;&quot;type&quot;: &quot;module&quot;&lt;/code&gt; in &lt;code&gt;package.json&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41e1af2b245dc41d758f020bcc2a64911c922808" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.wasm&lt;/code&gt; with &lt;code&gt;&quot;type&quot;: &quot;module&quot;&lt;/code&gt; in &lt;code&gt;package.json&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14963ecf6ad7c002edadb8c69d3670c641a6aee3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/abc/node_modules&lt;/code&gt; may resolve in &lt;code&gt;/node_modules&lt;/code&gt; too.</source>
          <target state="translated">&lt;code&gt;/abc/node_modules&lt;/code&gt; tambi&amp;eacute;n puede resolverse en &lt;code&gt;/node_modules&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d26d979c561eae92e09fc0d1188700cd5352f64b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/dist/394.js&lt;/code&gt; - &lt;code&gt;non-initial&lt;/code&gt; chunk</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="263a4653c013f29ac89ab46c529c76481b9ec5ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/dist/app.js&lt;/code&gt; - &lt;code&gt;non-initial&lt;/code&gt; chunk</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a7877af4a30611b9b195d551501f22478ef21a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/dist/main.js&lt;/code&gt; - an &lt;code&gt;initial&lt;/code&gt; chunk</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="119d6e0fc6a23d7782e99fb970962b9e7fcef28e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AGGRESSIVE_BUNDLE&lt;/code&gt; mode, the compiler performs additional optimizations of modules to produce a much smaller file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdf6fac02ff5ff831da6df9fca618cd147e6851b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AGGRESSIVE_BUNDLE&lt;/code&gt; mode, the compiler performs additional optimizations of modules to produce a much smaller file, but is not compatible with all input modules.</source>
          <target state="translated">&lt;code&gt;AGGRESSIVE_BUNDLE&lt;/code&gt; modo AGGRESSIVE_BUNDLE , el compilador realiza optimizaciones adicionales de m&amp;oacute;dulos para producir un archivo mucho m&amp;aacute;s peque&amp;ntilde;o, pero no es compatible con todos los m&amp;oacute;dulos de entrada.</target>
        </trans-unit>
        <trans-unit id="62855480e8f5887d450360e06005751828e0dfb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Compilation.hooks.dependencyReference(depRef, dependency, module)&lt;/code&gt; allows to change the references reported by dependencies.</source>
          <target state="translated">&lt;code&gt;Compilation.hooks.dependencyReference(depRef, dependency, module)&lt;/code&gt; permite cambiar las referencias reportadas por dependencias.</target>
        </trans-unit>
        <trans-unit id="2aa82d419178fddf3e02750edcbd2ca50911602b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Configuration&lt;/code&gt; (recommended)</source>
          <target state="translated">&lt;code&gt;Configuration&lt;/code&gt; (recomendado)</target>
        </trans-unit>
        <trans-unit id="03ed300ca3fa3b028ef0f08c62d0e25067e7759d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ContainerPlugin&lt;/code&gt; (low level)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e243c40636add2a8da4c0719ddf6d801c0edbfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ContainerReferencePlugin&lt;/code&gt; (low level)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="202bb58d31eea7c7002d0dd93a1c59b9a4bc428e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DEBUG&lt;/code&gt; (webpack-specific)</source>
          <target state="translated">&lt;code&gt;DEBUG&lt;/code&gt; (espec&amp;iacute;fico del paquete web)</target>
        </trans-unit>
        <trans-unit id="a903a99c72821e5ad5521f86d3881de86d82f73f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DllReferencePlugin&lt;/code&gt; and &lt;code&gt;DllPlugin&lt;/code&gt; are used in &lt;em&gt;separate&lt;/em&gt; webpack configs.</source>
          <target state="translated">&lt;code&gt;DllReferencePlugin&lt;/code&gt; y &lt;code&gt;DllPlugin&lt;/code&gt; se utilizan en configuraciones de paquetes web &lt;em&gt;independientes&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="fead3480f36d79ea2575501ee41b7cd962519bfb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Html-minifier-terser&lt;/code&gt; optimisations &lt;a href=&quot;https://github.com/terser/html-minifier-terser#options-quick-reference&quot;&gt;options&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da1636ed53558a760aede6cc5d25286d8d687ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JAVA&lt;/code&gt; utilizes the jvm. Utilizes multiple threads for parsing and results in faster compilation for large builds.</source>
          <target state="translated">&lt;code&gt;JAVA&lt;/code&gt; utiliza el archivo jvm. Utiliza varios subprocesos para analizar y da como resultado una compilaci&amp;oacute;n m&amp;aacute;s r&amp;aacute;pida para compilaciones grandes.</target>
        </trans-unit>
        <trans-unit id="4792b754d26c5c59d610f3069e54479adda5e3bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JAVASCRIPT&lt;/code&gt; does not require the JVM to be installed. Not all flags are supported.</source>
          <target state="translated">&lt;code&gt;JAVASCRIPT&lt;/code&gt; no requiere la instalaci&amp;oacute;n de JVM. No todas las banderas son compatibles.</target>
        </trans-unit>
        <trans-unit id="30e80df0c709e9e72ed62a20d189ef59d8018c0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JSON.stringify()&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify&quot;&gt;options&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;JSON.stringify()&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify&quot;&gt;options&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="ff166c04c48ec0233cb9f2bb0787d73949c5f077" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ModuleFederationPlugin&lt;/code&gt; (high level)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e96e60a078185d2cac5143b58601890a3280bbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NATIVE&lt;/code&gt; only available on linux or MacOS. Faster compilation times without requiring a JVM.</source>
          <target state="translated">&lt;code&gt;NATIVE&lt;/code&gt; solo disponible en Linux o MacOS. Tiempos de compilaci&amp;oacute;n m&amp;aacute;s r&amp;aacute;pidos sin necesidad de una JVM.</target>
        </trans-unit>
        <trans-unit id="28178b097de21e9538d14b4dcd983907c246d29b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NONE&lt;/code&gt; is designed for dev mode without the compiler but still supports closure-library style dependencies.</source>
          <target state="translated">&lt;code&gt;NONE&lt;/code&gt; est&amp;aacute; dise&amp;ntilde;ado para el modo de desarrollo sin el compilador, pero a&amp;uacute;n admite dependencias de estilo de biblioteca de cierre.</target>
        </trans-unit>
        <trans-unit id="b8ac967a9621b1931380185fbfce6d80b877b118" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NoErrorsPlugin&lt;/code&gt; prevents webpack from outputting anything into a bundle. So even ESLint warnings will fail the build. No matter what error settings are used for &lt;code&gt;eslint-loader&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NoErrorsPlugin&lt;/code&gt; evita que el paquete web genere algo en un paquete. Entonces, incluso las advertencias de ESLint fallar&amp;aacute;n en la compilaci&amp;oacute;n. No importa qu&amp;eacute; configuraci&amp;oacute;n de error se use para &lt;code&gt;eslint-loader&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b9a25e2e4db48ce6f8926df52d135a0a324df11d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object&lt;/code&gt; with different parameter names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c1393c55b0d6c9ade57aac82cc7bd6d3400495d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OverridablesPlugin&lt;/code&gt; (low level)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e9f9515193d7bfb4b818832e1cb39a29bf90ffb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROCESS_ASSETS_STAGE_ADDITIONAL&lt;/code&gt; - Add additional assets to the compilation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2d4fc68d05431b616da08e4d61eba3f030b1d87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROCESS_ASSETS_STAGE_ADDITIONS&lt;/code&gt; - Add additional sections to the existing assets e.g. banner or initialization code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e8de6f3c89fe1e6afb9d5bdc4fe7c2fd6329859" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROCESS_ASSETS_STAGE_ANALYSE&lt;/code&gt; - Analyze the existing assets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7545b184f780677d95918935d3b5ff11d691f3ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROCESS_ASSETS_STAGE_DERIVED&lt;/code&gt; - Derive new assets from the existing assets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74a2e30844c8e38f5f09301af12482d8e0ecdd8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROCESS_ASSETS_STAGE_DEV_TOOLING&lt;/code&gt; - Add development tooling to the assets, e.g. by extracting a source map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2454479c364d825fd7f85ab1ccff37045059376e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROCESS_ASSETS_STAGE_OPTIMIZE&lt;/code&gt; - Optimize existing assets in a general way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fb48a5a00ab6a65861e9ef13ceaca391eddebb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROCESS_ASSETS_STAGE_OPTIMIZE_COMPATIBILITY&lt;/code&gt; - Optimize the compatibility of existing assets, e.g. add polyfills or vendor prefixes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a6ddec00eca614fa2bbed70fa06bd77974f60cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROCESS_ASSETS_STAGE_OPTIMIZE_COUNT&lt;/code&gt; - Optimize the count of existing assets, e.g. by merging them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5405d82941bb9ddcee5a79b66358a5dcbacb0398" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROCESS_ASSETS_STAGE_OPTIMIZE_HASH&lt;/code&gt; - Optimize the hashes of the assets, e.g. by generating real hashes of the asset content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d61015295faa4f227352c46aad3c0bc15798a01a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROCESS_ASSETS_STAGE_OPTIMIZE_INLINE&lt;/code&gt;5.8.0+ - Optimize the numbers of existing assets, e.g. by inlining assets into other assets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49f014d23ebe2769526413d403a729768b692926" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROCESS_ASSETS_STAGE_OPTIMIZE_SIZE&lt;/code&gt; - Optimize the size of existing assets, e.g. by minimizing or omitting whitespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eacc1712041d96fc4d8045605a6bd847ac65673" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROCESS_ASSETS_STAGE_OPTIMIZE_TRANSFER&lt;/code&gt; - Optimize the transfer of existing assets, e.g. by preparing a compressed (gzip) file as separate asset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3bdb1dda131eed0a232a0ead4f14a23139a6a1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROCESS_ASSETS_STAGE_PRE_PROCESS&lt;/code&gt; - Basic preprocessing of the assets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa79048722f9a1e5a755f363586eab3caa51d8a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROCESS_ASSETS_STAGE_REPORT&lt;/code&gt; - Creating assets for the reporting purposes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a6ea6f43aa5432acb0bf0f17522618f366017a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROCESS_ASSETS_STAGE_SUMMARIZE&lt;/code&gt; - Summarize the list of existing assets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6643386f297c08e03a5affe3eedd939c311abaf4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ProgressPlugin&lt;/code&gt; source</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1fc679484548dec605995f258e99d27b17f6d89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RealContentHashPlugin&lt;/code&gt; provides a &lt;code&gt;updateHash&lt;/code&gt;5.8.0+ hook for customizing hash updating:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a13be8800195b1ae247613979b7334865afb5a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RegExp | [RegExp] | function&lt;/code&gt; (since webpack 3.0.0)</source>
          <target state="translated">&lt;code&gt;RegExp | [RegExp] | function&lt;/code&gt; (desde webpack 3.0.0)</target>
        </trans-unit>
        <trans-unit id="7224bc78410c941922ecec3587e5acb64676fcf3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;[RegExp]&lt;/code&gt;&lt;code&gt;boolean: true&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="864248373ed6bd5c2ff3d36d428f4e356b0a0899" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;[RegExp]&lt;/code&gt;&lt;code&gt;function(resource)&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;[string]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;[RegExp]&lt;/code&gt;&lt;code&gt;function(resource)&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;[string]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="49c76170a126c2f5c086d2049fc1c8f190948a74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;function (WebpackError, Compilation) =&amp;gt; boolean&lt;/code&gt;&lt;code&gt;{module?: RegExp, file?: RegExp, message?: RegExp}&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc38572e21980590f9673b16cdaf58afe4dedab8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;[string]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;[string]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4c3d0e31ea226eccabd534aff3dbd74376a0ea25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;function&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;function&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="18c1df279d61390f1fd1a1019564542c6252ad8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rule.exclude&lt;/code&gt; is a shortcut to &lt;code&gt;Rule.resource.exclude&lt;/code&gt;. If you supply a &lt;code&gt;Rule.exclude&lt;/code&gt; option, you cannot also supply a &lt;code&gt;Rule.resource&lt;/code&gt;. See &lt;a href=&quot;#rule-resource&quot;&gt;&lt;code&gt;Rule.resource&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#condition&quot;&gt;&lt;code&gt;Condition.exclude&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;Rule.exclude&lt;/code&gt; es un atajo a &lt;code&gt;Rule.resource.exclude&lt;/code&gt; . Si proporciona una opci&amp;oacute;n &lt;code&gt;Rule.exclude&lt;/code&gt; , no puede proporcionar tambi&amp;eacute;n un &lt;code&gt;Rule.resource&lt;/code&gt; . Consulte &lt;a href=&quot;#rule-resource&quot;&gt; &lt;code&gt;Rule.resource&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;#condition&quot;&gt; &lt;code&gt;Condition.exclude&lt;/code&gt; &lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="367be7587744b61962ead151bef09a4940faeeeb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rule.generator.filename&lt;/code&gt; is the same as &lt;a href=&quot;../configuration/output#outputassetmodulefilename&quot;&gt;&lt;code&gt;output.assetModuleFilename&lt;/code&gt;&lt;/a&gt; and works only with &lt;code&gt;asset&lt;/code&gt; and &lt;code&gt;asset/resource&lt;/code&gt; module types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95c2fd22991b702e091599ff77ca84b596ac4c4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rule.include&lt;/code&gt; is a shortcut to &lt;code&gt;Rule.resource.include&lt;/code&gt;. If you supply a &lt;code&gt;Rule.include&lt;/code&gt; option, you cannot also supply a &lt;code&gt;Rule.resource&lt;/code&gt;. See &lt;a href=&quot;#rule-resource&quot;&gt;&lt;code&gt;Rule.resource&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#condition&quot;&gt;&lt;code&gt;Condition.include&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;Rule.include&lt;/code&gt; es un atajo a &lt;code&gt;Rule.resource.include&lt;/code&gt; . Si proporciona una opci&amp;oacute;n &lt;code&gt;Rule.include&lt;/code&gt; , no puede proporcionar tambi&amp;eacute;n un &lt;code&gt;Rule.resource&lt;/code&gt; . Consulte &lt;a href=&quot;#rule-resource&quot;&gt; &lt;code&gt;Rule.resource&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;#condition&quot;&gt; &lt;code&gt;Condition.include&lt;/code&gt; &lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="873da3f0fb8d8990054c6533b3e9dcc0dd47ae86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rule.loader&lt;/code&gt; is a shortcut to &lt;code&gt;Rule.use: [ { loader } ]&lt;/code&gt;. See &lt;a href=&quot;#rule-use&quot;&gt;&lt;code&gt;Rule.use&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#useentry&quot;&gt;&lt;code&gt;UseEntry.loader&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;Rule.loader&lt;/code&gt; es un atajo a &lt;code&gt;Rule.use: [ { loader } ]&lt;/code&gt; . Consulte &lt;a href=&quot;#rule-use&quot;&gt; &lt;code&gt;Rule.use&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;#useentry&quot;&gt; &lt;code&gt;UseEntry.loader&lt;/code&gt; &lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="49812a9699acb3a5794171cd2de1acae86ab9e19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rule.loader&lt;/code&gt; is a shortcut to &lt;code&gt;Rule.use: [ { loader } ]&lt;/code&gt;. See &lt;a href=&quot;#ruleuse&quot;&gt;&lt;code&gt;Rule.use&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#useentry&quot;&gt;&lt;code&gt;UseEntry.loader&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74399e349d6d60baea232f75cbb348cefe394a18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rule.loaders&lt;/code&gt; is an alias to &lt;code&gt;Rule.use&lt;/code&gt;. See &lt;a href=&quot;#rule-use&quot;&gt;&lt;code&gt;Rule.use&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;Rule.loaders&lt;/code&gt; es un alias de &lt;code&gt;Rule.use&lt;/code&gt; . Consulte &lt;a href=&quot;#rule-use&quot;&gt; &lt;code&gt;Rule.use&lt;/code&gt; &lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="83d75e016bed7ac91a91f867957878c9c081b4ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rule.loaders&lt;/code&gt; is an alias to &lt;code&gt;Rule.use&lt;/code&gt;. See &lt;a href=&quot;#ruleuse&quot;&gt;&lt;code&gt;Rule.use&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7537d2841057c70de45e9d86c4324c33d4ae319" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rule.options&lt;/code&gt; / &lt;code&gt;Rule.query&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Rule.options&lt;/code&gt; / &lt;code&gt;Rule.query&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="286c9e55caf8942a4d47ecbf1ee013b22939c9f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rule.options&lt;/code&gt; and &lt;code&gt;Rule.query&lt;/code&gt; are shortcuts to &lt;code&gt;Rule.use: [ { options } ]&lt;/code&gt;. See &lt;a href=&quot;#rule-use&quot;&gt;&lt;code&gt;Rule.use&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#useentry&quot;&gt;&lt;code&gt;UseEntry.options&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;Rule.options&lt;/code&gt; y &lt;code&gt;Rule.query&lt;/code&gt; son accesos directos a &lt;code&gt;Rule.use: [ { options } ]&lt;/code&gt; . Consulte &lt;a href=&quot;#rule-use&quot;&gt; &lt;code&gt;Rule.use&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;#useentry&quot;&gt; &lt;code&gt;UseEntry.options&lt;/code&gt; &lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="3b24e336bbb51e2e1aa1deb5fd12539d34c6c7e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rule.options&lt;/code&gt; and &lt;code&gt;Rule.query&lt;/code&gt; are shortcuts to &lt;code&gt;Rule.use: [ { options } ]&lt;/code&gt;. See &lt;a href=&quot;#ruleuse&quot;&gt;&lt;code&gt;Rule.use&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#useentry&quot;&gt;&lt;code&gt;UseEntry.options&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f1c70605d4fc4d35d9468d78990b33e69364ce9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rule.query&lt;/code&gt; is deprecated in favor of &lt;code&gt;Rule.options&lt;/code&gt; and &lt;code&gt;UseEntry.options&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Rule.query&lt;/code&gt; est&amp;aacute; en desuso en favor de &lt;code&gt;Rule.options&lt;/code&gt; y &lt;code&gt;UseEntry.options&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5af16bc0b32e2c09fdb94061ac4ca6a9df1640a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rule.resolve&lt;/code&gt; is Available since webpack 4.36.1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7af3e30a306d64aaa46fbd004e39487342dc740" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rule.test&lt;/code&gt; is a shortcut to &lt;code&gt;Rule.resource.test&lt;/code&gt;. If you supply a &lt;code&gt;Rule.test&lt;/code&gt; option, you cannot also supply a &lt;code&gt;Rule.resource&lt;/code&gt;. See &lt;a href=&quot;#rule-resource&quot;&gt;&lt;code&gt;Rule.resource&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#condition&quot;&gt;&lt;code&gt;Condition.test&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;Rule.test&lt;/code&gt; es un atajo a &lt;code&gt;Rule.resource.test&lt;/code&gt; . Si proporciona una opci&amp;oacute;n &lt;code&gt;Rule.test&lt;/code&gt; , no puede proporcionar tambi&amp;eacute;n un &lt;code&gt;Rule.resource&lt;/code&gt; . Consulte &lt;a href=&quot;#rule-resource&quot;&gt; &lt;code&gt;Rule.resource&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;#condition&quot;&gt; &lt;code&gt;Condition.test&lt;/code&gt; &lt;/a&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="228dec491de7c1dd05ed2c1d6d64fecd964c4066" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rule.type&lt;/code&gt; sets the type for a matching module. This prevents defaultRules and their default importing behaviors from occurring. For example, if you want to load a &lt;code&gt;.json&lt;/code&gt; file through a custom loader, you'd need to set the &lt;code&gt;type&lt;/code&gt; to &lt;code&gt;javascript/auto&lt;/code&gt; to bypass webpack's built-in json importing. (See &lt;a href=&quot;https://github.com/webpack/webpack/releases/tag/v4.0.0&quot;&gt;v4.0 changelog&lt;/a&gt; for more details)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9198a9dc378a1badf83931f8acc95782d3586d4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rule.use&lt;/code&gt; can also be a function which receives the object argument describing the module being loaded, and must return an array of &lt;code&gt;UseEntry&lt;/code&gt; items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68d1265a21ee3e407982c2d74302cef8eb77b1e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rule.use&lt;/code&gt; can be an array of &lt;a href=&quot;#useentry&quot;&gt;UseEntry&lt;/a&gt; which are applied to modules. Each entry specifies a loader to be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d678dcd8f077c8d5ea22bbae00466e575b9678d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STANDARD&lt;/code&gt; mode, closure-compiler is used as a direct replacement for other minifiers as well as most Babel transformations.</source>
          <target state="translated">&lt;code&gt;STANDARD&lt;/code&gt; modo EST&amp;Aacute;NDAR , el compilador de cierre se usa como un reemplazo directo para otros minificadores, as&amp;iacute; como para la mayor&amp;iacute;a de las transformaciones de Babel.</target>
        </trans-unit>
        <trans-unit id="555e8a84e7cb2e3cbd2aa88710b270828465f096" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Watching&lt;/code&gt; options are covered in detail &lt;a href=&quot;../configuration/watch#watchoptions&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Watching&lt;/code&gt; opciones de visualizaci&amp;oacute;n se tratan en detalle &lt;a href=&quot;../configuration/watch#watchoptions&quot;&gt;aqu&amp;iacute;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="797da69b1d1619e1fcc2cb3026a1a0df36d984a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&amp;lt;hashType&amp;gt;:contenthash:&amp;lt;digestType&amp;gt;:&amp;lt;length&amp;gt;]&lt;/code&gt; optionally you can configure</source>
          <target state="translated">&lt;code&gt;[&amp;lt;hashType&amp;gt;:contenthash:&amp;lt;digestType&amp;gt;:&amp;lt;length&amp;gt;]&lt;/code&gt; opcionalmente puede configurar</target>
        </trans-unit>
        <trans-unit id="68e5172c85fcd649990318efdbe0362190aea3ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[Foo]&lt;/code&gt; - generates &lt;code&gt;const Foo = require(&quot;Foo&quot;);&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2015fa69213ee22491a6747e4a537351c9305998" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[Foo]&lt;/code&gt; - generates &lt;code&gt;export { Foo };&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdf9ba16d3e2896a454cabf2acad783f6dff5ac6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[Foo]&lt;/code&gt; - generates &lt;code&gt;import Foo from &quot;Foo&quot;;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="735fefd891a4abadd1dfc9049ab8f03a310b858f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[TerserPlugin]&lt;/code&gt; and or &lt;code&gt;[function (compiler)]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81bf15e7c455d116d9aa172d5b3387599e1f587b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[UseEntry]&lt;/code&gt;&lt;code&gt;function(info)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[UseEntry]&lt;/code&gt;&lt;code&gt;function(info)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="05510c6820be22f1e1b7be2e27bdf878f39fb822" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[[name]]&lt;/code&gt; - generates ES module named exports and exports a variable equal to the filename, for &lt;code&gt;single.js&lt;/code&gt; it will be &lt;code&gt;single&lt;/code&gt;, generates &lt;code&gt;export { single };&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8002469920998414c3afafafd171b4ee61643bdd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[alias]&lt;/code&gt; - alias of an exported value (&lt;strong&gt;may be omitted&lt;/strong&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd268088ecb10b68f2605e866c1afe1adcdd859e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[alias]&lt;/code&gt; - alias of an imported value (&lt;strong&gt;may be omitted&lt;/strong&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7e377db11c90d5aa883e3507bb8839126c178a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[base]&lt;/code&gt; is replaced with the base (&lt;code&gt;[name]&lt;/code&gt; + &lt;code&gt;[ext]&lt;/code&gt;) of the original asset (&lt;code&gt;image.png&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46458afd2058120775d26ee90cfa597dadfe4008" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[contenthash]&lt;/code&gt; - md4-hash of the output file content (e.g. &lt;code&gt;[contenthash].js&lt;/code&gt; -&amp;gt; &lt;code&gt;4ea6ff1de66c537eb9b2.js&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9faca4658462c59f773376f3e22b3f0d0cd29784" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[contenthash]&lt;/code&gt; hash of the content of the extracted file</source>
          <target state="translated">&lt;code&gt;[contenthash]&lt;/code&gt; hash del contenido del archivo extra&amp;iacute;do</target>
        </trans-unit>
        <trans-unit id="aa7859d33ece0661c4292eb8b309525bc8857ba9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[default ./my-lib Foo]&lt;/code&gt; - generates &lt;code&gt;import Foo from &quot;./my-lib&quot;;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca1868e7369bd7de15aa77ed8d523594995a95c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[default Foo]&lt;/code&gt; - generates &lt;code&gt;export default Foo;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a431391573c3fb19352570fa78dc0c09501314e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[default Foo]&lt;/code&gt; - generates &lt;code&gt;import Foo from &quot;Foo&quot;;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4bf9fd8ae5007c6de2d45a6cf89aec087879ab1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[ext]&lt;/code&gt; is replaced with the extension of the original asset, included &lt;code&gt;.&lt;/code&gt; (&lt;code&gt;.png&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03b9ac66d0ba96a38c0710fa8b35a65b177111ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[file]&lt;/code&gt; equals &lt;code&gt;[path][base]&lt;/code&gt;. &lt;code&gt;[base]&lt;/code&gt; equals &lt;code&gt;[name][ext]&lt;/code&gt;. The full path is &lt;code&gt;[path][name][ext][query][fragment]&lt;/code&gt; or &lt;code&gt;[path][base][query][fragment]&lt;/code&gt; or &lt;code&gt;[file][query][fragment]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36cc595f01f4c842f8b1a31a6f502c09430a83f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[file]&lt;/code&gt; is replaced with the path of original asset (&lt;code&gt;assets/images/image.png&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2943018ff8a5b66d057adc579f4dc17f6f07920d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[fragment]&lt;/code&gt; is replaced with the fragment (in the concept of URL it is called &lt;code&gt;hash&lt;/code&gt;) of the original asset (&lt;code&gt;#hash&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e332fe48fe42ff54aff304e1d4224ece359e305f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[fullhash]&lt;/code&gt;/&lt;code&gt;[chunkhash]&lt;/code&gt;/&lt;code&gt;[contenthash]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[fullhash]&lt;/code&gt;/&lt;code&gt;[chunkhash]&lt;/code&gt;/&lt;code&gt;[contenthash]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4b1ba8fdc61582c0949ee7b5d0a47e8e4a8598f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[hash]&lt;/code&gt; is the only available placeholder, the default being:</source>
          <target state="translated">&lt;code&gt;[hash]&lt;/code&gt; es el &amp;uacute;nico marcador de posici&amp;oacute;n disponible, siendo el predeterminado:</target>
        </trans-unit>
        <trans-unit id="ae5a41e3a881e4abb348880cb08e5dec0eae01aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[hash]&lt;/code&gt;/&lt;code&gt;[chunkhash]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[hash]&lt;/code&gt;/&lt;code&gt;[chunkhash]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="264b6561c47cfca13b2c42e338b76ab60aae937f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[id]&lt;/code&gt; - chunk id (e.g. &lt;code&gt;[id].js&lt;/code&gt; -&amp;gt; &lt;code&gt;485.js&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d374466b3663fff8300417da7ad9dcb41a4570fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[id]&lt;/code&gt; number of the chunk</source>
          <target state="translated">&lt;code&gt;[id]&lt;/code&gt; n&amp;uacute;mero del fragmento</target>
        </trans-unit>
        <trans-unit id="7b4d373eb47d785d5390c065c6abcdf6e0f17e85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[moduleName]&lt;/code&gt; - name of an imported module (&lt;strong&gt;required&lt;/strong&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a9455c124e2530b4cb5eef5046e53eb7ec2d55e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[multiple Foo FooA Bar]&lt;/code&gt; - generates &lt;code&gt;const { FooA: Bar } = require(&quot;Foo&quot;);&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b89dd5c0ccb4b93cfa48030ee13aaf5f5838f3f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[multiple Foo FooA]&lt;/code&gt; - generates &lt;code&gt;module.exports = { 'FooA': Foo };&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acc6f964df9ac8b3c1ce5cd1eb69ea13dcc91183" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[multiple Foo]&lt;/code&gt; - generates &lt;code&gt;module.exports = { Foo };&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eea7df1dbec445188828785e02bb4ce7e0602c21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[name]&lt;/code&gt; - chunk name (e.g. &lt;code&gt;[name].js&lt;/code&gt; -&amp;gt; &lt;code&gt;app.js&lt;/code&gt;). If a chunk has no name, then its id will be used</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83aac4da0162f14fcfecada77dc674aa5a950d3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[name]&lt;/code&gt; - name of an exported value (&lt;strong&gt;required&lt;/strong&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a13e1b6d22285bc17b6ba9075d15c3a588c55a58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[name]&lt;/code&gt; - name of an imported value (&lt;strong&gt;required&lt;/strong&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fbad4b9aad114ef59445d47851aa5273ac5a131" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[name]&lt;/code&gt; is replaced with the name of the original asset (&lt;code&gt;image&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1d4ef39f5bf44a3c7f52fba0d88a5157fca95f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[name]&lt;/code&gt; name of the chunk</source>
          <target state="translated">&lt;code&gt;[name]&lt;/code&gt; nombre del fragmento</target>
        </trans-unit>
        <trans-unit id="9aa3439d73cad916b4e1beb7dd0334edfa1741ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[named Foo FooA Bar]&lt;/code&gt; - generates &lt;code&gt;import { FooA as Bar } from &quot;Foo&quot;;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9374375a37c88b4c843f1bc49c65fa32b2f7a722" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[named Foo FooA]&lt;/code&gt; - generates &lt;code&gt;export { Foo as FooA };&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb753435847b254d0bf78ad79da3731afdd4353" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[named Foo FooA]&lt;/code&gt; - generates &lt;code&gt;import { FooA } from &quot;Foo&quot;;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea0491c63df7c32f468c865b1bd2f2085e5abaa2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[named Foo]&lt;/code&gt; - generates &lt;code&gt;export { Foo };&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="096845bedc66a05c0759bb235b0b9256fc810b15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[named [name] [name]Alias]&lt;/code&gt; - generates ES module named exports and exports a value equal to the filename under other name., for &lt;code&gt;single.js&lt;/code&gt; it will be &lt;code&gt;single&lt;/code&gt; and &lt;code&gt;singleAlias&lt;/code&gt;, generates &lt;code&gt;export { single as singleAlias };&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fcecc31074862fc50489155e4a6bc71f5809fe3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[namespace Foo FooA]&lt;/code&gt; - generates &lt;code&gt;import * as FooA from &quot;Foo&quot;;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b32c01b347b593f8684cfa9015850c59fbd2df3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[path]&lt;/code&gt; is replaced with the directories to the original asset, included trailing &lt;code&gt;/&lt;/code&gt; (&lt;code&gt;assets/images/&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9d8b2eb65fe6b80205a1ff4bdaf7f63ec334691" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure Foo]&lt;/code&gt; - generates &lt;code&gt;require(&quot;Foo&quot;);&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49f5350f2a41fad8407c83e3b5a18ff7729afe7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[query]&lt;/code&gt; is replaced with the query of the original asset, included &lt;code&gt;?&lt;/code&gt; (&lt;code&gt;?foo=bar&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2726c5f0acb57b339b63d72da3a5e8d30fc8ca3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[side-effects Foo]&lt;/code&gt; - generates &lt;code&gt;import &quot;Foo&quot;;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff128124c2b2ee2c7002dd01bf141fa6e3079258" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[single ./my-lib Foo]&lt;/code&gt; - generates &lt;code&gt;const Foo = require(&quot;./my-lib&quot;);&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01ff85863c00eaa83d0ebd9c34b1e005e2810122" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[single Foo]&lt;/code&gt; - generates &lt;code&gt;const Foo = require(&quot;Foo&quot;);&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1f5c9f8447badde545cf49af61f08a2cb50bf4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[single Foo]&lt;/code&gt; - generates &lt;code&gt;module.exports = Foo;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51340a433fd6ec8064e6d364a217e30c00dddcde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[string]&lt;/code&gt; values are supported since webpack 5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1953dfa36de0fabf0fbd0ba8dbf8ecc5c1540c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[syntax]&lt;/code&gt; (&lt;strong&gt;may be omitted&lt;/strong&gt;) -</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c51a5349bc6a276690b2aa895701e01b298894d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[syntax]&lt;/code&gt; (&lt;strong&gt;may be omitted&lt;/strong&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8fec964e1f9eb15741755d5508a571a6c9c9cae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__dirname&lt;/code&gt; (NodeJS)</source>
          <target state="translated">&lt;code&gt;__dirname&lt;/code&gt; (NodeJS)</target>
        </trans-unit>
        <trans-unit id="84d77b7f65e9e009125274191be0b27428b5ac9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__filename&lt;/code&gt; (NodeJS)</source>
          <target state="translated">&lt;code&gt;__filename&lt;/code&gt; (NodeJS)</target>
        </trans-unit>
        <trans-unit id="23c15da06fd7a7f63a9d35d802b1683e4db2a68f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__non_webpack_require__&lt;/code&gt; (webpack-specific)</source>
          <target state="translated">&lt;code&gt;__non_webpack_require__&lt;/code&gt; (espec&amp;iacute;fico del paquete web)</target>
        </trans-unit>
        <trans-unit id="8470a68145d2ac9158dd50104a394f75d815dde8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__resourceQuery&lt;/code&gt; (webpack-specific)</source>
          <target state="translated">&lt;code&gt;__resourceQuery&lt;/code&gt; (espec&amp;iacute;fico de paquete web)</target>
        </trans-unit>
        <trans-unit id="4c30f4c5816c323c88f387fb000aab647b140c48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__webpack_chunk_load__&lt;/code&gt; (webpack-specific)</source>
          <target state="translated">&lt;code&gt;__webpack_chunk_load__&lt;/code&gt; (espec&amp;iacute;fico del paquete web)</target>
        </trans-unit>
        <trans-unit id="27e7b404ebd6a9560b1b5b6dc6a96c748ebf2f28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__webpack_exports_info__.&amp;lt;exportName&amp;gt;.provideInfo&lt;/code&gt; is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf80561eb0f6342f38c18f678d3d0394c9e9037c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__webpack_exports_info__.&amp;lt;exportName&amp;gt;.useInfo&lt;/code&gt; is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e7602a0530ba8b4963175da4d97b364eb470455" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__webpack_exports_info__.&amp;lt;exportName&amp;gt;.used&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; when the export is known to be unused, &lt;code&gt;true&lt;/code&gt; otherwise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da153536bb80951ec0be7a742c42a599fcf6daad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__webpack_exports_info__&lt;/code&gt; (webpack-specific)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="144bd4c15f9c2b4a39af68eefb366d2fee65ee56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__webpack_exports_info__&lt;/code&gt; is always &lt;code&gt;true&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d912b1d534d5fe785a2f54219a5cb8360248b053" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__webpack_hash__&lt;/code&gt; (webpack-specific)</source>
          <target state="translated">&lt;code&gt;__webpack_hash__&lt;/code&gt; (espec&amp;iacute;fico del paquete web)</target>
        </trans-unit>
        <trans-unit id="79263deede02323cd9297eb6ce4086a316f554df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__webpack_is_included__&lt;/code&gt; (webpack-specific)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="961764c1c9b528db09e0bc0e9ab6b705ee542acd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__webpack_modules__&lt;/code&gt; (webpack-specific)</source>
          <target state="translated">&lt;code&gt;__webpack_modules__&lt;/code&gt; (espec&amp;iacute;fico del paquete web)</target>
        </trans-unit>
        <trans-unit id="6abe3184dbfefa910d98d0b151a14e6652ef855c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__webpack_public_path__&lt;/code&gt; (webpack-specific)</source>
          <target state="translated">&lt;code&gt;__webpack_public_path__&lt;/code&gt; (espec&amp;iacute;fico del paquete web)</target>
        </trans-unit>
        <trans-unit id="504ce52dca3d794c571abc954f8275c3d8ec3d01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__webpack_require__&lt;/code&gt; (webpack-specific)</source>
          <target state="translated">&lt;code&gt;__webpack_require__&lt;/code&gt; (espec&amp;iacute;fico del paquete web)</target>
        </trans-unit>
        <trans-unit id="b7e2e46ccb6efb471594a64e5bb07aba7fd97aa0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;accept&lt;/code&gt; (self)</source>
          <target state="translated">&lt;code&gt;accept&lt;/code&gt; (yo)</target>
        </trans-unit>
        <trans-unit id="4f5bf49eb0b4076b436009f7f644e6234a0ae61b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;activeModules&lt;/code&gt; (&lt;code&gt;boolean = false&lt;/code&gt;): Shows active modules count and one active module in progress message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ae237cee9b440f6cfebe760110c91a69735afb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;additionalChunkAssets&lt;/code&gt; is deprecated (use the &lt;a href=&quot;#processassets&quot;&gt;Compilation.hook.processAssets&lt;/a&gt; instead and use one of the Compilation.PROCESS&lt;em&gt;ASSETS_STAGE&lt;/em&gt;* as a stage option)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb40784a33ba7b9189d3a29e8630980621e1faa8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;additionalChunkAssets&lt;/code&gt; is deprecated (use the &lt;a href=&quot;#processassets&quot;&gt;Compilation.hook.processAssets&lt;/a&gt; instead and use one of the Compilation.PROCESS_ASSETS_STAGE_* as a stage option)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cdc8496bc960e7026fe4cef90de98fb07953ce8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;afterOptimizeChunkAssets&lt;/code&gt; is deprecated (use the &lt;a href=&quot;#processassets&quot;&gt;Compilation.hook.processAssets&lt;/a&gt; instead and use one of the Compilation.PROCESS&lt;em&gt;ASSETS_STAGE&lt;/em&gt;* as a stage option)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27efec66da2960f0c0aaff05814a359788360bb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;afterOptimizeChunkAssets&lt;/code&gt; is deprecated (use the &lt;a href=&quot;#processassets&quot;&gt;Compilation.hook.processAssets&lt;/a&gt; instead and use one of the Compilation.PROCESS_ASSETS_STAGE_* as a stage option)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4d5530df28aa0ffc75efa29576baf6c219894d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;algorithm&lt;/code&gt;: Can be a &lt;code&gt;function(buf, callback)&lt;/code&gt; or a string. For a string the algorithm is taken from &lt;code&gt;zopfli&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;algorithm&lt;/code&gt; : puede ser una &lt;code&gt;function(buf, callback)&lt;/code&gt; o una cadena. Para una cadena, el algoritmo se toma de &lt;code&gt;zopfli&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5fd80f137fbd6b0170b52a093435b80d1119177d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alias&lt;/code&gt; - alias of an exported value (&lt;strong&gt;may be omitted&lt;/strong&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68afdc0532b230f353764b6168c3a7d63eab1573" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;alias&lt;/code&gt; - alias of an imported value (&lt;strong&gt;may be omitted&lt;/strong&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="798b3b030c60d93a5463dcfb8685042d391b9d05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;angular2-template-loader&lt;/code&gt; Loads and compiles &lt;a href=&quot;https://angular.io/&quot;&gt;Angular&lt;/a&gt; Components</source>
          <target state="translated">&lt;code&gt;angular2-template-loader&lt;/code&gt; Carga y compila componentes &lt;a href=&quot;https://angular.io/&quot;&gt;angulares&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="792546deb258c081da8dad551cd8b9f0761a9423" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;append&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;): Appends the given value to the original asset. Usually the &lt;code&gt;#sourceMappingURL&lt;/code&gt; comment. &lt;code&gt;[url]&lt;/code&gt; is replaced with a URL to the source map file. &lt;code&gt;false&lt;/code&gt; disables the appending.</source>
          <target state="translated">&lt;code&gt;append&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; ): agrega el valor dado al activo original. Por lo general, el comentario &lt;code&gt;#sourceMappingURL&lt;/code&gt; . &lt;code&gt;[url]&lt;/code&gt; se reemplaza con una URL al archivo de mapa de origen. &lt;code&gt;false&lt;/code&gt; deshabilita la adici&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="3f5d838ec8f1d431172b641708861583c953d2c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;append&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;): Appends the given value to the original asset. Usually the &lt;code&gt;#sourceMappingURL&lt;/code&gt; comment. &lt;code&gt;[url]&lt;/code&gt; is replaced with a URL to the source map file. Since webpack v4.36.0, path parameters are supported: &lt;code&gt;[chunk]&lt;/code&gt;, &lt;code&gt;[filename]&lt;/code&gt; and &lt;code&gt;[contenthash]&lt;/code&gt;. Setting &lt;code&gt;append&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; disables the appending.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5bc41d8773a40d703415aecdfbb7da74d60905d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;application/json&lt;/code&gt;, &lt;code&gt;text/javascript&lt;/code&gt;, &lt;code&gt;application/javascript&lt;/code&gt;, &lt;code&gt;application/node&lt;/code&gt; and &lt;code&gt;application/wasm&lt;/code&gt; are already included by default as mimetype.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf3470e82870c47a2233ebfcbca810e29f0ef282" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array = []: string | RegExp | function (assetName) =&amp;gt; boolean&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;function (assetName) =&amp;gt; boolean&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9986d2b3f7e878d58cf33b232c87e6edce4cfb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array = []: string | RegExp | function (assetName) =&amp;gt; boolean&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;function (assetName) =&amp;gt; boolean&lt;/code&gt;&lt;code&gt;boolean: false&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ab2529b96d0c90a3027f5031f9fb33b4543caf5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array = []: string | RegExp | function (name) =&amp;gt; boolean&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;function (name) =&amp;gt; boolean&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b54e3c22d55ee642ada3cfefd1caf790db6fe5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array = []: string | RegExp | function (warning) =&amp;gt; boolean&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;function (warning) =&amp;gt; boolean&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="772d108d7742440e2315dfb4c0e3843590596276" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asset/inline&lt;/code&gt; exports a data URI of the asset. Previously achievable by using &lt;code&gt;url-loader&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7633a7550414e8346935a2904ab446a9706a171c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asset/resource&lt;/code&gt; emits a separate file and exports the URL. Previously achievable by using &lt;code&gt;file-loader&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74676c0571c05b81da408a55b8d1441d32815ca1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asset/source&lt;/code&gt; exports the source code of the asset. Previously achievable by using &lt;code&gt;raw-loader&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e89d77272f4dc73a8eccc9e0b8e9ccee4c0ec23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asset&lt;/code&gt; automatically chooses between exporting a data URI and emitting a separate file. Previously achievable by using &lt;code&gt;url-loader&lt;/code&gt; with asset size limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8f61b56f9775a9b07b1bfe1f5c1a512be1b694a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asset&lt;/code&gt;: The target asset name. &lt;code&gt;[file]&lt;/code&gt; is replaced with the original asset. &lt;code&gt;[path]&lt;/code&gt; is replaced with the path of the original asset and &lt;code&gt;[query]&lt;/code&gt; with the query. Defaults to &lt;code&gt;&quot;[path].gz[query]&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;asset&lt;/code&gt; : el nombre del activo de destino. &lt;code&gt;[file]&lt;/code&gt; se reemplaza con el activo original. &lt;code&gt;[path]&lt;/code&gt; se reemplaza con la ruta del activo original y &lt;code&gt;[query]&lt;/code&gt; con la consulta. El valor predeterminado es &lt;code&gt;&quot;[path].gz[query]&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c7f626084612ba9af11aa02c8893c20fa17fa558" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assetInfo&lt;/code&gt; - additional asset information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dd05084e80e7961b073aa7a177717407499a64b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assetInfoUpdateOrFunction&lt;/code&gt; - new asset info or function converting old to new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36692d08dd04659b90cb0c183c861ff437c84ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asyncWebAssembly&lt;/code&gt;: Support the new WebAssembly according to the &lt;a href=&quot;https://github.com/WebAssembly/esm-integration&quot;&gt;updated specification&lt;/a&gt;, it makes a WebAssembly module an async module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49780beb7c47143f4ba4e4f72fd20045be959952" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;babel-loader&lt;/code&gt; exposes a loader-builder utility that allows users to add custom handling of Babel's configuration for each file that it processes.</source>
          <target state="translated">&lt;code&gt;babel-loader&lt;/code&gt; expone una utilidad loader-builder que permite a los usuarios agregar un manejo personalizado de la configuraci&amp;oacute;n de Babel para cada archivo que procesa.</target>
        </trans-unit>
        <trans-unit id="a85183f418926f14a0922d986d8feeee56b0b216" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;babel&lt;/code&gt;: Pass in a custom &lt;code&gt;babel-core&lt;/code&gt; instead. Default: &lt;code&gt;require(&quot;babel-core&quot;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;babel&lt;/code&gt; : Pase un &lt;code&gt;babel-core&lt;/code&gt; personalizado en su lugar. Predeterminado: &lt;code&gt;require(&quot;babel-core&quot;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a884729fb23d470cbec928a7342d772f840552fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;babelrc&lt;/code&gt;: Default &lt;code&gt;true&lt;/code&gt;. When &lt;code&gt;false&lt;/code&gt;, no options from &lt;code&gt;.babelrc&lt;/code&gt; files will be used; only the options passed to &lt;code&gt;babel-loader&lt;/code&gt; will be used.</source>
          <target state="translated">&lt;code&gt;babelrc&lt;/code&gt; : valor predeterminado &lt;code&gt;true&lt;/code&gt; . Cuando es &lt;code&gt;false&lt;/code&gt; , no se utilizar&amp;aacute;n opciones de archivos &lt;code&gt;.babelrc&lt;/code&gt; ; solo se utilizar&amp;aacute;n las opciones pasadas a &lt;code&gt;babel-loader&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6bc28bfcc57fe3d265083e5a9d5176f914bf6cf4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;backend&lt;/code&gt;: Customize the backend, defaults to &lt;code&gt;webpack/lib/hmr/lazyCompilationBackend&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7642382d960d2d2b09122b1fe5753801121a1120" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bail&lt;/code&gt; - whether to bail or not when an error occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="690cc9966b631e5b01ffbfa474afd2f719712549" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;block&lt;/code&gt; - block tie for &lt;code&gt;Chunk&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d1db437d6409195cbf1fd3b4b6a34941ac2b09f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;block&lt;/code&gt; - dependency block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d99689e93d67b73236a1549a5b6c6496833ad16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;blocks&lt;/code&gt; - a set of dependency blocks to report from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c66d7d0de12a47a0f955a9629d9aa0099a8aac8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean = false&lt;/code&gt;&lt;code&gt;function (compilerConfig) =&amp;gt; boolean&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea9efe2781b9c5769e39fb806d3c72a568a365f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean = false&lt;/code&gt;&lt;code&gt;function (filePath) =&amp;gt; boolean&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8515a4c2a5332e69951dbe155a63fe52a3114b76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean = false&lt;/code&gt;&lt;code&gt;function (module, chunks, cacheGroupKey) =&amp;gt; string&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14c075dd7f13acc5bfaef10e4661f09d935d81bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean = false&lt;/code&gt;&lt;code&gt;number&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="211fcf728ee69cf5072f473b6122b5135621b77c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean = false&lt;/code&gt;&lt;code&gt;object: { errors boolean = false, warnings boolean = false }&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="778e26251d2908c22444be14b30b3e99cc90b015" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean = false&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abdb7401067bc2f95b1ee79c0d898f0e78ddda3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean = false&lt;/code&gt;&lt;code&gt;string: 'anonymous' | 'use-credentials'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="861fa025dd684502a81d42eb5b8afa03a4cd6241" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean = false&lt;/code&gt;&lt;code&gt;string: 'natural' | 'named' | 'deterministic' | 'size'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52c9489ce0524d42ce224157e4961388681d3f2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean = false&lt;/code&gt;&lt;code&gt;string: 'natural' | 'named' | 'size' | 'total-size' | 'deterministic' &lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ad5fb885c03a7700f7b08cff50172c72c54b469" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean = false&lt;/code&gt;&lt;code&gt;string: 'natural' | 'named' | 'size' | 'total-size' | 'deterministic'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="330c087d84e3902b1076a54c734bb13b049ad794" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean = false&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d8093c9075407574fbf593767fc5157b86172de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean = false&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dbebbccc437a41676417d5bba726e9f908790d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean = true&lt;/code&gt;&lt;code&gt;string = 'auto'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0af2c3611cef5952bd1bd415996e340791b9924" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean = true&lt;/code&gt;&lt;code&gt;string: 'flag'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caec5a0807bcff895735eaa40403293e4860f901" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean = true&lt;/code&gt;&lt;code&gt;string: 'global'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50744a25d2868778b635318c2f55c183227d21f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean: false&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b16a90a830191ec5bbb4b9b56ddb8f96d867657e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean: false&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;[string]&lt;/code&gt;&lt;code&gt;number&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94e10ac85f5f9bddc0ab12c8be99298bfc5b4319" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean: true&lt;/code&gt;&lt;code&gt;function&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean: true&lt;/code&gt; &lt;code&gt;string&lt;/code&gt; &lt;code&gt;function&lt;/code&gt; verdadera</target>
        </trans-unit>
        <trans-unit id="b90f6bf68d6871fa01d4f179af246aa41f9708aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt; (since webpack 3.1.0)</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; o (desde webpack 3.1.0)</target>
        </trans-unit>
        <trans-unit id="77ce23cc5bdfec10477c422ac41d461b485678b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;function (module)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e868289ed64280fae08519e316807bffbf4e883" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;number&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;number&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="33da9fab0b4b53f772b31ae8a9d70da1f9e4cd60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bec3919ac51ad4b9a3a65a4e3c4694d1c22f7807" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;string = &quot;auto&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af7d3fab5372b829d1691b4f3b4352ac58730da3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;string: 'deterministic' | 'size'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="906baf8a8075d3014669735804f94a57b128088e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;string: 'mock' | 'eval-only'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26e66bfc53301feacf65bf412bd63e668c6fb5e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="437c4090ec82119c0eb95098c2d8c950be0c5114" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;array&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;array&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="67b97847bcd6b9637ed909772802d29a33a0cbe1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean&lt;/code&gt;&lt;code&gt;{ dry?: boolean, keep?: RegExp | string | ((filename: string) =&amp;gt; boolean) }&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9390d54bb9906cf4784a018e4cab407ff614f199" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;boolean=true&lt;/code&gt;&lt;code&gt;string: 'verbose'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51288f849bc5342c30f5661bc700fad511b54b21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;browser&lt;/code&gt;: Compatible with current Spec and stage 4 proposals at time of publishing the package. Polyfilling resp. transpiling must be handled on consumer side.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f59726f760b50534420a868125aaf560fe991bb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;browserslist:/path/to/config:modern&lt;/code&gt; - explicitly specify browserslist config and an environment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a2045c7a0d7e3feb6d4d6383bc5abb74607aa06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;browserslist:/path/to/config&lt;/code&gt; - explicitly specify browserslist config</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba1ae5ea25d4cbd4b2b75df412a2ec610709401c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;browserslist:last 2 versions&lt;/code&gt; - use an explicit browserslist query (config will be ignored)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="219aece5575a1c62c8de17e7afc928b1ae415e0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;browserslist:modern&lt;/code&gt; - use &lt;code&gt;modern&lt;/code&gt; environment from automatically resolved browserslist config</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c19b86f12941e482590277582587c66e6fedbb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;browserslist&lt;/code&gt; - use automatically resolved browserslist config and environment (from the nearest &lt;code&gt;package.json&lt;/code&gt; or &lt;code&gt;BROWSERSLIST&lt;/code&gt; environment variable, see &lt;a href=&quot;https://github.com/browserslist/browserslist#queries&quot;&gt;browserslist documentation&lt;/a&gt; for details)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d38862bb688db87eee654f8041144c91cd6c1d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;buble-loader&lt;/code&gt; Loads ES2015+ code and transpiles to ES5 using &lt;a href=&quot;https://buble.surge.sh/guide/&quot;&gt;Bubl&amp;eacute;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;buble-loader&lt;/code&gt; Carga el c&amp;oacute;digo ES2015 + y lo transpila a ES5 usando &lt;a href=&quot;https://buble.surge.sh/guide/&quot;&gt;Bubl&amp;eacute;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="db8e8ed8dbde81dc1e225d85bc5ad5a8e712987f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;building&lt;/code&gt;: time to build the module (e.g. loaders and parsing)</source>
          <target state="translated">&lt;code&gt;building&lt;/code&gt; : tiempo para construir el m&amp;oacute;dulo (por ejemplo, cargadores y an&amp;aacute;lisis)</target>
        </trans-unit>
        <trans-unit id="ec0ff384b43116996c321dc6fd7c07798bbd6a41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bundled code&lt;/code&gt; - You see all generated code as a big blob of code. You don't see modules separated from each other.</source>
          <target state="translated">&lt;code&gt;bundled code&lt;/code&gt; : ve todo el c&amp;oacute;digo generado como una gran cantidad de c&amp;oacute;digo. No ve m&amp;oacute;dulos separados entre s&amp;iacute;.</target>
        </trans-unit>
        <trans-unit id="2e6ac8d3ebfd8baed8754691b26c933e61c95930" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cache-loader&lt;/code&gt;: The cache can be shared between multiple compilations.</source>
          <target state="translated">&lt;code&gt;cache-loader&lt;/code&gt; : el cach&amp;eacute; se puede compartir entre varias compilaciones.</target>
        </trans-unit>
        <trans-unit id="9fb5e53e48fdb59199e15d2689051744ebffc079" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cache.buildDependencies&lt;/code&gt; is an object of arrays of additional code dependencies for the build. webpack will use a hash of each of these items and all dependencies to invalidate the filesystem cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="187120357b0c618475152b5c3a3624b0fe74dd56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cache.cacheDirectory&lt;/code&gt; option is only available when &lt;a href=&quot;#cachetype&quot;&gt;&lt;code&gt;cache.type&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;filesystem&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16c4b2653fa91040b52d15b97ad96201418c39c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cache.hashAlgorithm&lt;/code&gt; option is only available when &lt;a href=&quot;#cachetype&quot;&gt;&lt;code&gt;cache.type&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;filesystem&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ab62e2aa422d60ae4dd2f5b910debedeb8ea8ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cache.idleTimeout&lt;/code&gt; is only available when &lt;a href=&quot;#cachestore&quot;&gt;&lt;code&gt;cache.store&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;'pack'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96e754f7cbf21e54693facf7097fc4d9560471cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cache.idleTimeoutForInitialStore&lt;/code&gt; is only available when &lt;a href=&quot;#cachestore&quot;&gt;&lt;code&gt;cache.store&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;'pack'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c917db5584cc51e6b206a48d7b2aeb444c9238b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cache.managedPaths&lt;/code&gt; is an array of package-manager only managed paths. webpack will avoid hashing and timestamping them, assume the version is unique and will use it as a snapshot (for both memory and filesystem cache).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2e117d2735b12b54a004b8110f2730b3189e236" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cache.name&lt;/code&gt; option is only available when &lt;a href=&quot;#cachetype&quot;&gt;&lt;code&gt;cache.type&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;filesystem&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab78a1a86a87bd59b2d85fb88f07b89b2eca950b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cache.store&lt;/code&gt; option is only available when &lt;a href=&quot;#cachetype&quot;&gt;&lt;code&gt;cache.type&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;filesystem&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe8c1d266b381a04dacb43d2d1151fbafaa3f60f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cache.store&lt;/code&gt; tells webpack when to store data on the file system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b4a8d6a353025310be6d6af347a40976f1894aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cache.version&lt;/code&gt; option is only available when &lt;a href=&quot;#cachetype&quot;&gt;&lt;code&gt;cache.type&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;filesystem&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fb1a81730a9a109c17ae843851373bc820e1d1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cache&lt;/code&gt; (default: false)</source>
          <target state="translated">&lt;code&gt;cache&lt;/code&gt; (predeterminado: falso)</target>
        </trans-unit>
        <trans-unit id="6215ac974d81a73c6b717b785223abbca99053c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cacheCompression&lt;/code&gt;: Default &lt;code&gt;true&lt;/code&gt;. When set, each Babel transform output will be compressed with Gzip. If you want to opt-out of cache compression, set it to &lt;code&gt;false&lt;/code&gt; -- your project may benefit from this if it transpiles thousands of files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de9aece0def1219e41de3e75bbacafbe66678c7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cacheDirectory&lt;/code&gt;: Default &lt;code&gt;false&lt;/code&gt;. When set, the given directory will be used to cache the results of the loader. Future webpack builds will attempt to read from the cache to avoid needing to run the potentially expensive Babel recompilation process on each run. If the value is blank (&lt;code&gt;loader: 'babel-loader?cacheDirectory'&lt;/code&gt;) or &lt;code&gt;true&lt;/code&gt; (&lt;code&gt;loader: babel-loader?cacheDirectory=true&lt;/code&gt;) the loader will use the default cache directory in &lt;code&gt;node_modules/.cache/babel-loader&lt;/code&gt; or fallback to the default OS temporary file directory if no &lt;code&gt;node_modules&lt;/code&gt; folder could be found in any root directory.</source>
          <target state="translated">&lt;code&gt;cacheDirectory&lt;/code&gt; : por defecto &lt;code&gt;false&lt;/code&gt; . Cuando se establece, el directorio dado se utilizar&amp;aacute; para almacenar en cach&amp;eacute; los resultados del cargador. Las futuras compilaciones de paquetes web intentar&amp;aacute;n leer desde la cach&amp;eacute; para evitar tener que ejecutar el proceso de recompilaci&amp;oacute;n de Babel potencialmente costoso en cada ejecuci&amp;oacute;n. Si el valor est&amp;aacute; en blanco ( &lt;code&gt;loader: 'babel-loader?cacheDirectory'&lt;/code&gt; ) o &lt;code&gt;true&lt;/code&gt; ( &lt;code&gt;loader: babel-loader?cacheDirectory=true&lt;/code&gt; ), el cargador usar&amp;aacute; el directorio de cach&amp;eacute; predeterminado en &lt;code&gt;node_modules/.cache/babel-loader&lt;/code&gt; o volver&amp;aacute; al directorio de archivos temporales del sistema operativo predeterminado si no se puede encontrar ninguna carpeta &lt;code&gt;node_modules&lt;/code&gt; en ning&amp;uacute;n directorio ra&amp;iacute;z.</target>
        </trans-unit>
        <trans-unit id="6ad288ac0f7d22dde9b3b90a8e12e4a938a5ee73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cacheDirectory&lt;/code&gt;: Default &lt;code&gt;false&lt;/code&gt;. When set, the given directory will be used to cache the results of the loader. Future webpack builds will attempt to read from the cache to avoid needing to run the potentially expensive Babel recompilation process on each run. If the value is set to &lt;code&gt;true&lt;/code&gt; in options (&lt;code&gt;{cacheDirectory: true}&lt;/code&gt;), the loader will use the default cache directory in &lt;code&gt;node_modules/.cache/babel-loader&lt;/code&gt; or fallback to the default OS temporary file directory if no &lt;code&gt;node_modules&lt;/code&gt; folder could be found in any root directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f4a40b61235a2d9b226c84ba349d9b70f09993f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cacheGroup&lt;/code&gt; - &lt;code&gt;cacheGroup&lt;/code&gt; of the module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="065a328d0842a2f967687cfa678c0a61195b1bce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cacheGroup&lt;/code&gt; - &lt;code&gt;cacheGroup&lt;/code&gt; of the module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe5bec35c5389628bc7b8e8c40b7f03759b4f00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cacheIdentifier&lt;/code&gt;: Default is a string composed by the &lt;code&gt;@babel/core&lt;/code&gt;'s version, the &lt;code&gt;babel-loader&lt;/code&gt;'s version, the contents of &lt;code&gt;.babelrc&lt;/code&gt; file if it exists, and the value of the environment variable &lt;code&gt;BABEL_ENV&lt;/code&gt; with a fallback to the &lt;code&gt;NODE_ENV&lt;/code&gt; environment variable. This can be set to a custom value to force cache busting if the identifier changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87e1de1b0e740946cabb42449c45c017841ef6aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cacheIdentifier&lt;/code&gt;: Default is a string composed by the babel-core's version, the babel-loader's version, the contents of .babelrc file if it exists and the value of the environment variable &lt;code&gt;BABEL_ENV&lt;/code&gt; with a fallback to the &lt;code&gt;NODE_ENV&lt;/code&gt; environment variable. This can be set to a custom value to force cache busting if the identifier changes.</source>
          <target state="translated">&lt;code&gt;cacheIdentifier&lt;/code&gt; : Default es una cadena compuesta por la versi&amp;oacute;n de babel-core, la versi&amp;oacute;n de babel-loader, el contenido del archivo .babelrc si existe y el valor de la variable de entorno &lt;code&gt;BABEL_ENV&lt;/code&gt; con un &lt;code&gt;NODE_ENV&lt;/code&gt; la variable de entorno NODE_ENV . Esto se puede establecer en un valor personalizado para forzar la rotura de cach&amp;eacute; si cambia el identificador.</target>
        </trans-unit>
        <trans-unit id="54fba91058b69e5100d1b98cd10df7f95c49f5e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback(require)&lt;/code&gt; A callback function called once the chunk is loaded.</source>
          <target state="translated">&lt;code&gt;callback(require)&lt;/code&gt; Una funci&amp;oacute;n de devoluci&amp;oacute;n de llamada llamada una vez que se carga el fragmento.</target>
        </trans-unit>
        <trans-unit id="bcf3be8328eecf5d9291f2ab9c9804af832b9cba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt; (&lt;code&gt;function (err, result, type)&lt;/code&gt;): Callback function used to indicate how the module should be externalized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75d4cdf7a565b60134d26c77fbdcaa6f26b6a361" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt; - function to be invoked when addEntry finishes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f16efca48afc1385c59f335e14fc764ef76dd473" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt; - function to be invoked when dependencies of the module had been processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fde087bdcac07a7d17d8c477973da24cfc4f973" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt; - function to be invoked when the compilation has been finished.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f90a4f82789029ed00f133e8308cc3ac413f47f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt; - function to be invoked when the compilation has been sealed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ae6f2379fe1e3f34ef3b441a48c3b69bc9b347a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt; - function to be invoked when the compilation has been unsealed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9e6b5ad289322fc3042423b6b41197cb8b223e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt; - function to invoke after adding the module dependencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3608fae3f29710b6e877d8ba978d9e051df0cd33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt; - module callback that sends a module up one level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55e431ec57b31c24f61db1975d286af8a14ac145" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt; - the function to be invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f288048e33b77b3a315e88c8f02ad343c1a8ed59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt; is a normal Node.js-style callback function giving the resolved path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bb6b1e711dd26e7d133f3b17e1b2dd21bb7f0b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt;: A function that webpack will execute once the dependencies are loaded. An implementation of the &lt;code&gt;require&lt;/code&gt; function is sent as a parameter to this function. The function body can use this to further &lt;code&gt;require()&lt;/code&gt; modules it needs for execution.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; : una funci&amp;oacute;n que el paquete web ejecutar&amp;aacute; una vez que se carguen las dependencias. Una implementaci&amp;oacute;n de la funci&amp;oacute;n &lt;code&gt;require&lt;/code&gt; se env&amp;iacute;a como par&amp;aacute;metro a esta funci&amp;oacute;n. El cuerpo de la funci&amp;oacute;n puede usar esto para &lt;code&gt;require()&lt;/code&gt; m&amp;aacute;s m&amp;oacute;dulos () que necesita para su ejecuci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b3f22118c50f5bc8e9a0298afdaff998debae1ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cheap-eval-source-map&lt;/code&gt; - Similar to &lt;code&gt;eval-source-map&lt;/code&gt;, each module is executed with &lt;code&gt;eval()&lt;/code&gt;. It is &quot;cheap&quot; because it doesn't have column mappings, it only maps line numbers. It ignores SourceMaps from Loaders and only display transpiled code similar to the &lt;code&gt;eval&lt;/code&gt; devtool.</source>
          <target state="translated">&lt;code&gt;cheap-eval-source-map&lt;/code&gt; : similar a &lt;code&gt;eval-source-map&lt;/code&gt; , cada m&amp;oacute;dulo se ejecuta con &lt;code&gt;eval()&lt;/code&gt; . Es &quot;barato&quot; porque no tiene asignaciones de columnas, solo asigna n&amp;uacute;meros de l&amp;iacute;nea. Ignora SourceMaps de Loaders y solo muestra c&amp;oacute;digo transpilado similar al &lt;code&gt;eval&lt;/code&gt; devtool.</target>
        </trans-unit>
        <trans-unit id="c1b92c4b745e5d3d836bc24b7ac7a5d3723cee83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cheap-module-eval-source-map&lt;/code&gt; - Similar to &lt;code&gt;cheap-eval-source-map&lt;/code&gt;, however, in this case Source Maps from Loaders are processed for better results. However Loader Source Maps are simplified to a single mapping per line.</source>
          <target state="translated">&lt;code&gt;cheap-module-eval-source-map&lt;/code&gt; : similar a &lt;code&gt;cheap-eval-source-map&lt;/code&gt; , sin embargo, en este caso, los mapas de origen de los cargadores se procesan para obtener mejores resultados. Sin embargo, los mapas de origen del cargador se simplifican a un &amp;uacute;nico mapa por l&amp;iacute;nea.</target>
        </trans-unit>
        <trans-unit id="f13fa4c96080548353fed64f6941c5f5b4d4861d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cheap-module-source-map&lt;/code&gt; - A SourceMap without column-mappings that simplifies loader Source Maps to a single mapping per line.</source>
          <target state="translated">&lt;code&gt;cheap-module-source-map&lt;/code&gt; : un mapa de origen sin asignaciones de columnas que simplifica los mapas de origen del cargador a una sola asignaci&amp;oacute;n por l&amp;iacute;nea.</target>
        </trans-unit>
        <trans-unit id="df7285414f5418fb615da687c047bd96b7085e26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cheap-source-map&lt;/code&gt; - A SourceMap without column-mappings ignoring loader Source Maps.</source>
          <target state="translated">&lt;code&gt;cheap-source-map&lt;/code&gt; : un mapa de origen sin asignaciones de columnas que ignoran los mapas de origen del cargador.</target>
        </trans-unit>
        <trans-unit id="193def4dfdedce1582b9e1ed822b6b04e65a3b6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cheap&lt;/code&gt; has not column information and minimizer generate only a single line, which leave only a single mapping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee1ad7bb12d1bec1b65b33da88ae9e8f30b750fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;checkContext (context)&lt;/code&gt; was &lt;strong&gt;removed in webpack 5&lt;/strong&gt; as &lt;code&gt;checkResource&lt;/code&gt; already gets context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="049234677581919db8641baf77ac06247deb26e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;checkResource (resource, context)&lt;/code&gt; A Filter function that receives &lt;code&gt;resource&lt;/code&gt; and &lt;code&gt;context&lt;/code&gt; as arguments, must return boolean.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bff73bfa0aca1196061d7c698005f32e3b24d15c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;chunk&lt;/code&gt; - a chunk to patch tie.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77f2bd21aa1a74e66f0858e13e7c090e510f06d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;chunk&lt;/code&gt; - a chunk to remove from dependencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f614bffd1237acc7f21ad391d17339ded1248023" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;chunkId&lt;/code&gt; The id for the chunk to load.</source>
          <target state="translated">&lt;code&gt;chunkId&lt;/code&gt; El id del fragmento que se cargar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="0ff26499361a89f435e8639ba5141eeba0a7b005" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;chunkName&lt;/code&gt;: A name given to the chunk created by this particular &lt;code&gt;require.ensure()&lt;/code&gt;. By passing the same &lt;code&gt;chunkName&lt;/code&gt; to various &lt;code&gt;require.ensure()&lt;/code&gt; calls, we can combine their code into a single chunk, resulting in only one bundle that the browser must load.</source>
          <target state="translated">&lt;code&gt;chunkName&lt;/code&gt; : un nombre dado al fragmento creado por este &lt;code&gt;require.ensure()&lt;/code&gt; particular . Al pasar el mismo &lt;code&gt;chunkName&lt;/code&gt; a varias llamadas require.ensure &lt;code&gt;require.ensure()&lt;/code&gt; , podemos combinar su c&amp;oacute;digo en un solo fragmento, lo que da como resultado un solo paquete que el navegador debe cargar.</target>
        </trans-unit>
        <trans-unit id="95f8b5fd9b756185dd294195a96b20006571276f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;client&lt;/code&gt;: Path to a custom client, defaults to &lt;code&gt;webpack/hot/lazy-compilation-{node|web}.js&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9dba8a3205d94acdf36605f745791765e28402d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;columns = true&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;): Indicates whether column mappings should be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d411a8c567e2ceddad9237b8b3830613706ffd50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;columns&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;): Indicates whether column mappings should be used (defaults to &lt;code&gt;true&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;columns&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; o ): indica si se deben usar asignaciones de columnas (el valor predeterminado es &lt;code&gt;true&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="6439e694c858d8e4b698784c26742e8ffed593b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;comments&lt;/code&gt;: Preserve Comments. Default: &lt;code&gt;/^\**!|@preserve|@license|@cc_on/&lt;/code&gt;, falsy value to remove all comments. Accepts function, object with property test (regex), and values.</source>
          <target state="translated">&lt;code&gt;comments&lt;/code&gt; : Conservar comentarios. Por defecto: &lt;code&gt;/^\**!|@preserve|@license|@cc_on/&lt;/code&gt; , valor falso para eliminar todos los comentarios. Acepta funci&amp;oacute;n, objeto con prueba de propiedad (regex) y valores.</target>
        </trans-unit>
        <trans-unit id="08472ea55b5a59b3f31ce4fe08e4f9fcb8450c2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compiler&lt;/code&gt;: The current webpack compiler (can be undefined)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc31dc16692ce244c00698aa7ec17e33adc64f05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;components/Breadcrumbs.js&lt;/code&gt;: No export is used, not flagged with sideEffects -&amp;gt; exclude it. This also excluded all dependencies like &lt;code&gt;components/Breadcrumbs.css&lt;/code&gt; even if they are flagged with sideEffects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0bfaad02acac6a388234f62bfc849d34fc50f7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;components/Button.css&lt;/code&gt;: No export is used, but flagged with sideEffects -&amp;gt; include it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="915311b78374edb4f7d63eb1c2d1d31266bc44d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;components/Button.js&lt;/code&gt;: Direct export is used, not flagged with sideEffects -&amp;gt; include it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4ae1cfdc78510c44c64de8878f08d40730b76fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;components/index.js&lt;/code&gt;: No direct export is used, not flagged with sideEffects, but reexported exports are used -&amp;gt; skip over</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bda6b352492d8da22987857c998bc2ef6ec18b86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config-loader&lt;/code&gt; supports configuration modules which export an &lt;code&gt;Object&lt;/code&gt;, &lt;code&gt;Array&lt;/code&gt;, &lt;code&gt;Function&lt;/code&gt;, &lt;code&gt;Promise&lt;/code&gt;, and &lt;code&gt;Function&lt;/code&gt; which returns a &lt;code&gt;Promise&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config-loader&lt;/code&gt; admite m&amp;oacute;dulos de configuraci&amp;oacute;n que exportan un &lt;code&gt;Object&lt;/code&gt; , &lt;code&gt;Array&lt;/code&gt; , &lt;code&gt;Function&lt;/code&gt; , &lt;code&gt;Promise&lt;/code&gt; y &lt;code&gt;Function&lt;/code&gt; que devuelve una &lt;code&gt;Promise&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7e9cf0a3baa9e13e768dd9993de1a4d46d8bbad5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;configName&lt;/code&gt; allows you to customize the name of your configuration file. For example you can name it &lt;code&gt;webpack.base.js&lt;/code&gt; instead of the default &lt;code&gt;webpack.config.js&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5ecd2312853e4c0d5f979c736315a1014faf801" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;configure.js&lt;/code&gt;: No export is used, but flagged with sideEffects -&amp;gt; include it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8779b6dc0f5d35f47dd22c916d5cbaa6f46af351" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const logging = require('webpack/lib/logging/runtime')&lt;/code&gt;: to use the logger in runtime, require it directly from webpack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76f8a6007f133257c7fb6f281a67fa289c30f485" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;content&lt;/code&gt; (optional): the mappings from request to module id (defaults to &lt;code&gt;manifest.content&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;content&lt;/code&gt; (opcional): las asignaciones de la solicitud a la identificaci&amp;oacute;n del m&amp;oacute;dulo (el valor predeterminado es &lt;code&gt;manifest.content&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="3859806df548eb7c1b3893de25006e28dfc126a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;content&lt;/code&gt; - file content (require)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa98c4ba04dea7226adfabb2e408cf5e531299ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;): The directory of the file which contains the import.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51b736ced16f8a9e004eeece97896bc57eeaf76c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context&lt;/code&gt; (optional): context of requests in the manifest file (defaults to the webpack context.)</source>
          <target state="translated">&lt;code&gt;context&lt;/code&gt; o (opcional): contexto de las solicitudes en el archivo de manifiesto (predeterminado en el contexto del paquete web).</target>
        </trans-unit>
        <trans-unit id="12b3c966be5a6113e61440ee7b1897c0a676d5d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context&lt;/code&gt; - context path for entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f210221583f018142383b98e5dda568db66d5970" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context&lt;/code&gt; - context path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ceec39829e785dddfac71f2cce203f13c350e1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context&lt;/code&gt; must be an absolute path to a directory. This directory is used as the starting location for the resolving.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43092c58c78f3eaea0490242c33f506f0f579076" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context&lt;/code&gt;: (&lt;strong&gt;absolute path&lt;/strong&gt;) context of requests in the manifest (or content property)</source>
          <target state="translated">&lt;code&gt;context&lt;/code&gt; o : ( &lt;strong&gt;ruta absoluta&lt;/strong&gt; ) contexto de solicitudes en el manifiesto (o propiedad de contenido)</target>
        </trans-unit>
        <trans-unit id="9598894e7963734ff8f867fb8ed60a2022b8a26a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context&lt;/code&gt;: An absolute path to a directory</source>
          <target state="translated">&lt;code&gt;context&lt;/code&gt; o : una ruta absoluta a un directorio</target>
        </trans-unit>
        <trans-unit id="bc44489a0e7353e67e38c7d411ce8d92dcb34c31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context&lt;/code&gt;: Resolves a module within a given context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="557006fb71a3113753c3cd2088f6084d542602b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;context&lt;/code&gt;: The context directory (&lt;strong&gt;absolute path&lt;/strong&gt;) for creating names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1944cd235f033f2cba0638eb342272571f4e2544" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;contextRegExp&lt;/code&gt; (optional) A RegExp to test the context (directory) against.</source>
          <target state="translated">&lt;code&gt;contextRegExp&lt;/code&gt; (opcional) Una expresi&amp;oacute;n regular para probar el contexto (directorio).</target>
        </trans-unit>
        <trans-unit id="1ca5f723243a181a79c2baae52d76ba6efbc879b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;contextRegExp&lt;/code&gt;: (optional) A RegExp to test the context (directory) against.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="979d60b518c0c17f52b5afa93668c4e9b1b3fe2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;core-js&lt;/code&gt; and &lt;code&gt;webpack/buildin&lt;/code&gt; will cause errors if they are transpiled by Babel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61d7fce23e088eaf890be6d95ad823ada36ae508" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crossOriginLoading: &quot;anonymous&quot;&lt;/code&gt; - Enable cross-origin loading &lt;strong&gt;without credentials&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;crossOriginLoading: &quot;anonymous&quot;&lt;/code&gt; - Habilita la carga de origen cruzado &lt;strong&gt;sin credenciales&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fcbce380ba9373ad842a6a942fe0c674d31d8fc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crossOriginLoading: &quot;use-credentials&quot;&lt;/code&gt; - Enable cross-origin loading &lt;strong&gt;with credentials&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;crossOriginLoading: &quot;use-credentials&quot;&lt;/code&gt; - Habilita la carga de origen cruzado &lt;strong&gt;con credenciales&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="25d4a7b868f9c153963f93fab6713bac72718546" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crossOriginLoading: false&lt;/code&gt; - Disable cross-origin loading (default)</source>
          <target state="translated">&lt;code&gt;crossOriginLoading: false&lt;/code&gt; : deshabilita la carga de origen cruzado (predeterminado)</target>
        </trans-unit>
        <trans-unit id="c29ef88b3bb567b524c7f01d15556d9b1c4dc1f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cson-loader&lt;/code&gt; Loads and transpiles a &lt;a href=&quot;https://github.com/bevry/cson#what-is-cson&quot;&gt;CSON&lt;/a&gt; file</source>
          <target state="translated">&lt;code&gt;cson-loader&lt;/code&gt; Carga y transpila un archivo &lt;a href=&quot;https://github.com/bevry/cson#what-is-cson&quot;&gt;CSON&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a7b8282a3f16edb4ce2f2575c4dd33c8e1a2a87d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ctx.context&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;): The directory of the file which contains the import.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c91eedf922e09e3574e019e38e23d2649b621e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ctx.contextInfo&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;): Contains information about the issuer (e.g. the layer).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="debd2e0a6810e3849f522f69991c028bc9c2310a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ctx.getResolve&lt;/code&gt;5.15.0+: Get a resolve function with the current resolver options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="965fdc873d1f1f8806f50c5c68138d33d401e757" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ctx.request&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;): The import path being requested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2ce2e18436669a1e16af18023cc55557020d748" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ctx&lt;/code&gt; (&lt;code&gt;object&lt;/code&gt;): Object containing details of the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3c6be9ed50d5554c3890cb65f9767ed8dcae260" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;customize&lt;/code&gt;: Default &lt;code&gt;null&lt;/code&gt;. The path of a module that exports a &lt;code&gt;custom&lt;/code&gt; callback &lt;a href=&quot;#customized-loader&quot;&gt;like the one that you'd pass to &lt;code&gt;.custom()&lt;/code&gt;&lt;/a&gt;. Since you already have to make a new file to use this, it is recommended that you instead use &lt;code&gt;.custom&lt;/code&gt; to create a wrapper loader. Only use this if you &lt;em&gt;must&lt;/em&gt; continue using &lt;code&gt;babel-loader&lt;/code&gt; directly, but still want to customize.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="552ccbf9b7eca577383c588e6cc2440a02fe8ea3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data:&lt;/code&gt; url requests are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22e208e0b57c8dd6f86fa4bbc215dfee2667f089" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt; - data object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="825c1f238cc8f039dc8066fbbe02aa2010efc3d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;decline&lt;/code&gt; (self)</source>
          <target state="translated">&lt;code&gt;decline&lt;/code&gt; (yo)</target>
        </trans-unit>
        <trans-unit id="8c9da1179faba2d4df0529615c4349562bc95a5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;define&lt;/code&gt; (with factory)</source>
          <target state="translated">&lt;code&gt;define&lt;/code&gt; (con la f&amp;aacute;brica)</target>
        </trans-unit>
        <trans-unit id="3a707e7c2023340458a2e992d25d10d97dcbe5fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;define&lt;/code&gt; (with value)</source>
          <target state="translated">&lt;code&gt;define&lt;/code&gt; (con valor)</target>
        </trans-unit>
        <trans-unit id="da9f327c6aae327b397d756687345e9a0279ffc7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;definitions&lt;/code&gt; is an object.</source>
          <target state="translated">&lt;code&gt;definitions&lt;/code&gt; son un objeto.</target>
        </trans-unit>
        <trans-unit id="18c29e1fa6cc9e90f069ac14925f35e1e629ef36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deleteOriginalAssets&lt;/code&gt;: Whether to delete the original assets or not. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;deleteOriginalAssets&lt;/code&gt; : si eliminar los activos originales o no. El valor predeterminado es &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="558e3a4face7980fb6b3f3635b8c8370d7d05d8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deno&lt;/code&gt;: TBD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b85e304c14e3b38dc4b466ffc4218820d9bc259" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dependOn&lt;/code&gt; option can also accept an array of strings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39e09cfc6fa2d42214fc29a0202525a49f80cb8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dependOn&lt;/code&gt;: The entry points that the current entry point depends on. They must be loaded before this entry point is loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="648ae8b28eb7ce825aa25328fd8752aa6e20db02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dependencies&lt;/code&gt; (&lt;code&gt;boolean = true&lt;/code&gt;): Shows the count of dependencies in progress message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bd71d05a27cd41d447bd2bac7223515ca7f8a06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dependencies&lt;/code&gt; - optional dependencies of the module to be built.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4dca03089454e9aef9b607e91be4a02bcb4c860" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dependencies&lt;/code&gt; - set of sorted dependencies to iterate through and add to the module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb79bfc43ae722d9f31f8acbfdcd9a0df174bdd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dependencies&lt;/code&gt;: An array of strings declaring all modules required for the code in the &lt;code&gt;callback&lt;/code&gt; to execute.</source>
          <target state="translated">&lt;code&gt;dependencies&lt;/code&gt; : una matriz de cadenas que declaran todos los m&amp;oacute;dulos necesarios para que se ejecute el c&amp;oacute;digo en la &lt;code&gt;callback&lt;/code&gt; de llamada .</target>
        </trans-unit>
        <trans-unit id="70bbb455605a0647773f3fd9fdaacbaf5c2e458c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dependencies&lt;/code&gt;: time to identify and connect the module&amp;rsquo;s dependencies</source>
          <target state="translated">&lt;code&gt;dependencies&lt;/code&gt; : tiempo para identificar y conectar las dependencias del m&amp;oacute;dulo</target>
        </trans-unit>
        <trans-unit id="38ff0c031b0d06cce53d0ff29e1cb0ecbb78efe7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dependenciesCount&lt;/code&gt; (&lt;code&gt;number = 10000&lt;/code&gt;): A minimum dependencies count to start with. Takes effect when &lt;code&gt;dependencies&lt;/code&gt; property is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b66059140cc103f0243fac8efbbd190b6aa8aeb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dependency&lt;/code&gt; - the dependency that was used to create the module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1b4cf24c046a23bdda804bbeb06cc8002d2e4e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dependency&lt;/code&gt; - the dependency to get reference to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daf61508aa92350f3c8ffa68931c050de5e99997" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deterministic&lt;/code&gt; option is useful for long term caching, but still results in smaller bundles compared to &lt;code&gt;hashed&lt;/code&gt;. Length of the numeric value is chosen to fill a maximum of 80% of the id space. By default a minimum length of 3 digits is used when &lt;code&gt;optimization.moduleIds&lt;/code&gt; is set to &lt;code&gt;deterministic&lt;/code&gt;. To override the default behaviour set &lt;code&gt;optimization.moduleIds&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; and use the &lt;code&gt;webpack.ids.DeterministicModuleIdsPlugin&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5839872b73376a2ee12d6d5881b95aa01acfa8c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;devServer.clientLogLevel&lt;/code&gt; may be too verbose, you can turn logging off by setting it to &lt;code&gt;'silent'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d043952d79b49062314597942a925bc5d5d7e0b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;devServer.color&lt;/code&gt; - CLI only</source>
          <target state="translated">&lt;code&gt;devServer.color&lt;/code&gt; : solo CLI</target>
        </trans-unit>
        <trans-unit id="a818c7596baf7ec377e494a69e1dc9c3c327d7c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;devServer.filename&lt;/code&gt; 🔑</source>
          <target state="translated">&lt;code&gt;devServer.filename&lt;/code&gt; 🔑</target>
        </trans-unit>
        <trans-unit id="f5a6a037cbb4cebbabec46635d395e87f4292f56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;devServer.headers&lt;/code&gt; 🔑</source>
          <target state="translated">&lt;code&gt;devServer.headers&lt;/code&gt; 🔑</target>
        </trans-unit>
        <trans-unit id="d46b5343594544afc3e28acf15e21ae306e85bc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;devServer.info&lt;/code&gt; - CLI only</source>
          <target state="translated">&lt;code&gt;devServer.info&lt;/code&gt; : solo CLI</target>
        </trans-unit>
        <trans-unit id="00dd162f47d2909a39159638e631115a59f8f614" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;devServer.lazy&lt;/code&gt; 🔑</source>
          <target state="translated">&lt;code&gt;devServer.lazy&lt;/code&gt; 🔑</target>
        </trans-unit>
        <trans-unit id="d70d9c4180db58248d7e4a4b3bb9ba592a128a75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;devServer.mimeTypes&lt;/code&gt; 🔑</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a2eb3a8426047fb257ecf28e5a6e6286cd9cf6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;devServer.noInfo&lt;/code&gt; 🔑</source>
          <target state="translated">&lt;code&gt;devServer.noInfo&lt;/code&gt; 🔑</target>
        </trans-unit>
        <trans-unit id="1aa953c587e807002c4b85cc1ce73d958205ed7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;devServer.progress&lt;/code&gt; - CLI only</source>
          <target state="translated">&lt;code&gt;devServer.progress&lt;/code&gt; : solo CLI</target>
        </trans-unit>
        <trans-unit id="963deb03654f6cbe2d3c847185166da5393ffbd1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;devServer.publicPath&lt;/code&gt; 🔑</source>
          <target state="translated">&lt;code&gt;devServer.publicPath&lt;/code&gt; 🔑</target>
        </trans-unit>
        <trans-unit id="7c155caa75c85515cd2c61ace6cd1a076df0ed35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;devServer.quiet&lt;/code&gt; 🔑</source>
          <target state="translated">&lt;code&gt;devServer.quiet&lt;/code&gt; 🔑</target>
        </trans-unit>
        <trans-unit id="82854a0227be3e8b94911bb262255a416c6b28c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;devServer.stats&lt;/code&gt; 🔑</source>
          <target state="translated">&lt;code&gt;devServer.stats&lt;/code&gt; 🔑</target>
        </trans-unit>
        <trans-unit id="d818e97d350bd0b6682a48fca3f9dfa548c182f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;devServer.stdin&lt;/code&gt; - CLI only</source>
          <target state="translated">&lt;code&gt;devServer.stdin&lt;/code&gt; : solo CLI</target>
        </trans-unit>
        <trans-unit id="48a145cdb78fef8a6297a987af9f72b83488f471" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;devServer.watchOptions&lt;/code&gt; 🔑</source>
          <target state="translated">&lt;code&gt;devServer.watchOptions&lt;/code&gt; 🔑</target>
        </trans-unit>
        <trans-unit id="c87a7c5a229b556466d1f51f797af3fba0f70506" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;devServer.writeToDisk&lt;/code&gt; 🔑</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e5929844e42a47c7279e523491c848942f2c0cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dispose&lt;/code&gt; (or &lt;code&gt;addDisposeHandler&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;dispose&lt;/code&gt; (o &lt;code&gt;addDisposeHandler&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="cab4096ee68cd06d5fc47ac585dba608bd3f4acc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emitError&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;emitError&lt;/code&gt; (predeterminado: &lt;code&gt;false&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="3b9e74c7e0d86c59bf5835067b320ed22c5355d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emitWarning&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;emitWarning&lt;/code&gt; (predeterminado: &lt;code&gt;false&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="7491e86e11632fbb19a541d44207ae4648cd4682" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;entries&lt;/code&gt; (&lt;code&gt;boolean = true&lt;/code&gt;): Shows entries count in progress message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="762b87424e8ed75c18e0a7fb66f943bb1d1e85d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;entries&lt;/code&gt;: Enable lazy compilation for entries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dd6de60dd37598ff3eecc464b633751ec48291b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;entry&lt;/code&gt; - entry dependency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c23428dbee4cc8ebe7e269e1faf62a044ca3fd54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;entryOnly&lt;/code&gt; (boolean = true): if &lt;code&gt;true&lt;/code&gt;, only entry points will be exposed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddd7f65a5b108603c95589a7f21b79d33f3792c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;err&lt;/code&gt; (&lt;code&gt;Error&lt;/code&gt;): Used to indicate if there has been an error while externalizing the import. If there is an error, this should be the only parameter used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c010fd7e416a4c375db2fa45b9de6e4f4e6caae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;errorCallback&lt;/code&gt;: A function that is executed when webpack fails to load the dependencies.</source>
          <target state="translated">&lt;code&gt;errorCallback&lt;/code&gt; : una funci&amp;oacute;n que se ejecuta cuando el paquete web no carga las dependencias.</target>
        </trans-unit>
        <trans-unit id="5eb56a370e1c89773bafad3f2726382d8376b602" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eslintPath&lt;/code&gt; (default: &quot;eslint&quot;)</source>
          <target state="translated">&lt;code&gt;eslintPath&lt;/code&gt; (predeterminado: &quot;eslint&quot;)</target>
        </trans-unit>
        <trans-unit id="b101a35d85583654d32824a315832c7ccaf45543" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eval-*&lt;/code&gt; addition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaf268832245a31155d3ac22bdd65e8bfb68cae3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eval-cheap-module-source-map&lt;/code&gt; - Similar to &lt;code&gt;eval-cheap-source-map&lt;/code&gt;, however, in this case Source Maps from Loaders are processed for better results. However Loader Source Maps are simplified to a single mapping per line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b7335784fbab7eb6e574d25e81c1daac793030" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eval-cheap-source-map&lt;/code&gt; - Similar to &lt;code&gt;eval-source-map&lt;/code&gt;, each module is executed with &lt;code&gt;eval()&lt;/code&gt;. It is &quot;cheap&quot; because it doesn't have column mappings, it only maps line numbers. It ignores SourceMaps from Loaders and only display transpiled code similar to the &lt;code&gt;eval&lt;/code&gt; devtool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="511efc42e2a5eb6dd894434e44675ee7efe03e5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eval-source-map&lt;/code&gt; - Each module is executed with &lt;code&gt;eval()&lt;/code&gt; and a SourceMap is added as a DataUrl to the &lt;code&gt;eval()&lt;/code&gt;. Initially it is slow, but it provides fast rebuild speed and yields real files. Line numbers are correctly mapped since it gets mapped to the original code. It yields the best quality SourceMaps for development.</source>
          <target state="translated">&lt;code&gt;eval-source-map&lt;/code&gt; : cada m&amp;oacute;dulo se ejecuta con &lt;code&gt;eval()&lt;/code&gt; y se agrega un SourceMap como DataUrl a &lt;code&gt;eval()&lt;/code&gt; . Inicialmente es lento, pero proporciona una velocidad de reconstrucci&amp;oacute;n r&amp;aacute;pida y produce archivos reales. Los n&amp;uacute;meros de l&amp;iacute;nea se asignan correctamente ya que se asignan al c&amp;oacute;digo original. Produce SourceMaps de la mejor calidad para el desarrollo.</target>
        </trans-unit>
        <trans-unit id="7ac72b362d1d53ce7f0e530afe43a018a4565763" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eval&lt;/code&gt; - Each module is executed with &lt;code&gt;eval()&lt;/code&gt; and &lt;code&gt;//@ sourceURL&lt;/code&gt;. This is pretty fast. The main disadvantage is that it doesn't display line numbers correctly since it gets mapped to transpiled code instead of the original code (No Source Maps from Loaders).</source>
          <target state="translated">&lt;code&gt;eval&lt;/code&gt; : cada m&amp;oacute;dulo se ejecuta con &lt;code&gt;eval()&lt;/code&gt; y &lt;code&gt;//@ sourceURL&lt;/code&gt; . Esto es bastante r&amp;aacute;pido. La principal desventaja es que no muestra los n&amp;uacute;meros de l&amp;iacute;nea correctamente, ya que se asigna al c&amp;oacute;digo transpilado en lugar del c&amp;oacute;digo original (Sin mapas de origen de los cargadores).</target>
        </trans-unit>
        <trans-unit id="8563f986ffd244f5b3af2de8897dbda869fbb88a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eval&lt;/code&gt; wraps modules in &lt;code&gt;eval(&quot;string&quot;)&lt;/code&gt; and the minimizer does not handle strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98f8a878d235fbac388dcee8b74796d274bb8706" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exclude&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;[string, RegExp]&lt;/code&gt;): Exclude modules that match the given value from source map generation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e077dbe5854d522f43ce196e3a4c7f6173366207" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exclude&lt;/code&gt; (&lt;code&gt;string|RegExp|array&lt;/code&gt;): Exclude modules that match the given value from source map generation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65785f61c837e302011bd0d153d8c6de1e14cb74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exclude&lt;/code&gt; (&lt;code&gt;string|regex|array&lt;/code&gt;): Exclude modules that match the given value from source map generation.</source>
          <target state="translated">&lt;code&gt;exclude&lt;/code&gt; ( &lt;code&gt;string|regex|array&lt;/code&gt; ): excluye los m&amp;oacute;dulos que coinciden con el valor dado de la generaci&amp;oacute;n del mapa fuente.</target>
        </trans-unit>
        <trans-unit id="f45e44d5770f7c803ac42c01ca4f24d0233e5583" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exclude&lt;/code&gt;: Files to &lt;code&gt;exclude&lt;/code&gt;. Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;exclude&lt;/code&gt; : archivos para &lt;code&gt;exclude&lt;/code&gt; . Predeterminado: &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cd0976f87faa82621ed3396126709bc384e353b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;experiments&lt;/code&gt; option was introduced in webpack 5 to empower users with the ability to activate and try out experimental features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03335aebeb2ae5658a2d5abbcf91ca6805039540" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;export default&lt;/code&gt; (when &lt;code&gt;exportAsEs6Default&lt;/code&gt; param is set, es6 format). &quot;Hello world&quot; becomes &lt;code&gt;export default &quot;Hello world&quot;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;export default&lt;/code&gt; (cuando &lt;code&gt;exportAsEs6Default&lt;/code&gt; se establece par&amp;aacute;metro, el formato ES6). &quot;Hola mundo&quot; se convierte en la &lt;code&gt;export default &quot;Hello world&quot;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4a6cdfa6b16155bbcfac36e871749b2ba1847c75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;export&lt;/code&gt; label</source>
          <target state="translated">&lt;code&gt;export&lt;/code&gt; etiqueta de exportaci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="f2ef7f1f768e00ec18524a71ba926e0c174e0abc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exports.default&lt;/code&gt; (when &lt;code&gt;exportAsDefault&lt;/code&gt; param is set, es6to5 format). &quot;Hello world&quot; becomes &lt;code&gt;exports.default = &quot;Hello world&quot;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;exports.default&lt;/code&gt; (cuando &lt;code&gt;exportAsDefault&lt;/code&gt; se establece par&amp;aacute;metro, el formato es6to5). &quot;Hola mundo&quot; se convierte en &lt;code&gt;exports.default = &quot;Hello world&quot;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4965ef1aab94b4cf2bb01f6c2a5958de9a40219b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exports&lt;/code&gt; (CommonJS)</source>
          <target state="translated">&lt;code&gt;exports&lt;/code&gt; (CommonJS)</target>
        </trans-unit>
        <trans-unit id="d673d99e86319c5626f4264282cb9cd5b42125b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exports&lt;/code&gt; field is preferred over other package entry fields like &lt;code&gt;main&lt;/code&gt;, &lt;code&gt;module&lt;/code&gt;, &lt;code&gt;browser&lt;/code&gt; or custom ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25c82bed9b45fd95a2fa96c1fca028f7225779ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exports&lt;/code&gt; should be written to use fallbacks for unknown future cases. &lt;code&gt;default&lt;/code&gt; condition can be used for that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05a26142cab2a13647b0d3e2c3429b0346672b3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extensions&lt;/code&gt;: Extensions used to resolve modules in the dll bundle (only used when using 'scope').</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef5b46f54a937f0a264c3005ca47c5b92260b684" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extname&lt;/code&gt;, &lt;code&gt;dirname&lt;/code&gt;, &lt;code&gt;basename&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;extname&lt;/code&gt; , &lt;code&gt;dirname&lt;/code&gt; , &lt;code&gt;basename&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="078497fa1a8b319fd5ed801382f0b5eac2e06136" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;factory&lt;/code&gt;: time to collect module metadata (e.g. resolving the filename)</source>
          <target state="translated">&lt;code&gt;factory&lt;/code&gt; : hora de recopilar los metadatos del m&amp;oacute;dulo (por ejemplo, resolver el nombre del archivo)</target>
        </trans-unit>
        <trans-unit id="3202c3e83c13dc18a144ad59d6e011154c5e759b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;failOnError&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;failOnError&lt;/code&gt; (predeterminado: &lt;code&gt;false&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="a2856e0dea3315219568baa5e7d4d0c10153f2ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;failOnWarning&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;failOnWarning&lt;/code&gt; (predeterminado: &lt;code&gt;false&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="287290321ca1cda582ec637c857b0f800dfff55c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fallbackModuleFilenameTemplate&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;): See link above.</source>
          <target state="translated">&lt;code&gt;fallbackModuleFilenameTemplate&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; ): consulte el enlace anterior.</target>
        </trans-unit>
        <trans-unit id="d5f7de33727ad14b2513c45d9e8195b27eac7f2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; - disable css modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af07a8ea95a418aa9dc1bd47834501d4ee724d1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; - disables CSS modules or interoperable CSS format based on filename</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e519e61254043ad24c0e84519cfce2a1f6511511" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; disables the link &lt;code&gt;type&lt;/code&gt; attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e406c828dda2b03b74d6f4206d3a96e8ba175847" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; if &lt;a href=&quot;other-options#cache&quot;&gt;&lt;code&gt;cache&lt;/code&gt;&lt;/a&gt; is disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6a3fd6c46ec57a3fd34873d4122cae9999dc4dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; or &lt;code&gt;'off'&lt;/code&gt; - suppresses errors and warnings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d917d533dd9996bddf9d4164e0749d0acd86f992" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; or &lt;code&gt;'remove'&lt;/code&gt; - do not consume the source map and remove &lt;code&gt;SourceMappingURL&lt;/code&gt; comment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6279b1de745082a9cd81d1fa4aef09a23d846e27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; when the export is known to be not provided</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98e114a35e45f09b22c3ac008856c7c735219cb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; when the export is known to be unused</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e0188c2eb063fe2d3e1725a178f9fdfec445158" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt;: Not defined</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; : no definido</target>
        </trans-unit>
        <trans-unit id="f6e696ae93d78d596e70a2d7f5ec65dcc9b120c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt;: Provide nothing. Code that expects this object may crash with a &lt;code&gt;ReferenceError&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfe37e3505055eaa12461de3dd9ceb0b77867a76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt;: Provide nothing. Code that expects this object may crash with a &lt;code&gt;ReferenceError&lt;/code&gt;. Code that attempts to import the module using &lt;code&gt;require('modulename')&lt;/code&gt; may trigger a &lt;code&gt;Cannot find module &quot;modulename&quot;&lt;/code&gt; error.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; : no proporcione nada. El c&amp;oacute;digo que espera este objeto puede fallar con un &lt;code&gt;ReferenceError&lt;/code&gt; . El c&amp;oacute;digo que intenta importar el m&amp;oacute;dulo usando &lt;code&gt;require('modulename')&lt;/code&gt; puede provocar un error &lt;code&gt;Cannot find module &quot;modulename&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="acd9e13b2ef78d923d13ec662e416fa89e506fe4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt;: The regular Node.js &lt;code&gt;__dirname&lt;/code&gt; behavior. The dirname of the &lt;strong&gt;output&lt;/strong&gt; file when run in a Node.js environment.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; : el comportamiento normal de Node.js &lt;code&gt;__dirname&lt;/code&gt; . El nombre de directorio del archivo de &lt;strong&gt;salida&lt;/strong&gt; cuando se ejecuta en un entorno Node.js.</target>
        </trans-unit>
        <trans-unit id="0a6722d7e40b999ac1c7682e6e82b5a4836e3022" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt;: The regular Node.js &lt;code&gt;__filename&lt;/code&gt; behavior. The filename of the &lt;strong&gt;output&lt;/strong&gt; file when run in a Node.js environment.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; : el comportamiento normal de Node.js &lt;code&gt;__filename&lt;/code&gt; . El nombre de archivo del archivo de &lt;strong&gt;salida&lt;/strong&gt; cuando se ejecuta en un entorno Node.js.</target>
        </trans-unit>
        <trans-unit id="027e7ea9a4144a31e8710125efc0b87a3b777544" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt;: Webpack won't touch your &lt;code&gt;__dirname&lt;/code&gt; code, which means you have the regular Node.js &lt;code&gt;__dirname&lt;/code&gt; behavior. The dirname of the &lt;strong&gt;output&lt;/strong&gt; file when run in a Node.js environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc02df54623e7ba075853688760544b30182c387" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt;: Webpack won't touch your &lt;code&gt;__filename&lt;/code&gt; code, which means you have the regular Node.js &lt;code&gt;__filename&lt;/code&gt; behavior. The filename of the &lt;strong&gt;output&lt;/strong&gt; file when run in a Node.js environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa5763118488e063275efcbc4f3ab7ef54c990a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt;&lt;code&gt;string: 'array-push' | 'commonjs' | &amp;lt;any string&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9740cfed85a9491a5940219bdba434675ea680f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt;&lt;code&gt;string: 'jsonp' | 'import-scripts' | 'require' | 'async-node' | &amp;lt;any string&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="719a8d7dea0c9052acd0750ad362630eec93391b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file&lt;/code&gt; - absolute file path (require)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58e88eae44554c42b84ed9ff50fbc11b10cc2059" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file&lt;/code&gt; - file name (require)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44373302e3602d6a9d5587b57555c415d2d598f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file&lt;/code&gt; - file name of the asset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a238a55ef505694c17670a93e2cb04c3895048ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file&lt;/code&gt; : A RegExp to select the origin file for the warning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="136e8a0e7755a4c6a4d9267e7464a375c6c4343e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fileContext&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;): Makes the &lt;code&gt;[file]&lt;/code&gt; argument relative to this directory.</source>
          <target state="translated">&lt;code&gt;fileContext&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; ): hace que el argumento &lt;code&gt;[file]&lt;/code&gt; relativo a este directorio.</target>
        </trans-unit>
        <trans-unit id="aac6403eabf807f08426f030db20b728ddf6fccc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filename&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;): Defines the output filename of the SourceMap (will be inlined if no value is provided).</source>
          <target state="translated">&lt;code&gt;filename&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; ): define el nombre del archivo de salida del SourceMap (se incluir&amp;aacute; en l&amp;iacute;nea si no se proporciona ning&amp;uacute;n valor).</target>
        </trans-unit>
        <trans-unit id="e69ba674e7ba8d2616b2c7a23fae634e7416cbff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filename&lt;/code&gt; - used to get asset path with hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f65d8685d8fc2fb3a63715cc8cf164ec20e1b750" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filename&lt;/code&gt; has no effect when used without &lt;a href=&quot;#devserverlazy-&quot;&gt;lazy mode&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb456c08cb3c9721bb05dc0677fdbb7a838fd16b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filename&lt;/code&gt; has no effect when used without &lt;strong&gt;lazy mode&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;filename&lt;/code&gt; no tiene ning&amp;uacute;n efecto cuando se usa sin el &lt;strong&gt;modo diferido&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="7cc82ca3a029445d10693eb8de6a73979c11d4ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filename&lt;/code&gt; parameter could be &lt;code&gt;Function&lt;/code&gt;. It passes &lt;code&gt;getPath&lt;/code&gt; to process the format like &lt;code&gt;css/[name].css&lt;/code&gt; and returns the real file name, &lt;code&gt;css/js/a.css&lt;/code&gt;. You can replace &lt;code&gt;css/js&lt;/code&gt; with &lt;code&gt;css&lt;/code&gt; then you will get the new path &lt;code&gt;css/a.css&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;filename&lt;/code&gt; par&amp;aacute;metro de nombre de archivo podr&amp;iacute;a ser &lt;code&gt;Function&lt;/code&gt; . Pasa &lt;code&gt;getPath&lt;/code&gt; para procesar el formato como &lt;code&gt;css/[name].css&lt;/code&gt; y devuelve el nombre del archivo real, &lt;code&gt;css/js/a.css&lt;/code&gt; . Puede reemplazar &lt;code&gt;css/js&lt;/code&gt; con &lt;code&gt;css&lt;/code&gt; y luego obtendr&amp;aacute; la nueva ruta &lt;code&gt;css/a.css&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cf8e12a3b32e83814a012adaf250b19451cd310c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filename&lt;/code&gt;: A &lt;code&gt;function(asset)&lt;/code&gt; which receives the asset name (after processing &lt;code&gt;asset&lt;/code&gt; option) and returns the new asset name. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;filename&lt;/code&gt; : una &lt;code&gt;function(asset)&lt;/code&gt; que recibe el nombre del activo (despu&amp;eacute;s de procesar la opci&amp;oacute;n del &lt;code&gt;asset&lt;/code&gt; ) y devuelve el nuevo nombre del activo. El valor predeterminado es &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ad2dac3efafd94e5e389a6287e1585e14e79b563" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filename&lt;/code&gt;: Specifies the name of each output file on disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2bc4a194fc83f7a6749646ca671a9f8f7695868" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fix&lt;/code&gt; (default: false)</source>
          <target state="translated">&lt;code&gt;fix&lt;/code&gt; (predeterminado: falso)</target>
        </trans-unit>
        <trans-unit id="39398c0f96bd66a09d4440a40a0ab55b2711ac94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;format&lt;/code&gt; (boolean = false): If &lt;code&gt;true&lt;/code&gt;, manifest json file (output) will be formatted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd244a76da17ca39f80b63870f7c71ea364538c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;formatter&lt;/code&gt; (default: eslint stylish formatter)</source>
          <target state="translated">&lt;code&gt;formatter&lt;/code&gt; (predeterminado: formateador elegante eslint)</target>
        </trans-unit>
        <trans-unit id="60c1474a7c9fb64368530451fdc8868ab00c1af1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fullBuildTimeout&lt;/code&gt; (number): The delay between the two steps when &lt;code&gt;multiStep&lt;/code&gt; is enabled.</source>
          <target state="translated">&lt;code&gt;fullBuildTimeout&lt;/code&gt; (n&amp;uacute;mero): la demora entre los dos pasos cuando se habilita la funci&amp;oacute;n &lt;code&gt;multiStep&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="44a2db2051e8dd545000f0939171b15e408e4ce9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;function (module, chunk) =&amp;gt; boolean&lt;/code&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6794b036f11e360ac7db17416fbac3804b8158ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;function ({ context, request, contextInfo, getResolve }) =&amp;gt; promise&lt;/code&gt;5.15.0+</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47d34e30a87e3be5eb5161040ecd2a2bb23b703a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;function&lt;/code&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;function&lt;/code&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="48a5c6ca4d8d1edebe70695e36a5c59f7f3f95ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;function&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;function&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e4589f0ac562c55f575e62b73c508056a77a41ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;function&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;function&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5ffbbc8c2e826a7b9d54809aa0861d21556d2630" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;generated code&lt;/code&gt; - You see each module separated from each other, annotated with module names. You see the code generated by webpack. Example: Instead of &lt;code&gt;import {test} from &quot;module&quot;; test();&lt;/code&gt; you see something like &lt;code&gt;var module__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(42); module__WEBPACK_IMPORTED_MODULE_1__.a();&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;generated code&lt;/code&gt; : ver&amp;aacute; cada m&amp;oacute;dulo separado entre s&amp;iacute;, anotado con nombres de m&amp;oacute;dulo. Ver&amp;aacute; el c&amp;oacute;digo generado por webpack. Ejemplo: en lugar de &lt;code&gt;import {test} from &quot;module&quot;; test();&lt;/code&gt; ve algo como &lt;code&gt;var module__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(42); module__WEBPACK_IMPORTED_MODULE_1__.a();&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="51cb83aadcd353b845782a745722c1fd355a80c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;global&lt;/code&gt; (NodeJS)</source>
          <target state="translated">&lt;code&gt;global&lt;/code&gt; (NodeJS)</target>
        </trans-unit>
        <trans-unit id="370bd1166b633ebd383ad3e4647f5a4ff671cdcc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;globalName&lt;/code&gt; - the name in the global object, for example &lt;code&gt;window.$&lt;/code&gt; for a browser environment (&lt;strong&gt;required&lt;/strong&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="808bb31ceb830e07fcb84f03194ea86877663d5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;groupOptions&lt;/code&gt; - options for the chunk group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d56636ca2677f61e05f021b8f5edb9af254e29b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;handlebars-loader&lt;/code&gt; Compiles Handlebars to HTML</source>
          <target state="translated">&lt;code&gt;handlebars-loader&lt;/code&gt; compila los manillares en HTML</target>
        </trans-unit>
        <trans-unit id="29002dec485104653902d4fd5d65ab54393d2d1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;handler&lt;/code&gt; (See &lt;a href=&quot;#providing-function&quot;&gt;Providing function&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4a3c51833b9f5e1a1de34ffa246c2d70c40f06c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hash&lt;/code&gt;: Compare content hashes to determine invalidation (more expensive than &lt;code&gt;timestamp&lt;/code&gt;, but changes less often).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="044656e83cd29f097901ea3aa252e8334e1633d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hashDigest&lt;/code&gt;: The encoding to use when generating the hash, defaults to &lt;code&gt;'base64'&lt;/code&gt;. All encodings from Node.JS' &lt;a href=&quot;https://nodejs.org/api/crypto.html#crypto_hash_digest_encoding&quot;&gt;&lt;code&gt;hash.digest&lt;/code&gt;&lt;/a&gt; are supported.</source>
          <target state="translated">&lt;code&gt;hashDigest&lt;/code&gt; : la codificaci&amp;oacute;n que se utilizar&amp;aacute; al generar el hash, por defecto es &lt;code&gt;'base64'&lt;/code&gt; . Todas las codificaciones de Node.JS' &lt;a href=&quot;https://nodejs.org/api/crypto.html#crypto_hash_digest_encoding&quot;&gt; &lt;code&gt;hash.digest&lt;/code&gt; &lt;/a&gt; son compatibles.</target>
        </trans-unit>
        <trans-unit id="7496498447b95ee522b28447077c5f42c746a09b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hashDigestLength&lt;/code&gt;: The prefix length of the hash digest to use, defaults to &lt;code&gt;4&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;hashDigestLength&lt;/code&gt; : la longitud del prefijo del resumen de hash que se utilizar&amp;aacute;, por defecto es &lt;code&gt;4&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77d4962f92d139609ded1449e716b78c2246c529" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hashDigestLength&lt;/code&gt;: The prefix length of the hash digest to use, defaults to &lt;code&gt;4&lt;/code&gt;. Note that some generated ids might be longer than specified here, to avoid module id collisions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76793878c0de9dfbb0498f04d846e231eb56b714" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hashFunction&lt;/code&gt;: The hashing algorithm to use, defaults to &lt;code&gt;'md4'&lt;/code&gt;. All functions from Node.JS' &lt;a href=&quot;https://nodejs.org/api/crypto.html#crypto_crypto_createhash_algorithm_options&quot;&gt;&lt;code&gt;crypto.createHash&lt;/code&gt;&lt;/a&gt; are supported.</source>
          <target state="translated">&lt;code&gt;hashFunction&lt;/code&gt; : el algoritmo hash que se debe usar, por defecto es &lt;code&gt;'md4'&lt;/code&gt; . Todas las funciones de crypto.createHash de &lt;a href=&quot;https://nodejs.org/api/crypto.html#crypto_crypto_createhash_algorithm_options&quot;&gt; &lt;code&gt;crypto.createHash&lt;/code&gt; &lt;/a&gt; son compatibles.</target>
        </trans-unit>
        <trans-unit id="ec2c403630a153989c53652db244140e5ec9b62d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hidden-*&lt;/code&gt; addition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcfb92f020d3ff4f5a6de94d5e76f8ba044511af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hidden-source-map&lt;/code&gt; - Same as &lt;code&gt;source-map&lt;/code&gt;, but doesn't add a reference comment to the bundle. Useful if you only want SourceMaps to map error stack traces from error reports, but don't want to expose your SourceMap for the browser development tools.</source>
          <target state="translated">&lt;code&gt;hidden-source-map&lt;/code&gt; : Igual que &lt;code&gt;source-map&lt;/code&gt; , pero no agrega un comentario de referencia al paquete. &amp;Uacute;til si solo desea que SourceMaps mapee los rastros de pila de errores de los informes de error, pero no desea exponer su SourceMap para las herramientas de desarrollo del navegador.</target>
        </trans-unit>
        <trans-unit id="5f8b73e0bbb5703e8728beba1a0ed5707b0241c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt; is the module id of the context module. This may be useful for &lt;code&gt;module.hot.accept&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; es el id del m&amp;oacute;dulo del m&amp;oacute;dulo de contexto. Esto puede resultar &amp;uacute;til para &lt;code&gt;module.hot.accept&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0a10c43c69b4ac64d01a8b204053e9980eb68ed7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ignoreDeclined&lt;/code&gt; (boolean): Ignore changes made to declined modules.</source>
          <target state="translated">&lt;code&gt;ignoreDeclined&lt;/code&gt; (booleano): ignora los cambios realizados en los m&amp;oacute;dulos rechazados.</target>
        </trans-unit>
        <trans-unit id="281aad9900b6fc896fa94bf7540201b8c5394658" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ignoreErrored&lt;/code&gt; (boolean): Ignore errors throw in accept handlers, error handlers and while reevaluating module.</source>
          <target state="translated">&lt;code&gt;ignoreErrored&lt;/code&gt; (booleano): ignora los errores lanzados en aceptar controladores, controladores de errores y al reevaluar el m&amp;oacute;dulo.</target>
        </trans-unit>
        <trans-unit id="c927b59727016d069056a940a1c6a5ebb86d13ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ignoreErrored&lt;/code&gt; (boolean): Ignore errors thrown in accept handlers, error handlers and while reevaluating module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf25a7294ebf7e5968c3ca736572be0f6206802e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ignoreUnaccepted&lt;/code&gt; (boolean): Ignore changes made to unaccepted modules.</source>
          <target state="translated">&lt;code&gt;ignoreUnaccepted&lt;/code&gt; (booleano): ignora los cambios realizados en los m&amp;oacute;dulos no aceptados.</target>
        </trans-unit>
        <trans-unit id="57cfb4aafaafad275ec81e42f625e0ba19f2b7f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ignoreWarnings&lt;/code&gt; can be an &lt;code&gt;array&lt;/code&gt; of any of the above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="629929c7477ac60b887d1391124e2880dc21f16a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import()&lt;/code&gt; calls use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;promises&lt;/a&gt; internally. If you use &lt;code&gt;import()&lt;/code&gt; with older browsers (e.g., IE 11), remember to shim &lt;code&gt;Promise&lt;/code&gt; using a polyfill such as &lt;a href=&quot;https://github.com/stefanpenner/es6-promise&quot;&gt;es6-promise&lt;/a&gt; or &lt;a href=&quot;https://github.com/taylorhakes/promise-polyfill&quot;&gt;promise-polyfill&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cff04bb24eeb14c4d0754d5aec2d166a71b9ded" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import()&lt;/code&gt; calls use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;promises&lt;/a&gt; internally. If you use &lt;code&gt;import()&lt;/code&gt; with older browsers, remember to shim &lt;code&gt;Promise&lt;/code&gt; using a polyfill such as &lt;a href=&quot;https://github.com/stefanpenner/es6-promise&quot;&gt;es6-promise&lt;/a&gt; or &lt;a href=&quot;https://github.com/taylorhakes/promise-polyfill&quot;&gt;promise-polyfill&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;import()&lt;/code&gt; llamadas a import () usan &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;promesas&lt;/a&gt; internamente. Si usa &lt;code&gt;import()&lt;/code&gt; con navegadores m&amp;aacute;s antiguos, recuerde ajustar &lt;code&gt;Promise&lt;/code&gt; usando un polyfill como &lt;a href=&quot;https://github.com/stefanpenner/es6-promise&quot;&gt;es6-promise&lt;/a&gt; o &lt;a href=&quot;https://github.com/taylorhakes/promise-polyfill&quot;&gt;promise-polyfill&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1e19124cb71c5d8716300184c34b45038b521c21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import&lt;/code&gt;: Module(s) that are loaded upon startup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c449ada767de015a9f5303f4f130a02f5fa0db3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;imports&lt;/code&gt;5.20.0+: Enable lazy compilation for dynamic imports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fecc3b311c15a00f98d2b1422ff93a8179ac7e9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;include&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;[string, RegExp]&lt;/code&gt;): Include source maps for module paths that match the given value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cf4e130ef6ed62e8569d385914a5dcd42ea4173" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;include&lt;/code&gt; (&lt;code&gt;string|RegExp|array&lt;/code&gt;): Include source maps for module paths that match the given value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0df80ca9342b2384f06ccae8dd35217c5d0cffcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;include&lt;/code&gt; (&lt;code&gt;string|regex|array&lt;/code&gt;): Include source maps for module paths that match the given value.</source>
          <target state="translated">&lt;code&gt;include&lt;/code&gt; ( &lt;code&gt;string|regex|array&lt;/code&gt; ): incluye mapas de origen para las rutas de los m&amp;oacute;dulos que coinciden con el valor dado.</target>
        </trans-unit>
        <trans-unit id="2d94deac92ff361b23f9f1614d5b12accb134373" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;include&lt;/code&gt;: Files to &lt;code&gt;include&lt;/code&gt;. Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;include&lt;/code&gt; : Archivos para &lt;code&gt;include&lt;/code&gt; . Predeterminado: &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3c93de1eae84efbf8b0ef7e59b896b9591de275a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index.js&lt;/code&gt; may resolve to another file if defined in the &lt;code&gt;package.json&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;index.js&lt;/code&gt; puede resolverse en otro archivo si se define en &lt;code&gt;package.json&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="450642438e83fc6449ac37feee5ad44e7136602b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index.js&lt;/code&gt;: No direct export is used, but flagged with sideEffects -&amp;gt; include it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47ac0b9af8f0cbeca1188329bbe0921621b24f24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index.js&lt;/code&gt;: pretty much empty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="405355c95b69f45ad38c2d22597dac58c75af7f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;info&lt;/code&gt; - asset info</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f82e97508610a9343efd7ed31db6ab718b79898" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;initial&lt;/code&gt; is the main chunk for the entry point. This chunk contains all the modules and its dependencies that you specify for an entry point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40b7cf0d52e54ff5ebd71fa0205244c48f4a4b16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inline-*&lt;/code&gt; addition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="626340da5926d6b6e2a55b1a05bc430130dc7e0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inline-cheap-module-source-map&lt;/code&gt; - Similar to &lt;code&gt;cheap-module-source-map&lt;/code&gt; but SourceMap is added as a DataUrl to the bundle.</source>
          <target state="translated">&lt;code&gt;inline-cheap-module-source-map&lt;/code&gt; : similar a &lt;code&gt;cheap-module-source-map&lt;/code&gt; pero SourceMap se agrega como DataUrl al paquete.</target>
        </trans-unit>
        <trans-unit id="9e3fe18e68252f90fea421d18a022c4e02dbb642" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inline-cheap-source-map&lt;/code&gt; - Similar to &lt;code&gt;cheap-source-map&lt;/code&gt; but SourceMap is added as a DataUrl to the bundle.</source>
          <target state="translated">&lt;code&gt;inline-cheap-source-map&lt;/code&gt; : similar a &lt;code&gt;cheap-source-map&lt;/code&gt; , pero SourceMap se agrega como DataUrl al paquete.</target>
        </trans-unit>
        <trans-unit id="9fa47ff8058795a4f1b92cd26a5f36341137b8e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inline-source-map&lt;/code&gt; - A SourceMap is added as a DataUrl to the bundle.</source>
          <target state="translated">&lt;code&gt;inline-source-map&lt;/code&gt; : se agrega un SourceMap como DataUrl al paquete.</target>
        </trans-unit>
        <trans-unit id="33d1e71a03990d96aca67f7db8d61929aec48ecb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;inputChunkGroups&lt;/code&gt; - chunk groups that are processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba38476fcec1e0d46507e470ba3864d75bd20aec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;issuer&lt;/code&gt;: The path to the module that is importing the module being loaded</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c48f79f0344e8e9ce2bf4c644972e28073207991" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;jade-loader&lt;/code&gt; Loads Jade templates and returns a function</source>
          <target state="translated">&lt;code&gt;jade-loader&lt;/code&gt; Carga plantillas de Jade y devuelve una funci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="4880d9db3a39784e480778ea7ab3f172c9a641be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;jscs-loader&lt;/code&gt; PreLoader for code style checking using &lt;a href=&quot;http://jscs.info/&quot;&gt;JSCS&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;jscs-loader&lt;/code&gt; para verificar el estilo del c&amp;oacute;digo usando &lt;a href=&quot;http://jscs.info/&quot;&gt;JSCS&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e6861b9ba05a4e498561c80af8f072cc57f690ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;keys&lt;/code&gt; is a function that returns an array of all possible requests that the context module can handle.</source>
          <target state="translated">&lt;code&gt;keys&lt;/code&gt; es una funci&amp;oacute;n que devuelve una matriz de todas las solicitudes posibles que el m&amp;oacute;dulo de contexto puede manejar.</target>
        </trans-unit>
        <trans-unit id="1f7a217f331e5581f37b76b73345a98d9bcbbb35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;layers&lt;/code&gt;: Enable module and chunk layers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17df494c22c5daf656cf31c874b858c2bbb6c5b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lazyCompilation&lt;/code&gt;: Compile entrypoints and dynamic &lt;code&gt;import&lt;/code&gt;s only when they are in use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d9e53e6ffbdef22ac4a32e87d94e15fc52e122e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;library&lt;/code&gt;: Options for library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fcaa4825d5563a32a8a73627e94fce9f34af922" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryExport: &quot;MyModule&quot;&lt;/code&gt; - The &lt;strong&gt;specified module&lt;/strong&gt; will be assigned to the library target:</source>
          <target state="translated">&lt;code&gt;libraryExport: &quot;MyModule&quot;&lt;/code&gt; : el &lt;strong&gt;m&amp;oacute;dulo especificado&lt;/strong&gt; se asignar&amp;aacute; al destino de la biblioteca:</target>
        </trans-unit>
        <trans-unit id="3725eb884278e9eafbfb25ad47a46c69444644d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryExport: &quot;default&quot;&lt;/code&gt; - The &lt;strong&gt;default export of your entry point&lt;/strong&gt; will be assigned to the library target:</source>
          <target state="translated">&lt;code&gt;libraryExport: &quot;default&quot;&lt;/code&gt; - La &lt;strong&gt;exportaci&amp;oacute;n predeterminada de su punto de entrada&lt;/strong&gt; se asignar&amp;aacute; al destino de la biblioteca:</target>
        </trans-unit>
        <trans-unit id="914abbf54ca7c61a75ab6452cd6883bf72a769f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryExport: 'MyModule'&lt;/code&gt; - The &lt;strong&gt;specified module&lt;/strong&gt; will be assigned to the library target:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eea7ca5291871110f9302d7b636212a5644eb729" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryExport: 'default'&lt;/code&gt; - The &lt;strong&gt;default export of your entry point&lt;/strong&gt; will be assigned to the library target:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c7000080609b80f8fd7043ae8e138c7b229ae11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryExport: [&quot;MyModule&quot;, &quot;MySubModule&quot;]&lt;/code&gt; - The array is interpreted as a &lt;strong&gt;path to a module&lt;/strong&gt; to be assigned to the library target:</source>
          <target state="translated">&lt;code&gt;libraryExport: [&quot;MyModule&quot;, &quot;MySubModule&quot;]&lt;/code&gt; - La matriz se interpreta como una &lt;strong&gt;ruta a un m&amp;oacute;dulo&lt;/strong&gt; que se asignar&amp;aacute; al destino de la biblioteca:</target>
        </trans-unit>
        <trans-unit id="896e837bfedb8545d3ee6841fd70b12078763124" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryExport: ['MyModule', 'MySubModule']&lt;/code&gt; - The array is interpreted as a &lt;strong&gt;path to a module&lt;/strong&gt; to be assigned to the library target:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f6d093882cd1c19132922fa9a80f84d9814c7bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: &quot;amd&quot;&lt;/code&gt; - This will expose your library as an AMD module.</source>
          <target state="translated">&lt;code&gt;libraryTarget: &quot;amd&quot;&lt;/code&gt; - Esto expondr&amp;aacute; su biblioteca como un m&amp;oacute;dulo AMD.</target>
        </trans-unit>
        <trans-unit id="a4b55276a6f59d1bfa84faa8bd1b74e619693347" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: &quot;assign&quot;&lt;/code&gt; - This will generate an implied global which has the potential to reassign an existing value (use with caution).</source>
          <target state="translated">&lt;code&gt;libraryTarget: &quot;assign&quot;&lt;/code&gt; - Esto generar&amp;aacute; un global impl&amp;iacute;cito que tiene el potencial de reasignar un valor existente (usar con precauci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="34a6cb2a10f3d7ff0c5813edacbed0ed16174f6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: &quot;commonjs&quot;&lt;/code&gt; - The &lt;strong&gt;return value of your entry point&lt;/strong&gt; will be assigned to the &lt;code&gt;exports&lt;/code&gt; object using the &lt;code&gt;output.library&lt;/code&gt; value. As the name implies, this is used in CommonJS environments.</source>
          <target state="translated">&lt;code&gt;libraryTarget: &quot;commonjs&quot;&lt;/code&gt; - El &lt;strong&gt;valor de retorno de su punto de entrada&lt;/strong&gt; ser&amp;aacute; asignado a las &lt;code&gt;exports&lt;/code&gt; de objetos usando los &lt;code&gt;output.library&lt;/code&gt; valor. Como su nombre lo indica, esto se usa en entornos CommonJS.</target>
        </trans-unit>
        <trans-unit id="33e527b211005349896e5f5c704b9fc727117b24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: &quot;commonjs2&quot;&lt;/code&gt; - The &lt;strong&gt;return value of your entry point&lt;/strong&gt; will be assigned to the &lt;code&gt;module.exports&lt;/code&gt;. As the name implies, this is used in CommonJS environments:</source>
          <target state="translated">&lt;code&gt;libraryTarget: &quot;commonjs2&quot;&lt;/code&gt; El - &lt;strong&gt;valor de retorno de su punto de entrada&lt;/strong&gt; ser&amp;aacute; asignado a los &lt;code&gt;module.exports&lt;/code&gt; . Como su nombre lo indica, esto se usa en entornos CommonJS:</target>
        </trans-unit>
        <trans-unit id="f948e6650483e5eab795b90137513a66be185e89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: &quot;global&quot;&lt;/code&gt; - The &lt;strong&gt;return value of your entry point&lt;/strong&gt; will be assigned to the &lt;code&gt;global&lt;/code&gt; object using the &lt;code&gt;output.library&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;libraryTarget: &quot;global&quot;&lt;/code&gt; - El &lt;strong&gt;valor de retorno de su punto de entrada&lt;/strong&gt; ser&amp;aacute; asignado a la &lt;code&gt;global&lt;/code&gt; objeto mediante el &lt;code&gt;output.library&lt;/code&gt; valor.</target>
        </trans-unit>
        <trans-unit id="9461b215b3a312f36c6c8bfdfaca73e8615b15e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: &quot;jsonp&quot;&lt;/code&gt; - This will wrap the return value of your entry point into a jsonp wrapper.</source>
          <target state="translated">&lt;code&gt;libraryTarget: &quot;jsonp&quot;&lt;/code&gt; - Esto ajustar&amp;aacute; el valor de retorno de su punto de entrada en un contenedor jsonp.</target>
        </trans-unit>
        <trans-unit id="6fb4cf39aa528982ae706e18759707acf8602414" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: &quot;this&quot;&lt;/code&gt; - The &lt;strong&gt;return value of your entry point&lt;/strong&gt; will be assigned to this under the property named by &lt;code&gt;output.library&lt;/code&gt;. The meaning of &lt;code&gt;this&lt;/code&gt; is up to you:</source>
          <target state="translated">&lt;code&gt;libraryTarget: &quot;this&quot;&lt;/code&gt; - El &lt;strong&gt;valor de retorno de su punto de entrada&lt;/strong&gt; se asignar&amp;aacute; a esto bajo la propiedad nombrada por &lt;code&gt;output.library&lt;/code&gt; . El significado de &lt;code&gt;this&lt;/code&gt; depende de usted:</target>
        </trans-unit>
        <trans-unit id="040c7b4a41b5299703c19bf2e2cc38a49cedb075" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: &quot;umd&quot;&lt;/code&gt; - This exposes your library under all the module definitions, allowing it to work with CommonJS, AMD and as global variable. Take a look at the &lt;a href=&quot;https://github.com/umdjs/umd&quot;&gt;UMD Repository&lt;/a&gt; to learn more.</source>
          <target state="translated">&lt;code&gt;libraryTarget: &quot;umd&quot;&lt;/code&gt; - Esto expone su biblioteca bajo todas las definiciones de m&amp;oacute;dulo, lo que le permite trabajar con CommonJS, AMD y como variable global. Eche un vistazo al &lt;a href=&quot;https://github.com/umdjs/umd&quot;&gt;Repositorio UMD&lt;/a&gt; para obtener m&amp;aacute;s informaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="5e2c915eaf1c0837b6acfa18bfef231f0821eccf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: &quot;var&quot;&lt;/code&gt; - (default) When your library is loaded, the &lt;strong&gt;return value of your entry point&lt;/strong&gt; will be assigned to a variable:</source>
          <target state="translated">&lt;code&gt;libraryTarget: &quot;var&quot;&lt;/code&gt; - (predeterminado) Cuando se carga su biblioteca, el &lt;strong&gt;valor de retorno de su punto de entrada&lt;/strong&gt; se asignar&amp;aacute; a una variable:</target>
        </trans-unit>
        <trans-unit id="74450b7e9d49631b401e855cf3ce0b45c06afcaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: &quot;window&quot;&lt;/code&gt; - The &lt;strong&gt;return value of your entry point&lt;/strong&gt; will be assigned to the &lt;code&gt;window&lt;/code&gt; object using the &lt;code&gt;output.library&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;libraryTarget: &quot;window&quot;&lt;/code&gt; : el &lt;strong&gt;valor de retorno de su punto de entrada&lt;/strong&gt; se asignar&amp;aacute; al objeto de la &lt;code&gt;window&lt;/code&gt; utilizando el valor &lt;code&gt;output.library&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="83cacf7fd6785d805c2291051cd5e3b5e88c9e9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: 'amd'&lt;/code&gt; - This will expose your library as an AMD module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f49c84d619f511153a0aa864c08846a7d670616b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: 'amd-require'&lt;/code&gt; - This packages your output with an immediately-executed AMD &lt;code&gt;require(dependencies, factory)&lt;/code&gt; wrapper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0583ac9161d0a2bc58c2a4c9039f3930be85f4ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: 'assign'&lt;/code&gt; - This will generate an implied global which has the potential to reassign an existing value (use with caution).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b2830f0ce609069a28d766e090a96eed891289e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: 'assign-properties'&lt;/code&gt;5.16.0+</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3efb1285d4b511f7a3424e56a568dc1f3a173ff7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: 'commonjs'&lt;/code&gt; - The &lt;strong&gt;return value of your entry point&lt;/strong&gt; will be assigned to the &lt;code&gt;exports&lt;/code&gt; object using the &lt;code&gt;output.library&lt;/code&gt; value. As the name implies, this is used in CommonJS environments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06e61643448d1ee8ec4e005049c5ee2955731bf7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: 'commonjs2'&lt;/code&gt; - The &lt;strong&gt;return value of your entry point&lt;/strong&gt; will be assigned to the &lt;code&gt;module.exports&lt;/code&gt;. As the name implies, this is used in CommonJS environments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b220c95e46fbeec593a8a9642ae4b6f8c5fddcc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: 'global'&lt;/code&gt; - The &lt;strong&gt;return value of your entry point&lt;/strong&gt; will be assigned to the &lt;code&gt;global&lt;/code&gt; object using the &lt;code&gt;output.library&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eba8f3b5c11ea6561e7f86775e073bd007eda94d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: 'jsonp'&lt;/code&gt; - This will wrap the return value of your entry point into a jsonp wrapper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6b6d96220098c8fb9fb0ac2da600c283f87148e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: 'system'&lt;/code&gt; - This will expose your library as a &lt;a href=&quot;https://github.com/systemjs/systemjs/blob/master/docs/system-register.md&quot;&gt;&lt;code&gt;System.register&lt;/code&gt;&lt;/a&gt; module. This feature was first released in &lt;a href=&quot;https://github.com/webpack/webpack/releases/tag/v4.30.0&quot;&gt;webpack 4.30.0&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65f73d45627059088e23f915c7c488f4cd17f8b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: 'umd'&lt;/code&gt; - This exposes your library under all the module definitions, allowing it to work with CommonJS, AMD and as global variable. Take a look at the &lt;a href=&quot;https://github.com/umdjs/umd&quot;&gt;UMD Repository&lt;/a&gt; to learn more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dd0319804f8b4e1a0629ae3966b36c4be378d20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: 'var'&lt;/code&gt; - (default) When your library is loaded, the &lt;strong&gt;return value of your entry point&lt;/strong&gt; will be assigned to a variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed9bcdd2b552b7e81de431fa0cc572b8e74421df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;libraryTarget: 'window'&lt;/code&gt; - The &lt;strong&gt;return value of your entry point&lt;/strong&gt; will be assigned to the &lt;code&gt;window&lt;/code&gt; object using the &lt;code&gt;output.library&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3550e2435ad8de0bffe1c222c62a8f1ec115d32c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lineToLine&lt;/code&gt; (&lt;code&gt;object&lt;/code&gt;): Simplify and speed up source mapping by using line to line source mappings for matched modules.</source>
          <target state="translated">&lt;code&gt;lineToLine&lt;/code&gt; ( &lt;code&gt;object&lt;/code&gt; ): Simplifique y acelere el mapeo de fuentes utilizando mapeos de fuente de l&amp;iacute;nea a l&amp;iacute;nea para m&amp;oacute;dulos emparejados.</target>
        </trans-unit>
        <trans-unit id="3a964d34db5933f70cc747419c58c10bb496bba2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;loader&lt;/code&gt;: Resolves a webpack &lt;a href=&quot;https://webpack.js.org/loaders&quot;&gt;loader&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="338534818f2db9a3857a34aebf0d7fa840b0a0a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;loaderContext&lt;/code&gt;: &lt;a href=&quot;../api/loaders#the-loader-context&quot;&gt;The loader context&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1d8843d34aeb22dd3c102ac72580b8f52b3e254" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;loc&lt;/code&gt; - the location from which the chunk group is referenced (inside of the module).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60077aa09fcfa272d1d5d68a806ab2533f1bd69d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logger.clear()&lt;/code&gt;: to print a horizontal line. Displayed like &lt;code&gt;logger.log&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bb5c0728eb26bb33c81a6155d5d6fd59236040f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logger.debug(...)&lt;/code&gt;: for debugging information. These messages are displayed only when user had opted-in to see debug logging for specific modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5323dfcd04d31ecf8daef4e70aea207bf9cdb6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logger.error(...)&lt;/code&gt;: for error messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a53288b1e3479c3a1c7458dde322e1037815b5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logger.group(...)&lt;/code&gt;: to group messages. Displayed collapsed like &lt;code&gt;logger.log&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c81117a0857384b7cdc801456fef40374a8da12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logger.groupCollapsed(...)&lt;/code&gt;: to group messages together. Displayed collapsed like &lt;code&gt;logger.log&lt;/code&gt;. Displayed expanded when logging level is set to &lt;code&gt;'verbose'&lt;/code&gt; or &lt;code&gt;'debug'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c22c33a211857a6207c9d3c43f9b5da9f5272de5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logger.groupEnd()&lt;/code&gt;: to end a logging group</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10b39ba4de6665a7cb2ba5f55fdf51fcbb3f5680" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logger.info(...)&lt;/code&gt;: for &lt;strong&gt;important&lt;/strong&gt; information messages. These messages are displayed by default. Only use this for messages that the user really needs to see</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f2b8ea116a17a55a326f3b515e21ddf60c39c0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logger.log(...)&lt;/code&gt;: for &lt;strong&gt;unimportant&lt;/strong&gt; information messages. These messages are displayed only when user had opted-in to see them</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="044d9954130de09fa549a3d8abdb022d7495b8d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logger.profile(...)&lt;/code&gt;, &lt;code&gt;logger.profileEnd(...)&lt;/code&gt;: to capture a profile. Delegated to &lt;code&gt;console.profile&lt;/code&gt; when supported</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="187ceab1e235dab3656c059b457daae60910efb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logger.status&lt;/code&gt;: writes a temporary message, setting a new status, overrides the previous one</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e73281f39232c9a08f2fba613f221ac0cacbd84b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logger.trace()&lt;/code&gt;: to display a stack trace. Displayed like &lt;code&gt;logger.debug&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25a1f30b33ee746ea326d83702ea11de7f2b8335" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logger.warn(...)&lt;/code&gt;: for warnings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f355d1b296b107370c132b98cda13b25fd6bb94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logging.configureDefaultLogger(...)&lt;/code&gt;: to override the default logger.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74da2d696c6f1f778ddc132ce29434970f466fb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logging.getLogger('name')&lt;/code&gt;: to get individual logger by name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d507c14b6e2e7e7c2b08584226b27b1509de2fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logging.hooks.log&lt;/code&gt;: to apply Plugins to the runtime logger</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b86005c3de889b154b56f011d9534d1ae4b13960" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;manifest&lt;/code&gt; : an object containing &lt;code&gt;content&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; or a string to the absolute path of the JSON manifest to be loaded upon compilation</source>
          <target state="translated">&lt;code&gt;manifest&lt;/code&gt; : un objeto que contiene &lt;code&gt;content&lt;/code&gt; y &lt;code&gt;name&lt;/code&gt; o una cadena a la ruta absoluta del manifiesto JSON que se cargar&amp;aacute; en la compilaci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="760109b85516fc83b069719af68f47f1109ba04d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;markdown-loader&lt;/code&gt; Compiles Markdown to HTML</source>
          <target state="translated">&lt;code&gt;markdown-loader&lt;/code&gt; compila Markdown en HTML</target>
        </trans-unit>
        <trans-unit id="5c6828bca399febb4ca0edc276e1cf11f2a0c60a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;maxChunks&lt;/code&gt;: Limit the maximum number of chunks using a value greater than or equal to &lt;code&gt;1&lt;/code&gt;. Using &lt;code&gt;1&lt;/code&gt; will prevent any additional chunks from being added as the entry/main chunk is also included in the count.</source>
          <target state="translated">&lt;code&gt;maxChunks&lt;/code&gt; : limite el n&amp;uacute;mero m&amp;aacute;ximo de fragmentos utilizando un valor mayor o igual a &lt;code&gt;1&lt;/code&gt; . El uso de &lt;code&gt;1&lt;/code&gt; evitar&amp;aacute; que se agreguen fragmentos adicionales, ya que la entrada / fragmento principal tambi&amp;eacute;n se incluye en el recuento.</target>
        </trans-unit>
        <trans-unit id="1daa1def675f3e33e49f4743c1e881b9a6dc59c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;maxSize&lt;/code&gt; option is intended to be used with HTTP/2 and long term caching. It increases the request count for better caching. It could also be used to decrease the file size for faster rebuilding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="268c02866ea1de6064ea9a53b05df2b227444443" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;maxSize&lt;/code&gt; options is intended to be used with HTTP/2 and long term caching. It increase the request count for better caching. It could also be used to decrease the file size for faster rebuilding.</source>
          <target state="translated">&lt;code&gt;maxSize&lt;/code&gt; opciones maxSize est&amp;aacute;n dise&amp;ntilde;adas para usarse con HTTP / 2 y el almacenamiento en cach&amp;eacute; a largo plazo. Aumenta el recuento de solicitudes para un mejor almacenamiento en cach&amp;eacute;. Tambi&amp;eacute;n se puede utilizar para reducir el tama&amp;ntilde;o del archivo para una reconstrucci&amp;oacute;n m&amp;aacute;s r&amp;aacute;pida.</target>
        </trans-unit>
        <trans-unit id="dd77778d1045d638f8b88642d2021fdac3a88887" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;maxSize&lt;/code&gt; takes higher priority than &lt;code&gt;maxInitialRequest/maxAsyncRequests&lt;/code&gt;. Actual priority is &lt;code&gt;maxInitialRequest/maxAsyncRequests &amp;lt; maxSize &amp;lt; minSize&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;maxSize&lt;/code&gt; tiene mayor prioridad que &lt;code&gt;maxInitialRequest/maxAsyncRequests&lt;/code&gt; . La prioridad real es &lt;code&gt;maxInitialRequest/maxAsyncRequests &amp;lt; maxSize &amp;lt; minSize&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5c606aebea77a14368add58edb3a210cf2d403d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;message&lt;/code&gt; : A RegExp to select the warning message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58260d9c004ec6becc5e2093a85496581e8c89b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;message&lt;/code&gt;: a short description of the currently-executing hook</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="683becab2ad47e2dc167bdb83395c95dc70afc68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;minChunkSize&lt;/code&gt;: Set a minimum chunk size.</source>
          <target state="translated">&lt;code&gt;minChunkSize&lt;/code&gt; : establece un tama&amp;ntilde;o m&amp;iacute;nimo de fragmento.</target>
        </trans-unit>
        <trans-unit id="05f326f21c72edb80d38988b10c23067e1b02c40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;minRatio&lt;/code&gt;: Only assets that compress better that this ratio are processed. Defaults to &lt;code&gt;0.8&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;minRatio&lt;/code&gt; : Solo se procesan los activos que se comprimen mejor que esta relaci&amp;oacute;n. El valor predeterminado es &lt;code&gt;0.8&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3796a9a4730748a1384bff16b3f123c5b63d765c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mini-css-extract-plugin&lt;/code&gt; is more often used in &lt;code&gt;production&lt;/code&gt; mode to get separate css files. For &lt;code&gt;development&lt;/code&gt; mode (including &lt;code&gt;webpack-dev-server&lt;/code&gt;) you can use &lt;code&gt;style-loader&lt;/code&gt;, because it injects CSS into the DOM using multiple</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a342c4cf77088567a87c139a3ce668665bca7bed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;minifyOpts&lt;/code&gt; are passed on to babel-preset-minify. You can find a list of &lt;a href=&quot;https://github.com/babel/minify/tree/master/packages/babel-preset-minify#options&quot;&gt;all available options&lt;/a&gt; in the package directory.</source>
          <target state="translated">&lt;code&gt;minifyOpts&lt;/code&gt; se pasan a babel-preset-minify. Puede encontrar una lista de &lt;a href=&quot;https://github.com/babel/minify/tree/master/packages/babel-preset-minify#options&quot;&gt;todas las opciones disponibles&lt;/a&gt; en el directorio de paquetes.</target>
        </trans-unit>
        <trans-unit id="b03d141feb63226e5155cd8de1c757f88ec30000" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;minifyPreset&lt;/code&gt;: Pass in a custom &lt;code&gt;babel-minify&lt;/code&gt; preset instead. Default: &lt;code&gt;require(&quot;babel-preset-minify&quot;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;minifyPreset&lt;/code&gt; : pasa un ajuste preestablecido personalizado de &lt;code&gt;babel-minify&lt;/code&gt; en su lugar. Predeterminado: &lt;code&gt;require(&quot;babel-preset-minify&quot;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="23d0664125c0270bc9c66dd2819e33b96d46ff9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mock&lt;/code&gt;: equal &quot;/&quot;</source>
          <target state="translated">&lt;code&gt;mock&lt;/code&gt; : igual &quot;/&quot;</target>
        </trans-unit>
        <trans-unit id="76f8f45eb4c9ccc0680daccc15ef706a9903784e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mock&lt;/code&gt;: equal &quot;/index.js&quot;</source>
          <target state="translated">&lt;code&gt;mock&lt;/code&gt; : igual &quot;/index.js&quot;</target>
        </trans-unit>
        <trans-unit id="7593e5fbc4bd35ee0e1af84a7eba8790daf35097" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mock&lt;/code&gt;: equal to &lt;code&gt;'/'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29761c85ee86ecf643c7a353c0040abefc88793e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mock&lt;/code&gt;: equal to &lt;code&gt;'/index.js'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5706e358faebbb444611dbf915f28c50ab6ba5b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module = true&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;): Indicates whether loaders should generate source maps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10a290109c6bfeb429a864ed7175ebd7a9bf8a6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module.context&lt;/code&gt;: The directory that stores the file. For example: &lt;code&gt;'/my_project/node_modules/example-dependency'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;module.context&lt;/code&gt; : el directorio que almacena el archivo. Por ejemplo: &lt;code&gt;'/my_project/node_modules/example-dependency'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="05df477f71867de3437954a511a6127c5fe97305" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module.exports&lt;/code&gt; (CommonJS)</source>
          <target state="translated">&lt;code&gt;module.exports&lt;/code&gt; (CommonJS)</target>
        </trans-unit>
        <trans-unit id="80f97e59b9f102c1ad7a3a47b3328d89fa349fe0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module.exports&lt;/code&gt; (default, cjs format). &quot;Hello world&quot; becomes &lt;code&gt;module.exports = &quot;Hello world&quot;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;module.exports&lt;/code&gt; (predeterminado, formato cjs). &quot;Hola mundo&quot; se convierte en &lt;code&gt;module.exports = &quot;Hello world&quot;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="98385e987d5c6559cb6070c4996091442a012da2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module.hot&lt;/code&gt; (webpack-specific)</source>
          <target state="translated">&lt;code&gt;module.hot&lt;/code&gt; (espec&amp;iacute;fico de paquete web)</target>
        </trans-unit>
        <trans-unit id="4c901252a53fe35983be74ab91ca2e083024b221" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module.id&lt;/code&gt; (CommonJS)</source>
          <target state="translated">&lt;code&gt;module.id&lt;/code&gt; (CommonJS)</target>
        </trans-unit>
        <trans-unit id="31a2489977e266cf1aa556dba059a2bf917aeacb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module.loaded&lt;/code&gt; (NodeJS)</source>
          <target state="translated">&lt;code&gt;module.loaded&lt;/code&gt; (NodeJS)</target>
        </trans-unit>
        <trans-unit id="46ab5b3e1cb89e73c3f9ef1d46a2073997385ce9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module.resource&lt;/code&gt;: The name of the file being processed. For example: &lt;code&gt;'/my_project/node_modules/example-dependency/index.js'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;module.resource&lt;/code&gt; : el nombre del archivo que se est&amp;aacute; procesando. Por ejemplo: &lt;code&gt;'/my_project/node_modules/example-dependency/index.js'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2f5c6041683f7b79f0dcef7aff9a23158d84f43d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;): Indicates whether loaders should generate source maps (defaults to &lt;code&gt;true&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;module&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; o ): indica si los cargadores deben generar mapas de origen (el valor predeterminado es &lt;code&gt;true&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ade1d2f9a45906fd47ee048ffc3467f9a4304660" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt; - a module relationship to be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87e6d5c1966f30f4af4fc0529d198f7da5166211" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt; - a module that references the chunk group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac14969eb5de0138561a5d9498d362a8faadd8f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt; - a module to patch tie.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31605170a6d743fca8807dd2b164f42a39395295" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt; - module to add dependencies to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92c53abf453d377590cbb89b03529dc7953b7a5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt; - module to be added</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b045a21232e50b331b4407086fac170550f6279" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt; - module to be fetched. The identifier is extracted from the module by the compilation using &lt;code&gt;module.identifier()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6be928c1617d747ae9371103e1ed8a6344cd2acd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt; - module to be processed for the dependencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0cacdac881ab6521855e57562253128aa83cb55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt; - module to be rebuilt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b206761087541dc5cc88f694e39d85a702f460be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt; - module to be searched for. The identifier is extracted from the module by the compilation using &lt;code&gt;module.identifier()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09cae5e65b13ad1add3787b7e7095b07de8cb321" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt; - the module at question.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="180ab56a98825d65aabeb1aa38a65c3d250a24b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt; - the module to assign depth to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e6f53ff4cb67dbdbbc6312099e19e9fa4470bd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt; - the module to be built.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="406de7a43448d763fdef2902eb0a7acf4c7e2236" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt; - the module whose errors and warnings are to be reported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7deff814925b8f8b47bc582c9278b2c61c925c27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt; : A RegExp to select the origin module for the warning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d60137401c939f12a90ed0ec9cbca0b5f992f944" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;moduleFilenameTemplate&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;): See &lt;a href=&quot;../configuration/output#output-devtoolmodulefilenametemplate&quot;&gt;&lt;code&gt;output.devtoolModuleFilenameTemplate&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;moduleFilenameTemplate&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; ): Ver &lt;a href=&quot;../configuration/output#output-devtoolmodulefilenametemplate&quot;&gt; &lt;code&gt;output.devtoolModuleFilenameTemplate&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8d9abae2960bdb7e95b3571eaeb095f09b51ad54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;moduleFilenameTemplate&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;): See &lt;a href=&quot;../configuration/output#outputdevtoolmodulefilenametemplate&quot;&gt;&lt;code&gt;output.devtoolModuleFilenameTemplate&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4839f439320d6a06b5cf2a4ab5f4a6c46711e4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;moduleIds: 'deterministic'&lt;/code&gt; was added in webpack 5 and &lt;code&gt;moduleIds: 'hashed'&lt;/code&gt; is deprecated in favor of it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2cfd5a144fdebe72c2bce7bea38bb6ce6901360" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;moduleIds: total-size&lt;/code&gt; has been removed in webpack 5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf6f5417f91b3f0622563c0da852266a41d6867e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;moduleLocalName&lt;/code&gt; - the name of method/variable/etc of the module (the module must export it) (&lt;strong&gt;may be omitted&lt;/strong&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="240bb4acb10cdd97b04709a2c5419d7fdc4c3ba5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;moduleName&lt;/code&gt; - name of an imported module (&lt;strong&gt;required&lt;/strong&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="841c52f84ba21dcc88a292557df51fcab8b71646" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;modules&lt;/code&gt; (&lt;code&gt;boolean = true&lt;/code&gt;): Shows modules count in progress message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b1fa32537987447b59564a7b1659cbbdfec3ee0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;modulesCount&lt;/code&gt; (&lt;code&gt;number = 5000&lt;/code&gt;): A minimum modules count to start with. Takes effect when &lt;code&gt;modules&lt;/code&gt; property is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d99cd8645a565a54b32bd0ecae040ec8d3257ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;multiStep&lt;/code&gt; (boolean): If &lt;code&gt;true&lt;/code&gt;, the plugin will build in two steps -- first compiling the hot update chunks, and then the remaining normal assets.</source>
          <target state="translated">&lt;code&gt;multiStep&lt;/code&gt; (booleano): si es &lt;code&gt;true&lt;/code&gt; , el complemento se compilar&amp;aacute; en dos pasos: primero compilando los fragmentos de actualizaci&amp;oacute;n en caliente y luego los activos normales restantes.</target>
        </trans-unit>
        <trans-unit id="779a008dc5b70d41f8a83a07fc35ff8336fd2ba4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;myObj.configName&lt;/code&gt;(optional)</source>
          <target state="translated">&lt;code&gt;myObj.configName&lt;/code&gt;(optional)</target>
        </trans-unit>
        <trans-unit id="a6f9d66eae0f08aca954dd613054812e78304a54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;myObj.merge&lt;/code&gt; (optional)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="393047e8116b42bd43242246a428105275a4bf2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;myObj.topScope&lt;/code&gt;(optional)</source>
          <target state="translated">&lt;code&gt;myObj.topScope&lt;/code&gt;(optional)</target>
        </trans-unit>
        <trans-unit id="24aec6ab7f89a681b8b4a6de163a723553f70199" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;myObj.webpackOptions&lt;/code&gt; (required)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3399db1dcbfd42351a4578a08097223a2cbce2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; (optional): an identifier where the dll is exposed (defaults to &lt;code&gt;manifest.name&lt;/code&gt;) (see also &lt;a href=&quot;../configuration/externals&quot;&gt;&lt;code&gt;externals&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad3939af4c37393b76ecc9521829dd65019d12cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; (optional): the name where the dll is exposed (defaults to &lt;code&gt;manifest.name&lt;/code&gt;) (see also &lt;a href=&quot;../configuration/externals&quot;&gt;&lt;code&gt;externals&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; (opcional): el nombre donde se expone la dll (por defecto es &lt;code&gt;manifest.name&lt;/code&gt; ) (ver tambi&amp;eacute;n &lt;a href=&quot;../configuration/externals&quot;&gt; &lt;code&gt;externals&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="88a2f26eb8f492845893cfb37cd73662578e40bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; - name for the child &lt;code&gt;Compiler&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67747ec77fa03bb8994ac28058fd9d0d04138d69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; - name of an exported value (&lt;strong&gt;required&lt;/strong&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db02b55afff823933e6d6d9b49941d175181f21a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; - name of an imported value (&lt;strong&gt;required&lt;/strong&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2080bab705966f85a44840ce48e82deb81518e02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; - the name of entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4caa030c0aaa07076eb60305e44ff95572751529" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; - the name of the asset to return</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ce0fc93087404484619cb5fc6e3dd455ca4bd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; - the name of the chunk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c684795df3bb92432954b3afacf6f71882852411" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;: name of the exposed dll function (&lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/TemplatedPathPlugin.js&quot;&gt;TemplatePaths&lt;/a&gt;: &lt;code&gt;[fullhash]&lt;/code&gt; &amp;amp; &lt;code&gt;[name]&lt;/code&gt; )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cf4d2459538f292bf43f23a805da848b2315ced" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt;: name of the exposed dll function (&lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/TemplatedPathPlugin.js&quot;&gt;TemplatePaths&lt;/a&gt;: &lt;code&gt;[hash]&lt;/code&gt; &amp;amp; &lt;code&gt;[name]&lt;/code&gt; )</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; : nombre de la funci&amp;oacute;n dll expuesta ( &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/TemplatedPathPlugin.js&quot;&gt;TemplatePaths&lt;/a&gt; : &lt;code&gt;[hash]&lt;/code&gt; &amp;amp; &lt;code&gt;[name]&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b54572e8c81e03cd6b8ceb7cd56b29aea304d8fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;namespace&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;): See &lt;a href=&quot;../configuration/output#outputdevtoolnamespace&quot;&gt;&lt;code&gt;output.devtoolNamespace&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="112d7f2c0b58e45e6ecdc7b9c744a90eaf52f591" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;newSourceOrFunction&lt;/code&gt; - new asset source or function converting old to new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60c93acaad30fdb63103904b857554b14301c817" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;noSources = false&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;): Prevents the source file content from being included in the source map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="541250e5d18f2fecb7a96ac8133e90f476bd432f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;noSources&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;): Prevents the source file content from being included in the source map (defaults to &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;noSources&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; o ): evita que el contenido del archivo de origen se incluya en el mapa de origen (el valor predeterminado es &lt;code&gt;false&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="89ae860624d7d93bc21a6d3486dcd281bad5b45a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;node-sass&lt;/code&gt; has a bug which blocks threads from the Node.js thread pool. When using it with the &lt;code&gt;thread-loader&lt;/code&gt; set &lt;code&gt;workerParallelJobs: 2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;node-sass&lt;/code&gt; tiene un error que bloquea los hilos del grupo de hilos de Node.js. Cuando se usa con el conjunto de &lt;code&gt;thread-loader&lt;/code&gt; &lt;code&gt;workerParallelJobs: 2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6f292215065d185c96bc05d04cf146c4de46c49e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;node&lt;/code&gt;: See &lt;code&gt;engines&lt;/code&gt; field for compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db87783fe43fbbf46d56468113dfbe8df63d3238" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;non-initial&lt;/code&gt; is a chunk that may be lazy-loaded. It may appear when &lt;a href=&quot;../guides/code-splitting#dynamic-imports&quot;&gt;dynamic import&lt;/a&gt; or &lt;a href=&quot;../plugins/split-chunks-plugin&quot;&gt;SplitChunksPlugin&lt;/a&gt; is being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdaa3b6eb02b52a179e6961b7ee5553f68ff78cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;none&lt;/code&gt; and &lt;code&gt;warning&lt;/code&gt; are going to be deprecated at the next major version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20ba3b8c8e21f36a15621a51763b66af843ed632" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;normal&lt;/code&gt;: Resolves a module via an absolute or relative path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="702fc78632a6a48e0677e8cfa511cfe9bbdff611" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nosources-*&lt;/code&gt; addition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1edbe16091eb9f13925f630d6107241c8015cc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nosources-source-map&lt;/code&gt; - A SourceMap is created without the &lt;code&gt;sourcesContent&lt;/code&gt; in it. It can be used to map stack traces on the client without exposing all of the source code. You can deploy the Source Map file to the webserver.</source>
          <target state="translated">&lt;code&gt;nosources-source-map&lt;/code&gt; : se crea un SourceMap sin el contenido de las &lt;code&gt;sourcesContent&lt;/code&gt; en &amp;eacute;l. Se puede utilizar para mapear seguimientos de pila en el cliente sin exponer todo el c&amp;oacute;digo fuente. Puede implementar el archivo de mapa de origen en el servidor web.</target>
        </trans-unit>
        <trans-unit id="525cbab43e5110d743a4134986f43ea74eea92bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;null&lt;/code&gt; when the export provision could depend on runtime conditions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5175ab86add34ec7382bb9ab57532b61c61ea6fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;null&lt;/code&gt; when the export usage could depend on runtime conditions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8028b6836b472ed8a423e3528c7becca76431628" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;number&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;number&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cfea8a91ef09239116dff422db307719ccc336dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;object = { encoding string = 'base64' | false, mimetype string = undefined | false }&lt;/code&gt;&lt;code&gt;function (content, { filename, module }) =&amp;gt; string&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e58b0a954a4c8e31d83aa6a0b90425725230ec4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;object = { maxSize number = 8096 }&lt;/code&gt;&lt;code&gt;function (source, { filename, module }) =&amp;gt; boolean&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3c9ffcec0778b15ad191c593a064c008b2fa751" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;object&lt;/code&gt;&lt;code&gt;[object, function]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1691e6112d552add5a06fd1a2d010c855270832" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;object&lt;/code&gt;&lt;code&gt;boolean: false&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="790981c6fe92f055715f1c5d486f0cd8fe9211ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;object&lt;/code&gt;&lt;code&gt;function(info)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt;&lt;code&gt;function(info)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6a24dc9eb2b750e4e62e8a9cc96c4b950d2b0996" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;object&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="84b4c0712e54a50daddc088737be0c626269b584" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;object&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt;&lt;code&gt;string&lt;/code&gt;&lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f5ebae651540e9505b31c9f490be3709fa2bea7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onAccepted&lt;/code&gt; (function(info)): Notifier for accepted modules</source>
          <target state="translated">&lt;code&gt;onAccepted&lt;/code&gt; (function (info)): notificador de m&amp;oacute;dulos aceptados</target>
        </trans-unit>
        <trans-unit id="eb6bec8a72830a3225b5a7a1881525d0327a6c2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onDeclined&lt;/code&gt; (function(info)): Notifier for declined modules</source>
          <target state="translated">&lt;code&gt;onDeclined&lt;/code&gt; (function (info)): notificador de m&amp;oacute;dulos rechazados</target>
        </trans-unit>
        <trans-unit id="0e4ff39a4e37f4ef2ef104d8954258fa39171be2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onDisposed&lt;/code&gt; (function(info)): Notifier for disposed modules</source>
          <target state="translated">&lt;code&gt;onDisposed&lt;/code&gt; (function (info)): notificador para m&amp;oacute;dulos eliminados</target>
        </trans-unit>
        <trans-unit id="b324d4b4eb29bd6df0587c6bba605a474e571c16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onErrored&lt;/code&gt; (function(info)): Notifier for errors</source>
          <target state="translated">&lt;code&gt;onErrored&lt;/code&gt; (funci&amp;oacute;n (informaci&amp;oacute;n)): notificador de errores</target>
        </trans-unit>
        <trans-unit id="663214223257462185e028fad7855a59c6f8c45c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onUnaccepted&lt;/code&gt; (function(info)): Notifier for unaccepted modules</source>
          <target state="translated">&lt;code&gt;onUnaccepted&lt;/code&gt; (function (info)): notificador de m&amp;oacute;dulos no aceptados</target>
        </trans-unit>
        <trans-unit id="50193cd35175b714865bcb3e217581afeccf06d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optimization.innerGraph&lt;/code&gt; tells webpack whether to conduct inner graph analysis for unused exports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba0bb3f959ae2d58f20574a2fa16528cdbb0ce52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optimization.mangleExports&lt;/code&gt; allows to control export mangling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="391eb87254c8f5b334769d34617095c4f945ed84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optimization.portableRecords&lt;/code&gt; tells webpack to generate records with relative paths to be able to move the context folder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be5f78af0ae0c8d2786daf1c2c12f3ce2bbf6cc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optimization.removeAvailableModules&lt;/code&gt; reduces the performance of webpack, and will be disabled in &lt;code&gt;production&lt;/code&gt; mode by default in next major release. Disable it in &lt;code&gt;production&lt;/code&gt; mode if you want extra build performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a687515719ef14b1b1fdacc0281ce83fdf3f8528" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optimization.sideEffects&lt;/code&gt; depends on &lt;a href=&quot;#optimization-providedexports&quot;&gt;&lt;code&gt;optimization.providedExports&lt;/code&gt;&lt;/a&gt; to be enabled. This dependency has a build time cost, but eliminating modules has positive impact on performance because of less code generation. Effect of this optimization depends on your codebase, try it for possible performance wins.</source>
          <target state="translated">&lt;code&gt;optimization.sideEffects&lt;/code&gt; depende de que &lt;a href=&quot;#optimization-providedexports&quot;&gt; &lt;code&gt;optimization.providedExports&lt;/code&gt; &lt;/a&gt; est&amp;eacute; habilitado. Esta dependencia tiene un costo de tiempo de construcci&amp;oacute;n, pero la eliminaci&amp;oacute;n de m&amp;oacute;dulos tiene un impacto positivo en el rendimiento debido a la menor generaci&amp;oacute;n de c&amp;oacute;digo. El efecto de esta optimizaci&amp;oacute;n depende de su c&amp;oacute;digo base, pru&amp;eacute;belo para posibles ganancias de rendimiento.</target>
        </trans-unit>
        <trans-unit id="5a399b768cb19429c6ab9de8b6eeed4bbfb17a34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optimization.sideEffects&lt;/code&gt; depends on &lt;a href=&quot;#optimizationprovidedexports&quot;&gt;&lt;code&gt;optimization.providedExports&lt;/code&gt;&lt;/a&gt; to be enabled. This dependency has a build time cost, but eliminating modules has positive impact on performance because of less code generation. Effect of this optimization depends on your codebase, try it for possible performance wins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="196a6f136eeb6567dded5445eba090c0c17eae09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optimization.sideEffects&lt;/code&gt; will also flag modules as side effect free when they contain only side effect free statements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="179d1a00fa0a89293c426d6554799e1a620fbe9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optimizeChunkAssets&lt;/code&gt; is deprecated (use the &lt;a href=&quot;#processassets&quot;&gt;Compilation.hook.processAssets&lt;/a&gt; instead and use one of the Compilation.PROCESS&lt;em&gt;ASSETS_STAGE&lt;/em&gt;* as a stage option)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3b805ab82081162564f88005fdd4b02f058c3c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optimizeChunkAssets&lt;/code&gt; is deprecated (use the &lt;a href=&quot;#processassets&quot;&gt;Compilation.hook.processAssets&lt;/a&gt; instead and use one of the Compilation.PROCESS_ASSETS_STAGE_* as a stage option)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03fe573a252122f57150ee1fa3d2dc5c2da4f246" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optional&lt;/code&gt; - optional flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b87611891ca033a081234b67c3bdcac957da4c05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.chunkFilename&lt;/code&gt; is the filename under that chunks are expected.</source>
          <target state="translated">&lt;code&gt;options.chunkFilename&lt;/code&gt; es el nombre de archivo bajo el que se esperan fragmentos.</target>
        </trans-unit>
        <trans-unit id="5876235af438fa796c9997d5dd5a4c97501f7a60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.debug&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;): Whether loaders should be in &lt;code&gt;debug&lt;/code&gt; mode or not. &lt;code&gt;debug&lt;/code&gt; will be removed as of webpack 3.</source>
          <target state="translated">&lt;code&gt;options.debug&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; o ): si los cargadores deben estar en modo de &lt;code&gt;debug&lt;/code&gt; o no. &lt;code&gt;debug&lt;/code&gt; se eliminar&amp;aacute; a partir del paquete web 3.</target>
        </trans-unit>
        <trans-unit id="c76b5cfbc3a1ce195bbef21e9b105d9c1366025c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.dependencyType&lt;/code&gt; is an additional option. It allows us to specify the type of dependency, which is used to resolve &lt;code&gt;byDependency&lt;/code&gt; from the &lt;code&gt;resolve&lt;/code&gt; options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab67f8227d2d87511d82dd32837d16269c6d253" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.hotUpdateChunkFilename&lt;/code&gt; the filename for hot update chunks.</source>
          <target state="translated">&lt;code&gt;options.hotUpdateChunkFilename&lt;/code&gt; el nombre de archivo para los fragmentos de actualizaci&amp;oacute;n en caliente.</target>
        </trans-unit>
        <trans-unit id="c35f8d9d48acf64d1f046baef76ac88b85d8df4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.hotUpdateFunction&lt;/code&gt; JSON function name for the hot update.</source>
          <target state="translated">&lt;code&gt;options.hotUpdateFunction&lt;/code&gt; Nombre de la funci&amp;oacute;n JSON para la actualizaci&amp;oacute;n en caliente.</target>
        </trans-unit>
        <trans-unit id="74761b4af85843843009fde5dbbfb9c965f51faa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.hotUpdateMainFilename&lt;/code&gt; the filename for the hot update manifest.</source>
          <target state="translated">&lt;code&gt;options.hotUpdateMainFilename&lt;/code&gt; el nombre de archivo para el manifiesto de actualizaci&amp;oacute;n en caliente.</target>
        </trans-unit>
        <trans-unit id="76b3bf05ebce2ee9ff4d5f577362a9486b48b9fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.jsonpFunction&lt;/code&gt; is the JSONP function.</source>
          <target state="translated">&lt;code&gt;options.jsonpFunction&lt;/code&gt; es la funci&amp;oacute;n JSONP.</target>
        </trans-unit>
        <trans-unit id="c95e532b5b958e984872de55a4c65c10414118c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.minimize&lt;/code&gt; (&lt;code&gt;boolean&lt;/code&gt;): Where loaders can be switched to minimize mode.</source>
          <target state="translated">&lt;code&gt;options.minimize&lt;/code&gt; ( &lt;code&gt;boolean&lt;/code&gt; o ): donde los cargadores se pueden cambiar al modo minimizar.</target>
        </trans-unit>
        <trans-unit id="b7439471127c01692400cd2d377a366ce85b559d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.options.context&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;): The context that can be used to configure older loaders.</source>
          <target state="translated">&lt;code&gt;options.options.context&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; ): el contexto que se puede usar para configurar cargadores m&amp;aacute;s antiguos.</target>
        </trans-unit>
        <trans-unit id="0be06eae7b9b89c9a6929cfd0e59be8074263d44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.options&lt;/code&gt; (&lt;code&gt;object&lt;/code&gt;): A configuration object that can be used to configure older loaders - this will take the same schema a &lt;code&gt;webpack.config.js&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;options.options&lt;/code&gt; ( &lt;code&gt;object&lt;/code&gt; ): un objeto de configuraci&amp;oacute;n que se puede usar para configurar cargadores m&amp;aacute;s antiguos; esto tomar&amp;aacute; el mismo esquema que &lt;code&gt;webpack.config.js&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="769c18b8dcce4374dfb4a74a0c472f35e1b53b6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.publicPath&lt;/code&gt; is used as path for loading the chunks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caf7f8db0bc66c1f709100690ace697819321cd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options.publicPath&lt;/code&gt; is uses as path for loading the chunks.</source>
          <target state="translated">&lt;code&gt;options.publicPath&lt;/code&gt; se utiliza como ruta para cargar los fragmentos.</target>
        </trans-unit>
        <trans-unit id="56eb4c281187e56c610ad8210855f5fa56de50c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options&lt;/code&gt; are the output options.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; son las opciones de salida.</target>
        </trans-unit>
        <trans-unit id="a2197a7a73e508ecb5773bb3dc26889796168b45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options&lt;/code&gt; are uglifyjs options.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; son opciones de uglifyjs.</target>
        </trans-unit>
        <trans-unit id="d4311b68c19cb8d8c19f670434dcd0aad909ab0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options&lt;/code&gt;: The loader options (for instance provided in the webpack config. See the &lt;a href=&quot;#examples&quot;&gt;example&lt;/a&gt; below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bda9ae45eb4efcaa66cf27184b974afc73d34729" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optionsObj.failOnMissing&lt;/code&gt;: the default value is &lt;code&gt;false&lt;/code&gt;, which will show a warning message, if the mapping text cannot be found. If set to &lt;code&gt;true&lt;/code&gt;, the message will be an error message.</source>
          <target state="translated">&lt;code&gt;optionsObj.failOnMissing&lt;/code&gt; : el valor predeterminado es &lt;code&gt;false&lt;/code&gt; , que mostrar&amp;aacute; un mensaje de advertencia, si no se puede encontrar el texto de la asignaci&amp;oacute;n. Si se establece en &lt;code&gt;true&lt;/code&gt; , el mensaje ser&amp;aacute; un mensaje de error.</target>
        </trans-unit>
        <trans-unit id="974fd649a1aa8479103d7558a3d1063171933b3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optionsObj.functionName&lt;/code&gt;: the default value is &lt;code&gt;__&lt;/code&gt;, you can change it to other function name.</source>
          <target state="translated">&lt;code&gt;optionsObj.functionName&lt;/code&gt; : el valor predeterminado es &lt;code&gt;__&lt;/code&gt; , puede cambiarlo por otro nombre de funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b68777ea5147f99990efea492fbc55541b220f74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optionsObj.hideMessage&lt;/code&gt;: the default value is &lt;code&gt;false&lt;/code&gt;, which will show the warning/error message. If set to &lt;code&gt;true&lt;/code&gt;, the message will be hidden.</source>
          <target state="translated">&lt;code&gt;optionsObj.hideMessage&lt;/code&gt; : el valor predeterminado es &lt;code&gt;false&lt;/code&gt; , que mostrar&amp;aacute; el mensaje de advertencia / error. Si se establece en &lt;code&gt;true&lt;/code&gt; , el mensaje se ocultar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="73bf5a54f5989e87b61cdfb6f15bcba359bf6706" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optionsObj.nested&lt;/code&gt;: the default value is &lt;code&gt;false&lt;/code&gt;. If set to &lt;code&gt;true&lt;/code&gt;, the keys in &lt;code&gt;languageConfig&lt;/code&gt; can be nested. This option is interpreted only if &lt;code&gt;languageConfig&lt;/code&gt; isn't a function.</source>
          <target state="translated">&lt;code&gt;optionsObj.nested&lt;/code&gt; : el valor predeterminado es &lt;code&gt;false&lt;/code&gt; . Si se establece en &lt;code&gt;true&lt;/code&gt; , las claves de &lt;code&gt;languageConfig&lt;/code&gt; se pueden anidar. Esta opci&amp;oacute;n se interpreta solo si &lt;code&gt;languageConfig&lt;/code&gt; no es una funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="737f50a5cc1ec4f703f667d1f18a3d86b59aaac7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;opts.env.configuration.myObj&lt;/code&gt; (required)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc11d8b7b46177e5e294d8a88f96e14fe891e9df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;opts.env.configuration&lt;/code&gt;(required)</source>
          <target state="translated">&lt;code&gt;opts.env.configuration&lt;/code&gt;(required)</target>
        </trans-unit>
        <trans-unit id="c790b79ef5e3fe1014046a950b7c74affdd5f6b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;origin&lt;/code&gt; - origin module from which this module build was requested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="002f9c2fe443ea89deaab5a5751bf9b2d409cd42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;original source&lt;/code&gt; - You see each module separated from each other, annotated with module names. You see the code before transpilation, as you authored it. This depends on Loader support.</source>
          <target state="translated">&lt;code&gt;original source&lt;/code&gt; : ver&amp;aacute; cada m&amp;oacute;dulo separado entre s&amp;iacute;, anotado con nombres de m&amp;oacute;dulo. Ver&amp;aacute; el c&amp;oacute;digo antes de la transpilaci&amp;oacute;n, tal como lo cre&amp;oacute;. Esto depende del soporte de Loader.</target>
        </trans-unit>
        <trans-unit id="bf677a50f29c2dbe228bad8b769e86a83df259b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;output.futureEmitAssets&lt;/code&gt; option will be removed in webpack v5.0.0 and this behaviour will become the new default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebede2b81519f9ba054ba77b5ea514dd1cd3e627" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;output.module&lt;/code&gt; is an experimental feature and can be enabled by setting &lt;a href=&quot;experiments#experiments&quot;&gt;&lt;code&gt;experiments.outputModule&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c42d4ee39484b57ac63ffa7a53459a9bd21c2650" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;output.module&lt;/code&gt; is an experimental feature and can only be enabled by setting &lt;a href=&quot;experiments#experiments&quot;&gt;&lt;code&gt;experiments.outputModule&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2428a51881bb9ec91f32a88a971430b121bb900a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;output.publicPath&lt;/code&gt; defaults to &lt;code&gt;'auto'&lt;/code&gt; with &lt;code&gt;web&lt;/code&gt; and &lt;code&gt;web-worker&lt;/code&gt; targets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de7fd655dfab6cb2bba79f8ea5319af8c3f1c330" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;output.uniqueName&lt;/code&gt; will be used to generate unique globals for:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0bb41fa02d85f03ad10cb7c2482e97583eceac0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;outputModule&lt;/code&gt;: enables the use of &lt;a href=&quot;output#outputmodule&quot;&gt;&lt;code&gt;output.module&lt;/code&gt;&lt;/a&gt; configuration option and sets it to &lt;code&gt;true&lt;/code&gt;. Enables the use of &lt;code&gt;output.libraryTarget&lt;/code&gt; as &lt;code&gt;'module'&lt;/code&gt; and sets it to &lt;code&gt;'module'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a285dc09781525743805daa4f5bc95dd75cc49b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;outputOptions&lt;/code&gt; - output options object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4be8484e7f4dff3957aca8e7216e3b2b763238d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;outputPath&lt;/code&gt;: A relative path to a custom output file (json)</source>
          <target state="translated">&lt;code&gt;outputPath&lt;/code&gt; : una ruta relativa a un archivo de salida personalizado (json)</target>
        </trans-unit>
        <trans-unit id="0be788665ebf70411507c4365760351a83a9e623" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;outputPath&lt;/code&gt;: An absolute path to a custom output file (json)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c910182071447ca217ab408b31001c8b5a92969e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;outputReport&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;outputReport&lt;/code&gt; (predeterminado: &lt;code&gt;false&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="68e48f0350035d9f2118f736fff33a7f90f7c9f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;override&lt;/code&gt; - allows to override existing value in the global object (&lt;strong&gt;may be omitted&lt;/strong&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51cc79294561195b1b083f211fbb5a4d19e91908" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pack&lt;/code&gt; is the only supported mode since webpack 5.0.x</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2901c85220232393e9550d4fd5913351b49daaed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parserOpts&lt;/code&gt;: Configure babel with special parser options.</source>
          <target state="translated">&lt;code&gt;parserOpts&lt;/code&gt; : configura babel con opciones especiales de analizador.</target>
        </trans-unit>
        <trans-unit id="5b217d4cc3ff6cff681583c9725cc45d96f63898" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt;: &lt;strong&gt;absolute path&lt;/strong&gt; to the manifest json file (output)</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; : ruta &lt;strong&gt;absoluta&lt;/strong&gt; al archivo json de manifiesto (salida)</target>
        </trans-unit>
        <trans-unit id="92206ab819a2663081a449c8fff2c0622185da39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;paths&lt;/code&gt; (&lt;code&gt;[string, RegExp]&lt;/code&gt;): A list of RegExps or absolute paths to directories or files that should be ignored</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3c9d3bfd834dc4909a8d37661b4adfb5dfb8e3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;paths&lt;/code&gt; (array): A list of RegExps or absolute paths to directories or files that should be ignored</source>
          <target state="translated">&lt;code&gt;paths&lt;/code&gt; (matriz): una lista de expresiones regulares o rutas absolutas a directorios o archivos que deben ignorarse</target>
        </trans-unit>
        <trans-unit id="a16d67555fc1d0c269f00987662330fa097483b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;percentBy&lt;/code&gt; (&lt;code&gt;string = null: 'entries' | 'dependencies' | 'modules' | null&lt;/code&gt;): Tells &lt;code&gt;ProgressPlugin&lt;/code&gt; how to calculate progress percentage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3576d6bd29378c40508e13ce63b8a3473cec274c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;percentage&lt;/code&gt;: This argument is unused; instead, &lt;a href=&quot;../plugins/progress-plugin&quot;&gt;&lt;code&gt;ProgressPlugin&lt;/code&gt;&lt;/a&gt; will calculate a percentage based on the current hook.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71ae9fba640d4cd02b2f349f9b1b56d8ec13e0dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;percentage&lt;/code&gt;: a number between 0 and 1 indicating the completion percentage of the compilation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce16a27c164a9ff52d84f31e535ed9537894ba39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;plugins&lt;/code&gt; - webpack plugins that will be applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d52aeea116fe943823931edc1b17771372b3732" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;polymer-loader&lt;/code&gt; Process HTML &amp;amp; CSS with preprocessor of choice and &lt;code&gt;require()&lt;/code&gt; Web Components like first-class modules</source>
          <target state="translated">&lt;code&gt;polymer-loader&lt;/code&gt; Procese HTML y CSS con el preprocesador de su elecci&amp;oacute;n y &lt;code&gt;require()&lt;/code&gt; componentes web como m&amp;oacute;dulos de primera clase</target>
        </trans-unit>
        <trans-unit id="fe2a251a8e80bdb94fe3dbaaac12141235792801" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;postcss-loader&lt;/code&gt; exposes context &lt;code&gt;ctx&lt;/code&gt; to the config file, making your &lt;code&gt;postcss.config.js&lt;/code&gt; dynamic, so can use it to do some real magic ✨</source>
          <target state="translated">&lt;code&gt;postcss-loader&lt;/code&gt; expone el contexto &lt;code&gt;ctx&lt;/code&gt; al archivo de configuraci&amp;oacute;n, lo que hace que su &lt;code&gt;postcss.config.js&lt;/code&gt; sea din&amp;aacute;mico, por lo que puede usarlo para hacer algo de magia real ✨</target>
        </trans-unit>
        <trans-unit id="fd6d75707ed5911a35552e8dd1b7250e76c42265" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;posthtml-loader&lt;/code&gt; Loads and transforms a HTML file using &lt;a href=&quot;https://github.com/posthtml/posthtml&quot;&gt;PostHTML&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;posthtml-loader&lt;/code&gt; Carga y transforma un archivo HTML usando &lt;a href=&quot;https://github.com/posthtml/posthtml&quot;&gt;PostHTML&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1c946fb0de53d9482d56d7d141f72613338eb17b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;preferEntry&lt;/code&gt; If true, references in entry chunks have higher priority</source>
          <target state="translated">&lt;code&gt;preferEntry&lt;/code&gt; Si es verdadero, las referencias en los fragmentos de entrada tienen mayor prioridad</target>
        </trans-unit>
        <trans-unit id="3c05dab785fbc778e2ef5d0e6e7dcc3224374d3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;process&lt;/code&gt; (NodeJS)</source>
          <target state="translated">&lt;code&gt;process&lt;/code&gt; (NodeJS)</target>
        </trans-unit>
        <trans-unit id="40cfd96112745eb8a46043ded332f13e496b5cca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;profile&lt;/code&gt; (&lt;code&gt;boolean = false&lt;/code&gt;): Tells &lt;code&gt;ProgressPlugin&lt;/code&gt; to collect profile data for progress steps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5070b1009663ab28c4c69d82f444664cc74d39a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;protocol&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;): Allows user to override default protocol (&lt;code&gt;webpack-internal://&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;protocol&lt;/code&gt; o ( &lt;code&gt;string&lt;/code&gt; ): permite al usuario anular el protocolo predeterminado ( &lt;code&gt;webpack-internal://&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="e59da5d14629d1da15e5b2a9d9a6838cc618b2bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;publicPath&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;): Emits absolute URLs with public path prefix, e.g. &lt;code&gt;https://example.com/project/&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;publicPath&lt;/code&gt; ( &lt;code&gt;string&lt;/code&gt; ): Emite URL absolutas con prefijo de ruta p&amp;uacute;blica, por ejemplo, &lt;code&gt;https://example.com/project/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd37c611940cbeeea9d89503f2bda317f3f5257b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pug-loader&lt;/code&gt; Loads Pug templates and returns a function</source>
          <target state="translated">&lt;code&gt;pug-loader&lt;/code&gt; Carga plantillas de Pug y devuelve una funci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="b0e6057e8e0a9c0a2d8f392591492c2923f93d4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;quiet&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;quiet&lt;/code&gt; (predeterminado: &lt;code&gt;false&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="4fe01ee89ca625674ef6044c7dc03e33e3be59d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;react-native&lt;/code&gt;: TBD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc3939a3d0d927b05942b0fdee0ba260de581926" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;realResource&lt;/code&gt;: Always the path to the module being loaded</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c9d22ec5f89a6eeba30995826560eb9244b5711" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;recursive&lt;/code&gt; - whether it is a recursive traversal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88e3073aca2924e4fd42e8000d0cb2c6da80146e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;regex&lt;/code&gt;&lt;code&gt;array&lt;/code&gt;&lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;regex&lt;/code&gt;&lt;code&gt;array&lt;/code&gt;&lt;code&gt;boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9a548645cd9563a8616755e72c578c2c3bfea435" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;request&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;): The import path being requested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93060a6c4b0f1af1bc938482c827460077e8d7ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;request&lt;/code&gt; - the request from which the chunk group is referenced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d00e2245ca0390275c976c44248ade3ea9c5fb1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;request&lt;/code&gt; is the request to be resolved. Usually either relative requests like &lt;code&gt;./relative&lt;/code&gt; or module requests like &lt;code&gt;module/path&lt;/code&gt; are used, but absolute paths like &lt;code&gt;/some/path&lt;/code&gt; are also possible as requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0a0a0ef29e0d7aea76c73b706a9ad1020aa0e4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;request&lt;/code&gt;: A request string for a normal module</source>
          <target state="translated">&lt;code&gt;request&lt;/code&gt; : una cadena de solicitud para un m&amp;oacute;dulo normal</target>
        </trans-unit>
        <trans-unit id="f0317ab28176aae9bb1d334745b9a36b4c1c7dac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;requestRegExp&lt;/code&gt; A RegExp to test the request against.</source>
          <target state="translated">&lt;code&gt;requestRegExp&lt;/code&gt; Una expresi&amp;oacute;n regular para probar la solicitud.</target>
        </trans-unit>
        <trans-unit id="7ae6784e1df5b57ff680349a224fd880a5267f27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;requestTimeout&lt;/code&gt; (number): The timeout used for manifest download (since webpack 3.0.0)</source>
          <target state="translated">&lt;code&gt;requestTimeout&lt;/code&gt; (n&amp;uacute;mero): el tiempo de espera utilizado para la descarga del manifiesto (desde webpack 3.0.0)</target>
        </trans-unit>
        <trans-unit id="9e7f8edb04da78dbec443b8bb14e51aec8507f48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;require(&quot;./templates/&quot; + expr)&lt;/code&gt; should not include subdirectories by default: &lt;code&gt;wrappedContextRecursive: false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;require(&quot;./templates/&quot; + expr)&lt;/code&gt; no debe incluir subdirectorios por defecto: &lt;code&gt;wrappedContextRecursive: false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ded99b86901f6b2ef966ff9ddeb47e3348373c35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;require('./templates/' + expr)&lt;/code&gt; should not include subdirectories by default: &lt;code&gt;wrappedContextRecursive: false&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e07b103955c48710b9b089c8c90493a0a120237e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;require(expr)&lt;/code&gt; should include the whole directory: &lt;code&gt;exprContextRegExp: /^\.\//&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;require(expr)&lt;/code&gt; debe incluir el directorio completo: &lt;code&gt;exprContextRegExp: /^\.\//&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="25c3668d62a78b1a9c9ea66940d5fcab493aa6c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;require(expr)&lt;/code&gt; should include the whole directory: &lt;code&gt;exprContextRegExp: /^\\.\\//&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a67843ab282574af3b546e102491fdf74ccbdeec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;require.ensure()&lt;/code&gt; is specific to webpack and superseded by &lt;code&gt;import()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;require.ensure()&lt;/code&gt; es espec&amp;iacute;fico para webpack y reemplazado por &lt;code&gt;import()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="31ef40817c57b04fd2a065f79c7299cbf0cd2903" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;require.resolveWeak&lt;/code&gt; is the foundation of &lt;em&gt;universal rendering&lt;/em&gt; (SSR + Code Splitting), as used in packages such as &lt;a href=&quot;https://github.com/faceyspacey/react-universal-component&quot;&gt;react-universal-component&lt;/a&gt;. It allows code to render synchronously on both the server and initial page-loads on the client. It requires that chunks are manually served or somehow available. It's able to require modules without indicating they should be bundled into a chunk. It's used in conjunction with &lt;code&gt;import()&lt;/code&gt; which takes over when user navigation triggers additional imports.</source>
          <target state="translated">&lt;code&gt;require.resolveWeak&lt;/code&gt; es la base de &lt;em&gt;la representaci&amp;oacute;n universal&lt;/em&gt; (SSR + Divisi&amp;oacute;n de c&amp;oacute;digo), como se usa en paquetes como &lt;a href=&quot;https://github.com/faceyspacey/react-universal-component&quot;&gt;react-universal-component&lt;/a&gt; . Permite que el c&amp;oacute;digo se procese sincr&amp;oacute;nicamente tanto en el servidor como en las cargas de p&amp;aacute;gina iniciales en el cliente. Requiere que los trozos se sirvan manualmente o est&amp;eacute;n disponibles de alguna manera. Puede requerir m&amp;oacute;dulos sin indicar que deben agruparse en un fragmento. Se usa junto con &lt;code&gt;import()&lt;/code&gt; que se hace cargo cuando la navegaci&amp;oacute;n del usuario activa importaciones adicionales.</target>
        </trans-unit>
        <trans-unit id="ef373103963a964cb8c268f7cbdfdeb38648af0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;require&lt;/code&gt; (amd-version)</source>
          <target state="translated">&lt;code&gt;require&lt;/code&gt; (versi&amp;oacute;n amd)</target>
        </trans-unit>
        <trans-unit id="fb46860ee9f64a4d666e477b4a7e3add69c3811f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;require&lt;/code&gt; label</source>
          <target state="translated">&lt;code&gt;require&lt;/code&gt; etiqueta</target>
        </trans-unit>
        <trans-unit id="f162e5e0e2551379a1f318d70fd1c6a8605f0cec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;require[js].config&lt;/code&gt; is removed. &lt;code&gt;require.version&lt;/code&gt; is &lt;code&gt;0.0.0&lt;/code&gt;. &lt;code&gt;requirejs.onError&lt;/code&gt; is mapped to &lt;code&gt;require.onError&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;require[js].config&lt;/code&gt; es eliminado. &lt;code&gt;require.version&lt;/code&gt; es &lt;code&gt;0.0.0&lt;/code&gt; . &lt;code&gt;requirejs.onError&lt;/code&gt; se asigna a &lt;code&gt;require.onError&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bd0458c8917e10126296fab86a82aaa449f386d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resolve.alias&lt;/code&gt; takes precedence over other module resolutions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02e1d8d02ad4802a8122eb412d53a1a499f31f6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resolve.fullySpecified&lt;/code&gt; doesn't affect requests from &lt;a href=&quot;resolve#resolvemainfields&quot;&gt;mainFields&lt;/a&gt;, &lt;a href=&quot;resolve#resolvealiasfields&quot;&gt;aliasFields&lt;/a&gt; or &lt;a href=&quot;resolve#resolvealias&quot;&gt;aliases&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd055ad5cdf28a9f326e299836e0a83416c714ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resolve.modules&lt;/code&gt; defaults to:</source>
          <target state="translated">&lt;code&gt;resolve.modules&lt;/code&gt; por defecto es:</target>
        </trans-unit>
        <trans-unit id="12da6376b5f43cb117afeb32934be0df8b394a0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resolve.symlinks&lt;/code&gt; defaults to:</source>
          <target state="translated">&lt;code&gt;resolve.symlinks&lt;/code&gt; por defecto es:</target>
        </trans-unit>
        <trans-unit id="7844cae3d77e57ddb4e90a427a5936ae6e0bb3bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resolve&lt;/code&gt; is a function and returns the module id of the parsed request.</source>
          <target state="translated">&lt;code&gt;resolve&lt;/code&gt; es una funci&amp;oacute;n y devuelve el ID del m&amp;oacute;dulo de la solicitud analizada.</target>
        </trans-unit>
        <trans-unit id="033acda2689504dc69070eded2c42f0ccb08c6a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resource&lt;/code&gt;: The path to the module being loaded, it is usually equal to &lt;code&gt;realResource&lt;/code&gt; except when the resource name is overwritten via &lt;code&gt;!=!&lt;/code&gt; in request string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dd25fedaf0ac07e1915beeecfe774cd808e44cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resourceRegExp&lt;/code&gt;: A RegExp to test the resource against.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b230099140cf24b2139d9073e232c76a8ef365d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;result&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;&lt;code&gt;[string]&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;): Describes the external module. Can accept a string in the format &lt;code&gt;${type} ${path}&lt;/code&gt;, or one of the other standard external formats (&lt;a href=&quot;#string&quot;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#string-1&quot;&gt;&lt;code&gt;[string]&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#object&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98e6a1ba0aeb19a1ad184f7a9df0d3bbbd0f3d8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;runtime&lt;/code&gt; and &lt;code&gt;dependOn&lt;/code&gt; should not be used together on a single entry, so the following config is invalid and would throw an error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f04337c3738a7b9c855904e319d86ddd36809cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;runtime&lt;/code&gt;: The name of the runtime chunk. If set, a runtime chunk with this name is created otherwise an existing entry point is used as runtime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="550e8bd1db46d7f41f1ca66a4a150d54b0bbb832" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sass-loader&lt;/code&gt; requires you to install either &lt;a href=&quot;https://github.com/sass/dart-sass&quot;&gt;Dart Sass&lt;/a&gt; or &lt;a href=&quot;https://github.com/sass/node-sass&quot;&gt;Node Sass&lt;/a&gt; on your own (more documentation can be found below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0b4e4f324345ff2bc530c1a377e444533d7bfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scope&lt;/code&gt; (optional): prefix which is used for accessing the content of the dll</source>
          <target state="translated">&lt;code&gt;scope&lt;/code&gt; (opcional): prefijo que se utiliza para acceder al contenido de la dll</target>
        </trans-unit>
        <trans-unit id="0785c139508c998f6d7613e6d62f6a6b2d087292" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;script&lt;/code&gt; should only be set when no module system is supported. When the script is preprocessed by a system supporting CommonJs it should set &lt;code&gt;require&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cd6e43f07cd151cca5e8931b34927ba2862a3b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;skip&lt;/code&gt; - do not consume the source map and do not remove &lt;code&gt;SourceMappingURL&lt;/code&gt; comment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8539db862e0e0c6aa6d50f5493a2ce7bd577bfdb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;snapshot&lt;/code&gt; options decide how the file system snapshots are created and invalidated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c07ba83301c6f19431e2e1776a6c045f746efee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;source-map-loader&lt;/code&gt; extracts existing source maps from all JavaScript entries. This includes both inline source maps as well as those linked via URL. All source map data is passed to webpack for processing as per a chosen &lt;a href=&quot;../configuration/devtool&quot;&gt;source map style&lt;/a&gt; specified by the &lt;code&gt;devtool&lt;/code&gt; option in &lt;a href=&quot;https://webpack.js.org/configuration/&quot;&gt;webpack.config.js&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;source-map-loader&lt;/code&gt; extrae mapas de origen existentes de todas las entradas de JavaScript. Esto incluye tanto mapas de origen en l&amp;iacute;nea como aquellos vinculados a trav&amp;eacute;s de URL. Todo mapa fuente de datos se pasa a webpack para el procesamiento seg&amp;uacute;n un elegido &lt;a href=&quot;../configuration/devtool&quot;&gt;asignaci&amp;oacute;n de estilos fuente&lt;/a&gt; especificada por el &lt;code&gt;devtool&lt;/code&gt; opci&amp;oacute;n en &lt;a href=&quot;https://webpack.js.org/configuration/&quot;&gt;webpack.config.js&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a34f9e4ceac503efb55df7011499f257da04224e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;source-map-loader&lt;/code&gt; will extract from any JavaScript file, including those in the &lt;code&gt;node_modules&lt;/code&gt; directory. Be mindful in setting &lt;a href=&quot;../configuration/module#rule-include&quot;&gt;include&lt;/a&gt; and &lt;a href=&quot;../configuration/module#rule-exclude&quot;&gt;exclude&lt;/a&gt; rule conditions to maximize bundling performance.</source>
          <target state="translated">&lt;code&gt;source-map-loader&lt;/code&gt; extraer&amp;aacute; de cualquier archivo JavaScript, incluidos los del directorio &lt;code&gt;node_modules&lt;/code&gt; . Tenga en cuenta las condiciones de &lt;a href=&quot;../configuration/module#rule-include&quot;&gt;inclusi&amp;oacute;n&lt;/a&gt; y &lt;a href=&quot;../configuration/module#rule-exclude&quot;&gt;exclusi&amp;oacute;n de&lt;/a&gt; reglas para maximizar el rendimiento de la agrupaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="9efabbbfb2bf40d9e8ac245494bfc95bbe99cadd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;source-map&lt;/code&gt; - A full SourceMap is emitted as a separate file. It adds a reference comment to the bundle so development tools know where to find it.</source>
          <target state="translated">&lt;code&gt;source-map&lt;/code&gt; : se emite un SourceMap completo como un archivo separado. Agrega un comentario de referencia al paquete para que las herramientas de desarrollo sepan d&amp;oacute;nde encontrarlo.</target>
        </trans-unit>
        <trans-unit id="478da4694372986076c669f6e489699536b2af19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;source&lt;/code&gt; - the source of the asset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2352eee2a648f5776604f445e0d6f297e1855bec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sourceMap&lt;/code&gt; - sourceMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba03e9219119c1848db6481b7465ba3801012a2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sourceMap&lt;/code&gt;: Configure a sourcemap style. Default: &lt;a href=&quot;../configuration/devtool&quot;&gt;webpackConfig.devtool&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;sourceMap&lt;/code&gt; : configura un estilo de mapa de origen. Predeterminado: &lt;a href=&quot;../configuration/devtool&quot;&gt;webpackConfig.devtool&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2bc9fbe4895a846ae52423d0e6995507616a0ede" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sourceMapFilename&lt;/code&gt; the filename template of the SourceMap. &lt;code&gt;[hash]&lt;/code&gt;, &lt;code&gt;[name]&lt;/code&gt;, &lt;code&gt;[id]&lt;/code&gt;, &lt;code&gt;[file]&lt;/code&gt; and &lt;code&gt;[filebase]&lt;/code&gt; are replaced. If this argument is missing, the SourceMap will be inlined as DataUrl.</source>
          <target state="translated">&lt;code&gt;sourceMapFilename&lt;/code&gt; la plantilla de nombre de archivo del SourceMap. &lt;code&gt;[hash]&lt;/code&gt; , &lt;code&gt;[name]&lt;/code&gt; , &lt;code&gt;[id]&lt;/code&gt; , &lt;code&gt;[file]&lt;/code&gt; y &lt;code&gt;[filebase]&lt;/code&gt; se reemplazan. Si falta este argumento, SourceMap se incluir&amp;aacute; como DataUrl.</target>
        </trans-unit>
        <trans-unit id="194e69f9f64b46d961ff925e3e155988e59ba2f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sourceRoot&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;): Provide a custom value for the &lt;code&gt;sourceRoot&lt;/code&gt; property in the SourceMap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbdaa4d7d1e7a549dbed3e1d9f012cb1ffbc77e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sourceType&lt;/code&gt; (optional): how the dll is exposed (&lt;a href=&quot;../configuration/output#output-librarytarget&quot;&gt;libraryTarget&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;sourceType&lt;/code&gt; (opcional): c&amp;oacute;mo se expone la dll ( &lt;a href=&quot;../configuration/output#output-librarytarget&quot;&gt;libraryTarget&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="a7f2b6b85daacf4e273538469c300b1329b1ff16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sourceType&lt;/code&gt; (optional): how the dll is exposed (&lt;a href=&quot;../configuration/output#outputlibrarytarget&quot;&gt;libraryTarget&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd1459cb45dd6f57b1d55da8b770bed0ca9bdfd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sourceURLTemplate&lt;/code&gt;: Define the sourceURL default: &lt;code&gt;webpack-internal:///${module.identifier}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;sourceURLTemplate&lt;/code&gt; : Defina el sourceURL predeterminado: &lt;code&gt;webpack-internal:///${module.identifier}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f02f06ec1a64b1f3c4d61207d33df98b3c9b720c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;splitChunks.minRemainingSize&lt;/code&gt; only takes effect when a single chunk is remaining.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3202d48705c6aa56d815d9a48663e146edb4fc91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;splitChunks.minRemainingSize&lt;/code&gt; option was introduced in webpack 5 to avoid zero sized modules by ensuring that the minimum size of the chunk which remains after splitting is above a limit. Defaults to &lt;code&gt;0&lt;/code&gt; in &lt;a href=&quot;../configuration/mode#mode-development&quot;&gt;'development' mode&lt;/a&gt;. For other cases &lt;code&gt;splitChunks.minRemainingSize&lt;/code&gt; defaults to the value of &lt;code&gt;splitChunks.minSize&lt;/code&gt; so it doesn't need to be specified manually except for the rare cases where deep control is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9db0f31fa3a697a6640a1d236e72f49553909209" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stats.warningsFilter&lt;/code&gt; is deprecated in favor of &lt;a href=&quot;other-options#ignorewarnings&quot;&gt;&lt;code&gt;ignoreWarnings&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58e98f33efe1456f9f222d6874e8ab4269edfa21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;strictExportPresence&lt;/code&gt; makes missing exports an error instead of warning</source>
          <target state="translated">&lt;code&gt;strictExportPresence&lt;/code&gt; hace que las exportaciones faltantes sean un error en lugar de una advertencia</target>
        </trans-unit>
        <trans-unit id="f69b148551112162951c3b3067b4eacfe5ce69c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string = '/'&lt;/code&gt;&lt;code&gt;[string]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6235ff7f6f8f1396465955e7f6222b7a00c2a49f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string = '[hash].hot-update.json'&lt;/code&gt;&lt;code&gt;function&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1c7e4421e0191da0e2f2edde555a044ff1befff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string = '[id].js'&lt;/code&gt;&lt;code&gt;function (pathData, assetInfo) =&amp;gt; string&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38f41f63d8aaac76d2c5368c0a50c2c38d87ea85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string = '[runtime].[fullhash].hot-update.json'&lt;/code&gt;&lt;code&gt;function&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="314ac5128fd7e25096c948dc2425923bde207baa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string = 'async'&lt;/code&gt;&lt;code&gt;function (chunk)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="462538eca03fc50c04966468cb0f2bc043d655d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string = 'eval'&lt;/code&gt;&lt;code&gt;false&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a06392f2e4d15092dd54dadf44f7811011df048" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string = 'info': 'none' | 'error' | 'warn' | 'info' | 'log' | 'verbose'&lt;/code&gt;&lt;code&gt;boolean&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d383076b9d719cd93791f90a85379485327a81ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string = 'md4'&lt;/code&gt;&lt;code&gt;function&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3db2daf3f9a9de3918d8ddc24813ea09457444fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string = 'sockjs': 'sockjs' | 'ws'&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb51b692dc5bfc9a6508cf5f86d39cfbf8baaa95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string = 'warning': 'error' | 'warning'&lt;/code&gt;&lt;code&gt;boolean: false&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce1623ff04e1ce014642177227619671ecfdc991" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string = 'webpack://[namespace]/[resource-path]?[loaders]'&lt;/code&gt;&lt;code&gt;function (info) =&amp;gt; string&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="574f2b309a3624228286589fb056efb59946b256" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string: 'module' | 'text/javascript'&lt;/code&gt;&lt;code&gt;boolean = false&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a263a18c29045e5476f2fb3e1c1167ccf9ecc4e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string: 'none' | 'errors-only' | 'minimal' | 'normal' | 'verbose'&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c28320294196e0f7480f517525b8775e001acc09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string: 'require' | 'import-scripts' | 'async-node' | 'import' | 'universal'&lt;/code&gt;&lt;code&gt;boolean: false&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4f07fe0076978bde993bb7a079f6a6c491ea4d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt; or &lt;code&gt;object&lt;/code&gt; (since webpack 3.1.0; for &lt;code&gt;libraryTarget: &quot;umd&quot;&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; u &lt;code&gt;object&lt;/code&gt; (desde webpack 3.1.0; para &lt;code&gt;libraryTarget: &quot;umd&quot;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="f7d8702b179ba18b37538a545170ed8dba8229ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt; or &lt;code&gt;string[]&lt;/code&gt; (since webpack 3.0.0)</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; o &lt;code&gt;string[]&lt;/code&gt; (desde webpack 3.0.0)</target>
        </trans-unit>
        <trans-unit id="08a1a8d7083ff70729dda85422c0d56faf4e24cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;: &lt;code&gt;none&lt;/code&gt;&lt;code&gt;info&lt;/code&gt;&lt;code&gt;verbose&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; : &lt;code&gt;none&lt;/code&gt; &lt;code&gt;info&lt;/code&gt; rmaci&amp;oacute;n &lt;code&gt;verbose&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e1f468fedbc628f1fa7b897e907a0cf65bb25439" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;function(name) =&amp;gt; boolean&lt;/code&gt;&lt;code&gt;[string, RegExp, function(name) =&amp;gt; boolean]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f27f45099cba0d8ba069952eeb9a8838716139a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;[string]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt;&lt;code&gt;[string]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="839f1a8e5c743b1931ca7254e904c5767a1f21f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;[string]&lt;/code&gt;&lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt;&lt;code&gt;[string]&lt;/code&gt;&lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9cf95a5883f964602d22c2ba7935cecec61c3628" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;[string]&lt;/code&gt;&lt;code&gt;object = { &amp;lt;key&amp;gt; string | [string] | object = { import string | [string], dependOn string | [string], filename string }}&lt;/code&gt;&lt;code&gt;(function() =&amp;gt; string | [string] | object = { &amp;lt;key&amp;gt; string | [string] } | object = { import string | [string], dependOn string | [string], filename string })&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2abda8660ef8aec0c9134673a42449e3e91107c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;[string]&lt;/code&gt;&lt;code&gt;object = { &amp;lt;key&amp;gt; string | [string] | object = { import string | [string], dependOn string | [string], filename string, layer string }}&lt;/code&gt;&lt;code&gt;(function() =&amp;gt; string | [string] | object = { &amp;lt;key&amp;gt; string | [string] } | object = { import string | [string], dependOn string | [string], filename string })&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ad1a2dc00e34a34c7a6d210410781b34b558d96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;[string]&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;&lt;code&gt;function&lt;/code&gt;&lt;code&gt;RegExp&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt;&lt;code&gt;[string]&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;&lt;code&gt;function&lt;/code&gt;&lt;code&gt;RegExp&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ff0fc08588e8313b12c2276a9f6267967f4b5bab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;bool: false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; &lt;code&gt;bool: false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5c4993b5a832f7ece1f7b99faad31ef6e93ee633" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;boolean: false&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd2a5d99d6a3c58a34094e208c0907ca7d6dd50a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt;&lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a78436d14553d7bd1fceeeff0417a8a465d526d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;function (info)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8350d340d358fcf237dd030a0efa2ff129c61bcc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;function (pathData, assetInfo) =&amp;gt; string&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1d33b7c782696990a9ad54aa296740048514443" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;function&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt;&lt;code&gt;function&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e9f4b43f7a2cf03aecf02ecdf8aaa8da5e8670ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a3cd77650c61414b3e1b50de855b54207965f2c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;&lt;code&gt;function&lt;/code&gt;&lt;code&gt;regex&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt;&lt;code&gt;object&lt;/code&gt;&lt;code&gt;function&lt;/code&gt;&lt;code&gt;regex&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6ef8dcb7a58ce13b8c8d4a880b431607ef8ee024" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;path&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt;&lt;code&gt;path&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c212acb1597fa82c38a80be2ba7aca190f975bfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt;&lt;code&gt;path&lt;/code&gt;&lt;code&gt;function&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt;&lt;code&gt;path&lt;/code&gt;&lt;code&gt;function&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="27bcbf2e8f4a048c76c26749ef78e3dab5708c29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stylelint-webpack-plugin&lt;/code&gt; allows defining a &lt;a href=&quot;https://en.wikipedia.org/wiki/Glob_(programming&quot;&gt;glob pattern&lt;/a&gt;) matching the configuration and use of &lt;code&gt;stylelint&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;stylelint-webpack-plugin&lt;/code&gt; permite definir un &lt;a href=&quot;https://en.wikipedia.org/wiki/Glob_(programming&quot;&gt;patr&amp;oacute;n global&lt;/a&gt; ) que coincida con la configuraci&amp;oacute;n y el uso de &lt;code&gt;stylelint&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="06d5fc64b891aae49907ff60164910a84d99184b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stylus-loader&lt;/code&gt; Loads and compiles a Stylus file</source>
          <target state="translated">&lt;code&gt;stylus-loader&lt;/code&gt; Carga y compila un archivo Stylus</target>
        </trans-unit>
        <trans-unit id="643558831cbb089be9a99ac07cba7d63646638f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;subtract: ['./math', 'subtract']&lt;/code&gt; allows you select part of a commonjs module, where &lt;code&gt;./math&lt;/code&gt; is the module and your bundle only requires the subset under the &lt;code&gt;subtract&lt;/code&gt; variable. This example would translate to &lt;code&gt;require('./math').subtract;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="379b966b4e6cad868bcbf51b9ebbe72661b7b76e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;subtract: ['./math', 'subtract']&lt;/code&gt; converts to a parent child construct, where &lt;code&gt;./math&lt;/code&gt; is the parent module and your bundle only requires the subset under &lt;code&gt;subtract&lt;/code&gt; variable.</source>
          <target state="translated">&lt;code&gt;subtract: ['./math', 'subtract']&lt;/code&gt; convierte en una construcci&amp;oacute;n padre hijo, donde &lt;code&gt;./math&lt;/code&gt; es el m&amp;oacute;dulo padre y su paquete solo requiere el subconjunto bajo la variable de &lt;code&gt;subtract&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef5164b3c5d05f2a9ab4e67fd081b4a5841f0a81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;syncWebAssembly&lt;/code&gt;: Support the old WebAssembly like in webpack 4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53cc4db57b53df27e4f678449e1d14a88ff82981" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;syntax&lt;/code&gt; - can be &lt;code&gt;default&lt;/code&gt; or &lt;code&gt;named&lt;/code&gt; for the &lt;code&gt;module&lt;/code&gt; type (&lt;code&gt;ES modules&lt;/code&gt; module format), and &lt;code&gt;single&lt;/code&gt; or &lt;code&gt;multiple&lt;/code&gt; for the &lt;code&gt;commonjs&lt;/code&gt; type (&lt;code&gt;CommonJS&lt;/code&gt; module format) (&lt;strong&gt;may be omitted&lt;/strong&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e39ae5bbdd5d0cb92d2b4dc7316258ff6b741994" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;syntax&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;syntax&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="53b179ee26ae5800d8731bc2b3fb5dd393214fbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test&lt;/code&gt; (&lt;code&gt;string&lt;/code&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;code&gt;[string, RegExp]&lt;/code&gt;): Include source maps for modules based on their extension (defaults to &lt;code&gt;.js&lt;/code&gt;, &lt;code&gt;.mjs&lt;/code&gt;, and &lt;code&gt;.css&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd6559104e78ca43f4eeb31bfc19b3fef898ee0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test&lt;/code&gt; (&lt;code&gt;string|RegExp|array&lt;/code&gt;): Include source maps for modules based on their extension (defaults to &lt;code&gt;.js&lt;/code&gt; and &lt;code&gt;.css&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30f3d93d2484ca7387c45611ddf53f44d9f9e869" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test&lt;/code&gt; (&lt;code&gt;string|regex|array&lt;/code&gt;): Include source maps for modules based on their extension (defaults to &lt;code&gt;.js&lt;/code&gt; and &lt;code&gt;.css&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; ( &lt;code&gt;string|regex|array&lt;/code&gt; ): incluye mapas de origen para los m&amp;oacute;dulos seg&amp;uacute;n su extensi&amp;oacute;n (los valores predeterminados son &lt;code&gt;.js&lt;/code&gt; y &lt;code&gt;.css&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="9ae4c3827bbd51d3886a6272aa9ffc56c93698bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test&lt;/code&gt;5.20.0+: Specify which imported modules should be lazily compiled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea7a69f461af7cf49567ec7d870f273a16ea0c62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test&lt;/code&gt;: All assets matching this RegExp are processed. Defaults to every asset.</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; : se procesan todos los activos que coinciden con esta RegExp. Valores predeterminados para todos los activos.</target>
        </trans-unit>
        <trans-unit id="630d88e8ee005d31146ea737a2b6bfdfd8addfca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test&lt;/code&gt;: Test to match files against. Default: &lt;code&gt;/\.js($|\?)/i&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; : prueba para comparar archivos con. Por defecto: &lt;code&gt;/\.js($|\?)/i&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5c33431aac1f8c562588138f4e7ddeaef97a95a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;this.loadModule&lt;/code&gt; in a loader context uses CommonJS resolve rules by default. Use &lt;code&gt;this.getResolve&lt;/code&gt; with an appropriate &lt;code&gt;dependencyType&lt;/code&gt;, e.g. &lt;code&gt;'esm'&lt;/code&gt;, &lt;code&gt;'commonjs'&lt;/code&gt; or a custom one before using a different semantic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a78302180690ca8947ecbc792454de24149b155f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thisCallback&lt;/code&gt; - function to be invoked when the module finishes rebuilding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d5120836d599429064eaf0cbdb8e320b6e4d0fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;threshold&lt;/code&gt;: Only assets bigger than this size are processed. In bytes. Defaults to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;threshold&lt;/code&gt; : solo se procesan los activos que superan este tama&amp;ntilde;o. En bytes. El valor predeterminado es &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fd305dd27a5a3d97ab8efbc635dae1b99eadccaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timestamp&lt;/code&gt;: Compare timestamps to determine invalidation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd18700d54680b68b451d511343f8dc5933a7633" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;topLevelAwait&lt;/code&gt;: Support the &lt;a href=&quot;https://github.com/tc39/proposal-top-level-await&quot;&gt;Top Level Await Stage 3 proposal&lt;/a&gt;, it makes the module an async module when &lt;code&gt;await&lt;/code&gt; is used on the top-level</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00bf0ebc163a4f3847264f5d395868510380ffaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;traceur-loader&lt;/code&gt; Loads ES2015+ code and transpiles to ES5 using &lt;a href=&quot;https://github.com/google/traceur-compiler#readme&quot;&gt;Traceur&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;traceur-loader&lt;/code&gt; Carga el c&amp;oacute;digo ES2015 + y lo transpila a ES5 usando &lt;a href=&quot;https://github.com/google/traceur-compiler#readme&quot;&gt;Traceur&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="87cf33416d775982275cab061668829fdb646a5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transformed code&lt;/code&gt; - You see each module separated from each other, annotated with module names. You see the code before webpack transforms it, but after Loaders transpile it. Example: Instead of &lt;code&gt;import {test} from &quot;module&quot;; class A extends test {}&lt;/code&gt; you see something like &lt;code&gt;import {test} from &quot;module&quot;; var A = function(_test) { ... }(test);&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;transformed code&lt;/code&gt; : ve cada m&amp;oacute;dulo separado entre s&amp;iacute;, anotado con nombres de m&amp;oacute;dulo. Ver&amp;aacute; el c&amp;oacute;digo antes de que webpack lo transforme, pero despu&amp;eacute;s de que Loaders lo transpile. Ejemplo: en lugar de &lt;code&gt;import {test} from &quot;module&quot;; class A extends test {}&lt;/code&gt; ves algo como &lt;code&gt;import {test} from &quot;module&quot;; var A = function(_test) { ... }(test);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9c019ab9945eb2edb2bbdb025c3d70fc6238dc0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transportMode&lt;/code&gt; is an experimental option, meaning its usage could potentially change without warning.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
