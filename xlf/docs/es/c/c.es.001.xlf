<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="c">
    <body>
      <group id="c">
        <trans-unit id="d7164dee528e4af4171ce8e950bcb08c96acf10a" translate="yes" xml:space="preserve">
          <source>&quot;sequenced-before&quot; is an asymmetric, transitive, pair-wise relationship between evaluations within the same thread (it may extend across threads if atomic types and memory barriers are involved).</source>
          <target state="translated">&quot;secuenciado antes&quot; es una relaci&amp;oacute;n asim&amp;eacute;trica, transitiva, en pares, entre evaluaciones dentro del mismo hilo (puede extenderse a trav&amp;eacute;s de hilos si est&amp;aacute;n involucrados tipos at&amp;oacute;micos y barreras de memoria).</target>
        </trans-unit>
        <trans-unit id="eab27d51477a98912b7a12e287985652dd3aefca" translate="yes" xml:space="preserve">
          <source>#define - # - ##</source>
          <target state="translated">#define - # - ##</target>
        </trans-unit>
        <trans-unit id="c1c8996a2b733fc70c1d5de67c09757269caec0b" translate="yes" xml:space="preserve">
          <source>#define directive</source>
          <target state="translated">#definir directiva</target>
        </trans-unit>
        <trans-unit id="955d9903c867672c445416826ac30c43abd1412d" translate="yes" xml:space="preserve">
          <source>#error directive</source>
          <target state="translated">Directiva #error</target>
        </trans-unit>
        <trans-unit id="90c15549724b2e95496eecca533328f69c79aa96" translate="yes" xml:space="preserve">
          <source>#if - #ifdef - #ifndef</source>
          <target state="translated">#if - #ifdef - #ifndef</target>
        </trans-unit>
        <trans-unit id="8702bf7bcf4f2a6c5c8ce91801bb4556314c7b7f" translate="yes" xml:space="preserve">
          <source>#include directive</source>
          <target state="translated">#incluye directiva</target>
        </trans-unit>
        <trans-unit id="ee70983af3214fb9cb1c6c8bb031767586301e34" translate="yes" xml:space="preserve">
          <source>#line directive</source>
          <target state="translated">directiva #line</target>
        </trans-unit>
        <trans-unit id="bd0df645673226466fc0eeda93f44ae1b4045f7f" translate="yes" xml:space="preserve">
          <source>#pragma directive</source>
          <target state="translated">Directiva #pragma</target>
        </trans-unit>
        <trans-unit id="51b62af02eb36fc9cf7725157e073948b56c90ed" translate="yes" xml:space="preserve">
          <source>#pragma once</source>
          <target state="translated">#pragma una vez</target>
        </trans-unit>
        <trans-unit id="94cec3bffa70f4ecc7e350695d60ca6f78a80312" translate="yes" xml:space="preserve">
          <source>#pragma pack</source>
          <target state="translated">#pragma pack</target>
        </trans-unit>
        <trans-unit id="fcbadf523c66f28967c5d79ec1bc2351140a8c38" translate="yes" xml:space="preserve">
          <source>&amp;copy; cppreference.com</source>
          <target state="translated">&amp;copy; cppreference.com</target>
        </trans-unit>
        <trans-unit id="f5687bed7280a56132e645e396836a7f85274f85" translate="yes" xml:space="preserve">
          <source>&amp;infin;) of the imaginary axis.</source>
          <target state="translated">&amp;infin;) del eje imaginario.</target>
        </trans-unit>
        <trans-unit id="61d747903dc6174ea868880eaa9d5c82b887cdfe" translate="yes" xml:space="preserve">
          <source>&amp;infin;,-</source>
          <target state="translated">&amp;infin;,-</target>
        </trans-unit>
        <trans-unit id="c41d83b1879caf75d3ccecb6a5198a9dcb08e4a9" translate="yes" xml:space="preserve">
          <source>&amp;int;&amp;infin;</source>
          <target state="translated">&amp;int;&amp;infin;</target>
        </trans-unit>
        <trans-unit id="3b65e0883c49d9a21d18c5fd488a526423198cf9" translate="yes" xml:space="preserve">
          <source>&amp;int;arg</source>
          <target state="translated">&amp;int;arg</target>
        </trans-unit>
        <trans-unit id="9a824a821fcd92546fd0f52e503da96fd2e6e8a0" translate="yes" xml:space="preserve">
          <source>&amp;minus;yv</source>
          <target state="translated">&amp;minus;yv</target>
        </trans-unit>
        <trans-unit id="da651efdffe8bace867b517b9b6aaa9028245da5" translate="yes" xml:space="preserve">
          <source>&amp;pi;</source>
          <target state="translated">&amp;pi;</target>
        </trans-unit>
        <trans-unit id="877392257bef230331f596c89268b8d8744067a3" translate="yes" xml:space="preserve">
          <source>&amp;pi; +</source>
          <target state="translated">&amp;pi; +</target>
        </trans-unit>
        <trans-unit id="a6aeb70dc40fa4a742dfaea4246f957644103376" translate="yes" xml:space="preserve">
          <source>&amp;pi; ;</source>
          <target state="translated">&amp;pi;;</target>
        </trans-unit>
        <trans-unit id="2473dcfb90d02e521917bf709207a5ae2bd16ca6" translate="yes" xml:space="preserve">
          <source>&amp;pi;] along the imaginary axis.</source>
          <target state="translated">&amp;pi;] a lo largo del eje imaginario.</target>
        </trans-unit>
        <trans-unit id="dce88036edca5f362180f2a96ddfbc7f3bfc6366" translate="yes" xml:space="preserve">
          <source>&amp;plusmn;d</source>
          <target state="translated">&amp;plusmn;d</target>
        </trans-unit>
        <trans-unit id="e6e3d1af9ac765f337b0711b7cf30deb7ffcdc25" translate="yes" xml:space="preserve">
          <source>&amp;plusmn;dd</source>
          <target state="translated">&amp;plusmn;dd</target>
        </trans-unit>
        <trans-unit id="2fce89049bb9943b33def8dd01bb117b9055e7b0" translate="yes" xml:space="preserve">
          <source>&amp;plusmn;u + i(y &amp;plusmn; v)</source>
          <target state="translated">&amp;plusmn; u + i (y &amp;plusmn; v)</target>
        </trans-unit>
        <trans-unit id="5cce3de67be1794154451c873a09d78f6fa27ae6" translate="yes" xml:space="preserve">
          <source>&amp;plusmn;u + iy</source>
          <target state="translated">&amp;plusmn; u + iy</target>
        </trans-unit>
        <trans-unit id="4b14e48b18475db702f82fa6db96cbada4b7ef65" translate="yes" xml:space="preserve">
          <source>&amp;radic;&amp;pi;</source>
          <target state="translated">&amp;radic;&amp;pi;</target>
        </trans-unit>
        <trans-unit id="d8ea96571a5c9178d29e08ca82df79ecb3cc4c85" translate="yes" xml:space="preserve">
          <source>&amp;radic;1-z</source>
          <target state="translated">&amp;radic;1-z</target>
        </trans-unit>
        <trans-unit id="978455560355b4a8cb833b28c9db958268a6a0c1" translate="yes" xml:space="preserve">
          <source>&amp;radic;z-1</source>
          <target state="translated">&amp;radic;z-1</target>
        </trans-unit>
        <trans-unit id="01eca34bb9b17d1b03d0e3387ce08e23f3093325" translate="yes" xml:space="preserve">
          <source>&amp;sigma;&amp;radic;2</source>
          <target state="translated">&amp;sigma;&amp;radic;2</target>
        </trans-unit>
        <trans-unit id="c272d9c4cf1097a8b57dae2c23670565752b8463" translate="yes" xml:space="preserve">
          <source>(&amp;minus;yv) + i(xv)</source>
          <target state="translated">(&amp;minus;yv) + i (xv)</target>
        </trans-unit>
        <trans-unit id="9b39e23a2f345048fa780d8d0186234fd05bc153" translate="yes" xml:space="preserve">
          <source>(&amp;minus;yv) + i(yu)</source>
          <target state="translated">(&amp;minus;yv) + i (yu)</target>
        </trans-unit>
        <trans-unit id="ed6616dfd4625d08375f75e42d054cea464326b4" translate="yes" xml:space="preserve">
          <source>(1)</source>
          <target state="translated">(1)</target>
        </trans-unit>
        <trans-unit id="0916e9c38635a2a046dd2b3f1118cc17eec9d36d" translate="yes" xml:space="preserve">
          <source>(10)</source>
          <target state="translated">(10)</target>
        </trans-unit>
        <trans-unit id="e6d7bb8c1a4abf8e85622893d4e781d0d544d01b" translate="yes" xml:space="preserve">
          <source>(11)</source>
          <target state="translated">(11)</target>
        </trans-unit>
        <trans-unit id="41e278e691e64d2c1bbca7c929e681050ea2a211" translate="yes" xml:space="preserve">
          <source>(12)</source>
          <target state="translated">(12)</target>
        </trans-unit>
        <trans-unit id="0902ac4af971870547e03b039a7e5fcecf60148a" translate="yes" xml:space="preserve">
          <source>(2)</source>
          <target state="translated">(2)</target>
        </trans-unit>
        <trans-unit id="d77df6f4a77bbd6aa02c6035a0267d136736336a" translate="yes" xml:space="preserve">
          <source>(3)</source>
          <target state="translated">(3)</target>
        </trans-unit>
        <trans-unit id="10720c7cfed258d6a1fa627a781799fd12b2cc6a" translate="yes" xml:space="preserve">
          <source>(4)</source>
          <target state="translated">(4)</target>
        </trans-unit>
        <trans-unit id="28bd264a290377b8124b9b0b38bde400148a500d" translate="yes" xml:space="preserve">
          <source>(5)</source>
          <target state="translated">(5)</target>
        </trans-unit>
        <trans-unit id="d531ab20079dd9771b54bfab648528904866b8b4" translate="yes" xml:space="preserve">
          <source>(6)</source>
          <target state="translated">(6)</target>
        </trans-unit>
        <trans-unit id="f0b422b67ebefe17c506ae529e6f54d8ccea5242" translate="yes" xml:space="preserve">
          <source>(7)</source>
          <target state="translated">(7)</target>
        </trans-unit>
        <trans-unit id="630d9ccc0aa5428d4f10037c8cbdf0d7bec5cfb3" translate="yes" xml:space="preserve">
          <source>(8)</source>
          <target state="translated">(8)</target>
        </trans-unit>
        <trans-unit id="f565b2b5f3419cfa729b792b5d948992be0d69f1" translate="yes" xml:space="preserve">
          <source>(9)</source>
          <target state="translated">(9)</target>
        </trans-unit>
        <trans-unit id="0e3f1656c84b4ea9143ca7b420c95d10ebf29ef7" translate="yes" xml:space="preserve">
          <source>(&lt;a href=&quot;translation_phases&quot;&gt;the 96 characters&lt;/a&gt; that are required to be single-byte). C supports bytes of sizes 8 bits and greater.</source>
          <target state="translated">( &lt;a href=&quot;translation_phases&quot;&gt;los 96 caracteres&lt;/a&gt; necesarios para ser de un solo byte). C admite bytes de tama&amp;ntilde;os de 8 bits y mayores.</target>
        </trans-unit>
        <trans-unit id="60d68fea4b2f4f05989693f836ee86356812d0ef" translate="yes" xml:space="preserve">
          <source>(&lt;code&gt;float&lt;/code&gt; for &lt;code&gt;float &lt;a href=&quot;../numeric/complex/imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt; for &lt;code&gt;double &lt;a href=&quot;../numeric/complex/imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;long double&lt;/code&gt; for &lt;code&gt;long double &lt;a href=&quot;../numeric/complex/imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">( &lt;code&gt;float&lt;/code&gt; para &lt;code&gt;float &lt;a href=&quot;../numeric/complex/imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;double&lt;/code&gt; para &lt;code&gt;double &lt;a href=&quot;../numeric/complex/imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;long double&lt;/code&gt; para &lt;code&gt;long double &lt;a href=&quot;../numeric/complex/imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="9c2ccc8a68bc5dd89871d5dcd185ea0a3ea3b6b6" translate="yes" xml:space="preserve">
          <source>(C11)</source>
          <target state="translated">(C11)</target>
        </trans-unit>
        <trans-unit id="c733a4fca9e6ae664ecf1dc62d189d462f57e7ba" translate="yes" xml:space="preserve">
          <source>(C11)(C11)</source>
          <target state="translated">(C11)(C11)</target>
        </trans-unit>
        <trans-unit id="39dda49007c9a46bef6ac72bec5f7b3383b64e32" translate="yes" xml:space="preserve">
          <source>(C11)(C11)(C11)</source>
          <target state="translated">(C11)(C11)(C11)</target>
        </trans-unit>
        <trans-unit id="5b5a3567d544847574d3028f0b72adbfe679c444" translate="yes" xml:space="preserve">
          <source>(C11)(deprecated in C17)</source>
          <target state="translated">(C11) (en desuso en C17)</target>
        </trans-unit>
        <trans-unit id="417acfaa59d4e6db98963a403c8972a9761cfaa2" translate="yes" xml:space="preserve">
          <source>(C95)</source>
          <target state="translated">(C95)</target>
        </trans-unit>
        <trans-unit id="27cf384f4bf7952ee84c42124381aac403a0f9c6" translate="yes" xml:space="preserve">
          <source>(C95)(C11)</source>
          <target state="translated">(C95)(C11)</target>
        </trans-unit>
        <trans-unit id="34512a7955c26c291d5939c6fb76ab3669faec94" translate="yes" xml:space="preserve">
          <source>(C95)(C95)(C95)(C11)(C11)(C11)</source>
          <target state="translated">(C95)(C95)(C95)(C11)(C11)(C11)</target>
        </trans-unit>
        <trans-unit id="08acaf1e208899a13717016cb9d28e40ef26e9c6" translate="yes" xml:space="preserve">
          <source>(C95)(C95)(C95)(C11)(C11)(C11)(C11)</source>
          <target state="translated">(C95)(C95)(C95)(C11)(C11)(C11)(C11)</target>
        </trans-unit>
        <trans-unit id="6391810db1e52cf600d149700061c68d08fbd302" translate="yes" xml:space="preserve">
          <source>(C95)(C99)</source>
          <target state="translated">(C95)(C99)</target>
        </trans-unit>
        <trans-unit id="1121c46b1b0ec2f8186203fd54f693a169618586" translate="yes" xml:space="preserve">
          <source>(C99)</source>
          <target state="translated">(C99)</target>
        </trans-unit>
        <trans-unit id="08752d6e74ba32f4122f7b9d54940d42daf1842d" translate="yes" xml:space="preserve">
          <source>(C99) If it is a declaration, it is in scope in the entire loop body, including the remainder of init_clause, the entire cond_expression, the entire iteration_expression and the entire loop_statement. Only &lt;code&gt;auto&lt;/code&gt; and &lt;code&gt;register&lt;/code&gt;&lt;a href=&quot;storage_duration&quot;&gt;storage classes&lt;/a&gt; are allowed for the variables declared in this declaration.</source>
          <target state="translated">(C99) Si se trata de una declaraci&amp;oacute;n, est&amp;aacute; dentro del alcance de todo el cuerpo del bucle, incluido el resto de init_clause, toda la cond_expression, toda la iteration_expression y todo el loop_statement. Solo se permiten &lt;a href=&quot;storage_duration&quot;&gt;clases de almacenamiento &lt;/a&gt; &lt;code&gt;auto&lt;/code&gt; m&amp;aacute;tico y de &lt;code&gt;register&lt;/code&gt; para las variables declaradas en esta declaraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="a195d4ac88b9257c28b520fefc6c334a6d57e11d" translate="yes" xml:space="preserve">
          <source>(C99)(C11)(C11)(C11)(C11)</source>
          <target state="translated">(C99)(C11)(C11)(C11)(C11)</target>
        </trans-unit>
        <trans-unit id="0ce6a7be5fa0b91aee2f9258614410ace8a1cbb6" translate="yes" xml:space="preserve">
          <source>(C99)(C95)(C99)</source>
          <target state="translated">(C99)(C95)(C99)</target>
        </trans-unit>
        <trans-unit id="026b68c3ad63a7f1546d27ed9fd3c227058da37e" translate="yes" xml:space="preserve">
          <source>(C99)(C99)</source>
          <target state="translated">(C99)(C99)</target>
        </trans-unit>
        <trans-unit id="e74bc70942ad0ce04f76e6a18f905c69af5eb09c" translate="yes" xml:space="preserve">
          <source>(C99)(C99)(C99)</source>
          <target state="translated">(C99)(C99)(C99)</target>
        </trans-unit>
        <trans-unit id="a5c103871af2eb0d422705736f6067b2c14d768e" translate="yes" xml:space="preserve">
          <source>(C99)(C99)(C99)(C11)(C11)(C11)</source>
          <target state="translated">(C99)(C99)(C99)(C11)(C11)(C11)</target>
        </trans-unit>
        <trans-unit id="23bf161681c87bfb9eb48dec5230e86f57b44d3a" translate="yes" xml:space="preserve">
          <source>(C99)(C99)(C99)(C99)(C99)</source>
          <target state="translated">(C99)(C99)(C99)(C99)(C99)</target>
        </trans-unit>
        <trans-unit id="ce17267f7c19e5b543a4f025e94a7c9cf1c2db3c" translate="yes" xml:space="preserve">
          <source>(C99)(C99)(C99)(C99)(C99)(C99)</source>
          <target state="translated">(C99)(C99)(C99)(C99)(C99)(C99)</target>
        </trans-unit>
        <trans-unit id="f737f6bdebe988c3bd5b2f301e1913bfdafcac6f" translate="yes" xml:space="preserve">
          <source>(C99)(C99)(C99)(C99)(C99)(C99)(C99)(C99)(C99)</source>
          <target state="translated">(C99)(C99)(C99)(C99)(C99)(C99)(C99)(C99)(C99)</target>
        </trans-unit>
        <trans-unit id="ff6b4e7aab6f29d8bc022c1f4cc74fffdae634c9" translate="yes" xml:space="preserve">
          <source>(C99).</source>
          <target state="translated">(C99).</target>
        </trans-unit>
        <trans-unit id="3d59ea93dc58890ee949404da3e2e1c2d3025311" translate="yes" xml:space="preserve">
          <source>(C99)&lt;a href=&quot;compound_literal&quot;&gt;compound literals&lt;/a&gt;</source>
          <target state="translated">(C99) &lt;a href=&quot;compound_literal&quot;&gt;literales compuestos&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f8b6ba8c4e646dd42451faf0f5949db160be3855" translate="yes" xml:space="preserve">
          <source>(C99)if one is declared with a tag, the other must also be declared with the same tag.</source>
          <target state="translated">(C99) si uno se declara con una etiqueta, el otro tambi&amp;eacute;n debe declararse con la misma etiqueta.</target>
        </trans-unit>
        <trans-unit id="77a5f5dc457de31934706abafc141b2e19bd509f" translate="yes" xml:space="preserve">
          <source>(Euler's number, &lt;code&gt;2.7182818&lt;/code&gt;) raised to the given power &lt;code&gt;arg&lt;/code&gt;, minus &lt;code&gt;1.0&lt;/code&gt;. This function is more accurate than the expression &lt;code&gt;&lt;a href=&quot;exp&quot;&gt;exp&lt;/a&gt;(arg)-1.0&lt;/code&gt; if &lt;code&gt;arg&lt;/code&gt; is close to zero.</source>
          <target state="translated">(N&amp;uacute;mero de Euler, &lt;code&gt;2.7182818&lt;/code&gt; ) elevado a la potencia dada &lt;code&gt;arg&lt;/code&gt; , menos &lt;code&gt;1.0&lt;/code&gt; . Esta funci&amp;oacute;n es m&amp;aacute;s precisa que la expresi&amp;oacute;n &lt;code&gt;&lt;a href=&quot;exp&quot;&gt;exp&lt;/a&gt;(arg)-1.0&lt;/code&gt; si &lt;code&gt;arg&lt;/code&gt; est&amp;aacute; cerca de cero.</target>
        </trans-unit>
        <trans-unit id="e59d7f1fa1e61b0e07ef5287b731aeafc70f540b" translate="yes" xml:space="preserve">
          <source>(Euler's number, &lt;code&gt;2.7182818&lt;/code&gt;) raised to the given power &lt;code&gt;arg&lt;/code&gt;.</source>
          <target state="translated">(N&amp;uacute;mero de Euler, &lt;code&gt;2.7182818&lt;/code&gt; ) elevado al poder dado &lt;code&gt;arg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4edd6a587d4dd003f2013d97709b966836330b9f" translate="yes" xml:space="preserve">
          <source>(NaN), which does not compare equal with anything (including itself). Multiple bit patterns represent NaNs, see &lt;code&gt;&lt;a href=&quot;../numeric/math/nan.2&quot;&gt;nan&lt;/a&gt;&lt;/code&gt;, &lt;a href=&quot;../numeric/math/nan&quot;&gt;&lt;code&gt;NAN&lt;/code&gt;&lt;/a&gt;. Note that C takes no special notice of signalling NaNs (specified by IEEE-754), and treates all NaNs as quiet.</source>
          <target state="translated">(NaN), que no se compara igual con nada (incluido &amp;eacute;l mismo). M&amp;uacute;ltiples patrones de bits representan NaNs, ver &lt;code&gt;&lt;a href=&quot;../numeric/math/nan.2&quot;&gt;nan&lt;/a&gt;&lt;/code&gt; , &lt;a href=&quot;../numeric/math/nan&quot;&gt; &lt;code&gt;NAN&lt;/code&gt; &lt;/a&gt; . Tenga en cuenta que C no toma nota especial de la se&amp;ntilde;alizaci&amp;oacute;n de NaN (especificada por IEEE-754) y trata todos los NaN como silenciosos.</target>
        </trans-unit>
        <trans-unit id="718c9a952212037934b9931393d8af18b620370b" translate="yes" xml:space="preserve">
          <source>(Note: &lt;a href=&quot;conformance&quot;&gt;Strictly conforming&lt;/a&gt; programs do not depend on any unspecified, undefined, or implementation-defined behavior).</source>
          <target state="translated">(Nota: &lt;a href=&quot;conformance&quot;&gt;los&lt;/a&gt; programas estrictamente conformes no dependen de ning&amp;uacute;n comportamiento no especificado, indefinido o definido por la implementaci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="a2defffadabf94277e88495a362e6e04c50f5b8d" translate="yes" xml:space="preserve">
          <source>(POWER, Sparc, Itanium) and</source>
          <target state="translated">(POTENCIA, Sparc, Itanium) y</target>
        </trans-unit>
        <trans-unit id="2841c6db45aa1a109c8739facf1fe8ee6ae6e97a" translate="yes" xml:space="preserve">
          <source>(a value is the meaning of the contents of an object, when interpreted as having a specific &lt;a href=&quot;compatible_type&quot;&gt;type&lt;/a&gt;).</source>
          <target state="translated">(un valor es el significado del contenido de un objeto, cuando se interpreta que tiene un &lt;a href=&quot;compatible_type&quot;&gt;tipo&lt;/a&gt; espec&amp;iacute;fico ).</target>
        </trans-unit>
        <trans-unit id="c6bf7dc1758c2eb741fb9d8e032fef809be283bd" translate="yes" xml:space="preserve">
          <source>(arg), or arcosh(arg)) on the interval [0, +&amp;infin;], is returned.</source>
          <target state="translated">(arg), o arcosh (arg)) en el intervalo [0, + &amp;infin;], se devuelve.</target>
        </trans-unit>
        <trans-unit id="11a4fbe41a9d18dd973e5dd71e62cb1c18a60e2d" translate="yes" xml:space="preserve">
          <source>(arg), or arsinh(arg)), is returned.</source>
          <target state="translated">(arg), o arsinh (arg)), se devuelve.</target>
        </trans-unit>
        <trans-unit id="9fd36d7a2124812bda35cc828fa3192dcba7683b" translate="yes" xml:space="preserve">
          <source>(arg), or artanh(arg)), is returned.</source>
          <target state="translated">(arg) o artanh (arg)), se devuelve.</target>
        </trans-unit>
        <trans-unit id="67c957a5c36d0bcbc76def9f13b445d557deac80" translate="yes" xml:space="preserve">
          <source>(as with relational operators, pointers to objects that aren't elements of any array behave as pointers to elements of arrays of size 1).</source>
          <target state="translated">(Al igual que con los operadores relacionales, los punteros a objetos que no son elementos de ninguna matriz se comportan como punteros a elementos de matrices de tama&amp;ntilde;o 1).</target>
        </trans-unit>
        <trans-unit id="4bdece1e9dc9d76a30e62baf68885afa25466405" translate="yes" xml:space="preserve">
          <source>(class)</source>
          <target state="translated">(class)</target>
        </trans-unit>
        <trans-unit id="5065a725ae1556e223b1e0a38fc5cd8619ef05e2" translate="yes" xml:space="preserve">
          <source>(constant)</source>
          <target state="translated">(constant)</target>
        </trans-unit>
        <trans-unit id="ac957d7960f9c4da26f8337848f7582cc0a87ae5" translate="yes" xml:space="preserve">
          <source>(cos(y) + i sin(y)).</source>
          <target state="translated">(cos (y) + i sen (y)).</target>
        </trans-unit>
        <trans-unit id="dc11ef8438c2a43129c2b72cdf1be00c7ed27750" translate="yes" xml:space="preserve">
          <source>(deprecated in C17)</source>
          <target state="translated">(en desuso en C17)</target>
        </trans-unit>
        <trans-unit id="952b250384597c909ce5e439dd2223ad8acd846d" translate="yes" xml:space="preserve">
          <source>(dynamic memory TR)</source>
          <target state="translated">(memoria din&amp;aacute;mica TR)</target>
        </trans-unit>
        <trans-unit id="5566fa76456a1a91a12eef14ca044076c12ac048" translate="yes" xml:space="preserve">
          <source>(e.g. in &lt;code&gt;1+2*3&lt;/code&gt;, the operands of operator+ are the subexpression &lt;code&gt;2*3&lt;/code&gt; and the primary expression &lt;code&gt;1&lt;/code&gt;).</source>
          <target state="translated">(por ejemplo, en &lt;code&gt;1+2*3&lt;/code&gt; , los operandos del operador + son la subexpresi&amp;oacute;n &lt;code&gt;2*3&lt;/code&gt; y la expresi&amp;oacute;n primaria &lt;code&gt;1&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="263e4445ee6e8a9b5ffbc3ad4fdafc9fa40f62d7" translate="yes" xml:space="preserve">
          <source>(enum)</source>
          <target state="translated">(enum)</target>
        </trans-unit>
        <trans-unit id="cdcfe4ea535829168aec01a8bb7e96fe367a58c4" translate="yes" xml:space="preserve">
          <source>(follows) &lt;code&gt;rhs&lt;/code&gt;.</source>
          <target state="translated">(sigue) &lt;code&gt;rhs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="22a4704e45064ecaff2d60805ed3e3ee871d2009" translate="yes" xml:space="preserve">
          <source>(for &lt;code&gt;sprintf_s&lt;/code&gt; only), the string to be stored in &lt;code&gt;buffer&lt;/code&gt; (including the trailing null) would be exceed &lt;code&gt;bufsz&lt;/code&gt;</source>
          <target state="translated">( solo para &lt;code&gt;sprintf_s&lt;/code&gt; ), la cadena que se almacenar&amp;aacute; en el &lt;code&gt;buffer&lt;/code&gt; (incluido el nulo final) ser&amp;iacute;a superior a &lt;code&gt;bufsz&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7bbd84c5c39800ff7d84476ea2104f1e8331688e" translate="yes" xml:space="preserve">
          <source>(for &lt;code&gt;vsprintf_s&lt;/code&gt; only), the string to be stored in &lt;code&gt;buffer&lt;/code&gt; (including the trailing null)) would be exceed &lt;code&gt;bufsz&lt;/code&gt;</source>
          <target state="translated">( solo para &lt;code&gt;vsprintf_s&lt;/code&gt; ), la cadena que se almacenar&amp;aacute; en el &lt;code&gt;buffer&lt;/code&gt; (incluido el nulo final)) exceder&amp;iacute;a &lt;code&gt;bufsz&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d5426ff48c08217b237357d25b0aeeec3096d246" translate="yes" xml:space="preserve">
          <source>(for &lt;code&gt;vswprintf_s&lt;/code&gt; only), the string to be stored in &lt;code&gt;buffer&lt;/code&gt; (including the trailing wide null) would be exceed &lt;code&gt;bufsz&lt;/code&gt;</source>
          <target state="translated">( solo para &lt;code&gt;vswprintf_s&lt;/code&gt; ), la cadena que se almacenar&amp;aacute; en el &lt;code&gt;buffer&lt;/code&gt; (incluido el nulo ancho final) ser&amp;iacute;a superior a &lt;code&gt;bufsz&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8a12c15cdf4eff28ac4acc67fb2d6770e85d42c2" translate="yes" xml:space="preserve">
          <source>(for example, both parameters of &lt;code&gt;&lt;a href=&quot;math/pow&quot;&gt;pow&lt;/a&gt;&lt;/code&gt; are generic parameters, but only the first parameter of &lt;code&gt;&lt;a href=&quot;math/scalbn&quot;&gt;scalbn&lt;/a&gt;&lt;/code&gt; is a generic parameter).</source>
          <target state="translated">(por ejemplo, ambos par&amp;aacute;metros de &lt;code&gt;&lt;a href=&quot;math/pow&quot;&gt;pow&lt;/a&gt;&lt;/code&gt; son par&amp;aacute;metros gen&amp;eacute;ricos, pero solo el primer par&amp;aacute;metro de &lt;code&gt;&lt;a href=&quot;math/scalbn&quot;&gt;scalbn&lt;/a&gt;&lt;/code&gt; es un par&amp;aacute;metro gen&amp;eacute;rico).</target>
        </trans-unit>
        <trans-unit id="bbe03abe60df3921bf1b1dabe87cd3538fa41617" translate="yes" xml:space="preserve">
          <source>(function macro)</source>
          <target state="translated">(macro de funci&amp;oacute;n)</target>
        </trans-unit>
        <trans-unit id="d720d1479fef9c06c2fa4729f4fff424550c2ed8" translate="yes" xml:space="preserve">
          <source>(function)</source>
          <target state="translated">(function)</target>
        </trans-unit>
        <trans-unit id="ed7dcdaf04f0e96a1116bec307ad86fcff52b6ef" translate="yes" xml:space="preserve">
          <source>(if present in the translation unit) or the</source>
          <target state="translated">(si est&amp;aacute; presente en la unidad de traducci&amp;oacute;n) o el</target>
        </trans-unit>
        <trans-unit id="c2858a7af676acf1586a51e91e4359d7ba6ce7a6" translate="yes" xml:space="preserve">
          <source>(keyword macro)</source>
          <target state="translated">(macro de palabras clave)</target>
        </trans-unit>
        <trans-unit id="74c30a64a845fec0504be78d754393306a373980" translate="yes" xml:space="preserve">
          <source>(macro constant)</source>
          <target state="translated">(constante macro)</target>
        </trans-unit>
        <trans-unit id="cfcb76465321134e894b8c3083d0b2a7929cd09d" translate="yes" xml:space="preserve">
          <source>(macro variable)</source>
          <target state="translated">(variable macro)</target>
        </trans-unit>
        <trans-unit id="ab5acdcc0fb6bbbfc118091779c8e2b261fea6e4" translate="yes" xml:space="preserve">
          <source>(no macro)</source>
          <target state="translated">(sin macro)</target>
        </trans-unit>
        <trans-unit id="3c6b183d348f955357b33a3fba45083e98ab8125" translate="yes" xml:space="preserve">
          <source>(none)</source>
          <target state="translated">(none)</target>
        </trans-unit>
        <trans-unit id="8ad5520ebd97d40c8e86735b481554753b1f56e3" translate="yes" xml:space="preserve">
          <source>(none).</source>
          <target state="translated">(none).</target>
        </trans-unit>
        <trans-unit id="70a2349ef433c293c653733e8acd91ff4351ce20" translate="yes" xml:space="preserve">
          <source>(on platforms where null pointers and floating zeroes have all-bit-zero representations, this form of initialization for statics is normally implemented by allocating them in the .bss section of the program image)</source>
          <target state="translated">(en plataformas donde los punteros nulos y los ceros flotantes tienen representaciones de todos los bits cero, esta forma de inicializaci&amp;oacute;n para las estad&amp;iacute;sticas normalmente se implementa asign&amp;aacute;ndolas en la secci&amp;oacute;n .bss de la imagen del programa)</target>
        </trans-unit>
        <trans-unit id="38112942068b45b814445b63ea6dc3430b339f9f" translate="yes" xml:space="preserve">
          <source>(only for &lt;code&gt;swprintf_s&lt;/code&gt;) the number of wide characters to be written, including the null, would exceed &lt;code&gt;bufsz&lt;/code&gt;.</source>
          <target state="translated">(solo para &lt;code&gt;swprintf_s&lt;/code&gt; ) el n&amp;uacute;mero de caracteres anchos que se escribir&amp;aacute;n, incluido el nulo, exceder&amp;iacute;a &lt;code&gt;bufsz&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5698533a10e4551451a486a8ea1006fd414990b0" translate="yes" xml:space="preserve">
          <source>(only when declaring functions), zero or more function specifiers: &lt;a href=&quot;inline&quot;&gt;inline&lt;/a&gt;, &lt;a href=&quot;_noreturn&quot;&gt;_Noreturn&lt;/a&gt;</source>
          <target state="translated">(solo al declarar funciones), cero o m&amp;aacute;s especificadores de funci&amp;oacute;n: en &lt;a href=&quot;inline&quot;&gt;l&amp;iacute;nea&lt;/a&gt; , &lt;a href=&quot;_noreturn&quot;&gt;_Noreturn&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8b0163568bbc6f5414868ce09fde7187008bb0b0" translate="yes" xml:space="preserve">
          <source>(operator macro)</source>
          <target state="translated">(macro operador)</target>
        </trans-unit>
        <trans-unit id="b16c7ac6faff07d7e255da685e52bd66d3bf1575" translate="yes" xml:space="preserve">
          <source>(optional)</source>
          <target state="translated">(optional)</target>
        </trans-unit>
        <trans-unit id="deb1825933fe3c9bf66d3dfb59330dd59f24957d" translate="yes" xml:space="preserve">
          <source>(optional) assignment-suppressing character &lt;code&gt;*&lt;/code&gt;. If this option is present, the function does not assign the result of the conversion to any receiving argument.</source>
          <target state="translated">(opcional) car&amp;aacute;cter supresor de asignaci&amp;oacute;n &lt;code&gt;*&lt;/code&gt; . Si esta opci&amp;oacute;n est&amp;aacute; presente, la funci&amp;oacute;n no asigna el resultado de la conversi&amp;oacute;n a ning&amp;uacute;n argumento de recepci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="87c3fc6b1ace0350438c728ae7dad2fd114adeb1" translate="yes" xml:space="preserve">
          <source>(optional) integer number (greater than zero) that specifies</source>
          <target state="translated">(opcional) n&amp;uacute;mero entero (mayor que cero) que especifica</target>
        </trans-unit>
        <trans-unit id="e0f6d81c2c3b1516e07c96f573ffe432220feae7" translate="yes" xml:space="preserve">
          <source>(optional) integer value or &lt;code&gt;*&lt;/code&gt; that specifies minimum field width. The result is padded with</source>
          <target state="translated">(opcional) valor entero o &lt;code&gt;*&lt;/code&gt; que especifica el ancho m&amp;iacute;nimo del campo. El resultado se rellena con</target>
        </trans-unit>
        <trans-unit id="1df32ec6c02c37e8aad95b2c28acdb57c3cbd370" translate="yes" xml:space="preserve">
          <source>(optional) one or more flags that modify the behavior of the conversion:</source>
          <target state="translated">(opcional) uno o m&amp;aacute;s indicadores que modifican el comportamiento de la conversi&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="1f62635b50cfad604832a862363b696dfc559781" translate="yes" xml:space="preserve">
          <source>(optional) plus or minus sign</source>
          <target state="translated">(opcional) signo m&amp;aacute;s o menos</target>
        </trans-unit>
        <trans-unit id="6753603453b7e70457c252ee87431112718d0fe3" translate="yes" xml:space="preserve">
          <source>(optional) prefix (&lt;code&gt;0&lt;/code&gt;) indicating octal base (applies only when the base is &lt;code&gt;8&lt;/code&gt; or &lt;code&gt;​0​&lt;/code&gt;)</source>
          <target state="translated">(opcional) prefijo ( &lt;code&gt;0&lt;/code&gt; ) que indica la base octal (s&amp;oacute;lo se aplica cuando la base es &lt;code&gt;8&lt;/code&gt; o &lt;code&gt;​0​&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="38a0344380df2361cbf6a9087734211fbab33629" translate="yes" xml:space="preserve">
          <source>(optional) prefix (&lt;code&gt;0x&lt;/code&gt; or &lt;code&gt;0X&lt;/code&gt;) indicating hexadecimal base (applies only when the base is &lt;code&gt;16&lt;/code&gt; or &lt;code&gt;​0​&lt;/code&gt;)</source>
          <target state="translated">(opcional) prefijo ( &lt;code&gt;0x&lt;/code&gt; o &lt;code&gt;0X&lt;/code&gt; ) que indica la base hexadecimal (s&amp;oacute;lo se aplica cuando la base es &lt;code&gt;16&lt;/code&gt; o &lt;code&gt;​0​&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="329760e773c6af94aa67c37c019abf1407c04a37" translate="yes" xml:space="preserve">
          <source>(optional)&lt;code&gt;.&lt;/code&gt; followed by integer number or &lt;code&gt;*&lt;/code&gt;, or neither that specifies</source>
          <target state="translated">(opcional) &lt;code&gt;.&lt;/code&gt; seguido de un n&amp;uacute;mero entero o &lt;code&gt;*&lt;/code&gt; , o ninguno que especifique</target>
        </trans-unit>
        <trans-unit id="e6dd0268ccf821e4b1344a05da773ab9781732f2" translate="yes" xml:space="preserve">
          <source>(optional)&lt;code&gt;e&lt;/code&gt; or &lt;code&gt;E&lt;/code&gt; followed with optional minus or plus sign and nonempty sequence of decimal digits (defines exponent)</source>
          <target state="translated">(opcional) &lt;code&gt;e&lt;/code&gt; o &lt;code&gt;E&lt;/code&gt; seguido con un signo menos o m&amp;aacute;s opcional y una secuencia no vac&amp;iacute;a de d&amp;iacute;gitos decimales (define exponente)</target>
        </trans-unit>
        <trans-unit id="94025850ea5a02c849e26f51c369ad4ae1907a4f" translate="yes" xml:space="preserve">
          <source>(optional)&lt;code&gt;p&lt;/code&gt; or &lt;code&gt;P&lt;/code&gt; followed with optional minus or plus sign and nonempty sequence of decimal digits (defines exponent)</source>
          <target state="translated">(opcional) &lt;code&gt;p&lt;/code&gt; o &lt;code&gt;P&lt;/code&gt; seguido con signo opcional menos o m&amp;aacute;s y secuencia no vac&amp;iacute;a de d&amp;iacute;gitos decimales (define exponente)</target>
        </trans-unit>
        <trans-unit id="e38d649253dd48ff2f57d808ee23787436ac9022" translate="yes" xml:space="preserve">
          <source>(positive and negative), see &lt;a href=&quot;../numeric/math/infinity&quot;&gt;&lt;code&gt;INFINITY&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">(positivo y negativo), vea &lt;a href=&quot;../numeric/math/infinity&quot;&gt; &lt;code&gt;INFINITY&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0b1d3698459345ff4fa76e7e4d4193b72278d212" translate="yes" xml:space="preserve">
          <source>(precedes) &lt;code&gt;rhs&lt;/code&gt;.</source>
          <target state="translated">(precede) &lt;code&gt;rhs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="62d62242636e37f9222ae8775fd68ef0d989cdb3" translate="yes" xml:space="preserve">
          <source>(provided only if the implementation directly supports the type)</source>
          <target state="translated">(proporcionado solo si la implementaci&amp;oacute;n admite directamente el tipo)</target>
        </trans-unit>
        <trans-unit id="796614b6db3defa8f6626d01fccd06a3767b301e" translate="yes" xml:space="preserve">
          <source>(public member object)</source>
          <target state="translated">(objeto de miembro p&amp;uacute;blico)</target>
        </trans-unit>
        <trans-unit id="d469ed89d723e8a9c5a844983dd536fc2d41ace6" translate="yes" xml:space="preserve">
          <source>(removed in C11)</source>
          <target state="translated">(eliminado en C11)</target>
        </trans-unit>
        <trans-unit id="357aed91b4096f126f6eadd482cc2ac031962810" translate="yes" xml:space="preserve">
          <source>(removed in C11)(since C11)</source>
          <target state="translated">(eliminado en C11) (desde C11)</target>
        </trans-unit>
        <trans-unit id="6a5392a822cc666c6892359a5edf283295ae8bb3" translate="yes" xml:space="preserve">
          <source>(see &lt;a href=&quot;declarations&quot;&gt;declarations&lt;/a&gt;) as would be used to declare a single object or function of this type, except that the identifier is omitted:</source>
          <target state="translated">(ver &lt;a href=&quot;declarations&quot;&gt;declaraciones&lt;/a&gt; ) como se usar&amp;iacute;a para declarar un solo objeto o funci&amp;oacute;n de este tipo, excepto que se omite el identificador:</target>
        </trans-unit>
        <trans-unit id="528b4d2cec744d88391d5ec0b5975b6c8265a2f5" translate="yes" xml:space="preserve">
          <source>(see above)</source>
          <target state="translated">(v&amp;eacute;ase m&amp;aacute;s arriba)</target>
        </trans-unit>
        <trans-unit id="a4b2afe3f8a4473cdca5cbdb0fc7a2144ba8b049" translate="yes" xml:space="preserve">
          <source>(see below) is implicitly converted to the type of the operand with the greater</source>
          <target state="translated">(ver abajo) se convierte impl&amp;iacute;citamente al tipo de operando con el mayor</target>
        </trans-unit>
        <trans-unit id="7f9fb955327929bf88648f76040f736dc149e29b" translate="yes" xml:space="preserve">
          <source>(see below), and each argument of type &lt;code&gt;float&lt;/code&gt; is implicitly converted to the type &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">(ver abajo), y cada argumento de tipo &lt;code&gt;float&lt;/code&gt; se convierte impl&amp;iacute;citamente al tipo &lt;code&gt;double&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c5332d4d62d8b27fd936cafd05bfd71f38b8cf6" translate="yes" xml:space="preserve">
          <source>(see below), which includes the values of explicitly named constants (</source>
          <target state="translated">(ver m&amp;aacute;s abajo), que incluye los valores de constantes nombradas expl&amp;iacute;citamente (</target>
        </trans-unit>
        <trans-unit id="3dbd8f694ee5f7d827b82f06e9ded015648c4ad7" translate="yes" xml:space="preserve">
          <source>(see below). Then</source>
          <target state="translated">(vea abajo). Luego</target>
        </trans-unit>
        <trans-unit id="f5d6cc2174db4f7905a73730e867e020dfcacecd" translate="yes" xml:space="preserve">
          <source>(see discussion below). That default can hurt performance, but the library's atomic operations can be given an additional &lt;code&gt;memory_order&lt;/code&gt; argument to specify the exact constraints, beyond atomicity, that the compiler and processor must enforce for that operation.</source>
          <target state="translated">(ver discusi&amp;oacute;n m&amp;aacute;s abajo). Ese valor predeterminado puede da&amp;ntilde;ar el rendimiento, pero las operaciones at&amp;oacute;micas de la biblioteca pueden recibir un argumento adicional de &lt;code&gt;memory_order&lt;/code&gt; para especificar las restricciones exactas, m&amp;aacute;s all&amp;aacute; de la atomicidad, que el compilador y el procesador deben imponer para esa operaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="9a3881cc1036ec5d39ed0c327f4f7f0894869e69" translate="yes" xml:space="preserve">
          <source>(since C11)</source>
          <target state="translated">(desde C11)</target>
        </trans-unit>
        <trans-unit id="210d241929a18f0618a56dca1b5a8b7a5a4435b5" translate="yes" xml:space="preserve">
          <source>(since C17)</source>
          <target state="translated">(desde C17)</target>
        </trans-unit>
        <trans-unit id="183332ea175af61cdda6a3d19fb711fb961d96fc" translate="yes" xml:space="preserve">
          <source>(since C2x)</source>
          <target state="translated">(desde C2x)</target>
        </trans-unit>
        <trans-unit id="bea96c38cfa69424ce16fd91c7d115847e5e4e71" translate="yes" xml:space="preserve">
          <source>(since C95)</source>
          <target state="translated">(desde C95)</target>
        </trans-unit>
        <trans-unit id="682264754722334fb98dbc7659ca6ca033b487f7" translate="yes" xml:space="preserve">
          <source>(since C99)</source>
          <target state="translated">(desde C99)</target>
        </trans-unit>
        <trans-unit id="6891bed26da97134f76780399ac9476603236e7b" translate="yes" xml:space="preserve">
          <source>(space)</source>
          <target state="translated">(space)</target>
        </trans-unit>
        <trans-unit id="6f4d2a86f4c0ce3992eda24b7569c5cdfc27a172" translate="yes" xml:space="preserve">
          <source>(struct)</source>
          <target state="translated">(struct)</target>
        </trans-unit>
        <trans-unit id="9c1ef87795af2d4ef28a2187320bc14c504e1d4c" translate="yes" xml:space="preserve">
          <source>(that is, may be used) only in some possibly discontiguous portion of the source code called its</source>
          <target state="translated">(es decir, puede usarse) solo en alguna parte posiblemente no contigua del c&amp;oacute;digo fuente llamado</target>
        </trans-unit>
        <trans-unit id="79fc13844267884559168ec5969f69e8858db0f0" translate="yes" xml:space="preserve">
          <source>(typedef)</source>
          <target state="translated">(typedef)</target>
        </trans-unit>
        <trans-unit id="4abe2ade558dafde255b1ded803dfb56c35f482d" translate="yes" xml:space="preserve">
          <source>(until C++11)</source>
          <target state="translated">(hasta C ++ 11)</target>
        </trans-unit>
        <trans-unit id="021488cb3e37c324d85d81aa9a23cbe85e7b25a0" translate="yes" xml:space="preserve">
          <source>(until C11)</source>
          <target state="translated">(hasta C11)</target>
        </trans-unit>
        <trans-unit id="3e9eb9c63f0d7cc5b97f9f6a9e55d7577fcb0806" translate="yes" xml:space="preserve">
          <source>(until C99)</source>
          <target state="translated">(hasta C99)</target>
        </trans-unit>
        <trans-unit id="bf90d29f81215404327eb9f0cc8b68ce99ddb106" translate="yes" xml:space="preserve">
          <source>(where n=base) integer number representation and converts them to an integer value. The valid integer value consists of the following parts:</source>
          <target state="translated">(donde n = base) representaci&amp;oacute;n de n&amp;uacute;mero entero y los convierte en un valor entero. El valor entero v&amp;aacute;lido consta de las siguientes partes:</target>
        </trans-unit>
        <trans-unit id="7e37541dd44682c81f7171ff351e8c0af1da91a5" translate="yes" xml:space="preserve">
          <source>(where n=base) unsigned integer number representation and converts them to an integer value. The valid unsigned integer value consists of the following parts:</source>
          <target state="translated">(donde n = base) representaci&amp;oacute;n de n&amp;uacute;mero entero sin signo y los convierte en un valor entero. El valor entero sin signo v&amp;aacute;lido consta de las siguientes partes:</target>
        </trans-unit>
        <trans-unit id="3953c43313ea14f06960efcff7e18cd5de15cebc" translate="yes" xml:space="preserve">
          <source>(which may be a multibyte character set such as UTF-8, as long as all 96 characters from the</source>
          <target state="translated">(que puede ser un conjunto de caracteres multibyte como UTF-8, siempre que los 96 caracteres del</target>
        </trans-unit>
        <trans-unit id="3135ef3353dac478238a85ec1d309782466e1667" translate="yes" xml:space="preserve">
          <source>(which may be any type other than array or function type), and the</source>
          <target state="translated">(que puede ser cualquier tipo que no sea matriz o tipo de funci&amp;oacute;n), y el</target>
        </trans-unit>
        <trans-unit id="4c44b571d54369fd08ac2c0437f712eddc1c78f3" translate="yes" xml:space="preserve">
          <source>(which must be a complete object type), and the</source>
          <target state="translated">(que debe ser un tipo de objeto completo) y el</target>
        </trans-unit>
        <trans-unit id="38b7c53f11449649cd2d812642cdbccf0a48f654" translate="yes" xml:space="preserve">
          <source>(x &amp;plusmn; u) &amp;plusmn; iv</source>
          <target state="translated">(x &amp;plusmn; u) &amp;plusmn; iv</target>
        </trans-unit>
        <trans-unit id="f0d30473e944699150bfb7c5cc78d82d160494e1" translate="yes" xml:space="preserve">
          <source>(x &amp;plusmn; u) + i(y &amp;plusmn; v)</source>
          <target state="translated">(x &amp;plusmn; u) + i (y &amp;plusmn; v)</target>
        </trans-unit>
        <trans-unit id="6405638c61de281da67d67e62ec8df3581aa92f4" translate="yes" xml:space="preserve">
          <source>(x &amp;plusmn; u) + iy</source>
          <target state="translated">(x &amp;plusmn; u) + iy</target>
        </trans-unit>
        <trans-unit id="15fbe2a6877c34c6c89d32bb49714706aeb341c6" translate="yes" xml:space="preserve">
          <source>(x/u) + i(y/u)</source>
          <target state="translated">(x / u) + i (y / u)</target>
        </trans-unit>
        <trans-unit id="424e0c30779bc969b12dd822363cb2d4ca5473eb" translate="yes" xml:space="preserve">
          <source>(x86, x86_64): a big-endian platform stores the most significant byte at the lowest address of the region of storage occupied by the integer, a little-endian platform stores the least significant byte at the lowest address. See &lt;a href=&quot;https://en.wikipedia.org/wiki/Endianness&quot;&gt;Endianness&lt;/a&gt; for detail. See also example below.</source>
          <target state="translated">(x86, x86_64): una plataforma big-endian almacena el byte m&amp;aacute;s significativo en la direcci&amp;oacute;n m&amp;aacute;s baja de la regi&amp;oacute;n de almacenamiento ocupada por el entero, una plataforma little-endian almacena el byte menos significativo en la direcci&amp;oacute;n m&amp;aacute;s baja. Ver &lt;a href=&quot;https://en.wikipedia.org/wiki/Endianness&quot;&gt;Endianness&lt;/a&gt; para m&amp;aacute;s detalles. Ver tambi&amp;eacute;n el ejemplo a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="815979045b8907176a7e884f5bfa1c6d9cc4749d" translate="yes" xml:space="preserve">
          <source>(xu) + i(xv)</source>
          <target state="translated">(xu) + i (xv)</target>
        </trans-unit>
        <trans-unit id="193cf4948a69b12c45551425a0efa2b1c12cce2f" translate="yes" xml:space="preserve">
          <source>(xu) + i(yu)</source>
          <target state="translated">(xu) + i (yu)</target>
        </trans-unit>
        <trans-unit id="de059407122eda63c84f99856f0f4738bda94130" translate="yes" xml:space="preserve">
          <source>(y/v) + i(&amp;minus;x/v)</source>
          <target state="translated">(y / v) + i (&amp;minus;x / v)</target>
        </trans-unit>
        <trans-unit id="e7064f0b80f61dbc65915311032d27baa569ae2a" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>
        </trans-unit>
        <trans-unit id="9b43fc75ffa2875ad5c3474c826211b5ec1a072c" translate="yes" xml:space="preserve">
          <source>)  For any z, asin(z) = acos(-z) -</source>
          <target state="translated">) Para cualquier z, asin (z) = acos (-z) -</target>
        </trans-unit>
        <trans-unit id="4276c449b12076a975a340699186df77099a32e6" translate="yes" xml:space="preserve">
          <source>)  For any z, asinh(z) =</source>
          <target state="translated">) Para cualquier z, asinh (z) =</target>
        </trans-unit>
        <trans-unit id="2e16a8a8ba911a78e3c2011c810d8169be2b6ab4" translate="yes" xml:space="preserve">
          <source>) and (</source>
          <target state="translated">) y (</target>
        </trans-unit>
        <trans-unit id="fab479966c182da11ddf2d25a440ef6fc3d8e951" translate="yes" xml:space="preserve">
          <source>) compares equal to 0. The repetition occurs regardless of whether the loop body is entered normally or by a &lt;a href=&quot;goto&quot;&gt;goto&lt;/a&gt; into the middle of statement.</source>
          <target state="translated">) se compara igual a 0. La repetici&amp;oacute;n se produce independientemente de si el cuerpo del bucle se ingresa normalmente o por un &lt;a href=&quot;goto&quot;&gt;goto&lt;/a&gt; en el medio de la declaraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="cca8bc240378ad066c91d75749b84f54e6dd594f" translate="yes" xml:space="preserve">
          <source>) compares equal to zero. The repetition occurs regardless of whether the loop body is entered normally or by a &lt;a href=&quot;goto&quot;&gt;goto&lt;/a&gt; into the middle of statement.</source>
          <target state="translated">) se compara igual a cero. La repetici&amp;oacute;n ocurre independientemente de si el cuerpo del bucle se ingresa normalmente o por un &lt;a href=&quot;goto&quot;&gt;goto&lt;/a&gt; en el medio de la declaraci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="381af632661038d250fa49a0a1fc80a618828820" translate="yes" xml:space="preserve">
          <source>) has higher priority than its case or variant. Within an equivalence class, lowercase characters collate before their uppercase equivalents and locale-specific order may apply to the characters with diacritics. In some locales, groups of characters compare as single</source>
          <target state="translated">) tiene mayor prioridad que su caso o variante. Dentro de una clase de equivalencia, los caracteres en min&amp;uacute;sculas se clasifican antes que sus equivalentes en may&amp;uacute;sculas y el orden espec&amp;iacute;fico de la localidad puede aplicarse a los caracteres con signos diacr&amp;iacute;ticos. En algunos entornos locales, los grupos de caracteres se comparan como solteros</target>
        </trans-unit>
        <trans-unit id="e0b1cc4d603c473338dcd2684c1e9caff9c233db" translate="yes" xml:space="preserve">
          <source>) is returned.</source>
          <target state="translated">) es regresado.</target>
        </trans-unit>
        <trans-unit id="4f9a8c9e517dc4f5af60a3efda74d8deb6d583a5" translate="yes" xml:space="preserve">
          <source>) is the probability that a measurement whose errors are subject to a normal distribution with standard deviation &amp;sigma; is less than x away from the mean value.</source>
          <target state="translated">) es la probabilidad de que una medici&amp;oacute;n cuyos errores est&amp;aacute;n sujetos a una distribuci&amp;oacute;n normal con desviaci&amp;oacute;n est&amp;aacute;ndar &amp;sigma; est&amp;eacute; a menos de x del valor medio.</target>
        </trans-unit>
        <trans-unit id="5b51135a2add737344ecb05586782727da2f8e19" translate="yes" xml:space="preserve">
          <source>) logarithm (ln(x))</source>
          <target state="translated">) logaritmo (ln (x))</target>
        </trans-unit>
        <trans-unit id="af1aa3ea6cfef390696609a7ad53159e28f9a72a" translate="yes" xml:space="preserve">
          <source>) logarithm (log&lt;sub&gt;10&lt;/sub&gt;(x))</source>
          <target state="translated">) logaritmo (log &lt;sub&gt;10&lt;/sub&gt; (x))</target>
        </trans-unit>
        <trans-unit id="e0ce3f516c3fe71021bc31ec17cb9d473f8e2047" translate="yes" xml:space="preserve">
          <source>) logarithm of 1 plus the given number (ln(1+x))</source>
          <target state="translated">) logaritmo de 1 m&amp;aacute;s el n&amp;uacute;mero dado (ln (1 + x))</target>
        </trans-unit>
        <trans-unit id="561ca0daa1737d7479e576210d7d40aa84e07390" translate="yes" xml:space="preserve">
          <source>) logarithm of &lt;code&gt;arg&lt;/code&gt; (ln(arg) or log</source>
          <target state="translated">) logaritmo de &lt;code&gt;arg&lt;/code&gt; (ln (arg) o log</target>
        </trans-unit>
        <trans-unit id="3caeb7b0b56525a5824137176a20888279cb6a65" translate="yes" xml:space="preserve">
          <source>) logarithm of &lt;code&gt;arg&lt;/code&gt; (log</source>
          <target state="translated">) logaritmo de &lt;code&gt;arg&lt;/code&gt; (log</target>
        </trans-unit>
        <trans-unit id="f8ffe2623f614106cc901cdc10bdea82d232b402" translate="yes" xml:space="preserve">
          <source>) logarithm of &lt;code&gt;arg&lt;/code&gt;.</source>
          <target state="translated">) logaritmo de &lt;code&gt;arg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="949f932f9e9f0c6dbba5ba6372d11a42630c5b31" translate="yes" xml:space="preserve">
          <source>) logarithm of &lt;code&gt;z&lt;/code&gt; with branch cut along the negative real axis.</source>
          <target state="translated">) logaritmo de &lt;code&gt;z&lt;/code&gt; con corte de rama a lo largo del eje real negativo.</target>
        </trans-unit>
        <trans-unit id="6a786e1db684c32b3aaf659ddc53bfeeede49839" translate="yes" xml:space="preserve">
          <source>) logarithm of the gamma function</source>
          <target state="translated">) logaritmo de la funci&amp;oacute;n gamma</target>
        </trans-unit>
        <trans-unit id="302862f149d9171a887c667d9aae807fe5a7afe9" translate="yes" xml:space="preserve">
          <source>) to be executed repeatedly until the expression (also called</source>
          <target state="translated">) para ejecutarse repetidamente hasta la expresi&amp;oacute;n (tambi&amp;eacute;n llamada</target>
        </trans-unit>
        <trans-unit id="86f9feb04688f1b85b7fe6b32d8878ce89606ed2" translate="yes" xml:space="preserve">
          <source>)) in the range [-&amp;pi; ; +&amp;pi;] radians, is returned.</source>
          <target state="translated">)) en el rango [-&amp;pi;; + &amp;pi;] radianes, se devuelve.</target>
        </trans-unit>
        <trans-unit id="b2a62dc7cea8d4e84b5ddb6e1652611e8ab1dc44" translate="yes" xml:space="preserve">
          <source>), and |x+iy| = &amp;radic;x2</source>
          <target state="translated">) y | x + iy | = &amp;radic;x2</target>
        </trans-unit>
        <trans-unit id="2212203767ff4b769464feb44407fb2b22b49579" translate="yes" xml:space="preserve">
          <source>), as the programmer assumes the responsibility of limiting the range of the operands and dealing with the infinities.</source>
          <target state="translated">), ya que el programador asume la responsabilidad de limitar el rango de los operandos y tratar con los infinitos.</target>
        </trans-unit>
        <trans-unit id="1ea1572fd4aad9b1896018924a46090b39b3d665" translate="yes" xml:space="preserve">
          <source>), the behavior is undefined if.</source>
          <target state="translated">), el comportamiento es indefinido si.</target>
        </trans-unit>
        <trans-unit id="053fc5f6bb0cc49c7870d803a719e1ee1e0cd680" translate="yes" xml:space="preserve">
          <source>). Function declarations (unlike &lt;a href=&quot;function_definition&quot;&gt;definitions&lt;/a&gt;) may appear at block scope as well as file scope.</source>
          <target state="translated">) Las declaraciones de funciones (a diferencia de las &lt;a href=&quot;function_definition&quot;&gt;definiciones&lt;/a&gt; ) pueden aparecer tanto en el alcance del bloque como en el alcance del archivo.</target>
        </trans-unit>
        <trans-unit id="31bb25d10b9a89356f8b9f13339946ddb8b94755" translate="yes" xml:space="preserve">
          <source>). If the size of the new type is larger than the size of the last-written type, the contents of the excess bytes are unspecified (and may be a trap representation).</source>
          <target state="translated">) Si el tama&amp;ntilde;o del nuevo tipo es mayor que el tama&amp;ntilde;o del &amp;uacute;ltimo tipo escrito, el contenido de los bytes en exceso no est&amp;aacute; especificado (y puede ser una representaci&amp;oacute;n trampa).</target>
        </trans-unit>
        <trans-unit id="eca00657b49826bd41febafa46889b0acfc34800" translate="yes" xml:space="preserve">
          <source>). The pointers &lt;code&gt;argv[1] .. argv[argc-1]&lt;/code&gt; point at the first characters in each of these strings. &lt;code&gt;argv[0]&lt;/code&gt; is the pointer to the initial character of a null-terminated multibyte strings that represents the name used to invoke the program itself (or, if this is not supported by the host environment, argv[0][0] is guaranteed to be zero).</source>
          <target state="translated">) Los punteros &lt;code&gt;argv[1] .. argv[argc-1]&lt;/code&gt; apuntan a los primeros caracteres en cada una de estas cadenas. &lt;code&gt;argv[0]&lt;/code&gt; es el puntero al car&amp;aacute;cter inicial de una cadena multibyte terminada en nulo que representa el nombre utilizado para invocar el programa en s&amp;iacute; (o, si el entorno host no lo admite, argv [0] [0] est&amp;aacute; garantizado ser cero)</target>
        </trans-unit>
        <trans-unit id="df58248c414f342c81e056b40bee12d17a08bf61" translate="yes" xml:space="preserve">
          <source>*</source>
          <target state="translated">*</target>
        </trans-unit>
        <trans-unit id="4ab516c76f3bdbf08541a0f8c2b8f862aa246bb5" translate="yes" xml:space="preserve">
          <source>* A &lt;code&gt;wchar_t&lt;/code&gt; was found that does not correspond to a valid character in the current C locale.</source>
          <target state="translated">* Se &lt;code&gt;wchar_t&lt;/code&gt; un wchar_t que no corresponde a un car&amp;aacute;cter v&amp;aacute;lido en el entorno local actual de C.</target>
        </trans-unit>
        <trans-unit id="364c7a704a404f39e09935349036f231114109ef" translate="yes" xml:space="preserve">
          <source>* A &lt;code&gt;wchar_t&lt;/code&gt; was found that does not correspond to a valid character in the current C locale. &lt;code&gt;*src&lt;/code&gt; is set to point at the first unconverted wide character.</source>
          <target state="translated">* Se &lt;code&gt;wchar_t&lt;/code&gt; un wchar_t que no corresponde a un car&amp;aacute;cter v&amp;aacute;lido en el entorno local actual de C. &lt;code&gt;*src&lt;/code&gt; est&amp;aacute; configurado para apuntar al primer car&amp;aacute;cter ancho no convertido.</target>
        </trans-unit>
        <trans-unit id="fbab1f01885ef6754602b76714437f21b435baf0" translate="yes" xml:space="preserve">
          <source>* An invalid (in the current C locale) multibyte character was encountered.</source>
          <target state="translated">* Se encontr&amp;oacute; un car&amp;aacute;cter multibyte no v&amp;aacute;lido (en la configuraci&amp;oacute;n regional actual de C).</target>
        </trans-unit>
        <trans-unit id="5bb4dd0a6b9d32792e8058f601a982fd5ca47c20" translate="yes" xml:space="preserve">
          <source>* An invalid multibyte character (according to the current C locale) was encountered. &lt;code&gt;*src&lt;/code&gt; is set to point at the beginning of the first unconverted multibyte character.</source>
          <target state="translated">* Se encontr&amp;oacute; un car&amp;aacute;cter multibyte no v&amp;aacute;lido (seg&amp;uacute;n la configuraci&amp;oacute;n regional C actual). &lt;code&gt;*src&lt;/code&gt; est&amp;aacute; configurado para apuntar al comienzo del primer car&amp;aacute;cter multibyte no convertido.</target>
        </trans-unit>
        <trans-unit id="f5126dc66253e898dec1426fb9aff733b85696b3" translate="yes" xml:space="preserve">
          <source>* If &lt;code&gt;src&lt;/code&gt; and &lt;code&gt;dst&lt;/code&gt; overlap, the behavior is unspecified.</source>
          <target state="translated">* Si &lt;code&gt;src&lt;/code&gt; y &lt;code&gt;dst&lt;/code&gt; se superponen, el comportamiento no se especifica.</target>
        </trans-unit>
        <trans-unit id="36bf6834136369c35471557a4051b7dbe2cb87e2" translate="yes" xml:space="preserve">
          <source>* The multibyte null character was converted and stored.</source>
          <target state="translated">* El car&amp;aacute;cter nulo multibyte se convirti&amp;oacute; y almacen&amp;oacute;.</target>
        </trans-unit>
        <trans-unit id="bdfa5f7b108263e04405358077b7c75e111ec0ce" translate="yes" xml:space="preserve">
          <source>* The multibyte null character was converted and stored. &lt;code&gt;*src&lt;/code&gt; is set to &lt;code&gt;&lt;a href=&quot;../../types/null&quot;&gt;NULL&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;*ps&lt;/code&gt; represents the initial shift state.</source>
          <target state="translated">* El car&amp;aacute;cter nulo multibyte se convirti&amp;oacute; y almacen&amp;oacute;. &lt;code&gt;*src&lt;/code&gt; se establece en &lt;code&gt;&lt;a href=&quot;../../types/null&quot;&gt;NULL&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;*ps&lt;/code&gt; representa el estado de cambio inicial.</target>
        </trans-unit>
        <trans-unit id="834f17c7f120bcb1a300de8f6df858e07e90f8b0" translate="yes" xml:space="preserve">
          <source>* The next multibyte character to be stored would exceed &lt;code&gt;len&lt;/code&gt;.</source>
          <target state="translated">* El siguiente car&amp;aacute;cter multibyte que se almacenar&amp;aacute; exceder&amp;iacute;a &lt;code&gt;len&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dd26f35187988e3fd49cb0e70979eec351055319" translate="yes" xml:space="preserve">
          <source>* The next wide character to be stored would exceed &lt;code&gt;len&lt;/code&gt;.</source>
          <target state="translated">* El siguiente car&amp;aacute;cter ancho que se almacenar&amp;aacute; exceder&amp;iacute;a &lt;code&gt;len&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4da1d0803dbd2e6490f012c9dd70a0c5c6a515ea" translate="yes" xml:space="preserve">
          <source>* The null character &lt;code&gt;L'\0'&lt;/code&gt; was converted and stored. The bytes stored in this case are the unshift sequence (if necessary) followed by &lt;code&gt;'\0'&lt;/code&gt;,</source>
          <target state="translated">* El car&amp;aacute;cter nulo &lt;code&gt;L'\0'&lt;/code&gt; se convirti&amp;oacute; y almacen&amp;oacute;. Los bytes almacenados en este caso son la secuencia de desplazamiento (si es necesario) seguida de &lt;code&gt;'\0'&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="3e9e1fb41eb2cf2c487da727ae16b9b81c9e0988" translate="yes" xml:space="preserve">
          <source>* The null character &lt;code&gt;L'\0'&lt;/code&gt; was converted and stored. The bytes stored in this case are the unshift sequence (if necessary) followed by &lt;code&gt;'\0'&lt;/code&gt;, &lt;code&gt;*src&lt;/code&gt; is set to &lt;code&gt;&lt;a href=&quot;../../types/null&quot;&gt;NULL&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;*ps&lt;/code&gt; represents the initial shift state.</source>
          <target state="translated">* El car&amp;aacute;cter nulo &lt;code&gt;L'\0'&lt;/code&gt; se convirti&amp;oacute; y almacen&amp;oacute;. Los bytes almacenados en este caso son la secuencia de desplazamiento (si es necesario) seguida de &lt;code&gt;'\0'&lt;/code&gt; , &lt;code&gt;*src&lt;/code&gt; se establece en &lt;code&gt;&lt;a href=&quot;../../types/null&quot;&gt;NULL&lt;/a&gt;&lt;/code&gt; y &lt;code&gt;*ps&lt;/code&gt; representa el estado de desplazamiento inicial.</target>
        </trans-unit>
        <trans-unit id="dee2144d7fd70d4bcba806aa427b19a704d491d8" translate="yes" xml:space="preserve">
          <source>* conversion is as-if by &lt;code&gt;&lt;a href=&quot;mbrtowc&quot;&gt;mbrtowc&lt;/a&gt;&lt;/code&gt;, not &lt;code&gt;&lt;a href=&quot;mbtowc&quot;&gt;mbtowc&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">* la conversi&amp;oacute;n es como si por &lt;code&gt;&lt;a href=&quot;mbrtowc&quot;&gt;mbrtowc&lt;/a&gt;&lt;/code&gt; , no por &lt;code&gt;&lt;a href=&quot;mbtowc&quot;&gt;mbtowc&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e8b64366c800cd8e8dfc2fccd006a232d6e5d7fb" translate="yes" xml:space="preserve">
          <source>* conversion is as-if by &lt;code&gt;&lt;a href=&quot;wcrtomb&quot;&gt;wcrtomb&lt;/a&gt;&lt;/code&gt;, not &lt;code&gt;&lt;a href=&quot;wctomb&quot;&gt;wctomb&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">* la conversi&amp;oacute;n es como si fuera por &lt;code&gt;&lt;a href=&quot;wcrtomb&quot;&gt;wcrtomb&lt;/a&gt;&lt;/code&gt; , no por &lt;code&gt;&lt;a href=&quot;wctomb&quot;&gt;wctomb&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5dddb9454567355972780e53d90b4db9c3cf72a7" translate="yes" xml:space="preserve">
          <source>* if &lt;code&gt;dst&lt;/code&gt; is a null pointer, the number of bytes that would be produced is stored in &lt;code&gt;*retval&lt;/code&gt;</source>
          <target state="translated">* si &lt;code&gt;dst&lt;/code&gt; es un puntero nulo, el n&amp;uacute;mero de bytes que se generar&amp;iacute;an se almacena en &lt;code&gt;*retval&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="81581e17ddac35e7f300dbab9c08485fa44856fc" translate="yes" xml:space="preserve">
          <source>* if &lt;code&gt;dst&lt;/code&gt; is a null pointer, the number of wide characters that would be produced is stored in &lt;code&gt;*retval&lt;/code&gt;</source>
          <target state="translated">* si &lt;code&gt;dst&lt;/code&gt; es un puntero nulo, la cantidad de caracteres anchos que se generar&amp;iacute;an se almacena en &lt;code&gt;*retval&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="be8bb5000a5daf788ad5d862dc45ffef4d647ccd" translate="yes" xml:space="preserve">
          <source>* if no null character was written to &lt;code&gt;dst&lt;/code&gt; after &lt;code&gt;len&lt;/code&gt; wide characters were written, then &lt;code&gt;L'\0'&lt;/code&gt; is stored in &lt;code&gt;dst[len]&lt;/code&gt;, which means len+1 total wide characters are written</source>
          <target state="translated">* si no se escribi&amp;oacute; ning&amp;uacute;n car&amp;aacute;cter nulo en &lt;code&gt;dst&lt;/code&gt; despu&amp;eacute;s de que se escribieron los caracteres anchos &lt;code&gt;len&lt;/code&gt; , entonces &lt;code&gt;L'\0'&lt;/code&gt; se almacena en &lt;code&gt;dst[len]&lt;/code&gt; , lo que significa que se escriben len + 1 caracteres anchos totales</target>
        </trans-unit>
        <trans-unit id="92b3d3b2534e505ec2cd5a10c2ee035d6a6b6109" translate="yes" xml:space="preserve">
          <source>* if the conversion stops without writing a null character, the function will store &lt;code&gt;'\0'&lt;/code&gt; in the next byte in &lt;code&gt;dst&lt;/code&gt;, which may be &lt;code&gt;dst[len]&lt;/code&gt; or &lt;code&gt;dst[dstsz]&lt;/code&gt;, whichever comes first (meaning up to len+1/dstsz+1 total bytes may be written). In this case, there may be no unshift sequence written before the terminating null.</source>
          <target state="translated">* si la conversi&amp;oacute;n se detiene sin escribir un car&amp;aacute;cter nulo, la funci&amp;oacute;n almacenar&amp;aacute; &lt;code&gt;'\0'&lt;/code&gt; en el siguiente byte en &lt;code&gt;dst&lt;/code&gt; , que puede ser &lt;code&gt;dst[len]&lt;/code&gt; o &lt;code&gt;dst[dstsz]&lt;/code&gt; , lo que ocurra primero (es decir, hasta len + 1 / Se pueden escribir dstsz + 1 bytes en total). En este caso, puede que no haya una secuencia sin desplazamiento escrita antes de la terminaci&amp;oacute;n nula.</target>
        </trans-unit>
        <trans-unit id="29d55a5927ef5eb2fd9e5d517c2eb90df247c2e4" translate="yes" xml:space="preserve">
          <source>* the following errors are detected at runtime and call the currently installed &lt;a href=&quot;../../error/set_constraint_handler_s&quot;&gt;constraint handler&lt;/a&gt; function:</source>
          <target state="translated">* los siguientes errores se detectan en tiempo de ejecuci&amp;oacute;n y llaman a la funci&amp;oacute;n de &lt;a href=&quot;../../error/set_constraint_handler_s&quot;&gt;controlador de restricciones&lt;/a&gt; actualmente instalada :</target>
        </trans-unit>
        <trans-unit id="c47429fda0b87a9c600b9ae240c30a865bd3fb3d" translate="yes" xml:space="preserve">
          <source>* the function clobbers the destination array from the terminating null and until &lt;code&gt;dstsz&lt;/code&gt;</source>
          <target state="translated">* la funci&amp;oacute;n registra la matriz de destino desde la terminaci&amp;oacute;n nula y hasta &lt;code&gt;dstsz&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d009a3dd9b322b988861b11e447b8d92a2d690bb" translate="yes" xml:space="preserve">
          <source>* the function returns its result as an out-parameter &lt;code&gt;retval&lt;/code&gt;</source>
          <target state="translated">* la funci&amp;oacute;n devuelve su resultado como un &lt;code&gt;retval&lt;/code&gt; fuera del par&amp;aacute;metro</target>
        </trans-unit>
        <trans-unit id="961390a750d281bc04739c59491b178e395dcfd8" translate="yes" xml:space="preserve">
          <source>* the next multibyte character to be stored would exceed &lt;code&gt;len&lt;/code&gt;. &lt;code&gt;*src&lt;/code&gt; is set to point at the first unconverted wide character. This condition is not checked if &lt;code&gt;dst==&lt;a href=&quot;../../types/null&quot;&gt;NULL&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">* el siguiente car&amp;aacute;cter multibyte que se almacenar&amp;aacute; exceder&amp;iacute;a &lt;code&gt;len&lt;/code&gt; . &lt;code&gt;*src&lt;/code&gt; est&amp;aacute; configurado para apuntar al primer car&amp;aacute;cter ancho no convertido. Esta condici&amp;oacute;n no se verifica si &lt;code&gt;dst==&lt;a href=&quot;../../types/null&quot;&gt;NULL&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3c6590e4f5723e83efef06a912e6fb16d0204b4d" translate="yes" xml:space="preserve">
          <source>* the next wide character to be stored would exceed &lt;code&gt;len&lt;/code&gt;. &lt;code&gt;*src&lt;/code&gt; is set to point at the beginning of the first unconverted multibyte character. This condition is not checked if &lt;code&gt;dst==&lt;a href=&quot;../../types/null&quot;&gt;NULL&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">* el siguiente car&amp;aacute;cter ancho que se almacenar&amp;aacute; exceder&amp;iacute;a &lt;code&gt;len&lt;/code&gt; . &lt;code&gt;*src&lt;/code&gt; est&amp;aacute; configurado para apuntar al comienzo del primer car&amp;aacute;cter multibyte no convertido. Esta condici&amp;oacute;n no se verifica si &lt;code&gt;dst==&lt;a href=&quot;../../types/null&quot;&gt;NULL&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5af890528c0bc07f3ddb7506b6871aa13ef93e0f" translate="yes" xml:space="preserve">
          <source>+ or -</source>
          <target state="translated">+ o -</target>
        </trans-unit>
        <trans-unit id="10237625c4038078366f0ba301062e26b0a292b7" translate="yes" xml:space="preserve">
          <source>+e-arg</source>
          <target state="translated">+e-arg</target>
        </trans-unit>
        <trans-unit id="646a59a5040c633be59638f0b9236c74b2d4b10e" translate="yes" xml:space="preserve">
          <source>+e-iz</source>
          <target state="translated">+e-iz</target>
        </trans-unit>
        <trans-unit id="34a1e35776739ce4dc04bce6c9ebf045e0e6d5cd" translate="yes" xml:space="preserve">
          <source>+e-z</source>
          <target state="translated">+e-z</target>
        </trans-unit>
        <trans-unit id="e658a5f32f2900a22bb92bff52a9aae37a38fc16" translate="yes" xml:space="preserve">
          <source>+eiz</source>
          <target state="translated">+eiz</target>
        </trans-unit>
        <trans-unit id="bd70b4e8a931f2e78f56e98d763ca24203c62e75" translate="yes" xml:space="preserve">
          <source>+v2</source>
          <target state="translated">+v2</target>
        </trans-unit>
        <trans-unit id="52ec0e2168e6e479e68b2919cf6142e08ffe7ec9" translate="yes" xml:space="preserve">
          <source>+y2</source>
          <target state="translated">+y2</target>
        </trans-unit>
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">,</target>
        </trans-unit>
        <trans-unit id="ea99f2c99dab0ae4b94573e70409b74914f3d75e" translate="yes" xml:space="preserve">
          <source>, &lt;a href=&quot;volatile&quot;&gt;volatile&lt;/a&gt;, and, for pointers to object types, &lt;a href=&quot;restrict&quot;&gt;restrict&lt;/a&gt; qualifiers. This page describes the effects of the</source>
          <target state="translated">, &lt;a href=&quot;volatile&quot;&gt;vol&amp;aacute;til&lt;/a&gt; y, para punteros a tipos de objeto, &lt;a href=&quot;restrict&quot;&gt;restringir&lt;/a&gt; calificadores. Esta p&amp;aacute;gina describe los efectos de la</target>
        </trans-unit>
        <trans-unit id="267c692f9e342c44644a1c3c855829a39c44371b" translate="yes" xml:space="preserve">
          <source>, &lt;code&gt;-0.0&lt;/code&gt;. It compares equal to the positive zero, but is meaningful in some arithmetic operations, e.g. &lt;code&gt;1.0/0.0 == INFINITY&lt;/code&gt;, but &lt;code&gt;1.0/-0.0 == -INFINITY&lt;/code&gt;)</source>
          <target state="translated">, &lt;code&gt;-0.0&lt;/code&gt; . Se compara igual al cero positivo, pero es significativo en algunas operaciones aritm&amp;eacute;ticas, por ejemplo, &lt;code&gt;1.0/0.0 == INFINITY&lt;/code&gt; , pero &lt;code&gt;1.0/-0.0 == -INFINITY&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="e150b1788dd9f7e5e7ac789ea46e43edb1ebffbd" translate="yes" xml:space="preserve">
          <source>, a store performs a</source>
          <target state="translated">, una tienda realiza un</target>
        </trans-unit>
        <trans-unit id="fe5c90235b636a3479741a3510eaceea07ddce9c" translate="yes" xml:space="preserve">
          <source>, and read-modify-write performs both an</source>
          <target state="translated">, y leer-modificar-escribir realiza tanto un</target>
        </trans-unit>
        <trans-unit id="6a2c01681df2cda12ce7497be0662428aa1cce6b" translate="yes" xml:space="preserve">
          <source>, and therefore,</source>
          <target state="translated">, y por lo tanto,</target>
        </trans-unit>
        <trans-unit id="f488f61b816c99ddff3a7a72d11d62edd3fca7df" translate="yes" xml:space="preserve">
          <source>, and, for pointers to object types, &lt;a href=&quot;restrict&quot;&gt;restrict&lt;/a&gt; qualifiers. This page describes the effects of the</source>
          <target state="translated">y, para punteros a tipos de objeto, &lt;a href=&quot;restrict&quot;&gt;restringir&lt;/a&gt; calificadores. Esta p&amp;aacute;gina describe los efectos de la</target>
        </trans-unit>
        <trans-unit id="7c04ddce60e88eb81512a7bb2474b737f3648041" translate="yes" xml:space="preserve">
          <source>, by providing a name followed by a colon before the statement itself.</source>
          <target state="translated">, proporcionando un nombre seguido de dos puntos antes de la declaraci&amp;oacute;n misma.</target>
        </trans-unit>
        <trans-unit id="e0fd782cf495a2cb134bf86538aa83c2ba0b3eef" translate="yes" xml:space="preserve">
          <source>, consists of two stages:</source>
          <target state="translated">, consta de dos etapas:</target>
        </trans-unit>
        <trans-unit id="5d4f70dfafcb16a063c6caca45514bf3f6f403f7" translate="yes" xml:space="preserve">
          <source>, defined as follows:</source>
          <target state="translated">, definido como sigue:</target>
        </trans-unit>
        <trans-unit id="d0326c2af02477004d0e9cb81da31109edab9e6b" translate="yes" xml:space="preserve">
          <source>, despite the possibility of intermediate overflow. In other words, the programmer guarantees that the range of the values that will be passed to those function is limited. The default value is &lt;code&gt;OFF&lt;/code&gt;</source>
          <target state="translated">, a pesar de la posibilidad de desbordamiento intermedio. En otras palabras, el programador garantiza que el rango de los valores que se pasar&amp;aacute;n a esas funciones es limitado. El valor predeterminado es &lt;code&gt;OFF&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7e197dd42d137ab00a4af956b2be83a89414b88e" translate="yes" xml:space="preserve">
          <source>, each of which declares identifier to be a label name, which must be unique within the enclosing function (in other words, label names have &lt;a href=&quot;scope&quot;&gt;function scope&lt;/a&gt;).</source>
          <target state="translated">, cada uno de los cuales declara que el identificador es un nombre de etiqueta, que debe ser &amp;uacute;nico dentro de la funci&amp;oacute;n de cierre (en otras palabras, los nombres de etiqueta tienen &lt;a href=&quot;scope&quot;&gt;alcance de funci&amp;oacute;n&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="98e97cc3b8644e377d56e1913ed68ca827ee1c37" translate="yes" xml:space="preserve">
          <source>, followed by the</source>
          <target state="translated">, Seguido por el</target>
        </trans-unit>
        <trans-unit id="b402a081f1fd2ed0d93364392f8a9e1971f2a0ba" translate="yes" xml:space="preserve">
          <source>, i.e. not an infinity, subnormal, not-a-number or zero</source>
          <target state="translated">, es decir, no es infinito, subnormal, no es un n&amp;uacute;mero o cero</target>
        </trans-unit>
        <trans-unit id="3f9ea48a3566ba015dc5cf19f3c91e36adc1bfa0" translate="yes" xml:space="preserve">
          <source>, is a brace-enclosed sequence of statements and declarations.</source>
          <target state="translated">, es una secuencia de declaraciones y declaraciones encerradas entre llaves.</target>
        </trans-unit>
        <trans-unit id="4d352140499bee91bd8fa0478761dbe5c330ea43" translate="yes" xml:space="preserve">
          <source>, is returned.</source>
          <target state="translated">, es regresado.</target>
        </trans-unit>
        <trans-unit id="6749438cbd3963dcc7dbd80916ea8bcec3d16fe2" translate="yes" xml:space="preserve">
          <source>, is returned. If a range error occurs due to underflow, the correct result (after rounding), that is</source>
          <target state="translated">, es regresado. Si se produce un error de rango debido a un flujo insuficiente, el resultado correcto (despu&amp;eacute;s del redondeo), es decir</target>
        </trans-unit>
        <trans-unit id="ff0d5b022985210ca1620c154fb6685e6c163e15" translate="yes" xml:space="preserve">
          <source>, non-lvalue object expressions are the expressions of object types that do not designate objects, but rather values that have no object identity or storage location. The address of a non-lvalue object expression cannot be taken.</source>
          <target state="translated">, las expresiones de objeto que no son de valor son las expresiones de tipos de objeto que no designan objetos, sino valores que no tienen identidad de objeto o ubicaci&amp;oacute;n de almacenamiento. No se puede tomar la direcci&amp;oacute;n de una expresi&amp;oacute;n de objeto sin valor.</target>
        </trans-unit>
        <trans-unit id="b366d1a229ec84d93ba42e7ecafb33db5b7b9b39" translate="yes" xml:space="preserve">
          <source>, or</source>
          <target state="translated">o</target>
        </trans-unit>
        <trans-unit id="ca2b3f2f28d5107c14b1c6e606f4cad76bdae7f8" translate="yes" xml:space="preserve">
          <source>, plus a single total order exists in which all threads observe all modifications in the same order (see &lt;a href=&quot;memory_order#Sequentially-consistent_ordering&quot;&gt;Sequentially-consistent ordering&lt;/a&gt; below)</source>
          <target state="translated">, adem&amp;aacute;s de que existe un &amp;uacute;nico orden total en el que todos los subprocesos observan todas las modificaciones en el mismo orden (consulte Orden &lt;a href=&quot;memory_order#Sequentially-consistent_ordering&quot;&gt;secuencialmente consistente a&lt;/a&gt; continuaci&amp;oacute;n)</target>
        </trans-unit>
        <trans-unit id="aff77aea9f4970a4a314e522de797997bd16c998" translate="yes" xml:space="preserve">
          <source>, reduced modulo maximum value of the return type plus 1 (that is, bitwise left shift is performed and the bits that get shifted out of the destination type are discarded). For signed lhs with nonnegative values, the value of &lt;code&gt;LHS &amp;lt;&amp;lt; RHS&lt;/code&gt; is LHS * 2RHS</source>
          <target state="translated">, valor m&amp;aacute;ximo de m&amp;oacute;dulo reducido del tipo de retorno m&amp;aacute;s 1 (es decir, se realiza un desplazamiento a la izquierda a nivel de bit y se descartan los bits que se desplazan fuera del tipo de destino). Para lhs con signo con valores no negativos, el valor de &lt;code&gt;LHS &amp;lt;&amp;lt; RHS&lt;/code&gt; es LHS * 2RHS</target>
        </trans-unit>
        <trans-unit id="12f9d68c8ac0662752f77069df21f228d60ed8e3" translate="yes" xml:space="preserve">
          <source>, that is, calculated as if all intermediate results have infinite range and precision (unless &lt;a href=&quot;../../preprocessor/impl&quot;&gt;#pragma&lt;/a&gt;&lt;code&gt;STDC FP_CONTRACT&lt;/code&gt; is off).</source>
          <target state="translated">, es decir, calculado como si todos los resultados intermedios tuvieran un rango y precisi&amp;oacute;n infinitos (a menos que &lt;a href=&quot;../../preprocessor/impl&quot;&gt;#pragma &lt;/a&gt; &lt;code&gt;STDC FP_CONTRACT&lt;/code&gt; est&amp;eacute; desactivado).</target>
        </trans-unit>
        <trans-unit id="e0f8c5176100dd1b018a5ea57406a86131e3643c" translate="yes" xml:space="preserve">
          <source>, that is, calculated as if all intermediate values have infinite range and precision, see &lt;a href=&quot;../preprocessor/impl#Standard_pragmas&quot;&gt;#pragma STDC FP_CONTRACT&lt;/a&gt;.</source>
          <target state="translated">, es decir, calculado como si todos los valores intermedios tuvieran un rango y precisi&amp;oacute;n infinitos, consulte &lt;a href=&quot;../preprocessor/impl#Standard_pragmas&quot;&gt;#pragma STDC FP_CONTRACT&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b3371f39b4d25c3614398ae687dd3c157715ecb1" translate="yes" xml:space="preserve">
          <source>, that is, once the atomic load is completed, those operators and functions in thread B that use the value obtained from the load are guaranteed to see what thread A wrote to memory.</source>
          <target state="translated">, es decir, una vez que se completa la carga at&amp;oacute;mica, se garantiza que aquellos operadores y funciones en el subproceso B que usan el valor obtenido de la carga ver&amp;aacute;n qu&amp;eacute; subproceso A escribi&amp;oacute; en la memoria.</target>
        </trans-unit>
        <trans-unit id="5600d38f6522d0aee934bd46349d724c084a653b" translate="yes" xml:space="preserve">
          <source>, that is, the maximum number of characters that the function is allowed to consume when doing the conversion specified by the current conversion specification. Note that %s and %[ may lead to buffer overflow if the width is not provided.</source>
          <target state="translated">, es decir, el n&amp;uacute;mero m&amp;aacute;ximo de caracteres que la funci&amp;oacute;n puede consumir al realizar la conversi&amp;oacute;n especificada por la especificaci&amp;oacute;n de conversi&amp;oacute;n actual. Tenga en cuenta que% sy% [pueden provocar un desbordamiento del b&amp;uacute;fer si no se proporciona el ancho.</target>
        </trans-unit>
        <trans-unit id="9b3a0b7a765f6f37929babea162b22721cf97b06" translate="yes" xml:space="preserve">
          <source>, that specifies a computation.</source>
          <target state="translated">, que especifica un c&amp;aacute;lculo.</target>
        </trans-unit>
        <trans-unit id="3bfb6dca948f74883bbf3286851c95ba57be31f4" translate="yes" xml:space="preserve">
          <source>, the conversion is with style &lt;code&gt;f&lt;/code&gt; or &lt;code&gt;F&lt;/code&gt; and precision</source>
          <target state="translated">, la conversi&amp;oacute;n es con estilo &lt;code&gt;f&lt;/code&gt; o &lt;code&gt;F&lt;/code&gt; y precisi&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="bd7c569c621504bf55a91f8729d2723c01ac26ea" translate="yes" xml:space="preserve">
          <source>, the significand is interpreted as a decimal rational number, and the digit-sequence of the exponent is interpreted as the integer power of 10 to which the significand has to be scaled.</source>
          <target state="translated">, el significado se interpreta como un n&amp;uacute;mero racional decimal, y la secuencia de d&amp;iacute;gitos del exponente se interpreta como la potencia entera de 10 a la que se debe escalar el significado.</target>
        </trans-unit>
        <trans-unit id="44a3bdf0df71922d83bab0be27d9b6a00c2bbf00" translate="yes" xml:space="preserve">
          <source>, the significand is interpreted as a hexadecimal rational number, and the digit-sequence of the exponent is interpreted as the integer power of 2 to which the significand has to be scaled.</source>
          <target state="translated">, el significado se interpreta como un n&amp;uacute;mero racional hexadecimal, y la secuencia de d&amp;iacute;gitos del exponente se interpreta como la potencia entera de 2 a la que se debe escalar el significado.</target>
        </trans-unit>
        <trans-unit id="669df684f6ddfffabfe6e91745480e6fb99a25db" translate="yes" xml:space="preserve">
          <source>, where b is the number of bits in the target type, is repeatedly subtracted or added to the source value until the result fits in the target type. In other words, unsigned integers implement modulo arithmetic.</source>
          <target state="translated">, donde b es el n&amp;uacute;mero de bits en el tipo de destino, se resta o agrega repetidamente al valor de origen hasta que el resultado se ajuste al tipo de destino. En otras palabras, los enteros sin signo implementan m&amp;oacute;dulo aritm&amp;eacute;tico.</target>
        </trans-unit>
        <trans-unit id="b36060bf4e5c97ae4963af3a59f16af4bf50b242" translate="yes" xml:space="preserve">
          <source>, which are initialized from the</source>
          <target state="translated">, que se inicializan a partir de</target>
        </trans-unit>
        <trans-unit id="79b6f044da56feb83046377b165ab2ff1d4ff00c" translate="yes" xml:space="preserve">
          <source>, which are the following</source>
          <target state="translated">, que son los siguientes</target>
        </trans-unit>
        <trans-unit id="8b91eb803cc38f188a6868c2ee6f424d2b9fd012" translate="yes" xml:space="preserve">
          <source>, which determines the interpretation of the binary value stored in an object or evaluated by the expression.</source>
          <target state="translated">, que determina la interpretaci&amp;oacute;n del valor binario almacenado en un objeto o evaluado por la expresi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="1b173196ee717e359310e93adc804fc79bdd0006" translate="yes" xml:space="preserve">
          <source>, which determines which &lt;a href=&quot;value_category&quot;&gt;lvalue&lt;/a&gt; accesses are valid and which violate the strict aliasing rules.</source>
          <target state="translated">, que determina qu&amp;eacute; accesos de &lt;a href=&quot;value_category&quot;&gt;lvalue&lt;/a&gt; son v&amp;aacute;lidos y cu&amp;aacute;les violan las estrictas reglas de alias.</target>
        </trans-unit>
        <trans-unit id="cb7863f012a0b7ddb1cc926f4798abeb35fb1c4a" translate="yes" xml:space="preserve">
          <source>, which is</source>
          <target state="translated">, cual es</target>
        </trans-unit>
        <trans-unit id="3dc830b832f7ab1bcea6753db5f39eb45c155405" translate="yes" xml:space="preserve">
          <source>, which is a total order of modifications made to that object. If, from some thread's point of view, modification &lt;code&gt;A&lt;/code&gt; of some atomic M &lt;a href=&quot;../atomic/memory_order&quot;&gt;happens-before&lt;/a&gt; modification &lt;code&gt;B&lt;/code&gt; of the same atomic M, then in the modification order of M, A occurs before B.</source>
          <target state="translated">, que es un orden total de modificaciones realizadas a ese objeto. Si, desde el punto de vista de alg&amp;uacute;n hilo, la modificaci&amp;oacute;n &lt;code&gt;A&lt;/code&gt; de alguna M at&amp;oacute;mica &lt;a href=&quot;../atomic/memory_order&quot;&gt;ocurre antes de la&lt;/a&gt; modificaci&amp;oacute;n &lt;code&gt;B&lt;/code&gt; de la misma M at&amp;oacute;mica, entonces en el orden de modificaci&amp;oacute;n de M, A ocurre antes que B.</target>
        </trans-unit>
        <trans-unit id="50054d86c86c1fe8890e739e39147cf1941c6375" translate="yes" xml:space="preserve">
          <source>, which is an expression of any arithmetic type that consists of</source>
          <target state="translated">, que es una expresi&amp;oacute;n de cualquier tipo aritm&amp;eacute;tico que consiste en</target>
        </trans-unit>
        <trans-unit id="2acb97861aa5bd19b226dba59d742f4818171c04" translate="yes" xml:space="preserve">
          <source>, which is an integer value of type &lt;code&gt;&lt;a href=&quot;../types/size_t&quot;&gt;size_t&lt;/a&gt;&lt;/code&gt; representing the number of bytes between successive addresses at which objects of this type can be allocated. The valid alignment values are non-negative integral powers of two.</source>
          <target state="translated">, que es un valor entero de tipo &lt;code&gt;&lt;a href=&quot;../types/size_t&quot;&gt;size_t&lt;/a&gt;&lt;/code&gt; que representa el n&amp;uacute;mero de bytes entre direcciones sucesivas a las que se pueden asignar objetos de este tipo. Los valores de alineaci&amp;oacute;n v&amp;aacute;lidos son potencias integrales no negativas de dos.</target>
        </trans-unit>
        <trans-unit id="15ccd90a60013a6993e1e3c4287149ef445f0f4e" translate="yes" xml:space="preserve">
          <source>, which is the type in which the calculation is performed:</source>
          <target state="translated">, que es el tipo en el que se realiza el c&amp;aacute;lculo:</target>
        </trans-unit>
        <trans-unit id="71aba55ae2a5c3a44e113fd434e125cca6f81106" translate="yes" xml:space="preserve">
          <source>, which limits the object &lt;a href=&quot;lifetime&quot;&gt;lifetime&lt;/a&gt;. There are four kinds of storage duration in C:</source>
          <target state="translated">, que limita la &lt;a href=&quot;lifetime&quot;&gt;vida &amp;uacute;til del&lt;/a&gt; objeto . Hay cuatro tipos de duraci&amp;oacute;n de almacenamiento en C:</target>
        </trans-unit>
        <trans-unit id="87d6bcaebb5cfcdbe3b69b42858edeb099dcf057" translate="yes" xml:space="preserve">
          <source>, which may end with an &lt;a href=&quot;variadic&quot;&gt;ellipsis parameter&lt;/a&gt;</source>
          <target state="translated">, que puede terminar con un &lt;a href=&quot;variadic&quot;&gt;par&amp;aacute;metro de puntos suspensivos&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="71dff1d53f0b36db28ba7f5675828f35ddb509b1" translate="yes" xml:space="preserve">
          <source>, with branch cut for the first parameter along the negative real axis.</source>
          <target state="translated">, con corte de rama para el primer par&amp;aacute;metro a lo largo del eje real negativo.</target>
        </trans-unit>
        <trans-unit id="3bc15c8aae3e4124dd409035f32ea2fd6835efc9" translate="yes" xml:space="preserve">
          <source>-</source>
          <target state="translated">-</target>
        </trans-unit>
        <trans-unit id="34f1a5523f7daf985cb06805569ec7fafb521ccd" translate="yes" xml:space="preserve">
          <source>- A conforming hosted implementation shall accept any strictly conforming program. A conforming freestanding implementation shall accept any strictly conforming program in which the use of the features specified in the library clause (clause 7) is confined to the contents of the standard headers &amp;lt;float.h&amp;gt;, &amp;lt;iso646.h&amp;gt;, &amp;lt;limits.h&amp;gt;, &amp;lt;stdalign.h&amp;gt;, &amp;lt;stdarg.h&amp;gt;, &amp;lt;stdbool.h&amp;gt;, &amp;lt;stddef.h&amp;gt;, &amp;lt;stdint.h&amp;gt;, and &amp;lt;stdnoreturn.h&amp;gt;. A conforming implementation may have extensions (including additional library functions), provided they do not alter the behavior of any strictly conforming program.</source>
          <target state="translated">- Una implementaci&amp;oacute;n hospedada conforme deber&amp;aacute; aceptar cualquier programa estrictamente conforme. Una implementaci&amp;oacute;n independiente conforme deber&amp;aacute; aceptar cualquier programa estrictamente conforme en el que el uso de las caracter&amp;iacute;sticas especificadas en la cl&amp;aacute;usula de la biblioteca (cl&amp;aacute;usula 7) se limite al contenido de los encabezados est&amp;aacute;ndar &amp;lt;float.h&amp;gt;, &amp;lt;iso646.h&amp;gt;, &amp;lt;l&amp;iacute;mites. h&amp;gt;, &amp;lt;stdalign.h&amp;gt;, &amp;lt;stdarg.h&amp;gt;, &amp;lt;stdbool.h&amp;gt;, &amp;lt;stddef.h&amp;gt;, &amp;lt;stdint.h&amp;gt; y &amp;lt;stdnoreturn.h&amp;gt;. Una implementaci&amp;oacute;n conforme puede tener extensiones (incluidas funciones de biblioteca adicionales), siempre que no alteren el comportamiento de ning&amp;uacute;n programa estrictamente conforme.</target>
        </trans-unit>
        <trans-unit id="074be1607cf61a3e8404e6d2b18a87fc937ba85d" translate="yes" xml:space="preserve">
          <source>- acceptable to a conforming implementation.</source>
          <target state="translated">- aceptable para una implementaci&amp;oacute;n conforme.</target>
        </trans-unit>
        <trans-unit id="16c49dca8c6497169c3f8dd2fdd7603b00d658e4" translate="yes" xml:space="preserve">
          <source>- implementation-defined behavior that depends on the &lt;a href=&quot;../locale/setlocale&quot;&gt;currently chosen locale&lt;/a&gt;. For example, whether &lt;code&gt;&lt;a href=&quot;../string/byte/islower&quot;&gt;islower&lt;/a&gt;&lt;/code&gt; returns true for any character other than the 26 lowercase Latin letters.</source>
          <target state="translated">- comportamiento definido por la implementaci&amp;oacute;n que depende del &lt;a href=&quot;../locale/setlocale&quot;&gt;entorno local elegido actualmente&lt;/a&gt; . Por ejemplo, si &lt;code&gt;&lt;a href=&quot;../string/byte/islower&quot;&gt;islower&lt;/a&gt;&lt;/code&gt; devuelve verdadero para cualquier car&amp;aacute;cter que no sean las 26 letras latinas en min&amp;uacute;sculas.</target>
        </trans-unit>
        <trans-unit id="96847337e2605434130bd96f5f2d7ca493a59146" translate="yes" xml:space="preserve">
          <source>- there are no restrictions on the behavior of the program. Examples of undefined behavior are memory accesses outside of array bounds, signed integer overflow, null pointer dereference, modification of the same scalar &lt;a href=&quot;eval_order&quot;&gt;more than once&lt;/a&gt; in an expression without sequence points, access to an object through a pointer of a different type, etc. Compilers are not required to diagnose undefined behavior (although many simple situations are diagnosed), and the compiled program is not required to do anything meaningful.</source>
          <target state="translated">- no hay restricciones en el comportamiento del programa. Ejemplos de comportamiento indefinido son los accesos a la memoria fuera de los l&amp;iacute;mites de la matriz, desbordamiento de enteros con signo, desreferencia de puntero nulo, modificaci&amp;oacute;n del mismo escalar &lt;a href=&quot;eval_order&quot;&gt;m&amp;aacute;s de una vez&lt;/a&gt; en una expresi&amp;oacute;n sin puntos de secuencia, acceso a un objeto a trav&amp;eacute;s de un puntero de un tipo diferente, etc. Compiladores no est&amp;aacute;n obligados a diagnosticar comportamientos indefinidos (aunque se diagnostican muchas situaciones simples), y el programa compilado no est&amp;aacute; obligado a hacer nada significativo.</target>
        </trans-unit>
        <trans-unit id="b4090cbd99792300c3be6967223eb7e4f2ebd39d" translate="yes" xml:space="preserve">
          <source>- two or more behaviors are permitted and the implementation is not required to document the effects of each behavior. For example, &lt;a href=&quot;eval_order&quot;&gt;order of evaluation&lt;/a&gt;, whether identical &lt;a href=&quot;string_literal&quot;&gt;string literals&lt;/a&gt; are distinct, etc. Each unspecified behavior results in one of a set of valid results and may produce a different result when repeated in the same program.</source>
          <target state="translated">- se permiten dos o m&amp;aacute;s comportamientos y no se requiere la implementaci&amp;oacute;n para documentar los efectos de cada comportamiento. Por ejemplo, el &lt;a href=&quot;eval_order&quot;&gt;orden de evaluaci&amp;oacute;n&lt;/a&gt; , si &lt;a href=&quot;string_literal&quot;&gt;los literales de cadena&lt;/a&gt; id&amp;eacute;nticos son distintos, etc. Cada comportamiento no especificado da como resultado uno de un conjunto de resultados v&amp;aacute;lidos y puede producir un resultado diferente cuando se repite en el mismo programa.</target>
        </trans-unit>
        <trans-unit id="f0cb651905aba72cbf1f6b2c14e971e8e7b2f89c" translate="yes" xml:space="preserve">
          <source>- unspecified behavior where each implementation documents how the choice is made. For example, number of bits in a byte, or whether signed integer right shift is arithmetic or logical.</source>
          <target state="translated">- comportamiento no especificado donde cada implementaci&amp;oacute;n documenta c&amp;oacute;mo se realiza la elecci&amp;oacute;n. Por ejemplo, el n&amp;uacute;mero de bits en un byte, o si el desplazamiento a la derecha de entero con signo es aritm&amp;eacute;tico o l&amp;oacute;gico.</target>
        </trans-unit>
        <trans-unit id="b02040b96325a522dcde128f5a746a1d1f567dd4" translate="yes" xml:space="preserve">
          <source>- uses only well-defined language constructs, that is constructs with a single behavior. It excludes unspecified, undefined, or implementation-defined behavior, and does not exceed any minimum implementation limit.</source>
          <target state="translated">- utiliza solo construcciones de lenguaje bien definidas, es decir, construcciones con un solo comportamiento. Excluye el comportamiento no especificado, indefinido o definido por la implementaci&amp;oacute;n, y no excede ning&amp;uacute;n l&amp;iacute;mite m&amp;iacute;nimo de implementaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="efbd6839532c28207854ecf019b87bf92b7e1582" translate="yes" xml:space="preserve">
          <source>-1 can be expressed as &lt;code&gt;&lt;a href=&quot;expm1&quot;&gt;expm1&lt;/a&gt;(n * log1p(x))&lt;/code&gt;. These functions also simplify writing accurate inverse hyperbolic functions.</source>
          <target state="translated">-1 puede expresarse como &lt;code&gt;&lt;a href=&quot;expm1&quot;&gt;expm1&lt;/a&gt;(n * log1p(x))&lt;/code&gt; . Estas funciones tambi&amp;eacute;n simplifican la escritura de funciones hiperb&amp;oacute;licas inversas precisas.</target>
        </trans-unit>
        <trans-unit id="2226e058fc35d2f8f97985e1816070b5eb589cc7" translate="yes" xml:space="preserve">
          <source>-1 can be expressed as &lt;code&gt;expm1(n * &lt;a href=&quot;log1p&quot;&gt;log1p&lt;/a&gt;(x))&lt;/code&gt;. These functions also simplify writing accurate inverse hyperbolic functions.</source>
          <target state="translated">-1 puede expresarse como &lt;code&gt;expm1(n * &lt;a href=&quot;log1p&quot;&gt;log1p&lt;/a&gt;(x))&lt;/code&gt; . Estas funciones tambi&amp;eacute;n simplifican la escritura de funciones hiperb&amp;oacute;licas inversas precisas.</target>
        </trans-unit>
        <trans-unit id="3305ff5f9e6888f00e265722318e8540b7b5945e" translate="yes" xml:space="preserve">
          <source>-1 is returned.</source>
          <target state="translated">-1 es devuelto.</target>
        </trans-unit>
        <trans-unit id="16372868051b38c9793bfcfb1bab9865824a7cf8" translate="yes" xml:space="preserve">
          <source>-e-arg</source>
          <target state="translated">-e-arg</target>
        </trans-unit>
        <trans-unit id="36105b9bc31e91d70aff56af9dcd73894e1e5181" translate="yes" xml:space="preserve">
          <source>-e-iz</source>
          <target state="translated">-e-iz</target>
        </trans-unit>
        <trans-unit id="c6ea641826a7102b4cb61da3fbe5c8784257cca9" translate="yes" xml:space="preserve">
          <source>-e-z</source>
          <target state="translated">-e-z</target>
        </trans-unit>
        <trans-unit id="af8605005221d6158480c209167abfb0fad20613" translate="yes" xml:space="preserve">
          <source>-eiz</source>
          <target state="translated">-eiz</target>
        </trans-unit>
        <trans-unit id="3a52ce780950d4d969792a2559cd519d7ee8c727" translate="yes" xml:space="preserve">
          <source>.</source>
          <target state="translated">.</target>
        </trans-unit>
        <trans-unit id="858e49b217359edfde089556fcb3a0afd53dff9d" translate="yes" xml:space="preserve">
          <source>. A program that has two conflicting evaluations has a</source>
          <target state="translated">. Un programa que tiene dos evaluaciones en conflicto tiene un</target>
        </trans-unit>
        <trans-unit id="cbbb5f1992507694eac424a4f3fd057df1fe433d" translate="yes" xml:space="preserve">
          <source>. A struct or union type whose member has extended alignment is an</source>
          <target state="translated">. Una estructura o tipo de uni&amp;oacute;n cuyo miembro tiene una alineaci&amp;oacute;n extendida es un</target>
        </trans-unit>
        <trans-unit id="10d5784d2f0ad622c7826278af7b5d1e2dbdfa67" translate="yes" xml:space="preserve">
          <source>. Accessing a trap representation in any way other than reading it through an lvalue expression of character type is undefined behavior. The value of a structure or union is never a trap representation even if any particular member is one.</source>
          <target state="translated">. Acceder a una representaci&amp;oacute;n de trampa de cualquier otra manera que no sea leerla a trav&amp;eacute;s de una expresi&amp;oacute;n de valor de tipo de car&amp;aacute;cter es un comportamiento indefinido. El valor de una estructura o uni&amp;oacute;n nunca es una representaci&amp;oacute;n trampa incluso si un miembro en particular es uno.</target>
        </trans-unit>
        <trans-unit id="40cdcbb4fcaaf112141529b2f4aa097584351c61" translate="yes" xml:space="preserve">
          <source>. Always stores a null character in addition to the characters matched (so the argument array must have room for at least</source>
          <target state="translated">. Siempre almacena un car&amp;aacute;cter nulo adem&amp;aacute;s de los caracteres coincidentes (por lo que la matriz de argumentos debe tener espacio para al menos</target>
        </trans-unit>
        <trans-unit id="a1b0da760b32f18ba3fc29ea2034487403e7abfa" translate="yes" xml:space="preserve">
          <source>. Each byte in memory has a unique</source>
          <target state="translated">. Cada byte en la memoria tiene un &amp;uacute;nico</target>
        </trans-unit>
        <trans-unit id="05d1e5049ce9332e42685d5c8f52a086ff3e92f9" translate="yes" xml:space="preserve">
          <source>. Every member of an anonymous struct is considered to be a member of the enclosing struct or union. This applies recursively if the enclosing struct or union is also anonymous.</source>
          <target state="translated">. Cada miembro de una estructura an&amp;oacute;nima se considera miembro de la estructura o uni&amp;oacute;n que lo encierra. Esto se aplica de forma recursiva si la estructura o uni&amp;oacute;n que la encierra tambi&amp;eacute;n es an&amp;oacute;nima.</target>
        </trans-unit>
        <trans-unit id="da6b2d39ee77d5ede52703551bff148703366c7b" translate="yes" xml:space="preserve">
          <source>. Every member of an anonymous union is considered to be a member of the enclosing struct or union. This applies recursively if the enclosing struct or union is also anonymous.</source>
          <target state="translated">. Se considera que cada miembro de una uni&amp;oacute;n an&amp;oacute;nima es miembro de la estructura o uni&amp;oacute;n adjunta. Esto se aplica de forma recursiva si la estructura o uni&amp;oacute;n que la encierra tambi&amp;eacute;n es an&amp;oacute;nima.</target>
        </trans-unit>
        <trans-unit id="bdbadb9492e1aaa923f351b943afd53e801082db" translate="yes" xml:space="preserve">
          <source>. For example, &lt;code&gt;&quot;ch&quot;&lt;/code&gt; in Czech follows &lt;code&gt;&quot;h&quot;&lt;/code&gt; and precedes &lt;code&gt;&quot;i&quot;&lt;/code&gt;, and &lt;code&gt;&quot;dzs&quot;&lt;/code&gt; in Hungarian follows &lt;code&gt;&quot;dz&quot;&lt;/code&gt; and precedes &lt;code&gt;&quot;g&quot;&lt;/code&gt;.</source>
          <target state="translated">. Por ejemplo, &lt;code&gt;&quot;ch&quot;&lt;/code&gt; en checo sigue a &lt;code&gt;&quot;h&quot;&lt;/code&gt; y precede a &lt;code&gt;&quot;i&quot;&lt;/code&gt; , y &lt;code&gt;&quot;dzs&quot;&lt;/code&gt; en h&amp;uacute;ngaro sigue a &lt;code&gt;&quot;dz&quot;&lt;/code&gt; y precede a &lt;code&gt;&quot;g&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="156efcd84b6ab49b763489ee2fc1517f4c5109ad" translate="yes" xml:space="preserve">
          <source>. For negative &lt;code&gt;LHS&lt;/code&gt;, the value of &lt;code&gt;LHS &amp;gt;&amp;gt; RHS&lt;/code&gt; is implementation-defined where in most implementations, this performs arithmetic right shift (so that the result remains negative). Thus in most implementations, right shifting a signed &lt;code&gt;LHS&lt;/code&gt; fills the new higher-order bits with the original sign bit (i.e. with 0 if it was non-negative and 1 if it was negative).</source>
          <target state="translated">. Para &lt;code&gt;LHS&lt;/code&gt; negativo , el valor de &lt;code&gt;LHS &amp;gt;&amp;gt; RHS&lt;/code&gt; est&amp;aacute; definido por la implementaci&amp;oacute;n, donde en la mayor&amp;iacute;a de las implementaciones, esto realiza un desplazamiento aritm&amp;eacute;tico a la derecha (para que el resultado permanezca negativo). Por lo tanto, en la mayor&amp;iacute;a de las implementaciones, el desplazamiento hacia la derecha de un &lt;code&gt;LHS&lt;/code&gt; firmado llena los nuevos bits de orden superior con el bit de signo original (es decir, con 0 si no era negativo y 1 si era negativo).</target>
        </trans-unit>
        <trans-unit id="d82d917e197ae463a094b584241f35f782aec1e5" translate="yes" xml:space="preserve">
          <source>. Four data models found wide acceptance:</source>
          <target state="translated">. Cuatro modelos de datos encontraron amplia aceptaci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="99a683fd566c429de6986c8efcc6c2533955f501" translate="yes" xml:space="preserve">
          <source>. In particular, OS-dependent end-of-line indicators are replaced by newline characters. The</source>
          <target state="translated">. En particular, los indicadores de fin de l&amp;iacute;nea dependientes del sistema operativo se reemplazan por caracteres de nueva l&amp;iacute;nea. los</target>
        </trans-unit>
        <trans-unit id="46fe2196ee1aed1eb16e860162ec02435b582476" translate="yes" xml:space="preserve">
          <source>. In particular, they are not assignable:</source>
          <target state="translated">. En particular, no son asignables:</target>
        </trans-unit>
        <trans-unit id="c653a9440d372d986f9a22fb459288136c558018" translate="yes" xml:space="preserve">
          <source>. It cannot be used with function declarations. If it is used on a declaration of an object, it must be present on every declaration of the same object. If it is used on a block-scope declaration, it must be combined with either &lt;code&gt;static&lt;/code&gt; or &lt;code&gt;extern&lt;/code&gt; to decide linkage.</source>
          <target state="translated">. No se puede usar con declaraciones de funciones. Si se usa en una declaraci&amp;oacute;n de un objeto, debe estar presente en cada declaraci&amp;oacute;n del mismo objeto. Si se usa en una declaraci&amp;oacute;n de alcance de bloque, debe combinarse con &lt;code&gt;static&lt;/code&gt; o &lt;code&gt;extern&lt;/code&gt; a para decidir la vinculaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="efcbee607982b2aa771b1583feadbc2da72281ea" translate="yes" xml:space="preserve">
          <source>. It is implementation-defined if over-aligned types are supported, and their support may be different in each kind of &lt;a href=&quot;storage_duration&quot;&gt;storage duration&lt;/a&gt;.</source>
          <target state="translated">. Se define en la implementaci&amp;oacute;n si se admiten tipos sobrealineados, y su compatibilidad puede ser diferente en cada tipo de &lt;a href=&quot;storage_duration&quot;&gt;duraci&amp;oacute;n&lt;/a&gt; de almacenamiento .</target>
        </trans-unit>
        <trans-unit id="e473702a4a933416fe504d91f5daab2c6f1c4d4a" translate="yes" xml:space="preserve">
          <source>. It is often used to provide an empty body to a &lt;a href=&quot;for&quot;&gt;for&lt;/a&gt; or &lt;a href=&quot;while&quot;&gt;while&lt;/a&gt; loop. It can also be used to carry a label in the end of a compound statement or before a declaration:</source>
          <target state="translated">. A menudo se utiliza para proporcionar un cuerpo vac&amp;iacute;o a una &lt;a href=&quot;for&quot;&gt;de&lt;/a&gt; o &lt;a href=&quot;while&quot;&gt;mientras&lt;/a&gt; bucle. Tambi&amp;eacute;n se puede usar para llevar una etiqueta al final de una declaraci&amp;oacute;n compuesta o antes de una declaraci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="3fd05493594e79b94be80621c509c9e737da3b3c" translate="yes" xml:space="preserve">
          <source>. No memory reads or writes in the current thread can be reordered before or after this store. All writes in other threads that release the same atomic variable are visible before the modification and the modification is visible in other threads that acquire the same atomic variable.</source>
          <target state="translated">. No se pueden reordenar lecturas o escrituras de memoria en el hilo actual antes o despu&amp;eacute;s de esta tienda. Todas las escrituras en otros hilos que liberan la misma variable at&amp;oacute;mica son visibles antes de la modificaci&amp;oacute;n y la modificaci&amp;oacute;n es visible en otros hilos que adquieren la misma variable at&amp;oacute;mica.</target>
        </trans-unit>
        <trans-unit id="270b00af5338320e1ae8a0e716a624795aadd17f" translate="yes" xml:space="preserve">
          <source>. One external definition must exist in the program if the name of the function with external linkage is used in an expression, see &lt;a href=&quot;extern#One_definition_rule&quot;&gt;one definition rule&lt;/a&gt;.</source>
          <target state="translated">. Debe existir una definici&amp;oacute;n externa en el programa si el nombre de la funci&amp;oacute;n con enlace externo se usa en una expresi&amp;oacute;n, consulte &lt;a href=&quot;extern#One_definition_rule&quot;&gt;una regla de definici&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9ec6034a0a3e4f26898f4f03914a189bcae87c10" translate="yes" xml:space="preserve">
          <source>. Only then &lt;code&gt;feof&lt;/code&gt; returns non-zero.</source>
          <target state="translated">. Solo entonces &lt;code&gt;feof&lt;/code&gt; devuelve valores distintos de cero.</target>
        </trans-unit>
        <trans-unit id="f7c05934e49017a55ffd7f8db5e6be448b7c6949" translate="yes" xml:space="preserve">
          <source>. Otherwise, it is a</source>
          <target state="translated">. De lo contrario, es un</target>
        </trans-unit>
        <trans-unit id="4ee5e750f90c1a9b7b4fab6d56ee4fd4da4ddf59" translate="yes" xml:space="preserve">
          <source>. Same applies to function calls and lvalue accesses; argument types must be</source>
          <target state="translated">. Lo mismo se aplica a las llamadas a funciones y accesos lvalue; los tipos de argumento deben ser</target>
        </trans-unit>
        <trans-unit id="f2ff0599118c160cd812ea9c4d11954873276237" translate="yes" xml:space="preserve">
          <source>. See &lt;a href=&quot;struct&quot;&gt;struct&lt;/a&gt; for details:</source>
          <target state="translated">. Ver &lt;a href=&quot;struct&quot;&gt;estructura&lt;/a&gt; para m&amp;aacute;s detalles:</target>
        </trans-unit>
        <trans-unit id="21418531aab799fd1c9004344d71da3f5022f447" translate="yes" xml:space="preserve">
          <source>. Temporary lifetime begins when the expression that refers to such object is evaluated and ends at the next &lt;a href=&quot;eval_order&quot;&gt;sequence point&lt;/a&gt;(until C11)when the containing full expression or full declarator ends(since C11).</source>
          <target state="translated">. El tiempo de vida temporal comienza cuando se eval&amp;uacute;a la expresi&amp;oacute;n que se refiere a dicho objeto y termina en el siguiente &lt;a href=&quot;eval_order&quot;&gt;punto de secuencia&lt;/a&gt; (hasta C11) cuando finaliza la expresi&amp;oacute;n que contiene o el declarador completo (desde C11).</target>
        </trans-unit>
        <trans-unit id="3cb17b45da870b7ec9baaca006a81afb0e3f404f" translate="yes" xml:space="preserve">
          <source>. The function then searches from that point on for the first character that</source>
          <target state="translated">. A partir de ese momento, la funci&amp;oacute;n busca el primer car&amp;aacute;cter que</target>
        </trans-unit>
        <trans-unit id="2923ece4a0bd3546cfdc4f62787758294b263ad1" translate="yes" xml:space="preserve">
          <source>. The function then searches from that point on for the first wide character that</source>
          <target state="translated">. A partir de ese momento, la funci&amp;oacute;n busca el primer car&amp;aacute;cter ancho que</target>
        </trans-unit>
        <trans-unit id="b32bdd7e11f2f4d8b46b2592db4c68dc65ad8f8a" translate="yes" xml:space="preserve">
          <source>. The identifier can be referred to from all scopes in the current translation unit. All &lt;code&gt;static&lt;/code&gt; file-scope identifiers (both functions and variables) have this linkage.</source>
          <target state="translated">. Se puede hacer referencia al identificador desde todos los &amp;aacute;mbitos en la unidad de traducci&amp;oacute;n actual. Todos &lt;code&gt;static&lt;/code&gt; identificadores est&amp;aacute;ticos de alcance de archivo (tanto funciones como variables) tienen este enlace.</target>
        </trans-unit>
        <trans-unit id="d87917fae1af4f4aab36a5eae7fc7ecbf1051535" translate="yes" xml:space="preserve">
          <source>. The identifier can be referred to from any other translation units in the entire program. All non-&lt;code&gt;static&lt;/code&gt; functions, all &lt;code&gt;extern&lt;/code&gt; variables (unless earlier declared &lt;code&gt;static&lt;/code&gt;), and all file-scope non-&lt;code&gt;static&lt;/code&gt; variables have this linkage.</source>
          <target state="translated">. Se puede hacer referencia al identificador desde cualquier otra unidad de traducci&amp;oacute;n en todo el programa. Todas las funciones no &lt;code&gt;static&lt;/code&gt; , todas las variables &lt;code&gt;extern&lt;/code&gt; as (a menos que se hayan declarado &lt;code&gt;static&lt;/code&gt; ) y todas las variables no &lt;code&gt;static&lt;/code&gt; alcance de archivo tienen este enlace.</target>
        </trans-unit>
        <trans-unit id="f4fe68dc3d44eb94fc2705ac07d81921b98a9811" translate="yes" xml:space="preserve">
          <source>. The identifier can be referred to only from the scope it is in. All function parameters and all non-&lt;code&gt;extern&lt;/code&gt; block-scope variables (including the ones declared &lt;code&gt;static&lt;/code&gt;) have this linkage.</source>
          <target state="translated">. Se puede hacer referencia al identificador solo desde el alcance en el que se encuentra. Todos los par&amp;aacute;metros de funci&amp;oacute;n y todas las variables de alcance de bloque no &lt;code&gt;extern&lt;/code&gt; as (incluidas las declaradas &lt;code&gt;static&lt;/code&gt; ) tienen este enlace.</target>
        </trans-unit>
        <trans-unit id="199a71d4fe5f266ce5c976edc3091a2497b673a9" translate="yes" xml:space="preserve">
          <source>. The members of the current object are initialized in their natural order, unless designators are used(since C99): array elements in subscript order, struct members in declaration order, only the first declared member of any union. The subobjects within the current object that aren't explicitly initialized by the closing brace are &lt;a href=&quot;initialization#Implicit_initialization&quot;&gt;implicitly initialized&lt;/a&gt;.</source>
          <target state="translated">. Los miembros del objeto actual se inicializan en su orden natural, a menos que se usen designadores (desde C99): elementos de matriz en orden de sub&amp;iacute;ndice, miembros de estructura en orden de declaraci&amp;oacute;n, solo el primer miembro declarado de cualquier uni&amp;oacute;n. Los subobjetos dentro del objeto actual que no se inicializan expl&amp;iacute;citamente con la llave de cierre se &lt;a href=&quot;initialization#Implicit_initialization&quot;&gt;inicializan impl&amp;iacute;citamente&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bd1533b5c76faaff962a16812c24ba77289b8b1c" translate="yes" xml:space="preserve">
          <source>. The name of this value category (&quot;left value&quot;) is historic and reflects the use of lvalue expressions as the left-hand operand of the assignment operator in the CPL programming language.</source>
          <target state="translated">. El nombre de esta categor&amp;iacute;a de valor (&quot;valor izquierdo&quot;) es hist&amp;oacute;rico y refleja el uso de expresiones lvalue como el operando izquierdo del operador de asignaci&amp;oacute;n en el lenguaje de programaci&amp;oacute;n CPL.</target>
        </trans-unit>
        <trans-unit id="70afa199f9e454e592094e63f04435db313ca692" translate="yes" xml:space="preserve">
          <source>. The number of those objects (the array size) never changes during the array lifetime.</source>
          <target state="translated">. El n&amp;uacute;mero de esos objetos (el tama&amp;ntilde;o del conjunto) nunca cambia durante la vida &amp;uacute;til del conjunto.</target>
        </trans-unit>
        <trans-unit id="6eae3a5b062c6d0d79f070c26e6d62486b40cb46" translate="yes" xml:space="preserve">
          <source>...</source>
          <target state="translated">...</target>
        </trans-unit>
        <trans-unit id="42099b4af021e53fd8fd4e056c2568d7c2e3ffa8" translate="yes" xml:space="preserve">
          <source>/</source>
          <target state="translated">/</target>
        </trans-unit>
        <trans-unit id="b6589fc6ab0dc82cf12099d1c2d40ab994e8410c" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>
        </trans-unit>
        <trans-unit id="a0bd242d4e9823dde121cf81241caa8cb18b052a" translate="yes" xml:space="preserve">
          <source>0&amp;ndash;8</source>
          <target state="translated">0&amp;ndash;8</target>
        </trans-unit>
        <trans-unit id="356a192b7913b04c54574d18c28d46e6395428ab" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>
        </trans-unit>
        <trans-unit id="83ea50c76bc44cdd9e4f766c317db5c2037df0e1" translate="yes" xml:space="preserve">
          <source>1) (none)</source>
          <target state="translated">1)(ninguno)</target>
        </trans-unit>
        <trans-unit id="11d9b8b52ebd3e1a3a024e6ccd57926c21a2e926" translate="yes" xml:space="preserve">
          <source>1) &lt;code&gt;​0​&lt;/code&gt; on success, non-zero otherwise.</source>
          <target state="translated">1) &lt;code&gt;​0​&lt;/code&gt; en caso de &amp;eacute;xito, no cero en caso contrario.</target>
        </trans-unit>
        <trans-unit id="db4fdc7ee8919c52d9ff62ab1d23e4f526ff796f" translate="yes" xml:space="preserve">
          <source>1) A copy of &lt;code&gt;dest&lt;/code&gt;</source>
          <target state="translated">1) Una copia de &lt;code&gt;dest&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9cf81edb2a0296bfb9bc51419dde4d268c15d114" translate="yes" xml:space="preserve">
          <source>1) A copy of the value of &lt;code&gt;stream&lt;/code&gt; on success, null pointer on failure.</source>
          <target state="translated">1) Una copia del valor de &lt;code&gt;stream&lt;/code&gt; en caso de &amp;eacute;xito, puntero nulo en caso de error.</target>
        </trans-unit>
        <trans-unit id="fd67aae7670ce9feb6c456fa4c2bd3f355bc3610" translate="yes" xml:space="preserve">
          <source>1) A prototype for this function cannot be supplied by the program</source>
          <target state="translated">1)Un prototipo para esta función no puede ser suministrado por el programa</target>
        </trans-unit>
        <trans-unit id="a06bae56366c0365ad6bbfb4ad7f6ef6a73924b7" translate="yes" xml:space="preserve">
          <source>1) All characters and &lt;a href=&quot;escape&quot;&gt;escape sequences&lt;/a&gt; in &lt;a href=&quot;character_constant&quot;&gt;character constants&lt;/a&gt; and &lt;a href=&quot;string_literal&quot;&gt;string literals&lt;/a&gt; are converted from</source>
          <target state="translated">1) Todos los caracteres y &lt;a href=&quot;escape&quot;&gt;secuencias de escape&lt;/a&gt; en &lt;a href=&quot;character_constant&quot;&gt;constantes de caracteres&lt;/a&gt; y &lt;a href=&quot;string_literal&quot;&gt;literales de cadena&lt;/a&gt; se convierten de</target>
        </trans-unit>
        <trans-unit id="f4c27bcea4b3aa21b616a6c85befb0ea0ba672b6" translate="yes" xml:space="preserve">
          <source>1) Appends a copy of the null-terminated byte string pointed to by &lt;code&gt;src&lt;/code&gt; to the end of the null-terminated byte string pointed to by &lt;code&gt;dest&lt;/code&gt;. The character &lt;code&gt;src[0]&lt;/code&gt; replaces the null terminator at the end of &lt;code&gt;dest&lt;/code&gt;. The resulting byte string is null-terminated.</source>
          <target state="translated">1) Anexa una copia de la cadena de bytes terminada en nulo se&amp;ntilde;alada por &lt;code&gt;src&lt;/code&gt; al final de la cadena de bytes terminada en nulo se&amp;ntilde;alada por &lt;code&gt;dest&lt;/code&gt; . El car&amp;aacute;cter &lt;code&gt;src[0]&lt;/code&gt; reemplaza el terminador nulo al final de &lt;code&gt;dest&lt;/code&gt; . La cadena de bytes resultante tiene una terminaci&amp;oacute;n nula.</target>
        </trans-unit>
        <trans-unit id="08031e1a5a9b737bab0ed454a3f52b54d4de06f5" translate="yes" xml:space="preserve">
          <source>1) Appends a copy of the wide string pointed to by &lt;code&gt;src&lt;/code&gt; to the end of the wide string pointed to by &lt;code&gt;dest&lt;/code&gt;. The wide character &lt;code&gt;src[0]&lt;/code&gt; replaces the null terminator at the end of &lt;code&gt;dest&lt;/code&gt;. The resulting wide string is null-terminated. The behavior is undefined if the destination array is not large enough for the contents of both &lt;code&gt;str&lt;/code&gt; and &lt;code&gt;dest&lt;/code&gt; and the terminating null wide character. The behavior is undefined if the strings overlap.</source>
          <target state="translated">1) Agrega una copia de la cadena ancha apuntada por &lt;code&gt;src&lt;/code&gt; al final de la cadena ancha apuntada por &lt;code&gt;dest&lt;/code&gt; . El car&amp;aacute;cter ancho &lt;code&gt;src[0]&lt;/code&gt; reemplaza el terminador nulo al final de &lt;code&gt;dest&lt;/code&gt; . La cadena ancha resultante tiene una terminaci&amp;oacute;n nula. El comportamiento no est&amp;aacute; definido si la matriz de destino no es lo suficientemente grande para el contenido de &lt;code&gt;str&lt;/code&gt; y &lt;code&gt;dest&lt;/code&gt; y el car&amp;aacute;cter ancho nulo de terminaci&amp;oacute;n. El comportamiento es indefinido si las cadenas se superponen.</target>
        </trans-unit>
        <trans-unit id="b99941872ecc3e15229952c1e253cc3f757e0b3f" translate="yes" xml:space="preserve">
          <source>1) Appends at most &lt;code&gt;count&lt;/code&gt; characters from the character array pointed to by &lt;code&gt;src&lt;/code&gt;, stopping if the null character is found, to the end of the null-terminated byte string pointed to by &lt;code&gt;dest&lt;/code&gt;. The character &lt;code&gt;src[0]&lt;/code&gt; replaces the null terminator at the end of &lt;code&gt;dest&lt;/code&gt;. The terminating null character is always appended in the end (so the maximum number of bytes the function may write is &lt;code&gt;count+1&lt;/code&gt;).</source>
          <target state="translated">1) Agrega como m&amp;aacute;ximo caracteres de &lt;code&gt;count&lt;/code&gt; de la matriz de caracteres a los que apunta &lt;code&gt;src&lt;/code&gt; , deteni&amp;eacute;ndose si se encuentra el car&amp;aacute;cter nulo, al final de la cadena de bytes terminada en nulo a la que apunta &lt;code&gt;dest&lt;/code&gt; . El car&amp;aacute;cter &lt;code&gt;src[0]&lt;/code&gt; reemplaza el terminador nulo al final de &lt;code&gt;dest&lt;/code&gt; . El car&amp;aacute;cter nulo de terminaci&amp;oacute;n siempre se agrega al final (por lo que el n&amp;uacute;mero m&amp;aacute;ximo de bytes que la funci&amp;oacute;n puede escribir es &lt;code&gt;count+1&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c18345579796716674aabf25842f580fad0d9342" translate="yes" xml:space="preserve">
          <source>1) Appends at most &lt;code&gt;count&lt;/code&gt; wide characters from the wide string pointed to by &lt;code&gt;src&lt;/code&gt;, stopping if the null terminator is copied, to the end of the character string pointed to by &lt;code&gt;dest&lt;/code&gt;. The wide character &lt;code&gt;src[0]&lt;/code&gt; replaces the null terminator at the end of &lt;code&gt;dest&lt;/code&gt;. The null terminator is always appended in the end (so the maximum number of wide characters the function may write is &lt;code&gt;count+1&lt;/code&gt;).</source>
          <target state="translated">1) Anexa a lo sumo &lt;code&gt;count&lt;/code&gt; caracteres anchos de la cadena amplia apuntada por &lt;code&gt;src&lt;/code&gt; , parando si se copia el terminador nulo, hasta el final de la cadena de caracteres apuntada por &lt;code&gt;dest&lt;/code&gt; . El car&amp;aacute;cter ancho &lt;code&gt;src[0]&lt;/code&gt; reemplaza el terminador nulo al final de &lt;code&gt;dest&lt;/code&gt; . El terminador nulo siempre se agrega al final (por lo que el n&amp;uacute;mero m&amp;aacute;ximo de caracteres anchos que puede escribir la funci&amp;oacute;n es &lt;code&gt;count+1&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="2cf951793fb3601a461222562ec10cec2c5a2f31" translate="yes" xml:space="preserve">
          <source>1) Attempts to establish the floating-point rounding direction equal to the argument &lt;code&gt;round&lt;/code&gt;, which is expected to be one of the &lt;a href=&quot;fe_round&quot;&gt;floating-point rounding macros&lt;/a&gt;.</source>
          <target state="translated">1) Intenta establecer la direcci&amp;oacute;n de redondeo de punto flotante igual a la &lt;code&gt;round&lt;/code&gt; argumento , que se espera que sea una de las &lt;a href=&quot;fe_round&quot;&gt;macros de redondeo de punto flotante&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7e3a5800b099aa0f75fced4ac6f2262d5f08936e" translate="yes" xml:space="preserve">
          <source>1) Attempts to obtain the full contents of the floating-point exception flags that are listed in the bitmask argument &lt;code&gt;excepts&lt;/code&gt;, which is a bitwise OR of the &lt;a href=&quot;fe_exceptions&quot;&gt;floating point exception macros&lt;/a&gt;.</source>
          <target state="translated">1) Intenta obtener el contenido completo de los indicadores de excepci&amp;oacute;n de punto flotante que se enumeran en las &lt;code&gt;excepts&lt;/code&gt; argumento de m&amp;aacute;scara de bits , que es un OR bit a bit de las &lt;a href=&quot;fe_exceptions&quot;&gt;macros de excepci&amp;oacute;n de punto flotante&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="76935444316711f1ef025f07ccf80865f5a71493" translate="yes" xml:space="preserve">
          <source>1) Attempts to store the status of the floating-point environment in the object pointed to by &lt;code&gt;envp&lt;/code&gt;.</source>
          <target state="translated">1) Intenta almacenar el estado del entorno de punto flotante en el objeto al que apunta &lt;code&gt;envp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3b24745626bd03a2ab5efc63b5854099ebde7df1" translate="yes" xml:space="preserve">
          <source>1) Behaves in an implementation-defined manner (unless pragma_params is one of the standard pragmas shown below.</source>
          <target state="translated">1)Se comporta de una manera definida por la aplicación (a menos que pragma_params sea uno de los pragmas estándar que se muestran a continuación.</target>
        </trans-unit>
        <trans-unit id="138c1b3894139574f948bc1c61f3212b9d87e826" translate="yes" xml:space="preserve">
          <source>1) Calls function &lt;code&gt;func&lt;/code&gt; exactly once, even if invoked from several threads. The completion of the function &lt;code&gt;func&lt;/code&gt; synchronizes with all previous or subsequent calls to &lt;code&gt;call_once&lt;/code&gt; with the same &lt;code&gt;flag&lt;/code&gt; variable.</source>
          <target state="translated">1) Las llamadas a funciones &lt;code&gt;func&lt;/code&gt; exactamente una vez, incluso si invoca desde varios hilos. La finalizaci&amp;oacute;n de la funci&amp;oacute;n &lt;code&gt;func&lt;/code&gt; se sincroniza con todas las llamadas anteriores o posteriores a &lt;code&gt;call_once&lt;/code&gt; con la misma variable de &lt;code&gt;flag&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e983fa94e9bc0fa6eb7fb9a5ff2433f9ef36483b" translate="yes" xml:space="preserve">
          <source>1) Changes the current preprocessor line number to lineno. Occurrences of the macro &lt;code&gt;__LINE__&lt;/code&gt; beyond this point will expand to lineno plus the number of actual source code lines encountered since.</source>
          <target state="translated">1) Cambia el n&amp;uacute;mero de l&amp;iacute;nea actual del preprocesador a lineno. Las apariciones de la macro &lt;code&gt;__LINE__&lt;/code&gt; m&amp;aacute;s all&amp;aacute; de este punto se expandir&amp;aacute;n a lineno m&amp;aacute;s el n&amp;uacute;mero de l&amp;iacute;neas de c&amp;oacute;digo fuente reales encontradas desde entonces.</target>
        </trans-unit>
        <trans-unit id="d5ed3f255f6b9b3c5f5fa5c30070ea9c33ab2c83" translate="yes" xml:space="preserve">
          <source>1) Constants and literals (e.g. &lt;code&gt;2&lt;/code&gt; or &lt;code&gt;&quot;Hello, world&quot;&lt;/code&gt;)</source>
          <target state="translated">1) Constantes y literales (por ejemplo, &lt;code&gt;2&lt;/code&gt; o &lt;code&gt;&quot;Hello, world&quot;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="26f875ec4a5353d8ecd54b7cbbdee1a952c7e0ba" translate="yes" xml:space="preserve">
          <source>1) Converts a multibyte character string from the array whose first element is pointed to by &lt;code&gt;src&lt;/code&gt; to its wide character representation. Converted characters are stored in the successive elements of the array pointed to by &lt;code&gt;dst&lt;/code&gt;. No more than &lt;code&gt;len&lt;/code&gt; wide characters are written to the destination array.</source>
          <target state="translated">1) Convierte una cadena de caracteres multibyte de la matriz cuyo primer elemento es se&amp;ntilde;alado por &lt;code&gt;src&lt;/code&gt; a su representaci&amp;oacute;n de caracteres anchos. Los caracteres convertidos se almacenan en los elementos sucesivos de la matriz a la que apunta &lt;code&gt;dst&lt;/code&gt; . No se escriben m&amp;aacute;s de &lt;code&gt;len&lt;/code&gt; caracteres anchos en la matriz de destino.</target>
        </trans-unit>
        <trans-unit id="a8c4295d066a7eee1c6ec3ec4bc022057c919c29" translate="yes" xml:space="preserve">
          <source>1) Converts a null-terminated multibyte character sequence, which begins in the conversion state described by &lt;code&gt;*ps&lt;/code&gt;, from the array whose first element is pointed to by &lt;code&gt;*src&lt;/code&gt; to its wide character representation. If &lt;code&gt;dst&lt;/code&gt; is not null, converted characters are stored in the successive elements of the wchar_t array pointed to by &lt;code&gt;dst&lt;/code&gt;. No more than &lt;code&gt;len&lt;/code&gt; wide characters are written to the destination array. Each multibyte character is converted as if by a call to &lt;code&gt;&lt;a href=&quot;mbrtowc&quot;&gt;mbrtowc&lt;/a&gt;&lt;/code&gt;. The conversion stops if:</source>
          <target state="translated">1) Convierte una secuencia de caracteres multibyte terminada en nulo, que comienza en el estado de conversi&amp;oacute;n descrito por &lt;code&gt;*ps&lt;/code&gt; , de la matriz cuyo primer elemento apunta &lt;code&gt;*src&lt;/code&gt; a su representaci&amp;oacute;n de caracteres anchos. Si &lt;code&gt;dst&lt;/code&gt; no es nulo, los caracteres convertidos se almacenan en los elementos sucesivos de la matriz wchar_t se&amp;ntilde;alados por &lt;code&gt;dst&lt;/code&gt; . No se escriben m&amp;aacute;s de &lt;code&gt;len&lt;/code&gt; caracteres anchos en la matriz de destino. Cada car&amp;aacute;cter multibyte se convierte como si fuera una llamada a &lt;code&gt;&lt;a href=&quot;mbrtowc&quot;&gt;mbrtowc&lt;/a&gt;&lt;/code&gt; . La conversi&amp;oacute;n se detiene si:</target>
        </trans-unit>
        <trans-unit id="9f93e58e321a3860c1682a47646bc77c313d5564" translate="yes" xml:space="preserve">
          <source>1) Converts a sequence of wide characters from the array whose first element is pointed to by &lt;code&gt;*src&lt;/code&gt; to its narrow multibyte representation that begins in the conversion state described by &lt;code&gt;*ps&lt;/code&gt;. If &lt;code&gt;dst&lt;/code&gt; is not null, converted characters are stored in the successive elements of the char array pointed to by &lt;code&gt;dst&lt;/code&gt;. No more than &lt;code&gt;len&lt;/code&gt; bytes are written to the destination array.</source>
          <target state="translated">1) Convierte una secuencia de caracteres anchos de la matriz cuyo primer elemento se&amp;ntilde;ala &lt;code&gt;*src&lt;/code&gt; en su representaci&amp;oacute;n multibyte estrecha que comienza en el estado de conversi&amp;oacute;n descrito por &lt;code&gt;*ps&lt;/code&gt; . Si &lt;code&gt;dst&lt;/code&gt; no es nulo, los caracteres convertidos se almacenan en los elementos sucesivos de la matriz de caracteres a los que apunta &lt;code&gt;dst&lt;/code&gt; . No se escriben m&amp;aacute;s de &lt;code&gt;len&lt;/code&gt; bytes en la matriz de destino.</target>
        </trans-unit>
        <trans-unit id="ba625a1ebaeadb1d6253272f6f21258cafb64d31" translate="yes" xml:space="preserve">
          <source>1) Converts a sequence of wide characters from the array whose first element is pointed to by &lt;code&gt;src&lt;/code&gt; to its narrow multibyte representation that begins in the initial shift state. Converted characters are stored in the successive elements of the char array pointed to by &lt;code&gt;dst&lt;/code&gt;. No more than &lt;code&gt;len&lt;/code&gt; bytes are written to the destination array.</source>
          <target state="translated">1) Convierte una secuencia de caracteres anchos de la matriz cuyo primer elemento es se&amp;ntilde;alado por &lt;code&gt;src&lt;/code&gt; a su representaci&amp;oacute;n multibyte estrecha que comienza en el estado de cambio inicial. Los caracteres convertidos se almacenan en los elementos sucesivos de la matriz de caracteres a los que apunta &lt;code&gt;dst&lt;/code&gt; . No se escriben m&amp;aacute;s de &lt;code&gt;len&lt;/code&gt; bytes en la matriz de destino.</target>
        </trans-unit>
        <trans-unit id="742ed9e76e2e160f70177e7d4aac7c94023ca13f" translate="yes" xml:space="preserve">
          <source>1) Converts a wide character &lt;code&gt;wc&lt;/code&gt; to multibyte encoding and stores it (including any shift sequences) in the char array whose first element is pointed to by &lt;code&gt;s&lt;/code&gt;. No more than &lt;code&gt;MB_CUR_MAX&lt;/code&gt; characters are stored.</source>
          <target state="translated">1) Convierte un &lt;code&gt;wc&lt;/code&gt; de caracteres anchos en codificaci&amp;oacute;n multibyte y lo almacena (incluidas las secuencias de may&amp;uacute;sculas y min&amp;uacute;sculas) en la matriz de caracteres cuyo primer elemento se&amp;ntilde;ala &lt;code&gt;s&lt;/code&gt; . No se almacenan m&amp;aacute;s de &lt;code&gt;MB_CUR_MAX&lt;/code&gt; caracteres.</target>
        </trans-unit>
        <trans-unit id="ac819900e9b8a74bb53dee492bfaff8a7341bcee" translate="yes" xml:space="preserve">
          <source>1) Converts given calendar time &lt;code&gt;&lt;a href=&quot;tm&quot;&gt;tm&lt;/a&gt;&lt;/code&gt; to a textual representation of the following fixed 25-character form: &lt;code&gt;Www Mmm dd hh:mm:ss yyyy\n&lt;/code&gt;</source>
          <target state="translated">1) Convierte el tiempo calendario dado &lt;code&gt;&lt;a href=&quot;tm&quot;&gt;tm&lt;/a&gt;&lt;/code&gt; en una representaci&amp;oacute;n textual de la siguiente forma fija de 25 caracteres: &lt;code&gt;Www Mmm dd hh:mm:ss yyyy\n&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="be400bf1c11f227aed0d43b3234b3ce9f4ab1874" translate="yes" xml:space="preserve">
          <source>1) Converts given time since epoch (a &lt;code&gt;&lt;a href=&quot;time_t&quot;&gt;time_t&lt;/a&gt;&lt;/code&gt; value pointed to by &lt;code&gt;time&lt;/code&gt;) into calendar time, expressed in Coordinated Universal Time (UTC) in the &lt;a href=&quot;tm&quot;&gt;struct tm&lt;/a&gt; format. The result is stored in static storage and a pointer to that static storage is returned.</source>
          <target state="translated">1) Convierte el tiempo dado desde la &amp;eacute;poca (un valor &lt;code&gt;&lt;a href=&quot;time_t&quot;&gt;time_t&lt;/a&gt;&lt;/code&gt; se&amp;ntilde;alado por el &lt;code&gt;time&lt;/code&gt; ) en tiempo calendario, expresado en Tiempo Universal Coordinado (UTC) en el formato &lt;a href=&quot;tm&quot;&gt;struct tm&lt;/a&gt; . El resultado se almacena en almacenamiento est&amp;aacute;tico y se devuelve un puntero a ese almacenamiento est&amp;aacute;tico.</target>
        </trans-unit>
        <trans-unit id="720c7e0c7407653d5a17b2390efef16373b73e84" translate="yes" xml:space="preserve">
          <source>1) Converts given time since epoch (a &lt;code&gt;&lt;a href=&quot;time_t&quot;&gt;time_t&lt;/a&gt;&lt;/code&gt; value pointed to by &lt;code&gt;time&lt;/code&gt;) into calendar time, expressed in local time, in the &lt;a href=&quot;tm&quot;&gt;struct tm&lt;/a&gt; format. The result is stored in static storage and a pointer to that static storage is returned.</source>
          <target state="translated">1) Convierte el tiempo dado desde la &amp;eacute;poca (un valor &lt;code&gt;&lt;a href=&quot;time_t&quot;&gt;time_t&lt;/a&gt;&lt;/code&gt; se&amp;ntilde;alado por el &lt;code&gt;time&lt;/code&gt; ) en tiempo calendario, expresado en hora local, en el formato &lt;a href=&quot;tm&quot;&gt;struct tm&lt;/a&gt; . El resultado se almacena en almacenamiento est&amp;aacute;tico y se devuelve un puntero a ese almacenamiento est&amp;aacute;tico.</target>
        </trans-unit>
        <trans-unit id="70c6b5e08bb0f4691eb13e9edbb42cc49ce887fc" translate="yes" xml:space="preserve">
          <source>1) Converts given time since epoch to a calendar local time and then to a textual representation, as if by calling &lt;code&gt;&lt;a href=&quot;asctime&quot;&gt;asctime&lt;/a&gt;(&lt;a href=&quot;localtime&quot;&gt;localtime&lt;/a&gt;(&lt;a href=&quot;time&quot;&gt;time&lt;/a&gt;))&lt;/code&gt;.</source>
          <target state="translated">1) convierte dados vez desde &amp;eacute;poca a una hora local de calendario y luego a una representaci&amp;oacute;n textual, como si llamando &lt;code&gt;&lt;a href=&quot;asctime&quot;&gt;asctime&lt;/a&gt;(&lt;a href=&quot;localtime&quot;&gt;localtime&lt;/a&gt;(&lt;a href=&quot;time&quot;&gt;time&lt;/a&gt;))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="57b1fe8bdc9c8a0e3c4dba38a5aa9a884691a635" translate="yes" xml:space="preserve">
          <source>1) Copies &lt;code&gt;count&lt;/code&gt; characters from the object pointed to by &lt;code&gt;src&lt;/code&gt; to the object pointed to by &lt;code&gt;dest&lt;/code&gt;. Both objects are interpreted as arrays of &lt;code&gt;unsigned char&lt;/code&gt;.</source>
          <target state="translated">1) Las copias &lt;code&gt;count&lt;/code&gt; caracteres del objeto se&amp;ntilde;alado por &lt;code&gt;src&lt;/code&gt; en el objeto se&amp;ntilde;alado por &lt;code&gt;dest&lt;/code&gt; . Ambos objetos se interpretan como matrices de caracteres &lt;code&gt;unsigned char&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6e4f836ea862dfbbf74c4fb83ee893f724f6e7a7" translate="yes" xml:space="preserve">
          <source>1) Copies &lt;code&gt;count&lt;/code&gt; characters from the object pointed to by &lt;code&gt;src&lt;/code&gt; to the object pointed to by &lt;code&gt;dest&lt;/code&gt;. Both objects are interpreted as arrays of &lt;code&gt;unsigned char&lt;/code&gt;. The objects may overlap: copying takes place as if the characters were copied to a temporary character array and then the characters were copied from the array to &lt;code&gt;dest&lt;/code&gt;.</source>
          <target state="translated">1) Las copias &lt;code&gt;count&lt;/code&gt; caracteres del objeto se&amp;ntilde;alado por &lt;code&gt;src&lt;/code&gt; en el objeto se&amp;ntilde;alado por &lt;code&gt;dest&lt;/code&gt; . Ambos objetos se interpretan como matrices de caracteres &lt;code&gt;unsigned char&lt;/code&gt; . Los objetos pueden superponerse: la copia se realiza como si los caracteres se copiaran en una matriz de caracteres temporal y luego los caracteres se copiaron de la matriz a &lt;code&gt;dest&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="172cb9c7358f412aba13d2b339b46d572713ebe4" translate="yes" xml:space="preserve">
          <source>1) Copies at most &lt;code&gt;count&lt;/code&gt; characters of the character array pointed to by &lt;code&gt;src&lt;/code&gt; (including the terminating null character, but not any of the characters that follow the null character) to character array pointed to by &lt;code&gt;dest&lt;/code&gt;.</source>
          <target state="translated">1) Copia, como m&amp;aacute;ximo, los caracteres de &lt;code&gt;count&lt;/code&gt; de la matriz de caracteres a los que apunta &lt;code&gt;src&lt;/code&gt; (incluido el car&amp;aacute;cter nulo final, pero no ninguno de los caracteres que siguen al car&amp;aacute;cter nulo) a la matriz de caracteres a la que apunta &lt;code&gt;dest&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d1e35a404f49962ccbce6ddc3130c0228ad1eadb" translate="yes" xml:space="preserve">
          <source>1) Copies at most &lt;code&gt;count&lt;/code&gt; characters of the wide string pointed to by &lt;code&gt;src&lt;/code&gt; (including the terminating null wide character) to wide character array pointed to by &lt;code&gt;dest&lt;/code&gt;.</source>
          <target state="translated">1) Copia en la mayor&amp;iacute;a de los caracteres de &lt;code&gt;count&lt;/code&gt; de la cadena ancha apuntada por &lt;code&gt;src&lt;/code&gt; (incluido el car&amp;aacute;cter ancho nulo de terminaci&amp;oacute;n) a la matriz de caracteres anchos apuntada por &lt;code&gt;dest&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="447755db4ad329acc0727c1837ba83cd9d154adf" translate="yes" xml:space="preserve">
          <source>1) Copies exactly &lt;code&gt;count&lt;/code&gt; successive wide characters from the wide character array pointed to by &lt;code&gt;src&lt;/code&gt; to the wide character array pointed to by &lt;code&gt;dest&lt;/code&gt;. If &lt;code&gt;count&lt;/code&gt; is zero, the function does nothing. The arrays may overlap: copying takes place as if the wide characters were copied to a temporary wide character array and then copied from the temporary array to &lt;code&gt;dest&lt;/code&gt;.</source>
          <target state="translated">1) Las copias &lt;code&gt;count&lt;/code&gt; exactamente los caracteres anchos sucesivos desde la matriz de caracteres anchos apuntada por &lt;code&gt;src&lt;/code&gt; a la matriz de caracteres anchos apuntada por &lt;code&gt;dest&lt;/code&gt; . Si &lt;code&gt;count&lt;/code&gt; es cero, la funci&amp;oacute;n no hace nada. Las matrices pueden superponerse: la copia se lleva a cabo como si los caracteres anchos se copiaran en una matriz temporal de caracteres anchos y luego se copiaran de la matriz temporal a &lt;code&gt;dest&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="78b1d607326b01639aaefc137474111c344cb563" translate="yes" xml:space="preserve">
          <source>1) Copies exactly &lt;code&gt;count&lt;/code&gt; successive wide characters from the wide character array pointed to by &lt;code&gt;src&lt;/code&gt; to the wide character array pointed to by &lt;code&gt;dest&lt;/code&gt;. If the objects overlap, the behavior is undefined. If &lt;code&gt;count&lt;/code&gt; is zero, the function does nothing.</source>
          <target state="translated">1) Las copias &lt;code&gt;count&lt;/code&gt; exactamente los caracteres anchos sucesivos desde la matriz de caracteres anchos apuntada por &lt;code&gt;src&lt;/code&gt; a la matriz de caracteres anchos apuntada por &lt;code&gt;dest&lt;/code&gt; . Si los objetos se superponen, el comportamiento es indefinido. Si &lt;code&gt;count&lt;/code&gt; es cero, la funci&amp;oacute;n no hace nada.</target>
        </trans-unit>
        <trans-unit id="b408a74f2a7d5bade4157133f5249ec3f18a9377" translate="yes" xml:space="preserve">
          <source>1) Copies the null-terminated byte string pointed to by &lt;code&gt;src&lt;/code&gt;, including the null terminator, to the character array whose first element is pointed to by &lt;code&gt;dest&lt;/code&gt;.</source>
          <target state="translated">1) Copia la cadena de bytes terminada en nulo a la que apunta &lt;code&gt;src&lt;/code&gt; , incluido el terminador nulo, en la matriz de caracteres cuyo primer elemento es se&amp;ntilde;alado por &lt;code&gt;dest&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a7590c8dfe7f9f4f0cba2d3d1e496da4894b3aeb" translate="yes" xml:space="preserve">
          <source>1) Copies the value &lt;code&gt;ch&lt;/code&gt; (after conversion to &lt;code&gt;unsigned char&lt;/code&gt; as if by &lt;code&gt;(unsigned char)ch&lt;/code&gt;) into each of the first &lt;code&gt;count&lt;/code&gt; characters of the object pointed to by &lt;code&gt;dest&lt;/code&gt;.</source>
          <target state="translated">1) Copia el valor &lt;code&gt;ch&lt;/code&gt; (despu&amp;eacute;s de la conversi&amp;oacute;n a &lt;code&gt;unsigned char&lt;/code&gt; como si fuera by &lt;code&gt;(unsigned char)ch&lt;/code&gt; ) en cada uno de los primeros caracteres de &lt;code&gt;count&lt;/code&gt; del objeto al que apunta &lt;code&gt;dest&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0a598e9d9f0eae6c9aaa034d118598f831f0996f" translate="yes" xml:space="preserve">
          <source>1) Copies the wide string pointed to by &lt;code&gt;src&lt;/code&gt; (including the terminating null wide character) to wide character array pointed to by &lt;code&gt;dest&lt;/code&gt;. The behavior is undefined if the &lt;code&gt;dest&lt;/code&gt; array is not large enough. The behavior is undefined if the strings overlap.</source>
          <target state="translated">1) Copia la cadena ancha a la que apunta &lt;code&gt;src&lt;/code&gt; (incluido el car&amp;aacute;cter ancho nulo de terminaci&amp;oacute;n) en la matriz de caracteres anchos a la que apunta &lt;code&gt;dest&lt;/code&gt; . El comportamiento no est&amp;aacute; definido si la matriz &lt;code&gt;dest&lt;/code&gt; no es lo suficientemente grande. El comportamiento es indefinido si las cadenas se superponen.</target>
        </trans-unit>
        <trans-unit id="bc33ce23c66c43a112a6fd473b5df3ee03f9aa62" translate="yes" xml:space="preserve">
          <source>1) Creates a unique valid file name (no longer than &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;L_tmpnam&lt;/a&gt;&lt;/code&gt; in length) and stores it in character string pointed to by &lt;code&gt;filename&lt;/code&gt;. The function is capable of generating up to &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;TMP_MAX&lt;/a&gt;&lt;/code&gt; of unique filenames, but some or all of them may be in use in the filesystem and thus not suitable return values.</source>
          <target state="translated">1) Crea un nombre de archivo v&amp;aacute;lido &amp;uacute;nico (no m&amp;aacute;s largo que &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;L_tmpnam&lt;/a&gt;&lt;/code&gt; de longitud) y lo almacena en una cadena de caracteres se&amp;ntilde;alada por &lt;code&gt;filename&lt;/code&gt; de archivo . La funci&amp;oacute;n es capaz de generar hasta &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;TMP_MAX&lt;/a&gt;&lt;/code&gt; de nombres de archivo &amp;uacute;nicos, pero algunos o todos pueden estar en uso en el sistema de archivos y, por lo tanto, no son valores de retorno adecuados.</target>
        </trans-unit>
        <trans-unit id="55f638de3b0da14f27a625d260567dbe037f11ee" translate="yes" xml:space="preserve">
          <source>1) Creates and opens a temporary file. The file is opened as binary file for update (as if by &lt;code&gt;&lt;a href=&quot;fopen&quot;&gt;fopen&lt;/a&gt;&lt;/code&gt; with &lt;code&gt;&quot;wb+&quot;&lt;/code&gt; mode). The filename of the file is guaranteed to be unique within the filesystem. At least &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;TMP_MAX&lt;/a&gt;&lt;/code&gt; files may be opened during the lifetime of a program (this limit may be shared with &lt;code&gt;&lt;a href=&quot;tmpnam&quot;&gt;tmpnam&lt;/a&gt;&lt;/code&gt; and may be further limited by &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;FOPEN_MAX&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">1) Crea y abre un archivo temporal. El archivo se abre como archivo binario para la actualizaci&amp;oacute;n (como por &lt;code&gt;&lt;a href=&quot;fopen&quot;&gt;fopen&lt;/a&gt;&lt;/code&gt; con el modo &lt;code&gt;&quot;wb+&quot;&lt;/code&gt; ). Se garantiza que el nombre de archivo del archivo ser&amp;aacute; &amp;uacute;nico dentro del sistema de archivos. Al menos los archivos &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;TMP_MAX&lt;/a&gt;&lt;/code&gt; pueden abrirse durante la vida &amp;uacute;til de un programa (este l&amp;iacute;mite puede compartirse con &lt;code&gt;&lt;a href=&quot;tmpnam&quot;&gt;tmpnam&lt;/a&gt;&lt;/code&gt; y puede limitarse a&amp;uacute;n m&amp;aacute;s por &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;FOPEN_MAX&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="53849604c2e9473ad0645ee83bab501495cb04a8" translate="yes" xml:space="preserve">
          <source>1) Decimal integer constant (base 10, the first digit is the most significant).</source>
          <target state="translated">1)Constante entera decimal (base 10,el primer dígito es el más significativo).</target>
        </trans-unit>
        <trans-unit id="9a5efcbbb43fa701e56024a892d293c44222e230" translate="yes" xml:space="preserve">
          <source>1) Evaluates the expression, terminates the current function and returns the result of the expression to the caller (the value returned becomes the value of the function call expression). Only valid if the function return type is not &lt;code&gt;void&lt;/code&gt;.</source>
          <target state="translated">1) Eval&amp;uacute;a la expresi&amp;oacute;n, finaliza la funci&amp;oacute;n actual y devuelve el resultado de la expresi&amp;oacute;n a la persona que llama (el valor devuelto se convierte en el valor de la expresi&amp;oacute;n de llamada de funci&amp;oacute;n). Solo v&amp;aacute;lido si el tipo de retorno de funci&amp;oacute;n no es &lt;code&gt;void&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="85934375f27aaa70f99a44c6b142870191b8a181" translate="yes" xml:space="preserve">
          <source>1) Finds an element equal to element pointed to by &lt;code&gt;key&lt;/code&gt; in an array pointed to by &lt;code&gt;ptr&lt;/code&gt;. The array contains &lt;code&gt;count&lt;/code&gt; elements of &lt;code&gt;size&lt;/code&gt; bytes and must be partitioned with respect to &lt;code&gt;key&lt;/code&gt;, that is, all the elements that compare less than must appear before all the elements that compare equal to, and those must appear before all the elements that compare greater than the key object. A fully sorted array satisfies these requirements. The elements are compared using function pointed to by &lt;code&gt;comp&lt;/code&gt;. The behavior is undefined if the array is not already partitioned with respect to &lt;code&gt;*key&lt;/code&gt; in ascending order according to the same criterion that &lt;code&gt;comp&lt;/code&gt; uses.</source>
          <target state="translated">1) Encuentra un elemento igual al elemento al que apunta la &lt;code&gt;key&lt;/code&gt; en una matriz a la que apunta &lt;code&gt;ptr&lt;/code&gt; . La matriz contiene elementos de &lt;code&gt;count&lt;/code&gt; de bytes de &lt;code&gt;size&lt;/code&gt; y debe particionarse con respecto a la &lt;code&gt;key&lt;/code&gt; , es decir, todos los elementos que se comparan menos de lo que deben aparecer antes de todos los elementos que se comparan igual a, y esos deben aparecer antes de todos los elementos que se comparan m&amp;aacute;s que El objeto clave. Una matriz completamente ordenada satisface estos requisitos. Los elementos se comparan usando la funci&amp;oacute;n se&amp;ntilde;alada por &lt;code&gt;comp&lt;/code&gt; . El comportamiento no est&amp;aacute; definido si la matriz a&amp;uacute;n no est&amp;aacute; particionada con respecto a la &lt;code&gt;*key&lt;/code&gt; en orden ascendente de acuerdo con el mismo criterio que &lt;code&gt;comp&lt;/code&gt; usos.</target>
        </trans-unit>
        <trans-unit id="6d6f25a9143a91bfa3ed301ee58dd20270248762" translate="yes" xml:space="preserve">
          <source>1) Finds the next token in a null-terminated byte string pointed to by &lt;code&gt;str&lt;/code&gt;. The separator characters are identified by null-terminated byte string pointed to by &lt;code&gt;delim&lt;/code&gt;.</source>
          <target state="translated">1) Encuentra el siguiente token en una cadena de bytes terminada en nulo a la que apunta &lt;code&gt;str&lt;/code&gt; . Los caracteres separadores se identifican mediante una cadena de bytes terminada en nulo se&amp;ntilde;alada por &lt;code&gt;delim&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="786e81f2c0e06f1c0b7efb389173f5f4babe9795" translate="yes" xml:space="preserve">
          <source>1) Finds the next token in a null-terminated wide string pointed to by &lt;code&gt;str&lt;/code&gt;. The separator characters are identified by null-terminated wide string pointed to by &lt;code&gt;delim&lt;/code&gt;.</source>
          <target state="translated">1) Encuentra el siguiente token en una cadena ancha terminada en nulo a la que apunta &lt;code&gt;str&lt;/code&gt; . Los caracteres separadores se identifican mediante una cadena ancha terminada en nulo a la que apunta el &lt;code&gt;delim&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0351622cdad32bce5a071af4db799f10d569f4b4" translate="yes" xml:space="preserve">
          <source>1) First, attempts to close the file associated with &lt;code&gt;stream&lt;/code&gt;, ignoring any errors. Then, if &lt;code&gt;filename&lt;/code&gt; is not null, attempts to open the file specified by &lt;code&gt;filename&lt;/code&gt; using &lt;code&gt;mode&lt;/code&gt; as if by &lt;code&gt;&lt;a href=&quot;fopen&quot;&gt;fopen&lt;/a&gt;&lt;/code&gt;, and associates that file with the file stream pointed to by &lt;code&gt;stream&lt;/code&gt;. If &lt;code&gt;filename&lt;/code&gt; is a null pointer, then the function attempts to reopen the file that is already associated with &lt;code&gt;stream&lt;/code&gt; (it is implementation defined which mode changes are allowed in this case).</source>
          <target state="translated">1) Primero, intenta cerrar el archivo asociado con la &lt;code&gt;stream&lt;/code&gt; , ignorando cualquier error. Luego, si el &lt;code&gt;filename&lt;/code&gt; no es nulo, intenta abrir el archivo especificado por &lt;code&gt;filename&lt;/code&gt; de archivo usando el &lt;code&gt;mode&lt;/code&gt; como por &lt;code&gt;&lt;a href=&quot;fopen&quot;&gt;fopen&lt;/a&gt;&lt;/code&gt; , y asocia ese archivo con la secuencia de archivos apuntada por &lt;code&gt;stream&lt;/code&gt; . Si el &lt;code&gt;filename&lt;/code&gt; es un puntero nulo, entonces la funci&amp;oacute;n intenta volver a abrir el archivo que ya est&amp;aacute; asociado con la &lt;code&gt;stream&lt;/code&gt; (se define la implementaci&amp;oacute;n qu&amp;eacute; cambios de modo se permiten en este caso).</target>
        </trans-unit>
        <trans-unit id="dba3d667f792058cf65d572a0620cbdb5af5fa31" translate="yes" xml:space="preserve">
          <source>1) First, evaluates condition. There is a &lt;a href=&quot;eval_order&quot;&gt;sequence point&lt;/a&gt; after this evaluation.</source>
          <target state="translated">1) Primero, eval&amp;uacute;a la condici&amp;oacute;n. Hay un &lt;a href=&quot;eval_order&quot;&gt;punto de secuencia&lt;/a&gt; despu&amp;eacute;s de esta evaluaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d78a3decd423f46a78e173a02493597b86b082dd" translate="yes" xml:space="preserve">
          <source>1) If &lt;code&gt;s&lt;/code&gt; is not a null pointer, returns the number of bytes that are contained in the multibyte representation of &lt;code&gt;wc&lt;/code&gt; or &lt;code&gt;-1&lt;/code&gt; if &lt;code&gt;wc&lt;/code&gt; is not a valid character.</source>
          <target state="translated">1) Si &lt;code&gt;s&lt;/code&gt; no es un puntero nulo, devuelve el n&amp;uacute;mero de bytes contenidos en la representaci&amp;oacute;n multibyte de &lt;code&gt;wc&lt;/code&gt; o &lt;code&gt;-1&lt;/code&gt; si &lt;code&gt;wc&lt;/code&gt; no es un car&amp;aacute;cter v&amp;aacute;lido.</target>
        </trans-unit>
        <trans-unit id="f9f3e5ae1b7f0a53b206e1c11ce692da23fdcc37" translate="yes" xml:space="preserve">
          <source>1) If &lt;code&gt;s&lt;/code&gt; is not a null pointer, the function determines the number of bytes necessary to store the multibyte character representation of &lt;code&gt;wc&lt;/code&gt; (including any shift sequences, and taking into account the current multibyte conversion state &lt;code&gt;*ps&lt;/code&gt;), and stores the multibyte character representation in the character array whose first element is pointed to by &lt;code&gt;s&lt;/code&gt;, updating &lt;code&gt;*ps&lt;/code&gt; as necessary. At most &lt;code&gt;MB_CUR_MAX&lt;/code&gt; bytes can be written by this function.</source>
          <target state="translated">1) Si &lt;code&gt;s&lt;/code&gt; no es un puntero nulo, la funci&amp;oacute;n determina el n&amp;uacute;mero de bytes necesarios para almacenar la representaci&amp;oacute;n de caracteres multibyte de &lt;code&gt;wc&lt;/code&gt; (incluidas las secuencias de desplazamiento y teniendo en cuenta el estado de conversi&amp;oacute;n multibyte actual &lt;code&gt;*ps&lt;/code&gt; ), y almacena el car&amp;aacute;cter multibyte representaci&amp;oacute;n en la matriz de caracteres cuyo primer elemento es se&amp;ntilde;alado por &lt;code&gt;s&lt;/code&gt; , actualizando &lt;code&gt;*ps&lt;/code&gt; seg&amp;uacute;n sea necesario. Como m&amp;aacute;ximo, &lt;code&gt;MB_CUR_MAX&lt;/code&gt; puede escribir bytes con esta funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="46c99ccee207b51900c82c3893653cc70908800e" translate="yes" xml:space="preserve">
          <source>1) If a side effect on a scalar object is unsequenced relative to another side effect on the same scalar object, the &lt;a href=&quot;behavior#UB_and_optimization&quot;&gt;behavior is undefined&lt;/a&gt;.</source>
          <target state="translated">1) Si un efecto secundario en un objeto escalar no est&amp;aacute; secuenciado en relaci&amp;oacute;n con otro efecto secundario en el mismo objeto escalar, el &lt;a href=&quot;behavior#UB_and_optimization&quot;&gt;comportamiento es indefinido&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="91d6223e0fb21f8ab7ecfe4a6fb9d912ccf60686" translate="yes" xml:space="preserve">
          <source>1) If one operand is &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;long double &lt;a href=&quot;../numeric/complex/complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;long double &lt;a href=&quot;../numeric/complex/imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt;, the other operand is implicitly converted as follows:</source>
          <target state="translated">1) Si un operando es &lt;code&gt;long double&lt;/code&gt; , &lt;code&gt;long double &lt;a href=&quot;../numeric/complex/complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;long double &lt;a href=&quot;../numeric/complex/imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt; , el otro operando se convierte impl&amp;iacute;citamente de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="ec76cf635ed5977262cf9ddcc3fb5fe13eaaff7b" translate="yes" xml:space="preserve">
          <source>1) If set to &lt;code&gt;ON&lt;/code&gt;, informs the compiler that the program will access or modify &lt;a href=&quot;../numeric/fenv&quot;&gt;floating-point environment&lt;/a&gt;, which means that optimizations that could subvert flag tests and mode changes (e.g., global common subexpression elimination, code motion, and constant folding) are prohibited. The default value is implementation-defined, usually &lt;code&gt;OFF&lt;/code&gt;.</source>
          <target state="translated">1) Si se establece en &lt;code&gt;ON&lt;/code&gt; , informa al compilador que el programa acceder&amp;aacute; o modificar&amp;aacute; el &lt;a href=&quot;../numeric/fenv&quot;&gt;entorno de punto flotante&lt;/a&gt; , lo que significa que las optimizaciones que podr&amp;iacute;an subvertir las pruebas de bandera y los cambios de modo (por ejemplo, eliminaci&amp;oacute;n de subexpresi&amp;oacute;n com&amp;uacute;n global, movimiento de c&amp;oacute;digo y plegado constante) prohibido. El valor predeterminado est&amp;aacute; definido por la implementaci&amp;oacute;n, generalmente &lt;code&gt;OFF&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a0cf2c0001ae474c7b0f9c8c6c0f587b7e9f3836" translate="yes" xml:space="preserve">
          <source>1) If successful, returns a pointer to the new file stream. The stream is fully buffered unless &lt;code&gt;filename&lt;/code&gt; refers to an interactive device. On error, returns a &lt;code&gt;null pointer&lt;/code&gt;. &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/functions/fopen.html&quot;&gt;POSIX requires&lt;/a&gt; that &lt;code&gt;&lt;a href=&quot;../error/errno&quot;&gt;errno&lt;/a&gt;&lt;/code&gt; be set in this case.</source>
          <target state="translated">1) Si tiene &amp;eacute;xito, devuelve un puntero a la nueva secuencia de archivos. La transmisi&amp;oacute;n est&amp;aacute; completamente almacenada a menos que el &lt;code&gt;filename&lt;/code&gt; refiera a un dispositivo interactivo. En caso de error, devuelve un &lt;code&gt;null pointer&lt;/code&gt; . &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/functions/fopen.html&quot;&gt;POSIX requiere&lt;/a&gt; que se establezca &lt;code&gt;&lt;a href=&quot;../error/errno&quot;&gt;errno&lt;/a&gt;&lt;/code&gt; en este caso.</target>
        </trans-unit>
        <trans-unit id="df848c0233b65d01ab4e94194e65cb1e2e5c9a8d" translate="yes" xml:space="preserve">
          <source>1) Label name space: all identifiers declared as &lt;a href=&quot;statements#Labels&quot;&gt;labels&lt;/a&gt;.</source>
          <target state="translated">1) Espacio de nombre de etiqueta: todos los identificadores declarados como &lt;a href=&quot;statements#Labels&quot;&gt;etiquetas&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b4d4a07c3e9c08b33a7bc0ef807e6a32d16bcca5" translate="yes" xml:space="preserve">
          <source>1) Modifies the &lt;code&gt;timespec&lt;/code&gt; object pointed to by &lt;code&gt;ts&lt;/code&gt; to hold the current calendar time in the time base &lt;code&gt;base&lt;/code&gt;.</source>
          <target state="translated">1) modifica la &lt;code&gt;timespec&lt;/code&gt; objeto apuntado por &lt;code&gt;ts&lt;/code&gt; para mantener el tiempo de calendario actual en la base de tiempo &lt;code&gt;base&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="20f9ff3f6e5a39bcfee25590249459245502cafe" translate="yes" xml:space="preserve">
          <source>1) New-style (C89) function declaration. This declaration both introduces the function designator itself and also serves as a function prototype for any future &lt;a href=&quot;operator_other#Function_call&quot;&gt;function call expressions&lt;/a&gt;, forcing conversions from argument expressions to the declared parameter types and compile-time checks for the number of arguments.</source>
          <target state="translated">1) Declaraci&amp;oacute;n de funci&amp;oacute;n de nuevo estilo (C89). Esta declaraci&amp;oacute;n introduce el designador de funciones en s&amp;iacute; mismo y tambi&amp;eacute;n sirve como prototipo de funci&amp;oacute;n para cualquier futura &lt;a href=&quot;operator_other#Function_call&quot;&gt;expresi&amp;oacute;n de llamada de funci&amp;oacute;n&lt;/a&gt; , forzando conversiones de expresiones de argumento a los tipos de par&amp;aacute;metros declarados y comprobaciones en tiempo de compilaci&amp;oacute;n para el n&amp;uacute;mero de argumentos.</target>
        </trans-unit>
        <trans-unit id="d9fe2d5e0e3ecf062558f4356a18e383d4f1140d" translate="yes" xml:space="preserve">
          <source>1) New-style (C89) function definition. This definition both introduces the function itself and serves as a function prototype for any future &lt;a href=&quot;operator_other#Function_call&quot;&gt;function call expressions&lt;/a&gt;, forcing conversions from argument expressions to the declared parameter types.</source>
          <target state="translated">1) Definici&amp;oacute;n de funci&amp;oacute;n de nuevo estilo (C89). Esta definici&amp;oacute;n introduce la funci&amp;oacute;n en s&amp;iacute; misma y sirve como prototipo de funci&amp;oacute;n para cualquier futura &lt;a href=&quot;operator_other#Function_call&quot;&gt;expresi&amp;oacute;n de llamada de funci&amp;oacute;n&lt;/a&gt; , forzando conversiones de expresiones de argumento a los tipos de par&amp;aacute;metros declarados.</target>
        </trans-unit>
        <trans-unit id="63c030571149d7aea7d192bb60285199d1752b0e" translate="yes" xml:space="preserve">
          <source>1) Often known as &quot;C-style&quot; or &quot;multi-line&quot; comments.</source>
          <target state="translated">1)A menudo conocidos como comentarios &quot;estilo C&quot; o &quot;multilínea&quot;.</target>
        </trans-unit>
        <trans-unit id="618609ec58109330b21aa98482fa0b1f3fdb692b" translate="yes" xml:space="preserve">
          <source>1) On success, returns the number of bytes (including any shift sequences) written to the character array whose first element is pointed to by &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">1) En caso de &amp;eacute;xito, devuelve el n&amp;uacute;mero de bytes (incluidas las secuencias de desplazamiento) escritas en la matriz de caracteres cuyo primer elemento se&amp;ntilde;ala &lt;code&gt;s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5a49e17bb0fade32a7ad0c238222f23cfe1981cc" translate="yes" xml:space="preserve">
          <source>1) On success, returns the number of bytes (including any shift sequences, but excluding the terminating &lt;code&gt;'\0'&lt;/code&gt;) written to the character array whose first element is pointed to by &lt;code&gt;dst&lt;/code&gt;. If &lt;code&gt;dst==&lt;a href=&quot;../../types/null&quot;&gt;NULL&lt;/a&gt;&lt;/code&gt;, returns the number of bytes that would have been written. On conversion error (if invalid wide character was encountered), returns &lt;code&gt;(&lt;a href=&quot;../../types/size_t&quot;&gt;size_t&lt;/a&gt;)-1&lt;/code&gt;, stores &lt;code&gt;&lt;a href=&quot;../../error/errno_macros&quot;&gt;EILSEQ&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;&lt;a href=&quot;../../error/errno&quot;&gt;errno&lt;/a&gt;&lt;/code&gt;, and leaves &lt;code&gt;*ps&lt;/code&gt; in unspecified state.</source>
          <target state="translated">1) En caso de &amp;eacute;xito, devuelve el n&amp;uacute;mero de bytes (incluidas las secuencias de desplazamiento, pero excluyendo el &lt;code&gt;'\0'&lt;/code&gt; terminaci&amp;oacute;n ) escrito en la matriz de caracteres cuyo primer elemento se&amp;ntilde;ala &lt;code&gt;dst&lt;/code&gt; . Si &lt;code&gt;dst==&lt;a href=&quot;../../types/null&quot;&gt;NULL&lt;/a&gt;&lt;/code&gt; , devuelve el n&amp;uacute;mero de bytes que se habr&amp;iacute;an escrito. En caso de error de conversi&amp;oacute;n (si se encontr&amp;oacute; un car&amp;aacute;cter ancho no v&amp;aacute;lido), devuelve &lt;code&gt;(&lt;a href=&quot;../../types/size_t&quot;&gt;size_t&lt;/a&gt;)-1&lt;/code&gt; , almacena &lt;code&gt;&lt;a href=&quot;../../error/errno_macros&quot;&gt;EILSEQ&lt;/a&gt;&lt;/code&gt; en &lt;code&gt;&lt;a href=&quot;../../error/errno&quot;&gt;errno&lt;/a&gt;&lt;/code&gt; y deja &lt;code&gt;*ps&lt;/code&gt; en estado no especificado.</target>
        </trans-unit>
        <trans-unit id="4d830e1d99b8f831039a165207fe794fc611d54c" translate="yes" xml:space="preserve">
          <source>1) On success, returns the number of bytes (including any shift sequences, but excluding the terminating &lt;code&gt;'\0'&lt;/code&gt;) written to the character array whose first element is pointed to by &lt;code&gt;dst&lt;/code&gt;. On conversion error (if invalid wide character was encountered), returns &lt;code&gt;(&lt;a href=&quot;../../types/size_t&quot;&gt;size_t&lt;/a&gt;)-1&lt;/code&gt;.</source>
          <target state="translated">1) En caso de &amp;eacute;xito, devuelve el n&amp;uacute;mero de bytes (incluidas las secuencias de desplazamiento, pero excluyendo el &lt;code&gt;'\0'&lt;/code&gt; terminaci&amp;oacute;n ) escrito en la matriz de caracteres cuyo primer elemento se&amp;ntilde;ala &lt;code&gt;dst&lt;/code&gt; . En caso de error de conversi&amp;oacute;n (si se encuentra un car&amp;aacute;cter ancho no v&amp;aacute;lido), devuelve &lt;code&gt;(&lt;a href=&quot;../../types/size_t&quot;&gt;size_t&lt;/a&gt;)-1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de9c4bcef2e1e84210683c18666370b7ce24c719" translate="yes" xml:space="preserve">
          <source>1) On success, returns the number of wide characters, excluding the terminating &lt;code&gt;L'\0'&lt;/code&gt;, written to the character array. If &lt;code&gt;dst==&lt;a href=&quot;../../types/null&quot;&gt;NULL&lt;/a&gt;&lt;/code&gt;, returns the number of wide characters that would have been written given unlimited length. On conversion error (if invalid multibyte character was encountered), returns &lt;code&gt;(&lt;a href=&quot;../../types/size_t&quot;&gt;size_t&lt;/a&gt;)-1&lt;/code&gt;, stores &lt;code&gt;&lt;a href=&quot;../../error/errno_macros&quot;&gt;EILSEQ&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;&lt;a href=&quot;../../error/errno&quot;&gt;errno&lt;/a&gt;&lt;/code&gt;, and leaves &lt;code&gt;*ps&lt;/code&gt; in unspecified state.</source>
          <target state="translated">1) En caso de &amp;eacute;xito, devuelve el n&amp;uacute;mero de caracteres anchos, excluyendo la terminaci&amp;oacute;n &lt;code&gt;L'\0'&lt;/code&gt; , escrita en la matriz de caracteres. Si &lt;code&gt;dst==&lt;a href=&quot;../../types/null&quot;&gt;NULL&lt;/a&gt;&lt;/code&gt; , devuelve el n&amp;uacute;mero de caracteres anchos que se habr&amp;iacute;an escrito con una longitud ilimitada. En caso de error de conversi&amp;oacute;n (si se encontr&amp;oacute; un car&amp;aacute;cter multibyte no v&amp;aacute;lido), devuelve &lt;code&gt;(&lt;a href=&quot;../../types/size_t&quot;&gt;size_t&lt;/a&gt;)-1&lt;/code&gt; , almacena &lt;code&gt;&lt;a href=&quot;../../error/errno_macros&quot;&gt;EILSEQ&lt;/a&gt;&lt;/code&gt; en &lt;code&gt;&lt;a href=&quot;../../error/errno&quot;&gt;errno&lt;/a&gt;&lt;/code&gt; y deja &lt;code&gt;*ps&lt;/code&gt; en estado no especificado.</target>
        </trans-unit>
        <trans-unit id="8604dac40270f6af3aa4c8c004f44d45895d6bd2" translate="yes" xml:space="preserve">
          <source>1) On success, returns the number of wide characters, excluding the terminating &lt;code&gt;L'\0'&lt;/code&gt;, written to the destination array. On conversion error (if invalid multibyte character was encountered), returns &lt;code&gt;(&lt;a href=&quot;../../types/size_t&quot;&gt;size_t&lt;/a&gt;)-1&lt;/code&gt;.</source>
          <target state="translated">1) En caso de &amp;eacute;xito, devuelve el n&amp;uacute;mero de caracteres anchos, excluyendo la terminaci&amp;oacute;n &lt;code&gt;L'\0'&lt;/code&gt; , escrita en la matriz de destino. En caso de error de conversi&amp;oacute;n (si se encontr&amp;oacute; un car&amp;aacute;cter multibyte no v&amp;aacute;lido), devuelve &lt;code&gt;(&lt;a href=&quot;../../types/size_t&quot;&gt;size_t&lt;/a&gt;)-1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1122cd4916c8156186c6800d0b3a7e214a3648e" translate="yes" xml:space="preserve">
          <source>1) Opens a file indicated by &lt;code&gt;filename&lt;/code&gt; and returns a pointer to the file stream associated with that file. &lt;code&gt;mode&lt;/code&gt; is used to determine the file access mode.</source>
          <target state="translated">1) Abre un archivo indicado por &lt;code&gt;filename&lt;/code&gt; de archivo y devuelve un puntero a la secuencia de archivos asociada con ese archivo. &lt;code&gt;mode&lt;/code&gt; se utiliza para determinar el modo de acceso a archivos.</target>
        </trans-unit>
        <trans-unit id="908e9f6935601f7cbb00a16c4508358af74f208e" translate="yes" xml:space="preserve">
          <source>1) Pointer to a null-terminated byte string corresponding to the &lt;code&gt;&lt;a href=&quot;../../error/errno&quot;&gt;errno&lt;/a&gt;&lt;/code&gt; error code &lt;code&gt;errnum&lt;/code&gt;.</source>
          <target state="translated">1) Puntero a una cadena de bytes terminada en nulo correspondiente al c&amp;oacute;digo de error &lt;code&gt;&lt;a href=&quot;../../error/errno&quot;&gt;errno&lt;/a&gt;&lt;/code&gt; &lt;code&gt;errnum&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6c23a2c6874fd62c8ab9b2fe53ad53e1659a4c3c" translate="yes" xml:space="preserve">
          <source>1) Pointer to an element in the array that compares equal to &lt;code&gt;*key&lt;/code&gt;, or null pointer if such element has not been found.</source>
          <target state="translated">1) Puntero a un elemento en la matriz que se compara igual a la &lt;code&gt;*key&lt;/code&gt; , o puntero nulo si no se ha encontrado dicho elemento.</target>
        </trans-unit>
        <trans-unit id="4fc80b1327582e6508e5c2e8fec2976d3e59a155" translate="yes" xml:space="preserve">
          <source>1) Pointer to the file stream associated with the file or null pointer if an error has occurred.</source>
          <target state="translated">1)Puntero al flujo de archivos asociado al archivo o puntero nulo si se ha producido un error.</target>
        </trans-unit>
        <trans-unit id="72c18cc82e2e9fe645873ce5ef810c70c042f2fa" translate="yes" xml:space="preserve">
          <source>1) Reads &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; into the character array pointed to by &lt;code&gt;str&lt;/code&gt; until a newline character is found or end-of-file occurs. A null character is written immediately after the last character read into the array. The newline character is discarded but not stored in the buffer.</source>
          <target state="translated">1) Lee &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; en la matriz de caracteres a la que apunta &lt;code&gt;str&lt;/code&gt; hasta que se encuentra un car&amp;aacute;cter de nueva l&amp;iacute;nea o se produce el final del archivo. Se escribe un car&amp;aacute;cter nulo inmediatamente despu&amp;eacute;s del &amp;uacute;ltimo car&amp;aacute;cter le&amp;iacute;do en la matriz. El car&amp;aacute;cter de nueva l&amp;iacute;nea se descarta pero no se almacena en el b&amp;uacute;fer.</target>
        </trans-unit>
        <trans-unit id="457d7137f3961272494ff359e8028d91f5281869" translate="yes" xml:space="preserve">
          <source>1) Reads the data from &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">1) Lee los datos de &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ff832e13be6d84237e2403d654d7cf393293441e" translate="yes" xml:space="preserve">
          <source>1) Reads the data from &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">1) Lee los datos de &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="af9b3b718c2c35f25ec8a4df26cc4b30870708b8" translate="yes" xml:space="preserve">
          <source>1) Returns a copy of &lt;code&gt;dest&lt;/code&gt;</source>
          <target state="translated">1) Devuelve una copia de &lt;code&gt;dest&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="42a07d7a92b332fbb593ac78f03cd9a056d91422" translate="yes" xml:space="preserve">
          <source>1) Returns a pointer to the textual description of the system error code &lt;code&gt;errnum&lt;/code&gt;, identical to the description that would be printed by &lt;code&gt;&lt;a href=&quot;../../io/perror&quot;&gt;perror()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">1) Devuelve un puntero a la descripci&amp;oacute;n textual del c&amp;oacute;digo de error del sistema &lt;code&gt;errnum&lt;/code&gt; , id&amp;eacute;ntico a la descripci&amp;oacute;n que ser&amp;iacute;a impresa por &lt;code&gt;&lt;a href=&quot;../../io/perror&quot;&gt;perror()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="280dff4ad08fdb9742dfa018410e0992128f67d8" translate="yes" xml:space="preserve">
          <source>1) Returns the length of a wide string, that is the number of non-null wide characters that precede the terminating null wide character.</source>
          <target state="translated">1)Devuelve la longitud de una cadena ancha,es decir,el número de caracteres de ancho no nulo que preceden al carácter de ancho nulo que termina.</target>
        </trans-unit>
        <trans-unit id="18368307aaa1767f1bf0f4665c28c93ab590aa16" translate="yes" xml:space="preserve">
          <source>1) Returns the length of the given null-terminated byte string, that is, the number of characters in a character array whose first element is pointed to by &lt;code&gt;str&lt;/code&gt; up to and not including the first null character.</source>
          <target state="translated">1) Devuelve la longitud de la cadena de bytes terminada en nulo dada, es decir, el n&amp;uacute;mero de caracteres en una matriz de caracteres cuyo primer elemento se se&amp;ntilde;ala mediante &lt;code&gt;str&lt;/code&gt; hasta y sin incluir el primer car&amp;aacute;cter nulo.</target>
        </trans-unit>
        <trans-unit id="7db6d0997997d535a72c6ac6ed0105500518f47c" translate="yes" xml:space="preserve">
          <source>1) Returns the size, in bytes, of the &lt;a href=&quot;object#Object_representation&quot;&gt;object representation&lt;/a&gt; of type</source>
          <target state="translated">1) Devuelve el tama&amp;ntilde;o, en bytes, de la &lt;a href=&quot;object#Object_representation&quot;&gt;representaci&amp;oacute;n&lt;/a&gt; de tipo de objeto</target>
        </trans-unit>
        <trans-unit id="fc21fd11a3c988cbb57f351df76f43bdc0a8e7de" translate="yes" xml:space="preserve">
          <source>1) Searches for an environmental variable with name &lt;code&gt;name&lt;/code&gt; in the host-specified environment list and returns a pointer to the string that is associated with the matched environment variable. The set of environmental variables and methods of altering it are implementation-defined.</source>
          <target state="translated">1) Las b&amp;uacute;squedas de una variable ambiental con el nombre &lt;code&gt;name&lt;/code&gt; en la lista entorno host especificado y devuelve un puntero a la cadena que est&amp;aacute; asociada con la variable de entorno adaptado. El conjunto de variables ambientales y los m&amp;eacute;todos para alterarlo est&amp;aacute;n definidos por la implementaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="3c9b60d20817d9dc8664bdd29847776bc1e84582" translate="yes" xml:space="preserve">
          <source>1) Searches for the file in implementation-defined manner. The intent of this syntax is to search for the files under control of the implementation. Typical implementations search only standard include directories. The standard C++ library and the standard C library are implicitly included in these standard include directories. The standard include directories usually can be controlled by the user through compiler options.</source>
          <target state="translated">1)Busca el archivo de manera definida por la aplicación.La intención de esta sintaxis es buscar los archivos bajo control de la implementación.Las implementaciones típicas buscan sólo en los directorios estándar.La biblioteca estándar de C++y la biblioteca estándar de C están implícitamente incluidas en estos directorios de inclusión estándar.Los directorios include estándar normalmente pueden ser controlados por el usuario a través de las opciones del compilador.</target>
        </trans-unit>
        <trans-unit id="cec97d806d38682726c4b14cdf22e26e9e67c620" translate="yes" xml:space="preserve">
          <source>1) Sorts the given array pointed to by &lt;code&gt;ptr&lt;/code&gt; in ascending order. The array contains &lt;code&gt;count&lt;/code&gt; elements of &lt;code&gt;size&lt;/code&gt; bytes. Function pointed to by &lt;code&gt;comp&lt;/code&gt; is used for object comparison.</source>
          <target state="translated">1) Ordena la matriz dada apuntada por &lt;code&gt;ptr&lt;/code&gt; en orden ascendente. La matriz contiene elementos de &lt;code&gt;count&lt;/code&gt; de bytes de &lt;code&gt;size&lt;/code&gt; . La funci&amp;oacute;n se&amp;ntilde;alada por &lt;code&gt;comp&lt;/code&gt; se usa para la comparaci&amp;oacute;n de objetos.</target>
        </trans-unit>
        <trans-unit id="9e30aead83f3eef8647ad87d7def4801f02a5d88" translate="yes" xml:space="preserve">
          <source>1) Struct definition: introduces the new type struct name and defines its meaning</source>
          <target state="translated">1)Definición de la estructura:introduce el nuevo nombre de la estructura del tipo y define su significado</target>
        </trans-unit>
        <trans-unit id="a19254646d106e1d346f8bd45aef0e905f2d5c30" translate="yes" xml:space="preserve">
          <source>1) Target for &lt;a href=&quot;goto&quot;&gt;goto&lt;/a&gt;.</source>
          <target state="translated">1) Objetivo para &lt;a href=&quot;goto&quot;&gt;ir a&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5ec6ad030a4e5dbc722f96475550b4194e003b4a" translate="yes" xml:space="preserve">
          <source>1) The &lt;code&gt;auto&lt;/code&gt; specifier is only allowed for objects declared at block scope (except function parameter lists). It indicates automatic storage duration and no linkage, which are the defaults for these kinds of declarations.</source>
          <target state="translated">1) El especificador &lt;code&gt;auto&lt;/code&gt; m&amp;aacute;tico solo est&amp;aacute; permitido para los objetos declarados en el alcance del bloque (excepto las listas de par&amp;aacute;metros de funci&amp;oacute;n). Indica la duraci&amp;oacute;n del almacenamiento autom&amp;aacute;tico y sin vinculaci&amp;oacute;n, que son los valores predeterminados para este tipo de declaraciones.</target>
        </trans-unit>
        <trans-unit id="b050abed834e6886d7b9e8336d68084472c7912e" translate="yes" xml:space="preserve">
          <source>1) The arguments are evaluated &lt;a href=&quot;eval_order&quot;&gt;in unspecified order and without sequencing&lt;/a&gt;.</source>
          <target state="translated">1) Los argumentos se eval&amp;uacute;an &lt;a href=&quot;eval_order&quot;&gt;en orden no especificado y sin secuenciaci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9b9773880120c17001b80fa106a7e9df656c53a7" translate="yes" xml:space="preserve">
          <source>1) The exponent syntax for a decimal floating-point constant</source>
          <target state="translated">1)La sintaxis del exponente para una constante decimal de punto flotante</target>
        </trans-unit>
        <trans-unit id="22eb595fe64321b5fa9b0a4672c1c5b9a50be3a0" translate="yes" xml:space="preserve">
          <source>1) The identifiers that are &lt;a href=&quot;../keyword&quot;&gt;keywords&lt;/a&gt; cannot be used for other purposes. In particular #define or #undef of an identifier that is identical to a keyword is not allowed.</source>
          <target state="translated">1) Los identificadores que son &lt;a href=&quot;../keyword&quot;&gt;palabras clave&lt;/a&gt; no pueden utilizarse para otros fines. En particular, #define o #undef de un identificador que es id&amp;eacute;ntico a una palabra clave no est&amp;aacute; permitido.</target>
        </trans-unit>
        <trans-unit id="5115294268c974ed2fb60ba62aab8eb53bc8a7a1" translate="yes" xml:space="preserve">
          <source>1) The individual bytes of the source code file (which is generally a text file in some multibyte encoding such as UTF-8) are mapped, in implementation defined manner, to the characters of the</source>
          <target state="translated">1)Los bytes individuales del archivo de código fuente (que generalmente es un archivo de texto en alguna codificación multibyte como el UTF-8)se asignan,en forma definida de implementación,a los caracteres del</target>
        </trans-unit>
        <trans-unit id="d4c77a85b0f493d9a1f3abe2e195f0681a4d812a" translate="yes" xml:space="preserve">
          <source>1) The length of the null-terminated byte string &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="translated">1) La longitud de la cadena de bytes terminada en nulo &lt;code&gt;str&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f83e99ba442596269803061a06189dbc53399520" translate="yes" xml:space="preserve">
          <source>1) The length of the null-terminated wide string &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="translated">1) La longitud de la cadena de &lt;code&gt;str&lt;/code&gt; ancha terminada en nulo .</target>
        </trans-unit>
        <trans-unit id="a084cdd2239b71155ebdd96ca5239a8cad4333f2" translate="yes" xml:space="preserve">
          <source>1) The number of parameters must equal the number of arguments (unless the ellipsis parameter is used).</source>
          <target state="translated">1)El número de parámetros debe ser igual al número de argumentos (a menos que se utilice el parámetro de la elipse).</target>
        </trans-unit>
        <trans-unit id="68af2515487778be00d587b192cce547fe709ce4" translate="yes" xml:space="preserve">
          <source>1) The source file is decomposed into &lt;a href=&quot;../comment&quot;&gt;comments&lt;/a&gt;, sequences of whitespace characters (space, horizontal tab, new-line, vertical tab, and form-feed), and</source>
          <target state="translated">1) El archivo fuente se descompone en &lt;a href=&quot;../comment&quot;&gt;comentarios&lt;/a&gt; , secuencias de caracteres de espacio en blanco (espacio, pesta&amp;ntilde;a horizontal, nueva l&amp;iacute;nea, pesta&amp;ntilde;a vertical y avance de formulario), y</target>
        </trans-unit>
        <trans-unit id="1804f540be0df55334d3972f03fe91f9cf90ba1c" translate="yes" xml:space="preserve">
          <source>1) There is a sequence point after the evaluation of all function arguments and of the function designator, and before the actual function call.</source>
          <target state="translated">1)Hay un punto de secuencia después de la evaluación de todos los argumentos de la función y del designador de la función,y antes de la llamada de la función real.</target>
        </trans-unit>
        <trans-unit id="5dbd9a12935e34ab227f492e5b9bc1ac950dbdab" translate="yes" xml:space="preserve">
          <source>1) Use as a type specifier; this designates a new atomic type</source>
          <target state="translated">1)Usar como especificador de tipo;esto designa un nuevo tipo atómico</target>
        </trans-unit>
        <trans-unit id="226dddaf427d6d8e2424ad6d2b508917703a9bff" translate="yes" xml:space="preserve">
          <source>1) Whenever backslash appears at the end of a line (immediately followed by the newline character), both backslash and newline are deleted, combining two physical source lines into one logical source line. This is a single-pass operation: a line ending in two backslashes followed by an empty line does not combine three lines into one.</source>
          <target state="translated">1)Siempre que aparece una barra invertida al final de una línea (seguida inmediatamente por el carácter de la nueva línea),se eliminan tanto la barra invertida como la nueva línea,combinando dos líneas de origen físico en una línea de origen lógico.Esta es una operación de un solo paso:una línea que termina en dos barras invertidas seguidas de una línea vacía no combina tres líneas en una sola.</target>
        </trans-unit>
        <trans-unit id="487a5bbea51ecfc00ee95a9593427dda69554210" translate="yes" xml:space="preserve">
          <source>1) Writes the results to &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">1) Escribe los resultados en &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d3f29720e18edb0e19950e4a194d25091ae7befb" translate="yes" xml:space="preserve">
          <source>1) Writes the results to the output stream &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">1) Escribe los resultados en la secuencia de salida &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="19aef5c6e3a8340b10f8c1cbe62faa12cf60c919" translate="yes" xml:space="preserve">
          <source>1) a &lt;a href=&quot;function_declaration&quot;&gt;function without a prototype&lt;/a&gt;</source>
          <target state="translated">1) una &lt;a href=&quot;function_declaration&quot;&gt;funci&amp;oacute;n sin un prototipo&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="25dca83efb65c8bd4e04da09f3580ec3bfb3c378" translate="yes" xml:space="preserve">
          <source>1) addition: lhs and rhs must be one of the following</source>
          <target state="translated">1)adición:lhs y rhs debe ser uno de los siguientes</target>
        </trans-unit>
        <trans-unit id="abeb32c1f3640410888ad60b7c9db0d4e2b48273" translate="yes" xml:space="preserve">
          <source>1) address of a function</source>
          <target state="translated">1)dirección de una función</target>
        </trans-unit>
        <trans-unit id="40a8653a0d3236909f145d472c49940dd109766a" translate="yes" xml:space="preserve">
          <source>1) as soon as atomic operations that are not tagged &lt;code&gt;memory_order_seq_cst&lt;/code&gt; enter the picture, the sequential consistency is lost</source>
          <target state="translated">1) tan pronto como las operaciones at&amp;oacute;micas que no est&amp;aacute;n etiquetadas &lt;code&gt;memory_order_seq_cst&lt;/code&gt; ingresen a la imagen, se pierde la coherencia secuencial</target>
        </trans-unit>
        <trans-unit id="cb41c99c432b78323d4f377b74a0c397256353fa" translate="yes" xml:space="preserve">
          <source>1) bitwise NOT</source>
          <target state="translated">1)poco a poco NO</target>
        </trans-unit>
        <trans-unit id="a5c4eb068ddbed14cdec7bfed116012173c4eb9f" translate="yes" xml:space="preserve">
          <source>1) character string identifying the value of the environmental variable or null pointer if such variable is not found.</source>
          <target state="translated">1)cadena de caracteres que identifica el valor de la variable ambiental o el puntero nulo si no se encuentra dicha variable.</target>
        </trans-unit>
        <trans-unit id="bcd432da28db454a04c5521200c0c8acca5a755e" translate="yes" xml:space="preserve">
          <source>1) compound statements</source>
          <target state="translated">1)declaraciones compuestas</target>
        </trans-unit>
        <trans-unit id="25e76c36e2ae3683079592703d839a13a3ee3588" translate="yes" xml:space="preserve">
          <source>1) equal-to expression</source>
          <target state="translated">1)igual a la expresión</target>
        </trans-unit>
        <trans-unit id="8d9b8bd79df06297796e16e2b60bf3da31a61598" translate="yes" xml:space="preserve">
          <source>1) identifier appearing as the operand of a &lt;a href=&quot;goto&quot;&gt;goto statement&lt;/a&gt; is looked up in the label name space.</source>
          <target state="translated">1) el identificador que aparece como el operando de una &lt;a href=&quot;goto&quot;&gt;instrucci&amp;oacute;n goto&lt;/a&gt; se busca en el espacio del nombre de la etiqueta.</target>
        </trans-unit>
        <trans-unit id="0c39ad40da198d4086d01e5009475920ac42d80c" translate="yes" xml:space="preserve">
          <source>1) if the expressions have arithmetic type, the common type is the type after &lt;a href=&quot;conversion#Usual_arithmetic_conversions&quot;&gt;usual arithmetic conversions&lt;/a&gt;</source>
          <target state="translated">1) si las expresiones tienen tipo aritm&amp;eacute;tico, el tipo com&amp;uacute;n es el tipo despu&amp;eacute;s de &lt;a href=&quot;conversion#Usual_arithmetic_conversions&quot;&gt;las conversiones aritm&amp;eacute;ticas habituales&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f08aa13ffd87bf5b57bd2b5c39f8fe2c531e8de4" translate="yes" xml:space="preserve">
          <source>1) left shift of lhs by rhs bits</source>
          <target state="translated">1)Desplazamiento a la izquierda de lhs por bits de rhs</target>
        </trans-unit>
        <trans-unit id="5a4bee23927627b309d490ee1c564271b77131e0" translate="yes" xml:space="preserve">
          <source>1) less-than expression</source>
          <target state="translated">1)menos que la expresión</target>
        </trans-unit>
        <trans-unit id="e67fda6fb2705cb05d8d8619b1774a9c81847f72" translate="yes" xml:space="preserve">
          <source>1) multiplication. lhs and rhs must have &lt;a href=&quot;arithmetic_types&quot;&gt;arithmetic types&lt;/a&gt;</source>
          <target state="translated">1) multiplicaci&amp;oacute;n. lhs y rhs deben tener &lt;a href=&quot;arithmetic_types&quot;&gt;tipos aritm&amp;eacute;ticos&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4eeb5ca4abaf93d3cd3e7d468d8dcbd0091888b1" translate="yes" xml:space="preserve">
          <source>1) pointer to a static internal &lt;code&gt;&lt;a href=&quot;tm&quot;&gt;tm&lt;/a&gt;&lt;/code&gt; object on success, or null pointer otherwise. The structure may be shared between &lt;code&gt;&lt;a href=&quot;gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;localtime&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;ctime&quot;&gt;ctime&lt;/a&gt;&lt;/code&gt; and may be overwritten on each invocation.</source>
          <target state="translated">1) puntero a un objeto &lt;code&gt;&lt;a href=&quot;tm&quot;&gt;tm&lt;/a&gt;&lt;/code&gt; interno est&amp;aacute;tico en caso de &amp;eacute;xito, o puntero nulo en caso contrario. La estructura puede ser compartida entre &lt;code&gt;&lt;a href=&quot;gmtime&quot;&gt;gmtime&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;localtime&lt;/code&gt; , y &lt;code&gt;&lt;a href=&quot;ctime&quot;&gt;ctime&lt;/a&gt;&lt;/code&gt; y puede ser sobrescrita en cada invocaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="77a22f2c003682c7542353884c5912023ee1cf14" translate="yes" xml:space="preserve">
          <source>1) pointer to a static internal &lt;code&gt;&lt;a href=&quot;tm&quot;&gt;tm&lt;/a&gt;&lt;/code&gt; object on success, or null pointer otherwise. The structure may be shared between &lt;code&gt;gmtime&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;ctime&quot;&gt;ctime&lt;/a&gt;&lt;/code&gt; and may be overwritten on each invocation.</source>
          <target state="translated">1) puntero a un objeto &lt;code&gt;&lt;a href=&quot;tm&quot;&gt;tm&lt;/a&gt;&lt;/code&gt; interno est&amp;aacute;tico en caso de &amp;eacute;xito, o puntero nulo en caso contrario. La estructura puede ser compartida entre &lt;code&gt;gmtime&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;localtime&quot;&gt;localtime&lt;/a&gt;&lt;/code&gt; , y &lt;code&gt;&lt;a href=&quot;ctime&quot;&gt;ctime&lt;/a&gt;&lt;/code&gt; y puede ser sobrescrita en cada invocaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="bfe7b906cc1ee9ec716b40da5b8700cad2d21f96" translate="yes" xml:space="preserve">
          <source>1) pointer to a static null-terminated character string holding the textual representation of date and time as described above. The string may be shared between &lt;code&gt;asctime&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ctime&quot;&gt;ctime&lt;/a&gt;&lt;/code&gt;, and may be overwritten on each invocation of any of those functions.</source>
          <target state="translated">1) puntero a una cadena de caracteres est&amp;aacute;tica terminada en nulo que contiene la representaci&amp;oacute;n textual de fecha y hora como se describi&amp;oacute; anteriormente. La cadena puede ser compartida entre &lt;code&gt;asctime&lt;/code&gt; y &lt;code&gt;&lt;a href=&quot;ctime&quot;&gt;ctime&lt;/a&gt;&lt;/code&gt; , y puede ser sobrescrita en cada invocaci&amp;oacute;n de cualquiera de esas funciones.</target>
        </trans-unit>
        <trans-unit id="5095a6d20497cd3f302cda1fca918ff4048ce380" translate="yes" xml:space="preserve">
          <source>1) pointer to a static null-terminated character string holding the textual representation of date and time. The string may be shared between &lt;code&gt;asctime&lt;/code&gt; and &lt;code&gt;ctime&lt;/code&gt;, and may be overwritten on each invocation of any of those functions.</source>
          <target state="translated">1) puntero a una cadena de caracteres est&amp;aacute;tica terminada en nulo que contiene la representaci&amp;oacute;n textual de fecha y hora. La cadena puede ser compartida entre &lt;code&gt;asctime&lt;/code&gt; y &lt;code&gt;ctime&lt;/code&gt; , y puede ser sobrescrita en cada invocaci&amp;oacute;n de cualquiera de esas funciones.</target>
        </trans-unit>
        <trans-unit id="7b1937df5d97d513eb74d968a764798b979f3a53" translate="yes" xml:space="preserve">
          <source>1) pointer to character string that describes the error</source>
          <target state="translated">1)puntero a la cadena de caracteres que describe el error</target>
        </trans-unit>
        <trans-unit id="bbb123035f2a14d67a45da76c00c106d372e43aa" translate="yes" xml:space="preserve">
          <source>1) reads the data from &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">1) lee los datos de &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a32798de36139374c63446cf3fe7120829db8365" translate="yes" xml:space="preserve">
          <source>1) returns a copy of &lt;code&gt;dest&lt;/code&gt;</source>
          <target state="translated">1) devuelve una copia de &lt;code&gt;dest&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="477c654e3248bdeac06ad1d32868d3f1f786932d" translate="yes" xml:space="preserve">
          <source>1) single-byte integer character constant, e.g. &lt;code&gt;'a'&lt;/code&gt; or &lt;code&gt;'\n'&lt;/code&gt; or &lt;code&gt;'\13'&lt;/code&gt;. Such constant has type &lt;code&gt;int&lt;/code&gt; and a value equal to the representation of c-char in the execution character set as a value of type &lt;code&gt;char&lt;/code&gt; mapped to &lt;code&gt;int&lt;/code&gt;. If c-char is not representable as a single byte in the execution character set, the value is implementation-defined.</source>
          <target state="translated">1) constante de car&amp;aacute;cter entero de un solo byte, por ejemplo, &lt;code&gt;'a'&lt;/code&gt; o &lt;code&gt;'\n'&lt;/code&gt; o &lt;code&gt;'\13'&lt;/code&gt; . Dicha constante tiene un tipo &lt;code&gt;int&lt;/code&gt; y un valor igual a la representaci&amp;oacute;n de c-char en el conjunto de caracteres de ejecuci&amp;oacute;n como un valor de tipo &lt;code&gt;char&lt;/code&gt; asignado a &lt;code&gt;int&lt;/code&gt; . Si c-char no es representable como un solo byte en el juego de caracteres de ejecuci&amp;oacute;n, el valor est&amp;aacute; definido por la implementaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="90d1f78ed7461b36a81ff2b1ff2c9cbd3546c6c9" translate="yes" xml:space="preserve">
          <source>1) string literal initializer for character and wide character arrays</source>
          <target state="translated">1)Inicializador literal de cadenas para matrices de caracteres y caracteres anchos</target>
        </trans-unit>
        <trans-unit id="0ee9168f93a2879767e08fcc412682b1be67da16" translate="yes" xml:space="preserve">
          <source>1) the identifier that this declarator introduces.</source>
          <target state="translated">1)el identificador que este declarante introduce.</target>
        </trans-unit>
        <trans-unit id="a673b6776355a818d38cede9e48e75678c00f825" translate="yes" xml:space="preserve">
          <source>1) the ranks of all signed integer types are different and increase with their precision: rank of signed char &amp;lt; rank of short &amp;lt; rank of int &amp;lt; rank of long int &amp;lt; rank of long long int</source>
          <target state="translated">1) los rangos de todos los tipos de enteros con signo son diferentes y aumentan con su precisi&amp;oacute;n: rango de caracteres con signo &amp;lt;rango de corto &amp;lt;rango de int &amp;lt;rango de largo int &amp;lt;rango de largo largo int</target>
        </trans-unit>
        <trans-unit id="7d4fd8e6643d5e1207570d762ff147612f50ae1b" translate="yes" xml:space="preserve">
          <source>1) the result of the expression, unless it is zero</source>
          <target state="translated">1)el resultado de la expresión,a menos que sea cero</target>
        </trans-unit>
        <trans-unit id="bc5e060dc470b927342212aaafa0e89ac968357f" translate="yes" xml:space="preserve">
          <source>1) unary plus (promotion)</source>
          <target state="translated">1)unary plus (promoción)</target>
        </trans-unit>
        <trans-unit id="b09518e8b5551fe4600062b1ecd5c385b61cd6df" translate="yes" xml:space="preserve">
          <source>1) value transformation (if applicable)</source>
          <target state="translated">1)transformación del valor (si procede)</target>
        </trans-unit>
        <trans-unit id="9cbd2c90f862af5bbf15f0fdc461e461b24ed0e4" translate="yes" xml:space="preserve">
          <source>1)(C95) Character width: unset, narrow, or wide</source>
          <target state="translated">1)(C95)Anchura de los caracteres:no fija,estrecha o ancha</target>
        </trans-unit>
        <trans-unit id="544586f3a0a092f5bbcec5cdc6560837e125403e" translate="yes" xml:space="preserve">
          <source>1)&lt;a href=&quot;../preprocessor&quot;&gt;Preprocessor&lt;/a&gt; is executed.</source>
          <target state="translated">1) Se ejecuta el &lt;a href=&quot;../preprocessor&quot;&gt;preprocesador&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="459d93416f3a7fe456f375bc9904e3600ac24151" translate="yes" xml:space="preserve">
          <source>1)&lt;a href=&quot;break&quot;&gt;break&lt;/a&gt; statement</source>
          <target state="translated">1) declaraci&amp;oacute;n de &lt;a href=&quot;break&quot;&gt;ruptura&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f89dbd79f4d8971ec3ac21b786416f808a4baaaa" translate="yes" xml:space="preserve">
          <source>1)&lt;a href=&quot;if&quot;&gt;if&lt;/a&gt; statement</source>
          <target state="translated">1) &lt;a href=&quot;if&quot;&gt;si la&lt;/a&gt; declaraci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="07b8e9b9816b30735de981a2880084a892285189" translate="yes" xml:space="preserve">
          <source>1)&lt;a href=&quot;static_storage_duration&quot;&gt;static&lt;/a&gt;&lt;code&gt;volatile&lt;/code&gt; objects model memory-mapped I/O ports, and &lt;code&gt;static&lt;/code&gt;&lt;code&gt;const&lt;/code&gt;&lt;code&gt;volatile&lt;/code&gt; objects model memory-mapped input ports, such as a real-time clock:</source>
          <target state="translated">1) &lt;code&gt;volatile&lt;/code&gt; objetos vol&amp;aacute;tiles &lt;a href=&quot;static_storage_duration&quot;&gt;est&amp;aacute;ticos&lt;/a&gt; modelan puertos de E / S mapeados en memoria, y &lt;code&gt;volatile&lt;/code&gt; objetos vol&amp;aacute;tiles &lt;code&gt;const&lt;/code&gt; antes &lt;code&gt;static&lt;/code&gt; modelan puertos de entrada mapeados en memoria, como un reloj de tiempo real:</target>
        </trans-unit>
        <trans-unit id="fe435b6509bb017cac34a34cd990555811ddde06" translate="yes" xml:space="preserve">
          <source>1)&lt;a href=&quot;while&quot;&gt;while&lt;/a&gt; loop</source>
          <target state="translated">1) &lt;a href=&quot;while&quot;&gt;mientras&lt;/a&gt; bucle</target>
        </trans-unit>
        <trans-unit id="6bc629d6e02fd75040100ba65f909e806582a43e" translate="yes" xml:space="preserve">
          <source>1)&lt;code&gt;filename&lt;/code&gt; if &lt;code&gt;filename&lt;/code&gt; was not a null pointer. Otherwise a pointer to an internal static buffer is returned. If no suitable filename can be generated, null pointer is returned.</source>
          <target state="translated">1) &lt;code&gt;filename&lt;/code&gt; si el &lt;code&gt;filename&lt;/code&gt; no era un puntero nulo. De lo contrario, se devuelve un puntero a un b&amp;uacute;fer est&amp;aacute;tico interno. Si no se puede generar un nombre de archivo adecuado, se devuelve un puntero nulo.</target>
        </trans-unit>
        <trans-unit id="ce15eef362e478877c8e3611aa792c5988df605f" translate="yes" xml:space="preserve">
          <source>1,2) General array declarator syntax</source>
          <target state="translated">1,2)Sintaxis general del declarante de la matriz</target>
        </trans-unit>
        <trans-unit id="f9a36e8936e92662180ea3acf2c3df7b18f6e4d3" translate="yes" xml:space="preserve">
          <source>1,2) Number of wide characters written if successful or negative value if an error occurred.</source>
          <target state="translated">1,2)Número de caracteres anchos escritos si se ha tenido éxito o valor negativo si se ha producido un error.</target>
        </trans-unit>
        <trans-unit id="ba43862f88a88267f3ece2ce7c3f4a09d0e5698c" translate="yes" xml:space="preserve">
          <source>1,2) number of characters transmitted to the output stream or negative value if an output error or an encoding error (for string and character conversion specifiers) occurred</source>
          <target state="translated">1,2)número de caracteres transmitidos a la corriente de salida o valor negativo si se produce un error de salida o un error de codificación (para los especificadores de conversión de cadenas y caracteres)</target>
        </trans-unit>
        <trans-unit id="0fb3c464483c04558978ff1fe117799e7f6c93e2" translate="yes" xml:space="preserve">
          <source>1-3) Composes a floating point value with the magnitude of &lt;code&gt;x&lt;/code&gt; and the sign of &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">1-3) Compone un valor de coma flotante con la magnitud de &lt;code&gt;x&lt;/code&gt; y el signo de &lt;code&gt;y&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fcde828507f9f6058ae73d6cd3b2b9026e0f50ef" translate="yes" xml:space="preserve">
          <source>1-3) Computes 2 raised to the given power &lt;code&gt;n&lt;/code&gt;.</source>
          <target state="translated">1-3) Calcula 2 elevado a la potencia dada &lt;code&gt;n&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0b10a66a66532d88bb36cf5fe638ed44244ef518" translate="yes" xml:space="preserve">
          <source>1-3) Computes &lt;code&gt;(x*y) + z&lt;/code&gt; as if to infinite precision and rounded only once to fit the result type.</source>
          <target state="translated">1-3) Calcula &lt;code&gt;(x*y) + z&lt;/code&gt; como si tuviera una precisi&amp;oacute;n infinita y se redondea solo una vez para ajustarse al tipo de resultado.</target>
        </trans-unit>
        <trans-unit id="391463a3800cd96169a13d8b4dece9dae4d27979" translate="yes" xml:space="preserve">
          <source>1-3) Computes complex arc hyperbolic cosine of a complex value &lt;code&gt;z&lt;/code&gt; with branch cut at values less than 1 along the real axis.</source>
          <target state="translated">1-3) Calcula el coseno hiperb&amp;oacute;lico de arco complejo de un valor complejo &lt;code&gt;z&lt;/code&gt; con corte de ramificaci&amp;oacute;n en valores inferiores a 1 a lo largo del eje real.</target>
        </trans-unit>
        <trans-unit id="33d189527983196a05f8badc2ce605f47898ef16" translate="yes" xml:space="preserve">
          <source>1-3) Computes hyperbolic sine of &lt;code&gt;arg&lt;/code&gt;.</source>
          <target state="translated">1-3) Calcula el seno hiperb&amp;oacute;lico de &lt;code&gt;arg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="31768a26b0bb7d42a533db6c8b10df547bfd7cdc" translate="yes" xml:space="preserve">
          <source>1-3) Computes square root of &lt;code&gt;arg&lt;/code&gt;.</source>
          <target state="translated">1-3) Calcula la ra&amp;iacute;z cuadrada de &lt;code&gt;arg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="28ec09da0b6641bd12fea6733e03810bd776a300" translate="yes" xml:space="preserve">
          <source>1-3) Computes the</source>
          <target state="translated">1-3)Calcula el</target>
        </trans-unit>
        <trans-unit id="16ce8bee01b9891d115239a7477107ac295d8027" translate="yes" xml:space="preserve">
          <source>1-3) Computes the &lt;a href=&quot;https://en.wikipedia.org/wiki/Complementary_error_function&quot;&gt;complementary error function&lt;/a&gt; of &lt;code&gt;arg&lt;/code&gt;, that is &lt;code&gt;1.0-erf(arg)&lt;/code&gt;, but without loss of precision for large &lt;code&gt;arg&lt;/code&gt;.</source>
          <target state="translated">1-3) Calcula la &lt;a href=&quot;https://en.wikipedia.org/wiki/Complementary_error_function&quot;&gt;funci&amp;oacute;n&lt;/a&gt; de error complementaria de &lt;code&gt;arg&lt;/code&gt; , que es &lt;code&gt;1.0-erf(arg)&lt;/code&gt; , pero sin p&amp;eacute;rdida de precisi&amp;oacute;n para &lt;code&gt;arg&lt;/code&gt; grandes .</target>
        </trans-unit>
        <trans-unit id="a46bba6cb124ad9fac9c675733896ed48e0f9cca" translate="yes" xml:space="preserve">
          <source>1-3) Computes the &lt;a href=&quot;https://en.wikipedia.org/wiki/Complex_conjugate&quot;&gt;complex conjugate&lt;/a&gt; of &lt;code&gt;z&lt;/code&gt; by reversing the sign of the imaginary part.</source>
          <target state="translated">1-3) Calcula el &lt;a href=&quot;https://en.wikipedia.org/wiki/Complex_conjugate&quot;&gt;complejo conjugado&lt;/a&gt; de &lt;code&gt;z&lt;/code&gt; invirtiendo el signo de la parte imaginaria.</target>
        </trans-unit>
        <trans-unit id="97251e58129990d405a20b926849ead40fb0049e" translate="yes" xml:space="preserve">
          <source>1-3) Computes the &lt;a href=&quot;https://en.wikipedia.org/wiki/Error_function&quot;&gt;error function&lt;/a&gt; of &lt;code&gt;arg&lt;/code&gt;.</source>
          <target state="translated">1-3) Calcula la &lt;a href=&quot;https://en.wikipedia.org/wiki/Error_function&quot;&gt;funci&amp;oacute;n&lt;/a&gt; de error de &lt;code&gt;arg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f537c5d69e850d077ca503d3ae6dc365cd7f23e0" translate="yes" xml:space="preserve">
          <source>1-3) Computes the &lt;a href=&quot;https://en.wikipedia.org/wiki/Gamma_function&quot;&gt;gamma function&lt;/a&gt; of &lt;code&gt;arg&lt;/code&gt;.</source>
          <target state="translated">1-3) Calcula la &lt;a href=&quot;https://en.wikipedia.org/wiki/Gamma_function&quot;&gt;funci&amp;oacute;n gamma&lt;/a&gt; de &lt;code&gt;arg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="06fb2522f313d7443f8ff5ed057df67c62229bb0" translate="yes" xml:space="preserve">
          <source>1-3) Computes the IEEE remainder of the floating point division operation &lt;code&gt;x/y&lt;/code&gt;.</source>
          <target state="translated">1-3) Calcula el resto IEEE de la operaci&amp;oacute;n de divisi&amp;oacute;n de coma flotante &lt;code&gt;x/y&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="be3d24e66d81f8bbcc04cf24d5cb3c0f59f63fb1" translate="yes" xml:space="preserve">
          <source>1-3) Computes the absolute value of a floating point value &lt;code&gt;arg&lt;/code&gt;.</source>
          <target state="translated">1-3) Calcula el valor absoluto de un valor de coma flotante &lt;code&gt;arg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c81dd03c2b6fc6f836c4d892752e7e2ab9381fd1" translate="yes" xml:space="preserve">
          <source>1-3) Computes the arc tangent of &lt;code&gt;y/x&lt;/code&gt; using the signs of arguments to determine the correct quadrant.</source>
          <target state="translated">1-3) Calcula el arco tangente de &lt;code&gt;y/x&lt;/code&gt; usando los signos de los argumentos para determinar el cuadrante correcto.</target>
        </trans-unit>
        <trans-unit id="06750d9cc7c32e7e6bfcfcbafd570e2cc591f0fd" translate="yes" xml:space="preserve">
          <source>1-3) Computes the argument (also called phase angle) of &lt;code&gt;z&lt;/code&gt;, with a branch cut along the negative real axis.</source>
          <target state="translated">1-3) Calcula el argumento (tambi&amp;eacute;n llamado &amp;aacute;ngulo de fase) de &lt;code&gt;z&lt;/code&gt; , con una rama cortada a lo largo del eje real negativo.</target>
        </trans-unit>
        <trans-unit id="ee5f36ceb4351ae31b628964437c4ea71c05d2af" translate="yes" xml:space="preserve">
          <source>1-3) Computes the base &lt;code&gt;2&lt;/code&gt; logarithm of &lt;code&gt;arg&lt;/code&gt;.</source>
          <target state="translated">1-3) Calcula el logaritmo de base &lt;code&gt;2&lt;/code&gt; de &lt;code&gt;arg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5c8f047806cca3758bc70d1feb8b6bd1e2f2df15" translate="yes" xml:space="preserve">
          <source>1-3) Computes the common (base-</source>
          <target state="translated">1-3)Calcula el común (base...</target>
        </trans-unit>
        <trans-unit id="60333cf3aa9043e0315748ab7e2b62403e94f0ed" translate="yes" xml:space="preserve">
          <source>1-3) Computes the complex absolute value (also known as norm, modulus, or magnitude) of &lt;code&gt;z&lt;/code&gt;.</source>
          <target state="translated">1-3) Calcula el valor absoluto complejo (tambi&amp;eacute;n conocido como norma, m&amp;oacute;dulo o magnitud) de &lt;code&gt;z&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b24df078afb55898bc4d0378e599aed92d5acbb0" translate="yes" xml:space="preserve">
          <source>1-3) Computes the complex arc cosine of &lt;code&gt;z&lt;/code&gt; with branch cuts outside the interval [&amp;minus;1,+1] along the real axis.</source>
          <target state="translated">1-3) Calcula el arco coseno complejo de &lt;code&gt;z&lt;/code&gt; con cortes de rama fuera del intervalo [&amp;minus;1, + 1] a lo largo del eje real.</target>
        </trans-unit>
        <trans-unit id="ac2e2376f4a51f777c7892ba6ae4d3e81638bf93" translate="yes" xml:space="preserve">
          <source>1-3) Computes the complex arc hyperbolic sine of &lt;code&gt;z&lt;/code&gt; with branch cuts outside the interval [&amp;minus;i; +i] along the imaginary axis.</source>
          <target state="translated">1-3) Calcula el arco complejo seno seno hiperb&amp;oacute;lico de &lt;code&gt;z&lt;/code&gt; con cortes de rama fuera del intervalo [&amp;minus;i; + i] a lo largo del eje imaginario.</target>
        </trans-unit>
        <trans-unit id="c6da26ae6668a03fcc7355b5d6b740f8da661f51" translate="yes" xml:space="preserve">
          <source>1-3) Computes the complex arc hyperbolic tangent of &lt;code&gt;z&lt;/code&gt; with branch cuts outside the interval [&amp;minus;1; +1] along the real axis.</source>
          <target state="translated">1-3) Calcula la compleja tangente hiperb&amp;oacute;lica de arco de &lt;code&gt;z&lt;/code&gt; con cortes de rama fuera del intervalo [&amp;minus;1; +1] a lo largo del eje real.</target>
        </trans-unit>
        <trans-unit id="cec456ea00710068c385ca571810a82e406902f8" translate="yes" xml:space="preserve">
          <source>1-3) Computes the complex arc sine of &lt;code&gt;z&lt;/code&gt; with branch cuts outside the interval [&amp;minus;1,+1] along the real axis.</source>
          <target state="translated">1-3) Calcula el complejo arco seno de &lt;code&gt;z&lt;/code&gt; con cortes de rama fuera del intervalo [&amp;minus;1, + 1] a lo largo del eje real.</target>
        </trans-unit>
        <trans-unit id="ddec1cfe87aa90c715aba4048b304433c0c7acf0" translate="yes" xml:space="preserve">
          <source>1-3) Computes the complex arc tangent of &lt;code&gt;z&lt;/code&gt; with branch cuts outside the interval [&amp;minus;i,+i] along the imaginary axis.</source>
          <target state="translated">1-3) Calcula el arco tangente complejo de &lt;code&gt;z&lt;/code&gt; con cortes de rama fuera del intervalo [&amp;minus;i, + i] a lo largo del eje imaginario.</target>
        </trans-unit>
        <trans-unit id="37a5f4e8ee29f4770c1b428a6ae1e2af970549f0" translate="yes" xml:space="preserve">
          <source>1-3) Computes the complex base-</source>
          <target state="translated">1-3)Calcula la base compleja...</target>
        </trans-unit>
        <trans-unit id="2a4970febdd81e1ce65fb63d9d4255a5d110644c" translate="yes" xml:space="preserve">
          <source>1-3) Computes the complex cosine of &lt;code&gt;z&lt;/code&gt;.</source>
          <target state="translated">1-3) Calcula el coseno complejo de &lt;code&gt;z&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="91fb694afb20262940799c2898a8f8fe0462b8a6" translate="yes" xml:space="preserve">
          <source>1-3) Computes the complex hyperbolic cosine of &lt;code&gt;z&lt;/code&gt;.</source>
          <target state="translated">1-3) Calcula el coseno hiperb&amp;oacute;lico complejo de &lt;code&gt;z&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71ffa777c19ae6318370f72b88388f1c5cdd336b" translate="yes" xml:space="preserve">
          <source>1-3) Computes the complex hyperbolic sine of &lt;code&gt;z&lt;/code&gt;.</source>
          <target state="translated">1-3) Calcula el seno hiperb&amp;oacute;lico complejo de &lt;code&gt;z&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6e454b759ec87b387a40ce69ac1d6e4d3c51d742" translate="yes" xml:space="preserve">
          <source>1-3) Computes the complex hyperbolic tangent of &lt;code&gt;z&lt;/code&gt;.</source>
          <target state="translated">1-3) Calcula la tangente hiperb&amp;oacute;lica compleja de &lt;code&gt;z&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d6525555de756109fec8457d147c2a5ecb28dd84" translate="yes" xml:space="preserve">
          <source>1-3) Computes the complex natural (base-</source>
          <target state="translated">1-3)Calcula el complejo natural (base...</target>
        </trans-unit>
        <trans-unit id="b424a84895d56e8650a908d854526b42620a89c8" translate="yes" xml:space="preserve">
          <source>1-3) Computes the complex power function xy</source>
          <target state="translated">1-3)Calcula la compleja función de energía xy</target>
        </trans-unit>
        <trans-unit id="6db3670778af6b7d6734a660afcf51674b73a868" translate="yes" xml:space="preserve">
          <source>1-3) Computes the complex sine of &lt;code&gt;z&lt;/code&gt;.</source>
          <target state="translated">1-3) Calcula el seno complejo de &lt;code&gt;z&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="463f874ab13935fe53826f00eb409464a609d5f0" translate="yes" xml:space="preserve">
          <source>1-3) Computes the complex square root of &lt;code&gt;z&lt;/code&gt; with branch cut along the negative real axis.</source>
          <target state="translated">1-3) Calcula la ra&amp;iacute;z cuadrada compleja de &lt;code&gt;z&lt;/code&gt; con corte de rama a lo largo del eje real negativo.</target>
        </trans-unit>
        <trans-unit id="5ff4551aadbb7748533181ffadb04f2a88602bb3" translate="yes" xml:space="preserve">
          <source>1-3) Computes the complex tangent of &lt;code&gt;z&lt;/code&gt;.</source>
          <target state="translated">1-3) Calcula la tangente compleja de &lt;code&gt;z&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="65d8a20bcbf6a9507496a6f8360d5d0ce58b7891" translate="yes" xml:space="preserve">
          <source>1-3) Computes the cosine of &lt;code&gt;arg&lt;/code&gt; (measured in radians).</source>
          <target state="translated">1-3) Calcula el coseno de &lt;code&gt;arg&lt;/code&gt; (medido en radianes).</target>
        </trans-unit>
        <trans-unit id="0a04ca7b947ef0432a97ce2c9c9402dd97bf3715" translate="yes" xml:space="preserve">
          <source>1-3) Computes the cubic root of &lt;code&gt;arg&lt;/code&gt;.</source>
          <target state="translated">1-3) Calcula la ra&amp;iacute;z c&amp;uacute;bica de &lt;code&gt;arg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7fecb384f372f5695adad30217b637f35cd1f434" translate="yes" xml:space="preserve">
          <source>1-3) Computes the floating-point remainder of the division operation &lt;code&gt;x/y&lt;/code&gt; as the &lt;code&gt;&lt;a href=&quot;remainder&quot;&gt;remainder()&lt;/a&gt;&lt;/code&gt; function does. Additionally, the sign and at least the three of the last bits of &lt;code&gt;x/y&lt;/code&gt; will be stored in &lt;code&gt;quo&lt;/code&gt;, sufficient to determine the octant of the result within a period.</source>
          <target state="translated">1-3) Calcula el resto de coma flotante de la operaci&amp;oacute;n de divisi&amp;oacute;n &lt;code&gt;x/y&lt;/code&gt; como lo hace la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;remainder&quot;&gt;remainder()&lt;/a&gt;&lt;/code&gt; . Adem&amp;aacute;s, el signo y al menos los tres &amp;uacute;ltimos bits de &lt;code&gt;x/y&lt;/code&gt; se almacenar&amp;aacute;n en &lt;code&gt;quo&lt;/code&gt; , suficiente para determinar el octante del resultado dentro de un per&amp;iacute;odo.</target>
        </trans-unit>
        <trans-unit id="da7e6ba39e7925b467e308b04f0b0774e301062b" translate="yes" xml:space="preserve">
          <source>1-3) Computes the floating-point remainder of the division operation &lt;code&gt;x/y&lt;/code&gt;.</source>
          <target state="translated">1-3) Calcula el resto de coma flotante de la operaci&amp;oacute;n de divisi&amp;oacute;n &lt;code&gt;x/y&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4ca94a69ba418098c40a0bd9ebaead1ba5b3073e" translate="yes" xml:space="preserve">
          <source>1-3) Computes the hyperbolic cosine of &lt;code&gt;arg&lt;/code&gt;.</source>
          <target state="translated">1-3) Calcula el coseno hiperb&amp;oacute;lico de &lt;code&gt;arg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fae7a10dc4f39ad3a3c3ccc7d443ba77adec426c" translate="yes" xml:space="preserve">
          <source>1-3) Computes the hyperbolic tangent of &lt;code&gt;arg&lt;/code&gt;.</source>
          <target state="translated">1-3) Calcula la tangente hiperb&amp;oacute;lica de &lt;code&gt;arg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75dd9fa119e02d6efb8298dc297ba4d969160f1d" translate="yes" xml:space="preserve">
          <source>1-3) Computes the inverse hyperbolic cosine of &lt;code&gt;arg&lt;/code&gt;.</source>
          <target state="translated">1-3) Calcula el coseno hiperb&amp;oacute;lico inverso de &lt;code&gt;arg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="834472b18c2a6549ef22068e323b56d7df86c118" translate="yes" xml:space="preserve">
          <source>1-3) Computes the inverse hyperbolic sine of &lt;code&gt;arg&lt;/code&gt;.</source>
          <target state="translated">1-3) Calcula el seno hiperb&amp;oacute;lico inverso de &lt;code&gt;arg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="061964416b59b2bac46fda851482e538336e320e" translate="yes" xml:space="preserve">
          <source>1-3) Computes the inverse hyperbolic tangent of &lt;code&gt;arg&lt;/code&gt;.</source>
          <target state="translated">1-3) Calcula la tangente hiperb&amp;oacute;lica inversa de &lt;code&gt;arg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ff20a5ce239fd62c651f7088bfbe37c43a76e82" translate="yes" xml:space="preserve">
          <source>1-3) Computes the largest integer value not greater than &lt;code&gt;arg&lt;/code&gt;.</source>
          <target state="translated">1-3) Calcula el mayor valor entero no mayor que &lt;code&gt;arg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ca11cec96c81f740aceb07d08e88e13130955fa0" translate="yes" xml:space="preserve">
          <source>1-3) Computes the natural (base</source>
          <target state="translated">1-3)Calcula la base natural</target>
        </trans-unit>
        <trans-unit id="26586ed25b8bd539d8e17dd4231ade0054ffa519" translate="yes" xml:space="preserve">
          <source>1-3) Computes the natural (base &lt;code&gt;e&lt;/code&gt;) logarithm of &lt;code&gt;1+arg&lt;/code&gt;. This function is more precise than the expression &lt;code&gt;&lt;a href=&quot;log&quot;&gt;log&lt;/a&gt;(1+arg)&lt;/code&gt; if &lt;code&gt;arg&lt;/code&gt; is close to zero.</source>
          <target state="translated">1-3) Calcula el logaritmo natural (base &lt;code&gt;e&lt;/code&gt; ) de &lt;code&gt;1+arg&lt;/code&gt; . Esta funci&amp;oacute;n es m&amp;aacute;s precisa que la expresi&amp;oacute;n &lt;code&gt;&lt;a href=&quot;log&quot;&gt;log&lt;/a&gt;(1+arg)&lt;/code&gt; si &lt;code&gt;arg&lt;/code&gt; est&amp;aacute; cerca de cero.</target>
        </trans-unit>
        <trans-unit id="78bc85fc60cecfd077905bc98c8fc75c8b80e9fe" translate="yes" xml:space="preserve">
          <source>1-3) Computes the natural logarithm of the absolute value of the &lt;a href=&quot;https://en.wikipedia.org/wiki/Gamma_function&quot;&gt;gamma function&lt;/a&gt; of &lt;code&gt;arg&lt;/code&gt;.</source>
          <target state="translated">1-3) Calcula el logaritmo natural del valor absoluto de la &lt;a href=&quot;https://en.wikipedia.org/wiki/Gamma_function&quot;&gt;funci&amp;oacute;n gamma&lt;/a&gt; de &lt;code&gt;arg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e5f87e9d17da829e68c77738b3536c97f08431e1" translate="yes" xml:space="preserve">
          <source>1-3) Computes the nearest integer not greater in magnitude than &lt;code&gt;arg&lt;/code&gt;.</source>
          <target state="translated">1-3) Calcula el entero m&amp;aacute;s cercano, no mayor en magnitud que &lt;code&gt;arg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="592c69fdc8890478a9283f23c8d6cc4832e08a4d" translate="yes" xml:space="preserve">
          <source>1-3) Computes the nearest integer value to &lt;code&gt;arg&lt;/code&gt; (in floating-point format), rounding halfway cases away from zero, regardless of the current rounding mode.</source>
          <target state="translated">1-3) Calcula el valor entero m&amp;aacute;s cercano a &lt;code&gt;arg&lt;/code&gt; (en formato de punto flotante), redondeando hasta la mitad los casos desde cero, independientemente del modo de redondeo actual.</target>
        </trans-unit>
        <trans-unit id="b724fc6b26effea7849a37c77bd9f1fe241356f1" translate="yes" xml:space="preserve">
          <source>1-3) Computes the principal value of the arc cosine of &lt;code&gt;arg&lt;/code&gt;.</source>
          <target state="translated">1-3) Calcula el valor principal del arco coseno de &lt;code&gt;arg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd335a4b19869242d7cc1ccd4742edeb1d4ef287" translate="yes" xml:space="preserve">
          <source>1-3) Computes the principal value of the arc tangent of &lt;code&gt;arg&lt;/code&gt;.</source>
          <target state="translated">1-3) Calcula el valor principal del arco tangente de &lt;code&gt;arg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d87acf2ae3c76490381c676082b3142a86102f61" translate="yes" xml:space="preserve">
          <source>1-3) Computes the principal values of the arc sine of &lt;code&gt;arg&lt;/code&gt;.</source>
          <target state="translated">1-3) Calcula los valores principales del arco seno de &lt;code&gt;arg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="540ed8dff7dce27f5ba2b71c411a0a9f2e83888a" translate="yes" xml:space="preserve">
          <source>1-3) Computes the projection of &lt;code&gt;z&lt;/code&gt; on the Riemann sphere.</source>
          <target state="translated">1-3) Calcula la proyecci&amp;oacute;n de &lt;code&gt;z&lt;/code&gt; en la esfera de Riemann.</target>
        </trans-unit>
        <trans-unit id="234a4abe0e39e12e87ad70ddc22021c4aa7f7aa8" translate="yes" xml:space="preserve">
          <source>1-3) Computes the sine of &lt;code&gt;arg&lt;/code&gt; (measured in radians).</source>
          <target state="translated">1-3) Calcula el seno de &lt;code&gt;arg&lt;/code&gt; (medido en radianes).</target>
        </trans-unit>
        <trans-unit id="38ca1671920427cd5061c6d3d3e1596c6b200aee" translate="yes" xml:space="preserve">
          <source>1-3) Computes the smallest integer value not less than &lt;code&gt;arg&lt;/code&gt;.</source>
          <target state="translated">1-3) Calcula el valor entero m&amp;aacute;s peque&amp;ntilde;o no menos que &lt;code&gt;arg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="52fe3cd1edb0f6f4d94f1a5135012afcaf3f8eb9" translate="yes" xml:space="preserve">
          <source>1-3) Computes the square root of the sum of the squares of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, without undue overflow or underflow at intermediate stages of the computation.</source>
          <target state="translated">1-3) Calcula la ra&amp;iacute;z cuadrada de la suma de los cuadrados de &lt;code&gt;x&lt;/code&gt; e &lt;code&gt;y&lt;/code&gt; , sin desbordamiento o subflujo indebido en las etapas intermedias del c&amp;aacute;lculo.</target>
        </trans-unit>
        <trans-unit id="acf8ca598ce6912683ef9734a50ee2d61d8080d8" translate="yes" xml:space="preserve">
          <source>1-3) Computes the tangent of &lt;code&gt;arg&lt;/code&gt; (measured in radians).</source>
          <target state="translated">1-3) Calcula la tangente de &lt;code&gt;arg&lt;/code&gt; (medida en radianes).</target>
        </trans-unit>
        <trans-unit id="8d8a16fc976c2ce1f472177c04c6a89b2269086f" translate="yes" xml:space="preserve">
          <source>1-3) Computes the value of &lt;code&gt;base&lt;/code&gt; raised to the power &lt;code&gt;exponent&lt;/code&gt;.</source>
          <target state="translated">1-3) Calcula el valor de la &lt;code&gt;base&lt;/code&gt; elevada al &lt;code&gt;exponent&lt;/code&gt; e de potencia .</target>
        </trans-unit>
        <trans-unit id="3326fd3d52ccf4e6f3ae199343f9af675f7cc378" translate="yes" xml:space="preserve">
          <source>1-3) Decomposes given floating point value &lt;code&gt;arg&lt;/code&gt; into integral and fractional parts, each having the same type and sign as &lt;code&gt;arg&lt;/code&gt;. The integral part (in floating-point format) is stored in the object pointed to by &lt;code&gt;iptr&lt;/code&gt;.</source>
          <target state="translated">1-3) Descompone el valor de punto flotante &lt;code&gt;arg&lt;/code&gt; en partes integrales y fraccionarias, cada una con el mismo tipo y signo que &lt;code&gt;arg&lt;/code&gt; . La parte integral (en formato de punto flotante) se almacena en el objeto al que apunta &lt;code&gt;iptr&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c0545ff1914e5ab464e273d829249e18ec123846" translate="yes" xml:space="preserve">
          <source>1-3) Decomposes given floating point value &lt;code&gt;x&lt;/code&gt; into a normalized fraction and an integral power of two.</source>
          <target state="translated">1-3) Descompone el valor dado de coma flotante &lt;code&gt;x&lt;/code&gt; en una fracci&amp;oacute;n normalizada y una potencia integral de dos.</target>
        </trans-unit>
        <trans-unit id="582c6b5e653a5d4a4058e4cabe9c009bd17e9fb4" translate="yes" xml:space="preserve">
          <source>1-3) Extracts the value of the unbiased exponent from the floating-point argument &lt;code&gt;arg&lt;/code&gt;, and returns it as a signed integer value.</source>
          <target state="translated">1-3) Extrae el valor del exponente insesgado del argumento de punto flotante &lt;code&gt;arg&lt;/code&gt; , y lo devuelve como un valor entero con signo.</target>
        </trans-unit>
        <trans-unit id="9e3866612d444afc9e9ee7f5249625e36cd8bec3" translate="yes" xml:space="preserve">
          <source>1-3) Extracts the value of the unbiased radix-independent exponent from the floating-point argument &lt;code&gt;arg&lt;/code&gt;, and returns it as a floating-point value.</source>
          <target state="translated">1-3) Extrae el valor del exponente independiente de radix independiente del argumento de punto flotante &lt;code&gt;arg&lt;/code&gt; , y lo devuelve como un valor de punto flotante.</target>
        </trans-unit>
        <trans-unit id="11bff0857ca7525ca5d6d04cceca75ebbb2b5a41" translate="yes" xml:space="preserve">
          <source>1-3) First, converts both arguments to the type of the function, then returns the next representable value of &lt;code&gt;from&lt;/code&gt; in the direction of &lt;code&gt;to&lt;/code&gt;. If &lt;code&gt;from&lt;/code&gt; equals to &lt;code&gt;to&lt;/code&gt;, &lt;code&gt;to&lt;/code&gt; is returned.</source>
          <target state="translated">1-3) Primero, convierte ambos argumentos al tipo de la funci&amp;oacute;n, luego devuelve el siguiente valor representable de &lt;code&gt;from&lt;/code&gt; en la direcci&amp;oacute;n de &lt;code&gt;to&lt;/code&gt; . Si &lt;code&gt;from&lt;/code&gt; igual a igual a &lt;code&gt;to&lt;/code&gt; , &lt;code&gt;to&lt;/code&gt; se devuelve.</target>
        </trans-unit>
        <trans-unit id="3de14fd604ef8c418f13c96f962a1934c50a0a99" translate="yes" xml:space="preserve">
          <source>1-3) Multiplies a floating point value &lt;code&gt;arg&lt;/code&gt; by the number 2 raised to the &lt;code&gt;exp&lt;/code&gt; power.</source>
          <target state="translated">1-3) Multiplica un valor de coma flotante &lt;code&gt;arg&lt;/code&gt; por el n&amp;uacute;mero 2 elevado a la potencia de &lt;code&gt;exp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b12ba0f21ec633604f7832d9e78142004b2a572f" translate="yes" xml:space="preserve">
          <source>1-3) Number of receiving arguments successfully assigned (which may be zero in case a matching failure occurred before the first receiving argument was assigned), or &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;EOF&lt;/a&gt;&lt;/code&gt; if input failure occurs before the first receiving argument was assigned.</source>
          <target state="translated">1-3) N&amp;uacute;mero de argumentos de recepci&amp;oacute;n asignados con &amp;eacute;xito (que puede ser cero en caso de que ocurra un error de coincidencia antes de que se haya asignado el primer argumento de recepci&amp;oacute;n), o &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;EOF&lt;/a&gt;&lt;/code&gt; si se produce un error de entrada antes de que se haya asignado el primer argumento de recepci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="bcec5083366c8d916b1a40bb3f845c6c8f65772c" translate="yes" xml:space="preserve">
          <source>1-3) Number of receiving arguments successfully assigned, or &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;EOF&lt;/a&gt;&lt;/code&gt; if read failure occurs before the first receiving argument was assigned.</source>
          <target state="translated">1-3) N&amp;uacute;mero de argumentos de recepci&amp;oacute;n asignados correctamente, o &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;EOF&lt;/a&gt;&lt;/code&gt; si se produce un error de lectura antes de que se asignara el primer argumento de recepci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="085575d166af0ee114a59aad1964f0d2c9534f64" translate="yes" xml:space="preserve">
          <source>1-3) Returns the imaginary part of &lt;code&gt;z&lt;/code&gt;.</source>
          <target state="translated">1-3) Devuelve la parte imaginaria de &lt;code&gt;z&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="30511373a100b70eedd0984e5b99b132d27cf88b" translate="yes" xml:space="preserve">
          <source>1-3) Returns the larger of two floating point arguments, treating NaNs as missing data (between a NaN and a numeric value, the numeric value is chosen).</source>
          <target state="translated">1-3)Devuelve el mayor de dos argumentos de punto flotante,tratando los NaNs como datos que faltan (entre un NaN y un valor numérico,se elige el valor numérico).</target>
        </trans-unit>
        <trans-unit id="aea61ec34824bf54b309b57e957c3428d8a0fa6e" translate="yes" xml:space="preserve">
          <source>1-3) Returns the positive difference between &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, that is, if &lt;code&gt;x&amp;gt;y&lt;/code&gt;, returns &lt;code&gt;x-y&lt;/code&gt;, otherwise (if &lt;code&gt;x&amp;le;y&lt;/code&gt;), returns +0.</source>
          <target state="translated">1-3) Devuelve la diferencia positiva entre &lt;code&gt;x&lt;/code&gt; e &lt;code&gt;y&lt;/code&gt; , es decir, si &lt;code&gt;x&amp;gt;y&lt;/code&gt; , devuelve &lt;code&gt;x-y&lt;/code&gt; , de lo contrario (si &lt;code&gt;x&amp;le;y&lt;/code&gt; ), devuelve +0.</target>
        </trans-unit>
        <trans-unit id="dd0804951b688b9038680ca365aba91fb289b8d8" translate="yes" xml:space="preserve">
          <source>1-3) Returns the real part of &lt;code&gt;z&lt;/code&gt;.</source>
          <target state="translated">1-3) Devuelve la parte real de &lt;code&gt;z&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="04a0ed18e69adafddaac5f84f47894523c5ceaf1" translate="yes" xml:space="preserve">
          <source>1-3) Returns the smaller of two floating point arguments, treating NaNs as missing data (between a NaN and a numeric value, the numeric value is chosen).</source>
          <target state="translated">1-3)Devuelve el menor de dos argumentos de punto flotante,tratando los NaNs como datos que faltan (entre un NaN y un valor numérico,se elige el valor numérico).</target>
        </trans-unit>
        <trans-unit id="abbd4d43d5a4a4562512e8a550b98d9521bfa824" translate="yes" xml:space="preserve">
          <source>1-3) Rounds the floating-point argument &lt;code&gt;arg&lt;/code&gt; to an integer value in floating-point format, using the &lt;a href=&quot;../fenv/fe_round&quot;&gt;current rounding mode&lt;/a&gt;.</source>
          <target state="translated">1-3) Redondea el argumento &lt;code&gt;arg&lt;/code&gt; de punto flotante a un valor entero en formato de punto flotante, utilizando el &lt;a href=&quot;../fenv/fe_round&quot;&gt;modo de redondeo actual&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d5eb4d19e2ca8f567034661421c8fea195af14d1" translate="yes" xml:space="preserve">
          <source>1-3) Rounds the floating-point argument &lt;code&gt;arg&lt;/code&gt; to an integer value in floating-point format, using the current rounding mode.</source>
          <target state="translated">1-3) Redondea el argumento &lt;code&gt;arg&lt;/code&gt; de punto flotante a un valor entero en formato de punto flotante, utilizando el modo de redondeo actual.</target>
        </trans-unit>
        <trans-unit id="2d6f62f499427c6405dbc2607cdf66cf2360b35d" translate="yes" xml:space="preserve">
          <source>1-3) The number of characters written if successful or negative value if an error occurred.</source>
          <target state="translated">1-3)El número de caracteres escritos si se ha tenido éxito o el valor negativo si se ha producido un error.</target>
        </trans-unit>
        <trans-unit id="772c27656100ecc244e49c0a4400d3b22af70b85" translate="yes" xml:space="preserve">
          <source>1-3) The number of wide characters written if successful or negative value if an error occurred.</source>
          <target state="translated">1-3)El número de caracteres anchos escritos si se ha tenido éxito o el valor negativo si se ha producido un error.</target>
        </trans-unit>
        <trans-unit id="678e921e8a67c0205096966f4f3946cfea18d860" translate="yes" xml:space="preserve">
          <source>1-3,5-7) Multiplies a floating point value &lt;code&gt;arg&lt;/code&gt; by &lt;code&gt;&lt;a href=&quot;../../types/limits&quot;&gt;FLT_RADIX&lt;/a&gt;&lt;/code&gt; raised to power &lt;code&gt;exp&lt;/code&gt;.</source>
          <target state="translated">1-3,5-7) Multiplica un valor de coma flotante &lt;code&gt;arg&lt;/code&gt; por &lt;code&gt;&lt;a href=&quot;../../types/limits&quot;&gt;FLT_RADIX&lt;/a&gt;&lt;/code&gt; elevado a potencia &lt;code&gt;exp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8dd6cc8534c457c984670f2dc8ec666ffd306890" translate="yes" xml:space="preserve">
          <source>1.6 DEFINITIONS OF TERMS</source>
          <target state="translated">1.6 DEFINICIONES DE TÉRMINOS</target>
        </trans-unit>
        <trans-unit id="6a3196d4803ac7d8544b7deb8f961dda2634d8cf" translate="yes" xml:space="preserve">
          <source>1.6 Definitions of terms</source>
          <target state="translated">1.6 Definiciones de términos</target>
        </trans-unit>
        <trans-unit id="55fe8c9dad930630cf239af507c3ba46a832c1c4" translate="yes" xml:space="preserve">
          <source>1.7 Compliance</source>
          <target state="translated">1.7 Cumplimiento</target>
        </trans-unit>
        <trans-unit id="b1d5781111d84f7b3fe45a0852e59758cd7a87e5" translate="yes" xml:space="preserve">
          <source>10</source>
          <target state="translated">10</target>
        </trans-unit>
        <trans-unit id="761c7d9564da680efcd56d0447d489c0f65429ab" translate="yes" xml:space="preserve">
          <source>10&amp;ndash;13</source>
          <target state="translated">10&amp;ndash;13</target>
        </trans-unit>
        <trans-unit id="d59099024c16138c9a6bd83c7561d5c5ddabb8f7" translate="yes" xml:space="preserve">
          <source>10(arg) or lg(arg)) is returned.</source>
          <target state="translated">10(arg)o lg(arg))se devuelve.</target>
        </trans-unit>
        <trans-unit id="14c2aefa1a30429da9ef973aa865f36df58777f1" translate="yes" xml:space="preserve">
          <source>1024 macro identifiers simultaneously defined in one preprocessing translation unit</source>
          <target state="translated">1024 identificadores de macros definidos simultáneamente en una unidad de traducción de preprocesamiento</target>
        </trans-unit>
        <trans-unit id="358e3e257d91345963ad9b9cf5abf2fa4957d9b9" translate="yes" xml:space="preserve">
          <source>103&amp;ndash;122</source>
          <target state="translated">103&amp;ndash;122</target>
        </trans-unit>
        <trans-unit id="17ba0791499db908433b80f37c5fbc89b870084b" translate="yes" xml:space="preserve">
          <source>11</source>
          <target state="translated">11</target>
        </trans-unit>
        <trans-unit id="7b52009b64fd0a2a49e6d8a939753077792b0554" translate="yes" xml:space="preserve">
          <source>12</source>
          <target state="translated">12</target>
        </trans-unit>
        <trans-unit id="d57a1b91b05af98b51640f6b9c68c46e24ce46aa" translate="yes" xml:space="preserve">
          <source>123&amp;ndash;126</source>
          <target state="translated">123&amp;ndash;126</target>
        </trans-unit>
        <trans-unit id="008451a05e1e7aa32c75119df950d405265e0904" translate="yes" xml:space="preserve">
          <source>127</source>
          <target state="translated">127</target>
        </trans-unit>
        <trans-unit id="abf2223d2057fbddb0a77ca7deae766518c549b4" translate="yes" xml:space="preserve">
          <source>127 identifiers with block scope declared in one block</source>
          <target state="translated">127 identificadores con alcance de bloque declarados en un bloque</target>
        </trans-unit>
        <trans-unit id="bd307a3ec329e10a2cff8fb87480823da114f8f4" translate="yes" xml:space="preserve">
          <source>13</source>
          <target state="translated">13</target>
        </trans-unit>
        <trans-unit id="2b76195c910d81ae1ae417ba1c3fe23e28cfc96f" translate="yes" xml:space="preserve">
          <source>14&amp;ndash;31</source>
          <target state="translated">14&amp;ndash;31</target>
        </trans-unit>
        <trans-unit id="1f951f0262f343dfbac4797f73cfa1288934f1a8" translate="yes" xml:space="preserve">
          <source>14&lt;sup id=&quot;cite_ref-4&quot;&gt;&lt;a href=&quot;operator_precedence#cite_note-4&quot;&gt;[note 4]&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">14 &lt;sup id=&quot;cite_ref-4&quot;&gt;&lt;a href=&quot;operator_precedence#cite_note-4&quot;&gt;[nota 4]&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="f1abd670358e036c31296e66b3b66c382ac00812" translate="yes" xml:space="preserve">
          <source>15</source>
          <target state="translated">15</target>
        </trans-unit>
        <trans-unit id="1574bddb75c78a6fd2251d61e2993b5146201319" translate="yes" xml:space="preserve">
          <source>16</source>
          <target state="translated">16</target>
        </trans-unit>
        <trans-unit id="2dfe9ee4a3855461ae1cacf808d8866abcd2538a" translate="yes" xml:space="preserve">
          <source>16-bit wide character type</source>
          <target state="translated">Tipo de caracteres de 16 bits de ancho</target>
        </trans-unit>
        <trans-unit id="da4b9237bacccdf19c0760cab7aec4a8359010b0" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>
        </trans-unit>
        <trans-unit id="22db22f450e69ca5b0810cc1a70e1fc7de838404" translate="yes" xml:space="preserve">
          <source>2(arg) or lb(arg)) is returned.</source>
          <target state="translated">2(arg)o lb(arg))se devuelve.</target>
        </trans-unit>
        <trans-unit id="4c4c353359e293b69b3f655b6bbdd1f9ae0de720" translate="yes" xml:space="preserve">
          <source>2) 16-bit wide character constant, e.g. &lt;code&gt;u'貓'&lt;/code&gt;, but not &lt;code&gt;u'🍌'&lt;/code&gt; (&lt;code&gt;u'\U0001f34c'&lt;/code&gt;). Such constant has type &lt;code&gt;char16_t&lt;/code&gt; and a value equal to the value of c-char in the 16-bit encoding produced by &lt;code&gt;&lt;a href=&quot;../string/multibyte/mbrtoc16&quot;&gt;mbrtoc16&lt;/a&gt;&lt;/code&gt; (normally UTF-16). If c-char is not representable or maps to more than one 16-bit character, the behavior is implementation-defined.</source>
          <target state="translated">2) Constante de caracteres anchos de 16 bits, por ejemplo, &lt;code&gt;u'貓'&lt;/code&gt; , pero no &lt;code&gt;u'🍌'&lt;/code&gt; ( &lt;code&gt;u'\U0001f34c'&lt;/code&gt; ). Dicha constante tiene el tipo &lt;code&gt;char16_t&lt;/code&gt; y un valor igual al valor de c-char en la codificaci&amp;oacute;n de 16 bits producida por &lt;code&gt;&lt;a href=&quot;../string/multibyte/mbrtoc16&quot;&gt;mbrtoc16&lt;/a&gt;&lt;/code&gt; (normalmente UTF-16). Si c-char no es representable o se asigna a m&amp;aacute;s de un car&amp;aacute;cter de 16 bits, el comportamiento est&amp;aacute; definido por la implementaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="f70da394bcbd77532392273d7c1d439bf45f54dc" translate="yes" xml:space="preserve">
          <source>2) All external identifiers that begin with an underscore.</source>
          <target state="translated">2)Todos los identificadores externos que comienzan con un guión bajo.</target>
        </trans-unit>
        <trans-unit id="7f44984da5db1fd60cd2103f4527f0231f2ca221" translate="yes" xml:space="preserve">
          <source>2) Allows</source>
          <target state="translated">2)Permite</target>
        </trans-unit>
        <trans-unit id="b3173e9a7b43519646112843dc09948bc06417bb" translate="yes" xml:space="preserve">
          <source>2) Also changes the current preprocessor file name to filename. Occurrences of the macro &lt;code&gt;__FILE__&lt;/code&gt; beyond this point will produce filename.</source>
          <target state="translated">2) Tambi&amp;eacute;n cambia el nombre del archivo del preprocesador actual a nombre de archivo. Las ocurrencias de la macro &lt;code&gt;__FILE__&lt;/code&gt; m&amp;aacute;s all&amp;aacute; de este punto producir&amp;aacute;n el nombre del archivo.</target>
        </trans-unit>
        <trans-unit id="083501d5f7cc6d6983a2c593fdbddfdc67ca236c" translate="yes" xml:space="preserve">
          <source>2) Attempts to copy the full contents of the floating-point exception flags that are listed in &lt;code&gt;excepts&lt;/code&gt; from &lt;code&gt;flagp&lt;/code&gt; into the floating-point environment. Does not raise any exceptions, only modifies the flags.</source>
          <target state="translated">2) Intenta copiar el contenido completo de los &lt;code&gt;flagp&lt;/code&gt; excepci&amp;oacute;n de punto flotante que se enumeran en las &lt;code&gt;excepts&lt;/code&gt; de flagp en el entorno de punto flotante. No genera ninguna excepci&amp;oacute;n, solo modifica las banderas.</target>
        </trans-unit>
        <trans-unit id="0a19fca90a0f81d74089d60ea91bdf0afa94f79d" translate="yes" xml:space="preserve">
          <source>2) Attempts to establish the floating-point environment from the object pointed to by &lt;code&gt;envp&lt;/code&gt;. The value of that object must be previously obtained by a call to &lt;code&gt;&lt;a href=&quot;feholdexcept&quot;&gt;feholdexcept&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;fegetenv&lt;/code&gt; or be a floating-point macro constant. If any of the floating-point status flags are set in &lt;code&gt;envp&lt;/code&gt;, they become set in the environment (and are then testable with &lt;code&gt;&lt;a href=&quot;fetestexcept&quot;&gt;fetestexcept&lt;/a&gt;&lt;/code&gt;), but the corresponding floating-point exceptions are not raised (execution continues uninterrupted).</source>
          <target state="translated">2) Intenta establecer el entorno de punto flotante a partir del objeto al que apunta &lt;code&gt;envp&lt;/code&gt; . El valor de ese objeto debe obtenerse previamente mediante una llamada a &lt;code&gt;&lt;a href=&quot;feholdexcept&quot;&gt;feholdexcept&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;fegetenv&lt;/code&gt; o ser una constante de macro de punto flotante. Si alguno de los indicadores de estado de punto flotante se establece en &lt;code&gt;envp&lt;/code&gt; , se establece en el entorno (y luego se puede comprobar con &lt;code&gt;&lt;a href=&quot;fetestexcept&quot;&gt;fetestexcept&lt;/a&gt;&lt;/code&gt; ), pero las excepciones de punto flotante correspondientes no se activan (la ejecuci&amp;oacute;n contin&amp;uacute;a sin interrupciones).</target>
        </trans-unit>
        <trans-unit id="dc5b38c01f0d2e9890fdc3240aa88a05f30b5277" translate="yes" xml:space="preserve">
          <source>2) Buffering state: unbuffered, line-buffered, fully buffered.</source>
          <target state="translated">2)Estado de amortiguación:sin amortiguación,amortiguación de línea,amortiguación completa.</target>
        </trans-unit>
        <trans-unit id="70a6e6ec90420e7617673a3ac63c6be00fe3b14d" translate="yes" xml:space="preserve">
          <source>2) Case label in a &lt;a href=&quot;switch&quot;&gt;switch&lt;/a&gt; statement.</source>
          <target state="translated">2) Etiqueta del caso en una declaraci&amp;oacute;n de &lt;a href=&quot;switch&quot;&gt;cambio&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="446b2488707cc7ce466c1e9b5b324d510325b6ab" translate="yes" xml:space="preserve">
          <source>2) Complete object type capable of holding a flag used by &lt;code&gt;call_once&lt;/code&gt;</source>
          <target state="translated">2) Tipo de objeto completo capaz de sostener una bandera utilizada por &lt;code&gt;call_once&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4ffcf24e33caf6947e48d30d4201e7f2f800017e" translate="yes" xml:space="preserve">
          <source>2) Each comment is replaced by one space character</source>
          <target state="translated">2)Cada comentario es reemplazado por un espacio.</target>
        </trans-unit>
        <trans-unit id="bef04165f115d32e32dc4b99b87d1f943101dfc4" translate="yes" xml:space="preserve">
          <source>2) Each file introduced with the &lt;a href=&quot;../preprocessor/include&quot;&gt;#include&lt;/a&gt; directive goes through phases 1 through 4, recursively.</source>
          <target state="translated">2) Cada archivo introducido con la directiva &lt;a href=&quot;../preprocessor/include&quot;&gt;#include&lt;/a&gt; pasa por las fases 1 a 4, de forma recursiva.</target>
        </trans-unit>
        <trans-unit id="e00104b2d04dbc49da52f100fe09e59879a7e788" translate="yes" xml:space="preserve">
          <source>2) Expands to a value suitable for use as the &lt;code&gt;base&lt;/code&gt; argument of &lt;code&gt;timespec_get&lt;/code&gt;</source>
          <target state="translated">2) Se expande a un valor adecuado para su uso como argumento &lt;code&gt;base&lt;/code&gt; de &lt;code&gt;timespec_get&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2bb1605234570f393885f9095b3262520a63ff6e" translate="yes" xml:space="preserve">
          <source>2) If a non-empty source file does not end with a newline character after this step (whether it had no newline originally, or it ended with a backslash), the behavior is undefined.</source>
          <target state="translated">2)Si un archivo fuente no vacío no termina con un carácter de nueva línea después de este paso (ya sea que no tuviera una nueva línea originalmente,o que terminara con una barra invertida),el comportamiento es indefinido.</target>
        </trans-unit>
        <trans-unit id="671eacb6c5d2dd8a71c7f3d193d6d2c821222ba3" translate="yes" xml:space="preserve">
          <source>2) If a side effect on a scalar object is unsequenced relative to a value computation using the value of the same scalar object, the behavior is undefined.</source>
          <target state="translated">2)Si un efecto secundario en un objeto escalar no está secuenciado en relación con un cálculo de valor usando el valor del mismo objeto escalar,el comportamiento es indefinido.</target>
        </trans-unit>
        <trans-unit id="9991b91e1b202d1bc33494aacea89cdd7f63d384" translate="yes" xml:space="preserve">
          <source>2) If successful, returns zero and a pointer to the new file stream is written to &lt;code&gt;*streamptr&lt;/code&gt;. On error, returns a non-zero error code and writes the null pointer to &lt;code&gt;*streamptr&lt;/code&gt; (unless &lt;code&gt;streamptr&lt;/code&gt; is a null pointer itself).</source>
          <target state="translated">2) Si tiene &amp;eacute;xito, devuelve cero y se escribe un puntero a la nueva secuencia de archivos en &lt;code&gt;*streamptr&lt;/code&gt; . En caso de error, devuelve un c&amp;oacute;digo de error distinto de cero y escribe el puntero nulo en &lt;code&gt;*streamptr&lt;/code&gt; (a menos que &lt;code&gt;streamptr&lt;/code&gt; sea ​​un puntero nulo).</target>
        </trans-unit>
        <trans-unit id="e18efc1f713f7ceda7e0acfb4464d1dc211a15a4" translate="yes" xml:space="preserve">
          <source>2) If the result of condition compares unequal to zero, executes expression-true, otherwise executes expression-false</source>
          <target state="translated">2)Si el resultado de la condición se compara desigual con cero,ejecuta expresión-verdadera,de lo contrario ejecuta expresión-falsa</target>
        </trans-unit>
        <trans-unit id="2434d5537665839e1e637279076d6e391b0851ce" translate="yes" xml:space="preserve">
          <source>2) If the return type of the main function is &lt;a href=&quot;compatible_type#Compatible_types&quot;&gt;compatible&lt;/a&gt; with &lt;code&gt;int&lt;/code&gt;, then the return from the initial call to main (but not the return from any subsequent, recursive, call) is equivalent to executing the &lt;code&gt;&lt;a href=&quot;../program/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; function, with the value that the main function is returning passed as the argument (which then calls the functions registered with &lt;code&gt;&lt;a href=&quot;../program/atexit&quot;&gt;atexit&lt;/a&gt;&lt;/code&gt;, flushes and closes all streams, and deletes the files created with &lt;code&gt;&lt;a href=&quot;../io/tmpfile&quot;&gt;tmpfile&lt;/a&gt;&lt;/code&gt;, and returns control to the execution environment).</source>
          <target state="translated">2) Si el tipo de retorno de la funci&amp;oacute;n principal es &lt;a href=&quot;compatible_type#Compatible_types&quot;&gt;compatible&lt;/a&gt; con &lt;code&gt;int&lt;/code&gt; , entonces el retorno de la llamada inicial a main (pero no el retorno de cualquier llamada subsiguiente, recursiva) es equivalente a ejecutar la funci&amp;oacute;n de &lt;code&gt;&lt;a href=&quot;../program/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; , con el valor que el La funci&amp;oacute;n principal regresa como argumento (que luego llama a las funciones registradas con &lt;code&gt;&lt;a href=&quot;../program/atexit&quot;&gt;atexit&lt;/a&gt;&lt;/code&gt; , vac&amp;iacute;a y cierra todas las secuencias, elimina los archivos creados con &lt;code&gt;&lt;a href=&quot;../io/tmpfile&quot;&gt;tmpfile&lt;/a&gt;&lt;/code&gt; y devuelve el control al entorno de ejecuci&amp;oacute;n).</target>
        </trans-unit>
        <trans-unit id="591949fd8b4069ee4a35d387975513f7fdff49a5" translate="yes" xml:space="preserve">
          <source>2) If used on a line of its own, as in &lt;code&gt;struct&lt;/code&gt;name&lt;code&gt;;&lt;/code&gt;,</source>
          <target state="translated">2) Si se usa en una l&amp;iacute;nea propia, como en el nombre de &lt;code&gt;struct&lt;/code&gt; &lt;code&gt;;&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="c83ffd5a998b69365207954c7598a5459bff3467" translate="yes" xml:space="preserve">
          <source>2) Octal integer constant (base 8, the first digit is the most significant).</source>
          <target state="translated">2)Constante entera octal (base 8,el primer dígito es el más significativo).</target>
        </trans-unit>
        <trans-unit id="14e556c2bbc89528d34020b0e1e9d25e48e71a8f" translate="yes" xml:space="preserve">
          <source>2) Often known as &quot;C++-style&quot; or &quot;single-line&quot; comments.</source>
          <target state="translated">2)A menudo conocidos como comentarios de &quot;estilo C++&quot; o de &quot;una sola línea&quot;.</target>
        </trans-unit>
        <trans-unit id="e116306f4d4c3b4ff13b695d397cbcd60b0538d7" translate="yes" xml:space="preserve">
          <source>2) Old-style (K&amp;amp;R) function declaration. This declaration does not behave as a prototype and any future &lt;a href=&quot;operator_other#Function_call&quot;&gt;function call expressions&lt;/a&gt; will perform default argument promotions and will invoke undefined behavior if the number of arguments doesn't match the number of parameters.</source>
          <target state="translated">2) Declaraci&amp;oacute;n de funci&amp;oacute;n de estilo antiguo (K&amp;amp;R). Esta declaraci&amp;oacute;n no se comporta como un prototipo y cualquier &lt;a href=&quot;operator_other#Function_call&quot;&gt;expresi&amp;oacute;n de llamada a funci&amp;oacute;n&lt;/a&gt; futura realizar&amp;aacute; promociones de argumento predeterminadas e invocar&amp;aacute; un comportamiento indefinido si el n&amp;uacute;mero de argumentos no coincide con el n&amp;uacute;mero de par&amp;aacute;metros.</target>
        </trans-unit>
        <trans-unit id="44c9d7e381e39cd9f77710a9c451d0fd24bc4bb5" translate="yes" xml:space="preserve">
          <source>2) Old-style (K&amp;amp;R) function definition. This definition does not behave as a prototype and any future &lt;a href=&quot;operator_other#Function_call&quot;&gt;function call expressions&lt;/a&gt; will perform default argument promotions.</source>
          <target state="translated">2) Definici&amp;oacute;n de funci&amp;oacute;n de estilo antiguo (K&amp;amp;R). Esta definici&amp;oacute;n no se comporta como un prototipo y las futuras &lt;a href=&quot;operator_other#Function_call&quot;&gt;expresiones de llamada de funci&amp;oacute;n&lt;/a&gt; realizar&amp;aacute;n promociones de argumento predeterminadas.</target>
        </trans-unit>
        <trans-unit id="4db7c3f8481b8975142752ee194ebec2642413f6" translate="yes" xml:space="preserve">
          <source>2) Otherwise, if one operand is &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;double &lt;a href=&quot;../numeric/complex/complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;double &lt;a href=&quot;../numeric/complex/imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt;, the other operand is implicitly converted as follows:</source>
          <target state="translated">2) De lo contrario, si un operando es &lt;code&gt;double&lt;/code&gt; , &lt;code&gt;double &lt;a href=&quot;../numeric/complex/complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;double &lt;a href=&quot;../numeric/complex/imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt; , el otro operando se convierte impl&amp;iacute;citamente de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="50e3bb676a81f74576a8c24566dd3ab974745007" translate="yes" xml:space="preserve">
          <source>2) Reads characters from &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; until a newline is found or end-of-file occurs. Writes only at most &lt;code&gt;n-1&lt;/code&gt; characters into the array pointed to by &lt;code&gt;str&lt;/code&gt;, and always writes the terminating null character (unless str is a null pointer). The newline character, if found, is discarded and does not count toward the number of characters written to the buffer.</source>
          <target state="translated">2) Lee los caracteres de &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; hasta que se encuentra una nueva l&amp;iacute;nea o se produce el final del archivo. Escribe solo como m&amp;aacute;ximo &lt;code&gt;n-1&lt;/code&gt; caracteres en la matriz a la que apunta &lt;code&gt;str&lt;/code&gt; , y siempre escribe el car&amp;aacute;cter nulo final (a menos que str sea un puntero nulo). El car&amp;aacute;cter de nueva l&amp;iacute;nea, si se encuentra, se descarta y no cuenta para el n&amp;uacute;mero de caracteres escritos en el b&amp;uacute;fer.</target>
        </trans-unit>
        <trans-unit id="ba089e56c0fe260a3393a9b9d292f9ecbfc2dd36" translate="yes" xml:space="preserve">
          <source>2) Reads the data from file stream &lt;code&gt;stream&lt;/code&gt;</source>
          <target state="translated">2) Lee los datos de la secuencia de la &lt;code&gt;stream&lt;/code&gt; del archivo</target>
        </trans-unit>
        <trans-unit id="4d1bc2ff6d34ef1f0cddd654c6245002d15bfb4c" translate="yes" xml:space="preserve">
          <source>2) Reads the data from file stream &lt;code&gt;stream&lt;/code&gt;.</source>
          <target state="translated">2) Lee los datos de la secuencia del &lt;code&gt;stream&lt;/code&gt; de archivos .</target>
        </trans-unit>
        <trans-unit id="dd9f271c706cf05a945ce84f304cab17f33c436b" translate="yes" xml:space="preserve">
          <source>2) Removes the encoding prefix (if any), the outer quotes, and leading/trailing whitespace from string-literal, replaces each &lt;code&gt;\&quot;&lt;/code&gt; with &lt;code&gt;&quot;&lt;/code&gt; and each &lt;code&gt;\\&lt;/code&gt; with &lt;code&gt;\&lt;/code&gt;, then tokenizes the result (as in &lt;a href=&quot;../language/translation_phases&quot;&gt;translation stage 3&lt;/a&gt;), and then uses the result as if the input to &lt;code&gt;#pragma&lt;/code&gt; in (1).</source>
          <target state="translated">2) Elimina el prefijo de codificaci&amp;oacute;n (si lo hay), las comillas externas y el espacio en blanco inicial / final de literal de cadena, reemplaza cada &lt;code&gt;\&quot;&lt;/code&gt; con &lt;code&gt;&quot;&lt;/code&gt; y cada &lt;code&gt;\\&lt;/code&gt; con &lt;code&gt;\&lt;/code&gt; , luego tokeniza el resultado (como en la &lt;a href=&quot;../language/translation_phases&quot;&gt;etapa de traducci&amp;oacute;n 3&lt;/a&gt; ), y luego usa el resultado como si la entrada a &lt;code&gt;#pragma&lt;/code&gt; en (1).</target>
        </trans-unit>
        <trans-unit id="d7f98971954fa5439a7d5ca2b49c4b1dd4aad016" translate="yes" xml:space="preserve">
          <source>2) Returns the size, in bytes, of the object representation of the type of expression. No implicit conversions are applied to expression.</source>
          <target state="translated">2)Devuelve el tamaño,en bytes,de la representación del objeto del tipo de expresión.No se aplican conversiones implícitas a la expresión.</target>
        </trans-unit>
        <trans-unit id="3c4c5b3f78da8fb3e6f9ea941221ca29db87dd90" translate="yes" xml:space="preserve">
          <source>2) Returns the value of the &lt;a href=&quot;fe_round&quot;&gt;floating-point rounding macro&lt;/a&gt; that corresponds to the current rounding direction.</source>
          <target state="translated">2) Devuelve el valor de la &lt;a href=&quot;fe_round&quot;&gt;macro de redondeo de punto flotante&lt;/a&gt; que corresponde a la direcci&amp;oacute;n de redondeo actual.</target>
        </trans-unit>
        <trans-unit id="3edd1107b68ee88c5c26098f2177c3f8c4535128" translate="yes" xml:space="preserve">
          <source>2) Returns zero and writes the file name to &lt;code&gt;filename_s&lt;/code&gt; on success. On error, returns non-zero and writes the null character to &lt;code&gt;filename_s[0]&lt;/code&gt; (only if &lt;code&gt;filename_s&lt;/code&gt; is not null and &lt;code&gt;maxsize&lt;/code&gt; is not zero and is not greater than &lt;code&gt;RSIZE_MAX&lt;/code&gt;).</source>
          <target state="translated">2) Devuelve cero y escribe el nombre del &lt;code&gt;filename_s&lt;/code&gt; en filename_s en caso de &amp;eacute;xito. En caso de error, devuelve un valor distinto de cero y escribe el car&amp;aacute;cter nulo en &lt;code&gt;filename_s[0]&lt;/code&gt; (solo si &lt;code&gt;filename_s&lt;/code&gt; no es nulo y &lt;code&gt;maxsize&lt;/code&gt; no es cero y no es mayor que &lt;code&gt;RSIZE_MAX&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="6bd2623ce7b54ff7d6e16f87f58330cc2c44a526" translate="yes" xml:space="preserve">
          <source>2) Returns zero on success (in which case the number of bytes excluding terminating zero that were, or would be written to &lt;code&gt;dst&lt;/code&gt;, is stored in &lt;code&gt;*retval&lt;/code&gt;), non-zero on error. In case of a runtime constraint violation, stores &lt;code&gt;(&lt;a href=&quot;../../types/size_t&quot;&gt;size_t&lt;/a&gt;)-1&lt;/code&gt; in &lt;code&gt;*retval&lt;/code&gt; (unless &lt;code&gt;retval&lt;/code&gt; is null) and sets &lt;code&gt;dst[0]&lt;/code&gt; to &lt;code&gt;'\0'&lt;/code&gt; (unless &lt;code&gt;dst&lt;/code&gt; is null or &lt;code&gt;dstmax&lt;/code&gt; is zero or greater than &lt;code&gt;RSIZE_MAX&lt;/code&gt;)</source>
          <target state="translated">2) Devuelve cero en caso de &amp;eacute;xito (en cuyo caso, el n&amp;uacute;mero de bytes excluyendo el cero final que fueron, o se escribir&amp;iacute;an en &lt;code&gt;dst&lt;/code&gt; , se almacena en &lt;code&gt;*retval&lt;/code&gt; ), no cero en caso de error. En caso de una violaci&amp;oacute;n de restricci&amp;oacute;n de tiempo de ejecuci&amp;oacute;n, almacena &lt;code&gt;(&lt;a href=&quot;../../types/size_t&quot;&gt;size_t&lt;/a&gt;)-1&lt;/code&gt; en &lt;code&gt;*retval&lt;/code&gt; (a menos que &lt;code&gt;retval&lt;/code&gt; sea ​​nulo) y establezca &lt;code&gt;dst[0]&lt;/code&gt; en &lt;code&gt;'\0'&lt;/code&gt; (a menos que &lt;code&gt;dst&lt;/code&gt; sea ​​nulo o &lt;code&gt;dstmax&lt;/code&gt; sea ​​cero o mayor que &lt;code&gt;RSIZE_MAX&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="50c39314a085c823d92699a0d70cce3a7fa99684" translate="yes" xml:space="preserve">
          <source>2) Returns zero on success and non-zero on failure, in which case, &lt;code&gt;s[0]&lt;/code&gt; is set to &lt;code&gt;'\0'&lt;/code&gt; (unless &lt;code&gt;s&lt;/code&gt; is null or &lt;code&gt;ssz&lt;/code&gt; is zero or greater than &lt;code&gt;RSIZE_MAX&lt;/code&gt;) and &lt;code&gt;*retval&lt;/code&gt; is set to &lt;code&gt;(&lt;a href=&quot;../../types/size_t&quot;&gt;size_t&lt;/a&gt;)-1&lt;/code&gt; (unless &lt;code&gt;retval&lt;/code&gt; is null)</source>
          <target state="translated">2) Devuelve cero en caso de &amp;eacute;xito y no cero en caso de error, en cuyo caso, &lt;code&gt;s[0]&lt;/code&gt; se establece en &lt;code&gt;'\0'&lt;/code&gt; (a menos que &lt;code&gt;s&lt;/code&gt; sea ​​nulo o &lt;code&gt;ssz&lt;/code&gt; sea ​​cero o mayor que &lt;code&gt;RSIZE_MAX&lt;/code&gt; ) y &lt;code&gt;*retval&lt;/code&gt; se establece en &lt;code&gt;(&lt;a href=&quot;../../types/size_t&quot;&gt;size_t&lt;/a&gt;)-1&lt;/code&gt; (a menos que &lt;code&gt;retval&lt;/code&gt; sea ​​nulo)</target>
        </trans-unit>
        <trans-unit id="b9767b04c84b00d4c16686db56f4924326cbcd49" translate="yes" xml:space="preserve">
          <source>2) Returns zero on success and non-zero value on error. Also on error, if &lt;code&gt;dest&lt;/code&gt; is not a null pointer and &lt;code&gt;destsz&lt;/code&gt; is valid, writes &lt;code&gt;destsz&lt;/code&gt; zero bytes in to the destination array.</source>
          <target state="translated">2) Devuelve cero en caso de &amp;eacute;xito y un valor distinto de cero en caso de error. Tambi&amp;eacute;n en caso de error, si &lt;code&gt;dest&lt;/code&gt; no es un puntero nulo y &lt;code&gt;destsz&lt;/code&gt; es v&amp;aacute;lido, escribe &lt;code&gt;destsz&lt;/code&gt; cero bytes en la matriz de destino.</target>
        </trans-unit>
        <trans-unit id="114b6bf255d5ee91a58e10aafdbd3c1edfe36420" translate="yes" xml:space="preserve">
          <source>2) Returns zero on success, returns non-zero on error. Also, on error, fills the entire &lt;code&gt;dst&lt;/code&gt; up to and not including &lt;code&gt;dst+dstsz&lt;/code&gt; with null wide characters, &lt;code&gt;L'\0'&lt;/code&gt; (unless &lt;code&gt;dest&lt;/code&gt; is null or &lt;code&gt;destsz&lt;/code&gt; is greater than &lt;code&gt;RSIZE_MAX/sizeof(wchar_t)&lt;/code&gt;)</source>
          <target state="translated">2) Devuelve cero en caso de &amp;eacute;xito, devuelve un valor distinto de cero en caso de error. Adem&amp;aacute;s, en caso de error, llena todo el &lt;code&gt;dst&lt;/code&gt; hasta y sin incluir &lt;code&gt;dst+dstsz&lt;/code&gt; con caracteres anchos nulos, &lt;code&gt;L'\0'&lt;/code&gt; (a menos que &lt;code&gt;dest&lt;/code&gt; sea ​​nulo o &lt;code&gt;destsz&lt;/code&gt; sea ​​mayor que &lt;code&gt;RSIZE_MAX/sizeof(wchar_t)&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="547a8c34339f669a1dac34bd53ab4623d04ba24f" translate="yes" xml:space="preserve">
          <source>2) Same as (1), except that</source>
          <target state="translated">2)Igual que el 1),excepto que</target>
        </trans-unit>
        <trans-unit id="2f6fb0385742aaebea3aa43a2c7f716b6222a2c8" translate="yes" xml:space="preserve">
          <source>2) Same as (1), except that &lt;code&gt;mode&lt;/code&gt; is treated as in &lt;code&gt;fopen_s&lt;/code&gt; and that the pointer to the file stream is written to &lt;code&gt;newstreamptr&lt;/code&gt; and the following errors are detected at runtime and call the currently installed &lt;a href=&quot;../error/set_constraint_handler_s&quot;&gt;constraint handler&lt;/a&gt; function:</source>
          <target state="translated">2) Igual que (1), excepto que el &lt;code&gt;mode&lt;/code&gt; se trata como en &lt;code&gt;fopen_s&lt;/code&gt; y que el puntero a la secuencia de archivos se escribe en &lt;code&gt;newstreamptr&lt;/code&gt; y los siguientes errores se detectan en tiempo de ejecuci&amp;oacute;n y llaman a la funci&amp;oacute;n de &lt;a href=&quot;../error/set_constraint_handler_s&quot;&gt;controlador de restricciones&lt;/a&gt; actualmente instalada :</target>
        </trans-unit>
        <trans-unit id="40543886106703355edd112e7aedc0af7a5cf480" translate="yes" xml:space="preserve">
          <source>2) Same as (1), except that at least &lt;code&gt;TMP_MAX_S&lt;/code&gt; files may be opened (the limit may be shared with &lt;code&gt;tmpnam_s&lt;/code&gt;), and if &lt;code&gt;streamptr&lt;/code&gt; is a null pointer, the currently installed &lt;a href=&quot;../error/set_constraint_handler_s&quot;&gt;constraint handler&lt;/a&gt; function is called. As with all bounds-checked functions, &lt;code&gt;tmpfile_s&lt;/code&gt; is only guaranteed to be available if &lt;code&gt;__STDC_LIB_EXT1__&lt;/code&gt; is defined by the implementation and if the user defines &lt;code&gt;__STDC_WANT_LIB_EXT1__&lt;/code&gt; to the integer constant 1 before including &lt;code&gt;stdio.h&lt;/code&gt;.</source>
          <target state="translated">2) Igual que (1), excepto que al menos los archivos &lt;code&gt;TMP_MAX_S&lt;/code&gt; pueden abrirse (el l&amp;iacute;mite puede compartirse con &lt;code&gt;tmpnam_s&lt;/code&gt; ), y si &lt;code&gt;streamptr&lt;/code&gt; es un puntero nulo, se llama a la funci&amp;oacute;n de &lt;a href=&quot;../error/set_constraint_handler_s&quot;&gt;controlador de restricciones&lt;/a&gt; instalada actualmente . Al igual que con todas las funciones grada-controladas, &lt;code&gt;tmpfile_s&lt;/code&gt; s&amp;oacute;lo est&amp;aacute; garantizada para estar disponible si &lt;code&gt;__STDC_LIB_EXT1__&lt;/code&gt; se define por la aplicaci&amp;oacute;n y si los define el usuario &lt;code&gt;__STDC_WANT_LIB_EXT1__&lt;/code&gt; a la constante de n&amp;uacute;mero entero 1 antes de incluir &lt;code&gt;stdio.h&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4c03c6ec97ab1859822eb170bfe6fdbe06bf71fb" translate="yes" xml:space="preserve">
          <source>2) Same as (1), except that it may clobber the rest of the destination array (from the last character written to &lt;code&gt;destsz&lt;/code&gt;) with unspecified values and that the following errors are detected at runtime and call the currently installed &lt;a href=&quot;../../error/set_constraint_handler_s&quot;&gt;constraint handler&lt;/a&gt; function:</source>
          <target state="translated">2) Igual que (1), excepto que puede bloquear el resto de la matriz de destino (desde el &amp;uacute;ltimo car&amp;aacute;cter escrito en &lt;code&gt;destsz&lt;/code&gt; ) con valores no especificados y que los siguientes errores se detectan en tiempo de ejecuci&amp;oacute;n y llaman a la funci&amp;oacute;n de &lt;a href=&quot;../../error/set_constraint_handler_s&quot;&gt;controlador de restricciones&lt;/a&gt; actualmente instalada :</target>
        </trans-unit>
        <trans-unit id="47d0173b55dbfa21cfac70882a3549f3f8064b31" translate="yes" xml:space="preserve">
          <source>2) Same as (1), except that it may clobber the rest of the destination array with unspecified values and that the following errors are detected at runtime and call the currently installed &lt;a href=&quot;../../error/set_constraint_handler_s&quot;&gt;constraint handler&lt;/a&gt; function:</source>
          <target state="translated">2) Igual que (1), excepto que puede bloquear el resto de la matriz de destino con valores no especificados y que los siguientes errores se detectan en tiempo de ejecuci&amp;oacute;n y llaman a la funci&amp;oacute;n de &lt;a href=&quot;../../error/set_constraint_handler_s&quot;&gt;controlador de restricciones&lt;/a&gt; actualmente instalada :</target>
        </trans-unit>
        <trans-unit id="30d8122e8306e198cdf133a75b01bbc23d47becd" translate="yes" xml:space="preserve">
          <source>2) Same as (1), except that on every step, writes the number of characters left to see in &lt;code&gt;str&lt;/code&gt; into &lt;code&gt;*strmax&lt;/code&gt; and writes the tokenizer's internal state to &lt;code&gt;*ptr&lt;/code&gt;. Repeat calls (with null &lt;code&gt;str&lt;/code&gt;) must pass &lt;code&gt;strmax&lt;/code&gt; and &lt;code&gt;ptr&lt;/code&gt; with the values stored by the previous call. Also, the following errors are detected at runtime and call the currently installed &lt;a href=&quot;../../error/set_constraint_handler_s&quot;&gt;constraint handler&lt;/a&gt; function, without storing anything in the object pointed to by &lt;code&gt;ptr&lt;/code&gt;</source>
          <target state="translated">2) Igual que (1), excepto que en cada paso, escribe el n&amp;uacute;mero de caracteres que quedan para ver en &lt;code&gt;str&lt;/code&gt; en &lt;code&gt;*strmax&lt;/code&gt; y escribe el estado interno del tokenizador en &lt;code&gt;*ptr&lt;/code&gt; . Las llamadas repetidas (con &lt;code&gt;str&lt;/code&gt; nulo ) deben pasar &lt;code&gt;strmax&lt;/code&gt; y &lt;code&gt;ptr&lt;/code&gt; con los valores almacenados por la llamada anterior. Adem&amp;aacute;s, los siguientes errores se detectan en tiempo de ejecuci&amp;oacute;n y llaman a la funci&amp;oacute;n de &lt;a href=&quot;../../error/set_constraint_handler_s&quot;&gt;controlador de restricciones&lt;/a&gt; actualmente instalada , sin almacenar nada en el objeto se&amp;ntilde;alado por &lt;code&gt;ptr&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e852165758ffadae76a35ebd1112fe5ed051e29d" translate="yes" xml:space="preserve">
          <source>2) Same as (1), except that on every step, writes the number of characters left to see in &lt;code&gt;str&lt;/code&gt; into &lt;code&gt;*strmax&lt;/code&gt;. Repeat calls (with null &lt;code&gt;str&lt;/code&gt;) must pass both &lt;code&gt;strmax&lt;/code&gt; and &lt;code&gt;ptr&lt;/code&gt; with the values stored by the previous call. Also, the following errors are detected at runtime and call the currently installed &lt;a href=&quot;../../error/set_constraint_handler_s&quot;&gt;constraint handler&lt;/a&gt; function, without storing anything in the object pointed to by &lt;code&gt;ptr&lt;/code&gt;</source>
          <target state="translated">2) Igual que (1), excepto que en cada paso, escribe el n&amp;uacute;mero de caracteres que quedan para ver en &lt;code&gt;str&lt;/code&gt; en &lt;code&gt;*strmax&lt;/code&gt; . Las llamadas repetidas (con &lt;code&gt;str&lt;/code&gt; nulo ) deben pasar &lt;code&gt;strmax&lt;/code&gt; y &lt;code&gt;ptr&lt;/code&gt; con los valores almacenados por la llamada anterior. Adem&amp;aacute;s, los siguientes errores se detectan en tiempo de ejecuci&amp;oacute;n y llaman a la funci&amp;oacute;n de &lt;a href=&quot;../../error/set_constraint_handler_s&quot;&gt;controlador de restricciones&lt;/a&gt; actualmente instalada , sin almacenar nada en el objeto se&amp;ntilde;alado por &lt;code&gt;ptr&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="90774e34bc883c29dc31aa98ee21c44523780407" translate="yes" xml:space="preserve">
          <source>2) Same as (1), except that the additional context argument &lt;code&gt;context&lt;/code&gt; is passed to &lt;code&gt;comp&lt;/code&gt; and that the following errors are detected at runtime and call the currently installed &lt;a href=&quot;../error/set_constraint_handler_s&quot;&gt;constraint handler&lt;/a&gt; function:</source>
          <target state="translated">2) Igual que (1), excepto que el contexto de argumento de &lt;code&gt;context&lt;/code&gt; o adicional se pasa a &lt;code&gt;comp&lt;/code&gt; y que los siguientes errores se detectan en tiempo de ejecuci&amp;oacute;n y llaman a la funci&amp;oacute;n de &lt;a href=&quot;../error/set_constraint_handler_s&quot;&gt;controlador de restricciones&lt;/a&gt; actualmente instalada :</target>
        </trans-unit>
        <trans-unit id="1afd94921d0d9e6bca352f2b4f59e9d1ac47e83e" translate="yes" xml:space="preserve">
          <source>2) Same as (1), except that the additional context parameter &lt;code&gt;context&lt;/code&gt; is passed to &lt;code&gt;comp&lt;/code&gt; and that the following errors are detected at runtime and call the currently installed &lt;a href=&quot;../error/set_constraint_handler_s&quot;&gt;constraint handler&lt;/a&gt; function:</source>
          <target state="translated">2) Igual que (1), excepto que el contexto del par&amp;aacute;metro de &lt;code&gt;context&lt;/code&gt; o adicional se pasa a &lt;code&gt;comp&lt;/code&gt; y que los siguientes errores se detectan en tiempo de ejecuci&amp;oacute;n y llaman a la funci&amp;oacute;n de &lt;a href=&quot;../error/set_constraint_handler_s&quot;&gt;controlador de restricciones&lt;/a&gt; actualmente instalada :</target>
        </trans-unit>
        <trans-unit id="94a8b6ef731a4c7b5698778bd71ae4805a1289a3" translate="yes" xml:space="preserve">
          <source>2) Same as (1), except that the following errors are detected at runtime and call the currently installed &lt;a href=&quot;../../error/set_constraint_handler_s&quot;&gt;constraint handler&lt;/a&gt; function after storing &lt;code&gt;ch&lt;/code&gt; in every location of the destination range &lt;code&gt;[dest, dest+destsz)&lt;/code&gt; if &lt;code&gt;dest&lt;/code&gt; and &lt;code&gt;destsz&lt;/code&gt; are themselves valid:</source>
          <target state="translated">2) Igual que (1), excepto que los siguientes errores se detectan en tiempo de ejecuci&amp;oacute;n y llaman a la funci&amp;oacute;n del &lt;a href=&quot;../../error/set_constraint_handler_s&quot;&gt;controlador de restricciones&lt;/a&gt; actualmente instalada despu&amp;eacute;s de almacenar &lt;code&gt;ch&lt;/code&gt; en cada ubicaci&amp;oacute;n del rango de destino &lt;code&gt;[dest, dest+destsz)&lt;/code&gt; si &lt;code&gt;dest&lt;/code&gt; y &lt;code&gt;destsz&lt;/code&gt; son v&amp;aacute;lidos:</target>
        </trans-unit>
        <trans-unit id="08724c50a06e459326e417edb851382d6768d6d3" translate="yes" xml:space="preserve">
          <source>2) Same as (1), except that the following errors are detected at runtime and call the currently installed &lt;a href=&quot;../../error/set_constraint_handler_s&quot;&gt;constraint handler&lt;/a&gt; function:</source>
          <target state="translated">2) Igual que (1), excepto que los siguientes errores se detectan en tiempo de ejecuci&amp;oacute;n y llaman a la funci&amp;oacute;n de &lt;a href=&quot;../../error/set_constraint_handler_s&quot;&gt;controlador de restricciones&lt;/a&gt; actualmente instalada :</target>
        </trans-unit>
        <trans-unit id="ab2f7c9dd806b0e55237afe5a1fc5e4b6c69debd" translate="yes" xml:space="preserve">
          <source>2) Same as (1), except that the following errors are detected at runtime and cause the entire destination range &lt;code&gt;[dest, dest+destsz)&lt;/code&gt; to be zeroed out (if both &lt;code&gt;dest&lt;/code&gt; and &lt;code&gt;destsz&lt;/code&gt; are valid), as well as call the currently installed &lt;a href=&quot;../../error/set_constraint_handler_s&quot;&gt;constraint handler&lt;/a&gt; function:</source>
          <target state="translated">2) Igual que (1), excepto que los siguientes errores se detectan en el tiempo de ejecuci&amp;oacute;n y hacen que todo el rango de destino &lt;code&gt;[dest, dest+destsz)&lt;/code&gt; a cero (si tanto &lt;code&gt;dest&lt;/code&gt; como &lt;code&gt;destsz&lt;/code&gt; son v&amp;aacute;lidos), as&amp;iacute; como tambi&amp;eacute;n llame al funci&amp;oacute;n de &lt;a href=&quot;../../error/set_constraint_handler_s&quot;&gt;controlador de restricciones&lt;/a&gt; instalada :</target>
        </trans-unit>
        <trans-unit id="8a2cda47ee4e3d60e44c8feb12db05af541bf83a" translate="yes" xml:space="preserve">
          <source>2) Same as (1), except that the function does not continue writing zeroes into the destination array to pad up to &lt;code&gt;count&lt;/code&gt;, it stops after writing the terminating null character (if there was no null in the source, it writes one at &lt;code&gt;dest[count]&lt;/code&gt; and then stops). Also, the following errors are detected at runtime and call the currently installed &lt;a href=&quot;../../error/set_constraint_handler_s&quot;&gt;constraint handler&lt;/a&gt; function:</source>
          <target state="translated">2) Igual que (1), excepto que la funci&amp;oacute;n no contin&amp;uacute;a escribiendo ceros en la matriz de destino para rellenar para &lt;code&gt;count&lt;/code&gt; , se detiene despu&amp;eacute;s de escribir el car&amp;aacute;cter nulo final (si no hab&amp;iacute;a nulo en la fuente, escribe uno en el &lt;code&gt;dest[count]&lt;/code&gt; y luego se detiene). Adem&amp;aacute;s, los siguientes errores se detectan en tiempo de ejecuci&amp;oacute;n y llaman a la funci&amp;oacute;n de &lt;a href=&quot;../../error/set_constraint_handler_s&quot;&gt;controlador de restricciones&lt;/a&gt; instalada actualmente :</target>
        </trans-unit>
        <trans-unit id="0469b696d360226dd903fe002dd49474023b1ddf" translate="yes" xml:space="preserve">
          <source>2) Same as (1), except that the function is equivalent to &lt;code&gt;asctime_s(buffer, bufsz, localtime_s(&lt;a href=&quot;time&quot;&gt;time&lt;/a&gt;, &amp;amp;(struct &lt;a href=&quot;tm&quot;&gt;tm&lt;/a&gt;){0}))&lt;/code&gt;, and the following errors are detected at runtime and call the currently installed &lt;a href=&quot;../error/set_constraint_handler_s&quot;&gt;constraint handler&lt;/a&gt; function:</source>
          <target state="translated">2) Igual que (1), excepto que la funci&amp;oacute;n es equivalente a &lt;code&gt;asctime_s(buffer, bufsz, localtime_s(&lt;a href=&quot;time&quot;&gt;time&lt;/a&gt;, &amp;amp;(struct &lt;a href=&quot;tm&quot;&gt;tm&lt;/a&gt;){0}))&lt;/code&gt; , y los siguientes errores se detectan en tiempo de ejecuci&amp;oacute;n y llaman a la &lt;a href=&quot;../error/set_constraint_handler_s&quot;&gt;restricci&amp;oacute;n&lt;/a&gt; instalada actualmente funci&amp;oacute;n de controlador :</target>
        </trans-unit>
        <trans-unit id="9519711c055d895452102ec342c7b479666bc4bd" translate="yes" xml:space="preserve">
          <source>2) Same as (1), except that the function returns zero if &lt;code&gt;str&lt;/code&gt; is a null pointer and returns &lt;code&gt;strsz&lt;/code&gt; if the null character was not found in the first &lt;code&gt;strsz&lt;/code&gt; bytes of &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="translated">2) Igual que (1), excepto que la funci&amp;oacute;n devuelve cero si &lt;code&gt;str&lt;/code&gt; es un puntero nulo y devuelve &lt;code&gt;strsz&lt;/code&gt; si no se encontr&amp;oacute; el car&amp;aacute;cter nulo en los primeros bytes &lt;code&gt;strsz&lt;/code&gt; de &lt;code&gt;str&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d98a1799635aba6125a9e92539d4e20d823ded24" translate="yes" xml:space="preserve">
          <source>2) Same as (1), except that the function returns zero if &lt;code&gt;str&lt;/code&gt; is a null pointer and returns &lt;code&gt;strsz&lt;/code&gt; if the null wide character was not found in the first &lt;code&gt;strsz&lt;/code&gt; wide characters of &lt;code&gt;src&lt;/code&gt; As with all bounds-checked functions, &lt;code&gt;wcslen_s&lt;/code&gt; is only guaranteed to be available if &lt;code&gt;__STDC_LIB_EXT1__&lt;/code&gt; is defined by the implementation and if the user defines &lt;code&gt;__STDC_WANT_LIB_EXT1__&lt;/code&gt; to the integer constant 1 before including &lt;code&gt;stdio.h&lt;/code&gt;..</source>
          <target state="translated">2) Igual que (1), excepto que la funci&amp;oacute;n devuelve cero si &lt;code&gt;str&lt;/code&gt; es un puntero nulo y devuelve &lt;code&gt;strsz&lt;/code&gt; si el car&amp;aacute;cter ancho nulo no se encontr&amp;oacute; en los primeros caracteres &lt;code&gt;strsz&lt;/code&gt; wide de &lt;code&gt;src&lt;/code&gt; Al igual que con todas las funciones de verificaci&amp;oacute;n de l&amp;iacute;mites, &lt;code&gt;wcslen_s&lt;/code&gt; es solo garantizados para estar disponible si &lt;code&gt;__STDC_LIB_EXT1__&lt;/code&gt; se define por la aplicaci&amp;oacute;n y si los define el usuario &lt;code&gt;__STDC_WANT_LIB_EXT1__&lt;/code&gt; a la constante de n&amp;uacute;mero entero 1 antes de incluir &lt;code&gt;stdio.h&lt;/code&gt; ..</target>
        </trans-unit>
        <trans-unit id="607e92f3f27408de38eba281e698ff1222b22934" translate="yes" xml:space="preserve">
          <source>2) Same as (1), except that the function uses user-provided storage &lt;code&gt;result&lt;/code&gt; for the result and that the following errors are detected at runtime and call the currently installed &lt;a href=&quot;../error/set_constraint_handler_s&quot;&gt;constraint handler&lt;/a&gt; function:</source>
          <target state="translated">2) Igual que (1), excepto que la funci&amp;oacute;n utiliza el &lt;code&gt;result&lt;/code&gt; ado de almacenamiento proporcionado por el usuario para el resultado y que los siguientes errores se detectan en tiempo de ejecuci&amp;oacute;n y llaman a la funci&amp;oacute;n de &lt;a href=&quot;../error/set_constraint_handler_s&quot;&gt;controlador de restricciones&lt;/a&gt; actualmente instalada :</target>
        </trans-unit>
        <trans-unit id="b2868c98006c63b6b57c763a935de43bf2490190" translate="yes" xml:space="preserve">
          <source>2) Same as (1), except that the message is copied into user-provided storage &lt;code&gt;buf&lt;/code&gt;, which is guaranteed to be null-terminated, and the following errors are detected at runtime and call the currently installed &lt;a href=&quot;../error/set_constraint_handler_s&quot;&gt;constraint handler&lt;/a&gt; function:</source>
          <target state="translated">2) Lo mismo que (1), excepto que el mensaje se copia en el almacenamiento proporcionado por el usuario &lt;code&gt;buf&lt;/code&gt; , que se garantiza que sea terminada en nulo, y los siguientes errores se detectan en tiempo de ejecuci&amp;oacute;n y llamar a la actualmente instalada &lt;a href=&quot;../error/set_constraint_handler_s&quot;&gt;controlador de restricci&amp;oacute;n&lt;/a&gt; funci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="224ce90209d0bf8e36b21272f6406dbe2b2e7679" translate="yes" xml:space="preserve">
          <source>2) Same as (1), except that the message is copied into user-provided storage &lt;code&gt;buf&lt;/code&gt;. No more than &lt;code&gt;bufsz-1&lt;/code&gt; bytes are written, the buffer is always null-terminated. If the message had to be truncated to fit the buffer and &lt;code&gt;bufsz&lt;/code&gt; is greater than 3, then only &lt;code&gt;bufsz-4&lt;/code&gt; bytes are written, and the characters &lt;code&gt;&quot;...&quot;&lt;/code&gt; are appended before the null terminator. In addition, the following errors are detected at runtime and call the currently installed &lt;a href=&quot;../../error/set_constraint_handler_s&quot;&gt;constraint handler&lt;/a&gt; function:</source>
          <target state="translated">2) Lo mismo que (1), excepto que el mensaje se copia en el almacenamiento proporcionado por el usuario &lt;code&gt;buf&lt;/code&gt; . No se &lt;code&gt;bufsz-1&lt;/code&gt; m&amp;aacute;s de bufsz-1 bytes, el b&amp;uacute;fer siempre termina en nulo. Si el mensaje tuvo que truncarse para ajustarse al b&amp;uacute;fer y &lt;code&gt;bufsz&lt;/code&gt; es mayor que 3, entonces solo se &lt;code&gt;bufsz-4&lt;/code&gt; bytes, y los caracteres &lt;code&gt;&quot;...&quot;&lt;/code&gt; se agregan antes del terminador nulo. Adem&amp;aacute;s, los siguientes errores se detectan en tiempo de ejecuci&amp;oacute;n y llaman a la funci&amp;oacute;n de &lt;a href=&quot;../../error/set_constraint_handler_s&quot;&gt;controlador de restricciones&lt;/a&gt; actualmente instalada :</target>
        </trans-unit>
        <trans-unit id="857206a2318612da3748645e781819b440c3aec2" translate="yes" xml:space="preserve">
          <source>2) Same as (1), except that the null pointer is also returned on runtime constraints violations.</source>
          <target state="translated">2)Igual que el 1),excepto que el puntero nulo también se devuelve en las violaciones de las restricciones de tiempo de ejecución.</target>
        </trans-unit>
        <trans-unit id="48bbbfc109301db8c552032fd94d34c065d99580" translate="yes" xml:space="preserve">
          <source>2) Same as (1), except that the pointer to the file stream is written to &lt;code&gt;streamptr&lt;/code&gt; and the following errors are detected at runtime and call the currently installed &lt;a href=&quot;../error/set_constraint_handler_s&quot;&gt;constraint handler&lt;/a&gt; function:</source>
          <target state="translated">2) Igual que (1), excepto que el puntero a la secuencia de archivos se escribe en &lt;code&gt;streamptr&lt;/code&gt; y los siguientes errores se detectan en tiempo de ejecuci&amp;oacute;n y llaman a la funci&amp;oacute;n de &lt;a href=&quot;../error/set_constraint_handler_s&quot;&gt;controlador de restricciones&lt;/a&gt; actualmente instalada :</target>
        </trans-unit>
        <trans-unit id="72c033e435b10ef2cffa5938e09c68e185909383" translate="yes" xml:space="preserve">
          <source>2) Same as (1), except that the result is returned in the out-parameter &lt;code&gt;status&lt;/code&gt; and the following errors are detected at runtime and call the currently installed &lt;a href=&quot;../../error/set_constraint_handler_s&quot;&gt;constraint handler&lt;/a&gt; function:</source>
          <target state="translated">2) Lo mismo que (1), excepto que el resultado se devuelve en el fuera de par&amp;aacute;metro &lt;code&gt;status&lt;/code&gt; y los siguientes errores se detectan en tiempo de ejecuci&amp;oacute;n y llamar a la actualmente instalada &lt;a href=&quot;../../error/set_constraint_handler_s&quot;&gt;controlador de restricci&amp;oacute;n&lt;/a&gt; funci&amp;oacute;n:</target>
        </trans-unit>
        <trans-unit id="69f8bed32015a035c1aa25609d8d3b6cb2ba85ba" translate="yes" xml:space="preserve">
          <source>2) Same as (1), except that the values of the environment variable is written to the user-provided buffer &lt;code&gt;value&lt;/code&gt; (unless null) and the number of bytes written is stored in the user-provided location &lt;code&gt;*len&lt;/code&gt; (unless null). If the environment variable is not set in the environment, zero is written to &lt;code&gt;*len&lt;/code&gt; (unless null) and &lt;code&gt;'\0'&lt;/code&gt; is written to &lt;code&gt;value[0]&lt;/code&gt; (unless null). In addition, the following errors are detected at runtime and call the currently installed &lt;a href=&quot;../error/set_constraint_handler_s&quot;&gt;constraint handler&lt;/a&gt; function:</source>
          <target state="translated">2) Igual que (1), excepto que los valores de la variable de entorno se escriben en el &lt;code&gt;value&lt;/code&gt; b&amp;uacute;fer proporcionado por el usuario (a menos que sea nulo) y el n&amp;uacute;mero de bytes escritos se almacena en la ubicaci&amp;oacute;n &lt;code&gt;*len&lt;/code&gt; proporcionada por el usuario (a menos que sea nulo). Si la variable de entorno no se establece en el entorno, el cero se escribe en &lt;code&gt;*len&lt;/code&gt; (a menos que sea nulo) y &lt;code&gt;'\0'&lt;/code&gt; se escribe en el &lt;code&gt;value[0]&lt;/code&gt; (a menos que sea nulo). Adem&amp;aacute;s, los siguientes errores se detectan en tiempo de ejecuci&amp;oacute;n y llaman a la funci&amp;oacute;n de &lt;a href=&quot;../error/set_constraint_handler_s&quot;&gt;controlador de restricciones&lt;/a&gt; actualmente instalada :</target>
        </trans-unit>
        <trans-unit id="7640c3fdb352d2a3f2b5db118f49fdf931b3c07b" translate="yes" xml:space="preserve">
          <source>2) Same as (1), except that this function may clobber the remainder of the destination array (from the last byte written to &lt;code&gt;destsz&lt;/code&gt;) and that the following errors are detected at runtime and call the currently installed &lt;a href=&quot;../../error/set_constraint_handler_s&quot;&gt;constraint handler&lt;/a&gt; function:</source>
          <target state="translated">2) Igual que (1), excepto que esta funci&amp;oacute;n puede bloquear el resto de la matriz de destino (desde el &amp;uacute;ltimo byte escrito en &lt;code&gt;destsz&lt;/code&gt; ) y que los siguientes errores se detectan en tiempo de ejecuci&amp;oacute;n y llaman a la funci&amp;oacute;n de &lt;a href=&quot;../../error/set_constraint_handler_s&quot;&gt;controlador de restricciones&lt;/a&gt; actualmente instalada :</target>
        </trans-unit>
        <trans-unit id="999904dd2773adf7c5c8e238d6903818e01d69df" translate="yes" xml:space="preserve">
          <source>2) Same as (1), except that this function may clobber the remainder of the destination array (from the last wide character written to &lt;code&gt;destsz&lt;/code&gt;) and that the following errors are detected at runtime and call the currently installed &lt;a href=&quot;../../error/set_constraint_handler_s&quot;&gt;constraint handler&lt;/a&gt; function:</source>
          <target state="translated">2) Igual que (1), excepto que esta funci&amp;oacute;n puede bloquear el resto de la matriz de destino (desde el &amp;uacute;ltimo car&amp;aacute;cter ancho escrito en &lt;code&gt;destsz&lt;/code&gt; ) y que los siguientes errores se detectan en tiempo de ejecuci&amp;oacute;n y llaman a la funci&amp;oacute;n de &lt;a href=&quot;../../error/set_constraint_handler_s&quot;&gt;controlador de restricciones&lt;/a&gt; actualmente instalada :</target>
        </trans-unit>
        <trans-unit id="7ab3c24ca29fcf24acdaa2148ba0ad25c2df2cc7" translate="yes" xml:space="preserve">
          <source>2) Same as (1), except that up to &lt;code&gt;TMP_MAX_S&lt;/code&gt; names may be generated, no longer than &lt;code&gt;L_tmpnam_s&lt;/code&gt; in length, and the following errors are detected at runtime and call the currently installed &lt;a href=&quot;../error/set_constraint_handler_s&quot;&gt;constraint handler&lt;/a&gt; function:</source>
          <target state="translated">2) Igual que (1), excepto que se pueden generar hasta &lt;code&gt;TMP_MAX_S&lt;/code&gt; nombres, no m&amp;aacute;s largos que &lt;code&gt;L_tmpnam_s&lt;/code&gt; de longitud, y los siguientes errores se detectan en tiempo de ejecuci&amp;oacute;n y llaman a la funci&amp;oacute;n de &lt;a href=&quot;../error/set_constraint_handler_s&quot;&gt;controlador de restricciones&lt;/a&gt; actualmente instalada :</target>
        </trans-unit>
        <trans-unit id="fe638f9ef0d1cccbd6ce21e200e5100d8bd9cd65" translate="yes" xml:space="preserve">
          <source>2) Same as (1), except when detecting the following errors at runtime, it zeroes out the entire destination range &lt;code&gt;[dest, dest+destsz)&lt;/code&gt; (if both &lt;code&gt;dest&lt;/code&gt; and &lt;code&gt;destsz&lt;/code&gt; are valid) and calls the currently installed &lt;a href=&quot;../../error/set_constraint_handler_s&quot;&gt;constraint handler&lt;/a&gt; function:</source>
          <target state="translated">2) Igual que (1), excepto cuando detecta los siguientes errores en tiempo de ejecuci&amp;oacute;n, pone a cero todo el rango de destino &lt;code&gt;[dest, dest+destsz)&lt;/code&gt; (si tanto &lt;code&gt;dest&lt;/code&gt; como &lt;code&gt;destsz&lt;/code&gt; son v&amp;aacute;lidos) y llama a la funci&amp;oacute;n de &lt;a href=&quot;../../error/set_constraint_handler_s&quot;&gt;controlador de restricciones&lt;/a&gt; actualmente instalada :</target>
        </trans-unit>
        <trans-unit id="6d22cf7ab9fd315890290eaf83df26949f2ed10d" translate="yes" xml:space="preserve">
          <source>2) Searches for the file in implementation-defined manner. The intent of this syntax is to search for the files that are not controlled by the implementation. Typical implementations first search the directory where the current file resides and, only if the file is not found, search the standard include directories as with (1).</source>
          <target state="translated">2)Busca el archivo de manera definida por la aplicación.La intención de esta sintaxis es buscar los archivos que no están controlados por la implementación.Las implementaciones típicas primero buscan el directorio donde reside el archivo actual y,sólo si el archivo no se encuentra,buscan en los directorios de inclusión estándar como con (1).</target>
        </trans-unit>
        <trans-unit id="4b088ef2082bcedcbb634bd0afbcd95c324f53db" translate="yes" xml:space="preserve">
          <source>2) Suitably declared &lt;a href=&quot;identifier&quot;&gt;identifiers&lt;/a&gt; (e.g. &lt;code&gt;n&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../io/fprintf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">2) &lt;a href=&quot;identifier&quot;&gt;Identificadores&lt;/a&gt; adecuadamente declarados (por ejemplo, &lt;code&gt;n&lt;/code&gt; o &lt;code&gt;&lt;a href=&quot;../io/fprintf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="4f80b51fe03accf362cbf4f988f40b760b66b124" translate="yes" xml:space="preserve">
          <source>2) Tag names: all identifiers declared as names of &lt;a href=&quot;struct&quot;&gt;structs&lt;/a&gt;, &lt;a href=&quot;union&quot;&gt;unions&lt;/a&gt; and &lt;a href=&quot;enum&quot;&gt;enumerated types&lt;/a&gt;. Note that all three kinds of tags share one name space.</source>
          <target state="translated">2) Nombres de etiquetas: todos los identificadores declarados como nombres de &lt;a href=&quot;struct&quot;&gt;estructuras&lt;/a&gt; , &lt;a href=&quot;union&quot;&gt;uniones&lt;/a&gt; y &lt;a href=&quot;enum&quot;&gt;tipos enumerados&lt;/a&gt; . Tenga en cuenta que los tres tipos de etiquetas comparten un espacio de nombre.</target>
        </trans-unit>
        <trans-unit id="618fa5ad57b4ad9fe40b9249f3d702d6814e08cc" translate="yes" xml:space="preserve">
          <source>2) Terminates the current function. Only valid if the function return type is &lt;code&gt;void&lt;/code&gt;.</source>
          <target state="translated">2) Termina la funci&amp;oacute;n actual. Solo v&amp;aacute;lido si el tipo de retorno de funci&amp;oacute;n es &lt;code&gt;void&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6283e606193c2ef2763fe854fea8988ef7c395ba" translate="yes" xml:space="preserve">
          <source>2) The &lt;code&gt;register&lt;/code&gt; specifier is only allowed for objects declared at block scope, including function parameter lists. It indicates automatic storage duration and no linkage (which is the default for these kinds of declarations), but additionally hints the optimizer to store the value of this variable in a CPU register if possible. Regardless of whether this optimization takes place or not, variables declared &lt;code&gt;register&lt;/code&gt; cannot be used as arguments to the &lt;a href=&quot;operator_member_access&quot;&gt;address-of operator&lt;/a&gt;, cannot use &lt;a href=&quot;alignas&quot;&gt;alignas&lt;/a&gt;(since C11), and &lt;code&gt;register&lt;/code&gt; arrays are not convertible to pointers.</source>
          <target state="translated">2) El especificador de &lt;code&gt;register&lt;/code&gt; solo est&amp;aacute; permitido para los objetos declarados en el alcance del bloque, incluidas las listas de par&amp;aacute;metros de funci&amp;oacute;n. Indica la duraci&amp;oacute;n del almacenamiento autom&amp;aacute;tico y no hay vinculaci&amp;oacute;n (que es el valor predeterminado para este tipo de declaraciones), pero adem&amp;aacute;s sugiere al optimizador que almacene el valor de esta variable en un registro de la CPU si es posible. Independientemente de si esta optimizaci&amp;oacute;n se lleva a cabo o no, las variables declaradas como &lt;code&gt;register&lt;/code&gt; no pueden usarse como argumentos para la &lt;a href=&quot;operator_member_access&quot;&gt;direcci&amp;oacute;n del operador&lt;/a&gt; , no pueden usar &lt;a href=&quot;alignas&quot;&gt;alignas&lt;/a&gt; (desde C11) y &lt;code&gt;register&lt;/code&gt; matrices de registros no son convertibles en punteros.</target>
        </trans-unit>
        <trans-unit id="763440d161086da99dbeb1811286aa979573d097" translate="yes" xml:space="preserve">
          <source>2) The exponent syntax for hexadecimal floating-point constant</source>
          <target state="translated">2)La sintaxis del exponente para la constante hexadecimal de punto flotante</target>
        </trans-unit>
        <trans-unit id="95f291708652ee62cf3fc9edbaa429a7c702a117" translate="yes" xml:space="preserve">
          <source>2) The length of the null-terminated byte string &lt;code&gt;str&lt;/code&gt; on success, zero if &lt;code&gt;str&lt;/code&gt; is a null pointer, &lt;code&gt;strsz&lt;/code&gt; if the null character was not found.</source>
          <target state="translated">2) La longitud de la cadena de bytes terminada en nulo &lt;code&gt;str&lt;/code&gt; en caso de &amp;eacute;xito, cero si &lt;code&gt;str&lt;/code&gt; es un puntero nulo, &lt;code&gt;strsz&lt;/code&gt; si no se encontr&amp;oacute; el car&amp;aacute;cter nulo.</target>
        </trans-unit>
        <trans-unit id="43707a7608113962572d6d82b5bc49cb58b58918" translate="yes" xml:space="preserve">
          <source>2) The length of the null-terminated wide string &lt;code&gt;str&lt;/code&gt; on success, zero if &lt;code&gt;str&lt;/code&gt; is a null pointer, &lt;code&gt;strsz&lt;/code&gt; if the null wide character was not found.</source>
          <target state="translated">2) La longitud de la cadena ancha terminada en nulo &lt;code&gt;str&lt;/code&gt; en caso de &amp;eacute;xito, cero si &lt;code&gt;str&lt;/code&gt; es un puntero nulo, &lt;code&gt;strsz&lt;/code&gt; si no se encontr&amp;oacute; el car&amp;aacute;cter ancho nulo.</target>
        </trans-unit>
        <trans-unit id="7d63a1e1ea9c2cbdf95c4ea445386db61b0ff9aa" translate="yes" xml:space="preserve">
          <source>2) The type of each parameter must be a type such that &lt;a href=&quot;conversion&quot;&gt;implicit conversion as if by assignment&lt;/a&gt; exists that converts the unqualified type of the corresponding argument to the type of the parameter.</source>
          <target state="translated">2) El tipo de cada par&amp;aacute;metro debe ser un tipo tal que exista una &lt;a href=&quot;conversion&quot;&gt;conversi&amp;oacute;n impl&amp;iacute;cita como por asignaci&amp;oacute;n&lt;/a&gt; que convierta el tipo no calificado del argumento correspondiente en el tipo del par&amp;aacute;metro.</target>
        </trans-unit>
        <trans-unit id="cdc6adf55e0843a22c3cfd31c81db0d09b30f50c" translate="yes" xml:space="preserve">
          <source>2) There is a sequence point after evaluation of the first (left) operand and before evaluation of the second (right) operand of the following binary operators: &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; (logical AND), &lt;code&gt;||&lt;/code&gt; (logical OR), and &lt;code&gt;,&lt;/code&gt; (comma).</source>
          <target state="translated">2) Hay un punto de secuencia despu&amp;eacute;s de la evaluaci&amp;oacute;n del primer operando (izquierda) y antes de la evaluaci&amp;oacute;n del segundo operando (derecha) de los siguientes operadores binarios: &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; (AND l&amp;oacute;gico), &lt;code&gt;||&lt;/code&gt; (OR l&amp;oacute;gico), y &lt;code&gt;,&lt;/code&gt; (coma).</target>
        </trans-unit>
        <trans-unit id="e501329036dc6b0206dd1ba3b1430c8b615ac34c" translate="yes" xml:space="preserve">
          <source>2) Use as a type qualifier; this designates the atomic version of type-name. In this role, it may be mixed with &lt;a href=&quot;const&quot;&gt;const&lt;/a&gt;, &lt;a href=&quot;volatile&quot;&gt;volatile&lt;/a&gt;, and &lt;a href=&quot;restrict&quot;&gt;restrict&lt;/a&gt;), although unlike other qualifiers, the atomic version of type-name may have a different size, alignment, and object representation.</source>
          <target state="translated">2) Usar como calificador de tipo; esto designa la versi&amp;oacute;n at&amp;oacute;mica de type-name. En este rol, puede mezclarse con &lt;a href=&quot;const&quot;&gt;const&lt;/a&gt; , &lt;a href=&quot;volatile&quot;&gt;vol&amp;aacute;til&lt;/a&gt; y &lt;a href=&quot;restrict&quot;&gt;restringir&lt;/a&gt; ), aunque a diferencia de otros calificadores, la versi&amp;oacute;n at&amp;oacute;mica de type-name puede tener un tama&amp;ntilde;o, alineaci&amp;oacute;n y representaci&amp;oacute;n de objeto diferente.</target>
        </trans-unit>
        <trans-unit id="fb68e180bc5c9076b0953a9a46e57364a26f7b3a" translate="yes" xml:space="preserve">
          <source>2) Writes the results to a file stream &lt;code&gt;stream&lt;/code&gt;.</source>
          <target state="translated">2) Escribe los resultados en una secuencia de &lt;code&gt;stream&lt;/code&gt; archivo .</target>
        </trans-unit>
        <trans-unit id="6d1f88e1cc5fcc14e31775a112e11927e2c4fc13" translate="yes" xml:space="preserve">
          <source>2) Writes the results to the output stream &lt;code&gt;stream&lt;/code&gt;.</source>
          <target state="translated">2) Escribe los resultados en la secuencia de &lt;code&gt;stream&lt;/code&gt; salida .</target>
        </trans-unit>
        <trans-unit id="4df3b04794d77cd8efbe12ea962694f4c92eade4" translate="yes" xml:space="preserve">
          <source>2) Zero if the entire message was successfully stored in &lt;code&gt;buf&lt;/code&gt;, non-zero otherwise.</source>
          <target state="translated">2) Cero si todo el mensaje se almacen&amp;oacute; correctamente en &lt;code&gt;buf&lt;/code&gt; , de lo contrario, no ser&amp;aacute; cero.</target>
        </trans-unit>
        <trans-unit id="e9d5c906c7a9a8ecaf618e8990b642f6328916cd" translate="yes" xml:space="preserve">
          <source>2) Zero if the file was created and open successfully, non-zero if the file was not created or open or if &lt;code&gt;streamptr&lt;/code&gt; was a null pointer. In addition, pointer to the associated file stream is stored in &lt;code&gt;*streamptr&lt;/code&gt; on success, and a null pointer value is stored in &lt;code&gt;*streamptr&lt;/code&gt; on error.</source>
          <target state="translated">2) Cero si el archivo fue creado y abierto con &amp;eacute;xito, distinto de cero si el archivo no fue creado o abierto o si &lt;code&gt;streamptr&lt;/code&gt; era un puntero nulo. Adem&amp;aacute;s, el puntero a la secuencia de archivos asociada se almacena en &lt;code&gt;*streamptr&lt;/code&gt; en caso de &amp;eacute;xito, y un valor de puntero nulo se almacena en &lt;code&gt;*streamptr&lt;/code&gt; en caso de error.</target>
        </trans-unit>
        <trans-unit id="4e755c3160558147f739e761d836ad2b22b1820a" translate="yes" xml:space="preserve">
          <source>2) a &lt;a href=&quot;variadic&quot;&gt;variadic function&lt;/a&gt;, where the argument expression is one of the trailing arguments that are matched against the ellipsis parameter</source>
          <target state="translated">2) una &lt;a href=&quot;variadic&quot;&gt;funci&amp;oacute;n variadic&lt;/a&gt; , donde la expresi&amp;oacute;n del argumento es uno de los argumentos finales que coinciden con el par&amp;aacute;metro de puntos suspensivos</target>
        </trans-unit>
        <trans-unit id="82b3c110d5788b5d0d4bc22d99707cd441e7a5a9" translate="yes" xml:space="preserve">
          <source>2) address of an object</source>
          <target state="translated">2)dirección de un objeto</target>
        </trans-unit>
        <trans-unit id="999abacf637406bb9cbb5aa419f897e87f73fa72" translate="yes" xml:space="preserve">
          <source>2) any declarator may be enclosed in parentheses; this is required to introduce pointers to arrays and pointers to functions.</source>
          <target state="translated">2)cualquier declarante puede ser incluido entre paréntesis;esto es necesario para introducir punteros a las matrices y punteros a las funciones.</target>
        </trans-unit>
        <trans-unit id="2cf7ae39809692ef985348cfe0b01a2972cbd32b" translate="yes" xml:space="preserve">
          <source>2) bitwise AND</source>
          <target state="translated">2)poco a poco y</target>
        </trans-unit>
        <trans-unit id="bdd3268c08768f192ffe9591a68f62ed3c3c1d33" translate="yes" xml:space="preserve">
          <source>2) comma-separated list of constant(until C99) expressions that are initializers for array elements, optionally using array designators of the form &lt;code&gt;[&lt;/code&gt;constant-expression&lt;code&gt;]&lt;/code&gt;&lt;code&gt;=&lt;/code&gt;(since C99)</source>
          <target state="translated">2) lista separada por comas de expresiones constantes (hasta C99) que son inicializadores para elementos de matriz, opcionalmente utilizando designadores de matriz de la forma &lt;code&gt;[&lt;/code&gt; expresi&amp;oacute;n-constante &lt;code&gt;]&lt;/code&gt; &lt;code&gt;=&lt;/code&gt; (desde C99)</target>
        </trans-unit>
        <trans-unit id="134680780d38fe4e22fbb58d97d652e3459f4b8c" translate="yes" xml:space="preserve">
          <source>2) copy of the &lt;code&gt;result&lt;/code&gt; pointer, or null pointer on error (which may be a runtime constraint violation or a failure to convert the specified time to UTC)</source>
          <target state="translated">2) copia del puntero de &lt;code&gt;result&lt;/code&gt; ado , o puntero nulo en caso de error (que puede ser una violaci&amp;oacute;n de restricci&amp;oacute;n de tiempo de ejecuci&amp;oacute;n o una falla al convertir el tiempo especificado a UTC)</target>
        </trans-unit>
        <trans-unit id="f71105595b8011ea6e8f7bd15c7a2e76a739cdc3" translate="yes" xml:space="preserve">
          <source>2) copy of the &lt;code&gt;result&lt;/code&gt; pointer, or null pointer on error (which may be a runtime constraint violation or a failure to convert the specified time to local calendar time)</source>
          <target state="translated">2) copia del puntero de &lt;code&gt;result&lt;/code&gt; ado , o puntero nulo en caso de error (que puede ser una violaci&amp;oacute;n de restricci&amp;oacute;n de tiempo de ejecuci&amp;oacute;n o una falla al convertir la hora especificada a la hora del calendario local)</target>
        </trans-unit>
        <trans-unit id="58ee80b52a49292c1843b570a27cc3a5814159e6" translate="yes" xml:space="preserve">
          <source>2) division. lhs and rhs must have &lt;a href=&quot;arithmetic_types&quot;&gt;arithmetic types&lt;/a&gt;</source>
          <target state="translated">2) divisi&amp;oacute;n. lhs y rhs deben tener &lt;a href=&quot;arithmetic_types&quot;&gt;tipos aritm&amp;eacute;ticos&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="867a50a15839025479c87f4da8c6d7216a47b44b" translate="yes" xml:space="preserve">
          <source>2) expression statements</source>
          <target state="translated">2)declaraciones de expresión</target>
        </trans-unit>
        <trans-unit id="e6216eb37a5d2944ccc641bd6bfab9e93c2bf565" translate="yes" xml:space="preserve">
          <source>2) greater-than expression</source>
          <target state="translated">2)mayor que la expresión</target>
        </trans-unit>
        <trans-unit id="ffaf06ba809ceb6702e0c25b4a39b8610abca71d" translate="yes" xml:space="preserve">
          <source>2) identifier that follows the keyword &lt;code&gt;struct&lt;/code&gt;, &lt;code&gt;union&lt;/code&gt;, or &lt;code&gt;enum&lt;/code&gt; is looked up in the tag name space.</source>
          <target state="translated">2) el identificador que sigue a la palabra clave &lt;code&gt;struct&lt;/code&gt; , &lt;code&gt;union&lt;/code&gt; o &lt;code&gt;enum&lt;/code&gt; se busca en el espacio del nombre de la etiqueta.</target>
        </trans-unit>
        <trans-unit id="dc271a0aa95cc490903976a92015dea1fc98e516" translate="yes" xml:space="preserve">
          <source>2) if the expressions have struct/union type, the common type is that struct/union type</source>
          <target state="translated">2)si las expresiones tienen tipo de estructura/sindicato,el tipo común es ese tipo de estructura/sindicato</target>
        </trans-unit>
        <trans-unit id="e73faa75cda5e5a957e5e0dfa9fc6ef291b0d89b" translate="yes" xml:space="preserve">
          <source>2) not equal to expression</source>
          <target state="translated">2)no es igual a la expresión</target>
        </trans-unit>
        <trans-unit id="369908471775913420c6be7cb7aafc60c059ddcc" translate="yes" xml:space="preserve">
          <source>2) one of the conversions listed below (if it can produce the target type)</source>
          <target state="translated">2)una de las conversiones enumeradas a continuación (si puede producir el tipo de objetivo)</target>
        </trans-unit>
        <trans-unit id="00290af7166d0999d4ff3f63754916581d0a4d88" translate="yes" xml:space="preserve">
          <source>2) pointer to a pointer that will be updated by this function call</source>
          <target state="translated">2)apuntador a un puntero que se actualizará con esta llamada a la función</target>
        </trans-unit>
        <trans-unit id="8ded236acfeb176c8a27a38f3c48d21d4c1a070d" translate="yes" xml:space="preserve">
          <source>2) pointer to an implementation-defined object or a null pointer. Examples of implementation-defined objects are objects that give the name of the function that detected the violation and the line number when the violation was detected</source>
          <target state="translated">2)puntero a un objeto definido por la implementación o un puntero nulo.Ejemplos de objetos definidos por la implementación son los objetos que dan el nombre de la función que detectó la violación y el número de línea cuando se detectó la violación</target>
        </trans-unit>
        <trans-unit id="b1230b872f5d1c9899499fe1b0506c99f08aaf8f" translate="yes" xml:space="preserve">
          <source>2) reads the data from file stream &lt;code&gt;stream&lt;/code&gt;</source>
          <target state="translated">2) lee los datos de secuencia de archivo &lt;code&gt;stream&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fa40c8a869185c28d1cfcbd01169839777843e3e" translate="yes" xml:space="preserve">
          <source>2) returns zero on success, returns non-zero on error. Also, on error, fills the entire &lt;code&gt;dst&lt;/code&gt; up to and not including &lt;code&gt;dst+dstsz&lt;/code&gt; with null wide characters, &lt;code&gt;L'\0'&lt;/code&gt; (unless &lt;code&gt;dest&lt;/code&gt; is null or &lt;code&gt;destsz&lt;/code&gt; is greater than &lt;code&gt;RSIZE_MAX/sizeof(wchar_t)&lt;/code&gt;)</source>
          <target state="translated">2) devuelve cero en caso de &amp;eacute;xito, devuelve un valor distinto de cero en caso de error. Adem&amp;aacute;s, en caso de error, llena todo el &lt;code&gt;dst&lt;/code&gt; hasta y sin incluir &lt;code&gt;dst+dstsz&lt;/code&gt; con caracteres anchos nulos, &lt;code&gt;L'\0'&lt;/code&gt; (a menos que &lt;code&gt;dest&lt;/code&gt; sea ​​nulo o &lt;code&gt;destsz&lt;/code&gt; sea ​​mayor que &lt;code&gt;RSIZE_MAX/sizeof(wchar_t)&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="e0ee68d4234e10e0450337de7679e7e9b97f05b8" translate="yes" xml:space="preserve">
          <source>2) returns zero on success, returns non-zero on error. Also, on error, writes &lt;code&gt;L'\0'&lt;/code&gt; to &lt;code&gt;dest[0]&lt;/code&gt; (unless &lt;code&gt;dest&lt;/code&gt; is a null pointer or &lt;code&gt;destsz&lt;/code&gt; is zero or greater than &lt;code&gt;RMAX_SIZE / sizeof(wchar_t)&lt;/code&gt;).</source>
          <target state="translated">2) devuelve cero en caso de &amp;eacute;xito, devuelve un valor distinto de cero en caso de error. Adem&amp;aacute;s, en caso de error, escribe &lt;code&gt;L'\0'&lt;/code&gt; en &lt;code&gt;dest[0]&lt;/code&gt; (a menos que &lt;code&gt;dest&lt;/code&gt; sea ​​un puntero nulo o &lt;code&gt;destsz&lt;/code&gt; sea ​​cero o mayor que &lt;code&gt;RMAX_SIZE / sizeof(wchar_t)&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="adc2980bf5377d391c34585c064660feb2c1bbac" translate="yes" xml:space="preserve">
          <source>2) returns zero on success, returns non-zero on error. Also, on error, writes &lt;code&gt;L'\0'&lt;/code&gt; to &lt;code&gt;dest[0]&lt;/code&gt; (unless &lt;code&gt;dest&lt;/code&gt; is a null pointer or &lt;code&gt;destsz&lt;/code&gt; is zero or greater than &lt;code&gt;RSIZE_MAX/sizeof(wchar_t)&lt;/code&gt;) and may clobber the rest of the destination array with unspecified values.</source>
          <target state="translated">2) devuelve cero en caso de &amp;eacute;xito, devuelve un valor distinto de cero en caso de error. Adem&amp;aacute;s, en caso de error, escribe &lt;code&gt;L'\0'&lt;/code&gt; en &lt;code&gt;dest[0]&lt;/code&gt; (a menos que &lt;code&gt;dest&lt;/code&gt; sea ​​un puntero nulo o &lt;code&gt;destsz&lt;/code&gt; sea ​​cero o mayor que &lt;code&gt;RSIZE_MAX/sizeof(wchar_t)&lt;/code&gt; ) y puede bloquear el resto de la matriz de destino con valores no especificados.</target>
        </trans-unit>
        <trans-unit id="25d1b1a9f5247e4d8c8b4a9096535988e04d5a2b" translate="yes" xml:space="preserve">
          <source>2) returns zero on success, returns non-zero on error. Also, on error, writes &lt;code&gt;L'\0'&lt;/code&gt; to &lt;code&gt;dest[0]&lt;/code&gt; (unless &lt;code&gt;dest&lt;/code&gt; is a null pointer or &lt;code&gt;destsz&lt;/code&gt; is zero or greater than &lt;code&gt;RSIZE_MAX/sizeof(wchar_t)&lt;/code&gt;).</source>
          <target state="translated">2) devuelve cero en caso de &amp;eacute;xito, devuelve un valor distinto de cero en caso de error. Adem&amp;aacute;s, en caso de error, escribe &lt;code&gt;L'\0'&lt;/code&gt; en &lt;code&gt;dest[0]&lt;/code&gt; (a menos que &lt;code&gt;dest&lt;/code&gt; sea ​​un puntero nulo o &lt;code&gt;destsz&lt;/code&gt; sea ​​cero o mayor que &lt;code&gt;RSIZE_MAX/sizeof(wchar_t)&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a6cefa1a44bd52d1e6b2d0bfe74baa7b2b6b966d" translate="yes" xml:space="preserve">
          <source>2) returns zero on success, returns non-zero on error. Also, on error, writes zero to &lt;code&gt;dest[0]&lt;/code&gt; (unless &lt;code&gt;dest&lt;/code&gt; is a null pointer or &lt;code&gt;destsz&lt;/code&gt; is zero or greater than &lt;code&gt;RSIZE_MAX&lt;/code&gt;) and may clobber the rest of the destination array with unspecified values.</source>
          <target state="translated">2) devuelve cero en caso de &amp;eacute;xito, devuelve un valor distinto de cero en caso de error. Adem&amp;aacute;s, en caso de error, escribe cero en &lt;code&gt;dest[0]&lt;/code&gt; (a menos que &lt;code&gt;dest&lt;/code&gt; sea ​​un puntero nulo o &lt;code&gt;destsz&lt;/code&gt; sea ​​cero o mayor que &lt;code&gt;RSIZE_MAX&lt;/code&gt; ) y puede bloquear el resto de la matriz de destino con valores no especificados.</target>
        </trans-unit>
        <trans-unit id="9a34a12a1beac0a884c61ff4955fefbff0480f75" translate="yes" xml:space="preserve">
          <source>2) returns zero on success, returns non-zero on error. Also, on error, writes zero to &lt;code&gt;dest[0]&lt;/code&gt; (unless &lt;code&gt;dest&lt;/code&gt; is a null pointer or &lt;code&gt;destsz&lt;/code&gt; is zero or greater than &lt;code&gt;RSIZE_MAX&lt;/code&gt;).</source>
          <target state="translated">2) devuelve cero en caso de &amp;eacute;xito, devuelve un valor distinto de cero en caso de error. Adem&amp;aacute;s, en caso de error, escribe cero en &lt;code&gt;dest[0]&lt;/code&gt; (a menos que &lt;code&gt;dest&lt;/code&gt; sea ​​un puntero nulo o &lt;code&gt;destsz&lt;/code&gt; sea ​​cero o mayor que &lt;code&gt;RSIZE_MAX&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="72cef41fc2856e5795da50c38e552f85c1551ef4" translate="yes" xml:space="preserve">
          <source>2) right shift of lhs by rhs bits</source>
          <target state="translated">2)Desplazamiento a la derecha de los bits lhs por rhs</target>
        </trans-unit>
        <trans-unit id="fb5dfecdc049499bf00070e274042539e6184836" translate="yes" xml:space="preserve">
          <source>2) subtraction: lhs and rhs must be one of the following</source>
          <target state="translated">2)sustracción:lhs y rhs debe ser uno de los siguientes</target>
        </trans-unit>
        <trans-unit id="031b215e8ed2c220f0171f283d2c5722d99bcca7" translate="yes" xml:space="preserve">
          <source>2) the &lt;a href=&quot;fe_round&quot;&gt;floating-point rounding macro&lt;/a&gt; describing the current rounding direction or a negative value if the direction cannot be determined.</source>
          <target state="translated">2) la &lt;a href=&quot;fe_round&quot;&gt;macro de redondeo de punto flotante que&lt;/a&gt; describe la direcci&amp;oacute;n de redondeo actual o un valor negativo si no se puede determinar la direcci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="280fd5df9c2a6bd3c2e8634c77d2f212dd167532" translate="yes" xml:space="preserve">
          <source>2) the null pointer constant &lt;code&gt;&lt;a href=&quot;../types/null&quot;&gt;NULL&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">2) el puntero nulo constante &lt;code&gt;&lt;a href=&quot;../types/null&quot;&gt;NULL&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dc74ca063da0b80eaa6fb5ad3814836afce1dfef" translate="yes" xml:space="preserve">
          <source>2) the ranks of all signed integer types equal the ranks of the corresponding unsigned integer types</source>
          <target state="translated">2)los rangos de todos los tipos enteros con signo son iguales a los rangos de los correspondientes tipos enteros sin signo</target>
        </trans-unit>
        <trans-unit id="44940e7b5e5b1a6cebd6d7933ee859beb2a9d6cf" translate="yes" xml:space="preserve">
          <source>2) the sequentially-consistent fences are only establishing total ordering for the fences themselves, not for the atomic operations in the general case (</source>
          <target state="translated">2)las vallas de coherencia secuencial sólo establecen un orden total para las propias vallas,no para las operaciones atómicas en el caso general (</target>
        </trans-unit>
        <trans-unit id="07940043869fafd1cbffb85551f4f68927175c3e" translate="yes" xml:space="preserve">
          <source>2) to the alignment requirement of type, that is, to &lt;code&gt;alignof(type)&lt;/code&gt;</source>
          <target state="translated">2) al requisito de alineaci&amp;oacute;n de tipo, es decir, &lt;code&gt;alignof(type)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="74b247560e4a1938b189620c2b0110b4f8fc1df8" translate="yes" xml:space="preserve">
          <source>2) unary minus (negation)</source>
          <target state="translated">2)unario menos (negación)</target>
        </trans-unit>
        <trans-unit id="10c8c571dfa775fd95490650b8eab4100d1ba54f" translate="yes" xml:space="preserve">
          <source>2) zero if the environment variable was found, non-zero if it was not found of if a runtime constrant violation occurred. On any error, writes zero to &lt;code&gt;*len&lt;/code&gt; (unless &lt;code&gt;len&lt;/code&gt; is a null pointer).</source>
          <target state="translated">2) cero si se encontr&amp;oacute; la variable de entorno, no cero si no se encontr&amp;oacute; si se produjo una violaci&amp;oacute;n de restricci&amp;oacute;n de tiempo de ejecuci&amp;oacute;n. En cualquier error, escribe cero en &lt;code&gt;*len&lt;/code&gt; (a menos que &lt;code&gt;len&lt;/code&gt; sea ​​un puntero nulo).</target>
        </trans-unit>
        <trans-unit id="531276e5d35d8197265b5cd072ee873c7642baa8" translate="yes" xml:space="preserve">
          <source>2) zero on success (and a copy of the value of &lt;code&gt;stream&lt;/code&gt; is written to &lt;code&gt;*newstreamptr&lt;/code&gt;, non-zero on error (and null pointer is written to &lt;code&gt;*newstreamptr&lt;/code&gt; unless &lt;code&gt;newstreamptr&lt;/code&gt; is itself a null pointer).</source>
          <target state="translated">2) cero en caso de &amp;eacute;xito (y una copia del valor de la &lt;code&gt;stream&lt;/code&gt; se escribe en &lt;code&gt;*newstreamptr&lt;/code&gt; , no es cero en caso de error (y el puntero nulo se escribe en &lt;code&gt;*newstreamptr&lt;/code&gt; a menos que &lt;code&gt;newstreamptr&lt;/code&gt; sea ​​en s&amp;iacute; mismo un puntero nulo).</target>
        </trans-unit>
        <trans-unit id="92364cfa2b1b1ce6a7421a5e8fa6da21b7b36037" translate="yes" xml:space="preserve">
          <source>2) zero on success (in which case the number of wide characters excluding terminating zero that were, or would be written to &lt;code&gt;dst&lt;/code&gt;, is stored in &lt;code&gt;*retval&lt;/code&gt;), non-sero on error. In case of a runtime constraint violation, stores &lt;code&gt;(&lt;a href=&quot;../../types/size_t&quot;&gt;size_t&lt;/a&gt;)-1&lt;/code&gt; in &lt;code&gt;*retval&lt;/code&gt; (unless &lt;code&gt;retval&lt;/code&gt; is null) and sets &lt;code&gt;dst[0]&lt;/code&gt; to &lt;code&gt;L'\0'&lt;/code&gt; (unless &lt;code&gt;dst&lt;/code&gt; is null or &lt;code&gt;dstmax&lt;/code&gt; is zero or greater than &lt;code&gt;RSIZE_MAX&lt;/code&gt;)</source>
          <target state="translated">2) cero en caso de &amp;eacute;xito (en cuyo caso el n&amp;uacute;mero de caracteres anchos, excluyendo el cero final que fueron, o se escribir&amp;iacute;an en &lt;code&gt;dst&lt;/code&gt; , se almacena en &lt;code&gt;*retval&lt;/code&gt; ), no sero en caso de error. En caso de una violaci&amp;oacute;n de restricci&amp;oacute;n de tiempo de ejecuci&amp;oacute;n, almacena &lt;code&gt;(&lt;a href=&quot;../../types/size_t&quot;&gt;size_t&lt;/a&gt;)-1&lt;/code&gt; en &lt;code&gt;*retval&lt;/code&gt; (a menos que &lt;code&gt;retval&lt;/code&gt; sea ​​nulo) y establezca &lt;code&gt;dst[0]&lt;/code&gt; en &lt;code&gt;L'\0'&lt;/code&gt; (a menos que &lt;code&gt;dst&lt;/code&gt; sea ​​nulo o &lt;code&gt;dstmax&lt;/code&gt; sea ​​cero o mayor que &lt;code&gt;RSIZE_MAX&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="3e07e61b99111cc46b842fc5800231accfd87e13" translate="yes" xml:space="preserve">
          <source>2) zero on success (in which case the number of wide characters excluding terminating zero that were, or would be written to &lt;code&gt;dst&lt;/code&gt;, is stored in &lt;code&gt;*retval&lt;/code&gt;), non-zero on error. In case of a runtime constraint violation, stores &lt;code&gt;(&lt;a href=&quot;../../types/size_t&quot;&gt;size_t&lt;/a&gt;)-1&lt;/code&gt; in &lt;code&gt;*retval&lt;/code&gt; (unless &lt;code&gt;retval&lt;/code&gt; is null) and sets &lt;code&gt;dst[0]&lt;/code&gt; to &lt;code&gt;L'\0'&lt;/code&gt; (unless &lt;code&gt;dst&lt;/code&gt; is null or &lt;code&gt;dstmax&lt;/code&gt; is zero or greater than &lt;code&gt;RSIZE_MAX&lt;/code&gt;)</source>
          <target state="translated">2) cero en caso de &amp;eacute;xito (en cuyo caso el n&amp;uacute;mero de caracteres anchos, excluyendo el cero final que fueron, o se escribir&amp;iacute;an en &lt;code&gt;dst&lt;/code&gt; , se almacena en &lt;code&gt;*retval&lt;/code&gt; ), no cero en caso de error. En caso de una violaci&amp;oacute;n de restricci&amp;oacute;n de tiempo de ejecuci&amp;oacute;n, almacena &lt;code&gt;(&lt;a href=&quot;../../types/size_t&quot;&gt;size_t&lt;/a&gt;)-1&lt;/code&gt; en &lt;code&gt;*retval&lt;/code&gt; (a menos que &lt;code&gt;retval&lt;/code&gt; sea ​​nulo) y establezca &lt;code&gt;dst[0]&lt;/code&gt; en &lt;code&gt;L'\0'&lt;/code&gt; (a menos que &lt;code&gt;dst&lt;/code&gt; sea ​​nulo o &lt;code&gt;dstmax&lt;/code&gt; sea ​​cero o mayor que &lt;code&gt;RSIZE_MAX&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b515ed12286378e0786143a5319bc690afc9895b" translate="yes" xml:space="preserve">
          <source>2) zero on success (in which case the string representation of time has been written out to the array pointed to by &lt;code&gt;buffer&lt;/code&gt;), or non-zero on failure (in which case, the terminating null character is always written to &lt;code&gt;buffer[0]&lt;/code&gt; unless &lt;code&gt;buffer&lt;/code&gt; is a null pointer or &lt;code&gt;bufsz&lt;/code&gt; is zero or greater than RSIZE_MAX.</source>
          <target state="translated">2) cero en caso de &amp;eacute;xito (en cuyo caso, la representaci&amp;oacute;n de cadena de tiempo se ha escrito en la matriz a la que apunta el &lt;code&gt;buffer&lt;/code&gt; ), o no cero en caso de error (en cuyo caso, el car&amp;aacute;cter nulo de terminaci&amp;oacute;n siempre se escribe en el &lt;code&gt;buffer[0]&lt;/code&gt; a menos que el &lt;code&gt;buffer&lt;/code&gt; sea ​​un puntero nulo o que &lt;code&gt;bufsz&lt;/code&gt; sea ​​cero o mayor que RSIZE_MAX.</target>
        </trans-unit>
        <trans-unit id="802b39deab785fd2a26d4ecf259607d610fada68" translate="yes" xml:space="preserve">
          <source>2) zero on success, in which case the multibyte representation of &lt;code&gt;wc&lt;/code&gt; is stored in &lt;code&gt;s&lt;/code&gt; and its length is stored in &lt;code&gt;*status&lt;/code&gt;, or, if &lt;code&gt;s&lt;/code&gt; is null, the shift sequence status is stored in &lt;code&gt;status&lt;/code&gt;). Non-zero on encoding error or runtime constraint violation, in which case &lt;code&gt;(&lt;a href=&quot;../../types/size_t&quot;&gt;size_t&lt;/a&gt;)-1&lt;/code&gt; is stored in &lt;code&gt;*status&lt;/code&gt;. The value stored in &lt;code&gt;*status&lt;/code&gt; never exceeds &lt;code&gt;MB_CUR_MAX&lt;/code&gt;</source>
          <target state="translated">2) cero en caso de &amp;eacute;xito, en cuyo caso la representaci&amp;oacute;n multibyte de &lt;code&gt;wc&lt;/code&gt; se almacena en &lt;code&gt;s&lt;/code&gt; y su longitud se almacena en &lt;code&gt;*status&lt;/code&gt; o, si &lt;code&gt;s&lt;/code&gt; es nulo, el estado de la secuencia de cambio se almacena en &lt;code&gt;status&lt;/code&gt; ). Error de codificaci&amp;oacute;n distinto de cero o violaci&amp;oacute;n de restricci&amp;oacute;n de tiempo de ejecuci&amp;oacute;n, en cuyo caso &lt;code&gt;(&lt;a href=&quot;../../types/size_t&quot;&gt;size_t&lt;/a&gt;)-1&lt;/code&gt; se almacena en &lt;code&gt;*status&lt;/code&gt; . El valor almacenado en &lt;code&gt;*status&lt;/code&gt; nunca excede &lt;code&gt;MB_CUR_MAX&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f14227c0853cfbd0b1c1b4fdb388fc5f15ba00be" translate="yes" xml:space="preserve">
          <source>2) zero on success, non-zero if a runtime constraints violation was detected</source>
          <target state="translated">2)cero en el éxito,no cero si se detecta una violación de las restricciones de tiempo de ejecución</target>
        </trans-unit>
        <trans-unit id="aefb6adf652cac14b2acf90c28f81954f307190b" translate="yes" xml:space="preserve">
          <source>2) zero on success, non-zero on error. Also on error, if &lt;code&gt;dest&lt;/code&gt; is not a null pointer and &lt;code&gt;destsz&lt;/code&gt; is valid, writes &lt;code&gt;destsz&lt;/code&gt; fill bytes &lt;code&gt;ch&lt;/code&gt; to the destination array.</source>
          <target state="translated">2) cero en caso de &amp;eacute;xito, no cero en caso de error. Tambi&amp;eacute;n en caso de error, si &lt;code&gt;dest&lt;/code&gt; no es un puntero nulo y &lt;code&gt;destsz&lt;/code&gt; es v&amp;aacute;lido, escribe &lt;code&gt;destsz&lt;/code&gt; fill bytes &lt;code&gt;ch&lt;/code&gt; en la matriz de destino.</target>
        </trans-unit>
        <trans-unit id="829fa46fb637f3df06b12dce694dd672b04e44c4" translate="yes" xml:space="preserve">
          <source>2) zero on success, non-zero on failure, in which case &lt;code&gt;buf[0]&lt;/code&gt; is set to zero (unless &lt;code&gt;buf&lt;/code&gt; is a null pointer or &lt;code&gt;bufsz&lt;/code&gt; is zero or greater than &lt;code&gt;RSIZE_MAX&lt;/code&gt;).</source>
          <target state="translated">2) cero en caso de &amp;eacute;xito, no cero en caso de fallo, en cuyo caso &lt;code&gt;buf[0]&lt;/code&gt; se establece en cero (a menos que &lt;code&gt;buf&lt;/code&gt; sea ​​un puntero nulo o &lt;code&gt;bufsz&lt;/code&gt; sea ​​cero o mayor que &lt;code&gt;RSIZE_MAX&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="405efe28a8f5bd51960417b6aaba5705c8199d4b" translate="yes" xml:space="preserve">
          <source>2)&lt;a href=&quot;continue&quot;&gt;continue&lt;/a&gt; statement</source>
          <target state="translated">2) &lt;a href=&quot;continue&quot;&gt;continuar&lt;/a&gt; declaraci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="9e90011fcacb9996488d9b4a73af2e39d9f91399" translate="yes" xml:space="preserve">
          <source>2)&lt;a href=&quot;conversion#Default_argument_promotions&quot;&gt;Default argument promotions&lt;/a&gt; are performed on every argument expression.</source>
          <target state="translated">2) Las &lt;a href=&quot;conversion#Default_argument_promotions&quot;&gt;promociones de argumento predeterminadas&lt;/a&gt; se realizan en cada expresi&amp;oacute;n de argumento.</target>
        </trans-unit>
        <trans-unit id="e7e98d5ad0f8903f076205ea9692b5296340016c" translate="yes" xml:space="preserve">
          <source>2)&lt;a href=&quot;do&quot;&gt;do-while&lt;/a&gt; loop</source>
          <target state="translated">2) bucle &lt;a href=&quot;do&quot;&gt;do-&lt;/a&gt; while</target>
        </trans-unit>
        <trans-unit id="eab9ae9710f3df51c477c8fc8eba1535e4579efb" translate="yes" xml:space="preserve">
          <source>2)&lt;a href=&quot;if&quot;&gt;if&lt;/a&gt; statement with an else clause</source>
          <target state="translated">2) &lt;a href=&quot;if&quot;&gt;si la&lt;/a&gt; declaraci&amp;oacute;n con una cl&amp;aacute;usula else</target>
        </trans-unit>
        <trans-unit id="ea9c2e4c31b566c508333139ebb8aebc89c4fef4" translate="yes" xml:space="preserve">
          <source>2)&lt;a href=&quot;operator_alternative&quot;&gt;Trigraph sequences&lt;/a&gt; are replaced by corresponding single-character representations.</source>
          <target state="translated">2) &lt;a href=&quot;operator_alternative&quot;&gt;Las secuencias trigr&amp;aacute;ficas&lt;/a&gt; se reemplazan por representaciones de un solo car&amp;aacute;cter correspondientes.</target>
        </trans-unit>
        <trans-unit id="eb3e9785854e958e1ddcaa6bf0e41e71477971c5" translate="yes" xml:space="preserve">
          <source>2)&lt;code&gt;static&lt;/code&gt;&lt;code&gt;volatile&lt;/code&gt; objects of type &lt;code&gt;&lt;a href=&quot;../program/sig_atomic_t&quot;&gt;sig_atomic_t&lt;/a&gt;&lt;/code&gt; are used for communication with &lt;code&gt;&lt;a href=&quot;../program/signal&quot;&gt;signal&lt;/a&gt;&lt;/code&gt; handlers.</source>
          <target state="translated">2) &lt;code&gt;volatile&lt;/code&gt; objetos vol&amp;aacute;tiles &lt;code&gt;static&lt;/code&gt; de tipo &lt;code&gt;&lt;a href=&quot;../program/sig_atomic_t&quot;&gt;sig_atomic_t&lt;/a&gt;&lt;/code&gt; se utilizan para la comunicaci&amp;oacute;n con manejadores de &lt;code&gt;&lt;a href=&quot;../program/signal&quot;&gt;signal&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ccbc1bba81b28ef9c3dc15ca80a9ef2fa5bf6618" translate="yes" xml:space="preserve">
          <source>2*arg</source>
          <target state="translated">2*arg</target>
        </trans-unit>
        <trans-unit id="2994817287f5113c2c93461c53ebec8f3635c2b8" translate="yes" xml:space="preserve">
          <source>2.1.1.2 Translation phases</source>
          <target state="translated">2.1.1.2 Fases de traducción</target>
        </trans-unit>
        <trans-unit id="cc32c9ee3c93f145dc4db3af7ca9df1471944ed4" translate="yes" xml:space="preserve">
          <source>2.2.1 Character sets</source>
          <target state="translated">2.2.1 Conjuntos de caracteres</target>
        </trans-unit>
        <trans-unit id="e1ff3d5aafd1e9fd983949643b6e122f7bcf5e45" translate="yes" xml:space="preserve">
          <source>2.2.2 Character display semantics</source>
          <target state="translated">2.2.2 Semántica de visualización de caracteres</target>
        </trans-unit>
        <trans-unit id="e1679ba522ffcdb1dab3a33259b60785779298cf" translate="yes" xml:space="preserve">
          <source>2.2.4.1 Translation limits</source>
          <target state="translated">2.2.4.1 Límites de traducción</target>
        </trans-unit>
        <trans-unit id="7eb05f281d790790f78faabeb621483c68bf74dd" translate="yes" xml:space="preserve">
          <source>2i</source>
          <target state="translated">2i</target>
        </trans-unit>
        <trans-unit id="77de68daecd823babbb58edb1c8e14d7106e83bb" translate="yes" xml:space="preserve">
          <source>3</source>
          <target state="translated">3</target>
        </trans-unit>
        <trans-unit id="266c2b8b573d0a0d612140e53720836d812e3f6d" translate="yes" xml:space="preserve">
          <source>3) 16-bit wide string literal: The type of the literal is &lt;code&gt;char16_t[N]&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt; is the size of the string in code units of implementation-defined 16-bit encoding (typically UTF-16), including the null terminator. Each &lt;code&gt;char16_t&lt;/code&gt; element in the array is initialized as if by executing &lt;code&gt;&lt;a href=&quot;../string/multibyte/mbrtoc16&quot;&gt;mbrtoc16&lt;/a&gt;&lt;/code&gt; in implementation-defined locale.</source>
          <target state="translated">3) &lt;code&gt;char16_t[N]&lt;/code&gt; cadena ancha de 16 bits: el tipo del literal es char16_t [N] , donde &lt;code&gt;N&lt;/code&gt; es el tama&amp;ntilde;o de la cadena en unidades de c&amp;oacute;digo de codificaci&amp;oacute;n de 16 bits definida por la implementaci&amp;oacute;n (generalmente UTF-16), incluido el terminador nulo . Cada elemento &lt;code&gt;char16_t&lt;/code&gt; de la matriz se inicializa como si se ejecutara &lt;code&gt;&lt;a href=&quot;../string/multibyte/mbrtoc16&quot;&gt;mbrtoc16&lt;/a&gt;&lt;/code&gt; en un entorno local definido por la implementaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="3b6cf36c871a0884959965e2b31a0a8f8a9799d9" translate="yes" xml:space="preserve">
          <source>3) 32-bit wide character constant, e.g. &lt;code&gt;U'貓'&lt;/code&gt; or &lt;code&gt;U'🍌'&lt;/code&gt;. Such constant has type &lt;code&gt;char32_t&lt;/code&gt; and a value equal to the value of c-char in in the 32-bit encoding produced by &lt;code&gt;&lt;a href=&quot;../string/multibyte/mbrtoc32&quot;&gt;mbrtoc32&lt;/a&gt;&lt;/code&gt; (normally UTF-32). If c-char is not representable or maps to more than one 32-bit character, the behavior is implementation-defined.</source>
          <target state="translated">3) Constante de caracteres anchos de 32 bits, por ejemplo, &lt;code&gt;U'貓'&lt;/code&gt; o &lt;code&gt;U'🍌'&lt;/code&gt; . Dicha constante tiene el tipo &lt;code&gt;char32_t&lt;/code&gt; y un valor igual al valor de c-char en la codificaci&amp;oacute;n de 32 bits producida por &lt;code&gt;&lt;a href=&quot;../string/multibyte/mbrtoc32&quot;&gt;mbrtoc32&lt;/a&gt;&lt;/code&gt; (normalmente UTF-32). Si c-char no es representable o se asigna a m&amp;aacute;s de un car&amp;aacute;cter de 32 bits, el comportamiento est&amp;aacute; definido por la implementaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="b2693e421cb959cf47981e03486f30a94904f4d2" translate="yes" xml:space="preserve">
          <source>3) All identifiers that begin with an underscore followed by a capital letter or by another underscore (these reserved identifiers allow the library to use numerous behind-the-scenes non-external macros and functions)</source>
          <target state="translated">3)Todos los identificadores que comienzan con un guión bajo seguido de una letra mayúscula o de otro guión bajo (estos identificadores reservados permiten a la biblioteca utilizar numerosas funciones y macros no externas entre bastidores)</target>
        </trans-unit>
        <trans-unit id="72455795a2eb56051b09bfa5eae38d55c9855cf4" translate="yes" xml:space="preserve">
          <source>3) At the end of this phase, all preprocessor directives are removed from the source.</source>
          <target state="translated">3)Al final de esta fase,todas las directivas del preprocesador se eliminan de la fuente.</target>
        </trans-unit>
        <trans-unit id="29b20ad2c249b860f2be6a356e8c47c77a48deb5" translate="yes" xml:space="preserve">
          <source>3) Computes the length of the untruncated locale-specific error message that &lt;code&gt;strerror_s&lt;/code&gt; would write if it were called with &lt;code&gt;errnum&lt;/code&gt;. The length does not include the null terminator. As with all bounds-checked functions, &lt;code&gt;strerror_s&lt;/code&gt; and &lt;code&gt;strerrorlen_s&lt;/code&gt; are only guaranteed to be available if &lt;code&gt;__STDC_LIB_EXT1__&lt;/code&gt; is defined by the implementation and if the user defines &lt;code&gt;__STDC_WANT_LIB_EXT1__&lt;/code&gt; to the integer constant 1 before including &lt;code&gt;string.h&lt;/code&gt;.</source>
          <target state="translated">3) Calcula la longitud del mensaje de error espec&amp;iacute;fico de la localidad no &lt;code&gt;strerror_s&lt;/code&gt; que strerror_s escribir&amp;iacute;a si se llamara con &lt;code&gt;errnum&lt;/code&gt; . La longitud no incluye el terminador nulo. Al igual que con todos los l&amp;iacute;mites-controladas funciones, &lt;code&gt;strerror_s&lt;/code&gt; y &lt;code&gt;strerrorlen_s&lt;/code&gt; solamente est&amp;aacute;n garantizados para estar disponible si &lt;code&gt;__STDC_LIB_EXT1__&lt;/code&gt; se define por la aplicaci&amp;oacute;n y si los define el usuario &lt;code&gt;__STDC_WANT_LIB_EXT1__&lt;/code&gt; a la constante de n&amp;uacute;mero entero 1 antes de incluir &lt;code&gt;string.h&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dd43cfb78903d5f1a897dd65a271db3a4ca8daeb" translate="yes" xml:space="preserve">
          <source>3) Declarator for VLA of unspecified size (can appear in function prototype scope only) where</source>
          <target state="translated">3)Declarador para VLA de tamaño no especificado (puede aparecer sólo en el ámbito del prototipo de función)donde</target>
        </trans-unit>
        <trans-unit id="6a672345c7d337689c23d38a65427bcf157b8fcc" translate="yes" xml:space="preserve">
          <source>3) Default label in a &lt;a href=&quot;switch&quot;&gt;switch&lt;/a&gt; statement.</source>
          <target state="translated">3) Etiqueta predeterminada en una declaraci&amp;oacute;n de &lt;a href=&quot;switch&quot;&gt;cambio&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d57dfef2b908cf6b7099061e9a9eaa3db4c55d12" translate="yes" xml:space="preserve">
          <source>3) Expands to a value that can be used to initialize an object of type &lt;code&gt;once_flag&lt;/code&gt;.</source>
          <target state="translated">3) Se expande a un valor que puede usarse para inicializar un objeto de tipo &lt;code&gt;once_flag&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5bc955c645fb332677115a707fbd7e2c319b470e" translate="yes" xml:space="preserve">
          <source>3) Hexadecimal integer constant (base 16, the first digit is the most significant, the letters 'a' through 'f' represent the decimal values 10 through 15).</source>
          <target state="translated">3)Constante entera hexadecimal (base 16,el primer dígito es el más significativo,las letras de la &quot;a&quot; a la &quot;f&quot; representan los valores decimales del 10 al 15).</target>
        </trans-unit>
        <trans-unit id="5ea77eaabad761a7cf22bc8a47a9406df1bc77c4" translate="yes" xml:space="preserve">
          <source>3) If &lt;code&gt;bufsz&lt;/code&gt; is greater than zero, writes the results to a wide string &lt;code&gt;buffer&lt;/code&gt;. At most &lt;code&gt;bufsz-1&lt;/code&gt; wide characters are written followed by null wide character. If &lt;code&gt;bufsz&lt;/code&gt; is zero, nothing is written (and &lt;code&gt;buffer&lt;/code&gt; may be a null pointer), however the return value (number of wide characters that would be written) is still calculated and returned.</source>
          <target state="translated">3) Si &lt;code&gt;bufsz&lt;/code&gt; es mayor que cero, escribe los resultados en un &lt;code&gt;buffer&lt;/code&gt; cadena ancha . A lo sumo, se &lt;code&gt;bufsz-1&lt;/code&gt; caracteres anchos bufsz-1 seguidos de caracteres anchos nulos. Si &lt;code&gt;bufsz&lt;/code&gt; es cero, no se escribe nada (y el &lt;code&gt;buffer&lt;/code&gt; puede ser un puntero nulo), sin embargo, el valor de retorno (n&amp;uacute;mero de caracteres anchos que se escribir&amp;iacute;an) a&amp;uacute;n se calcula y se devuelve.</target>
        </trans-unit>
        <trans-unit id="ab655fee316e27400bec8121994a361b2d320ee2" translate="yes" xml:space="preserve">
          <source>3) Informs the compiler that multiplication, division, and absolute value of complex numbers may use simplified mathematical formulas (x+iy)&amp;times;(u+iv) = (xu-yv)+i(yu+xv), (x+iy)/(u+iv) = [(xu+yv)+i(yu-xv)]/(u2</source>
          <target state="translated">3) Informa al compilador que la multiplicaci&amp;oacute;n, divisi&amp;oacute;n y valor absoluto de n&amp;uacute;meros complejos pueden usar f&amp;oacute;rmulas matem&amp;aacute;ticas simplificadas (x + iy) &amp;times; (u + iv) = (xu-yv) + i (yu + xv), (x + iy ) / (u + iv) = [(xu + yv) + i (yu-xv)] / (u2</target>
        </trans-unit>
        <trans-unit id="ace3fd4e44cb1887db1aa3437a5b5d2746fc7edf" translate="yes" xml:space="preserve">
          <source>3) Length (not including the null terminator) of the message that &lt;code&gt;strerror_s&lt;/code&gt; would return</source>
          <target state="translated">3) Longitud (sin incluir el terminador nulo) del mensaje que &lt;code&gt;strerror_s&lt;/code&gt; devolver&amp;iacute;a</target>
        </trans-unit>
        <trans-unit id="0293ac9d2bf02d3b0bda679f186ef51e3cb43b49" translate="yes" xml:space="preserve">
          <source>3) Member names: all identifiers declared as members of any one &lt;a href=&quot;struct&quot;&gt;struct&lt;/a&gt; or &lt;a href=&quot;union&quot;&gt;union&lt;/a&gt;. Every struct and union introduces its own name space of this kind.</source>
          <target state="translated">3) Nombres de miembros: todos los identificadores declarados como miembros de cualquier &lt;a href=&quot;struct&quot;&gt;estructura&lt;/a&gt; o &lt;a href=&quot;union&quot;&gt;uni&amp;oacute;n&lt;/a&gt; . Cada estructura y uni&amp;oacute;n introduce su propio espacio de nombres de este tipo.</target>
        </trans-unit>
        <trans-unit id="de88b82b934b0dc3a57bd49380a6dbc407b3d266" translate="yes" xml:space="preserve">
          <source>3) Newlines are kept, and it's implementation-defined whether non-newline whitespace sequences may be collapsed into single space characters.</source>
          <target state="translated">3)Se mantienen las nuevas líneas,y se define la implementación si las secuencias de espacios en blanco no nuevas pueden ser colapsadas en caracteres de un solo espacio.</target>
        </trans-unit>
        <trans-unit id="4992765e27fb99e6f3fbdd2ac617b21f20f92375" translate="yes" xml:space="preserve">
          <source>3) Number of wide characters written (not counting the terminating null wide character) if successful or negative value if an encoding error occurred or if the number of characters to be generated was equal or greater than &lt;code&gt;size&lt;/code&gt; (including when &lt;code&gt;size&lt;/code&gt; is zero).</source>
          <target state="translated">3) N&amp;uacute;mero de caracteres anchos escritos (sin contar el car&amp;aacute;cter ancho nulo final) si el valor es exitoso o negativo si se produjo un error de codificaci&amp;oacute;n o si el n&amp;uacute;mero de caracteres que se generar&amp;aacute;n fue igual o mayor que el &lt;code&gt;size&lt;/code&gt; (incluso cuando el &lt;code&gt;size&lt;/code&gt; es cero).</target>
        </trans-unit>
        <trans-unit id="eb396cac1b027057cf81569a74313b294cbd6939" translate="yes" xml:space="preserve">
          <source>3) Otherwise, if one operand is &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;float &lt;a href=&quot;../numeric/complex/complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;float &lt;a href=&quot;../numeric/complex/imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt;, the other operand is implicitly converted as follows:</source>
          <target state="translated">3) En caso contrario, si un operando es &lt;code&gt;float&lt;/code&gt; , &lt;code&gt;float &lt;a href=&quot;../numeric/complex/complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; , o &lt;code&gt;float &lt;a href=&quot;../numeric/complex/imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt; , el otro operando est&amp;aacute; impl&amp;iacute;citamente convierte como sigue:</target>
        </trans-unit>
        <trans-unit id="c7d707443d59ff2127ac1eea8be2ee1742850b04" translate="yes" xml:space="preserve">
          <source>3) Performs a &lt;a href=&quot;conversion&quot;&gt;conversion&lt;/a&gt; from the result of the evaluation to the</source>
          <target state="translated">3) Realiza una &lt;a href=&quot;conversion&quot;&gt;conversi&amp;oacute;n&lt;/a&gt; del resultado de la evaluaci&amp;oacute;n al</target>
        </trans-unit>
        <trans-unit id="82bee8266b37e716412421d4bc6f9b3049ba3d7c" translate="yes" xml:space="preserve">
          <source>3) Reads the data from null-terminated character string &lt;code&gt;buffer&lt;/code&gt;. Reaching the end of the string is equivalent to reaching the end-of-file condition for &lt;code&gt;fscanf&lt;/code&gt;</source>
          <target state="translated">3) Lee los datos del &lt;code&gt;buffer&lt;/code&gt; cadena de caracteres con terminaci&amp;oacute;n nula . Llegar al final de la cadena es equivalente a alcanzar la condici&amp;oacute;n de fin de archivo para &lt;code&gt;fscanf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ab3574d0b68587f3cf85948d03f166d82c963385" translate="yes" xml:space="preserve">
          <source>3) Reads the data from null-terminated wide string &lt;code&gt;buffer&lt;/code&gt;. Reaching the end of the string is equivalent to reaching the end-of-file condition for &lt;code&gt;fwscanf&lt;/code&gt;</source>
          <target state="translated">3) Lee los datos del &lt;code&gt;buffer&lt;/code&gt; cadena ancha terminado en nulo . Llegar al final de la cadena es equivalente a alcanzar la condici&amp;oacute;n de fin de archivo para &lt;code&gt;fwscanf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b49c7c43563cbc9d5c7264c765e736f5e16f959b" translate="yes" xml:space="preserve">
          <source>3) The &lt;code&gt;static&lt;/code&gt; specifier specifies both static storage duration (unless combined with &lt;code&gt;_Thread_local&lt;/code&gt;)(since C11) and internal linkage (unless used at block scope). It can be used with functions at file scope and with variables at both file and block scope, but not in function parameter lists.</source>
          <target state="translated">3) El especificador &lt;code&gt;static&lt;/code&gt; especifica la duraci&amp;oacute;n del almacenamiento est&amp;aacute;tico (a menos que se combine con &lt;code&gt;_Thread_local&lt;/code&gt; ) (desde C11) y la vinculaci&amp;oacute;n interna (a menos que se use en el alcance del bloque). Se puede usar con funciones en el alcance del archivo y con variables en el alcance del archivo y del bloque, pero no en las listas de par&amp;aacute;metros de funciones.</target>
        </trans-unit>
        <trans-unit id="98244fd6dd2cac4f83cbbb429d185521b36afc3e" translate="yes" xml:space="preserve">
          <source>3) The above rules apply as long as at least one allowable ordering of subexpressions permits such an unsequenced side-effect.</source>
          <target state="translated">3)Las normas anteriores se aplican siempre que al menos un ordenamiento permisible de subexpresiones permita tal efecto secundario no secuenciado.</target>
        </trans-unit>
        <trans-unit id="087de3f302ae38f32ae597b193180e09c580d936" translate="yes" xml:space="preserve">
          <source>3) The arguments are evaluated &lt;a href=&quot;eval_order&quot;&gt;in unspecified order and without sequencing&lt;/a&gt;.</source>
          <target state="translated">3) Los argumentos se eval&amp;uacute;an &lt;a href=&quot;eval_order&quot;&gt;en orden no especificado y sin secuenciaci&amp;oacute;n&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="99a25d1bfda3ab89fd10b1a019376ed17dbddf19" translate="yes" xml:space="preserve">
          <source>3) The buffer, which may be replaced by an external, user-provided buffer.</source>
          <target state="translated">3)La memoria intermedia,que puede ser sustituida por una memoria externa proporcionada por el usuario.</target>
        </trans-unit>
        <trans-unit id="b0108bb1e192b0832c95a18591ce8a43eef60903" translate="yes" xml:space="preserve">
          <source>3) There is a sequence point after evaluation of the first (left) operand and before evaluation of the second or third operand (whichever is evaluated) of the conditional operator &lt;code&gt;?:&lt;/code&gt;</source>
          <target state="translated">3) &amp;iquest;Existe un punto de secuencia despu&amp;eacute;s de la evaluaci&amp;oacute;n del primer operando (izquierdo) y antes de la evaluaci&amp;oacute;n del segundo o tercer operando (el que se eval&amp;uacute;a) del operador condicional &lt;code&gt;?:&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="295654c8321ff1ec4c4e8a96eac87a6e3ed5f21e" translate="yes" xml:space="preserve">
          <source>3) Writes the results to a character string &lt;code&gt;buffer&lt;/code&gt;.</source>
          <target state="translated">3) Escribe los resultados en un &lt;code&gt;buffer&lt;/code&gt; cadena de caracteres .</target>
        </trans-unit>
        <trans-unit id="5809fc7d6999ce52ea11ffe3db1d51ecc57a75e8" translate="yes" xml:space="preserve">
          <source>3) Writes the results to a character string &lt;code&gt;buffer&lt;/code&gt;. The behavior is undefined if the string to be written (plus the terminating null character) exceeds the size of the array pointed to by &lt;code&gt;buffer&lt;/code&gt;.</source>
          <target state="translated">3) Escribe los resultados en un &lt;code&gt;buffer&lt;/code&gt; cadena de caracteres . El comportamiento es indefinido si la cadena a escribir (m&amp;aacute;s el car&amp;aacute;cter nulo de terminaci&amp;oacute;n) excede el tama&amp;ntilde;o de la matriz a la que apunta el &lt;code&gt;buffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5d7e4c42a23c9ad0d074e4c713cf363915fb9a0" translate="yes" xml:space="preserve">
          <source>3) Writes the results to a wide string &lt;code&gt;buffer&lt;/code&gt;. At most &lt;code&gt;bufsz-1&lt;/code&gt; wide characters are written followed by null wide character. The resulting wide character string will be terminated with a null wide character, unless &lt;code&gt;bufsz&lt;/code&gt; is zero.</source>
          <target state="translated">3) Escribe los resultados en un &lt;code&gt;buffer&lt;/code&gt; cadena ancha . A lo sumo, se &lt;code&gt;bufsz-1&lt;/code&gt; caracteres anchos bufsz-1 seguidos de caracteres anchos nulos. La cadena de caracteres anchos resultante terminar&amp;aacute; con un car&amp;aacute;cter ancho nulo, a menos que &lt;code&gt;bufsz&lt;/code&gt; sea ​​cero.</target>
        </trans-unit>
        <trans-unit id="04a489ba555c6fcc3c9976d9b52269cfe1cff7db" translate="yes" xml:space="preserve">
          <source>3) bitwise OR</source>
          <target state="translated">3)Bitwise O</target>
        </trans-unit>
        <trans-unit id="7070b86841fe1b8f07d7b3d7a5f388f9fa62ddfb" translate="yes" xml:space="preserve">
          <source>3) identifier that follows the &lt;a href=&quot;operator_member_access&quot;&gt;member access&lt;/a&gt; or member access through pointer operator is looked up in the name space of members of the type determined by the left-hand operand of the member access operator.</source>
          <target state="translated">3) el identificador que sigue al &lt;a href=&quot;operator_member_access&quot;&gt;acceso de miembro&lt;/a&gt; o el acceso de miembro a trav&amp;eacute;s del operador de puntero se busca en el espacio de nombre de los miembros del tipo determinado por el operando de la izquierda del operador de acceso de miembro.</target>
        </trans-unit>
        <trans-unit id="8cd88d44e9c257314ba2d5ddf6d1513e401f7a2e" translate="yes" xml:space="preserve">
          <source>3) if the expressions are both void, the entire conditional operator expression is a void expression</source>
          <target state="translated">3)si ambas expresiones son nulas,toda la expresión del operador condicional es una expresión nula</target>
        </trans-unit>
        <trans-unit id="2de6178bd332c11188520b24f394b6a8d4c87064" translate="yes" xml:space="preserve">
          <source>3) less or equal expression</source>
          <target state="translated">3)expresión menor o igual</target>
        </trans-unit>
        <trans-unit id="f44c6c040dddb70ec82576ab6267822df142415a" translate="yes" xml:space="preserve">
          <source>3) number of characters written to &lt;code&gt;buffer&lt;/code&gt; (not counting the terminating null character), or a negative value if an encoding error (for string and character conversion specifiers) occurred</source>
          <target state="translated">3) n&amp;uacute;mero de caracteres escritos en el &lt;code&gt;buffer&lt;/code&gt; (sin contar el car&amp;aacute;cter nulo final), o un valor negativo si se produjo un error de codificaci&amp;oacute;n (para los especificadores de conversi&amp;oacute;n de caracteres y cadenas)</target>
        </trans-unit>
        <trans-unit id="42f13d0affb282d878d26225489ea73773609cf5" translate="yes" xml:space="preserve">
          <source>3) reads the data from null-terminated character string &lt;code&gt;buffer&lt;/code&gt;. Reaching the end of the string is equivalent to reaching the end-of-file condition for &lt;code&gt;fscanf&lt;/code&gt;</source>
          <target state="translated">3) lee los datos del &lt;code&gt;buffer&lt;/code&gt; cadena de caracteres con terminaci&amp;oacute;n nula . Llegar al final de la cadena es equivalente a alcanzar la condici&amp;oacute;n de fin de archivo para &lt;code&gt;fscanf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="88f00f853e307dbc21420f2431f69bd720529b43" translate="yes" xml:space="preserve">
          <source>3) remainder. lhs and rhs must have &lt;a href=&quot;arithmetic_types&quot;&gt;integer types&lt;/a&gt;</source>
          <target state="translated">3) resto. lhs y rhs deben tener &lt;a href=&quot;arithmetic_types&quot;&gt;tipos enteros&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0986437470f6ffae4dc9336b670e19309ac17169" translate="yes" xml:space="preserve">
          <source>3) selection statements</source>
          <target state="translated">3)declaraciones de selección</target>
        </trans-unit>
        <trans-unit id="e70e88b75520ba3b14d556e5e63d379c0f490d43" translate="yes" xml:space="preserve">
          <source>3) special case: &amp;amp; and * cancel each other, neither one is evaluated</source>
          <target state="translated">3) caso especial: &amp;amp; y * se cancelan entre s&amp;iacute;, ninguno de los dos es evaluado</target>
        </trans-unit>
        <trans-unit id="7712853cfa053b3e725230cb507b69f6db7d6baf" translate="yes" xml:space="preserve">
          <source>3) the error about to be returned by the calling function, if it happens to be one of the functions that return &lt;code&gt;errno_t&lt;/code&gt;</source>
          <target state="translated">3) el error a punto de ser devuelto por la funci&amp;oacute;n de llamada, si es una de las funciones que devuelve &lt;code&gt;errno_t&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bcee1e8a3478816b6de7145f029b94e945d5254b" translate="yes" xml:space="preserve">
          <source>3) the rank of any standard integer type is greater than the rank of any extended integer type of the same size (that is, rank of __int64 &amp;lt; rank of long long int, but rank of long long &amp;lt; rank of __int128 due to the rule (1))</source>
          <target state="translated">3) el rango de cualquier tipo entero est&amp;aacute;ndar es mayor que el rango de cualquier tipo entero extendido del mismo tama&amp;ntilde;o (es decir, rango de __int64 &amp;lt;rango de long long int, pero rango de long long &amp;lt;rango de __int128 debido a la regla (1))</target>
        </trans-unit>
        <trans-unit id="8ae0ffc38993d8d21256e9209dc22929644d9707" translate="yes" xml:space="preserve">
          <source>3)&lt;a href=&quot;for&quot;&gt;for&lt;/a&gt; loop</source>
          <target state="translated">3) &lt;a href=&quot;for&quot;&gt;para&lt;/a&gt; bucle</target>
        </trans-unit>
        <trans-unit id="bddf507414424214b896ab9e9051dea30ca769e4" translate="yes" xml:space="preserve">
          <source>3)&lt;a href=&quot;generic&quot;&gt;Generic selections&lt;/a&gt;</source>
          <target state="translated">3) &lt;a href=&quot;generic&quot;&gt;selecciones gen&amp;eacute;ricas&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="09be665a43ff233923d1e952627db38e76c238d5" translate="yes" xml:space="preserve">
          <source>3)&lt;a href=&quot;operator_assignment&quot;&gt;Assignment&lt;/a&gt;(until C11)&lt;a href=&quot;initialization&quot;&gt;Initialization&lt;/a&gt;(since C11) is performed to copy the value of each argument to the corresponding function parameter.</source>
          <target state="translated">3) &lt;a href=&quot;operator_assignment&quot;&gt;Asignaci&amp;oacute;n&lt;/a&gt; (hasta C11) La &lt;a href=&quot;initialization&quot;&gt;inicializaci&amp;oacute;n&lt;/a&gt; (desde C11) se realiza para copiar el valor de cada argumento en el par&amp;aacute;metro de funci&amp;oacute;n correspondiente.</target>
        </trans-unit>
        <trans-unit id="76a5aebbf4450e00e2a1852f7fc59763596ea344" translate="yes" xml:space="preserve">
          <source>3)&lt;a href=&quot;pointer&quot;&gt;pointer declarator&lt;/a&gt;: the declaration &lt;code&gt;S * cvr D&lt;/code&gt;; declares &lt;code&gt;D&lt;/code&gt; as a cvr-qualified pointer to the type determined by &lt;code&gt;S&lt;/code&gt;.</source>
          <target state="translated">3) &lt;a href=&quot;pointer&quot;&gt;declarador de puntero&lt;/a&gt; : la declaraci&amp;oacute;n &lt;code&gt;S * cvr D&lt;/code&gt; ; declara &lt;code&gt;D&lt;/code&gt; como un puntero CVR-calificado para el tipo determinado por &lt;code&gt;S&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="79fb62f404a5738654e316eeeab8c5ebe700960b" translate="yes" xml:space="preserve">
          <source>3)&lt;a href=&quot;return&quot;&gt;return&lt;/a&gt; statement with an optional expression</source>
          <target state="translated">3) declaraci&amp;oacute;n de &lt;a href=&quot;return&quot;&gt;retorno&lt;/a&gt; con una expresi&amp;oacute;n opcional</target>
        </trans-unit>
        <trans-unit id="c81e8c670bf9ead00a5d6c1c9fe196d08a965dd9" translate="yes" xml:space="preserve">
          <source>3)&lt;a href=&quot;switch&quot;&gt;switch&lt;/a&gt; statement</source>
          <target state="translated">3) declaraci&amp;oacute;n de &lt;a href=&quot;switch&quot;&gt;cambio&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="afe19fcba7ae0cdcb65b70484d85cfeb9cd02b6f" translate="yes" xml:space="preserve">
          <source>3)&lt;code&gt;volatile&lt;/code&gt; variables that are local to a function that contains an invocation of the &lt;code&gt;&lt;a href=&quot;../program/setjmp&quot;&gt;setjmp&lt;/a&gt;&lt;/code&gt; macro are the only local variables guaranteed to retain their values after &lt;code&gt;&lt;a href=&quot;../program/longjmp&quot;&gt;longjmp&lt;/a&gt;&lt;/code&gt; returns.</source>
          <target state="translated">3) &lt;code&gt;volatile&lt;/code&gt; variables vol&amp;aacute;tiles que son locales para una funci&amp;oacute;n que contiene una invocaci&amp;oacute;n de la macro &lt;code&gt;&lt;a href=&quot;../program/setjmp&quot;&gt;setjmp&lt;/a&gt;&lt;/code&gt; son las &amp;uacute;nicas variables locales garantizadas para retener sus valores despu&amp;eacute;s de que devuelve &lt;code&gt;&lt;a href=&quot;../program/longjmp&quot;&gt;longjmp&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b3436dbf6dcfedcb8aae6f43b748b15d781c38b" translate="yes" xml:space="preserve">
          <source>3.1 Lexical elements</source>
          <target state="translated">3.1 Elementos léxicos</target>
        </trans-unit>
        <trans-unit id="aa23d608ab598bf5c82cb15f916c962be2d3f1c1" translate="yes" xml:space="preserve">
          <source>3.1.1 Keywords</source>
          <target state="translated">3.1.1 Palabras clave</target>
        </trans-unit>
        <trans-unit id="35f2b78a7d39e51f2b229238eaac9dc19a3a8957" translate="yes" xml:space="preserve">
          <source>3.1.2 Identifiers</source>
          <target state="translated">3.1.2 Identificadores</target>
        </trans-unit>
        <trans-unit id="69bb3daff55b0aa6f139fdcfc0d1b561f9c73d8d" translate="yes" xml:space="preserve">
          <source>3.1.2.1 Scopes of identifiers</source>
          <target state="translated">3.1.2.1 Alcances de los identificadores</target>
        </trans-unit>
        <trans-unit id="053917ec57d4bb610630756c05366bafa4dc4a6f" translate="yes" xml:space="preserve">
          <source>3.1.2.2 Linkages of identifiers</source>
          <target state="translated">3.1.2.2 Vínculos de los identificadores</target>
        </trans-unit>
        <trans-unit id="c16e7d8c541e2fcda369edfebc9735f09af6f243" translate="yes" xml:space="preserve">
          <source>3.1.2.3 Name spaces of identifiers</source>
          <target state="translated">3.1.2.3 Espacios de nombre de los identificadores</target>
        </trans-unit>
        <trans-unit id="6ad4470b91e8cb6ef9aa189835b62494d6821bd5" translate="yes" xml:space="preserve">
          <source>3.1.2.4 Storage durations of objects</source>
          <target state="translated">3.1.2.4 Duración del almacenamiento de los objetos</target>
        </trans-unit>
        <trans-unit id="693ae4f49d6cb492368f42e0a653d007189f80e0" translate="yes" xml:space="preserve">
          <source>3.1.2.5 Types</source>
          <target state="translated">3.1.2.5 Tipos</target>
        </trans-unit>
        <trans-unit id="6e4a0687a12139db1517807b70a32a763a58b472" translate="yes" xml:space="preserve">
          <source>3.1.2.6 Compatible type and composite type</source>
          <target state="translated">3.1.2.6 Tipo compatible y tipo compuesto</target>
        </trans-unit>
        <trans-unit id="46d3abd3853f75316b2251ebeebf8565fb53a1ce" translate="yes" xml:space="preserve">
          <source>3.1.3.1 Floating constants</source>
          <target state="translated">3.1.3.1 Constantes flotantes</target>
        </trans-unit>
        <trans-unit id="49432d6d1c54f5c0e993d15db7428d4a32c726bf" translate="yes" xml:space="preserve">
          <source>3.1.3.2 Integer constants</source>
          <target state="translated">3.1.3.2 Constantes enteras</target>
        </trans-unit>
        <trans-unit id="38d2a99222e11d82ab3c7059149486bff4538b2e" translate="yes" xml:space="preserve">
          <source>3.1.3.4 Character constants</source>
          <target state="translated">3.1.3.4 Constantes de carácter</target>
        </trans-unit>
        <trans-unit id="009e43a6939dbd0e635e3626636d88e41f3c3926" translate="yes" xml:space="preserve">
          <source>3.1.4 String literals</source>
          <target state="translated">3.1.4 Literales de cuerda</target>
        </trans-unit>
        <trans-unit id="c83b17993430bc6414639087a7c16f3cca127e9e" translate="yes" xml:space="preserve">
          <source>3.1.9 Comments</source>
          <target state="translated">3.1.9 Comentarios</target>
        </trans-unit>
        <trans-unit id="1d3cd2d64ff696dd403e1b5b61d2545b717c75b5" translate="yes" xml:space="preserve">
          <source>3.14 memory location (p: 5)</source>
          <target state="translated">3.14 ubicación de la memoria (p:5)</target>
        </trans-unit>
        <trans-unit id="44f6c943165d32b1da0989e5035d03939edeeed4" translate="yes" xml:space="preserve">
          <source>3.14 object (p: 5)</source>
          <target state="translated">3.14 objeto (p:5)</target>
        </trans-unit>
        <trans-unit id="a8b713a7ab44f55836b09d74af0d4189af1abf3b" translate="yes" xml:space="preserve">
          <source>3.15 object (p: 6)</source>
          <target state="translated">3,15 objeto (p:6)</target>
        </trans-unit>
        <trans-unit id="cbf8f9e9df4ffc9461bbb22d125674a380a6099b" translate="yes" xml:space="preserve">
          <source>3.2 Conversions</source>
          <target state="translated">3.2 Conversiones</target>
        </trans-unit>
        <trans-unit id="867d71616611d1346c597166e6a33509b104fd76" translate="yes" xml:space="preserve">
          <source>3.2 alignment (p: 3)</source>
          <target state="translated">3.2 alineación (p:3)</target>
        </trans-unit>
        <trans-unit id="7128668c707a8c23be42f991f4b21ead64b568d4" translate="yes" xml:space="preserve">
          <source>3.2.2.1 Lvalues and function designators</source>
          <target state="translated">3.2.2.1 Valores y designadores de función</target>
        </trans-unit>
        <trans-unit id="1e4aab47ee4c5fed87a687344db69553cdc2ef06" translate="yes" xml:space="preserve">
          <source>3.3 EXPRESSIONS</source>
          <target state="translated">3.3 EXPRESIONES</target>
        </trans-unit>
        <trans-unit id="5ba67778c27000fb60aba8ee5b8fa080d6476d96" translate="yes" xml:space="preserve">
          <source>3.3.10 Bitwise AND operator</source>
          <target state="translated">3.3.10 Operador de Bitwise AND</target>
        </trans-unit>
        <trans-unit id="245fbf15c4e5116335baf25524423e4b14362299" translate="yes" xml:space="preserve">
          <source>3.3.11 Bitwise exclusive OR operator</source>
          <target state="translated">3.3.11 Operador de quirófano exclusivo de Bitwise</target>
        </trans-unit>
        <trans-unit id="671f55bc53c88c3c0adaa53dda6121e67acfc35a" translate="yes" xml:space="preserve">
          <source>3.3.12 Bitwise inclusive OR operator</source>
          <target state="translated">3.3.12 Operador de quirófano con inclusión de bits</target>
        </trans-unit>
        <trans-unit id="81f6c0f1537a5e52c6a8f60ff54ee31eb892193b" translate="yes" xml:space="preserve">
          <source>3.3.13 Logical AND operator</source>
          <target state="translated">3.3.13 Operador lógico Y</target>
        </trans-unit>
        <trans-unit id="b0ed3543f8231c3bab455b6193d443f0bba59d3e" translate="yes" xml:space="preserve">
          <source>3.3.14 Logical OR operator</source>
          <target state="translated">3.3.14 Operador lógico de quirófano</target>
        </trans-unit>
        <trans-unit id="a5dab4b48a06f39398ce9c3f44c37404b9cd649f" translate="yes" xml:space="preserve">
          <source>3.3.15 Conditional operator</source>
          <target state="translated">3.3.15 Operador condicional</target>
        </trans-unit>
        <trans-unit id="e2568624bafc6fc575edc3bd40d39cf349778cb1" translate="yes" xml:space="preserve">
          <source>3.3.16 Assignment operators</source>
          <target state="translated">3.3.16 Operadores de asignación</target>
        </trans-unit>
        <trans-unit id="2fb56ecae51be110565d70d098eaa63dcd633d8e" translate="yes" xml:space="preserve">
          <source>3.3.17 Comma operator</source>
          <target state="translated">3.3.17 Operador de coma</target>
        </trans-unit>
        <trans-unit id="8fad8b5742570f27e7d76575d000d851ed1025e0" translate="yes" xml:space="preserve">
          <source>3.3.2.1 Array subscripting</source>
          <target state="translated">3.3.2.1 Suscripción de matrices</target>
        </trans-unit>
        <trans-unit id="b30a05bbc8bba699fd34d0c538ea05d388506f8c" translate="yes" xml:space="preserve">
          <source>3.3.2.2 Function calls</source>
          <target state="translated">3.3.2.2 Llamadas de función</target>
        </trans-unit>
        <trans-unit id="37b578598525a526f46c0bc9cff22a80c55be73a" translate="yes" xml:space="preserve">
          <source>3.3.2.3 Structure and union members</source>
          <target state="translated">3.3.2.3 Estructura y miembros de la unión</target>
        </trans-unit>
        <trans-unit id="83b935639f53991d667857491ffe96b4b9ec7b24" translate="yes" xml:space="preserve">
          <source>3.3.2.4 Postfix increment and decrement operators</source>
          <target state="translated">3.3.2.4 Operadores de incremento y decremento de postfijo</target>
        </trans-unit>
        <trans-unit id="6a1f3964bb47c00a0313f5d1e24e75c55d3eb6cf" translate="yes" xml:space="preserve">
          <source>3.3.3.1 Prefix increment and decrement operators</source>
          <target state="translated">3.3.3.1 Operadores de incremento y disminución de prefijos</target>
        </trans-unit>
        <trans-unit id="c0fa37d710b7e31f2526aacb78104a801fbc700f" translate="yes" xml:space="preserve">
          <source>3.3.3.2 Address and indirection operators</source>
          <target state="translated">3.3.3.2 Operadores de dirección e indirectos</target>
        </trans-unit>
        <trans-unit id="d86e5c85cec88c41bbf84caeebe7ae700d5097de" translate="yes" xml:space="preserve">
          <source>3.3.3.3 Unary arithmetic operators</source>
          <target state="translated">3.3.3.3 Operadores aritméticos unitarios</target>
        </trans-unit>
        <trans-unit id="c8d89bb11e1be89a06d2ee545e6bf1657d18138a" translate="yes" xml:space="preserve">
          <source>3.3.3.4 The sizeof operator</source>
          <target state="translated">3.3.3.4 El tamaño del operador</target>
        </trans-unit>
        <trans-unit id="59361dc2a7cc51cec129447be682cf17fe15b17f" translate="yes" xml:space="preserve">
          <source>3.3.4 Cast operators</source>
          <target state="translated">3.3.4 Operadores de reparto</target>
        </trans-unit>
        <trans-unit id="36da0772702b6cd80542d8768c10faed0962a575" translate="yes" xml:space="preserve">
          <source>3.3.5 Multiplicative operators</source>
          <target state="translated">3.3.5 Operadores multiplicadores</target>
        </trans-unit>
        <trans-unit id="03f710804c2df0e833878cc8516e3fa73e052d6d" translate="yes" xml:space="preserve">
          <source>3.3.6 Additive operators</source>
          <target state="translated">3.3.6 Operadores de aditivos</target>
        </trans-unit>
        <trans-unit id="2e487adc7718096e68e3d672ae2ddf706204f757" translate="yes" xml:space="preserve">
          <source>3.3.7 Bitwise shift operators</source>
          <target state="translated">3.3.7 Operadores de cambio de bits</target>
        </trans-unit>
        <trans-unit id="333c3885b46c7f03c63150a6ce62e5cd85706955" translate="yes" xml:space="preserve">
          <source>3.3.8 Relational operators</source>
          <target state="translated">3.3.8 Operadores de relación</target>
        </trans-unit>
        <trans-unit id="ec41a6586c4f97c0dbe5f09344f06d840884277c" translate="yes" xml:space="preserve">
          <source>3.3.9 Equality operators</source>
          <target state="translated">3.3.9 Operadores de la igualdad</target>
        </trans-unit>
        <trans-unit id="10dbea6b4db6473daef948da832d6fe6def84bbc" translate="yes" xml:space="preserve">
          <source>3.4 Behavior (p: 3-4)</source>
          <target state="translated">3.4 Comportamiento (p:3-4)</target>
        </trans-unit>
        <trans-unit id="621a53d66b32379b698d08874e6e491ce1ee41d4" translate="yes" xml:space="preserve">
          <source>3.4 CONSTANT EXPRESSIONS</source>
          <target state="translated">3.4 EXPRESIONES CONSTANTES</target>
        </trans-unit>
        <trans-unit id="6f123c074dabed3b04908f1b204fa1b057f2c701" translate="yes" xml:space="preserve">
          <source>3.5 Declarations</source>
          <target state="translated">3.5 Declaraciones</target>
        </trans-unit>
        <trans-unit id="d02d8b23cc7cc0687bf094e6449e12f893cc4592" translate="yes" xml:space="preserve">
          <source>3.5.1 Storage-class specifiers</source>
          <target state="translated">3.5.1 Especificadores de la clase de almacenamiento</target>
        </trans-unit>
        <trans-unit id="4ea5468a9f777545da30f0aa50f3c66e64a9e29d" translate="yes" xml:space="preserve">
          <source>3.5.2.1 Structure and union specifiers</source>
          <target state="translated">3.5.2.1 Especificadores de estructura y unión</target>
        </trans-unit>
        <trans-unit id="cde3b08fffd8937ec2997b4294022e8d488c084d" translate="yes" xml:space="preserve">
          <source>3.5.2.2 Enumeration specifiers</source>
          <target state="translated">3.5.2.2 Especificadores de la enumeración</target>
        </trans-unit>
        <trans-unit id="66f6433b945e8bed23a00be202c9616504f5db74" translate="yes" xml:space="preserve">
          <source>3.5.3 Type qualifiers</source>
          <target state="translated">3.5.3 Tipo de calificador</target>
        </trans-unit>
        <trans-unit id="c9ef31821bf865df3a3c32ff038f42d3ad3c3e9f" translate="yes" xml:space="preserve">
          <source>3.5.4.1 Pointer declarators</source>
          <target state="translated">3.5.4.1 Declaradores de puntero</target>
        </trans-unit>
        <trans-unit id="91fc4de5c1c8638e96b45045217083b6e16b45b8" translate="yes" xml:space="preserve">
          <source>3.5.4.2 Array declarators</source>
          <target state="translated">3.5.4.2 Declaradores de la matriz</target>
        </trans-unit>
        <trans-unit id="9454a74b9fba2774496cc2714a24c180e161fcf4" translate="yes" xml:space="preserve">
          <source>3.5.4.3 Function declarators (including prototypes)</source>
          <target state="translated">3.5.4.3 Declaradores de función (incluidos los prototipos)</target>
        </trans-unit>
        <trans-unit id="5fa9d3cc8c91f86cc2fb8ed5538d29397114ac50" translate="yes" xml:space="preserve">
          <source>3.5.4.3/5 Function declarators (including prototypes)</source>
          <target state="translated">3.5.4.3/5 Declaradores de funciones (incluidos los prototipos)</target>
        </trans-unit>
        <trans-unit id="15c84b5f4ca339bcdebb101c9bb2208d258c2d05" translate="yes" xml:space="preserve">
          <source>3.5.6 Type definitions</source>
          <target state="translated">3.5.6 Definiciones de tipos</target>
        </trans-unit>
        <trans-unit id="92da4d9e083e0b6b8c4dbadb3d208f9d2930891f" translate="yes" xml:space="preserve">
          <source>3.6 STATEMENTS</source>
          <target state="translated">3.6 DECLARACIONES</target>
        </trans-unit>
        <trans-unit id="0da2b15a7f16be29e2c30b5ccc26f248b5beed38" translate="yes" xml:space="preserve">
          <source>3.6 byte (p: 4)</source>
          <target state="translated">3,6 byte (p:4)</target>
        </trans-unit>
        <trans-unit id="a04d8c10d5b6f12d5409f66240f68fea7f2967f3" translate="yes" xml:space="preserve">
          <source>3.6.4.1 The if statement</source>
          <target state="translated">3.6.4.1 La declaración de si</target>
        </trans-unit>
        <trans-unit id="84c405ff47c1823b1986d69a0317d3fc753b1a87" translate="yes" xml:space="preserve">
          <source>3.6.4.2 The switch statement</source>
          <target state="translated">3.6.4.2 La declaración del interruptor</target>
        </trans-unit>
        <trans-unit id="b184b74a9a3bd7e0ae3da1d9dc1ad66a2fd46cb6" translate="yes" xml:space="preserve">
          <source>3.6.5.1 The while statement</source>
          <target state="translated">3.6.5.1 La declaración de while</target>
        </trans-unit>
        <trans-unit id="8fe64ddeb6f75ed97b0c76292fbee6919273ce81" translate="yes" xml:space="preserve">
          <source>3.6.5.2 The do statement</source>
          <target state="translated">3.6.5.2 La declaración de do</target>
        </trans-unit>
        <trans-unit id="652267cefb5a361c6d9a10e587b8f9ac7c93d7f8" translate="yes" xml:space="preserve">
          <source>3.6.5.3 The for statement</source>
          <target state="translated">3.6.5.3 La declaración de for</target>
        </trans-unit>
        <trans-unit id="2fbb79f170ab9f4a8ce31d6ef2d123a9a454decc" translate="yes" xml:space="preserve">
          <source>3.6.6.1 The goto statement</source>
          <target state="translated">3.6.6.1 La declaración de Goto</target>
        </trans-unit>
        <trans-unit id="4989e665bf653d26d78e6bf2ca2ad1172e0eb834" translate="yes" xml:space="preserve">
          <source>3.6.6.2 The continue statement</source>
          <target state="translated">3.6.6.2 La declaración de continuar</target>
        </trans-unit>
        <trans-unit id="747e4fdc75c141d50d5270f9f02237dd0b9894f7" translate="yes" xml:space="preserve">
          <source>3.6.6.3 The break statement</source>
          <target state="translated">3.6.6.3 La declaración de ruptura</target>
        </trans-unit>
        <trans-unit id="96f4bfef731d39e6a5a0ade365aee094e5b8b8bf" translate="yes" xml:space="preserve">
          <source>3.6.6.4 The return statement</source>
          <target state="translated">3.6.6.4 La declaración de retorno</target>
        </trans-unit>
        <trans-unit id="fb53ee844dd1f04b882aee7b6e5b91e743eeea84" translate="yes" xml:space="preserve">
          <source>3.7 EXTERNAL DEFINITIONS</source>
          <target state="translated">3.7 DEFINICIONES EXTERNAS</target>
        </trans-unit>
        <trans-unit id="919b920bc34add8d1fa979a68f145fd0b5da394a" translate="yes" xml:space="preserve">
          <source>3.7.1 Function definitions</source>
          <target state="translated">3.7.1 Definiciones de la función</target>
        </trans-unit>
        <trans-unit id="a0760c0282abb1f6c104ef8913c4daa2ebb9965d" translate="yes" xml:space="preserve">
          <source>3.8 PREPROCESSING DIRECTIVES</source>
          <target state="translated">3.8 DIRECTIVAS DE PREPROCESAMIENTO</target>
        </trans-unit>
        <trans-unit id="479e1f767a55fb61f6833b4dea58c5816020bc97" translate="yes" xml:space="preserve">
          <source>3.8.1 Conditional inclusion</source>
          <target state="translated">3.8.1 Inclusión condicional</target>
        </trans-unit>
        <trans-unit id="4404fc10f9ba26fabfdb15bd4deea6e185402fd1" translate="yes" xml:space="preserve">
          <source>3.8.2 Source file inclusion</source>
          <target state="translated">3.8.2 Inclusión de archivos de origen</target>
        </trans-unit>
        <trans-unit id="5ce893f6c9ecd4a5dbe75cf7cf3a90948b11c8aa" translate="yes" xml:space="preserve">
          <source>3.8.3 Macro replacement</source>
          <target state="translated">3.8.3 Reemplazo del macro</target>
        </trans-unit>
        <trans-unit id="077e2c11d5f1e129e85fd9c2c15827ba00165988" translate="yes" xml:space="preserve">
          <source>3.8.4 Line control</source>
          <target state="translated">3.8.4 Control de la línea</target>
        </trans-unit>
        <trans-unit id="3a5172789b93cdbb5e63e2756004b632a0adf775" translate="yes" xml:space="preserve">
          <source>3.8.5 Error directive</source>
          <target state="translated">3.8.5 Directiva de errores</target>
        </trans-unit>
        <trans-unit id="12bec98cf661dbd4b72b014110dbed9268259826" translate="yes" xml:space="preserve">
          <source>3.8.6 Pragma directive</source>
          <target state="translated">3.8.6 Directiva Pragma</target>
        </trans-unit>
        <trans-unit id="539a2d888497fc54dadc01afdbe7ef1ee669face" translate="yes" xml:space="preserve">
          <source>3.8.8 Predefined macro names</source>
          <target state="translated">3.8.8 Nombres de macros predefinidos</target>
        </trans-unit>
        <trans-unit id="9bfad27ebb3e7aa32f85e15bc4734fc3cfedf0b8" translate="yes" xml:space="preserve">
          <source>31 significant initial characters in an external identifier</source>
          <target state="translated">31 caracteres iniciales significativos en un identificador externo</target>
        </trans-unit>
        <trans-unit id="dce46547e7a48e8acbf29462c258a56a5357b094" translate="yes" xml:space="preserve">
          <source>31 significant initial characters in an internal identifier or a macro name</source>
          <target state="translated">31 caracteres iniciales significativos en un identificador interno o un nombre de macro</target>
        </trans-unit>
        <trans-unit id="cb4e5208b4cd87268b208e49452ed6e89a68e0b8" translate="yes" xml:space="preserve">
          <source>32</source>
          <target state="translated">32</target>
        </trans-unit>
        <trans-unit id="06e6c1113c2f4580d7903420158b27e7b8a665dc" translate="yes" xml:space="preserve">
          <source>32 bit systems:</source>
          <target state="translated">Sistemas de 32 bits:</target>
        </trans-unit>
        <trans-unit id="089741c85f4bf039e8852907ba7ef67b37a404cd" translate="yes" xml:space="preserve">
          <source>32-bit wide character type</source>
          <target state="translated">Tipo de caracteres de 32 bits de ancho</target>
        </trans-unit>
        <trans-unit id="8d722ddc76a98c8bd0825292353d73caeec2bfca" translate="yes" xml:space="preserve">
          <source>33&amp;ndash;47</source>
          <target state="translated">33&amp;ndash;47</target>
        </trans-unit>
        <trans-unit id="1b6453892473a467d07372d45eb05abc2031647a" translate="yes" xml:space="preserve">
          <source>4</source>
          <target state="translated">4</target>
        </trans-unit>
        <trans-unit id="cd67d4bcff32d45711fc0c9f76515c5cdbaa93c3" translate="yes" xml:space="preserve">
          <source>4 Conformance (p: 7-8)</source>
          <target state="translated">4 Conformidad (p:7-8)</target>
        </trans-unit>
        <trans-unit id="9778299467a48895f04c6592b05bd1f73fad80a4" translate="yes" xml:space="preserve">
          <source>4 Conformance (p: 8-9)</source>
          <target state="translated">4 Conformidad (p:8-9)</target>
        </trans-unit>
        <trans-unit id="c4ba61ba8a5398897deba4f21a58252002daa2b5" translate="yes" xml:space="preserve">
          <source>4 LIBRARY</source>
          <target state="translated">4 BIBLIOTECA</target>
        </trans-unit>
        <trans-unit id="d8e96dd55455d60ce34fafac1d569222c1890081" translate="yes" xml:space="preserve">
          <source>4) 32-bit wide string literal: The type of the literal is &lt;code&gt;char32_t[N]&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt; is the size of the string in code units of implementation-defined 32-bit encoding (typically UTF-32), including the null terminator. Each &lt;code&gt;char32_t&lt;/code&gt; element in the array is initialized as if by executing &lt;code&gt;&lt;a href=&quot;../string/multibyte/mbrtoc32&quot;&gt;mbrtoc32&lt;/a&gt;&lt;/code&gt; in implementation-defined locale.</source>
          <target state="translated">4) literal de cadena de ancho de 32 bits: el tipo del literal es &lt;code&gt;char32_t[N]&lt;/code&gt; , donde &lt;code&gt;N&lt;/code&gt; es el tama&amp;ntilde;o de la cadena en unidades de c&amp;oacute;digo de codificaci&amp;oacute;n de 32 bits definida por la implementaci&amp;oacute;n (generalmente UTF-32), incluido el terminador nulo . Cada elemento &lt;code&gt;char32_t&lt;/code&gt; de la matriz se inicializa como si se ejecutara &lt;code&gt;&lt;a href=&quot;../string/multibyte/mbrtoc32&quot;&gt;mbrtoc32&lt;/a&gt;&lt;/code&gt; en un entorno local definido por la implementaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="61a00821ee36a8decdad7ae747b95cb632e17bd9" translate="yes" xml:space="preserve">
          <source>4) All external identifiers defined by the standard library (in hosted environment). This means that no user-supplied external names are allowed to match any library names, not even if declaring a function that is identical to a library function.</source>
          <target state="translated">4)Todos los identificadores externos definidos por la biblioteca estándar (en entorno alojado).Esto significa que no se permite que ningún nombre externo suministrado por el usuario coincida con ningún nombre de la biblioteca,ni siquiera si se declara una función que es idéntica a una función de la biblioteca.</target>
        </trans-unit>
        <trans-unit id="cdab1f245c751325e7566b1fe206dfefcaefa5b4" translate="yes" xml:space="preserve">
          <source>4) All other identifiers, called</source>
          <target state="translated">4)Todos los demás identificadores,llamados</target>
        </trans-unit>
        <trans-unit id="2350b87dbcb1d0a81491976620232316b99b2598" translate="yes" xml:space="preserve">
          <source>4) Function is executed, and the value it returns becomes the value of the function call expression (if the function returns void, the function call expression is a void expression)</source>
          <target state="translated">4)La función se ejecuta,y el valor que devuelve se convierte en el valor de la expresión de llamada de la función (si la función devuelve vacío,la expresión de llamada de la función es una expresión vacía)</target>
        </trans-unit>
        <trans-unit id="7eb38e23bbbfb5f8495a1647b223c0ca85fa4348" translate="yes" xml:space="preserve">
          <source>4) I/O mode: input, output, or update (both input and output).</source>
          <target state="translated">4)Modo E/S:entrada,salida o actualización (tanto de entrada como de salida).</target>
        </trans-unit>
        <trans-unit id="9074f5dbd5633608b3a29f3a861f1899d5ced878" translate="yes" xml:space="preserve">
          <source>4) In addition, volatile variables can be used to disable certain forms of optimization, e.g. to disable dead store elimination or constant folding for microbenchmarks.</source>
          <target state="translated">4)Además,las variables volátiles pueden utilizarse para desactivar ciertas formas de optimización,por ejemplo,para desactivar la eliminación de los almacenes muertos o el plegado constante de las micromarcas.</target>
        </trans-unit>
        <trans-unit id="d986890f2e5d0ce2f108ff350c5d122253bc2416" translate="yes" xml:space="preserve">
          <source>4) Otherwise, both operands are integers. In that case, First of all, both operands undergo</source>
          <target state="translated">4)Por lo demás,ambos operandos son enteros.En ese caso,en primer lugar,ambos operandos se someten</target>
        </trans-unit>
        <trans-unit id="b06acd39eb731c8675a54e7171445d587e271e97" translate="yes" xml:space="preserve">
          <source>4) The &lt;code&gt;extern&lt;/code&gt; specifier specifies static storage duration (unless combined with &lt;code&gt;_Thread_local&lt;/code&gt;)(since C11) and external linkage. It can be used with function and object declarations in both file and block scope (excluding function parameter lists). If &lt;code&gt;extern&lt;/code&gt; appears on a redeclaration of an identifier that was already declared with internal linkage, the linkage remains internal. Otherwise (if the prior declaration was external, no-linkage, or is not in scope), the linkage is external.</source>
          <target state="translated">4) El especificador &lt;code&gt;extern&lt;/code&gt; o especifica la duraci&amp;oacute;n del almacenamiento est&amp;aacute;tico (a menos que se combine con &lt;code&gt;_Thread_local&lt;/code&gt; ) (desde C11) y el enlace externo. Se puede usar con declaraciones de funciones y objetos en el alcance del archivo y del bloque (excluyendo las listas de par&amp;aacute;metros de funciones). Si &lt;code&gt;extern&lt;/code&gt; aparece en una redeclaraci&amp;oacute;n de un identificador que ya se declar&amp;oacute; con enlace interno, el enlace permanece interno. De lo contrario (si la declaraci&amp;oacute;n previa fue externa, sin vinculaci&amp;oacute;n o no est&amp;aacute; dentro del alcance), la vinculaci&amp;oacute;n es externa.</target>
        </trans-unit>
        <trans-unit id="727d7e12a4fb3e05a7633abcfa4c18bd53b4732a" translate="yes" xml:space="preserve">
          <source>4) The number of characters written if successful or negative value if an error occurred. If the resulting string gets truncated due to &lt;code&gt;buf_size&lt;/code&gt; limit, function returns the total number of characters (not including the terminating null-byte) which would have been written, if the limit was not imposed.</source>
          <target state="translated">4) El n&amp;uacute;mero de caracteres escritos si el valor es exitoso o negativo si ocurri&amp;oacute; un error. Si la cadena resultante se trunca debido al l&amp;iacute;mite de &lt;code&gt;buf_size&lt;/code&gt; , la funci&amp;oacute;n devuelve el n&amp;uacute;mero total de caracteres (sin incluir el byte nulo de terminaci&amp;oacute;n) que se habr&amp;iacute;an escrito si no se impusiera el l&amp;iacute;mite.</target>
        </trans-unit>
        <trans-unit id="831b4f844595f3594e52f73186d7764c10de8287" translate="yes" xml:space="preserve">
          <source>4) The number of wide characters written if successful or negative value if an error occurred. If the resulting string gets truncated due to &lt;code&gt;bufsz&lt;/code&gt; limit, function returns the total number of characters (not including the terminating null wide character) which would have been written, if the limit were not imposed.</source>
          <target state="translated">4) El n&amp;uacute;mero de caracteres anchos escritos si el valor es exitoso o negativo si ocurri&amp;oacute; un error. Si la cadena resultante se trunca debido al l&amp;iacute;mite de &lt;code&gt;bufsz&lt;/code&gt; , la funci&amp;oacute;n devuelve el n&amp;uacute;mero total de caracteres (sin incluir el car&amp;aacute;cter ancho nulo de terminaci&amp;oacute;n) que se habr&amp;iacute;a escrito si no se impusiera el l&amp;iacute;mite.</target>
        </trans-unit>
        <trans-unit id="90ee93cccda86447fccbdcf2b7eece99c8b69a57" translate="yes" xml:space="preserve">
          <source>4) There is a sequence point after the evaluation of a full expression (an expression that is not a subexpression: typically something that ends with a semicolon or a controlling statement of if/switch/while/do) and before the next full expression.</source>
          <target state="translated">4)Hay un punto de secuencia después de la evaluación de una expresión completa (una expresión que no es una subexpresión:típicamente algo que termina con un punto y coma o una declaración controladora de if/switch/while/do)y antes de la siguiente expresión completa.</target>
        </trans-unit>
        <trans-unit id="5c8c3b8b8f9cb107aff7b974376a8d21993c5377" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If &lt;code&gt;arg&lt;/code&gt; has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;cbrtl&lt;/code&gt; is called. Otherwise, if &lt;code&gt;arg&lt;/code&gt; has integer type or the type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;cbrt&lt;/code&gt; is called. Otherwise, &lt;code&gt;cbrtf&lt;/code&gt; is called.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;arg&lt;/code&gt; tiene un tipo &lt;code&gt;long double&lt;/code&gt; , se llama a &lt;code&gt;cbrtl&lt;/code&gt; . De lo contrario, si &lt;code&gt;arg&lt;/code&gt; tiene un tipo entero o el tipo &lt;code&gt;double&lt;/code&gt; , se llama a &lt;code&gt;cbrt&lt;/code&gt; . De lo contrario, se llama &lt;code&gt;cbrtf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bfa0b79abdfa71fa35ea31a5dcf5c5fb590cb813" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If &lt;code&gt;arg&lt;/code&gt; has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;ceill&lt;/code&gt; is called. Otherwise, if &lt;code&gt;arg&lt;/code&gt; has integer type or the type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;ceil&lt;/code&gt; is called. Otherwise, &lt;code&gt;ceilf&lt;/code&gt; is called.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;arg&lt;/code&gt; tiene tipo &lt;code&gt;long double&lt;/code&gt; , se llama a &lt;code&gt;ceill&lt;/code&gt; . De lo contrario, si &lt;code&gt;arg&lt;/code&gt; tiene un tipo entero o el tipo &lt;code&gt;double&lt;/code&gt; , se llama &lt;code&gt;ceil&lt;/code&gt; . De lo contrario, se llama &lt;code&gt;ceilf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b7be00b1a553ea64b81f1cd3e1b3669c536096cf" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If &lt;code&gt;arg&lt;/code&gt; has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;erfcl&lt;/code&gt; is called. Otherwise, if &lt;code&gt;arg&lt;/code&gt; has integer type or the type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;erfc&lt;/code&gt; is called. Otherwise, &lt;code&gt;erfcf&lt;/code&gt; is called.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;arg&lt;/code&gt; tiene un tipo &lt;code&gt;long double&lt;/code&gt; , se llama a &lt;code&gt;erfcl&lt;/code&gt; . De lo contrario, si &lt;code&gt;arg&lt;/code&gt; tiene un tipo entero o el tipo &lt;code&gt;double&lt;/code&gt; , se llama &lt;code&gt;erfc&lt;/code&gt; . De lo contrario, se llama &lt;code&gt;erfcf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5b3e6813f666bc2533e23dd0a7a4b9ab8d91e0c1" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If &lt;code&gt;arg&lt;/code&gt; has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;erfl&lt;/code&gt; is called. Otherwise, if &lt;code&gt;arg&lt;/code&gt; has integer type or the type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;erf&lt;/code&gt; is called. Otherwise, &lt;code&gt;erff&lt;/code&gt; is called.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;arg&lt;/code&gt; tiene un tipo &lt;code&gt;long double&lt;/code&gt; , se llama a &lt;code&gt;erfl&lt;/code&gt; . De lo contrario, si &lt;code&gt;arg&lt;/code&gt; tiene un tipo entero o el tipo &lt;code&gt;double&lt;/code&gt; , se llama &lt;code&gt;erf&lt;/code&gt; . De lo contrario, se llama &lt;code&gt;erff&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2086091599eb9ae9a6e611781c8ea07157f1282e" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If &lt;code&gt;arg&lt;/code&gt; has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;expl&lt;/code&gt; is called. Otherwise, if &lt;code&gt;arg&lt;/code&gt; has integer type or the type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;exp&lt;/code&gt; is called. Otherwise, &lt;code&gt;expf&lt;/code&gt; is called. If &lt;code&gt;arg&lt;/code&gt; is complex or imaginary, then the macro invokes the corresponding complex function (&lt;code&gt;&lt;a href=&quot;../complex/cexp&quot;&gt;cexpf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../complex/cexp&quot;&gt;cexp&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../complex/cexp&quot;&gt;cexpl&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;arg&lt;/code&gt; tiene un tipo &lt;code&gt;long double&lt;/code&gt; , se llama &lt;code&gt;expl&lt;/code&gt; . De lo contrario, si &lt;code&gt;arg&lt;/code&gt; tiene un tipo entero o el tipo &lt;code&gt;double&lt;/code&gt; , se llama a &lt;code&gt;exp&lt;/code&gt; . De lo contrario, se llama a &lt;code&gt;expf&lt;/code&gt; . Si &lt;code&gt;arg&lt;/code&gt; es complejo o imaginario, la macro invoca la funci&amp;oacute;n compleja correspondiente ( &lt;code&gt;&lt;a href=&quot;../complex/cexp&quot;&gt;cexpf&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../complex/cexp&quot;&gt;cexp&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../complex/cexp&quot;&gt;cexpl&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e0104a1e21a2395f2661d66ee4879235cf1acd4c" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If &lt;code&gt;arg&lt;/code&gt; has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;expm1l&lt;/code&gt; is called. Otherwise, if &lt;code&gt;arg&lt;/code&gt; has integer type or the type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;expm1&lt;/code&gt; is called. Otherwise, &lt;code&gt;expm1f&lt;/code&gt; is called.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;arg&lt;/code&gt; tiene un tipo &lt;code&gt;long double&lt;/code&gt; , se llama a &lt;code&gt;expm1l&lt;/code&gt; . De lo contrario, si &lt;code&gt;arg&lt;/code&gt; tiene un tipo entero o el tipo &lt;code&gt;double&lt;/code&gt; , se llama a &lt;code&gt;expm1&lt;/code&gt; . De lo contrario, se llama a &lt;code&gt;expm1f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3e562a9f4d84ca8fad2fb39b87dff3a3e05fd927" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If &lt;code&gt;arg&lt;/code&gt; has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;floorl&lt;/code&gt; is called. Otherwise, if &lt;code&gt;arg&lt;/code&gt; has integer type or the type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;floor&lt;/code&gt; is called. Otherwise, &lt;code&gt;floorf&lt;/code&gt; is called.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;arg&lt;/code&gt; tiene tipo &lt;code&gt;long double&lt;/code&gt; , se llama &lt;code&gt;floorl&lt;/code&gt; . De lo contrario, si &lt;code&gt;arg&lt;/code&gt; tiene un tipo entero o el tipo &lt;code&gt;double&lt;/code&gt; , se llama a &lt;code&gt;floor&lt;/code&gt; . De lo contrario, se llama &lt;code&gt;floorf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a280c0d25b78a477af01793894a8836c3d81ee24" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If &lt;code&gt;arg&lt;/code&gt; has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;frexpl&lt;/code&gt; is called. Otherwise, if &lt;code&gt;arg&lt;/code&gt; has integer type or the type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;frexp&lt;/code&gt; is called. Otherwise, &lt;code&gt;frexpf&lt;/code&gt; is called, respectively.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;arg&lt;/code&gt; tiene un tipo &lt;code&gt;long double&lt;/code&gt; , se llama a &lt;code&gt;frexpl&lt;/code&gt; . De lo contrario, si &lt;code&gt;arg&lt;/code&gt; tiene un tipo entero o el tipo &lt;code&gt;double&lt;/code&gt; , se llama a &lt;code&gt;frexp&lt;/code&gt; . De lo contrario, se llama a &lt;code&gt;frexpf&lt;/code&gt; , respectivamente.</target>
        </trans-unit>
        <trans-unit id="6a01dc2ec3688b33694a7fda78f3d4e446487fb7" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If &lt;code&gt;arg&lt;/code&gt; has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;ldexpl&lt;/code&gt; is called. Otherwise, if &lt;code&gt;arg&lt;/code&gt; has integer type or the type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;ldexp&lt;/code&gt; is called. Otherwise, &lt;code&gt;ldexpf&lt;/code&gt; is called, respectively.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;arg&lt;/code&gt; tiene un tipo &lt;code&gt;long double&lt;/code&gt; , se llama a &lt;code&gt;ldexpl&lt;/code&gt; . De lo contrario, si &lt;code&gt;arg&lt;/code&gt; tiene un tipo entero o el tipo &lt;code&gt;double&lt;/code&gt; , se llama a &lt;code&gt;ldexp&lt;/code&gt; . De lo contrario, se llama a &lt;code&gt;ldexpf&lt;/code&gt; , respectivamente.</target>
        </trans-unit>
        <trans-unit id="cf62b8c5b50f7b9e69a275fa855de83c405b0d15" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If &lt;code&gt;arg&lt;/code&gt; has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;lgammal&lt;/code&gt; is called. Otherwise, if &lt;code&gt;arg&lt;/code&gt; has integer type or the type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;lgamma&lt;/code&gt; is called. Otherwise, &lt;code&gt;lgammaf&lt;/code&gt; is called.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;arg&lt;/code&gt; tiene un tipo &lt;code&gt;long double&lt;/code&gt; , se llama a &lt;code&gt;lgammal&lt;/code&gt; . De lo contrario, si &lt;code&gt;arg&lt;/code&gt; tiene un tipo entero o el tipo &lt;code&gt;double&lt;/code&gt; , se llama a &lt;code&gt;lgamma&lt;/code&gt; . De lo contrario, se llama &lt;code&gt;lgammaf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="df5a295f826a1f89edb5472314e13ca3233bfcc8" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If &lt;code&gt;arg&lt;/code&gt; has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;log10l&lt;/code&gt; is called. Otherwise, if &lt;code&gt;arg&lt;/code&gt; has integer type or the type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;log10&lt;/code&gt; is called. Otherwise, &lt;code&gt;log10f&lt;/code&gt; is called.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;arg&lt;/code&gt; tiene un tipo &lt;code&gt;long double&lt;/code&gt; , se llama a &lt;code&gt;log10l&lt;/code&gt; . De lo contrario, si &lt;code&gt;arg&lt;/code&gt; tiene un tipo entero o el tipo &lt;code&gt;double&lt;/code&gt; , se llama a &lt;code&gt;log10&lt;/code&gt; . De lo contrario, se llama &lt;code&gt;log10f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1ec125396ad42df56eacb96ce4622e1e4fdacd03" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If &lt;code&gt;arg&lt;/code&gt; has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;log1pl&lt;/code&gt; is called. Otherwise, if &lt;code&gt;arg&lt;/code&gt; has integer type or the type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;log1p&lt;/code&gt; is called. Otherwise, &lt;code&gt;log1pf&lt;/code&gt; is called.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;arg&lt;/code&gt; tiene un tipo &lt;code&gt;long double&lt;/code&gt; , se llama a &lt;code&gt;log1pl&lt;/code&gt; . De lo contrario, si &lt;code&gt;arg&lt;/code&gt; tiene un tipo entero o el tipo &lt;code&gt;double&lt;/code&gt; , se llama a &lt;code&gt;log1p&lt;/code&gt; . De lo contrario, se llama &lt;code&gt;log1pf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e8de498b9bbb344cef905b7f917171a4c6071b0c" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If &lt;code&gt;arg&lt;/code&gt; has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;log2l&lt;/code&gt; is called. Otherwise, if &lt;code&gt;arg&lt;/code&gt; has integer type or the type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;log2&lt;/code&gt; is called. Otherwise, &lt;code&gt;log2f&lt;/code&gt; is called.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;arg&lt;/code&gt; tiene un tipo &lt;code&gt;long double&lt;/code&gt; , se llama a &lt;code&gt;log2l&lt;/code&gt; . De lo contrario, si &lt;code&gt;arg&lt;/code&gt; tiene un tipo entero o el tipo &lt;code&gt;double&lt;/code&gt; , se llama a &lt;code&gt;log2&lt;/code&gt; . De lo contrario, se llama a &lt;code&gt;log2f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="330e476af4f3f3e81d117653dbc0a98ff3ccb995" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If &lt;code&gt;arg&lt;/code&gt; has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;logl&lt;/code&gt; is called. Otherwise, if &lt;code&gt;arg&lt;/code&gt; has integer type or the type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;log&lt;/code&gt; is called. Otherwise, &lt;code&gt;logf&lt;/code&gt; is called. If &lt;code&gt;arg&lt;/code&gt; is complex or imaginary, then the macro invokes the corresponding complex function (&lt;code&gt;&lt;a href=&quot;../complex/clog&quot;&gt;clogf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../complex/clog&quot;&gt;clog&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../complex/clog&quot;&gt;clogl&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;arg&lt;/code&gt; tiene tipo &lt;code&gt;long double&lt;/code&gt; , se llama &lt;code&gt;logl&lt;/code&gt; . De lo contrario, si &lt;code&gt;arg&lt;/code&gt; tiene un tipo entero o el tipo &lt;code&gt;double&lt;/code&gt; , se llama &lt;code&gt;log&lt;/code&gt; . De lo contrario, se llama &lt;code&gt;logf&lt;/code&gt; . Si &lt;code&gt;arg&lt;/code&gt; es complejo o imaginaria, entonces los invoca macro la funci&amp;oacute;n compleja correspondiente ( &lt;code&gt;&lt;a href=&quot;../complex/clog&quot;&gt;clogf&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../complex/clog&quot;&gt;clog&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../complex/clog&quot;&gt;clogl&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="584dda2301d8ea101f45e39db35dc5000b732793" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If &lt;code&gt;arg&lt;/code&gt; has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;nearbyintl&lt;/code&gt; is called. Otherwise, if &lt;code&gt;arg&lt;/code&gt; has integer type or the type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;nearbyint&lt;/code&gt; is called. Otherwise, &lt;code&gt;nearbyintf&lt;/code&gt; is called, respectively.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;arg&lt;/code&gt; tiene tipo &lt;code&gt;long double&lt;/code&gt; , se llama a &lt;code&gt;nearbyintl&lt;/code&gt; . De lo contrario, si &lt;code&gt;arg&lt;/code&gt; tiene un tipo entero o el tipo &lt;code&gt;double&lt;/code&gt; , se llama a &lt;code&gt;nearbyint&lt;/code&gt; . De lo contrario, se llama &lt;code&gt;nearbyintf&lt;/code&gt; , respectivamente.</target>
        </trans-unit>
        <trans-unit id="131b453f380309ba0c3a3da175c3344926dfcfbe" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If &lt;code&gt;arg&lt;/code&gt; has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;sqrtl&lt;/code&gt; is called. Otherwise, if &lt;code&gt;arg&lt;/code&gt; has integer type or the type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;sqrt&lt;/code&gt; is called. Otherwise, &lt;code&gt;sqrtf&lt;/code&gt; is called. If &lt;code&gt;arg&lt;/code&gt; is complex or imaginary, then the macro invokes the corresponding complex function (&lt;code&gt;&lt;a href=&quot;../complex/csqrt&quot;&gt;csqrtf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../complex/csqrt&quot;&gt;csqrt&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../complex/csqrt&quot;&gt;csqrtl&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;arg&lt;/code&gt; tiene un tipo &lt;code&gt;long double&lt;/code&gt; , se llama a &lt;code&gt;sqrtl&lt;/code&gt; . De lo contrario, si &lt;code&gt;arg&lt;/code&gt; tiene un tipo entero o el tipo &lt;code&gt;double&lt;/code&gt; , se llama a &lt;code&gt;sqrt&lt;/code&gt; . De lo contrario, se llama &lt;code&gt;sqrtf&lt;/code&gt; . Si &lt;code&gt;arg&lt;/code&gt; es complejo o imaginario, la macro invoca la funci&amp;oacute;n compleja correspondiente ( &lt;code&gt;&lt;a href=&quot;../complex/csqrt&quot;&gt;csqrtf&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../complex/csqrt&quot;&gt;csqrt&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../complex/csqrt&quot;&gt;csqrtl&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a716a491b346df27249a1aa664c42f912de182dc" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If &lt;code&gt;arg&lt;/code&gt; has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;tgammal&lt;/code&gt; is called. Otherwise, if &lt;code&gt;arg&lt;/code&gt; has integer type or the type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;tgamma&lt;/code&gt; is called. Otherwise, &lt;code&gt;tgammaf&lt;/code&gt; is called.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;arg&lt;/code&gt; tiene tipo &lt;code&gt;long double&lt;/code&gt; , se llama &lt;code&gt;tgammal&lt;/code&gt; . De lo contrario, si &lt;code&gt;arg&lt;/code&gt; tiene un tipo entero o el tipo &lt;code&gt;double&lt;/code&gt; , se llama &lt;code&gt;tgamma&lt;/code&gt; . De lo contrario, se llama &lt;code&gt;tgammaf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1d99ff583c2e62cefff9b8c17bf5c8a2b1a2a989" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If &lt;code&gt;arg&lt;/code&gt; has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;truncl&lt;/code&gt; is called. Otherwise, if &lt;code&gt;arg&lt;/code&gt; has integer type or the type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;trunc&lt;/code&gt; is called. Otherwise, &lt;code&gt;truncf&lt;/code&gt; is called.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;arg&lt;/code&gt; tiene un tipo &lt;code&gt;long double&lt;/code&gt; , se llama a &lt;code&gt;truncl&lt;/code&gt; . De lo contrario, si &lt;code&gt;arg&lt;/code&gt; tiene un tipo entero o el tipo &lt;code&gt;double&lt;/code&gt; , se llama a &lt;code&gt;trunc&lt;/code&gt; . De lo contrario, se llama a &lt;code&gt;truncf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab5537e17e23a66b7df468d13530e942d1cacddf" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If &lt;code&gt;n&lt;/code&gt; has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;exp2l&lt;/code&gt; is called. Otherwise, if &lt;code&gt;n&lt;/code&gt; has integer type or the type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;exp2&lt;/code&gt; is called. Otherwise, &lt;code&gt;exp2f&lt;/code&gt; is called.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;n&lt;/code&gt; tiene un tipo &lt;code&gt;long double&lt;/code&gt; , se llama a &lt;code&gt;exp2l&lt;/code&gt; . De lo contrario, si &lt;code&gt;n&lt;/code&gt; tiene un tipo entero o el tipo &lt;code&gt;double&lt;/code&gt; , se llama a &lt;code&gt;exp2&lt;/code&gt; . De lo contrario, se llama a &lt;code&gt;exp2f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="972a8b5212eaa22b9b7e85e1778b5ad0ed639892" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;cacoshl&lt;/code&gt; is called. if &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;cacosh&lt;/code&gt; is called, if &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;cacoshf&lt;/code&gt; is called. If &lt;code&gt;z&lt;/code&gt; is real or integer, then the macro invokes the corresponding real function (&lt;code&gt;acoshf&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../math/acosh&quot;&gt;acosh&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;acoshl&lt;/code&gt;). If &lt;code&gt;z&lt;/code&gt; is imaginary, then the macro invokes the corresponding complex number version and the return type is complex.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;z&lt;/code&gt; tiene un tipo de &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; doble largo , se llama a &lt;code&gt;cacoshl&lt;/code&gt; . si &lt;code&gt;z&lt;/code&gt; tiene el tipo &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; doble , se llama a &lt;code&gt;cacosh&lt;/code&gt; , si &lt;code&gt;z&lt;/code&gt; tiene el tipo &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; flotante , se llama a &lt;code&gt;cacoshf&lt;/code&gt; . Si &lt;code&gt;z&lt;/code&gt; es real o entero, la macro invoca la funci&amp;oacute;n real correspondiente ( &lt;code&gt;acoshf&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../math/acosh&quot;&gt;acosh&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;acoshl&lt;/code&gt; ). Si &lt;code&gt;z&lt;/code&gt; es imaginario, la macro invoca la versi&amp;oacute;n de n&amp;uacute;mero complejo correspondiente y el tipo de retorno es complejo.</target>
        </trans-unit>
        <trans-unit id="b0b385142ddd798431624e5734e2e9b099e47412" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;cacosl&lt;/code&gt; is called. if &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;cacos&lt;/code&gt; is called, if &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;cacosf&lt;/code&gt; is called. If &lt;code&gt;z&lt;/code&gt; is real or integer, then the macro invokes the corresponding real function (&lt;code&gt;acosf&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../math/acos&quot;&gt;acos&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;acosl&lt;/code&gt;). If &lt;code&gt;z&lt;/code&gt; is imaginary, then the macro invokes the corresponding complex number version.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;z&lt;/code&gt; tiene un tipo de &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; doble largo , se llama a &lt;code&gt;cacosl&lt;/code&gt; . si &lt;code&gt;z&lt;/code&gt; tiene el tipo &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; doble , se llama a &lt;code&gt;cacos&lt;/code&gt; , si &lt;code&gt;z&lt;/code&gt; tiene el tipo &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; flotante , se llama a &lt;code&gt;cacosf&lt;/code&gt; . Si &lt;code&gt;z&lt;/code&gt; es real o entero, la macro invoca la funci&amp;oacute;n real correspondiente ( &lt;code&gt;acosf&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../math/acos&quot;&gt;acos&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;acosl&lt;/code&gt; ). Si &lt;code&gt;z&lt;/code&gt; es imaginario, la macro invoca la versi&amp;oacute;n de n&amp;uacute;mero complejo correspondiente.</target>
        </trans-unit>
        <trans-unit id="c85ee4298d1f06ad45cfb87d38262a10bbcbd6da" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;casinhl&lt;/code&gt; is called. if &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;casinh&lt;/code&gt; is called, if &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;casinhf&lt;/code&gt; is called. If &lt;code&gt;z&lt;/code&gt; is real or integer, then the macro invokes the corresponding real function (&lt;code&gt;asinhf&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../math/asinh&quot;&gt;asinh&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;asinhl&lt;/code&gt;). If &lt;code&gt;z&lt;/code&gt; is imaginary, then the macro invokes the corresponding real version of the function &lt;code&gt;&lt;a href=&quot;../math/asin&quot;&gt;asin&lt;/a&gt;&lt;/code&gt;, implementing the formula asinh(iy) = i asin(y), and the return type is imaginary.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;z&lt;/code&gt; tiene el tipo &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; doble largo , se llama &lt;code&gt;casinhl&lt;/code&gt; . si &lt;code&gt;z&lt;/code&gt; tiene &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; doble de tipo , se llama &lt;code&gt;casinh&lt;/code&gt; , si &lt;code&gt;z&lt;/code&gt; tiene &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; flotante de tipo , se llama &lt;code&gt;casinhf&lt;/code&gt; . Si &lt;code&gt;z&lt;/code&gt; es real o entero, la macro invoca la funci&amp;oacute;n real correspondiente ( &lt;code&gt;asinhf&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../math/asinh&quot;&gt;asinh&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;asinhl&lt;/code&gt; ). Si &lt;code&gt;z&lt;/code&gt; es imaginario, entonces la macro invoca la versi&amp;oacute;n real correspondiente de la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;../math/asin&quot;&gt;asin&lt;/a&gt;&lt;/code&gt; , implementando la f&amp;oacute;rmula asinh (iy) = i asin (y), y el tipo de retorno es imaginario.</target>
        </trans-unit>
        <trans-unit id="3033851cfcd16beca4702852a42f6593677d575e" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;casinl&lt;/code&gt; is called. if &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;casin&lt;/code&gt; is called, if &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;casinf&lt;/code&gt; is called. If &lt;code&gt;z&lt;/code&gt; is real or integer, then the macro invokes the corresponding real function (&lt;code&gt;asinf&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../math/asin&quot;&gt;asin&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;asinl&lt;/code&gt;). If &lt;code&gt;z&lt;/code&gt; is imaginary, then the macro invokes the corresponding real version of the function &lt;code&gt;&lt;a href=&quot;../math/asinh&quot;&gt;asinh&lt;/a&gt;&lt;/code&gt;, implementing the formula asin(iy) = i asinh(y), and the return type of the macro is imaginary.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;z&lt;/code&gt; tiene un tipo de &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; doble largo , se llama &lt;code&gt;casinl&lt;/code&gt; . si &lt;code&gt;z&lt;/code&gt; tiene tipo &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; doble , se llama &lt;code&gt;casin&lt;/code&gt; , si &lt;code&gt;z&lt;/code&gt; tiene tipo &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; flotante , se llama &lt;code&gt;casinf&lt;/code&gt; . Si &lt;code&gt;z&lt;/code&gt; es real o entero, la macro invoca la funci&amp;oacute;n real correspondiente ( &lt;code&gt;asinf&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../math/asin&quot;&gt;asin&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;asinl&lt;/code&gt; ). Si &lt;code&gt;z&lt;/code&gt; es imaginario, la macro invoca la versi&amp;oacute;n real correspondiente de la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;../math/asinh&quot;&gt;asinh&lt;/a&gt;&lt;/code&gt; , implementando la f&amp;oacute;rmula asin (iy) = i asinh (y), y el tipo de retorno de la macro es imaginario.</target>
        </trans-unit>
        <trans-unit id="5167d1de50aa9694bf09031a3a76a4ffe86fb60b" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;catanhl&lt;/code&gt; is called. if &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;catanh&lt;/code&gt; is called, if &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;catanhf&lt;/code&gt; is called. If &lt;code&gt;z&lt;/code&gt; is real or integer, then the macro invokes the corresponding real function (&lt;code&gt;atanhf&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../math/atanh&quot;&gt;atanh&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;atanhl&lt;/code&gt;). If &lt;code&gt;z&lt;/code&gt; is imaginary, then the macro invokes the corresponding real version of &lt;code&gt;&lt;a href=&quot;../math/atan&quot;&gt;atan&lt;/a&gt;&lt;/code&gt;, implementing the formula atanh(iy) = i atan(y), and the return type is imaginary.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;z&lt;/code&gt; tiene el tipo &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; doble largo , se llama &lt;code&gt;catanhl&lt;/code&gt; . si &lt;code&gt;z&lt;/code&gt; tiene el tipo &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; doble , se llama &lt;code&gt;catanh&lt;/code&gt; , si &lt;code&gt;z&lt;/code&gt; tiene el tipo &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; flotante , se llama &lt;code&gt;catanhf&lt;/code&gt; . Si &lt;code&gt;z&lt;/code&gt; es real o entero, la macro invoca la funci&amp;oacute;n real correspondiente ( &lt;code&gt;atanhf&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../math/atanh&quot;&gt;atanh&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;atanhl&lt;/code&gt; ). Si &lt;code&gt;z&lt;/code&gt; es imaginario, entonces la macro invoca la versi&amp;oacute;n real correspondiente de &lt;code&gt;&lt;a href=&quot;../math/atan&quot;&gt;atan&lt;/a&gt;&lt;/code&gt; , implementando la f&amp;oacute;rmula atanh (iy) = i atan (y), y el tipo de retorno es imaginario.</target>
        </trans-unit>
        <trans-unit id="23d4006c1a5a26e366a7d148fb9ef5f028188987" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;catanl&lt;/code&gt; is called. if &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;catan&lt;/code&gt; is called, if &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;catanf&lt;/code&gt; is called. If &lt;code&gt;z&lt;/code&gt; is real or integer, then the macro invokes the corresponding real function (&lt;code&gt;atanf&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../math/atan&quot;&gt;atan&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;atanl&lt;/code&gt;). If &lt;code&gt;z&lt;/code&gt; is imaginary, then the macro invokes the corresponding real version of the function &lt;code&gt;&lt;a href=&quot;../math/atanh&quot;&gt;atanh&lt;/a&gt;&lt;/code&gt;, implementing the formula atan(iy) = i atanh(y), and the return type of the macro is imaginary.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;z&lt;/code&gt; tiene el tipo &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; doble largo , se llama &lt;code&gt;catanl&lt;/code&gt; . si &lt;code&gt;z&lt;/code&gt; tiene tipo &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; doble , se llama &lt;code&gt;catan&lt;/code&gt; , si &lt;code&gt;z&lt;/code&gt; tiene tipo &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; flotante , se llama &lt;code&gt;catanf&lt;/code&gt; . Si &lt;code&gt;z&lt;/code&gt; es real o entero, la macro invoca la funci&amp;oacute;n real correspondiente ( &lt;code&gt;atanf&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../math/atan&quot;&gt;atan&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;atanl&lt;/code&gt; ). Si &lt;code&gt;z&lt;/code&gt; es imaginario, entonces la macro invoca la versi&amp;oacute;n real correspondiente de la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;../math/atanh&quot;&gt;atanh&lt;/a&gt;&lt;/code&gt; , implementando la f&amp;oacute;rmula atan (iy) = i atanh (y), y el tipo de retorno de la macro es imaginario.</target>
        </trans-unit>
        <trans-unit id="c7f22f15d8e840cb95650c47c8138eaf1c6a73e2" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;ccoshl&lt;/code&gt; is called. if &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;ccosh&lt;/code&gt; is called, if &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;ccoshf&lt;/code&gt; is called. If &lt;code&gt;z&lt;/code&gt; is real or integer, then the macro invokes the corresponding real function (&lt;code&gt;coshf&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../math/cosh&quot;&gt;cosh&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;coshl&lt;/code&gt;). If &lt;code&gt;z&lt;/code&gt; is imaginary, then the macro invokes the corresponding real version of the function &lt;code&gt;&lt;a href=&quot;../math/cos&quot;&gt;cos&lt;/a&gt;&lt;/code&gt;, implementing the formula cosh(iy) = cos(y), and the return type is real.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;z&lt;/code&gt; tiene un tipo de &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; doble largo , se llama a &lt;code&gt;ccoshl&lt;/code&gt; . si &lt;code&gt;z&lt;/code&gt; tiene el tipo &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; doble , se llama &lt;code&gt;ccosh&lt;/code&gt; , si &lt;code&gt;z&lt;/code&gt; tiene el tipo &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; flotante , se llama &lt;code&gt;ccoshf&lt;/code&gt; . Si &lt;code&gt;z&lt;/code&gt; es real o entero, la macro invoca la funci&amp;oacute;n real correspondiente ( &lt;code&gt;coshf&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../math/cosh&quot;&gt;cosh&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;coshl&lt;/code&gt; ). Si &lt;code&gt;z&lt;/code&gt; es imaginario, entonces la macro invoca la versi&amp;oacute;n real correspondiente de la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;../math/cos&quot;&gt;cos&lt;/a&gt;&lt;/code&gt; , implementando la f&amp;oacute;rmula cosh (iy) = cos (y), y el tipo de retorno es real.</target>
        </trans-unit>
        <trans-unit id="3242d0a1a2d49ca0c5f33af424067527aa5060fc" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;ccosl&lt;/code&gt; is called. if &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;ccos&lt;/code&gt; is called, if &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;ccosf&lt;/code&gt; is called. If &lt;code&gt;z&lt;/code&gt; is real or integer, then the macro invokes the corresponding real function (&lt;code&gt;cosf&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../math/cos&quot;&gt;cos&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;cosl&lt;/code&gt;). If &lt;code&gt;z&lt;/code&gt; is imaginary, then the macro invokes the corresponding real version of the function &lt;code&gt;&lt;a href=&quot;../math/cosh&quot;&gt;cosh&lt;/a&gt;&lt;/code&gt;, implementing the formula cos(iy) = cosh(y), and the return type is real.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;z&lt;/code&gt; tiene un tipo de &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; doble largo , se llama a &lt;code&gt;ccosl&lt;/code&gt; . si &lt;code&gt;z&lt;/code&gt; tiene el tipo &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; doble , se llama &lt;code&gt;ccos&lt;/code&gt; , si &lt;code&gt;z&lt;/code&gt; tiene el tipo &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; flotante , se llama &lt;code&gt;ccosf&lt;/code&gt; . Si &lt;code&gt;z&lt;/code&gt; es real o entero, la macro invoca la funci&amp;oacute;n real correspondiente ( &lt;code&gt;cosf&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../math/cos&quot;&gt;cos&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;cosl&lt;/code&gt; ). Si &lt;code&gt;z&lt;/code&gt; es imaginario, entonces la macro invoca la versi&amp;oacute;n real correspondiente de la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;../math/cosh&quot;&gt;cosh&lt;/a&gt;&lt;/code&gt; , implementando la f&amp;oacute;rmula cos (iy) = cosh (y), y el tipo de retorno es real.</target>
        </trans-unit>
        <trans-unit id="042acf1305354be04c1abcef332229fdc2a326f7" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;cexpl&lt;/code&gt; is called. if &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;cexp&lt;/code&gt; is called, if &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;cexpf&lt;/code&gt; is called. If &lt;code&gt;z&lt;/code&gt; is real or integer, then the macro invokes the corresponding real function (&lt;code&gt;expf&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../math/exp&quot;&gt;exp&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;expl&lt;/code&gt;). If &lt;code&gt;z&lt;/code&gt; is imaginary, the corresponding complex argument version is called.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;z&lt;/code&gt; tiene el tipo &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; doble largo , se llama &lt;code&gt;cexpl&lt;/code&gt; . si &lt;code&gt;z&lt;/code&gt; tiene tipo &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; doble , se llama &lt;code&gt;cexp&lt;/code&gt; , si &lt;code&gt;z&lt;/code&gt; tiene tipo &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; flotante , se llama &lt;code&gt;cexpf&lt;/code&gt; . Si &lt;code&gt;z&lt;/code&gt; es real o entero, la macro invoca la funci&amp;oacute;n real correspondiente ( &lt;code&gt;expf&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../math/exp&quot;&gt;exp&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;expl&lt;/code&gt; ). Si &lt;code&gt;z&lt;/code&gt; es imaginario, se llama a la versi&amp;oacute;n del argumento complejo correspondiente.</target>
        </trans-unit>
        <trans-unit id="2d28e9d6173465a2cb36bf553cf67dd94b7c5e4b" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;clogl&lt;/code&gt; is called. if &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;clog&lt;/code&gt; is called, if &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;clogf&lt;/code&gt; is called. If &lt;code&gt;z&lt;/code&gt; is real or integer, then the macro invokes the corresponding real function (&lt;code&gt;logf&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../math/log&quot;&gt;log&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;logl&lt;/code&gt;). If &lt;code&gt;z&lt;/code&gt; is imaginary, the corresponding complex number version is called.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;z&lt;/code&gt; tiene un tipo de &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; doble largo , se llama a &lt;code&gt;clogl&lt;/code&gt; . si &lt;code&gt;z&lt;/code&gt; es de tipo &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;clog&lt;/code&gt; se llama, si &lt;code&gt;z&lt;/code&gt; tiene el tipo de &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;clogf&lt;/code&gt; se llama. Si &lt;code&gt;z&lt;/code&gt; es real o entero, la macro invoca la funci&amp;oacute;n real correspondiente ( &lt;code&gt;logf&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../math/log&quot;&gt;log&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;logl&lt;/code&gt; ). Si &lt;code&gt;z&lt;/code&gt; es imaginario, se llama a la versi&amp;oacute;n de n&amp;uacute;mero complejo correspondiente.</target>
        </trans-unit>
        <trans-unit id="c676101e9ce0b8a4c04065675ae34b89b5c61f28" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;csinhl&lt;/code&gt; is called. if &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;csinh&lt;/code&gt; is called, if &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;csinhf&lt;/code&gt; is called. If &lt;code&gt;z&lt;/code&gt; is real or integer, then the macro invokes the corresponding real function (&lt;code&gt;sinhf&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../math/sinh&quot;&gt;sinh&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;sinhl&lt;/code&gt;). If &lt;code&gt;z&lt;/code&gt; is imaginary, then the macro invokes the corresponding real version of the function &lt;code&gt;&lt;a href=&quot;../math/sin&quot;&gt;sin&lt;/a&gt;&lt;/code&gt;, implementing the formula sinh(iy) = i sin(y), and the return type is imaginary.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;z&lt;/code&gt; tiene un tipo de &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; doble largo , se llama a &lt;code&gt;csinhl&lt;/code&gt; . si &lt;code&gt;z&lt;/code&gt; tiene el tipo &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; doble , se llama &lt;code&gt;csinh&lt;/code&gt; , si &lt;code&gt;z&lt;/code&gt; tiene el tipo &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; flotante , se llama &lt;code&gt;csinhf&lt;/code&gt; . Si &lt;code&gt;z&lt;/code&gt; es real o entero, la macro invoca la funci&amp;oacute;n real correspondiente ( &lt;code&gt;sinhf&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../math/sinh&quot;&gt;sinh&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;sinhl&lt;/code&gt; ). Si &lt;code&gt;z&lt;/code&gt; es imaginario, entonces la macro invoca la versi&amp;oacute;n real correspondiente de la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;../math/sin&quot;&gt;sin&lt;/a&gt;&lt;/code&gt; , implementando la f&amp;oacute;rmula sinh (iy) = i sin (y), y el tipo de retorno es imaginario.</target>
        </trans-unit>
        <trans-unit id="326111ee431cdc6f395580d72e3d1743fbeef7cf" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;csinl&lt;/code&gt; is called. if &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;csin&lt;/code&gt; is called, if &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;csinf&lt;/code&gt; is called. If &lt;code&gt;z&lt;/code&gt; is real or integer, then the macro invokes the corresponding real function (&lt;code&gt;sinf&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../math/sin&quot;&gt;sin&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;sinl&lt;/code&gt;). If &lt;code&gt;z&lt;/code&gt; is imaginary, then the macro invokes the corresponding real version of the function &lt;code&gt;&lt;a href=&quot;../math/sinh&quot;&gt;sinh&lt;/a&gt;&lt;/code&gt;, implementing the formula sin(iy) = i sinh(y), and the return type of the macro is imaginary.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;z&lt;/code&gt; tiene un tipo de &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; doble largo , se llama &lt;code&gt;csinl&lt;/code&gt; . si &lt;code&gt;z&lt;/code&gt; tiene tipo &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; doble , se llama &lt;code&gt;csin&lt;/code&gt; , si &lt;code&gt;z&lt;/code&gt; tiene tipo &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; flotante , se llama &lt;code&gt;csinf&lt;/code&gt; . Si &lt;code&gt;z&lt;/code&gt; es real o entero, la macro invoca la funci&amp;oacute;n real correspondiente ( &lt;code&gt;sinf&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../math/sin&quot;&gt;sin&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;sinl&lt;/code&gt; ). Si &lt;code&gt;z&lt;/code&gt; es imaginario, entonces la macro invoca la versi&amp;oacute;n real correspondiente de la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;../math/sinh&quot;&gt;sinh&lt;/a&gt;&lt;/code&gt; , implementando la f&amp;oacute;rmula sin (iy) = i sinh (y), y el tipo de retorno de la macro es imaginario.</target>
        </trans-unit>
        <trans-unit id="7cfac821827cf52071f707529d8cc711a8614e22" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;csqrtl&lt;/code&gt; is called. if &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;csqrt&lt;/code&gt; is called, if &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;csqrtf&lt;/code&gt; is called. If &lt;code&gt;z&lt;/code&gt; is real or integer, then the macro invokes the corresponding real function (&lt;code&gt;sqrtf&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../math/sqrt&quot;&gt;sqrt&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;sqrtl&lt;/code&gt;). If &lt;code&gt;z&lt;/code&gt; is imaginary, the corresponding complex number version is called.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;z&lt;/code&gt; tiene un tipo de &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; doble largo , se llama a &lt;code&gt;csqrtl&lt;/code&gt; . si &lt;code&gt;z&lt;/code&gt; tiene tipo &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; doble , se llama &lt;code&gt;csqrt&lt;/code&gt; , si &lt;code&gt;z&lt;/code&gt; tiene tipo &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; flotante , se llama &lt;code&gt;csqrtf&lt;/code&gt; . Si &lt;code&gt;z&lt;/code&gt; es real o entero, la macro invoca la funci&amp;oacute;n real correspondiente ( &lt;code&gt;sqrtf&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../math/sqrt&quot;&gt;sqrt&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;sqrtl&lt;/code&gt; ). Si &lt;code&gt;z&lt;/code&gt; es imaginario, se llama a la versi&amp;oacute;n de n&amp;uacute;mero complejo correspondiente.</target>
        </trans-unit>
        <trans-unit id="19ea9e6fbdd5f8fccf16a6f4524074bea2e0760c" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;ctanhl&lt;/code&gt; is called. if &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;ctanh&lt;/code&gt; is called, if &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;ctanhf&lt;/code&gt; is called. If &lt;code&gt;z&lt;/code&gt; is real or integer, then the macro invokes the corresponding real function (&lt;code&gt;tanhf&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../math/tanh&quot;&gt;tanh&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;tanhl&lt;/code&gt;). If &lt;code&gt;z&lt;/code&gt; is imaginary, then the macro invokes the corresponding real version of the function &lt;code&gt;&lt;a href=&quot;../math/tan&quot;&gt;tan&lt;/a&gt;&lt;/code&gt;, implementing the formula tanh(iy) = i tan(y), and the return type is imaginary.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;z&lt;/code&gt; tiene el tipo &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; doble largo , se llama &lt;code&gt;ctanhl&lt;/code&gt; . si &lt;code&gt;z&lt;/code&gt; tiene el tipo &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; doble , se llama &lt;code&gt;ctanh&lt;/code&gt; , si &lt;code&gt;z&lt;/code&gt; tiene el tipo &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; flotante , se llama &lt;code&gt;ctanhf&lt;/code&gt; . Si &lt;code&gt;z&lt;/code&gt; es real o entero, la macro invoca la funci&amp;oacute;n real correspondiente ( &lt;code&gt;tanhf&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../math/tanh&quot;&gt;tanh&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;tanhl&lt;/code&gt; ). Si &lt;code&gt;z&lt;/code&gt; es imaginario, entonces la macro invoca la versi&amp;oacute;n real correspondiente de la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;../math/tan&quot;&gt;tan&lt;/a&gt;&lt;/code&gt; , implementando la f&amp;oacute;rmula tanh (iy) = i tan (y), y el tipo de retorno es imaginario.</target>
        </trans-unit>
        <trans-unit id="162fdffe50a365579872eb53de379df38f0d362f" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;ctanl&lt;/code&gt; is called. if &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;ctan&lt;/code&gt; is called, if &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;ctanf&lt;/code&gt; is called. If &lt;code&gt;z&lt;/code&gt; is real or integer, then the macro invokes the corresponding real function (&lt;code&gt;tanf&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../math/tan&quot;&gt;tan&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;tanl&lt;/code&gt;). If &lt;code&gt;z&lt;/code&gt; is imaginary, then the macro invokes the corresponding real version of the function &lt;code&gt;&lt;a href=&quot;../math/tanh&quot;&gt;tanh&lt;/a&gt;&lt;/code&gt;, implementing the formula tan(iy) = i tanh(y), and the return type is imaginary.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;z&lt;/code&gt; tiene un tipo de &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; doble largo , se llama &lt;code&gt;ctanl&lt;/code&gt; . si &lt;code&gt;z&lt;/code&gt; tiene el tipo &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; doble , se llama &lt;code&gt;ctan&lt;/code&gt; , si &lt;code&gt;z&lt;/code&gt; tiene el tipo &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; flotante , se llama &lt;code&gt;ctanf&lt;/code&gt; . Si &lt;code&gt;z&lt;/code&gt; es real o entero, la macro invoca la funci&amp;oacute;n real correspondiente ( &lt;code&gt;tanf&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../math/tan&quot;&gt;tan&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;tanl&lt;/code&gt; ). Si &lt;code&gt;z&lt;/code&gt; es imaginario, entonces la macro invoca la versi&amp;oacute;n real correspondiente de la funci&amp;oacute;n &lt;code&gt;&lt;a href=&quot;../math/tanh&quot;&gt;tanh&lt;/a&gt;&lt;/code&gt; , implementando la f&amp;oacute;rmula tan (iy) = i tanh (y), y el tipo de retorno es imaginario.</target>
        </trans-unit>
        <trans-unit id="5ec71c36d347db4c5cae6bf1aa118eabd794819c" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If any argument has type &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;cpowl&lt;/code&gt; is called. if any argument has type &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;cpow&lt;/code&gt; is called, if any argument has type &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;cpowf&lt;/code&gt; is called. If the arguments are real or integer, then the macro invokes the corresponding real function (&lt;code&gt;powf&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../math/pow&quot;&gt;pow&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;powl&lt;/code&gt;). If any argument is imaginary, the corresponding complex number version is called.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si alg&amp;uacute;n argumento tiene el tipo &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; doble largo , se llama &lt;code&gt;cpowl&lt;/code&gt; . si alg&amp;uacute;n argumento tiene tipo &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; doble , se llama &lt;code&gt;cpow&lt;/code&gt; , si alg&amp;uacute;n argumento tiene tipo &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; flotante , se llama &lt;code&gt;cpowf&lt;/code&gt; Si los argumentos son reales o enteros, la macro invoca la funci&amp;oacute;n real correspondiente ( &lt;code&gt;powf&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../math/pow&quot;&gt;pow&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;powl&lt;/code&gt; ). Si alg&amp;uacute;n argumento es imaginario, se llama a la versi&amp;oacute;n de n&amp;uacute;mero complejo correspondiente.</target>
        </trans-unit>
        <trans-unit id="bf1a1306ce29496e6ee1e4e2e0762bdb01ac8e51" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If any argument has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;copysignl&lt;/code&gt; is called. Otherwise, if any argument has integer type or has type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;copysign&lt;/code&gt; is called. Otherwise, &lt;code&gt;copysignf&lt;/code&gt; is called.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si alg&amp;uacute;n argumento tiene tipo &lt;code&gt;long double&lt;/code&gt; , se llama a &lt;code&gt;copysignl&lt;/code&gt; . De lo contrario, si alg&amp;uacute;n argumento tiene un tipo entero o tiene un tipo &lt;code&gt;double&lt;/code&gt; , se llama a &lt;code&gt;copysign&lt;/code&gt; . De lo contrario, se llama a &lt;code&gt;copysignf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9e1c538243aa78375d05576673d78cb2ea50863b" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If any argument has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;fdiml&lt;/code&gt; is called. Otherwise, if any argument has integer type or has type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;fdim&lt;/code&gt; is called. Otherwise, &lt;code&gt;fdimf&lt;/code&gt; is called.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si alg&amp;uacute;n argumento tiene tipo &lt;code&gt;long double&lt;/code&gt; , se llama a &lt;code&gt;fdiml&lt;/code&gt; . De lo contrario, si alg&amp;uacute;n argumento tiene un tipo entero o tiene un tipo &lt;code&gt;double&lt;/code&gt; , se llama a &lt;code&gt;fdim&lt;/code&gt; . De lo contrario, se llama a &lt;code&gt;fdimf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6bc6d069dccb788f5e5263c23ba50509b40be4d5" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If any argument has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;fmaxl&lt;/code&gt; is called. Otherwise, if any argument has integer type or has type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;fmax&lt;/code&gt; is called. Otherwise, &lt;code&gt;fmaxf&lt;/code&gt; is called.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si alg&amp;uacute;n argumento tiene tipo &lt;code&gt;long double&lt;/code&gt; , se llama a &lt;code&gt;fmaxl&lt;/code&gt; . De lo contrario, si alg&amp;uacute;n argumento tiene un tipo entero o tiene un tipo &lt;code&gt;double&lt;/code&gt; , se llama a &lt;code&gt;fmax&lt;/code&gt; . De lo contrario, se llama &lt;code&gt;fmaxf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2826258f5fc508caad4aa1bcbadb570a845f4250" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If any argument has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;fminl&lt;/code&gt; is called. Otherwise, if any argument has integer type or has type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;fmin&lt;/code&gt; is called. Otherwise, &lt;code&gt;fminf&lt;/code&gt; is called.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si alg&amp;uacute;n argumento tiene tipo &lt;code&gt;long double&lt;/code&gt; , se llama a &lt;code&gt;fminl&lt;/code&gt; . De lo contrario, si alg&amp;uacute;n argumento tiene un tipo entero o tiene un tipo &lt;code&gt;double&lt;/code&gt; , se llama a &lt;code&gt;fmin&lt;/code&gt; . De lo contrario, se llama &lt;code&gt;fminf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9a200a6181ec8a987eb003c3c38ed43d102292ca" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If any argument has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;fmodl&lt;/code&gt; is called. Otherwise, if any argument has integer type or has type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;fmod&lt;/code&gt; is called. Otherwise, &lt;code&gt;fmodf&lt;/code&gt; is called.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si alg&amp;uacute;n argumento tiene tipo &lt;code&gt;long double&lt;/code&gt; , se llama a &lt;code&gt;fmodl&lt;/code&gt; . De lo contrario, si alg&amp;uacute;n argumento tiene un tipo entero o tiene un tipo &lt;code&gt;double&lt;/code&gt; , se llama a &lt;code&gt;fmod&lt;/code&gt; . De lo contrario, se llama a &lt;code&gt;fmodf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f6c22f75f0d642897267206dc3a8df65e5b72ce5" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If any argument has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;powl&lt;/code&gt; is called. Otherwise, if any argument has integer type or has type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;pow&lt;/code&gt; is called. Otherwise, &lt;code&gt;powf&lt;/code&gt; is called. If at least one argument is complex or imaginary, then the macro invokes the corresponding complex function (&lt;code&gt;&lt;a href=&quot;../complex/cpow&quot;&gt;cpowf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../complex/cpow&quot;&gt;cpow&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../complex/cpow&quot;&gt;cpowl&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si alg&amp;uacute;n argumento tiene tipo &lt;code&gt;long double&lt;/code&gt; , se llama a &lt;code&gt;powl&lt;/code&gt; . De lo contrario, si alg&amp;uacute;n argumento tiene un tipo entero o tiene un tipo &lt;code&gt;double&lt;/code&gt; , se llama a &lt;code&gt;pow&lt;/code&gt; . De lo contrario, se llama &lt;code&gt;powf&lt;/code&gt; . Si al menos un argumento es complejo o imaginario, la macro invoca la funci&amp;oacute;n compleja correspondiente ( &lt;code&gt;&lt;a href=&quot;../complex/cpow&quot;&gt;cpowf&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../complex/cpow&quot;&gt;cpow&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../complex/cpow&quot;&gt;cpowl&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="7b4daf3863aade2d9ccd70286cd72b49a2143dcf" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If any argument has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;remainderl&lt;/code&gt; is called. Otherwise, if any argument has integer type or has type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;remainder&lt;/code&gt; is called. Otherwise, &lt;code&gt;remainderf&lt;/code&gt; is called.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si alg&amp;uacute;n argumento tiene un tipo &lt;code&gt;long double&lt;/code&gt; , se llama &lt;code&gt;remainderl&lt;/code&gt; . De lo contrario, si alg&amp;uacute;n argumento tiene un tipo entero o tiene un tipo &lt;code&gt;double&lt;/code&gt; , se llama al &lt;code&gt;remainder&lt;/code&gt; . De lo contrario, se llama &lt;code&gt;remainderf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="881106fe48a13e788ec0b76b98b406ec65dcfb8c" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If any argument has type &lt;code&gt;long double&lt;/code&gt;, the long double version of the function is called. Otherwise, if any argument has integer type or has type &lt;code&gt;double&lt;/code&gt;, the double version of the function is called. Otherwise, the &lt;code&gt;float&lt;/code&gt; version of the function is called.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si alg&amp;uacute;n argumento tiene tipo &lt;code&gt;long double&lt;/code&gt; , se llama a la versi&amp;oacute;n long double de la funci&amp;oacute;n. De lo contrario, si alg&amp;uacute;n argumento tiene un tipo entero o tiene un tipo &lt;code&gt;double&lt;/code&gt; , se llama a la versi&amp;oacute;n doble de la funci&amp;oacute;n. De lo contrario, se llama a la versi&amp;oacute;n &lt;code&gt;float&lt;/code&gt; de la funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="f246991df195f60af01c9a2feda665c912856a0d" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If any non-pointer argument has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;remquol&lt;/code&gt; is called. Otherwise, if any non-pointer argument has integer type or has type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;remquo&lt;/code&gt; is called. Otherwise, &lt;code&gt;remquof&lt;/code&gt; is called.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si cualquier argumento sin puntero tiene un tipo &lt;code&gt;long double&lt;/code&gt; , se llama a &lt;code&gt;remquol&lt;/code&gt; . De lo contrario, si cualquier argumento sin puntero tiene un tipo entero o tiene un tipo &lt;code&gt;double&lt;/code&gt; , se llama a &lt;code&gt;remquo&lt;/code&gt; . De lo contrario, se llama &lt;code&gt;remquof&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cea7774bf8dbd4f866e0c68415f8e6ea99d2fdc8" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If the argument has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;acoshl&lt;/code&gt; is called. Otherwise, if the argument has integer type or the type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;acosh&lt;/code&gt; is called. Otherwise, &lt;code&gt;acoshf&lt;/code&gt; is called. If the argument is complex, then the macro invokes the corresponding complex function (&lt;code&gt;&lt;a href=&quot;../complex/cacosh&quot;&gt;cacoshf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../complex/cacosh&quot;&gt;cacosh&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../complex/cacosh&quot;&gt;cacoshl&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si el argumento tiene un tipo &lt;code&gt;long double&lt;/code&gt; , se llama &lt;code&gt;acoshl&lt;/code&gt; . De lo contrario, si el argumento tiene un tipo entero o el tipo &lt;code&gt;double&lt;/code&gt; , se llama &lt;code&gt;acosh&lt;/code&gt; . De lo contrario, se llama &lt;code&gt;acoshf&lt;/code&gt; . Si el argumento es complejo, la macro invoca la funci&amp;oacute;n compleja correspondiente ( &lt;code&gt;&lt;a href=&quot;../complex/cacosh&quot;&gt;cacoshf&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../complex/cacosh&quot;&gt;cacosh&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../complex/cacosh&quot;&gt;cacoshl&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="9745de5739d522b568206a096dacb42984dfb6b0" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If the argument has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;acosl&lt;/code&gt; is called. Otherwise, if the argument has integer type or the type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;acos&lt;/code&gt; is called. Otherwise, &lt;code&gt;acosf&lt;/code&gt; is called. If the argument is complex, then the macro invokes the corresponding complex function (&lt;code&gt;&lt;a href=&quot;../complex/cacos&quot;&gt;cacosf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../complex/cacos&quot;&gt;cacos&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../complex/cacos&quot;&gt;cacosl&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si el argumento tiene un tipo &lt;code&gt;long double&lt;/code&gt; , se llama &lt;code&gt;acosl&lt;/code&gt; . De lo contrario, si el argumento tiene un tipo entero o el tipo &lt;code&gt;double&lt;/code&gt; , se llama &lt;code&gt;acos&lt;/code&gt; . De lo contrario, se llama &lt;code&gt;acosf&lt;/code&gt; . Si el argumento es complejo, la macro invoca la funci&amp;oacute;n compleja correspondiente ( &lt;code&gt;&lt;a href=&quot;../complex/cacos&quot;&gt;cacosf&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../complex/cacos&quot;&gt;cacos&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../complex/cacos&quot;&gt;cacosl&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c3d4bcc29c2f39d3e935684b0c659c20ad0b623c" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If the argument has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;asinhl&lt;/code&gt; is called. Otherwise, if the argument has integer type or the type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;asinh&lt;/code&gt; is called. Otherwise, &lt;code&gt;asinhf&lt;/code&gt; is called. If the argument is complex, then the macro invokes the corresponding complex function (&lt;code&gt;&lt;a href=&quot;../complex/casinh&quot;&gt;casinhf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../complex/casinh&quot;&gt;casinh&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../complex/casinh&quot;&gt;casinhl&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si el argumento tiene tipo &lt;code&gt;long double&lt;/code&gt; , se llama a &lt;code&gt;asinhl&lt;/code&gt; . De lo contrario, si el argumento tiene un tipo entero o el tipo &lt;code&gt;double&lt;/code&gt; , se llama a &lt;code&gt;asinh&lt;/code&gt; . De lo contrario, se llama &lt;code&gt;asinhf&lt;/code&gt; . Si el argumento es complejo, la macro invoca la funci&amp;oacute;n compleja correspondiente ( &lt;code&gt;&lt;a href=&quot;../complex/casinh&quot;&gt;casinhf&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../complex/casinh&quot;&gt;casinh&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../complex/casinh&quot;&gt;casinhl&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="4bfb61ffffdd35bb33e005f8c5056995a803d94e" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If the argument has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;asinl&lt;/code&gt; is called. Otherwise, if the argument has integer type or the type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;asin&lt;/code&gt; is called. Otherwise, &lt;code&gt;asinf&lt;/code&gt; is called. If the argument is complex, then the macro invokes the corresponding complex function (&lt;code&gt;&lt;a href=&quot;../complex/casin&quot;&gt;casinf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../complex/casin&quot;&gt;casin&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../complex/casin&quot;&gt;casinl&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si el argumento tiene tipo &lt;code&gt;long double&lt;/code&gt; , se llama a &lt;code&gt;asinl&lt;/code&gt; . De lo contrario, si el argumento tiene un tipo entero o el tipo &lt;code&gt;double&lt;/code&gt; , se llama a &lt;code&gt;asin&lt;/code&gt; . De lo contrario, se llama &lt;code&gt;asinf&lt;/code&gt; . Si el argumento es complejo, la macro invoca la funci&amp;oacute;n compleja correspondiente ( &lt;code&gt;&lt;a href=&quot;../complex/casin&quot;&gt;casinf&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../complex/casin&quot;&gt;casin&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../complex/casin&quot;&gt;casinl&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="5b82933c6f2e9b31923c8148287b2b802d9182ac" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If the argument has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;atan2l&lt;/code&gt; is called. Otherwise, if the argument has integer type or the type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;atan2&lt;/code&gt; is called. Otherwise, &lt;code&gt;atan2f&lt;/code&gt; is called.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si el argumento tiene tipo &lt;code&gt;long double&lt;/code&gt; , se llama &lt;code&gt;atan2l&lt;/code&gt; . De lo contrario, si el argumento tiene un tipo entero o el tipo &lt;code&gt;double&lt;/code&gt; , se llama &lt;code&gt;atan2&lt;/code&gt; . De lo contrario, se llama &lt;code&gt;atan2f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1b5412903d643312f8a7a8881a7febf7f4501a02" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If the argument has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;atanhl&lt;/code&gt; is called. Otherwise, if the argument has integer type or the type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;atanh&lt;/code&gt; is called. Otherwise, &lt;code&gt;atanhf&lt;/code&gt; is called. If the argument is complex, then the macro invokes the corresponding complex function (&lt;code&gt;&lt;a href=&quot;../complex/catanh&quot;&gt;catanhf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../complex/catanh&quot;&gt;catanh&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../complex/catanh&quot;&gt;catanhl&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si el argumento tiene tipo &lt;code&gt;long double&lt;/code&gt; , se llama &lt;code&gt;atanhl&lt;/code&gt; . De lo contrario, si el argumento tiene un tipo entero o el tipo &lt;code&gt;double&lt;/code&gt; , se llama &lt;code&gt;atanh&lt;/code&gt; . De lo contrario, se llama &lt;code&gt;atanhf&lt;/code&gt; . Si el argumento es complejo, la macro invoca la funci&amp;oacute;n compleja correspondiente ( &lt;code&gt;&lt;a href=&quot;../complex/catanh&quot;&gt;catanhf&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../complex/catanh&quot;&gt;catanh&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../complex/catanh&quot;&gt;catanhl&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="dfa286026584aee4333c5ad3b806d51ebe96edaa" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If the argument has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;atanl&lt;/code&gt; is called. Otherwise, if the argument has integer type or the type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;atan&lt;/code&gt; is called. Otherwise, &lt;code&gt;atanf&lt;/code&gt; is called. If the argument is complex, then the macro invokes the corresponding complex function (&lt;code&gt;&lt;a href=&quot;../complex/catan&quot;&gt;catanf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../complex/catan&quot;&gt;catan&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../complex/catan&quot;&gt;catanl&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si el argumento tiene tipo &lt;code&gt;long double&lt;/code&gt; , se llama &lt;code&gt;atanl&lt;/code&gt; . De lo contrario, si el argumento tiene un tipo entero o el tipo &lt;code&gt;double&lt;/code&gt; , se llama &lt;code&gt;atan&lt;/code&gt; . De lo contrario, se llama &lt;code&gt;atanf&lt;/code&gt; . Si el argumento es complejo, la macro invoca la funci&amp;oacute;n compleja correspondiente ( &lt;code&gt;&lt;a href=&quot;../complex/catan&quot;&gt;catanf&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../complex/catan&quot;&gt;catan&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../complex/catan&quot;&gt;catanl&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="889add64ce717d2d86c2c68b5c36cf2a24534035" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If the argument has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;coshl&lt;/code&gt; is called. Otherwise, if the argument has integer type or the type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;cosh&lt;/code&gt; is called. Otherwise, &lt;code&gt;coshf&lt;/code&gt; is called. If the argument is complex, then the macro invokes the corresponding complex function (&lt;code&gt;&lt;a href=&quot;../complex/ccosh&quot;&gt;ccoshf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../complex/ccosh&quot;&gt;ccosh&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../complex/ccosh&quot;&gt;ccoshl&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si el argumento tiene un tipo &lt;code&gt;long double&lt;/code&gt; , se llama a &lt;code&gt;coshl&lt;/code&gt; . De lo contrario, si el argumento tiene un tipo entero o el tipo &lt;code&gt;double&lt;/code&gt; , se llama &lt;code&gt;cosh&lt;/code&gt; . De lo contrario, se llama &lt;code&gt;coshf&lt;/code&gt; . Si el argumento es complejo, la macro invoca la funci&amp;oacute;n compleja correspondiente ( &lt;code&gt;&lt;a href=&quot;../complex/ccosh&quot;&gt;ccoshf&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../complex/ccosh&quot;&gt;ccosh&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../complex/ccosh&quot;&gt;ccoshl&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="07cbdfad8c67e2fa7365a228f24d83a0dc85c70a" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If the argument has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;cosl&lt;/code&gt; is called. Otherwise, if the argument has integer type or the type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;cos&lt;/code&gt; is called. Otherwise, &lt;code&gt;cosf&lt;/code&gt; is called. If the argument is complex, then the macro invokes the corresponding complex function (&lt;code&gt;&lt;a href=&quot;../complex/ccos&quot;&gt;ccosf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../complex/ccos&quot;&gt;ccos&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../complex/ccos&quot;&gt;ccosl&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si el argumento tiene tipo &lt;code&gt;long double&lt;/code&gt; , se llama a &lt;code&gt;cosl&lt;/code&gt; . De lo contrario, si el argumento tiene un tipo entero o el tipo &lt;code&gt;double&lt;/code&gt; , se llama &lt;code&gt;cos&lt;/code&gt; . De lo contrario, se llama &lt;code&gt;cosf&lt;/code&gt; . Si el argumento es complejo, la macro invoca la funci&amp;oacute;n compleja correspondiente ( &lt;code&gt;&lt;a href=&quot;../complex/ccos&quot;&gt;ccosf&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../complex/ccos&quot;&gt;ccos&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../complex/ccos&quot;&gt;ccosl&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="4d64443b360e3a0e2a46c1dbebf6bd528d20482f" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If the argument has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;fabsl&lt;/code&gt; is called. Otherwise, if the argument has integer type or has type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;fabs&lt;/code&gt; is called. Otherwise, &lt;code&gt;fabsf&lt;/code&gt; is called. If the argument is complex, then the macro invokes the corresponding complex function (&lt;code&gt;&lt;a href=&quot;../complex/cabs&quot;&gt;cabsf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../complex/cabs&quot;&gt;cabs&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../complex/cabs&quot;&gt;cabsl&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si el argumento tiene tipo &lt;code&gt;long double&lt;/code&gt; , se llama a &lt;code&gt;fabsl&lt;/code&gt; . De lo contrario, si el argumento tiene un tipo entero o tiene un tipo &lt;code&gt;double&lt;/code&gt; , se llama a &lt;code&gt;fabs&lt;/code&gt; . De lo contrario, se llama a &lt;code&gt;fabsf&lt;/code&gt; . Si el argumento es complejo, la macro invoca la funci&amp;oacute;n compleja correspondiente ( &lt;code&gt;&lt;a href=&quot;../complex/cabs&quot;&gt;cabsf&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../complex/cabs&quot;&gt;cabs&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../complex/cabs&quot;&gt;cabsl&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="3c8338b5e884a4c54f9b4bbc59caf4e199cb5a7b" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If the argument has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;sinhl&lt;/code&gt; is called. Otherwise, if the argument has integer type or the type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;sinh&lt;/code&gt; is called. Otherwise, &lt;code&gt;sinhf&lt;/code&gt; is called. If the argument is complex, then the macro invokes the corresponding complex function (&lt;code&gt;&lt;a href=&quot;../complex/csinh&quot;&gt;csinhf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../complex/csinh&quot;&gt;csinh&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../complex/csinh&quot;&gt;csinhl&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si el argumento tiene tipo &lt;code&gt;long double&lt;/code&gt; , se llama a &lt;code&gt;sinhl&lt;/code&gt; . De lo contrario, si el argumento tiene un tipo entero o el tipo &lt;code&gt;double&lt;/code&gt; , se llama a &lt;code&gt;sinh&lt;/code&gt; . De lo contrario, se llama &lt;code&gt;sinhf&lt;/code&gt; . Si el argumento es complejo, la macro invoca la funci&amp;oacute;n compleja correspondiente ( &lt;code&gt;&lt;a href=&quot;../complex/csinh&quot;&gt;csinhf&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../complex/csinh&quot;&gt;csinh&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../complex/csinh&quot;&gt;csinhl&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="049ccd0355bff3623027dd800aec381b1ccb415a" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If the argument has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;sinl&lt;/code&gt; is called. Otherwise, if the argument has integer type or the type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;sin&lt;/code&gt; is called. Otherwise, &lt;code&gt;sinf&lt;/code&gt; is called. If the argument is complex, then the macro invokes the corresponding complex function (&lt;code&gt;&lt;a href=&quot;../complex/csin&quot;&gt;csinf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../complex/csin&quot;&gt;csin&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../complex/csin&quot;&gt;csinl&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si el argumento tiene tipo &lt;code&gt;long double&lt;/code&gt; , se llama a &lt;code&gt;sinl&lt;/code&gt; . De lo contrario, si el argumento tiene n&amp;uacute;mero entero tipo o del tipo &lt;code&gt;double&lt;/code&gt; , &lt;code&gt;sin&lt;/code&gt; se llama. De lo contrario, se llama &lt;code&gt;sinf&lt;/code&gt; . Si el argumento es complejo, la macro invoca la funci&amp;oacute;n compleja correspondiente ( &lt;code&gt;&lt;a href=&quot;../complex/csin&quot;&gt;csinf&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../complex/csin&quot;&gt;csin&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../complex/csin&quot;&gt;csinl&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="131f301b6ec6668d466a39d5a21c0b5dccaf5749" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If the argument has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;tanhl&lt;/code&gt; is called. Otherwise, if the argument has integer type or the type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;tanh&lt;/code&gt; is called. Otherwise, &lt;code&gt;tanhf&lt;/code&gt; is called. If the argument is complex, then the macro invokes the corresponding complex function (&lt;code&gt;&lt;a href=&quot;../complex/ctanh&quot;&gt;ctanhf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../complex/ctanh&quot;&gt;ctanh&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../complex/ctanh&quot;&gt;ctanhl&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si el argumento tiene tipo &lt;code&gt;long double&lt;/code&gt; , se llama a &lt;code&gt;tanhl&lt;/code&gt; . De lo contrario, si el argumento tiene un tipo entero o el tipo &lt;code&gt;double&lt;/code&gt; , se llama a &lt;code&gt;tanh&lt;/code&gt; . De lo contrario, se llama &lt;code&gt;tanhf&lt;/code&gt; . Si el argumento es complejo, la macro invoca la funci&amp;oacute;n compleja correspondiente ( &lt;code&gt;&lt;a href=&quot;../complex/ctanh&quot;&gt;ctanhf&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../complex/ctanh&quot;&gt;ctanh&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../complex/ctanh&quot;&gt;ctanhl&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="3dc570e1fdeaaa49641c33784dcdb144ac322d16" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: If the argument has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;tanl&lt;/code&gt; is called. Otherwise, if the argument has integer type or the type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;tan&lt;/code&gt; is called. Otherwise, &lt;code&gt;tanf&lt;/code&gt; is called. If the argument is complex, then the macro invokes the corresponding complex function (&lt;code&gt;&lt;a href=&quot;../complex/ctan&quot;&gt;ctanf&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../complex/ctan&quot;&gt;ctan&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../complex/ctan&quot;&gt;ctanl&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si el argumento tiene tipo &lt;code&gt;long double&lt;/code&gt; , se llama a &lt;code&gt;tanl&lt;/code&gt; . De lo contrario, si el argumento tiene un tipo entero o el tipo &lt;code&gt;double&lt;/code&gt; , se llama a &lt;code&gt;tan&lt;/code&gt; . De lo contrario, se llama &lt;code&gt;tanf&lt;/code&gt; . Si el argumento es complejo, la macro invoca la funci&amp;oacute;n compleja correspondiente ( &lt;code&gt;&lt;a href=&quot;../complex/ctan&quot;&gt;ctanf&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../complex/ctan&quot;&gt;ctan&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../complex/ctan&quot;&gt;ctanl&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="555fdc61d9284f807c4faa86a7b50de7ee4dc8da" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: if &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;long double &lt;a href=&quot;imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;cabsl&lt;/code&gt; is called. If &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;float &lt;a href=&quot;imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;cabsf&lt;/code&gt; is called. If &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;double &lt;a href=&quot;imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;cabs&lt;/code&gt; is called. For real and integer types, the corresponding version of &lt;code&gt;&lt;a href=&quot;../math/fabs&quot;&gt;fabs&lt;/a&gt;&lt;/code&gt; is called.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;z&lt;/code&gt; tiene el tipo &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;long double &lt;a href=&quot;imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt; , se llama a &lt;code&gt;cabsl&lt;/code&gt; . Si &lt;code&gt;z&lt;/code&gt; tiene tipo &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;float &lt;a href=&quot;imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt; , se llama a &lt;code&gt;cabsf&lt;/code&gt; . Si &lt;code&gt;z&lt;/code&gt; tiene el tipo &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;double &lt;a href=&quot;imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt; , se llama a los &lt;code&gt;cabs&lt;/code&gt; . Para los tipos reales y enteros, se llama la versi&amp;oacute;n correspondiente de &lt;code&gt;&lt;a href=&quot;../math/fabs&quot;&gt;fabs&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5eaeed607463b223520f11bc760cd02a8acb3bdd" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: if &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;long double &lt;a href=&quot;imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;cargl&lt;/code&gt; is called. If &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;float &lt;a href=&quot;imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;cargf&lt;/code&gt; is called. If &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;double &lt;a href=&quot;imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, or any integer type, &lt;code&gt;carg&lt;/code&gt; is called.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;z&lt;/code&gt; tiene un tipo &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;long double &lt;a href=&quot;imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;long double&lt;/code&gt; , se llama &lt;code&gt;cargl&lt;/code&gt; . Si &lt;code&gt;z&lt;/code&gt; tiene &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; flotante de tipo , &lt;code&gt;float &lt;a href=&quot;imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;float&lt;/code&gt; , se llama &lt;code&gt;cargf&lt;/code&gt; . Si &lt;code&gt;z&lt;/code&gt; tiene un tipo &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;double &lt;a href=&quot;imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;double&lt;/code&gt; o cualquier tipo entero, se llama &lt;code&gt;carg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e253e5ad8c4e7bf07207416cc1d84d776cac27d4" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: if &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;long double &lt;a href=&quot;imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;cimagl&lt;/code&gt; is called. If &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;float &lt;a href=&quot;imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;cimagf&lt;/code&gt; is called. If &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;double &lt;a href=&quot;imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, or any integer type, &lt;code&gt;cimag&lt;/code&gt; is called.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;z&lt;/code&gt; tiene un tipo &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;long double &lt;a href=&quot;imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;long double&lt;/code&gt; , se llama &lt;code&gt;cimagl&lt;/code&gt; . Si &lt;code&gt;z&lt;/code&gt; tiene &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; tipo flotante , &lt;code&gt;float &lt;a href=&quot;imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;float&lt;/code&gt; , se llama &lt;code&gt;cimagf&lt;/code&gt; . Si &lt;code&gt;z&lt;/code&gt; tiene un tipo &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;double &lt;a href=&quot;imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;double&lt;/code&gt; o cualquier tipo entero, se llama &lt;code&gt;cimag&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d269a74e0faf2661ee416134452eedf856f6b39a" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: if &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;long double &lt;a href=&quot;imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;conjl&lt;/code&gt; is called. If &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;float &lt;a href=&quot;imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;conjf&lt;/code&gt; is called. If &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;double &lt;a href=&quot;imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, or any integer type, &lt;code&gt;conj&lt;/code&gt; is called.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;z&lt;/code&gt; tiene un tipo &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;long double &lt;a href=&quot;imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;long double&lt;/code&gt; , se llama &lt;code&gt;conjl&lt;/code&gt; . Si &lt;code&gt;z&lt;/code&gt; tiene tipo &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; flotante , &lt;code&gt;float &lt;a href=&quot;imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;float&lt;/code&gt; , se llama &lt;code&gt;conjf&lt;/code&gt; . Si &lt;code&gt;z&lt;/code&gt; tiene un tipo &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;double &lt;a href=&quot;imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;double&lt;/code&gt; o cualquier tipo entero, se llama &lt;code&gt;conj&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="673bf9520de5e6d2d5dd7c039a570b5370ea2d74" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: if &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;long double &lt;a href=&quot;imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;cprojl&lt;/code&gt; is called. If &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;float &lt;a href=&quot;imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;cprojf&lt;/code&gt; is called. If &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;double &lt;a href=&quot;imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, or any integer type, &lt;code&gt;cproj&lt;/code&gt; is called.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;z&lt;/code&gt; tiene el tipo &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;long double &lt;a href=&quot;imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;long double&lt;/code&gt; , se llama &lt;code&gt;cprojl&lt;/code&gt; . Si &lt;code&gt;z&lt;/code&gt; tiene un tipo de &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; flotante , &lt;code&gt;float &lt;a href=&quot;imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;float&lt;/code&gt; , se llama a &lt;code&gt;cprojf&lt;/code&gt; . Si &lt;code&gt;z&lt;/code&gt; tiene un tipo &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;double &lt;a href=&quot;imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;double&lt;/code&gt; o cualquier tipo entero, se llama &lt;code&gt;cproj&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c09215a092b8cd6f3f872fe6f6effa76fef2c382" translate="yes" xml:space="preserve">
          <source>4) Type-generic macro: if &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;long double &lt;a href=&quot;imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;creall&lt;/code&gt; is called. If &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;float &lt;a href=&quot;imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;crealf&lt;/code&gt; is called. If &lt;code&gt;z&lt;/code&gt; has type &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;double &lt;a href=&quot;imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, or any integer type, &lt;code&gt;creal&lt;/code&gt; is called.</source>
          <target state="translated">4) Macro de tipo gen&amp;eacute;rico: si &lt;code&gt;z&lt;/code&gt; tiene el tipo &lt;code&gt;long double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;long double &lt;a href=&quot;imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;long double&lt;/code&gt; , se llama &lt;code&gt;creall&lt;/code&gt; . Si &lt;code&gt;z&lt;/code&gt; tiene el tipo &lt;code&gt;float &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; flotante , &lt;code&gt;float &lt;a href=&quot;imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt; o &lt;code&gt;float&lt;/code&gt; , se llama &lt;code&gt;crealf&lt;/code&gt; . Si &lt;code&gt;z&lt;/code&gt; tiene un tipo &lt;code&gt;double &lt;a href=&quot;complex&quot;&gt;complex&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;double &lt;a href=&quot;imaginary&quot;&gt;imaginary&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;double&lt;/code&gt; o cualquier tipo entero, se llama &lt;code&gt;creal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b9483849390d9f6244b1b1ec26d1fc94e54044e9" translate="yes" xml:space="preserve">
          <source>4) Type-generic macros: If &lt;code&gt;arg&lt;/code&gt; has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;ilogbl&lt;/code&gt; is called. Otherwise, if &lt;code&gt;arg&lt;/code&gt; has integer type or the type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;ilogb&lt;/code&gt; is called. Otherwise, &lt;code&gt;ilogbf&lt;/code&gt; is called.</source>
          <target state="translated">4) Macros de tipo gen&amp;eacute;rico: si &lt;code&gt;arg&lt;/code&gt; tiene tipo &lt;code&gt;long double&lt;/code&gt; , se llama a &lt;code&gt;ilogbl&lt;/code&gt; . De lo contrario, si &lt;code&gt;arg&lt;/code&gt; tiene un tipo entero o el tipo &lt;code&gt;double&lt;/code&gt; , se llama a &lt;code&gt;ilogb&lt;/code&gt; . De lo contrario, se llama a &lt;code&gt;ilogbf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1b54b38041fa7db6b10d95246f06ea6435ccd0c4" translate="yes" xml:space="preserve">
          <source>4) Type-generic macros: If &lt;code&gt;arg&lt;/code&gt; has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;logbl&lt;/code&gt; is called. Otherwise, if &lt;code&gt;arg&lt;/code&gt; has integer type or the type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;logb&lt;/code&gt; is called. Otherwise, &lt;code&gt;logbf&lt;/code&gt; is called.</source>
          <target state="translated">4) Macros de tipo gen&amp;eacute;rico: si &lt;code&gt;arg&lt;/code&gt; tiene tipo &lt;code&gt;long double&lt;/code&gt; , se llama a &lt;code&gt;logbl&lt;/code&gt; . De lo contrario, si &lt;code&gt;arg&lt;/code&gt; tiene un tipo entero o el tipo &lt;code&gt;double&lt;/code&gt; , se llama a &lt;code&gt;logb&lt;/code&gt; . De lo contrario, se llama a &lt;code&gt;logbf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e652f0dc8ebcd9420c0ec312d1fa4939f6e2c14d" translate="yes" xml:space="preserve">
          <source>4) Writes the results to a character string &lt;code&gt;buffer&lt;/code&gt;. At most &lt;code&gt;buf_size - 1&lt;/code&gt; characters are written. The resulting character string will be terminated with a null character, unless &lt;code&gt;buf_size&lt;/code&gt; is zero. If &lt;code&gt;buf_size&lt;/code&gt; is zero, nothing is written and &lt;code&gt;buffer&lt;/code&gt; may be a null pointer, however the return value (number of bytes that would be written not including the null terminator) is still calculated and returned.</source>
          <target state="translated">4) Escribe los resultados en un &lt;code&gt;buffer&lt;/code&gt; cadena de caracteres . Como m&amp;aacute;ximo &lt;code&gt;buf_size - 1&lt;/code&gt; se escriben 1 caracteres. La cadena de caracteres resultante terminar&amp;aacute; con un car&amp;aacute;cter nulo, a menos que &lt;code&gt;buf_size&lt;/code&gt; sea ​​cero. Si &lt;code&gt;buf_size&lt;/code&gt; es cero, no se escribe nada y el &lt;code&gt;buffer&lt;/code&gt; puede ser un puntero nulo, sin embargo, el valor de retorno (n&amp;uacute;mero de bytes que se escribir&amp;iacute;an sin incluir el terminador nulo) a&amp;uacute;n se calcula y se devuelve.</target>
        </trans-unit>
        <trans-unit id="a6a2dd5d594f496c61670676cb961bd1505420c2" translate="yes" xml:space="preserve">
          <source>4) Writes the results to a character string &lt;code&gt;buffer&lt;/code&gt;. At most &lt;code&gt;bufsz&lt;/code&gt; - 1 characters are written. The resulting character string will be terminated with a null character, unless &lt;code&gt;bufsz&lt;/code&gt; is zero. If &lt;code&gt;bufsz&lt;/code&gt; is zero, nothing is written and &lt;code&gt;buffer&lt;/code&gt; may be a null pointer, however the return value (number of bytes that would be written not including the null terminator) is still calculated and returned.</source>
          <target state="translated">4) Escribe los resultados en un &lt;code&gt;buffer&lt;/code&gt; cadena de caracteres . A lo sumo &lt;code&gt;bufsz&lt;/code&gt; : se escriben 1 caracteres. La cadena de caracteres resultante terminar&amp;aacute; con un car&amp;aacute;cter nulo, a menos que &lt;code&gt;bufsz&lt;/code&gt; sea ​​cero. Si &lt;code&gt;bufsz&lt;/code&gt; es cero, no se escribe nada y el &lt;code&gt;buffer&lt;/code&gt; puede ser un puntero nulo, sin embargo, el valor de retorno (n&amp;uacute;mero de bytes que se escribir&amp;iacute;an sin incluir el terminador nulo) todav&amp;iacute;a se calcula y se devuelve.</target>
        </trans-unit>
        <trans-unit id="a332acbb84d6d176b1d94227467c38f3a77490a4" translate="yes" xml:space="preserve">
          <source>4) all other identifiers are looked up in the name space of ordinary identifiers.</source>
          <target state="translated">4)todos los demás identificadores se buscan en el espacio de nombres de los identificadores ordinarios.</target>
        </trans-unit>
        <trans-unit id="e8a471c794cf3ac2f6db73e86d13e5c4b53b8ca0" translate="yes" xml:space="preserve">
          <source>4) bitwise XOR</source>
          <target state="translated">4)bitwise XOR</target>
        </trans-unit>
        <trans-unit id="e87ee9f337558f535872130a6f6861b7d7cc2399" translate="yes" xml:space="preserve">
          <source>4) greater or equal expression</source>
          <target state="translated">4)mayor o igual expresión</target>
        </trans-unit>
        <trans-unit id="9fb0cea03035ef4760ed2a09d395810eb7dbbcc3" translate="yes" xml:space="preserve">
          <source>4) if one is a pointer and the other is a null pointer constant, the type is the type of that pointer</source>
          <target state="translated">4)si uno es un puntero y el otro es una constante de puntero nulo,el tipo es el tipo de ese puntero</target>
        </trans-unit>
        <trans-unit id="debc48fd1454176bb35ee7e5bea39f542341bc79" translate="yes" xml:space="preserve">
          <source>4) iteration statements</source>
          <target state="translated">4)declaraciones de iteración</target>
        </trans-unit>
        <trans-unit id="801c4f0af4bbbd03d78638c0bb722a0afe226e59" translate="yes" xml:space="preserve">
          <source>4) number of characters (not including the terminating null character) which would have been written to &lt;code&gt;buffer&lt;/code&gt; if &lt;code&gt;bufsz&lt;/code&gt; was ignored, or a negative value if an encoding error (for string and character conversion specifiers) occurred</source>
          <target state="translated">4) n&amp;uacute;mero de caracteres (sin incluir el car&amp;aacute;cter nulo final) que se habr&amp;iacute;an escrito en el &lt;code&gt;buffer&lt;/code&gt; si se ignoraba &lt;code&gt;bufsz&lt;/code&gt; , o un valor negativo si se produjera un error de codificaci&amp;oacute;n (para los especificadores de conversi&amp;oacute;n de cadenas y caracteres)</target>
        </trans-unit>
        <trans-unit id="f13e6d6be4c86ea31a7f824c05538a9cded97caa" translate="yes" xml:space="preserve">
          <source>4) rank of char equals rank of signed char and rank of unsigned char</source>
          <target state="translated">4)El rango de los caracteres es igual al rango de los caracteres firmados y al rango de los caracteres no firmados.</target>
        </trans-unit>
        <trans-unit id="8b95ede6bb45607d5df79e44dfff65f1d643196d" translate="yes" xml:space="preserve">
          <source>4) special case: &amp;amp; and the * that is implied in [] cancel each other, only the addition implied in [] is evaluated</source>
          <target state="translated">4) caso especial: &amp;amp; y el * que est&amp;aacute; impl&amp;iacute;cito en [] se cancelan entre s&amp;iacute;, solo se eval&amp;uacute;a la adici&amp;oacute;n impl&amp;iacute;cita en []</target>
        </trans-unit>
        <trans-unit id="a8b97756c5320629120afcd36fdc9ed98682b255" translate="yes" xml:space="preserve">
          <source>4) wide character constant, e.g. &lt;code&gt;L'&amp;beta;'&lt;/code&gt; or &lt;code&gt;L'貓&lt;/code&gt;. Such constant has type &lt;code&gt;wchar_t&lt;/code&gt; and a value equal to the value of c-char in the execution wide character set (that is, the value that would be produced by &lt;code&gt;&lt;a href=&quot;../string/multibyte/mbtowc&quot;&gt;mbtowc&lt;/a&gt;&lt;/code&gt;). If c-char is not representable or maps to more than one wide character (e.g. a non-BMP value on Windows where wchar_t is 16-bit), the behavior is implementation-defined .</source>
          <target state="translated">4) constante de caracteres anchos, p. Ej. &lt;code&gt;L'&amp;beta;'&lt;/code&gt; o &lt;code&gt;L'貓&lt;/code&gt; . Dicha constante tiene el tipo &lt;code&gt;wchar_t&lt;/code&gt; y un valor igual al valor de c-char en el conjunto de caracteres de ejecuci&amp;oacute;n amplia (es decir, el valor que producir&amp;iacute;a &lt;code&gt;&lt;a href=&quot;../string/multibyte/mbtowc&quot;&gt;mbtowc&lt;/a&gt;&lt;/code&gt; ). Si c-char no es representable o se asigna a m&amp;aacute;s de un car&amp;aacute;cter ancho (por ejemplo, un valor no BMP en Windows donde wchar_t es de 16 bits), el comportamiento est&amp;aacute; definido por la implementaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="2a84156b1e5d2b8dfd5bfcccc94c601e1d033fcc" translate="yes" xml:space="preserve">
          <source>4)&lt;a href=&quot;array&quot;&gt;array declarator&lt;/a&gt;: the declaration &lt;code&gt;S D[N]&lt;/code&gt; declares &lt;code&gt;D&lt;/code&gt; as an array of &lt;code&gt;N&lt;/code&gt; objects of the type determined by &lt;code&gt;S&lt;/code&gt;. noptr-declarator is any other declarator except unparenthesized pointer declarator.</source>
          <target state="translated">4) &lt;a href=&quot;array&quot;&gt;array declarador&lt;/a&gt; : la declaraci&amp;oacute;n &lt;code&gt;S D[N]&lt;/code&gt; declara &lt;code&gt;D&lt;/code&gt; como una matriz de &lt;code&gt;N&lt;/code&gt; objetos del tipo determinado por &lt;code&gt;S&lt;/code&gt; . noptr-declarator es cualquier otro declarador, excepto el declarador de puntero sin par&amp;eacute;ntesis.</target>
        </trans-unit>
        <trans-unit id="616eb196220428421265e5f8738b09b808f13656" translate="yes" xml:space="preserve">
          <source>4)&lt;a href=&quot;goto&quot;&gt;goto&lt;/a&gt; statement</source>
          <target state="translated">4) &lt;a href=&quot;goto&quot;&gt;ir a la&lt;/a&gt; declaraci&amp;oacute;n</target>
        </trans-unit>
        <trans-unit id="3a07a9dfd75b47f48588a149875e9da08571018f" translate="yes" xml:space="preserve">
          <source>4)&lt;a href=&quot;operator_assignment&quot;&gt;Assignment&lt;/a&gt;(until C11)&lt;a href=&quot;initialization&quot;&gt;Initialization&lt;/a&gt;(since C11) is performed to copy the value of each argument to the corresponding function parameter (note; the function can modify its parameters, and those changes do not affect the arguments; C function calls are only call-by-value).</source>
          <target state="translated">4) &lt;a href=&quot;operator_assignment&quot;&gt;Asignaci&amp;oacute;n&lt;/a&gt; (hasta C11) La &lt;a href=&quot;initialization&quot;&gt;inicializaci&amp;oacute;n&lt;/a&gt; (desde C11) se realiza para copiar el valor de cada argumento en el par&amp;aacute;metro de funci&amp;oacute;n correspondiente (nota; la funci&amp;oacute;n puede modificar sus par&amp;aacute;metros y esos cambios no afectan los argumentos; las llamadas a funciones C son solo llamada por valor).</target>
        </trans-unit>
        <trans-unit id="61fc5e0d1832ba696c0a1a7138eb93c59f168e63" translate="yes" xml:space="preserve">
          <source>4,5) Number of wide characters written if successful or negative value if an error occurred.</source>
          <target state="translated">4,5)Número de caracteres anchos escritos si se ha tenido éxito o valor negativo si se ha producido un error.</target>
        </trans-unit>
        <trans-unit id="6b819074d99c835cfa627632287a0d21a703a16b" translate="yes" xml:space="preserve">
          <source>4,8) Type-generic macros: If &lt;code&gt;arg&lt;/code&gt; has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;scalbnl&lt;/code&gt; or &lt;code&gt;scalblnl&lt;/code&gt; is called. Otherwise, if &lt;code&gt;arg&lt;/code&gt; has integer type or the type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;scalbn&lt;/code&gt; or &lt;code&gt;scalbln&lt;/code&gt; is called. Otherwise, &lt;code&gt;scalbnf&lt;/code&gt; or &lt;code&gt;scalblnf&lt;/code&gt; is called, respectively.</source>
          <target state="translated">4,8) Macros de tipo gen&amp;eacute;rico: si &lt;code&gt;arg&lt;/code&gt; tiene el tipo &lt;code&gt;long double&lt;/code&gt; , se llama a &lt;code&gt;scalbnl&lt;/code&gt; o &lt;code&gt;scalblnl&lt;/code&gt; . De lo contrario, si &lt;code&gt;arg&lt;/code&gt; tiene un tipo entero o el tipo &lt;code&gt;double&lt;/code&gt; , se llama a &lt;code&gt;scalbn&lt;/code&gt; o &lt;code&gt;scalbln&lt;/code&gt; . De lo contrario, se llama &lt;code&gt;scalbnf&lt;/code&gt; o &lt;code&gt;scalblnf&lt;/code&gt; , respectivamente.</target>
        </trans-unit>
        <trans-unit id="701b9bd6f3e085e1eff47f7f9b618514d8124e44" translate="yes" xml:space="preserve">
          <source>4,8,12) Type-generic macros: If &lt;code&gt;arg&lt;/code&gt; has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;rintl&lt;/code&gt;, &lt;code&gt;lrintl&lt;/code&gt;, &lt;code&gt;llrintl&lt;/code&gt; is called. Otherwise, if &lt;code&gt;arg&lt;/code&gt; has integer type or the type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;rint&lt;/code&gt;, &lt;code&gt;lrint&lt;/code&gt;, &lt;code&gt;llrint&lt;/code&gt; is called. Otherwise, &lt;code&gt;rintf&lt;/code&gt;, &lt;code&gt;lrintf&lt;/code&gt;, &lt;code&gt;llrintf&lt;/code&gt; is called, respectively.</source>
          <target state="translated">4,8,12) Macros de tipo gen&amp;eacute;rico: si &lt;code&gt;arg&lt;/code&gt; tiene el tipo &lt;code&gt;long double&lt;/code&gt; , se &lt;code&gt;rintl&lt;/code&gt; , &lt;code&gt;lrintl&lt;/code&gt; , &lt;code&gt;llrintl&lt;/code&gt; . De lo contrario, si &lt;code&gt;arg&lt;/code&gt; tiene tipo entero o el tipo &lt;code&gt;double&lt;/code&gt; , &lt;code&gt;rint&lt;/code&gt; , &lt;code&gt;lrint&lt;/code&gt; , &lt;code&gt;llrint&lt;/code&gt; se llama. De lo contrario, se &lt;code&gt;rintf&lt;/code&gt; , &lt;code&gt;lrintf&lt;/code&gt; , &lt;code&gt;llrintf&lt;/code&gt; , respectivamente.</target>
        </trans-unit>
        <trans-unit id="f5feea8142b580a120f0974c769432c82741037c" translate="yes" xml:space="preserve">
          <source>4,8,12) Type-generic macros: If &lt;code&gt;arg&lt;/code&gt; has type &lt;code&gt;long double&lt;/code&gt;, &lt;code&gt;roundl&lt;/code&gt;, &lt;code&gt;lroundl&lt;/code&gt;, &lt;code&gt;llroundl&lt;/code&gt; is called. Otherwise, if &lt;code&gt;arg&lt;/code&gt; has integer type or the type &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;round&lt;/code&gt;, &lt;code&gt;lround&lt;/code&gt;, &lt;code&gt;llround&lt;/code&gt; is called. Otherwise, &lt;code&gt;roundf&lt;/code&gt;, &lt;code&gt;lroundf&lt;/code&gt;, &lt;code&gt;llroundf&lt;/code&gt; is called, respectively.</source>
          <target state="translated">4,8,12) Macros de tipo gen&amp;eacute;rico: si &lt;code&gt;arg&lt;/code&gt; tiene el tipo &lt;code&gt;long double&lt;/code&gt; , se &lt;code&gt;roundl&lt;/code&gt; , &lt;code&gt;lroundl&lt;/code&gt; , &lt;code&gt;llroundl&lt;/code&gt; . De lo contrario, si &lt;code&gt;arg&lt;/code&gt; tiene un tipo entero o se llama al tipo &lt;code&gt;double&lt;/code&gt; , &lt;code&gt;round&lt;/code&gt; , &lt;code&gt;lround&lt;/code&gt; , &lt;code&gt;llround&lt;/code&gt; . De lo contrario, se &lt;code&gt;roundf&lt;/code&gt; , &lt;code&gt;lroundf&lt;/code&gt; , &lt;code&gt;llroundf&lt;/code&gt; , respectivamente.</target>
        </trans-unit>
        <trans-unit id="bfedcba93ea8a1094d2f2b0c37492578e1d12812" translate="yes" xml:space="preserve">
          <source>4-6) First, converts the first argument to the type of the function, then returns the next representable value of &lt;code&gt;from&lt;/code&gt; in the direction of &lt;code&gt;to&lt;/code&gt;. If &lt;code&gt;from&lt;/code&gt; equals to &lt;code&gt;to&lt;/code&gt;, &lt;code&gt;to&lt;/code&gt; is returned, converted from &lt;code&gt;long double&lt;/code&gt; to the return type of the function without loss of range or precision.</source>
          <target state="translated">4-6) Primero, convierte el primer argumento al tipo de la funci&amp;oacute;n, luego devuelve el siguiente valor representable de &lt;code&gt;from&lt;/code&gt; en la direcci&amp;oacute;n de &lt;code&gt;to&lt;/code&gt; . Si &lt;code&gt;from&lt;/code&gt; igual a igual a &lt;code&gt;to&lt;/code&gt; , &lt;code&gt;to&lt;/code&gt; es devuelto, convertido de &lt;code&gt;long double&lt;/code&gt; con el tipo de retorno de la funci&amp;oacute;n sin p&amp;eacute;rdida de la amplitud o precisi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="8511a4a4d97ef7a294876b5fcaa24a29639ddd7d" translate="yes" xml:space="preserve">
          <source>4-6) If the macro constants &lt;code&gt;FP_FAST_FMAF&lt;/code&gt;, &lt;code&gt;FP_FAST_FMA&lt;/code&gt;, or &lt;code&gt;FP_FAST_FMAL&lt;/code&gt; are defined, the corresponding function &lt;code&gt;fmaf&lt;/code&gt;, &lt;code&gt;fma&lt;/code&gt;, or &lt;code&gt;fmal&lt;/code&gt; evaluates faster (in addition to being more precise) than the expression &lt;code&gt;x*y+z&lt;/code&gt; for &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, and &lt;code&gt;long double&lt;/code&gt; arguments, respectively. If defined, these macros evaluate to integer &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">4-6) Si se &lt;code&gt;FP_FAST_FMAF&lt;/code&gt; constantes macro FP_FAST_FMAF , &lt;code&gt;FP_FAST_FMA&lt;/code&gt; o &lt;code&gt;FP_FAST_FMAL&lt;/code&gt; , la funci&amp;oacute;n correspondiente &lt;code&gt;fmaf&lt;/code&gt; , &lt;code&gt;fma&lt;/code&gt; o &lt;code&gt;fmal&lt;/code&gt; se eval&amp;uacute;a m&amp;aacute;s r&amp;aacute;pido (adem&amp;aacute;s de ser m&amp;aacute;s precisa) que la expresi&amp;oacute;n &lt;code&gt;x*y+z&lt;/code&gt; para &lt;code&gt;float&lt;/code&gt; , &lt;code&gt;double&lt;/code&gt; y &lt;code&gt;long double&lt;/code&gt; argumentos dobles , respectivamente. Si se define, estas macros eval&amp;uacute;an al entero &lt;code&gt;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c2b2b0244e4070858aa2c0d94b59c8757cefc5dc" translate="yes" xml:space="preserve">
          <source>4-6) Same as (1-3), except that &lt;code&gt;%c&lt;/code&gt;, &lt;code&gt;%s&lt;/code&gt;, and &lt;code&gt;%[&lt;/code&gt; conversion specifiers each expect two arguments (the usual pointer and a value of type &lt;code&gt;rsize_t&lt;/code&gt; indicating the size of the receiving array, which may be 1 when reading with a %c into a single char) and except that the following errors are detected at runtime and call the currently installed &lt;a href=&quot;../error/set_constraint_handler_s&quot;&gt;constraint handler&lt;/a&gt; function:</source>
          <target state="translated">4-6) Igual que (1-3), excepto que &lt;code&gt;%c&lt;/code&gt; , &lt;code&gt;%s&lt;/code&gt; y &lt;code&gt;%[&lt;/code&gt; especificadores de conversi&amp;oacute;n esperan dos argumentos (el puntero habitual y un valor de tipo &lt;code&gt;rsize_t&lt;/code&gt; que indica el tama&amp;ntilde;o de la matriz receptora, que puede ser 1 cuando se lee con un% c en un solo car&amp;aacute;cter) y excepto que los siguientes errores se detectan en tiempo de ejecuci&amp;oacute;n y llaman a la funci&amp;oacute;n de &lt;a href=&quot;../error/set_constraint_handler_s&quot;&gt;controlador de restricciones&lt;/a&gt; actualmente instalada :</target>
        </trans-unit>
        <trans-unit id="7eff0ec5e8365825b937886c714c3c2a08d41f33" translate="yes" xml:space="preserve">
          <source>4-6) Same as (1-3), except that &lt;code&gt;%c&lt;/code&gt;, &lt;code&gt;%s&lt;/code&gt;, and &lt;code&gt;%[&lt;/code&gt; conversion specifiers each expect two arguments (the usual pointer and a value of type &lt;code&gt;rsize_t&lt;/code&gt; indicating the size of the receiving array, which may be 1 when reading with a %lc into a single wide character) and except that the following errors are detected at runtime and call the currently installed &lt;a href=&quot;../error/set_constraint_handler_s&quot;&gt;constraint handler&lt;/a&gt; function:</source>
          <target state="translated">4-6) Igual que (1-3), excepto que &lt;code&gt;%c&lt;/code&gt; , &lt;code&gt;%s&lt;/code&gt; y &lt;code&gt;%[&lt;/code&gt; especificadores de conversi&amp;oacute;n esperan dos argumentos (el puntero habitual y un valor de tipo &lt;code&gt;rsize_t&lt;/code&gt; que indica el tama&amp;ntilde;o de la matriz receptora, que puede ser 1 cuando se lee con% lc en un solo car&amp;aacute;cter ancho) y excepto que los siguientes errores se detectan en tiempo de ejecuci&amp;oacute;n y llaman a la funci&amp;oacute;n de &lt;a href=&quot;../error/set_constraint_handler_s&quot;&gt;controlador de restricciones&lt;/a&gt; actualmente instalada :</target>
        </trans-unit>
        <trans-unit id="aecfa6df319d46099718cc295ad11722aa91e3e5" translate="yes" xml:space="preserve">
          <source>4-6) Same as (1-3), except that &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;EOF&lt;/a&gt;&lt;/code&gt; is also returned if there is a runtime constraint violation.</source>
          <target state="translated">4-6) Igual que (1-3), excepto que &lt;code&gt;&lt;a href=&quot;../io&quot;&gt;EOF&lt;/a&gt;&lt;/code&gt; tambi&amp;eacute;n se devuelve si hay una violaci&amp;oacute;n de restricci&amp;oacute;n de tiempo de ejecuci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="1a78fa3daf845ac3d1ef397d31f8f4edd73a5b84" translate="yes" xml:space="preserve">
          <source>4-6) Same as (1-3), except that the following errors are detected at runtime and call the currently installed &lt;a href=&quot;../error/set_constraint_handler_s&quot;&gt;constraint handler&lt;/a&gt; function:</source>
          <target state="translated">4-6) Igual que (1-3), excepto que los siguientes errores se detectan en tiempo de ejecuci&amp;oacute;n y llaman a la funci&amp;oacute;n de &lt;a href=&quot;../error/set_constraint_handler_s&quot;&gt;controlador de restricciones&lt;/a&gt; actualmente instalada :</target>
        </trans-unit>
        <trans-unit id="11850ea3ac2098b560e44d65b926ee2bdebf3302" translate="yes" xml:space="preserve">
          <source>4.1.3 Errors &amp;lt;errno.h&amp;gt;</source>
          <target state="translated">4.1.3 Errores &amp;lt;errno.h&amp;gt;</target>
        </trans-unit>
        <trans-unit id="f57505d8dcc40b41eb1c92dce3c7690507dd06c9" translate="yes" xml:space="preserve">
          <source>4.1.4 Limits &amp;lt;float.h&amp;gt; and &amp;lt;limits.h&amp;gt;</source>
          <target state="translated">4.1.4 L&amp;iacute;mites &amp;lt;float.h&amp;gt; y &amp;lt;limits.h&amp;gt;</target>
        </trans-unit>
        <trans-unit id="6fa17ced5ba223238303d436fea119166891d914" translate="yes" xml:space="preserve">
          <source>4.1.5 Common definitions &amp;lt;stddef.h&amp;gt;</source>
          <target state="translated">4.1.5 Definiciones comunes &amp;lt;stddef.h&amp;gt;</target>
        </trans-unit>
        <trans-unit id="7353b09a616a01b4219c5ded32bdbd81497d87c0" translate="yes" xml:space="preserve">
          <source>4.10 GENERAL UTILITIES &amp;lt;stdlib.h&amp;gt;</source>
          <target state="translated">4.10 UTILIDADES GENERALES &amp;lt;stdlib.h&amp;gt;</target>
        </trans-unit>
        <trans-unit id="5d0707f3ebf5e09557f771518fcb52a988e29451" translate="yes" xml:space="preserve">
          <source>4.10 General utilities &amp;lt;stdlib.h&amp;gt;</source>
          <target state="translated">4.10 Utilidades generales &amp;lt;stdlib.h&amp;gt;</target>
        </trans-unit>
        <trans-unit id="030b7816c78d179a6a891b8e59beeb90698513a5" translate="yes" xml:space="preserve">
          <source>4.10 div_t, ldiv_t</source>
          <target state="translated">4.10 div_t,ldiv_t</target>
        </trans-unit>
        <trans-unit id="73ac77713d660c44f4961c725de06fcb8a7a3151" translate="yes" xml:space="preserve">
          <source>4.10.1.1 The atof function</source>
          <target state="translated">4.10.1.1 La función atof</target>
        </trans-unit>
        <trans-unit id="ffb26e23a3238b8eaa67fce988e27a78ba2e637f" translate="yes" xml:space="preserve">
          <source>4.10.1.2 The atoi function</source>
          <target state="translated">4.10.1.2 La función atoi</target>
        </trans-unit>
        <trans-unit id="34ce89943a3d6555ac388310044b6eb7d19997a9" translate="yes" xml:space="preserve">
          <source>4.10.1.3 The atol function</source>
          <target state="translated">4.10.1.3 La función atómica</target>
        </trans-unit>
        <trans-unit id="f1639fee6f36aa9c32e6a673576bfa2fc8f40ee4" translate="yes" xml:space="preserve">
          <source>4.10.1.4 The strtod function</source>
          <target state="translated">4.10.1.4 La función strtod</target>
        </trans-unit>
        <trans-unit id="67a881370facf5aa93a7f648a1344a38dc27b775" translate="yes" xml:space="preserve">
          <source>4.10.1.5 The strtol function</source>
          <target state="translated">4.10.1.5 La función de los estrógenos</target>
        </trans-unit>
        <trans-unit id="4194394d5c1363fff08d1d2d955bd897fb681f87" translate="yes" xml:space="preserve">
          <source>4.10.1.6 The strtoul function</source>
          <target state="translated">4.10.1.6 La función de estrógeno</target>
        </trans-unit>
        <trans-unit id="25c1094c4460904df01563515105f981cebe5b9c" translate="yes" xml:space="preserve">
          <source>4.10.2 Pseudo-random sequence generation functions</source>
          <target state="translated">4.10.2 Funciones de generación de secuencias seudoaleatorias</target>
        </trans-unit>
        <trans-unit id="308b34386a77545bf507a3ab9ad4c2b4cfa36e1f" translate="yes" xml:space="preserve">
          <source>4.10.2.1 The rand function</source>
          <target state="translated">4.10.2.1 La función rand</target>
        </trans-unit>
        <trans-unit id="74b4e68ffdb31be7c46beef94e0b499f67907642" translate="yes" xml:space="preserve">
          <source>4.10.2.2 The srand function</source>
          <target state="translated">4.10.2.2 La función srand</target>
        </trans-unit>
        <trans-unit id="8a71c4c89aca219e515900109e4ff7057d613639" translate="yes" xml:space="preserve">
          <source>4.10.3.1 The calloc function</source>
          <target state="translated">4.10.3.1 La función calloc</target>
        </trans-unit>
        <trans-unit id="fcc698a751f01ffc79949ed06dcf6544be370eca" translate="yes" xml:space="preserve">
          <source>4.10.3.2 The free function</source>
          <target state="translated">4.10.3.2 La función libre</target>
        </trans-unit>
        <trans-unit id="b5f3ba525ddbcc4eb2cddd39e44b63523542cf83" translate="yes" xml:space="preserve">
          <source>4.10.3.3 The malloc function</source>
          <target state="translated">4.10.3.3 La función mallocada</target>
        </trans-unit>
        <trans-unit id="efe4719098c6fa7cab388133ed0a98f5d48aa581" translate="yes" xml:space="preserve">
          <source>4.10.3.4 The realloc function</source>
          <target state="translated">4.10.3.4 La función de reasignación</target>
        </trans-unit>
        <trans-unit id="20d28119c10803fb0141489bfef1e262dd8d717b" translate="yes" xml:space="preserve">
          <source>4.10.4.1 The abort function</source>
          <target state="translated">4.10.4.1 La función de abortar</target>
        </trans-unit>
        <trans-unit id="4556d095d4b19ef9e85f0e2986260fcea040099f" translate="yes" xml:space="preserve">
          <source>4.10.4.2 The atexit function</source>
          <target state="translated">4.10.4.2 La función atexit</target>
        </trans-unit>
        <trans-unit id="c53931011335c38c14d0aba40426c0b769fe2aed" translate="yes" xml:space="preserve">
          <source>4.10.4.3 The exit function</source>
          <target state="translated">4.10.4.3 La función de salida</target>
        </trans-unit>
        <trans-unit id="1162417de596d412e1c5aff5d52d636284d1c19b" translate="yes" xml:space="preserve">
          <source>4.10.4.4 The getenv function</source>
          <target state="translated">4.10.4.4 La función getenv</target>
        </trans-unit>
        <trans-unit id="2f51cb245b45e70adbf95eb64e997ae326005b8f" translate="yes" xml:space="preserve">
          <source>4.10.4.5 The system function</source>
          <target state="translated">4.10.4.5 La función del sistema</target>
        </trans-unit>
        <trans-unit id="bb1f10b3e5bc0ec95785db4501e117609e541b60" translate="yes" xml:space="preserve">
          <source>4.10.5 Searching and sorting utilities</source>
          <target state="translated">4.10.5 Utilidades de búsqueda y clasificación</target>
        </trans-unit>
        <trans-unit id="7ef419c7aac1e72480552fe294570b622a050423" translate="yes" xml:space="preserve">
          <source>4.10.5.1 The bsearch function</source>
          <target state="translated">4.10.5.1 La función de búsqueda</target>
        </trans-unit>
        <trans-unit id="965ae84d15b829fb612775ef6017644db1a921f3" translate="yes" xml:space="preserve">
          <source>4.10.5.2 The qsort function</source>
          <target state="translated">4.10.5.2 La función qsort</target>
        </trans-unit>
        <trans-unit id="4d0f5a12e2a7b77b70c380d5d015e05a8e81f486" translate="yes" xml:space="preserve">
          <source>4.10.6.1 The abs function</source>
          <target state="translated">4.10.6.1 La función de los abdominales</target>
        </trans-unit>
        <trans-unit id="94e625c17206edf0cf1ebe956ab5a6b995ff522a" translate="yes" xml:space="preserve">
          <source>4.10.6.2 The div function</source>
          <target state="translated">4.10.6.2 La función div</target>
        </trans-unit>
        <trans-unit id="662929a6fbf43674fc9cc4edc5ffd22eb94ca280" translate="yes" xml:space="preserve">
          <source>4.10.6.3 The labs function</source>
          <target state="translated">4.10.6.3 Los laboratorios funcionan</target>
        </trans-unit>
        <trans-unit id="2d3c27e0f1ea58155133b63f93402d8beb0a1e7f" translate="yes" xml:space="preserve">
          <source>4.10.6.4 The ldiv function</source>
          <target state="translated">4.10.6.4 La función ldiv</target>
        </trans-unit>
        <trans-unit id="e9e45ca8d87fcb8818ba82e59efd66ad0455fa57" translate="yes" xml:space="preserve">
          <source>4.10.7.1 The mblen function</source>
          <target state="translated">4.10.7.1 La función mblen</target>
        </trans-unit>
        <trans-unit id="dddb7edba70c1ae83e46c74e17dc5b2be50589d3" translate="yes" xml:space="preserve">
          <source>4.10.7.2 The mbtowc function</source>
          <target state="translated">4.10.7.2 La función mbtowc</target>
        </trans-unit>
        <trans-unit id="a3e464d202a0d2a508f27813e6316ed7dc6d5794" translate="yes" xml:space="preserve">
          <source>4.10.7.3 The wctomb function</source>
          <target state="translated">4.10.7.3 La función de la matriz</target>
        </trans-unit>
        <trans-unit id="ea3bafb1a88da3617856633ae48e3a6253ac9a98" translate="yes" xml:space="preserve">
          <source>4.10.8.1 The mbstowcs function</source>
          <target state="translated">4.10.8.1 La función de mbstowcs</target>
        </trans-unit>
        <trans-unit id="0b64f13e1aaccfd591daa38518ef7895f7f03153" translate="yes" xml:space="preserve">
          <source>4.10.8.2 The wcstombs function</source>
          <target state="translated">4.10.8.2 La función del wcstombs</target>
        </trans-unit>
        <trans-unit id="397aaa3c657d4e1812ea4859df77a07bfcef863e" translate="yes" xml:space="preserve">
          <source>4.11 STRING HANDLING &amp;lt;string.h&amp;gt;</source>
          <target state="translated">4.11 MANEJO DE LA CADENA &amp;lt;string.h&amp;gt;</target>
        </trans-unit>
        <trans-unit id="27982b73a2fe5acd81b1c0a5b28a1b7a75158eb5" translate="yes" xml:space="preserve">
          <source>4.11.2.1 The memcpy function</source>
          <target state="translated">4.11.2.1 La función de memcpy</target>
        </trans-unit>
        <trans-unit id="cf0c0722bf7c311c75c0af939e03487916bb77d4" translate="yes" xml:space="preserve">
          <source>4.11.2.2 The memmove function</source>
          <target state="translated">4.11.2.2 La función de memmove</target>
        </trans-unit>
        <trans-unit id="cb3e7be0f8376b2a0191e780825fb8cae1dee869" translate="yes" xml:space="preserve">
          <source>4.11.2.3 The strcpy function</source>
          <target state="translated">4.11.2.3 La función strcpy</target>
        </trans-unit>
        <trans-unit id="3a44bccbd5814cffcdb2af127773763f1cf1c134" translate="yes" xml:space="preserve">
          <source>4.11.2.4 The strncpy function</source>
          <target state="translated">4.11.2.4 La función strncpy</target>
        </trans-unit>
        <trans-unit id="35851af97d147704325927462592492a63707f05" translate="yes" xml:space="preserve">
          <source>4.11.3.1 The strcat function</source>
          <target state="translated">4.11.3.1 La función strcat</target>
        </trans-unit>
        <trans-unit id="b0d9f7aade5bef14f572098acfe4acb002f64534" translate="yes" xml:space="preserve">
          <source>4.11.3.2 The strncat function</source>
          <target state="translated">4.11.3.2 La función strncat</target>
        </trans-unit>
        <trans-unit id="147d8a2da1e57b6ccff764009d826a8391ddd931" translate="yes" xml:space="preserve">
          <source>4.11.4.1 The memcmp function</source>
          <target state="translated">4.11.4.1 La función memcmp</target>
        </trans-unit>
        <trans-unit id="53d87c7e3caad5b33a9a123ce5dc888f9c673267" translate="yes" xml:space="preserve">
          <source>4.11.4.2 The strcmp function</source>
          <target state="translated">4.11.4.2 La función strcmp</target>
        </trans-unit>
        <trans-unit id="679e9fbaef3755a6ad5c4934181d919155cf43a9" translate="yes" xml:space="preserve">
          <source>4.11.4.3 The strcoll function</source>
          <target state="translated">4.11.4.3 La función strcoll</target>
        </trans-unit>
        <trans-unit id="cd87758b1e25b66f096070792cc18a253d0ab609" translate="yes" xml:space="preserve">
          <source>4.11.4.4 The strncmp function</source>
          <target state="translated">4.11.4.4 La función strncmp</target>
        </trans-unit>
        <trans-unit id="b5ada7a99dcaa406eaa4536ec287ec9dda88c4b1" translate="yes" xml:space="preserve">
          <source>4.11.4.5 The strxfrm function</source>
          <target state="translated">4.11.4.5 La función de strxfrm</target>
        </trans-unit>
        <trans-unit id="5335f3ff77d892c688b47e8fbf14d9a0b683a3f4" translate="yes" xml:space="preserve">
          <source>4.11.5.1 The memchr function</source>
          <target state="translated">4.11.5.1 La función memchr</target>
        </trans-unit>
        <trans-unit id="b2945ecc8b4c0a5ffcf07b1a3396be7c548aa5c1" translate="yes" xml:space="preserve">
          <source>4.11.5.2 The strchr function</source>
          <target state="translated">4.11.5.2 La función strchr</target>
        </trans-unit>
        <trans-unit id="12ca01a712a2591c805b2170bbdb0ef7e19340c6" translate="yes" xml:space="preserve">
          <source>4.11.5.3 The strcspn function</source>
          <target state="translated">4.11.5.3 La función strcspn</target>
        </trans-unit>
        <trans-unit id="3dd380dea09ff137b225a4181a003f3a29d13d5f" translate="yes" xml:space="preserve">
          <source>4.11.5.4 The strpbrk function</source>
          <target state="translated">4.11.5.4 La función strpbrk</target>
        </trans-unit>
        <trans-unit id="094d819d3e43e822accc6d4e4e9468e1b32a7071" translate="yes" xml:space="preserve">
          <source>4.11.5.5 The strrchr function</source>
          <target state="translated">4.11.5.5 La función strrchr</target>
        </trans-unit>
        <trans-unit id="407104944c85150c7190d18dd19aaacbe8236383" translate="yes" xml:space="preserve">
          <source>4.11.5.6 The strspn function</source>
          <target state="translated">4.11.5.6 La función strspn</target>
        </trans-unit>
        <trans-unit id="bc991a55ac1077572e23d39657f2bd6892e542d8" translate="yes" xml:space="preserve">
          <source>4.11.5.7 The strstr function</source>
          <target state="translated">4.11.5.7 La función strstr</target>
        </trans-unit>
        <trans-unit id="ba55690f2781fddda30887ffdb570108655e38be" translate="yes" xml:space="preserve">
          <source>4.11.5.8 The strtok function</source>
          <target state="translated">4.11.5.8 La función strtok</target>
        </trans-unit>
        <trans-unit id="e52849b5d3a6b14ae56d47e2705623866ee31e69" translate="yes" xml:space="preserve">
          <source>4.11.6.1 The memset function</source>
          <target state="translated">4.11.6.1 La función de memset</target>
        </trans-unit>
        <trans-unit id="2f6bb626000eeb23b96b313ed0392e5fb5d1d6e0" translate="yes" xml:space="preserve">
          <source>4.11.6.2 The strerror function</source>
          <target state="translated">4.11.6.2 La función de estrangulamiento</target>
        </trans-unit>
        <trans-unit id="e0713e6a6f9737ffcce9dffd1ddc75d5e69588e2" translate="yes" xml:space="preserve">
          <source>4.11.6.3 The strlen function</source>
          <target state="translated">4.11.6.3 La función de estreno</target>
        </trans-unit>
        <trans-unit id="c8fa872f6c4ed97120307f2cffd80d508aeb5503" translate="yes" xml:space="preserve">
          <source>4.12 DATE AND TIME &amp;lt;time.h&amp;gt;</source>
          <target state="translated">4.12 FECHA Y HORA &amp;lt;hora.h&amp;gt;</target>
        </trans-unit>
        <trans-unit id="dfa11d10bcc0ca629480802f166596ebe158a4f2" translate="yes" xml:space="preserve">
          <source>4.12.1 Components of time</source>
          <target state="translated">4.12.1 Componentes del tiempo</target>
        </trans-unit>
        <trans-unit id="0d2c621f8d1b1d310ed83aad92d102746117dc44" translate="yes" xml:space="preserve">
          <source>4.12.2.1 The clock function</source>
          <target state="translated">4.12.2.1 La función de reloj</target>
        </trans-unit>
        <trans-unit id="6cd5b7a26547a230206ac2251de8cd0c13874208" translate="yes" xml:space="preserve">
          <source>4.12.2.2 The difftime function</source>
          <target state="translated">4.12.2.2 La función de difracción</target>
        </trans-unit>
        <trans-unit id="4bab5e67834ef29ee5c2677b4ba3a50ab1b9a97a" translate="yes" xml:space="preserve">
          <source>4.12.2.3 The mktime function</source>
          <target state="translated">4.12.2.3 La función mktime</target>
        </trans-unit>
        <trans-unit id="b6fe040a736eec6979dcdf33a7ea16c45bf1d74c" translate="yes" xml:space="preserve">
          <source>4.12.2.4 The time function</source>
          <target state="translated">4.12.2.4 La función de tiempo</target>
        </trans-unit>
        <trans-unit id="258d0badaf5254fd466f8045e9c91ca11548405d" translate="yes" xml:space="preserve">
          <source>4.12.3.1 The asctime function</source>
          <target state="translated">4.12.3.1 La función de ascensión</target>
        </trans-unit>
        <trans-unit id="1f46d782acc5b674a592a38c822f758ea6e4e95e" translate="yes" xml:space="preserve">
          <source>4.12.3.2 The ctime function</source>
          <target state="translated">4.12.3.2 La función ctime</target>
        </trans-unit>
        <trans-unit id="517643c3f09bc482dab30e1b3c3a737594d96de9" translate="yes" xml:space="preserve">
          <source>4.12.3.3 The gmtime function</source>
          <target state="translated">4.12.3.3 La función gmtime</target>
        </trans-unit>
        <trans-unit id="da6eb3692250fbbca9fb590f0319b236cd18087d" translate="yes" xml:space="preserve">
          <source>4.12.3.4 The localtime function</source>
          <target state="translated">4.12.3.4 La función de la hora local</target>
        </trans-unit>
        <trans-unit id="b24e8fabba7f7dd0ecb8519898450f45a59cec3e" translate="yes" xml:space="preserve">
          <source>4.12.3.5 The strftime function</source>
          <target state="translated">4.12.3.5 La función strftime</target>
        </trans-unit>
        <trans-unit id="da54ca62b7c81d53f05bf7add442845e944ffb97" translate="yes" xml:space="preserve">
          <source>4.13.1 Errors &amp;lt;errno.h&amp;gt;</source>
          <target state="translated">4.13.1 Errores &amp;lt;errno.h&amp;gt;</target>
        </trans-unit>
        <trans-unit id="77e2c1b6ec248a4db886ef1796882996176f08f2" translate="yes" xml:space="preserve">
          <source>4.13.2 Character handling &amp;lt;ctype.h&amp;gt;</source>
          <target state="translated">4.13.2 Manejo de caracteres &amp;lt;ctype.h&amp;gt;</target>
        </trans-unit>
        <trans-unit id="9408ed012574d1d0fce06cc4f173abd4097c7eee" translate="yes" xml:space="preserve">
          <source>4.13.3 Localization &amp;lt;locale.h&amp;gt;</source>
          <target state="translated">4.13.3 Localizaci&amp;oacute;n &amp;lt;locale.h&amp;gt;</target>
        </trans-unit>
        <trans-unit id="f7c5715bbeac4ce6482e5cd4785e20fa5b1c555a" translate="yes" xml:space="preserve">
          <source>4.13.4 Mathematics &amp;lt;math.h&amp;gt;</source>
          <target state="translated">4.13.4 Matem&amp;aacute;ticas &amp;lt;math.h&amp;gt;</target>
        </trans-unit>
        <trans-unit id="599f8be04701d314ef111b73888815b46ec2cf02" translate="yes" xml:space="preserve">
          <source>4.13.5 Signal handling &amp;lt;signal.h&amp;gt;</source>
          <target state="translated">4.13.5 Manejo de se&amp;ntilde;al &amp;lt;se&amp;ntilde;al.h&amp;gt;</target>
        </trans-unit>
        <trans-unit id="8466ce7c1321e122ffcb931b4a7c30a41f12822a" translate="yes" xml:space="preserve">
          <source>4.13.6 Input/output &amp;lt;stdio.h&amp;gt;</source>
          <target state="translated">4.13.6 Entrada / salida &amp;lt;stdio.h&amp;gt;</target>
        </trans-unit>
        <trans-unit id="624b4b36d59fdb10155952434856bbec754f0bb2" translate="yes" xml:space="preserve">
          <source>4.13.7 General utilities &amp;lt;stdlib.h&amp;gt;</source>
          <target state="translated">4.13.7 Utilidades generales &amp;lt;stdlib.h&amp;gt;</target>
        </trans-unit>
        <trans-unit id="94bc150a9b0afce7ce512254112a5960da56f8bc" translate="yes" xml:space="preserve">
          <source>4.13.8 String handling &amp;lt;string.h&amp;gt;</source>
          <target state="translated">4.13.8 Manejo de cadenas &amp;lt;string.h&amp;gt;</target>
        </trans-unit>
        <trans-unit id="c8722942f8e9080d47a848e3ffe01acb0269701b" translate="yes" xml:space="preserve">
          <source>4.2 DIAGNOSTICS &amp;lt;assert.h&amp;gt;</source>
          <target state="translated">4.2 DIAGN&amp;Oacute;STICO &amp;lt;afirmar.h&amp;gt;</target>
        </trans-unit>
        <trans-unit id="085dba060f31ee413b801b9c029abce9861ee8a3" translate="yes" xml:space="preserve">
          <source>4.2.1.1 The assert macro</source>
          <target state="translated">4.2.1.1 La macro afirmación</target>
        </trans-unit>
        <trans-unit id="cdb2641b55040c6466fa39dfee2b63ba3a496cfd" translate="yes" xml:space="preserve">
          <source>4.3 CHARACTER HANDLING &amp;lt;ctype.h&amp;gt;</source>
          <target state="translated">4.3 MANEJO DEL CAR&amp;Aacute;CTER &amp;lt;ctype.h&amp;gt;</target>
        </trans-unit>
        <trans-unit id="556542a246575ae145f055a7282106037b951137" translate="yes" xml:space="preserve">
          <source>4.3.1.1 The isalnum function</source>
          <target state="translated">4.3.1.1 La función del isalón</target>
        </trans-unit>
        <trans-unit id="1ea2245f4b70e53f2bd484a69c98f4ebb50a0607" translate="yes" xml:space="preserve">
          <source>4.3.1.10 The isupper function</source>
          <target state="translated">4.3.1.10 La función isuperior</target>
        </trans-unit>
        <trans-unit id="277e6e86e917986ef47644dc2734d74a207bad40" translate="yes" xml:space="preserve">
          <source>4.3.1.11 The isxdigit function</source>
          <target state="translated">4.3.1.11 La función de isxdígito</target>
        </trans-unit>
        <trans-unit id="3f7dfc0a581a5a365d1d6958b6f6f8508f5a05c9" translate="yes" xml:space="preserve">
          <source>4.3.1.2 The isalpha function</source>
          <target state="translated">4.3.1.2 La función isalfa</target>
        </trans-unit>
        <trans-unit id="4a170d03817e3153e2542944466dae640e227ef0" translate="yes" xml:space="preserve">
          <source>4.3.1.3 The iscntrl function</source>
          <target state="translated">4.3.1.3 La función de iscntrl</target>
        </trans-unit>
        <trans-unit id="d9215b471115373d7bcd5e77713cab4ea98dd636" translate="yes" xml:space="preserve">
          <source>4.3.1.4 The isdigit function</source>
          <target state="translated">4.3.1.4 La función de isdígito</target>
        </trans-unit>
        <trans-unit id="0ec4ce03b1a16746ba757cce1d83f967636872ce" translate="yes" xml:space="preserve">
          <source>4.3.1.5 The isgraph function</source>
          <target state="translated">4.3.1.5 La función de isógrafo</target>
        </trans-unit>
        <trans-unit id="a9c7245dd5f7943ad123334827a4b40f2787addf" translate="yes" xml:space="preserve">
          <source>4.3.1.6 The islower function</source>
          <target state="translated">4.3.1.6 La función de isóbalo</target>
        </trans-unit>
        <trans-unit id="f39396d1fa2302b58e04299733c245658fc5d29e" translate="yes" xml:space="preserve">
          <source>4.3.1.7 The isprint function</source>
          <target state="translated">4.3.1.7 La función isprint</target>
        </trans-unit>
        <trans-unit id="633e47aef746edde6bd9bb57d4a0980410bf2b0d" translate="yes" xml:space="preserve">
          <source>4.3.1.8 The ispunct function</source>
          <target state="translated">4.3.1.8 La función de ispunto</target>
        </trans-unit>
        <trans-unit id="8489ae1644ea0f86d79a89e8797bc37a10b2f3c1" translate="yes" xml:space="preserve">
          <source>4.3.1.9 The isspace function</source>
          <target state="translated">4.3.1.9 La función isoespacial</target>
        </trans-unit>
        <trans-unit id="81f2b6e4c8e528ad232541aa46337f270c1c45e6" translate="yes" xml:space="preserve">
          <source>4.3.2.1 The tolower function</source>
          <target state="translated">4.3.2.1 La función de tolerancia</target>
        </trans-unit>
        <trans-unit id="e8cdcfda19f9ddd1cc4f76537380c18aec556653" translate="yes" xml:space="preserve">
          <source>4.3.2.2 The toupper function</source>
          <target state="translated">4.3.2.2 La función toupper</target>
        </trans-unit>
        <trans-unit id="bb2c23d547b7ce525ea46dec7e1199fd78fa67a6" translate="yes" xml:space="preserve">
          <source>4.4 LOCALIZATION &amp;lt;locale.h&amp;gt;</source>
          <target state="translated">4.4 LOCALIZACI&amp;Oacute;N &amp;lt;locale.h&amp;gt;</target>
        </trans-unit>
        <trans-unit id="9ba0b99904ed9d2acef6ef5a3c7545e43f88060c" translate="yes" xml:space="preserve">
          <source>4.4.1.1 The setlocale function</source>
          <target state="translated">4.4.1.1 La función setlocale</target>
        </trans-unit>
        <trans-unit id="184b69358121e587dc0780132edf3872e883f359" translate="yes" xml:space="preserve">
          <source>4.4.2.1 The localeconv function</source>
          <target state="translated">4.4.2.1 La función localeconv</target>
        </trans-unit>
        <trans-unit id="d73f5427b1e5bc637ac33676e0b4de20edf9190b" translate="yes" xml:space="preserve">
          <source>4.5 HUGE_VAL</source>
          <target state="translated">4.5 HUGE_VAL</target>
        </trans-unit>
        <trans-unit id="51a77b0e722c07612111867a4e873b8601697621" translate="yes" xml:space="preserve">
          <source>4.5 MATHEMATICS &amp;lt;math.h&amp;gt;</source>
          <target state="translated">4.5 MATEM&amp;Aacute;TICAS &amp;lt;math.h&amp;gt;</target>
        </trans-unit>
        <trans-unit id="183d8f5ab9fd98b9b30e2fb5e92607ea7d68288b" translate="yes" xml:space="preserve">
          <source>4.5.2.1 The acos function</source>
          <target state="translated">4.5.2.1 La función acos</target>
        </trans-unit>
        <trans-unit id="0975d72c7a852056c272179a3b167d0a6c72a21f" translate="yes" xml:space="preserve">
          <source>4.5.2.2 The asin function</source>
          <target state="translated">4.5.2.2 La función asínica</target>
        </trans-unit>
        <trans-unit id="67f3bd75b0ebd7e120fdf909d63b779b70bb66c5" translate="yes" xml:space="preserve">
          <source>4.5.2.3 The atan function</source>
          <target state="translated">4.5.2.3 La función atómica</target>
        </trans-unit>
        <trans-unit id="7e75a2b7776c4f3fd5280f15156d5c04603790f4" translate="yes" xml:space="preserve">
          <source>4.5.2.4 The atan2 function</source>
          <target state="translated">4.5.2.4 La función atan2</target>
        </trans-unit>
        <trans-unit id="427ac686faf8c8757e77bde9887260ebf3f394fd" translate="yes" xml:space="preserve">
          <source>4.5.2.5 The cos function</source>
          <target state="translated">4.5.2.5 La función cos</target>
        </trans-unit>
        <trans-unit id="10017d99aefdcbc03f4387a25a7e64cb2e8055ea" translate="yes" xml:space="preserve">
          <source>4.5.2.6 The sin function</source>
          <target state="translated">4.5.2.6 La función de pecado</target>
        </trans-unit>
        <trans-unit id="9e38985cb84c9172466faefb0c08626d31f2e8b9" translate="yes" xml:space="preserve">
          <source>4.5.2.7 The tan function</source>
          <target state="translated">4.5.2.7 La función de bronceado</target>
        </trans-unit>
        <trans-unit id="58fe075e8cf53c66ecc31005edf2ab95476b314a" translate="yes" xml:space="preserve">
          <source>4.5.3.1 The cosh function</source>
          <target state="translated">4.5.3.1 La función de coseno</target>
        </trans-unit>
        <trans-unit id="0a880a7bc51c21e6080342df0c72aafa45dc8631" translate="yes" xml:space="preserve">
          <source>4.5.3.2 The sinh function</source>
          <target state="translated">4.5.3.2 La función de sinh</target>
        </trans-unit>
        <trans-unit id="93e4cebb8fe3931cd406f2e4bb416f83b6368447" translate="yes" xml:space="preserve">
          <source>4.5.3.3 The tanh function</source>
          <target state="translated">4.5.3.3 La función tanh</target>
        </trans-unit>
        <trans-unit id="6494b776167f1a02b02e0fdea214f93889841de5" translate="yes" xml:space="preserve">
          <source>4.5.4.1 The exp function</source>
          <target state="translated">4.5.4.1 La función exp</target>
        </trans-unit>
        <trans-unit id="63c49ceab931657153a1b024233e3cf7d6b4fd0f" translate="yes" xml:space="preserve">
          <source>4.5.4.2 The frexp function</source>
          <target state="translated">4.5.4.2 La función frexp</target>
        </trans-unit>
        <trans-unit id="df096a60c5ac414da77859920531d0f42939b445" translate="yes" xml:space="preserve">
          <source>4.5.4.3 The ldexp function</source>
          <target state="translated">4.5.4.3 La función ldexp</target>
        </trans-unit>
        <trans-unit id="d1e2982b3f95c55d04c12f63badd65a0b3e7c874" translate="yes" xml:space="preserve">
          <source>4.5.4.4 The log function</source>
          <target state="translated">4.5.4.4 La función de registro</target>
        </trans-unit>
        <trans-unit id="958f3fa1be493389984fc5faf62ccd83d439a0d8" translate="yes" xml:space="preserve">
          <source>4.5.4.5 The log10 function</source>
          <target state="translated">4.5.4.5 La función log10</target>
        </trans-unit>
        <trans-unit id="772036150891750d4894b85623ba83a1817f17c7" translate="yes" xml:space="preserve">
          <source>4.5.4.6 The modf function</source>
          <target state="translated">4.5.4.6 La función modf</target>
        </trans-unit>
        <trans-unit id="fea14decbd4592957ebf8a40f8e8fe9dd40a80fc" translate="yes" xml:space="preserve">
          <source>4.5.5.1 The pow function</source>
          <target state="translated">4.5.5.1 La función de potencia</target>
        </trans-unit>
        <trans-unit id="1c36e38b2e0d4c582c323c08c119ec40aa25ea20" translate="yes" xml:space="preserve">
          <source>4.5.5.2 The sqrt function</source>
          <target state="translated">4.5.5.2 La función sqrt</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
