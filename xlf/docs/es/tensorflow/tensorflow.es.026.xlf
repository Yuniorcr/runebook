<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="tensorflow">
    <body>
      <group id="tensorflow">
        <trans-unit id="c8f03d4d996fdc6c3672a43c5cb359baa44f0a14" translate="yes" xml:space="preserve">
          <source>An image or images to adjust.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7af7248b887a750d7f93553fa2ef90b7eeb89197" translate="yes" xml:space="preserve">
          <source>An image tensor with 3 or more dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e730954de3e5decf61fd49f64cf18828537b353a" translate="yes" xml:space="preserve">
          <source>An image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a60972340cdca32e8f2ce10b759a88d70a797897" translate="yes" xml:space="preserve">
          <source>An implicit ellipsis is placed at the end of the &lt;code&gt;slice_spec&lt;/code&gt;</source>
          <target state="translated">Se coloca una elipsis impl&amp;iacute;cita al final de &lt;code&gt;slice_spec&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c85d624b89706bb14b288acaa4ac6fa07ac95357" translate="yes" xml:space="preserve">
          <source>An in-process TensorFlow server, for use in distributed training.</source>
          <target state="translated">Un servidor TensorFlow en proceso,para uso en entrenamiento distribuido.</target>
        </trans-unit>
        <trans-unit id="c51af0b0ac39995b68f24f792b6da38439b99b96" translate="yes" xml:space="preserve">
          <source>An in-process tf.data service dispatch server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6efc32eeefc1bac980838e663cf8230b665eb4fb" translate="yes" xml:space="preserve">
          <source>An in-process tf.data service worker server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e2bec5a6fa87617f2eec8c30e838f26d2229e85" translate="yes" xml:space="preserve">
          <source>An initial state can be provided. If the sequence_length vector is provided, dynamic calculation is performed. This method of calculation does not compute the RNN steps past the maximum sequence length of the minibatch (thus saving computational time), and properly propagates the state at an example's sequence length to the final state output.</source>
          <target state="translated">Se puede proporcionar un estado inicial.Si se proporciona el vector secuencia_longitud,se realiza un cálculo dinámico.Este método de cálculo no calcula los pasos del RNN que pasan por la longitud máxima de la secuencia del minilanzamiento (ahorrando así tiempo de cálculo),y propaga adecuadamente el estado a la longitud de la secuencia de un ejemplo hasta la salida del estado final.</target>
        </trans-unit>
        <trans-unit id="f7edeca4b2fafceafccda40e696007a59bea8d4e" translate="yes" xml:space="preserve">
          <source>An initializer for the bias vector. If &lt;code&gt;None&lt;/code&gt;, the default initializer will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65377ff6e19b6098caecb903781242dd90e267d8" translate="yes" xml:space="preserve">
          <source>An initializer for the bias vector. If None, the default initializer will be used (see &lt;a href=&quot;../initializers&quot;&gt;&lt;code&gt;keras.initializers&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a1f34084a05406a58bfc430913ee6f8ac5b5620" translate="yes" xml:space="preserve">
          <source>An initializer for the bias vector. If None, the default initializer will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b650d92f36faa27a06582478196b0537f4dd20f2" translate="yes" xml:space="preserve">
          <source>An initializer for the convolution kernel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2a37bf28869b19cc7dc054a0e1da2bd609708b7" translate="yes" xml:space="preserve">
          <source>An initializer for the depthwise convolution kernel ( see &lt;a href=&quot;../initializers&quot;&gt;&lt;code&gt;keras.initializers&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9622f3dd326123b5d18da22fe664e051ba845b2" translate="yes" xml:space="preserve">
          <source>An initializer for the depthwise convolution kernel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="431bfea97fbcd5a44782af1d3104b4c925d60b3b" translate="yes" xml:space="preserve">
          <source>An initializer for the pointwise convolution kernel ( see &lt;a href=&quot;../initializers&quot;&gt;&lt;code&gt;keras.initializers&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d969011f0dd3f3b7aaab61319eb1756c0b78d02e" translate="yes" xml:space="preserve">
          <source>An initializer for the pointwise convolution kernel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae67168507f394b82b52fdf0714e08938c843f8" translate="yes" xml:space="preserve">
          <source>An initializer.</source>
          <target state="translated">Un inicializador.</target>
        </trans-unit>
        <trans-unit id="b72709c277c5cac4226f96052b086a86c0708447" translate="yes" xml:space="preserve">
          <source>An input shape tuple.</source>
          <target state="translated">Una tupla de forma de entrada.</target>
        </trans-unit>
        <trans-unit id="11d86725bfde41543fdc71b2b15ebc7b34981fe0" translate="yes" xml:space="preserve">
          <source>An instance &lt;a href=&quot;reduceop&quot;&gt;&lt;code&gt;tf.distribute.ReduceOp&lt;/code&gt;&lt;/a&gt; that indicates of how per_replica_value will be reduced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62496931cf782beb25b656bfe7f3dba1c33c7b88" translate="yes" xml:space="preserve">
          <source>An instance of &lt;a href=&quot;../../session&quot;&gt;&lt;code&gt;tf.compat.v1.Session&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1655c9fe6c81171212a4648ebe674463edd7517f" translate="yes" xml:space="preserve">
          <source>An instance of &lt;a href=&quot;reduceop&quot;&gt;&lt;code&gt;tf.distribute.ReduceOp&lt;/code&gt;&lt;/a&gt; that indicates how per_replica_value will be reduced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="876f73fe079187bd553f36b765112de786523328" translate="yes" xml:space="preserve">
          <source>An instance of &lt;a href=&quot;reduceop&quot;&gt;&lt;code&gt;tf.distribute.ReduceOp&lt;/code&gt;&lt;/a&gt; that indicates how the &lt;code&gt;per_replica_value&lt;/code&gt; will be reduced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="274eb840420767e96c62107ee5d28c90277dfcad" translate="yes" xml:space="preserve">
          <source>An instance of &lt;a href=&quot;tableconfig&quot;&gt;&lt;code&gt;tf.tpu.experimental.embedding.TableConfig&lt;/code&gt;&lt;/a&gt;, describing the table in which this feature should be looked up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eeda0cb14a34563e0664b391112a30860b14668" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;Model&lt;/code&gt; reproducing the behavior of the original model, on top of new inputs tensors, using newly instantiated weights. The cloned model might behave differently from the original model if a custom clone_function modifies the layer.</source>
          <target state="translated">Una instancia de &lt;code&gt;Model&lt;/code&gt; que reproduce el comportamiento del modelo original, adem&amp;aacute;s de nuevos tensores de entrada, utilizando pesos reci&amp;eacute;n instanciados. El modelo clonado puede comportarse de manera diferente al modelo original si una funci&amp;oacute;n de clonaci&amp;oacute;n personalizada modifica la capa.</target>
        </trans-unit>
        <trans-unit id="392c1bd08aa1bb02f588116be70a1c3f2f06d32e" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;RNNCell&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e28a23e9a51b38e5fbb0e6eafe54cbd221cde0d0" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;Reducer&lt;/code&gt;, which captures the reduction logic using the &lt;code&gt;init_func&lt;/code&gt;, &lt;code&gt;reduce_func&lt;/code&gt;, and &lt;code&gt;finalize_func&lt;/code&gt; functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef4fa2827270f8f7119046220209c1e21c9afc08" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;ReparameterizationType&lt;/code&gt;.</source>
          <target state="translated">Una instancia de &lt;code&gt;ReparameterizationType&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="09bc2c068f2747f7e82195343e46ee15325c13a7" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;tf.Optimizer&lt;/code&gt; or string specifying optimizer type. Defaults to Adagrad optimizer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4973bc577a08eae079779325733bb41de218b9c1" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;tf.Optimizer&lt;/code&gt; used to train the model. Can also be a string (one of 'Adagrad', 'Adam', 'Ftrl', 'RMSProp', 'SGD'), or callable. Defaults to FTRL optimizer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f79c3122b5538248fe5ccf1c87fbec538ab93a89" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;tf.keras.optimizers.*&lt;/code&gt; or &lt;a href=&quot;experimental/linearsdca&quot;&gt;&lt;code&gt;tf.estimator.experimental.LinearSDCA&lt;/code&gt;&lt;/a&gt; used to train the model. Can also be a string (one of 'Adagrad', 'Adam', 'Ftrl', 'RMSProp', 'SGD'), or callable. Defaults to FTRL optimizer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e76c9caffad2e0593bb07c1bc3b916b8a2cb60d" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;tf.keras.optimizers.*&lt;/code&gt; used to apply gradients to the deep part of the model. Can also be a string (one of 'Adagrad', 'Adam', 'Ftrl', 'RMSProp', 'SGD'), or callable. Defaults to Adagrad optimizer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea598d638831644e119a07f81578445f00bee708" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;tf.keras.optimizers.*&lt;/code&gt; used to apply gradients to the linear part of the model. Can also be a string (one of 'Adagrad', 'Adam', 'Ftrl', 'RMSProp', 'SGD'), or callable. Defaults to FTRL optimizer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7bc0553831d87ae0bbb225de8fdfea892847251" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;tf.keras.optimizers.*&lt;/code&gt; used to train the model. Can also be a string (one of 'Adagrad', 'Adam', 'Ftrl', 'RMSProp', 'SGD'), or callable. Defaults to FTRL optimizer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eba8eefb22881f2fe78e47ee654ebeb8232564ed" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;tf.keras.optimizers.*&lt;/code&gt; used to train the model. Can also be a string (one of 'Adagrad', 'Adam', 'Ftrl', 'RMSProp', SGD'), or callable. Defaults to Adagrad optimizer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b5e809764a950903ad4b36b900b2f8915831c0d" translate="yes" xml:space="preserve">
          <source>An instance of DuplicateFlagError.</source>
          <target state="translated">Un ejemplo de DuplicateFlagError.</target>
        </trans-unit>
        <trans-unit id="39826a6a93240077c76aa5d3642a2f0e9d29b112" translate="yes" xml:space="preserve">
          <source>An instance of RNNCell, to be used for backward direction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2749771c12814c85ccda28f1d42e62c5218749b6" translate="yes" xml:space="preserve">
          <source>An instance of RNNCell, to be used for forward direction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af115e8daeab5af87085bd73d76be4110b07d8ad" translate="yes" xml:space="preserve">
          <source>An instance of RNNCell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1cda23d8ffe43778749c884de2712fa11d7a815" translate="yes" xml:space="preserve">
          <source>An instance of TPUClusterResolver object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="071efb405a1e5eb10602e4c04a7633e592a65ffb" translate="yes" xml:space="preserve">
          <source>An instance of Unbatch either receives an empty batched_tensor, in which case it asynchronously waits until the values become available from a concurrently running instance of Unbatch with the same container and shared_name, or receives a non-empty batched_tensor in which case it finalizes all other concurrently running instances and outputs its own element from the batch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a375f43af2524777a7fecca4c2cead748ef9ff97" translate="yes" xml:space="preserve">
          <source>An instance of a &lt;a href=&quot;../../../../keras/optimizers/optimizer&quot;&gt;&lt;code&gt;tf.keras.optimizers.Optimizer&lt;/code&gt;&lt;/a&gt; or a &lt;code&gt;tf.train.Optimizer&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e414fb875a3fbd63a4f844e6c14b357c6e8894bb" translate="yes" xml:space="preserve">
          <source>An instance of a &lt;a href=&quot;../../keras/optimizers/optimizer&quot;&gt;&lt;code&gt;tf.keras.optimizers.Optimizer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5ba554640900943a384d9694db00ad726ea0d7d" translate="yes" xml:space="preserve">
          <source>An instance of one of &lt;a href=&quot;sgd&quot;&gt;&lt;code&gt;tf.tpu.experimental.embedding.SGD&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;adagrad&quot;&gt;&lt;code&gt;tf.tpu.experimental.embedding.Adagrad&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;adam&quot;&gt;&lt;code&gt;tf.tpu.experimental.embedding.Adam&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7151659f4ea98fd2643340ac3dd6fe230026a76f" translate="yes" xml:space="preserve">
          <source>An instantiable class associated with 'name', or None if no such class exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6709fa9b781853b942cd35f73921f75db93559e5" translate="yes" xml:space="preserve">
          <source>An int &amp;gt; 1. The number of buckets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d58e0502647f40361ded9b6d90ead2310a26a1fc" translate="yes" xml:space="preserve">
          <source>An int Tensor specifying which of &lt;code&gt;branch_fns&lt;/code&gt; should be executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5f227630379d7ca8e7e652c0def4a7570cdabaa" translate="yes" xml:space="preserve">
          <source>An int indicating the dimension of the logit layer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="746ebca46e434f2bd1d3bb3042cf043aee909160" translate="yes" xml:space="preserve">
          <source>An int indicating the dimension of the logit layer. In the MultiHead case, this should be the sum of all component Heads' logit dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e1dea12480d49c0a49295bbf39bd0e14b8148e4" translate="yes" xml:space="preserve">
          <source>An int or list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;1&lt;/code&gt; or &lt;code&gt;3&lt;/code&gt; which defaults to 1. The dilation factor for each dimension of input. If set to k &amp;gt; 1, there will be k-1 skipped cells between each filter element on that dimension. Dilations in the batch and depth dimensions must be 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0f3b4a668a150edfa93c75319eec81460c89781" translate="yes" xml:space="preserve">
          <source>An int or list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;1&lt;/code&gt; or &lt;code&gt;3&lt;/code&gt;. The number of entries by which the filter is moved right at each step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e94b419226c58def2a857fb8b1aa5811d261944" translate="yes" xml:space="preserve">
          <source>An int or list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;1&lt;/code&gt; or &lt;code&gt;3&lt;/code&gt;. The size of the window for each dimension of the input tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e62f63e7c1c2f3efa03ccdff76a394a33f92eb61" translate="yes" xml:space="preserve">
          <source>An int or list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;1&lt;/code&gt; or &lt;code&gt;3&lt;/code&gt;. The stride of the sliding window for each dimension of the input tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4221576be49f8c2673825611051d97750e97cc2" translate="yes" xml:space="preserve">
          <source>An int or list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt; or &lt;code&gt;4&lt;/code&gt;, defaults to 1. The dilation factor for each dimension of&lt;code&gt;input&lt;/code&gt;. If a single value is given it is replicated in the &lt;code&gt;H&lt;/code&gt; and &lt;code&gt;W&lt;/code&gt; dimension. By default the &lt;code&gt;N&lt;/code&gt; and &lt;code&gt;C&lt;/code&gt; dimensions are set to 1. If set to k &amp;gt; 1, there will be k-1 skipped cells between each filter element on that dimension. The dimension order is determined by the value of &lt;code&gt;data_format&lt;/code&gt;, see above for details. Dilations in the batch and depth dimensions if a 4-d tensor must be 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c471ad8bd77561afe1cf35c55933be9d752c284" translate="yes" xml:space="preserve">
          <source>An int or list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt; or &lt;code&gt;4&lt;/code&gt;. Pooling ratio for each dimension of &lt;code&gt;value&lt;/code&gt;, currently only supports row and col dimension and should be &amp;gt;= 1.0. For example, a valid pooling ratio looks like [1.0, 1.44, 1.73, 1.0]. The first and last elements must be 1.0 because we don't allow pooling on batch and channels dimensions. 1.44 and 1.73 are pooling ratio on height and width dimensions respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82018f27a05a1df09cba0f1c879e590325a4eb56" translate="yes" xml:space="preserve">
          <source>An int or list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt; or &lt;code&gt;4&lt;/code&gt;. The size of the window for each dimension of the input tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="207c99a7d1bf0a5847f24bd8da75e09571488147" translate="yes" xml:space="preserve">
          <source>An int or list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt; or &lt;code&gt;4&lt;/code&gt;. The stride of the sliding window for each dimension of &lt;code&gt;input&lt;/code&gt;. If a single value is given it is replicated in the &lt;code&gt;H&lt;/code&gt; and &lt;code&gt;W&lt;/code&gt; dimension. By default the &lt;code&gt;N&lt;/code&gt; and &lt;code&gt;C&lt;/code&gt; dimensions are set to 0. The dimension order is determined by the value of &lt;code&gt;data_format&lt;/code&gt;, see below for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c94032c400c481ac03b13f4182a2d314f5639efe" translate="yes" xml:space="preserve">
          <source>An int or list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt; or &lt;code&gt;4&lt;/code&gt;. The stride of the sliding window for each dimension of &lt;code&gt;input&lt;/code&gt;. If a single value is given it is replicated in the &lt;code&gt;H&lt;/code&gt; and &lt;code&gt;W&lt;/code&gt; dimension. By default the &lt;code&gt;N&lt;/code&gt; and &lt;code&gt;C&lt;/code&gt; dimensions are set to 1. The dimension order is determined by the value of &lt;code&gt;data_format&lt;/code&gt;, see below for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32a6d83b8d49616981aa3c26cac47c63ee6b6739" translate="yes" xml:space="preserve">
          <source>An int or list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt; or &lt;code&gt;4&lt;/code&gt;. The stride of the sliding window for each dimension of the input tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00f1a0c5ad0c9c63cadf9e57b34c36d3222164bb" translate="yes" xml:space="preserve">
          <source>An int or list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;3&lt;/code&gt; or &lt;code&gt;5&lt;/code&gt;, defaults to 1. The dilation factor for each dimension of&lt;code&gt;input&lt;/code&gt;. If a single value is given it is replicated in the &lt;code&gt;D&lt;/code&gt;, &lt;code&gt;H&lt;/code&gt; and &lt;code&gt;W&lt;/code&gt; dimension. By default the &lt;code&gt;N&lt;/code&gt; and &lt;code&gt;C&lt;/code&gt; dimensions are set to 1. If set to k &amp;gt; 1, there will be k-1 skipped cells between each filter element on that dimension. The dimension order is determined by the value of &lt;code&gt;data_format&lt;/code&gt;, see above for details. Dilations in the batch and depth dimensions if a 5-d tensor must be 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e14bb13338eda89739ebf95fdc0b05ee7e19e561" translate="yes" xml:space="preserve">
          <source>An int or list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;3&lt;/code&gt; or &lt;code&gt;5&lt;/code&gt;. The size of the window for each dimension of the input tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="832f8fbb041ab05ba3d3db0e21f914f2372de856" translate="yes" xml:space="preserve">
          <source>An int or list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;3&lt;/code&gt; or &lt;code&gt;5&lt;/code&gt;. The stride of the sliding window for each dimension of &lt;code&gt;input&lt;/code&gt;. If a single value is given it is replicated in the &lt;code&gt;D&lt;/code&gt;, &lt;code&gt;H&lt;/code&gt; and &lt;code&gt;W&lt;/code&gt; dimension. By default the &lt;code&gt;N&lt;/code&gt; and &lt;code&gt;C&lt;/code&gt; dimensions are set to 0. The dimension order is determined by the value of &lt;code&gt;data_format&lt;/code&gt;, see below for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c374d1746bf77ffa5616669e5c822ae7dfc9cab" translate="yes" xml:space="preserve">
          <source>An int or list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;3&lt;/code&gt; or &lt;code&gt;5&lt;/code&gt;. The stride of the sliding window for each dimension of the input tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c32b0bf80ebb4e321d2b01b571509dd4c764189b" translate="yes" xml:space="preserve">
          <source>An int or list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;N&lt;/code&gt; or &lt;code&gt;N+2&lt;/code&gt;, defaults to 1. The dilation factor for each dimension of&lt;code&gt;input&lt;/code&gt;. If a single value is given it is replicated in the spatial dimensions. By default the &lt;code&gt;N&lt;/code&gt; and &lt;code&gt;C&lt;/code&gt; dimensions are set to 1. If set to k &amp;gt; 1, there will be k-1 skipped cells between each filter element on that dimension. The dimension order is determined by the value of &lt;code&gt;data_format&lt;/code&gt;, see above for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e368b23747c2a4a0352143ab4c36ae1f783b257" translate="yes" xml:space="preserve">
          <source>An int or list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;N&lt;/code&gt; or &lt;code&gt;N+2&lt;/code&gt;. The size of the window for each dimension of the input tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="017164fafd10819a1988936768ef3c56a068e41e" translate="yes" xml:space="preserve">
          <source>An int or list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;N&lt;/code&gt; or &lt;code&gt;N+2&lt;/code&gt;. The stride of the sliding window for each dimension of &lt;code&gt;input&lt;/code&gt;. If a single value is given it is replicated in the spatial dimensions. By default the &lt;code&gt;N&lt;/code&gt; and &lt;code&gt;C&lt;/code&gt; dimensions are set to 0. The dimension order is determined by the value of &lt;code&gt;data_format&lt;/code&gt;, see below for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0fffcf37fa7fbb36b1975ca81a2b60f0e63ba0c" translate="yes" xml:space="preserve">
          <source>An int or list of &lt;code&gt;ints&lt;/code&gt; that has length &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;N&lt;/code&gt; or &lt;code&gt;N+2&lt;/code&gt;. The stride of the sliding window for each dimension of the input tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c27a3cc9b80ebb4607d189d2baf291ba21c3b09" translate="yes" xml:space="preserve">
          <source>An int representing evaluation batch size. Must be divisible by total number of replicas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11d7bb399458ac9f24194368ae1190d4136f6563" translate="yes" xml:space="preserve">
          <source>An int representing the global training batch size. TPUEstimator transforms this global batch size to a per-shard batch size, as params['batch_size'], when calling &lt;code&gt;input_fn&lt;/code&gt; and &lt;code&gt;model_fn&lt;/code&gt;. Cannot be &lt;code&gt;None&lt;/code&gt; if &lt;code&gt;use_tpu&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;. Must be divisible by total number of replicas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9d4727574826fb43beda3abb730231860572902" translate="yes" xml:space="preserve">
          <source>An int representing the number of records to combine in a single batch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aff13be803b5ece89034d85c12af4fd31ca26b9" translate="yes" xml:space="preserve">
          <source>An int representing the prediction batch size. Must be divisible by total number of replicas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3337472451bb0a1cc931375c55eebb5c475267ce" translate="yes" xml:space="preserve">
          <source>An int scalar &amp;gt;= 0 (beam search beam width).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00aa8fd4daadfbcc03d2f9cc0730232b66d7bd11" translate="yes" xml:space="preserve">
          <source>An int scalar &amp;gt;= 0, &amp;lt;= beam_width (controls output size).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e3dc258e661a8d9b23d4fef90d5207c02bf6297" translate="yes" xml:space="preserve">
          <source>An int specifying the number of feature batches to prefetch for performance improvement. Recommended value is the number of batches consumed per training step. Defaults to auto-tune.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35e9872fba4b214f5cd84eabdbe24150be63e9a5" translate="yes" xml:space="preserve">
          <source>An int specifying the number of times this dataset is repeated. If None, cycles through the dataset forever.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f28339459de5df9446f10ab5d7f1677da8ffe94" translate="yes" xml:space="preserve">
          <source>An int.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d140db5dbec6d6a6357e640234dc4f0cf451328c" translate="yes" xml:space="preserve">
          <source>An int. The axis along which to repeat values. By default (axis=None), use the flattened input array, and return a flat output array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b19366fd8e0c636505cdee48bf9e51ad9ad6f74" translate="yes" xml:space="preserve">
          <source>An int32 &lt;code&gt;Tensor&lt;/code&gt; with the same shape as &lt;code&gt;values&lt;/code&gt;. The indices that would sort each slice of the given &lt;code&gt;values&lt;/code&gt; along the given &lt;code&gt;axis&lt;/code&gt;.</source>
          <target state="translated">Un &lt;code&gt;Tensor&lt;/code&gt; int32 con la misma forma que los &lt;code&gt;values&lt;/code&gt; . Los &amp;iacute;ndices que ordenar&amp;iacute;an cada segmento de los &lt;code&gt;values&lt;/code&gt; dados a lo largo del &lt;code&gt;axis&lt;/code&gt; dado .</target>
        </trans-unit>
        <trans-unit id="3edaf6d5cae5203a49e444062c5a30edd8136cee" translate="yes" xml:space="preserve">
          <source>An int32 scalar tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="679475a3fec5857c43a9b591328cf71864372819" translate="yes" xml:space="preserve">
          <source>An int32 tensor of non-negative values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1017def51209cdeafc98ecac507e1022a500fe57" translate="yes" xml:space="preserve">
          <source>An int64 Tensor.</source>
          <target state="translated">Un Tensor int64.</target>
        </trans-unit>
        <trans-unit id="8cecddee05d218d5eaba776471c70cb4ffaf2b96" translate="yes" xml:space="preserve">
          <source>An integer (described above).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4da5763e2f2510a678667411d1b089333b020d67" translate="yes" xml:space="preserve">
          <source>An integer (optional). If specified, &lt;code&gt;range_input_producer&lt;/code&gt; produces each integer &lt;code&gt;num_epochs&lt;/code&gt; times before generating an OutOfRange error. If not specified, &lt;code&gt;range_input_producer&lt;/code&gt; can cycle through the integers an unlimited number of times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4f23015df7d5f51f2706843c48bd808e2e9bc54" translate="yes" xml:space="preserve">
          <source>An integer (optional). If specified, &lt;code&gt;slice_input_producer&lt;/code&gt; produces each slice &lt;code&gt;num_epochs&lt;/code&gt; times before generating an &lt;code&gt;OutOfRange&lt;/code&gt; error. If not specified, &lt;code&gt;slice_input_producer&lt;/code&gt; can cycle through the slices an unlimited number of times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99e74e419f7d3e03dcc60e94aa7778f9b0428a1b" translate="yes" xml:space="preserve">
          <source>An integer (optional). If specified, &lt;code&gt;string_input_producer&lt;/code&gt; produces each string from &lt;code&gt;string_tensor&lt;/code&gt;&lt;code&gt;num_epochs&lt;/code&gt; times before generating an &lt;code&gt;OutOfRange&lt;/code&gt; error. If not specified, &lt;code&gt;string_input_producer&lt;/code&gt; can cycle through the strings in &lt;code&gt;string_tensor&lt;/code&gt; an unlimited number of times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2a651521b74164c64e0521c66ac6f3f958b8596" translate="yes" xml:space="preserve">
          <source>An integer (optional). Seed used if shuffle == True.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fadc973358bcb5c1223ec4f16357e8a616e60266" translate="yes" xml:space="preserve">
          <source>An integer &lt;code&gt;SparseTensor&lt;/code&gt; of class indices. The &lt;code&gt;dense_shape&lt;/code&gt; must be &lt;code&gt;[D0, D1, ... DN, ?]&lt;/code&gt; and the values within &lt;code&gt;[0, n_classes)&lt;/code&gt;.</source>
          <target state="translated">Un entero &lt;code&gt;SparseTensor&lt;/code&gt; de &amp;iacute;ndices de clase. La &lt;code&gt;dense_shape&lt;/code&gt; debe ser &lt;code&gt;[D0, D1, ... DN, ?]&lt;/code&gt; &lt;code&gt;[0, n_classes)&lt;/code&gt; ] Y los valores dentro de [0, n_clases) .</target>
        </trans-unit>
        <trans-unit id="fcba7860aca4af3f2b1d88d9a4bb07e285e0d06c" translate="yes" xml:space="preserve">
          <source>An integer &lt;code&gt;Tensor&lt;/code&gt; (&lt;code&gt;dtype=self.row_splits.dtype&lt;/code&gt;). If &lt;code&gt;axis&lt;/code&gt; is not specified, then &lt;code&gt;output&lt;/code&gt; is a vector with &lt;code&gt;output.shape=[self.shape.ndims]&lt;/code&gt;. If &lt;code&gt;axis&lt;/code&gt; is a scalar, then the &lt;code&gt;output&lt;/code&gt; is a scalar. If &lt;code&gt;axis&lt;/code&gt; is a vector, then &lt;code&gt;output&lt;/code&gt; is a vector, where &lt;code&gt;output[i]&lt;/code&gt; is the bounding size for dimension &lt;code&gt;axis[i]&lt;/code&gt;.</source>
          <target state="translated">Un &lt;code&gt;Tensor&lt;/code&gt; entero ( &lt;code&gt;dtype=self.row_splits.dtype&lt;/code&gt; ). Si no se especifica el &lt;code&gt;axis&lt;/code&gt; , la &lt;code&gt;output&lt;/code&gt; es un vector con &lt;code&gt;output.shape=[self.shape.ndims]&lt;/code&gt; . Si el &lt;code&gt;axis&lt;/code&gt; es un escalar, entonces la &lt;code&gt;output&lt;/code&gt; es un escalar. Si el &lt;code&gt;axis&lt;/code&gt; es un vector, la &lt;code&gt;output&lt;/code&gt; es un vector, donde la &lt;code&gt;output[i]&lt;/code&gt; es el tama&amp;ntilde;o delimitador para el &lt;code&gt;axis[i]&lt;/code&gt; dimensi&amp;oacute;n [i] .</target>
        </trans-unit>
        <trans-unit id="f722b86ab5dfc25142aadda04cc205626de120b5" translate="yes" xml:space="preserve">
          <source>An integer &lt;code&gt;Tensor&lt;/code&gt;. How many bins there are in the source spectrogram data, which is understood to be &lt;code&gt;fft_size // 2 + 1&lt;/code&gt;, i.e. the spectrogram only contains the nonredundant FFT bins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="188f2d71192e8726a1bf7709dabba1bde2b687c4" translate="yes" xml:space="preserve">
          <source>An integer Tensor for the global_step.</source>
          <target state="translated">Un tensor entero para el global_step.</target>
        </trans-unit>
        <trans-unit id="02ff30dec7592d19e927ff5973fd66d9e95201f0" translate="yes" xml:space="preserve">
          <source>An integer Tensor of size 1 that counts steps. The value from 'global_step' is used in summaries and checkpoint filenames. Default to the op named 'global_step' in the graph if it exists, is of rank 1, size 1, and of type tf.int32 or tf.int64. If &lt;code&gt;None&lt;/code&gt; the global step is not recorded in summaries and checkpoint files. Used by chief supervisors if a &lt;code&gt;logdir&lt;/code&gt; was specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd43cb8359867b82b2c565bf7377a89adfbf04b2" translate="yes" xml:space="preserve">
          <source>An integer constant indicating the axis whose row lengths should be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f169c69e49d6f234be51674bdee49bbfe30ad933" translate="yes" xml:space="preserve">
          <source>An integer count.</source>
          <target state="translated">Una cuenta entera.</target>
        </trans-unit>
        <trans-unit id="96e5ab88026026d8241adec84062b3375ac781e6" translate="yes" xml:space="preserve">
          <source>An integer denoting the number of dimensions (rank) of the dataset.</source>
          <target state="translated">Un número entero que denota el número de dimensiones (rango)del conjunto de datos.</target>
        </trans-unit>
        <trans-unit id="d95373587d35b9bbca30a259e3b6b634a328e2b9" translate="yes" xml:space="preserve">
          <source>An integer denoting the number of elements in the dataset.</source>
          <target state="translated">Un número entero que denota el número de elementos en el conjunto de datos.</target>
        </trans-unit>
        <trans-unit id="215d3dbdcc353cde7280428c83b514c379adc4c8" translate="yes" xml:space="preserve">
          <source>An integer giving the maximum number of iterations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="225c070e63b08b92d1ac153911dba9373d7e08e6" translate="yes" xml:space="preserve">
          <source>An integer id.</source>
          <target state="translated">Un número entero.</target>
        </trans-unit>
        <trans-unit id="6b1c867dc30892fc901ea2758ce4e659594290be" translate="yes" xml:space="preserve">
          <source>An integer if &lt;code&gt;key&lt;/code&gt; is an integer, or a &lt;code&gt;TensorShape&lt;/code&gt; if &lt;code&gt;key&lt;/code&gt; is a slice.</source>
          <target state="translated">Un entero si la &lt;code&gt;key&lt;/code&gt; es un n&amp;uacute;mero entero, o un &lt;code&gt;TensorShape&lt;/code&gt; si la &lt;code&gt;key&lt;/code&gt; es un segmento.</target>
        </trans-unit>
        <trans-unit id="064b7b4faa42f6a255215bdf74448f93233d8605" translate="yes" xml:space="preserve">
          <source>An integer index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02b7921aaa2f0c8f18dfb5e7bab98837a96270e8" translate="yes" xml:space="preserve">
          <source>An integer length of the 1D convolution window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dffb62951cf432529602d96c466ed30c4eb988f" translate="yes" xml:space="preserve">
          <source>An integer numpy array of rank 3, with shape &lt;code&gt;[num_replicas, num_cores_per_replica, topology_rank]&lt;/code&gt;. Maps (replica, logical core) pairs to physical topology coordinates.</source>
          <target state="translated">Una matriz de n&amp;uacute;meros enteros de rango 3, con forma &lt;code&gt;[num_replicas, num_cores_per_replica, topology_rank]&lt;/code&gt; . Mapas (r&amp;eacute;plica, n&amp;uacute;cleo l&amp;oacute;gico) pares a coordenadas de topolog&amp;iacute;a f&amp;iacute;sica.</target>
        </trans-unit>
        <trans-unit id="f6b9dd87d257456799437fd63c06a6844ce726d1" translate="yes" xml:space="preserve">
          <source>An integer or a 1-D Tensor, depending on whether the time dimension is fixed-length or not. In case of variable length input, it is used for masking in case there's no mask specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e6755c103c945ee405847c427d85d4087b7806d" translate="yes" xml:space="preserve">
          <source>An integer or a scalar 'Tensor'. The number of batch dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e63861ae0a226294246790a6d6323deb5f472d2" translate="yes" xml:space="preserve">
          <source>An integer or float &lt;code&gt;Tensor&lt;/code&gt;. Samples per second of the input signal used to create the spectrogram. Used to figure out the frequencies corresponding to each spectrogram bin, which dictates how they are mapped into the mel scale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b70f278f03bba0a3c738955fe3b5437c9135603" translate="yes" xml:space="preserve">
          <source>An integer or scalar &lt;code&gt;Tensor&lt;/code&gt; denoting overlap offsets. Must be less than or equal to &lt;code&gt;frame_length&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e669ebbf2b01603286812011899e44ea1d83e86c" translate="yes" xml:space="preserve">
          <source>An integer or scalar &lt;code&gt;int32&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt;. The dimension along which to split. Must be in the range &lt;code&gt;[-rank(value), rank(value))&lt;/code&gt;. Defaults to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10a06f2a1480a082345ced90bcb0c6edddfb1881" translate="yes" xml:space="preserve">
          <source>An integer or tuple/list of 2 integers, specifying the amount of padding along the height and width of the output tensor. Can be a single integer to specify the same value for all spatial dimensions. The amount of output padding along a given dimension must be lower than the stride along that same dimension. If set to &lt;code&gt;None&lt;/code&gt; (default), the output shape is inferred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7749eca13d3d839b2f1696ebadcba82249b6d985" translate="yes" xml:space="preserve">
          <source>An integer or tuple/list of 2 integers, specifying the dilation rate to use for dilated convolution. Can be a single integer to specify the same value for all spatial dimensions. Currently, specifying any &lt;code&gt;dilation_rate&lt;/code&gt; value != 1 is incompatible with specifying any stride value != 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="602d7dfbf7ba1a27f733daa97af1d4c1145264d4" translate="yes" xml:space="preserve">
          <source>An integer or tuple/list of 2 integers, specifying the dilation rate to use for dilated convolution. Currently, specifying any &lt;code&gt;dilation_rate&lt;/code&gt; value != 1 is incompatible with specifying any &lt;code&gt;strides&lt;/code&gt; value != 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f2d1956de32276ede2d737ed3e000fa51fdabef" translate="yes" xml:space="preserve">
          <source>An integer or tuple/list of 2 integers, specifying the height and width of the 2D convolution window. Can be a single integer to specify the same value for all spatial dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec828177f9115822d805074ddfc3b93d187713b6" translate="yes" xml:space="preserve">
          <source>An integer or tuple/list of 2 integers, specifying the strides of the convolution along the height and width. Can be a single integer to specify the same value for all spatial dimensions. Specifying any stride value != 1 is incompatible with specifying any &lt;code&gt;dilation_rate&lt;/code&gt; value != 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f397c570963a6a2d7491fe24f13d3815e34527e9" translate="yes" xml:space="preserve">
          <source>An integer or tuple/list of 2 integers, specifying the strides of the convolution along the width and height. Can be a single integer to specify the same value for all spatial dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8bb164349c68d66acbaab972ca377045ee8bb77" translate="yes" xml:space="preserve">
          <source>An integer or tuple/list of 2 integers, specifying the strides of the pooling operation. Can be a single integer to specify the same value for all spatial dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5d4ab386216942646b82b145cdaf253bb9987f6" translate="yes" xml:space="preserve">
          <source>An integer or tuple/list of 2 integers, specifying the width and height of the 2D convolution window. Can be a single integer to specify the same value for all spatial dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ef74814321bd9c230ed24155ab5eefb6de36aee" translate="yes" xml:space="preserve">
          <source>An integer or tuple/list of 2 integers: (pool_height, pool_width) specifying the size of the pooling window. Can be a single integer to specify the same value for all spatial dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25404d1fc9c70ffd8d503489330bea88c1dd8229" translate="yes" xml:space="preserve">
          <source>An integer or tuple/list of 3 integers, specifying the amount of padding along the depth, height, and width. Can be a single integer to specify the same value for all spatial dimensions. The amount of output padding along a given dimension must be lower than the stride along that same dimension. If set to &lt;code&gt;None&lt;/code&gt; (default), the output shape is inferred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a5562451b8f39a1906061e3faa471f4a4098b0" translate="yes" xml:space="preserve">
          <source>An integer or tuple/list of 3 integers, specifying the depth, height and width of the 3D convolution window. Can be a single integer to specify the same value for all spatial dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e9dc797fd918ed0bc728ec72e82b4260e3f4ba5" translate="yes" xml:space="preserve">
          <source>An integer or tuple/list of 3 integers, specifying the dilation rate to use for dilated convolution. Can be a single integer to specify the same value for all spatial dimensions. Currently, specifying any &lt;code&gt;dilation_rate&lt;/code&gt; value != 1 is incompatible with specifying any stride value != 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a076a65f42cedea2960bf66e20464f0f0c19527" translate="yes" xml:space="preserve">
          <source>An integer or tuple/list of 3 integers, specifying the strides of the convolution along each spatial dimension. Can be a single integer to specify the same value for all spatial dimensions. Specifying any stride value != 1 is incompatible with specifying any &lt;code&gt;dilation_rate&lt;/code&gt; value != 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d4879c01b4e1ad28a2490eb60e44ad2ccdb68d6" translate="yes" xml:space="preserve">
          <source>An integer or tuple/list of 3 integers, specifying the strides of the convolution along the depth, height and width. Can be a single integer to specify the same value for all spatial dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4254de707b9f6783c063400a86daad2b1da4c0e7" translate="yes" xml:space="preserve">
          <source>An integer or tuple/list of 3 integers, specifying the strides of the convolution along the depth, height and width. Can be a single integer to specify the same value for all spatial dimensions. Specifying any stride value != 1 is incompatible with specifying any &lt;code&gt;dilation_rate&lt;/code&gt; value != 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dba1a34f68156b12f90fde5ac27d026f95369010" translate="yes" xml:space="preserve">
          <source>An integer or tuple/list of 3 integers, specifying the strides of the pooling operation. Can be a single integer to specify the same value for all spatial dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b77250d38cf71621b9644a59c7a5a2816c35879" translate="yes" xml:space="preserve">
          <source>An integer or tuple/list of 3 integers: (pool_depth, pool_height, pool_width) specifying the size of the pooling window. Can be a single integer to specify the same value for all spatial dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abfc7bafa93ffc0d9b2e7ea4dc4b1967bcb92d8d" translate="yes" xml:space="preserve">
          <source>An integer or tuple/list of a single integer, representing the size of the pooling window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ac291fa920a00769073dc0e44056c81a4dfcc61" translate="yes" xml:space="preserve">
          <source>An integer or tuple/list of a single integer, specifying the dilation rate to use for dilated convolution. Currently, specifying any &lt;code&gt;dilation_rate&lt;/code&gt; value != 1 is incompatible with specifying any &lt;code&gt;strides&lt;/code&gt; value != 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="204b631da3b8f0769aa563ff2a596828493eac0a" translate="yes" xml:space="preserve">
          <source>An integer or tuple/list of a single integer, specifying the length of the 1D convolution window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d33d07983a53d112a6c93c32eff8944ac1a4ca3" translate="yes" xml:space="preserve">
          <source>An integer or tuple/list of a single integer, specifying the stride length of the convolution. Specifying any stride value != 1 is incompatible with specifying any &lt;code&gt;dilation_rate&lt;/code&gt; value != 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a72c3634c9850280ef2eb6268976166d30eac25" translate="yes" xml:space="preserve">
          <source>An integer or tuple/list of a single integer, specifying the strides of the pooling operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0370f10b6460f1f0c8ab188a403d8ef7ca2af04c" translate="yes" xml:space="preserve">
          <source>An integer or tuple/list of n integers, specifying the dilation rate to use for dilated convolution. Currently, specifying any &lt;code&gt;dilation_rate&lt;/code&gt; value != 1 is incompatible with specifying any &lt;code&gt;strides&lt;/code&gt; value != 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cbe80f31985a9e6f21b1fbd60d067ec4a99087e" translate="yes" xml:space="preserve">
          <source>An integer or tuple/list of n integers, specifying the dimensions of the convolution window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8df729753bf1b3bd482bebbe1969b5e6ab42e2c8" translate="yes" xml:space="preserve">
          <source>An integer or tuple/list of n integers, specifying the strides of the convolution. Specifying any stride value != 1 is incompatible with specifying any &lt;code&gt;dilation_rate&lt;/code&gt; value != 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="230e3e70bd92edb5e006b257391e1da33e1199c9" translate="yes" xml:space="preserve">
          <source>An integer representing the length of the dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="205cac28d175ae098c1203826752698585cfaaf8" translate="yes" xml:space="preserve">
          <source>An integer scalar &lt;code&gt;Tensor&lt;/code&gt;. The number of distinct segment IDs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e2310ee75cc61c63de50f30987b7e40f42fe0f2" translate="yes" xml:space="preserve">
          <source>An integer scalar &lt;code&gt;Tensor&lt;/code&gt;. The number of samples to step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c05403673bfe0c67b7856fb6b00ace8c878a5c7" translate="yes" xml:space="preserve">
          <source>An integer scalar &lt;code&gt;Tensor&lt;/code&gt;. The size of the FFT that produced &lt;code&gt;stfts&lt;/code&gt;. If not provided, uses the smallest power of 2 enclosing &lt;code&gt;frame_length&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a17d9414161b03f585972a4200fd20c700abc5e" translate="yes" xml:space="preserve">
          <source>An integer scalar &lt;code&gt;Tensor&lt;/code&gt;. The size of the FFT to apply. If not provided, uses the smallest power of 2 enclosing &lt;code&gt;frame_length&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01e552d5944b0d8ff671a081526459e1f6e65a3a" translate="yes" xml:space="preserve">
          <source>An integer scalar &lt;code&gt;Tensor&lt;/code&gt;. The window length in samples which must be divisible by 4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="095126e598e0195d1e683e31a6e3f47e13dcfc58" translate="yes" xml:space="preserve">
          <source>An integer scalar &lt;code&gt;Tensor&lt;/code&gt;. The window length in samples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71acb4c78705ce72061ffa62b27085feb538c5b9" translate="yes" xml:space="preserve">
          <source>An integer scalar or vector indicating which axes to return the bounding box for. If not specified, then the full bounding box is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e99169bb0e0027360f1955418b97dfe5763f39" translate="yes" xml:space="preserve">
          <source>An integer scalar specifying the number of rows. This should be specified if the &lt;code&gt;RaggedTensor&lt;/code&gt; may containing empty training rows. Must be greater than &lt;code&gt;value_rowids[-1]&lt;/code&gt; (or zero if &lt;code&gt;value_rowids&lt;/code&gt; is empty). Defaults to &lt;code&gt;value_rowids[-1]&lt;/code&gt; (or zero if &lt;code&gt;value_rowids&lt;/code&gt; is empty).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c72d223878430858b59cd18e85a0f8b5fd5b3ce" translate="yes" xml:space="preserve">
          <source>An integer scalar tensor that determines the input that gets selected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c020754558bacb098ec7284269c49a3740b0ef" translate="yes" xml:space="preserve">
          <source>An integer sequence describing a device's physical coordinates in the TPU fabric.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ab9482907bfbbd0a2e276f4b9a4935200e53132" translate="yes" xml:space="preserve">
          <source>An integer specifying dimension of the embedding, must be &amp;gt; 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8b529d933f7757cf851adf5e5df9dd779be3a84" translate="yes" xml:space="preserve">
          <source>An integer specifying the amount of padding along the time dimension of the output tensor. The amount of output padding must be lower than the stride. If set to &lt;code&gt;None&lt;/code&gt; (default), the output shape is inferred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59631c95e530c0e728e872e9eba338e82f1a67a6" translate="yes" xml:space="preserve">
          <source>An integer specifying the ragged rank of the returned &lt;code&gt;RaggedTensor&lt;/code&gt;. Must be nonnegative and less than &lt;code&gt;K&lt;/code&gt;. Defaults to &lt;code&gt;max(0, K - 1)&lt;/code&gt; if &lt;code&gt;inner_shape&lt;/code&gt; is not specified. Defaults to &lt;code&gt;max(0, K - 1 - len(inner_shape))&lt;/code&gt; if &lt;code&gt;inner_shape&lt;/code&gt; is specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ffd497f7494676b1c790d9bc396fbcd8450ef01" translate="yes" xml:space="preserve">
          <source>An integer specifying the ragged rank of the returned &lt;code&gt;RaggedTensorValue&lt;/code&gt;. Must be nonnegative and less than &lt;code&gt;K&lt;/code&gt;. Defaults to &lt;code&gt;max(0, K - 1)&lt;/code&gt; if &lt;code&gt;inner_shape&lt;/code&gt; is not specified. Defaults to `max(0, K</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a998d3738d293160c8ce2dfce684a6af9476718" translate="yes" xml:space="preserve">
          <source>An integer specifying the stride of the convolution along the time dimension. Specifying a stride value != 1 is incompatible with specifying a &lt;code&gt;dilation_rate&lt;/code&gt; value != 1. Defaults to 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d53cc6df8da31ce6ca17490d68837abc63209f8b" translate="yes" xml:space="preserve">
          <source>An integer tensor of indices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="229c2e07dc87d1f58a0bff9ef93a43a18a55fe43" translate="yes" xml:space="preserve">
          <source>An integer tensor specifying the number of clusters. This argument is ignored if &lt;code&gt;initial_clusters&lt;/code&gt; is a tensor or numpy array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f55c5c0ee6f15dee39db009308069294b9ab76f" translate="yes" xml:space="preserve">
          <source>An integer tensor whose shape is a prefix of &lt;code&gt;data.shape&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf24e07cdb340822fb333f48a047d38bf8e9dc22" translate="yes" xml:space="preserve">
          <source>An integer tensor.</source>
          <target state="translated">Un tensor entero.</target>
        </trans-unit>
        <trans-unit id="ea0a5a49b916a7e43c9d3a768b18949e48154a51" translate="yes" xml:space="preserve">
          <source>An integer variable which starts at zero and is incremented on save.</source>
          <target state="translated">Una variable entera que comienza en cero y se incrementa al guardarla.</target>
        </trans-unit>
        <trans-unit id="f7485aa01a0eecefe5e6b94ac710059f32364655" translate="yes" xml:space="preserve">
          <source>An integer version that increases as ops are added to the graph.</source>
          <target state="translated">Una versión entera que aumenta a medida que se añaden operaciones al gráfico.</target>
        </trans-unit>
        <trans-unit id="fe9549eb7f372e5959ad5381ba3247e2884cdcef" translate="yes" xml:space="preserve">
          <source>An integer, dimensionality of the output space. Default value is 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd9cb3068b7f91b3a9470bb9c6242cf3babad323" translate="yes" xml:space="preserve">
          <source>An integer, identifying a logical core.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fa97decbe6995c0a084b3194da7f0237bc12da9" translate="yes" xml:space="preserve">
          <source>An integer, indicates the minimum step interval between two checkpoints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa1d2c8e3d75e9e11c19b806cb9181ba02aa439c" translate="yes" xml:space="preserve">
          <source>An integer, the axis to compute the product.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71c639b0648fb17b51afcc47db29606f0d05d505" translate="yes" xml:space="preserve">
          <source>An integer, the axis to compute the standard deviation. If &lt;code&gt;None&lt;/code&gt; (the default), reduces all dimensions. Must be in the range &lt;code&gt;[-rank(x), rank(x))&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5530de252f468d6c4a70b09a369bc140e48a396e" translate="yes" xml:space="preserve">
          <source>An integer, the axis to compute the sum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65d115e0e0e0132bb90465f0fd04a3237418a077" translate="yes" xml:space="preserve">
          <source>An integer, the axis to compute the variance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb55d5d20ea803333056ac744c15c1c789e29931" translate="yes" xml:space="preserve">
          <source>An integer, the axis to find maximum values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f19c8dcb5003e1b750edaec9319245099beb396" translate="yes" xml:space="preserve">
          <source>An integer, the axis to find minimum values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3b3387e86c494ddb3ea2d36561f3010e993163b" translate="yes" xml:space="preserve">
          <source>An integer, the axis to reduce across. Default to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2ebce217875aaea057847662c013777bd173ea4" translate="yes" xml:space="preserve">
          <source>An integer, the axis to sum over.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fffc598e5f413cf7168dca9bea70205bbebd7979" translate="yes" xml:space="preserve">
          <source>An integer, the number of checkpoints to keep. Unless preserved by &lt;code&gt;keep_checkpoint_every_n_hours&lt;/code&gt;, checkpoints will be deleted from the active set, oldest first, until only &lt;code&gt;max_to_keep&lt;/code&gt; checkpoints remain. If &lt;code&gt;None&lt;/code&gt;, no checkpoints are deleted and everything stays in the active set. Note that &lt;code&gt;max_to_keep=None&lt;/code&gt; will keep all checkpoint paths in memory and in the checkpoint state protocol buffer on disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32c31af829f43ba0e3522318e8262aea10dc4d63" translate="yes" xml:space="preserve">
          <source>An integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6d8debc1cf626bed016031e072c864aa124d1d2" translate="yes" xml:space="preserve">
          <source>An integer. Sets the queue capacity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70519721591a51eb72a4d19a16fd82c244a7c854" translate="yes" xml:space="preserve">
          <source>An integer. The maximum number of elements in the queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df2f3da951745038adfc390421e32d4c7b54a348" translate="yes" xml:space="preserve">
          <source>An integer. The new batch size pulled from the queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db67bfc3be40cc0427deb3de4f74121959453277" translate="yes" xml:space="preserve">
          <source>An integer. The upper bound on the number of elements that may be stored in this queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cbc813e6589a0c86f4c658091dd999530f2e3e3" translate="yes" xml:space="preserve">
          <source>An invalid argument was passed to &lt;code&gt;initial_clusters&lt;/code&gt; or &lt;code&gt;distance_metric&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fbc829b491b7833c30d8c0e534706329ee953e4" translate="yes" xml:space="preserve">
          <source>An iterable containing all feature columns. All items should be instances of classes derived from &lt;code&gt;FeatureColumn&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a2fc514abbf81131de99b6561be5058cfdfb05c" translate="yes" xml:space="preserve">
          <source>An iterable containing all feature columns. All items should be instances of classes derived from &lt;code&gt;_FeatureColumn&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dfdb6e46c7f8edfc49ddafe2f0ca2e0f8eff449" translate="yes" xml:space="preserve">
          <source>An iterable containing all the feature columns used by deep part of the model. All items in the set must be instances of classes derived from &lt;code&gt;FeatureColumn&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c1a01d9362d3789bf96bbee1b90444688a2da51" translate="yes" xml:space="preserve">
          <source>An iterable containing all the feature columns used by linear part of the model. All items in the set must be instances of classes derived from &lt;code&gt;FeatureColumn&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f49e3122b6c6d002f6b5eacede8d1db743935fea" translate="yes" xml:space="preserve">
          <source>An iterable containing all the feature columns used by the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e53ff12f2d31513381716bd58b23f1b86d0e74b" translate="yes" xml:space="preserve">
          <source>An iterable containing all the feature columns used by the model. All items in the set should be instances of classes derived from &lt;code&gt;FeatureColumn&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d42f0abe21feb8ad319921629839e686c50d54ab" translate="yes" xml:space="preserve">
          <source>An iterable containing all the feature columns used by the model. All items in the set should be instances of classes derived from &lt;code&gt;_FeatureColumn&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4158f8afcbf15ac39cf9a518ebe96bb5c160f74a" translate="yes" xml:space="preserve">
          <source>An iterable containing the &lt;code&gt;FeatureColumn&lt;/code&gt;s for contextual input. The data represented by these columns will be replicated and given to the RNN at each timestep. These columns must be instances of classes derived from &lt;code&gt;DenseColumn&lt;/code&gt; such as &lt;code&gt;numeric_column&lt;/code&gt;, not the sequential variants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6190b05a8493c9f133a9123daf7595dc999a5ca" translate="yes" xml:space="preserve">
          <source>An iterable containing the &lt;code&gt;FeatureColumn&lt;/code&gt;s that represent sequential input. All items in the set should either be sequence columns (e.g. &lt;code&gt;sequence_numeric_column&lt;/code&gt;) or constructed from one (e.g. &lt;code&gt;embedding_column&lt;/code&gt; with &lt;code&gt;sequence_categorical_column_*&lt;/code&gt; as input).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="026f0d57f228daa9b5f40ddd7070fc090c0ad216" translate="yes" xml:space="preserve">
          <source>An iterable containing the FeatureColumns to use as inputs to your model. All items should be instances of classes derived from &lt;code&gt;DenseColumn&lt;/code&gt; such as &lt;code&gt;numeric_column&lt;/code&gt;, &lt;code&gt;embedding_column&lt;/code&gt;, &lt;code&gt;bucketized_column&lt;/code&gt;, &lt;code&gt;indicator_column&lt;/code&gt;. If you have categorical features, you can wrap them with an &lt;code&gt;embedding_column&lt;/code&gt; or &lt;code&gt;indicator_column&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb9ccf9db5c13b1ee51e7e93d7fc11f2bd28a1a5" translate="yes" xml:space="preserve">
          <source>An iterable containing the FeatureColumns to use as inputs to your model. All items should be instances of classes derived from &lt;code&gt;_DenseColumn&lt;/code&gt; such as &lt;code&gt;numeric_column&lt;/code&gt;, &lt;code&gt;embedding_column&lt;/code&gt;, &lt;code&gt;bucketized_column&lt;/code&gt;, &lt;code&gt;indicator_column&lt;/code&gt;. If you have categorical features, you can wrap them with an &lt;code&gt;embedding_column&lt;/code&gt; or &lt;code&gt;indicator_column&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3de2093ff1da60b5ce3f7148bcd0ebccf8741844" translate="yes" xml:space="preserve">
          <source>An iterable containing the FeatureColumns to use as inputs to your model. All items should be instances of classes derived from &lt;code&gt;_FeatureColumn&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8df494e7935c0a50025fbe63f87704d20cadb8e" translate="yes" xml:space="preserve">
          <source>An iterable identifying the features to be crossed. Each element can be either:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23372988c6a0782490eeb464780ab8a8131ca54a" translate="yes" xml:space="preserve">
          <source>An iterable of &lt;code&gt;SessionRunHook' objects. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;scaffold&lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; A&lt;/code&gt;Scaffold&lt;code&gt;used for gathering or building supportive ops. If not specified a default one is created. It's used to finalize the graph. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;master&lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;String&lt;code&gt;representation of the TensorFlow master to use. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;config&lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;ConfigProto&lt;code&gt;proto used to configure the session. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;checkpoint_dir&lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; A string. Optional path to a directory where to restore variables. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;stop_grace_period_secs&lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; Number of seconds given to threads to stop after&lt;/code&gt;close()&lt;code&gt;has been called. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;checkpoint_filename_with_path`</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="618fe98516f4820514071af50bfeef8855b966ae" translate="yes" xml:space="preserve">
          <source>An iterable of &lt;code&gt;SessionRunHook' objects. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;should_recover&lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; A bool. Indicates whether to recover from&lt;/code&gt;AbortedError&lt;code&gt;and&lt;/code&gt;UnavailableError&lt;code&gt;or not. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;stop_grace_period_secs&lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; Number of seconds given to threads to stop after&lt;/code&gt;close()` has been called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e1334503e5b02a3484444197e33edcf97abd875" translate="yes" xml:space="preserve">
          <source>An iterable of &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="260f0054e45ed684da32bcc56f1a4aee897c86d1" translate="yes" xml:space="preserve">
          <source>An iterable of `SessionRunHook' objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5b6d57ccb066429928f1a2940f16ebf61d855cb" translate="yes" xml:space="preserve">
          <source>An iterable of dense sequence columns. Valid columns are</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bed4beb425c07351d4dfb8c4ba116badd7942ee" translate="yes" xml:space="preserve">
          <source>An iterable of integers specifies the shape of the &lt;code&gt;Tensor&lt;/code&gt;. An integer can be given which means a single dimension &lt;code&gt;Tensor&lt;/code&gt; with given width. The &lt;code&gt;Tensor&lt;/code&gt; representing the column will have the shape of [batch_size] + &lt;code&gt;shape&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5df99e2635ca1651620229ffecf6be47a9aef8f7" translate="yes" xml:space="preserve">
          <source>An iterable of tuples of PerReplica objects (or tensors with device set if there is one device) and destinations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8cf51a2206c0b972e8c8da910dda57868c0bc95" translate="yes" xml:space="preserve">
          <source>An iterable over the elements of the dataset, with their tensors converted to numpy arrays.</source>
          <target state="translated">Un iterable sobre los elementos del conjunto de datos,con sus tensores convertidos en matrices numéricas.</target>
        </trans-unit>
        <trans-unit id="f961e649d0252c4c127e14975ee87875356a4df5" translate="yes" xml:space="preserve">
          <source>An iterator for reading &lt;code&gt;Event&lt;/code&gt; protocol buffers from an event file.</source>
          <target state="translated">Un iterador para leer b&amp;uacute;feres de protocolo de &lt;code&gt;Event&lt;/code&gt; de un archivo de eventos.</target>
        </trans-unit>
        <trans-unit id="5151c48a2474d7fa974e11c09dabac1744d01dc5" translate="yes" xml:space="preserve">
          <source>An iterator object that should first be &lt;code&gt;.initialize()&lt;/code&gt;-ed. It may then either be passed to &lt;code&gt;strategy.experimental_run()&lt;/code&gt; or you can &lt;code&gt;iterator.get_next()&lt;/code&gt; to get the next value to pass to &lt;code&gt;strategy.extended.call_for_each_replica()&lt;/code&gt;.</source>
          <target state="translated">Un objeto iterador que primero debe tener &lt;code&gt;.initialize()&lt;/code&gt; -ed. Luego, puede pasarse a &lt;code&gt;strategy.experimental_run()&lt;/code&gt; o puede &lt;code&gt;iterator.get_next()&lt;/code&gt; para obtener el siguiente valor para pasar a &lt;code&gt;strategy.extended.call_for_each_replica()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0fc38b52e20c19691096129178de84b77d36dab0" translate="yes" xml:space="preserve">
          <source>An iterator of serialized TFRecords.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="228ad736d56c871eb90525104d57d2dbdd7c50fb" translate="yes" xml:space="preserve">
          <source>An iterator over &lt;a href=&quot;distributeddataset&quot;&gt;&lt;code&gt;tf.distribute.DistributedDataset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f8f60ffcc528bb61cc7d8ba226ca4a4652b8ef1" translate="yes" xml:space="preserve">
          <source>An iterator that read the records from a TFRecords file. (deprecated)</source>
          <target state="translated">Un iterador que lee los registros de un archivo TFRecords.(desaprobado)</target>
        </trans-unit>
        <trans-unit id="5baae22eb0e6f437f8f2c552d606d8e2fbbd4c8e" translate="yes" xml:space="preserve">
          <source>An list of non-negative integers, either None or empty or the same length as the argument categorical_columns. Entries corresponding to non-sequence columns must be 0 and entries corresponding to sequence columns specify the max sequence length for the column. Any sequence shorter then this will be padded with 0 embeddings and any sequence longer will be truncated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e802681459eace9a79fe167ac3f4004ac5e4791" translate="yes" xml:space="preserve">
          <source>An n-D Tensor with at least 3 dimensions, the last 3 of which are the dimensions of each image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b395e7fb5721311524a978213d5547f83d2d302a" translate="yes" xml:space="preserve">
          <source>An n-way switch statement which calls a single branch function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e7b8aeba8e7f8ef38246dfde207a43bfdd2354" translate="yes" xml:space="preserve">
          <source>An non-negative integer specifying the max sequence length. Any sequence shorter then this will be padded with 0 embeddings and any sequence longer will be truncated. This must be positive for sequence features and 0 for non-sequence features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="559ac60959fcb210e6c73ef9f57b317859f73ea8" translate="yes" xml:space="preserve">
          <source>An object of type graph_pb2.GraphDef or a textual proto representation of a valid GraphDef.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d229c74015ef96c729f6119323bc9ecec1eac05a" translate="yes" xml:space="preserve">
          <source>An object that can be converted to path representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f66b12cb453b1a616291e7097c62391cb13addae" translate="yes" xml:space="preserve">
          <source>An object whose type has a registered &lt;code&gt;Tensor&lt;/code&gt; conversion function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53236bd7a72b54ebe4237315af252d19c8304b01" translate="yes" xml:space="preserve">
          <source>An offline converter for TF-TRT transformation for TF 2.0 SavedModels.</source>
          <target state="translated">Un convertidor fuera de línea para la transformación TF-TRT para TF 2.0 SavedModels.</target>
        </trans-unit>
        <trans-unit id="85725d8963b2e007ac03e3cf12e8394470936679" translate="yes" xml:space="preserve">
          <source>An offset &lt;code&gt;Tensor&lt;/code&gt;, often denoted \(\beta\) in equations, or None. If present, will be added to the normalized tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de92891d59cdd382213c15a7854f24efb2eef025" translate="yes" xml:space="preserve">
          <source>An op enabling differentiation of TPU Embeddings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdae002ee37107ad2ee06d52a6bf8fc2acf612be" translate="yes" xml:space="preserve">
          <source>An op for the chief/sync replica to fill the token queue.</source>
          <target state="translated">Una operación para que la réplica del Jefe/Sinc llene la cola de fichas.</target>
        </trans-unit>
        <trans-unit id="2fcb304271268ee597176a949d4cf865b377e620" translate="yes" xml:space="preserve">
          <source>An op that adds a list of quantile summaries to a quantile stream resource. Each summary Tensor is rank 2, containing summaries (value, weight, min_rank, max_rank) for a single feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c199ba3631e230a6f961033067373da5549935ef" translate="yes" xml:space="preserve">
          <source>An op that deserializes bucket boundaries and are boundaries ready flag into current QuantileAccumulator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a4b5a3e81b15d35da85023b850a2c0bd71787c9" translate="yes" xml:space="preserve">
          <source>An op that enqueues TPUEmbedding input indices from a SparseTensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f871732f495e88e267b67149a6bae3404a5f81d9" translate="yes" xml:space="preserve">
          <source>An op that enqueues a list of input batch tensors to TPUEmbedding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="177ec7a4069acbda66f8658e67865a157178ce91" translate="yes" xml:space="preserve">
          <source>An op that flushes the summaries for a quantile stream resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0917ba781b2671cf945b169570da392717bb40d5" translate="yes" xml:space="preserve">
          <source>An op that loads optimization parameters into HBM for embedding. Must be preceded by a ConfigureTPUEmbeddingHost op that sets up the correct embedding table configuration. For example, this op is used to install parameters that are loaded from a checkpoint before a training loop is executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f88f9be47a2634b27516583772d56693fea1be7" translate="yes" xml:space="preserve">
          <source>An op that outputs a list of quantile summaries of a quantile stream resource. Each summary Tensor is rank 2, containing summaries (value, weight, min_rank, max_rank) for a single feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51dce430ce594911373b9ef82dc911f73378623e" translate="yes" xml:space="preserve">
          <source>An op that receives embedding activations on the TPU.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cbfe68f68aacac07a26d232646022d3d667048e" translate="yes" xml:space="preserve">
          <source>An op that retrieves optimization parameters from embedding to host memory. Must be preceded by a ConfigureTPUEmbeddingHost op that sets up the correct embedding table configuration. For example, this op is used to retrieve updated parameters before saving a checkpoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dac326969c38863e2ebdd820f66dac66002d6a0a" translate="yes" xml:space="preserve">
          <source>An op that returns a list of float tensors for a quantile stream resource. Each tensor is Rank 1 containing bucket boundaries for a single feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e689246d144378b963145495f74f9d2ea42eefe" translate="yes" xml:space="preserve">
          <source>An op that returns a list of float tensors, where each tensor represents the bucketized values for a single feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fb770590295067b5368bab5daa8693e188d9d7a" translate="yes" xml:space="preserve">
          <source>An op that takes a list of tensors (one tensor per feature) and outputs the quantile summaries for each tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff0aec0764126410d466a7ae38f66ef0da5e880b" translate="yes" xml:space="preserve">
          <source>An op which enqueues prelinearized buffer into TPU infeed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="654d1d4df3c6feed00e7a981d37753cdad84466f" translate="yes" xml:space="preserve">
          <source>An op which feeds a single Tensor value into the computation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0525ba7d6e6f4428863eafb3b0a364c762af532b" translate="yes" xml:space="preserve">
          <source>An op which linearizes multiple Tensor values to an opaque variant tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f34563e8161920ab4a239abb48d8dc0bf267875f" translate="yes" xml:space="preserve">
          <source>An op which linearizes one Tensor value to an opaque variant tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6fe171be91adc963d991b16d9e46995d099acd4" translate="yes" xml:space="preserve">
          <source>An operation that accumulates the error from a batch of data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b526806cd8c2fcafbf012cbe6aa2e0af7fb7518d" translate="yes" xml:space="preserve">
          <source>An operation that increments the &lt;code&gt;total&lt;/code&gt; and &lt;code&gt;count&lt;/code&gt; variables appropriately and whose value matches &lt;code&gt;accuracy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2703ff9927e8a9b19c4e749021180d92897d2632" translate="yes" xml:space="preserve">
          <source>An operation that increments the &lt;code&gt;total&lt;/code&gt; and &lt;code&gt;count&lt;/code&gt; variables appropriately and whose value matches &lt;code&gt;mean_absolute_error&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1735392e32270e771694e0e6f1241ade81d36ea" translate="yes" xml:space="preserve">
          <source>An operation that increments the &lt;code&gt;total&lt;/code&gt; and &lt;code&gt;count&lt;/code&gt; variables appropriately and whose value matches &lt;code&gt;mean_relative_error&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa6b79da084a26820439638452ae8dd24042c505" translate="yes" xml:space="preserve">
          <source>An operation that increments the &lt;code&gt;total&lt;/code&gt; and &lt;code&gt;count&lt;/code&gt; variables appropriately and whose value matches &lt;code&gt;mean_squared_error&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c38de76e5081f1d0c995c1b3ccb701f46d8b090f" translate="yes" xml:space="preserve">
          <source>An operation that increments the &lt;code&gt;total&lt;/code&gt; and &lt;code&gt;count&lt;/code&gt; variables appropriately and whose value matches &lt;code&gt;mean_value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54c2ae1f23c9083f75a1f7cfbd9f4dc40fc181bd" translate="yes" xml:space="preserve">
          <source>An operation that increments the &lt;code&gt;total&lt;/code&gt; and &lt;code&gt;count&lt;/code&gt; variables appropriately and whose value matches &lt;code&gt;root_mean_squared_error&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9bc209a66d1537cb69f6721d5414b699896f94a" translate="yes" xml:space="preserve">
          <source>An operation that increments the &lt;code&gt;total&lt;/code&gt; and &lt;code&gt;count&lt;/code&gt; variables appropriately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01378fc9953360d84373a2f8467920812d9c7578" translate="yes" xml:space="preserve">
          <source>An operation that increments the &lt;code&gt;true_positives&lt;/code&gt;, &lt;code&gt;true_negatives&lt;/code&gt;, &lt;code&gt;false_positives&lt;/code&gt; and &lt;code&gt;false_negatives&lt;/code&gt; variables appropriately and whose value matches &lt;code&gt;auc&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62540ff4543ce4d37342f3f797f025b44580d69e" translate="yes" xml:space="preserve">
          <source>An operation that increments the &lt;code&gt;true_positives&lt;/code&gt;, &lt;code&gt;true_negatives&lt;/code&gt;, &lt;code&gt;false_positives&lt;/code&gt; and &lt;code&gt;false_negatives&lt;/code&gt; variables appropriately and whose value matches &lt;code&gt;sensitivity&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaf68f0209a52cc485496a7dd9bc285715dc387a" translate="yes" xml:space="preserve">
          <source>An operation that increments the &lt;code&gt;true_positives&lt;/code&gt;, &lt;code&gt;true_negatives&lt;/code&gt;, &lt;code&gt;false_positives&lt;/code&gt; and &lt;code&gt;false_negatives&lt;/code&gt; variables appropriately and whose value matches &lt;code&gt;specificity&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="736e384d1fbcd0de1a84c4d9b373535476e7f36f" translate="yes" xml:space="preserve">
          <source>An operation that increments the &lt;code&gt;true_positives&lt;/code&gt;, &lt;code&gt;true_negatives&lt;/code&gt;, &lt;code&gt;false_positives&lt;/code&gt; and &lt;code&gt;false_negatives&lt;/code&gt; variables that are used in the computation of &lt;code&gt;precision&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a83fb8581cd33490b7522f3a5fdce1efeca1469f" translate="yes" xml:space="preserve">
          <source>An operation that increments the &lt;code&gt;true_positives&lt;/code&gt;, &lt;code&gt;true_negatives&lt;/code&gt;, &lt;code&gt;false_positives&lt;/code&gt; and &lt;code&gt;false_negatives&lt;/code&gt; variables that are used in the computation of &lt;code&gt;recall&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdc449dcc23a51ed8ed23aa9d85d8c6e48e84148" translate="yes" xml:space="preserve">
          <source>An operation that increments the confusion matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aece13b84cad845e36c14251e867224de397f57d" translate="yes" xml:space="preserve">
          <source>An operation that updates the &lt;code&gt;false_negatives&lt;/code&gt; variable and returns its current value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a75d92c1897384164191347c5640a824b974ac1" translate="yes" xml:space="preserve">
          <source>An operation that updates the &lt;code&gt;false_positives&lt;/code&gt; variable and returns its current value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4efc5846d342a8aafb33b7e5faa51e107005065d" translate="yes" xml:space="preserve">
          <source>An operation that updates the &lt;code&gt;true_negatives&lt;/code&gt; variable and returns its current value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecc090ac7b51af3e196fad5b3d91e9a2f57a8e61" translate="yes" xml:space="preserve">
          <source>An operation that updates the &lt;code&gt;true_positives&lt;/code&gt; variable and returns its current value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36cfd166ec0e389150cadc27ff28140a506d1a0a" translate="yes" xml:space="preserve">
          <source>An operation that updates the accuracy tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a65e5864da6fe35dc51ffeee35335ae162bd6b4a" translate="yes" xml:space="preserve">
          <source>An operation that writes the content of the specified dataset to the file specified in the constructor.</source>
          <target state="translated">Una operación que escribe el contenido del conjunto de datos especificados al archivo especificado en el constructor.</target>
        </trans-unit>
        <trans-unit id="ac0e16bd11cf6676b2b8fcaa001cbe1233cc8d07" translate="yes" xml:space="preserve">
          <source>An operation-specific seed. It will be used in conjunction with the graph-level seed to determine the real seeds that will be used in this operation. Please see the documentation of set_random_seed for its interaction with the graph-level random seed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cd89934841b70da810546c9c5796d3ed6fe2912" translate="yes" xml:space="preserve">
          <source>An ops.Tensor object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b7bb90dd5acb15516e6b90961d83683aa0ce2c3" translate="yes" xml:space="preserve">
          <source>An optimizer config is a Python dictionary (serializable) containing the configuration of an optimizer. The same optimizer can be reinstantiated later (without any saved state) from this configuration.</source>
          <target state="translated">Una configuración de optimizador es un diccionario de Python (serializable)que contiene la configuración de un optimizador.El mismo optimizador puede ser reinstalado más tarde (sin ningún estado guardado)a partir de esta configuración.</target>
        </trans-unit>
        <trans-unit id="4c35bc5630a4f22b6ba47b63482db03d57bceb18" translate="yes" xml:space="preserve">
          <source>An optimizer instance.</source>
          <target state="translated">Una instancia optimizadora.</target>
        </trans-unit>
        <trans-unit id="b64fd67fea6b1c125d231391d46cbbfc6338279b" translate="yes" xml:space="preserve">
          <source>An optimizer that applies loss scaling.</source>
          <target state="translated">Un optimizador que aplica la escala de pérdidas.</target>
        </trans-unit>
        <trans-unit id="6c5e2c5583b1f9ba1aae31cc247696892ae7e17c" translate="yes" xml:space="preserve">
          <source>An optimizer that averages gradients across TPU shards.</source>
          <target state="translated">Un optimizador que promedia los gradientes a través de los fragmentos de TPU.</target>
        </trans-unit>
        <trans-unit id="e2d68c6fc96dab097ca915c14d1653c99d788ae7" translate="yes" xml:space="preserve">
          <source>An option sequence of tensors or ops, which will be used to determine the current graph. Otherwise the default graph will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f05e01d6f35e24e40a9b726b73876fe73084c20" translate="yes" xml:space="preserve">
          <source>An optionable iterable containing all the feature columns used by the model. All items in the set should be feature column instances that can be passed to &lt;code&gt;tf.feature_column.input_layer&lt;/code&gt;. If this is None, all features will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77caf79e3410b9d51ea35285a1df11b3bccdf3bd" translate="yes" xml:space="preserve">
          <source>An optional 0-D &lt;code&gt;Tensor&lt;/code&gt; (defaults to &lt;code&gt;0&lt;/code&gt;). The magnitude threshold that determines if an output value/index pair takes space. Its dtype should match that of the values if they are real; if the latter are complex64/complex128, then the dtype should be float32/float64, correspondingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e64bb0141e709ef56d5d0ecb26fe27540b7825f4" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../../../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.int32, tf.int64&lt;/code&gt;. Defaults to &lt;a href=&quot;../../../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe478f3128853f30ce77b706625a9ec80202a1cf" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../../../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.qint8, tf.quint8, tf.qint32, tf.qint16, tf.quint16&lt;/code&gt;. Defaults to &lt;a href=&quot;../../../../tf#qint32&quot;&gt;&lt;code&gt;tf.qint32&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3efd4ad8b1aaca0ecbca10fe98ba2bb790effb5f" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../../../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.qint8, tf.quint8, tf.qint32, tf.qint16, tf.quint16&lt;/code&gt;. Defaults to &lt;a href=&quot;../../../../tf#quint8&quot;&gt;&lt;code&gt;tf.quint8&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="647e0bfb0a200e00a0f8148d16f0a29ca1c3df3b" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.float32, tf.float64, tf.int32, tf.int64&lt;/code&gt;. Defaults to &lt;a href=&quot;../../../tf#float32&quot;&gt;&lt;code&gt;tf.float32&lt;/code&gt;&lt;/a&gt;. The numeric type to interpret each string in &lt;code&gt;string_tensor&lt;/code&gt; as.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="201e1d8880e3cec347c23e3ed397c1d874fdfe9a" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.int32, tf.int64&lt;/code&gt;. Defaults to &lt;a href=&quot;../../../tf#int32&quot;&gt;&lt;code&gt;tf.int32&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e23f1e54439520c16f4af9ebae26383ad54580e" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.int32, tf.int64&lt;/code&gt;. Defaults to &lt;a href=&quot;../../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="000eab6eacc7dbf1e10d75b312a9acd80518caa2" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.bfloat16, tf.float32&lt;/code&gt;. Defaults to &lt;a href=&quot;../../tf#float32&quot;&gt;&lt;code&gt;tf.float32&lt;/code&gt;&lt;/a&gt;. Type of the output tensor. Currently Dequantize supports float and bfloat16. If 'dtype' is 'bfloat16', it only supports 'MIN_COMBINED' mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63285d35d4b5de8e854d81b232e43c303cb7e4de" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.complex64, tf.complex128&lt;/code&gt;. Defaults to &lt;a href=&quot;../../tf#complex64&quot;&gt;&lt;code&gt;tf.complex64&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="100ca18a8d1988805c6c387a974e392974864126" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.float32, tf.float64, tf.int32, tf.int64&lt;/code&gt;. Defaults to &lt;a href=&quot;../../tf#float32&quot;&gt;&lt;code&gt;tf.float32&lt;/code&gt;&lt;/a&gt;. The numeric type to interpret each string in &lt;code&gt;string_tensor&lt;/code&gt; as.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f7401d0608e59cd5519dd72923619807e0d3946" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.float32, tf.float64, tf.int32, tf.int64&lt;/code&gt;. Defaults to &lt;code&gt;tf.float32&lt;/code&gt;. The numeric type to interpret each string in &lt;code&gt;string_tensor&lt;/code&gt; as.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7017dc4798d96ed3b56d8a4222ea54d4b9afd12" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.float32, tf.float64&lt;/code&gt;. Defaults to &lt;a href=&quot;../../tf#float32&quot;&gt;&lt;code&gt;tf.float32&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7e362f945118752f37b1cd999219b22263ca014" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.float32, tf.float64&lt;/code&gt;. Defaults to &lt;a href=&quot;../../tf#float32&quot;&gt;&lt;code&gt;tf.float32&lt;/code&gt;&lt;/a&gt;. Optional. The type of the output. Can be float32 or float64 (default: float32).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fc94b4f13d81812bffd70d8f26a1d480bf53065" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.float32, tf.float64&lt;/code&gt;. Defaults to &lt;a href=&quot;../../tf#float32&quot;&gt;&lt;code&gt;tf.float32&lt;/code&gt;&lt;/a&gt;. The type of the sample. One of: &lt;code&gt;float32&lt;/code&gt; or &lt;code&gt;float64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7a09e6ed1a3c322dfbc6516508351c39c6d539c" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.half, tf.bfloat16, tf.float32, tf.float64&lt;/code&gt;. Defaults to &lt;a href=&quot;../../tf#float32&quot;&gt;&lt;code&gt;tf.float32&lt;/code&gt;&lt;/a&gt;. The type of the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc607eb17d0815cf6c1e4ab8404a8b7d3dd4fe79" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.half, tf.float32, tf.float64, tf.int32, tf.int64&lt;/code&gt;. Defaults to &lt;a href=&quot;../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62c7bdf6bc09e8400794cce925a928defde29d65" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.half, tf.float32, tf.float64, tf.int32, tf.int64&lt;/code&gt;. Defaults to &lt;a href=&quot;../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt;. The type of the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="044dac7daeb1bb4fd1d603f2577b6ccf0c1d5cc9" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.int32, tf.int64, tf.uint32, tf.uint64&lt;/code&gt;. Defaults to &lt;a href=&quot;../../tf#uint64&quot;&gt;&lt;code&gt;tf.uint64&lt;/code&gt;&lt;/a&gt;. The type of the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2981ac5e68c88f6a7fe3d4b5246d7683dbea09a9" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.int32, tf.int64&lt;/code&gt;. Defaults to &lt;a href=&quot;../../tf#int32&quot;&gt;&lt;code&gt;tf.int32&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7c424eb436213a5a2757b2ad6e37ac0fe1c3d15" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.int32, tf.int64&lt;/code&gt;. Defaults to &lt;a href=&quot;../../tf#int32&quot;&gt;&lt;code&gt;tf.int32&lt;/code&gt;&lt;/a&gt;. (Optional) The output type of the operation (int32 or int64). Defaults to int32.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="808d52d5bfbf5526e238fc13ba81595b641ad1b2" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.int32, tf.int64&lt;/code&gt;. Defaults to &lt;a href=&quot;../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="432f01dd366a0040d94a16022a9096fefa6174d8" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.int32, tf.int64&lt;/code&gt;. Defaults to &lt;a href=&quot;../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt;. The dtype of the returned argmax tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7091a893711136e68b1092d46cce322bbdd4af11" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.qint8, tf.quint8, tf.qint32, tf.qint16, tf.quint16&lt;/code&gt;. Defaults to &lt;a href=&quot;../../tf#qint32&quot;&gt;&lt;code&gt;tf.qint32&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c892d9e4ef5594ad8d042036e3039dfa38ceafa" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.qint8, tf.quint8, tf.qint32, tf.qint16, tf.quint16&lt;/code&gt;. Defaults to &lt;a href=&quot;../../tf#qint32&quot;&gt;&lt;code&gt;tf.qint32&lt;/code&gt;&lt;/a&gt;. The quantized type of output tensor that needs to be converted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f45b08de6cc64a36cad56c8b3fe5dc7687cd1e" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.qint8, tf.quint8, tf.qint32, tf.qint16, tf.quint16&lt;/code&gt;. Defaults to &lt;a href=&quot;../../tf#qint32&quot;&gt;&lt;code&gt;tf.qint32&lt;/code&gt;&lt;/a&gt;. The type of the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbb45c935c9a336e4cd7043f9f9e142c0a48af52" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.qint8, tf.quint8, tf.qint32, tf.qint16, tf.quint16&lt;/code&gt;. Defaults to &lt;a href=&quot;../../tf#qint8&quot;&gt;&lt;code&gt;tf.qint8&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32fa3754c8fe665ae3161be4ff9455e81e812cd6" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.qint8, tf.quint8, tf.qint32, tf.qint16, tf.quint16&lt;/code&gt;. Defaults to &lt;a href=&quot;../../tf#quint8&quot;&gt;&lt;code&gt;tf.quint8&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e71d48aca5ff5b95cf399619c252ccc13ad51046" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.qint8, tf.quint8, tf.qint32, tf.qint16, tf.quint16&lt;/code&gt;. Defaults to &lt;a href=&quot;../../tf#quint8&quot;&gt;&lt;code&gt;tf.quint8&lt;/code&gt;&lt;/a&gt;. The quantized type of output tensor that needs to be converted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cbb15e61c4c81364209f2add4c12f6e0ccc3744" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.qint8, tf.quint8, tf.qint32, tf.qint16, tf.quint16&lt;/code&gt;. Defaults to &lt;a href=&quot;../../tf#quint8&quot;&gt;&lt;code&gt;tf.quint8&lt;/code&gt;&lt;/a&gt;. The type of output produced by activation function following this operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d67714f8a9fa61b1011da089246969a1c55e11cc" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.qint8, tf.quint8, tf.qint32, tf.qint16, tf.quint16&lt;/code&gt;. Defaults to &lt;a href=&quot;../../tf#quint8&quot;&gt;&lt;code&gt;tf.quint8&lt;/code&gt;&lt;/a&gt;. The type of the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02da2f2efc935fb41f0eaaf00930d5ebe1602c9c" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.string, tf.variant&lt;/code&gt;. Defaults to &lt;a href=&quot;../../tf#string&quot;&gt;&lt;code&gt;tf.string&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;dtype&lt;/code&gt; to use for serialization; the supported types are &lt;code&gt;string&lt;/code&gt; (default) and &lt;code&gt;variant&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b59e41a95390a528ed13ae5f767d03a76fa9a46" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.uint8, tf.uint16&lt;/code&gt;. Defaults to &lt;a href=&quot;../../tf#uint8&quot;&gt;&lt;code&gt;tf.uint8&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c42383cdfe04b5175c01ce99b078787f55f19d91" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt;. Defaults to &lt;a href=&quot;../../tf#float32&quot;&gt;&lt;code&gt;tf.float32&lt;/code&gt;&lt;/a&gt;. The type of the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8bb432817e43190499124d3e3a913b1a925a327" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt;. Defaults to &lt;a href=&quot;../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt;. The type of the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b94d74a43ee083d387e8c83e1ad806b9bd41cc" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt;. Defaults to &lt;a href=&quot;../../tf#uint64&quot;&gt;&lt;code&gt;tf.uint64&lt;/code&gt;&lt;/a&gt;. The type of the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8243f3811b4321d6114a4995b438f63dd7514556" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../tensorshape&quot;&gt;&lt;code&gt;tf.TensorShape&lt;/code&gt;&lt;/a&gt; or list of &lt;code&gt;ints&lt;/code&gt;. Defaults to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c8931cdff3cca1d328704bff1f49aa5ef16e779" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../tensorshape&quot;&gt;&lt;code&gt;tf.TensorShape&lt;/code&gt;&lt;/a&gt; or list of &lt;code&gt;ints&lt;/code&gt;. Defaults to &lt;code&gt;None&lt;/code&gt;. (Optional) The shape of the tensor. If the shape has 0 dimensions, the shape is unconstrained.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2b9a859efdb23a27bcae646dbd4464df48bc6fb" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../tensorshape&quot;&gt;&lt;code&gt;tf.TensorShape&lt;/code&gt;&lt;/a&gt; or list of &lt;code&gt;ints&lt;/code&gt;. Defaults to &lt;code&gt;None&lt;/code&gt;. The expected shape of an element, if known. Used to validate the shapes of TensorArray elements. If this shape is not fully specified, gathering zero-size TensorArrays is an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b29af356411ca355ef06103cad4ff8fc1ee0cd03" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../tensorshape&quot;&gt;&lt;code&gt;tf.TensorShape&lt;/code&gt;&lt;/a&gt; or list of &lt;code&gt;ints&lt;/code&gt;. Defaults to &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dda7fed20faed3f6abce335d950a06db69944c0" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../tensorshape&quot;&gt;&lt;code&gt;tf.TensorShape&lt;/code&gt;&lt;/a&gt; or list of &lt;code&gt;ints&lt;/code&gt;. Defaults to &lt;code&gt;[]&lt;/code&gt;. The shape of each value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aa193b9405411c741dc79bf2aa4a45d42afbf6f" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;../tensorshape&quot;&gt;&lt;code&gt;tf.TensorShape&lt;/code&gt;&lt;/a&gt; or list of &lt;code&gt;ints&lt;/code&gt;. Defaults to &lt;code&gt;[]&lt;/code&gt;. The shape of the tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7feb699262143821536a91cf3291d4b29bf5b81" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.int32, tf.int64&lt;/code&gt;. Defaults to &lt;a href=&quot;../tf#int32&quot;&gt;&lt;code&gt;tf.int32&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a1ff2d88364bada67fadd9fd7d2ba6c560551fd" translate="yes" xml:space="preserve">
          <source>An optional &lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/TensorShape&quot;&gt;&lt;code&gt;tf.TensorShape&lt;/code&gt;&lt;/a&gt; or list of &lt;code&gt;ints&lt;/code&gt;. Defaults to &lt;code&gt;None&lt;/code&gt;. The expected shape of an element, if known, excluding the first dimension. Used to validate the shapes of TensorArray elements. If this shape is not fully specified, concatenating zero-size TensorArrays is an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="785b5ab8f39bdc1969484fe8749db3edbd4a3b0d" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;Tensor&lt;/code&gt; whose shape matches &lt;code&gt;predictions&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7db09d3e5bc67828426d7ea158efdec0338d7960" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;axis&lt;/code&gt; attribute can specify a dimension index of the input tensor, such that quantization ranges will be calculated and applied separately for each slice of the tensor along that dimension. This is useful for per-channel quantization.</source>
          <target state="translated">Un atributo de &lt;code&gt;axis&lt;/code&gt; opcional puede especificar un &amp;iacute;ndice de dimensi&amp;oacute;n del tensor de entrada, de modo que los rangos de cuantificaci&amp;oacute;n se calcular&amp;aacute;n y aplicar&amp;aacute;n por separado para cada segmento del tensor a lo largo de esa dimensi&amp;oacute;n. Esto es &amp;uacute;til para la cuantificaci&amp;oacute;n por canal.</target>
        </trans-unit>
        <trans-unit id="d37af189b1cdb36736defc46c3c4361359b06c07" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7d2e912663d157944d0d8816c7454da7b6e84e1" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. (bool) Do not send data to the debug URLs unless at least one of elements [2], [3] and &lt;a href=&quot;i.e.,%20the%20nan%20count%20and%20the%20generalized%20-inf%20and%0ainf%20counts&quot;&gt;7&lt;/a&gt; is non-zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a28c93fc4b1e142c22238ff32000b54c00cce2eb" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. A &lt;code&gt;bool&lt;/code&gt; (default: False).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4f3d701803437f974c61bb742220d72e52d725f" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. A boolean that determines whether writes to the TensorArray are allowed to grow the size. By default, this is not allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="134e5ea5b4f4b8c5364a9245f42af5797158b209" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. Allow to return less than num_elements items if barrier is already closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fbd1307794939456c32a6e4fb31cb555a113323" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. An optional bool. Defaults to True. If True, the assignment will be protected by a lock; otherwise the behavior is undefined, but may exhibit less contention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9910feee5eca2c2abe7bfda9bd1a1671867871ad" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. Bool whether padding is applied at the ends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90fecf7bb20cd69397a0084562d00b6d4eb48514" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. Boolean indicating whether to solve with &lt;code&gt;matrix&lt;/code&gt; or its (block-wise) adjoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c71b09fb89146111bdc8240ac715093dd7343184" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. Boolean indicating whether to solve with matrix or its (block-wise) adjoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d8a01617e9a0c22f88db04fc969cdae2011113b" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. Boolean indicating whether to solve with the matrix's block-wise adjoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="810106b96c140b078f1694823cf0716758f3ed98" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. Conjugates the product of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdd3a243599d34ee6a01e2c6a8f63f3025ed5a5c" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. Controls behavior if no bounding boxes supplied. If true, assume an implicit bounding box covering the whole input. If false, raise an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="017bd9b37918209e4928d177f0222e1580469d72" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If &lt;code&gt;True&lt;/code&gt;, adjoint the slices of &lt;code&gt;x&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cc1ee33bb8a5bca5d2ddca6a37899f371475039" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If &lt;code&gt;True&lt;/code&gt;, adjoint the slices of &lt;code&gt;y&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41ea5d9e1e033c86a8ff3a4e09d5647b6d6a6b0a" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If &lt;code&gt;True&lt;/code&gt;, perform exclusive cumprod.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee0591ed99745ab5967f2b4a1a6654a319c973ee" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If &lt;code&gt;True&lt;/code&gt;, perform exclusive cumsum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ef5addb2c6b62a4d38e55edfa52c866b5e6fbf7" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If &lt;code&gt;True&lt;/code&gt;, perform exclusive cumulative log-sum-exp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff7a1d2e85d7bee6bded770f22312a3109ea4c6f" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If &lt;code&gt;True&lt;/code&gt;, retain reduced dimensions with length &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8b39cf5fda0de762232f2bc2a4162091b288ace" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If &lt;code&gt;True&lt;/code&gt;, the subtraction will be protected by a lock; otherwise the behavior is undefined, but may exhibit less contention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a4f24c5c56a43d7c8852786f0177ecfcc3f8150" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If &lt;code&gt;True&lt;/code&gt;, the tensor passed to compute grad will be var + momentum * accum, so in the end, the var you get is actually var + momentum * accum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="761e668c4ec0cbda7457407baa48452bb0d5cf78" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If &lt;code&gt;True&lt;/code&gt;, the tensor passed to compute grad will be var - lr * momentum * accum, so in the end, the var you get is actually var - lr * momentum * accum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdbcc22f40bf1c9fed14614f3c2fe06cd2abbabb" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If &lt;code&gt;True&lt;/code&gt;, updating of the var and accum tensors will be protected by a lock; otherwise the behavior is undefined, but may exhibit less contention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b63b0fa3b49d0baba628c055709a613630253cb" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If &lt;code&gt;True&lt;/code&gt;, updating of the var and m tensors is protected by a lock; otherwise the behavior is undefined, but may exhibit less contention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33d144604582629105322151161006660bf285e7" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If &lt;code&gt;True&lt;/code&gt;, updating of the var, m, and v tensors will be protected by a lock; otherwise the behavior is undefined, but may exhibit less contention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4015bae298b3b64d339c05c8909758f732fdb36e" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If &lt;code&gt;True&lt;/code&gt;, updating of the var, mg, ms, and mom tensors is protected by a lock; otherwise the behavior is undefined, but may exhibit less contention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c29b2f9d8f3e1fe175480b0a6084e08d73a09ace" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If &lt;code&gt;True&lt;/code&gt;, updating of the var, ms, and mom tensors is protected by a lock; otherwise the behavior is undefined, but may exhibit less contention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58ff8a5f2b875c79a3c5a0b959a7f630210ae8b7" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If &lt;code&gt;True&lt;/code&gt;, uses the nesterov update.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="975d9e297186fa7054b2a34b560bc1ff83d8abda" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If True, &lt;code&gt;given_y_min&lt;/code&gt; and &lt;code&gt;given_y_min&lt;/code&gt; and &lt;code&gt;given_y_max&lt;/code&gt; are used as the output range. Otherwise, the implementation computes the output range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90b97bd58361c3e1f0e774db1cee66d3a0ae626f" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If True, create a JPEG that loads progressively (coarse to fine).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc932502a73131aea4f2d8a5447c2a43600c06e9" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If True, merge repeated classes in output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7085f26cf09b93d22d2ad6a4fc8431d42b66a481" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If True, spend CPU/RAM to reduce size with no quality change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f5e1ec1fb0a71f9ca6278fa4060a2d3f966718a" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If True, the addition will be protected by a lock; otherwise the behavior is undefined, but may exhibit less contention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bd7eff98c8d77ac2d6eb10663fb96a861003738" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If True, the assignment will be protected by a lock; otherwise the behavior is undefined, but may exhibit less contention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e3ec0e40cc88a050ccd661dd5fe25bb172c471b" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If True, the operation will be protected by a lock; otherwise the behavior is undefined, but may exhibit less contention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0a358bf4ac1359b3ff5f2f3fc2fb92242d45f95" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If True, the subtraction will be protected by a lock; otherwise the behavior is undefined, but may exhibit less contention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5817934d78adff2fc977cdfe77e44de9aee553f0" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If True, the update will be protected by a lock; otherwise the behavior is undefined, but may exhibit less contention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d024a76addf64d294ebd77143e1992508e211ad3" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If True, then the absolute value of the quantized minimum value is the same as the quantized maximum value, instead of 1 greater. i.e. for 8 bit quantization, the minimum value is -127 instead of -128.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f675457c3bc0d6596c627e21f7131b49664c5837" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If True, updating of the var and accum tensors will be protected by a lock; otherwise the behavior is undefined, but may exhibit less contention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab7fb342daa705dfb3d95aba5fca304d17d48780" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If True, updating of the var, accum and update_accum tensors will be protected by a lock; otherwise the behavior is undefined, but may exhibit less contention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="949701e1b4b9fc82a2413874b404ad0734e98297" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If false, the output nmsed boxes, scores and classes are padded/clipped to &lt;code&gt;max_total_size&lt;/code&gt;. If true, the output nmsed boxes, scores and classes are padded to be of length &lt;code&gt;max_size_per_class&lt;/code&gt;*&lt;code&gt;num_classes&lt;/code&gt;, unless it exceeds &lt;code&gt;max_total_size&lt;/code&gt; in which case it is clipped to &lt;code&gt;max_total_size&lt;/code&gt;. Defaults to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62ecb53fb19329aba4b671b54227ca3803c73583" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If set to true, this indicates that the node was added to the graph as a result of a client-side feed or fetch of Tensor data, in which case the corresponding send or recv is expected to be managed locally by the caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="340e5976f88777e80bb7bb57ebb0da65e683085b" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If true (default is false), then all elements in the TensorArray will be expected to have have identical shapes. This allows certain behaviors, like dynamically checking for consistent shapes on write, and being able to fill in properly shaped zero tensors on stack -- even if the element_shape attribute is not fully defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8292cee725bba402d82b15aa3acfd8b7b76395c" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If true and shared_name is empty, the table is shared using the node name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a71a91b07161d0013c44c9d9fbfba382c5bd38c" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If true try to recover an image from truncated input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce2b5f3c5ce09501b483199d77228fa15f51dffe" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If true, &quot;a&quot; is transposed before multiplication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b532e3550da668d5dfc66d0aaf929c8e98caed6" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If true, &quot;b&quot; is transposed before multiplication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="207219ae8ea84a84b245e6f926130340cdf50311" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If true, &lt;code&gt;a&lt;/code&gt; is transposed before multiplication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15c7f1b83456fa41cc095a25f2ed5eaea9aada73" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If true, &lt;code&gt;b&lt;/code&gt; is transposed before multiplication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aef098047420b6ef918d06929de9930948f3b5d" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If true, all pending enqueue requests that are blocked on the barrier's queue will be canceled. InsertMany will fail, even if no new key is introduced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1287a68ec02c45e3d8cd19c495b40d2d38844a79" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If true, all pending enqueue requests that are blocked on the given queue will be canceled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac78b22fef00258232177b83e6bb7d44a5a1a63" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If true, compute full-sized &lt;code&gt;q&lt;/code&gt; and &lt;code&gt;r&lt;/code&gt;. If false (the default), compute only the leading &lt;code&gt;P&lt;/code&gt; columns of &lt;code&gt;q&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c032db9c4a86af1bde4f3d3577577a85784097e" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If true, compute full-sized &lt;code&gt;u&lt;/code&gt; and &lt;code&gt;v&lt;/code&gt;. If false (the default), compute only the leading &lt;code&gt;P&lt;/code&gt; singular vectors. Ignored if &lt;code&gt;compute_uv&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="398ecb592d5929a6e1dbc389bbb954deb84a8f1c" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If true, retain reduced dimensions with length 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="913773e5d94b559bce43be38974dea28733245d6" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If true, the centers of the 4 corner pixels of the input and grad tensors are aligned. Defaults to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94cc199b75662528013c2e3c3aa09760bff36466" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If true, the centers of the 4 corner pixels of the input and output tensors are aligned, preserving the values at the corner pixels. Defaults to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54f6a01515a04bfd8591ed73876002968daa675f" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If true, the output &lt;code&gt;selected_indices&lt;/code&gt; is padded to be of length &lt;code&gt;max_output_size&lt;/code&gt;. Defaults to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="729c4406175894ae3439d892362c36f666b2871c" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If true, the output is constant within the child frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b65114ca64f7111ac5cd981cc81579e6a50f283c" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. Indicates whether &lt;code&gt;a&lt;/code&gt; should be conjugate-transposed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="769a99b71e9f931a765fe61d77249436ea4f0ab8" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. Indicates whether &lt;code&gt;a&lt;/code&gt; should be transposed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb0eb382b8b2e7021256994c8de5e3d4344256e1" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. Indicates whether &lt;code&gt;b&lt;/code&gt; should be conjugate-transposed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a997cbdb2c1f06257dbaf9352f8686eb0ec545c" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. Indicates whether &lt;code&gt;b&lt;/code&gt; should be transposed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bbb5aa7da4d5f068a7074b253dad1ff34e9f134" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. Indicates whether &lt;code&gt;input&lt;/code&gt; should be conjugated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6df18ef4d0bac09cd4edb579a50a0da2757f2be5" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. Reserved. Do not use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed7f52fc2cce62b2af82e202884d665ed5ab8028" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. Scalar, if true then repeated labels are collapsed prior to the CTC calculation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb9908c24c18c87ef67206190f5a611692c79986" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. Scalar. If set to true, during CTC calculation, items that have longer output sequences than input sequences are skipped: they don't contribute to the loss term and have zero-gradient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="275a3f5f59083852f92a307497e23b98a9c03713" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. Swap &lt;code&gt;elem&lt;/code&gt; to CPU. Default to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3e942400cc57d799313ec9db6c6a91ea346abaf" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. Transposes the product of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4931e4aa826f916521a43b6ad6d5c6b94fd7ed34" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. Use scientific notation for floating point numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fea828850dfd4a201d0772de4ddc5fdbc344ece6" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. Use shortest representation (either scientific or standard) for floating point numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c05c3a73ce9562c222525cb9f0c607d79dbe421" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. Use the adjoint of A in the matrix multiply. If A is complex, this is transpose(conj(A)). Otherwise it's transpose(A).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d28095e0895bc38e93d24b7a7332f8c64f6fee15" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. Use the adjoint of B in the matrix multiply. If B is complex, this is transpose(conj(B)). Otherwise it's transpose(B).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9826171a04a9d11263a98e995ec91016b5c1df4d" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. When set to &lt;code&gt;True&lt;/code&gt;, generates the pooling sequence in a pseudorandom fashion, otherwise, in a random fashion. Check (Graham, 2015) for difference between pseudorandom and random.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3043783b76e207cdd1bfadca67b07252da0750aa" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. When set to &lt;code&gt;True&lt;/code&gt;, generates the pooling sequence in a pseudorandom fashion, otherwise, in a random fashion. Check paper (Graham, 2015) for difference between pseudorandom and random.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d2827e989dc361154d2224e368f7fe56e34e4d1" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. When set to &lt;code&gt;True&lt;/code&gt;, it means when pooling, the values at the boundary of adjacent pooling cells are used by both cells. For example: &lt;code&gt;index 0 1 2 3 4&lt;/code&gt;&lt;code&gt;value 20 5 16 3 7&lt;/code&gt; If the pooling sequence is [0, 2, 4], then 16, at index 2 will be used twice. The result would be [20, 16] for fractional avg pooling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48cfb7c185d6d249acdd653e6799268eec0ac3b6" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. When set to &lt;code&gt;True&lt;/code&gt;, it means when pooling, the values at the boundary of adjacent pooling cells are used by both cells. For example: &lt;code&gt;index 0 1 2 3 4&lt;/code&gt;&lt;code&gt;value 20 5 16 3 7&lt;/code&gt; If the pooling sequence is [0, 2, 4], then 16, at index 2 will be used twice. The result would be [20, 16] for fractional max pooling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab8a1b3369ee27d916a01b98afca162aef272d00" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. When set to True, a fixed pooling region will be used when iterating over a FractionalAvgPool node in the computation graph. Mainly used in unit test to make FractionalAvgPool deterministic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc4d795dde3a02e2059030659e9fc3b100b29aaf" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. When set to True, a fixed pooling region will be used when iterating over a FractionalMaxPool node in the computation graph. Mainly used in unit test to make FractionalMaxPool deterministic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86da2acbea627ec8669c20d748cbf357699b1f9d" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. When set to True, find the nth-largest value in the vector and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd9d17c210ee52946ac20526adcf7c0c4b2f7da0" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. When set to True, generates the pooling sequence in a pseudorandom fashion, otherwise, in a random fashion. Check paper &lt;a href=&quot;http://arxiv.org/abs/1412.6071&quot;&gt;Benjamin Graham, Fractional Max-Pooling&lt;/a&gt; for difference between pseudorandom and random.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb8f6cd0798868fcd97ad1e4f8d4a03ba3dfdf6f" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. When set to True, it means when pooling, the values at the boundary of adjacent pooling cells are used by both cells. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ec2683b5f0815075f0adc01ffb7836e474f00f9" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. Whether the range is given or should be determined from the &lt;code&gt;input&lt;/code&gt; tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c99d2033be5886fa3983037a8ff9eb7566b4d17f" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. Whether this op will be gated. If any of the debug_urls of this debug node is of the grpc:// scheme, when the value of this attribute is set to True, the data will not actually be sent via the grpc stream unless this debug op has been enabled at the debug_url. If all of the debug_urls of this debug node are of the grpc:// scheme and the debug op is enabled at none of them, the output will be an empty Tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff897c7c9265d5e0e779b21ec0e1cfd7b5ecaf35" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. Whether to include batch dimension in flattened index of &lt;code&gt;argmax&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dade9d4568d658eaf8fbbaf68d93b8540624ba6c" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. Whether to quantize into 2^num_bits - 1 distinct values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a8648bbc9975daab1dab09770c4cfa6d2710bcb" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. Whether to replace the C0 control characters (00-1F) with the &lt;code&gt;replacement_char&lt;/code&gt;. Default is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb6986695662a58514280fada27701c1731e4c8" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. Whether to return the squared magnitude or just the magnitude. Using squared magnitude can avoid extra calculations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1aacf9eddf48af47acaa683f22061330f9c7bb2" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. Whether to sanitize the result or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cf717d37464678f04e9269db823e55e1ea7cfd1" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. Whether to use peephole weights.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66ca6d49bfc4a54ac822daf5a423bc3331e9ca9d" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. bool; If True, the output will be the num_quantiles for each stream where the ith entry is the ith quantile of the input with an approximation error of epsilon. Duplicate values may be present. If False, the output will be the points in the histogram that we got which roughly translates to 1/epsilon boundaries and without any duplicates. Default to False.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a18eab7ae9580b80540b036fcb6a2a2a55bcad" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. bool; Whether the kernel should count the appearance or number of occurrences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4cb8a3f9c25c39a9baadcdca38c60bc2dc2354d" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcdf64133fc1a79c7197f34103cba3fa18718592" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;True&lt;/code&gt;. A &lt;code&gt;bool&lt;/code&gt;. If &lt;code&gt;True&lt;/code&gt;, skip the empty strings from the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeb5fa7aa08f0528f3bbc7b99c10b4a5646c2df4" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;True&lt;/code&gt;. A bool value to indicate the operation is for training (default) or inference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a06afc6197147420da789fc17b48643e8ce8a62" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;True&lt;/code&gt;. An optional bool. Defaults to True. If True, the assignment will be protected by a lock; otherwise the behavior is undefined, but may exhibit less contention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d60fdbc23361d21883667c5e078a3560b497025" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;True&lt;/code&gt;. Boolean indicating whether &lt;code&gt;bands&lt;/code&gt; represents a lower or upper triangular matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d432e47aa9a90d2fa27c98e4370b6c64d108813" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;True&lt;/code&gt;. Boolean indicating whether the innermost matrices in &lt;code&gt;matrix&lt;/code&gt; are lower or upper triangular.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="603debef0453c369ee86beee19f26eaec3631dda" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;True&lt;/code&gt;. Boolean indicating whether the innermost matrices in matrix are lower or upper triangular.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1defe524421af1cb16a7f4c66e0373d3a4949ad7" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;True&lt;/code&gt;. If &lt;code&gt;True&lt;/code&gt; then eigenvectors will be computed and returned in &lt;code&gt;v&lt;/code&gt;. Otherwise, only the eigenvalues will be computed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="432d5a478da78839d7c2b80ead76ffc188e68c24" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;True&lt;/code&gt;. If True, the assignment will be protected by a lock; otherwise the behavior is undefined, but may exhibit less contention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b39e66c1c44c98853965531c0eb25f7aef93a39a" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;True&lt;/code&gt;. If True, the replacement is global, otherwise the replacement is done only on the first match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6035fccf4903866499d56b77e6cf2388728b4648" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;True&lt;/code&gt;. If false, treats double quotation marks as regular characters inside of the string fields (ignoring RFC 4180, Section 2, Bullet 5).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42fec26c254b47039bdbe12d6a8b5d921ae6db1d" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;True&lt;/code&gt;. If true (default), Tensors in the TensorArray are cleared after being read. This disables multiple read semantics but allows early release of memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae8198d580c4cb27304638bf7c6e70a44e7a538f" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;True&lt;/code&gt;. If true the resulting &lt;code&gt;k&lt;/code&gt; elements will be sorted by the values in descending order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5790a638033d8fe2e6b54eb963f3600577780da" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;True&lt;/code&gt;. If true use a slower but nicer upscaling of the chroma planes (yuv420/422 only).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca470675145955b32b89324a205f3e54060f4a10" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;True&lt;/code&gt;. If true, assume the box coordinates are between [0, 1] and clip the output boxes if they fall beyond [0, 1]. If false, do not do clipping and output the box coordinates as it is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="209dee46c30f263e30cd158f75d135162d7516a3" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;True&lt;/code&gt;. If true, each iterator over this dataset will be given a different pseudorandomly generated seed, based on a sequence seeded by the &lt;code&gt;seed&lt;/code&gt; and &lt;code&gt;seed2&lt;/code&gt; inputs. If false, each iterator will be given the same seed, and repeated iteration over this dataset will yield the exact same sequence of results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="568dcfc51b6551027c8e07f724f1b8f9849421b0" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;True&lt;/code&gt;. If true, indices are checked to make sure they are sorted in lexicographic order and that there are no repeats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9413b6fb0e2dbd36c21a67bf8ddab1120ed856e" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;True&lt;/code&gt;. If true, left and right singular vectors will be computed and returned in &lt;code&gt;u&lt;/code&gt; and &lt;code&gt;v&lt;/code&gt;, respectively. If false, &lt;code&gt;u&lt;/code&gt; and &lt;code&gt;v&lt;/code&gt; are not set and should never referenced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65dacb223fb82219547236ad12cc5274ffec0ead" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;True&lt;/code&gt;. If true, merge repeated classes in output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aed8013ca4c37f3fd85ee08d265604211c115b1a" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;True&lt;/code&gt;. If true, the operation will validate that the shape of 'value' matches the shape of the Tensor being assigned to. If false, 'ref' will take on the shape of 'value'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb5ffa6878ee68ad19388c11ae14bea2e44ba58" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;True&lt;/code&gt;. Scalar. If set to false, &lt;em&gt;during&lt;/em&gt; CTC calculation repeated non-blank labels will not be merged and are interpreted as individual labels. This is a simplified version of CTC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="542f02313cd03da8c868c7c97314858a96bccbb0" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;True&lt;/code&gt;. See &lt;a href=&quot;http://en.wikipedia.org/wiki/Chroma_subsampling&quot;&gt;http://en.wikipedia.org/wiki/Chroma_subsampling&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81b410af5429a10ffbfd30f2c1e68b71383b7163" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;True&lt;/code&gt;. Whether the input &lt;code&gt;bytes&lt;/code&gt; are in little-endian order. Ignored for &lt;code&gt;out_type&lt;/code&gt; values that are stored in a single byte like &lt;code&gt;uint8&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="052a6104fade8e4b0f924d611aa29cb95bcde354" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;True&lt;/code&gt;. Whether the input &lt;code&gt;input_bytes&lt;/code&gt; is in little-endian order. Ignored for &lt;code&gt;out_type&lt;/code&gt; values that are stored in a single byte, like &lt;code&gt;uint8&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85b0b35c8972ff0900f9aad52772f98a1b78e894" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;True&lt;/code&gt;. Whether the quantization is signed or unsigned. (actually this parameter should have been called &lt;b&gt;&lt;code&gt;signed_output&lt;/code&gt;&lt;/b&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92e529288a3baebc239f9c6f7342a9041de5142d" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;True&lt;/code&gt;. Whether to apply partial pivoting. Partial pivoting makes the procedure more stable, but slower.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb4bdffaaa2804ce0113ef937ec5ee2ff9dc3991" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;True&lt;/code&gt;. Whether to place the computation on the TPU.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="485225df4329c0205d3cd2fea6f2f4c39c3a3a2c" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;True&lt;/code&gt;. Whether to use Adaptive SDCA for the inner loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="841f7f24cf355dbd77a1fa342cc46c7863aa89ad" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;True&lt;/code&gt;. boolean (if true, edit distances are normalized by length of truth).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ab3ee65ac1936ec802d0a2632015539985ebfb" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;True&lt;/code&gt;. indicates if the noise should be generated using a uniform distribution or a Gaussian distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08f18fadbdd44d01f2182ef2291beb1eb9abc852" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;True&lt;/code&gt;. indicates if the offset coordinates are centered relative to the image, in which case the (0, 0) offset is relative to the center of the input images. If false, the (0,0) offset corresponds to the upper left corner of the input images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aae0076d6e915e13b4b10e7fcc767b016d6d317" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;True&lt;/code&gt;. indicates if the offset coordinates are normalized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4db58e8c441cab193435f08136f26f028a91e3f6" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;True&lt;/code&gt;. see above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d270ade821b8604626bfd70877dca3c1a18245a" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;True&lt;/code&gt;. whether to ignore the error when the resource doesn't exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa52e1b7d9b7c9a76d4017bd26d3b34abef34bf3" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Deprecated; use &lt;code&gt;fractional_avg_pool_v2&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f92d758406a06ba167611822973635bf42e81c80" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;bool&lt;/code&gt;. Deprecated; use &lt;code&gt;fractional_max_pool_v2&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="624c5b6829e9abf009265e369dc6a8b8768a617b" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;boolean&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. Whether to include batch dimension in flattened index of &lt;code&gt;argmax&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d09f26f0d32a3ef550257a570d54f5f8ec08e04f" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;dict&lt;/code&gt; of hyper parameters that will be passed into &lt;code&gt;input_fn&lt;/code&gt; and &lt;code&gt;model_fn&lt;/code&gt;. Keys are names of parameters, values are basic python types. There are reserved keys for &lt;code&gt;TPUEstimator&lt;/code&gt;, including 'batch_size'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4bee88b92186319042e0a0710f42ada151d9a22" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;float&lt;/code&gt;. Defaults to &lt;code&gt;-6&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8b8a74dcc38553e6c41ed9f995debb067f4c47c" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;float&lt;/code&gt;. Defaults to &lt;code&gt;0.0001&lt;/code&gt;. A small float number added to the variance of x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5113c08b7bbd8bd32efd3594cfe1902791c55338" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;float&lt;/code&gt;. Defaults to &lt;code&gt;0.001&lt;/code&gt;. Minimum value of &lt;code&gt;y_max - y_min&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7091bc37cd1c0502bde8c0e7ecdcc57750d9be1c" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;float&lt;/code&gt;. Defaults to &lt;code&gt;0.01&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e52f9bd69468497b8deb3f83cb59e10684a58f8a" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;float&lt;/code&gt;. Defaults to &lt;code&gt;0.1&lt;/code&gt;. The cropped area of the image must contain at least this fraction of any bounding box supplied. The value of this parameter should be non-negative. In the case of 0, the cropped area does not need to overlap any of the bounding boxes supplied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="718c0c0556956f7de6cdeb819a6aae404194e6ce" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;float&lt;/code&gt;. Defaults to &lt;code&gt;0.2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69e4d8050fbe01362c4e2cedae922bdc649f4617" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;float&lt;/code&gt;. Defaults to &lt;code&gt;0.5&lt;/code&gt;. A float representing the threshold for deciding whether boxes overlap too much with respect to IOU.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef5bdf9f3aae38f370d2b5f41dfb6aafcec8a03" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;float&lt;/code&gt;. Defaults to &lt;code&gt;0.5&lt;/code&gt;. An exponent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af46131b73940ce52e6e7bca7d92c5001f6c3126" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;float&lt;/code&gt;. Defaults to &lt;code&gt;0.8&lt;/code&gt;. The maximum ratio between number of entries and number of buckets before growing the table. Must be between 0 and 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="398c74bd171dea67f642bfaa960144a76e0c3082" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;float&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad05f238b1a62e9334895cabbbf228dfe15fa478" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;float&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;. Output in &lt;code&gt;y_max&lt;/code&gt; if &lt;code&gt;output_range_given&lt;/code&gt; is True.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fd6125b27ddea09625046e7a4a24b82a7963ff2" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;float&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;. Output in &lt;code&gt;y_min&lt;/code&gt; if &lt;code&gt;output_range_given&lt;/code&gt; is True.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f0709cc9bdcd91644d700bf77a7de47dd7a239" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;float&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;. Shifts the list of files after the list is randomly shuffled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e4c38d9adc8420e4c0036fb65a115edcc920ac1" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;float&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;. Value to clip the 'cs' value to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4915bb24c355af9bc12b57d3d7d8ebeeb772ee02" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;float&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;. Value used for extrapolation, when applicable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="391f81f4926b98fe575e235add34c8f0c3f7ff3c" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;float&lt;/code&gt;. Defaults to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff29e59f8cdde858520bd1b4e286eff306959244" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;float&lt;/code&gt;. Defaults to &lt;code&gt;1&lt;/code&gt;. A scale factor, usually positive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="089051c3d738e184d95558beec82ffdabd15caa1" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;float&lt;/code&gt;. Defaults to &lt;code&gt;1&lt;/code&gt;. An offset (usually &amp;gt; 0 to avoid dividing by 0).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e279af2ec74d3b0427b0dfc221037d7ef6838117" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;float&lt;/code&gt;. Defaults to &lt;code&gt;1&lt;/code&gt;. An offset (usually positive to avoid dividing by 0).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04f8801c965a0ce60a5d7214ca6bfc8a4173ae55" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;float&lt;/code&gt;. Defaults to &lt;code&gt;1&lt;/code&gt;. The distortion is used to skew the unigram probability distribution. Each weight is first raised to the distortion's power before adding to the internal unigram distribution. As a result, distortion = 1.0 gives regular unigram sampling (as defined by the vocab file), and distortion = 0.0 gives a uniform distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d750da47dff5ac4beeb2103965055fc14286747" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;float&lt;/code&gt;. Defaults to &lt;code&gt;1&lt;/code&gt;. The forget gate bias.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f98c2f256d24c1b55d21a19b72c54ec047e8ce75" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;float&lt;/code&gt;. Defaults to &lt;code&gt;1&lt;/code&gt;. The minimum required fraction of lines before a truncated input is accepted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7b2f445dc4ffac7176bdc7d2d73a1fdb5d670cb" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;float&lt;/code&gt;. Defaults to &lt;code&gt;1e-05&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f770af6139912d6346a590b746a5dc44ed4e94ac" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;float&lt;/code&gt;. Defaults to &lt;code&gt;1e-05&lt;/code&gt;. A small float number to avoid dividing by 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44fd4e91b0445b9cabf56443f9e2d602f3ca710d" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;float&lt;/code&gt;. Defaults to &lt;code&gt;20&lt;/code&gt;. The lowest frequency to use when calculating the ceptstrum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34fcac14f8047f63f85cc0270aac1a08f696b978" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;float&lt;/code&gt;. Defaults to &lt;code&gt;3&lt;/code&gt;. Value to clip the 'cs' value to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c427442e7e3d55467e1e624fe148912d7031fc7" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;float&lt;/code&gt;. Defaults to &lt;code&gt;4000&lt;/code&gt;. The highest frequency to use when calculating the ceptstrum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44f010e8bf432c207e247343903842bf9847e485" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;float&lt;/code&gt;. Defaults to &lt;code&gt;6&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c32e6ac7f7050308c4ecd13c4ea9a9f41b75422" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;float&lt;/code&gt;. Defaults to &lt;code&gt;float('-inf')&lt;/code&gt;. (float) The lower bound &amp;lt;= which values will be included in the generalized -inf count. Default: -inf.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="119081bdd82f292b76243c70cf940ef071ea7045" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;float&lt;/code&gt;. Defaults to &lt;code&gt;float('inf')&lt;/code&gt;. (float) The upper bound &amp;gt;= which values will be included in the generalized +inf count. Default: +inf.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dc1cb872b14affda45fde023d3c02fa44ddf7af" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt; that is &lt;code&gt;&amp;gt;= -1&lt;/code&gt;. Defaults to &lt;code&gt;-1&lt;/code&gt;. Maximum value to count. Can be set to -1 for no maximum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adab1775a3cebca52292688b02f096278d5f5ad7" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt; that is &lt;code&gt;&amp;gt;= -1&lt;/code&gt;. Defaults to &lt;code&gt;-1&lt;/code&gt;. Minimum value to count. Can be set to -1 for no minimum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f04fe2e29c19ad56f94e38ecfee792710dd62d0" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt; that is &lt;code&gt;&amp;gt;= -1&lt;/code&gt;. Defaults to &lt;code&gt;-1&lt;/code&gt;. Number of elements of the file, use -1 if unknown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a840a540b076e7919e3f917726e7be5ca34ede76" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt; that is &lt;code&gt;&amp;gt;= -1&lt;/code&gt;. Defaults to &lt;code&gt;-1&lt;/code&gt;. Number of entries in the old vocab file to consider. If -1, use the entire old vocabulary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c19742bcf105d8a9ec3d3144b72bda373ce5c414" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt; that is &lt;code&gt;&amp;gt;= 0&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b10eed259621a6aaaea76e44d277f29f00370bcc" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt; that is &lt;code&gt;&amp;gt;= 0&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;. A sampler can be used to sample from a subset of the original range in order to speed up the whole computation through parallelism. This parameter (together with 'num_shards') indicates the particular partition number of a sampler op, when partitioning is being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52154d9a0b586400c46fe330095d22f707ae0c47" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt; that is &lt;code&gt;&amp;gt;= 0&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;. Maximum number of elements in the Staging Area. If &amp;gt; 0, inserts on the container will block when the capacity is reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc46ddbf29bb41d7a6f3fbda6fdc48653fee645e" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt; that is &lt;code&gt;&amp;gt;= 0&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;. The maximum number of bytes allowed for Tensors in the Staging Area. If &amp;gt; 0, inserts will block until sufficient space is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26dae78e6905dc892e2a8cff1e544523dd7c263b" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt; that is &lt;code&gt;&amp;gt;= 1&lt;/code&gt;. Defaults to &lt;code&gt;1&lt;/code&gt;. A sampler can be used to sample from a subset of the original range in order to speed up the whole computation through parallelism. This parameter (together with 'shard') indicates the number of partitions that are being used in the overall computation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06c4db673a3e0444115cc8ab033e028c59e0310f" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt; that is &lt;code&gt;&amp;gt;= 1&lt;/code&gt;. Defaults to &lt;code&gt;3&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d240be99eba99ce99392e1971143eb0448677b94" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt; that is &lt;code&gt;&amp;gt;= 1&lt;/code&gt;. Defaults to &lt;code&gt;3&lt;/code&gt;. Max number of batch elements to generate audio for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf7cb02730142a768befee9e074988a4893b343e" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt; that is &lt;code&gt;&amp;gt;= 1&lt;/code&gt;. Defaults to &lt;code&gt;3&lt;/code&gt;. Max number of batch elements to generate images for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68042c7daddb7e1cdee319b08ef397416b19d48c" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a3caf25e57299342eda2cb43b4fd98c0de14887" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;-1&lt;/code&gt;. An &lt;code&gt;int&lt;/code&gt;. If &lt;code&gt;maxsplit &amp;gt; 0&lt;/code&gt;, limit of the split of the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c5c9ae3d499648afa990defd2892a31dd0d2e2a" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;-1&lt;/code&gt;. Compression level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0179df6296005d85350cd1b06c381f731ea9417" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;-1&lt;/code&gt;. If specified, this axis is treated as a channel or slice axis, and a separate quantization range is used for each channel or slice along this axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea7fecb7d9c7fb1376235cea67d0272d8aa7c07f" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;-1&lt;/code&gt;. If the queue has fewer than n elements, this operation will block for up to timeout_ms milliseconds. Note: This option is not supported yet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49ec07b05c2ebe416d39d69603829d6dc692c6fd" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;-1&lt;/code&gt;. If the queue is empty, this operation will block for up to timeout_ms milliseconds. Note: This option is not supported yet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b403cf50331b1d9940b66a11f798b83d042af0d" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;-1&lt;/code&gt;. If the queue is full, this operation will block for up to timeout_ms milliseconds. Note: This option is not supported yet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a3210b729d523aecfdc49ff7b97592a24a68272" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;-1&lt;/code&gt;. If the queue is too full, this operation will block for up to timeout_ms milliseconds. Note: This option is not supported yet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="446f16dc2f7c7b32f94189e0bd38413e496bfef1" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;-1&lt;/code&gt;. Index of file to open first if multiple files match &lt;code&gt;file_pattern&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40c894e06b5400d63c1e5c8ed8b1df0313bc7c23" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;-1&lt;/code&gt;. Index of file to open first if multiple files match &lt;code&gt;file_pattern&lt;/code&gt;. See the documentation for &lt;code&gt;Restore&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f89a2af78cf6499e91aa92e8755ea43f863d4d9d" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;-1&lt;/code&gt;. Length of audio requested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cc1f1b592948e2415264332848fa8612f4bdf9d" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;-1&lt;/code&gt;. Number of sample channels wanted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4932191f18786316171e2792ceb8409c280ff92d" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;-1&lt;/code&gt;. Only log &lt;code&gt;first_n&lt;/code&gt; number of times. -1 disables logging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c1fb6e2eaf6b55ba3d4b75fa1da18e2320bb070" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;-1&lt;/code&gt;. Optional. An integer identifier for the tensor being summarized by this op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3664a99dc7eb9a8d904bf038a9ca06fbc066fa0f" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;-1&lt;/code&gt;. Optional. Output slot index of the tensor that the debug op is concerned with. Used only for single-tensor trace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0962f2301dda8b6d00fdac74d834486cde5bed2" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;-1&lt;/code&gt;. Pad pre-decimal numbers to this width. Applies to both floating point and integer numbers. Only used if width &amp;gt; -1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4249193b21f1653ca0a86cdec57739e99473a5d1" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;-1&lt;/code&gt;. Tensor debug mode: the mode in which the input tensor is summarized by the op. See the TensorDebugMode enum in tensorflow/core/protobuf/debug_event.proto for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e79a4970b04e2bf922bb47046c852baf2c287b" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;-1&lt;/code&gt;. TensorDebugMode enum value. See debug_event.proto for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75af7fab20ebf746be8b8c7064abc17be0d0d144" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;-1&lt;/code&gt;. The TPU device to use. Should be &amp;gt;= 0 and less than the number of TPU cores in the task on which the node is placed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="555a16b5a1eaffe960c466c013d18e6b430a1019" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;-1&lt;/code&gt;. The TPU device to use. This should be -1 when the Op is running on a TPU device and = 0 when the Op is running on the CPU device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="073de13b385c86f34ded87bad9736c8d9acf7f6e" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;-1&lt;/code&gt;. The TPU device to use. This should be -1 when the Op is running on a TPU device, and &amp;gt;= 0 when the Op is running on the CPU device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12984bc39047784b0643ded3aa8e1c9886a3fe5c" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;-1&lt;/code&gt;. The axis to fill (default: -1, a new inner-most axis).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df447daa2049685d82888cda66996c88f6e30e63" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;-1&lt;/code&gt;. The capacity of the barrier. The default capacity is MAX_INT32, which is the largest capacity of the underlying queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2629bf4830d255eaad87b2cfbc23701eebe5b22" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;-1&lt;/code&gt;. The maximum number of rows to load from the checkpoint at once. If less than or equal to 0, the entire matrix will be loaded into memory. Setting this arg trades increased disk reads for lower memory usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="606b001c19e16b80f340b4901b7f4b68dce6f9f9" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;-1&lt;/code&gt;. The post-decimal precision to use for floating point numbers. Only used if precision &amp;gt; -1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53176f6ae771e4ace2d009271139417a6f35880c" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;-1&lt;/code&gt;. The upper bound on the number of elements in this queue. Negative numbers mean no limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6c40e3cf9c664741a8651a6b610401360b45bd1" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d0b342a6a9fae0a11b72f3a9c6c9a2cbd6b822b" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;. A second seed to avoid seed collision.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a045bec7259efb1c79f059ab9f6276ff984f08d9" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;. An second seed to avoid seed collision.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcdcd4aef4617c42e12aac7d2514b4230b16b1c0" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;. Dequeue will block unless there would be this many elements after the dequeue or the queue is closed. This ensures a minimum level of mixing of elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44ce896e2cdbda83722eb2721510212c045d2a92" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;. Dimension along which to pack. Negative values wrap around, so the valid range is &lt;code&gt;[-(R+1), R+1)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e645371cd4b99f8ae1bcdb4823212e737ac68967" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;. Dimension along which to unpack. Negative values wrap around, so the valid range is &lt;code&gt;[-R, R)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de6dd97bc1791ccbfc7bcc678edc720d52ebeb16" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;. If &lt;code&gt;seed&lt;/code&gt; is set to non-zero, the random number generator is seeded by the given &lt;code&gt;seed&lt;/code&gt;. Otherwise, it is seeded by a random seed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d48b1b6ca412944fd85aa17d80f301aa46d1a22a" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;. If either &lt;code&gt;seed&lt;/code&gt; or &lt;code&gt;seed2&lt;/code&gt; are set to be non-zero, the random number generator is seeded by the given seed. Otherwise, it is seeded by a random seed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2cba010f966809721583392f40a94eae401d6ca" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;. If either &lt;code&gt;seed&lt;/code&gt; or &lt;code&gt;seed2&lt;/code&gt; are set to non-zero, the random number generator is seeded by the given &lt;code&gt;seed&lt;/code&gt;. Otherwise, it is seeded by a random seed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6de3bd7c9b9f1c83561c17b98eaa368cc7d0fae6" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;. If either seed or seed2 are set to be non-zero, the random number generator is seeded by the given seed. Otherwise, it is seeded by a random seed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a443df04378e5669da045970386843a7b68859bf" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;. If either seed or seed2 is set to be non-zero, the internal random number generator is seeded by the given seed. Otherwise, a random seed is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87e9551a7f0ccac5e9743538b5bd1366384ceb15" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;. If either seed or seed2 is set to be non-zero, the random number generator is seeded by the given seed. Otherwise, a random seed is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="712630051945de1e75231aeb6658fd067e3e4314" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;. If set to be non-zero, the random number generator is seeded by the given seed. Otherwise it is seeded by a random seed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49f992d773d95eaccf1a98c74ad26c9540186ed6" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;. Number of bytes in the footer, defaults to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fa78d3f4cca9d675ad768d3e77de82baa7ce1b7" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;. Number of bytes in the header, defaults to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="692704bcf01833ae80150420422aa59be71125a1" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;. Number of bytes to hop before each read. Default of 0 means using record_bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d0619666f4da31fd5c1d8c22acf0a9876bd51c8" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;. Number of color channels for the decoded image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7851af1bc05c27f9f788d904baeba230899b1a1" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;. Number of lines to skip from the beginning of every file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f20d82f00f3e41e30cb928b939e51a40817009f3" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;. Optionally some reserved IDs can be added in the range [0, ..., num_reserved_ids) by the users. One use case is that a special unknown word token is used as ID 0. These IDs will have a sampling probability of 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27cedaab741024d6d81a6a4e4834be64e02b0174" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;. The dimension along which reversal is performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7918c0bd7d0932348e39278e78d3cf4de7236f70" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;. a bitmask where a bit i being 1 means to ignore the begin value and instead use the largest interval possible. At runtime begin[i] will be replaced with &lt;code&gt;[0, n-1)&lt;/code&gt; if &lt;code&gt;stride[i] &amp;gt; 0&lt;/code&gt; or &lt;code&gt;[-1, n-1]&lt;/code&gt; if &lt;code&gt;stride[i] &amp;lt; 0&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="956f1c58c68a76bf26f40abbee2a1e7b4da8d147" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;. a bitmask where bit &lt;code&gt;i&lt;/code&gt; being 1 means the &lt;code&gt;i&lt;/code&gt;th position is actually an ellipsis. One bit at most can be 1. If &lt;code&gt;ellipsis_mask == 0&lt;/code&gt;, then an implicit ellipsis mask of &lt;code&gt;1 &amp;lt;&amp;lt; (m+1)&lt;/code&gt; is provided. This means that &lt;code&gt;foo[3:5] == foo[3:5, ...]&lt;/code&gt;. An ellipsis implicitly creates as many range specifications as necessary to fully specify the sliced range for every dimension. For example for a 4-dimensional tensor &lt;code&gt;foo&lt;/code&gt; the slice &lt;code&gt;foo[2, ..., 5:8]&lt;/code&gt; implies &lt;code&gt;foo[2, :, :, 5:8]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30e2150460670f687ecc269b6bb495ff806660c3" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;. a bitmask where bit &lt;code&gt;i&lt;/code&gt; being 1 means the &lt;code&gt;i&lt;/code&gt;th specification creates a new shape 1 dimension. For example &lt;code&gt;foo[:4, tf.newaxis, :2]&lt;/code&gt; would produce a shape &lt;code&gt;(4, 1, 2)&lt;/code&gt; tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="806a655816b038a2afdf6b6d0af4088331e9916a" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;. a bitmask where bit &lt;code&gt;i&lt;/code&gt; implies that the &lt;code&gt;i&lt;/code&gt;th specification should shrink the dimensionality. begin and end must imply a slice of size 1 in the dimension. For example in python one might do &lt;code&gt;foo[:, 3, :]&lt;/code&gt; which would result in &lt;code&gt;shrink_axis_mask&lt;/code&gt; being 2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9aac3db8624187c1efcffee7b02f8bdbb12ee06" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;. analogous to &lt;code&gt;begin_mask&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="586a41be8b133bdcebc421d221ba78e211a910f6" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;10000&lt;/code&gt;. The randomization shuffling buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dacf088e4606f34a60f4f3ab6dd37d3b31da0d2b" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;1000&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a51462f226f88dbc0f2ea32c07d93a6e2ca28c57" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;100&lt;/code&gt;. Number of attempts at generating a cropped region of the image of the specified constraints. After &lt;code&gt;max_attempts&lt;/code&gt; failures, return the entire image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8fb0ed7fbc0c8afc37432ccbd407bdeac197b5a" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;10737418240&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7b69a2f0d326d373d57d2c1d340547bd39471f3" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;1099511627776&lt;/code&gt;. int; The maximum number of data points that can be fed to the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08d073ee72ef065205bd027d3986de8f6f4de16b" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;10&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c9348446cc0d8f9aa2d031282ae67ca361f9eb5" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;10&lt;/code&gt;. The number of iterations allowed to run in parallel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0539a4214fb733d1c51c5ab0de45cf48c5cbf1ba" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;131072&lt;/code&gt;. The initial number of hash table buckets. Must be a power to 2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2fd50bd007fded25e14878df9d4208670854e84" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;13&lt;/code&gt;. How many output channels to produce per time slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b07fa165987fa30f61f171450ce289817287fdd9" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;16&lt;/code&gt;. How many sstables are opened and concurrently iterated over.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ddd37e940f1bf99963c1a5c853c63e3fd8bf902" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95574e61c002add424bd1fae32b60b60acd15a16" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;1&lt;/code&gt;. Downscaling ratio.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4feb771aee8a48b6ac7d4022cf9a06498dfce29" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;1&lt;/code&gt;. Number of cores per replica. Used for model parallelism.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d669403666db7fc41e88cb55cf02d6f12bc623b4" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;1&lt;/code&gt;. The maximum degree of parallelism to use within operations that execute on this threadpool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a51f5c96076c4ec29aa1a42102fa07085740cfa9" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;1&lt;/code&gt;. scalar, dimension of the logits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27dcb2cf9d0a255cc610df6e5085c3ae12229a32" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;300&lt;/code&gt;. An integer. Maximum number of rois in the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fa7098d7b4c09c47511eefd52746e810ed34068" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;300&lt;/code&gt;. Horizontal pixels per density unit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7ac84ce6951610ca53ca5a2027a1084a82e29ea" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;300&lt;/code&gt;. Vertical pixels per density unit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdecd5cfe01361b9be3f0de42714eae1c7d0cd11" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;301&lt;/code&gt;. Random seeds used to produce randomized records.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94413459838fea0fd4f5bb712944fa9be8d7e67b" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;32&lt;/code&gt;. The batch size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6cc4bb50a5b64c3cb0e634810c37ba147383cab" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;3&lt;/code&gt;. Only print this many entries of each tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae879b163ac02cf3f34667b3a0bf52fc27034e28" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;3&lt;/code&gt;. Print this many entries of each tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1eabe2b7a7bc3fae0b689920361fbd953ab9d5c" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;3&lt;/code&gt;. When formatting the tensor summaries print the first and last summarize entries of each tensor dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93cc2ccfba92a3f4c20ebb6243954414615c66cd" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;3&lt;/code&gt;. When formatting the tensors, show the first and last &lt;code&gt;summarize&lt;/code&gt; entries of each tensor dimension (recursively). If set to -1, all elements of the tensor will be shown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad032d00e82f433fb06df7b7bac6a6cab76aff27" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;40&lt;/code&gt;. Resolution of the Mel bank used internally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1840fab1ef6902fa69e91bdeb387113bb4d01b9c" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;5&lt;/code&gt;. 0-D. Half-width of the 1-D normalization window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2f5f82bb63c6b0bb6ccb9f34ae1e1254d0369aa" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;5&lt;/code&gt;. A depth radius.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2397c0770b5fa271caef5e78d55f7d6c1dadee64" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;65533&lt;/code&gt;. The replacement character codepoint to be used in place of any invalid formatting in the input when &lt;code&gt;errors='replace'&lt;/code&gt;. Any valid unicode codepoint may be used. The default value is the default unicode replacement character is 0xFFFD (U+65533).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="939bc2aab65802b126f1e0ac4a0ff9a832415d2f" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;65533&lt;/code&gt;. The replacement character codepoint to be used in place of any invalid formatting in the input when &lt;code&gt;errors='replace'&lt;/code&gt;. Any valid unicode codepoint may be used. The default value is the default unicode replacement character is 0xFFFD or U+65533.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e26a6ad301b125188e5169334242364f18bcf8b" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;86400&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09e52f8b6296bbc76ab9766a7ada559556c25092" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;8&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e8e273b11d4b6ecc5f3613b17d9b089b757e088" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;8&lt;/code&gt;. The bitwidth of the quantization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdacf3c72eb005d881c42dd625aea94a64a1ef0d" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;8&lt;/code&gt;. The bitwidth of the quantization; between 2 and 16, inclusive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e5b1685ee0db1a5651847740d8fd5e13ae8db3e" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;8&lt;/code&gt;. The bitwidth of the quantization; between 2 and 8, inclusive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5444f2a86a077eaa3db71e55f472830b4341ffa8" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Defaults to &lt;code&gt;95&lt;/code&gt;. Quality of the compression from 0 to 100 (higher is better and slower).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75efa6ed13742130cd91cce314775db272c0112d" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Deprecated; use &lt;code&gt;fractional_avg_pool_v2&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7393a8d9aeaf18e4e4b89355cb028d7b590ea72a" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;int&lt;/code&gt;. Deprecated; use &lt;code&gt;fractional_max_pool_v2&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a72ad3b2717ca31ce2785c2302bd131fc07958d0" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt; from &lt;code&gt;&quot;NWC&quot;, &quot;NCW&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;NWC&quot;&lt;/code&gt;, the data is stored in the order of &lt;code&gt;batch_shape + [in_width, in_channels]&lt;/code&gt;. The &lt;code&gt;&quot;NCW&quot;&lt;/code&gt; format stores data as &lt;code&gt;batch_shape + [in_channels, in_width]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="085352856f5f2dd5cacd96b383d7610c4dbdaeeb" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;&quot;, &quot;grayscale&quot;, &quot;rgb&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. Per pixel image format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aaaf4288c51a02a0bbe6d8bba5cd2f13818a6ef" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;BYTE&quot;, &quot;UTF8_CHAR&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;BYTE&quot;&lt;/code&gt;. The unit that is counted to compute string length. One of: &lt;code&gt;&quot;BYTE&quot;&lt;/code&gt; (for the number of bytes in each string) or &lt;code&gt;&quot;UTF8_CHAR&quot;&lt;/code&gt; (for the number of UTF-8 encoded Unicode code points in each string). Results are undefined if &lt;code&gt;unit=UTF8_CHAR&lt;/code&gt; and the &lt;code&gt;input&lt;/code&gt; strings do not contain structurally valid UTF-8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b166a25bbe0d5b3fe83cad004174ed49a8792b39" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;BYTE&quot;, &quot;UTF8_CHAR&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;BYTE&quot;&lt;/code&gt;. The unit that is used to create the substring. One of: &lt;code&gt;&quot;BYTE&quot;&lt;/code&gt; (for defining position and length by bytes) or &lt;code&gt;&quot;UTF8_CHAR&quot;&lt;/code&gt; (for the UTF-8 encoded Unicode code points). The default is &lt;code&gt;&quot;BYTE&quot;&lt;/code&gt;. Results are undefined if &lt;code&gt;unit=UTF8_CHAR&lt;/code&gt; and the &lt;code&gt;input&lt;/code&gt; strings do not contain structurally valid UTF-8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9841447aa0eedd8c2c4941ff46683ca79bd756b8" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;HALF_AWAY_FROM_ZERO&quot;, &quot;HALF_TO_EVEN&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;HALF_AWAY_FROM_ZERO&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ac2ba19cf4c64532b25a6c4d36996f6b2cc5f89" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;HALF_TO_EVEN&quot;, &quot;HALF_UP&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;HALF_TO_EVEN&quot;&lt;/code&gt;. The 'round_mode' attribute controls which rounding tie-breaking algorithm is used when rounding float values to their quantized equivalents. The following rounding modes are currently supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1ab4130bfcfbadfba0a5534b097556f3c67581c" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;LEFT_RIGHT&quot;, &quot;RIGHT_LEFT&quot;, &quot;LEFT_LEFT&quot;, &quot;RIGHT_RIGHT&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;RIGHT_LEFT&quot;&lt;/code&gt;. Some diagonals are shorter than &lt;code&gt;max_diag_len&lt;/code&gt; and need to be padded. &lt;code&gt;align&lt;/code&gt; is a string specifying how superdiagonals and subdiagonals should be aligned, respectively. There are four possible alignments: &quot;RIGHT_LEFT&quot; (default), &quot;LEFT_RIGHT&quot;, &quot;LEFT_LEFT&quot;, and &quot;RIGHT_RIGHT&quot;. &quot;RIGHT_LEFT&quot; aligns superdiagonals to the right (left-pads the row) and subdiagonals to the left (right-pads the row). It is the packing format LAPACK uses. cuSPARSE uses &quot;LEFT_RIGHT&quot;, which is the opposite alignment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f7fab8ed8d995e3491151b306e9a31a8a619eaa" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;MEAN&quot;, &quot;SUM&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;MEAN&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11766fd535d660e9e39f3553a7c7bd1513d2b373" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;MIN_COMBINED&quot;, &quot;MIN_FIRST&quot;, &quot;SCALED&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;MIN_COMBINED&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3392bb5619ff6cbb01824c91303c9cf778f38d3c" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;MIN_FIRST&quot;, &quot;SCALED&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;MIN_FIRST&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f8cbdba2cdbf9fa426005e20592ea8a7a306d9c" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;NDHWC&quot;, &quot;NCDHW&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;NDHWC&quot;&lt;/code&gt;. The data format of the input and output data. With the default format &quot;NDHWC&quot;, the data is stored in the order of: [batch, in_depth, in_height, in_width, in_channels]. Alternatively, the format could be &quot;NCDHW&quot;, the data storage order is: [batch, in_channels, in_depth, in_height, in_width].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49aa9ba9cdfc1108cc80455df84166c05f4d8cd9" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;NHWC&quot;, &quot;NCHW&quot;, &quot;NCHW_VECT_C&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;NHWC&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ffc1c23b63aff5bf21b31068d81411075de13a" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;NHWC&quot;, &quot;NCHW&quot;, &quot;NCHW_VECT_C&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;NHWC&quot;&lt;/code&gt;. Specify the data format of the input and output data. With the default format &quot;NHWC&quot;, the data is stored in the order of: [batch, in_height, in_width, in_channels]. Alternatively, the format could be &quot;NCHW&quot;, the data storage order of: [batch, in_channels, in_height, in_width].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="accc2996ef55639a0603f73553626a0487ca956c" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;NHWC&quot;, &quot;NCHW&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;NHWC&quot;&lt;/code&gt;. Specify the data format of the input and output data. With the default format &quot;NHWC&quot;, the bias tensor will be added to the last dimension of the value tensor. Alternatively, the format could be &quot;NCHW&quot;, the data storage order of: [batch, in_channels, in_height, in_width]. The tensor will be added to &quot;in_channels&quot;, the third-to-the-last dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46d20da5ffd3dd7fea0433fddffa03829103e456" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;NHWC&quot;, &quot;NCHW&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;NHWC&quot;&lt;/code&gt;. Specify the data format of the input and output data. With the default format &quot;NHWC&quot;, the data is stored in the order of: &lt;code&gt;batch_shape + [height, width, channels]&lt;/code&gt;. Alternatively, the format could be &quot;NCHW&quot;, the data storage order of: &lt;code&gt;batch_shape + [channels, height, width]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9e0dcc290f81fdd8c76fc89243b09ce2ce1b846" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;NHWC&quot;, &quot;NCHW&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;NHWC&quot;&lt;/code&gt;. Specify the data format of the input and output data. With the default format &quot;NHWC&quot;, the data is stored in the order of: [batch, height, width, channels]. Alternatively, the format could be &quot;NCHW&quot;, the data storage order of: [batch, channels, height, width].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b92b30cbd769ab535dc621e3a32ccec0ed76ab89" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;NHWC&quot;, &quot;NCHW&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;NHWC&quot;&lt;/code&gt;. Specify the data format of the input and output data. With the default format &quot;NHWC&quot;, the data is stored in the order of: [batch, in_height, in_width, in_channels]. Alternatively, the format could be &quot;NCHW&quot;, the data storage order of: [batch, in_channels, in_height, in_width].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdfbe53c742e35b1dd90a04875c4a1c69311cadf" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;NHWC&quot;, &quot;NCHW&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;NHWC&quot;&lt;/code&gt;. The data format for x and y. Either &quot;NHWC&quot; (default) or &quot;NCHW&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aedafb232d0f05af2eefc8d016896f5c53c4b6e5" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;NHWC&quot;, &quot;NCHW&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;NHWC&quot;&lt;/code&gt;. The data format for y_backprop, x, x_backprop. Either &quot;NHWC&quot; (default) or &quot;NCHW&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee4871c057dc4a2d1c529130403faf3f381f306" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;bilinear&quot;, &quot;nearest&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;bilinear&quot;&lt;/code&gt;. A string specifying the sampling method for resizing. It can be either &lt;code&gt;&quot;bilinear&quot;&lt;/code&gt; or &lt;code&gt;&quot;nearest&quot;&lt;/code&gt; and default to &lt;code&gt;&quot;bilinear&quot;&lt;/code&gt;. Currently two sampling methods are supported: Bilinear and Nearest Neighbor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="858821bbaea6874ff5321971f66b5a97014ced8d" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;ignore&quot;, &quot;replace&quot;, &quot;strict&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;replace&quot;&lt;/code&gt;. Error handling policy when there is invalid formatting found in the input. The value of 'strict' will cause the operation to produce a InvalidArgument error on any invalid input formatting. A value of 'replace' (the default) will cause the operation to replace any invalid formatting in the input with the &lt;code&gt;replacement_char&lt;/code&gt; codepoint. A value of 'ignore' will cause the operation to skip any invalid formatting in the input and produce no corresponding output character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a19e97014071c6fa74417cdc6223ecd72f319954" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;in&quot;, &quot;cm&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;in&quot;&lt;/code&gt;. Unit used to specify &lt;code&gt;x_density&lt;/code&gt; and &lt;code&gt;y_density&lt;/code&gt;: pixels per inch (&lt;code&gt;'in'&lt;/code&gt;) or centimeter (&lt;code&gt;'cm'&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="981aba8cabc9601a96727536cf265c2d0808e37d" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;inequality&quot;, &quot;equality&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;inequality&quot;&lt;/code&gt;. A string indicating if this Op should perform inequality split or equality split.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a15ec6aa3b42ec467ea1e13a4c7b848b8776aaa0" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;inequality&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;inequality&quot;&lt;/code&gt;. A string indicating if this Op should perform inequality split or equality split.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9b6f16241cfa375dd5246cbb60ae8c99902a6b6" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;linear_input&quot;, &quot;skip_input&quot;, &quot;auto_select&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;linear_input&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87e36a2178c4631094782075c388ce8641748235" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;rnn_relu&quot;, &quot;rnn_tanh&quot;, &quot;lstm&quot;, &quot;gru&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;lstm&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df13a7d0dba570d23ca9367a301458db3b9b5b70" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;strict&quot;, &quot;replace&quot;, &quot;ignore&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;replace&quot;&lt;/code&gt;. Error handling policy when there is invalid formatting found in the input. The value of 'strict' will cause the operation to produce a InvalidArgument error on any invalid input formatting. A value of 'replace' (the default) will cause the operation to replace any invalid formatting in the input with the &lt;code&gt;replacement_char&lt;/code&gt; codepoint. A value of 'ignore' will cause the operation to skip any invalid formatting in the input and produce no corresponding output character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48d77b732035c9afd5e92a2bf15a9efc728a5cda" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;unidirectional&quot;, &quot;bidirectional&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;unidirectional&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1084bea9348ab509d377b2ab4008ca930074f5b" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;, must be set to &lt;code&gt;&quot;NHWC&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;NHWC&quot;&lt;/code&gt;. Specify the data format of the input and output data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcd1ee02cb8cef0186533016b9fe2df13ca3dc18" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d7ffb2004062566cf558aa5e8a69406e759f76b" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. A json-encoded SummaryDescription proto.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3adc2e0e85dca623c290ca5a9352ffcaf66058cf" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. A scalar containing either (i) the empty string (no compression), (ii) &quot;ZLIB&quot;, or (iii) &quot;GZIP&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7ce4db6540a64b972b9f2028e5c3363107d9ce7" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. A string which is the message associated with the exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18c20ed6e5f90824b2acf9c0ed7da138963ff1cd" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. A string, prefix of the error message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dbcc930a59ff2ec75668b655a6cb2325c81a0b6" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. A tfdbg-generated ID for the context that the op belongs to, e.g., a concrete compiled tf.function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33755d1b79117480f416c342fe4da1459df51b61" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. Additional string to recognize as NA/NaN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ddcbc141d5af9d90db332a475d5d0b623fd2f26" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. An unused string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8c40fb29386040b2155f86de3dbcfdc8dcf535b" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. Each valid line in this file (which should have a CSV-like format) corresponds to a valid word ID. IDs are in sequential order, starting from num_reserved_ids. The last entry in each line is expected to be a value corresponding to the count or relative probability. Exactly one of vocab_file and unigrams needs to be passed to this op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1cad5a409ae33d575647d05e8f28d3a675095d8" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. If non-empty, this accumulator is placed in the given container. Otherwise, a default container is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e027d486531b0ad8589c268e8d7312f36bb8484" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. If non-empty, this accumulator will be shared under the given name across multiple sessions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1ccb70ee345a463411ab94095b3216e1f14cef4" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. If non-empty, this barrier is placed in the given container. Otherwise, a default container is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6941addf0bf0b8e9baf7094aff86a8d745024568" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. If non-empty, this barrier will be shared under the given name across multiple sessions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f112680d4f1ec77088353a7a8ebd787be3ea43eb" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. If non-empty, this queue is placed in the given container. Otherwise, a default container is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f0792cd18624f3fa702d0177c366246eb582ef8" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. If non-empty, this queue will be shared under the given name across multiple sessions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb914ee5a5bf20a21c5133d8a808d459700eeae6" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. If non-empty, this reader is named in the given bucket with this shared_name. Otherwise, the node name is used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20e2949b2e41bd0d812508f6aca112900560362a" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. If non-empty, this reader is placed in the given container. Otherwise, a default container is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a1e543431c824444ab7498aa2b728d324280903" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. If non-empty, this table is placed in the given container. Otherwise, a default container is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="850c4dccd66221b16ba842bdd158fbd72f8a52e0" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. If non-empty, this table is shared under the given name across multiple sessions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5406259438338eb095131b933f1c7cc9e8378c86" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. If non-empty, this variable is named in the given bucket with this shared_name. Otherwise, the node name is used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1437ae789b03da45ae0b7ccbccd6ab2a348fd885" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. If non-empty, this variable is placed in the given container. Otherwise, a default container is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4986046de20711547ebf87d91a54b341df3281c7" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. If not empty, embed this XMP metadata in the image header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e30dcc7249e7926c20b885f51d3d23303edeaa44" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. It is necessary to match this name to the matching Unstage Op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2750a5378172d1825eb34cd1eb5bc3f5db9ab104" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. Name of the device on which the tensor resides.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="249b2dc1bac661a94947136a9e646e7c1dc2f79c" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. Name of the input tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe6a4cbac116157b1210c20827e00439ec17d65" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. Optional. Name of the op that the debug op is concerned with. Used only for single-tensor trace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb5179c7efe6398270bd9faeb5766ec56187ebdd" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. Overrides the name used for the temporary stack resource. Default value is the name of the 'Stack' op (which is guaranteed unique).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44ebb13b22f70faa985d3721fbaf76a2b4077910" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. Overrides the name used for the temporary tensor_array resource. Default value is the name of the 'TensorArray' op (which is guaranteed unique).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75c1444a0154a1cb8bb19620817306f8f5b879a7" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. Overrides the name used for the temporary variable resource. Default value is the name of the 'TemporaryVariable' op (which is guaranteed unique).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c50cd2f26d942eab3c136152dfe519bb55c06e9a" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. Reserved. Do not use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca85fa4757594eb0353f90e82fa4db0b5caabdec" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. Serialized tensorflow.tpu.TPUEmbeddingConfiguration that describes the embedding lookups of the program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d37b74ea4272b8c7345141c39f89a6e1e5c2cea7" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. The container name for the &lt;code&gt;SparseTensorsMap&lt;/code&gt; created by this op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6637ffb8ce9b5ae49320762a9cb22e4f97b90fd" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. The container name for the &lt;code&gt;SparseTensorsMap&lt;/code&gt; read by this op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1993a0e003c39a26a9e615cedeea0c96e1ba4ca7" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. The name of the input tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f304309ebb35663113a4a944d71ab8c89ad783b" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. The separator to use when joining.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ae7013fe6147581a15759fe264844c6654d3912" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. The shared name for the &lt;code&gt;SparseTensorsMap&lt;/code&gt; created by this op. If blank, the new Operation's unique name is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcc648eed94eb5f3ee168048d164e91bf43e66ab" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. The shared name for the &lt;code&gt;SparseTensorsMap&lt;/code&gt; read by this op. It should not be blank; rather the &lt;code&gt;shared_name&lt;/code&gt; or unique Operation name of the Op that created the original &lt;code&gt;SparseTensorsMap&lt;/code&gt; should be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdc629b937db77c7b3b6cd24ebb3a6c5f72cabf0" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. The type of compression for the file. Currently ZLIB and GZIP are supported. Defaults to none.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="436baae16ba8e50642af7f78fcf9efe0c26b25e7" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. The type of compression to be applied to the saved snapshot files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fa0f13c012edf4d8b69777af2e550953016a615" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. The type of encoding for the file. Currently ZLIB and GZIP are supported. Defaults to none.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e1fc9402e005203c39b4c50ed160ea5847130a8" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. The value to pad if width &amp;gt; -1. If empty, pads with spaces. Another typical value is '0'. String cannot be longer than 1 character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24313f984d9ed28fef38e2affcb9674f48d233a2" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. TopologyProto indicating the topology of the TPU pod slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ddb95f54d2fc93ef421e58676f39d2045ff4045" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. Will be printed in the error when anyone tries to differentiate this operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c7ef2d5a46cdeb76212093cbb7fccb6b4367e30" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. string specifying a hint about the algorithm used for decompression. Defaults to &quot;&quot; which maps to a system-specific default. Currently valid values are [&quot;INTEGER_FAST&quot;, &quot;INTEGER_ACCURATE&quot;]. The hint may be ignored (e.g., the internal jpeg library changes to a version that does not have that specific option.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="975323d47d4db1f96aa86285acada08a9c6fb2d5" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. string, an optional join separator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9a43302c4cdb531bd3c958fc5322c7bebfbe3b1" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. the container this variable is placed in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eeed468c61e559921f12ea65f99a6a2f8172b60" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;. the name by which this variable is referred to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc7019ff209bafddb73295ad3f8c51cb1ec19b19" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;%s&quot;&lt;/code&gt;. A string, at each placeholder in the template a subsequent tensor summary will be inserted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c540f8774f362508eca394222b1226affbd6b4e" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;%s&quot;&lt;/code&gt;. A string, the template to format tensor summaries into.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f57c6f0ab3728c2644ea5c36af80b00dec59b91" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;,&quot;&lt;/code&gt;. Char delimiter to separate fields in a record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17990308e47f3dfac46656dd56873fcc40bbdd46" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;,&quot;&lt;/code&gt;. char delimiter to separate fields in a record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eb93d0f5382d75163c4c528e24dfa6964d46287" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;CONSTANT&quot;&lt;/code&gt;. Fill mode, &quot;REFLECT&quot;, &quot;WRAP&quot;, or &quot;CONSTANT&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59ef75a94dc245cdc7fa123d5cdc27e51cdf399f" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;NCHW&quot;&lt;/code&gt;. destination data format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a0b1c75ae5db631f5d1b48281593e53d7a523ed" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;NHWC&quot;&lt;/code&gt;. source data format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61faa05264c8244f125143889def72cc3311493c" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;STEP_MARK_AT_ENTRY&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd4c3aed9318b4db6870e436199f2ba9bb3c0a26" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;\n&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a282a725875d023fb8e10231b4e8d213361d5bc" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;\t&quot;&lt;/code&gt;. Delimiter to separate fields in a line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ede39434940c753b528691a5f975161523dd7bba" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;auto&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f53a2dcfb534aef8eb1a53f3874a142ca12e4bea" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;binary&quot;&lt;/code&gt;. Either &lt;code&gt;binary&lt;/code&gt; or &lt;code&gt;text&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="238715aadfdaa6bbd5c5304be7c084aeaca338f1" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;default&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aeb3c89c4e2ffb6e27c0ab2f1d4a4268c061463" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;default&quot;&lt;/code&gt;. A string indicating the op-level determinism to use. Deterministic controls whether the dataset is allowed to return elements out of order if the next element to be returned isn't available, but a later element is. Options are &quot;true&quot;, &quot;false&quot;, and &quot;default&quot;. &quot;default&quot; indicates that determinism should be decided by the &lt;code&gt;experimental_deterministic&lt;/code&gt; parameter of &lt;a href=&quot;../data/options&quot;&gt;&lt;code&gt;tf.data.Options&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b7034d25b5053ac92e60bbed07bd371b413b75e" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;default&quot;&lt;/code&gt;. A string indicating the op-level determinism to use. Deterministic controls whether the interleave is allowed to return elements out of order if the next element to be returned isn't available, but a later element is. Options are &quot;true&quot;, &quot;false&quot;, and &quot;default&quot;. &quot;default&quot; indicates that determinism should be decided by the &lt;code&gt;experimental_deterministic&lt;/code&gt; parameter of &lt;a href=&quot;../data/options&quot;&gt;&lt;code&gt;tf.data.Options&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bd3fe9e15d2399759774d8c88576447d44a0f53" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;lanczos3&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48dadf4b49f75afa0222885fab43f97aca3537d9" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;local://&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb70e2761d53472d119cc2026bcde5cbe2027d41" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;local://&quot;&lt;/code&gt;. Either the special value &lt;code&gt;local://&lt;/code&gt; or a path to a file containing a serialized &lt;code&gt;FileDescriptorSet&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0e94e88051588ffbab54e0b96a4cdf9d5a12061" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;stderr&quot;&lt;/code&gt;. A string specifying the output stream or logging level to print to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df485acd24d81d07a5c6a5e77ee1d3d134e27052" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;&quot;uniform&quot;&lt;/code&gt;. indicates if the noise should &lt;code&gt;uniform&lt;/code&gt;, &lt;code&gt;gaussian&lt;/code&gt;, or &lt;code&gt;zero&lt;/code&gt;. The default is &lt;code&gt;uniform&lt;/code&gt; which means the the noise type will be decided by &lt;code&gt;uniform_noise&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1f029e5acd7c5e870c687f47f5d2ab6931ff3f9" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;uniform&lt;/code&gt;. indicates if the noise should be &lt;code&gt;uniform&lt;/code&gt; (uniform distribution), &lt;code&gt;gaussian&lt;/code&gt; (gaussian distribution), or &lt;code&gt;zero&lt;/code&gt; (zero padding).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e840e8a934283df662d0807dc06371b0d1aa8422" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;string&lt;/code&gt;. Defaults to &lt;code&gt;{}&lt;/code&gt;. At each placeholder occurring in the template, a subsequent tensor will be inserted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92adcdd377fe13a2912f6a9879ae27b4277b361c" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;tf.TensorProto&lt;/code&gt;. Defaults to &lt;code&gt;dtype: DT_UINT8 tensor_shape { dim { size: 4 } } int_val: 255 int_val: 0 int_val: 0 int_val: 255&lt;/code&gt;. Color to use for pixels with non-finite values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e230f9ca2d4bd7cfe15a0ffc2a4dd4109455ac4d" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;tf.contrib.distribute.DistributeConfig&lt;/code&gt; object specifying DistributionStrategy-related configuration. The &lt;code&gt;train_distribute&lt;/code&gt; and &lt;code&gt;eval_distribute&lt;/code&gt; can be passed as parameters to &lt;code&gt;RunConfig&lt;/code&gt; or set in &lt;code&gt;experimental_distribute&lt;/code&gt; but not both.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9690d1381a7d1f4d6e7f68e3fd9e59f4979701a6" translate="yes" xml:space="preserve">
          <source>An optional argument which specifies the protocol used when starting server. &lt;code&gt;None&lt;/code&gt; means default to grpc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17d8bc9cc607f720fcb74ef4501f800c5b9f7ec9" translate="yes" xml:space="preserve">
          <source>An optional bool. Defaults to &lt;code&gt;True&lt;/code&gt;. If false, treats double quotation marks as regular characters inside of the string fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b99f6f8cf06413562767b067e9e64ecdc58959d" translate="yes" xml:space="preserve">
          <source>An optional boolean. The argument is only effective when &lt;code&gt;checkpoint_interval&lt;/code&gt; is passed into the manager. If &lt;code&gt;True&lt;/code&gt;, the manager will only save the checkpoint if the interval between checkpoints is larger than &lt;code&gt;checkpoint_interval&lt;/code&gt;. Otherwise it will always save the checkpoint unless a checkpoint has already been saved for the current step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49831b4fee024e37e182184af8ef3cdace91bf62" translate="yes" xml:space="preserve">
          <source>An optional config_pb2.ConfigProto to use to configure the session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29bb12433b928ab0be0678fdec78374ee31c2d56" translate="yes" xml:space="preserve">
          <source>An optional dict specifying how to populate the assets.extra directory within the exported SavedModel. Each key should give the destination path (including the filename) relative to the assets.extra directory. The corresponding value gives the full path of the source file to be copied. For example, the simple case of copying a single file without renaming it is specified as &lt;code&gt;{'my_asset_file.txt': '/path/to/my_asset_file.txt'}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7717b07f025ae301a9af5258d74e2df00644217b" translate="yes" xml:space="preserve">
          <source>An optional instance of &lt;a href=&quot;../distribute/strategy&quot;&gt;&lt;code&gt;tf.distribute.Strategy&lt;/code&gt;&lt;/a&gt;. If specified, then Estimator will distribute the user's model during evaluation, according to the policy specified by that strategy. Setting &lt;code&gt;experimental_distribute.eval_distribute&lt;/code&gt; is preferred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feb68644f50d559749116afa1e33242f4271156a" translate="yes" xml:space="preserve">
          <source>An optional instance of &lt;a href=&quot;../distribute/strategy&quot;&gt;&lt;code&gt;tf.distribute.Strategy&lt;/code&gt;&lt;/a&gt;. If specified, then Estimator will distribute the user's model during training, according to the policy specified by that strategy. Setting &lt;code&gt;experimental_distribute.train_distribute&lt;/code&gt; is preferred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cddd6a1239bd4bdd0d458661c58e6c3dce63eee" translate="yes" xml:space="preserve">
          <source>An optional instance of an optimizer parameters class, instance of one of &lt;a href=&quot;sgd&quot;&gt;&lt;code&gt;tf.tpu.experimental.embedding.SGD&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;adagrad&quot;&gt;&lt;code&gt;tf.tpu.experimental.embedding.Adagrad&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;adam&quot;&gt;&lt;code&gt;tf.tpu.experimental.embedding.Adam&lt;/code&gt;&lt;/a&gt;. It set will override the global optimizer passed to &lt;a href=&quot;tpuembedding&quot;&gt;&lt;code&gt;tf.tpu.experimental.embedding.TPUEmbedding&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="027e611394bb6b11ac999e6662f00b4cecb63838" translate="yes" xml:space="preserve">
          <source>An optional int. Defaults to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a23edfd47219d74ad68928330e137536e601f426" translate="yes" xml:space="preserve">
          <source>An optional int. Defaults to 0. Number of lines to skip from the beginning of every file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dbde287ad56cd1a1a031b8c1fe93861419f6e20" translate="yes" xml:space="preserve">
          <source>An optional int32 scalar. Indicates the size of the output &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4b1db41628d81db2c14dc3b6bd32bd0f9275094" translate="yes" xml:space="preserve">
          <source>An optional integer specifying the maximum time a worker should wait before starting. By default, workers are started at staggered times, with each worker being delayed by up to 60 seconds. This is intended to reduce the risk of divergence, which can occur when many workers simultaneously update the weights of a randomly initialized model. Users who warm-start their models and train them for short durations (a few minutes or less) should consider reducing this default to improve training times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90df1948fe10e3d87c2158997ebe3098be196727" translate="yes" xml:space="preserve">
          <source>An optional integer, or an integer-dtype &lt;code&gt;Variable&lt;/code&gt; or &lt;code&gt;Tensor&lt;/code&gt;, used to number the checkpoint. If &lt;code&gt;None&lt;/code&gt; (default), checkpoints are numbered using &lt;code&gt;checkpoint.save_counter&lt;/code&gt;. Even if &lt;code&gt;checkpoint_number&lt;/code&gt; is provided, &lt;code&gt;save_counter&lt;/code&gt; is still incremented. A user-provided &lt;code&gt;checkpoint_number&lt;/code&gt; is not incremented even if it is a &lt;code&gt;Variable&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e810e2d0cabddb80a5abfbf49a06cf44a243fa3" translate="yes" xml:space="preserve">
          <source>An optional keyword argument 'msg' can be provided when assertRaises is used as a context object.</source>
          <target state="translated">Se puede proporcionar un argumento opcional de palabra clave 'msg' cuando se utiliza assertRaises como objeto de contexto.</target>
        </trans-unit>
        <trans-unit id="d724ef8b5ac4713da43866408783f4dfab2df0a6" translate="yes" xml:space="preserve">
          <source>An optional keyword argument 'msg' can be provided when assertWarns is used as a context object.</source>
          <target state="translated">Se puede proporcionar un argumento opcional de palabra clave 'msg' cuando se utiliza assertWarns como objeto de contexto.</target>
        </trans-unit>
        <trans-unit id="d49f1439e54ca7761a8b8bc7bab8ca76a29fa636" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;code&gt;floats&lt;/code&gt;. Defaults to &lt;code&gt;[0.05, 1]&lt;/code&gt;. The cropped area of the image must contain a fraction of the supplied image within this range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e21f2debd08d3bcfa941208d3cd3691c2ac2d9ad" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;code&gt;floats&lt;/code&gt;. Defaults to &lt;code&gt;[0.75, 1.33]&lt;/code&gt;. The cropped area of the image must have an aspect &lt;code&gt;ratio = width / height&lt;/code&gt; within this range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6b6f80c2448b1a76011a1925a347073888c1106" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;code&gt;floats&lt;/code&gt;. Defaults to &lt;code&gt;[0.75, 1.33]&lt;/code&gt;. The cropped area of the image must have an aspect ratio = width / height within this range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6a65c4726ba1430d8a70037ccc878a7affd3e19" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;code&gt;floats&lt;/code&gt;. Defaults to &lt;code&gt;[]&lt;/code&gt;. A list of unigram counts or probabilities, one per ID in sequential order. Exactly one of vocab_file and unigrams should be passed to this op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fecfc75d569ca44f1065cda3a633fd5dda86a3c" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;code&gt;ints&lt;/code&gt;. Defaults to &lt;code&gt;[1, 1, 1, 1, 1]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="163685f8447e6701e3f363f55afa0a5333d33e0e" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;code&gt;ints&lt;/code&gt;. Defaults to &lt;code&gt;[1, 1, 1, 1, 1]&lt;/code&gt;. 1-D tensor of length 5. The dilation factor for each dimension of &lt;code&gt;input&lt;/code&gt;. If set to k &amp;gt; 1, there will be k-1 skipped cells between each filter element on that dimension. The dimension order is determined by the value of &lt;code&gt;data_format&lt;/code&gt;, see above for details. Dilations in the batch and depth dimensions must be 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a25222e3f9d22594b8b85ac6ad54c63485e4c07" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;code&gt;ints&lt;/code&gt;. Defaults to &lt;code&gt;[1, 1, 1, 1]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2875e2daeb9511e73de8df5063b42daba1a8839" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;code&gt;ints&lt;/code&gt;. Defaults to &lt;code&gt;[1, 1, 1, 1]&lt;/code&gt;. 1-D tensor of length 4. The dilation factor for each dimension of &lt;code&gt;input&lt;/code&gt;. If set to k &amp;gt; 1, there will be k-1 skipped cells between each filter element on that dimension. The dimension order is determined by the value of &lt;code&gt;data_format&lt;/code&gt;, see above for details. Dilations in the batch and depth dimensions must be 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30ca2dd1aa4969f6bfa454323a22dce52b2096c2" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;code&gt;ints&lt;/code&gt;. Defaults to &lt;code&gt;[1, 1, 1, 1]&lt;/code&gt;. List of dilation values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21f23b6bb5216da7de88360a91cd2eca91618c3b" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;code&gt;ints&lt;/code&gt;. Defaults to &lt;code&gt;[1, 1, 1, 1]&lt;/code&gt;. list of dilation values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="125959338e55a47c9a73b62350bad1138cccfd66" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;code&gt;ints&lt;/code&gt;. Defaults to &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a51b20c3c78cb85898dc92d524c13ecc87549b6c" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;code&gt;ints&lt;/code&gt;. Defaults to &lt;code&gt;[]&lt;/code&gt;. A vector holding the requested layout in minor-to-major sequence for all the tuple shapes in the order the shapes appear in the &quot;shapes&quot; input. The layout elements for a sub-shape can be set to -1 in which case the corresponding layout will be computed by the infeed operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98b49486d2c329265acffc2696001a0b734a7017" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;code&gt;ints&lt;/code&gt;. Defaults to &lt;code&gt;[]&lt;/code&gt;. A vector holding the requested layout in minor-to-major sequence for all the tuple shapes, in the order the shapes appear in the &quot;shapes&quot; input. The layout elements for a sub-shape can be set to -1, in which case the corresponding layout will be computed by the infeed operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95bf338b2aa47d497b5894768e1e92daf4751cfc" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;code&gt;ints&lt;/code&gt;. Defaults to &lt;code&gt;[]&lt;/code&gt;. A vector holding the requested layout in minor-to-major sequence. If a layout attribute is passed but its values are all -1 the layout will be computed by the infeed operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86c9a5f7880d4127e796c347e1f8e51ced94940e" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;code&gt;ints&lt;/code&gt;. Defaults to &lt;code&gt;[]&lt;/code&gt;. A vector holding the requested layout in minor-to-major sequence. If a layout attribute is passed, but its values are all -1, the layout will be computed by the infeed operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fee8fb436244372df00ab9691974afde24774cf" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;code&gt;ints&lt;/code&gt;. Defaults to &lt;code&gt;[]&lt;/code&gt;. DEPRECATED. Use num_cores_per_replica instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="686042010be6f656319efeb3d66a712d155ec5f5" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;code&gt;ints&lt;/code&gt;. Defaults to &lt;code&gt;[]&lt;/code&gt;. If &lt;code&gt;padding&lt;/code&gt; is &lt;code&gt;&quot;EXPLICIT&quot;&lt;/code&gt;, the list of explicit padding amounts. For the ith dimension, the amount of padding inserted before and after the dimension is &lt;code&gt;explicit_paddings[2 * i]&lt;/code&gt; and &lt;code&gt;explicit_paddings[2 * i + 1]&lt;/code&gt;, respectively. If &lt;code&gt;padding&lt;/code&gt; is not &lt;code&gt;&quot;EXPLICIT&quot;&lt;/code&gt;, &lt;code&gt;explicit_paddings&lt;/code&gt; must be empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a91d61df672e8f75d28b72814a29f34243e579fe" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;code&gt;ints&lt;/code&gt;. Defaults to &lt;code&gt;[]&lt;/code&gt;. If specified, only squeezes the dimensions listed. The dimension index starts at 0. It is an error to squeeze a dimension that is not 1. Must be in the range &lt;code&gt;[-rank(input), rank(input))&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5af5f61f4915bff47818a9f6b1f87b93fa52f1f" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;code&gt;ints&lt;/code&gt;. Defaults to &lt;code&gt;[]&lt;/code&gt;. If specified, only squeezes the dimensions listed. The dimension index starts at 0. It is an error to squeeze a dimension that is not 1. Must be in the range &lt;code&gt;[-rank(input), rank(input))&lt;/code&gt;. Must be specified if &lt;code&gt;input&lt;/code&gt; is a &lt;code&gt;RaggedTensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21cce5eea9a57604082417def3419929687a6660" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;code&gt;ints&lt;/code&gt;. Defaults to &lt;code&gt;[]&lt;/code&gt;. The assignment of devices for the computation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2946de7b21a838b5a8397d5f3492c1276f6be468" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;code&gt;strings&lt;/code&gt;. Defaults to &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b0843b59826446c3f467d90ce7eedfed177243c" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;code&gt;strings&lt;/code&gt;. Defaults to &lt;code&gt;[]&lt;/code&gt;. A list of debug op spec (op, url, gated_grpc) for attached debug ops. Each element of the list has the format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a35d998176f5256d9a65605be98f262492173fc7" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;code&gt;strings&lt;/code&gt;. Defaults to &lt;code&gt;[]&lt;/code&gt;. A list of string scalars, one for each embedding table that specify how to normalize the embedding activations after weighted summation. Supported combiners are 'mean', 'sum', or 'sqrtn'. It is invalid to have the sum of the weights be 0 for 'mean' or the sum of the squared weights be 0 for 'sqrtn'. If combiners isn't passed, the default is to use 'sum' for all tables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3d6a6aa01fa8cf8f92a0610ecb1bdfd9bfe011d" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;code&gt;strings&lt;/code&gt;. Defaults to &lt;code&gt;[]&lt;/code&gt;. An unused list of strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56e01bf1c20f2fea25d127e8697fb4f0912ffd14" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;code&gt;strings&lt;/code&gt;. Defaults to &lt;code&gt;[]&lt;/code&gt;. DEPRECATED. The allowed devices containing the resource variable. Set when the output ResourceHandle represents a per-replica/partitioned resource variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="821bfe841b17b7ece159c65260d9cf88e7b82bf1" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;code&gt;strings&lt;/code&gt;. Defaults to &lt;code&gt;[]&lt;/code&gt;. List of URLs to debug targets, e.g., file:///foo/tfdbg_dump, grpc:://localhost:11011</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cee71b3a344be904aec94ca30ce6fc06c85ee15" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;code&gt;strings&lt;/code&gt;. Defaults to &lt;code&gt;[]&lt;/code&gt;. List of URLs to debug targets, e.g., file:///foo/tfdbg_dump, grpc:://localhost:11011.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="454f66e43bb1e7d1839425f2ef7b5a8c1ee1a26f" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;code&gt;strings&lt;/code&gt;. Defaults to &lt;code&gt;[]&lt;/code&gt;. List of URLs to debug targets, e.g., file:///foo/tfdbg_dump.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ba64382117a2d0ea6cabdc634b64384faa9330a" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;code&gt;tf.DTypes&lt;/code&gt; from: &lt;code&gt;tf.float32, tf.int64, tf.string&lt;/code&gt;. Defaults to &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fa731e7a612ac02857f15eb55b20a85402bcc75" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;code&gt;tf.DTypes&lt;/code&gt; from: &lt;code&gt;tf.float32, tf.int64, tf.string&lt;/code&gt;. Defaults to &lt;code&gt;[]&lt;/code&gt;. A list of Ncontext_sparse types; the data types of data in each context Feature given in context_sparse_keys. Currently the ParseSingleSequenceExample supports DT_FLOAT (FloatList), DT_INT64 (Int64List), and DT_STRING (BytesList).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7d0077dd794ad66f8a6d5a5d089844b47ebec63" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;code&gt;tf.DTypes&lt;/code&gt; from: &lt;code&gt;tf.float32, tf.int64, tf.string&lt;/code&gt;. Defaults to &lt;code&gt;[]&lt;/code&gt;. A list of Nfeature_list_sparse types; the data types of data in each FeatureList given in feature_list_sparse_keys. Currently the ParseSingleSequenceExample supports DT_FLOAT (FloatList), DT_INT64 (Int64List), and DT_STRING (BytesList).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbae97001eb0c335c50b958520cebd8144d26714" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;code&gt;tf.DTypes&lt;/code&gt; from: &lt;code&gt;tf.int32, tf.int64&lt;/code&gt;. Defaults to &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d631add759243ab2846f8447cee5892d00bc5afa" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;code&gt;tf.DTypes&lt;/code&gt;. Defaults to &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdaf932e0414ccc475c3cb97efb1032be7e7dd7a" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;code&gt;tf.DTypes&lt;/code&gt;. Defaults to &lt;code&gt;[]&lt;/code&gt;. If specified, defines the type of each tuple component in an element produced by the resulting iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="726470f94e454df3447037327f1db3bc5b5e805f" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;code&gt;tf.DTypes&lt;/code&gt;. Defaults to &lt;code&gt;[]&lt;/code&gt;. The type list for the return values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3ae0eff476c125819253d163255ada9e0125f9c" translate="yes" xml:space="preserve">
          <source>An optional list of &lt;code&gt;tf.DTypes&lt;/code&gt;. Defaults to &lt;code&gt;[]&lt;/code&gt;. The type of each component in a value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90231bcee2c319f88b0e8ebcd5af43a825742853" translate="yes" xml:space="preserve">
          <source>An optional list of collections &lt;code&gt;update_op&lt;/code&gt; should be added to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="026554f41ff52cf0ad2d7d5546321c07396aab8b" translate="yes" xml:space="preserve">
          <source>An optional list of collections that &lt;code&gt;accuracy&lt;/code&gt; should be added to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="907c88d801acd922eb40f24eea76bdd658788f19" translate="yes" xml:space="preserve">
          <source>An optional list of collections that &lt;code&gt;auc&lt;/code&gt; should be added to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbed735144a5c8fb78e9f347af79054ef6bbd5a2" translate="yes" xml:space="preserve">
          <source>An optional list of collections that &lt;code&gt;false_negatives&lt;/code&gt; should be added to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff9dd7258f40f72c7543e7273ca9d58483db4aad" translate="yes" xml:space="preserve">
          <source>An optional list of collections that &lt;code&gt;false_positives&lt;/code&gt; should be added to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53ed0ea92762f93d16a7a81c4b0dbbd39bbe2587" translate="yes" xml:space="preserve">
          <source>An optional list of collections that &lt;code&gt;mean&lt;/code&gt; should be added to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a288c56f21ad3b852e7f04d04aeb11dc71323ea7" translate="yes" xml:space="preserve">
          <source>An optional list of collections that &lt;code&gt;mean_absolute_error&lt;/code&gt; should be added to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1201b938e6753d05fc594eba55e63fe3e7969941" translate="yes" xml:space="preserve">
          <source>An optional list of collections that &lt;code&gt;mean_iou&lt;/code&gt; should be added to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6715ab21f5b22eddc4226d538ede8ac2742554f3" translate="yes" xml:space="preserve">
          <source>An optional list of collections that &lt;code&gt;mean_per_class_accuracy' should be added to. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;updates_collections&lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; An optional list of collections&lt;/code&gt;update_op&lt;code&gt;should be added to. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;name`</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5243279bc0c150fc1a984ee6436834043df3d568" translate="yes" xml:space="preserve">
          <source>An optional list of collections that &lt;code&gt;mean_relative_error&lt;/code&gt; should be added to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aabe95ef9281583cf3e0b6ff5bd31751cb7e073" translate="yes" xml:space="preserve">
          <source>An optional list of collections that &lt;code&gt;mean_squared_error&lt;/code&gt; should be added to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdb73f50324143b6490d74d22e1c60a4037990ff" translate="yes" xml:space="preserve">
          <source>An optional list of collections that &lt;code&gt;precision&lt;/code&gt; should be added to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9f91ed66e70d786422e73c0f56dab35c3643276" translate="yes" xml:space="preserve">
          <source>An optional list of collections that &lt;code&gt;recall&lt;/code&gt; should be added to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae7d816268669613c71c05c866925d30b464a879" translate="yes" xml:space="preserve">
          <source>An optional list of collections that &lt;code&gt;root_mean_squared_error&lt;/code&gt; should be added to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e6189f5f192449c09ecb73788aface0eb1584f4" translate="yes" xml:space="preserve">
          <source>An optional list of collections that &lt;code&gt;sensitivity&lt;/code&gt; should be added to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a3fc72cbf68e91c5ce74a8a3d09fed88a174073" translate="yes" xml:space="preserve">
          <source>An optional list of collections that &lt;code&gt;specificity&lt;/code&gt; should be added to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a7a4077fc38477f7ef42f42a8be878ce5586351" translate="yes" xml:space="preserve">
          <source>An optional list of collections that &lt;code&gt;true_negatives&lt;/code&gt; should be added to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="150284673a4b3858835ba0c2e58e5464aa688938" translate="yes" xml:space="preserve">
          <source>An optional list of collections that &lt;code&gt;true_positives&lt;/code&gt; should be added to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00474b12492eef05c96d26044604bed847cd205d" translate="yes" xml:space="preserve">
          <source>An optional list of collections that &lt;code&gt;update_op&lt;/code&gt; should be added to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b92b36d169225fca2d6ab2355067c2245706c95" translate="yes" xml:space="preserve">
          <source>An optional list of collections that the metric update ops should be added to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a50f26e47c71be940cc3074dab4678c28cce7b00" translate="yes" xml:space="preserve">
          <source>An optional list of collections that the metric value variable should be added to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ecdf2349aad5ff404cc6125d63972b47cab5fd" translate="yes" xml:space="preserve">
          <source>An optional list of collections that updates should be added to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7905c3f1b34cbfe2da87b4dd4ed9b2af77ee09bf" translate="yes" xml:space="preserve">
          <source>An optional list of collections that values should be added to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df4b55201fc7a6e9ca5f0e50688e307b61d1f0c" translate="yes" xml:space="preserve">
          <source>An optional list of floating point values to use as the thresholds for discretizing the curve. If set, the &lt;code&gt;num_thresholds&lt;/code&gt; parameter is ignored. Values should be in [0, 1]. Endpoint thresholds equal to {-epsilon, 1+epsilon} for a small positive epsilon value will be automatically included with these to correctly handle predictions equal to exactly 0 or 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ebdd5c75bad39a39484a2e4ba8821deb69d643e" translate="yes" xml:space="preserve">
          <source>An optional list of integer indices or string column names, that specifies a subset of columns of CSV data to select. If column names are provided, these must correspond to names provided in &lt;code&gt;column_names&lt;/code&gt; or inferred from the file header lines. When this argument is specified, only a subset of CSV columns will be parsed and returned, corresponding to the columns specified. Using this results in faster parsing and lower memory usage. If both this and &lt;code&gt;column_defaults&lt;/code&gt; are specified, these must have the same lengths, and &lt;code&gt;column_defaults&lt;/code&gt; is assumed to be sorted in order of increasing column index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d5ec1a81bafde4a84cf1d13b020824d3192ec7a" translate="yes" xml:space="preserve">
          <source>An optional list of names of nodes to be kept unconditionally. This is for example useful to preserve Identity output nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74345a33699443ffada2e814d34e394d26fc4ef5" translate="yes" xml:space="preserve">
          <source>An optional list of shapes (each a &lt;a href=&quot;../tensorshape&quot;&gt;&lt;code&gt;tf.TensorShape&lt;/code&gt;&lt;/a&gt; or list of &lt;code&gt;ints&lt;/code&gt;). Defaults to &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eabecd1cbc32c44fa4b5b5f0b4eb16ed88fd326e" translate="yes" xml:space="preserve">
          <source>An optional list of shapes (each a &lt;a href=&quot;../tensorshape&quot;&gt;&lt;code&gt;tf.TensorShape&lt;/code&gt;&lt;/a&gt; or list of &lt;code&gt;ints&lt;/code&gt;). Defaults to &lt;code&gt;[]&lt;/code&gt;. A list of Ncontext_dense shapes; the shapes of data in each context Feature given in context_dense_keys. The number of elements in the Feature corresponding to context_dense_key[j] must always equal context_dense_shapes[j].NumEntries(). The shape of context_dense_values[j] will match context_dense_shapes[j].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e57a10f704d51a437d396060de14f612dc91c92d" translate="yes" xml:space="preserve">
          <source>An optional list of shapes (each a &lt;a href=&quot;../tensorshape&quot;&gt;&lt;code&gt;tf.TensorShape&lt;/code&gt;&lt;/a&gt; or list of &lt;code&gt;ints&lt;/code&gt;). Defaults to &lt;code&gt;[]&lt;/code&gt;. A list of Nfeature_list_dense shapes; the shapes of data in each FeatureList given in feature_list_dense_keys. The shape of each Feature in the FeatureList corresponding to feature_list_dense_key[j] must always equal feature_list_dense_shapes[j].NumEntries().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d841dac4c01678266b38f3f375f387598ebb6a32" translate="yes" xml:space="preserve">
          <source>An optional list of shapes (each a &lt;a href=&quot;../tensorshape&quot;&gt;&lt;code&gt;tf.TensorShape&lt;/code&gt;&lt;/a&gt; or list of &lt;code&gt;ints&lt;/code&gt;). Defaults to &lt;code&gt;[]&lt;/code&gt;. If specified, defines the shape of each tuple component in an element produced by the resulting iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e57f9e097ed1a08e1df1d62271678a07df06c4e9" translate="yes" xml:space="preserve">
          <source>An optional list of shapes (each a &lt;a href=&quot;../tensorshape&quot;&gt;&lt;code&gt;tf.TensorShape&lt;/code&gt;&lt;/a&gt; or list of &lt;code&gt;ints&lt;/code&gt;). Defaults to &lt;code&gt;[]&lt;/code&gt;. The list of shapes being produced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f191e6bc64b7715167031c5496e3cdb6f592b4c6" translate="yes" xml:space="preserve">
          <source>An optional list of shapes (each a &lt;a href=&quot;../tensorshape&quot;&gt;&lt;code&gt;tf.TensorShape&lt;/code&gt;&lt;/a&gt; or list of &lt;code&gt;ints&lt;/code&gt;). Defaults to &lt;code&gt;[]&lt;/code&gt;. The shape of each component in a value. Each shape must be 1 in the first dimension. The length of this attr must be the same as the length of component_types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6edfc2d448052e18e0591953207107840c1e280f" translate="yes" xml:space="preserve">
          <source>An optional list of shapes (each a &lt;a href=&quot;../tensorshape&quot;&gt;&lt;code&gt;tf.TensorShape&lt;/code&gt;&lt;/a&gt; or list of &lt;code&gt;ints&lt;/code&gt;). Defaults to &lt;code&gt;[]&lt;/code&gt;. The shape of each component in a value. The length of this attr must be either 0 or the same as the length of component_types. If the length of this attr is 0, the shapes of queue elements are not constrained, and only one element may be dequeued at a time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8051cf165bcfe18f0d238c7a72a3f68eed1c6c5" translate="yes" xml:space="preserve">
          <source>An optional list of shapes (each a &lt;a href=&quot;../tensorshape&quot;&gt;&lt;code&gt;tf.TensorShape&lt;/code&gt;&lt;/a&gt; or list of &lt;code&gt;ints&lt;/code&gt;). Defaults to &lt;code&gt;[]&lt;/code&gt;. The shape of each component in a value. The length of this attr must be either 0 or the same as the length of component_types. Shapes of fixed rank but variable size are allowed by setting any shape dimension to -1. In this case, the inputs' shape may vary along the given dimension, and DequeueMany will pad the given dimension with zeros up to the maximum shape of all elements in the given batch. If the length of this attr is 0, different queue elements may have different ranks and shapes, but only one element may be dequeued at a time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b13e0d30f865a05e4b169fbcf89837af1fab619" translate="yes" xml:space="preserve">
          <source>An optional list of strings that corresponds to the CSV columns, in order. One per column of the input record. If this is not provided, infers the column names from the first row of the records. These names will be the keys of the features dict of each dataset element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d53f3d5c472f58fdc9725e253c8a2dea2a7df3b" translate="yes" xml:space="preserve">
          <source>An optional list of values, or a path to a text file containing a vocabulary to load into this layer. The file should contain one value per line. If the list or file contains the same token multiple times, an error will be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e5468744ad04ed0503a6006b2a5b642998e81a9" translate="yes" xml:space="preserve">
          <source>An optional list of vocabulary terms, or a path to a text file containing a vocabulary to load into this layer. The file should contain one token per line. If the list or file contains the same token multiple times, an error will be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a7efc8ee8cb6b85629589f75b32c2fb9d8d0f4" translate="yes" xml:space="preserve">
          <source>An optional name for the feature, useful for debugging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee5b025615a5d7f92f6322d94e41d4ba9cb6afe5" translate="yes" xml:space="preserve">
          <source>An optional name for the operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43c5dff1f682de25fffe0fbddc7abf7114f147df" translate="yes" xml:space="preserve">
          <source>An optional name string for the layer. Should be unique in a model (do not reuse the same name twice). It will be autogenerated if it isn't provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa9a2ab38aa832753199800a6778fcee56a77446" translate="yes" xml:space="preserve">
          <source>An optional output dtype (&lt;a href=&quot;../../tf#int32&quot;&gt;&lt;code&gt;tf.int32&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt;). Defaults to &lt;a href=&quot;../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac3f5edf8c5868c976bb2c7428c0333f59da0f5" translate="yes" xml:space="preserve">
          <source>An optional padding value. If specified, then any row suffix consisting entirely of &lt;code&gt;padding&lt;/code&gt; will be excluded from the returned RaggedTensor. &lt;code&gt;padding&lt;/code&gt; is a &lt;code&gt;Tensor&lt;/code&gt; with the same dtype as &lt;code&gt;tensor&lt;/code&gt; and with &lt;code&gt;shape=tensor.shape[ragged_rank + 1:]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf19ddc57c289dea01096bb1e4a86270f21dd88" translate="yes" xml:space="preserve">
          <source>An optional projection function to be applied to the &lt;code&gt;beta&lt;/code&gt; weight after being updated by an &lt;code&gt;Optimizer&lt;/code&gt; (e.g. used to implement norm constraints or value constraints for layer weights). The function must take as input the unprojected variable and must return the projected variable (which must have the same shape). Constraints are not safe to use when doing asynchronous distributed training.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1fdb5f2dc42e0e865513d168e8f6b4ede3e7feb" translate="yes" xml:space="preserve">
          <source>An optional projection function to be applied to the &lt;code&gt;gamma&lt;/code&gt; weight after being updated by an &lt;code&gt;Optimizer&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab27ae325f8823ceaad6fb48fcdee18676b8b3c8" translate="yes" xml:space="preserve">
          <source>An optional projection function to be applied to the bias after being updated by an &lt;code&gt;Optimizer&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2921483e4accd885b526c1d7628d9f6c842f0d6" translate="yes" xml:space="preserve">
          <source>An optional projection function to be applied to the kernel after being updated by an &lt;code&gt;Optimizer&lt;/code&gt; (e.g. used to implement norm constraints or value constraints for layer weights). The function must take as input the unprojected variable and must return the projected variable (which must have the same shape). Constraints are not safe to use when doing asynchronous distributed training.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25004a5ce16ee81ec02459c0f99579d80df52eb3" translate="yes" xml:space="preserve">
          <source>An optional projection function to be applied to the variable after being updated by an &lt;code&gt;Optimizer&lt;/code&gt; (e.g. used to implement norm constraints or value constraints for layer weights). The function must take as input the unprojected Tensor representing the value of the variable and return the Tensor for the projected value (which must have the same shape). Constraints are not safe to use when doing asynchronous distributed training.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3de4ecc3cea54af8089b510b8ea9228a477dfca6" translate="yes" xml:space="preserve">
          <source>An optional scalar &lt;code&gt;Tensor&lt;/code&gt; to use where the input signal does not exist when &lt;code&gt;pad_end&lt;/code&gt; is True.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fddb2926c7aa1fb3147ed03909ec696033351942" translate="yes" xml:space="preserve">
          <source>An optional scope name for filtering the losses to return.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a7b947b4611cc25f04c6eaf9e10706e5748a222" translate="yes" xml:space="preserve">
          <source>An optional scope name for filtering the losses to return. Note that this filters the losses added with &lt;code&gt;tf.add_loss()&lt;/code&gt; as well as the regularization losses to that scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f8aae945d00e909101e0f2b5d2c01151b203c5b" translate="yes" xml:space="preserve">
          <source>An optional set of row lengths, specified using a 1-D integer &lt;code&gt;Tensor&lt;/code&gt; whose length is equal to &lt;code&gt;tensor.shape[0]&lt;/code&gt; (the number of rows in &lt;code&gt;tensor&lt;/code&gt;). If specified, then &lt;code&gt;output[row]&lt;/code&gt; will contain &lt;code&gt;tensor[row][:lengths[row]]&lt;/code&gt;. Negative lengths are treated as zero. You may optionally pass a list or tuple of lengths to this argument, which will be used as nested row lengths to construct a ragged tensor with multiple ragged dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57c7d24b4932d1a57eb3f207156c30b6e4655650" translate="yes" xml:space="preserve">
          <source>An optional str, the associated message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3911ea534eb62e594349310c3faa590da09611c6" translate="yes" xml:space="preserve">
          <source>An optional string from: &quot;NDHWC&quot;, &quot;NCDHW&quot;. Defaults to &quot;NDHWC&quot;. The data format of the input and output data. With the default format &quot;NDHWC&quot;, the data is stored in the order of: [batch, in_depth, in_height, in_width, in_channels]. Alternatively, the format could be &quot;NCDHW&quot;, the data storage order is: [batch, in_channels, in_depth, in_height, in_width].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f756e6ce82c7f8ffe0e0ecb89b8a4c6c22ede5" translate="yes" xml:space="preserve">
          <source>An optional string from: &quot;NWC&quot;, &quot;NCW&quot;. Defaults to &quot;NWC&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40e9fb687235a10fbaf7402046c8e02d064d0c58" translate="yes" xml:space="preserve">
          <source>An optional string message to append to the failure message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18cacc29924c97b0b5abf2a13fed7dafe35a58e3" translate="yes" xml:space="preserve">
          <source>An optional string specifying the sampling method for resizing. It can be either &lt;code&gt;&quot;bilinear&quot;&lt;/code&gt; or &lt;code&gt;&quot;nearest&quot;&lt;/code&gt; and default to &lt;code&gt;&quot;bilinear&quot;&lt;/code&gt;. Currently two sampling methods are supported: Bilinear and Nearest Neighbor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faf18fc625b71983a7f861f39220eeacafd69156" translate="yes" xml:space="preserve">
          <source>An optional string used to name the table. Useful for debugging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdd6380cc162e4de1020c060e0f1b9fea2d83d01" translate="yes" xml:space="preserve">
          <source>An optional tf.profiler.ProfilerOptions can be provided to fine tune the profiler's behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aa2b7337f5e7feb21cc919087431850ed28c025" translate="yes" xml:space="preserve">
          <source>An optional variable to save the results to TensorBoard. Default True.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc16c9ba411eda542c95ca02a0f362f6947972d5" translate="yes" xml:space="preserve">
          <source>An optional variable_scope name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="456495d96f59be8dc549e265b00511e2ccc13614" translate="yes" xml:space="preserve">
          <source>An ordered iterable defining the vocabulary. Each feature is mapped to the index of its value (if present) in &lt;code&gt;vocabulary_list&lt;/code&gt;. Must be castable to &lt;code&gt;dtype&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fae9808d38c410051b12143e26717b31e8e8cd4d" translate="yes" xml:space="preserve">
          <source>An regularizer config is a Python dictionary (serializable) containing all configuration parameters of the regularizer. The same regularizer can be reinstantiated later (without any saved state) from this configuration.</source>
          <target state="translated">Una configuración del regularizador es un diccionario Python (serializable)que contiene todos los parámetros de configuración del regularizador.El mismo regularizador puede ser reinstalado más tarde (sin ningún estado guardado)a partir de esta configuración.</target>
        </trans-unit>
        <trans-unit id="54da63bfcb37a536980f5fba55cb96d50015fe10" translate="yes" xml:space="preserve">
          <source>An unordered sequence comparison asserting that the same elements, regardless of order. If the same element occurs more than once, it verifies that the elements occur the same number of times.</source>
          <target state="translated">Una comparación de secuencias no ordenadas que afirma que los mismos elementos,independientemente del orden.Si el mismo elemento ocurre más de una vez,verifica que los elementos ocurren el mismo número de veces.</target>
        </trans-unit>
        <trans-unit id="afd2800771d53dd7561d1fe2472f767ef4c1962c" translate="yes" xml:space="preserve">
          <source>An unsupported type is provided as input, or when the input tensors have incorrect shapes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c224ea08e10e3e0055dfccbe751c5b621b39e3fa" translate="yes" xml:space="preserve">
          <source>An unsupported type is provided as input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5babbe86183ca4a32d45308a3a011c68e1b2b4e7" translate="yes" xml:space="preserve">
          <source>Analogous to &lt;code&gt;batch_gather&lt;/code&gt;. This assumes that &lt;code&gt;ref&lt;/code&gt;, &lt;code&gt;indices&lt;/code&gt; and &lt;code&gt;updates&lt;/code&gt; have a series of leading dimensions that are the same for all of them, and the updates are performed on the last dimension of indices. In other words, the dimensions should be the following:</source>
          <target state="translated">An&amp;aacute;logo a &lt;code&gt;batch_gather&lt;/code&gt; . Esto supone que las &lt;code&gt;ref&lt;/code&gt; erencias , los &lt;code&gt;indices&lt;/code&gt; y las &lt;code&gt;updates&lt;/code&gt; tienen una serie de dimensiones principales que son iguales para todos ellos, y las actualizaciones se realizan en la &amp;uacute;ltima dimensi&amp;oacute;n de los &amp;iacute;ndices. En otras palabras, las dimensiones deben ser las siguientes:</target>
        </trans-unit>
        <trans-unit id="09726561b53e40cf836389af92359b99b60edc7d" translate="yes" xml:space="preserve">
          <source>Analogous to &lt;code&gt;batch_gather&lt;/code&gt;. This assumes that this variable and the sparse_delta IndexedSlices have a series of leading dimensions that are the same for all of them, and the updates are performed on the last dimension of indices. In other words, the dimensions should be the following:</source>
          <target state="translated">An&amp;aacute;logo a &lt;code&gt;batch_gather&lt;/code&gt; . Esto supone que esta variable y sparse_delta IndexedSlices tienen una serie de dimensiones principales que son iguales para todos ellos, y las actualizaciones se realizan en la &amp;uacute;ltima dimensi&amp;oacute;n de &amp;iacute;ndices. En otras palabras, las dimensiones deben ser las siguientes:</target>
        </trans-unit>
        <trans-unit id="cb397bb74a8194c074149cd1875593598713aa6a" translate="yes" xml:space="preserve">
          <source>And a reverse index map vector shaped &lt;code&gt;[indices.shape[0]]&lt;/code&gt; that is used during backpropagation,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d08d573ac0dca859ae365ea62edc8d0a6b6a4ddd" translate="yes" xml:space="preserve">
          <source>And arguments</source>
          <target state="translated">Y los argumentos</target>
        </trans-unit>
        <trans-unit id="a7000d584314526e7e6afe78bd49a48d66f69ac8" translate="yes" xml:space="preserve">
          <source>And finally (\hat{x}) is linearly transformed by ({\gamma}) and ({\beta}), which are learned parameters:</source>
          <target state="translated">Y finalmente (\hat{x})es transformado linealmente por ({\gamma})y ({\beta}),que son parámetros aprendidos:</target>
        </trans-unit>
        <trans-unit id="5b9bdca210a54e7cadd8b1e1f2a25b07f69ce295" translate="yes" xml:space="preserve">
          <source>And finally &lt;code&gt;x_i_normalized&lt;/code&gt; is linearly transformed by &lt;code&gt;gamma&lt;/code&gt; and &lt;code&gt;beta&lt;/code&gt;, which are learned parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16f6004353f288eb3a82c16a54b1aba311eea6dc" translate="yes" xml:space="preserve">
          <source>And for $n + 1$ dimensional $x$ with shape $[N_1, ..., N_n, K]$, we define</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7735a5a6da4547b3569cfa0c94476d0e3ca1bff2" translate="yes" xml:space="preserve">
          <source>And for &lt;code&gt;n + 1&lt;/code&gt; dimensional &lt;code&gt;x&lt;/code&gt; with shape &lt;code&gt;[N1, ..., Nn, K]&lt;/code&gt;, we define</source>
          <target state="translated">Y para &lt;code&gt;n + 1&lt;/code&gt; dimensional &lt;code&gt;x&lt;/code&gt; con forma &lt;code&gt;[N1, ..., Nn, K]&lt;/code&gt; , definimos</target>
        </trans-unit>
        <trans-unit id="69b830fcad03ac8706beb3b01515bd79f090f2ab" translate="yes" xml:space="preserve">
          <source>And the expected output is:</source>
          <target state="translated">Y el resultado esperado es:</target>
        </trans-unit>
        <trans-unit id="f31b5c2f9f361420e82dd042756cbdd55c85bca8" translate="yes" xml:space="preserve">
          <source>And the operation performed can be expressed as:</source>
          <target state="translated">Y la operación realizada puede expresarse como:</target>
        </trans-unit>
        <trans-unit id="24fd46a63bb5a580ba4e74a1c1ad2c60ade19149" translate="yes" xml:space="preserve">
          <source>And to make an embedding with either:</source>
          <target state="translated">Y para hacer una incrustación con cualquiera de los dos:</target>
        </trans-unit>
        <trans-unit id="1fd70473fb3de634b409d4acaf49ffc1f90aae1f" translate="yes" xml:space="preserve">
          <source>Angle</source>
          <target state="translated">Angle</target>
        </trans-unit>
        <trans-unit id="a19a7e980272fd117a4e5ee18ca00824d90e69e6" translate="yes" xml:space="preserve">
          <source>Ankle boot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2432f5ce495f4b4e1b21d7f1b0fdcd8ca0be7f61" translate="yes" xml:space="preserve">
          <source>Annotated tensor with idential value as &lt;code&gt;tensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be9ad5fb20ebceb9d47d3801dbcf74af5cb6d58" translate="yes" xml:space="preserve">
          <source>AnonymousIterator</source>
          <target state="translated">AnonymousIterator</target>
        </trans-unit>
        <trans-unit id="f87d12a052cc1014dfd24aad5b6e6518045d9d27" translate="yes" xml:space="preserve">
          <source>AnonymousIteratorV2</source>
          <target state="translated">AnonymousIteratorV2</target>
        </trans-unit>
        <trans-unit id="674ed3925067132fbd892389076783a6b9e479b8" translate="yes" xml:space="preserve">
          <source>AnonymousMemoryCache</source>
          <target state="translated">AnonymousMemoryCache</target>
        </trans-unit>
        <trans-unit id="2c632471db0882e06db5b771a0718ae67eac6e20" translate="yes" xml:space="preserve">
          <source>AnonymousMultiDeviceIterator</source>
          <target state="translated">AnonymousMultiDeviceIterator</target>
        </trans-unit>
        <trans-unit id="c1210acbfbbe5515f59896084b949af075fc3e6f" translate="yes" xml:space="preserve">
          <source>AnonymousRandomSeedGenerator</source>
          <target state="translated">AnonymousRandomSeedGenerator</target>
        </trans-unit>
        <trans-unit id="692308d2f0992f42c9b99852873c4954830baab9" translate="yes" xml:space="preserve">
          <source>AnonymousSeedGenerator</source>
          <target state="translated">AnonymousSeedGenerator</target>
        </trans-unit>
        <trans-unit id="deedb09f8ed9d9558d3410c28b220961c81c358b" translate="yes" xml:space="preserve">
          <source>Another &lt;code&gt;Dimension&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6469c35e9656aa1c431e081c14ebb0679cfa87cf" translate="yes" xml:space="preserve">
          <source>Another &lt;code&gt;TensorShape&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="564965b064217b22140e39738b3c90649e0848b1" translate="yes" xml:space="preserve">
          <source>Another DeviceSpec</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="033c69ae47bd02286b608cf4b28f8be208b6bf60" translate="yes" xml:space="preserve">
          <source>Another Dimension, or a value accepted by &lt;code&gt;as_dimension&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9771cfc920b19290df288e9955f1725160cb408d" translate="yes" xml:space="preserve">
          <source>Another Dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae0e23e7a7f370e734eee93925ae7dd08b91e9ec" translate="yes" xml:space="preserve">
          <source>Another TensorShape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="856497dd8de7f8b022715e8c39c03a81ee5d5293" translate="yes" xml:space="preserve">
          <source>Another example is a 'differentiable' moving average approximation, where gradients are allowed to flow into the last value fed to the moving average, but the moving average is still used for the forward pass:</source>
          <target state="translated">Otro ejemplo es una aproximación de media móvil &quot;diferenciable&quot;,en la que se permite que los gradientes fluyan hacia el último valor alimentado a la media móvil,pero la media móvil se sigue utilizando para el paso hacia adelante:</target>
        </trans-unit>
        <trans-unit id="4e65a659fcc9684bb008f92cfbaf1f26b5f07364" translate="yes" xml:space="preserve">
          <source>Another example, if 'axis = 1' and the inputs are</source>
          <target state="translated">Otro ejemplo,si &quot;eje=1&quot; y las entradas son</target>
        </trans-unit>
        <trans-unit id="6c47103c9d8a450b6b069ac79ab80ec33d0ca80b" translate="yes" xml:space="preserve">
          <source>Another note on notation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="322444d3bb52c341f429ca0454f292dc242f315b" translate="yes" xml:space="preserve">
          <source>Any</source>
          <target state="translated">Any</target>
        </trans-unit>
        <trans-unit id="3be4816ef25aa47cf3f6cca813f5368c26d9420f" translate="yes" xml:space="preserve">
          <source>Any &lt;a href=&quot;../../../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../../raggedtensor&quot;&gt;&lt;code&gt;tf.RaggedTensor&lt;/code&gt;&lt;/a&gt; of dimension 2 or higher.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce1824511b7d528a3e0b77852880cd57fa69f8b1" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="570f5ab252ffb9082eacb7364f9b568ac3003c49" translate="yes" xml:space="preserve">
          <source>Any ReadVariableOp with a control dependency on this op is guaranteed to return this value or a subsequent newer value of the variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ad4a0ff9826b30722a209362d45bcd7839612ed" translate="yes" xml:space="preserve">
          <source>Any ReadVariableOp with a control dependency on this op is guaranteed to see the decremented value or a subsequent newer one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2478b31625e96d57879667e651b0cacd2f14f0e7" translate="yes" xml:space="preserve">
          <source>Any ReadVariableOp with a control dependency on this op is guaranteed to see the incremented value or a subsequent newer one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ade0f75672a0035305beb6d491667abf3be1fb5f" translate="yes" xml:space="preserve">
          <source>Any additional arguments. Supported arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e349e267482a732ba1f00043f6622326b3b8541" translate="yes" xml:space="preserve">
          <source>Any additional layer keyword arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4398edbe3661c755bb51ef8916ee0f2200d89384" translate="yes" xml:space="preserve">
          <source>Any callable can be passed to this Layer, but if you want to serialize this object you should only pass functions that are registered Keras serializables (see &lt;a href=&quot;../../../utils/register_keras_serializable&quot;&gt;&lt;code&gt;tf.keras.utils.register_keras_serializable&lt;/code&gt;&lt;/a&gt; for more details).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ceb59d5345437a177e47529efa62bbbbf999164" translate="yes" xml:space="preserve">
          <source>Any callable object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6641d3ec47cf779f4f61bc40e91caabfec553b5b" translate="yes" xml:space="preserve">
          <source>Any dimensions added by &lt;code&gt;array_ops.newaxis&lt;/code&gt; will be ragged if the following dimension is ragged.</source>
          <target state="translated">Cualquier dimensi&amp;oacute;n agregada por &lt;code&gt;array_ops.newaxis&lt;/code&gt; ser&amp;aacute; desigual si la siguiente dimensi&amp;oacute;n est&amp;aacute; irregular.</target>
        </trans-unit>
        <trans-unit id="43768e31b404b4bd65259dd89b743ad3f29d5a24" translate="yes" xml:space="preserve">
          <source>Any dtype name, such as 'float32' or 'float64'. Both the variable and compute dtypes will be that dtype.</source>
          <target state="translated">Cualquier nombre de tipo,como &quot;float32&quot; o &quot;float64&quot;.Tanto la variable como los tipos de cálculo serán ese tipo.</target>
        </trans-unit>
        <trans-unit id="6cc2abc23cd80c15d70111b2f4f39907e243a4e9" translate="yes" xml:space="preserve">
          <source>Any dtype name, such as 'float32' or 'float64'. Both the variable and compute dtypes will be that dtype. No loss scaling is done by default.</source>
          <target state="translated">Cualquier nombre de tipo,como &quot;float32&quot; o &quot;float64&quot;.Tanto la variable como los tipos de cálculo serán ese tipo.No se hace un escalado de pérdidas por defecto.</target>
        </trans-unit>
        <trans-unit id="4fb306ec91fa48a5fe2e81e7b56b382ce5b1aae4" translate="yes" xml:space="preserve">
          <source>Any entries in &lt;code&gt;t_list&lt;/code&gt; that are of type None are ignored.</source>
          <target state="translated">Cualquier entrada en &lt;code&gt;t_list&lt;/code&gt; que sea del tipo Ninguno se ignora.</target>
        </trans-unit>
        <trans-unit id="2e6ace33eabfd5d2dd36fd022c6f164055e92e02" translate="yes" xml:space="preserve">
          <source>Any function that takes in a weight matrix and returns a scalar tensor can be used as a regularizer, e.g.:</source>
          <target state="translated">Cualquier función que tome una matriz de peso y devuelva un tensor escalar puede ser usada como un regularizador,por ejemplo:</target>
        </trans-unit>
        <trans-unit id="f0ac3b87f59c093fa24996fa010aa20479741927" translate="yes" xml:space="preserve">
          <source>Any of the entries of &lt;code&gt;t_list&lt;/code&gt; that are of type &lt;code&gt;None&lt;/code&gt; are ignored.</source>
          <target state="translated">Cualquiera de las entradas de &lt;code&gt;t_list&lt;/code&gt; que sean de tipo &lt;code&gt;None&lt;/code&gt; se ignoran.</target>
        </trans-unit>
        <trans-unit id="6447a581e962d587be5e92ee867a167268ecdc19" translate="yes" xml:space="preserve">
          <source>Any of the input and output subscripts may contain at most a single ellipsis (&lt;code&gt;...&lt;/code&gt;). These ellipsis are mapped against dimensions not corresponding to any named axis label. If two inputs contain ellipsis, then they are broadcasted according to standard NumPy broadcasting &lt;a href=&quot;http://docs.scipy.org/doc/numpy/user/basics.broadcasting.html&quot;&gt;rules&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1dfd11dcc6f696c3404bf35763ad95c6eb65704" translate="yes" xml:space="preserve">
          <source>Any of the threads can call &lt;code&gt;coord.request_stop()&lt;/code&gt; to ask for all the threads to stop. To cooperate with the requests, each thread must check for &lt;code&gt;coord.should_stop()&lt;/code&gt; on a regular basis. &lt;code&gt;coord.should_stop()&lt;/code&gt; returns &lt;code&gt;True&lt;/code&gt; as soon as &lt;code&gt;coord.request_stop()&lt;/code&gt; has been called.</source>
          <target state="translated">Cualquiera de los hilos puede llamar a &lt;code&gt;coord.request_stop()&lt;/code&gt; para pedir que se detengan todos los hilos. Para cooperar con las solicitudes, cada hilo debe verificar &lt;code&gt;coord.should_stop()&lt;/code&gt; de forma regular. &lt;code&gt;coord.should_stop()&lt;/code&gt; devuelve &lt;code&gt;True&lt;/code&gt; tan pronto como se haya llamado &lt;code&gt;coord.request_stop()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9bc46394aa4a0f5c5b609ae4e0e4287cd596c579" translate="yes" xml:space="preserve">
          <source>Any whitespace can be used as a separator.</source>
          <target state="translated">Cualquier espacio blanco puede ser usado como separador.</target>
        </trans-unit>
        <trans-unit id="adc91782b59a859b808dd6eb9aa53364c79e4117" translate="yes" xml:space="preserve">
          <source>Anything that creates variables that should be distributed variables must be in &lt;code&gt;strategy.scope&lt;/code&gt;. This can be either by directly putting it in scope, or relying on another API like &lt;code&gt;strategy.run&lt;/code&gt; or &lt;code&gt;model.fit&lt;/code&gt; to enter it for you. Any variable that is created outside scope will not be distributed and may have performance implications. Common things that create variables in TF: models, optimizers, metrics. These should always be created inside the scope. Another source of variable creation can be a checkpoint restore - when variables are created lazily. Note that any variable created inside a strategy captures the strategy information. So reading and writing to these variables outside the &lt;code&gt;strategy.scope&lt;/code&gt; can also work seamlessly, without the user having to enter the scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="505eab6f41fc66d24df758c7571e2e310de1bdb5" translate="yes" xml:space="preserve">
          <source>Anything that implements the collections.abc.Sized interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e731a11b061748546d938062ed828dc02374a93" translate="yes" xml:space="preserve">
          <source>Appends all flags assignments from this FlagInfo object to a file.</source>
          <target state="translated">Añade todas las asignaciones de banderas de este objeto FlagInfo a un archivo.</target>
        </trans-unit>
        <trans-unit id="cd3d7766234f16a63c7f60f6ec28017a31b1bc28" translate="yes" xml:space="preserve">
          <source>Appends flags registered in another FlagValues instance.</source>
          <target state="translated">Añade las banderas registradas en otra instancia de FlagValues.</target>
        </trans-unit>
        <trans-unit id="b3ea14711baca3f0a3289debffb8689ae0f35ca0" translate="yes" xml:space="preserve">
          <source>Applies &lt;code&gt;func(x[0], x[1], ...)&lt;/code&gt; where x[i] is an entry in &lt;code&gt;structure[i]&lt;/code&gt;. All structures in &lt;code&gt;structure&lt;/code&gt; must have the same arity, and the return value will contain results with the same structure layout.</source>
          <target state="translated">Aplica &lt;code&gt;func(x[0], x[1], ...)&lt;/code&gt; donde x [i] es una entrada en la &lt;code&gt;structure[i]&lt;/code&gt; . Todas las estructuras en la &lt;code&gt;structure&lt;/code&gt; deben tener la misma aridad y el valor de retorno contendr&amp;aacute; resultados con el mismo dise&amp;ntilde;o de estructura.</target>
        </trans-unit>
        <trans-unit id="16bb74d86664622f66d779eea2f15db151899642" translate="yes" xml:space="preserve">
          <source>Applies &lt;code&gt;func&lt;/code&gt; to each entry in &lt;code&gt;structure&lt;/code&gt; and returns a new structure.</source>
          <target state="translated">Aplica &lt;code&gt;func&lt;/code&gt; a cada entrada en la &lt;code&gt;structure&lt;/code&gt; y devuelve una nueva estructura.</target>
        </trans-unit>
        <trans-unit id="8f7f6f7b60c6dee64ac8391c8330e31cdbf63ae7" translate="yes" xml:space="preserve">
          <source>Applies &lt;code&gt;op&lt;/code&gt; to the values of one or more RaggedTensors.</source>
          <target state="translated">Aplica &lt;code&gt;op&lt;/code&gt; a los valores de uno o m&amp;aacute;s RaggedTensors.</target>
        </trans-unit>
        <trans-unit id="d8a01cdcf34886456b8891b8abf57ae574999852" translate="yes" xml:space="preserve">
          <source>Applies Alpha Dropout to the input.</source>
          <target state="translated">Aplica el Alfa Dropout a la entrada.</target>
        </trans-unit>
        <trans-unit id="ee441315c074dbfb730aa9f2af0891d836417b38" translate="yes" xml:space="preserve">
          <source>Applies Dropout to the input.</source>
          <target state="translated">Aplica Dropout a la entrada.</target>
        </trans-unit>
        <trans-unit id="e848937a7ddfd56b1ec5572c7ddd394a9f23ce0e" translate="yes" xml:space="preserve">
          <source>Applies L1 regularization shrink step on the parameters.</source>
          <target state="translated">Aplica el paso de contracción de regularización L1 en los parámetros.</target>
        </trans-unit>
        <trans-unit id="2d1b53bbb91a80e936db4b947627f59edacfc704" translate="yes" xml:space="preserve">
          <source>Applies a boolean mask to &lt;code&gt;data&lt;/code&gt; without flattening the mask dimensions.</source>
          <target state="translated">Aplica una m&amp;aacute;scara booleana a los &lt;code&gt;data&lt;/code&gt; sin aplanar las dimensiones de la m&amp;aacute;scara.</target>
        </trans-unit>
        <trans-unit id="0f0a5f64704db8a934ad12e662553b4a585caeb2" translate="yes" xml:space="preserve">
          <source>Applies a gradient to a given accumulator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b825d3c64659aae8d0036c192e5fa85c507c95f9" translate="yes" xml:space="preserve">
          <source>Applies a polynomial decay to the learning rate.</source>
          <target state="translated">Aplica un decaimiento polinómico al ritmo de aprendizaje.</target>
        </trans-unit>
        <trans-unit id="a7911ba5120125cc72947661dab80dba696110c9" translate="yes" xml:space="preserve">
          <source>Applies a random transformation to an image.</source>
          <target state="translated">Aplica una transformación aleatoria a una imagen.</target>
        </trans-unit>
        <trans-unit id="00ef994b13b02f82b08bc42f47197cb3378179f6" translate="yes" xml:space="preserve">
          <source>Applies a sparse gradient to a given accumulator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60acd402b359a94751ce9d82f606354c2d9019c9" translate="yes" xml:space="preserve">
          <source>Applies a transformation function to this dataset.</source>
          <target state="translated">Aplica una función de transformación a este conjunto de datos.</target>
        </trans-unit>
        <trans-unit id="6a7d34b3174141a6a19928864df6cbf717f78d7a" translate="yes" xml:space="preserve">
          <source>Applies a transformation to an image according to given parameters.</source>
          <target state="translated">Aplica una transformación a una imagen según unos parámetros dados.</target>
        </trans-unit>
        <trans-unit id="b1e31e91a3590b7de403b46d719ee4ba35e8375b" translate="yes" xml:space="preserve">
          <source>Applies an activation function to an output.</source>
          <target state="translated">Aplica una función de activación a una salida.</target>
        </trans-unit>
        <trans-unit id="1550c5f0bd865d0f9113d0169289f1a69d4fba6a" translate="yes" xml:space="preserve">
          <source>Applies an affine transformation specified by the parameters given.</source>
          <target state="translated">Aplica una transformación afín especificada por los parámetros dados.</target>
        </trans-unit>
        <trans-unit id="6c40584f3a35536aa56ba79a548b47d4eab5d7c0" translate="yes" xml:space="preserve">
          <source>Applies batch normalization on x given mean, var, beta and gamma.</source>
          <target state="translated">Aplica la normalización de lotes en x dada la media,var,beta y gamma.</target>
        </trans-unit>
        <trans-unit id="efc2bcdc2ccf535a43b9df3f4fc0ce53ede0a193" translate="yes" xml:space="preserve">
          <source>Applies batch normalization to activations of the previous layer at each batch by synchronizing the global batch statistics across all devices that are training the model. For specific details about batch normalization please refer to the &lt;a href=&quot;../batchnormalization&quot;&gt;&lt;code&gt;tf.keras.layers.BatchNormalization&lt;/code&gt;&lt;/a&gt; layer docs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6fc551e1da71ba31ab28b4b8dde0d2689542edb" translate="yes" xml:space="preserve">
          <source>Applies cosine decay to the learning rate.</source>
          <target state="translated">Aplica el decaimiento del coseno a la tasa de aprendizaje.</target>
        </trans-unit>
        <trans-unit id="4bd697b1ffc0b4e143beef46319dcc0c5ac06454" translate="yes" xml:space="preserve">
          <source>Applies cosine decay with restarts to the learning rate.</source>
          <target state="translated">Aplica el decaimiento del coseno con reinicios a la tasa de aprendizaje.</target>
        </trans-unit>
        <trans-unit id="9dfa1bd4553c4405259d07f3bc916e914643902d" translate="yes" xml:space="preserve">
          <source>Applies exponential decay to the learning rate.</source>
          <target state="translated">Aplica un declive exponencial al ritmo de aprendizaje.</target>
        </trans-unit>
        <trans-unit id="1248d48f4bd4a7a0f8c84526ce6de7cbe6c9ca74" translate="yes" xml:space="preserve">
          <source>Applies inverse time decay to the initial learning rate.</source>
          <target state="translated">Aplica un decaimiento de tiempo inverso a la tasa de aprendizaje inicial.</target>
        </trans-unit>
        <trans-unit id="29a0b1ad75aefb7d0f5212f7f0184d037dfc3f06" translate="yes" xml:space="preserve">
          <source>Applies linear cosine decay to the learning rate.</source>
          <target state="translated">Aplica la decadencia lineal del coseno a la tasa de aprendizaje.</target>
        </trans-unit>
        <trans-unit id="80756628cb35e9cdbe635aea79396e92114a02ee" translate="yes" xml:space="preserve">
          <source>Applies lower_bound(sorted_search_values, values) along each row.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c29ff4ee781cfc8cb030ccac3df7211c245e51f" translate="yes" xml:space="preserve">
          <source>Applies natural exponential decay to the initial learning rate.</source>
          <target state="translated">Aplica el decaimiento exponencial natural a la tasa de aprendizaje inicial.</target>
        </trans-unit>
        <trans-unit id="856d722e05a09b9433074a5d24479abe0a796cda" translate="yes" xml:space="preserve">
          <source>Applies noisy linear cosine decay to the learning rate.</source>
          <target state="translated">Aplica la ruidosa decadencia lineal del coseno a la tasa de aprendizaje.</target>
        </trans-unit>
        <trans-unit id="8ed2e06f7517a6572908e7ed0e9823c818a7ef93" translate="yes" xml:space="preserve">
          <source>Applies set operation along last dimension of 2 &lt;code&gt;SparseTensor&lt;/code&gt; inputs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa076c2ded41802ccc1b4d0a7fecdb7916a5916" translate="yes" xml:space="preserve">
          <source>Applies set operation along last dimension of 2 &lt;code&gt;Tensor&lt;/code&gt; inputs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ae4388bd3c4b28b3788509963e207e5525613ac" translate="yes" xml:space="preserve">
          <source>Applies set operation along last dimension of &lt;code&gt;Tensor&lt;/code&gt; and &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7321a5fcf04a58f1ef9cac318d7fd813fbb538b4" translate="yes" xml:space="preserve">
          <source>Applies softmax to a batched N-D &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="translated">Aplica softmax a un ND &lt;code&gt;SparseTensor&lt;/code&gt; por lotes .</target>
        </trans-unit>
        <trans-unit id="bccc5a75d0e6858fa48c5859eb31fb21a06bef5d" translate="yes" xml:space="preserve">
          <source>Applies sparse &lt;code&gt;updates&lt;/code&gt; to individual values or slices in a Variable.</source>
          <target state="translated">Aplica &lt;code&gt;updates&lt;/code&gt; dispersas a valores individuales o porciones en una variable.</target>
        </trans-unit>
        <trans-unit id="76535a867a31472a90765abfb8ced85088dd85a7" translate="yes" xml:space="preserve">
          <source>Applies sparse &lt;code&gt;updates&lt;/code&gt; to individual values or slices within a given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a9bbcdf3960bfd184db8cb12cdc0be5fce09485" translate="yes" xml:space="preserve">
          <source>Applies sparse addition to &lt;code&gt;input&lt;/code&gt; using individual values or slices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82a3bcad77e766e7c6707709f1146c5e5516e607" translate="yes" xml:space="preserve">
          <source>Applies sparse addition to individual values or slices in a Variable.</source>
          <target state="translated">Aplica la adición dispersa a los valores individuales o rebanadas en una variable.</target>
        </trans-unit>
        <trans-unit id="6b7c76bc79aa1c241ab4627feeb9ce54653580e5" translate="yes" xml:space="preserve">
          <source>Applies sparse assignment to individual values or slices in a Variable.</source>
          <target state="translated">Aplica una asignación escasa a los valores individuales o a los trozos de una variable.</target>
        </trans-unit>
        <trans-unit id="c85eadfb777aa08fe1a62f44f5f0f5abd25b64b4" translate="yes" xml:space="preserve">
          <source>Applies sparse subtraction to individual values or slices in a Variable.</source>
          <target state="translated">Aplica la sustracción escasa a los valores individuales o a los trozos de una variable.</target>
        </trans-unit>
        <trans-unit id="c32f8a50657579be35620f49c2fa542033ddb641" translate="yes" xml:space="preserve">
          <source>Applies sparse updates to a variable reference.</source>
          <target state="translated">Aplica actualizaciones escasas a una referencia variable.</target>
        </trans-unit>
        <trans-unit id="40acc12e4aabeecbfa6c11867632953784fa5970" translate="yes" xml:space="preserve">
          <source>Applies the given transform to each of the images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="665d1fda964f06c35453111817f521510679c7fd" translate="yes" xml:space="preserve">
          <source>Applies the gradient update to the embedding tables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02ffd5e4fd7f5250fac9cc6472dcfe7297a7c41d" translate="yes" xml:space="preserve">
          <source>Applies the normalization configuration in-place to a batch of inputs.</source>
          <target state="translated">Aplica la configuración de normalización en el lugar a un lote de entradas.</target>
        </trans-unit>
        <trans-unit id="8ac63a3a36407827bb5d0eee7bb134915d1fe7e4" translate="yes" xml:space="preserve">
          <source>Applies the rectified linear unit activation function.</source>
          <target state="translated">Aplica la función de activación de la unidad lineal rectificada.</target>
        </trans-unit>
        <trans-unit id="80ce915678f612beb901adc3d2cc7ca42fab76a1" translate="yes" xml:space="preserve">
          <source>Applies the sigmoid activation function. For small values (&amp;lt;-5), &lt;code&gt;sigmoid&lt;/code&gt; returns a value close to zero, and for large values (&amp;gt;5) the result of the function gets close to 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87510f2c159c87cfdf0a716eaaac506c09283dde" translate="yes" xml:space="preserve">
          <source>Applies the sigmoid activation function. The sigmoid function is defined as 1 divided by (1 + exp(-x)). It's curve is like an &quot;S&quot; and is like a smoothed version of the Heaviside (Unit Step Function) function. For small values (&amp;lt;-5) the sigmoid returns a value close to zero and for larger values (&amp;gt;5) the result of the function gets close to 1.</source>
          <target state="translated">Aplica la funci&amp;oacute;n de activaci&amp;oacute;n sigmoidea. La funci&amp;oacute;n sigmoidea se define como 1 dividido por (1 + exp (-x)). Su curva es como una &quot;S&quot; y es como una versi&amp;oacute;n suavizada de la funci&amp;oacute;n Heaviside (Unit Step Function). Para valores peque&amp;ntilde;os (&amp;lt;-5), el sigmoide devuelve un valor cercano a cero y para valores m&amp;aacute;s grandes (&amp;gt; 5) el resultado de la funci&amp;oacute;n se acerca a 1.</target>
        </trans-unit>
        <trans-unit id="1201eb9848c99dbb1cd93d0a6b8ee235743a80c3" translate="yes" xml:space="preserve">
          <source>Applies upper_bound(sorted_search_values, values) along each row.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bef49334c7de61f892658d723c2446b198bcdfad" translate="yes" xml:space="preserve">
          <source>Applies weight values to a &lt;code&gt;CategoricalColumn&lt;/code&gt;.</source>
          <target state="translated">Aplica valores de peso a una &lt;code&gt;CategoricalColumn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="02170b153eecb222f4f52c510af18adc444b460d" translate="yes" xml:space="preserve">
          <source>Apply 1D conv with un-shared weights.</source>
          <target state="translated">Aplique la convección 1D con pesos no compartidos.</target>
        </trans-unit>
        <trans-unit id="362fa60dda99a9ce0e2b371b494ba0ca2a380582" translate="yes" xml:space="preserve">
          <source>Apply 2D conv with un-shared weights.</source>
          <target state="translated">Aplicar convección 2D con pesos no compartidos.</target>
        </trans-unit>
        <trans-unit id="64da1c711583c758698fc3ded4f52accff2c61a0" translate="yes" xml:space="preserve">
          <source>Apply a model copy on each sub-batch. Every model copy is executed on a dedicated GPU.</source>
          <target state="translated">Aplique una copia modelo en cada sublote.Cada copia de modelo se ejecuta en una GPU dedicada.</target>
        </trans-unit>
        <trans-unit id="cf282f17624b0e4cb65903d39393edb427009a61" translate="yes" xml:space="preserve">
          <source>Apply additive zero-centered Gaussian noise.</source>
          <target state="translated">Aplicar aditivo de ruido gaussiano centrado en cero.</target>
        </trans-unit>
        <trans-unit id="93f08372a7ac5baf9833bbce9477d433e97bb876" translate="yes" xml:space="preserve">
          <source>Apply boolean mask to tensor.</source>
          <target state="translated">Aplique la máscara booleana al tensor.</target>
        </trans-unit>
        <trans-unit id="96a92f931396bd4b28350ddb3ca0745aa8660cc9" translate="yes" xml:space="preserve">
          <source>Apply dataset transformations to preprocess the data.</source>
          <target state="translated">Aplicar transformaciones de conjuntos de datos para preprocesar los datos.</target>
        </trans-unit>
        <trans-unit id="853324ac0b027968472d8535372b7cd2b6d23dc7" translate="yes" xml:space="preserve">
          <source>Apply gradients to variables.</source>
          <target state="translated">Aplicar gradientes a las variables.</target>
        </trans-unit>
        <trans-unit id="507238ee18ca8c1b85e90f2dd1ee9561dcc10c3b" translate="yes" xml:space="preserve">
          <source>Apply multiplicative 1-centered Gaussian noise.</source>
          <target state="translated">Aplica el ruido gaussiano multiplicador de 1 centro.</target>
        </trans-unit>
        <trans-unit id="9e86435756168ef228f1a566a784a7d7eb134976" translate="yes" xml:space="preserve">
          <source>Apply the averaged gradients to the variables.</source>
          <target state="translated">Aplicar los gradientes promediados a las variables.</target>
        </trans-unit>
        <trans-unit id="de7c827826bdde447eded62d34167f8efd0b1c22" translate="yes" xml:space="preserve">
          <source>Apply the processed gradients with &lt;code&gt;apply_gradients()&lt;/code&gt;.</source>
          <target state="translated">Aplique los degradados procesados ​​con &lt;code&gt;apply_gradients()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a1c175a2c37e15c1eaf427c609946fcb0b85424e" translate="yes" xml:space="preserve">
          <source>ApplyAdaMax</source>
          <target state="translated">ApplyAdaMax</target>
        </trans-unit>
        <trans-unit id="18aac2cfed3dc9374d089577ac094ec0cf245b3e" translate="yes" xml:space="preserve">
          <source>ApplyAdadelta</source>
          <target state="translated">ApplyAdadelta</target>
        </trans-unit>
        <trans-unit id="37be29e4c95a3ade2494262e2542f5a4bd2cf91a" translate="yes" xml:space="preserve">
          <source>ApplyAdagrad</source>
          <target state="translated">ApplyAdagrad</target>
        </trans-unit>
        <trans-unit id="ce29f31a1cb457e5f4c24f00a91ef62bbb88a969" translate="yes" xml:space="preserve">
          <source>ApplyAdagradDA</source>
          <target state="translated">ApplyAdagradDA</target>
        </trans-unit>
        <trans-unit id="1639d715b27f36bd0ffcc5aaf447c9b48514e4ae" translate="yes" xml:space="preserve">
          <source>ApplyAdagradV2</source>
          <target state="translated">ApplyAdagradV2</target>
        </trans-unit>
        <trans-unit id="c69deb1b582fcf283a0ac92d70d4797865f1acdf" translate="yes" xml:space="preserve">
          <source>ApplyAdam</source>
          <target state="translated">ApplyAdam</target>
        </trans-unit>
        <trans-unit id="d2b848289104f10a3fb9abe82639180820f9e013" translate="yes" xml:space="preserve">
          <source>ApplyAddSign</source>
          <target state="translated">ApplyAddSign</target>
        </trans-unit>
        <trans-unit id="f1e94896acf2dd6b5f9b08469d057a837c3d0332" translate="yes" xml:space="preserve">
          <source>ApplyCenteredRMSProp</source>
          <target state="translated">ApplyCenteredRMSProp</target>
        </trans-unit>
        <trans-unit id="9d0d30df18487aba4bd49baeca9fc559c5bba9e3" translate="yes" xml:space="preserve">
          <source>ApplyFtrl</source>
          <target state="translated">ApplyFtrl</target>
        </trans-unit>
        <trans-unit id="ec94d8a134fd46fd1d201b49e8a408a233f60b71" translate="yes" xml:space="preserve">
          <source>ApplyFtrlV2</source>
          <target state="translated">ApplyFtrlV2</target>
        </trans-unit>
        <trans-unit id="1810a8589bba99fd29fc1b7e3b0cbf96d8474926" translate="yes" xml:space="preserve">
          <source>ApplyGradientDescent</source>
          <target state="translated">ApplyGradientDescent</target>
        </trans-unit>
        <trans-unit id="106d1e49fd9921f1ab4591eaaeaeaf53973c88ff" translate="yes" xml:space="preserve">
          <source>ApplyMomentum</source>
          <target state="translated">ApplyMomentum</target>
        </trans-unit>
        <trans-unit id="790d46ab78cbffe6ffaa156612b5fd8761b0d800" translate="yes" xml:space="preserve">
          <source>ApplyPowerSign</source>
          <target state="translated">ApplyPowerSign</target>
        </trans-unit>
        <trans-unit id="55db554c84d312c4d46bc305795e6fa5b12fc865" translate="yes" xml:space="preserve">
          <source>ApplyProximalAdagrad</source>
          <target state="translated">ApplyProximalAdagrad</target>
        </trans-unit>
        <trans-unit id="f02835851b1f19113588e3f7966dfbe9a2763680" translate="yes" xml:space="preserve">
          <source>ApplyProximalGradientDescent</source>
          <target state="translated">ApplyProximalGradientDescent</target>
        </trans-unit>
        <trans-unit id="b4f5b8dc92789a5a42a100ba07755e714fade370" translate="yes" xml:space="preserve">
          <source>ApplyRMSProp</source>
          <target state="translated">ApplyRMSProp</target>
        </trans-unit>
        <trans-unit id="350b8bd36622c9e7d873096cd233b85e66ac26f0" translate="yes" xml:space="preserve">
          <source>ApproximateEqual</source>
          <target state="translated">ApproximateEqual</target>
        </trans-unit>
        <trans-unit id="acd24345f7239794b489cb1833ed0f89b2235c4c" translate="yes" xml:space="preserve">
          <source>Arbitrary, although all dimensions in the input shape must be known/fixed. Use the keyword argument &lt;code&gt;input_shape&lt;/code&gt; (tuple of integers, does not include the samples/batch size axis) when using this layer as the first layer in a model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="900d132c213ec4343c6fc0336a260cc881ec45fd" translate="yes" xml:space="preserve">
          <source>Arbitrary, although all dimensions in the input shaped must be fixed. Use the keyword argument &lt;code&gt;input_shape&lt;/code&gt; (tuple of integers, does not include the samples axis) when using this layer as the first layer in a model.</source>
          <target state="translated">Arbitrario, aunque todas las dimensiones en la forma de entrada deben ser fijas. Use el argumento de palabra clave &lt;code&gt;input_shape&lt;/code&gt; (tupla de enteros, no incluye el eje de muestras) cuando use esta capa como la primera capa en un modelo.</target>
        </trans-unit>
        <trans-unit id="294570688d39210449c9fe51f0cb6f6782e0a9bc" translate="yes" xml:space="preserve">
          <source>Arbitrary.</source>
          <target state="translated">Arbitrary.</target>
        </trans-unit>
        <trans-unit id="38a40de209bca105dfe9d10fbb09f4dd840349e6" translate="yes" xml:space="preserve">
          <source>Arbitrary. Use the keyword argument &lt;code&gt;input_shape&lt;/code&gt; (tuple of integers, does not include the batch axis) when using this layer as the first layer in a model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2c166b8f975246ab2963b396822d9310c9f621d" translate="yes" xml:space="preserve">
          <source>Arbitrary. Use the keyword argument &lt;code&gt;input_shape&lt;/code&gt; (tuple of integers, does not include the samples axis) when using this layer as the first layer in a model.</source>
          <target state="translated">Arbitrario. Use el argumento de palabra clave &lt;code&gt;input_shape&lt;/code&gt; (tupla de enteros, no incluye el eje de muestras) cuando use esta capa como la primera capa en un modelo.</target>
        </trans-unit>
        <trans-unit id="2d060ab211c6757d56f510641771ba074ab4c476" translate="yes" xml:space="preserve">
          <source>Arbitrary. Use the keyword argument input_shape (tuple of integers, does not include the samples axis) when using this layer as the first layer in a model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c218db9434c4dde838cc705c86cbf77552ba3048" translate="yes" xml:space="preserve">
          <source>Archive format to try for extracting the file. Options are &lt;code&gt;'auto'&lt;/code&gt;, &lt;code&gt;'tar'&lt;/code&gt;, &lt;code&gt;'zip'&lt;/code&gt;, and &lt;code&gt;None&lt;/code&gt;. &lt;code&gt;'tar'&lt;/code&gt; includes tar, tar.gz, and tar.bz files. The default &lt;code&gt;'auto'&lt;/code&gt; corresponds to &lt;code&gt;['tar', 'zip']&lt;/code&gt;. None or an empty list will return no matches found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffc2c4751c406dfe729e68e12fca79cd5235bbd5" translate="yes" xml:space="preserve">
          <source>ArgMax</source>
          <target state="translated">ArgMax</target>
        </trans-unit>
        <trans-unit id="ff6dd3f82d1ef3b64409b1d48173a3489bd3a0de" translate="yes" xml:space="preserve">
          <source>ArgMin</source>
          <target state="translated">ArgMin</target>
        </trans-unit>
        <trans-unit id="4bf0024c4bc943f998126635e2b2826496ec8582" translate="yes" xml:space="preserve">
          <source>Args</source>
          <target state="translated">Args</target>
        </trans-unit>
        <trans-unit id="31e4e568791882970f733d6a8daa401f444e06c4" translate="yes" xml:space="preserve">
          <source>Args x: Input to the GRU cell. h_prev: State input from the previous GRU cell. w_ru: Weight matrix for the reset and update gate. w_c: Weight matrix for the cell connection gate. b_ru: Bias vector for the reset and update gate. b_c: Bias vector for the cell connection gate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16d824a3e74827a5dc02702fdf32d46fc19b8c2f" translate="yes" xml:space="preserve">
          <source>Args x: Input to the GRU cell. h_prev: State input from the previous GRU cell. w_ru: Weight matrix for the reset and update gate. w_c: Weight matrix for the cell connection gate. b_ru: Bias vector for the reset and update gate. b_c: Bias vector for the cell connection gate. r: Output of the reset gate. u: Output of the update gate. c: Output of the cell connection gate. d_h: Gradients of the h_new wrt to objective function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6075aed00d09ffa3057c99d13847e6be9606a66" translate="yes" xml:space="preserve">
          <source>Args:</source>
          <target state="translated">Args:</target>
        </trans-unit>
        <trans-unit id="cce58fed479e7208be4871147aa51dd1732f49a7" translate="yes" xml:space="preserve">
          <source>Args: a: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;qint16&lt;/code&gt;, &lt;code&gt;quint16&lt;/code&gt;. A matrix to be multiplied. Must be a two-dimensional tensor of type &lt;code&gt;quint8&lt;/code&gt;. b: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;qint16&lt;/code&gt;, &lt;code&gt;quint16&lt;/code&gt;. A matrix to be multiplied and must be a two-dimensional tensor of type &lt;code&gt;qint8&lt;/code&gt;. bias: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. A 1D bias tensor with size matching with inner dimension of &lt;code&gt;b&lt;/code&gt; (after being transposed if &lt;code&gt;transposed_b&lt;/code&gt; is non-zero). min_a: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The float value that the lowest quantized &lt;code&gt;a&lt;/code&gt; value represents. max_a: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The float value that the highest quantized &lt;code&gt;a&lt;/code&gt; value represents. min_b: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The float value that the lowest quantized &lt;code&gt;b&lt;/code&gt; value represents. max_b: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The float value that the highest quantized &lt;code&gt;b&lt;/code&gt; value represents. Toutput: An optional &lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.qint8, tf.quint8, tf.qint32, tf.qint16, tf.quint16&lt;/code&gt;. Defaults to &lt;a href=&quot;../../tf#qint32&quot;&gt;&lt;code&gt;tf.qint32&lt;/code&gt;&lt;/a&gt;. transpose_a: An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If true, &lt;code&gt;a&lt;/code&gt; is transposed before multiplication. transpose_b: An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If true, &lt;code&gt;b&lt;/code&gt; is transposed before multiplication. input_quant_mode: An optional &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;MIN_FIRST&quot;, &quot;SCALED&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;MIN_FIRST&quot;&lt;/code&gt;. Input data quantization mode. Either MIN_FIRST(default) or SCALED. name: A name for the operation (optional).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd529b0f6b1b69d09a638482abe8045bebc4db4f" translate="yes" xml:space="preserve">
          <source>Args: a: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;qint16&lt;/code&gt;, &lt;code&gt;quint16&lt;/code&gt;. A matrix to be multiplied. Must be a two-dimensional tensor of type &lt;code&gt;quint8&lt;/code&gt;. b: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;qint16&lt;/code&gt;, &lt;code&gt;quint16&lt;/code&gt;. A matrix to be multiplied and must be a two-dimensional tensor of type &lt;code&gt;qint8&lt;/code&gt;. bias: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;. A 1D bias tensor with size matching inner dimension of &lt;code&gt;b&lt;/code&gt; (after being transposed if &lt;code&gt;transposed_b&lt;/code&gt; is non-zero). min_a: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The float value that the lowest quantized &lt;code&gt;a&lt;/code&gt; value represents. max_a: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The float value that the highest quantized &lt;code&gt;a&lt;/code&gt; value represents. min_b: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The float value that the lowest quantized &lt;code&gt;b&lt;/code&gt; value represents. max_b: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The float value that the highest quantized &lt;code&gt;b&lt;/code&gt; value represents. Toutput: An optional &lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.qint8, tf.quint8, tf.qint32, tf.qint16, tf.quint16&lt;/code&gt;. Defaults to &lt;a href=&quot;../../tf#qint32&quot;&gt;&lt;code&gt;tf.qint32&lt;/code&gt;&lt;/a&gt;. transpose_a: An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If true, &lt;code&gt;a&lt;/code&gt; is transposed before multiplication. transpose_b: An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If true, &lt;code&gt;b&lt;/code&gt; is transposed before multiplication. input_quant_mode: An optional &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;MIN_FIRST&quot;, &quot;SCALED&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;MIN_FIRST&quot;&lt;/code&gt;. Input data quantization mode. Either MIN_FIRST(default) or SCALED. name: A name for the operation (optional).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="828dca447e25c7474d2a0ffacd5aff6a2929205a" translate="yes" xml:space="preserve">
          <source>Args: a: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;qint16&lt;/code&gt;, &lt;code&gt;quint16&lt;/code&gt;. A matrix to be multiplied. Must be a two-dimensional tensor of type &lt;code&gt;quint8&lt;/code&gt;. b: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;qint16&lt;/code&gt;, &lt;code&gt;quint16&lt;/code&gt;. A matrix to be multiplied and must be a two-dimensional tensor of type &lt;code&gt;qint8&lt;/code&gt;. bias: A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;. A 1D bias tensor with size matching with inner dimension of &lt;code&gt;b&lt;/code&gt; (after being transposed if &lt;code&gt;transposed_b&lt;/code&gt; is non-zero). min_a: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The float value that the lowest quantized &lt;code&gt;a&lt;/code&gt; value represents. max_a: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The float value that the highest quantized &lt;code&gt;a&lt;/code&gt; value represents. min_b: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The float value that the lowest quantized &lt;code&gt;b&lt;/code&gt; value represents. max_b: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The float value that the highest quantized &lt;code&gt;b&lt;/code&gt; value represents. min_freezed_output: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. The float value that the highest quantized output value after requantize. max_freezed_output: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;float32&lt;/code&gt;. Toutput: An optional &lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.qint8, tf.quint8, tf.qint32, tf.qint16, tf.quint16&lt;/code&gt;. Defaults to &lt;a href=&quot;../../tf#quint8&quot;&gt;&lt;code&gt;tf.quint8&lt;/code&gt;&lt;/a&gt;. transpose_a: An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If true, &lt;code&gt;a&lt;/code&gt; is transposed before multiplication. transpose_b: An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If true, &lt;code&gt;b&lt;/code&gt; is transposed before multiplication. input_quant_mode: An optional &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;MIN_FIRST&quot;, &quot;SCALED&quot;&lt;/code&gt;. Defaults to &lt;code&gt;&quot;MIN_FIRST&quot;&lt;/code&gt;. Input data quantization mode. Either MIN_FIRST(default) or SCALED. name: A name for the operation (optional).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99273381f137aff4d193bcbf6b294f3762ee5d9d" translate="yes" xml:space="preserve">
          <source>Args: can only have following four arguments in any order:</source>
          <target state="translated">Args:sólo puede tener los siguientes cuatro argumentos en cualquier orden:</target>
        </trans-unit>
        <trans-unit id="7ed01fb9805bc8c4a695e5dc56bb75484b11c316" translate="yes" xml:space="preserve">
          <source>Args: dataset: &lt;a href=&quot;../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; to be prefetched to device.</source>
          <target state="translated">Args: dataset: &lt;a href=&quot;../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; que se buscar&amp;aacute; previamente en el dispositivo.</target>
        </trans-unit>
        <trans-unit id="5fe112de17c85e3571d0874cd9f803299b9de474" translate="yes" xml:space="preserve">
          <source>Args: dataset: &lt;a href=&quot;../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; to be prefetched to device.</source>
          <target state="translated">Args: dataset: &lt;a href=&quot;../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; que se buscar&amp;aacute; previamente en el dispositivo.</target>
        </trans-unit>
        <trans-unit id="aedf1c882006ab95d1314645a164bafa4c4fd954" translate="yes" xml:space="preserve">
          <source>Args: image: 4-D Tensor of shape &lt;code&gt;[batch, height, width, channels]&lt;/code&gt; or 3-D Tensor of shape &lt;code&gt;[height, width, channels]&lt;/code&gt;. k: A scalar integer. The number of times the image is rotated by 90 degrees. name: A name for this operation (optional).</source>
          <target state="translated">Args: imagen: Tensor de forma 4-D &lt;code&gt;[batch, height, width, channels]&lt;/code&gt; o Tensor de forma 3-D &lt;code&gt;[height, width, channels]&lt;/code&gt; . k: un entero escalar. El n&amp;uacute;mero de veces que la imagen se gira 90 grados. nombre: un nombre para esta operaci&amp;oacute;n (opcional).</target>
        </trans-unit>
        <trans-unit id="22b15cbb658daedfac47fd496b831c94bf579b50" translate="yes" xml:space="preserve">
          <source>Args: index: 0-D. int32 scalar with the index to write to. value: N-D. Tensor of type &lt;code&gt;dtype&lt;/code&gt;. The Tensor to write to this index. name: A name for the operation (optional).</source>
          <target state="translated">Args: &amp;iacute;ndice: 0-D. int32 escalar con el &amp;iacute;ndice para escribir. valor: ND. Tensor de tipo &lt;code&gt;dtype&lt;/code&gt; . El tensor para escribir en este &amp;iacute;ndice. nombre: un nombre para la operaci&amp;oacute;n (opcional).</target>
        </trans-unit>
        <trans-unit id="c844d37451ea04088a15d9dab260b353e4e942d7" translate="yes" xml:space="preserve">
          <source>Args: indices: A &lt;code&gt;1-D&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; taking values in &lt;code&gt;[0, max_value)&lt;/code&gt;. If the &lt;code&gt;TensorArray&lt;/code&gt; is not dynamic, &lt;code&gt;max_value=size()&lt;/code&gt;. value: (N+1)-D. Tensor of type &lt;code&gt;dtype&lt;/code&gt;. The Tensor to unpack. name: A name for the operation (optional).</source>
          <target state="translated">Args: &amp;iacute;ndices: un &lt;code&gt;Tensor&lt;/code&gt; &lt;code&gt;1-D&lt;/code&gt; que toma valores en &lt;code&gt;[0, max_value)&lt;/code&gt; . Si &lt;code&gt;TensorArray&lt;/code&gt; no es din&amp;aacute;mico, &lt;code&gt;max_value=size()&lt;/code&gt; . valor: (N + 1) -D. Tensor de tipo &lt;code&gt;dtype&lt;/code&gt; . El tensor para desempacar. nombre: un nombre para la operaci&amp;oacute;n (opcional).</target>
        </trans-unit>
        <trans-unit id="a4669113f9af08b76c1c27af4bf73de0363b2c6b" translate="yes" xml:space="preserve">
          <source>Args: input: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. The text to be processed. pattern: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. The regular expression to be matched in the &lt;code&gt;input&lt;/code&gt; strings. rewrite: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. The rewrite string to be substituted for the &lt;code&gt;pattern&lt;/code&gt; expression where it is matched in the &lt;code&gt;input&lt;/code&gt; strings. replace_global: An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;True&lt;/code&gt;. If True, the replacement is global (that is, all matches of the &lt;code&gt;pattern&lt;/code&gt; regular expression in each input string are rewritten), otherwise the &lt;code&gt;rewrite&lt;/code&gt; substitution is only made for the first &lt;code&gt;pattern&lt;/code&gt; match. name: A name for the operation (optional).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f26b500bb18c5a1179d7f87e0d0f67b87c50dfea" translate="yes" xml:space="preserve">
          <source>Args: new_vocab: [Required] A path to the new vocabulary file (used with the model to be trained). new_vocab_size: [Required] An integer indicating how many entries of the new vocabulary will used in training. num_oov_buckets: [Required] An integer indicating how many OOV buckets are associated with the vocabulary. old_vocab: [Required] A path to the old vocabulary file (used with the checkpoint to be warm-started from). old_vocab_size: [Optional] An integer indicating how many entries of the old vocabulary were used in the creation of the checkpoint. If not provided, the entire old vocabulary will be used. backup_initializer: [Optional] A variable initializer used for variables corresponding to new vocabulary entries and OOV. If not provided, these entries will be zero-initialized. axis: [Optional] Denotes what axis the vocabulary corresponds to. The default, 0, corresponds to the most common use case (embeddings or linear weights for binary classification / regression). An axis of 1 could be used for warm-starting output layers with class vocabularies.</source>
          <target state="translated">Args:new_vocab:[Requerido]Una ruta al nuevo archivo de vocabulario (usado con el modelo a entrenar).new_vocab_size:[Requerido]Un número entero que indica cuántas entradas del nuevo vocabulario se usarán en el entrenamiento.num_oov_buckets:[Requerido]Un entero que indica cuántos cubos de OOV se asocian con el vocabulario.old_vocab:[Requerido]Una ruta al archivo de vocabulario antiguo (usado con el punto de control del que se va a empezar a calentar).old_vocab_size:[Opcional]Un número entero que indica cuántas entradas del vocabulario antiguo se utilizaron en la creación del punto de control.Si no se proporciona,se utilizará todo el vocabulario antiguo.backup_initializer:[Opcional]Un inicializador de variables usado para las variables correspondientes a las nuevas entradas de vocabulario y OOV.Si no se proporciona,estas entradas se inicializarán a cero.axis:[Opcional]Denota a qué eje corresponde el vocabulario.El valor por defecto,0,corresponde al caso de uso más común (incrustaciones o pesos lineales para la clasificación binaria/regresión).Un eje de 1 podría ser usado para capas de salida de arranque en caliente con vocabularios de clase.</target>
        </trans-unit>
        <trans-unit id="72b3ffd4cb8d07f6cc2b8608b2ed5ff34a724751" translate="yes" xml:space="preserve">
          <source>Args: ragged_values: A list of &lt;code&gt;Tensor&lt;/code&gt; objects with types from: &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;. The values tensor for each RaggedTensor input. ragged_row_splits: A list of &lt;code&gt;Tensor&lt;/code&gt; objects with types from: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. The row_splits tensor for each RaggedTensor input. sparse_indices: A list of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;int64&lt;/code&gt;. The indices tensor for each SparseTensor input. sparse_values: A list of &lt;code&gt;Tensor&lt;/code&gt; objects with types from: &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;. The values tensor for each SparseTensor input. sparse_shape: A list with the same length as &lt;code&gt;sparse_indices&lt;/code&gt; of &lt;code&gt;Tensor&lt;/code&gt; objects with type &lt;code&gt;int64&lt;/code&gt;. The dense_shape tensor for each SparseTensor input. dense_inputs: A list of &lt;code&gt;Tensor&lt;/code&gt; objects with types from: &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;. The tf.Tensor inputs. input_order: A &lt;code&gt;string&lt;/code&gt;. String specifying the tensor type for each input. The &lt;code&gt;i&lt;/code&gt;th character in this string specifies the type of the &lt;code&gt;i&lt;/code&gt;th input, and is one of: 'R' (ragged), 'D' (dense), or 'S' (sparse). This attr is used to ensure that the crossed values are combined in the order of the inputs from the call to tf.ragged.cross. hashed_output: A &lt;code&gt;bool&lt;/code&gt;. num_buckets: An &lt;code&gt;int&lt;/code&gt; that is &lt;code&gt;&amp;gt;= 0&lt;/code&gt;. hash_key: An &lt;code&gt;int&lt;/code&gt;. out_values_type: A &lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.int64, tf.string&lt;/code&gt;. out_row_splits_type: A &lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; from: &lt;code&gt;tf.int32, tf.int64&lt;/code&gt;. name: A name for the operation (optional).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8190a5f127639be15de07ca0b86e3096cba5bdcf" translate="yes" xml:space="preserve">
          <source>Args: serialized: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. A scalar or vector containing binary serialized SequenceExample protos. debug_name: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. A scalar or vector containing the names of the serialized protos. May contain, for example, table key (descriptive) name for the corresponding serialized proto. This is purely useful for debugging purposes, and the presence of values here has no effect on the output. May also be an empty vector if no name is available. context_sparse_keys: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. The keys expected in the Examples' features associated with context_sparse values. context_dense_keys: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. The keys expected in the SequenceExamples' context features associated with dense values. context_ragged_keys: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. The keys expected in the Examples' features associated with context_ragged values. feature_list_sparse_keys: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. The keys expected in the FeatureLists associated with sparse values. feature_list_dense_keys: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. The keys expected in the SequenceExamples' feature_lists associated with lists of dense values. feature_list_ragged_keys: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt;. The keys expected in the FeatureLists associated with ragged values. feature_list_dense_missing_assumed_empty: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;bool&lt;/code&gt;. A vector corresponding 1:1 with feature_list_dense_keys, indicating which features may be missing from the SequenceExamples. If the associated FeatureList is missing, it is treated as empty. context_dense_defaults: A list of &lt;code&gt;Tensor&lt;/code&gt; objects with types from: &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;. A list of Ncontext_dense Tensors (some may be empty). context_dense_defaults[j] provides default values when the SequenceExample's context map lacks context_dense_key[j]. If an empty Tensor is provided for context_dense_defaults[j], then the Feature context_dense_keys[j] is required. The input type is inferred from context_dense_defaults[j], even when it's empty. If context_dense_defaults[j] is not empty, its shape must match context_dense_shapes[j]. Ncontext_sparse: An optional &lt;code&gt;int&lt;/code&gt; that is &lt;code&gt;&amp;gt;= 0&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;. context_sparse_types: An optional list of &lt;code&gt;tf.DTypes&lt;/code&gt; from: &lt;code&gt;tf.float32, tf.int64, tf.string&lt;/code&gt;. Defaults to &lt;code&gt;[]&lt;/code&gt;. A list of Ncontext_sparse types; the data types of data in each context Feature given in context_sparse_keys. Currently the ParseSingleSequenceExample supports DT_FLOAT (FloatList), DT_INT64 (Int64List), and DT_STRING (BytesList). context_ragged_value_types: An optional list of &lt;code&gt;tf.DTypes&lt;/code&gt; from: &lt;code&gt;tf.float32, tf.int64, tf.string&lt;/code&gt;. Defaults to &lt;code&gt;[]&lt;/code&gt;. RaggedTensor.value dtypes for the ragged context features. context_ragged_split_types: An optional list of &lt;code&gt;tf.DTypes&lt;/code&gt; from: &lt;code&gt;tf.int32, tf.int64&lt;/code&gt;. Defaults to &lt;code&gt;[]&lt;/code&gt;. RaggedTensor.row_split dtypes for the ragged context features. context_dense_shapes: An optional list of shapes (each a &lt;a href=&quot;../tensorshape&quot;&gt;&lt;code&gt;tf.TensorShape&lt;/code&gt;&lt;/a&gt; or list of &lt;code&gt;ints&lt;/code&gt;). Defaults to &lt;code&gt;[]&lt;/code&gt;. A list of Ncontext_dense shapes; the shapes of data in each context Feature given in context_dense_keys. The number of elements in the Feature corresponding to context_dense_key[j] must always equal context_dense_shapes[j].NumEntries(). The shape of context_dense_values[j] will match context_dense_shapes[j]. Nfeature_list_sparse: An optional &lt;code&gt;int&lt;/code&gt; that is &lt;code&gt;&amp;gt;= 0&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;. Nfeature_list_dense: An optional &lt;code&gt;int&lt;/code&gt; that is &lt;code&gt;&amp;gt;= 0&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;. feature_list_dense_types: An optional list of &lt;code&gt;tf.DTypes&lt;/code&gt; from: &lt;code&gt;tf.float32, tf.int64, tf.string&lt;/code&gt;. Defaults to &lt;code&gt;[]&lt;/code&gt;. feature_list_sparse_types: An optional list of &lt;code&gt;tf.DTypes&lt;/code&gt; from: &lt;code&gt;tf.float32, tf.int64, tf.string&lt;/code&gt;. Defaults to &lt;code&gt;[]&lt;/code&gt;. A list of Nfeature_list_sparse types; the data types of data in each FeatureList given in feature_list_sparse_keys. Currently the ParseSingleSequenceExample supports DT_FLOAT (FloatList), DT_INT64 (Int64List), and DT_STRING (BytesList). feature_list_ragged_value_types: An optional list of &lt;code&gt;tf.DTypes&lt;/code&gt; from: &lt;code&gt;tf.float32, tf.int64, tf.string&lt;/code&gt;. Defaults to &lt;code&gt;[]&lt;/code&gt;. RaggedTensor.value dtypes for the ragged FeatureList features. feature_list_ragged_split_types: An optional list of &lt;code&gt;tf.DTypes&lt;/code&gt; from: &lt;code&gt;tf.int32, tf.int64&lt;/code&gt;. Defaults to &lt;code&gt;[]&lt;/code&gt;. RaggedTensor.row_split dtypes for the ragged FeatureList features. feature_list_dense_shapes: An optional list of shapes (each a &lt;a href=&quot;../tensorshape&quot;&gt;&lt;code&gt;tf.TensorShape&lt;/code&gt;&lt;/a&gt; or list of &lt;code&gt;ints&lt;/code&gt;). Defaults to &lt;code&gt;[]&lt;/code&gt;. A list of Nfeature_list_dense shapes; the shapes of data in each FeatureList given in feature_list_dense_keys. The shape of each Feature in the FeatureList corresponding to feature_list_dense_key[j] must always equal feature_list_dense_shapes[j].NumEntries(). name: A name for the operation (optional).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="653acb8f418efe5b66d2f679275a8bf9c9feb480" translate="yes" xml:space="preserve">
          <source>Args: shape: A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;. 1-D. Represents the shape of the output tensor. dtype: A &lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt;. init: An optional &lt;code&gt;bool&lt;/code&gt;. Defaults to &lt;code&gt;False&lt;/code&gt;. If True, initialize the returned tensor with the default value of dtype. Otherwise, the implementation is free not to initializethe tensor's content. name: A name for the operation (optional).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90146cd2dc8c1add6554d7d4975735d3b018367b" translate="yes" xml:space="preserve">
          <source>Args: tensor: Input tensor to annotate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="432eef309fad267d677ee0f6023e7a10ba44393d" translate="yes" xml:space="preserve">
          <source>Args: tensor: Input tensor to annotate. partition_dimensions: An unnested list of integers with the size equal to rank of &lt;code&gt;tensor&lt;/code&gt; specifying how &lt;code&gt;tensor&lt;/code&gt; will be partitioned. The product of all elements in &lt;code&gt;partition_dimensions&lt;/code&gt; must be equal to the total number of logical devices per replica.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7120edd36dda78441c0c29396142b67d6d09a092" translate="yes" xml:space="preserve">
          <source>Args: value: (N+1)-D. Tensor of type &lt;code&gt;dtype&lt;/code&gt;. The Tensor to split. lengths: 1-D. int32 vector with the lengths to use when splitting &lt;code&gt;value&lt;/code&gt; along its first dimension. name: A name for the operation (optional).</source>
          <target state="translated">Args: valor: (N + 1) -D. Tensor de tipo &lt;code&gt;dtype&lt;/code&gt; . El tensor para dividir. longitudes: 1-D. int32 con las longitudes que se utilizar&amp;aacute;n al dividir el &lt;code&gt;value&lt;/code&gt; largo de su primera dimensi&amp;oacute;n. nombre: un nombre para la operaci&amp;oacute;n (opcional).</target>
        </trans-unit>
        <trans-unit id="a8e409c39fb7dfbfe2b8cd9ac2e2b122265dd69d" translate="yes" xml:space="preserve">
          <source>Args: value: (N+1)-D. Tensor of type &lt;code&gt;dtype&lt;/code&gt;. The Tensor to unstack. name: A name for the operation (optional).</source>
          <target state="translated">Args: valor: (N + 1) -D. Tensor de tipo &lt;code&gt;dtype&lt;/code&gt; . El tensor para desapilar. nombre: un nombre para la operaci&amp;oacute;n (opcional).</target>
        </trans-unit>
        <trans-unit id="c194197772b0e84ad6947e19dc6c2eeee4510a35" translate="yes" xml:space="preserve">
          <source>Argument parser classes must be stateless, since instances are cached and shared between flags. Initializer arguments are allowed, but all member variables must be derived from initializer arguments only.</source>
          <target state="translated">Las clases de analizadores de argumentos deben ser apátridas,ya que los casos se almacenan y comparten entre las banderas.Se permiten los argumentos de inicialización,pero todas las variables miembros deben derivarse sólo de los argumentos de inicialización.</target>
        </trans-unit>
        <trans-unit id="0a9b4c8bc5bcfa2cbd3883d639cd6b45e1a1effa" translate="yes" xml:space="preserve">
          <source>ArgumentParser, used to parse the flag arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d4eca328e997093e4ca3eaecc17cde1b47fbd1b" translate="yes" xml:space="preserve">
          <source>ArgumentSerializer, the flag serializer instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbb9fa252e60809efa55a7ad83aea5438ef56753" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">Arguments</target>
        </trans-unit>
        <trans-unit id="1c0c8a9f198462474b49e918f6a0268a10542dd6" translate="yes" xml:space="preserve">
          <source>Arguments are broadcast when possible.</source>
          <target state="translated">Los argumentos se difunden cuando es posible.</target>
        </trans-unit>
        <trans-unit id="bd1812ffd42776cec2cb939fe4cd8f63675bbafd" translate="yes" xml:space="preserve">
          <source>Arguments are the same as StridedSliceGrad with the exception that &lt;code&gt;dy&lt;/code&gt; is the input gradient to be propagated and &lt;code&gt;shape&lt;/code&gt; is the shape of &lt;code&gt;StridedSlice&lt;/code&gt;'s &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25209d7cef73b402cc5605006df21526b5ce7f98" translate="yes" xml:space="preserve">
          <source>Arguments for &lt;code&gt;op&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9df345a1aadc6f40499342ee4b8a92de5d32def1" translate="yes" xml:space="preserve">
          <source>Arguments for compute_gradients().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18a4967874b121be088f8a6ca0013944b7402090" translate="yes" xml:space="preserve">
          <source>Arguments for get_slot().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0518f9d17ce6a281a9a9cc7fd3c8f463d99c3d2" translate="yes" xml:space="preserve">
          <source>Arguments that accept &lt;code&gt;RaggedTensor&lt;/code&gt;s are marked in &lt;strong&gt;bold&lt;/strong&gt;.</source>
          <target state="translated">Los argumentos que aceptan &lt;code&gt;RaggedTensor&lt;/code&gt; s est&amp;aacute;n marcados en &lt;strong&gt;negrita&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="30f3a41802f287c8a9b6ceebacaff193a1850c20" translate="yes" xml:space="preserve">
          <source>Arguments to &lt;code&gt;matmul&lt;/code&gt;, &lt;code&gt;matvec&lt;/code&gt;, &lt;code&gt;solve&lt;/code&gt;, and &lt;code&gt;solvevec&lt;/code&gt; may either be single &lt;code&gt;Tensor&lt;/code&gt;s or lists of &lt;code&gt;Tensor&lt;/code&gt;s that are interpreted as blocks. The &lt;code&gt;j&lt;/code&gt;th element of a blockwise list of &lt;code&gt;Tensor&lt;/code&gt;s must have dimensions that match &lt;code&gt;opj&lt;/code&gt; for the given method. If a list of blocks is input, then a list of blocks is returned as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18b9c00e61d4ab2fa61c0032b93fb625d273e10d" translate="yes" xml:space="preserve">
          <source>Arguments to methods such as &lt;code&gt;matmul&lt;/code&gt; or &lt;code&gt;solve&lt;/code&gt; must be &lt;code&gt;DTYPE&lt;/code&gt;.</source>
          <target state="translated">Los argumentos de m&amp;eacute;todos como &lt;code&gt;matmul&lt;/code&gt; o &lt;code&gt;solve&lt;/code&gt; deben ser &lt;code&gt;DTYPE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="501ff1364755855c738caddf60d2adde3513cae3" translate="yes" xml:space="preserve">
          <source>Arguments to print to &lt;code&gt;sys.stdout&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0478ca5f4c068ca3ac12f9474f6a15865ce9053" translate="yes" xml:space="preserve">
          <source>Arguments:</source>
          <target state="translated">Arguments:</target>
        </trans-unit>
        <trans-unit id="08bbb36c1927c315e66201ac1ecc46fe1290f9e7" translate="yes" xml:space="preserve">
          <source>Array of indices of missing devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1dc1b9b4cedd553c7db9ee4e2600c1184509c19" translate="yes" xml:space="preserve">
          <source>Array of ints. Axes along which to compute mean and variance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="967980a095869feb83958043d058e33f8809adbe" translate="yes" xml:space="preserve">
          <source>As a convention, &quot;0&quot; does not stand for a specific word, but instead is used to encode any unknown word.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fda28ea64df8125e8acbee21bfd5874e83a1798a" translate="yes" xml:space="preserve">
          <source>As a multi-worker strategy, &lt;a href=&quot;multiworkermirroredstrategy&quot;&gt;&lt;code&gt;tf.distribute.experimental.MultiWorkerMirroredStrategy&lt;/code&gt;&lt;/a&gt; provides the associated &lt;a href=&quot;../cluster_resolver/clusterresolver&quot;&gt;&lt;code&gt;tf.distribute.cluster_resolver.ClusterResolver&lt;/code&gt;&lt;/a&gt;. If the user provides one in &lt;code&gt;__init__&lt;/code&gt;, that instance is returned; if the user does not, a default &lt;code&gt;TFConfigClusterResolver&lt;/code&gt; is provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a616eade29a2a9b3e41fce02304170740b4fc369" translate="yes" xml:space="preserve">
          <source>As a safe-guard, the returned function will raise a &lt;code&gt;ValueError&lt;/code&gt; after the first call if trainable variables are created by calling &lt;a href=&quot;../../variable&quot;&gt;&lt;code&gt;tf.Variable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Como medida de seguridad, la funci&amp;oacute;n devuelta generar&amp;aacute; un &lt;code&gt;ValueError&lt;/code&gt; despu&amp;eacute;s de la primera llamada si se crean variables entrenables llamando a &lt;a href=&quot;../../variable&quot;&gt; &lt;code&gt;tf.Variable&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="17af51d3b4099b8f62a01fceded19338f6f0793d" translate="yes" xml:space="preserve">
          <source>As a special case, exceptions used for control flow, such as &lt;code&gt;OutOfRangeError&lt;/code&gt; which reports that input queues are exhausted, are not raised again from the &lt;code&gt;with&lt;/code&gt; block: they indicate a clean termination of the training loop and are considered normal termination.</source>
          <target state="translated">Como caso especial, las excepciones utilizadas para el flujo de control, como &lt;code&gt;OutOfRangeError&lt;/code&gt; , que informa que las colas de entrada est&amp;aacute;n agotadas, no se vuelven a generar desde el bloque &lt;code&gt;with&lt;/code&gt; : indican una terminaci&amp;oacute;n limpia del ciclo de entrenamiento y se consideran terminaci&amp;oacute;n normal.</target>
        </trans-unit>
        <trans-unit id="309c55c40513e9e45bd9d1f67df49029d3c9deff" translate="yes" xml:space="preserve">
          <source>As above, simply calling &lt;a href=&quot;transpose&quot;&gt;&lt;code&gt;tf.transpose&lt;/code&gt;&lt;/a&gt; will default to &lt;code&gt;perm=[2,1,0]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c92510f450d7f45721d2b26fa4c29176a31824e4" translate="yes" xml:space="preserve">
          <source>As an example, with row_remapping = [1, 0, -1], col_remapping = [0, 2, -1], initializing_values = [0.5, -0.5, 0.25, -0.25, 42], and w(i, j) representing the value from row i, column j of the old tensor in the checkpoint, the output matrix will look like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b744e75bc2659c2943071819a7f363b71ca17302" translate="yes" xml:space="preserve">
          <source>As another example, if &lt;code&gt;t&lt;/code&gt; is a matrix and &lt;code&gt;axes == [1]&lt;/code&gt;, then each row of the output will have L2-norm less than or equal to &lt;code&gt;clip_norm&lt;/code&gt;. If &lt;code&gt;axes == [0]&lt;/code&gt; instead, each column of the output will be clipped.</source>
          <target state="translated">Como otro ejemplo, si &lt;code&gt;t&lt;/code&gt; es una matriz y &lt;code&gt;axes == [1]&lt;/code&gt; , entonces cada fila de la salida tendr&amp;aacute; la norma L2 menor o igual que &lt;code&gt;clip_norm&lt;/code&gt; . Si &lt;code&gt;axes == [0]&lt;/code&gt; cambio, cada columna de la salida se recortar&amp;aacute;.</target>
        </trans-unit>
        <trans-unit id="57443c33075ad59c1a571c85128ca2ef3752d9b0" translate="yes" xml:space="preserve">
          <source>As in Python, the &lt;code&gt;axis&lt;/code&gt; could also be negative numbers. Negative &lt;code&gt;axis&lt;/code&gt; are interpreted as counting from the end of the rank, i.e., &lt;code&gt;axis + rank(values)&lt;/code&gt;-th dimension.</source>
          <target state="translated">Como en Python, el &lt;code&gt;axis&lt;/code&gt; tambi&amp;eacute;n podr&amp;iacute;a ser n&amp;uacute;meros negativos. El &lt;code&gt;axis&lt;/code&gt; negativo se interpreta como contando desde el final del rango, es decir, &lt;code&gt;axis + rank(values)&lt;/code&gt; -&amp;eacute;sima dimensi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="2613223c5d9cdc55174480264f3047cb86310d17" translate="yes" xml:space="preserve">
          <source>As input into &lt;code&gt;run&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8765e8c5ac22dec16d9c473cc3f1b1906a1ec80" translate="yes" xml:space="preserve">
          <source>As it is a regularization layer, it is only active at training time.</source>
          <target state="translated">Como es una capa de regularización,sólo está activa en el momento del entrenamiento.</target>
        </trans-unit>
        <trans-unit id="83402e78a6c27db862b7ece5c63fac49bc102ccb" translate="yes" xml:space="preserve">
          <source>As mentioned before, within each worker, we will also split the data among all the worker devices (if more than one a present). This will happen even if multi-worker sharding is disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="801fbdaf353f1140d3b9db7a22f9d31969506099" translate="yes" xml:space="preserve">
          <source>As per the above description, you need to scale your YUV images if their pixel values are not in the required range. Below given example illustrates preprocessing of each channel of images before feeding them to &lt;code&gt;yuv_to_rgb&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78ba095dcf70c15669c6fb931def402aadcb4ba8" translate="yes" xml:space="preserve">
          <source>AsString</source>
          <target state="translated">AsString</target>
        </trans-unit>
        <trans-unit id="85acd5bb42a06da8f018df776f49554d85e43d71" translate="yes" xml:space="preserve">
          <source>Aside from the &lt;a href=&quot;../v1&quot;&gt;&lt;code&gt;compat.v1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../v2&quot;&gt;&lt;code&gt;compat.v2&lt;/code&gt;&lt;/a&gt; submodules, &lt;a href=&quot;../../compat&quot;&gt;&lt;code&gt;tf.compat&lt;/code&gt;&lt;/a&gt; also contains a set of helper functions for writing code that works in both:</source>
          <target state="translated">Aparte de los subm&amp;oacute;dulos &lt;a href=&quot;../v1&quot;&gt; &lt;code&gt;compat.v1&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;../v2&quot;&gt; &lt;code&gt;compat.v2&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../compat&quot;&gt; &lt;code&gt;tf.compat&lt;/code&gt; &lt;/a&gt; tambi&amp;eacute;n contiene un conjunto de funciones auxiliares para escribir c&amp;oacute;digo que funciona en ambos:</target>
        </trans-unit>
        <trans-unit id="7f9fe1d4603ad93c5290a9a057186ccb95a4e6da" translate="yes" xml:space="preserve">
          <source>Aside from the &lt;a href=&quot;../v1&quot;&gt;&lt;code&gt;compat.v1&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;compat.v2&lt;/code&gt; submodules, &lt;a href=&quot;../../compat&quot;&gt;&lt;code&gt;tf.compat&lt;/code&gt;&lt;/a&gt; also contains a set of helper functions for writing code that works in both:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29caae4b2b26ba94768556b19171003da5ecd02f" translate="yes" xml:space="preserve">
          <source>Aside from the &lt;a href=&quot;compat/v1&quot;&gt;&lt;code&gt;compat.v1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;compat/v2&quot;&gt;&lt;code&gt;compat.v2&lt;/code&gt;&lt;/a&gt; submodules, &lt;a href=&quot;compat&quot;&gt;&lt;code&gt;tf.compat&lt;/code&gt;&lt;/a&gt; also contains a set of helper functions for writing code that works in both:</source>
          <target state="translated">Aparte de los subm&amp;oacute;dulos &lt;a href=&quot;compat/v1&quot;&gt; &lt;code&gt;compat.v1&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;compat/v2&quot;&gt; &lt;code&gt;compat.v2&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;compat&quot;&gt; &lt;code&gt;tf.compat&lt;/code&gt; &lt;/a&gt; tambi&amp;eacute;n contiene un conjunto de funciones auxiliares para escribir c&amp;oacute;digo que funciona en ambos:</target>
        </trans-unit>
        <trans-unit id="a9ebc18f42d03ba4d7925e1957ce1888e0c6c8be" translate="yes" xml:space="preserve">
          <source>Aside from the &lt;a href=&quot;compat/v1&quot;&gt;&lt;code&gt;compat.v1&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;compat.v2&lt;/code&gt; submodules, &lt;a href=&quot;compat&quot;&gt;&lt;code&gt;tf.compat&lt;/code&gt;&lt;/a&gt; also contains a set of helper functions for writing code that works in both:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f21579b78a9211097bade1507cf7d1061aef2af" translate="yes" xml:space="preserve">
          <source>Asin</source>
          <target state="translated">Asin</target>
        </trans-unit>
        <trans-unit id="ad5ced2b521e057f06b0f8b74356c5357ee0c1b5" translate="yes" xml:space="preserve">
          <source>Asinh</source>
          <target state="translated">Asinh</target>
        </trans-unit>
        <trans-unit id="4141add45a26459c4bd39909388482311f6fe29a" translate="yes" xml:space="preserve">
          <source>Assert</source>
          <target state="translated">Assert</target>
        </trans-unit>
        <trans-unit id="d45a488bc737e1d5f6dede5db3709387006d1acf" translate="yes" xml:space="preserve">
          <source>Assert &lt;code&gt;x&lt;/code&gt; has rank equal to &lt;code&gt;rank&lt;/code&gt; or higher.</source>
          <target state="translated">Afirmar que &lt;code&gt;x&lt;/code&gt; tiene un rango igual al &lt;code&gt;rank&lt;/code&gt; o superior.</target>
        </trans-unit>
        <trans-unit id="1af210672fd2e8191d0475081f63889272313458" translate="yes" xml:space="preserve">
          <source>Assert &lt;code&gt;x&lt;/code&gt; has rank equal to &lt;code&gt;rank&lt;/code&gt;.</source>
          <target state="translated">Afirmar que &lt;code&gt;x&lt;/code&gt; tiene rango igual al &lt;code&gt;rank&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c5ea1557e1f4e48f059d2133985575132b3c30d6" translate="yes" xml:space="preserve">
          <source>Assert &lt;code&gt;x&lt;/code&gt; has rank in &lt;code&gt;ranks&lt;/code&gt;.</source>
          <target state="translated">Afirmar que &lt;code&gt;x&lt;/code&gt; tiene rango en los &lt;code&gt;ranks&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75a22a7c18253fb409c8efec8464addc96cc3eeb" translate="yes" xml:space="preserve">
          <source>Assert element values are all greater than a target value.</source>
          <target state="translated">Afirmar que los valores de los elementos son todos mayores que un valor objetivo.</target>
        </trans-unit>
        <trans-unit id="b860ff24d74dc7f5a638fa5fa667ec3253009cf3" translate="yes" xml:space="preserve">
          <source>Assert element values are all greater than or equal to a target value.</source>
          <target state="translated">Afirmar que los valores de los elementos son todos mayores o iguales a un valor objetivo.</target>
        </trans-unit>
        <trans-unit id="de18e62bc32b196a239950419d1f8388fac532ac" translate="yes" xml:space="preserve">
          <source>Assert element values are all less than a target value.</source>
          <target state="translated">Afirmar que los valores de los elementos son todos menores que un valor objetivo.</target>
        </trans-unit>
        <trans-unit id="b10013e316156ceb95372fd12600d806c0cb2e0f" translate="yes" xml:space="preserve">
          <source>Assert element values are all less than or equal to a target value.</source>
          <target state="translated">Afirmar que los valores de los elementos son todos menores o iguales a un valor objetivo.</target>
        </trans-unit>
        <trans-unit id="b257d645a0e38e6fdd04fcb4625b59781955891d" translate="yes" xml:space="preserve">
          <source>Assert ndarray data type is equal to expected.</source>
          <target state="translated">Afirmar que el tipo de datos del ndarray es igual al esperado.</target>
        </trans-unit>
        <trans-unit id="e2dd5e8d4d9ac571495586bb5a8330969a0432c8" translate="yes" xml:space="preserve">
          <source>Assert tensor shapes and dimension size relationships between tensors.</source>
          <target state="translated">Afirmar las formas de los tensores y las relaciones de tamaño de las dimensiones entre los tensores.</target>
        </trans-unit>
        <trans-unit id="be540434b2bf923639eb1611345e835e54ecc4f0" translate="yes" xml:space="preserve">
          <source>Assert that &lt;code&gt;x&lt;/code&gt; has a rank in &lt;code&gt;ranks&lt;/code&gt;.</source>
          <target state="translated">Afirme que &lt;code&gt;x&lt;/code&gt; tiene un rango en los &lt;code&gt;ranks&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc41af99ff2c324ddb6b8c0ed6b7224ec606dad3" translate="yes" xml:space="preserve">
          <source>Assert that &lt;code&gt;x&lt;/code&gt; has rank equal to &lt;code&gt;rank&lt;/code&gt;.</source>
          <target state="translated">Afirme que &lt;code&gt;x&lt;/code&gt; tiene rango igual al &lt;code&gt;rank&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a3b9be6a9f6bf09683fc74472ecfdeea3a9e1521" translate="yes" xml:space="preserve">
          <source>Assert that &lt;code&gt;x&lt;/code&gt; has rank of at least &lt;code&gt;rank&lt;/code&gt;.</source>
          <target state="translated">Afirme que &lt;code&gt;x&lt;/code&gt; tiene rango de al menos &lt;code&gt;rank&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9cf3fd3f2432582f3d8865f95299b1dfab71da9d" translate="yes" xml:space="preserve">
          <source>Assert that &lt;code&gt;x&lt;/code&gt; is of integer dtype.</source>
          <target state="translated">Afirme que &lt;code&gt;x&lt;/code&gt; es de tipo d entero.</target>
        </trans-unit>
        <trans-unit id="65117d3cf865a50fd703edaa53cfc50dad6e01d8" translate="yes" xml:space="preserve">
          <source>Assert that actual.startswith(expected_start) is True.</source>
          <target state="translated">Afirmar que actual.startswith(expected_start)es True.</target>
        </trans-unit>
        <trans-unit id="eeea1f0d33c3a55ddacefaae856a6434820be341" translate="yes" xml:space="preserve">
          <source>Assert that elements in a Tensor are all in a given range.</source>
          <target state="translated">Afirmar que los elementos de un Tensor están todos en un rango determinado.</target>
        </trans-unit>
        <trans-unit id="7482390025bb1597949bc51945d168ea3f2c96a1" translate="yes" xml:space="preserve">
          <source>Assert that elements of a Tensor are all in a given closed set.</source>
          <target state="translated">Afirmar que los elementos de un Tensor están todos en un determinado conjunto cerrado.</target>
        </trans-unit>
        <trans-unit id="f010f67ad78e93d40f92b6415f85b07d94106d7b" translate="yes" xml:space="preserve">
          <source>Assert that the tensor does not contain any NaN's or Inf's.</source>
          <target state="translated">Afirmar que el tensor no contiene ningún NaN o Inf.</target>
        </trans-unit>
        <trans-unit id="d7834b2eb7392181a3ea7175d3736e0a21b59528" translate="yes" xml:space="preserve">
          <source>Assert that two numpy arrays, or Tensors, do not have near values.</source>
          <target state="translated">Afirmar que dos matrices numéricas,o Tensores,no tienen valores cercanos.</target>
        </trans-unit>
        <trans-unit id="fde1486ea5790a86387babddde8237842342fce6" translate="yes" xml:space="preserve">
          <source>Assert the condition &lt;code&gt;x != y&lt;/code&gt; holds element-wise.</source>
          <target state="translated">Afirma la condici&amp;oacute;n &lt;code&gt;x != y&lt;/code&gt; cumple con los elementos.</target>
        </trans-unit>
        <trans-unit id="10d225bb6dc3e0b0d24bb630a4e31c3ed9981407" translate="yes" xml:space="preserve">
          <source>Assert the condition &lt;code&gt;x != y&lt;/code&gt; holds for all elements.</source>
          <target state="translated">Afirma la condici&amp;oacute;n &lt;code&gt;x != y&lt;/code&gt; cumple para todos los elementos.</target>
        </trans-unit>
        <trans-unit id="e8ca7a0425a726a137cba91c1cac1cf114013585" translate="yes" xml:space="preserve">
          <source>Assert the condition &lt;code&gt;x &amp;gt; 0&lt;/code&gt; holds element-wise.</source>
          <target state="translated">Afirma que la condici&amp;oacute;n &lt;code&gt;x &amp;gt; 0&lt;/code&gt; cumple en t&amp;eacute;rminos de elementos.</target>
        </trans-unit>
        <trans-unit id="8c6cc4607589d1b19634018c077376c08b85db22" translate="yes" xml:space="preserve">
          <source>Assert the condition &lt;code&gt;x &amp;gt; y&lt;/code&gt; holds element-wise.</source>
          <target state="translated">Afirma la condici&amp;oacute;n &lt;code&gt;x &amp;gt; y&lt;/code&gt; cumple en t&amp;eacute;rminos de elementos.</target>
        </trans-unit>
        <trans-unit id="04007f6eb566ef87ffcc0d4a23b511001e76822a" translate="yes" xml:space="preserve">
          <source>Assert the condition &lt;code&gt;x &amp;gt;= 0&lt;/code&gt; holds element-wise.</source>
          <target state="translated">Afirmar que la condici&amp;oacute;n &lt;code&gt;x &amp;gt;= 0&lt;/code&gt; mantiene en forma de elementos.</target>
        </trans-unit>
        <trans-unit id="1486bc5ff53e4ede7835c1d8b94ec8154a23a1ff" translate="yes" xml:space="preserve">
          <source>Assert the condition &lt;code&gt;x &amp;gt;= y&lt;/code&gt; holds element-wise.</source>
          <target state="translated">Afirma que la condici&amp;oacute;n &lt;code&gt;x &amp;gt;= y&lt;/code&gt; cumple por elementos.</target>
        </trans-unit>
        <trans-unit id="cee58e8741277ca46d3c4399a608f21457addecf" translate="yes" xml:space="preserve">
          <source>Assert the condition &lt;code&gt;x &amp;lt; 0&lt;/code&gt; holds element-wise.</source>
          <target state="translated">Afirma que la condici&amp;oacute;n &lt;code&gt;x &amp;lt; 0&lt;/code&gt; cumple en t&amp;eacute;rminos de elementos.</target>
        </trans-unit>
        <trans-unit id="ca7e54c653a78bedf703f41bf80dbd025995c05e" translate="yes" xml:space="preserve">
          <source>Assert the condition &lt;code&gt;x &amp;lt; y&lt;/code&gt; holds element-wise.</source>
          <target state="translated">Afirma que la condici&amp;oacute;n &lt;code&gt;x &amp;lt; y&lt;/code&gt; cumple por elementos.</target>
        </trans-unit>
        <trans-unit id="a2b12e7baaf664f0c04715097a4e025f58674eed" translate="yes" xml:space="preserve">
          <source>Assert the condition &lt;code&gt;x &amp;lt;= 0&lt;/code&gt; holds element-wise.</source>
          <target state="translated">Afirmar que la condici&amp;oacute;n &lt;code&gt;x &amp;lt;= 0&lt;/code&gt; mantiene en forma de elementos.</target>
        </trans-unit>
        <trans-unit id="feabcb54d482d8c244c83a5ea766c82863cf205f" translate="yes" xml:space="preserve">
          <source>Assert the condition &lt;code&gt;x &amp;lt;= y&lt;/code&gt; holds element-wise.</source>
          <target state="translated">Afirma que la condici&amp;oacute;n &lt;code&gt;x &amp;lt;= y&lt;/code&gt; cumple por elementos.</target>
        </trans-unit>
        <trans-unit id="3433a0305e0cee314edfef60291ac38e08138d55" translate="yes" xml:space="preserve">
          <source>Assert the condition &lt;code&gt;x == y&lt;/code&gt; holds element-wise.</source>
          <target state="translated">Afirma la condici&amp;oacute;n &lt;code&gt;x == y&lt;/code&gt; mantiene a nivel de elementos.</target>
        </trans-unit>
        <trans-unit id="8599a8fb24f8dfdea5c6ea730c17e898a478f2c2" translate="yes" xml:space="preserve">
          <source>Assert the condition &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are close element-wise.</source>
          <target state="translated">Assert la condici&amp;oacute;n &lt;code&gt;x&lt;/code&gt; y &lt;code&gt;y&lt;/code&gt; est&amp;aacute;n cerca de elemento a elemento.</target>
        </trans-unit>
        <trans-unit id="e0c85116cd4698541b933630d6b7df126788be2c" translate="yes" xml:space="preserve">
          <source>AssertCardinalityDataset</source>
          <target state="translated">AssertCardinalityDataset</target>
        </trans-unit>
        <trans-unit id="0c459c096c036e1c5c2e1fa5a6d98b2c89735f3e" translate="yes" xml:space="preserve">
          <source>AssertNextDataset</source>
          <target state="translated">AssertNextDataset</target>
        </trans-unit>
        <trans-unit id="a42441c349b7bd38d1695189fc7bc6bf3aa17236" translate="yes" xml:space="preserve">
          <source>Assertion failed.</source>
          <target state="translated">La afirmación falló.</target>
        </trans-unit>
        <trans-unit id="2fe4e54c0726687ff23e5da4efeaaa0a9f0f4d9d" translate="yes" xml:space="preserve">
          <source>Asserts &lt;code&gt;global_step_tensor&lt;/code&gt; is a scalar int &lt;code&gt;Variable&lt;/code&gt; or &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">Afirma &lt;code&gt;global_step_tensor&lt;/code&gt; es un int escalar &lt;code&gt;Variable&lt;/code&gt; o &lt;code&gt;Tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e10bf0d97856f8fa0eeb141a104b108e5a02e41c" translate="yes" xml:space="preserve">
          <source>Asserts a shell command fails and the error matches a regex in a list.</source>
          <target state="translated">Afirma que un comando de shell falla y el error coincide con un regex en una lista.</target>
        </trans-unit>
        <trans-unit id="69f2f4aede977d6431a1b2da061dd5f05949efe4" translate="yes" xml:space="preserve">
          <source>Asserts that &quot;container&quot; contains &quot;subsequence&quot; as a subsequence.</source>
          <target state="translated">Afirma que &quot;contenedor&quot; contiene &quot;subsecuente&quot; como subsecuente.</target>
        </trans-unit>
        <trans-unit id="59d7f6452194bfa31be4848b64d1ee0104b3cda9" translate="yes" xml:space="preserve">
          <source>Asserts that &quot;container&quot; contains &quot;subsequence&quot; as an exact subsequence.</source>
          <target state="translated">Afirma que &quot;contenedor&quot; contiene &quot;subsecuente&quot; como una subsecuente exacta.</target>
        </trans-unit>
        <trans-unit id="6be7923de285fdec6e7923105446778fce606368" translate="yes" xml:space="preserve">
          <source>Asserts that &quot;container&quot; contains all the elements of &quot;subsequence&quot;, in order, and without other elements interspersed. For example, [1, 2, 3] is an exact subsequence of [0, 0, 1, 2, 3, 0] but not of [0, 0, 1, 2, 0, 3, 0].</source>
          <target state="translated">Afirma que el &quot;contenedor&quot; contiene todos los elementos de la &quot;subsecuente&quot;,en orden,y sin otros elementos intercalados.Por ejemplo,[1,2,3]es una subsecuencia exacta de [0,0,1,2,3,0]pero no de [0,0,1,2,0,3,0].</target>
        </trans-unit>
        <trans-unit id="3092f417077e5d72f4794a55a87dba46443aadc6" translate="yes" xml:space="preserve">
          <source>Asserts that &quot;container&quot; contains all the elements of &quot;subsequence&quot;, in order, but possibly with other elements interspersed. For example, [1, 2, 3] is a subsequence of [0, 0, 1, 2, 0, 3, 0] but not of [0, 0, 1, 3, 0, 2, 0].</source>
          <target state="translated">Afirma que el &quot;contenedor&quot; contiene todos los elementos de la &quot;subsecuente&quot;,en orden,pero posiblemente con otros elementos intercalados.Por ejemplo,[1,2,3]es una subsecuencia de [0,0,1,2,0,3,0]pero no de [0,0,1,3,0,2,0].</target>
        </trans-unit>
        <trans-unit id="c28cbbb5abec6a4c6b4ffd4da95b8bd15a918eaf" translate="yes" xml:space="preserve">
          <source>Asserts that a Numpy ndarray and a TensorFlow tensor have the same shape.</source>
          <target state="translated">Afirma que un ndarray Numpy y un tensor TensorFlow tienen la misma forma.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
