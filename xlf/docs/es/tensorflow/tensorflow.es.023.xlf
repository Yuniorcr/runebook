<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="tensorflow">
    <body>
      <group id="tensorflow">
        <trans-unit id="a10273ed2591fa8e6d830e3592cf6629eac41f62" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 0-D, 1-D, or 2-D. &lt;code&gt;sparse_indices[i]&lt;/code&gt; contains the complete index where &lt;code&gt;sparse_values[i]&lt;/code&gt; will be placed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90b14414d7d2a48d6b885842cef4dc0cbecd2a29" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 0-D. Inclusive lower bound on the generated integers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34df6cd9144731641fe5a40dc99b4940448ae1d7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 0-D. The dimension along which to concatenate. Must be in the range [-rank(values), rank(values)).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bd5dab22d65126fdc3d5a6fd2cc5026e1e9a428" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 1-D integer tensor. Shape of independent samples to draw from each distribution described by the shape parameters given in alpha.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fcf61f265a3647bde9f2b3068a8853b9f55cc32" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 1-D integer tensor. Shape of independent samples to draw from each distribution described by the shape parameters given in rate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc774613a63786c5541ad3b4a7fb49e189226ed0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 1-D with length &lt;code&gt;input.dims(batch_axis)&lt;/code&gt; and &lt;code&gt;max(seq_lengths) &amp;lt;= input.dims(seq_axis)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792ffa6c36d29023684bb676a33eba446f30e73c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 1-D with length &lt;code&gt;input.dims(batch_dim)&lt;/code&gt; and &lt;code&gt;max(seq_lengths) &amp;lt;= input.dims(seq_dim)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3deab15e3caa18bcfe364b4fe6a1079c0276c791" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 1-D with shape &lt;code&gt;[M]&lt;/code&gt;, all values must be &amp;gt;= 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61c3c819f326a415ac9ef59622a893e866f7494a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 1-D.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c723f9f63f4af13785554d4cbbf3b4b8361941e2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 1-D. Length must be the same as the number of dimensions in &lt;code&gt;input&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85e3fed0a5fd470a71269b74cba89b42bf1bc528" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 1-D. Represents the shape of the output tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48b2370c0a4b5e9d9195080627c6cb9a5c720e80" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 1-D. The indices of the dimensions to reverse. Must be in the range &lt;code&gt;[-rank(tensor), rank(tensor))&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6b45e599eac49ad923a42abd7c3c9d7ae44a403" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 1D int &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dcd7c6da0989f8ba02a34a298f8371cbe5bcbe9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 1D or 2D int &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0abd746003e0a2c218b500af18c75ea4aea972c6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 2 seeds (shape [2]).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff574434aa7b7e31eec5a0b3d6e4fba59a468eec" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 2-D tensor of non-negative integers with shape &lt;code&gt;[2, 2]&lt;/code&gt;. It specifies how many elements to crop from the intermediate result across the spatial dimensions as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a252f5db0e0af64e0c0eac704d985341a8f2b558" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 2-D tensor of non-negative integers with shape &lt;code&gt;[2, 2]&lt;/code&gt;. It specifies the padding of the input with zeros across the spatial dimensions as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a80f38e444d42fd3cd4119dae4efa0863df5b6b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 2-D with shape &lt;code&gt;[M, 2]&lt;/code&gt;, all values must be &amp;gt;= 0. &lt;code&gt;crops[i] = [crop_start, crop_end]&lt;/code&gt; specifies the amount to crop from input dimension &lt;code&gt;i + 1&lt;/code&gt;, which corresponds to spatial dimension &lt;code&gt;i&lt;/code&gt;. It is required that &lt;code&gt;crop_start[i] + crop_end[i] &amp;lt;= block_shape[i] * input_shape[i + 1]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64cb1aab0a4b7a24400e50818301045f5387ca88" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 2-D with shape &lt;code&gt;[M, 2]&lt;/code&gt;, all values must be &amp;gt;= 0. &lt;code&gt;paddings[i] = [pad_start, pad_end]&lt;/code&gt; specifies the padding for input dimension &lt;code&gt;i + 1&lt;/code&gt;, which corresponds to spatial dimension &lt;code&gt;i&lt;/code&gt;. It is required that &lt;code&gt;block_shape[i]&lt;/code&gt; divides &lt;code&gt;input_shape[i + 1] + pad_start + pad_end&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e78dfd3921d3d60ff25673c5bc60e4343895e80" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 2-D. The &lt;code&gt;indices&lt;/code&gt; of the &lt;code&gt;SparseTensor&lt;/code&gt;, size &lt;code&gt;[nnz, 2]&lt;/code&gt; Matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="132d8348821a140c3ff1cefb13a9ebdaca4d74bb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 2-D. The &lt;code&gt;indices&lt;/code&gt; of the &lt;code&gt;SparseTensor&lt;/code&gt;, with shape &lt;code&gt;[nnz, ndims]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f660280f966c9c2f77802100c1622f6edb27aad" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 2D int &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34b388ea5b445ae575da8ab90910106413ae7061" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. &lt;code&gt;begin[k]&lt;/code&gt; specifies the offset into the &lt;code&gt;k&lt;/code&gt;th range specification. The exact dimension this corresponds to will be determined by context. Out-of-bounds values will be silently clamped. If the &lt;code&gt;k&lt;/code&gt;th bit of &lt;code&gt;begin_mask&lt;/code&gt; then &lt;code&gt;begin[k]&lt;/code&gt; is ignored and the full range of the appropriate dimension is used instead. Negative values causes indexing to start from the highest element e.g. If &lt;code&gt;foo==[1,2,3]&lt;/code&gt; then &lt;code&gt;foo[-1]==3&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d74633ce01b43292faeb99b8bd7aec5abf70dda" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A 1-D tensor whose size is equal to the size of &lt;code&gt;data&lt;/code&gt;'s first dimension. Values should be sorted and can be repeated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1075f09345c9b10e7e8ca44c87c8fe108647bc3e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A 1-D tensor. Has same rank as &lt;code&gt;segment_ids&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec3a5e80715378e9983c985d4316f534d7af3d83" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A 1-D tensor. Values should be sorted and can be repeated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b6f430563b56c758dc3f85a5b97d97a95bb5266" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A 1D tensor specifying how the unicode codepoints should be split into strings. In particular, &lt;code&gt;output[i]&lt;/code&gt; is constructed by encoding the codepoints in the slice &lt;code&gt;input_values[input_splits[i]:input_splits[i+1]]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f298af3436ded2e2b0147a88393f19d1994018aa" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt; (default: 0). Must be in the range &lt;code&gt;[-rank(x), rank(x))&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de56b619cf425890b2303c2f23b2686a5c84fac" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt; (default: None). The axis of the Tensor to find the unique elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20a9a32da0a060a7383270d42c2471d498d755a2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A &lt;code&gt;batch_size&lt;/code&gt; vector of class ids.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70874af5336a894eb803d0f404d219c44cef4ad8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A Tensor with each element as a dimension index in source data format. Must be in the range [-4, 4).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="773b4cf625bb3915754e128c2b6a9cc103170832" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A Tensor. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A tensor of indices into &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad57b7e90bb55b62d7dd92e7b978904169e3c59" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A Tensor. Must be one of the following types: int32, int64. A tensor of indices into ref.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a64b9f38a5312b4e7beb0c5693175771b44be36f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f99dbe2fc328e392d0303912a7a527e63a1cd01c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A tensor of indices into ref.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee027d693ecb1bcc3c67bf4b3fd636c739f20442" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A tensor of indices into the first dimension of &lt;code&gt;ref&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2a81879420a0a4c33c2ac67fbc3141be69e28be" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A tensor whose shape is a prefix of &lt;code&gt;data.shape&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="221a0868080338a5ebe7b9d7ee0cfb8c3d3b6665" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A tensor whose shape is a prefix of data.shape. Negative segment ids are not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a7ff78504e4a39a319d8fc52101d4de814ba906" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A two-column matrix specifying the padding sizes. The number of rows must be the same as the rank of &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="352b95987e398d9905b9dc58c942bac04fb89581" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A vector of indices into the first dimension of var and accum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e671cacc8ac2d19931be3800689def2130c2abf6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A vector of indices into the first dimension of var, ms and mom.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a12fa2611a30d096f1c01179b853d8fa56ba663" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. An 0-D or 1-D &lt;code&gt;int&lt;/code&gt; Tensor whose elements are indices into the flattened version of an array of dimensions dims.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bc295fdb8f10c2d814bf163bbc5e37807a13fbe" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. An 1-D &lt;code&gt;int&lt;/code&gt; Tensor. The shape of the desired output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1233135f510bf63f71b96fe21fdb9918630eb7ff" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. An integer vector representing the tensor shape of &lt;code&gt;input&lt;/code&gt;, where &lt;code&gt;input&lt;/code&gt; is a 5-D &lt;code&gt;[batch, depth, rows, cols, in_channels]&lt;/code&gt; tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bde3e61f67e98610d7457a5fe1140e4906603845" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. Defines the shape of the output tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43b86e22248ae903c00bf210939bb8ad96aa56a8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. Dimension must be 0-D or 1-D. &lt;code&gt;axis[i]&lt;/code&gt; specifies the dimension that the shift &lt;code&gt;shift[i]&lt;/code&gt; should occur. If the same axis is referenced more than once, the total shift for that axis will be the sum of all the shifts that belong to that axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a0c2eb9ef3c1985cae14cf4808926be159fc8e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. Dimension must be 0-D or 1-D. &lt;code&gt;shift[i]&lt;/code&gt; specifies the number of places by which elements are shifted positively (towards larger indices) along the dimension specified by &lt;code&gt;axis[i]&lt;/code&gt;. Negative shifts will roll the elements in the opposite direction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5df90f296f893b9fccec93fdf3a2cdfa63edcbb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. Index tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e91109727cba023fbd055d1adfa129a115329cc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. Index tensor. Must be in range &lt;code&gt;[0, params.shape[axis])&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d96f10abf260b1246ddc98086fe69c5076421ef6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. Indices in the outermost dimension of &lt;code&gt;params&lt;/code&gt; of the values that should be gathered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc85fe080b3455167be9467ef88c6260c15f31ba" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. Minimum value (inclusive, scalar).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="161c5b1745670183a06f10aaaad668207d4f632b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. Scalar defining the position of first character in each substring</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="824c80bfb0f41f3291d6d4d145824599527d89cb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. Should equal the number of distinct segment IDs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc5623295db7f99c40ba99943a2dd945da59c7e0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. Tensor containing data to count.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b30a31953365694e677ef7c1ebe0762eb77ce16" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. Tensor containing values of the sparse tensor to count.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf8b14ab521b73560800dc390645f912e4c734dd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. The &lt;code&gt;axis&lt;/code&gt; in &lt;code&gt;params&lt;/code&gt; to gather &lt;code&gt;indices&lt;/code&gt; from. Must be greater than or equal to &lt;code&gt;batch_dims&lt;/code&gt;. Defaults to the first non-batch dimension. Supports negative indexes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b51969172bc2ad2ae19f188ab226841d9a874df" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. The axis in &lt;code&gt;params&lt;/code&gt; to gather &lt;code&gt;indices&lt;/code&gt; from. Defaults to the first dimension. Supports negative indexes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc5224f236c56fbba08d4b1fe9e53a48b3b5a1b3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. The dimensions to reduce. Must be in the range &lt;code&gt;[-rank(input), rank(input))&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac9df03ab7c8c2e91a096d8bd45e04cbc25b59a8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. The indices of the maximum values chosen for each output of &lt;code&gt;max_pool&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd4133b2c8e704585818dea17972e9b3a35cb642" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. The shape of the output tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="675d4829cd84fb13acf8196b95082d9954527cbc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. The shape of the output tensor. Batches are indexed by the 0th dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="513d3e82c921e1f94c0004b16986da8d194e94c3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. The splits tensor of the ragged string tensor to make ngrams out of.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d10cacd6f32d9c15c6f1d530b98a1a134c943186" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. Vector of size 4 or Tensor of shape (4, 2) in source data format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7709d784d28a2b725e615ddd6a094d7584c5401f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. batch_size vector with values in [0, num_classes). This is the label for the given minibatch entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="195bf731d7ee1b9770c09766fd31c3640700fcb1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. begin[i] specifies the offset into the 'i'th dimension of 'input' to slice from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4eb4b58d9a9805dbc19ef4e7d20323fe2baa563" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. indices passed to the corresponding SparseSegmentMean op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df00ee5a69961028e7ae70cc8f1737e45b235135" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. indices passed to the corresponding SparseSegmentSqrtN op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e85955a8b452244f91f98be418a6af922094996" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. int32 or int64, must be in the range &lt;code&gt;-rank(input), rank(input))&lt;/code&gt;. Describes which axis of the input Tensor to reduce across. For vectors, use axis = 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5838f477e4da982958f9e27efdf44d94f25f1956" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. int32 or int64, must be in the range &lt;code&gt;[-rank(input), rank(input))&lt;/code&gt;. Describes which axis of the input Tensor to reduce across. For vectors, use axis = 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b2202552de0cf801f06200eda2b12c75b1e4aa0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. int32 or int64, must be in the range &lt;code&gt;[-rank(input), rank(input))&lt;/code&gt;. Describes which dimension of the input Tensor to reduce across. For vectors, use dimension = 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c47399f929c34ea5cf14b06a3fe022faffaac4ee" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. list containing the sizes of each output tensor along the split dimension. Must sum to the dimension of value along split_dim. Can contain one -1 indicating that dimension is to be inferred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ae41c2f4ed31141d479622ba26a89150bba4407" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. segment_ids passed to the corresponding SparseSegmentMean op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af806ee6e024d1f8e8182173664a28c95bb636df" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. segment_ids passed to the corresponding SparseSegmentSqrtN op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d7b6c2f63585861052e94de74b1dfe2d07fd818" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;. The desired shape of the the output tensor. If left unspecified (empty), the minimal shape required to contain all the elements in the ragged tensor (the natural shape) will be used. If some dimensions are left unspecified, then the size of the natural shape is used in that dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c05564e39851903aee5150bb11ae3014521f4979" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;bool&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de41dd2eaa33f3f438acaf6d31d6f9fc3eb5f70f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;. 1D &lt;code&gt;Tensor&lt;/code&gt;, values of a &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e13a0c578fa6e9fb3ca5a71625592448a3a20bef" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;. 1D &lt;code&gt;Tensor&lt;/code&gt;, values of a &lt;code&gt;SparseTensor&lt;/code&gt;. Must be in row-major order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbf1888e4bcadddf58acb5a06802377db1658173" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;. &lt;code&gt;Tensor&lt;/code&gt; with rank &lt;code&gt;n&lt;/code&gt;. 1st &lt;code&gt;n-1&lt;/code&gt; dimensions must be the same as &lt;code&gt;set2&lt;/code&gt;. Dimension &lt;code&gt;n&lt;/code&gt; contains values in a set, duplicates are allowed but ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="746f10d161a822d023fea2a13869aff59b778f0c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;uint32&lt;/code&gt;, &lt;code&gt;uint64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d2ef25570e674c77c144f80ef6ff6e157f8bc0b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;. 4-D with shape &lt;code&gt;[batch, height, width, channels]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c25dafb6533b873d8c1150447ea2bab952753dd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34b8635ffac4b60b554caa64eed16f3e98cb9909" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;. 4-D with shape &lt;code&gt;[batch, height, width, channels]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aab0abb2fcafcacdc9037a68be31345d5d0d3694" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;qint16&lt;/code&gt;, &lt;code&gt;quint16&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f30533c44cfb077ad28856cfc774ddfe3ecb478" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;qint16&lt;/code&gt;, &lt;code&gt;quint16&lt;/code&gt;. 4-D with shape &lt;code&gt;[batch, height, width, channels]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed8ab6ed84596564772499e03ce82d3f23c09e9c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;qint16&lt;/code&gt;, &lt;code&gt;quint16&lt;/code&gt;. A 1D bias Tensor with size matching the last dimension of 'input'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fad4f58f53bf2ebc20db89d1bce1ebec5b651e37" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;qint16&lt;/code&gt;, &lt;code&gt;quint16&lt;/code&gt;. A 4D input Tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7c72743f7bfdcddbfc8b48bfd5844ed43293716" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;qint16&lt;/code&gt;, &lt;code&gt;quint16&lt;/code&gt;. Must be a two-dimensional tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c79eccb0e4b3fa1e0ed6a5e3ce1e9cc13443506d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;qint16&lt;/code&gt;, &lt;code&gt;quint16&lt;/code&gt;. The 4D (batch x rows x cols x depth) Tensor to MaxReduce over.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="433cfd30b09b6165c20b3e51165871472c5ea680" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;qint16&lt;/code&gt;, &lt;code&gt;quint16&lt;/code&gt;. The original filter tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71868d56401deced1f38eb41b52dbb34a18dabbe" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;qint16&lt;/code&gt;, &lt;code&gt;quint16&lt;/code&gt;. The original input tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="861b9e029466957ff65883492b9f4a24bc306a26" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;qint8&lt;/code&gt;, &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;qint16&lt;/code&gt;, &lt;code&gt;quint16&lt;/code&gt;. filter's input_depth dimension must match input's depth dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="873f29bd75040cf5f70832215d8c49a6f617986a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;quint8&lt;/code&gt;, &lt;code&gt;qint32&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;. 4-D with shape &lt;code&gt;[batch, height, width, channels]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a1b11988ef01d91f907d8d4a8afe62041f0ae47" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;variant&lt;/code&gt;. The serialized &lt;code&gt;SparseTensor&lt;/code&gt; objects. The last dimension must have 3 columns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a22a147261611925c22c9802193afd9000863660" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. 4-D of shape &lt;code&gt;[batch_size, height, width, channels]&lt;/code&gt; where &lt;code&gt;channels&lt;/code&gt; is 1, 3, or 4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d7751447c8c75275d765036bd9296c3d6e10c73" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58b3a2c7ed734a8bdd4456c52ad458725356c4ef" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. 4-D with shape &lt;code&gt;[batch, height, width, channels]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8702ac565b27831ab00b511089b26d4cdf6a86d9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. A tensor of indices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2857fe07305ea016e6548984d2e36d5bb307751" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df22374b04ca3f643c4f7f2d41746f9cfdabc85e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. 3-D of shape &lt;code&gt;[height, width, channels]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a084ba703226101581b9d210aba8f73d009d1952" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. 1-D, containing &lt;code&gt;[height, width, channels]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9655993f5a044adaa4647255d76286a3f49d4477" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. 4-D with shape &lt;code&gt;[batch, height, width, channels]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a1f6dcc2b592ce45bc16d9fbb5e6141ae65fd53" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;bool&lt;/code&gt;, &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;. Up to 8-D.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5bcf7e7d0015792d5edd65cff6b3941b0b9b7a0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;bool&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;. Up to 8-D.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f84c507121eb7a2db0a2bae030de155aaea200" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;. A 4-D tensor of shape &lt;code&gt;[batch, image_height, image_width, depth]&lt;/code&gt;. Both &lt;code&gt;image_height&lt;/code&gt; and &lt;code&gt;image_width&lt;/code&gt; need to be positive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4b4200f2edba99b0fb61704641f36a36af9bdfa" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must be one of the following types: &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;. 3-D with shape &lt;code&gt;[height, width, channels]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0cf48ab32fbe24a654dad926e7ca8bed39b0c5f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have numeric type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="672662b0651c7e59046a3b3c337fc67fccf9341e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have rank 1 or higher.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaee5fd1e002100247a96b1bb3ca86e85bf62b9e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same shape and dtype as &lt;code&gt;ref&lt;/code&gt;. The value to be added to the variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97402756b1916a8990148c91e51bed4c9781f92e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same shape and dtype as &lt;code&gt;ref&lt;/code&gt;. The value to be assigned to the variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca483eff2c10106323de8fa364868f3004d54e02" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same shape and dtype as &lt;code&gt;ref&lt;/code&gt;. The value to be subtracted to the variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5859403e463240cdf6111f40d98fc86fabbc94a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type and shape as &lt;code&gt;start&lt;/code&gt;. N-D tensor. Last entry in the range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b0f3223ef4ab28eb6b9cb35d59333a61173531c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e1241d93eaa75427d67fb7a475b81498659b927" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;a&lt;/code&gt;. Another tensor, of same type and shape as &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4606f2813c22a25af488fcd8baf57a1835ff15dc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;a_indices&lt;/code&gt;. 1-D. The &lt;code&gt;shape&lt;/code&gt; of the &lt;code&gt;SparseTensor&lt;/code&gt;, with shape &lt;code&gt;[ndims]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e44c3f910a8895c2eec5567630103a138f2e21d0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;a_values&lt;/code&gt;. 1-D. The &lt;code&gt;values&lt;/code&gt; of the second &lt;code&gt;SparseTensor&lt;/code&gt;, size &lt;code&gt;[nnz]&lt;/code&gt; Vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c9731a1d3ae121685710ac64e9e7b8f11bb9882" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;a_values&lt;/code&gt;. 2-D. A dense Matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c7cf016c8fdf4e093654ad8b27daefc08e16fa6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;a_values&lt;/code&gt;. &lt;code&gt;ndims&lt;/code&gt;-D Tensor. With shape &lt;code&gt;a_shape&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9fd312eada57c5358cbb51fd696b83ade96c416" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;a_values&lt;/code&gt;. counterpart to &lt;code&gt;a_values&lt;/code&gt; for the other operand; must be of the same dtype.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14edb4259af1a17d1e7a97542af1391a6db81a5d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;alpha&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61807c27ab425d81c83be0996149aa2c476a3b92" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;alpha&lt;/code&gt;. A constant scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17a992185e1ddb168de77939ca9dedac8b981e35" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;alpha&lt;/code&gt;. L1 regularization. Must be a scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9d91bea6f7f7a034217a16cee87c7014bcc4ffc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;alpha&lt;/code&gt;. L2 regularization. Must be a scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0a6306d6e6b3ac9816ded914bd111c544d4f14f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;alpha&lt;/code&gt;. The change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d1db03b9a0ec673b6d59c10c7c54a1cef7187c7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;alpha&lt;/code&gt;. The gradient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d06c71d6f399c33d0799a6bad34f3d2959ae9a5b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;begin&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="735100d347aa33787e1f6c5365bc2af30f7ec146" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;begin&lt;/code&gt;. &lt;code&gt;end[i]&lt;/code&gt; is like &lt;code&gt;begin&lt;/code&gt; with the exception that &lt;code&gt;end_mask&lt;/code&gt; is used to determine full ranges.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="583cd57695ce979d36147da508ba9ea4b2a3d467" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;begin&lt;/code&gt;. &lt;code&gt;strides[i]&lt;/code&gt; specifies the increment in the &lt;code&gt;i&lt;/code&gt;th specification after extracting a given element. Negative indices will reverse the original order. Out or range values are clamped to &lt;code&gt;[0,dim[i]) if slice[i]&amp;gt;0&lt;/code&gt; or &lt;code&gt;[-1,dim[i]-1] if slice[i] &amp;lt; 0&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b95e68f0235f1df98a86d8a540495b5434db8b6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;begin&lt;/code&gt;. size[i] specifies the number of elements of the 'i'th dimension of 'input' to slice. If size[i] is -1, all remaining elements in dimension i are included in the slice (i.e. this is equivalent to setting size[i] = input.dim_size(i) - begin[i]).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1689a3a1cfca930ee4993641f427f361d0cabe0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;beta1_power&lt;/code&gt;. Momentum factor. Must be a scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faddc111ec09cf489237fb7e49a2694e14148773" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;beta1_power&lt;/code&gt;. Must be a scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4abbba6bb487cdd9f9467cbf0db202dd42541407" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;beta1_power&lt;/code&gt;. Ridge term. Must be a scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1714692efb572e38e881a8de8a3916c61997f7ce" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;beta1_power&lt;/code&gt;. Scaling factor. Must be a scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55bff6a4f740ed2d35e6e446f83f63939382cb92" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;beta1_power&lt;/code&gt;. The gradient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca39317791d7aba4403f94cb75c86a8abcec8094" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;boxes&lt;/code&gt;. A 0-D float tensor representing the sigma parameter for Soft NMS; see Bodla et al (c.f. &lt;a href=&quot;https://arxiv.org/abs/1704.04503&quot;&gt;https://arxiv.org/abs/1704.04503&lt;/a&gt;). When &lt;code&gt;soft_nms_sigma=0.0&lt;/code&gt; (which is default), we fall back to standard (hard) NMS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="893f628676e8d2672d9154273686a75331a70787" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;boxes&lt;/code&gt;. A 0-D float tensor representing the threshold for deciding when to remove boxes based on score.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="375f8324e2ba8eac4f743ffba48465a024bd96ce" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;boxes&lt;/code&gt;. A 0-D float tensor representing the threshold for deciding whether boxes overlap too much with respect to IOU.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b515fc6913085241b978e7193b9f79d09b68da67" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;boxes&lt;/code&gt;. A 1-D float tensor of shape &lt;code&gt;[num_boxes]&lt;/code&gt; representing a single score corresponding to each box (each row of boxes).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9da573650d0606adb6127960946f4f3c9855b9e2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;counts&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39bb3c0cc5b02b6d9d3e9b77f77a8582b283feac" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;counts&lt;/code&gt;. The probability of success for the binomial distribution. Must be broadcastable with &lt;code&gt;counts&lt;/code&gt; and broadcastable with the rightmost dimensions of &lt;code&gt;shape&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc819740cbe148e305cc0824bac421eb9ae2fe63" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;diagonal&lt;/code&gt;. The number to fill the area outside the specified diagonal band with. Default is 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4994bf9001e5bf3b7ccc8c408ea2f02555746ec2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;diagonals&lt;/code&gt;. Tensor of shape &lt;code&gt;[..., M, K]&lt;/code&gt;, representing K right-hand sides per each left-hand side.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c7001ab00eda768eb8ac0ffc158e5829f521225" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;empty_key&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0a35ec8e5248283453b2f88135f88a8ee342642" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;features&lt;/code&gt;. batch_size x num_classes matrix The caller must ensure that each batch of labels represents a valid probability distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9462b80094a559b929771371e78303da694ab0b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;filter&lt;/code&gt;. 4-D with shape &lt;code&gt;[batch, out_height, out_width, out_channels]&lt;/code&gt;. Gradients w.r.t. the output of the convolution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fd36260bdd3e4da2f2ac419acf2cb684dc82d84" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;filter&lt;/code&gt;. 4-D with shape based on &lt;code&gt;data_format&lt;/code&gt;. For example, if &lt;code&gt;data_format&lt;/code&gt; is 'NHWC' then out_backprop shape is &lt;code&gt;[batch, out_height, out_width, out_channels]&lt;/code&gt;. Gradients w.r.t. the output of the convolution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bc1a3dc1bfafa032b3890e2b5ca3dbf832cedca" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;filter&lt;/code&gt;. Backprop signal of shape &lt;code&gt;[batch, out_depth, out_rows, out_cols, out_channels]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d2a7e52509d5103e4a3ad96897970883ac696e6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;grad&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd4e0fb234d2a68c22f74e8aeaaacbd1a3b13099" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;grad&lt;/code&gt;. L1 regularization. Must be a scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cb9301503b858b26360b66ad7a422112f86fad8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;grad&lt;/code&gt;. L2 regularization. Must be a scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3431525a9d1d08c91db843754ee92d5a1d728da" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;grad&lt;/code&gt;. L2 shrinkage regularization. Must be a scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d08e63d389f933a886184db226e231b4fc5aa88" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;grad&lt;/code&gt;. Learning rate. Must be a scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2586567767a6d201b7f55179c99a72edab4a49d4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;grad&lt;/code&gt;. Scaling factor. Must be a scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c75859b5bd18a283647f0924506396e2d06ad645" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;gradients&lt;/code&gt;. The features passed as input to the corresponding LeakyRelu operation, OR the outputs of that operation (both work equivalently).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b97568049440b78fe1a1db85300ead6ea055425" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;gradients&lt;/code&gt;. The features passed as input to the corresponding Relu operation, OR the outputs of that operation (both work equivalently).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="308ab3a41d2792708a5796ea4481f1b2d1b5d882" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;gradients&lt;/code&gt;. The features passed as input to the corresponding Relu6 operation, or its output; using either one produces the same result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff47b9dc4751e4f9e99c256d297fc11e838a7299" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;gradients&lt;/code&gt;. The features passed as input to the corresponding softplus operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a519f2eb552034335f245d5dcf2c54ae142ea689" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;gradients&lt;/code&gt;. The features passed as input to the corresponding softsign operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce9b826f9762c95d14b11dbd7e8a36a32c62c8d8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;gradients&lt;/code&gt;. The outputs of the corresponding Elu operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98950356439828e8e99853b01e2ffcdbc1680431" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;gradients&lt;/code&gt;. The outputs of the corresponding Selu operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38a03f6d56cf7f3fd873f7499d1e0557c5924490" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;grads&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="372265045c444b20c7314ab19a4de46c4f3d95e5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;hypothesis_values&lt;/code&gt;. The values of the truth list SparseTensor. This is an M-length vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5140088a341db3155b0407a6864d2fcd0ef1583c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;indices&lt;/code&gt;. 1-D. The shape of the resulting tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebd9f1fb7d00c0d365efd0cf27ebcc1badf6f969" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;indices&lt;/code&gt;. An 1-D &lt;code&gt;int&lt;/code&gt; Tensor. The shape of the array to use for unraveling indices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2bb1c8af26f101ed1a7c224b6760d262f1c5a9d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e20b47c9bcc9462e371f41671ef98747dda4c3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;input&lt;/code&gt;. 3-D with shape &lt;code&gt;[filter_height, filter_width, depth]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d68af5e32321b1d950164c6e9fd357891815441" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;input&lt;/code&gt;. 4-D with shape &lt;code&gt;[batch, height, width, channels]&lt;/code&gt;. Gradients w.r.t. the input of &lt;code&gt;max_pool&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf703944af08df8b7fb04c5f4ac1a91d1202d0db" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;input&lt;/code&gt;. 4-D with shape &lt;code&gt;[batch, height, width, channels]&lt;/code&gt;. Gradients w.r.t. the output of &lt;code&gt;max_pool&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cb9f9e6b3d8eed2f5d15275c62540c8df89949f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;input&lt;/code&gt;. 4-D with shape &lt;code&gt;[batch, out_height, out_width, depth]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aee809c9a63744167e940e9e25d84d6b7ebfd38" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;input&lt;/code&gt;. 4-D with shape &lt;code&gt;[batch, out_height, out_width, out_channels]&lt;/code&gt;. Gradients w.r.t. the output of the convolution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b3a065b8fbb566ad7fdc8fa61ab2584c15d5bc1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;input&lt;/code&gt;. 4-D with shape &lt;code&gt;[filter_height, filter_width, in_channels, out_channels]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3a65a4db49ec68b2f88dee94c62df742c4afca1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;input&lt;/code&gt;. 4-D with shape based on &lt;code&gt;data_format&lt;/code&gt;. For example, if &lt;code&gt;data_format&lt;/code&gt; is 'NHWC' then out_backprop shape is &lt;code&gt;[batch, out_height, out_width, out_channels]&lt;/code&gt;. Gradients w.r.t. the output of the convolution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5da199b8ab212376b0e638082ad28d873edd3635" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;input&lt;/code&gt;. A 4-D tensor of shape &lt;code&gt;[filter_height, filter_width, in_channels, out_channels]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8377e39690a406e12745041adf0537e5c237c94" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;input&lt;/code&gt;. A Tensor. Must have the same type as ref. A tensor of updated values to add to &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79da8cb1608f8752703e854f7bb5cd0afe5aa05c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;input&lt;/code&gt;. Backprop signal of shape &lt;code&gt;[batch, out_depth, out_rows, out_cols, out_channels]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bda076235844681fecb09c92edbb463c5e61ef1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;input&lt;/code&gt;. If &lt;code&gt;range_given == True&lt;/code&gt;, this specifies the maximum input value that needs to be represented, otherwise it is determined from the max value of the &lt;code&gt;input&lt;/code&gt; tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66335cd9f52c663a0935bf2efb1202830f9bcd26" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;input&lt;/code&gt;. If &lt;code&gt;range_given == True&lt;/code&gt;, this specifies the minimum input value that needs to be represented, otherwise it is determined from the min value of the &lt;code&gt;input&lt;/code&gt; tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c25b147252e21bea78d581b220fabcba83339e2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;input&lt;/code&gt;. Rank &lt;code&gt;k&lt;/code&gt;, where &lt;code&gt;k &amp;gt;= 1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c39456da8b74f28d548eead24759f4df606b680e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;input&lt;/code&gt;. Rank &lt;code&gt;r&lt;/code&gt; when &lt;code&gt;k&lt;/code&gt; is an integer or &lt;code&gt;k[0] == k[1]&lt;/code&gt;. Otherwise, it has rank &lt;code&gt;r+1&lt;/code&gt;. &lt;code&gt;k &amp;gt;= 1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c523dfa2afbabf30ed9743588de41b154209efa2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;input&lt;/code&gt;. Shape &lt;code&gt;[depth, rows, cols, in_channels, out_channels]&lt;/code&gt;. &lt;code&gt;in_channels&lt;/code&gt; must match between &lt;code&gt;input&lt;/code&gt; and &lt;code&gt;filter&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="662036c50ac175f22b1fc3158697d4bf895709c8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;input&lt;/code&gt;. Shape &lt;code&gt;[filter_depth, filter_height, filter_width, in_channels, out_channels]&lt;/code&gt;. &lt;code&gt;in_channels&lt;/code&gt; must match between &lt;code&gt;input&lt;/code&gt; and &lt;code&gt;filter&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f60df1b79f6dc0244aef26d6ff33c97aecc48c5d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;input&lt;/code&gt;. Shape &lt;code&gt;[filter_depth, filter_height, filter_width, in_channels, out_channels]&lt;/code&gt;. &lt;code&gt;in_channels&lt;/code&gt; must match between &lt;code&gt;input&lt;/code&gt; and &lt;code&gt;filters&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee322a7518daf3e8c4dd37aa3b6383c87a24f70" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;input&lt;/code&gt;. The value to fill the area outside the specified diagonal band with. Default is 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e46be1026cbe9038b4b2bf83e0cbad00ad5c9d88" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;input&lt;/code&gt;. Threshold to compare against.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a4c789f74e858c6d341d9d32da01a0a2e06960d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;input&lt;/code&gt;. non-negative int scalar &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42e7b64c65ee6bb99ed34ec8a0bcd569d81fdc43" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;input_grads&lt;/code&gt;. 4-D with shape &lt;code&gt;[batch, height, width, channels]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bf17ed2fbccca7da03ba7623b68684793dfcd7f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;iou_threshold&lt;/code&gt;. A 0-D float tensor representing the threshold for deciding when to remove boxes based on score.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed6918e9c88348bc2a5aeccdf398ca27bc1865a8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;l&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46af8ee3c9acbd88ce6131db28937fdf851af70c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;l&lt;/code&gt;. df/dl where f is some scalar function. Shape is &lt;code&gt;[..., M, M]&lt;/code&gt;. Algorithm depends only on lower triangular part of the innermost matrices of this tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b9b610c9e37952b9ad0e8f71481e20338adc5a1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;lr&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65654048ae1163320db967d9e5cb739d762d8169" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;lr&lt;/code&gt;. Constant factor. Must be a scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="844150089e6f2587aef58f45adcc4ae8453d63e0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;lr&lt;/code&gt;. Decay factor. Must be a scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1859d0c641c03504c35d3780a9cc9ab32a842685" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;lr&lt;/code&gt;. Decay rate. Must be a scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5811e02af77c68ad17af0884e6149751965c6e28" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;lr&lt;/code&gt;. L1 regularization. Must be a scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ac398d5457101a286d05561104536b32057c54b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;lr&lt;/code&gt;. L2 regularization. Must be a scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1e0571b5cec14dff58c786d678e56ae3bd90739" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;lr&lt;/code&gt;. Momentum. Must be a scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="031a8d6032ec0f55f9cf74a1ec48d6c38abb7427" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;lr&lt;/code&gt;. Must be a scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f243d2f8f0ef265e6934422688f96d1dccfc2a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;lr&lt;/code&gt;. Ridge term. Must be a scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03e3b726abb76b7b830281a23de559d5a316bebf" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;lr&lt;/code&gt;. The gradient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a104579499e56241ccc24281194ec16eea48082" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;matrix&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ca77d1379505ba8e6b14686366eb7bb5ad4f528" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;matrix&lt;/code&gt;. Shape is &lt;code&gt;[..., M, K]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f628275219861c6a8633d7413b8a30749bfef19c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;matrix&lt;/code&gt;. Shape is &lt;code&gt;[..., M, N]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9b2adc6f1537a484a54ed9a5d79554009ca56c6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;means&lt;/code&gt;. The maximum cutoff. May be +infinity, and must be more than the minval for each batch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89651422e2839486879c230a71680ec809c80485" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;means&lt;/code&gt;. The minimum cutoff. May be -infinity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21430eb9d8d65ea37226c19229a9978b9e985e98" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;means&lt;/code&gt;. The standard deviation parameter of each batch. Must be greater than 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cde240815cdafa87b0caea8a82edd9f984c1108c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;minval&lt;/code&gt;. 0-D. Exclusive upper bound on the generated integers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="485806acc79ff07bc18d2b1fb6a3ffc3fb1c6fba" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;minval&lt;/code&gt;. Maximum value (exclusive, scalar).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8685ec1f5897ddc60c635240ff65f65d4573b846" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;num_lower&lt;/code&gt;. 0-D tensor. Number of superdiagonals to keep. If negative, keep entire upper triangle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8321d443cc85bb13b56ec38b93104558f3617f58" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;on_value&lt;/code&gt;. A scalar defining the value to fill in output when &lt;code&gt;indices[j] != i&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73851f17aaa79ceec426c76bdb551981ec3f9537" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;orig_input&lt;/code&gt;. 4-D with shape &lt;code&gt;[batch, height, width, channels]&lt;/code&gt;. Gradients w.r.t. the output of &lt;code&gt;fractional_max_pool&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9ad48f6f08898e545c4df296dd8c8486d62aed6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;orig_input&lt;/code&gt;. 4-D. Gradients of gradients w.r.t. the input of &lt;code&gt;max_pool&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2b54e03eb8ffa013fe288a163240c60f4032fe7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;orig_input&lt;/code&gt;. 4-D. Gradients w.r.t. the output of &lt;code&gt;max_pool&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="584103f1c0de2c8b578d64ffc9d4aad079795951" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;orig_input&lt;/code&gt;. Original output for &lt;code&gt;fractional_max_pool&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc0b2e03648269fe7f8cebaccdaa6760d65e8a25" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;orig_input&lt;/code&gt;. Output backprop of shape &lt;code&gt;[batch, depth, rows, cols, channels]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="222f555adf0dcf51797fd2094ccf130924d37b5b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;orig_input&lt;/code&gt;. The original output tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f69421655a36c3a797aeb3ed5b34be3def99bc34" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;original_input&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb91a16a82bd803ab35c522ba23459d6a7914b0a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;pos&lt;/code&gt;. Scalar defining the number of characters to include in each substring</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4765c1275b7ff0e9607e558d71ccc63d1906b60a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;real&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00d321960c22bf434d3c662dd9ec392e02fbc298" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;ref&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94bd8bf35af12a0f69e3b20eb96bffd28969fc51" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;ref&lt;/code&gt;. A Tensor. Must have the same type as ref. A tensor of updated values to add to ref.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6096e469a867425e8cfb407b07aa9a98e6fc57bc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;ref&lt;/code&gt;. A Tensor. Must have the same type as ref. A tensor of updated values to subtract from ref.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d7e2cbf36fb740422c85f5e758d33bf37677ff5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;ref&lt;/code&gt;. A tensor of updated values to add to &lt;code&gt;ref&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a908443d2ee9123ac49ccf024384b30a45613e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;ref&lt;/code&gt;. A tensor of updated values to add to ref.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="384201f12ee24f602e85f2c8549dae5ff1430241" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;ref&lt;/code&gt;. A tensor of updated values to multiply to &lt;code&gt;ref&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fcfbd4da7f2eb5e84cd59d0c5ae7d20869bf7ce" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;ref&lt;/code&gt;. A tensor of updated values to reduce into &lt;code&gt;ref&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81ca18460668a0cae87942b78442d822674c31f9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;ref&lt;/code&gt;. A tensor of updated values to store in &lt;code&gt;ref&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3ea9aa8cf4a6a39586a73209230efb9581c1e72" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;ref&lt;/code&gt;. A tensor of updated values to subtract from &lt;code&gt;ref&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76530fa43e95fd31f790f2a4083b2c196e722963" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;ref&lt;/code&gt;. A tensor of values that &lt;code&gt;ref&lt;/code&gt; is divided by.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="015502ae442aba2b6f757d4a2e1a8d5463f7501a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;ref&lt;/code&gt;. The value to be added to the variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b694a9aebd86b44b0a4b5596ca8999e878def93" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;ref&lt;/code&gt;. The value to be assigned to the variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d837600847333986258b281d3dcbfe0f02f0ab87" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;ref&lt;/code&gt;. The value to be subtracted to the variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f78d551c3b314e845bad19b8969cdcab5ab794f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;reserve_space_1&lt;/code&gt;. When is_training is True, a 1D Tensor for some intermediate results to be reused in gradient computation. When is_training is False, a dummy empty Tensor will be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf961502d47e8879743957ac2fae9372c54f903b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;reserve_space_1&lt;/code&gt;. When is_training is True, a 1D Tensor for the computed batch variance (inverted variance in the cuDNN case) to be reused in gradient computation. When is_training is False, a 1D Tensor for the population variance to be reused in both 1st and 2nd order gradient computation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b53954ddf14a017eb11a1817c64e7c99ab517c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;s0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f1fbf0381413accaa22e804666a1674fab71ac0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;scale&lt;/code&gt;. A 1D Tensor for offset, to shift to the normalized x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc2c3f3416892929a01fc834b2d16a72a7b8fe6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;scale&lt;/code&gt;. A 1D Tensor for population mean. Used for inference only; must be empty for training.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a84f55cc53141f01e757da24a41e00b96932a3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;scale&lt;/code&gt;. A 1D Tensor for population variance. Used for inference only; must be empty for training.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb7ca9848bb114ecc12d4bffc07127d51bb44b5e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;set1&lt;/code&gt;. 1D &lt;code&gt;Tensor&lt;/code&gt;, values of a &lt;code&gt;SparseTensor&lt;/code&gt;. Must be in row-major order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c694f0ac9ff5386d0f7817857f169c9d7db3b16" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;set1&lt;/code&gt;. &lt;code&gt;Tensor&lt;/code&gt; with rank &lt;code&gt;n&lt;/code&gt;. 1st &lt;code&gt;n-1&lt;/code&gt; dimensions must be the same as &lt;code&gt;set1&lt;/code&gt;. Dimension &lt;code&gt;n&lt;/code&gt; contains values in a set, duplicates are allowed but ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a777463d99ceaf4374c201e253d1ca7b9d1ac7e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;set1_values&lt;/code&gt;. 1D &lt;code&gt;Tensor&lt;/code&gt;, values of a &lt;code&gt;SparseTensor&lt;/code&gt;. Must be in row-major order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ccdb8a3469f1e330e69648b381ac4ff4e146d4b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;shape&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc478de8c82a88ab9afc13ecb8042c1669a30501" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;sorted_inputs&lt;/code&gt;. 2-D Tensor with the same numbers of rows as &lt;code&gt;sorted_search_values&lt;/code&gt;. Contains the values that will be searched for in &lt;code&gt;sorted_search_values&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dca25bc4a2dd47492888a4a88d149f7b6dd52324" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;sp_values&lt;/code&gt;. &lt;code&gt;R&lt;/code&gt;-D. The dense Tensor operand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90c3cb7781b9e5cf5713cc11f48d13a486061682" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;sparse_indices&lt;/code&gt;. 1-D. Shape of the dense output tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c75da11cfad04ab72a27719e4d09cfdf3ca04922" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;sparse_values&lt;/code&gt;. Scalar value to set for indices not specified in &lt;code&gt;sparse_indices&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="238ca1c8e28d67ea6862c3694a7f5c0a02a672de" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;start&lt;/code&gt;. 0-D (scalar). Optional. Default is 1. Number that increments &lt;code&gt;start&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d88aff97a10f76444d2f2980838688688c0930a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;start&lt;/code&gt;. 0-D (scalar). Upper limit of sequence, exclusive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="548cb11247fbcc7e75350b2ae748bb67930f621f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;start&lt;/code&gt;. 0-D tensor. Last entry in the range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ce6be35548ca37d826816782e6eb372cadd61c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;starts&lt;/code&gt;. The deltas of each range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c3963d3cd6ec377a0b7d0a801aafd219c314c89" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;starts&lt;/code&gt;. The limits of each range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6582ea9936f97fe5a2683b2d0f15bba0b138c287" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;superdiag&lt;/code&gt;. Tensor of shape &lt;code&gt;[..., 1, M]&lt;/code&gt;, representing main diagonals of tri-diagonal matrices to the left of multiplication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9cb0ed3a6ea0f2f91b441c9c9517238984a1719" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;superdiag&lt;/code&gt;. Tensor of shape &lt;code&gt;[..., 1, M]&lt;/code&gt;, representing subdiagonals of tri-diagonal matrices to the left of multiplication. First element is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11833d0f71e9ebbb27dd7731a584b9b4cf434a54" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;superdiag&lt;/code&gt;. Tensor of shape &lt;code&gt;[..., M, N]&lt;/code&gt;, representing MxN matrices to the right of multiplication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e74af71b72d40150016dfcbcd78100dd69156bfd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0945bb2618157b10f43d88f3c9a9f67f37dad595" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;t&lt;/code&gt;. 4D backprop Tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07a1e955846f108113e6debe33c8a0abbc677e7a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;t&lt;/code&gt;. A 0-D (scalar) &lt;code&gt;Tensor&lt;/code&gt;, or a &lt;code&gt;Tensor&lt;/code&gt; with the same shape as &lt;code&gt;t&lt;/code&gt;. The maximum value to clip by.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="481ce86fb2a2c3cf925dd67f9700bb35e37bc841" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;t&lt;/code&gt;. A 0-D (scalar) &lt;code&gt;Tensor&lt;/code&gt;, or a &lt;code&gt;Tensor&lt;/code&gt; with the same shape as &lt;code&gt;t&lt;/code&gt;. The minimum value to clip by.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c7fccb22f0a7ef1252a9c9bf2f6fbc1be149e41" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;t&lt;/code&gt;. A 1D beta Tensor with size matching the last dimension of t. An offset to be added to the normalized tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2b35aa5e439f4955f30f250af0c2c8cba8a5e6b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;t&lt;/code&gt;. A 1D gamma Tensor with size matching the last dimension of t. If &quot;scale_after_normalization&quot; is true, this Tensor will be multiplied with the normalized Tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9db681dd1aa86e3ee3fe7ba46e6d69b635b1ec2a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;t&lt;/code&gt;. A 1D gamma Tensor with size matching the last dimension of t. If &quot;scale_after_normalization&quot; is true, this tensor will be multiplied with the normalized tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c160dfd2cbb3ff43ba652345e1230fd57749f010" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;t&lt;/code&gt;. A 1D mean Tensor with size matching the last dimension of t. This is the first output from tf.nn.moments, or a saved moving average thereof.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8fbf9053ac4e5562509405fe61f95ad8efe9d94" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;t&lt;/code&gt;. A 1D variance Tensor with size matching the last dimension of t. This is the second output from tf.nn.moments, or a saved moving average thereof.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2c46203367416e480f20fee725c5bfb8583d939" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;targets&lt;/code&gt;. Number of top elements to look at for computing precision.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c7e296dab41ea5767ae9af9e716188c1e07307e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;tensor&lt;/code&gt;. Updates to scatter into output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43c4ebafc58d5fa7b01868792d6c4d28efc8f731" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;value&lt;/code&gt;. 1-D with size the last dimension of &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16c755f0e8c006bce01be81eda94ed4102807011" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;value&lt;/code&gt;. 3-D with shape &lt;code&gt;[filters_height, filters_width, depth]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbb1164ab7c0c9a63ec2f7be16ec6d00f46b08db" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;value&lt;/code&gt;. 3-D with shape &lt;code&gt;[kernel_height, kernel_width, depth]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a08aefa9470380c29c2870931fd14c29fb6b6287" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;values&lt;/code&gt;. 0-D. default value to insert into location &lt;code&gt;[row, 0, ..., 0]&lt;/code&gt; for rows missing from the input sparse tensor. output indices: 2-D. the indices of the filled sparse tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5cb42993a5eb7d78e03b6511b96ce1ece97133b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;values&lt;/code&gt;. Shape [2] &lt;code&gt;Tensor&lt;/code&gt; of same &lt;code&gt;dtype&lt;/code&gt; as &lt;code&gt;values&lt;/code&gt;. values &amp;lt;= value_range[0] will be mapped to hist[0], values &amp;gt;= value_range[1] will be mapped to hist[-1].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be7a6e0c3eb172982f25cbcd1c455898e0a8bce4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;values&lt;/code&gt;. The default_value when the shape is larger than the ragged tensor. The default_value is broadcast until it is the shape of the output tensor, and then overwritten by values in the ragged tensor. The default value must be compatible with this broadcast operation, and must have fewer dimensions than the value tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79c6019792defbae8d2787fc7d6e8a53e251787b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;values&lt;/code&gt;. non-negative int scalar &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fd9cf1c80809900276b2ffcb4532b0b164d35f8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;var&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d348c7b68b0da9406a921db69070b79b8fc6bd7a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;var&lt;/code&gt;. Constant factor. Must be a scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5023ba583cd7bb16cf686831d87326f40390dc4a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;var&lt;/code&gt;. Decay factor. Must be a scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="752d84b33a6a615327aa98e8f9defb2ae0f55f59" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;var&lt;/code&gt;. Decay rate. Must be a scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b201b1da07f000ce79b0d590a38cc9414386493" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;var&lt;/code&gt;. L1 regularization. Must be a scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10672ac2b9775add95c1cfeaa5f0a91ffc5f3916" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;var&lt;/code&gt;. L2 regularization. Must be a scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d401a647e7d41fb47039f3a81e0c189ff9bbd753" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;var&lt;/code&gt;. L2 shrinkage regularization. Must be a scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9144d8605b216013d720a4d78046bbcdf7ebe8e8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;var&lt;/code&gt;. Learning rate. Must be a scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa34975ad155a92da368e07c16e9594e219be3db" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;var&lt;/code&gt;. Momentum factor. Must be a scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b2a5c01df67b90f2f9fe79f5589343606e3e59d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;var&lt;/code&gt;. Momentum. Must be a scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0bc4ccdbe7270ae8090256615e3a08f595611b2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;var&lt;/code&gt;. Must be a scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3e1cbb772d03a91f097a6ae966a978721033210" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;var&lt;/code&gt;. Ridge term. Must be a scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22e0769de7392964061e04755350dedf620d4ef4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;var&lt;/code&gt;. Scaling factor. Must be a scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4af9108171954a7a6512663fe10cfe506bb0c23" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;var&lt;/code&gt;. The change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31ff5d90b9248f5932bed9ebab1216aafb8cd2c1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;var&lt;/code&gt;. The gradient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20d5f13504127946a756919384d3b3b597cea391" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;x1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8bc9f4f67aa8926da648fe4d4462e6b338e2ceb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aa17a10022ba355339163ddf28386f5ae741e00" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;x&lt;/code&gt;. 1-D. Values to remove.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="788b76e3ef7636e6d89af838b59e429e1b0409ca" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;x&lt;/code&gt;. 2-D or higher with shape &lt;code&gt;[..., r_y, c_y]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f37772b023730c8f3c15d444da8968981b293d7c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;x&lt;/code&gt;. A 1D Tensor for offset, to shift to the normalized x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77b3a156413d471b9533ade0b04e7a181bdf319e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;x&lt;/code&gt;. A 1D Tensor for population mean. Used for inference only; must be empty for training.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d511450a4742ae9f8cc3f2ebcc3e2910789b008" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;x&lt;/code&gt;. A 1D Tensor for population variance. Used for inference only; must be empty for training.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da7568c30f9e9ccbceba2b996f965f67523b3999" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;x&lt;/code&gt;. A 1D Tensor for scaling factor, to scale the normalized x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5019a2823437a5e2fab4ad84c850ce6903e3dfe9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;x&lt;/code&gt;. A &lt;code&gt;Tensor&lt;/code&gt; of type T. Same dimension sizes as x except the first dimension, which must be the same as i's size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c425ae1a50ea3abb2e76d53710a9581aa1c47bcd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;x&lt;/code&gt;. Initial output of cell (to be used for peephole).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4af84d11d0ff5b82a797df03115d7d4fc3f37be5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;x&lt;/code&gt;. Output of the previous cell at previous time step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daf78f0a4d2fb5ff661e0e83f60cb7bf3eab73fe" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;x&lt;/code&gt;. The bias vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a397177eabcbed412bedb199cc534fbc7b6dced" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;x&lt;/code&gt;. The cell after the tanh over the whole time sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="367779eff4f4179b91e20a2593cd82daae52e475" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;x&lt;/code&gt;. The cell after the tanh.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67030852f096c951ed96f093952c9533216c0850" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;x&lt;/code&gt;. The cell input over the whole time sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af283307278130f750381c06935d4515464fd8ab" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;x&lt;/code&gt;. The cell input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86d9cb25be6662d169b371b0219f264c9ee09842" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;x&lt;/code&gt;. The cell state before the tanh over the whole time sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e80c3aa9e8a403abba2a24ee68acec960b1f8d8c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;x&lt;/code&gt;. The cell state before the tanh.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd1f979587289ad237effd1ad1d445a00d6543b9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;x&lt;/code&gt;. The current gradient of cs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="458abcd032500ec81b9e04cbaa70075fc1bd0e32" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;x&lt;/code&gt;. The forget gate over the whole time sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef4b20c6484445675a09e619010bc4d5dc796b8d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;x&lt;/code&gt;. The forget gate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9649ccc1f89320675c5ae3c3c0da2d3fba4b66a6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;x&lt;/code&gt;. The gradient of h vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f72aa4cd74ba01b6daac58a4ac1660cd8d56266" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;x&lt;/code&gt;. The input gate over the whole time sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1ccfd42a378e8c9ab5ac7e4ab4913ba7f105fa8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;x&lt;/code&gt;. The input gate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0ef70e7e701d7cca74c1761e75cb49939c41b96" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;x&lt;/code&gt;. The output gate over the whole time sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b5472f46de329aecf0c40db9059fcce2dcd9cc4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;x&lt;/code&gt;. The output gate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c68930eb6b2b4952a293a2440b423ff84113f4d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;x&lt;/code&gt;. The output h vector over the whole time sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2007b374029e40f3dd7f687ac2c022987da23ea" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;x&lt;/code&gt;. The previous cell state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4756ee81278661b445b5206c02445612bd965188" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;x&lt;/code&gt;. The previous h state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2f7cf76789655f7cb0466ba04c272b7161f3680" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;x&lt;/code&gt;. The weight matrix for forget gate peephole connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f3e9907b7220b8857cceaa8c5b74116d381cddc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;x&lt;/code&gt;. The weight matrix for input gate peephole connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a5de52b6a36a583b6dab1009453e84cf3cbbd43" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;x&lt;/code&gt;. The weight matrix for output gate peephole connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc8b11d2b2f73624e343de816ce888b7799deb5e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;x&lt;/code&gt;. The weight matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbe326e549b6163a47d94c1c32c0072d74e4c66f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;x&lt;/code&gt;. Value of the cell state at previous time step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2984733060edd70c7bbddce14922a5caf938a8b9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;x&lt;/code&gt;. Value of the initial cell state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b617ebf2dda794b943b9fdbcb2d64b834b51985d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d83362aa2b097a40dfde30d2c305c33437a220e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;y_backprop&lt;/code&gt;. A 1D Tensor for scaling factor, to scale the normalized x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac62c288f097089109600ea372a9e61a22299502" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;y_backprop&lt;/code&gt;. A 4D Tensor for input data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9e0b6b884356733793431221e72450f0692ce76" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;y_backprop&lt;/code&gt;. When is_training is True, a 1D Tensor for the computed batch mean to be reused in gradient computation. When is_training is False, a 1D Tensor for the population mean to be reused in both 1st and 2nd order gradient computation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86993b3632c700cab494238abb528745f136595b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Must have the same type as &lt;code&gt;y_backprop&lt;/code&gt;. When is_training is True, a 1D Tensor for the computed batch variance (inverted variance in the cuDNN case) to be reused in gradient computation. When is_training is False, a 1D Tensor for the population variance to be reused in both 1st and 2nd order gradient computation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3b12099df4278352e80342dc16038d5b310f1ab" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. N-D with shape &lt;code&gt;input_shape = [batch] + spatial_shape + remaining_shape&lt;/code&gt;, where spatial_shape has &lt;code&gt;M&lt;/code&gt; dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86108e2c0afe3cf824ce6b5a48d9d093771e4b7b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. N-D with shape &lt;code&gt;input_shape = [batch] + spatial_shape + remaining_shape&lt;/code&gt;, where spatial_shape has M dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f51f2b965a555a66845b73837ef0832d195d7430" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Rank &lt;code&gt;k+1&lt;/code&gt;, where &lt;code&gt;k &amp;gt;= 1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee1742cd1be5b91d16332a2515b5ba92cdd70c0b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Rank &lt;code&gt;k&lt;/code&gt; tensor where &lt;code&gt;k &amp;gt;= 2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac45e88738042259f56f981c4b6aebf43650856c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Rank &lt;code&gt;k&lt;/code&gt; tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ec990bc3fe895e2c83321b4c4c26b8718dd298e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Rank &lt;code&gt;k&lt;/code&gt;, where &lt;code&gt;k &amp;gt;= 1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f769b2ad2d6fc4de1b6b92ba75d234941d06ac80" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Rank &lt;code&gt;r+1&lt;/code&gt;, where &lt;code&gt;r &amp;gt;= 1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebda44457ef959c2debba1524a595decb1191062" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Rank &lt;code&gt;r&lt;/code&gt; tensor where &lt;code&gt;r &amp;gt;= 2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd9424403663a35f3fda3ad69291f3039adb35e8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Rank &lt;code&gt;r&lt;/code&gt;, where &lt;code&gt;r &amp;gt;= 1&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d7e340c2aaf4ea6e3669567e254dd1b97ee21f5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Tensor to copy/update.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29c2cd6a8ec729ae7ce7ec9ec2e1b4896b6420d5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Tensor to update.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86f3ae749f82c6a9dd39b9b08c821b3d3e82076b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. The &lt;code&gt;flat_values&lt;/code&gt; for the &lt;code&gt;RaggedTensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91dcb915b56876ac3b13fddbd636a541ec46c25a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. The &lt;code&gt;flat_values&lt;/code&gt; for the &lt;code&gt;params&lt;/code&gt; RaggedTensor. There was a terminology change at the python level from dense_values to flat_values, so dense_values is the deprecated name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef0280300f9a1909c63fdefc7dd37a5de1c77a02" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. The &lt;code&gt;input&lt;/code&gt; to squeeze.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a59b1e7082341e85a59e6f05e0dca35208ca9551" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. The concatenated tensor to write to the TensorArray.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0d5e2ff83d64ba2907c303428bb18fac55dbea8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. The default value to produce when &lt;code&gt;output&lt;/code&gt; is not fed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f29bdbaf0ab29496787660cba02ac73a1446b6a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. The default value to produce when output is not fed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="159ae89d700f697f027e92d7a7bacb64d445d56a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. The input tensor to be folded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1ce5de5f2661b13b0834e829d05061418c8eb26" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. The input tensor to be padded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0057138221c40cad1ee0ffb72eb49acd77d1aa5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. The input to reverse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="972060c36e0da6057d4a5afdf12138b64e09fca0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. The key used to represent empty key buckets internally. Must not be used in insert or lookup operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8374c7408892794d5cdc0ac57c582a1067e5e087" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. The new value for this variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adbd5b2e760d1be852dfd95d7869e6818abd2884" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. The shape of the output tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62d0db9ef95dcff34557adb7426d5ce817d9755a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. The source tensor of type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c53a409f1ec2696540f3e4b63a4b0a82033bd090" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. The tensor from which to gather values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="793ab694de2a37ffa07e200d3f4a30c06af9645c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. The tensor from which to gather values. Must be at least rank &lt;code&gt;axis + 1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da3aac960a8fcc1d7a08cb1f339b3595f39a28f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. The tensor passed to &lt;code&gt;output&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f37602b1f1944b7c5c3c6e983dee1144a13ad57" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. The tensor to be forwarded to the appropriate output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d98c5c7be45631706ba2d661606a823a752e7dc1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. The tensor to be made available to the child frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c68bf110e84e2dd7fb9dedc58d7f44baebb78f0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. The tensor to be made available to the next iteration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5284ae92185aacf1b3924ad72d83e416791e4138" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. The tensor to be made available to the parent frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40e1e7107e7709e97d08e2c393a6921317ae94d5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. The tensor to be pushed onto the stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4e6ca80d46ba110ec4713ea25013196161ec14" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. The tensor to be shuffled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d0e2198171ab03da31a3a64bb70f0da57c00463" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. The tensor to be stored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aadf93c11202994fe43d7fb9ce07795dbd64633" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. The tensor to send.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b3da6c6e9cc4b8cea97fa0f09dc5b0dcf6c858d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. The tensor to split.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2471eac1937b6234e1a8516de8b609bb47bac540" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. The tensor to write to the TensorArray.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce4139e5c7cdbac5395f59f5f15b9600a3265050" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. The value to add to this variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aba2811e85cc43cf5dfdf8f328babd18bf586074" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. The value to subtract from this variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3eba908531aaf59236a12099467a1b771d43f3c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. The values of the hypothesis list SparseTensor. This is an N-length vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d60acb4f7bc2a7b4365545c85ac191c403b206e1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Updates to scatter into output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="934f4650863e286bbdfd05ca1bd456e432cfba94" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Values of type Tval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ecf7cb9aeba46b8de775d688bfe28319142a261" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. Values to associate with keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e259fb6af0f88a9b1c5f5ac3897951bf52fb52" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. a tensor of type T.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd1c40b472e393d7788a1f4f142f6c5c372ad959" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. any tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01c92537e9513767b3a7362fdd2d80cb690d745f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. the value by which the variable will be incremented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6f3e1f564599b8e2dea6c52dc2774f4bdd0ec00" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tensor&lt;/code&gt;. the value to set the new tensor to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="081e36df6e3049f963230e61413226668788db1f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TensorProto&lt;/code&gt;. Depending on the type, it may contain data in the &quot;tensor_content&quot; attribute, which is not directly useful to Python programs. To access the values you should convert the proto back to a numpy ndarray with &lt;a href=&quot;make_ndarray&quot;&gt;&lt;code&gt;tf.make_ndarray(proto)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Un &lt;code&gt;TensorProto&lt;/code&gt; . Dependiendo del tipo, puede contener datos en el atributo &quot;tensor_content&quot;, que no es directamente &amp;uacute;til para los programas Python. Para acceder a los valores, debe convertir el proto nuevamente a un ndarray numpy con &lt;a href=&quot;make_ndarray&quot;&gt; &lt;code&gt;tf.make_ndarray(proto)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="032f5880e66ebc02bbca7ad5618bc8eb3de64093" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TensorShape&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f9f526b67bf895676cc42357c4eb9fba2fa36a6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TensorShape&lt;/code&gt; containing the combined information of &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;.</source>
          <target state="translated">Un &lt;code&gt;TensorShape&lt;/code&gt; que contiene la informaci&amp;oacute;n combinada de &lt;code&gt;self&lt;/code&gt; y el &lt;code&gt;other&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7a42a9fa75be5e46f0fe5fb1fe3a091196d206b1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TensorShape&lt;/code&gt; containing the statically known shape of this ragged tensor. Ragged dimensions have a size of &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">Un &lt;code&gt;TensorShape&lt;/code&gt; que contiene la forma est&amp;aacute;ticamente conocida de este tensor irregular. Las dimensiones irregulares tienen un tama&amp;ntilde;o de &lt;code&gt;None&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71d0f0bbc4a79256a8c1fc5d3082cbb6adfa96d6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TensorShape&lt;/code&gt; object.</source>
          <target state="translated">Un objeto &lt;code&gt;TensorShape&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c15b1c6b6e9d293114f310d6e3e9f69959bb599c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TensorShape&lt;/code&gt; representing the broadcasted shape.</source>
          <target state="translated">A &lt;code&gt;TensorShape&lt;/code&gt; que representa la forma emitido.</target>
        </trans-unit>
        <trans-unit id="bec65e8b706bd3d2b47b92ccbbed9492d4bbd3da" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TensorShape&lt;/code&gt; representing the shape of this tensor, a &lt;code&gt;TensorShapeProto&lt;/code&gt;, a list, a tuple, or None.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f51a45f832678dc4063353a38c7d18ad899410c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TensorShape&lt;/code&gt; representing the shape of this tensor.</source>
          <target state="translated">Un &lt;code&gt;TensorShape&lt;/code&gt; que representa la forma de este tensor.</target>
        </trans-unit>
        <trans-unit id="3feaf905338bcec481c5425ba23cc2831d6dde0b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TensorShape&lt;/code&gt; represents a possibly-partial shape specification for a &lt;code&gt;Tensor&lt;/code&gt;. It may be one of the following:</source>
          <target state="translated">Un &lt;code&gt;TensorShape&lt;/code&gt; representa una especificaci&amp;oacute;n de forma posiblemente parcial para un &lt;code&gt;Tensor&lt;/code&gt; . Puede ser uno de los siguientes:</target>
        </trans-unit>
        <trans-unit id="50c9d1eb4f6b85137c6e8d4fe05c23fc4d9fee98" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TensorShape&lt;/code&gt; which is the most specific compatible shape of &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;.</source>
          <target state="translated">Un &lt;code&gt;TensorShape&lt;/code&gt; que es la forma compatible m&amp;aacute;s espec&amp;iacute;fica del &lt;code&gt;self&lt;/code&gt; y el &lt;code&gt;other&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bbf2b71ac2fe9d19d121b95d59f8329e7c603881" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TensorShape&lt;/code&gt; whose dimensions are the concatenation of the dimensions in &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;.</source>
          <target state="translated">Un &lt;code&gt;TensorShape&lt;/code&gt; cuyas dimensiones son la concatenaci&amp;oacute;n de las dimensiones en &lt;code&gt;self&lt;/code&gt; y en el &lt;code&gt;other&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0a1fb52c8f5388c5e8aaa686fad9b543f5730cfa" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TensorShape&lt;/code&gt;.</source>
          <target state="translated">Un &lt;code&gt;TensorShape&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cb6f6a4061771897966d36078e64521ec83b82f2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Topology&lt;/code&gt; object that describes the physical TPU topology.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fa111a58abecb8ba1179526feb4f1301abad392" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Topology&lt;/code&gt; that describes the TPU topology.</source>
          <target state="translated">Una &lt;code&gt;Topology&lt;/code&gt; que describe la topolog&amp;iacute;a de TPU.</target>
        </trans-unit>
        <trans-unit id="51005f5de05012a6f74c4ceece9876803e2a11b1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TrainSpec&lt;/code&gt; instance to specify the training specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a75f12de0696ce98f132c7056d78fdb2b74929c8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TypeSpec&lt;/code&gt; that is compatible with &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f7b13949d0de5c0635fdc7844f04a9741a13a6b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TypeSpec&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1cf6640d125e113462529e80bbc527885478bf0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Variable&lt;/code&gt; object or &lt;code&gt;None&lt;/code&gt; if the moving average of &lt;code&gt;var&lt;/code&gt; is not maintained.</source>
          <target state="translated">Un objeto &lt;code&gt;Variable&lt;/code&gt; o &lt;code&gt;None&lt;/code&gt; si no se mantiene la media m&amp;oacute;vil de &lt;code&gt;var&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cdfb33262953d60a52edc324b14d6f179e69dcb1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Variable&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdd75d9c801bd17204fc010f32cd900dedd2d9a0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Variable&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c57d26d83fe5ac27c3d3197b0f66595aadeebd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;VariableDef&lt;/code&gt; protocol buffer, or &lt;code&gt;None&lt;/code&gt; if the &lt;code&gt;Variable&lt;/code&gt; is not in the specified name scope.</source>
          <target state="translated">Un b&amp;uacute;fer de protocolo &lt;code&gt;VariableDef&lt;/code&gt; , o &lt;code&gt;None&lt;/code&gt; si la &lt;code&gt;Variable&lt;/code&gt; no est&amp;aacute; en el &amp;aacute;mbito de nombre especificado.</target>
        </trans-unit>
        <trans-unit id="e98103be76a378bf27d98b06fb6e906a7f6b4fb7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;VersionDef&lt;/code&gt;.</source>
          <target state="translated">Una &lt;code&gt;VersionDef&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c01f74702a7545240d26c47e9eca5bb446d21696" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;[..., frames, fft_unique_bins]&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; of &lt;code&gt;complex64&lt;/code&gt;/&lt;code&gt;complex128&lt;/code&gt; STFT values where &lt;code&gt;fft_unique_bins&lt;/code&gt; is &lt;code&gt;fft_length // 2 + 1&lt;/code&gt; (the unique components of the FFT).</source>
          <target state="translated">A &lt;code&gt;[..., frames, fft_unique_bins]&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; de valores STFT &lt;code&gt;complex64&lt;/code&gt; / &lt;code&gt;complex128&lt;/code&gt; donde &lt;code&gt;fft_unique_bins&lt;/code&gt; es &lt;code&gt;fft_length // 2 + 1&lt;/code&gt; (los componentes &amp;uacute;nicos de la FFT).</target>
        </trans-unit>
        <trans-unit id="744366c78df5b694a495116a35e4f479f5d828ab" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;[..., frames, frame_length // 2]&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; of &lt;code&gt;float32&lt;/code&gt;/&lt;code&gt;float64&lt;/code&gt; MDCT values where &lt;code&gt;frames&lt;/code&gt; is roughly &lt;code&gt;samples // (frame_length // 2)&lt;/code&gt; when &lt;code&gt;pad_end=False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62380dc595472b689d3684fe1ea59d7db4335cd4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;[..., num_mel_bins]&lt;/code&gt;&lt;code&gt;float32&lt;/code&gt;/&lt;code&gt;float64&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; of log-magnitude mel-scale spectrograms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1eb26d439728975179988d0e9003435d281665b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;[..., num_mel_bins]&lt;/code&gt;&lt;code&gt;float32&lt;/code&gt;/&lt;code&gt;float64&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; of the MFCCs of &lt;code&gt;log_mel_spectrograms&lt;/code&gt;.</source>
          <target state="translated">A &lt;code&gt;[..., num_mel_bins]&lt;/code&gt; &lt;code&gt;float32&lt;/code&gt; / &lt;code&gt;float64&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; de los &lt;code&gt;log_mel_spectrograms&lt;/code&gt; de log_mel_spectrograms .</target>
        </trans-unit>
        <trans-unit id="32131acfa3412f59fb52a38fb2a867d33b0ece8c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;[..., samples, ...]&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt;. The rank and dimensions may be unknown. Rank must be at least 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f94f2138c2c8903da9b1b3219a1d29d0424d3c73" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;[..., samples]&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; of &lt;code&gt;float32&lt;/code&gt;/&lt;code&gt;float64&lt;/code&gt; signals representing the inverse MDCT for each input MDCT in &lt;code&gt;mdcts&lt;/code&gt; where &lt;code&gt;samples&lt;/code&gt; is &lt;code&gt;(frames - 1) * (frame_length // 2) + frame_length&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce9f6177ab5fc439dace367b4a5345171eed0635" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;[..., samples]&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; of &lt;code&gt;float32&lt;/code&gt;/&lt;code&gt;float64&lt;/code&gt; signals representing the inverse STFT for each input STFT in &lt;code&gt;stfts&lt;/code&gt;.</source>
          <target state="translated">Un &lt;code&gt;[..., samples]&lt;/code&gt; &lt;code&gt;Tensor&lt;/code&gt; de se&amp;ntilde;ales &lt;code&gt;float32&lt;/code&gt; / &lt;code&gt;float64&lt;/code&gt; que representan el STFT inverso para cada STFT de entrada en &lt;code&gt;stfts&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6075fad5ecf355d776ad5732549526f7b56a8678" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;[..., samples]&lt;/code&gt;&lt;code&gt;float32&lt;/code&gt;/&lt;code&gt;float64&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; containing the DCT of &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="translated">Un &lt;code&gt;Tensor&lt;/code&gt; &lt;code&gt;[..., samples]&lt;/code&gt; &lt;code&gt;float32&lt;/code&gt; / &lt;code&gt;float64&lt;/code&gt; que contiene el DCT de &lt;code&gt;input&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4cd37530f7ff32c300115c622c30ca20d847a0e2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;[..., samples]&lt;/code&gt;&lt;code&gt;float32&lt;/code&gt;/&lt;code&gt;float64&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; containing the IDCT of &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="translated">Un &lt;code&gt;Tensor&lt;/code&gt; &lt;code&gt;[..., samples]&lt;/code&gt; &lt;code&gt;float32&lt;/code&gt; / &lt;code&gt;float64&lt;/code&gt; que contiene el IDCT de la &lt;code&gt;input&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="26a9e67546ebccc6840c24ea917cd56be1fa07c5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;[..., samples]&lt;/code&gt;&lt;code&gt;float32&lt;/code&gt;/&lt;code&gt;float64&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; containing the signals to take the DCT of.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3973fe2b4fc92d127601115e41d4b274e8f8b0ce" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;[..., samples]&lt;/code&gt;&lt;code&gt;float32&lt;/code&gt;/&lt;code&gt;float64&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; of real-valued signals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e903cd242e0c3c6dfbe90f542f6e23dce4324516" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;_Head&lt;/code&gt; instance constructed with a method such as &lt;code&gt;tf.contrib.estimator.multi_label_head&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5575e807e4df57e7f650cefb2298a637279d86d0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;_TPUEmbeddingColumnV2&lt;/code&gt;.</source>
          <target state="translated">Un &lt;code&gt;_TPUEmbeddingColumnV2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8cda083572d5dcbf7eac442afd0a490f45b99db7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;batch_size&lt;/code&gt; 1-D tensor of per-example NCE losses.</source>
          <target state="translated">Un &lt;code&gt;batch_size&lt;/code&gt; 1-D de tama&amp;ntilde;o de lote de p&amp;eacute;rdidas de NCE por ejemplo.</target>
        </trans-unit>
        <trans-unit id="234c59bd7294d37cf9ea2be889c606e476766439" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;batch_size&lt;/code&gt; 1-D tensor of per-example sampled softmax losses.</source>
          <target state="translated">Un &lt;code&gt;batch_size&lt;/code&gt; 1-D de batch_size de p&amp;eacute;rdidas softmax muestreadas por ejemplo.</target>
        </trans-unit>
        <trans-unit id="e9b4a3ec587311c181eadd170788481387edcf01" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;bool&lt;/code&gt; (default: False).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fce774e41816160bd3d8665a32b670496276c239" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;bool&lt;/code&gt; Tensor. This tensor controls whether the input is added to the queue or not. If it is a scalar and evaluates &lt;code&gt;True&lt;/code&gt;, then &lt;code&gt;tensors&lt;/code&gt; are all added to the queue. If it is a vector and &lt;code&gt;enqueue_many&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, then each example is added to the queue only if the corresponding value in &lt;code&gt;keep_input&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;. This tensor essentially acts as a filtering mechanism.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae2d4008147e6c059bf63c3962bbbd3d44817732" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;bool&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59322927dd95da07472efdd698239019f75c36c3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;bool&lt;/code&gt;. A &lt;code&gt;bool&lt;/code&gt; denoting whether the input is a batched &lt;code&gt;RaggedTensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3004a57c2fe298f885115cf57653a5aab2d07886" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;bool&lt;/code&gt;. A bool indicating whether the resulted tensor needs to be multiplied with gamma.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37be84d400b8a88fe9a5f9d8a525ecbb7210d7d3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;bool&lt;/code&gt;. Boolean indicating whether gradient_shape is unknown, in which case the input is ignored during validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8c8b168a66ac7eb9f22b2c3148f31d2ec789d82" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;bool&lt;/code&gt;. Determines whether all sampled classes in a batch are unique.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feff9c83df68dbef17c9ab6d58f8e1c600f801f6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;bool&lt;/code&gt;. If &lt;code&gt;True&lt;/code&gt;, normalizes the Levenshtein distance by length of &lt;code&gt;truth.&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9c08cb8b5d4c11da8066d078a8220f9eb7b3c5a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;bool&lt;/code&gt;. If &lt;code&gt;True&lt;/code&gt;, skip the empty strings from the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0d21d9dbc291c01c147c3f459f528bbe5673c12" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;bool&lt;/code&gt;. If true, returns the hash of the cross instead of the string. This will allow us avoiding string manipulations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7493a093b46d2153de1a86600f8324b6bbf158d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;bool&lt;/code&gt;. If unique is true, we sample with rejection, so that all sampled candidates in a batch are unique. This requires some approximation to estimate the post-rejection sampling probabilities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c584074ff6b3189f7d4691ee19f77b3fd4f04c01" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;bool&lt;/code&gt;. Ignored. unique.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4070f8f30db2bf1d992fe16f2cd21d47f947ff9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;bool&lt;/code&gt;. Whether the cell uses peephole connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="489a47a84a4826757e675ed9b22595c4ab69490c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;bool&lt;/code&gt;. Whether to output the number of occurrences of each value or 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="117b1f6ee5e740b0a2c0201379854be51d40e06d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;bool&lt;/code&gt;. Whether to remove &quot;accidental hits&quot; where a sampled class equals one of the target classes. If set to &lt;code&gt;True&lt;/code&gt;, this is a &quot;Sampled Logistic&quot; loss instead of NCE, and we are learning to generate log-odds instead of log probabilities. See our &lt;a href=&quot;https://www.tensorflow.org/extras/candidate_sampling.pdf&quot;&gt;Candidate Sampling Algorithms Reference&lt;/a&gt;. Default is False.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21ef04cd714c781a505eef51c03e02ff881dd3bf" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;bool&lt;/code&gt;. Whether to remove &quot;accidental hits&quot; where a sampled class equals one of the target classes. If set to &lt;code&gt;True&lt;/code&gt;, this is a &quot;Sampled Logistic&quot; loss instead of NCE, and we are learning to generate log-odds instead of log probabilities. See our Candidate Sampling Algorithms Reference (&lt;a href=&quot;https://www.tensorflow.org/extras/candidate_sampling.pdf&quot;&gt;pdf&lt;/a&gt;). Default is False.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94ca043fab852afcde30c1fcd5c47a5c3b5411d7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;bool&lt;/code&gt;. Whether to use peephole weights.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a157031cc2af6bf640aa6216b6d8a56c96ecc63" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;bool&lt;/code&gt;. whether to remove &quot;accidental hits&quot; where a sampled class equals one of the target classes. Default is True.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97bbf816cba035e3e6f0e16a7f8d3533a17b3891" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;bucketized_column&lt;/code&gt; can also be crossed with another categorical column using &lt;code&gt;crossed_column&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e0b1a6e89819550d0db3c8bd3e0a458ebc1c70" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;bytearray&lt;/code&gt;, &lt;code&gt;bytes&lt;/code&gt;, &lt;code&gt;str&lt;/code&gt;, or &lt;code&gt;unicode&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f93677821b7dfba69c8b4036f7d211fe758e22f4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;bytes&lt;/code&gt; object.</source>
          <target state="translated">Un objeto de &lt;code&gt;bytes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b1717ae1c7ef4f1f767dd22bfa1d2bb0215b75fc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;bytes&lt;/code&gt;, &lt;code&gt;str&lt;/code&gt;, or &lt;code&gt;unicode&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f0e37899e93bd6c6173b967e8da84217a18d7c1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;call(input_at_t, states_at_t)&lt;/code&gt; method, returning &lt;code&gt;(output_at_t, states_at_t_plus_1)&lt;/code&gt;. The call method of the cell can also take the optional argument &lt;code&gt;constants&lt;/code&gt;, see section &quot;Note on passing external constants&quot; below.</source>
          <target state="translated">Un m&amp;eacute;todo de &lt;code&gt;call(input_at_t, states_at_t)&lt;/code&gt; , que devuelve &lt;code&gt;(output_at_t, states_at_t_plus_1)&lt;/code&gt; . El m&amp;eacute;todo de llamada de la celda tambi&amp;eacute;n puede tomar las &lt;code&gt;constants&lt;/code&gt; argumento opcionales , consulte la secci&amp;oacute;n &quot;Nota sobre el paso de constantes externas&quot; a continuaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="c7525cf65a2c156d9b3eb3c7249b2f00e75076a3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;complex64&lt;/code&gt;/&lt;code&gt;complex128&lt;/code&gt;&lt;code&gt;[..., frames, fft_unique_bins]&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; of STFT bins representing a batch of &lt;code&gt;fft_length&lt;/code&gt;-point STFTs where &lt;code&gt;fft_unique_bins&lt;/code&gt; is &lt;code&gt;fft_length // 2 + 1&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6567bec70db8c7419b28e4e6dc171b245478d517" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;dequeue_many&lt;/code&gt; operation to create batches from the queue.</source>
          <target state="translated">Una operaci&amp;oacute;n &lt;code&gt;dequeue_many&lt;/code&gt; para crear lotes a partir de la cola.</target>
        </trans-unit>
        <trans-unit id="4706cc010bcf71d0d7a1135d4d5583bad705db08" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;dict&lt;/code&gt; containing the key-value pairs that were passed to &lt;code&gt;report_benchmark&lt;/code&gt;. If &lt;code&gt;store_trace&lt;/code&gt; option is used, then &lt;code&gt;full_chrome_trace_format&lt;/code&gt; will be included in return dictionary even though it is not passed to &lt;code&gt;report_benchmark&lt;/code&gt; with &lt;code&gt;extras&lt;/code&gt;.</source>
          <target state="translated">Un &lt;code&gt;dict&lt;/code&gt; ado que contiene los pares clave-valor que se pasaron a &lt;code&gt;report_benchmark&lt;/code&gt; . Si se &lt;code&gt;store_trace&lt;/code&gt; opci&amp;oacute;n store_trace , entonces &lt;code&gt;full_chrome_trace_format&lt;/code&gt; se incluir&amp;aacute; en el diccionario de retorno aunque no se pase a &lt;code&gt;report_benchmark&lt;/code&gt; con &lt;code&gt;extras&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e634b684ee273bfb61c0e6364a5d8447563a6b2e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;dict&lt;/code&gt; containing values that will be passed to &lt;a href=&quot;../callbacks/callbacklist#on_train_batch_end&quot;&gt;&lt;code&gt;tf.keras.callbacks.CallbackList.on_train_batch_end&lt;/code&gt;&lt;/a&gt;. Typically, the values of the &lt;code&gt;Model&lt;/code&gt;'s metrics are returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0f507aa8348ddf6c26d68ad95bf3b34747d8d50" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;dict&lt;/code&gt; containing values that will be passed to &lt;a href=&quot;../callbacks/callbacklist#on_train_batch_end&quot;&gt;&lt;code&gt;tf.keras.callbacks.CallbackList.on_train_batch_end&lt;/code&gt;&lt;/a&gt;. Typically, the values of the &lt;code&gt;Model&lt;/code&gt;'s metrics are returned. Example: &lt;code&gt;{'loss': 0.2, 'accuracy': 0.7}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9b25c7d05992049d63dc2e0a8eff36cbb4034fe" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;dict&lt;/code&gt; containing values that will be passed to &lt;a href=&quot;callbacks/callbacklist#on_train_batch_end&quot;&gt;&lt;code&gt;tf.keras.callbacks.CallbackList.on_train_batch_end&lt;/code&gt;&lt;/a&gt;. Typically, the values of the &lt;code&gt;Model&lt;/code&gt;'s metrics are returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5372553dec14e809196579423d3f4f6128c50b15" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;dict&lt;/code&gt; containing values that will be passed to &lt;a href=&quot;callbacks/callbacklist#on_train_batch_end&quot;&gt;&lt;code&gt;tf.keras.callbacks.CallbackList.on_train_batch_end&lt;/code&gt;&lt;/a&gt;. Typically, the values of the &lt;code&gt;Model&lt;/code&gt;'s metrics are returned. Example: &lt;code&gt;{'loss': 0.2, 'accuracy': 0.7}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="936950c8617e3402be5c9d11d22568fa0c5e905e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;dict&lt;/code&gt; mapping &lt;code&gt;int&lt;/code&gt;s to callables, or a &lt;code&gt;list&lt;/code&gt; of (&lt;code&gt;int&lt;/code&gt;, callable) pairs, or simply a list of callables (in which case the index serves as the key). Each callable must return a matching structure of tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f39b37431f09d31272797837de61bd28a637307" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;dict&lt;/code&gt; mapping feature keys to &lt;code&gt;FixedLenFeature&lt;/code&gt; or &lt;code&gt;VarLenFeature&lt;/code&gt; or &lt;code&gt;RaggedFeature&lt;/code&gt; values. These features are associated with a &lt;code&gt;SequenceExample&lt;/code&gt; as a whole.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d78db9aaab339820fd7441320a547ea00827b076" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;dict&lt;/code&gt; mapping feature keys to &lt;code&gt;FixedLenFeature&lt;/code&gt; or &lt;code&gt;VarLenFeature&lt;/code&gt; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6b3bb6c5cf32e60d85ceef6df075f422871f655" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;dict&lt;/code&gt; mapping feature keys to &lt;code&gt;FixedLenFeature&lt;/code&gt; or &lt;code&gt;VarLenFeature&lt;/code&gt; values. See &lt;a href=&quot;../../../../io/parse_example&quot;&gt;&lt;code&gt;tf.io.parse_example&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81a7ca3a8259ec3481f24d9cce767e4310f6074e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;dict&lt;/code&gt; mapping feature keys to &lt;code&gt;FixedLenFeature&lt;/code&gt; or &lt;code&gt;VarLenFeature&lt;/code&gt; values. See &lt;a href=&quot;../../io/parse_example&quot;&gt;&lt;code&gt;tf.io.parse_example&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc7fa31aee93415d70f2f7a154887e2172246fa1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;dict&lt;/code&gt; mapping feature keys to &lt;code&gt;FixedLenFeature&lt;/code&gt;, &lt;code&gt;VarLenFeature&lt;/code&gt;, &lt;code&gt;RaggedFeature&lt;/code&gt;, and &lt;code&gt;SparseFeature&lt;/code&gt; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad37e6eaff3f5b14086a60264eb3dbdaa0407cfe" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;dict&lt;/code&gt; mapping feature keys to &lt;code&gt;FixedLenFeature&lt;/code&gt;, &lt;code&gt;VarLenFeature&lt;/code&gt;, &lt;code&gt;SparseFeature&lt;/code&gt;, and &lt;code&gt;RaggedFeature&lt;/code&gt; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f8a5e726116e3ec7910e026ad0095c71eb0cadb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;dict&lt;/code&gt; mapping feature keys to &lt;code&gt;FixedLenSequenceFeature&lt;/code&gt; or &lt;code&gt;VarLenFeature&lt;/code&gt; or &lt;code&gt;RaggedFeature&lt;/code&gt; values. These features are associated with data within the &lt;code&gt;FeatureList&lt;/code&gt; section of the &lt;code&gt;SequenceExample&lt;/code&gt; proto.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="984ff4f96246ec5b08c39c46b5d8f0d97087a11a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;dict&lt;/code&gt; mapping feature keys to &lt;code&gt;Tensor&lt;/code&gt; and &lt;code&gt;SparseTensor&lt;/code&gt; values.</source>
          <target state="translated">Claves de funciones de asignaci&amp;oacute;n de un &lt;code&gt;dict&lt;/code&gt; a los valores de &lt;code&gt;Tensor&lt;/code&gt; y &lt;code&gt;SparseTensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c70f207f2d353ac2bd1a2082d6f14447e483b0b2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;dict&lt;/code&gt; mapping feature keys to &lt;code&gt;Tensor&lt;/code&gt;, &lt;code&gt;SparseTensor&lt;/code&gt;, and &lt;code&gt;RaggedTensor&lt;/code&gt; values.</source>
          <target state="translated">Un &lt;code&gt;dict&lt;/code&gt; funci&amp;oacute;n de reasignaci&amp;oacute;n de claves para el &lt;code&gt;Tensor&lt;/code&gt; , &lt;code&gt;SparseTensor&lt;/code&gt; y &lt;code&gt;RaggedTensor&lt;/code&gt; valores.</target>
        </trans-unit>
        <trans-unit id="52e35071bd031c84d1d040e158e23706de6e0d0f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;dict&lt;/code&gt; of metrics keyed by string name. The value is an instance of &lt;code&gt;Metric&lt;/code&gt; class.</source>
          <target state="translated">Un &lt;code&gt;dict&lt;/code&gt; ado de m&amp;eacute;tricas codificadas por nombre de cadena. El valor es una instancia de la clase &lt;code&gt;Metric&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="66b1b45c457c9aec89f9dfd748937d8deb769658" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;dict&lt;/code&gt; of metrics to be updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="655649bfde368fdf33843b4d78183995afdbc6ae" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;dict&lt;/code&gt; of names to variables: The keys are the names that will be used to save or restore the variables in the checkpoint files.</source>
          <target state="translated">Un &lt;code&gt;dict&lt;/code&gt; ado de nombres a variables: Las claves son los nombres que se usar&amp;aacute;n para guardar o restaurar las variables en los archivos de puntos de control.</target>
        </trans-unit>
        <trans-unit id="ad955ce74282aa25b3d0fe0a4b82d69a8879b169" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;dict&lt;/code&gt; of predicted &lt;code&gt;Tensor&lt;/code&gt; keyed by prediction name.</source>
          <target state="translated">Un &lt;code&gt;dict&lt;/code&gt; ado de &lt;code&gt;Tensor&lt;/code&gt; predicho codificado por nombre de predicci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="c19acde3835b9662918b73a3ac5fd77a0a3d78ef" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;dict&lt;/code&gt; of updated metrics keyed by name. The value is an instance of &lt;code&gt;Metric&lt;/code&gt; class.</source>
          <target state="translated">Un &lt;code&gt;dict&lt;/code&gt; ado de m&amp;eacute;tricas actualizadas codificadas por nombre. El valor es una instancia de la clase &lt;code&gt;Metric&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8bde2850811394033b0387b16bed8e127605080e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;dict&lt;/code&gt; of values to feed for each op iteration (see the &lt;code&gt;feed_dict&lt;/code&gt; parameter of &lt;code&gt;Session.run&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebfab175cd54f8224a587a13078cb7aae2e295f3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;float32&lt;/code&gt;/&lt;code&gt;float64&lt;/code&gt;&lt;code&gt;[..., frames, frame_length // 2]&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; of MDCT bins representing a batch of &lt;code&gt;frame_length // 2&lt;/code&gt;-point MDCTs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6429d8d0bad883c49bdddd6d084fce057b37e590" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;float&lt;/code&gt; giving the threshold value of the activation function below which values will be damped or set to zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30c140611a4f2f02500021d29645f6d88f313f34" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;float&lt;/code&gt; matrix &lt;code&gt;(batch_size x 1)&lt;/code&gt; containing, for the sequence found, the negative of the sum of the greatest logit at each timeframe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f653a514a95c2e76d8324e3b70d854b77c83363" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;float&lt;/code&gt; matrix &lt;code&gt;(batch_size x top_paths)&lt;/code&gt; containing sequence log-probabilities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23cb4e0f021ffebf2158cc3cfe6585ae23e5d824" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;float&lt;/code&gt; matrix &lt;code&gt;[batch_size, top_paths]&lt;/code&gt; containing sequence log-probabilities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a2ea4a9bb1c97aab5cddcf9601ae10115e28421" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;float&lt;/code&gt; that governs the slope for values lower than the threshold.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64ee1273794aa7287630c7398ef86cfc2608251e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;float&lt;/code&gt; that sets the saturation threshold (the largest value the function will return).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2abd976fb9bc5e5100fcfdcf038a6fd6a608ca5a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;float&lt;/code&gt;. A small float number to avoid dividing by 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1b07c3e135d9ccf4d6b651c291efb6a1b523764" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;float&lt;/code&gt;. Symmetric l1 regularization strength.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="224c77218b3983e2b18c6d84ad6141773a8feb20" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;float&lt;/code&gt;. Symmetric l2 regularization strength.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3978bbf1553fb811e45213e6b538702ac36db3ab" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;float&lt;/code&gt;. Symmetric l2 regularization strength. Should be a positive float.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e9da982f86de37854a3ceefb160fa90178e6b05" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;float&lt;/code&gt;. The maximum value of the output that needs to be clipped. Example: set this to 6 for Relu6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="754085689abb9032542f931c91335da1cf7ac1da" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;float&lt;/code&gt;. The sample rate of the signal in hertz.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b583dd1f8190c90c5b43f51383f2d3d59b0157aa" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;get_initial_state(inputs=None, batch_size=None, dtype=None)&lt;/code&gt; method that creates a tensor meant to be fed to &lt;code&gt;call()&lt;/code&gt; as the initial state, if the user didn't specify any initial state via other means. The returned initial state should have a shape of [batch_size, cell.state_size]. The cell might choose to create a tensor full of zeros, or full of other values based on the cell's implementation. &lt;code&gt;inputs&lt;/code&gt; is the input tensor to the RNN layer, which should contain the batch size as its shape[0], and also dtype. Note that the shape[0] might be &lt;code&gt;None&lt;/code&gt; during the graph construction. Either the &lt;code&gt;inputs&lt;/code&gt; or the pair of &lt;code&gt;batch_size&lt;/code&gt; and &lt;code&gt;dtype&lt;/code&gt; are provided. &lt;code&gt;batch_size&lt;/code&gt; is a scalar tensor that represents the batch size of the inputs. &lt;code&gt;dtype&lt;/code&gt; is &lt;a href=&quot;../../dtypes/dtype&quot;&gt;&lt;code&gt;tf.DType&lt;/code&gt;&lt;/a&gt; that represents the dtype of the inputs. For backward compatible reason, if this method is not implemented by the cell, the RNN layer will create a zero filled tensor with the size of [batch_size, cell.state_size]. In the case that &lt;code&gt;cell&lt;/code&gt; is a list of RNN cell instances, the cells will be stacked on top of each other in the RNN, resulting in an efficient stacked RNN.</source>
          <target state="translated">Un &lt;code&gt;get_initial_state(inputs=None, batch_size=None, dtype=None)&lt;/code&gt; que crea un tensor destinado a ser alimentado a &lt;code&gt;call()&lt;/code&gt; como estado inicial, si el usuario no especific&amp;oacute; ning&amp;uacute;n estado inicial por otros medios. El estado inicial devuelto debe tener la forma [batch_size, cell.state_size]. La celda podr&amp;iacute;a optar por crear un tensor lleno de ceros o lleno de otros valores seg&amp;uacute;n la implementaci&amp;oacute;n de la celda. &lt;code&gt;inputs&lt;/code&gt; es el tensor de entrada a la capa RNN, que debe contener el tama&amp;ntilde;o del lote como su forma [0], y tambi&amp;eacute;n dtype. Tenga en cuenta que la forma [0] puede ser &lt;code&gt;None&lt;/code&gt; durante la construcci&amp;oacute;n del gr&amp;aacute;fico. Se proporcionan las &lt;code&gt;inputs&lt;/code&gt; o el par de &lt;code&gt;batch_size&lt;/code&gt; y &lt;code&gt;dtype&lt;/code&gt; . &lt;code&gt;batch_size&lt;/code&gt; es un tensor escalar que representa el tama&amp;ntilde;o del lote de las entradas. &lt;code&gt;dtype&lt;/code&gt; es &lt;a href=&quot;../../dtypes/dtype&quot;&gt; &lt;code&gt;tf.DType&lt;/code&gt; &lt;/a&gt; que representa el dtype de las entradas. Por razones de compatibilidad con versiones anteriores, si la celda no implementa este m&amp;eacute;todo, la capa RNN crear&amp;aacute; un tensor relleno de cero con el tama&amp;ntilde;o de [batch_size, cell.state_size]. En el caso de que la &lt;code&gt;cell&lt;/code&gt; sea ​​una lista de instancias de celda RNN, las celdas se apilar&amp;aacute;n una encima de la otra en el RNN, lo que dar&amp;aacute; como resultado un RNN apilado eficiente.</target>
        </trans-unit>
        <trans-unit id="3dabb0562c3a567f0213d38ddb557fe79a27c92d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;get_tensor_handle&lt;/code&gt; op. The corresponding fetched value will be a numpy ndarray containing the handle of that tensor.</source>
          <target state="translated">Una &lt;code&gt;get_tensor_handle&lt;/code&gt; . El valor obtenido correspondiente ser&amp;aacute; un ndarray numpy que contiene el identificador de ese tensor.</target>
        </trans-unit>
        <trans-unit id="b82ffe44c8f3b643634c6ecf379504dcc83bdc2d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;group&lt;/code&gt; op depending on all &lt;code&gt;check_numerics&lt;/code&gt; ops added.</source>
          <target state="translated">Una &lt;code&gt;check_numerics&lt;/code&gt; &lt;code&gt;group&lt;/code&gt; depende de todas las operaciones de check_numerics agregadas.</target>
        </trans-unit>
        <trans-unit id="84b8fd76c8c3507b57eff39e1321271191a9d7ba" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;list&lt;/code&gt; of integers, a &lt;code&gt;tuple&lt;/code&gt; of integers, or a 1-D &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;int32&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="defd304710346563761d6d135ad2a3e3440cddb1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;message_type&lt;/code&gt; name must be provided to give context for the field names. The actual message descriptor can be looked up either in the linked-in descriptor pool or a filename provided by the caller using the &lt;code&gt;descriptor_source&lt;/code&gt; attribute.</source>
          <target state="translated">Se debe proporcionar &lt;code&gt;message_type&lt;/code&gt; nombre de message_type para dar contexto a los nombres de campo. El descriptor de mensaje real se puede buscar en el conjunto de descriptores vinculados o en un nombre de archivo proporcionado por la persona que llama utilizando el atributo &lt;code&gt;descriptor_source&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f5e0a8a69b6db0338bdd86ab50aa07d5be38997c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;model_fn.EstimatorSpec&lt;/code&gt; instance.</source>
          <target state="translated">Una instancia de &lt;code&gt;model_fn.EstimatorSpec&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="35e2751f6214e1999b2a1c07a67b678ab0881e2a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;no_op&lt;/code&gt; that does nothing. Type can be determined statically.</source>
          <target state="translated">Un &lt;code&gt;no_op&lt;/code&gt; que no hace nada. El tipo se puede determinar est&amp;aacute;ticamente.</target>
        </trans-unit>
        <trans-unit id="2c14c351c783f9fc3f0944d2d64ce8ca22781330" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;output_size&lt;/code&gt; attribute. This can be a single integer or a TensorShape, which represent the shape of the output. For backward compatible reason, if this attribute is not available for the cell, the value will be inferred by the first element of the &lt;code&gt;state_size&lt;/code&gt;.</source>
          <target state="translated">Un atributo &lt;code&gt;output_size&lt;/code&gt; . Puede ser un solo entero o un TensorShape, que representa la forma de la salida. Por una raz&amp;oacute;n compatible con versiones anteriores, si este atributo no est&amp;aacute; disponible para la celda, el valor ser&amp;aacute; inferido por el primer elemento de &lt;code&gt;state_size&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b0efff667ed81de8fff752696361e4c1181814bf" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;pydot.Dot&lt;/code&gt; instance representing the Keras model or a &lt;code&gt;pydot.Cluster&lt;/code&gt; instance representing nested model if &lt;code&gt;subgraph=True&lt;/code&gt;.</source>
          <target state="translated">Una instancia de &lt;code&gt;pydot.Dot&lt;/code&gt; que representa el modelo de Keras o una instancia de &lt;code&gt;pydot.Cluster&lt;/code&gt; que representa el modelo anidado si &lt;code&gt;subgraph=True&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b99958f622fdbd7c548c7ff618143f4cb3916009" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;row_splits&lt;/code&gt; vector, which indicates how those flattened values are divided into rows. In particular, the values for row &lt;code&gt;rt[i]&lt;/code&gt; are stored in the slice &lt;code&gt;rt.values[rt.row_splits[i]:rt.row_splits[i+1]]&lt;/code&gt;.</source>
          <target state="translated">Un vector &lt;code&gt;row_splits&lt;/code&gt; , que indica c&amp;oacute;mo esos valores aplanados se dividen en filas. En particular, los valores para la fila &lt;code&gt;rt[i]&lt;/code&gt; se almacenan en el segmento &lt;code&gt;rt.values[rt.row_splits[i]:rt.row_splits[i+1]]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8c92f0fb413a87b694cc7f271fac2e16e4bce27" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;state_size&lt;/code&gt; attribute. This can be a single integer (single state) in which case it is the size of the recurrent state. This can also be a list/tuple of integers (one size per state). The &lt;code&gt;state_size&lt;/code&gt; can also be TensorShape or tuple/list of TensorShape, to represent high dimension state.</source>
          <target state="translated">Un atributo &lt;code&gt;state_size&lt;/code&gt; . Puede ser un &amp;uacute;nico entero (estado &amp;uacute;nico), en cuyo caso es el tama&amp;ntilde;o del estado recurrente. Tambi&amp;eacute;n puede ser una lista / tupla de n&amp;uacute;meros enteros (un tama&amp;ntilde;o por estado). El &lt;code&gt;state_size&lt;/code&gt; tambi&amp;eacute;n puede ser TensorShape o tupla / lista de TensorShape, para representar estado de alta dimensi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="dbd23a071158f94b9006a136f668915910d3fff1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;str&lt;/code&gt; object.</source>
          <target state="translated">Un objeto &lt;code&gt;str&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="603a78962587fa97f802beaa601dd2ed6fe496fb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;str&lt;/code&gt; or callable. The activation function to use on the &quot;top&quot; layer. Ignored unless &lt;code&gt;include_top=True&lt;/code&gt;. Set &lt;code&gt;classifier_activation=None&lt;/code&gt; to return the logits of the &quot;top&quot; layer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38d73de867f93ca41a879885f5fa6d09265127b7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;str&lt;/code&gt; or callable. The activation function to use on the &quot;top&quot; layer. Ignored unless &lt;code&gt;include_top=True&lt;/code&gt;. Set &lt;code&gt;classifier_activation=None&lt;/code&gt; to return the logits of the &quot;top&quot; layer. Defaults to 'softmax'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ca82d3485901387f3014f22ede419a10469b9d7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;Id&quot;, &quot;Div&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cdd5711d7ac4489610c655d055d346c1731aafd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;Min&quot;, &quot;Max&quot;, &quot;Mul&quot;, &quot;Add&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e51f17f85b69eb493a332d4501f0eb378b3c0bb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;REFLECT&quot;, &quot;SYMMETRIC&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ed992fc4ac215877b91163d6ed47c42d4a79cac" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;REFLECT&quot;, &quot;SYMMETRIC&quot;&lt;/code&gt;. Either &lt;code&gt;REFLECT&lt;/code&gt; or &lt;code&gt;SYMMETRIC&lt;/code&gt;. In reflect mode the padded regions do not include the borders, while in symmetric mode the padded regions do include the borders. For example, if &lt;code&gt;input&lt;/code&gt; is &lt;code&gt;[1, 2, 3]&lt;/code&gt; and &lt;code&gt;paddings&lt;/code&gt; is &lt;code&gt;[0, 2]&lt;/code&gt;, then the output is &lt;code&gt;[1, 2, 3, 2, 1]&lt;/code&gt; in reflect mode, and it is &lt;code&gt;[1, 2, 3, 3, 2]&lt;/code&gt; in symmetric mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cb5774cf33a4a418f3c2256b38c9e6e5cdea086" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;REFLECT&quot;, &quot;SYMMETRIC&quot;&lt;/code&gt;. The mode used in the &lt;code&gt;MirrorPad&lt;/code&gt; op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9e08ff1f065dbfa8ef1305f7578c98ef7969e61" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;SAME&quot;, &quot;VALID&quot;, &quot;EXPLICIT&quot;&lt;/code&gt;. The type of padding algorithm to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="967cb8a2957116d4e0dc8d432a59e9b2f583519d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;SAME&quot;, &quot;VALID&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdaa7b4b2407bef6dd9ee562616d7922e187fd74" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;SAME&quot;, &quot;VALID&quot;&lt;/code&gt;. The type of padding algorithm to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15e0ef1f45f4e7a57112197bc588858b0ca7d088" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;UTF-8&quot;, &quot;UTF-16-BE&quot;, &quot;UTF-32-BE&quot;&lt;/code&gt;. The unicode encoding to use in the output. Must be one of &lt;code&gt;&quot;UTF-8&quot;, &quot;UTF-16-BE&quot;, &quot;UTF-32-BE&quot;&lt;/code&gt;. Multi-byte encodings will be big-endian.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ad82516f266f4ee4f497e9f96b295aa84e7202d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;UTF-8&quot;, &quot;UTF-16-BE&quot;, &quot;UTF-32-BE&quot;&lt;/code&gt;. Unicode encoding of the output strings. Valid encodings are: &lt;code&gt;&quot;UTF-8&quot;, &quot;UTF-16-BE&quot;, and &quot;UTF-32-BE&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a491cf42a48d2b300e69c2e864c7fad7f72ab98d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;logistic_loss&quot;, &quot;squared_loss&quot;, &quot;hinge_loss&quot;, &quot;smooth_hinge_loss&quot;, &quot;poisson_loss&quot;&lt;/code&gt;. Type of the primal loss. Currently SdcaSolver supports logistic, squared and hinge losses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc60dcb1f455026b4e3309c5129babc6486d0532" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt; from: &lt;code&gt;&quot;min&quot;, &quot;max&quot;, &quot;prod&quot;, &quot;sum&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a64e2a44908e3497f380dc01fe4508dab9b5c338" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt; which is the name of a tensor or operation in the graph.</source>
          <target state="translated">Una &lt;code&gt;string&lt;/code&gt; que es el nombre de un tensor u operaci&amp;oacute;n en el gr&amp;aacute;fico.</target>
        </trans-unit>
        <trans-unit id="7796e0061b43f7108bc885f8426864f474c4493c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt;, only &lt;code&gt;&quot;NHWC&quot;&lt;/code&gt; is currently supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7c348fc8e69dd5b3fefaed9afd859992bdf0829" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b73a7a57dbff9dae8c4d78d4f4960a3552fd9a8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt;. A human-readable name for the threads that may be visible in some visualizations. threadpool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21445ceb43f8b87aafa9cc633b9a3e2d4e1e802d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt;. A token representing a registered python function in this address space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29b3bce4ae16453ef715949d31a7609374107dc6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt;. Glob pattern for the data files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6551752932aebc3a205969ee6629f08f3589cdfc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt;. If non-empty, this resource is placed in the given container. Otherwise, a default container is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38ad2223fa723d0f11c642773057cdddf44c9bc3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt;. If non-empty, this resource will be shared under the given name across multiple sessions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="579ad88aa9ffec5fbed6b93c403ff99ba2763f1e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt;. Interpolation method, &quot;NEAREST&quot; or &quot;BILINEAR&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c7a874e2c4b6d4ea5b3d49d36bbd33b35e5976b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt;. Name of readonly memory region used by the tensor, see NewReadOnlyMemoryRegionFromFile in tensorflow::Env.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0bfa750ab7c9885e9886b0db6cfd5f494b8323d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt;. Name of the proto message type to decode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c8e3823317cbd5ad28771b6620aacc159783c83" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt;. Name of the temporary variable, usually the name of the matching 'TemporaryVariable' op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d198660f7132955ea33033265821dfc99bb70b20" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt;. Prefix of the error message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d669eaf488c3bdcb4c1e9cf0d665a7208e8f81fd" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt;. Serialized TPUEmbeddingConfiguration proto.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39bea60d1d6850f9e92e8dc090ecd96ef3814908" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt;. Serialized tensorflow.tpu.TPUEmbeddingConfiguration that describes the embedding lookups of the program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="805b3ac0eb31facc452aea52eb225d824850f6f6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt;. String describing the Einstein Summation operation; in the format of np.einsum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff9116e5eb56aad44b6df148bc5cd46068019c88" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt;. Text encoding of the input strings. This is any of the encodings supported by ICU ucnv algorithmic converters. Examples: &lt;code&gt;&quot;UTF-16&quot;, &quot;US ASCII&quot;, &quot;UTF-8&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a38c385c0b7a953341d9be3ac2408c754c956d5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt;. The gradient source string, used to decide which gradient TensorArray to return.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56fd95a606c6d2538a92ebf11696713abc6e9e7e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt;. The name of the child frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba0cb658b46b584661ad26be51263f7c874ba1bf" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt;. The name of the device receiving the tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f33cfa887b7fe9f6f8d42829147873710a495312" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt;. The name of the device sending the tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57a68e81734106e0326a71e26f07e764dbcc092f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt;. The name of the tensor to receive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d437e3cfe7e7e406dd3acb189dee52bf200c8bdb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt;. The name of the tensor to send.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d22c467a46481a5f829e94f7328fafcc4d3ffc5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt;. The regular expression to match the input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82d32167b5c9b4c114dd2f7c62111409f73ef397" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt;. The rewrite to be applied to the matched expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3afda81fcc51f7dc527b09d5b87c76fba38aa4a7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt;. The string to append between elements of the token. Use &quot;&quot; for no separator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e853f49d1ccd50d93936edf2897cb56ba2d63840" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt;. The string to use to pad the left side of the ngram sequence. Only used if pad_width != 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f80d20a2db45d4c7b4c8149c8de2552178e7d193" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;string&lt;/code&gt;. The string to use to pad the right side of the ngram sequence. Only used if pad_width != 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2669110367eda0a13f00f70cb40b7da739485bab" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;tensor&lt;/code&gt; of the shape as data, except for dimension 0 which has size &lt;code&gt;k&lt;/code&gt;, the number of segments specified via &lt;code&gt;num_segments&lt;/code&gt; or inferred for the last element in &lt;code&gt;segments_ids&lt;/code&gt;.</source>
          <target state="translated">Un &lt;code&gt;tensor&lt;/code&gt; de la forma como datos, excepto para la dimensi&amp;oacute;n 0 que tiene tama&amp;ntilde;o &lt;code&gt;k&lt;/code&gt; , el n&amp;uacute;mero de segmentos especificados a trav&amp;eacute;s de &lt;code&gt;num_segments&lt;/code&gt; o inferidos para el &amp;uacute;ltimo elemento en &lt;code&gt;segments_ids&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed09e04001ef44bbb6179117eb842ad7333e46ba" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;tensor&lt;/code&gt; of the shape as the expression p(x) with usual broadcasting rules for element-wise addition and multiplication applied.</source>
          <target state="translated">Un &lt;code&gt;tensor&lt;/code&gt; de la forma como la expresi&amp;oacute;n p (x) con las reglas de difusi&amp;oacute;n habituales para la suma y la multiplicaci&amp;oacute;n por elementos aplicadas.</target>
        </trans-unit>
        <trans-unit id="445e2882fee6a0911596065e242f13329108fb29" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;tensor&lt;/code&gt; with the same shape and type as &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="228a117fa882dbd59645709a784b1d6d3803a1b6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;tensor&lt;/code&gt;.</source>
          <target state="translated">Un &lt;code&gt;tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="15c5f4c89d1d68c9cd43934b08000af24f6f1c90" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;tf.RaggedTensorValue&lt;/code&gt; or &lt;code&gt;numpy.array&lt;/code&gt; with rank &lt;code&gt;K&lt;/code&gt; and the specified &lt;code&gt;ragged_rank&lt;/code&gt;, containing the values from &lt;code&gt;pylist&lt;/code&gt;.</source>
          <target state="translated">Un &lt;code&gt;tf.RaggedTensorValue&lt;/code&gt; o &lt;code&gt;numpy.array&lt;/code&gt; con rango &lt;code&gt;K&lt;/code&gt; y el &lt;code&gt;ragged_rank&lt;/code&gt; especificado , que contiene los valores de &lt;code&gt;pylist&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="56d134aa74d48398129cfb03998b891a914c2ee6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;tf.TensorProto&lt;/code&gt;. Attr &lt;code&gt;value&lt;/code&gt; is the tensor to return.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a58a3606c09bb921addd0d5bb31d496a1fca70aa" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;tf.data.experimental.Structure&lt;/code&gt; object representing the structure of each element in the dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04455bac0ba8b27a5a2a713e2275fadbb7a71ea0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;tf.distrbute.experimental.CollectiveHints&lt;/code&gt;. Hints to perform collective operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="653bb18c804963ba67642170ef5fc7196492e3ca" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;tf.dtype&lt;/code&gt; identifies the type of labels. By default it is &lt;a href=&quot;../../../../tf#float32&quot;&gt;&lt;code&gt;tf.float32&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fca7ba22da574773983e25e38b0e239cc7caf04a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;tf.dtype&lt;/code&gt; identifies the type of labels. By default it is &lt;a href=&quot;../../../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt;. If user defines a &lt;code&gt;label_vocabulary&lt;/code&gt;, this should be set as &lt;a href=&quot;../../../../tf#string&quot;&gt;&lt;code&gt;tf.string&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../../../../tf#float32&quot;&gt;&lt;code&gt;tf.float32&lt;/code&gt;&lt;/a&gt; labels are only supported for binary classification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e83fb65af3b9de114829d2822e08bb85514d216" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;tf.dtype&lt;/code&gt; identifies the type of labels. By default it is &lt;a href=&quot;../../tf#float32&quot;&gt;&lt;code&gt;tf.float32&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="962e3ef6d1c98999d9ab0004e117f3ce48ed3715" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;tf.dtype&lt;/code&gt; identifies the type of labels. By default it is &lt;a href=&quot;../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt;. If user defines a &lt;code&gt;label_vocabulary&lt;/code&gt;, this should be set as &lt;a href=&quot;../../tf#string&quot;&gt;&lt;code&gt;tf.string&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;../../tf#float32&quot;&gt;&lt;code&gt;tf.float32&lt;/code&gt;&lt;/a&gt; labels are only supported for binary classification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="682561e336bef9077afed6862721070254f632a2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;tf.keras.utils.data_utils.Sequence&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a7920dc5b93d8fb4f5767151a096ad597c1fcd6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;tf.profiler.ProfilerOptions&lt;/code&gt; hold the knobs to control tf.profiler's behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89a688928452f3526b9464e78de4ffb24a3ef41d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;tf.train.Scaffold&lt;/code&gt; object that can be used to set initialization, saver, and more to be used in training.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16573d8f7eb136100b7f41276fe32824b73eb16b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;tuple&lt;/code&gt; of 1-D integer &lt;code&gt;Tensor&lt;/code&gt;s.</source>
          <target state="translated">Una &lt;code&gt;tuple&lt;/code&gt; de &lt;code&gt;Tensor&lt;/code&gt; enteros 1-D .</target>
        </trans-unit>
        <trans-unit id="6f090162dd1074bddc0f83b84645dc69359a683a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;tuple&lt;/code&gt; of 1-D integer &lt;code&gt;Tensors&lt;/code&gt;. The length of the tuple is equal to &lt;code&gt;self.ragged_rank&lt;/code&gt;.</source>
          <target state="translated">Una &lt;code&gt;tuple&lt;/code&gt; de &lt;code&gt;Tensors&lt;/code&gt; enteros 1-D . La longitud de la tupla es igual a &lt;code&gt;self.ragged_rank&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="059a8884bb23edcb76ee19e8981e158bb199272e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;unicode&lt;/code&gt; (Python 2) or &lt;code&gt;str&lt;/code&gt; (Python 3) object.</source>
          <target state="translated">Un objeto &lt;code&gt;unicode&lt;/code&gt; (Python 2) o &lt;code&gt;str&lt;/code&gt; (Python 3).</target>
        </trans-unit>
        <trans-unit id="757313f707e885bd0016ff3f8fdf0fc12a79f36c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;values&lt;/code&gt; tensor, which concatenates the variable-length rows into a flattened list. For example, the &lt;code&gt;values&lt;/code&gt; tensor for &lt;code&gt;[[3, 1, 4, 1], [], [5, 9, 2], [6], []]&lt;/code&gt; is &lt;code&gt;[3, 1, 4, 1, 5, 9, 2, 6]&lt;/code&gt;.</source>
          <target state="translated">Un tensor de &lt;code&gt;values&lt;/code&gt; , que concatena las filas de longitud variable en una lista plana. Por ejemplo, el tensor de &lt;code&gt;values&lt;/code&gt; para &lt;code&gt;[[3, 1, 4, 1], [], [5, 9, 2], [6], []]&lt;/code&gt; es &lt;code&gt;[3, 1, 4, 1, 5, 9, 2, 6]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fdf8dd65d6d7310b2e6c054a5de47be445c03b26" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;device&lt;/em&gt; is a CPU or accelerator (e.g. GPUs, TPUs) on some machine that TensorFlow can run operations on (see e.g. &lt;a href=&quot;../../device&quot;&gt;&lt;code&gt;tf.device&lt;/code&gt;&lt;/a&gt;). You may have multiple devices on a single machine, or be connected to devices on multiple machines. Devices used to run computations are called &lt;em&gt;worker devices&lt;/em&gt;. Devices used to store variables are &lt;em&gt;parameter devices&lt;/em&gt;. For some strategies, such as &lt;a href=&quot;../../distribute/mirroredstrategy&quot;&gt;&lt;code&gt;tf.distribute.MirroredStrategy&lt;/code&gt;&lt;/a&gt;, the worker and parameter devices will be the same (see mirrored variables below). For others they will be different. For example, &lt;a href=&quot;../../distribute/experimental/centralstoragestrategy&quot;&gt;&lt;code&gt;tf.distribute.experimental.CentralStorageStrategy&lt;/code&gt;&lt;/a&gt; puts the variables on a single device (which may be a worker device or may be the CPU), and &lt;a href=&quot;../../distribute/experimental/parameterserverstrategy&quot;&gt;&lt;code&gt;tf.distribute.experimental.ParameterServerStrategy&lt;/code&gt;&lt;/a&gt; puts the variables on separate machines called &lt;em&gt;parameter servers&lt;/em&gt; (see below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="649fb68167e46574c6b014a53b64926ae23e5009" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;device&lt;/em&gt; is a CPU or accelerator (e.g. GPUs, TPUs) on some machine that TensorFlow can run operations on (see e.g. &lt;a href=&quot;../../device&quot;&gt;&lt;code&gt;tf.device&lt;/code&gt;&lt;/a&gt;). You may have multiple devices on a single machine, or be connected to devices on multiple machines. Devices used to run computations are called &lt;em&gt;worker devices&lt;/em&gt;. Devices used to store variables are &lt;em&gt;parameter devices&lt;/em&gt;. For some strategies, such as &lt;a href=&quot;../../distribute/mirroredstrategy&quot;&gt;&lt;code&gt;tf.distribute.MirroredStrategy&lt;/code&gt;&lt;/a&gt;, the worker and parameter devices will be the same (see mirrored variables below). For others they will be different. For example, &lt;a href=&quot;../../distribute/experimental/centralstoragestrategy&quot;&gt;&lt;code&gt;tf.distribute.experimental.CentralStorageStrategy&lt;/code&gt;&lt;/a&gt; puts the variables on a single device (which may be a worker device or may be the CPU), and &lt;a href=&quot;../../distribute/experimental/parameterserverstrategy&quot;&gt;&lt;code&gt;tf.distribute.experimental.ParameterServerStrategy&lt;/code&gt;&lt;/a&gt; puts the variables on separate machines called parameter servers (see below).</source>
          <target state="translated">Un &lt;em&gt;dispositivo&lt;/em&gt; es una CPU o un acelerador (p. Ej., GPU, TPU) en alguna m&amp;aacute;quina en la que TensorFlow puede ejecutar operaciones (ver p . Ej. &lt;a href=&quot;../../device&quot;&gt; &lt;code&gt;tf.device&lt;/code&gt; &lt;/a&gt; ). Puede tener varios dispositivos en una sola m&amp;aacute;quina o estar conectado a dispositivos en varias m&amp;aacute;quinas. Los dispositivos que se utilizan para ejecutar c&amp;aacute;lculos se denominan &lt;em&gt;dispositivos de trabajo&lt;/em&gt; . Los dispositivos utilizados para almacenar variables son &lt;em&gt;dispositivos de par&amp;aacute;metros&lt;/em&gt; . Para algunas estrategias, como &lt;a href=&quot;../../distribute/mirroredstrategy&quot;&gt; &lt;code&gt;tf.distribute.MirroredStrategy&lt;/code&gt; &lt;/a&gt; , el trabajador y los dispositivos de par&amp;aacute;metros ser&amp;aacute;n los mismos (consulte las variables reflejadas a continuaci&amp;oacute;n). Para otros ser&amp;aacute;n diferentes. Por ejemplo, &lt;a href=&quot;../../distribute/experimental/centralstoragestrategy&quot;&gt; &lt;code&gt;tf.distribute.experimental.CentralStorageStrategy&lt;/code&gt; &lt;/a&gt; coloca las variables en un solo dispositivo (que puede ser un dispositivo de trabajo o puede ser la CPU) y&lt;a href=&quot;../../distribute/experimental/parameterserverstrategy&quot;&gt; &lt;code&gt;tf.distribute.experimental.ParameterServerStrategy&lt;/code&gt; &lt;/a&gt; coloca las variables en m&amp;aacute;quinas separadas llamadas servidores de par&amp;aacute;metros (ver m&amp;aacute;s abajo).</target>
        </trans-unit>
        <trans-unit id="0c7e62b01cdba92c783730dd422729906829d858" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;device&lt;/em&gt; is a CPU or accelerator (e.g. GPUs, TPUs) on some machine that TensorFlow can run operations on (see e.g. &lt;a href=&quot;device&quot;&gt;&lt;code&gt;tf.device&lt;/code&gt;&lt;/a&gt;). You may have multiple devices on a single machine, or be connected to devices on multiple machines. Devices used to run computations are called &lt;em&gt;worker devices&lt;/em&gt;. Devices used to store variables are &lt;em&gt;parameter devices&lt;/em&gt;. For some strategies, such as &lt;a href=&quot;distribute/mirroredstrategy&quot;&gt;&lt;code&gt;tf.distribute.MirroredStrategy&lt;/code&gt;&lt;/a&gt;, the worker and parameter devices will be the same (see mirrored variables below). For others they will be different. For example, &lt;a href=&quot;distribute/experimental/centralstoragestrategy&quot;&gt;&lt;code&gt;tf.distribute.experimental.CentralStorageStrategy&lt;/code&gt;&lt;/a&gt; puts the variables on a single device (which may be a worker device or may be the CPU), and &lt;a href=&quot;distribute/experimental/parameterserverstrategy&quot;&gt;&lt;code&gt;tf.distribute.experimental.ParameterServerStrategy&lt;/code&gt;&lt;/a&gt; puts the variables on separate machines called &lt;em&gt;parameter servers&lt;/em&gt; (see below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7130e55fcc408bacb8f0d669e4e7b578e05b85f" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;device&lt;/em&gt; is a CPU or accelerator (e.g. GPUs, TPUs) on some machine that TensorFlow can run operations on (see e.g. &lt;a href=&quot;device&quot;&gt;&lt;code&gt;tf.device&lt;/code&gt;&lt;/a&gt;). You may have multiple devices on a single machine, or be connected to devices on multiple machines. Devices used to run computations are called &lt;em&gt;worker devices&lt;/em&gt;. Devices used to store variables are &lt;em&gt;parameter devices&lt;/em&gt;. For some strategies, such as &lt;a href=&quot;distribute/mirroredstrategy&quot;&gt;&lt;code&gt;tf.distribute.MirroredStrategy&lt;/code&gt;&lt;/a&gt;, the worker and parameter devices will be the same (see mirrored variables below). For others they will be different. For example, &lt;a href=&quot;distribute/experimental/centralstoragestrategy&quot;&gt;&lt;code&gt;tf.distribute.experimental.CentralStorageStrategy&lt;/code&gt;&lt;/a&gt; puts the variables on a single device (which may be a worker device or may be the CPU), and &lt;a href=&quot;distribute/experimental/parameterserverstrategy&quot;&gt;&lt;code&gt;tf.distribute.experimental.ParameterServerStrategy&lt;/code&gt;&lt;/a&gt; puts the variables on separate machines called parameter servers (see below).</source>
          <target state="translated">Un &lt;em&gt;dispositivo&lt;/em&gt; es una CPU o un acelerador (p. Ej., GPU, TPU) en alguna m&amp;aacute;quina en la que TensorFlow puede ejecutar operaciones (ver p . Ej. &lt;a href=&quot;device&quot;&gt; &lt;code&gt;tf.device&lt;/code&gt; &lt;/a&gt; ). Puede tener varios dispositivos en una sola m&amp;aacute;quina o estar conectado a dispositivos en varias m&amp;aacute;quinas. Los dispositivos que se utilizan para ejecutar c&amp;aacute;lculos se denominan &lt;em&gt;dispositivos de trabajo&lt;/em&gt; . Los dispositivos utilizados para almacenar variables son &lt;em&gt;dispositivos de par&amp;aacute;metros&lt;/em&gt; . Para algunas estrategias, como &lt;a href=&quot;distribute/mirroredstrategy&quot;&gt; &lt;code&gt;tf.distribute.MirroredStrategy&lt;/code&gt; &lt;/a&gt; , el trabajador y los dispositivos de par&amp;aacute;metros ser&amp;aacute;n los mismos (consulte las variables reflejadas a continuaci&amp;oacute;n). Para otros ser&amp;aacute;n diferentes. Por ejemplo, &lt;a href=&quot;distribute/experimental/centralstoragestrategy&quot;&gt; &lt;code&gt;tf.distribute.experimental.CentralStorageStrategy&lt;/code&gt; &lt;/a&gt; coloca las variables en un solo dispositivo (que puede ser un dispositivo de trabajo o puede ser la CPU) y&lt;a href=&quot;distribute/experimental/parameterserverstrategy&quot;&gt; &lt;code&gt;tf.distribute.experimental.ParameterServerStrategy&lt;/code&gt; &lt;/a&gt; coloca las variables en m&amp;aacute;quinas separadas llamadas servidores de par&amp;aacute;metros (ver m&amp;aacute;s abajo).</target>
        </trans-unit>
        <trans-unit id="72422eced636cc6fd4dd456bbd707296e82f6290" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;host&lt;/em&gt; is the CPU device on a machine with worker devices, typically used for running input pipelines.</source>
          <target state="translated">Un &lt;em&gt;host&lt;/em&gt; es el dispositivo de la CPU en una m&amp;aacute;quina con dispositivos de trabajo, que generalmente se usa para ejecutar canalizaciones de entrada.</target>
        </trans-unit>
        <trans-unit id="ead351386b5247b3bc9f21e034358b9f5ebc9f31" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;replica context&lt;/em&gt; applies when you execute the computation function that was called with &lt;code&gt;strategy.run&lt;/code&gt;. Conceptually, you're in replica context when executing the computation function that is being replicated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd9553f51160a05c6299e836c7337f624ce4571a" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;replica&lt;/em&gt; is one copy of the model, running on one slice of the input data. Right now each replica is executed on its own worker device, but once we add support for model parallelism a replica may span multiple worker devices.</source>
          <target state="translated">Una &lt;em&gt;r&amp;eacute;plica&lt;/em&gt; es una copia del modelo, que se ejecuta en un segmento de los datos de entrada. En este momento, cada r&amp;eacute;plica se ejecuta en su propio dispositivo de trabajo, pero una vez que agregamos soporte para el paralelismo del modelo, una r&amp;eacute;plica puede abarcar varios dispositivos de trabajo.</target>
        </trans-unit>
        <trans-unit id="3037c317712db09ccfc59d5b6611d85bd8165b31" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;worker&lt;/em&gt; is defined to be the physical machine(s) containing the physical devices (e.g. GPUs, TPUs) on which the replicated computation is executed. A worker may contain one or more replicas, but contains at least one replica. Typically one worker will correspond to one machine, but in the case of very large models with model parallelism, one worker may span multiple machines. We typically run one input pipeline per worker, feeding all the replicas on that worker.</source>
          <target state="translated">Un &lt;em&gt;trabajador&lt;/em&gt; se define como la m&amp;aacute;quina f&amp;iacute;sica que contiene los dispositivos f&amp;iacute;sicos (por ejemplo, GPU, TPU) en los que se ejecuta el c&amp;aacute;lculo replicado. Un trabajador puede contener una o m&amp;aacute;s r&amp;eacute;plicas, pero contiene al menos una r&amp;eacute;plica. Normalmente, un trabajador corresponder&amp;aacute; a una m&amp;aacute;quina, pero en el caso de modelos muy grandes con paralelismo de modelo, un trabajador puede abarcar varias m&amp;aacute;quinas. Por lo general, ejecutamos una canalizaci&amp;oacute;n de entrada por trabajador, alimentando todas las r&amp;eacute;plicas de ese trabajador.</target>
        </trans-unit>
        <trans-unit id="32803bb67296c84b7c9caaa1b2c26637a50f337e" translate="yes" xml:space="preserve">
          <source>A Advise proto that conains the reports from all checkers.</source>
          <target state="translated">Un prototipo de asesoramiento que contiene los informes de todos los inspectores.</target>
        </trans-unit>
        <trans-unit id="b1c85a07e8b5f17bd4adf3b77d59663326f9b206" translate="yes" xml:space="preserve">
          <source>A CacheDataset will iterate over the input_dataset, and store tensors. If the cache already exists, the cache will be used. If the cache is inappropriate (e.g. cannot be opened, contains tensors of the wrong shape / size), an error will the returned when used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7012f60686e7f0b583203c6a8dda2b5083b648c7" translate="yes" xml:space="preserve">
          <source>A Checkpoint thread saving the model every save_model_secs.</source>
          <target state="translated">Un hilo de Checkpoint que guarda el modelo cada vez que se guarda un modelo.</target>
        </trans-unit>
        <trans-unit id="26fc83d8a191cc3d438b593104cbed58955a750f" translate="yes" xml:space="preserve">
          <source>A CheckpointReader object.</source>
          <target state="translated">Un objeto CheckpointReader.</target>
        </trans-unit>
        <trans-unit id="77d14a37ee3cbca681286bcc82a0a6fc138bbcd6" translate="yes" xml:space="preserve">
          <source>A CheckpointState if the state was available, None otherwise.</source>
          <target state="translated">Un CheckpointState si el estado estaba disponible,Ninguna otra cosa.</target>
        </trans-unit>
        <trans-unit id="ad75b8bef2badb6d2d4d35756fce7740fe3680c7" translate="yes" xml:space="preserve">
          <source>A Classifier for Tensorflow Boosted Trees models.</source>
          <target state="translated">Un clasificador para los modelos de Tensorflow Boosted Trees.</target>
        </trans-unit>
        <trans-unit id="ade3c88a91ba9ae44be5cddd76fd2a5c49433e65" translate="yes" xml:space="preserve">
          <source>A ClusterResolver object which can be used with distributed TensorFlow.</source>
          <target state="translated">Un objeto ClusterResolver que puede ser usado con el TensorFlow distribuido.</target>
        </trans-unit>
        <trans-unit id="c206552281fc0cbda1db2ae8b9daa8ee80082321" translate="yes" xml:space="preserve">
          <source>A ClusterSpec containing host information merged from all the underlying ClusterResolvers.</source>
          <target state="translated">Un ClusterSpec que contiene información del host fusionada de todos los ClusterResolvers subyacentes.</target>
        </trans-unit>
        <trans-unit id="ad4431a105c3376474bfa4df62fa95199e690a06" translate="yes" xml:space="preserve">
          <source>A ClusterSpec containing host information retrieved from GCE.</source>
          <target state="translated">Un ClusterSpec que contiene información de los anfitriones recuperada de la CME.</target>
        </trans-unit>
        <trans-unit id="fe502a3c763c00e35785c65893894f922ba68cf5" translate="yes" xml:space="preserve">
          <source>A ClusterSpec containing host information retrieved from Slurm's environment variables.</source>
          <target state="translated">Un ClusterSpec que contiene información del anfitrión recuperada de las variables de entorno de Slurm.</target>
        </trans-unit>
        <trans-unit id="c6ec4372ac18c4da846f0c2e2b51fa32a7249203" translate="yes" xml:space="preserve">
          <source>A ClusterSpec containing host information returned from Cloud TPUs, or None.</source>
          <target state="translated">Un ClusterSpec que contiene información del host devuelta de los TPUs de la nube,o ninguno.</target>
        </trans-unit>
        <trans-unit id="30f0df376969810aced53ddd6f0821d35363b196" translate="yes" xml:space="preserve">
          <source>A ClusterSpec containing host information returned from Kubernetes.</source>
          <target state="translated">Un ClusterSpec que contiene la información del host devuelta por los gobernantes.</target>
        </trans-unit>
        <trans-unit id="9d0515958ae0190765ea8f9f7940d81d5c327e10" translate="yes" xml:space="preserve">
          <source>A ClusterSpec representing the state of the cluster at the moment this function is called.</source>
          <target state="translated">Un ClusterSpec que representa el estado del cúmulo en el momento en que se llama esta función.</target>
        </trans-unit>
        <trans-unit id="ce8071eee3cc523b759bb1937504610c0275fd28" translate="yes" xml:space="preserve">
          <source>A ClusterSpec with information from the TF_CONFIG environment variable.</source>
          <target state="translated">Un ClusterSpec con información de la variable de entorno TF_CONFIG.</target>
        </trans-unit>
        <trans-unit id="c310512f0254d9a1791cda6dacba3bfe51d4f7eb" translate="yes" xml:space="preserve">
          <source>A Constant Tensor.</source>
          <target state="translated">Un tensor constante.</target>
        </trans-unit>
        <trans-unit id="3e58e28eaa1bf4ef881731ff1bb0f1e3095a92e2" translate="yes" xml:space="preserve">
          <source>A Coordinator object which keeps track of all threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe9d49ea2e3a3fc6700afd00d940d70f6bb08ee4" translate="yes" xml:space="preserve">
          <source>A Coordinator object.</source>
          <target state="translated">Un objeto coordinador.</target>
        </trans-unit>
        <trans-unit id="662197a822347d54a6e2f596879626f4e5e40f0a" translate="yes" xml:space="preserve">
          <source>A Coordinator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dbd64d9be25070e209649741890b1c35e8c45ab" translate="yes" xml:space="preserve">
          <source>A DT_VARIANT tensor that represents the dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a616c4f6f3687560220b56676b37439deeaf049" translate="yes" xml:space="preserve">
          <source>A Dataset comprising lines from one or more CSV files.</source>
          <target state="translated">Un conjunto de datos que comprende líneas de uno o más archivos CSV.</target>
        </trans-unit>
        <trans-unit id="fd812d6ee2cb5c3466e19832a3d39edcde0aa9be" translate="yes" xml:space="preserve">
          <source>A DebugEventsWriter instance used by the dumping callback. The caller may use its flushing methods, including &lt;code&gt;FlushNonExecutionFiles()&lt;/code&gt; and &lt;code&gt;FlushExecutionFiles()&lt;/code&gt;.</source>
          <target state="translated">Una instancia de DebugEventsWriter utilizada por la devoluci&amp;oacute;n de llamada de volcado. La persona que llama puede usar sus m&amp;eacute;todos de descarga, incluidos &lt;code&gt;FlushNonExecutionFiles()&lt;/code&gt; y &lt;code&gt;FlushExecutionFiles()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="963779d732586cc4a81c0b916e9e069c7efd76c0" translate="yes" xml:space="preserve">
          <source>A DeviceSpec with the fields specified in kwargs overridden.</source>
          <target state="translated">Un DeviceSpec con los campos especificados en kwargs anulados.</target>
        </trans-unit>
        <trans-unit id="c037fe5625b3a274ef2128a4ba182df82213eb3a" translate="yes" xml:space="preserve">
          <source>A DeviceSpec.</source>
          <target state="translated">Un DeviceSpec.</target>
        </trans-unit>
        <trans-unit id="28f3c8d51cd3ba0f58be8db6578b20acf7cd9345" translate="yes" xml:space="preserve">
          <source>A Dictionary describing TensorFlow's build environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70884a208083b896ea135ab5dcf19ad6a7424f91" translate="yes" xml:space="preserve">
          <source>A Dimension containing the combined information of &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;.</source>
          <target state="translated">Una dimensi&amp;oacute;n que contiene la informaci&amp;oacute;n combinada de &lt;code&gt;self&lt;/code&gt; y el &lt;code&gt;other&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1609526ba6e02d789f60a94fd8ea31c6a1a32dc8" translate="yes" xml:space="preserve">
          <source>A Dimension whose value is &lt;code&gt;other&lt;/code&gt; modulo &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">Una dimensi&amp;oacute;n cuyo valor es &lt;code&gt;other&lt;/code&gt; m&amp;oacute;dulo &lt;code&gt;self&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c9e103c67e6cd84fab1d41e6402b25d3e32cd724" translate="yes" xml:space="preserve">
          <source>A Dimension whose value is &lt;code&gt;self&lt;/code&gt; modulo &lt;code&gt;other&lt;/code&gt;.</source>
          <target state="translated">Una dimensi&amp;oacute;n cuyo valor es &lt;code&gt;self&lt;/code&gt; m&amp;oacute;dulo &lt;code&gt;other&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab30d8e12f8705d3a28752f9beff16246027c4a4" translate="yes" xml:space="preserve">
          <source>A Dimension whose value is the product of &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;.</source>
          <target state="translated">Una dimensi&amp;oacute;n cuyo valor es producto de &lt;code&gt;self&lt;/code&gt; y el &lt;code&gt;other&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9db31ac1d01e2b26d15c7f5babbdf8d3d41eb491" translate="yes" xml:space="preserve">
          <source>A Dimension whose value is the subtraction of &lt;code&gt;other&lt;/code&gt; from &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">Una Dimensi&amp;oacute;n cuyo valor es la resta del &lt;code&gt;other&lt;/code&gt; del &lt;code&gt;self&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4ea7d9198c827c59f8f565e89bd4d7f3824ab2ba" translate="yes" xml:space="preserve">
          <source>A Dimension whose value is the subtraction of &lt;code&gt;self&lt;/code&gt; from &lt;code&gt;other&lt;/code&gt;.</source>
          <target state="translated">Una dimensi&amp;oacute;n cuyo valor es la sustracci&amp;oacute;n de &lt;code&gt;self&lt;/code&gt; del &lt;code&gt;other&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2717f948654b6917f3bdd3a31923b1820a8bd647" translate="yes" xml:space="preserve">
          <source>A Dimension whose value is the sum of &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;.</source>
          <target state="translated">Una dimensi&amp;oacute;n cuyo valor es la suma de &lt;code&gt;self&lt;/code&gt; y el &lt;code&gt;other&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cbc2ff0c966f4f35937520543127ccd0044b23ee" translate="yes" xml:space="preserve">
          <source>A FIFOQueue that supports batching variable-sized tensors by padding.</source>
          <target state="translated">Una cola FIFO que soporta la agrupación de tensores de tamaño variable por acolchado.</target>
        </trans-unit>
        <trans-unit id="b3a9aecd751850ac7175d0a639e5fba67f7a846d" translate="yes" xml:space="preserve">
          <source>A Householder reflection, defined via a vector &lt;code&gt;v&lt;/code&gt;, which reflects points in &lt;code&gt;R^n&lt;/code&gt; about the hyperplane orthogonal to &lt;code&gt;v&lt;/code&gt; and through the origin.</source>
          <target state="translated">Una reflexi&amp;oacute;n de jefe de hogar, definida mediante un vector &lt;code&gt;v&lt;/code&gt; , que refleja puntos en &lt;code&gt;R^n&lt;/code&gt; sobre el hiperplano ortogonal &lt;code&gt;v&lt;/code&gt; y a trav&amp;eacute;s del origen.</target>
        </trans-unit>
        <trans-unit id="2f21ebe08dcc2ffc9c3cec4a41cff5ffd1d04a45" translate="yes" xml:space="preserve">
          <source>A JSON string.</source>
          <target state="translated">Una cuerda JSON.</target>
        </trans-unit>
        <trans-unit id="57c19729ac885118e96b31621d69e9c51cb10b72" translate="yes" xml:space="preserve">
          <source>A JSON-serializable Python dict.</source>
          <target state="translated">Un dictado de Pitón serializable JSON.</target>
        </trans-unit>
        <trans-unit id="b99201b43c84eac990b5b115182d38a7248119f5" translate="yes" xml:space="preserve">
          <source>A Jupyter notebook Image object if Jupyter is installed. This enables in-line display of the model plots in notebooks.</source>
          <target state="translated">Un cuaderno Jupyter Objeto de la imagen si Jupyter está instalado.Esto permite la visualización en línea de las tramas del modelo en los cuadernos.</target>
        </trans-unit>
        <trans-unit id="176dd4dd47a968567954d26d11052a5c04d92349" translate="yes" xml:space="preserve">
          <source>A Keras &lt;code&gt;Loss&lt;/code&gt; instance or a loss function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fa8ee9a1ace8639ff9728baee3ea62778f86783" translate="yes" xml:space="preserve">
          <source>A Keras &lt;code&gt;Metric&lt;/code&gt; instance or a metric function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8038e44f21c49d9994ff9246ffe544510fc07946" translate="yes" xml:space="preserve">
          <source>A Keras &lt;code&gt;Model&lt;/code&gt; instance which can be used just like the initial &lt;code&gt;model&lt;/code&gt; argument, but which distributes its workload on multiple GPUs.</source>
          <target state="translated">Una instancia del &lt;code&gt;Model&lt;/code&gt; Keras que se puede utilizar como el argumento del &lt;code&gt;model&lt;/code&gt; o inicial , pero que distribuye su carga de trabajo en varias GPU.</target>
        </trans-unit>
        <trans-unit id="32b53eea6139a4604db807fb19f71ea666f933e6" translate="yes" xml:space="preserve">
          <source>A Keras Optimizer instance.</source>
          <target state="translated">Una instancia del Optimizador Keras.</target>
        </trans-unit>
        <trans-unit id="f33afccebfcdf56c6f0c4f582aeed0264d8021a4" translate="yes" xml:space="preserve">
          <source>A Keras loss as a &lt;code&gt;function&lt;/code&gt;/ &lt;code&gt;Loss&lt;/code&gt; class instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e652cbbb51309842d38486db8bd11bb7c155cd2" translate="yes" xml:space="preserve">
          <source>A Keras metric as a &lt;code&gt;function&lt;/code&gt;/ &lt;code&gt;Metric&lt;/code&gt; class instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7104ba0cb89722a8c4e89eed6b5a30d4a80df5b" translate="yes" xml:space="preserve">
          <source>A Keras model instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39df757f2bdd188ae47545a2b4932d17d2d3c8e8" translate="yes" xml:space="preserve">
          <source>A Keras model instance (uncompiled).</source>
          <target state="translated">Una instancia del modelo Keras (sin compilar).</target>
        </trans-unit>
        <trans-unit id="dc18e567250a946a84b5aa4df5dde6eefc91a5ed" translate="yes" xml:space="preserve">
          <source>A Keras model instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b3fa60acce0476c83d85ba2bc74cba1070056c1" translate="yes" xml:space="preserve">
          <source>A Keras model instance. If an optimizer was found as part of the saved model, the model is already compiled. Otherwise, the model is uncompiled and a warning will be displayed. When &lt;code&gt;compile&lt;/code&gt; is set to False, the compilation is omitted without any warning.</source>
          <target state="translated">Una instancia del modelo de Keras. Si se encontr&amp;oacute; un optimizador como parte del modelo guardado, el modelo ya est&amp;aacute; compilado. De lo contrario, el modelo no se compilar&amp;aacute; y se mostrar&amp;aacute; una advertencia. Cuando &lt;code&gt;compile&lt;/code&gt; se establece en False, la compilaci&amp;oacute;n se omite sin ninguna advertencia.</target>
        </trans-unit>
        <trans-unit id="c46f638413ed40c367e372a75f26b338dbceb883" translate="yes" xml:space="preserve">
          <source>A Keras model instance. If the original model was compiled, and saved with the optimizer, then the returned model will be compiled. Otherwise, the model will be left uncompiled. In the case that an uncompiled model is returned, a warning is displayed if the &lt;code&gt;compile&lt;/code&gt; argument is set to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c90567011e38221f7eb1bf15d2f8de917fdd8e" translate="yes" xml:space="preserve">
          <source>A Keras model instance. To avoid OOM errors, this model could have been built on CPU, for instance (see usage example below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3c50854c78a9e4a26096b657e6223b4389603ee" translate="yes" xml:space="preserve">
          <source>A Keras tensor is a TensorFlow symbolic tensor object, which we augment with certain attributes that allow us to build a Keras model just by knowing the inputs and outputs of the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c72fc0fc05cc4ad4117bbb4ebc990821f08b10c" translate="yes" xml:space="preserve">
          <source>A Keras tensor is a tensor object from the underlying backend (Theano or TensorFlow), which we augment with certain attributes that allow us to build a Keras model just by knowing the inputs and outputs of the model.</source>
          <target state="translated">Un tensor Keras es un objeto tensor del backend subyacente (Theano o TensorFlow),que aumentamos con ciertos atributos que nos permiten construir un modelo Keras simplemente conociendo las entradas y salidas del modelo.</target>
        </trans-unit>
        <trans-unit id="4ba2dcdc5d1c0cca1397f2e238d83c8f29232098" translate="yes" xml:space="preserve">
          <source>A Keras variable with the shape of &lt;code&gt;x&lt;/code&gt; filled with zeros.</source>
          <target state="translated">Una variable de Keras con la forma de &lt;code&gt;x&lt;/code&gt; llena de ceros.</target>
        </trans-unit>
        <trans-unit id="9f2709971735638974e34a06dfc4d6e1c6787366" translate="yes" xml:space="preserve">
          <source>A Keras variable with the shape of x filled with ones.</source>
          <target state="translated">Una variable de Keras con la forma de x llena de unos.</target>
        </trans-unit>
        <trans-unit id="ccc2d41fca20fb63357efbc4ab6b93c72bb98b0e" translate="yes" xml:space="preserve">
          <source>A Keras variable, an identity matrix.</source>
          <target state="translated">Una variable Keras,una matriz de identidad.</target>
        </trans-unit>
        <trans-unit id="b0118f3d35ea6d3b012d2a3a8eb7994186f1548b" translate="yes" xml:space="preserve">
          <source>A Keras variable, filled with &lt;code&gt;1.0&lt;/code&gt;. Note that if &lt;code&gt;shape&lt;/code&gt; was symbolic, we cannot return a variable, and will return a dynamically-shaped tensor instead.</source>
          <target state="translated">Una variable de Keras, rellena con &lt;code&gt;1.0&lt;/code&gt; . Tenga en cuenta que si la &lt;code&gt;shape&lt;/code&gt; es simb&amp;oacute;lica, no podemos devolver una variable y, en su lugar, devolveremos un tensor de forma din&amp;aacute;mica.</target>
        </trans-unit>
        <trans-unit id="dd2883458db4d177cd61d95b2a779c606ca58ac3" translate="yes" xml:space="preserve">
          <source>A Keras variable, filled with drawn samples.</source>
          <target state="translated">Una variable de Keras,llena de muestras extraídas.</target>
        </trans-unit>
        <trans-unit id="3b48ceff972f9db6adb6b0559d051e8f0029880e" translate="yes" xml:space="preserve">
          <source>A LMDBRecordOptions object (optional).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e8c3c5f68ece2192845ebc63854d9e89a4be47b" translate="yes" xml:space="preserve">
          <source>A LearningRateSchedule that uses a cosine decay schedule with restarts.</source>
          <target state="translated">Un programa de aprendizaje que utiliza un programa de decaimiento del coseno con reinicios.</target>
        </trans-unit>
        <trans-unit id="9207f6d99f9841b237389a558e3ffc4405c090f0" translate="yes" xml:space="preserve">
          <source>A LearningRateSchedule that uses a cosine decay schedule.</source>
          <target state="translated">Un programa de tasa de aprendizaje que utiliza un programa de decaimiento del coseno.</target>
        </trans-unit>
        <trans-unit id="0eaa0ca4222c9a8ad6fb50989681242c2ced4ff5" translate="yes" xml:space="preserve">
          <source>A LearningRateSchedule that uses a linear cosine decay schedule.</source>
          <target state="translated">Un programa de tasa de aprendizaje que utiliza un programa de decaimiento lineal del coseno.</target>
        </trans-unit>
        <trans-unit id="5d92b46b8574ea3b412324256b30bab64ccc7812" translate="yes" xml:space="preserve">
          <source>A LearningRateSchedule that uses a noisy linear cosine decay schedule.</source>
          <target state="translated">Un programa de velocidad de aprendizaje que usa un programa de decaimiento lineal de coseno ruidoso.</target>
        </trans-unit>
        <trans-unit id="da337588cc388dd2c53ad6bc7913edc2336b5cf1" translate="yes" xml:space="preserve">
          <source>A LearningRateSchedule that uses a piecewise constant decay schedule.</source>
          <target state="translated">Un programa de tasa de aprendizaje que utiliza un programa de decadencia constante a destajo.</target>
        </trans-unit>
        <trans-unit id="14f33dc65871e77472dba93ad10c3cf2c4c8269c" translate="yes" xml:space="preserve">
          <source>A LearningRateSchedule that uses a polynomial decay schedule.</source>
          <target state="translated">Un programa de tasa de aprendizaje que utiliza un programa de decadencia polinómica.</target>
        </trans-unit>
        <trans-unit id="bf42cac3cb26977dde5432a7467dcf6aa8cfe9a7" translate="yes" xml:space="preserve">
          <source>A LearningRateSchedule that uses an exponential decay schedule.</source>
          <target state="translated">Un programa de tasa de aprendizaje que utiliza un programa de decadencia exponencial.</target>
        </trans-unit>
        <trans-unit id="bcf23a815ed026514eee046b495fe57dd75db40d" translate="yes" xml:space="preserve">
          <source>A LearningRateSchedule that uses an inverse time decay schedule.</source>
          <target state="translated">Un programa de tasa de aprendizaje que utiliza un programa de decaimiento de tiempo inverso.</target>
        </trans-unit>
        <trans-unit id="b0162fbc570e468e3ad30ed207b2307bfe039731" translate="yes" xml:space="preserve">
          <source>A MonitoredSession object.</source>
          <target state="translated">Un objeto de sesión monitorizada.</target>
        </trans-unit>
        <trans-unit id="16cca6ab1d8de9c92cede4b84ad261e4873253f1" translate="yes" xml:space="preserve">
          <source>A N-D &lt;code&gt;Tensor&lt;/code&gt; with shape &lt;code&gt;input_shape = [batch] + spatial_shape + remaining_shape&lt;/code&gt;, where &lt;code&gt;spatial_shape&lt;/code&gt; has M dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89be45e38fbd36a01c35a21fa63e39a5a72835a5" translate="yes" xml:space="preserve">
          <source>A None entry in a shape is compatible with any dimension, a None shape is compatible with any shape.</source>
          <target state="translated">Una entrada de Ninguna en una forma es compatible con cualquier dimensión,una forma de Ninguna es compatible con cualquier forma.</target>
        </trans-unit>
        <trans-unit id="9070af9185d856f70f1725ff8e1b8a97f1412a54" translate="yes" xml:space="preserve">
          <source>A None value is returned if no variables exist in the &lt;code&gt;MetaGraphDef&lt;/code&gt; (i.e., there are no variables to restore).</source>
          <target state="translated">Se devuelve un valor None si no existen variables en &lt;code&gt;MetaGraphDef&lt;/code&gt; (es decir, no hay variables para restaurar).</target>
        </trans-unit>
        <trans-unit id="06f12e0c398316d716ab17ceccf49ebe1c1cf8ed" translate="yes" xml:space="preserve">
          <source>A Numpy array (or array-like), or a list of arrays (in case the model has multiple inputs).</source>
          <target state="translated">Una matriz Numpy (o similar a una matriz),o una lista de matrices (en caso de que el modelo tenga múltiples entradas).</target>
        </trans-unit>
        <trans-unit id="7c490823f869383d2b0137e2c7a800daf4c817c7" translate="yes" xml:space="preserve">
          <source>A Numpy array of probability predictions.</source>
          <target state="translated">Un conjunto de predicciones de probabilidad Numpy.</target>
        </trans-unit>
        <trans-unit id="75f0d0148b06e16b45c79232679aef58cdbdc3e2" translate="yes" xml:space="preserve">
          <source>A Numpy array.</source>
          <target state="translated">Una matriz de Numpy.</target>
        </trans-unit>
        <trans-unit id="e66738ff278b15a49e9b99e3913e80f5c532f1ef" translate="yes" xml:space="preserve">
          <source>A Numpy ndarray or Numpy scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5368d0c61cdbd948b924a70d452d528e330d33c4" translate="yes" xml:space="preserve">
          <source>A PIL Image instance.</source>
          <target state="translated">Una instancia de Imagen PIL.</target>
        </trans-unit>
        <trans-unit id="0eceeed37483af18ade592f14e3c997fb3fe7681" translate="yes" xml:space="preserve">
          <source>A PerReplica object or a tensor with device set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94eff18918ff43ed7c5eb203556f4eaf08b87518" translate="yes" xml:space="preserve">
          <source>A Policy, or a string that will be converted to a Policy..</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d70e4f338adcea5ada80506d2d1999f87c7b4a23" translate="yes" xml:space="preserve">
          <source>A ProtocolMessage</source>
          <target state="translated">Un mensaje de protocolo</target>
        </trans-unit>
        <trans-unit id="086f389b8686688a8e11c9c53d74ff03927a8e48" translate="yes" xml:space="preserve">
          <source>A PyCapsule named as dltensor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="378c4a8641d26a823ffdcf7949daa326ab700b5d" translate="yes" xml:space="preserve">
          <source>A PyCapsule named as dltensor, which shares the underlying memory to other framework. This PyCapsule can be consumed only once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2703616b62cf863c6a2369857915911b56f6ec0c" translate="yes" xml:space="preserve">
          <source>A Python &lt;code&gt;int&lt;/code&gt; indicating the number of ragged dimensions in this ragged tensor. The outermost dimension is not considered ragged.</source>
          <target state="translated">Un &lt;code&gt;int&lt;/code&gt; de Python que indica el n&amp;uacute;mero de dimensiones irregulares en este tensor irregular. La dimensi&amp;oacute;n m&amp;aacute;s externa no se considera irregular.</target>
        </trans-unit>
        <trans-unit id="8d7254d1f6146283c8dc5108bdf5ac3f0fa2c48f" translate="yes" xml:space="preserve">
          <source>A Python dictionary mapping names to additional Python objects used to create this optimizer, such as a function used for a hyperparameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b84f963c4b1ba1860adf60b7691c55c2e8ef7c96" translate="yes" xml:space="preserve">
          <source>A Python dictionary, the output of &lt;code&gt;get_config&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41e83ce31f8105959472853529880cbb6ff749cf" translate="yes" xml:space="preserve">
          <source>A Python dictionary, typically the output of get_config.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39bf88bbfe86e73211257d85c00ba6623f189582" translate="yes" xml:space="preserve">
          <source>A Python dictionary. It will typically be the output of &lt;code&gt;get_config&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61f7bca3df4d76671b0adb94989594e9f3ffeaef" translate="yes" xml:space="preserve">
          <source>A Python float. Its ideal value varies depending on models to run. Choosing a too small loss_scale might affect model quality; a too big loss_scale might cause inf or nan. There is no single right loss_scale to apply. There is no harm choosing a relatively big number as long as no nan or inf is encountered in training.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b7c8ee276452ebeb8711d8cf35a54510e564265" translate="yes" xml:space="preserve">
          <source>A Python float. The loss scale to use at the beginning. It's better to start this at a very high number, because a loss scale that is too high gets lowered far more quickly than a loss scale that is too low gets raised. The default is 2 ** 15, which is approximately half the maximum float16 value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="943aca7b3e6187315e923e3567dcdffb9836e481" translate="yes" xml:space="preserve">
          <source>A Python function that builds a computation to apply to each shard of the input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a64b1ba516b1a26723e7d65484621810ab12db6" translate="yes" xml:space="preserve">
          <source>A Python function that builds a computation to apply to the input. If the function takes n inputs, 'inputs' should be a list of n tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0d01b81620981da2e7a31581b1914235e17e7cf" translate="yes" xml:space="preserve">
          <source>A Python function that builds the computation to place on the host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59dc3bc7a54223785cf08f1710cfa872d091e0d4" translate="yes" xml:space="preserve">
          <source>A Python function that builds the computation to replicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="378a7331d0b2190c6e6d0897d1095bb8c8dbb10f" translate="yes" xml:space="preserve">
          <source>A Python function which accepts a list of &lt;code&gt;Tensor&lt;/code&gt; objects having element types that match the corresponding &lt;a href=&quot;tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; objects in &lt;code&gt;inp&lt;/code&gt; and returns a list of &lt;code&gt;Tensor&lt;/code&gt; objects (or a single &lt;code&gt;Tensor&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt;) having element types that match the corresponding values in &lt;code&gt;Tout&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="873e0b98bb960a3966f1de1bc77c03a52feb6b21" translate="yes" xml:space="preserve">
          <source>A Python function, which accepts &lt;code&gt;ndarray&lt;/code&gt; objects as arguments and returns a list of &lt;code&gt;ndarray&lt;/code&gt; objects (or a single &lt;code&gt;ndarray&lt;/code&gt;). This function must accept as many arguments as there are tensors in &lt;code&gt;inp&lt;/code&gt;, and these argument types will match the corresponding &lt;a href=&quot;../../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; objects in &lt;code&gt;inp&lt;/code&gt;. The returns &lt;code&gt;ndarray&lt;/code&gt;s must match the number and types defined &lt;code&gt;Tout&lt;/code&gt;. Important Note: Input and output numpy &lt;code&gt;ndarray&lt;/code&gt;s of &lt;code&gt;func&lt;/code&gt; are not guaranteed to be copies. In some cases their underlying memory will be shared with the corresponding TensorFlow tensors. In-place modification or storing &lt;code&gt;func&lt;/code&gt; input or return values in python datastructures without explicit (np.)copy can have non-deterministic consequences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="156420bf51152ed67186bf4e533ecc7851334e94" translate="yes" xml:space="preserve">
          <source>A Python function, which accepts &lt;code&gt;numpy.ndarray&lt;/code&gt; objects as arguments and returns a list of &lt;code&gt;numpy.ndarray&lt;/code&gt; objects (or a single &lt;code&gt;numpy.ndarray&lt;/code&gt;). This function must accept as many arguments as there are tensors in &lt;code&gt;inp&lt;/code&gt;, and these argument types will match the corresponding &lt;a href=&quot;tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt; objects in &lt;code&gt;inp&lt;/code&gt;. The returns &lt;code&gt;numpy.ndarray&lt;/code&gt;s must match the number and types defined &lt;code&gt;Tout&lt;/code&gt;. Important Note: Input and output &lt;code&gt;numpy.ndarray&lt;/code&gt;s of &lt;code&gt;func&lt;/code&gt; are not guaranteed to be copies. In some cases their underlying memory will be shared with the corresponding TensorFlow tensors. In-place modification or storing &lt;code&gt;func&lt;/code&gt; input or return values in python datastructures without explicit (np.)copy can have non-deterministic consequences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81a8cd8d5187e7e25ece6c2913cfce069d095404" translate="yes" xml:space="preserve">
          <source>A Python integer to use as random seed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6e12d0fa2314472a79e3b7b2887bba80eed7ec8" translate="yes" xml:space="preserve">
          <source>A Python integer. An initializer created with a given seed will always produce the same random tensor for a given shape and dtype.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89c433a1b3215274521d9c69c434ef649fc9dbcc" translate="yes" xml:space="preserve">
          <source>A Python integer. The number of ways to split.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baf0eac5c1e79ead3e3d96ff473329572efeb0de" translate="yes" xml:space="preserve">
          <source>A Python integer. Used in combination with &lt;a href=&quot;set_seed&quot;&gt;&lt;code&gt;tf.random.set_seed&lt;/code&gt;&lt;/a&gt; to create a reproducible sequence of tensors across multiple calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4103f6354bb43a9064b027db0165926456230960" translate="yes" xml:space="preserve">
          <source>A Python integer. Used to create a random seed for the distribution. See &lt;a href=&quot;../../random/set_seed&quot;&gt;&lt;code&gt;tf.random.set_seed&lt;/code&gt;&lt;/a&gt; for behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ce57b2e3462eff8c025ec399b72b5b461cdadc8" translate="yes" xml:space="preserve">
          <source>A Python integer. Used to create a random seed for the distribution. See &lt;a href=&quot;set_seed&quot;&gt;&lt;code&gt;tf.random.set_seed&lt;/code&gt;&lt;/a&gt; for behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baa9929d8d496eb1ef1f02dad1fb2862de2d1669" translate="yes" xml:space="preserve">
          <source>A Python integer. Used to create a random seed for the distributions. See &lt;a href=&quot;../../random/set_seed&quot;&gt;&lt;code&gt;tf.random.set_seed&lt;/code&gt;&lt;/a&gt; for behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64b9c8c9fb73475dad77797334876740abb30645" translate="yes" xml:space="preserve">
          <source>A Python integer. Used to create a random seed for the distributions. See &lt;a href=&quot;set_seed&quot;&gt;&lt;code&gt;tf.random.set_seed&lt;/code&gt;&lt;/a&gt; for behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26017a0509c7f9642b683920f178e3dd2cae2689" translate="yes" xml:space="preserve">
          <source>A Python integer. Used to create a random seed. See &lt;a href=&quot;../compat/v1/set_random_seed&quot;&gt;&lt;code&gt;tf.compat.v1.set_random_seed&lt;/code&gt;&lt;/a&gt; for behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fd957572a0ea2a7b3183c5e00621ec2bbd0c44c" translate="yes" xml:space="preserve">
          <source>A Python integer. Used to create random seeds. See &lt;a href=&quot;../../../random/set_seed&quot;&gt;&lt;code&gt;tf.random.set_seed&lt;/code&gt;&lt;/a&gt; for behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dd403f2dfa138cd7211f91195016bc0b063cd18" translate="yes" xml:space="preserve">
          <source>A Python integer. Used to create random seeds. See &lt;a href=&quot;../../set_random_seed&quot;&gt;&lt;code&gt;tf.compat.v1.set_random_seed&lt;/code&gt;&lt;/a&gt; for behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26a3ffdca00611ed4fce3c3b13bc6f00f10ee45a" translate="yes" xml:space="preserve">
          <source>A Python integer. Used to create random seeds. See &lt;a href=&quot;../random/set_seed&quot;&gt;&lt;code&gt;tf.random.set_seed&lt;/code&gt;&lt;/a&gt; for behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afa74889d508dd7394d4adc84a34d4b442de166a" translate="yes" xml:space="preserve">
          <source>A Python integer. Used to create random seeds. See &lt;a href=&quot;../set_random_seed&quot;&gt;&lt;code&gt;tf.compat.v1.set_random_seed&lt;/code&gt;&lt;/a&gt;. for behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0896eef8acfb3e30c88d51c841a3701f97dae9e" translate="yes" xml:space="preserve">
          <source>A Python integer. Used to create random seeds. See &lt;a href=&quot;random/set_seed&quot;&gt;&lt;code&gt;tf.random.set_seed&lt;/code&gt;&lt;/a&gt; for behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a9886918877fa5077ffb545da946cbeb07cd132" translate="yes" xml:space="preserve">
          <source>A Python integer. Used to create random seeds. See &lt;a href=&quot;set_random_seed&quot;&gt;&lt;code&gt;tf.compat.v1.set_random_seed&lt;/code&gt;&lt;/a&gt; for behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="274756223db17ea30b325b2e4ff5c8f988f90035" translate="yes" xml:space="preserve">
          <source>A Python integer. Used to seed the random generator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d0425c18bd57167fc6ffa63500b52b1be3a345c" translate="yes" xml:space="preserve">
          <source>A Python list, the flattened version of the input.</source>
          <target state="translated">Una lista de Python,la versión aplanada de la entrada.</target>
        </trans-unit>
        <trans-unit id="193d8823a05a29aea379ced916c5fcd6fc8a6bb4" translate="yes" xml:space="preserve">
          <source>A Python number. Global step to use for the decay computation. Must not be negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82549a73da0cb3e8d55134e5b821b041e0066c49" translate="yes" xml:space="preserve">
          <source>A Python number. The decay rate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5736ef488b12e573c173619b21c7ae83a89fe406" translate="yes" xml:space="preserve">
          <source>A Python scalar, list or tuple of values, or a N-dimensional numpy array. All elements of the initialized variable will be set to the corresponding value in the &lt;code&gt;value&lt;/code&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22bae93da525fbfc3db12a55e720de2a5d99ce15" translate="yes" xml:space="preserve">
          <source>A Python scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c70ef9896cc23d03bc85c3335b173e1d89db306b" translate="yes" xml:space="preserve">
          <source>A Python thread to join.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dddd78e924000fd8e937c3bc88784e51b9e3157c" translate="yes" xml:space="preserve">
          <source>A Queue or a mutable string Tensor representing a handle to a Queue, with string work items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12683222b080c2d12a445d5094b3a487f00fbfb8" translate="yes" xml:space="preserve">
          <source>A Queue with the output integers. A &lt;code&gt;QueueRunner&lt;/code&gt; for the Queue is added to the current &lt;code&gt;Graph&lt;/code&gt;'s &lt;code&gt;QUEUE_RUNNER&lt;/code&gt; collection.</source>
          <target state="translated">Una cola con los enteros de salida. Un &lt;code&gt;QueueRunner&lt;/code&gt; para la cola se a&amp;ntilde;ade a la corriente &lt;code&gt;Graph&lt;/code&gt; 's &lt;code&gt;QUEUE_RUNNER&lt;/code&gt; colecci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="56416b8acfd50b214cb08fb8f027074a3b15547e" translate="yes" xml:space="preserve">
          <source>A RNN backed by cuDNN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3261494b6c6692c32a7681f43364bdfeb50e7b8c" translate="yes" xml:space="preserve">
          <source>A RNN cell instance or a list of RNN cell instances. A RNN cell is a class that has:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35bc60fbdd65fb9c06e58b6094126cfb6814c1bd" translate="yes" xml:space="preserve">
          <source>A RaggedTensor of ngrams. If &lt;code&gt;data.shape=[D1...DN, S]&lt;/code&gt;, then &lt;code&gt;output.shape=[D1...DN, NUM_NGRAMS]&lt;/code&gt;, where &lt;code&gt;NUM_NGRAMS=S-ngram_width+1+2*padding_width&lt;/code&gt;.</source>
          <target state="translated">Un RaggedTensor de ngrams. Si &lt;code&gt;data.shape=[D1...DN, S]&lt;/code&gt; , entonces &lt;code&gt;output.shape=[D1...DN, NUM_NGRAMS]&lt;/code&gt; , donde &lt;code&gt;NUM_NGRAMS=S-ngram_width+1+2*padding_width&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="51ee36ce302b493d087ba71af8999def05fcc706" translate="yes" xml:space="preserve">
          <source>A RaggedTensor's rows are only considered to be uniform (i.e. non-ragged) if it can be determined statically (at graph construction time) that the rows all have the same length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41db5896404688ce9774622050bdd42d3d81f599" translate="yes" xml:space="preserve">
          <source>A RandomUniform instance.</source>
          <target state="translated">Un caso de RandomUniform.</target>
        </trans-unit>
        <trans-unit id="33a09a59e76376cad4097eebd6df29848e9082e9" translate="yes" xml:space="preserve">
          <source>A Reader that outputs fixed-length records from a file.</source>
          <target state="translated">Un lector que produce registros de longitud fija a partir de un archivo.</target>
        </trans-unit>
        <trans-unit id="3deb1a682b4b34f2a98308f90bd70b47dffa3bb9" translate="yes" xml:space="preserve">
          <source>A Reader that outputs the entire contents of a file as a value.</source>
          <target state="translated">Un lector que produce todo el contenido de un archivo como un valor.</target>
        </trans-unit>
        <trans-unit id="fe909f0f84e3be63afc5442b206cece63757c2ee" translate="yes" xml:space="preserve">
          <source>A Reader that outputs the lines of a file delimited by '\n'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="106ddd3c2c86e2d34c96270e020a18cb91ec733c" translate="yes" xml:space="preserve">
          <source>A Reader that outputs the lines of a file delimited by newlines.</source>
          <target state="translated">Un lector que produce las líneas de un archivo delimitado por nuevas líneas.</target>
        </trans-unit>
        <trans-unit id="7accc68324ca2907000e091a02b7445d75627186" translate="yes" xml:space="preserve">
          <source>A Reader that outputs the queued work as both the key and value.</source>
          <target state="translated">Un lector que produce el trabajo de la cola como la clave y el valor.</target>
        </trans-unit>
        <trans-unit id="bfd6a6c946734b7146b51b4c3fe50407ff5e513d" translate="yes" xml:space="preserve">
          <source>A Reader that outputs the records from a LMDB file.</source>
          <target state="translated">Un lector que produce los registros de un archivo LMDB.</target>
        </trans-unit>
        <trans-unit id="34bc841ccda8dc92d534e3f32c6b80506cac2ec9" translate="yes" xml:space="preserve">
          <source>A Reader that outputs the records from a TFRecords file.</source>
          <target state="translated">Un lector que produce los registros de un archivo TFRecords.</target>
        </trans-unit>
        <trans-unit id="6f02dc9811d98aa6452d0eb7f87c2cdf05bf2ff5" translate="yes" xml:space="preserve">
          <source>A Reader that outputs the records from a TensorFlow Records file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2001ee07fe7b6014570a8c7ac1a3d17872c2b97" translate="yes" xml:space="preserve">
          <source>A Regressor for Tensorflow Boosted Trees models.</source>
          <target state="translated">Un Regressor para los modelos de Tensorflow Boosted Trees.</target>
        </trans-unit>
        <trans-unit id="f337546d45c943fd3cea35f9586bd85290d637d8" translate="yes" xml:space="preserve">
          <source>A SaveableObject for saving/restoring iterator state using Saver.</source>
          <target state="translated">Un SaveableObject para guardar/restaurar el estado del iterador usando el Saver.</target>
        </trans-unit>
        <trans-unit id="3079e877f56d8247b74bb1b6522cb46530f7739f" translate="yes" xml:space="preserve">
          <source>A SavedModel can include arbitrary files, called assets, that are needed for its use. For example a vocabulary file used initialize a lookup table.</source>
          <target state="translated">Un SavedModel puede incluir archivos arbitrarios,llamados activos,que son necesarios para su uso.Por ejemplo,un archivo de vocabulario utilizado inicializa una tabla de búsqueda.</target>
        </trans-unit>
        <trans-unit id="490f38380f0e6355eab5c65009a882df95cdad88" translate="yes" xml:space="preserve">
          <source>A Saver object.</source>
          <target state="translated">Un objeto de ahorro.</target>
        </trans-unit>
        <trans-unit id="1708b7a94a8c3a0f74bece29bccb543cf53b3f85" translate="yes" xml:space="preserve">
          <source>A Saver object. Used by chief supervisors if a &lt;code&gt;logdir&lt;/code&gt; was specified. Defaults to the saved returned by Saver(). If &lt;code&gt;None&lt;/code&gt;, the model is not saved automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57897fa645b3a714a7bdf38aa3dbb6f57da4cb0d" translate="yes" xml:space="preserve">
          <source>A Scalar &lt;code&gt;float32&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; indicating the sample rate of the signal in hertz.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d09091706f42b95957d379c47b4786763ebfb41" translate="yes" xml:space="preserve">
          <source>A Session object that can be used to drive the model.</source>
          <target state="translated">Un objeto de la Sesión que puede ser usado para conducir el modelo.</target>
        </trans-unit>
        <trans-unit id="001e2c446624b9078a48407c97a05c5ad8e1149d" translate="yes" xml:space="preserve">
          <source>A Session object that should be used as a context manager to surround the graph building and execution code in a test case.</source>
          <target state="translated">Un objeto Session que debe utilizarse como gestor de contexto para rodear el código de construcción y ejecución de gráficos en un caso de prueba.</target>
        </trans-unit>
        <trans-unit id="246026e1bd59631946a33842fc72fd25341a9196" translate="yes" xml:space="preserve">
          <source>A Session to use to save the variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f583def498dd73eed65b3c764f7e1118dc5480e5" translate="yes" xml:space="preserve">
          <source>A Session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="080680985b081bdc5a15d9c64081fa19ce925163" translate="yes" xml:space="preserve">
          <source>A SessionManager object.</source>
          <target state="translated">Un objeto SessionManager.</target>
        </trans-unit>
        <trans-unit id="944beb99a352a870c93cdb953dbdad5b92c3e715" translate="yes" xml:space="preserve">
          <source>A SessionRunValues object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1984ec9741c8537f7b2092fac1933299e5297062" translate="yes" xml:space="preserve">
          <source>A SignatureDef protocol buffer constructed based on the supplied arguments.</source>
          <target state="translated">Un buffer de protocolo SignatureDef construido en base a los argumentos suministrados.</target>
        </trans-unit>
        <trans-unit id="ffb9a88ea25c1711998ddc14a3b48f60cac647ce" translate="yes" xml:space="preserve">
          <source>A SparseTensor with &lt;code&gt;output.shape = values.shape[:axis] + [N]&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt; is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a63b5f7b1c43b8e021a2500da993ad95a5e7243" translate="yes" xml:space="preserve">
          <source>A SparseTensor with the same values as &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">Un SparseTensor con los mismos valores que &lt;code&gt;self&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75ddde7f7af57d0a0f6c80ba7ea06ed79a68c31f" translate="yes" xml:space="preserve">
          <source>A StepCounter thread measure step time.</source>
          <target state="translated">Un hilo StepCounter mide el tiempo de paso.</target>
        </trans-unit>
        <trans-unit id="5c0404aba76e12b57b8a523bd45a400322ad4a83" translate="yes" xml:space="preserve">
          <source>A Summary proto, or a string holding a serialized summary proto.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad92f65e11968c1836769977c2516e8dc2412458" translate="yes" xml:space="preserve">
          <source>A Summary thread computing summaries every save_summaries_secs.</source>
          <target state="translated">Un hilo de resumen computarizado resume todos los save_summaries_secs.</target>
        </trans-unit>
        <trans-unit id="f953263d5793416837cd5d5d88c4ef5bb1b93ffa" translate="yes" xml:space="preserve">
          <source>A SummaryWriter object.</source>
          <target state="translated">Un objeto SummaryWriter.</target>
        </trans-unit>
        <trans-unit id="aa75967186cc2ef5a3b16efb5b7d63c30d9c97a0" translate="yes" xml:space="preserve">
          <source>A SummaryWriter.</source>
          <target state="translated">Un escritor de resúmenes.</target>
        </trans-unit>
        <trans-unit id="f695e21abd05428c5ed459926110315407961ff6" translate="yes" xml:space="preserve">
          <source>A TF Session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f33cfa6809a0b606af64306c76f2981a9c4ef33" translate="yes" xml:space="preserve">
          <source>A TFRecordOptions object (optional).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b82651029f9800d2af285abd19c3183d5484f2c" translate="yes" xml:space="preserve">
          <source>A TPU core selector Op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c72f6fd14905e55df69e6f87902288c9e4a3e879" translate="yes" xml:space="preserve">
          <source>A TableInitializerBase object that contains the data used to initialize the table. If None, then we only use out-of-vocab buckets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="861caa997d9f0bfd13a06b9e87f2b35fb69d1e4c" translate="yes" xml:space="preserve">
          <source>A Tensor containing diagonals of &lt;code&gt;input&lt;/code&gt;. Has the same type as &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="translated">Un tensor que contiene diagonales de &lt;code&gt;input&lt;/code&gt; . Tiene el mismo tipo que la &lt;code&gt;input&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ae313cea918fd6a344a0d2d796917daed0a7e1c4" translate="yes" xml:space="preserve">
          <source>A Tensor containing the value to minimize or a callable taking no arguments which returns the value to minimize. When eager execution is enabled it must be a callable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a54b0e31007b6e846f493877d1d078e5caf69537" translate="yes" xml:space="preserve">
          <source>A Tensor containing the value to minimize.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="471a1e51d1e1fc6ad5448b3913e2975656f43714" translate="yes" xml:space="preserve">
          <source>A Tensor of rank at least 3. Must be of type &lt;code&gt;float16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, or &lt;code&gt;float64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4682497988f13d4fb56200eb4204a208aff4d79e" translate="yes" xml:space="preserve">
          <source>A Tensor of rank at least 3. Must have the same type as &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bd731a0b320dc07779f3b34ec9939ae4c694488" translate="yes" xml:space="preserve">
          <source>A Tensor of rank at least 3. Must have the same type as &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ebcd7f6252231bba25f65f6edbf0bc8601e8980" translate="yes" xml:space="preserve">
          <source>A Tensor of the same shape of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">Un tensor de la misma forma de &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f0e82729603c4cebdd912df2735da2a0d0eeb845" translate="yes" xml:space="preserve">
          <source>A Tensor of the specified shape filled with random Poisson values. For each i, each &lt;code&gt;samples[..., i]&lt;/code&gt; is an independent draw from the Poisson distribution with rate &lt;code&gt;lam[i]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9a23de40073ad2f9f73afb14f39470ab49691ff" translate="yes" xml:space="preserve">
          <source>A Tensor of the specified shape filled with random binomial values. For each i, each samples[..., i] is an independent draw from the binomial distribution on counts[i] trials with probability of success probs[i].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8988edaf9496d9782a8814e8f1bd40192e36710b" translate="yes" xml:space="preserve">
          <source>A Tensor of the specified shape filled with random binomial values. For each i, each samples[i, ...] is an independent draw from the binomial distribution on counts[i] trials with probability of success probs[i].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc633fa2aba77a2d63de4bc6d2bfeb71ea450980" translate="yes" xml:space="preserve">
          <source>A Tensor of the specified shape filled with random gamma values. For each i, each `samples[..., i] is an independent draw from the gamma distribution with concentration alpha[i] and scale beta[i].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca7003e8ab76673bc22de08707e2c4fb37cd9bec" translate="yes" xml:space="preserve">
          <source>A Tensor of type &lt;code&gt;float32&lt;/code&gt;. Defaults to &lt;code&gt;0.1&lt;/code&gt;. The cropped area of the image must contain at least this fraction of any bounding box supplied. The value of this parameter should be non-negative. In the case of 0, the cropped area does not need to overlap any of the bounding boxes supplied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="988c5fdc82b8f2e4a89033ba4204f3883ac8412c" translate="yes" xml:space="preserve">
          <source>A Tensor or Python value of type &lt;code&gt;dtype&lt;/code&gt;, broadcastable with &lt;code&gt;mean&lt;/code&gt;. The standard deviation of the normal distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7154065c60f6d8a5b3210c7571108c9184183a4" translate="yes" xml:space="preserve">
          <source>A Tensor or Python value of type &lt;code&gt;dtype&lt;/code&gt;, broadcastable with &lt;code&gt;shape&lt;/code&gt; (for integer types, broadcasting is not supported, so it needs to be a scalar). The lower bound (included) on the range of random values to generate. Pass &lt;code&gt;None&lt;/code&gt; for full-range integers. Defaults to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0bda32294684d8fb9db57b4630d6c0326429c11" translate="yes" xml:space="preserve">
          <source>A Tensor or Python value of type &lt;code&gt;dtype&lt;/code&gt;, broadcastable with &lt;code&gt;shape&lt;/code&gt; (for integer types, broadcasting is not supported, so it needs to be a scalar). The lower bound on the range of random values to generate (inclusive). Defaults to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ac45a5aa209494dd4e9a6d1bdf106c87363a40c" translate="yes" xml:space="preserve">
          <source>A Tensor or Python value of type &lt;code&gt;dtype&lt;/code&gt;, broadcastable with &lt;code&gt;shape&lt;/code&gt; (for integer types, broadcasting is not supported, so it needs to be a scalar). The lower bound on the range of random values to generate. Pass &lt;code&gt;None&lt;/code&gt; for full-range integers. Defaults to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6d0456879d120259494112bac390ebfa49aa36e" translate="yes" xml:space="preserve">
          <source>A Tensor or Python value of type &lt;code&gt;dtype&lt;/code&gt;, broadcastable with &lt;code&gt;shape&lt;/code&gt; (for integer types, broadcasting is not supported, so it needs to be a scalar). The upper bound (excluded) on the range of random values to generate. Pass &lt;code&gt;None&lt;/code&gt; for full-range integers. Defaults to 1 if &lt;code&gt;dtype&lt;/code&gt; is floating point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07b3002f33881badf698ab33b4ee4ac979fedb15" translate="yes" xml:space="preserve">
          <source>A Tensor or Python value of type &lt;code&gt;dtype&lt;/code&gt;, broadcastable with &lt;code&gt;shape&lt;/code&gt; (for integer types, broadcasting is not supported, so it needs to be a scalar). The upper bound on the range of random values to generate (exclusive). Defaults to 1 if &lt;code&gt;dtype&lt;/code&gt; is floating point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="786af6b336b7fe6a4230fff8282f3dd70a04f049" translate="yes" xml:space="preserve">
          <source>A Tensor or Python value of type &lt;code&gt;dtype&lt;/code&gt;, broadcastable with &lt;code&gt;shape&lt;/code&gt; (for integer types, broadcasting is not supported, so it needs to be a scalar). The upper bound on the range of random values to generate. Defaults to 1 if &lt;code&gt;dtype&lt;/code&gt; is floating point. Pass &lt;code&gt;None&lt;/code&gt; for full-range integers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b75e60726e2cd93bb716dba325d39e02c483784d" translate="yes" xml:space="preserve">
          <source>A Tensor or Python value of type &lt;code&gt;dtype&lt;/code&gt;, broadcastable with &lt;code&gt;stddev&lt;/code&gt;. The mean of the normal distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a90dfcc9d716e5e29bf828441313515c83f7c9a3" translate="yes" xml:space="preserve">
          <source>A Tensor or Python value or N-D array of type &lt;code&gt;dtype&lt;/code&gt;. &lt;code&gt;alpha&lt;/code&gt; provides the shape parameter(s) describing the gamma distribution(s) to sample. Must be broadcastable with &lt;code&gt;beta&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38028afe815406e7b8ccfece57f80bbb86b24cba" translate="yes" xml:space="preserve">
          <source>A Tensor or Python value or N-D array of type &lt;code&gt;dtype&lt;/code&gt;. &lt;code&gt;lam&lt;/code&gt; provides the rate parameter(s) describing the poisson distribution(s) to sample.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fad7fdd8f9580c42f28a17bc820b1b0e21a0a0c" translate="yes" xml:space="preserve">
          <source>A Tensor or Python value or N-D array of type &lt;code&gt;dtype&lt;/code&gt;. Defaults to 1. &lt;code&gt;beta&lt;/code&gt; provides the inverse scale parameter(s) of the gamma distribution(s) to sample. Must be broadcastable with &lt;code&gt;alpha&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9194fc053cd6f2d619d9cb64bc5754d96dae81c0" translate="yes" xml:space="preserve">
          <source>A Tensor or RaggedTensor containing the source data for the ngrams.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef12450bc10caac12d431e7a333c0c6475f22395" translate="yes" xml:space="preserve">
          <source>A Tensor or a floating point value. The learning rate to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3933701101f1ec1798af80278647efa7129ba806" translate="yes" xml:space="preserve">
          <source>A Tensor or a floating point value. The learning rate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9131e815fb0faab6bd55e330defa4d9aa5b02d98" translate="yes" xml:space="preserve">
          <source>A Tensor or a nested list/tuple of Tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="323012f54c6ccb02c610f3409fbc2d2d06d206c0" translate="yes" xml:space="preserve">
          <source>A Tensor to be shuffled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb9e00f4311a2fb481a35d4c12d0f2fe0bc6c84" translate="yes" xml:space="preserve">
          <source>A Tensor value to broadcast.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a6d77cefc1ac427f71bac459f5c4472e984c930" translate="yes" xml:space="preserve">
          <source>A Tensor which has the same shape as &lt;code&gt;input&lt;/code&gt;, except along the given axis. If axis is None then the output array is flattened to match the flattened input array.</source>
          <target state="translated">Un tensor que tiene la misma forma que la &lt;code&gt;input&lt;/code&gt; , excepto a lo largo del eje dado. Si el eje es Ninguno, la matriz de salida se aplana para que coincida con la matriz de entrada plana.</target>
        </trans-unit>
        <trans-unit id="971e749e4c8d7fd34be87768a0759c02e5f1dc71" translate="yes" xml:space="preserve">
          <source>A Tensor which may have the same shape as &lt;code&gt;condition&lt;/code&gt;. If &lt;code&gt;condition&lt;/code&gt; is rank 1, &lt;code&gt;x&lt;/code&gt; may have higher rank, but its first dimension must match the size of &lt;code&gt;condition&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff87b24d834f9d8166917dea78851b4cd44d5ee5" translate="yes" xml:space="preserve">
          <source>A Tensor with the batchwise KL-divergence between &lt;code&gt;distribution_a&lt;/code&gt; and &lt;code&gt;distribution_b&lt;/code&gt;.</source>
          <target state="translated">Un tensor con la divergencia KL por lotes entre &lt;code&gt;distribution_a&lt;/code&gt; y &lt;code&gt;distribution_b&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d37e6c7bf5e7c5d39185213509cafebd66101f3d" translate="yes" xml:space="preserve">
          <source>A Tensor with the same type as &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">Un tensor del mismo tipo que &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d178b2ae34e0eb271f93723e59e6da6cd7299031" translate="yes" xml:space="preserve">
          <source>A Tensor with type &lt;code&gt;float16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, or &lt;code&gt;complex128&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4603570baaeda7501bf4aa08100a1a2f29c1fda9" translate="yes" xml:space="preserve">
          <source>A Tensor with type &lt;code&gt;float32&lt;/code&gt; or &lt;code&gt;float64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c0fbd62c2bf3b6e1806f8b2fef7c64bdad9b475" translate="yes" xml:space="preserve">
          <source>A Tensor's shape (that is, the rank of the Tensor and the size of each dimension) may not always be fully known. In &lt;a href=&quot;function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt; definitions, the shape may only be partially known.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e4c918bac18f57cb207de10becd32cfb67c898a" translate="yes" xml:space="preserve">
          <source>A Tensor, RaggedTensor, or SparseTensor whose values should be counted. These tensors must have a rank of 2 if &lt;code&gt;axis=-1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee0506c4f577756c75f67542700381ecb41f795d" translate="yes" xml:space="preserve">
          <source>A Tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00bbaf96680663944f6994ed519d9028efdcbb79" translate="yes" xml:space="preserve">
          <source>A Tensor. A Gamma-adjusted tensor of the same shape and type as &lt;code&gt;image&lt;/code&gt;.</source>
          <target state="translated">Un tensor. Un tensor ajustado por gamma de la misma forma y tipo que la &lt;code&gt;image&lt;/code&gt; n .</target>
        </trans-unit>
        <trans-unit id="9badf839b8cf9110e96349d84c03ae5b5843633e" translate="yes" xml:space="preserve">
          <source>A Tensor. Has the same type as &lt;code&gt;diagonal&lt;/code&gt;.</source>
          <target state="translated">Un tensor. Tiene el mismo tipo que la &lt;code&gt;diagonal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d0a949d394ba7484f89770d6f1896d4c3e4eb88f" translate="yes" xml:space="preserve">
          <source>A Tensor. Has the same type as input.</source>
          <target state="translated">Un Tensor.Tiene el mismo tipo que la entrada.</target>
        </trans-unit>
        <trans-unit id="be2d847be0ed4ce4fda0e772f3ef044197b64c00" translate="yes" xml:space="preserve">
          <source>A Tensor. Has the same type as x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15adb28e9c3f1b3257e188ed8551c650848b76ad" translate="yes" xml:space="preserve">
          <source>A Tensor. Must be one of the following types: &lt;code&gt;bfloat16&lt;/code&gt;, &lt;code&gt;half&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, &lt;code&gt;float64&lt;/code&gt;, &lt;code&gt;uint8&lt;/code&gt;, &lt;code&gt;int8&lt;/code&gt;, &lt;code&gt;uint16&lt;/code&gt;, &lt;code&gt;int16&lt;/code&gt;, &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;, &lt;code&gt;complex64&lt;/code&gt;, &lt;code&gt;complex128&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="701c02311fb1a497823d2da8b41e528156c4ec7d" translate="yes" xml:space="preserve">
          <source>A Tensor. Must be one of the following types: bfloat16, half, float32, float64, int32, int64, complex64, complex128.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92db520c50b192c8a3c321cfb4d37cecd6e60b15" translate="yes" xml:space="preserve">
          <source>A TensorFlow &lt;code&gt;Session&lt;/code&gt; for use in interactive contexts, such as a shell.</source>
          <target state="translated">Una &lt;code&gt;Session&lt;/code&gt; TensorFlow para usar en contextos interactivos, como un shell.</target>
        </trans-unit>
        <trans-unit id="6d5139aa1d8f1a88856dee5d6409f9bb4be977cf" translate="yes" xml:space="preserve">
          <source>A TensorFlow &lt;code&gt;Session&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="803bdab36852897f1a1b591e848b9e95be42d166" translate="yes" xml:space="preserve">
          <source>A TensorFlow ConfigProto object.</source>
          <target state="translated">Un objeto TensorFlow ConfigProto.</target>
        </trans-unit>
        <trans-unit id="43a7dbbd513e6103fd507ce985b7cc41827aee4d" translate="yes" xml:space="preserve">
          <source>A TensorFlow Session that has been created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29e4b57b491406d147222490f7801e455580b8d4" translate="yes" xml:space="preserve">
          <source>A TensorFlow Session that will be soon closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d88ff799e9e688aa06b434deceddf53a5edf31d" translate="yes" xml:space="preserve">
          <source>A TensorFlow computation, represented as a dataflow graph.</source>
          <target state="translated">Un cálculo de TensorFlow,representado como un gráfico de flujo de datos.</target>
        </trans-unit>
        <trans-unit id="9ef0bd15a5c1c1db6c0778d47961f07ec27c97ba" translate="yes" xml:space="preserve">
          <source>A TensorFlow operator that prints the specified inputs to a desired output stream or logging level. The inputs may be dense or sparse Tensors, primitive python objects, data structures that contain tensors, and printable Python objects. Printed tensors will recursively show the first and last elements of each dimension to summarize.</source>
          <target state="translated">Un operador de TensorFlow que imprime las entradas especificadas a un flujo de salida o nivel de registro deseado.Las entradas pueden ser Tensores densos o escasos,objetos primitivos de pitón,estructuras de datos que contienen tensores y objetos de pitón imprimibles.Los tensores impresos mostrarán recursivamente el primer y el último elemento de cada dimensión para resumir.</target>
        </trans-unit>
        <trans-unit id="1594bd9d6d13cc0a104901eddeaeb37540ce79fc" translate="yes" xml:space="preserve">
          <source>A TensorFlow session object which will execute the &lt;code&gt;run&lt;/code&gt;.</source>
          <target state="translated">Un objeto de sesi&amp;oacute;n de TensorFlow que ejecutar&amp;aacute; la &lt;code&gt;run&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d694cfe113a1fcb6e2641a5d3ef3aac1162b1d1d" translate="yes" xml:space="preserve">
          <source>A TensorFlow session that contains the graph to convert.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aead9ef0dc90819973aa9aafdfd9e1bdaa57b8df" translate="yes" xml:space="preserve">
          <source>A TensorFlow session.</source>
          <target state="translated">Una sesión de TensorFlow.</target>
        </trans-unit>
        <trans-unit id="5900b6f0518b5b9262bcd3d33a9dc58e5afce899" translate="yes" xml:space="preserve">
          <source>A TensorFlow tensor that should be considered an argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="364010b34b09cc2c3ffc0c58ec11586ee0a4aed1" translate="yes" xml:space="preserve">
          <source>A TensorFlow tensor, or a list of tensors (in case the model has multiple inputs).</source>
          <target state="translated">Un tensor TensorFlow,o una lista de tensores (en caso de que el modelo tenga múltiples entradas).</target>
        </trans-unit>
        <trans-unit id="1e4a2d59f135f7c1053fb1710898338bc29f038e" translate="yes" xml:space="preserve">
          <source>A TensorInfo proto describing a Tensor or SparseTensor or CompositeTensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3679db23734b5186eab5af91d379675282edd410" translate="yes" xml:space="preserve">
          <source>A TensorInfo protocol buffer constructed based on the supplied argument.</source>
          <target state="translated">Un buffer de protocolo TensorInfo construido en base al argumento suministrado.</target>
        </trans-unit>
        <trans-unit id="b950ccea453213177bc1792cbc2cfe9e5ce690ee" translate="yes" xml:space="preserve">
          <source>A TensorProto.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ef8ea916dea98af6aeccdefbe3477b98df62e54" translate="yes" xml:space="preserve">
          <source>A TensorShape instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="048b6c46ddc8c2e237772b68c7d1b446a95fb57a" translate="yes" xml:space="preserve">
          <source>A TensorShape. If set, initial_value is expected to have this shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a1ca3a11ac93daae733408f4ddb280bf3e58ee1" translate="yes" xml:space="preserve">
          <source>A TensorSummary op that is configured so that TensorBoard will recognize that it contains textual data. The TensorSummary is a scalar &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;string&lt;/code&gt; which contains &lt;code&gt;Summary&lt;/code&gt; protobufs.</source>
          <target state="translated">Una operaci&amp;oacute;n TensorSummary que est&amp;aacute; configurada para que TensorBoard reconozca que contiene datos textuales. TensorSummary es un &lt;code&gt;Tensor&lt;/code&gt; escalar de tipo &lt;code&gt;string&lt;/code&gt; que contiene protobufs de &lt;code&gt;Summary&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="30b9e0738af0d54bdc10503dd448ff170dcc26e3" translate="yes" xml:space="preserve">
          <source>A Tensorflow eager tensor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c7d2b91c15cd5daf2a2a7bfdfa74c9069be9e89" translate="yes" xml:space="preserve">
          <source>A TruncatedNormal instance.</source>
          <target state="translated">Una instancia TruncadaNormal.</target>
        </trans-unit>
        <trans-unit id="f9f446c48127ad4053d72d30dde26dad290085a8" translate="yes" xml:space="preserve">
          <source>A URL template that points to the location of the discovery service. It should have two parameters {api} and {apiVersion} that when filled in produce an absolute URL to the discovery document for that service. The environment variable 'TPU_API_DISCOVERY_URL' will override this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9daadda7f2d6f8beda0f35ed7b2e8982aefe5b6" translate="yes" xml:space="preserve">
          <source>A UTF-8 string tensor value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d53c7e6329477f2f5310eb688dada5eb36fbdd6" translate="yes" xml:space="preserve">
          <source>A Variable, the moving average.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b9ad8682257dcbdc7a6f86f2301e0122fef6a46" translate="yes" xml:space="preserve">
          <source>A Variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31c2d6814c1f1850ef53168adc31a64345f5f10e" translate="yes" xml:space="preserve">
          <source>A Variable. Must be one of the following types: &lt;code&gt;int32&lt;/code&gt;, &lt;code&gt;int64&lt;/code&gt;. Should be from a scalar &lt;code&gt;Variable&lt;/code&gt; node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="977977719785b866d1dec5d43751a215c06902ae" translate="yes" xml:space="preserve">
          <source>A YAML string.</source>
          <target state="translated">Una cuerda YAML.</target>
        </trans-unit>
        <trans-unit id="c4e06c50e6cd589bcb9762f37f8654b38cc57bb3" translate="yes" xml:space="preserve">
          <source>A [..., frames, frame_length] &lt;code&gt;Tensor&lt;/code&gt;. All dimensions may be unknown, and rank must be at least 2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a93f7e494beb037cc67e0a1d3d7c0cf6ef41923f" translate="yes" xml:space="preserve">
          <source>A [&lt;code&gt;RunMetadata&lt;/code&gt;] protocol buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d138c3a5061fd14c0b7eb0a8c7bbf3e5423a618a" translate="yes" xml:space="preserve">
          <source>A [&lt;code&gt;RunOptions&lt;/code&gt;] protocol buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b2df35d9bae03c8e6ce12f85a69c588cc8ae8f9" translate="yes" xml:space="preserve">
          <source>A _TempDir representing the created directory.</source>
          <target state="translated">Un _TempDir que representa el directorio creado.</target>
        </trans-unit>
        <trans-unit id="d32d6f699e880bcc2e45a0b6ad69431bae2cfeee" translate="yes" xml:space="preserve">
          <source>A _TempDir representing the created directory; see _TempDir class docs for usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="691ac6269b7b61fc3f083f9e7770ae0843ae2d07" translate="yes" xml:space="preserve">
          <source>A _TempFile representing the created file.</source>
          <target state="translated">Un _TempFile que representa el archivo creado.</target>
        </trans-unit>
        <trans-unit id="ad5e1a418319ce46edcea415c8fd3ad6b4884ad5" translate="yes" xml:space="preserve">
          <source>A _TempFile representing the created file; see _TempFile class docs for usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15ee50b7b45afb2df151c2bc2bf43a4ecb0e0c2e" translate="yes" xml:space="preserve">
          <source>A backwards compatibility alias for &lt;code&gt;on_train_batch_begin&lt;/code&gt;.</source>
          <target state="translated">Un alias de compatibilidad con versiones anteriores para &lt;code&gt;on_train_batch_begin&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="04729c5e9af93fcf1e897aac870e74eb4cd6bb2e" translate="yes" xml:space="preserve">
          <source>A backwards compatibility alias for &lt;code&gt;on_train_batch_end&lt;/code&gt;.</source>
          <target state="translated">Un alias de compatibilidad con versiones anteriores para &lt;code&gt;on_train_batch_end&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ee418346f85c87994045ecb187211c7a074a13af" translate="yes" xml:space="preserve">
          <source>A barrier represents a key-value map, where each key is a string, and each value is a tuple of tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ab1452e64e2c1cc42a16a4073283d0ab9ac85b0" translate="yes" xml:space="preserve">
          <source>A batch</source>
          <target state="translated">Un lote</target>
        </trans-unit>
        <trans-unit id="a7e1f1fe2be35b376d9eb19bb7be0caa9c0dd6f6" translate="yes" xml:space="preserve">
          <source>A batch matrix multiplication with batch shape [2]</source>
          <target state="translated">Una multiplicación de matriz de lotes con forma de lote [2]</target>
        </trans-unit>
        <trans-unit id="df9e8e877261a04469d13a259b0abdaf991c6c4d" translate="yes" xml:space="preserve">
          <source>A batch matrix multiplication with batch shape [2]:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a45588515e88b963399ba84214159eb226501f9" translate="yes" xml:space="preserve">
          <source>A batch-normalized &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">Una &lt;code&gt;t&lt;/code&gt; normalizada por lotes .</target>
        </trans-unit>
        <trans-unit id="2be83e7e1d37a222c7a8afec928fac5a4178b92e" translate="yes" xml:space="preserve">
          <source>A better pattern is to write a subclassed Layer:</source>
          <target state="translated">Un mejor patrón es escribir una capa subclasificada:</target>
        </trans-unit>
        <trans-unit id="f9806876e11f51b292683b94c8ac6c945f2d6964" translate="yes" xml:space="preserve">
          <source>A binary matrix representation of the input. The classes axis is placed last.</source>
          <target state="translated">Una representación de matriz binaria de la entrada.El eje de las clases se coloca en último lugar.</target>
        </trans-unit>
        <trans-unit id="9ac3a9c48c5a84f238a4300c02ea6b1922f7722a" translate="yes" xml:space="preserve">
          <source>A bool &lt;code&gt;Tensor&lt;/code&gt; indicating whether to generate a periodic or symmetric window. Periodic windows are typically used for spectral analysis while symmetric windows are typically used for digital filter design.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="351abc1897341fd1a45b1d8926cd88204e003770" translate="yes" xml:space="preserve">
          <source>A bool indicating whether TPU support is enabled. Currently, - TPU training and evaluation respect this bit, but eval_on_tpu can override execution of eval. See below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a00b50c2840c63e1ce451cfea03268b617c5d11e" translate="yes" xml:space="preserve">
          <source>A bool indicating whether the resulted tensor needs to be multiplied with gamma.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27fe44b65a33487656aeb6fe2e5334caf90bbf96" translate="yes" xml:space="preserve">
          <source>A bool tensor.</source>
          <target state="translated">Un tensor de bolea.</target>
        </trans-unit>
        <trans-unit id="a9375ad7c9ade647cd3c31949286c88a0f4af4a2" translate="yes" xml:space="preserve">
          <source>A bool that indicates whether the first rows of provided CSV files correspond to header lines with column names, and should not be included in the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10d3390358b1e235f76507019828ba753715272f" translate="yes" xml:space="preserve">
          <source>A bool that indicates whether the input should be shuffled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00aaee7a95582fed8ac0bca9874a15604ec9ea2b" translate="yes" xml:space="preserve">
          <source>A bool value to specify if the operation is used for training or inference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a141bf1f4a0f149646e98cc1f6bf78d1f78a5bb6" translate="yes" xml:space="preserve">
          <source>A bool vector of length &lt;code&gt;N&lt;/code&gt; indicating whether each input row was empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a0a241f018a43ae481116e91f420dd870ce655a" translate="yes" xml:space="preserve">
          <source>A bool vector of length &lt;code&gt;N&lt;/code&gt; with &lt;code&gt;M&lt;/code&gt; true values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc6ddc185f1410c0ebe034e0a5eb41dda2abcd18" translate="yes" xml:space="preserve">
          <source>A bool, true if a checkpoint referred to by &lt;code&gt;checkpoint_prefix&lt;/code&gt; exists.</source>
          <target state="translated">Un bool, verdadero si existe un punto de control al que hace referencia &lt;code&gt;checkpoint_prefix&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="41159c9e68b8ce7f3ddfe1c5f0a82341d3e73c31" translate="yes" xml:space="preserve">
          <source>A bool.</source>
          <target state="translated">Un bool.</target>
        </trans-unit>
        <trans-unit id="ad3c9c823e80e82f9410b3453d679c919d2974d5" translate="yes" xml:space="preserve">
          <source>A boolean controlling whether determinism should be traded for performance by allowing elements to be produced out of order. If &lt;code&gt;sloppy&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;, the &lt;a href=&quot;../options#experimental_deterministic&quot;&gt;&lt;code&gt;tf.data.Options.experimental_deterministic&lt;/code&gt;&lt;/a&gt; dataset option (&lt;code&gt;True&lt;/code&gt; by default) is used to decide whether to enforce a deterministic order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0dc522a92322328bb018b8190c14f8ceae3c1f1" translate="yes" xml:space="preserve">
          <source>A boolean indicating the memory growth setting for the &lt;code&gt;PhysicalDevice&lt;/code&gt;.</source>
          <target state="translated">Un valor booleano que indica la configuraci&amp;oacute;n de crecimiento de la memoria para &lt;code&gt;PhysicalDevice&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="82ccb55ea6eb7738da96f8ccabde7f7f8158f4f8" translate="yes" xml:space="preserve">
          <source>A boolean indicating whether or not to use the regularization losses in the sum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4386432cba35248dbba3713c1ae461fcea592c8" translate="yes" xml:space="preserve">
          <source>A boolean indicating whether to return the last output in the output sequence, or the full sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13049d02f02c475550e1dcd4d690c2e170c42809" translate="yes" xml:space="preserve">
          <source>A boolean indicating whether to return the last output in the output sequence, or the full sequence. Note that if True, &lt;code&gt;weight_column&lt;/code&gt; must be None or a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28ff4d8150ccbf40c3aec611eb1cbb6062f6c5fc" translate="yes" xml:space="preserve">
          <source>A boolean indicating whether to use adaptive sampling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfbddbfbd4b66874f6d27f68ea8998bbc2ebf61b" translate="yes" xml:space="preserve">
          <source>A boolean specifying whether the placeholder to be created is ragged. Only one of 'ragged' and 'sparse' can be True. In this case, values of 'None' in the 'shape' argument represent ragged dimensions. For more information about RaggedTensors, see &lt;a href=&quot;https://www.tensorflow.org/guide/ragged_tensors&quot;&gt;this guide&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="958a85d2064e44b1b7b17e7a7dc5e92b0a4ab4dd" translate="yes" xml:space="preserve">
          <source>A boolean specifying whether the placeholder to be created is sparse. Only one of 'ragged' and 'sparse' can be True. Note that, if &lt;code&gt;sparse&lt;/code&gt; is False, sparse tensors can still be passed into the input - they will be densified with a default value of 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51e5b5075a445e1cb56aedf28ec11e61776161ae" translate="yes" xml:space="preserve">
          <source>A boolean specifying whether to use the mini-batch k-means algorithm. See explanation above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="589645ed3df106215a733aaee5da7767803eef5f" translate="yes" xml:space="preserve">
          <source>A boolean that enables/disables 'strict' mode; see above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d20e167968b61f7fb0cfba68f66020ebbff769f" translate="yes" xml:space="preserve">
          <source>A boolean to specify whether the per-batch values in &lt;code&gt;sp_values&lt;/code&gt; are already sorted. If so skip sorting, False by default (optional).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b506de1c588e0cabc535ed197e394171984083f" translate="yes" xml:space="preserve">
          <source>A boolean value indicating whether this thread is a daemon thread.</source>
          <target state="translated">Un valor booleano que indica si este hilo es un hilo de demonio.</target>
        </trans-unit>
        <trans-unit id="ec3b56d1bc152e5d3052d5260af7e96836b86640" translate="yes" xml:space="preserve">
          <source>A boolean value to identify whether to create the model's weights under the scope of the CPU. If the model is not defined under any preceding device scope, you can still rescue it by activating this option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c170d8f6831365c2fc9a41471d6507f1467c2e7" translate="yes" xml:space="preserve">
          <source>A boolean value to identify whether to force merging model weights under the scope of the CPU or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bb88a5ba6a3bd4d977075c8a71265b90688224b" translate="yes" xml:space="preserve">
          <source>A boolean value. If &lt;code&gt;True&lt;/code&gt;, indices are checked to make sure they are sorted in lexicographic order and that there are no repeats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d830c910e6f460c5062cd61f4109510d30c1751a" translate="yes" xml:space="preserve">
          <source>A boolean value. If True, indices are checked to make sure they are sorted in lexicographic order and that there are no repeats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29220a4b9bdcf80f61b5b59f0e40930ecb03a366" translate="yes" xml:space="preserve">
          <source>A boolean, indicates whether the input should be shuffled. Defaults to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e520a100451a990f503fb2743fd75ab2b4b6e795" translate="yes" xml:space="preserve">
          <source>A boolean, whether or not it should cycle beyond decay_steps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="740510257e6eb83a51b510cc2f6180ccea5c80ba" translate="yes" xml:space="preserve">
          <source>A boolean, whether to keep the dimensions or not. If &lt;code&gt;keepdims&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;, the rank of the tensor is reduced by 1 for each entry in &lt;code&gt;axis&lt;/code&gt;. If &lt;code&gt;keepdims&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, the reduced dimensions are retained with length 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce1c57d320fd4d59c73afbfd6ee1e885bfc5aa35" translate="yes" xml:space="preserve">
          <source>A boolean, whether to keep the dimensions or not. If &lt;code&gt;keepdims&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;, the rank of the tensor is reduced by 1. If &lt;code&gt;keepdims&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;, the reduced dimension is retained with length 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddc315b6143ceee1f4125e512d36fc9ae3376b11" translate="yes" xml:space="preserve">
          <source>A boolean.</source>
          <target state="translated">Una booleana.</target>
        </trans-unit>
        <trans-unit id="f71651771f21527aff9ae31518ecb0a4328ce48a" translate="yes" xml:space="preserve">
          <source>A boolean: Whether the argument is a Keras tensor.</source>
          <target state="translated">Una booleana:Si el argumento es un tensor de Keras.</target>
        </trans-unit>
        <trans-unit id="1da98c4acc145d0ae880abd6ff6f80bbe78cb6b0" translate="yes" xml:space="preserve">
          <source>A brightness-adjusted tensor of the same shape and type as &lt;code&gt;image&lt;/code&gt;.</source>
          <target state="translated">Un tensor de brillo ajustado de la misma forma y tipo que la &lt;code&gt;image&lt;/code&gt; n .</target>
        </trans-unit>
        <trans-unit id="59cb2ae90b2c81c16bc6c867642f4af9c80fba34" translate="yes" xml:space="preserve">
          <source>A callable initializer taking one parameter, the shape of the variable that will be initialized. Will be called once per task, to initialize that task's shard of the embedding table. If not specified, defaults to &lt;code&gt;truncated_normal_initializer&lt;/code&gt; with mean &lt;code&gt;0.0&lt;/code&gt; and standard deviation &lt;code&gt;1/sqrt(dim)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0827d04808a24e89e0cc1a044bb9c3d14581b24a" translate="yes" xml:space="preserve">
          <source>A callable invoked for every &lt;code&gt;Operation&lt;/code&gt; that takes the &lt;code&gt;Operation&lt;/code&gt; and returns the device string. If &lt;code&gt;None&lt;/code&gt;, defaults to the device function returned by &lt;code&gt;tf.train.replica_device_setter&lt;/code&gt; with round-robin strategy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="511796c50c10f6835b34a65a74bb4dea0dba9c3b" translate="yes" xml:space="preserve">
          <source>A callable invoked for every ps &lt;code&gt;Operation&lt;/code&gt; (i.e. matched by &lt;code&gt;ps_ops&lt;/code&gt;), that takes the &lt;code&gt;Operation&lt;/code&gt; and returns the ps task index to use. If &lt;code&gt;None&lt;/code&gt;, defaults to a round-robin strategy across all &lt;code&gt;ps&lt;/code&gt; devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a5b457d5fb807a54dcbd062baa52cbd15729d2" translate="yes" xml:space="preserve">
          <source>A callable object that returns an object that supports the &lt;code&gt;iter()&lt;/code&gt; protocol. If &lt;code&gt;args&lt;/code&gt; is not specified, &lt;code&gt;generator&lt;/code&gt; must take no arguments; otherwise it must take as many arguments as there are values in &lt;code&gt;args&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ec05ab0838f9fa52a074b62d71b75565748513c" translate="yes" xml:space="preserve">
          <source>A callable object to be executed in the thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b78d383835f14de4c5b5aab3c99f407f4ebfe16" translate="yes" xml:space="preserve">
          <source>A callable object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47d8f43e8e9d4f7354d2e17264ebc38963c0fea6" translate="yes" xml:space="preserve">
          <source>A callable taking no arguments which returns the value to minimize.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dde52aaf17098cdb09abdbce0e7759787233d57" translate="yes" xml:space="preserve">
          <source>A callable that accepts as many arguments as there are structures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7068f1e0be2c3a4629298635fbcb5105ce019b11" translate="yes" xml:space="preserve">
          <source>A callable that represents the loop body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="241294f3fd186a1382b1626eb8ae18c0418903fd" translate="yes" xml:space="preserve">
          <source>A callable that represents the termination condition of the loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d8b87cc3f60adac67af29d30c8036f33dc36a15" translate="yes" xml:space="preserve">
          <source>A callable that takes a frame_length and a &lt;code&gt;dtype&lt;/code&gt; keyword argument and returns a &lt;code&gt;[frame_length]&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; of samples in the provided datatype. If set to &lt;code&gt;None&lt;/code&gt;, a rectangular window with a scale of 1/sqrt(2) is used. For perfect reconstruction of a signal from &lt;code&gt;mdct&lt;/code&gt; followed by &lt;code&gt;inverse_mdct&lt;/code&gt;, please use &lt;a href=&quot;vorbis_window&quot;&gt;&lt;code&gt;tf.signal.vorbis_window&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;kaiser_bessel_derived_window&quot;&gt;&lt;code&gt;tf.signal.kaiser_bessel_derived_window&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;None&lt;/code&gt;. If using another window function, make sure that w[n]^2 + w[n + frame_length // 2]^2 = 1 and w[n] = w[frame_length - n - 1] for n = 0,...,frame_length // 2 - 1 to achieve perfect reconstruction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a65ff30c9d119cbe5f899c71633425388641188" translate="yes" xml:space="preserve">
          <source>A callable that takes a window length and a &lt;code&gt;dtype&lt;/code&gt; keyword argument and returns a &lt;code&gt;[window_length]&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; of samples in the provided datatype. If set to &lt;code&gt;None&lt;/code&gt;, no windowing is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f62393fdc5cc93ef7302240f2b209433a2eac5" translate="yes" xml:space="preserve">
          <source>A callable that takes a window length and a &lt;code&gt;dtype&lt;/code&gt; keyword argument and returns a &lt;code&gt;[window_length]&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; of samples in the provided datatype. The returned window is suitable for reconstructing original waveform in inverse_stft.</source>
          <target state="translated">Un invocable que toma una longitud de ventana y un argumento de palabra clave &lt;code&gt;dtype&lt;/code&gt; y devuelve un &lt;code&gt;Tensor&lt;/code&gt; &lt;code&gt;[window_length]&lt;/code&gt; de muestras en el tipo de datos proporcionado. La ventana devuelta es adecuada para reconstruir la forma de onda original en inverse_stft.</target>
        </trans-unit>
        <trans-unit id="955a99f5625b136fbb052ab99b7c45cc18da0810" translate="yes" xml:space="preserve">
          <source>A callable that takes inputs &lt;code&gt;(time, cell_output, cell_state, loop_state)&lt;/code&gt; and returns the tuple &lt;code&gt;(finished, next_input, next_cell_state, emit_output, next_loop_state)&lt;/code&gt;. Here &lt;code&gt;time&lt;/code&gt; is an int32 scalar &lt;code&gt;Tensor&lt;/code&gt;, &lt;code&gt;cell_output&lt;/code&gt; is a &lt;code&gt;Tensor&lt;/code&gt; or (possibly nested) tuple of tensors as determined by &lt;code&gt;cell.output_size&lt;/code&gt;, and &lt;code&gt;cell_state&lt;/code&gt; is a &lt;code&gt;Tensor&lt;/code&gt; or (possibly nested) tuple of tensors, as determined by the &lt;code&gt;loop_fn&lt;/code&gt; on its first call (and should match &lt;code&gt;cell.state_size&lt;/code&gt;). The outputs are: &lt;code&gt;finished&lt;/code&gt;, a boolean &lt;code&gt;Tensor&lt;/code&gt; of shape &lt;code&gt;[batch_size]&lt;/code&gt;, &lt;code&gt;next_input&lt;/code&gt;: the next input to feed to &lt;code&gt;cell&lt;/code&gt;, &lt;code&gt;next_cell_state&lt;/code&gt;: the next state to feed to &lt;code&gt;cell&lt;/code&gt;, and &lt;code&gt;emit_output&lt;/code&gt;: the output to store for this iteration. Note that &lt;code&gt;emit_output&lt;/code&gt; should be a &lt;code&gt;Tensor&lt;/code&gt; or (possibly nested) tuple of tensors which is aggregated in the &lt;code&gt;emit_ta&lt;/code&gt; inside the &lt;code&gt;while_loop&lt;/code&gt;. For the first call to &lt;code&gt;loop_fn&lt;/code&gt;, the &lt;code&gt;emit_output&lt;/code&gt; corresponds to the &lt;code&gt;emit_structure&lt;/code&gt; which is then used to determine the size of the &lt;code&gt;zero_tensor&lt;/code&gt; for the &lt;code&gt;emit_ta&lt;/code&gt; (defaults to &lt;code&gt;cell.output_size&lt;/code&gt;). For the subsequent calls to the &lt;code&gt;loop_fn&lt;/code&gt;, the &lt;code&gt;emit_output&lt;/code&gt; corresponds to the actual output tensor that is to be aggregated in the &lt;code&gt;emit_ta&lt;/code&gt;. The parameter &lt;code&gt;cell_state&lt;/code&gt; and output &lt;code&gt;next_cell_state&lt;/code&gt; may be either a single or (possibly nested) tuple of tensors. The parameter &lt;code&gt;loop_state&lt;/code&gt; and output &lt;code&gt;next_loop_state&lt;/code&gt; may be either a single or (possibly nested) tuple of &lt;code&gt;Tensor&lt;/code&gt; and &lt;code&gt;TensorArray&lt;/code&gt; objects. This last parameter may be ignored by &lt;code&gt;loop_fn&lt;/code&gt; and the return value may be &lt;code&gt;None&lt;/code&gt;. If it is not &lt;code&gt;None&lt;/code&gt;, then the &lt;code&gt;loop_state&lt;/code&gt; will be propagated through the RNN loop, for use purely by &lt;code&gt;loop_fn&lt;/code&gt; to keep track of its own state. The &lt;code&gt;next_loop_state&lt;/code&gt; parameter returned may be &lt;code&gt;None&lt;/code&gt;. The first call to &lt;code&gt;loop_fn&lt;/code&gt; will be &lt;code&gt;time = 0&lt;/code&gt;, &lt;code&gt;cell_output = None&lt;/code&gt;, &lt;code&gt;cell_state = None&lt;/code&gt;, and &lt;code&gt;loop_state = None&lt;/code&gt;. For this call: The &lt;code&gt;next_cell_state&lt;/code&gt; value should be the value with which to initialize the cell's state. It may be a final state from a previous RNN or it may be the output of &lt;code&gt;cell.zero_state()&lt;/code&gt;. It should be a (possibly nested) tuple structure of tensors. If &lt;code&gt;cell.state_size&lt;/code&gt; is an integer, this must be a &lt;code&gt;Tensor&lt;/code&gt; of appropriate type and shape &lt;code&gt;[batch_size, cell.state_size]&lt;/code&gt;. If &lt;code&gt;cell.state_size&lt;/code&gt; is a &lt;code&gt;TensorShape&lt;/code&gt;, this must be a &lt;code&gt;Tensor&lt;/code&gt; of appropriate type and shape &lt;code&gt;[batch_size] + cell.state_size&lt;/code&gt;. If &lt;code&gt;cell.state_size&lt;/code&gt; is a (possibly nested) tuple of ints or &lt;code&gt;TensorShape&lt;/code&gt;, this will be a tuple having the corresponding shapes. The &lt;code&gt;emit_output&lt;/code&gt; value may be either &lt;code&gt;None&lt;/code&gt; or a (possibly nested) tuple structure of tensors, e.g., &lt;code&gt;(tf.zeros(shape_0, dtype=dtype_0), tf.zeros(shape_1, dtype=dtype_1))&lt;/code&gt;. If this first &lt;code&gt;emit_output&lt;/code&gt; return value is &lt;code&gt;None&lt;/code&gt;, then the &lt;code&gt;emit_ta&lt;/code&gt; result of &lt;code&gt;raw_rnn&lt;/code&gt; will have the same structure and dtypes as &lt;code&gt;cell.output_size&lt;/code&gt;. Otherwise &lt;code&gt;emit_ta&lt;/code&gt; will have the same structure, shapes (prepended with a &lt;code&gt;batch_size&lt;/code&gt; dimension), and dtypes as &lt;code&gt;emit_output&lt;/code&gt;. The actual values returned for &lt;code&gt;emit_output&lt;/code&gt; at this initializing call are ignored. Note, this emit structure must be consistent across all time steps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43e55c9b23ff6deccfa84028c824b31948fd8320" translate="yes" xml:space="preserve">
          <source>A candidate tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05bf7a6375a79499f7dbaa78510f85e3d2379a2c" translate="yes" xml:space="preserve">
          <source>A categorical column returned from &lt;code&gt;categorical_column_with_identity&lt;/code&gt;, &lt;code&gt;weighted_categorical_column&lt;/code&gt;, &lt;code&gt;categorical_column_with_vocabulary_file&lt;/code&gt;, &lt;code&gt;categorical_column_with_vocabulary_list&lt;/code&gt;, &lt;code&gt;sequence_categorical_column_with_identity&lt;/code&gt;, &lt;code&gt;sequence_categorical_column_with_vocabulary_file&lt;/code&gt;, &lt;code&gt;sequence_categorical_column_with_vocabulary_list&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f1b7d58e37c67207d9e06804e550b7d0194e7ed" translate="yes" xml:space="preserve">
          <source>A checkpoint is saved at the end of each epoch, when restoring we'll redo any partial work from an unfinished epoch in which the training got restarted (so the work done before a interruption doesn't affect the final model state).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6aa3e42f41911005aa5bf210054ed48c4f79b16" translate="yes" xml:space="preserve">
          <source>A class for running TensorFlow operations.</source>
          <target state="translated">Una clase para dirigir las operaciones de TensorFlow.</target>
        </trans-unit>
        <trans-unit id="dd7db751b32ea5a194f50e5a0342a10aeededd43" translate="yes" xml:space="preserve">
          <source>A class listing aggregation methods used to combine gradients.</source>
          <target state="translated">Una clase que enumera los métodos de agregación utilizados para combinar los gradientes.</target>
        </trans-unit>
        <trans-unit id="20b27745ee0f3d3d5ce4ab6c7f0815270adbcdea" translate="yes" xml:space="preserve">
          <source>A class producing a RNN cell or a string specifying the cell type. Supported strings are: &lt;code&gt;'simple_rnn'&lt;/code&gt;, &lt;code&gt;'lstm'&lt;/code&gt;, and &lt;code&gt;'gru'&lt;/code&gt;. If set, &lt;code&gt;units&lt;/code&gt; must also be specified and &lt;code&gt;rnn_cell_fn&lt;/code&gt; must be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce0a67b1ffe64d86da6567a429eeae9db59a1b39" translate="yes" xml:space="preserve">
          <source>A class representing a type of model export.</source>
          <target state="translated">Una clase que representa un tipo de exportación de modelos.</target>
        </trans-unit>
        <trans-unit id="88aa1fd81fdf479c63942dab3f5ca54528b4857f" translate="yes" xml:space="preserve">
          <source>A class that helps build tflite function invocations.</source>
          <target state="translated">Una clase que ayuda a construir invocaciones de la función de tflite.</target>
        </trans-unit>
        <trans-unit id="07b7afa7c2ecf1dfb89a75a06e646c03e33152cc" translate="yes" xml:space="preserve">
          <source>A class to write records to a TFRecords file.</source>
          <target state="translated">Una clase para escribir registros en un archivo TFRecords.</target>
        </trans-unit>
        <trans-unit id="a2a32f870fe488e7cf07483bbaedca078301f589" translate="yes" xml:space="preserve">
          <source>A class wrapping information needed by a distribute function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f760d17168acba01dbcec069a5ddd0f4aaf8aba4" translate="yes" xml:space="preserve">
          <source>A class wrapping information needed by an input function.</source>
          <target state="translated">Una clase que envuelve la información necesaria para una función de entrada.</target>
        </trans-unit>
        <trans-unit id="91c4702dfe7559c263bfa86b0749263ff7bdf6e1" translate="yes" xml:space="preserve">
          <source>A classification-flavored signature_def.</source>
          <target state="translated">Una firma con sabor a clasificación_def.</target>
        </trans-unit>
        <trans-unit id="9ad748de3c610d3060510b5a00ac2625bb63a0ab" translate="yes" xml:space="preserve">
          <source>A classifier for TensorFlow DNN models.</source>
          <target state="translated">Un clasificador para los modelos TensorFlow DNN.</target>
        </trans-unit>
        <trans-unit id="261aa0c35dfbce80bb56b8b9ce8914ded76d1112" translate="yes" xml:space="preserve">
          <source>A classifier for TensorFlow RNN models.</source>
          <target state="translated">Un clasificador para los modelos RNN de TensorFlow.</target>
        </trans-unit>
        <trans-unit id="2992929de1d6308134d8d3e29a9f65651187513f" translate="yes" xml:space="preserve">
          <source>A classifier that can establish a simple baseline.</source>
          <target state="translated">Un clasificador que puede establecer una línea de base simple.</target>
        </trans-unit>
        <trans-unit id="4f62f9cb036bd2a2005b6c7b967bc9f0ffc7890a" translate="yes" xml:space="preserve">
          <source>A clipped &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;IndexedSlices&lt;/code&gt;.</source>
          <target state="translated">Un &lt;code&gt;Tensor&lt;/code&gt; recortado o &lt;code&gt;IndexedSlices&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c1227e77381ced0b1cb45754c29847e153f14010" translate="yes" xml:space="preserve">
          <source>A clipped &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="translated">Un &lt;code&gt;Tensor&lt;/code&gt; recortado .</target>
        </trans-unit>
        <trans-unit id="a3e8909bcd23c097201f21b6e7a872b1f8a1e37a" translate="yes" xml:space="preserve">
          <source>A coefficient to use on the positive examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7a99efa2a587450c22a79e0cb58712c9a22c418" translate="yes" xml:space="preserve">
          <source>A common use case is to have logits and labels of shape &lt;code&gt;[batch_size, num_classes]&lt;/code&gt;, but higher dimensions are supported, with the &lt;code&gt;axis&lt;/code&gt; argument specifying the class dimension.</source>
          <target state="translated">Un caso de uso com&amp;uacute;n es tener logits y etiquetas de forma &lt;code&gt;[batch_size, num_classes]&lt;/code&gt; , pero se admiten dimensiones m&amp;aacute;s altas, con el argumento del &lt;code&gt;axis&lt;/code&gt; que especifica la dimensi&amp;oacute;n de la clase.</target>
        </trans-unit>
        <trans-unit id="745ec3e4b90246cea30ca92a03a7efc38651bdef" translate="yes" xml:space="preserve">
          <source>A common use case is to have logits and labels of shape &lt;code&gt;[batch_size, num_classes]&lt;/code&gt;, but higher dimensions are supported, with the &lt;code&gt;dim&lt;/code&gt; argument specifying the class dimension.</source>
          <target state="translated">Un caso de uso com&amp;uacute;n es tener logits y etiquetas de forma &lt;code&gt;[batch_size, num_classes]&lt;/code&gt; , pero se admiten dimensiones m&amp;aacute;s altas, con el argumento &lt;code&gt;dim&lt;/code&gt; que especifica la dimensi&amp;oacute;n de la clase.</target>
        </trans-unit>
        <trans-unit id="b714be46ac6a8a8a2ff0364c1069e5acde0accf2" translate="yes" xml:space="preserve">
          <source>A common use case is to have logits of shape &lt;code&gt;[batch_size, num_classes]&lt;/code&gt; and have labels of shape &lt;code&gt;[batch_size]&lt;/code&gt;, but higher dimensions are supported, in which case the &lt;code&gt;dim&lt;/code&gt;-th dimension is assumed to be of size &lt;code&gt;num_classes&lt;/code&gt;. &lt;code&gt;logits&lt;/code&gt; must have the dtype of &lt;code&gt;float16&lt;/code&gt;, &lt;code&gt;float32&lt;/code&gt;, or &lt;code&gt;float64&lt;/code&gt;, and &lt;code&gt;labels&lt;/code&gt; must have the dtype of &lt;code&gt;int32&lt;/code&gt; or &lt;code&gt;int64&lt;/code&gt;.</source>
          <target state="translated">Un caso de uso com&amp;uacute;n es tener logits de forma &lt;code&gt;[batch_size, num_classes]&lt;/code&gt; y tener etiquetas de forma &lt;code&gt;[batch_size]&lt;/code&gt; , pero se admiten dimensiones m&amp;aacute;s altas, en cuyo caso se supone que la dimensi&amp;oacute;n &lt;code&gt;dim&lt;/code&gt; &lt;code&gt;num_classes&lt;/code&gt; es de tama&amp;ntilde;o num_classes . &lt;code&gt;logits&lt;/code&gt; debe tener el tipo d de &lt;code&gt;float16&lt;/code&gt; , &lt;code&gt;float32&lt;/code&gt; o &lt;code&gt;float64&lt;/code&gt; , y las &lt;code&gt;labels&lt;/code&gt; deben tener el tipo d de &lt;code&gt;int32&lt;/code&gt; o &lt;code&gt;int64&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="17a54abe1532a2aa10f0265eff21904848ffc181" translate="yes" xml:space="preserve">
          <source>A common use case is to use this method for training, and calculate the full sigmoid loss for evaluation or inference as in the following example:</source>
          <target state="translated">Un caso de uso común es utilizar este método para la capacitación,y calcular la pérdida completa de sigmoides para la evaluación o la inferencia como en el siguiente ejemplo:</target>
        </trans-unit>
        <trans-unit id="d84fcdd435c0ceafea7aca9606f8d12a4a4cdcd1" translate="yes" xml:space="preserve">
          <source>A common use case is to use this method for training, and calculate the full sigmoid loss for evaluation or inference. In this case, you must set &lt;code&gt;partition_strategy=&quot;div&quot;&lt;/code&gt; for the two losses to be consistent, as in the following example:</source>
          <target state="translated">Un caso de uso com&amp;uacute;n es utilizar este m&amp;eacute;todo para el entrenamiento y calcular la p&amp;eacute;rdida sigmoidea completa para evaluaci&amp;oacute;n o inferencia. En este caso, debe establecer &lt;code&gt;partition_strategy=&quot;div&quot;&lt;/code&gt; para que las dos p&amp;eacute;rdidas sean consistentes, como en el siguiente ejemplo:</target>
        </trans-unit>
        <trans-unit id="66619a001d5c6563910daa113272c36ed36f44ef" translate="yes" xml:space="preserve">
          <source>A common use case is to use this method for training, and calculate the full softmax loss for evaluation or inference. In this case, you must set &lt;code&gt;partition_strategy=&quot;div&quot;&lt;/code&gt; for the two losses to be consistent, as in the following example:</source>
          <target state="translated">Un caso de uso com&amp;uacute;n es utilizar este m&amp;eacute;todo para el entrenamiento y calcular la p&amp;eacute;rdida de softmax completa para evaluaci&amp;oacute;n o inferencia. En este caso, debe establecer &lt;code&gt;partition_strategy=&quot;div&quot;&lt;/code&gt; para que las dos p&amp;eacute;rdidas sean consistentes, como en el siguiente ejemplo:</target>
        </trans-unit>
        <trans-unit id="fb1913574bafc898c8dd8f07fd2e075adb6263c7" translate="yes" xml:space="preserve">
          <source>A compiled Keras model object. This argument is mutually exclusive with &lt;code&gt;keras_model_path&lt;/code&gt;. Estimator's &lt;code&gt;model_fn&lt;/code&gt; uses the structure of the model to clone the model. Defaults to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca623bc9636f5c8dd3518ece8f1516ee6835d3a" translate="yes" xml:space="preserve">
          <source>A conditional accumulator for aggregating gradients.</source>
          <target state="translated">Un acumulador condicional para agregar gradientes.</target>
        </trans-unit>
        <trans-unit id="c85c40c82ab0e0930c042c1e4f1c1df40fbbcf9c" translate="yes" xml:space="preserve">
          <source>A conditional accumulator for aggregating sparse gradients.</source>
          <target state="translated">Un acumulador condicional para la agregación de gradientes escasos.</target>
        </trans-unit>
        <trans-unit id="66b83457551dc18ef64a1d62692be12c64e8ccc2" translate="yes" xml:space="preserve">
          <source>A connection string for connecting to a TensorFlow master.</source>
          <target state="translated">Una cadena de conexión para conectar a un maestro de TensorFlow.</target>
        </trans-unit>
        <trans-unit id="7657fdfc7890c49f3fe960fc297d0353d4d9f62b" translate="yes" xml:space="preserve">
          <source>A constant value (or list)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f43b964d57f7648b6305036e632247ba6389d508" translate="yes" xml:space="preserve">
          <source>A constant value (or list) of output type &lt;code&gt;dtype&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7eef57133e56b59c03f6b036954a38596bf17db" translate="yes" xml:space="preserve">
          <source>A container for a multi device iterator resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfa49a493065e4bbc7821796f99043a0b062d6f7" translate="yes" xml:space="preserve">
          <source>A container for an iterator resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e86f35b335604829e5cffa92a981d2bba54e83b5" translate="yes" xml:space="preserve">
          <source>A container that &lt;code&gt;value&lt;/code&gt; belongs to. If value does not belong to any container (including the case of container having been destroyed), returns the value itself. &lt;code&gt;value in experimental_local_results(value_container(value))&lt;/code&gt; will always be true.</source>
          <target state="translated">Un contenedor al que pertenece ese &lt;code&gt;value&lt;/code&gt; . Si el valor no pertenece a ning&amp;uacute;n contenedor (incluido el caso de que el contenedor haya sido destruido), devuelve el valor en s&amp;iacute;. &lt;code&gt;value in experimental_local_results(value_container(value))&lt;/code&gt; siempre ser&amp;aacute; verdadero.</target>
        </trans-unit>
        <trans-unit id="3d82235a9e85115e542bbe142415ba0419f67a08" translate="yes" xml:space="preserve">
          <source>A context handler.</source>
          <target state="translated">Un manejador de contexto.</target>
        </trans-unit>
        <trans-unit id="d4a838cb616ff6ab6aa1d3d29ccc0057632a301d" translate="yes" xml:space="preserve">
          <source>A context manager for a TensorFlow Session for use in executing tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9852cffb1dcc42d7fff18a8d237c1cbd2236735" translate="yes" xml:space="preserve">
          <source>A context manager for defining ops that creates variables (layers).</source>
          <target state="translated">Un gestor de contexto para definir operaciones que crea variables (capas).</target>
        </trans-unit>
        <trans-unit id="bbd5ca91f3b9a62838cf08881ebbf2fcb9144daf" translate="yes" xml:space="preserve">
          <source>A context manager for defining resource containers for stateful ops, yields the container name.</source>
          <target state="translated">Un gestor de contexto para definir los contenedores de recursos para operaciones de estado,da el nombre del contenedor.</target>
        </trans-unit>
        <trans-unit id="91c81b8a8178f5b38809eb6e47437bf06c89023b" translate="yes" xml:space="preserve">
          <source>A context manager for use when defining a Python op.</source>
          <target state="translated">Un gestor de contexto para usar cuando se define una operación en Python.</target>
        </trans-unit>
        <trans-unit id="b7087e58a9594537e7cb1222c380bc11b0c96b87" translate="yes" xml:space="preserve">
          <source>A context manager for using this graph as the default graph.</source>
          <target state="translated">Un administrador de contexto para usar este gráfico como el gráfico predeterminado.</target>
        </trans-unit>
        <trans-unit id="5bdb09d5348e8e83907dce77c410f44edf200932" translate="yes" xml:space="preserve">
          <source>A context manager if callable_obj is None. Otherwise, None.</source>
          <target state="translated">Un gestor de contexto si callable_obj es None.De lo contrario,ninguno.</target>
        </trans-unit>
        <trans-unit id="e34d3e7e9b2ddf6dfb6479880b1181e387357389" translate="yes" xml:space="preserve">
          <source>A context manager that captures the writes to a given stream.</source>
          <target state="translated">Un gestor de contexto que captura los escritos a un flujo determinado.</target>
        </trans-unit>
        <trans-unit id="a78bd9e52b57d91f2edb5f898dc5cf96afc050aa" translate="yes" xml:space="preserve">
          <source>A context manager that installs &lt;code&gt;name&lt;/code&gt; as a new name scope.</source>
          <target state="translated">Un administrador de contexto que instala el &lt;code&gt;name&lt;/code&gt; como un nuevo &amp;aacute;mbito de nombre.</target>
        </trans-unit>
        <trans-unit id="639285bf40e54cadff2e0675799d3e66d132477c" translate="yes" xml:space="preserve">
          <source>A context manager that lifts ops out of control-flow scopes and function-building graphs.</source>
          <target state="translated">Un gestor de contexto que saca a las operaciones de los alcances del flujo de control y de los gráficos de construcción de funciones.</target>
        </trans-unit>
        <trans-unit id="c4774974eb93a66a34d555dca8e86682997e639f" translate="yes" xml:space="preserve">
          <source>A context manager that sets the alternative op type to be used for one or more ops created in that context.</source>
          <target state="translated">Un gestor de contexto que establece el tipo de operación alternativa que se utilizará para una o más operaciones creadas en ese contexto.</target>
        </trans-unit>
        <trans-unit id="b1ef6117b7bfb97ced3912761bf7241b7e35ba5c" translate="yes" xml:space="preserve">
          <source>A context manager that specifies control dependencies for all operations constructed within the context.</source>
          <target state="translated">Un gestor de contexto que especifica las dependencias de control para todas las operaciones construidas dentro del contexto.</target>
        </trans-unit>
        <trans-unit id="bda31a88d8651bd78766aaa5010e8f42e2874af8" translate="yes" xml:space="preserve">
          <source>A context manager that specifies the default container to use for newly created stateful ops.</source>
          <target state="translated">Un gestor de contexto que especifica el contenedor predeterminado a utilizar para las operaciones con estado recién creadas.</target>
        </trans-unit>
        <trans-unit id="dc0994fd78e99b89184ad93c0b619c51e5234c8e" translate="yes" xml:space="preserve">
          <source>A context manager that specifies the default device to use for newly created ops.</source>
          <target state="translated">Un administrador de contexto que especifica el dispositivo predeterminado a utilizar para las operaciones recién creadas.</target>
        </trans-unit>
        <trans-unit id="402101e0812f6a76014f1562131d1bc2d33e6575" translate="yes" xml:space="preserve">
          <source>A context manager that specifies the op with which to colocate newly created ops.</source>
          <target state="translated">Un gestor de contexto que especifica la operación con la que se colocan las operaciones recién creadas.</target>
        </trans-unit>
        <trans-unit id="c2a39ab7312ab8e85bf221992793db4a925c4752" translate="yes" xml:space="preserve">
          <source>A context manager that yields a &lt;code&gt;Session&lt;/code&gt; restored from the latest checkpoint or initialized from scratch if not checkpoint exists. The session is closed when the &lt;code&gt;with&lt;/code&gt; block exits.</source>
          <target state="translated">Un administrador de contexto que produce una &lt;code&gt;Session&lt;/code&gt; restaurada desde el &amp;uacute;ltimo punto de control o inicializada desde cero si no existe un punto de control. La sesi&amp;oacute;n se cierra cuando sale el bloque &lt;code&gt;with&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed91877941bf7aadcf5b12047f9dd8b3eb602b7f" translate="yes" xml:space="preserve">
          <source>A context manager to surround code that is expected to raise an exception.</source>
          <target state="translated">Un gestor de contexto para rodear el código que se espera que plantee una excepción.</target>
        </trans-unit>
        <trans-unit id="01bc1c6445a4f093049c83d76eba9b0a624e2b31" translate="yes" xml:space="preserve">
          <source>A context manager to use for creating variables with this strategy.</source>
          <target state="translated">Un gestor de contexto que se utiliza para crear variables con esta estrategia.</target>
        </trans-unit>
        <trans-unit id="aa22f8f8a4cf89d41789c86140f1dc81d28c61c6" translate="yes" xml:space="preserve">
          <source>A context manager using this session as the default session.</source>
          <target state="translated">Un gestor de contexto que utiliza esta sesión como la sesión predeterminada.</target>
        </trans-unit>
        <trans-unit id="94e33e5f01c3a1f37af1072b86a24e8f748cc5fb" translate="yes" xml:space="preserve">
          <source>A context manager.</source>
          <target state="translated">Un gestor de contexto.</target>
        </trans-unit>
        <trans-unit id="a6170fe4d4a65a132018c00a473c39f4d2f62c86" translate="yes" xml:space="preserve">
          <source>A coordinator for threads.</source>
          <target state="translated">Un coordinador para los hilos.</target>
        </trans-unit>
        <trans-unit id="7af36af6123a0d63f07a508e9481e527f29d8a74" translate="yes" xml:space="preserve">
          <source>A copy of this RaggedTensor, with the &lt;code&gt;row_splits&lt;/code&gt; cast to the given type.</source>
          <target state="translated">Una copia de este RaggedTensor, con &lt;code&gt;row_splits&lt;/code&gt; convertido al tipo dado.</target>
        </trans-unit>
        <trans-unit id="21eb7c372827943b538e944a360b047dae5d69c8" translate="yes" xml:space="preserve">
          <source>A copy of this tensor, with the specified dimensions merged into a single dimension. The shape of the returned tensor will be &lt;code&gt;self.shape[:outer_axis] + [N] + self.shape[inner_axis + 1:]&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt; is the total number of slices in the merged dimensions.</source>
          <target state="translated">Una copia de este tensor, con las dimensiones especificadas fusionadas en una sola dimensi&amp;oacute;n. La forma del tensor devuelto ser&amp;aacute; &lt;code&gt;self.shape[:outer_axis] + [N] + self.shape[inner_axis + 1:]&lt;/code&gt; , donde &lt;code&gt;N&lt;/code&gt; es el n&amp;uacute;mero total de cortes en las dimensiones fusionadas.</target>
        </trans-unit>
        <trans-unit id="976ab037117b559e47253b9a3b4c660024303c05" translate="yes" xml:space="preserve">
          <source>A cropped tensor of the same rank as &lt;code&gt;value&lt;/code&gt; and shape &lt;code&gt;size&lt;/code&gt;.</source>
          <target state="translated">Un tensor recortado del mismo rango que el &lt;code&gt;value&lt;/code&gt; y el &lt;code&gt;size&lt;/code&gt; forma .</target>
        </trans-unit>
        <trans-unit id="a9209b49599b8e5f7e4136e246a2beb132366070" translate="yes" xml:space="preserve">
          <source>A custom training loop can be as simple as:</source>
          <target state="translated">Un bucle de entrenamiento personalizado puede ser tan simple como:</target>
        </trans-unit>
        <trans-unit id="99f0a3d85b3441c2a638c2ff2150468024a9eaff" translate="yes" xml:space="preserve">
          <source>A dataset element corresponding to the final state of the transformation.</source>
          <target state="translated">Un elemento del conjunto de datos que corresponde al estado final de la transformación.</target>
        </trans-unit>
        <trans-unit id="13b0bcca62f1d6f54164e5fc795fcef6332cc90e" translate="yes" xml:space="preserve">
          <source>A dataset element, with each component having the same size in the first dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="266522427df122ab32c186b50b394effd311051b" translate="yes" xml:space="preserve">
          <source>A dataset element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e2c36340ae147936505ffaaee629586331584f0" translate="yes" xml:space="preserve">
          <source>A dataset of &lt;code&gt;dict&lt;/code&gt; elements, (or a tuple of &lt;code&gt;dict&lt;/code&gt; elements and label). Each &lt;code&gt;dict&lt;/code&gt; maps feature keys to &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;SparseTensor&lt;/code&gt; objects.</source>
          <target state="translated">Un conjunto de datos de elementos &lt;code&gt;dict&lt;/code&gt; (o una tupla de elementos &lt;code&gt;dict&lt;/code&gt; y etiqueta). Cada mapa de &lt;code&gt;dict&lt;/code&gt; presenta claves para objetos &lt;code&gt;Tensor&lt;/code&gt; o &lt;code&gt;SparseTensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="395439d2983bbc6cf8aed49ab17a11eccf5312b7" translate="yes" xml:space="preserve">
          <source>A dataset of all files matching one or more glob patterns.</source>
          <target state="translated">Un conjunto de datos de todos los archivos que coinciden con uno o más patrones globales.</target>
        </trans-unit>
        <trans-unit id="da5ecea6c957f02f88f7b93afaefbd06391036ec" translate="yes" xml:space="preserve">
          <source>A dataset that interleaves elements from &lt;code&gt;datasets&lt;/code&gt; according to the values of &lt;code&gt;choice_dataset&lt;/code&gt;.</source>
          <target state="translated">Un conjunto de datos que intercala elementos de &lt;code&gt;datasets&lt;/code&gt; de datos de acuerdo con los valores de &lt;code&gt;choice_dataset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c493146bc6a7491b040ee74460130599f07bafa2" translate="yes" xml:space="preserve">
          <source>A dataset that interleaves elements from &lt;code&gt;datasets&lt;/code&gt; at random, according to &lt;code&gt;weights&lt;/code&gt; if provided, otherwise with uniform probability.</source>
          <target state="translated">Un conjunto de datos que entrelaza elementos de &lt;code&gt;datasets&lt;/code&gt; de datos de forma aleatoria, de acuerdo con los &lt;code&gt;weights&lt;/code&gt; si se proporciona, de lo contrario con probabilidad uniforme.</target>
        </trans-unit>
        <trans-unit id="05b9596c13c8f288824d49cdef2b2d20b03b9ca0" translate="yes" xml:space="preserve">
          <source>A dataset that splits the elements of its input into multiple elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e121559c9a3d4901e475211ef8929d942769a0b" translate="yes" xml:space="preserve">
          <source>A dataset transformation function, which can be passed to &lt;a href=&quot;../dataset#apply&quot;&gt;&lt;code&gt;tf.data.Dataset.apply&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Una funci&amp;oacute;n de transformaci&amp;oacute;n de conjunto de datos, que se puede pasar a &lt;a href=&quot;../dataset#apply&quot;&gt; &lt;code&gt;tf.data.Dataset.apply&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d28c8b56200b2d990ff3d1f21b4cb34527461abc" translate="yes" xml:space="preserve">
          <source>A dataset, where each element is a (features, labels) tuple that corresponds to a batch of &lt;code&gt;batch_size&lt;/code&gt; CSV rows. The features dictionary maps feature column names to &lt;code&gt;Tensor&lt;/code&gt;s containing the corresponding column data, and labels is a &lt;code&gt;Tensor&lt;/code&gt; containing the column data for the label column specified by &lt;code&gt;label_name&lt;/code&gt;.</source>
          <target state="translated">Un conjunto de datos, donde cada elemento es una tupla (caracter&amp;iacute;sticas, etiquetas) que corresponde a un lote de filas CSV de &lt;code&gt;batch_size&lt;/code&gt; de lote . El diccionario de caracter&amp;iacute;sticas asigna los nombres de las columnas de caracter&amp;iacute;sticas a los &lt;code&gt;Tensor&lt;/code&gt; contienen los datos de la columna correspondiente, y las etiquetas es un &lt;code&gt;Tensor&lt;/code&gt; contiene los datos de la columna de la etiqueta especificada por &lt;code&gt;label_name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da314237d030ce4cfead421ea95ee3b90242e4f4" translate="yes" xml:space="preserve">
          <source>A day (1 &amp;lt;= day &amp;lt;= 31, or 30, or 29, or 28) in month. Must be an &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bfb886fc92a675776a6a70ead1bdcbbd0ca9de0" translate="yes" xml:space="preserve">
          <source>A decorator for registering the gradient function for an op type.</source>
          <target state="translated">Un decorador para registrar la función de gradiente para un tipo de operación.</target>
        </trans-unit>
        <trans-unit id="5d35416ed653ab700e446a23c0136e699a85d461" translate="yes" xml:space="preserve">
          <source>A decorator that registers the decorated class with the passed names.</source>
          <target state="translated">Un decorador que registra la clase condecorada con los nombres pasados.</target>
        </trans-unit>
        <trans-unit id="53518d75c37cf9c77240a105d69677975bc88905" translate="yes" xml:space="preserve">
          <source>A default graph can be registered with the &lt;a href=&quot;graph#as_default&quot;&gt;&lt;code&gt;tf.Graph.as_default&lt;/code&gt;&lt;/a&gt; context manager. Then, operations will be added to the graph instead of being executed eagerly. For example:</source>
          <target state="translated">Se puede registrar un gr&amp;aacute;fico predeterminado con el &lt;a href=&quot;graph#as_default&quot;&gt; &lt;code&gt;tf.Graph.as_default&lt;/code&gt; &lt;/a&gt; contexto tf.Graph.as_default . Luego, las operaciones se agregar&amp;aacute;n al gr&amp;aacute;fico en lugar de ejecutarse con entusiasmo. Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="91cb13ece95894f3bcca0811164ae508c7a5c4d0" translate="yes" xml:space="preserve">
          <source>A dense &lt;code&gt;Tensor&lt;/code&gt; to be converted to a &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8f57905bfef208738f2901ade2be23588165cec" translate="yes" xml:space="preserve">
          <source>A dense &lt;code&gt;Tensor&lt;/code&gt; with rank &lt;code&gt;R - 1&lt;/code&gt;, where R is the rank of the &lt;code&gt;SparseTensor&lt;/code&gt; inputs &lt;code&gt;hypothesis&lt;/code&gt; and &lt;code&gt;truth&lt;/code&gt;.</source>
          <target state="translated">Un &lt;code&gt;Tensor&lt;/code&gt; denso con rango &lt;code&gt;R - 1&lt;/code&gt; , donde R es el rango de la &lt;code&gt;hypothesis&lt;/code&gt; y la &lt;code&gt;truth&lt;/code&gt; de las entradas de &lt;code&gt;SparseTensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d7efa742d9dddd9b655ebc339744d07b67966965" translate="yes" xml:space="preserve">
          <source>A dense bool indicator tensor representing the indices with specified value.</source>
          <target state="translated">Un denso tensor indicador de bool que representa los índices con valor especificado.</target>
        </trans-unit>
        <trans-unit id="daeb998091792c15c64628b9c1826810879bf006" translate="yes" xml:space="preserve">
          <source>A dense matrix (pseudo-code in dense np.matrix notation): &lt;code&gt;A = A.H if adjoint_a else A&lt;/code&gt;&lt;code&gt;B = B.H if adjoint_b else B&lt;/code&gt;&lt;code&gt;return A*B&lt;/code&gt;</source>
          <target state="translated">Una matriz densa (pseudoc&amp;oacute;digo en notaci&amp;oacute;n de matriz np densa): &lt;code&gt;A = A.H if adjoint_a else A&lt;/code&gt; &lt;code&gt;B = B.H if adjoint_b else B&lt;/code&gt; &lt;code&gt;return A*B&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="45bf500807d935078f648f81d46bb0558c85c278" translate="yes" xml:space="preserve">
          <source>A dense tensor representing the combined embeddings for the sparse ids. For each row in the dense tensor represented by &lt;code&gt;sp_ids&lt;/code&gt;, the op looks up the embeddings for all ids in that row, multiplies them by the corresponding weight, and combines these embeddings as specified.</source>
          <target state="translated">Un tensor denso que representa las incrustaciones combinadas para los ID dispersos. Para cada fila del tensor denso representado por &lt;code&gt;sp_ids&lt;/code&gt; , el operador busca las incrustaciones de todos los identificadores en esa fila, las multiplica por el peso correspondiente y combina estas incrustaciones como se especifica.</target>
        </trans-unit>
        <trans-unit id="69bfa57c07e7eb13c73de4aed6218a0f64629a56" translate="yes" xml:space="preserve">
          <source>A dense tensor representing the combined embeddings for the sparse ids. For each row in the dense tensor represented by &lt;code&gt;sparse_ids&lt;/code&gt;, the op looks up the embeddings for all ids in that row, multiplies them by the corresponding weight, and combines these embeddings as specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="613b4394bca26e4bb439c7f2d6c1a497c60df87e" translate="yes" xml:space="preserve">
          <source>A dense tensor with shape &lt;code&gt;sp_input.dense_shape&lt;/code&gt; and values specified by the non-empty values in &lt;code&gt;sp_input&lt;/code&gt;. Indices not in &lt;code&gt;sp_input&lt;/code&gt; are assigned &lt;code&gt;default_value&lt;/code&gt;.</source>
          <target state="translated">Un tensor denso con forma &lt;code&gt;sp_input.dense_shape&lt;/code&gt; y valores especificados por los valores no vac&amp;iacute;os en &lt;code&gt;sp_input&lt;/code&gt; . A los &amp;iacute;ndices que no est&amp;aacute;n en &lt;code&gt;sp_input&lt;/code&gt; se les asigna &lt;code&gt;default_value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6b64243c001a35d52f99a9e07cdfe0023fa9d78a" translate="yes" xml:space="preserve">
          <source>A dense tensor.</source>
          <target state="translated">Un tensor denso.</target>
        </trans-unit>
        <trans-unit id="76daaf90e70b919e69e0541fab56f2c242f32c67" translate="yes" xml:space="preserve">
          <source>A detailed description of rmsprop.</source>
          <target state="translated">Una descripción detallada de rmsprop.</target>
        </trans-unit>
        <trans-unit id="8635def999432a8c8fdec8038d37d134030cc8b1" translate="yes" xml:space="preserve">
          <source>A device name, suitable for passing to &lt;a href=&quot;../../../device&quot;&gt;&lt;code&gt;tf.device()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Un nombre de dispositivo, adecuado para pasar a &lt;a href=&quot;../../../device&quot;&gt; &lt;code&gt;tf.device()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="453942b023fedc65bcc2fd21a26d24d81895f016" translate="yes" xml:space="preserve">
          <source>A device policy. Valid values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18972e6031f724a6a3a3142475222d8e9b3b5d1f" translate="yes" xml:space="preserve">
          <source>A device string or function, for passing to &lt;a href=&quot;../../../../device&quot;&gt;&lt;code&gt;tf.device&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70d17f0a1f2f2b92ade1ca760530cffb11428cca" translate="yes" xml:space="preserve">
          <source>A device string or function, for passing to &lt;a href=&quot;../device&quot;&gt;&lt;code&gt;tf.device&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="667bdbb94b54313f391500d95d91af1bdaa8afe2" translate="yes" xml:space="preserve">
          <source>A dict containing the evaluation metrics specified in &lt;code&gt;model_fn&lt;/code&gt; keyed by name, as well as an entry &lt;code&gt;global_step&lt;/code&gt; which contains the value of the global step for which this evaluation was performed. For canned estimators, the dict contains the &lt;code&gt;loss&lt;/code&gt; (mean loss per mini-batch) and the &lt;code&gt;average_loss&lt;/code&gt; (mean loss per sample). Canned classifiers also return the &lt;code&gt;accuracy&lt;/code&gt;. Canned regressors also return the &lt;code&gt;label/mean&lt;/code&gt; and the &lt;code&gt;prediction/mean&lt;/code&gt;.</source>
          <target state="translated">Un dictado que contiene las m&amp;eacute;tricas de evaluaci&amp;oacute;n especificadas en &lt;code&gt;model_fn&lt;/code&gt; con clave por nombre, as&amp;iacute; como una entrada &lt;code&gt;global_step&lt;/code&gt; que contiene el valor del paso global para el que se realiz&amp;oacute; esta evaluaci&amp;oacute;n. Para estimadores enlatados, el dict contiene la &lt;code&gt;loss&lt;/code&gt; (p&amp;eacute;rdida media por mini lotes) y el &lt;code&gt;average_loss&lt;/code&gt; (p&amp;eacute;rdida media por muestra). Los clasificadores enlatados tambi&amp;eacute;n devuelven la &lt;code&gt;accuracy&lt;/code&gt; . Los regresores enlatados tambi&amp;eacute;n devuelven la &lt;code&gt;label/mean&lt;/code&gt; y la &lt;code&gt;prediction/mean&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d32c66e0b4d2a379a35436a9d3a3c7407fa892d7" translate="yes" xml:space="preserve">
          <source>A dict mapping each feature key to a &lt;code&gt;FixedLenFeature&lt;/code&gt; or &lt;code&gt;VarLenFeature&lt;/code&gt; value.</source>
          <target state="translated">Un dict que &lt;code&gt;FixedLenFeature&lt;/code&gt; cada tecla de funci&amp;oacute;n a un valor FixedLenFeature o &lt;code&gt;VarLenFeature&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="83b5e8b9564e073511f78c1cfc3a8482f3853cdd" translate="yes" xml:space="preserve">
          <source>A dict mapping input names to the corresponding array/tensors, if the model has named inputs.</source>
          <target state="translated">Un diccionario que asigna nombres de entrada a la matriz/tensores correspondientes,si el modelo tiene entradas con nombre.</target>
        </trans-unit>
        <trans-unit id="7d6b51583862a38a111faf30716eb699574d545e" translate="yes" xml:space="preserve">
          <source>A dict of options. See ALL_ADVICE example above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca30b26fe5d1ddfc1ac7a26868a70d5793154710" translate="yes" xml:space="preserve">
          <source>A dict of options. See core/profiler/g3doc/options.md.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77fa895a73065b37e45a2ef0a8fdc7f797b2a2f3" translate="yes" xml:space="preserve">
          <source>A dict of predictions.</source>
          <target state="translated">Un dictado de predicciones.</target>
        </trans-unit>
        <trans-unit id="16c3fbaa8c945fa66d8b9137626d8e1f06b076cd" translate="yes" xml:space="preserve">
          <source>A dict of profiling options.</source>
          <target state="translated">Un dictado de opciones de perfiles.</target>
        </trans-unit>
        <trans-unit id="5a5c86af3fc9dda5532c536624e9bef7f2183215" translate="yes" xml:space="preserve">
          <source>A dict specifying how to populate the assets.extra directory within the exported &lt;code&gt;SavedModel&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt; if no extra assets are needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b69a6d4cc3b0b94a0ccd8d0776a0bb3be813df10" translate="yes" xml:space="preserve">
          <source>A dict with string keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4feaa80930a6254c0770b71f162c8f67a7b56e8a" translate="yes" xml:space="preserve">
          <source>A dict, the actual value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbf9205f1772834203f5741b7eb05a24b24be2c0" translate="yes" xml:space="preserve">
          <source>A dict, the expected value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8399302f213da2d21f012184c383f5fe1fd6297c" translate="yes" xml:space="preserve">
          <source>A dictionary mapping input names (as strings) in &lt;code&gt;graph_def&lt;/code&gt; to &lt;code&gt;Tensor&lt;/code&gt; objects. The values of the named input tensors in the imported graph will be re-mapped to the respective &lt;code&gt;Tensor&lt;/code&gt; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62f9ac401a4455f8656aed0575ecb1fcc1b1e96f" translate="yes" xml:space="preserve">
          <source>A dictionary mapping job names to lists or dictionaries describing the tasks in those jobs.</source>
          <target state="translated">Un diccionario que asigna los nombres de los trabajos a listas o diccionarios que describen las tareas de esos trabajos.</target>
        </trans-unit>
        <trans-unit id="f86f4bedd175646ab88c0678144beb30bf556acb" translate="yes" xml:space="preserve">
          <source>A dictionary mapping one or more job names to (i) a list of network addresses, or (ii) a dictionary mapping integer task indices to network addresses; or a &lt;a href=&quot;clusterdef&quot;&gt;&lt;code&gt;tf.train.ClusterDef&lt;/code&gt;&lt;/a&gt; protocol buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="603aedb0ca35a993d1376d936ea9bfeb016c0ef1" translate="yes" xml:space="preserve">
          <source>A dictionary mapping op type strings to alternative op type strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a91e4463c62555c83382318b6ab47e3e9cbe6888" translate="yes" xml:space="preserve">
          <source>A dictionary of custom objects to look the name up in. Generally, custom_objects is provided by the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9518c816536ae3ad1ee0448b9199aca24885f94c" translate="yes" xml:space="preserve">
          <source>A dictionary of custom objects to look the name up in. Generally, module_objects is provided by midlevel library implementers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a55a0854207a718e6f5d98afe96bce614d06e02" translate="yes" xml:space="preserve">
          <source>A dictionary of keyword arguments for the target invocation. Defaults to {}.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b3d4d77b1394976a295d87f0a0abd16f2c35364" translate="yes" xml:space="preserve">
          <source>A dictionary that maps &lt;code&gt;Tensor&lt;/code&gt; objects to feed values. See &lt;code&gt;tf.Session.run&lt;/code&gt; for a description of the valid feed values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa9502ac06f2015cdc0cd908f3e219326357022c" translate="yes" xml:space="preserve">
          <source>A dictionary that maps &lt;code&gt;Tensor&lt;/code&gt; objects to feed values. This feed dictionary will be used when &lt;code&gt;init_op&lt;/code&gt; is evaluated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e8fb664063665ee6b2ed19282190aa880a5a9be" translate="yes" xml:space="preserve">
          <source>A dictionary that maps graph elements to values (described above).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ed3752488ad9dfb4acda8864d837b7c87a9169f" translate="yes" xml:space="preserve">
          <source>A dictionary that may map keys 'rmax', 'rmin', 'dmax' to scalar &lt;code&gt;Tensors&lt;/code&gt; used to clip the renorm correction. The correction &lt;code&gt;(r, d)&lt;/code&gt; is used as &lt;code&gt;corrected_value = normalized_value * r + d&lt;/code&gt;, with &lt;code&gt;r&lt;/code&gt; clipped to [rmin, rmax], and &lt;code&gt;d&lt;/code&gt; to [-dmax, dmax]. Missing rmax, rmin, dmax are set to inf, 0, inf, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd8473a1759e19afbc8616a59f490b8fb8af2350" translate="yes" xml:space="preserve">
          <source>A dictionary. Its keys are module IDs (ints). Its values are lists of Flag objects.</source>
          <target state="translated">Un diccionario.Sus claves son las identificaciones de los módulos (ints).Sus valores son listas de objetos de bandera.</target>
        </trans-unit>
        <trans-unit id="3f7dbdad7de2dc06b44b35fff8f7cf38519d4826" translate="yes" xml:space="preserve">
          <source>A dictionary. Its keys are module names (strings). Its values are lists of Flag objects.</source>
          <target state="translated">Un diccionario.Sus claves son los nombres de los módulos (cadenas).Sus valores son listas de objetos de bandera.</target>
        </trans-unit>
        <trans-unit id="d0e120cb9f241a920af1e6d70a8954c9e18328dd" translate="yes" xml:space="preserve">
          <source>A dimension object.</source>
          <target state="translated">Un objeto dimensional.</target>
        </trans-unit>
        <trans-unit id="22ec8f493e6d8e0082067d5a398b628068d24190" translate="yes" xml:space="preserve">
          <source>A directory in which to write the SavedModel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c84c0265aab5d5f82af94bc1d265540a24f5a3b1" translate="yes" xml:space="preserve">
          <source>A directory name under the export base directory where exports of this type are written. Should not be &lt;code&gt;None&lt;/code&gt; nor empty.</source>
          <target state="translated">Un nombre de directorio bajo el directorio base de exportaci&amp;oacute;n donde se escriben las exportaciones de este tipo. No debe ser &lt;code&gt;None&lt;/code&gt; ni vac&amp;iacute;o.</target>
        </trans-unit>
        <trans-unit id="17bae3fa5d378567e9658f9278cd7a9d02c5f214" translate="yes" xml:space="preserve">
          <source>A distributed variable is variables created on multiple devices. As discussed in the &lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/distribute&quot;&gt;glossary&lt;/a&gt;, mirrored variable and SyncOnRead variable are two examples. The standard pattern for updating distributed variables is to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f759ee1d3b97250758948582c2c197b22472a71" translate="yes" xml:space="preserve">
          <source>A distribution strategy for running on a single device.</source>
          <target state="translated">Una estrategia de distribución para funcionar en un solo dispositivo.</target>
        </trans-unit>
        <trans-unit id="6b86cda551752a05854cbe0505448225fe6c2761" translate="yes" xml:space="preserve">
          <source>A distribution strategy for synchronous training on multiple workers.</source>
          <target state="translated">Una estrategia de distribución para la formación sincrónica de múltiples trabajadores.</target>
        </trans-unit>
        <trans-unit id="9235ca1335951811e9c0d61c684c550d250af785" translate="yes" xml:space="preserve">
          <source>A dtype policy determines dtype-related aspects of a layer, such as its computation and variable dtypes. Each layer has a policy. Policies can be passed to the &lt;code&gt;dtype&lt;/code&gt; argument of layer constructors, or a global policy can be set with &lt;a href=&quot;set_policy&quot;&gt;&lt;code&gt;tf.keras.mixed_precision.experimental.set_policy&lt;/code&gt;&lt;/a&gt;. A layer will default to the global policy if no policy is passed to it's constructor.</source>
          <target state="translated">Una pol&amp;iacute;tica de tipo determina los aspectos relacionados con el tipo de una capa, como su c&amp;aacute;lculo y tipos de variables. Cada capa tiene una pol&amp;iacute;tica. Las pol&amp;iacute;ticas se pueden pasar al argumento &lt;code&gt;dtype&lt;/code&gt; de los constructores de capas, o se puede establecer una pol&amp;iacute;tica global con &lt;a href=&quot;set_policy&quot;&gt; &lt;code&gt;tf.keras.mixed_precision.experimental.set_policy&lt;/code&gt; &lt;/a&gt; . Una capa tomar&amp;aacute; de forma predeterminada la pol&amp;iacute;tica global si no se pasa ninguna pol&amp;iacute;tica a su constructor.</target>
        </trans-unit>
        <trans-unit id="7949d22fc4c414da63cbf4ee4af253b745df3fd9" translate="yes" xml:space="preserve">
          <source>A dtype policy for a Keras layer.</source>
          <target state="translated">Una política tipo para una capa de Keras.</target>
        </trans-unit>
        <trans-unit id="219f4c0ab885108443e28676c769a12805c69acd" translate="yes" xml:space="preserve">
          <source>A factory for tf.Session.</source>
          <target state="translated">Una fábrica para tf.Session.</target>
        </trans-unit>
        <trans-unit id="e1c873f93969baa92bd6d0e235499d74e9c488ee" translate="yes" xml:space="preserve">
          <source>A factory object to create session. Typically a &lt;code&gt;ChiefSessionCreator&lt;/code&gt; or a &lt;code&gt;WorkerSessionCreator&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34b729d5ad85c68d13b77d2affebdb5ff0648f49" translate="yes" xml:space="preserve">
          <source>A factory object to create session. Typically a &lt;code&gt;ChiefSessionCreator&lt;/code&gt; which is the default one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0432718f09d000cc72e512e4fca7905bfef4b52" translate="yes" xml:space="preserve">
          <source>A faster approximation of the sigmoid activation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba4927aa167087b5af915837f3be2df0d5a7038d" translate="yes" xml:space="preserve">
          <source>A feature from a batch of &lt;code&gt;tf.Example&lt;/code&gt;s is parsed into a 2D &lt;a href=&quot;../raggedtensor&quot;&gt;&lt;code&gt;tf.RaggedTensor&lt;/code&gt;&lt;/a&gt;, where the outer dimension is the batch dimension, and the inner (ragged) dimension is the feature length in each example.</source>
          <target state="translated">Una caracter&amp;iacute;stica de un lote de &lt;code&gt;tf.Example&lt;/code&gt; s se analiza en un &lt;a href=&quot;../raggedtensor&quot;&gt; &lt;code&gt;tf.RaggedTensor&lt;/code&gt; &lt;/a&gt; 2D , donde la dimensi&amp;oacute;n externa es la dimensi&amp;oacute;n del lote y la dimensi&amp;oacute;n interna (irregular) es la longitud de la caracter&amp;iacute;stica en cada ejemplo.</target>
        </trans-unit>
        <trans-unit id="057a7defc875d6a9acd6e4207ab28f57f0e941a4" translate="yes" xml:space="preserve">
          <source>A feature from a batch of &lt;code&gt;tf.Example&lt;/code&gt;s is parsed into a 3D &lt;a href=&quot;../raggedtensor&quot;&gt;&lt;code&gt;tf.RaggedTensor&lt;/code&gt;&lt;/a&gt;, where the outer dimension is the batch dimension, the two inner dimensions are formed by separating the &lt;code&gt;value_key&lt;/code&gt; values from each example into rows using that example's partition key.</source>
          <target state="translated">Una caracter&amp;iacute;stica de un lote de &lt;code&gt;tf.Example&lt;/code&gt; s se analiza en un &lt;a href=&quot;../raggedtensor&quot;&gt; &lt;code&gt;tf.RaggedTensor&lt;/code&gt; &lt;/a&gt; 3D , donde la dimensi&amp;oacute;n externa es la dimensi&amp;oacute;n del lote, las dos dimensiones internas se forman separando los valores &lt;code&gt;value_key&lt;/code&gt; de cada ejemplo en filas usando la clave de partici&amp;oacute;n de ese ejemplo.</target>
        </trans-unit>
        <trans-unit id="2639738dfee4907c2f9823daa34975a0e84e3134" translate="yes" xml:space="preserve">
          <source>A feature from a batch of &lt;code&gt;tf.Example&lt;/code&gt;s is parsed into a &lt;a href=&quot;../raggedtensor&quot;&gt;&lt;code&gt;tf.RaggedTensor&lt;/code&gt;&lt;/a&gt; whose rank is &lt;code&gt;len(partitions)+2&lt;/code&gt; and whose ragged_rank is &lt;code&gt;len(partitions)+1&lt;/code&gt;, where the outer dimension is the batch dimension.</source>
          <target state="translated">Una caracter&amp;iacute;stica de un lote de &lt;code&gt;tf.Example&lt;/code&gt; s se analiza en un &lt;a href=&quot;../raggedtensor&quot;&gt; &lt;code&gt;tf.RaggedTensor&lt;/code&gt; &lt;/a&gt; cuyo rango es &lt;code&gt;len(partitions)+2&lt;/code&gt; y cuyo ragged_rank es &lt;code&gt;len(partitions)+1&lt;/code&gt; , donde la dimensi&amp;oacute;n exterior es la dimensi&amp;oacute;n del lote.</target>
        </trans-unit>
        <trans-unit id="faf797cd3ae4684c298b5743dde00398ff1cbed6" translate="yes" xml:space="preserve">
          <source>A feature from a single &lt;code&gt;tf.Example&lt;/code&gt; is parsed into a 1D &lt;a href=&quot;../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Una caracter&amp;iacute;stica de un solo &lt;code&gt;tf.Example&lt;/code&gt; se analiza en un &lt;a href=&quot;../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; 1D .</target>
        </trans-unit>
        <trans-unit id="23451d4861f8ffaa75b993438688dfe858572f0d" translate="yes" xml:space="preserve">
          <source>A feature from a single &lt;code&gt;tf.Example&lt;/code&gt; is parsed into a 2D &lt;a href=&quot;../raggedtensor&quot;&gt;&lt;code&gt;tf.RaggedTensor&lt;/code&gt;&lt;/a&gt;, where the values taken from the &lt;code&gt;value_key&lt;/code&gt; are separated into rows using the partition key.</source>
          <target state="translated">Una caracter&amp;iacute;stica de un solo &lt;code&gt;tf.Example&lt;/code&gt; se analiza en un &lt;a href=&quot;../raggedtensor&quot;&gt; &lt;code&gt;tf.RaggedTensor&lt;/code&gt; &lt;/a&gt; 2D , donde los valores tomados de &lt;code&gt;value_key&lt;/code&gt; se separan en filas usando la clave de partici&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="19d9ea73b0337d506ec2a92f5054af2019406e71" translate="yes" xml:space="preserve">
          <source>A feature from a single &lt;code&gt;tf.Example&lt;/code&gt; is parsed into a &lt;a href=&quot;../raggedtensor&quot;&gt;&lt;code&gt;tf.RaggedTensor&lt;/code&gt;&lt;/a&gt; whose rank is &lt;code&gt;len(partitions)+1&lt;/code&gt;, and whose ragged_rank is &lt;code&gt;len(partitions)&lt;/code&gt;.</source>
          <target state="translated">Una caracter&amp;iacute;stica de un solo &lt;code&gt;tf.Example&lt;/code&gt; se analiza en un &lt;a href=&quot;../raggedtensor&quot;&gt; &lt;code&gt;tf.RaggedTensor&lt;/code&gt; &lt;/a&gt; cuyo rango es &lt;code&gt;len(partitions)+1&lt;/code&gt; , y cuyo ragged_rank es &lt;code&gt;len(partitions)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3cf05af71b5a78ef624e8a00351f4b3776047e01" translate="yes" xml:space="preserve">
          <source>A feed dictionary or &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">Un diccionario de feeds o &lt;code&gt;None&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b3d26c6b1942620fb1d119a3769ccb8c4ab00b7f" translate="yes" xml:space="preserve">
          <source>A feed dictionary to use when running &lt;code&gt;final_ops_dict&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e88b53fa6b0df86aa7fba10194d8d6efdcf505cb" translate="yes" xml:space="preserve">
          <source>A few options this callback provides include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa06e57c5aead88f14db6b59ff715635285c5039" translate="yes" xml:space="preserve">
          <source>A file pattern (glob), or 1D tensor of file patterns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7db4d924ead002c98fea9caee9d3e41b0dece66" translate="yes" xml:space="preserve">
          <source>A file, in which case protocol descriptors are created from the file, which is expected to contain a &lt;code&gt;FileDescriptorSet&lt;/code&gt; serialized as a string. NOTE: You can build a &lt;code&gt;descriptor_source&lt;/code&gt; file using the &lt;code&gt;--descriptor_set_out&lt;/code&gt; and &lt;code&gt;--include_imports&lt;/code&gt; options to the protocol compiler &lt;code&gt;protoc&lt;/code&gt;.</source>
          <target state="translated">Un archivo, en cuyo caso se crean descriptores de protocolo a partir del archivo, que se espera que contenga un &lt;code&gt;FileDescriptorSet&lt;/code&gt; serializado como una cadena. NOTA: Se puede construir una &lt;code&gt;descriptor_source&lt;/code&gt; archivo usando los &lt;code&gt;--descriptor_set_out&lt;/code&gt; y &lt;code&gt;--include_imports&lt;/code&gt; opciones para el protocolo compilador &lt;code&gt;protoc&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e49447aab847383960e40f608ac4d4337495b431" translate="yes" xml:space="preserve">
          <source>A flag that can appear multiple time on the command-line.</source>
          <target state="translated">Una bandera que puede aparecer varias veces en la línea de mando.</target>
        </trans-unit>
        <trans-unit id="4f730090ff34fbc05cc156d940f0029b86f40f50" translate="yes" xml:space="preserve">
          <source>A float &lt;code&gt;Tensor&lt;/code&gt; giving scores (sometimes but not always interpretable as probabilities) for each class. May be &lt;code&gt;None&lt;/code&gt;, but only if &lt;code&gt;classes&lt;/code&gt; is set. Interpretation varies-- see class doc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a35b50da3a3e4cfff6b7e3db421a96596db4e12a" translate="yes" xml:space="preserve">
          <source>A float &lt;code&gt;Tensor&lt;/code&gt; of shape &lt;code&gt;[len(thresholds)]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c982447f6051c50a8136a26858ab1b2ba8bcfa4a" translate="yes" xml:space="preserve">
          <source>A float &lt;code&gt;Tensor&lt;/code&gt; representing the current mean, the value of &lt;code&gt;total&lt;/code&gt; divided by &lt;code&gt;count&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96e7dd8ccea31ca5bc35a13eb0214c802ea4be2d" translate="yes" xml:space="preserve">
          <source>A float &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc9e25da98b99f634c7013fd1e8bbbe585b23175" translate="yes" xml:space="preserve">
          <source>A float multiplier for adjusting contrast.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41a0cbdd6958ea3af82000e174890d2da993a29d" translate="yes" xml:space="preserve">
          <source>A float number (usually between 0 and 1) used for controlling the decay of the running population average of mean and variance. If set to 1.0, the current batch average is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c542cfd70d419c48f8778c5afb336dff8eb3cc3" translate="yes" xml:space="preserve">
          <source>A float representing the threshold for deciding when to remove boxes based on score.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66b8e03048b366401f15ae373468d44e0f5c7de1" translate="yes" xml:space="preserve">
          <source>A float representing the threshold for deciding whether boxes overlap too much with respect to IOU.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="482602dcc14835ae9fb31aa62a74a1d2738fd7fc" translate="yes" xml:space="preserve">
          <source>A float representing the threshold for deciding whether boxes overlap too much with respect to the provided overlap values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="762a7deb6039cb357ad4d7a7805874fac25654cc" translate="yes" xml:space="preserve">
          <source>A float scalar convergence tolerance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="718addec74455c729725b0bd2ef29d37c036f991" translate="yes" xml:space="preserve">
          <source>A float value or a constant float &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cc81829e8031b24cdc8f0a693964bfb22b68104" translate="yes" xml:space="preserve">
          <source>A float value or a constant float tensor, or a callable that takes no arguments and returns the actual value to use, The exponential decay rate for the 2nd moment estimates. Defaults to 0.999.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7a4456c5e5d4a4e0b95ee7e3cdc5ecb6906c73c" translate="yes" xml:space="preserve">
          <source>A float value or a constant float tensor, or a callable that takes no arguments and returns the actual value to use. The exponential decay rate for the 1st moment estimates. Defaults to 0.9.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f7fb51932e34139866c25a93cee76c220656fff" translate="yes" xml:space="preserve">
          <source>A float value or a constant float tensor. The exponential decay rate for the 1st moment estimates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="685b57b0546686870022f2a2a07766caae4e4701" translate="yes" xml:space="preserve">
          <source>A float value or a constant float tensor. The exponential decay rate for the 2nd moment estimates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39601f0d4731a5f53430437e0f4ae2655bf139a4" translate="yes" xml:space="preserve">
          <source>A float value or a constant float tensor. The exponential decay rate for the exponentially weighted infinity norm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4280c3cf788bb387ca1453e81890e1aef5a0265f" translate="yes" xml:space="preserve">
          <source>A float value, must be greater than or equal to zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d6a1f5aaa6fa4ed298f5d0a66f7034283d9d8fc" translate="yes" xml:space="preserve">
          <source>A float value, must be greater than or equal to zero. This differs from L2 above in that the L2 above is a stabilization penalty, whereas this L2 shrinkage is a magnitude penalty. The FTRL formulation can be written as: w{t+1} = argmin&lt;em&gt;w(\hat{g}&lt;/em&gt;{1:t}w + L1&lt;em&gt;||w||_1 + L2&lt;/em&gt;||w||_2^2), where \hat{g} = g + (2&lt;em&gt;L2_shrinkage&lt;/em&gt;w), and g is the gradient of the loss function w.r.t. the weights w. Specifically, in the absence of L1 regularization, it is equivalent to the following update rule: w_{t+1} = w_t - lr_t / (1 + 2&lt;em&gt;L2&lt;/em&gt;lr_t) * g_t - 2&lt;em&gt;L2_shrinkage&lt;/em&gt;lr_t / (1 + 2&lt;em&gt;L2&lt;/em&gt;lr_t) * w_t where lr_t is the learning rate at t. When input is sparse shrinkage will only happen on the active weights.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc26026f8ab7f2b6490381d55d3a5a00ff815036" translate="yes" xml:space="preserve">
          <source>A float value, must be greater than or equal to zero. This differs from L2 above in that the L2 above is a stabilization penalty, whereas this L2 shrinkage is a magnitude penalty. When input is sparse shrinkage will only happen on the active weights.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f031f4857badf1c01d29dde85629ae28372422ea" translate="yes" xml:space="preserve">
          <source>A float value, must be greater than zero and should typically be greater than 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e78521cc323bd24fc532659369748a24dcda6d3" translate="yes" xml:space="preserve">
          <source>A float value, must be less or equal to zero. Controls how the learning rate decreases during training. Use zero for a fixed learning rate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d144597d78600be30b79439b859e774305bc3589" translate="yes" xml:space="preserve">
          <source>A float value, must be less or equal to zero. Controls how the learning rate decreases during training. Use zero for a fixed learning rate. See section 3.1 in (McMahan et al., 2013).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bd086bf3f87157e7db396b4b97833c9b0c7e062" translate="yes" xml:space="preserve">
          <source>A float value, must be less or equal to zero. Controls how the learning rate decreases during training. Use zero for a fixed learning rate. See section 3.1 in the &lt;a href=&quot;https://www.eecs.tufts.edu/%7Edsculley/papers/ad-click-prediction.pdf&quot;&gt;paper&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2add933fcf10d8fffd8606fcd49f993b9321b4f0" translate="yes" xml:space="preserve">
          <source>A float value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc85f1b4989de94ed8748dc397ce081869e52c93" translate="yes" xml:space="preserve">
          <source>A float value. The exponential decay rate for the 1st moment estimates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c6aab1bc1cc4ceecd24ef642cd476ee4f69b78c" translate="yes" xml:space="preserve">
          <source>A float value. The exponential decay rate for the 2nd moment estimates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddaba2de27ac8ae8e2706819bd3334b904e20e75" translate="yes" xml:space="preserve">
          <source>A float, &lt;code&gt;0. &amp;lt;= p &amp;lt;= 1&lt;/code&gt;, probability of bernoulli distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b4b7349ec557af92811ce59bfa0157876402b12" translate="yes" xml:space="preserve">
          <source>A float, &lt;code&gt;0. &amp;lt;= p &amp;lt;= 1&lt;/code&gt;, probability of binomial distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd74ca4cabf913efcad5022a258a8653873016ff" translate="yes" xml:space="preserve">
          <source>A float, indicating the number of seconds since the Epoch when the last preserved checkpoint was written, e.g. due to a &lt;code&gt;keep_checkpoint_every_n_hours&lt;/code&gt; parameter (see &lt;a href=&quot;../../../train/checkpointmanager&quot;&gt;&lt;code&gt;tf.train.CheckpointManager&lt;/code&gt;&lt;/a&gt; for an implementation).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="744ce4b1762af09c1c4a0dd81ba3db8b082a0a9a" translate="yes" xml:space="preserve">
          <source>A float, lower boundary of the uniform distribution to draw samples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38fbaf0b9200af6f63d9860ab2479b090578fa7c" translate="yes" xml:space="preserve">
          <source>A float, the mean value of the normal distribution to draw samples. Default to 0.0.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
