<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="tensorflow">
    <body>
      <group id="tensorflow">
        <trans-unit id="95a4cb436e0ea020943ca2da0300b5fb47cb6175" translate="yes" xml:space="preserve">
          <source>Dequeues &lt;code&gt;n&lt;/code&gt; tuples of one or more tensors from the given queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="969a9db71257eb974073ddfbe1de7d524a74c049" translate="yes" xml:space="preserve">
          <source>Dequeues a tuple of one or more tensors from the given queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4474849cc2df6d86e61b18d672cfb80fe75eef55" translate="yes" xml:space="preserve">
          <source>Dequeues and concatenates &lt;code&gt;n&lt;/code&gt; elements from this queue.</source>
          <target state="translated">Retira y concatena &lt;code&gt;n&lt;/code&gt; elementos de esta cola.</target>
        </trans-unit>
        <trans-unit id="19fc2fa27d509d0699f9dbf4280a3318cad5a7e4" translate="yes" xml:space="preserve">
          <source>Dequeues one element from this queue.</source>
          <target state="translated">Coloca en cola a un elemento de esta cola.</target>
        </trans-unit>
        <trans-unit id="f3fea48b74ef02300254888ef68413cabf43227b" translate="yes" xml:space="preserve">
          <source>Derive from TFDecorator. If your decorator needs to be stateful, you can implement it in terms of a TFDecorator. Store whatever state you need in your derived class, and implement the &lt;code&gt;__call__&lt;/code&gt; method to do your work before calling into your target. You can retrieve the target via &lt;code&gt;super(MyDecoratorClass, self).decorated_target&lt;/code&gt;, and call it with whatever parameters it needs.</source>
          <target state="translated">Derivar de TFDecorator. Si su decorador necesita tener estado, puede implementarlo en t&amp;eacute;rminos de TFDecorator. Almacene cualquier estado que necesite en su clase derivada e implemente el m&amp;eacute;todo &lt;code&gt;__call__&lt;/code&gt; para hacer su trabajo antes de llamar a su objetivo. Puede recuperar el objetivo a trav&amp;eacute;s de &lt;code&gt;super(MyDecoratorClass, self).decorated_target&lt;/code&gt; , y llamarlo con los par&amp;aacute;metros que necesite.</target>
        </trans-unit>
        <trans-unit id="6daa0793fd33b91699c9a7bee2d1c9f133c7deed" translate="yes" xml:space="preserve">
          <source>Describes a set of TPU devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54f7c9a068262146a4b1c79a85a7960a5591cc6a" translate="yes" xml:space="preserve">
          <source>Describes a tf.Tensor.</source>
          <target state="translated">Describe un tensor tf.</target>
        </trans-unit>
        <trans-unit id="b32652d48b1fad512836723a86e079f940afdc37" translate="yes" xml:space="preserve">
          <source>Describes how samples from the distribution are reparameterized.</source>
          <target state="translated">Describe cómo se reparan las muestras de la distribución.</target>
        </trans-unit>
        <trans-unit id="0bfa7c4c52658030196138b4bf6655b1212d5b18" translate="yes" xml:space="preserve">
          <source>Describes how to reduce training loss over batch, such as mean or sum.</source>
          <target state="translated">Describe cómo reducir la pérdida de entrenamiento sobre el lote,como la media o la suma.</target>
        </trans-unit>
        <trans-unit id="f12725dfd287af82347d2187dc9c373c48a2c649" translate="yes" xml:space="preserve">
          <source>Describes some metadata about the TPU system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55da83fa80211247611216ffd730dee15d9b5242" translate="yes" xml:space="preserve">
          <source>Describes the key flags of a module.</source>
          <target state="translated">Describe las banderas clave de un módulo.</target>
        </trans-unit>
        <trans-unit id="f4ff623519bdf4b87f2f39541c23f9598d5576f9" translate="yes" xml:space="preserve">
          <source>Describes the key flags of the main module.</source>
          <target state="translated">Describe las banderas clave del módulo principal.</target>
        </trans-unit>
        <trans-unit id="590f1152208a9acdf7cd49e7fd3211b1448a443d" translate="yes" xml:space="preserve">
          <source>Describes the mapping from TPU devices to topology coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2397564b13ce0f10ab2b668406519463488b72a" translate="yes" xml:space="preserve">
          <source>Describes the output signatures to be exported to &lt;code&gt;SavedModel&lt;/code&gt; and used during serving. A dict &lt;code&gt;{name: output}&lt;/code&gt; where:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="e5a9a0513be66913b0fe073e1d4410ed668b28ae" translate="yes" xml:space="preserve">
          <source>Description in terms of block circulant matrices</source>
          <target state="translated">Descripción en términos de bloque de matrices circulantes</target>
        </trans-unit>
        <trans-unit id="e34f1648ea85089546563604d147ec5884795e10" translate="yes" xml:space="preserve">
          <source>Description in terms of circulant matrices</source>
          <target state="translated">Descripción en términos de matrices circulantes</target>
        </trans-unit>
        <trans-unit id="b2363d5e2bb68e3c5fed4a961698721c41e17180" translate="yes" xml:space="preserve">
          <source>Description in terms of the frequency spectrum</source>
          <target state="translated">Descripción en términos del espectro de frecuencias</target>
        </trans-unit>
        <trans-unit id="574ce105a2b9548583ff01460193b7bc46e62262" translate="yes" xml:space="preserve">
          <source>Description in terms of toeplitz matrices</source>
          <target state="translated">Descripción en términos de matrices de toeplitz</target>
        </trans-unit>
        <trans-unit id="ce7e1a2caedbf07c736683ca9ea93d4192e25ac5" translate="yes" xml:space="preserve">
          <source>Deserialize &lt;code&gt;SparseTensor&lt;/code&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7acb9c50fabbcfd0933ba17a86343a95e68d864" translate="yes" xml:space="preserve">
          <source>Deserialize and concatenate &lt;code&gt;SparseTensors&lt;/code&gt; from a serialized minibatch.</source>
          <target state="translated">Deserializar y concatenar &lt;code&gt;SparseTensors&lt;/code&gt; desde un minibatch serializado.</target>
        </trans-unit>
        <trans-unit id="13288d6a76444392e1c97d9cf9076a26d84a1379" translate="yes" xml:space="preserve">
          <source>Deserialize bucket boundaries and ready flag into current QuantileAccumulator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90fef015daf60d87cd7a44849d61e4ca0f1872e4" translate="yes" xml:space="preserve">
          <source>DeserializeIterator</source>
          <target state="translated">DeserializeIterator</target>
        </trans-unit>
        <trans-unit id="89a8d313c76a7c29c37014a0156f7eeb028cb060" translate="yes" xml:space="preserve">
          <source>DeserializeManySparse</source>
          <target state="translated">DeserializeManySparse</target>
        </trans-unit>
        <trans-unit id="096648d516635b7ddfbfae3d142dd696acfc53cf" translate="yes" xml:space="preserve">
          <source>DeserializeSparse</source>
          <target state="translated">DeserializeSparse</target>
        </trans-unit>
        <trans-unit id="74065a0d2c30d5a0424099968adc88958ee27504" translate="yes" xml:space="preserve">
          <source>Deserializes a serialized loss class/function instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f5fc6dcc866f360e272a75fd7fd2be8ab10c863" translate="yes" xml:space="preserve">
          <source>Deserializes a serialized metric class/function instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e783ac4feea50868ec4fcc1f239add906f25e29" translate="yes" xml:space="preserve">
          <source>Deserializes a serialized tree ensemble config and replaces current tree</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8138eea3ae3bd882bf2738aa9b0a3c49a1e58184" translate="yes" xml:space="preserve">
          <source>Destroy Keras' multiprocessing pools to prevent deadlocks.</source>
          <target state="translated">Destruye las piscinas de multiprocesamiento de Keras para evitar los puntos muertos.</target>
        </trans-unit>
        <trans-unit id="a993059c3348eb5cdfb6f5dc3d91f9967f2a9ad7" translate="yes" xml:space="preserve">
          <source>Destroy Keras' multiprocessing pools to prevent deadlocks. (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a2431be70a334e95a872a1229bd94c934c561a8" translate="yes" xml:space="preserve">
          <source>DestroyResourceOp</source>
          <target state="translated">DestroyResourceOp</target>
        </trans-unit>
        <trans-unit id="22f9ff6e3e5cbc59db99a614d582d483c228cc2f" translate="yes" xml:space="preserve">
          <source>DestroyTemporaryVariable</source>
          <target state="translated">DestroyTemporaryVariable</target>
        </trans-unit>
        <trans-unit id="9b4b0d84e6d39410d54962d37420d376420cfede" translate="yes" xml:space="preserve">
          <source>Destroys the current TF graph and creates a new one.</source>
          <target state="translated">Destruye el gráfico actual de TF y crea uno nuevo.</target>
        </trans-unit>
        <trans-unit id="6cf29f5b301f0cad02724d30127fa271b9a07c04" translate="yes" xml:space="preserve">
          <source>Destroys the temporary variable and returns its final value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="698c12a1ba874259b706de2407b81264eeabb2c7" translate="yes" xml:space="preserve">
          <source>Detailed documentation and user guides are available at &lt;a href=&quot;https://keras.io&quot;&gt;keras.io&lt;/a&gt;.</source>
          <target state="translated">La documentaci&amp;oacute;n detallada y las gu&amp;iacute;as del usuario est&amp;aacute;n disponibles en &lt;a href=&quot;https://keras.io&quot;&gt;keras.io&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0d4e699bc956e42d18eb5fbbff15ed312eeade5d" translate="yes" xml:space="preserve">
          <source>Detailed documentation and user guides are available at &lt;a href=&quot;https://www.tensorflow.org/guide/keras&quot;&gt;tensorflow.org&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36ae4836b7724847e03dabc02d9799fbc8a129cd" translate="yes" xml:space="preserve">
          <source>Details about target device. Converter optimizes the generated model for specific device.</source>
          <target state="translated">Detalles sobre el dispositivo objetivo.El convertidor optimiza el modelo generado para el dispositivo específico.</target>
        </trans-unit>
        <trans-unit id="1daaad0084c2604185e45c5a29dc6efeff0b7fce" translate="yes" xml:space="preserve">
          <source>Details:</source>
          <target state="translated">Details:</target>
        </trans-unit>
        <trans-unit id="d37809ddcf2725dc0f901a5355b093808657da31" translate="yes" xml:space="preserve">
          <source>Detects whether an image is a BMP, GIF, JPEG, or PNG, and performs the appropriate operation to convert the input bytes &lt;code&gt;string&lt;/code&gt; into a &lt;code&gt;Tensor&lt;/code&gt; of type &lt;code&gt;dtype&lt;/code&gt;.</source>
          <target state="translated">Detecta si una imagen es BMP, GIF, JPEG o PNG y realiza la operaci&amp;oacute;n adecuada para convertir la &lt;code&gt;string&lt;/code&gt; bytes de entrada en un &lt;code&gt;Tensor&lt;/code&gt; de tipo &lt;code&gt;dtype&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fbbbc35dcfc0768e90f221c53345be58d7ec1fb4" translate="yes" xml:space="preserve">
          <source>Determinant for every batch member.</source>
          <target state="translated">Determinante para cada miembro del lote.</target>
        </trans-unit>
        <trans-unit id="ff2235254d35d45328ecb4fcc386798197d81794" translate="yes" xml:space="preserve">
          <source>Determine if this &lt;code&gt;ReparameterizationType&lt;/code&gt; is equal to another.</source>
          <target state="translated">Determine si este &lt;code&gt;ReparameterizationType&lt;/code&gt; es igual a otro.</target>
        </trans-unit>
        <trans-unit id="744f4a46331aba2df2ef5b5a9fce42dd16b4ae99" translate="yes" xml:space="preserve">
          <source>Determine the script codes of a given tensor of Unicode integer code points.</source>
          <target state="translated">Determinar los códigos de escritura de un tensor dado de puntos de código entero Unicode.</target>
        </trans-unit>
        <trans-unit id="24402127a02a2b1d7c98e06c1b8df0fe318d5f0b" translate="yes" xml:space="preserve">
          <source>Determine whether a SignatureDef can be served by TensorFlow Serving.</source>
          <target state="translated">Determinar si un SignatureDef puede ser servido por TensorFlow Serving.</target>
        </trans-unit>
        <trans-unit id="827f1de4f2abed9cb79b44d5e33fdcd448edc53f" translate="yes" xml:space="preserve">
          <source>Determined at runtime.</source>
          <target state="translated">Determinado en tiempo de ejecución.</target>
        </trans-unit>
        <trans-unit id="a23053dff4184033fe1cfc131b08ead59155f34d" translate="yes" xml:space="preserve">
          <source>Determines the distribution of the parameters of the random features map (and therefore the kernel approximated by the layer). It can be either a string identifier or a Keras &lt;code&gt;Initializer&lt;/code&gt; instance. Currently only 'gaussian' and 'laplacian' are supported string identifiers (case insensitive). Note that the kernel matrix is not trainable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df931c698a6144150cfe5c9bb49f74600a3e5b7a" translate="yes" xml:space="preserve">
          <source>Determines the number of threads used by independent non-blocking operations. 0 means the system picks an appropriate number.</source>
          <target state="translated">Determina el número de hilos utilizados por las operaciones independientes no bloqueantes.0 significa que el sistema elige un número apropiado.</target>
        </trans-unit>
        <trans-unit id="c96551b4beef0c5f15c88283ebced74ed6ba11e0" translate="yes" xml:space="preserve">
          <source>Determines validity of argument and returns the correct element of enum.</source>
          <target state="translated">Determina la validez del argumento y devuelve el elemento correcto de enum.</target>
        </trans-unit>
        <trans-unit id="378b184dbd8a4f30c2a97297f944256faf0e3411" translate="yes" xml:space="preserve">
          <source>Determines whether a path exists or not.</source>
          <target state="translated">Determina si un camino existe o no.</target>
        </trans-unit>
        <trans-unit id="b64e38fe029607c00e9d80234625d0d916b62a78" translate="yes" xml:space="preserve">
          <source>Deterministically generates and returns the set of all possible classes. For testing purposes. There is no need to use this, since you might as well use full softmax or full logistic regression.</source>
          <target state="translated">Genera y devuelve con determinación el conjunto de todas las clases posibles.Para fines de prueba.No hay necesidad de usar esto,ya que también se puede usar el softmax completo o la regresión logística completa.</target>
        </trans-unit>
        <trans-unit id="d74d853a71c02fd9f56e1b1afef18d2e5314a808" translate="yes" xml:space="preserve">
          <source>Developers who need to create their own 'Parser' classes for options which can appear multiple times can call this module function to register their flags.</source>
          <target state="translated">Los desarrolladores que necesiten crear sus propias clases de 'Parser' para opciones que pueden aparecer varias veces pueden llamar a esta función del módulo para registrar sus banderas.</target>
        </trans-unit>
        <trans-unit id="61a78b5ef6fd80e8c5f9a04c8552fb01791d8d15" translate="yes" xml:space="preserve">
          <source>Developing new regularizers</source>
          <target state="translated">Desarrollo de nuevos regularizadores</target>
        </trans-unit>
        <trans-unit id="2aec0bcef013fa0c33bebd468076f9b25dd5ba86" translate="yes" xml:space="preserve">
          <source>Device Functions are used in &lt;code&gt;with tf.device(device_function):&lt;/code&gt; statement to automatically assign devices to &lt;code&gt;Operation&lt;/code&gt; objects as they are constructed, Device constraints are added from the inner-most context first, working outwards. The merging behavior adds constraints to fields that are yet unset by a more inner context. Currently the fields are (job, task, cpu/gpu).</source>
          <target state="translated">Las funciones de dispositivo se utilizan &lt;code&gt;with tf.device(device_function):&lt;/code&gt; declaraci&amp;oacute;n para asignar autom&amp;aacute;ticamente dispositivos a los objetos de &lt;code&gt;Operation&lt;/code&gt; medida que se construyen. Las restricciones de dispositivo se agregan primero desde el contexto m&amp;aacute;s interno, trabajando hacia afuera. El comportamiento de fusi&amp;oacute;n agrega restricciones a los campos que a&amp;uacute;n no est&amp;aacute;n configurados por un contexto m&amp;aacute;s interno. Actualmente los campos son (trabajo, tarea, cpu / gpu).</target>
        </trans-unit>
        <trans-unit id="bccc26aef941533883904f65a561f0f07f514dfc" translate="yes" xml:space="preserve">
          <source>Device filters can be specified to isolate groups of remote tasks to avoid undesired accesses between workers. Workers accessing resources or launching ops / functions on filtered remote devices will result in errors (unknown devices). For any remote task, if no device filter is present, all cluster devices will be visible; if any device filter is specified, it can only see devices matching at least one filter. Devices on the task itself are always visible. Device filters can be particially specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c15d51d610efb46cdd3621aaa07461d21c32cc4" translate="yes" xml:space="preserve">
          <source>Device index: The device index.</source>
          <target state="translated">Índice del dispositivo:El índice del dispositivo.</target>
        </trans-unit>
        <trans-unit id="e8a92cf3c031e7974ad57a24bd24bb2f966eba2f" translate="yes" xml:space="preserve">
          <source>Device string identifier for the device on which the variables should be placed. See class docs for more details on how the device is used. Examples: &quot;/cpu:0&quot;, &quot;/gpu:0&quot;, &quot;/device:CPU:0&quot;, &quot;/device:GPU:0&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8770f776d4f8facc1f307617c3a3a7933db67db4" translate="yes" xml:space="preserve">
          <source>Device type: The device type string (e.g. &quot;CPU&quot; or &quot;GPU&quot;).</source>
          <target state="translated">Tipo de dispositivo:La cadena del tipo de dispositivo (por ejemplo,&quot;CPU&quot; o &quot;GPU&quot;).</target>
        </trans-unit>
        <trans-unit id="7044753b220f46c9999cd599f5ae108a4835ae9b" translate="yes" xml:space="preserve">
          <source>Device(s) for non-slot variables.</source>
          <target state="translated">Dispositivo(s)para variables sin ranura.</target>
        </trans-unit>
        <trans-unit id="44ff24f8580c8036f9e1c8c4ac167f68d0f2bed6" translate="yes" xml:space="preserve">
          <source>Device, colocation and dependencies stacks are not thread-local be default. If multiple threads access them, then the state is shared. This means that one thread may affect the behavior of another thread.</source>
          <target state="translated">Las pilas de dispositivos,colocaciones y dependencias no son de hilo-local be default.Si múltiples hilos acceden a ellas,entonces el estado es compartido.Esto significa que un hilo puede afectar el comportamiento de otro hilo.</target>
        </trans-unit>
        <trans-unit id="681b653dec3cdea677dcdff212dae920b2a3e6c0" translate="yes" xml:space="preserve">
          <source>DeviceIndex</source>
          <target state="translated">DeviceIndex</target>
        </trans-unit>
        <trans-unit id="91c5c0b13ad709cb061599c9cc7e3e838e95e1d1" translate="yes" xml:space="preserve">
          <source>Diag</source>
          <target state="translated">Diag</target>
        </trans-unit>
        <trans-unit id="3bfbf8eac3c8d713827f383e7d6db2263f95dadc" translate="yes" xml:space="preserve">
          <source>DiagPart</source>
          <target state="translated">DiagPart</target>
        </trans-unit>
        <trans-unit id="5ec964d6d7625801d073a9f32bf602747c7585b6" translate="yes" xml:space="preserve">
          <source>Diagonal offset(s). Positive value means superdiagonal, 0 refers to the main diagonal, and negative value means subdiagonals. &lt;code&gt;k&lt;/code&gt; can be a single integer (for a single diagonal) or a pair of integers specifying the low and high ends of a matrix band. &lt;code&gt;k[0]&lt;/code&gt; must not be larger than &lt;code&gt;k[1]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f174d6886437f73ceec72cabe24152e0b46a8dd" translate="yes" xml:space="preserve">
          <source>Dict mapping names (strings) to custom classes or functions to be considered during model deserialization. (default None)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44d879e45f19c9532689762ba8424920b9bfe4cc" translate="yes" xml:space="preserve">
          <source>Dict of metric results keyed by name. The values of the dict can be one of the following: (1) instance of &lt;code&gt;Metric&lt;/code&gt; class. (2) Results of calling a metric function, namely a &lt;code&gt;(metric_tensor, update_op)&lt;/code&gt; tuple. &lt;code&gt;metric_tensor&lt;/code&gt; should be evaluated without any impact on state (typically is a pure computation results based on variables.). For example, it should not trigger the &lt;code&gt;update_op&lt;/code&gt; or requires any input fetching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="909a303efd4136c5fdf13b2a25b3f731e087560f" translate="yes" xml:space="preserve">
          <source>Dict of strings representing input tensor names mapped to tuple of floats representing the mean and standard deviation of the training data (e.g., {&quot;foo&quot; : (0., 1.)}). Only need if &lt;code&gt;inference_input_type&lt;/code&gt; is &lt;code&gt;QUANTIZED_UINT8&lt;/code&gt;. real_input_value = (quantized_input_value - mean_value) / std_dev_value. (default {})</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef1f5c7726cca2a2b467cb0ffa34d4eeb72e4a3f" translate="yes" xml:space="preserve">
          <source>Dict of strings representing input tensor names to list of integers representing input shapes (e.g., {&quot;foo&quot; : [1, 16, 16, 3]}). Automatically determined when input shapes is None (e.g., {&quot;foo&quot; : None}). (default None)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c06d03fccbcf390913553db386aaa71b9c2fea8" translate="yes" xml:space="preserve">
          <source>Dict or list of pairs of a boolean scalar tensor and a callable which returns a list of tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17898922d89bbf7422792b3e546712173284779f" translate="yes" xml:space="preserve">
          <source>Dict with keyword arguments for &lt;code&gt;fn&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="508a643ac347c8b219c1ccfb18cd8a7355d609dd" translate="yes" xml:space="preserve">
          <source>Dict with keyword arguments to pass to &lt;code&gt;fn()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="965ddba423e3bd39494a9aba3603fc61353b628d" translate="yes" xml:space="preserve">
          <source>Dict with keyword per-thread arguments for &lt;code&gt;merge_fn&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f230a35346dd8bb6d9625795bf4574bf538157" translate="yes" xml:space="preserve">
          <source>Dict, contains the return value of &lt;code&gt;model.predict_step&lt;/code&gt;, it typically returns a dict with a key 'outputs' containing the model's outputs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="646f5007fb09f50418f0f945ee66fb0e10d117a6" translate="yes" xml:space="preserve">
          <source>Dict, contains the return value of &lt;code&gt;model.test_step&lt;/code&gt;. Typically, the values of the &lt;code&gt;Model&lt;/code&gt;'s metrics are returned. Example: &lt;code&gt;{'loss': 0.2, 'accuracy': 0.7}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f672c30d598a6cd145779add379be036bf9041f3" translate="yes" xml:space="preserve">
          <source>Dict, contains the return value of &lt;code&gt;model.train_step&lt;/code&gt;. Typically, the values of the &lt;code&gt;Model&lt;/code&gt;'s metrics are returned. Example: &lt;code&gt;{'loss': 0.2, 'accuracy': 0.7}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb9d0b713e5a9c004469847af05441763e87b562" translate="yes" xml:space="preserve">
          <source>Dict, keyword named properties for common layer attributes, like &lt;code&gt;trainable&lt;/code&gt; etc when constructing the cell from configs of get_config().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2548a8ff7d943de6313c443fecdf50e3b85bfba" translate="yes" xml:space="preserve">
          <source>Dict, keyword named properties for common layer attributes, like &lt;code&gt;trainable&lt;/code&gt; etc when constructing the cell from configs of get_config(). When restoring from CudnnLSTM-trained checkpoints, must use &lt;code&gt;CudnnCompatibleLSTMCell&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9191b665af88e9e8db607184fe50ebf58b507a1" translate="yes" xml:space="preserve">
          <source>Dict, keyword named properties for common layer attributes, like &lt;code&gt;trainable&lt;/code&gt; etc when constructing the cell from configs of get_config(). When restoring from CudnnLSTM-trained checkpoints, use &lt;code&gt;CudnnCompatibleLSTMCell&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5beb4336b9460465ea32fb817eddf8f1ebba8276" translate="yes" xml:space="preserve">
          <source>Dict, metric results for this training epoch, and for the validation epoch if validation is performed. Validation result keys are prefixed with &lt;code&gt;val_&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c4a149b781e100501d8027a6e543a37620f960a" translate="yes" xml:space="preserve">
          <source>Dict, where keys are names of the variables in the checkpoint and values are current variables or names of current variables (in default graph).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86c162cef6dbd2be2f250c055244944595fc1234" translate="yes" xml:space="preserve">
          <source>Dict. Aggregated metric results up until this batch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="766035e064f475d1317fd12785982c859e8d34cc" translate="yes" xml:space="preserve">
          <source>Dict. Currently no data is passed to this argument for this method but that may change in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a178bc723c3ed2d7366b9e7b2e87ae9dd86613ca" translate="yes" xml:space="preserve">
          <source>Dict. Currently the output of the last call to &lt;code&gt;on_epoch_end()&lt;/code&gt; is passed to this argument for this method but that may change in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="148347a68d512e356eee0089331e25d7389256af" translate="yes" xml:space="preserve">
          <source>Dict. Currently the output of the last call to &lt;code&gt;on_test_batch_end()&lt;/code&gt; is passed to this argument for this method but that may change in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="437723684bb6ac64398771a961076e8bece6f7f5" translate="yes" xml:space="preserve">
          <source>Dict. Training parameters (eg. verbosity, batch size, number of epochs...).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="380d89dbad18e146d854f74b9ed3ea7180258e67" translate="yes" xml:space="preserve">
          <source>Dictionary for cloning customized objects. This is used with classes that is not part of this pip package. For example, if user maintains a &lt;code&gt;relu6&lt;/code&gt; class that inherits from &lt;a href=&quot;../../../../keras/layers/layer&quot;&gt;&lt;code&gt;tf.keras.layers.Layer&lt;/code&gt;&lt;/a&gt;, then pass &lt;code&gt;custom_objects={'relu6': relu6}&lt;/code&gt;. Defaults to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e37cefa6c33fb6c584ebae8fd741daf8e29d704" translate="yes" xml:space="preserve">
          <source>Dictionary for cloning customized objects. This is used with classes that is not part of this pip package. For example, if user maintains a &lt;code&gt;relu6&lt;/code&gt; class that inherits from &lt;a href=&quot;../layers/layer&quot;&gt;&lt;code&gt;tf.keras.layers.Layer&lt;/code&gt;&lt;/a&gt;, then pass &lt;code&gt;custom_objects={'relu6': relu6}&lt;/code&gt;. Defaults to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37fdcb2ad9792b61fd52fda1b9926d23f7214baa" translate="yes" xml:space="preserve">
          <source>Dictionary mapping integer axes to a specific dimension value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f5d33c90e0d9798d9a480cbc5070c0dbe280ed8" translate="yes" xml:space="preserve">
          <source>Dictionary of configured experimental optimizer options</source>
          <target state="translated">Diccionario de opciones de optimización experimental configuradas</target>
        </trans-unit>
        <trans-unit id="cd05f23cb61033e45591049c256b81b3322f2191" translate="yes" xml:space="preserve">
          <source>Dictionary of environment variable settings. If None, no environment variables will be set for the child process. This is to make tests more hermetic. NOTE: this behavior is different than the standard subprocess module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f0b83be7243655320426136df37a300fc8dcf5" translate="yes" xml:space="preserve">
          <source>Dictionary of experimental optimizer options to configure. Valid keys:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a803cc139fcb180166cfe08ca2f07bf64a8dd09b" translate="yes" xml:space="preserve">
          <source>Dictionary of options that are required to load the delegate. All keys and values in the dictionary should be convertible to str. Consult the documentation of the specific delegate for required and legal options. (default None)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="728b0a7067cfc907b74add2ff5e454b6f21b5a06" translate="yes" xml:space="preserve">
          <source>Dictionary of parameter names mapped to their values.</source>
          <target state="translated">Diccionario de nombres de parámetros mapeados a sus valores.</target>
        </trans-unit>
        <trans-unit id="692e97759c5554276675078a2fefb82c8e19cbd6" translate="yes" xml:space="preserve">
          <source>Dictionary of parameters used to instantiate this &lt;code&gt;Distribution&lt;/code&gt;.</source>
          <target state="translated">Diccionario de par&amp;aacute;metros utilizados para instanciar esta &lt;code&gt;Distribution&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="953a555a1e6495ca26794c7f94466334cf208343" translate="yes" xml:space="preserve">
          <source>Dictionary or dictionaries of &lt;code&gt;{name: object}&lt;/code&gt; pairs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40e3659edc3b8f1ab253617a6adb73d8830b5077" translate="yes" xml:space="preserve">
          <source>Dictionary with extra keyword args that are passed to the Flag &lt;strong&gt;init&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce9cdf65929e404b3fb997372c724572402ebe6e" translate="yes" xml:space="preserve">
          <source>Dictionary with job names as key and number of tasks in the job as value. Defaults to as many 'worker's as there are (Slurm) tasks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a129d5879607993b9a5af9730ed1d34c8749054e" translate="yes" xml:space="preserve">
          <source>Dictionary: configuration dictionary. - Keras Optimizer instance (it will be returned unchanged). - TensorFlow Optimizer instance (it will be wrapped as a Keras Optimizer).</source>
          <target state="translated">Diccionario:diccionario de configuración.-Instancia del Optimizador Keras (se devolverá sin cambios).-Ejemplo de TensorFlow Optimizer (será envuelto como un Keras Optimizer).</target>
        </trans-unit>
        <trans-unit id="69d175e81af1fe4ee0b582d10973f9c5fd60b6f3" translate="yes" xml:space="preserve">
          <source>Dictionary; optional custom HTTP headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec875ba1bed287ce7bb6f77c34544a7bdd7169be" translate="yes" xml:space="preserve">
          <source>Difference between two successive values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7053cc3bf650cd21039b39217036ddd606fbdf92" translate="yes" xml:space="preserve">
          <source>Differences from &lt;code&gt;CheckpointSaverHook&lt;/code&gt;:</source>
          <target state="translated">Diferencias de &lt;code&gt;CheckpointSaverHook&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5979266576871d21b2afe287422bfec66c9f8601" translate="yes" xml:space="preserve">
          <source>Differs from &lt;code&gt;recall_at_k&lt;/code&gt; in that predictions must be in the form of top &lt;code&gt;k&lt;/code&gt; class indices, whereas &lt;code&gt;recall_at_k&lt;/code&gt; expects logits. Refer to &lt;code&gt;recall_at_k&lt;/code&gt; for more details.</source>
          <target state="translated">Se &lt;code&gt;recall_at_k&lt;/code&gt; de recall_at_k en que las predicciones deben estar en forma de &amp;iacute;ndices de clase &lt;code&gt;k&lt;/code&gt; superiores , mientras que &lt;code&gt;recall_at_k&lt;/code&gt; espera logits. Consulte &lt;code&gt;recall_at_k&lt;/code&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="be909077c0641dc699923f6b079868063b8f51f3" translate="yes" xml:space="preserve">
          <source>Differs from &lt;code&gt;sparse_precision_at_k&lt;/code&gt; in that predictions must be in the form of top &lt;code&gt;k&lt;/code&gt; class indices, whereas &lt;code&gt;sparse_precision_at_k&lt;/code&gt; expects logits. Refer to &lt;code&gt;sparse_precision_at_k&lt;/code&gt; for more details.</source>
          <target state="translated">Se &lt;code&gt;sparse_precision_at_k&lt;/code&gt; de sparse_precision_at_k en que las predicciones deben estar en forma de &amp;iacute;ndices de primera clase &lt;code&gt;k&lt;/code&gt; , mientras que &lt;code&gt;sparse_precision_at_k&lt;/code&gt; espera logits. Consulte &lt;code&gt;sparse_precision_at_k&lt;/code&gt; para obtener m&amp;aacute;s detalles.</target>
        </trans-unit>
        <trans-unit id="71b654a46473d2ed0c7aa5dcfaceb5a36f6c2744" translate="yes" xml:space="preserve">
          <source>Digamma</source>
          <target state="translated">Digamma</target>
        </trans-unit>
        <trans-unit id="f4a4825ca5ca26010a11513b1ed31f16442ba31c" translate="yes" xml:space="preserve">
          <source>Dilation2D</source>
          <target state="translated">Dilation2D</target>
        </trans-unit>
        <trans-unit id="7a5e4f90dfd04f0ae80692f5452b3abdb87db450" translate="yes" xml:space="preserve">
          <source>Dilation2DBackpropFilter</source>
          <target state="translated">Dilation2DBackpropFilter</target>
        </trans-unit>
        <trans-unit id="bc8f1d85c3909ccfed4ada73ff7ba64b493c322b" translate="yes" xml:space="preserve">
          <source>Dilation2DBackpropInput</source>
          <target state="translated">Dilation2DBackpropInput</target>
        </trans-unit>
        <trans-unit id="5b21f885f597e9e74a55d4389b351564142f53dd" translate="yes" xml:space="preserve">
          <source>Dimension (in the sense of vector spaces) of the domain of this operator.</source>
          <target state="translated">Dimensión (en el sentido de espacios vectoriales)del dominio de este operador.</target>
        </trans-unit>
        <trans-unit id="be230f49ad256184670ae811a2455494d85c47d3" translate="yes" xml:space="preserve">
          <source>Dimension (in the sense of vector spaces) of the range of this operator.</source>
          <target state="translated">Dimensión (en el sentido de espacios vectoriales)del alcance de este operador.</target>
        </trans-unit>
        <trans-unit id="81e1794ad324d87e9c3913bd4e690a960b22a7bd" translate="yes" xml:space="preserve">
          <source>Dimension along which to normalize. A scalar or a vector of integers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e605fbab33cf913d60208b6de17431f62da70c5d" translate="yes" xml:space="preserve">
          <source>Dimension moduli are computed as follows:</source>
          <target state="translated">Los módulos de dimensión se calculan de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="3943de17d44cccd425d2bd7cc5f97716aeaf9ac4" translate="yes" xml:space="preserve">
          <source>Dimension modulo are computed as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12353dfd6f2cf8e65515e61ad27ef6f22399f498" translate="yes" xml:space="preserve">
          <source>Dimension to concatenate along. Must be in range [-rank, rank), where rank is the number of dimensions in each input &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ddfbac242ac55614543ee86ed26494de45d412b" translate="yes" xml:space="preserve">
          <source>Dimensions are combined as follows:</source>
          <target state="translated">Las dimensiones se combinan de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="0b1428aa50cfced90eb241c03bec0e26433bb51c" translate="yes" xml:space="preserve">
          <source>Dimensions are compared as follows:</source>
          <target state="translated">Las dimensiones se comparan de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="652fefec3558d17b4cbbf981d82b724df3b2008f" translate="yes" xml:space="preserve">
          <source>Dimensions are divided as follows:</source>
          <target state="translated">Las dimensiones se dividen de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="184715345bdd753f41c29c261ac6ecb895b9c071" translate="yes" xml:space="preserve">
          <source>Dimensions are subtracted as follows:</source>
          <target state="translated">Las dimensiones se restan de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="19062e66ee039136c8d284ba410e9e11a1c74f93" translate="yes" xml:space="preserve">
          <source>Dimensions are summed as follows:</source>
          <target state="translated">Las dimensiones se resumen de la siguiente manera:</target>
        </trans-unit>
        <trans-unit id="581c373342481761b0c26c77e0171656cbaceb9f" translate="yes" xml:space="preserve">
          <source>Dimensions set to &lt;code&gt;None&lt;/code&gt; are not updated:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4f953596edfc1abe7c86e97539af55b2287f27" translate="yes" xml:space="preserve">
          <source>DirectedInterleaveDataset</source>
          <target state="translated">DirectedInterleaveDataset</target>
        </trans-unit>
        <trans-unit id="d3fa81283d2aa4a2b1537786c7a78e5ebfbdfb4e" translate="yes" xml:space="preserve">
          <source>Directly calling a regularizer</source>
          <target state="translated">Llamando directamente a un regularizador</target>
        </trans-unit>
        <trans-unit id="6dffacc4a7f337ffd42bfbd75f187d8a0411546c" translate="yes" xml:space="preserve">
          <source>Directly constructed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47db5c108e42f46b065238adb0dcb583634f4b8c" translate="yes" xml:space="preserve">
          <source>Directory containing the SavedModel files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="013b158d76f61c00a04d7b712532c489deea3731" translate="yes" xml:space="preserve">
          <source>Directory in which the SavedModel protocol buffer and variables to be loaded are located.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b920e4b3618466000ec34f6f3a5c62331a87d6f7" translate="yes" xml:space="preserve">
          <source>Directory name.</source>
          <target state="translated">Nombre del directorio.</target>
        </trans-unit>
        <trans-unit id="981a7757f49be188cf8c4baa4b42d1642ef61b80" translate="yes" xml:space="preserve">
          <source>Directory to save &lt;code&gt;Estimator&lt;/code&gt; model parameters, graph, summary files for TensorBoard, etc. If unset a directory will be created with &lt;code&gt;tempfile.mkdtemp&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b836c4b14fac25373b6fd58bea5de8b432d112d8" translate="yes" xml:space="preserve">
          <source>Directory to save model parameters, graph and etc. This can also be used to load checkpoints from the directory into a estimator to continue training a previously saved model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e9e3f46c4adb6335d58c44815a854d49516a56f" translate="yes" xml:space="preserve">
          <source>Directory to save model parameters, graph and etc. This can also be used to load checkpoints from the directory into a estimator to continue training a previously saved model. If &lt;code&gt;None&lt;/code&gt;, the model_dir in &lt;code&gt;config&lt;/code&gt; will be used if set. If both are set, they must be same. If both are &lt;code&gt;None&lt;/code&gt;, a temporary directory will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b24c0e810e5eb3091900fcdad911e32a212bb0d" translate="yes" xml:space="preserve">
          <source>Directory to save model parameters, graph and etc. This can also be used to load checkpoints from the directory into an estimator to continue training a previously saved model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="809b50157320760ad190f8e6a58208d90ac50955" translate="yes" xml:space="preserve">
          <source>Directory to save model parameters, graph and etc. This can also be used to load checkpoints from the directory into an estimator to continue training a previously saved model. If &lt;code&gt;PathLike&lt;/code&gt; object, the path will be resolved. If &lt;code&gt;None&lt;/code&gt;, the model_dir in &lt;code&gt;config&lt;/code&gt; will be used if set. If both are set, they must be same. If both are &lt;code&gt;None&lt;/code&gt;, a temporary directory will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37aec56764fe7bfe309080cb06352bdc69f54563" translate="yes" xml:space="preserve">
          <source>Directory where the data is located. If &lt;code&gt;labels&lt;/code&gt; is &quot;inferred&quot;, it should contain subdirectories, each containing images for a class. Otherwise, the directory structure is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0453b553548b68ff0d55e89cd0536b5f784d499d" translate="yes" xml:space="preserve">
          <source>Directory where the data is located. If &lt;code&gt;labels&lt;/code&gt; is &quot;inferred&quot;, it should contain subdirectories, each containing text files for a class. Otherwise, the directory structure is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38f445403d8c7d0fda5f7f2d8e17b4691e759e6f" translate="yes" xml:space="preserve">
          <source>Directory where the model was saved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d28b85ec57058b1331f1057608fb05c79aff840" translate="yes" xml:space="preserve">
          <source>Directory where the variables were saved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b848d7f7fc24ccbaad105decf5ce924f8a7ea623" translate="yes" xml:space="preserve">
          <source>Directory where to write the graph. This can refer to remote filesystems, such as Google Cloud Storage (GCS).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="457a972c4e4938b22e2dc6c61707fd82b71ef298" translate="yes" xml:space="preserve">
          <source>Directory with checkpoints file or path to checkpoint file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c50127a0440dcdfd4fcc4b1a7610aeb013e2c55b" translate="yes" xml:space="preserve">
          <source>Directory with checkpoints file or path to checkpoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3ab2c01286b85519de6608b2334ff814f08dd79" translate="yes" xml:space="preserve">
          <source>Dirichlet distribution.</source>
          <target state="translated">Distribución de Dirichlet.</target>
        </trans-unit>
        <trans-unit id="1917ae3fe4d2ed647744d55c2cb8ea81f700b72d" translate="yes" xml:space="preserve">
          <source>Dirichlet-Multinomial compound distribution.</source>
          <target state="translated">Distribución de compuestos Dirichlet-Multinomio.</target>
        </trans-unit>
        <trans-unit id="68297b1e56f2e835bd2af468d143d667ced725a4" translate="yes" xml:space="preserve">
          <source>Dirichlet-Multinomial is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Compound_probability_distribution&quot;&gt;compound distribution&lt;/a&gt;, i.e., its samples are generated as follows.</source>
          <target state="translated">Dirichlet-Multinomial es una &lt;a href=&quot;https://en.wikipedia.org/wiki/Compound_probability_distribution&quot;&gt;distribuci&amp;oacute;n compuesta&lt;/a&gt; , es decir, sus muestras se generan de la siguiente manera.</target>
        </trans-unit>
        <trans-unit id="dcc145048cdbabbcc050df2754ce6b49ee03abc5" translate="yes" xml:space="preserve">
          <source>Disable the currently-enabled debugging dumping.</source>
          <target state="translated">Deshabilitar el vertido de depuración actualmente activado.</target>
        </trans-unit>
        <trans-unit id="16a2605998dad2d1fcad09094c83291b2e53a3aa" translate="yes" xml:space="preserve">
          <source>Disable the eager/graph unified numerics checking mechanism.</source>
          <target state="translated">Deshabilite el mecanismo de comprobación numérica unificada de eager/graph.</target>
        </trans-unit>
        <trans-unit id="b798d88b1318376c424af4e62e8d7f241b546c8f" translate="yes" xml:space="preserve">
          <source>Disables TensorFlow 2.x behaviors.</source>
          <target state="translated">Desactiva el comportamiento de TensorFlow 2.x.</target>
        </trans-unit>
        <trans-unit id="521eac72229eba3d7914bfe240d507f9814af96b" translate="yes" xml:space="preserve">
          <source>Disables eager execution.</source>
          <target state="translated">Deshabilita la ejecución ansiosa.</target>
        </trans-unit>
        <trans-unit id="d920733a667102618722334c044ebf1ee6edab0c" translate="yes" xml:space="preserve">
          <source>Disables experimental MLIR-Based TensorFlow Compiler Bridge.</source>
          <target state="translated">Deshabilita el puente experimental del compilador de flujo tensorial basado en MLIR.</target>
        </trans-unit>
        <trans-unit id="2b3074c068d3c39a640dcc9793052a2c950a4659" translate="yes" xml:space="preserve">
          <source>Disables experimental MLIR-Based TensorFlow Compiler Optimizations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca32bbcea39d01e178ad885103e73c62caaf7cc5" translate="yes" xml:space="preserve">
          <source>Disables the V2 TensorShape behavior and reverts to V1 behavior.</source>
          <target state="translated">Desactiva el comportamiento de la V2 TensorShape y vuelve al comportamiento de la V1.</target>
        </trans-unit>
        <trans-unit id="62499cf079682b5ed73eeda6e8cbc8ac744df372" translate="yes" xml:space="preserve">
          <source>Disables the V2 dtype behavior for Keras layers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91b59c0ad3afaeeb9957f97a642af99ad71bbdf5" translate="yes" xml:space="preserve">
          <source>Disables the mixed precision graph rewrite.</source>
          <target state="translated">Desactiva la reescritura de la gráfica de precisión mixta.</target>
        </trans-unit>
        <trans-unit id="6afd9d583451263bea47be88824edfe1d46acd10" translate="yes" xml:space="preserve">
          <source>Discounting factor for the history/coming gradient</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eda68923c74f85d5a0279934ce0a35d017664fe9" translate="yes" xml:space="preserve">
          <source>Discounting factor for the history/coming gradient. Defaults to 0.9.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17a94fad4038a6c4f3e0eefa175f4ebe5569b6d6" translate="yes" xml:space="preserve">
          <source>Dispatches cwise mul for &quot;Dense&lt;em&gt;Dense&quot; and &quot;Dense&lt;/em&gt;Sparse&quot;.</source>
          <target state="translated">Se distribuye cwise mul para &quot;Denso &lt;em&gt;Denso&quot; y &quot;Denso&lt;/em&gt; disperso&quot;.</target>
        </trans-unit>
        <trans-unit id="b3c2dac39cc3cf2bcaa90c8f8c260a4d52934cb6" translate="yes" xml:space="preserve">
          <source>Dispatches to add for strings and add_v2 for all other types.</source>
          <target state="translated">Despachos a añadir para las cadenas y add_v2 para todos los demás tipos.</target>
        </trans-unit>
        <trans-unit id="47e0c198980f7d73c8f31eb26e60152b3bfca63a" translate="yes" xml:space="preserve">
          <source>Display name for step counts (usually &quot;step&quot; or &quot;sample&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a41538a9b6e4478f54a08c16b868672e44d806fc" translate="yes" xml:space="preserve">
          <source>Displays a progress bar.</source>
          <target state="translated">Muestra una barra de progreso.</target>
        </trans-unit>
        <trans-unit id="179f03d1bb4a10eb88ed2e485ea242f0b1a7a517" translate="yes" xml:space="preserve">
          <source>Distribute values in array based on replica_id:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9124082f9e48ad99385248615c76c39fb14b7a53" translate="yes" xml:space="preserve">
          <source>Distributed Training Tutorials</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf96e7ea26bee8689a9fb32dee3b96652c0b1998" translate="yes" xml:space="preserve">
          <source>Distributed training with Keras</source>
          <target state="translated">Entrenamiento distribuido con Keras</target>
        </trans-unit>
        <trans-unit id="3a0184db4ec730df13780c0bc32937d407e08e80" translate="yes" xml:space="preserve">
          <source>Distributed training with TensorFlow</source>
          <target state="translated">Entrenamiento distribuido con TensorFlow</target>
        </trans-unit>
        <trans-unit id="eb66401eefced642a598afe65af5943e81734ce7" translate="yes" xml:space="preserve">
          <source>Distributed version of Stochastic Dual Coordinate Ascent (SDCA) optimizer for</source>
          <target state="translated">Versión distribuida del optimizador de ascenso de doble coordenada estocástica (SDCA)para</target>
        </trans-unit>
        <trans-unit id="2286ed7345235e9d18c6fcd99a94911aa6bac7da" translate="yes" xml:space="preserve">
          <source>DistributedValues input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e5c699aa3f4d9196eba5dd8be8839096cf69f87" translate="yes" xml:space="preserve">
          <source>Distributes &lt;a href=&quot;../../../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; instances created by calls to &lt;code&gt;dataset_fn&lt;/code&gt;.</source>
          <target state="translated">Distribuye instancias de &lt;a href=&quot;../../../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; creadas por llamadas a &lt;code&gt;dataset_fn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6fabb3e99d51e74cd9bf48a43262694d355937f2" translate="yes" xml:space="preserve">
          <source>Distributes &lt;a href=&quot;../../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; instances created by calls to &lt;code&gt;dataset_fn&lt;/code&gt;.</source>
          <target state="translated">Distribuye instancias de &lt;a href=&quot;../../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; creadas por llamadas a &lt;code&gt;dataset_fn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3394e1fdd6861a0bbd13c70458c5c7db5ff67b58" translate="yes" xml:space="preserve">
          <source>Distributes &lt;a href=&quot;../../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; instances created by calls to &lt;code&gt;dataset_fn&lt;/code&gt;.</source>
          <target state="translated">Distribuye instancias de &lt;a href=&quot;../../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; creadas por llamadas a &lt;code&gt;dataset_fn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="deb5f91468faf0f4ba99bc8820e017c05f291bdd" translate="yes" xml:space="preserve">
          <source>Distributes &lt;a href=&quot;../data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; instances created by calls to &lt;code&gt;dataset_fn&lt;/code&gt;.</source>
          <target state="translated">Distribuye instancias de &lt;a href=&quot;../data/dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; creadas por llamadas a &lt;code&gt;dataset_fn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="192dd8b05d9b41aa26bf9424fba779d44a515f90" translate="yes" xml:space="preserve">
          <source>Distributes a tf.data.Dataset instance provided via &lt;code&gt;dataset&lt;/code&gt;.</source>
          <target state="translated">Distribuye una instancia de tf.data.Dataset proporcionada a trav&amp;eacute;s de un &lt;code&gt;dataset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="98d7d4ad30a1f3b6a280f4f0d9a95de8aaac9329" translate="yes" xml:space="preserve">
          <source>Distributes a tf.data.Dataset instance provided via dataset.</source>
          <target state="translated">Distribuye una instancia de tf.data.Dataset proporcionada a través de un dataset.</target>
        </trans-unit>
        <trans-unit id="a9272351388ebc819fa201ab73595f99c851d9b5" translate="yes" xml:space="preserve">
          <source>Distribution parameter for scale.</source>
          <target state="translated">Parámetro de distribución para la escala.</target>
        </trans-unit>
        <trans-unit id="200938400bb94e17e87c3c7df85c8268812f04b4" translate="yes" xml:space="preserve">
          <source>Distribution parameter for standard deviation.</source>
          <target state="translated">Parámetro de distribución para la desviación estándar.</target>
        </trans-unit>
        <trans-unit id="3b6f75528c74b056a3bcfcdcd45e98beceb2553e" translate="yes" xml:space="preserve">
          <source>Distribution parameter for the location.</source>
          <target state="translated">Parámetro de distribución para la ubicación.</target>
        </trans-unit>
        <trans-unit id="e89ccf6e77ca8273281a020421991fa84566fb35" translate="yes" xml:space="preserve">
          <source>Distribution parameter for the mean.</source>
          <target state="translated">Parámetro de distribución de la media.</target>
        </trans-unit>
        <trans-unit id="4fb883e63a4c3f13d19c2425d84223e22d36d438" translate="yes" xml:space="preserve">
          <source>Distribution parameters are automatically broadcast in all functions; see examples for details.</source>
          <target state="translated">Los parámetros de distribución se difunden automáticamente en todas las funciones;véanse los ejemplos para más detalles.</target>
        </trans-unit>
        <trans-unit id="fb7c5e4b77643e7474e2d21dd2896fc952052045" translate="yes" xml:space="preserve">
          <source>Div</source>
          <target state="translated">Div</target>
        </trans-unit>
        <trans-unit id="8050d548b3e9fa3bbc762582e12fb8ffca0cd74c" translate="yes" xml:space="preserve">
          <source>DivNoNan</source>
          <target state="translated">DivNoNan</target>
        </trans-unit>
        <trans-unit id="0d3b0db2bd3c7e99bf63c286b760d9693978e92b" translate="yes" xml:space="preserve">
          <source>Divide the gradient by the root of this average</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d90cb11062e93dd06a3c330fa055ba03def4253" translate="yes" xml:space="preserve">
          <source>Divide the model's input(s) into multiple sub-batches.</source>
          <target state="translated">Dividir la(s)entrada(s)del modelo en múltiples sub-lotes.</target>
        </trans-unit>
        <trans-unit id="1c83131611b315e50330f4357ec0a30492c4e55f" translate="yes" xml:space="preserve">
          <source>Divide this variable by &lt;a href=&quot;../../indexedslices&quot;&gt;&lt;code&gt;tf.IndexedSlices&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Divida esta variable por &lt;a href=&quot;../../indexedslices&quot;&gt; &lt;code&gt;tf.IndexedSlices&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cd3cab1dbc4ab5f3e0135860f29cd0a670455ba7" translate="yes" xml:space="preserve">
          <source>Divide this variable by &lt;a href=&quot;indexedslices&quot;&gt;&lt;code&gt;tf.IndexedSlices&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Divida esta variable por &lt;a href=&quot;indexedslices&quot;&gt; &lt;code&gt;tf.IndexedSlices&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e9fc6bee0dc76250df9c7249450c058a5b1248ea" translate="yes" xml:space="preserve">
          <source>Divide two values using Python 2 semantics.</source>
          <target state="translated">Divide dos valores usando la semántica de Python 2.</target>
        </trans-unit>
        <trans-unit id="0b11878bad0b769611401c6fae7db2c6d95fbabc" translate="yes" xml:space="preserve">
          <source>Divides &lt;code&gt;x / y&lt;/code&gt; elementwise, rounding toward the most negative integer.</source>
          <target state="translated">Divide &lt;code&gt;x / y&lt;/code&gt; elementos, redondeando hacia el n&amp;uacute;mero entero m&amp;aacute;s negativo.</target>
        </trans-unit>
        <trans-unit id="7054c933ef39643ba301622090f151d74f3786dd" translate="yes" xml:space="preserve">
          <source>Divides a variable reference by sparse updates.</source>
          <target state="translated">Divide una referencia variable por las escasas actualizaciones.</target>
        </trans-unit>
        <trans-unit id="f6cc4908b9c759475fad4485ce4f300757dc9dfe" translate="yes" xml:space="preserve">
          <source>Divides sparse updates into the variable referenced by &lt;code&gt;resource&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45c14857e94927b4042c441ca64da6e9584933d0" translate="yes" xml:space="preserve">
          <source>Divides x / y elementwise (using Python 2 division operator semantics). (deprecated)</source>
          <target state="translated">Divide x/y por elementos (usando la semántica del operador de división Python 2).(desaprobado)</target>
        </trans-unit>
        <trans-unit id="9d62e7e02cc809f4b5d0b7e656e69318bec428dc" translate="yes" xml:space="preserve">
          <source>Divides x / y elementwise (using Python 3 division operator semantics).</source>
          <target state="translated">Divide x/y por elementos (usando la semántica del operador de división Python 3).</target>
        </trans-unit>
        <trans-unit id="5f99d20ff90050d8dfae43f5ffeab6deb712b94a" translate="yes" xml:space="preserve">
          <source>Do not call.</source>
          <target state="translated">No llames.</target>
        </trans-unit>
        <trans-unit id="0e19cbaf835cde80c7e4a1d8a1c24b2e13f0e983" translate="yes" xml:space="preserve">
          <source>Do not generate side-effect outputs.</source>
          <target state="translated">No genere salidas de efectos secundarios.</target>
        </trans-unit>
        <trans-unit id="f6bb458eb36bbb106bec0d33a4372f73fe1da874" translate="yes" xml:space="preserve">
          <source>Documentation specific to this application of &lt;code&gt;decorator_func&lt;/code&gt; to &lt;code&gt;target&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25a78a048e146bfd34662d0525db757b7a96e1cb" translate="yes" xml:space="preserve">
          <source>Documenting RaggedTensor Shapes</source>
          <target state="translated">Documentar las formas irregulares de los tensores</target>
        </trans-unit>
        <trans-unit id="164630c36dde0c82111b1f3dc0afd4875333d29a" translate="yes" xml:space="preserve">
          <source>Does first run which shows the eval metrics before training.</source>
          <target state="translated">Hace la primera carrera que muestra las métricas de evaluación antes del entrenamiento.</target>
        </trans-unit>
        <trans-unit id="f99e6c429c8885c047333a226cf62534ccc256b0" translate="yes" xml:space="preserve">
          <source>Does not add if local_step is lesser than the accumulator's global_step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfc4470c2a0db343ff16d7ce4c084129536fad15" translate="yes" xml:space="preserve">
          <source>Does not add if local_step is smaller than the accumulator's global_step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad0886ab9d39600e06d3738d56360cc4a6c8d3f1" translate="yes" xml:space="preserve">
          <source>Does not calculate some metrics that do not make sense, such as AUC.</source>
          <target state="translated">No calcula algunas métricas que no tienen sentido,como el AUC.</target>
        </trans-unit>
        <trans-unit id="d3a16e859f7ea844fb2347c5f66d4fdc50974d5b" translate="yes" xml:space="preserve">
          <source>Does not support &lt;code&gt;label_vocabulary&lt;/code&gt;. Instead, labels must be float in the range [0, 1].</source>
          <target state="translated">No es compatible con &lt;code&gt;label_vocabulary&lt;/code&gt; . En cambio, las etiquetas deben ser flotantes en el rango [0, 1].</target>
        </trans-unit>
        <trans-unit id="2083af700419e9f00d99ec199155887f45dff43e" translate="yes" xml:space="preserve">
          <source>Does not write the &lt;code&gt;GraphDef&lt;/code&gt; and &lt;code&gt;MetaGraphDef&lt;/code&gt; to the summary.</source>
          <target state="translated">No escribe &lt;code&gt;GraphDef&lt;/code&gt; y &lt;code&gt;MetaGraphDef&lt;/code&gt; en el resumen.</target>
        </trans-unit>
        <trans-unit id="d61d2abccb36c5385e1fe79f0a4f01955d7746b7" translate="yes" xml:space="preserve">
          <source>Does nothing if the EventFileWriter was not closed.</source>
          <target state="translated">No hace nada si el &quot;EventFileWriter&quot; no fue cerrado.</target>
        </trans-unit>
        <trans-unit id="bf3dd4e6c21aafe1e3c10a490dd20e8f64e442a7" translate="yes" xml:space="preserve">
          <source>Does nothing. Only useful as a placeholder for control edges.</source>
          <target state="translated">No hace nada.Sólo sirve como marcador de posición para los bordes de control.</target>
        </trans-unit>
        <trans-unit id="d3e3c649e5b2cfba3be856308817874db914b357" translate="yes" xml:space="preserve">
          <source>Does nothing. Serves as a control trigger for scheduling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0db14ebf285ed7bf2f6744a63f15f17d02d61f9f" translate="yes" xml:space="preserve">
          <source>Dominik Csiba, Zheng Qu, Peter Richtarik. 2015</source>
          <target state="translated">Dominik Csiba,Zheng Qu,Peter Richtarik.2015</target>
        </trans-unit>
        <trans-unit id="6907bb65c3f0588d3aeb5d107fec1d5df41c9b41" translate="yes" xml:space="preserve">
          <source>Dot-product attention layer, a.k.a. Luong-style attention.</source>
          <target state="translated">Capa de atención de productos puntuales,alias atención al estilo de Luong.</target>
        </trans-unit>
        <trans-unit id="4239e3dac779bf2a52d558154614129f43ea75c8" translate="yes" xml:space="preserve">
          <source>Dots per inch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059832445bef72ff3ab2311ac70c27ec32c98a0e" translate="yes" xml:space="preserve">
          <source>Downloads a file from a URL if it not already in the cache.</source>
          <target state="translated">Descarga un archivo de una URL si no está ya en la caché.</target>
        </trans-unit>
        <trans-unit id="0a71aa2a51d8d6b0d1ffc004a583ef5ad70bd2e8" translate="yes" xml:space="preserve">
          <source>Downsamples the input representation by taking the maximum value over the time dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb71bfc4a903dc49201137d9ebdbc5d40bda9424" translate="yes" xml:space="preserve">
          <source>Downsamples the input representation by taking the maximum value over the window defined by &lt;code&gt;pool_size&lt;/code&gt; for each dimension along the features axis. The window is shifted by &lt;code&gt;strides&lt;/code&gt; in each dimension. The resulting output when using &quot;valid&quot; padding option has a shape(number of rows or columns) of: &lt;code&gt;output_shape = (input_shape - pool_size + 1) / strides)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c49ce076647fedea8cacae28bc07eeba742440c" translate="yes" xml:space="preserve">
          <source>Downsamples the input representation by taking the maximum value over the window defined by &lt;code&gt;pool_size&lt;/code&gt;. The window is shifted by &lt;code&gt;strides&lt;/code&gt;. The resulting output when using &quot;valid&quot; padding option has a shape of: &lt;code&gt;output_shape = (input_shape - pool_size + 1) / strides)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cf70ae2cb6c75d0a9c4fb58d52a95a4a4fb3459" translate="yes" xml:space="preserve">
          <source>Draw bounding boxes on a batch of images.</source>
          <target state="translated">Dibuja cajas delimitadoras en un lote de imágenes.</target>
        </trans-unit>
        <trans-unit id="4832723fe356ae26384348ce3008f3ec5bc2040f" translate="yes" xml:space="preserve">
          <source>Draw integers: &lt;code&gt;counts = [n_0,...,n_{K-1}] ~ Multinomial(total_count, probs)&lt;/code&gt;</source>
          <target state="translated">Dibujar n&amp;uacute;meros enteros: &lt;code&gt;counts = [n_0,...,n_{K-1}] ~ Multinomial(total_count, probs)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d68ab4523cc9f189dea2f73d3573f15a45252e77" translate="yes" xml:space="preserve">
          <source>DrawBoundingBoxes</source>
          <target state="translated">DrawBoundingBoxes</target>
        </trans-unit>
        <trans-unit id="f9881a84226c3a072daea77439292b0ab957dbb4" translate="yes" xml:space="preserve">
          <source>DrawBoundingBoxesV2</source>
          <target state="translated">DrawBoundingBoxesV2</target>
        </trans-unit>
        <trans-unit id="9b35511abd43696bf6f2e8a3e63057c2e2053cb2" translate="yes" xml:space="preserve">
          <source>Draws &lt;code&gt;shape&lt;/code&gt; samples from each of the given Gamma distribution(s).</source>
          <target state="translated">Dibuja muestras de &lt;code&gt;shape&lt;/code&gt; de cada una de las distribuciones Gamma dadas.</target>
        </trans-unit>
        <trans-unit id="2f485a98bd7eab55347fa5d55f73b85c721e211f" translate="yes" xml:space="preserve">
          <source>Draws &lt;code&gt;shape&lt;/code&gt; samples from each of the given Poisson distribution(s).</source>
          <target state="translated">Dibuja muestras de &lt;code&gt;shape&lt;/code&gt; de cada una de las distribuciones de Poisson dadas.</target>
        </trans-unit>
        <trans-unit id="e3c5f61f54c9fb2fa435235e5351a40f0e8d2a52" translate="yes" xml:space="preserve">
          <source>Draws deterministic pseudorandom samples from a categorical distribution.</source>
          <target state="translated">Extrae muestras pseudoaleatorias deterministas de una distribución categórica.</target>
        </trans-unit>
        <trans-unit id="ab9f458f58c6bdd4d02bf827a8dcab230cd2aa13" translate="yes" xml:space="preserve">
          <source>Draws deterministic pseudorandom samples from a multinomial distribution. (deprecated)</source>
          <target state="translated">Dibuja muestras pseudoaleatorias deterministas de una distribución multinomial.(desaprobado)</target>
        </trans-unit>
        <trans-unit id="c1b5d2a737bbdb42a41c618560b2a667a7806c1f" translate="yes" xml:space="preserve">
          <source>Draws samples from a categorical distribution.</source>
          <target state="translated">Saca muestras de una distribución categórica.</target>
        </trans-unit>
        <trans-unit id="520c25c8c100cbba7ddc5253242eb10fefc010a8" translate="yes" xml:space="preserve">
          <source>Draws samples from a multinomial distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="071c8e9dd3484d5fab6f23e4b9289081d88d7c16" translate="yes" xml:space="preserve">
          <source>Draws samples from a multinomial distribution. (deprecated)</source>
          <target state="translated">Extrae muestras de una distribución multinomial.(desaprobado)</target>
        </trans-unit>
        <trans-unit id="678cd1621474883b2cd35a303f85069b99439e67" translate="yes" xml:space="preserve">
          <source>Draws samples from a truncated normal distribution centered on 0 with &lt;code&gt;stddev = sqrt(1 / fan_in)&lt;/code&gt; where &lt;code&gt;fan_in&lt;/code&gt; is the number of input units in the weight tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66ea0aece380fb969bb44bea8eb12ff47f0c3bda" translate="yes" xml:space="preserve">
          <source>Draws samples from a truncated normal distribution centered on 0 with &lt;code&gt;stddev = sqrt(2 / (fan_in + fan_out))&lt;/code&gt; where &lt;code&gt;fan_in&lt;/code&gt; is the number of input units in the weight tensor and &lt;code&gt;fan_out&lt;/code&gt; is the number of output units in the weight tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d8ebd161f63ebaf1f3afa9990959a8073318852" translate="yes" xml:space="preserve">
          <source>Draws samples from a uniform distribution within &lt;code&gt;[-limit, limit]&lt;/code&gt;, where &lt;code&gt;limit = sqrt(3 / fan_in)&lt;/code&gt; (&lt;code&gt;fan_in&lt;/code&gt; is the number of input units in the weight tensor).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a6fdd6ef0436ae937dac1cce78ebb7c168e8c10" translate="yes" xml:space="preserve">
          <source>Draws samples from a uniform distribution within &lt;code&gt;[-limit, limit]&lt;/code&gt;, where &lt;code&gt;limit = sqrt(6 / (fan_in + fan_out))&lt;/code&gt; (&lt;code&gt;fan_in&lt;/code&gt; is the number of input units in the weight tensor and &lt;code&gt;fan_out&lt;/code&gt; is the number of output units).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b8b198ca33fbce90a37e7044ff34a5f60c2478" translate="yes" xml:space="preserve">
          <source>Draws samples from a uniform distribution within &lt;code&gt;[-limit, limit]&lt;/code&gt;, where &lt;code&gt;limit = sqrt(6 / fan_in)&lt;/code&gt; (&lt;code&gt;fan_in&lt;/code&gt; is the number of input units in the weight tensor).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f61e33bf74dc6cb23e31a4742f4452d5d238daaf" translate="yes" xml:space="preserve">
          <source>Dress</source>
          <target state="translated">Dress</target>
        </trans-unit>
        <trans-unit id="d9c26e925d08589194f1628e9ba35c4cbbff118c" translate="yes" xml:space="preserve">
          <source>Dropout consists in randomly setting a fraction &lt;code&gt;rate&lt;/code&gt; of input units to 0 at each update during training time, which helps prevent overfitting.</source>
          <target state="translated">Deserci&amp;oacute;n consiste en el establecimiento de una fracci&amp;oacute;n al azar &lt;code&gt;rate&lt;/code&gt; de unidades de entrada a 0 en cada actualizaci&amp;oacute;n durante el tiempo de formaci&amp;oacute;n, lo que ayuda a evitar el sobreajuste.</target>
        </trans-unit>
        <trans-unit id="0c910938bf7951e235266a0bde634cd7e83f6bb7" translate="yes" xml:space="preserve">
          <source>Dropout consists in randomly setting a fraction &lt;code&gt;rate&lt;/code&gt; of input units to 0 at each update during training time, which helps prevent overfitting. The units that are kept are scaled by &lt;code&gt;1 / (1 - rate)&lt;/code&gt;, so that their sum is unchanged at training time and inference time.</source>
          <target state="translated">Deserci&amp;oacute;n consiste en el establecimiento de una fracci&amp;oacute;n al azar &lt;code&gt;rate&lt;/code&gt; de unidades de entrada a 0 en cada actualizaci&amp;oacute;n durante el tiempo de formaci&amp;oacute;n, lo que ayuda a evitar el sobreajuste. Las unidades que se mantienen se escalan por &lt;code&gt;1 / (1 - rate)&lt;/code&gt; , de modo que su suma no cambia en el tiempo de entrenamiento y en el tiempo de inferencia.</target>
        </trans-unit>
        <trans-unit id="3ed6660be55d41788a76a36a5bdcb02238dd7845" translate="yes" xml:space="preserve">
          <source>Dtype of the samples (int or float dtypes are permissible, as samples are discrete). Default: int32.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace81bb63ee8802a4e450fa90e2282ee9728797a" translate="yes" xml:space="preserve">
          <source>Dtype to use for generated arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dbbbfe9cc4b00f63183937c62d18cf85f4976f6" translate="yes" xml:space="preserve">
          <source>Dtype to use for the generated arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e0feccd09febde5feb158c937e2615c85dfbfe" translate="yes" xml:space="preserve">
          <source>Dtype to use. Default to &lt;code&gt;None&lt;/code&gt;, in which case the global setting &lt;a href=&quot;../../backend/floatx&quot;&gt;&lt;code&gt;tf.keras.backend.floatx()&lt;/code&gt;&lt;/a&gt; is used (unless you changed it, it defaults to &quot;float32&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dc3b807502ca4f8b87062e501e9e44937bf4f8d" translate="yes" xml:space="preserve">
          <source>Dtypes and casting</source>
          <target state="translated">Tipos y moldes</target>
        </trans-unit>
        <trans-unit id="2cce0dbfc4150d144a2b52097f134c7eb97a528d" translate="yes" xml:space="preserve">
          <source>Duality: The erosion of &lt;code&gt;value&lt;/code&gt; by the &lt;code&gt;filters&lt;/code&gt; is equal to the negation of the dilation of &lt;code&gt;-value&lt;/code&gt; by the reflected &lt;code&gt;filters&lt;/code&gt;.</source>
          <target state="translated">Dualidad: La erosi&amp;oacute;n del &lt;code&gt;value&lt;/code&gt; por los &lt;code&gt;filters&lt;/code&gt; es igual a la negaci&amp;oacute;n de la dilataci&amp;oacute;n del &lt;code&gt;-value&lt;/code&gt; por los &lt;code&gt;filters&lt;/code&gt; reflejados .</target>
        </trans-unit>
        <trans-unit id="de135649e6ee68cb3c671dd05ce04b87cd5cb6ad" translate="yes" xml:space="preserve">
          <source>Duality: The erosion of &lt;code&gt;value&lt;/code&gt; by the &lt;code&gt;kernel&lt;/code&gt; is equal to the negation of the dilation of &lt;code&gt;-value&lt;/code&gt; by the reflected &lt;code&gt;kernel&lt;/code&gt;.</source>
          <target state="translated">Dualidad: La erosi&amp;oacute;n del &lt;code&gt;value&lt;/code&gt; por el &lt;code&gt;kernel&lt;/code&gt; es igual a la negaci&amp;oacute;n de la dilataci&amp;oacute;n del &lt;code&gt;-value&lt;/code&gt; por el &lt;code&gt;kernel&lt;/code&gt; reflejado .</target>
        </trans-unit>
        <trans-unit id="14b395b9ef340667cc069ff8a0df7f484517809d" translate="yes" xml:space="preserve">
          <source>Due to numerical instability, the gradient of this function evaluated at x=100 is NaN. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01b6fa41ad24ce7aeced29282a9ba7b232ae4d3b" translate="yes" xml:space="preserve">
          <source>Due to numerical instability, the gradient this function evaluated at x=100 is NaN. For example:</source>
          <target state="translated">Debido a la inestabilidad numérica,el gradiente de esta función evaluada en x=100 es NaN.Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="4f553621edbd655917227d809420fe6a55a1545e" translate="yes" xml:space="preserve">
          <source>Dummy method to prevent a RaggedTensor from being used as a Python bool.</source>
          <target state="translated">Método ficticio para evitar que un RaggedTensor sea usado como un bool de Python.</target>
        </trans-unit>
        <trans-unit id="fa31bd5c69618abc2823fa976d807fbc423f01db" translate="yes" xml:space="preserve">
          <source>Dummy method to prevent a tensor from being used as a Python &lt;code&gt;bool&lt;/code&gt;.</source>
          <target state="translated">M&amp;eacute;todo ficticio para evitar que un tensor se utilice como &lt;code&gt;bool&lt;/code&gt; de Python .</target>
        </trans-unit>
        <trans-unit id="5b762a19d2487de9921f5eccbd8c97bad2f06ba2" translate="yes" xml:space="preserve">
          <source>Dummy method to prevent iteration.</source>
          <target state="translated">Método falso para prevenir la iteración.</target>
        </trans-unit>
        <trans-unit id="88b0bdba3d3f459c41e963f09a5ef3c292f2b696" translate="yes" xml:space="preserve">
          <source>DummyIterationCounter</source>
          <target state="translated">DummyIterationCounter</target>
        </trans-unit>
        <trans-unit id="eb1dc57dcf66566314b788f693c778451a15ca93" translate="yes" xml:space="preserve">
          <source>DummyMemoryCache</source>
          <target state="translated">DummyMemoryCache</target>
        </trans-unit>
        <trans-unit id="f3ab4575dc0133a1dfcc58a0645455ba8d875d5f" translate="yes" xml:space="preserve">
          <source>DummySeedGenerator</source>
          <target state="translated">DummySeedGenerator</target>
        </trans-unit>
        <trans-unit id="9e551da6df8f5debe44fc9163e31b03c846581e3" translate="yes" xml:space="preserve">
          <source>Dump data from only the tensors from op types that matches to the regular expression (through Python's &lt;code&gt;re.match()&lt;/code&gt;). &quot;Op type&quot; refers to the names of the TensorFlow operations (e.g., &quot;MatMul&quot;, &quot;LogSoftmax&quot;), which may repeat in a TensorFlow function. It does &lt;em&gt;not&lt;/em&gt; refer to the names of nodes (e.g., &quot;dense/MatMul&quot;, &quot;dense_1/MatMul_1&quot;) which are unique within a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7078f157aac2573044c918d8a4a3b7b6033ac22" translate="yes" xml:space="preserve">
          <source>Dump data from only the tensors of which the specified dtypes. This optional argument can be in any of the following format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="033e9b9d832a57a4165f92d3f8bd0ca6c42d1de4" translate="yes" xml:space="preserve">
          <source>Duplicate entries are handled correctly: if multiple &lt;code&gt;indices&lt;/code&gt; reference the same location, their (negated) contributions add.</source>
          <target state="translated">Las entradas duplicadas se manejan correctamente: si varios &lt;code&gt;indices&lt;/code&gt; referencia a la misma ubicaci&amp;oacute;n, se suman sus contribuciones (negadas).</target>
        </trans-unit>
        <trans-unit id="e539ae8c6c5e97585904cac6f7578e33be0fb9a3" translate="yes" xml:space="preserve">
          <source>Duplicate entries are handled correctly: if multiple &lt;code&gt;indices&lt;/code&gt; reference the same location, their contributions add.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acea7eb7cb19dad19066e361fb49fdeacdcbaf92" translate="yes" xml:space="preserve">
          <source>Duplicate entries are handled correctly: if multiple &lt;code&gt;indices&lt;/code&gt; reference the same location, their contributions are combined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a40b59eaf6d38fb8daf8662b8b0b03a0012ed11" translate="yes" xml:space="preserve">
          <source>Duplicate entries are handled correctly: if multiple &lt;code&gt;indices&lt;/code&gt; reference the same location, their contributions combine.</source>
          <target state="translated">Las entradas duplicadas se manejan correctamente: si varios &lt;code&gt;indices&lt;/code&gt; referencia a la misma ubicaci&amp;oacute;n, sus contribuciones se combinan.</target>
        </trans-unit>
        <trans-unit id="d4e22b417b9aad707bab26acf128ef0124f02c98" translate="yes" xml:space="preserve">
          <source>Duplicate entries are handled correctly: if multiple &lt;code&gt;indices&lt;/code&gt; reference the same location, their contributions divide.</source>
          <target state="translated">Las entradas duplicadas se manejan correctamente: si varios &lt;code&gt;indices&lt;/code&gt; referencia a la misma ubicaci&amp;oacute;n, sus contribuciones se dividen.</target>
        </trans-unit>
        <trans-unit id="49769bf3963b221867efd0dad9c6f794695da9ab" translate="yes" xml:space="preserve">
          <source>Duplicate entries are handled correctly: if multiple &lt;code&gt;indices&lt;/code&gt; reference the same location, their contributions multiply.</source>
          <target state="translated">Las entradas duplicadas se manejan correctamente: si varios &lt;code&gt;indices&lt;/code&gt; referencia a la misma ubicaci&amp;oacute;n, sus contribuciones se multiplican.</target>
        </trans-unit>
        <trans-unit id="a78cf7fe187f03163a0ea5705dfc52d2311860a1" translate="yes" xml:space="preserve">
          <source>Duration of monitoring in ms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feb239a1e72b6cedecb73f3c757df8c7fb234d18" translate="yes" xml:space="preserve">
          <source>Duration of tracing or monitoring in ms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f721b600ecff1c2f6cd4e8aedd23a2ffb0e5bf0e" translate="yes" xml:space="preserve">
          <source>During training or evaluation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3556ffa59e7016962eddbdf5eb6d7a50758ad15f" translate="yes" xml:space="preserve">
          <source>Dynamic loss scaling works by adjusting the loss scale as training progresses. The goal is to keep the loss scale as high as possible without overflowing the gradients. As long as the gradients do not overflow, raising the loss scale never hurts.</source>
          <target state="translated">La escala de pérdida dinámica funciona ajustando la escala de pérdida a medida que el entrenamiento progresa.El objetivo es mantener la escala de pérdidas tan alta como sea posible sin desbordar los gradientes.Mientras los gradientes no se desborden,subir la escala de pérdidas nunca duele.</target>
        </trans-unit>
        <trans-unit id="8036cb63420240722f3fe4f252c9e7f16cf09fb2" translate="yes" xml:space="preserve">
          <source>DynamicPartition</source>
          <target state="translated">DynamicPartition</target>
        </trans-unit>
        <trans-unit id="4894cc7f856dc85cad8a5fec6ef3904d62cdf5f4" translate="yes" xml:space="preserve">
          <source>DynamicStitch</source>
          <target state="translated">DynamicStitch</target>
        </trans-unit>
        <trans-unit id="fa4a7a170f7075560c98a976572cae386b13a240" translate="yes" xml:space="preserve">
          <source>E.g.</source>
          <target state="translated">E.g.</target>
        </trans-unit>
        <trans-unit id="553eb325fbe958c2a5134089156c0c0d30531dbd" translate="yes" xml:space="preserve">
          <source>E.g. 'float16', 'float32', 'float64'.</source>
          <target state="translated">Por ejemplo,&quot;float16&quot;,&quot;float32&quot;,&quot;float64&quot;.</target>
        </trans-unit>
        <trans-unit id="d3c30f7d8e03d15a2b309cfdae4b64a59e955e38" translate="yes" xml:space="preserve">
          <source>E.g. &lt;code&gt;'float16'&lt;/code&gt;, &lt;code&gt;'float32'&lt;/code&gt;, &lt;code&gt;'float64'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b35962744d58a4f3a29a207b905f8bf3e6b32bb" translate="yes" xml:space="preserve">
          <source>E.g. for use with categorical_crossentropy.</source>
          <target state="translated">Por ejemplo,para su uso con categorical_crossentropy.</target>
        </trans-unit>
        <trans-unit id="f07399e21baeb77233b6eed898e333a622f5516e" translate="yes" xml:space="preserve">
          <source>E.g. if applied to a list of two tensors &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; of shape &lt;code&gt;(batch_size, n)&lt;/code&gt;, the output will be a tensor of shape &lt;code&gt;(batch_size, 1)&lt;/code&gt; where each entry &lt;code&gt;i&lt;/code&gt; will be the dot product between &lt;code&gt;a[i]&lt;/code&gt; and &lt;code&gt;b[i]&lt;/code&gt;.</source>
          <target state="translated">Por ejemplo, si se aplica a una lista de dos tensores &lt;code&gt;a&lt;/code&gt; y &lt;code&gt;b&lt;/code&gt; de forma &lt;code&gt;(batch_size, n)&lt;/code&gt; , la salida ser&amp;aacute; un tensor de la forma &lt;code&gt;(batch_size, 1)&lt;/code&gt; donde cada entrada &lt;code&gt;i&lt;/code&gt; ser&amp;aacute; el producto escalar entre &lt;code&gt;a[i]&lt;/code&gt; y &lt;code&gt;b[i]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9e9a9ae577fc05703e91c9c38ac1aa199f5acce8" translate="yes" xml:space="preserve">
          <source>E.g. if your &lt;code&gt;batch_size&lt;/code&gt; is 64 and you use &lt;code&gt;gpus=2&lt;/code&gt;, then we will divide the input into 2 sub-batches of 32 samples, process each sub-batch on one GPU, then return the full batch of 64 processed samples.</source>
          <target state="translated">Por ejemplo, si su &lt;code&gt;batch_size&lt;/code&gt; es 64 y usa &lt;code&gt;gpus=2&lt;/code&gt; , entonces dividiremos la entrada en 2 sub-lotes de 32 muestras, procesaremos cada sub-lote en una GPU y luego devolveremos el lote completo de 64 muestras procesadas.</target>
        </trans-unit>
        <trans-unit id="7a50e4ddce82d1e382c64c27bc1a5097eaaf42ae" translate="yes" xml:space="preserve">
          <source>E.g. the file doesn't exist, or has wrong permissions.</source>
          <target state="translated">Por ejemplo,el archivo no existe,o tiene permisos equivocados.</target>
        </trans-unit>
        <trans-unit id="9ce6b6213f33632a81a05054aa5419039c89636a" translate="yes" xml:space="preserve">
          <source>E.g. var = state_ops._temporary&lt;em&gt;variable([1, 2], types.float&lt;/em&gt;) var_name = var.op.name var = state_ops.assign(var, [[4.0, 5.0]]) var = state_ops.assign_add(var, [[6.0, 7.0]]) final = state_ops._destroy_temporary_variable(var, var_name=var_name)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b56b3fdb05fe66fc4675e13c12200b61fa0385c6" translate="yes" xml:space="preserve">
          <source>E.g., the example given above that maps &lt;code&gt;fn=lambda t: tf.range(t, t + 3)&lt;/code&gt; across &lt;code&gt;elems&lt;/code&gt; could be rewritten more efficiently using vectorized ops:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9656fda095be85a55c47e88f0f2142837377331" translate="yes" xml:space="preserve">
          <source>E.g.:</source>
          <target state="translated">E.g.:</target>
        </trans-unit>
        <trans-unit id="08883fe576df50b0b7d3a4d8dda8f6a63d367c09" translate="yes" xml:space="preserve">
          <source>ELUs have negative values which pushes the mean of the activations closer to zero. Mean activations that are closer to zero enable faster learning as they bring the gradient closer to the natural gradient. ELUs saturate to a negative value when the argument gets smaller. Saturation means a small derivative which decreases the variation and the information that is propagated to the next layer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="087220079a98b1d1823eb02904051957f9c3396d" translate="yes" xml:space="preserve">
          <source>EXPERIMENTAL: A context manager for overriding gradient functions.</source>
          <target state="translated">EXPERIMENTAL:Un gestor de contexto para anular las funciones de gradiente.</target>
        </trans-unit>
        <trans-unit id="244fae62654320ff433d44decdc3be79b3430ab3" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;FixedLenFeature&lt;/code&gt;&lt;code&gt;df&lt;/code&gt; maps to a &lt;code&gt;Tensor&lt;/code&gt; of the specified type (or &lt;a href=&quot;../../../tf#float32&quot;&gt;&lt;code&gt;tf.float32&lt;/code&gt;&lt;/a&gt; if not specified) and shape &lt;code&gt;(serialized.size(),) + df.shape&lt;/code&gt;.</source>
          <target state="translated">Cada &lt;code&gt;FixedLenFeature&lt;/code&gt; &lt;code&gt;df&lt;/code&gt; se asigna a un &lt;code&gt;Tensor&lt;/code&gt; del tipo especificado (o &lt;a href=&quot;../../../tf#float32&quot;&gt; &lt;code&gt;tf.float32&lt;/code&gt; &lt;/a&gt; si no se especifica) y forma &lt;code&gt;(serialized.size(),) + df.shape&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b7df4b10a00470916437516599dfdf8bb1e811a1" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;FixedLenFeature&lt;/code&gt;&lt;code&gt;df&lt;/code&gt; maps to a &lt;code&gt;Tensor&lt;/code&gt; of the specified type (or &lt;a href=&quot;../../tf#float32&quot;&gt;&lt;code&gt;tf.float32&lt;/code&gt;&lt;/a&gt; if not specified) and shape &lt;code&gt;(serialized.size(),) + df.shape&lt;/code&gt;.</source>
          <target state="translated">Cada &lt;code&gt;FixedLenFeature&lt;/code&gt; &lt;code&gt;df&lt;/code&gt; se asigna a un &lt;code&gt;Tensor&lt;/code&gt; del tipo especificado (o &lt;a href=&quot;../../tf#float32&quot;&gt; &lt;code&gt;tf.float32&lt;/code&gt; &lt;/a&gt; si no se especifica) y forma &lt;code&gt;(serialized.size(),) + df.shape&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da7e4d019d3e2860dff98a8cb85154875f07d7fb" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;FixedLenSequenceFeature&lt;/code&gt;&lt;code&gt;df&lt;/code&gt; maps to a &lt;code&gt;Tensor&lt;/code&gt; of the specified type (or &lt;a href=&quot;../../../tf#float32&quot;&gt;&lt;code&gt;tf.float32&lt;/code&gt;&lt;/a&gt; if not specified) and shape &lt;code&gt;(serialized.size(), None) + df.shape&lt;/code&gt;. All examples in &lt;code&gt;serialized&lt;/code&gt; will be padded with &lt;code&gt;default_value&lt;/code&gt; along the second dimension.</source>
          <target state="translated">Cada &lt;code&gt;FixedLenSequenceFeature&lt;/code&gt; &lt;code&gt;df&lt;/code&gt; se asigna a un &lt;code&gt;Tensor&lt;/code&gt; del tipo especificado (o &lt;a href=&quot;../../../tf#float32&quot;&gt; &lt;code&gt;tf.float32&lt;/code&gt; &lt;/a&gt; si no se especifica) y forma &lt;code&gt;(serialized.size(), None) + df.shape&lt;/code&gt; . Todos los ejemplos &lt;code&gt;serialized&lt;/code&gt; se rellenar&amp;aacute;n con &lt;code&gt;default_value&lt;/code&gt; a lo largo de la segunda dimensi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="227990327c0f9190e29f55dcbf4d15fa08ca91bd" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;FixedLenSequenceFeature&lt;/code&gt;&lt;code&gt;df&lt;/code&gt; maps to a &lt;code&gt;Tensor&lt;/code&gt; of the specified type (or &lt;a href=&quot;../../tf#float32&quot;&gt;&lt;code&gt;tf.float32&lt;/code&gt;&lt;/a&gt; if not specified) and shape &lt;code&gt;(serialized.size(), None) + df.shape&lt;/code&gt;. All examples in &lt;code&gt;serialized&lt;/code&gt; will be padded with &lt;code&gt;default_value&lt;/code&gt; along the second dimension.</source>
          <target state="translated">Cada &lt;code&gt;FixedLenSequenceFeature&lt;/code&gt; &lt;code&gt;df&lt;/code&gt; se asigna a un &lt;code&gt;Tensor&lt;/code&gt; del tipo especificado (o &lt;a href=&quot;../../tf#float32&quot;&gt; &lt;code&gt;tf.float32&lt;/code&gt; &lt;/a&gt; si no se especifica) y forma &lt;code&gt;(serialized.size(), None) + df.shape&lt;/code&gt; . Todos los ejemplos &lt;code&gt;serialized&lt;/code&gt; se rellenar&amp;aacute;n con &lt;code&gt;default_value&lt;/code&gt; a lo largo de la segunda dimensi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="5ff4b1e49bfa42b9d26c149bad5739f6cc2aeb05" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;RaggedFeature&lt;/code&gt; maps to a &lt;code&gt;RaggedTensor&lt;/code&gt; of the specified type. It is formed by stacking the &lt;code&gt;RaggedTensor&lt;/code&gt; for each example, where the &lt;code&gt;RaggedTensor&lt;/code&gt; for each individual example is constructed using the tensors specified by &lt;code&gt;RaggedTensor.values_key&lt;/code&gt; and &lt;code&gt;RaggedTensor.partition&lt;/code&gt;. See the &lt;a href=&quot;../../io/raggedfeature&quot;&gt;&lt;code&gt;tf.io.RaggedFeature&lt;/code&gt;&lt;/a&gt; documentation for details and examples.</source>
          <target state="translated">Cada &lt;code&gt;RaggedFeature&lt;/code&gt; se asigna a un &lt;code&gt;RaggedTensor&lt;/code&gt; del tipo especificado. Se forma apilando el &lt;code&gt;RaggedTensor&lt;/code&gt; para cada ejemplo, donde el &lt;code&gt;RaggedTensor&lt;/code&gt; para cada ejemplo individual se construye usando los tensores especificados por &lt;code&gt;RaggedTensor.values_key&lt;/code&gt; y &lt;code&gt;RaggedTensor.partition&lt;/code&gt; . Consulte la documentaci&amp;oacute;n de &lt;a href=&quot;../../io/raggedfeature&quot;&gt; &lt;code&gt;tf.io.RaggedFeature&lt;/code&gt; &lt;/a&gt; para obtener detalles y ejemplos.</target>
        </trans-unit>
        <trans-unit id="8968c019afc90ee635fe7107260ce001e1786670" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;RaggedFeature&lt;/code&gt; maps to a &lt;code&gt;RaggedTensor&lt;/code&gt; of the specified type. It is formed by stacking the &lt;code&gt;RaggedTensor&lt;/code&gt; for each example, where the &lt;code&gt;RaggedTensor&lt;/code&gt; for each individual example is constructed using the tensors specified by &lt;code&gt;RaggedTensor.values_key&lt;/code&gt; and &lt;code&gt;RaggedTensor.partition&lt;/code&gt;. See the &lt;a href=&quot;raggedfeature&quot;&gt;&lt;code&gt;tf.io.RaggedFeature&lt;/code&gt;&lt;/a&gt; documentation for details and examples.</source>
          <target state="translated">Cada &lt;code&gt;RaggedFeature&lt;/code&gt; se asigna a un &lt;code&gt;RaggedTensor&lt;/code&gt; del tipo especificado. Se forma apilando el &lt;code&gt;RaggedTensor&lt;/code&gt; para cada ejemplo, donde el &lt;code&gt;RaggedTensor&lt;/code&gt; para cada ejemplo individual se construye usando los tensores especificados por &lt;code&gt;RaggedTensor.values_key&lt;/code&gt; y &lt;code&gt;RaggedTensor.partition&lt;/code&gt; . Consulte la documentaci&amp;oacute;n de &lt;a href=&quot;raggedfeature&quot;&gt; &lt;code&gt;tf.io.RaggedFeature&lt;/code&gt; &lt;/a&gt; para obtener detalles y ejemplos.</target>
        </trans-unit>
        <trans-unit id="dc0e95cd9937e083aa36c1610babea4271ff0514" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;SparseFeature&lt;/code&gt; maps to a &lt;code&gt;SparseTensor&lt;/code&gt; of the specified type representing a Tensor of &lt;code&gt;dense_shape&lt;/code&gt;&lt;code&gt;[batch_size] + SparseFeature.size&lt;/code&gt;. Its &lt;code&gt;values&lt;/code&gt; come from the feature in the examples with key &lt;code&gt;value_key&lt;/code&gt;. A &lt;code&gt;values[i]&lt;/code&gt; comes from a position &lt;code&gt;k&lt;/code&gt; in the feature of an example at batch entry &lt;code&gt;batch&lt;/code&gt;. This positional information is recorded in &lt;code&gt;indices[i]&lt;/code&gt; as &lt;code&gt;[batch, index_0, index_1, ...]&lt;/code&gt; where &lt;code&gt;index_j&lt;/code&gt; is the &lt;code&gt;k-th&lt;/code&gt; value of the feature in the example at with key &lt;a href=&quot;../../io/sparsefeature#index_key&quot;&gt;&lt;code&gt;SparseFeature.index_key[j]&lt;/code&gt;&lt;/a&gt;. In other words, we split the indices (except the first index indicating the batch entry) of a &lt;code&gt;SparseTensor&lt;/code&gt; by dimension into different features of the &lt;code&gt;Example&lt;/code&gt;. Due to its complexity a &lt;code&gt;VarLenFeature&lt;/code&gt; should be preferred over a &lt;code&gt;SparseFeature&lt;/code&gt; whenever possible.</source>
          <target state="translated">Cada &lt;code&gt;SparseFeature&lt;/code&gt; se asigna a un &lt;code&gt;SparseTensor&lt;/code&gt; del tipo especificado que representa un Tensor de &lt;code&gt;dense_shape&lt;/code&gt; &lt;code&gt;[batch_size] + SparseFeature.size&lt;/code&gt; . Sus &lt;code&gt;values&lt;/code&gt; provienen de la caracter&amp;iacute;stica en los ejemplos con clave &lt;code&gt;value_key&lt;/code&gt; . Un &lt;code&gt;values[i]&lt;/code&gt; proviene de una posici&amp;oacute;n &lt;code&gt;k&lt;/code&gt; en la caracter&amp;iacute;stica de un ejemplo en el lote de entrada de &lt;code&gt;batch&lt;/code&gt; . Esta informaci&amp;oacute;n posicional se registra en &lt;code&gt;indices[i]&lt;/code&gt; como &lt;code&gt;[batch, index_0, index_1, ...]&lt;/code&gt; donde &lt;code&gt;index_j&lt;/code&gt; es el &lt;code&gt;k-th&lt;/code&gt; valor de la caracter&amp;iacute;stica en el ejemplo en con clave &lt;a href=&quot;../../io/sparsefeature#index_key&quot;&gt; &lt;code&gt;SparseFeature.index_key[j]&lt;/code&gt; &lt;/a&gt;. En otras palabras, dividimos los &amp;iacute;ndices (excepto el primer &amp;iacute;ndice que indica la entrada del lote) de un &lt;code&gt;SparseTensor&lt;/code&gt; por dimensi&amp;oacute;n en diferentes caracter&amp;iacute;sticas del &lt;code&gt;Example&lt;/code&gt; . Debido a su complejidad una &lt;code&gt;VarLenFeature&lt;/code&gt; se prefiere en un &lt;code&gt;SparseFeature&lt;/code&gt; siempre que sea posible.</target>
        </trans-unit>
        <trans-unit id="20445b8511d480f26ea72e773e616bd8d567d165" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;SparseFeature&lt;/code&gt; maps to a &lt;code&gt;SparseTensor&lt;/code&gt; of the specified type representing a Tensor of &lt;code&gt;dense_shape&lt;/code&gt;&lt;code&gt;[batch_size] + SparseFeature.size&lt;/code&gt;. Its &lt;code&gt;values&lt;/code&gt; come from the feature in the examples with key &lt;code&gt;value_key&lt;/code&gt;. A &lt;code&gt;values[i]&lt;/code&gt; comes from a position &lt;code&gt;k&lt;/code&gt; in the feature of an example at batch entry &lt;code&gt;batch&lt;/code&gt;. This positional information is recorded in &lt;code&gt;indices[i]&lt;/code&gt; as &lt;code&gt;[batch, index_0, index_1, ...]&lt;/code&gt; where &lt;code&gt;index_j&lt;/code&gt; is the &lt;code&gt;k-th&lt;/code&gt; value of the feature in the example at with key &lt;a href=&quot;https://www.tensorflow.org/api_docs/python/tf/io/SparseFeature#index_key&quot;&gt;&lt;code&gt;SparseFeature.index_key[j]&lt;/code&gt;&lt;/a&gt;. In other words, we split the indices (except the first index indicating the batch entry) of a &lt;code&gt;SparseTensor&lt;/code&gt; by dimension into different features of the &lt;code&gt;Example&lt;/code&gt;. Due to its complexity a &lt;code&gt;VarLenFeature&lt;/code&gt; should be preferred over a &lt;code&gt;SparseFeature&lt;/code&gt; whenever possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0f213d9552e1c0b7750efae44b94f6e3a054d5" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;SparseFeature&lt;/code&gt; maps to a &lt;code&gt;SparseTensor&lt;/code&gt; of the specified type representing a Tensor of &lt;code&gt;dense_shape&lt;/code&gt;&lt;code&gt;[batch_size] + SparseFeature.size&lt;/code&gt;. Its &lt;code&gt;values&lt;/code&gt; come from the feature in the examples with key &lt;code&gt;value_key&lt;/code&gt;. A &lt;code&gt;values[i]&lt;/code&gt; comes from a position &lt;code&gt;k&lt;/code&gt; in the feature of an example at batch entry &lt;code&gt;batch&lt;/code&gt;. This positional information is recorded in &lt;code&gt;indices[i]&lt;/code&gt; as &lt;code&gt;[batch, index_0, index_1, ...]&lt;/code&gt; where &lt;code&gt;index_j&lt;/code&gt; is the &lt;code&gt;k-th&lt;/code&gt; value of the feature in the example at with key &lt;a href=&quot;sparsefeature#index_key&quot;&gt;&lt;code&gt;SparseFeature.index_key[j]&lt;/code&gt;&lt;/a&gt;. In other words, we split the indices (except the first index indicating the batch entry) of a &lt;code&gt;SparseTensor&lt;/code&gt; by dimension into different features of the &lt;code&gt;Example&lt;/code&gt;. Due to its complexity a &lt;code&gt;VarLenFeature&lt;/code&gt; should be preferred over a &lt;code&gt;SparseFeature&lt;/code&gt; whenever possible.</source>
          <target state="translated">Cada &lt;code&gt;SparseFeature&lt;/code&gt; se asigna a un &lt;code&gt;SparseTensor&lt;/code&gt; del tipo especificado que representa un Tensor de &lt;code&gt;dense_shape&lt;/code&gt; &lt;code&gt;[batch_size] + SparseFeature.size&lt;/code&gt; . Sus &lt;code&gt;values&lt;/code&gt; provienen de la caracter&amp;iacute;stica en los ejemplos con clave &lt;code&gt;value_key&lt;/code&gt; . Un &lt;code&gt;values[i]&lt;/code&gt; proviene de una posici&amp;oacute;n &lt;code&gt;k&lt;/code&gt; en la caracter&amp;iacute;stica de un ejemplo en el lote de entrada de &lt;code&gt;batch&lt;/code&gt; . Esta informaci&amp;oacute;n posicional se registra en &lt;code&gt;indices[i]&lt;/code&gt; como &lt;code&gt;[batch, index_0, index_1, ...]&lt;/code&gt; donde &lt;code&gt;index_j&lt;/code&gt; es el &lt;code&gt;k-th&lt;/code&gt; valor de la caracter&amp;iacute;stica en el ejemplo en con clave &lt;a href=&quot;sparsefeature#index_key&quot;&gt; &lt;code&gt;SparseFeature.index_key[j]&lt;/code&gt; &lt;/a&gt;. En otras palabras, dividimos los &amp;iacute;ndices (excepto el primer &amp;iacute;ndice que indica la entrada del lote) de un &lt;code&gt;SparseTensor&lt;/code&gt; por dimensi&amp;oacute;n en diferentes caracter&amp;iacute;sticas del &lt;code&gt;Example&lt;/code&gt; . Debido a su complejidad una &lt;code&gt;VarLenFeature&lt;/code&gt; se prefiere en un &lt;code&gt;SparseFeature&lt;/code&gt; siempre que sea posible.</target>
        </trans-unit>
        <trans-unit id="4db2f7c49d4f1060f145f5df05f3ac3f70dc51a7" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;SparseTensor&lt;/code&gt; corresponding to &lt;code&gt;sequence_features&lt;/code&gt; represents a ragged vector. Its indices are &lt;code&gt;[time, index]&lt;/code&gt;, where &lt;code&gt;time&lt;/code&gt; is the &lt;code&gt;FeatureList&lt;/code&gt; entry and &lt;code&gt;index&lt;/code&gt; is the value's index in the list of values associated with that time.</source>
          <target state="translated">Cada &lt;code&gt;SparseTensor&lt;/code&gt; correspondiente a &lt;code&gt;sequence_features&lt;/code&gt; representa un vector irregular. Sus &amp;iacute;ndices son &lt;code&gt;[time, index]&lt;/code&gt; , donde &lt;code&gt;time&lt;/code&gt; es la entrada &lt;code&gt;FeatureList&lt;/code&gt; e &lt;code&gt;index&lt;/code&gt; es el &amp;iacute;ndice del valor en la lista de valores asociados con ese tiempo.</target>
        </trans-unit>
        <trans-unit id="0e6b6726eed1f881ece79a8557b7490a3a12373d" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;VarLenFeature&lt;/code&gt; maps to a &lt;code&gt;SparseTensor&lt;/code&gt; of the specified type representing a ragged matrix. Its indices are &lt;code&gt;[batch, index]&lt;/code&gt; where &lt;code&gt;batch&lt;/code&gt; identifies the example in &lt;code&gt;serialized&lt;/code&gt;, and &lt;code&gt;index&lt;/code&gt; is the value's index in the list of values associated with that feature and example.</source>
          <target state="translated">Cada &lt;code&gt;VarLenFeature&lt;/code&gt; se asigna a un &lt;code&gt;SparseTensor&lt;/code&gt; del tipo especificado que representa una matriz irregular. Sus &amp;iacute;ndices son &lt;code&gt;[batch, index]&lt;/code&gt; donde &lt;code&gt;batch&lt;/code&gt; identifica el ejemplo en &lt;code&gt;serialized&lt;/code&gt; , e &lt;code&gt;index&lt;/code&gt; es el &amp;iacute;ndice del valor en la lista de valores asociados con esa caracter&amp;iacute;stica y ejemplo.</target>
        </trans-unit>
        <trans-unit id="f1bc576f02c202f427e41cb41858ad752ac7548f" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;data[i].shape&lt;/code&gt; must start with the corresponding &lt;code&gt;indices[i].shape&lt;/code&gt;, and the rest of &lt;code&gt;data[i].shape&lt;/code&gt; must be constant w.r.t. &lt;code&gt;i&lt;/code&gt;. That is, we must have &lt;code&gt;data[i].shape = indices[i].shape + constant&lt;/code&gt;. In terms of this &lt;code&gt;constant&lt;/code&gt;, the output shape is</source>
          <target state="translated">Cada &lt;code&gt;data[i].shape&lt;/code&gt; debe comenzar con los &lt;code&gt;indices[i].shape&lt;/code&gt; correspondientes [i] .forma , y el resto de &lt;code&gt;data[i].shape&lt;/code&gt; debe ser constante wrt &lt;code&gt;i&lt;/code&gt; . Es decir, debemos tener &lt;code&gt;data[i].shape = indices[i].shape + constant&lt;/code&gt; . En t&amp;eacute;rminos de esta &lt;code&gt;constant&lt;/code&gt; e , la forma de salida es</target>
        </trans-unit>
        <trans-unit id="9918d15a3b50a9df8c8da4f16dfbf38a0b690d2a" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;op_jj&lt;/code&gt; on the diagonal is required to represent a square matrix, and hence will have shape &lt;code&gt;batch_shape_j + [M_j, M_j]&lt;/code&gt;. &lt;code&gt;LinearOperator&lt;/code&gt;s in row &lt;code&gt;j&lt;/code&gt; of the blockwise structure must have &lt;code&gt;range_dimension&lt;/code&gt; equal to that of &lt;code&gt;op_jj&lt;/code&gt;, and &lt;code&gt;LinearOperators&lt;/code&gt; in column &lt;code&gt;j&lt;/code&gt; must have &lt;code&gt;domain_dimension&lt;/code&gt; equal to that of &lt;code&gt;op_jj&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e89ddb81cecdb78c46e47a25c2243e84460594e3" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;opj&lt;/code&gt; is required to represent a square matrix, and hence will have shape &lt;code&gt;batch_shape_j + [M_j, M_j]&lt;/code&gt;.</source>
          <target state="translated">Se requiere que cada &lt;code&gt;opj&lt;/code&gt; represente una matriz cuadrada, y por lo tanto tendr&amp;aacute; forma &lt;code&gt;batch_shape_j + [M_j, M_j]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="be00db719d1ddeffb3b52a4e144efe9293d8f3f3" translate="yes" xml:space="preserve">
          <source>Each accumulator averages once enough gradients (replicas_to_aggregate) have been accumulated.</source>
          <target state="translated">Cada acumulador promedia una vez que se han acumulado suficientes gradientes (réplicas_para_agregarse).</target>
        </trans-unit>
        <trans-unit id="441cc16d923fb9e6899572323e898557206ab000" translate="yes" xml:space="preserve">
          <source>Each batch component of the output permutation represents a permutation of &lt;code&gt;N&lt;/code&gt; elements, where the input sparse matrix components each have &lt;code&gt;N&lt;/code&gt; rows. That is, the component contains each of the integers &lt;code&gt;{0, .. N-1}&lt;/code&gt; exactly once. The &lt;code&gt;i&lt;/code&gt;th element represents the row index that the &lt;code&gt;i&lt;/code&gt;th row maps to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60c1de68d7fc0e0b85125dfe0bb3e6024c8a2fef" translate="yes" xml:space="preserve">
          <source>Each bin value in the output indicates number of occurrences of the particular index. Here, index 1 in output has a value 2. This indicates value 1 occurs two times in &lt;code&gt;values&lt;/code&gt;.</source>
          <target state="translated">Cada valor de intervalo en la salida indica el n&amp;uacute;mero de apariciones del &amp;iacute;ndice en particular. Aqu&amp;iacute;, el &amp;iacute;ndice 1 en la salida tiene un valor 2. Esto indica que el valor 1 ocurre dos veces en los &lt;code&gt;values&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="46a35ac5d392d8a4c5717e0c79a99d2ec77af715" translate="yes" xml:space="preserve">
          <source>Each comparison returns a boolean &lt;code&gt;true&lt;/code&gt; (if &lt;code&gt;input_value &amp;gt; threshold&lt;/code&gt;) or and &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca410c02aafe78f19d5f192ccdac3dcb53dfc437" translate="yes" xml:space="preserve">
          <source>Each component of the input sparse matrix must represent a square symmetric matrix; only the lower triangular part of the matrix is read. The values of the sparse matrix does not affect the returned permutation, only the sparsity pattern of the sparse matrix is used. Hence, a single AMD ordering may be reused for the Cholesky decompositions of sparse matrices with the same sparsity pattern but with possibly different values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5077956249be3e57d44f61a973c84229d1b44c4f" translate="yes" xml:space="preserve">
          <source>Each component of the input sparse matrix must represent a symmetric positive definite (SPD) matrix; although only the lower triangular part of the matrix is read. If any individual component is not SPD, then an InvalidArgument error is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6712c61f3c9c472a7796d2e229fbb1c47ce399bd" translate="yes" xml:space="preserve">
          <source>Each conceptual range specification is encoded in the op's argument. This encoding is best understand by considering a non-trivial example. In particular, &lt;code&gt;foo[1, 2:4, None, ..., :-3:-1, :]&lt;/code&gt; will be encoded as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fd67b0ec0b49f6ce7d82128e4a2712babeef4ea" translate="yes" xml:space="preserve">
          <source>Each element in the list has the following properties</source>
          <target state="translated">Cada elemento de la lista tiene las siguientes propiedades</target>
        </trans-unit>
        <trans-unit id="c87a6f35b5ba769325830ea659978838364ed0c5" translate="yes" xml:space="preserve">
          <source>Each element of the input Tensor is converted to an array of bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eff09768619dd4cfe4a6371293c28c087e9bbff" translate="yes" xml:space="preserve">
          <source>Each entry in &lt;code&gt;output&lt;/code&gt; is the mean of the corresponding size &lt;code&gt;ksize&lt;/code&gt; window in &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">Cada entrada en &lt;code&gt;output&lt;/code&gt; es la media de tama&amp;ntilde;o correspondiente &lt;code&gt;ksize&lt;/code&gt; ventana en &lt;code&gt;value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ea831f12c1ec3212d288941d3c8bcb421edfe2df" translate="yes" xml:space="preserve">
          <source>Each instance supplies its own input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b43a986e9580b1bf352d7fdac828cc905e217997" translate="yes" xml:space="preserve">
          <source>Each invocation of batch emits an &lt;code&gt;id&lt;/code&gt; scalar which will be used to identify this particular invocation when doing unbatch or its gradient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caa1a6302073ad781167a8cd550ee605d20a64a5" translate="yes" xml:space="preserve">
          <source>Each item in texts can also be a list, in which case we assume each item of that list to be a token.</source>
          <target state="translated">Cada elemento de los textos también puede ser una lista,en cuyo caso asumimos que cada elemento de esa lista es una ficha.</target>
        </trans-unit>
        <trans-unit id="7ef25610b63ee3daa8cb47e92bed65b82174f660" translate="yes" xml:space="preserve">
          <source>Each job may also be specified as a sparse mapping from task indices to network addresses. This enables a server to be configured without needing to know the identity of (for example) all other worker tasks:</source>
          <target state="translated">Cada trabajo también puede ser especificado como un mapeo disperso desde los índices de tareas hasta las direcciones de red.Esto permite configurar un servidor sin necesidad de conocer la identidad de (por ejemplo)todas las demás tareas del trabajador:</target>
        </trans-unit>
        <trans-unit id="1cdb23ee45a94e6a87da472c4a1c6f6fa240b0c1" translate="yes" xml:space="preserve">
          <source>Each layer has a dtype, which is typically the dtype of the layer's computations and variables. A layer's dtype can be queried via the &lt;a href=&quot;layer#dtype&quot;&gt;&lt;code&gt;Layer.dtype&lt;/code&gt;&lt;/a&gt; property. The dtype is specified with the &lt;code&gt;dtype&lt;/code&gt; constructor argument. In TensorFlow 2, the dtype defaults to &lt;a href=&quot;../backend/floatx&quot;&gt;&lt;code&gt;tf.keras.backend.floatx()&lt;/code&gt;&lt;/a&gt; if no dtype is passed. &lt;code&gt;floatx()&lt;/code&gt; itself defaults to &quot;float32&quot;. Additionally, layers will cast their inputs to the layer's dtype in TensorFlow 2. When mixed precision is used, layers may have different computation and variable dtypes. See &lt;a href=&quot;../mixed_precision/experimental/policy&quot;&gt;&lt;code&gt;tf.keras.mixed_precision.experimental.Policy&lt;/code&gt;&lt;/a&gt; for details on layer dtypes.</source>
          <target state="translated">Cada capa tiene un dtype, que suele ser el dtype de los c&amp;aacute;lculos y las variables de la capa. El dtype de una capa se puede consultar mediante la propiedad &lt;a href=&quot;layer#dtype&quot;&gt; &lt;code&gt;Layer.dtype&lt;/code&gt; &lt;/a&gt; . El dtype se especifica con el argumento del constructor &lt;code&gt;dtype&lt;/code&gt; . En TensorFlow 2, el dtype tiene como valor predeterminado &lt;a href=&quot;../backend/floatx&quot;&gt; &lt;code&gt;tf.keras.backend.floatx()&lt;/code&gt; &lt;/a&gt; si no se pasa ning&amp;uacute;n dtype. &lt;code&gt;floatx()&lt;/code&gt; por defecto es &quot;float32&quot;. Adem&amp;aacute;s, las capas enviar&amp;aacute;n sus entradas al tipo d de la capa en TensorFlow 2. Cuando se usa precisi&amp;oacute;n mixta, las capas pueden tener diferentes tipos de c&amp;aacute;lculo y variables. Consulte &lt;a href=&quot;../mixed_precision/experimental/policy&quot;&gt; &lt;code&gt;tf.keras.mixed_precision.experimental.Policy&lt;/code&gt; &lt;/a&gt; para obtener detalles sobre los tipos de capas.</target>
        </trans-unit>
        <trans-unit id="bb6241a556989afbd18759ec55fc7521c7320211" translate="yes" xml:space="preserve">
          <source>Each matrix may be transposed or adjointed (conjugated and transposed) according to the Boolean parameters &lt;code&gt;transpose_a&lt;/code&gt;, &lt;code&gt;adjoint_a&lt;/code&gt;, &lt;code&gt;transpose_b&lt;/code&gt; and &lt;code&gt;adjoint_b&lt;/code&gt;. At most one of &lt;code&gt;transpose_a&lt;/code&gt; or &lt;code&gt;adjoint_a&lt;/code&gt; may be True. Similarly, at most one of &lt;code&gt;transpose_b&lt;/code&gt; or &lt;code&gt;adjoint_b&lt;/code&gt; may be True.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea3e9548de72147ce2c10db7ff80fccfc964f054" translate="yes" xml:space="preserve">
          <source>Each member of the TensorList corresponds to one row of the input tensor, specified by the given index (see &lt;a href=&quot;../gather&quot;&gt;&lt;code&gt;tf.gather&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58a436999bdcc841459f2d09c5dee0a8dc7aeb18" translate="yes" xml:space="preserve">
          <source>Each meta graph added to the SavedModel must be annotated with tags. The tags provide a means to identify the specific meta graph to load and restore, along with the shared set of variables and assets.</source>
          <target state="translated">Cada meta gráfica añadida al SavedModel debe ser anotada con etiquetas.Las etiquetas proporcionan un medio para identificar el meta gráfico específico para cargar y restaurar,junto con el conjunto compartido de variables y activos.</target>
        </trans-unit>
        <trans-unit id="4069de9e0766e0eb24cc7204db2911acde8497f0" translate="yes" xml:space="preserve">
          <source>Each newswire is encoded as a list of word indexes (integers). For convenience, words are indexed by overall frequency in the dataset, so that for instance the integer &quot;3&quot; encodes the 3rd most frequent word in the data. This allows for quick filtering operations such as: &quot;only consider the top 10,000 most common words, but eliminate the top 20 most common words&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7ac48be6c56c94160a763562ebfbaed8ade1b51" translate="yes" xml:space="preserve">
          <source>Each op which emits a non-empty batch will also emit a non-empty batch_index Tensor, which, is a [K, 3] matrix where each row contains the invocation's id, start, and length of elements of each set of Tensors present in batched_tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ec5ef88be1db2fa1a95ac0325a1bf99f771c0ac" translate="yes" xml:space="preserve">
          <source>Each output element consists of a key-value pair represented as a pair of scalar string &lt;code&gt;Tensor&lt;/code&gt;s, where the first &lt;code&gt;Tensor&lt;/code&gt; contains the key and the second &lt;code&gt;Tensor&lt;/code&gt; contains the value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76d446cb40035fb845f01a6f1a77eaf839d593c4" translate="yes" xml:space="preserve">
          <source>Each output patch can be reshaped to &lt;code&gt;sizes[1], sizes[2], depth&lt;/code&gt;, where &lt;code&gt;depth&lt;/code&gt; is &lt;code&gt;images.shape[3]&lt;/code&gt;.</source>
          <target state="translated">Cada parche de salida se puede remodelar a &lt;code&gt;sizes[1], sizes[2], depth&lt;/code&gt; , donde la &lt;code&gt;depth&lt;/code&gt; es &lt;code&gt;images.shape[3]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c97cdddb81cdc590bd76534c8b39698ca73775c8" translate="yes" xml:space="preserve">
          <source>Each output pixel is computed by first transforming the pixel's footprint into the input tensor and then averaging the pixels that intersect the footprint. An input pixel's contribution to the average is weighted by the fraction of its area that intersects the footprint. This is the same as OpenCV's INTER_AREA.</source>
          <target state="translated">Cada píxel de salida se calcula transformando primero la huella del píxel en el tensor de entrada y luego promediando los píxeles que intersectan la huella.La contribución de un píxel de entrada al promedio se pondera por la fracción de su área que intersecta la huella.Esto es lo mismo que el INTER_ÁREA de OpenCV.</target>
        </trans-unit>
        <trans-unit id="64b34b561d406bfd771adf13970772919b62c25d" translate="yes" xml:space="preserve">
          <source>Each output tensor is a dense tensor. This means that it is padded to hold the largest number of repeated elements seen in the input minibatch. (The shape is also padded by one to prevent zero-sized dimensions). The actual repeat counts for each example in the minibatch can be found in the &lt;code&gt;sizes&lt;/code&gt; output. In many cases the output of &lt;code&gt;decode_proto&lt;/code&gt; is fed immediately into tf.squeeze if missing values are not a concern. When using tf.squeeze, always pass the squeeze dimension explicitly to avoid surprises.</source>
          <target state="translated">Cada tensor de salida es un tensor denso. Esto significa que est&amp;aacute; acolchado para contener la mayor cantidad de elementos repetidos que se ven en el minibatch de entrada. (La forma tambi&amp;eacute;n est&amp;aacute; acolchada por uno para evitar dimensiones de tama&amp;ntilde;o cero). Los recuentos de repeticiones reales para cada ejemplo en el minibatch se pueden encontrar en la salida de &lt;code&gt;sizes&lt;/code&gt; . En muchos casos, la salida de &lt;code&gt;decode_proto&lt;/code&gt; se alimenta inmediatamente a tf.squeeze si los valores perdidos no son una preocupaci&amp;oacute;n. Cuando utilice tf.squeeze, pase siempre la dimensi&amp;oacute;n de compresi&amp;oacute;n expl&amp;iacute;citamente para evitar sorpresas.</target>
        </trans-unit>
        <trans-unit id="e6c91b6c2633362632f841c1ccb66bafe6332463" translate="yes" xml:space="preserve">
          <source>Each queue element is a tuple of one or more tensors, where each tuple component has a static dtype, and may have a static shape. The queue implementations support versions of enqueue and dequeue that handle single elements, versions that support enqueuing and dequeuing a batch of elements at once.</source>
          <target state="translated">Cada elemento de la cola es una tupla de uno o más tensores,donde cada componente de la tupla tiene un tipo de estática,y puede tener una forma estática.Las implementaciones de colas soportan versiones de cola y de cola que manejan elementos individuales,versiones que soportan la cola y la cola de un lote de elementos a la vez.</target>
        </trans-unit>
        <trans-unit id="551331f0073d6068b977b29fa7d823f6b93a3a5c" translate="yes" xml:space="preserve">
          <source>Each replica will take a single, different input from the inputs provided by one &lt;code&gt;get_next&lt;/code&gt; call on the input iterator.</source>
          <target state="translated">Cada r&amp;eacute;plica tomar&amp;aacute; una entrada &amp;uacute;nica y diferente de las entradas proporcionadas por una llamada &lt;code&gt;get_next&lt;/code&gt; en el iterador de entrada.</target>
        </trans-unit>
        <trans-unit id="7f72f560c3d5b91e9a45405fd49d9679f5bbf4a3" translate="yes" xml:space="preserve">
          <source>Each row in the produced Tensor corresponds to the element in the TensorList specified by the given index (see &lt;a href=&quot;../gather&quot;&gt;&lt;code&gt;tf.gather&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5901818bcf4a21a5306c5bc783179fa30627b69" translate="yes" xml:space="preserve">
          <source>Each row of the &lt;code&gt;output&lt;/code&gt;&lt;code&gt;RaggedTensor&lt;/code&gt; will contain the explicit values from the same row in &lt;code&gt;st_input&lt;/code&gt;. &lt;code&gt;st_input&lt;/code&gt; must be ragged-right. If not it is not ragged-right, then an error will be generated.</source>
          <target state="translated">Cada fila del &lt;code&gt;RaggedTensor&lt;/code&gt; de &lt;code&gt;output&lt;/code&gt; contendr&amp;aacute; los valores expl&amp;iacute;citos de la misma fila en &lt;code&gt;st_input&lt;/code&gt; . &lt;code&gt;st_input&lt;/code&gt; debe ser irregular a la derecha. Si no es correcto, se generar&amp;aacute; un error.</target>
        </trans-unit>
        <trans-unit id="c216ccaa4d6eb31eeeeece9b91a97e7a2a1c5560" translate="yes" xml:space="preserve">
          <source>Each row of the returned &lt;code&gt;RaggedTensor&lt;/code&gt; contains a single sequence:</source>
          <target state="translated">Cada fila del &lt;code&gt;RaggedTensor&lt;/code&gt; devuelto contiene una sola secuencia:</target>
        </trans-unit>
        <trans-unit id="17e3eb7d39e837af72f23c35fc67b178925d530b" translate="yes" xml:space="preserve">
          <source>Each sequence has to a list of integers. In other words, sequences should be a list of sequences</source>
          <target state="translated">Cada secuencia tiene una lista de números enteros.En otras palabras,las secuencias deben ser una lista de secuencias</target>
        </trans-unit>
        <trans-unit id="4e7b8ab60e2411c388ca12cf758dfa5c1a65a3f3" translate="yes" xml:space="preserve">
          <source>Each set of rows with the same index in (sorted_inputs, values) is treated independently. The resulting row is the equivalent of calling &lt;code&gt;np.searchsorted(sorted_inputs, values, side='left')&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05bc0c4c8fa961e5c50c549ca608b718db80c7b0" translate="yes" xml:space="preserve">
          <source>Each set of rows with the same index in (sorted_inputs, values) is treated independently. The resulting row is the equivalent of calling &lt;code&gt;np.searchsorted(sorted_inputs, values, side='right')&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4a4d7a3191432c4f1d74ce9050f003924f736da" translate="yes" xml:space="preserve">
          <source>Each tensor in the result list corresponds to one row of the input tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ea291be19a509a559a73149b95c038a31edc72b" translate="yes" xml:space="preserve">
          <source>Each valid line in this file (which should have a CSV-like format) corresponds to a valid word ID. IDs are in sequential order, starting from num_reserved_ids. The last entry in each line is expected to be a value corresponding to the count or relative probability. Exactly one of &lt;code&gt;vocab_file&lt;/code&gt; and &lt;code&gt;unigrams&lt;/code&gt; needs to be passed to this operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8e3878678f2b0a73d6ce75df8834a154d82279a" translate="yes" xml:space="preserve">
          <source>Each value in &lt;code&gt;feed_dict&lt;/code&gt; must be convertible to a numpy array of the dtype of the corresponding key.</source>
          <target state="translated">Cada valor en &lt;code&gt;feed_dict&lt;/code&gt; debe ser convertible en una matriz numerosa del tipo d de la clave correspondiente.</target>
        </trans-unit>
        <trans-unit id="1eddebe67f51e2e98765c6c9e0fd906261da9314" translate="yes" xml:space="preserve">
          <source>Each value in the result represents the square root of the sum of the real and imaginary parts of an FFT on the current window of samples. In this way, the lowest dimension represents the power of each frequency in the current window, and adjacent windows are concatenated in the next dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fef5c634fcde75fa5e28df6cc454787267bb471" translate="yes" xml:space="preserve">
          <source>Each vector along the class dimension should hold a valid probability distribution e.g. for the case in which labels are of shape &lt;code&gt;[batch_size, num_classes]&lt;/code&gt;, each row of &lt;code&gt;labels[i]&lt;/code&gt; must be a valid probability distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e1e4d53433d9039c46f4248ad092a43c3a14839" translate="yes" xml:space="preserve">
          <source>Each vector is handled independently. The &lt;code&gt;axis&lt;/code&gt; argument sets which axis of the input the finction is applied along.</source>
          <target state="translated">Cada vector se maneja de forma independiente. El argumento del &lt;code&gt;axis&lt;/code&gt; establece en qu&amp;eacute; eje de la entrada se aplica la funci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="29c1fe6a6572e141688b5c7bca927a840cc3db38" translate="yes" xml:space="preserve">
          <source>Each vector is handled independently. The &lt;code&gt;axis&lt;/code&gt; argument sets which axis of the input the function is applied along.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e0468f80c3414aaba1c31f9343982b0cf7d54f2" translate="yes" xml:space="preserve">
          <source>Each yield is a 3-tuple: the pathname of a directory, followed by lists of all its subdirectories and leaf files. That is, each yield looks like: &lt;code&gt;(dirname, [subdirname, subdirname, ...], [filename, filename, ...])&lt;/code&gt;. Each item is a string.</source>
          <target state="translated">Cada rendimiento es una tupla de 3: el nombre de ruta de un directorio, seguido de listas de todos sus subdirectorios y archivos hoja. Es decir, cada rendimiento se ve as&amp;iacute;: &lt;code&gt;(dirname, [subdirname, subdirname, ...], [filename, filename, ...])&lt;/code&gt; . Cada art&amp;iacute;culo es una cadena.</target>
        </trans-unit>
        <trans-unit id="7f50bc776ee8ac768be6f39d5bf960f531e28e50" translate="yes" xml:space="preserve">
          <source>Eager Compatibility</source>
          <target state="translated">Compatibilidad ansiosa</target>
        </trans-unit>
        <trans-unit id="47417439c687992a16b5c56566761d74801e7f76" translate="yes" xml:space="preserve">
          <source>Eager defined functions are functions decorated by tf.contrib.eager.defun.</source>
          <target state="translated">Las funciones definidas por Eager son funciones decoradas por tf.contrib.eager.defun.</target>
        </trans-unit>
        <trans-unit id="2b122e79faaa952b4168aa1fa16fa8a264711947" translate="yes" xml:space="preserve">
          <source>Eager execution</source>
          <target state="translated">Una ejecución ansiosa...</target>
        </trans-unit>
        <trans-unit id="26da12bbabc651ef3fa4d97385bc838c93cbbb88" translate="yes" xml:space="preserve">
          <source>Eager execution cannot be enabled after TensorFlow APIs have been used to create or execute graphs. It is typically recommended to invoke this function at program startup and not in a library (as most libraries should be usable both with and without eager execution).</source>
          <target state="translated">La ejecución ansiosa no puede ser habilitada después de que las APIs de TensorFlow han sido utilizadas para crear o ejecutar gráficos.Se recomienda típicamente invocar esta función al inicio del programa y no en una biblioteca (ya que la mayoría de las bibliotecas deberían ser utilizables tanto con como sin la ejecución de Eager).</target>
        </trans-unit>
        <trans-unit id="ea4653faaf8b5c79819a2ca1f3ed18364e2ccc26" translate="yes" xml:space="preserve">
          <source>Eager execution is enabled by default and this API returns &lt;code&gt;True&lt;/code&gt; in most of cases. However, this API might return &lt;code&gt;False&lt;/code&gt; in the following use cases.</source>
          <target state="translated">La ejecuci&amp;oacute;n &amp;aacute;vida est&amp;aacute; habilitada de forma predeterminada y esta API devuelve &lt;code&gt;True&lt;/code&gt; en la mayor&amp;iacute;a de los casos. Sin embargo, esta API puede devolver &lt;code&gt;False&lt;/code&gt; en los siguientes casos de uso.</target>
        </trans-unit>
        <trans-unit id="457086cec84666e014a19f01e4250cd0d71041e6" translate="yes" xml:space="preserve">
          <source>Eager execution is enabled in the outermost context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d26f61db0485b6d7b42588dcdd8a60acfb62a2" translate="yes" xml:space="preserve">
          <source>Eager execution is typically enabled via &lt;a href=&quot;enable_eager_execution&quot;&gt;&lt;code&gt;tf.compat.v1.enable_eager_execution&lt;/code&gt;&lt;/a&gt;, but may also be enabled within the context of a Python function via tf.contrib.eager.py_func.</source>
          <target state="translated">La ejecuci&amp;oacute;n &lt;a href=&quot;enable_eager_execution&quot;&gt; &lt;code&gt;tf.compat.v1.enable_eager_execution&lt;/code&gt; &lt;/a&gt; generalmente se habilita a trav&amp;eacute;s de tf.compat.v1.enable_eager_execution , pero tambi&amp;eacute;n se puede habilitar dentro del contexto de una funci&amp;oacute;n de Python a trav&amp;eacute;s de tf.contrib.eager.py_func.</target>
        </trans-unit>
        <trans-unit id="6d06564a36a9559d2e0a5392cfeb6c660976f37d" translate="yes" xml:space="preserve">
          <source>Eager execution provides an imperative interface to TensorFlow. With eager execution enabled, TensorFlow functions execute operations immediately (as opposed to adding to a graph to be executed later in a &lt;a href=&quot;session&quot;&gt;&lt;code&gt;tf.compat.v1.Session&lt;/code&gt;&lt;/a&gt;) and return concrete values (as opposed to symbolic references to a node in a computational graph).</source>
          <target state="translated">La ejecuci&amp;oacute;n &amp;aacute;vida proporciona una interfaz imperativa para TensorFlow. Con la ejecuci&amp;oacute;n ansiosa habilitada, las funciones de TensorFlow ejecutan operaciones de inmediato (en lugar de agregarlas a un gr&amp;aacute;fico para ejecutarlas m&amp;aacute;s adelante en una &lt;a href=&quot;session&quot;&gt; &lt;code&gt;tf.compat.v1.Session&lt;/code&gt; &lt;/a&gt; ) y devuelven valores concretos (a diferencia de las referencias simb&amp;oacute;licas a un nodo en un gr&amp;aacute;fico computacional) .</target>
        </trans-unit>
        <trans-unit id="2cfb1b3e6b97e592ebcc30338ad523ea602b8bc3" translate="yes" xml:space="preserve">
          <source>EagerPyFunc</source>
          <target state="translated">EagerPyFunc</target>
        </trans-unit>
        <trans-unit id="a8fc50e8e18487e58459997371c0df412c59129e" translate="yes" xml:space="preserve">
          <source>Eagerly executes a python function to compute func(input)-&amp;gt;output. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87cbba3896e6df9149bdcccd4f43477fd6268f65" translate="yes" xml:space="preserve">
          <source>Eases the porting of code that uses tf.nn.embedding_lookup().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c3cdcecf51a2f7be5b781220a956f9c2b0b72b0" translate="yes" xml:space="preserve">
          <source>Eases the porting of code that uses tf.nn.embedding_lookup_sparse().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="207de216011ca74ce6638b919e37a863ce6e5c3d" translate="yes" xml:space="preserve">
          <source>EditDistance</source>
          <target state="translated">EditDistance</target>
        </trans-unit>
        <trans-unit id="b5725757ffa6f438d6a1a3133c5b50874a3dfd45" translate="yes" xml:space="preserve">
          <source>Efficiency of the transform is not critical, and using &lt;code&gt;map_fn&lt;/code&gt; is more readable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9bc58428735ee8f0c80598baae3e59551f7ae8f" translate="yes" xml:space="preserve">
          <source>Efficient Backprop, &lt;a href=&quot;http://yann.lecun.com/exdb/publis/pdf/lecun-98b.pdf&quot;&gt;Lecun et al., 1998&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;http://yann.lecun.com/exdb/publis/pdf/lecun-98b.pdf&quot;&gt;Backprop&lt;/a&gt; eficiente, Lecun et al., 1998</target>
        </trans-unit>
        <trans-unit id="e76314f5d6e0a97f03753acc7a70778c22f74ea1" translate="yes" xml:space="preserve">
          <source>Efficient Learning using Forward-Backward Splitting: &lt;a href=&quot;http://papers.nips.cc/paper/3793-efficient-learning-using-forward-backward-splitting&quot;&gt;Duchi et al., 2009&lt;/a&gt; (&lt;a href=&quot;http://papers.nips.cc/paper/3793-efficient-learning-using-forward-backward-splitting.pdf&quot;&gt;pdf&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="541e98fb2dce535c7b2da83f12b31189d20f638f" translate="yes" xml:space="preserve">
          <source>Efficient Object Localization Using Convolutional Networks</source>
          <target state="translated">Localización eficiente de objetos mediante redes convolucionales</target>
        </trans-unit>
        <trans-unit id="d6abc47afa812ef58db279f94c1c36828411a382" translate="yes" xml:space="preserve">
          <source>EfficientNet models for Keras.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a05b9e141fa80e412892c6cd14bcda5f86d6b8da" translate="yes" xml:space="preserve">
          <source>Efficiently get the [batch] diagonal part of this operator.</source>
          <target state="translated">Obtener eficientemente la parte diagonal [del lote]de este operador.</target>
        </trans-unit>
        <trans-unit id="13124d2b4da61f7aa5ea141ded16fbed7f0f6d86" translate="yes" xml:space="preserve">
          <source>Eig</source>
          <target state="translated">Eig</target>
        </trans-unit>
        <trans-unit id="c8ec125266deeea7c4f953a5aa6fdd84d6f82aa9" translate="yes" xml:space="preserve">
          <source>Eigenvalues. Shape is &lt;code&gt;[..., N]&lt;/code&gt;. Sorted in non-decreasing order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a1a5ed6683b9d4dd60c31701c552c42328d36f7" translate="yes" xml:space="preserve">
          <source>Eigenvalues. Shape is &lt;code&gt;[..., N]&lt;/code&gt;. The vector &lt;code&gt;e[..., :]&lt;/code&gt; contains the &lt;code&gt;N&lt;/code&gt; eigenvalues of &lt;code&gt;tensor[..., :, :]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d25b857ec8868262c6fbadab11ce9b1e7c009be8" translate="yes" xml:space="preserve">
          <source>Eigenvectors. Shape is &lt;code&gt;[..., N, N]&lt;/code&gt;. The columns of the inner most matrices contain eigenvectors of the corresponding matrices in &lt;code&gt;tensor&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e7269d88813a122dd6b4c8836b591f55f6ef940" translate="yes" xml:space="preserve">
          <source>Einsum</source>
          <target state="translated">Einsum</target>
        </trans-unit>
        <trans-unit id="219d9a97a56bfa83e87ec96f25c1896bc4e10be9" translate="yes" xml:space="preserve">
          <source>Einsum allows defining Tensors by defining their element-wise computation. This computation is defined by &lt;code&gt;equation&lt;/code&gt;, a shorthand form based on Einstein summation. As an example, consider multiplying two matrices A and B to form a matrix C. The elements of C are given by:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6332fbc7665932299c4f65efff98735e87f37759" translate="yes" xml:space="preserve">
          <source>Either &quot;inferred&quot; (labels are generated from the directory structure), or a list/tuple of integer labels of the same size as the number of image files found in the directory. Labels should be sorted according to the alphanumeric order of the image file paths (obtained via &lt;code&gt;os.walk(directory)&lt;/code&gt; in Python).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e692a1b7521cf4da8b4b5796e22fe60b90963fd" translate="yes" xml:space="preserve">
          <source>Either &quot;inferred&quot; (labels are generated from the directory structure), or a list/tuple of integer labels of the same size as the number of text files found in the directory. Labels should be sorted according to the alphanumeric order of the text file paths (obtained via &lt;code&gt;os.walk(directory)&lt;/code&gt; in Python).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aaec3c8b49c5745db2d6043e40b48bc9c18bdeb" translate="yes" xml:space="preserve">
          <source>Either 'tf' or 'h5', indicating whether to save the model to Tensorflow SavedModel or HDF5. Defaults to 'tf' in TF 2.X, and 'h5' in TF 1.X.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dd4ca6670b03a9bfab2e16a5fc8a8e3f5ffde0e" translate="yes" xml:space="preserve">
          <source>Either 'tf' or 'h5'. A &lt;code&gt;filepath&lt;/code&gt; ending in '.h5' or '.keras' will default to HDF5 if &lt;code&gt;save_format&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;. Otherwise &lt;code&gt;None&lt;/code&gt; defaults to 'tf'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12d062d930d0d4de07457feda8bc0831bc6e5596" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;'tf'&lt;/code&gt; or &lt;code&gt;'h5'&lt;/code&gt;, indicating whether to save the model to Tensorflow SavedModel or HDF5. Defaults to 'tf' in TF 2.X, and 'h5' in TF 1.X.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d76697506e42ec307d4529322ddbe19f22d213c" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;None&lt;/code&gt; (default to original size) or tuple of ints &lt;code&gt;(img_height, img_width)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ffafa3d0304f38e47fbf37a645ad9ccf6604e90" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;x&lt;/code&gt; or &lt;code&gt;alt&lt;/code&gt; based on &lt;code&gt;K.learning_phase&lt;/code&gt;.</source>
          <target state="translated">O &lt;code&gt;x&lt;/code&gt; o &lt;code&gt;alt&lt;/code&gt; basado en &lt;code&gt;K.learning_phase&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3e5dbc63f9b3142dc5475c5c804320a7f9337ebb" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;x&lt;/code&gt; or &lt;code&gt;alt&lt;/code&gt; based on the &lt;code&gt;training&lt;/code&gt; flag. the &lt;code&gt;training&lt;/code&gt; flag defaults to &lt;code&gt;K.learning_phase()&lt;/code&gt;.</source>
          <target state="translated">O &lt;code&gt;x&lt;/code&gt; o &lt;code&gt;alt&lt;/code&gt; seg&amp;uacute;n la bandera de &lt;code&gt;training&lt;/code&gt; . el indicador de &lt;code&gt;training&lt;/code&gt; predeterminado es &lt;code&gt;K.learning_phase()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bbe1ca5362ad2a08c3954b55d07cd568f8d5058f" translate="yes" xml:space="preserve">
          <source>Either None (indicating no masking) or a callable with the same signature as the &lt;code&gt;compute_mask&lt;/code&gt; layer method, or a tensor that will be returned as output mask regardless of what the input is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5df1b219e2ba52e54c743655b14e433cb2458129" translate="yes" xml:space="preserve">
          <source>Either a 3-D float Tensor of shape [height, width, depth], or a 4-D Tensor of shape [batch_size, height, width, depth].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="380feaa1f505e0addd504a1accfac5dfd33bf8ce" translate="yes" xml:space="preserve">
          <source>Either a &lt;code&gt;Dimension&lt;/code&gt; instance, an integer, or None.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="423c905a5a8c1eace2913afcbcfb0708d77ef8a7" translate="yes" xml:space="preserve">
          <source>Either a Python boolean, or a TensorFlow boolean scalar tensor (e.g. a placeholder). Whether to return the output in training mode (normalized with statistics of the current batch) or in inference mode (normalized with moving statistics). &lt;strong&gt;NOTE&lt;/strong&gt;: make sure to set this parameter correctly, or else your training/inference will not work properly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6595d5734cae8b02144503445c30f8dcbbcd46a9" translate="yes" xml:space="preserve">
          <source>Either a bool or a scalar boolean tensor. If False, the caller should skip applying &lt;code&gt;grads&lt;/code&gt; to the variables this step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2edba00896125970f012882b1ce17126dfb9cc31" translate="yes" xml:space="preserve">
          <source>Either a scalar &lt;code&gt;N&lt;/code&gt;, or a list or an &lt;code&gt;int32&lt;/code&gt;&lt;code&gt;Tensor&lt;/code&gt; of shape [2, k]. If axes is a scalar, sum over the last N axes of a and the first N axes of b in order. If axes is a list or &lt;code&gt;Tensor&lt;/code&gt; the first and second row contain the set of unique integers specifying axes along which the contraction is computed, for &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;, respectively. The number of axes for &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; must be equal. If &lt;code&gt;axes=0&lt;/code&gt;, computes the outer product between &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da4db703c5115c54df4b0b6654ecde498f48b471" translate="yes" xml:space="preserve">
          <source>Either a single value if &lt;code&gt;fetches&lt;/code&gt; is a single graph element, or a list of values if &lt;code&gt;fetches&lt;/code&gt; is a list, or a dictionary with the same keys as &lt;code&gt;fetches&lt;/code&gt; if that is a dictionary (described above). Order in which &lt;code&gt;fetches&lt;/code&gt; operations are evaluated inside the call is undefined.</source>
          <target state="translated">O un valor &amp;uacute;nico si las &lt;code&gt;fetches&lt;/code&gt; son un elemento de gr&amp;aacute;fico &amp;uacute;nico, o una lista de valores si las &lt;code&gt;fetches&lt;/code&gt; son una lista, o un diccionario con las mismas claves que las &lt;code&gt;fetches&lt;/code&gt; si es un diccionario (descrito anteriormente). El orden en el que se eval&amp;uacute;an las operaciones de &lt;code&gt;fetches&lt;/code&gt; dentro de la llamada no est&amp;aacute; definido.</target>
        </trans-unit>
        <trans-unit id="fcf124e1ec0a0a15f09c663dd04829849e8eb3fc" translate="yes" xml:space="preserve">
          <source>Either a single value if &lt;code&gt;fetches&lt;/code&gt; is a single graph element, or a list of values if &lt;code&gt;fetches&lt;/code&gt; is a list, or a dictionary with the same keys as &lt;code&gt;fetches&lt;/code&gt; if that is a dictionary (see documentation for &lt;code&gt;run&lt;/code&gt;).</source>
          <target state="translated">O un valor &amp;uacute;nico si &lt;code&gt;fetches&lt;/code&gt; es un elemento de gr&amp;aacute;fico &amp;uacute;nico, o una lista de valores si &lt;code&gt;fetches&lt;/code&gt; es una lista, o un diccionario con las mismas claves que &lt;code&gt;fetches&lt;/code&gt; si es un diccionario (consulte la documentaci&amp;oacute;n para &lt;code&gt;run&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="3eb23dd0ccf4cd4670feebda643a09647355a941" translate="yes" xml:space="preserve">
          <source>Either an int/float, the string &lt;code&gt;&quot;dynamic&quot;&lt;/code&gt;, or an instance of a &lt;a href=&quot;../../../../mixed_precision/experimental/lossscale&quot;&gt;&lt;code&gt;tf.mixed_precision.experimental.LossScale&lt;/code&gt;&lt;/a&gt;. The loss scale to use. It is recommended to keep this as its default value of &lt;code&gt;&quot;dynamic&quot;&lt;/code&gt;, which will adjust the scaling automatically to prevent &lt;code&gt;Inf&lt;/code&gt; or &lt;code&gt;NaN&lt;/code&gt; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90b584bc32c186044680b73b62928607b6633394" translate="yes" xml:space="preserve">
          <source>Either an int/float, the string &lt;code&gt;&quot;dynamic&quot;&lt;/code&gt;, or an instance of a &lt;a href=&quot;../../mixed_precision/experimental/lossscale&quot;&gt;&lt;code&gt;tf.mixed_precision.experimental.LossScale&lt;/code&gt;&lt;/a&gt;. The loss scale to use. It is recommended to keep this as its default value of &lt;code&gt;&quot;dynamic&quot;&lt;/code&gt;, which will adjust the scaling automatically to prevent &lt;code&gt;Inf&lt;/code&gt; or &lt;code&gt;NaN&lt;/code&gt; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2b2a5363bfd28450b1ee6f5c4e71f38dfb994ca" translate="yes" xml:space="preserve">
          <source>Either an integer indicating the number of splits along &lt;code&gt;axis&lt;/code&gt; or a 1-D integer &lt;code&gt;Tensor&lt;/code&gt; or Python list containing the sizes of each output tensor along &lt;code&gt;axis&lt;/code&gt;. If a scalar, then it must evenly divide &lt;code&gt;value.shape[axis]&lt;/code&gt;; otherwise the sum of sizes along the split axis must match that of the &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69dd63725103a91eac4d917b615e68ab3beaa44b" translate="yes" xml:space="preserve">
          <source>Either assigns values immediately if variables to restore have been created already, or defers restoration until the variables are created. Dependencies added after this call will be matched if they have a corresponding object in the checkpoint (the restore request will queue in any trackable object waiting for the expected dependency to be added).</source>
          <target state="translated">O bien asigna valores inmediatamente si las variables a restaurar ya han sido creadas,o bien difiere la restauración hasta que las variables sean creadas.Las dependencias añadidas después de esta llamada se emparejarán si tienen un objeto correspondiente en el punto de control (la solicitud de restauración se pondrá en cola en cualquier objeto rastreable esperando a que se añada la dependencia esperada).</target>
        </trans-unit>
        <trans-unit id="448b20303154a96259807e9b8b83147054894fb5" translate="yes" xml:space="preserve">
          <source>Either classes or scores or both must be set.</source>
          <target state="translated">Se deben establecer clases o puntuaciones o ambas cosas.</target>
        </trans-unit>
        <trans-unit id="8f347750abdcdb3827d9ee5d868094a42b375fe5" translate="yes" xml:space="preserve">
          <source>Either matrix can be transposed or adjointed (conjugated and transposed) on the fly by setting one of the corresponding flag to &lt;code&gt;True&lt;/code&gt;. These are &lt;code&gt;False&lt;/code&gt; by default.</source>
          <target state="translated">Cualquiera de las matrices se puede transponer o adjuntar (conjugar y transponer) sobre la marcha configurando una de las banderas correspondientes en &lt;code&gt;True&lt;/code&gt; . Estos son &lt;code&gt;False&lt;/code&gt; por defecto.</target>
        </trans-unit>
        <trans-unit id="53797e79edd27930af5859b922a6b2a7b5bdf1a6" translate="yes" xml:space="preserve">
          <source>Either saves in HDF5 or in TensorFlow format based on the &lt;code&gt;save_format&lt;/code&gt; argument.</source>
          <target state="translated">Se guarda en HDF5 o en formato TensorFlow seg&amp;uacute;n el argumento &lt;code&gt;save_format&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eb6197851e946ffe9ed420c4ae011f04cbcdc10a" translate="yes" xml:space="preserve">
          <source>Either the &lt;code&gt;string&lt;/code&gt;&quot;SAME&quot;&lt;code&gt;or&lt;/code&gt;&quot;VALID&quot;&lt;code&gt;indicating the type of padding algorithm to use, or a list indicating the explicit paddings at the start and end of each dimension. When explicit padding is used and data_format is&lt;/code&gt;&quot;NHWC&quot;&lt;code&gt;, this should be in the form&lt;/code&gt;[[0, 0], [pad_top, pad_bottom], [pad_left, pad_right], [0, 0]]&lt;code&gt;. When explicit padding used and data_format is&lt;/code&gt;&quot;NCHW&quot;&lt;code&gt;, this should be in the form&lt;/code&gt;[[0, 0], [0, 0], [pad_top, pad_bottom], [pad_left, pad_right]]&lt;code&gt;. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;use_cudnn_on_gpu&lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; An optional&lt;/code&gt;bool&lt;code&gt;. Defaults to&lt;/code&gt;True&lt;code&gt;. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;data_format&lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; An optional&lt;/code&gt;string&lt;code&gt;from:&lt;/code&gt;&quot;NHWC&quot;, &quot;NCHW&quot;&lt;code&gt;. Defaults to&lt;/code&gt;&quot;NHWC&quot;&lt;code&gt;. Specify the data format of the input and output data. With the default format &quot;NHWC&quot;, the data is stored in the order of: [batch, in_height, in_width, in_channels]. Alternatively, the format could be &quot;NCHW&quot;, the data storage order of: [batch, in_channels, in_height, in_width]. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;dilations&lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; An optional list of&lt;/code&gt;ints&lt;code&gt;. Defaults to&lt;/code&gt;[1, 1, 1, 1]&lt;code&gt;. 1-D tensor of length 4. The dilation factor for each dimension of&lt;/code&gt;input&lt;code&gt;. If set to k &amp;gt; 1, there will be k-1 skipped cells between each filter element on that dimension. The dimension order is determined by the value of&lt;/code&gt;data_format&lt;code&gt;, see above for details. Dilations in the batch and depth dimensions must be 1. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;name&lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; A name for the operation (optional). &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;filters`</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e846e78ce644e29dc7af4f11843fd0355e728b4" translate="yes" xml:space="preserve">
          <source>Either the &lt;code&gt;string&lt;/code&gt;&quot;SAME&quot;&lt;code&gt;or&lt;/code&gt;&quot;VALID&quot;&lt;code&gt;indicating the type of padding algorithm to use, or a list indicating the explicit paddings at the start and end of each dimension. When explicit padding is used and data_format is&lt;/code&gt;&quot;NHWC&quot;&lt;code&gt;, this should be in the form&lt;/code&gt;[[0, 0], [pad_top, pad_bottom], [pad_left, pad_right], [0, 0]]&lt;code&gt;. When explicit padding used and data_format is&lt;/code&gt;&quot;NCHW&quot;&lt;code&gt;, this should be in the form&lt;/code&gt;[[0, 0], [0, 0], [pad_top, pad_bottom], [pad_left, pad_right]]&lt;code&gt;. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;use_cudnn_on_gpu&lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; An optional&lt;/code&gt;bool&lt;code&gt;. Defaults to&lt;/code&gt;True&lt;code&gt;. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;data_format&lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; An optional&lt;/code&gt;string&lt;code&gt;from:&lt;/code&gt;&quot;NHWC&quot;, &quot;NCHW&quot;&lt;code&gt;. Defaults to&lt;/code&gt;&quot;NHWC&quot;&lt;code&gt;. Specify the data format of the input and output data. With the default format &quot;NHWC&quot;, the data is stored in the order of: [batch, in_height, in_width, in_channels]. Alternatively, the format could be &quot;NCHW&quot;, the data storage order of: [batch, in_channels, in_height, in_width]. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;dilations&lt;code&gt;&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt; An optional list of&lt;/code&gt;ints&lt;code&gt;. Defaults to&lt;/code&gt;[1, 1, 1, 1]&lt;code&gt;. 1-D tensor of length 4. The dilation factor for each dimension of&lt;/code&gt;input&lt;code&gt;. If set to k &amp;gt; 1, there will be k-1 skipped cells between each filter element on that dimension. The dimension order is determined by the value of&lt;/code&gt;data_format&lt;code&gt;, see above for details. Dilations in the batch and depth dimensions must be 1. &amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;&lt;/code&gt;name`</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4638a2d653dd4eb92ead8e82c012ac8dda60e9aa" translate="yes" xml:space="preserve">
          <source>Either the &lt;code&gt;string&lt;/code&gt;&lt;code&gt;&quot;SAME&quot;&lt;/code&gt; or &lt;code&gt;&quot;VALID&quot;&lt;/code&gt; indicating the type of padding algorithm to use, or a list indicating the explicit paddings at the start and end of each dimension. When explicit padding is used and data_format is &lt;code&gt;&quot;NHWC&quot;&lt;/code&gt;, this should be in the form &lt;code&gt;[[0, 0], [pad_top, pad_bottom], [pad_left, pad_right], [0, 0]]&lt;/code&gt;. When explicit padding used and data_format is &lt;code&gt;&quot;NCHW&quot;&lt;/code&gt;, this should be in the form &lt;code&gt;[[0, 0], [0, 0], [pad_top, pad_bottom], [pad_left, pad_right]]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98017d368e570d514552b910ff1bd1af7ae428c5" translate="yes" xml:space="preserve">
          <source>Element-wise absolute value.</source>
          <target state="translated">Valor absoluto de los elementos.</target>
        </trans-unit>
        <trans-unit id="78020e1b843ad8d8b0d46f516b9cac5e7dc65b9e" translate="yes" xml:space="preserve">
          <source>Element-wise equality between two tensors.</source>
          <target state="translated">Igualdad de elementos entre dos tensores.</target>
        </trans-unit>
        <trans-unit id="ca64c7c534dabf70dfed1eb6dc70b44fa38b0ccd" translate="yes" xml:space="preserve">
          <source>Element-wise exponential.</source>
          <target state="translated">Exponencial en el sentido de los elementos.</target>
        </trans-unit>
        <trans-unit id="213307a14887e855cc376ef29b1c517922979973" translate="yes" xml:space="preserve">
          <source>Element-wise exponentiation.</source>
          <target state="translated">Expansión en el sentido de los elementos.</target>
        </trans-unit>
        <trans-unit id="2264a97a4de7acba1b83aee85d16a9f837ae5ff9" translate="yes" xml:space="preserve">
          <source>Element-wise inequality between two tensors.</source>
          <target state="translated">Desigualdad de elementos entre dos tensores.</target>
        </trans-unit>
        <trans-unit id="9ee943cf4b9c4af0ae00101b435fa732547c6a20" translate="yes" xml:space="preserve">
          <source>Element-wise log.</source>
          <target state="translated">Bitácora de los elementos.</target>
        </trans-unit>
        <trans-unit id="89a4d2c72a30a07811d44ea78fbc021903cf4719" translate="yes" xml:space="preserve">
          <source>Element-wise maximum of two tensors.</source>
          <target state="translated">Elemento máximo de dos tensores.</target>
        </trans-unit>
        <trans-unit id="792e29246325fc012d7c71ccbfcbec06fc46c4b7" translate="yes" xml:space="preserve">
          <source>Element-wise minimum of two tensors.</source>
          <target state="translated">Elemento mínimo de dos tensores.</target>
        </trans-unit>
        <trans-unit id="d2e07e1dec77fee8b77d01ca17740a2266df70d5" translate="yes" xml:space="preserve">
          <source>Element-wise multiplication of a sparse matrix with a dense tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf3909281d01b6aeb4e0d7519f5b59953f327cd" translate="yes" xml:space="preserve">
          <source>Element-wise rounding to the closest integer.</source>
          <target state="translated">Redondeo en el sentido de los elementos hasta el entero más cercano.</target>
        </trans-unit>
        <trans-unit id="61e18f83bff69cdbde9a9f5f55ae3a649e9b0c60" translate="yes" xml:space="preserve">
          <source>Element-wise sigmoid.</source>
          <target state="translated">Sigmoide en el sentido de los elementos.</target>
        </trans-unit>
        <trans-unit id="070f468605c58753ce57d39af8312f11d94c4af5" translate="yes" xml:space="preserve">
          <source>Element-wise sign.</source>
          <target state="translated">Signo de elemento.</target>
        </trans-unit>
        <trans-unit id="56f8da5e2231c69a7a51b7abf0358aeb9ae42429" translate="yes" xml:space="preserve">
          <source>Element-wise square root.</source>
          <target state="translated">Raíz cuadrada del sentido de los elementos.</target>
        </trans-unit>
        <trans-unit id="dd8913b917191e051975a666af524532e336480e" translate="yes" xml:space="preserve">
          <source>Element-wise square.</source>
          <target state="translated">Cuadrado de elementos.</target>
        </trans-unit>
        <trans-unit id="4a6ac47e9c2496c554ade7ff071a81074d224a3a" translate="yes" xml:space="preserve">
          <source>Element-wise tanh.</source>
          <target state="translated">Tanh de elementos.</target>
        </trans-unit>
        <trans-unit id="7d6405e81daea2ee6eabc8745d4a27bf65b6948c" translate="yes" xml:space="preserve">
          <source>Element-wise truth value of (x &amp;gt; y).</source>
          <target state="translated">Valor de verdad de elementos de (x&amp;gt; y).</target>
        </trans-unit>
        <trans-unit id="29b77c6f4cfd5cd17ea8d6410b420dc1c621e7c2" translate="yes" xml:space="preserve">
          <source>Element-wise truth value of (x &amp;gt;= y).</source>
          <target state="translated">Valor de verdad de elementos de (x&amp;gt; = y).</target>
        </trans-unit>
        <trans-unit id="b0b69f9a42693e2346143d414a3e98fe0f8a3639" translate="yes" xml:space="preserve">
          <source>Element-wise truth value of (x &amp;lt; y).</source>
          <target state="translated">Valor de verdad de elementos de (x &amp;lt;y).</target>
        </trans-unit>
        <trans-unit id="2062fabe4ac424967ff0d008cda56315cc93dfab" translate="yes" xml:space="preserve">
          <source>Element-wise truth value of (x &amp;lt;= y).</source>
          <target state="translated">Valor de verdad de elementos de (x &amp;lt;= y).</target>
        </trans-unit>
        <trans-unit id="e8c81beff185a49555c7d38080f1307fa0e996f4" translate="yes" xml:space="preserve">
          <source>Element-wise value clipping.</source>
          <target state="translated">Recorte del valor de los elementos.</target>
        </trans-unit>
        <trans-unit id="b961a210f2d79245a9d3af5d6f47fd0a5b49e3c6" translate="yes" xml:space="preserve">
          <source>Elements can be nested structures of tuples, named tuples, and dictionaries. Element components can be of any type representable by &lt;a href=&quot;../typespec&quot;&gt;&lt;code&gt;tf.TypeSpec&lt;/code&gt;&lt;/a&gt;, including &lt;a href=&quot;../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../sparse/sparsetensor&quot;&gt;&lt;code&gt;tf.SparseTensor&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../raggedtensor&quot;&gt;&lt;code&gt;tf.RaggedTensor&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../tensorarray&quot;&gt;&lt;code&gt;tf.TensorArray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Los elementos pueden ser estructuras anidadas de tuplas, tuplas con nombre y diccionarios. Los componentes de los elementos pueden ser de cualquier tipo representable por &lt;a href=&quot;../typespec&quot;&gt; &lt;code&gt;tf.TypeSpec&lt;/code&gt; &lt;/a&gt; , incluidos &lt;a href=&quot;../tensor&quot;&gt; &lt;code&gt;tf.Tensor&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;dataset&quot;&gt; &lt;code&gt;tf.data.Dataset&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../sparse/sparsetensor&quot;&gt; &lt;code&gt;tf.SparseTensor&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../raggedtensor&quot;&gt; &lt;code&gt;tf.RaggedTensor&lt;/code&gt; &lt;/a&gt; y &lt;a href=&quot;../tensorarray&quot;&gt; &lt;code&gt;tf.TensorArray&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="94931272648c62fb3ad1e0aa8316b17376df627c" translate="yes" xml:space="preserve">
          <source>Elements can be nested structures of tuples, named tuples, and dictionaries. Note that Python lists are &lt;em&gt;not&lt;/em&gt; treated as nested structures of components. Instead, lists are converted to tensors and treated as components. For example, the element &lt;code&gt;(1, [1, 2, 3])&lt;/code&gt; has only two components; the tensor &lt;code&gt;1&lt;/code&gt; and the tensor &lt;code&gt;[1, 2, 3]&lt;/code&gt;. Element components can be of any type representable by &lt;a href=&quot;../typespec&quot;&gt;&lt;code&gt;tf.TypeSpec&lt;/code&gt;&lt;/a&gt;, including &lt;a href=&quot;../tensor&quot;&gt;&lt;code&gt;tf.Tensor&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../sparse/sparsetensor&quot;&gt;&lt;code&gt;tf.sparse.SparseTensor&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../raggedtensor&quot;&gt;&lt;code&gt;tf.RaggedTensor&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../tensorarray&quot;&gt;&lt;code&gt;tf.TensorArray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4377ae485d3bfaf8bf271a435b0fad66752fcfce" translate="yes" xml:space="preserve">
          <source>Elements come out of the barrier when they are complete, and in the order in which they were placed into the barrier. The indices output provides information about the batch in which each element was originally inserted into the barrier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="837d5bca6a2536af9b3f581528ad4014139ab8ca" translate="yes" xml:space="preserve">
          <source>Elements of &lt;code&gt;x&lt;/code&gt; are compared in row-major order. The tensor &lt;code&gt;[x[0],...]&lt;/code&gt; is non-decreasing if for every adjacent pair we have &lt;code&gt;x[i] &amp;lt;= x[i+1]&lt;/code&gt;. If &lt;code&gt;x&lt;/code&gt; has less than two elements, it is trivially non-decreasing.</source>
          <target state="translated">Los elementos de &lt;code&gt;x&lt;/code&gt; se comparan en orden de fila mayor. El tensor &lt;code&gt;[x[0],...]&lt;/code&gt; no es decreciente si para cada par adyacente tenemos &lt;code&gt;x[i] &amp;lt;= x[i+1]&lt;/code&gt; . Si &lt;code&gt;x&lt;/code&gt; tiene menos de dos elementos, es trivialmente no decreciente.</target>
        </trans-unit>
        <trans-unit id="c61d81f0fbebf9d7141fc0ad59baf078a97c457b" translate="yes" xml:space="preserve">
          <source>Elements of &lt;code&gt;x&lt;/code&gt; are compared in row-major order. The tensor &lt;code&gt;[x[0],...]&lt;/code&gt; is strictly increasing if for every adjacent pair we have &lt;code&gt;x[i] &amp;lt; x[i+1]&lt;/code&gt;. If &lt;code&gt;x&lt;/code&gt; has less than two elements, it is trivially strictly increasing.</source>
          <target state="translated">Los elementos de &lt;code&gt;x&lt;/code&gt; se comparan en orden de fila mayor. El tensor &lt;code&gt;[x[0],...]&lt;/code&gt; es estrictamente creciente si para cada par adyacente tenemos &lt;code&gt;x[i] &amp;lt; x[i+1]&lt;/code&gt; . Si &lt;code&gt;x&lt;/code&gt; tiene menos de dos elementos, es trivialmente estrictamente creciente.</target>
        </trans-unit>
        <trans-unit id="4dc731347a173d7e073cb0fba2df1b0819210af7" translate="yes" xml:space="preserve">
          <source>Elements of the &lt;code&gt;Dataset&lt;/code&gt; are grouped together by length and then are padded and batched.</source>
          <target state="translated">Los elementos del &lt;code&gt;Dataset&lt;/code&gt; de datos se agrupan por longitud y luego se rellenan y agrupan.</target>
        </trans-unit>
        <trans-unit id="a197c432dad195eda4fde7342eee45a5fcb648a2" translate="yes" xml:space="preserve">
          <source>Elements of the &lt;code&gt;shapes_and_slices&lt;/code&gt; input must either be:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1a0623a4155ed9364977209435f1be44fe29103" translate="yes" xml:space="preserve">
          <source>Elementwise computes the bitwise AND of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">Elementwise calcula el AND bit a bit de &lt;code&gt;x&lt;/code&gt; e &lt;code&gt;y&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eb969553b4858295e01a3d6f8ad6eaf372be726c" translate="yes" xml:space="preserve">
          <source>Elementwise computes the bitwise OR of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">Elementwise calcula el OR bit a bit de &lt;code&gt;x&lt;/code&gt; e &lt;code&gt;y&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3a05ebe19c26d9b40a955aba0105f5c386a8c09b" translate="yes" xml:space="preserve">
          <source>Elementwise computes the bitwise XOR of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">Elementwise calcula el XOR bit a bit de &lt;code&gt;x&lt;/code&gt; e &lt;code&gt;y&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8565fc2ae8f5566706199d638cf76533351bcc91" translate="yes" xml:space="preserve">
          <source>Elementwise computes the bitwise left-shift of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">Elementwise calcula el desplazamiento a la izquierda bit a bit de &lt;code&gt;x&lt;/code&gt; e &lt;code&gt;y&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75c9971bf7398ee8aae281ee6e2b5f6cdd93c860" translate="yes" xml:space="preserve">
          <source>Elementwise computes the bitwise right-shift of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">Elementwise calcula el desplazamiento a la derecha bit a bit de &lt;code&gt;x&lt;/code&gt; e &lt;code&gt;y&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a9c075ef1bb96e78c3aeb788db6fdaa2ad6900d8" translate="yes" xml:space="preserve">
          <source>Else</source>
          <target state="translated">Else</target>
        </trans-unit>
        <trans-unit id="f63b6fda8c1d5fc8c3b067d8b3484c72fd8bde26" translate="yes" xml:space="preserve">
          <source>Else, 4D tensor with shape: &lt;code&gt;(samples, filters, new_rows, new_cols)&lt;/code&gt; if data_format='channels_first' or 4D tensor with shape: &lt;code&gt;(samples, new_rows, new_cols, filters)&lt;/code&gt; if data_format='channels_last'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f02ec6df2e4d02d170385ed26ba3d8f8db8b5eb9" translate="yes" xml:space="preserve">
          <source>Else, N-D tensor with shape &lt;code&gt;[batch_size, output_size]&lt;/code&gt;, where &lt;code&gt;output_size&lt;/code&gt; could be a high dimension tensor shape.</source>
          <target state="translated">De lo contrario, tensor ND con forma &lt;code&gt;[batch_size, output_size]&lt;/code&gt; , donde &lt;code&gt;output_size&lt;/code&gt; podr&amp;iacute;a ser una forma de tensor de alta dimensi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="08d50cb65d0e77a5bb79701db8ed4980b646ac23" translate="yes" xml:space="preserve">
          <source>Else, we will return the global Keras session assuming it matches the current graph.</source>
          <target state="translated">Si no,devolveremos la sesión global de Keras asumiendo que coincide con el gráfico actual.</target>
        </trans-unit>
        <trans-unit id="de6f454352ca47ec357dabfaa33cd93a1f9ce566" translate="yes" xml:space="preserve">
          <source>Elu</source>
          <target state="translated">Elu</target>
        </trans-unit>
        <trans-unit id="d01bd80879b349683733e5d1ec5baed6c2f291a2" translate="yes" xml:space="preserve">
          <source>EluGrad</source>
          <target state="translated">EluGrad</target>
        </trans-unit>
        <trans-unit id="dbab1f77c2fa1efee02c3a9de683182e574ad133" translate="yes" xml:space="preserve">
          <source>Embedding for a DNN model:</source>
          <target state="translated">Incrustación para un modelo de DNN:</target>
        </trans-unit>
        <trans-unit id="5f1914aef63cb18255e0d73bf9dd86ecf6e822ae" translate="yes" xml:space="preserve">
          <source>Emits randomized records.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3159fe421b3221381b3c778dc1c3c26e4540be37" translate="yes" xml:space="preserve">
          <source>Empty</source>
          <target state="translated">Empty</target>
        </trans-unit>
        <trans-unit id="0df4bd7c35e855099ed1dadafd9aa430275f2289" translate="yes" xml:space="preserve">
          <source>EmptyTensorList</source>
          <target state="translated">EmptyTensorList</target>
        </trans-unit>
        <trans-unit id="eae69d19ffba73c01cbbf7e007672f5917a4e516" translate="yes" xml:space="preserve">
          <source>Enable all features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2fe59ed1244f53116bb5c0e75cfa18eecac587f" translate="yes" xml:space="preserve">
          <source>Enable dumping debugging information from a TensorFlow program.</source>
          <target state="translated">Habilitar la descarga de información de depuración de un programa TensorFlow.</target>
        </trans-unit>
        <trans-unit id="20a9d31054c9d598ffffccd5a4dbb93e89b63981" translate="yes" xml:space="preserve">
          <source>Enable mixed precision via a graph rewrite.</source>
          <target state="translated">Habilitar la precisión mixta a través de la reescritura de un gráfico.</target>
        </trans-unit>
        <trans-unit id="a0bd6180f771c064da1f1a770b7daac29a771883" translate="yes" xml:space="preserve">
          <source>Enable or disable JIT compilation of operators within the scope.</source>
          <target state="translated">Habilitar o deshabilitar la compilación de JIT de los operadores dentro del ámbito.</target>
        </trans-unit>
        <trans-unit id="222fb4bafa995e3993fcca0f4ff075713e48e674" translate="yes" xml:space="preserve">
          <source>Enable tensor numerics checking in an eager/graph unified fashion.</source>
          <target state="translated">Habilitar la comprobación numérica de los tensores de forma unificada.</target>
        </trans-unit>
        <trans-unit id="1540a7c7e147411e5bfea16321035794907e1710" translate="yes" xml:space="preserve">
          <source>Enable the V2 dtype behavior for Keras layers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a5a474bba7abadff8b42d6aeff482a53678a17c" translate="yes" xml:space="preserve">
          <source>Enable visualizations for TensorBoard.</source>
          <target state="translated">Habilite las visualizaciones para el TableroTensorial.</target>
        </trans-unit>
        <trans-unit id="11c564b53610a3d8ae88148f0774441fd283eb58" translate="yes" xml:space="preserve">
          <source>Enables / disables eager execution of &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;s.</source>
          <target state="translated">Habilita / deshabilita la ejecuci&amp;oacute;n ansiosa de &lt;a href=&quot;../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; s.</target>
        </trans-unit>
        <trans-unit id="53cf39d33875070afa7ed0b3695e6633b06a3095" translate="yes" xml:space="preserve">
          <source>Enables / disables eager execution of &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;s. (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1afb1bf35ef313cbb3e295ba11df528f6e82d34" translate="yes" xml:space="preserve">
          <source>Enables TensorFlow 2.x behaviors.</source>
          <target state="translated">Permite comportamientos de TensorFlow 2.x.</target>
        </trans-unit>
        <trans-unit id="eefb45023037033b3697cb9f9c0b288e668b7b3d" translate="yes" xml:space="preserve">
          <source>Enables eager execution for the lifetime of this program.</source>
          <target state="translated">Permite una ejecución ansiosa durante toda la vida de este programa.</target>
        </trans-unit>
        <trans-unit id="3e0b95f0fa43081f563196966995b24de120f0ba" translate="yes" xml:space="preserve">
          <source>Enables experimental MLIR-Based TensorFlow Compiler Bridge.</source>
          <target state="translated">Habilita el puente experimental del Compilador de Flujo Tensorial basado en MLIR.</target>
        </trans-unit>
        <trans-unit id="321394eedd961dcd1e7093ef04a11e936e2d3b05" translate="yes" xml:space="preserve">
          <source>Enables experimental MLIR-Based TensorFlow Compiler Optimizations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4761221bfce06cf2c473a5ac7aededbd81781ab7" translate="yes" xml:space="preserve">
          <source>Enables this summary writer for the current thread.</source>
          <target state="translated">Habilita a este escritor de resúmenes para el hilo actual.</target>
        </trans-unit>
        <trans-unit id="f11ea0aebe664ae119dec001a0b9f2d29f3ca87b" translate="yes" xml:space="preserve">
          <source>Encapsulates metric logic and state.</source>
          <target state="translated">Encapsula la lógica y el estado métrico.</target>
        </trans-unit>
        <trans-unit id="03deba2273e4d1245d1695249ace3ac3cb04e064" translate="yes" xml:space="preserve">
          <source>Encode a tensor of ints into unicode strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7d24a34fa72ad98d28372d4386ca19052a1f4fd" translate="yes" xml:space="preserve">
          <source>Encode audio data using the WAV file format.</source>
          <target state="translated">Codifica los datos de audio usando el formato de archivo WAV.</target>
        </trans-unit>
        <trans-unit id="abdaadb2d4bd18ba0c09e21ce45020cd7b4b86ae" translate="yes" xml:space="preserve">
          <source>Encode strings into web-safe base64 format.</source>
          <target state="translated">Codifica las cadenas en el formato base64 seguro para la web.</target>
        </trans-unit>
        <trans-unit id="968ebe80fffbafa93be61d3ae4c6827d20a11eac" translate="yes" xml:space="preserve">
          <source>EncodeBase64</source>
          <target state="translated">EncodeBase64</target>
        </trans-unit>
        <trans-unit id="81d21d283ed47705a4a5239add986fc53f16fbad" translate="yes" xml:space="preserve">
          <source>EncodeJpeg</source>
          <target state="translated">EncodeJpeg</target>
        </trans-unit>
        <trans-unit id="9736dbeaeca28f865990647979abfdc12a915af3" translate="yes" xml:space="preserve">
          <source>EncodeJpegVariableQuality</source>
          <target state="translated">EncodeJpegVariableQuality</target>
        </trans-unit>
        <trans-unit id="256ca4a630c1ad4dd4d9d7e63b4f4341461643b8" translate="yes" xml:space="preserve">
          <source>EncodePng</source>
          <target state="translated">EncodePng</target>
        </trans-unit>
        <trans-unit id="6987fe797a5924074b03c0ad70d89c2d4e1aa8aa" translate="yes" xml:space="preserve">
          <source>EncodeProto</source>
          <target state="translated">EncodeProto</target>
        </trans-unit>
        <trans-unit id="8957a376f479497d6e40a818880082a8bb2f4bb2" translate="yes" xml:space="preserve">
          <source>EncodeWav</source>
          <target state="translated">EncodeWav</target>
        </trans-unit>
        <trans-unit id="16a4fa81ee2e04bd7a401eba8428d573c4a50803" translate="yes" xml:space="preserve">
          <source>Encodes a &lt;code&gt;RaggedTensor&lt;/code&gt; into a &lt;code&gt;variant&lt;/code&gt; Tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12c95c7b314e36b497965b9d97cb027f94d7aeb8" translate="yes" xml:space="preserve">
          <source>Encodes each sequence of Unicode code points in &lt;code&gt;input&lt;/code&gt; into a string.</source>
          <target state="translated">Codifica cada secuencia de puntos de c&amp;oacute;digo Unicode en la &lt;code&gt;input&lt;/code&gt; en una cadena.</target>
        </trans-unit>
        <trans-unit id="1314b20b59619cbf6729cf12663e572416610647" translate="yes" xml:space="preserve">
          <source>Encodes the given &lt;code&gt;RaggedTensor&lt;/code&gt; and returns a &lt;code&gt;variant&lt;/code&gt; Tensor. If &lt;code&gt;batched_input&lt;/code&gt; is True, then input &lt;code&gt;RaggedTensor&lt;/code&gt; is unbatched along the zero-th dimension, each component &lt;code&gt;RaggedTensor&lt;/code&gt; is encoded into a scalar &lt;code&gt;variant&lt;/code&gt; Tensor, and these are stacked to return a 1-D &lt;code&gt;variant&lt;/code&gt; Tensor. If &lt;code&gt;batched_input&lt;/code&gt; is False, then the input &lt;code&gt;RaggedTensor&lt;/code&gt; is encoded as is and a scalar &lt;code&gt;variant&lt;/code&gt; Tensor is returned. A &lt;code&gt;RaggedTensor&lt;/code&gt; is encoded by first creating a 1-D &lt;code&gt;variant&lt;/code&gt; Tensor with &lt;code&gt;ragged_rank + 1&lt;/code&gt; elements, containing the splits and values Tensors of the &lt;code&gt;RaggedTensor&lt;/code&gt;. Then the 1-D &lt;code&gt;variant&lt;/code&gt; Tensor is wrapped in a scalar &lt;code&gt;variant&lt;/code&gt; Tensor. See &lt;code&gt;RaggedTensorFromVariant&lt;/code&gt; for the corresponding decoding logic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12c18781d5d5838a386e7f2e416fc47f7b0e506a" translate="yes" xml:space="preserve">
          <source>Encoding to use when writing string content. Only used if &lt;code&gt;content&lt;/code&gt; is text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="004003571b664f555c79b413696ee33e12ad9b5d" translate="yes" xml:space="preserve">
          <source>End character that is appended at the end the printed string. Defaults to the newline character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9cf7d581450a0a51eeea499b6b02f740f714fb5" translate="yes" xml:space="preserve">
          <source>Enqueue a Tensor on the computation outfeed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc13a62fb9e2a8300bb9fe311ec0d5d8dde6065" translate="yes" xml:space="preserve">
          <source>Enqueue multiple Tensor values on the computation outfeed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46b78c4f830efb634df5877484f66b46105d79ec" translate="yes" xml:space="preserve">
          <source>EnqueueTPUEmbeddingIntegerBatch</source>
          <target state="translated">EnqueueTPUEmbeddingIntegerBatch</target>
        </trans-unit>
        <trans-unit id="cdca9f2840c0a160faa76ce84dfd26d10b2e15c0" translate="yes" xml:space="preserve">
          <source>EnqueueTPUEmbeddingRaggedTensorBatch</source>
          <target state="translated">EnqueueTPUEmbeddingRaggedTensorBatch</target>
        </trans-unit>
        <trans-unit id="1328f41df615d38a5b73994f5f5369d416436810" translate="yes" xml:space="preserve">
          <source>EnqueueTPUEmbeddingSparseBatch</source>
          <target state="translated">EnqueueTPUEmbeddingSparseBatch</target>
        </trans-unit>
        <trans-unit id="15f70eb0f8aceba7658fead772c7b4ff1e4d1d95" translate="yes" xml:space="preserve">
          <source>EnqueueTPUEmbeddingSparseTensorBatch</source>
          <target state="translated">EnqueueTPUEmbeddingSparseTensorBatch</target>
        </trans-unit>
        <trans-unit id="5683cb6af38e31071180cef9386ec900be332114" translate="yes" xml:space="preserve">
          <source>Enqueues a different list of tensors in different threads. Implemented using a queue -- a &lt;code&gt;QueueRunner&lt;/code&gt; for the queue is added to the current &lt;code&gt;Graph&lt;/code&gt;'s &lt;code&gt;QUEUE_RUNNER&lt;/code&gt; collection.</source>
          <target state="translated">Pone en cola una lista diferente de tensores en diferentes hilos. Implementado utilizando una cola - un &lt;code&gt;QueueRunner&lt;/code&gt; para la cola se a&amp;ntilde;ade a la corriente &lt;code&gt;Graph&lt;/code&gt; 's &lt;code&gt;QUEUE_RUNNER&lt;/code&gt; colecci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="8670322121e626d81f991f7d69880960bd89a370" translate="yes" xml:space="preserve">
          <source>Enqueues a tuple of one or more tensors in the given queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60e30314779202231181351b84dd34846567a2f6" translate="yes" xml:space="preserve">
          <source>Enqueues and Dequeues to the &lt;code&gt;PriorityQueue&lt;/code&gt; must include an additional tuple entry at the beginning: the &lt;code&gt;priority&lt;/code&gt;. The priority must be an int64 scalar (for &lt;code&gt;enqueue&lt;/code&gt;) or an int64 vector (for &lt;code&gt;enqueue_many&lt;/code&gt;).</source>
          <target state="translated">Las colas y las retiradas de la cola de &lt;code&gt;PriorityQueue&lt;/code&gt; deben incluir una entrada de tupla adicional al principio: la &lt;code&gt;priority&lt;/code&gt; . La prioridad debe ser un escalar int64 (para &lt;code&gt;enqueue&lt;/code&gt; ) o un vector int64 (para &lt;code&gt;enqueue_many&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d81d953ea363374239fe43375852b3f34687f421" translate="yes" xml:space="preserve">
          <source>Enqueues id tensors for embedding lookup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ce82621edcce5f93df7566dd835d9503feeccdf" translate="yes" xml:space="preserve">
          <source>Enqueues one element to this queue.</source>
          <target state="translated">Entra un elemento a esta cola.</target>
        </trans-unit>
        <trans-unit id="90cb2e60d785aff93add1fa0fe7d6d52fb7d8d2d" translate="yes" xml:space="preserve">
          <source>Enqueues zero or more elements to this queue.</source>
          <target state="translated">Coloca cero o más elementos en esta cola.</target>
        </trans-unit>
        <trans-unit id="d477e8507b00563f90dd22902da1f3308522cfb5" translate="yes" xml:space="preserve">
          <source>Enqueues zero or more tuples of one or more tensors in the given queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="556d9beffa9d2d825aeeaef90ce79c6045e5e75a" translate="yes" xml:space="preserve">
          <source>EnsureShape</source>
          <target state="translated">EnsureShape</target>
        </trans-unit>
        <trans-unit id="ec07a7b9b065fec4ccc1c035390c238f21a7e560" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;tensor&lt;/code&gt; is being traced by this tape.</source>
          <target state="translated">Asegura que esta cinta rastrea el &lt;code&gt;tensor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ffa73138967f2617b65584ab4b4ab573ff280e77" translate="yes" xml:space="preserve">
          <source>Ensures that flag is not None during program execution.</source>
          <target state="translated">Asegura que la bandera no es Ninguno durante la ejecución del programa.</target>
        </trans-unit>
        <trans-unit id="7fba0ef82f0ba5fc0578d25be123e547e761deca" translate="yes" xml:space="preserve">
          <source>Ensures that flags are not None during program execution.</source>
          <target state="translated">Asegura que las banderas no son ninguna durante la ejecución del programa.</target>
        </trans-unit>
        <trans-unit id="f60f893825ab5c6287261b63b08497391b1a898d" translate="yes" xml:space="preserve">
          <source>Ensures that only one flag among flag_names is True.</source>
          <target state="translated">Asegura que sólo una bandera entre los nombres de las banderas es verdadera.</target>
        </trans-unit>
        <trans-unit id="bc4926f456b6fdb9061da1916b7b3991e5255b89" translate="yes" xml:space="preserve">
          <source>Ensures that only one flag among flag_names is not None.</source>
          <target state="translated">Asegura que sólo una bandera entre los nombres de las banderas no es ninguna.</target>
        </trans-unit>
        <trans-unit id="69a41907388c0788d6b8b4645f59723bf71ee624" translate="yes" xml:space="preserve">
          <source>Ensures that the tensor's shape matches the expected shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3df735c2334b1de3bf6c1f0225248a5c4288f43" translate="yes" xml:space="preserve">
          <source>Ensures the minimum quantization range is at least this value. The legacy default value for this is 0.01, but it is strongly suggested to set it to 0 for new uses.</source>
          <target state="translated">Asegura que el rango mínimo de cuantificación es por lo menos este valor.El valor predeterminado heredado para esto es 0,01,pero se sugiere encarecidamente fijarlo en 0 para los nuevos usos.</target>
        </trans-unit>
        <trans-unit id="108e622621a22768df2fd21e0560d0f2153d1f24" translate="yes" xml:space="preserve">
          <source>Ensures the wrapped &lt;code&gt;cell&lt;/code&gt; is called with &lt;a href=&quot;../../../../device&quot;&gt;&lt;code&gt;tf.device(device)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Asegura que se llame a la &lt;code&gt;cell&lt;/code&gt; envuelta con &lt;a href=&quot;../../../../device&quot;&gt; &lt;code&gt;tf.device(device)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="56c85bfc40629f5356a3bdc6b8c8134d0ee69412" translate="yes" xml:space="preserve">
          <source>Ensures the wrapped &lt;code&gt;cell&lt;/code&gt; is called with &lt;a href=&quot;../device&quot;&gt;&lt;code&gt;tf.device(device)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Asegura que se llame a la &lt;code&gt;cell&lt;/code&gt; envuelta con &lt;a href=&quot;../device&quot;&gt; &lt;code&gt;tf.device(device)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2b9eceb7a86a9f577ef80586c5c1d7fde9ff493d" translate="yes" xml:space="preserve">
          <source>Enter</source>
          <target state="translated">Enter</target>
        </trans-unit>
        <trans-unit id="2e5bdaceef564fe90342bc0f3ce09baebe939955" translate="yes" xml:space="preserve">
          <source>Enter a &lt;code&gt;with&lt;/code&gt; block.</source>
          <target state="translated">Introduzca un bloque &lt;code&gt;with&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b0ae8455b8c259c16540b2b4caa23a215c50998e" translate="yes" xml:space="preserve">
          <source>Entering a context pushes it onto a stack of contexts. The context is exited when the test completes. Contexts are are exited in the reverse order of entering. They will always be exited, regardless of test failure/success. The context stack is specific to the test being run.</source>
          <target state="translated">Entrar en un contexto lo empuja a una pila de contextos.Se sale del contexto cuando se completa la prueba.Se sale de los contextos en el orden inverso al de entrada.Siempre se saldrá de ellos,independientemente del éxito o fracaso de la prueba.La pila de contextos es específica de la prueba que se está ejecutando.</target>
        </trans-unit>
        <trans-unit id="7012453966d1bac934e1d3e92a246ac6fb8ab8a8" translate="yes" xml:space="preserve">
          <source>Entering the scope also enters the &quot;cross-replica context&quot;. See &lt;a href=&quot;../../../../distribute/strategyextended&quot;&gt;&lt;code&gt;tf.distribute.StrategyExtended&lt;/code&gt;&lt;/a&gt; for an explanation on cross-replica and replica contexts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86bb4e96bc7eba7fb90d20bfb46d35f260824e45" translate="yes" xml:space="preserve">
          <source>Entering the scope also enters the &quot;cross-replica context&quot;. See &lt;a href=&quot;../../../distribute/strategyextended&quot;&gt;&lt;code&gt;tf.distribute.StrategyExtended&lt;/code&gt;&lt;/a&gt; for an explanation on cross-replica and replica contexts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56d69298189781e9dc71eaa40ab6d56ce3c27a87" translate="yes" xml:space="preserve">
          <source>Entering the scope also enters the &quot;cross-replica context&quot;. See &lt;a href=&quot;../strategyextended&quot;&gt;&lt;code&gt;tf.distribute.StrategyExtended&lt;/code&gt;&lt;/a&gt; for an explanation on cross-replica and replica contexts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97e3e7fb253c150ba1022252d5de42f1f4fafe16" translate="yes" xml:space="preserve">
          <source>Entering the scope also enters the &quot;cross-replica context&quot;. See &lt;a href=&quot;strategyextended&quot;&gt;&lt;code&gt;tf.distribute.StrategyExtended&lt;/code&gt;&lt;/a&gt; for an explanation on cross-replica and replica contexts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ecb2f7e332bf0fb5c218b03f880139861b909c" translate="yes" xml:space="preserve">
          <source>Enters a context inside which operations are recorded on this tape.</source>
          <target state="translated">Entra en un contexto dentro del cual las operaciones se graban en esta cinta.</target>
        </trans-unit>
        <trans-unit id="ec2767c9f459a9d70c78a2313f5bda7adc985835" translate="yes" xml:space="preserve">
          <source>Enum class defining the sets of ops available to generate TFLite models.</source>
          <target state="translated">Clase Enum que define los conjuntos de operaciones disponibles para generar modelos TFLite.</target>
        </trans-unit>
        <trans-unit id="5da1a5e506a157807d67486433bb20b695758042" translate="yes" xml:space="preserve">
          <source>Enum defining the optimizations to apply when generating tflite graphs.</source>
          <target state="translated">Enum definiendo las optimizaciones a aplicar al generar los gráficos de tflite.</target>
        </trans-unit>
        <trans-unit id="90423c583dcce5d727bda87136e47d717acb8520" translate="yes" xml:space="preserve">
          <source>Enumerates the elements of this dataset.</source>
          <target state="translated">Enumera los elementos de este conjunto de datos.</target>
        </trans-unit>
        <trans-unit id="01b295f0689d0f580498d3834fd01d32f53a29b4" translate="yes" xml:space="preserve">
          <source>Enum|str|None, the default value of the flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a472ce8d19d10484177dabb05deb4ee299058a0c" translate="yes" xml:space="preserve">
          <source>Equal</source>
          <target state="translated">Equal</target>
        </trans-unit>
        <trans-unit id="cd3d6832786f1cdc0d074cbe3810dfbe4b6e9e02" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;https://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.fftpack.dct.html&quot;&gt;scipy.fftpack.dct&lt;/a&gt; for Type-I, Type-II and Type-III DCT.</source>
          <target state="translated">Equivalente a &lt;a href=&quot;https://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.fftpack.dct.html&quot;&gt;scipy.fftpack.dct&lt;/a&gt; para DCT Tipo-I, Tipo-II y Tipo-III.</target>
        </trans-unit>
        <trans-unit id="ab669c6ea64e65572ad94f354d53bdd4410c35f5" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;https://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.fftpack.idct.html&quot;&gt;scipy.fftpack.idct&lt;/a&gt; for Type-I, Type-II and Type-III DCT.</source>
          <target state="translated">Equivalente a &lt;a href=&quot;https://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.fftpack.idct.html&quot;&gt;scipy.fftpack.idct&lt;/a&gt; para DCT Tipo-I, Tipo-II y Tipo-III.</target>
        </trans-unit>
        <trans-unit id="c335be99965d030f218f7e74ee4341c2f9b62983" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;https://docs.scipy.org/doc/scipy-1.4.0/reference/generated/scipy.fftpack.dct.html&quot;&gt;scipy.fftpack.dct&lt;/a&gt; for Type-I, Type-II, Type-III and Type-IV DCT.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20d5723a51e05abac66211f4b5113c9f9e3d398b" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;https://docs.scipy.org/doc/scipy-1.4.0/reference/generated/scipy.fftpack.idct.html&quot;&gt;scipy.fftpack.idct&lt;/a&gt; for Type-I, Type-II, Type-III and Type-IV DCT.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5e57bb76843be992582303de7a25b51e9e44284" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;latest_checkpoint&quot;&gt;&lt;code&gt;tf.train.latest_checkpoint(directory)&lt;/code&gt;&lt;/a&gt; where &lt;code&gt;directory&lt;/code&gt; is the constructor argument to &lt;code&gt;CheckpointManager&lt;/code&gt;.</source>
          <target state="translated">Equivalente a &lt;a href=&quot;latest_checkpoint&quot;&gt; &lt;code&gt;tf.train.latest_checkpoint(directory)&lt;/code&gt; &lt;/a&gt; donde &lt;code&gt;directory&lt;/code&gt; es el argumento del constructor de &lt;code&gt;CheckpointManager&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="12aa27fa14fcfb779b3cf6f07826d3611283aed6" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;adjust_brightness()&lt;/code&gt; using a &lt;code&gt;delta&lt;/code&gt; randomly picked in the interval &lt;code&gt;[-max_delta, max_delta)&lt;/code&gt;.</source>
          <target state="translated">Equivalente a &lt;code&gt;adjust_brightness()&lt;/code&gt; usando un &lt;code&gt;delta&lt;/code&gt; elegido al azar en el intervalo &lt;code&gt;[-max_delta, max_delta)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="09b3e81f789e49b586499d0779cb698dbd59d557" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;adjust_contrast()&lt;/code&gt; but uses a &lt;code&gt;contrast_factor&lt;/code&gt; randomly picked in the interval &lt;code&gt;[lower, upper]&lt;/code&gt;.</source>
          <target state="translated">Equivalente a &lt;code&gt;adjust_contrast()&lt;/code&gt; pero usa un &lt;code&gt;contrast_factor&lt;/code&gt; elegido al azar en el intervalo &lt;code&gt;[lower, upper]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="96de3d3339d8bc99a5232fb80056e877509a902d" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;adjust_hue()&lt;/code&gt; but uses a &lt;code&gt;delta&lt;/code&gt; randomly picked in the interval &lt;code&gt;[-max_delta, max_delta]&lt;/code&gt;.</source>
          <target state="translated">Equivalente a &lt;code&gt;adjust_hue()&lt;/code&gt; pero usa un &lt;code&gt;delta&lt;/code&gt; elegido al azar en el intervalo &lt;code&gt;[-max_delta, max_delta]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="23655f0c3ac756adc718b9fd03358f4fad3f0856" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;adjust_saturation()&lt;/code&gt; but uses a &lt;code&gt;saturation_factor&lt;/code&gt; randomly picked in the interval &lt;code&gt;[lower, upper]&lt;/code&gt;.</source>
          <target state="translated">Equivalente a &lt;code&gt;adjust_saturation()&lt;/code&gt; pero usa un &lt;code&gt;saturation_factor&lt;/code&gt; elegido al azar en el intervalo &lt;code&gt;[lower, upper]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="404cc18c094b513b6de1b7e6cc0bbe8e08dec237" translate="yes" xml:space="preserve">
          <source>Equivalent to C++ std::nextafter function.</source>
          <target state="translated">Equivalente a C++std::función siguiente.</target>
        </trans-unit>
        <trans-unit id="72cfeb2ec979751608d18293a4bbbaf58c556044" translate="yes" xml:space="preserve">
          <source>Equivalent to LSTMCell class but adds peephole connections.</source>
          <target state="translated">Equivalente a la clase LSTMCell pero añade conexiones de mirilla.</target>
        </trans-unit>
        <trans-unit id="810acbc718abeba54a4adeae3c2bc19fd0867a76" translate="yes" xml:space="preserve">
          <source>Equivalent to exiting and reentering the tape context manager with a new tape. For example, the two following code blocks are equivalent:</source>
          <target state="translated">Equivale a salir y volver a entrar en el gestor de contexto de la cinta con una nueva cinta.Por ejemplo,los dos siguientes bloques de código son equivalentes:</target>
        </trans-unit>
        <trans-unit id="b366fb9cced85d8ec2219c1c3626cd699229e2a0" translate="yes" xml:space="preserve">
          <source>Equivalent to np.all</source>
          <target state="translated">Equivalente a np.all</target>
        </trans-unit>
        <trans-unit id="fbe368530856e5c02dea4749ee86033afb2c2971" translate="yes" xml:space="preserve">
          <source>Equivalent to np.angle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68fc2cd887f06a6be5984678e87d9fbefcde58be" translate="yes" xml:space="preserve">
          <source>Equivalent to np.any</source>
          <target state="translated">Equivalente a np.any</target>
        </trans-unit>
        <trans-unit id="d711c6043710156c83e0fd47abc01149d5b65b9c" translate="yes" xml:space="preserve">
          <source>Equivalent to np.arange</source>
          <target state="translated">Equivalente a np.arange</target>
        </trans-unit>
        <trans-unit id="462b17f25f33760631b5543a184f6df84e7995e8" translate="yes" xml:space="preserve">
          <source>Equivalent to np.ceil</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee0150060273e31bed6d8ae4a4de2b9f0e05d04" translate="yes" xml:space="preserve">
          <source>Equivalent to np.exp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5cf2f3020533dd8c6cbc5a7f040679ea75d7f9b" translate="yes" xml:space="preserve">
          <source>Equivalent to np.full</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05b171c66d286b4a58fc825ae37893711f5af4c1" translate="yes" xml:space="preserve">
          <source>Equivalent to np.isfinite</source>
          <target state="translated">Equivalente a np.isfinito</target>
        </trans-unit>
        <trans-unit id="6cf06734befd58f2b3ab4e13986301474581e2b4" translate="yes" xml:space="preserve">
          <source>Equivalent to np.isinf</source>
          <target state="translated">Equivalente a np.isinf</target>
        </trans-unit>
        <trans-unit id="6374258bee9e66935fc1c66d495136b655269e4f" translate="yes" xml:space="preserve">
          <source>Equivalent to np.isnan</source>
          <target state="translated">Equivalente a np.isan</target>
        </trans-unit>
        <trans-unit id="e67fc8f2ff9c19708af4e26884cc5d44a056998d" translate="yes" xml:space="preserve">
          <source>Equivalent to np.linalg.lstsq</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28577bb9f14f8ade1168ec629722ccf6597345cd" translate="yes" xml:space="preserve">
          <source>Equivalent to np.max</source>
          <target state="translated">Equivalente a np.max</target>
        </trans-unit>
        <trans-unit id="c49e9cf38c7cdbe9cab7db7f9370177b6fad0411" translate="yes" xml:space="preserve">
          <source>Equivalent to np.mean</source>
          <target state="translated">Equivalente a la media de np.</target>
        </trans-unit>
        <trans-unit id="1f5202370c40436aa2f849ee038707e5fa15d036" translate="yes" xml:space="preserve">
          <source>Equivalent to np.min</source>
          <target state="translated">Equivalente a np.min</target>
        </trans-unit>
        <trans-unit id="5c252cf1e4e24cf6dab4facf869d89e7b422643c" translate="yes" xml:space="preserve">
          <source>Equivalent to np.ndim</source>
          <target state="translated">Equivalente a np.ndim</target>
        </trans-unit>
        <trans-unit id="a2db935156477455d5981e031397d5045da461a3" translate="yes" xml:space="preserve">
          <source>Equivalent to np.prod</source>
          <target state="translated">Equivalente a np.prod</target>
        </trans-unit>
        <trans-unit id="7c2e12dc7d621e63f14287eb0e10506db2d014d4" translate="yes" xml:space="preserve">
          <source>Equivalent to np.size()</source>
          <target state="translated">Equivalente a np.size()</target>
        </trans-unit>
        <trans-unit id="88b5636e608c91ffa2f14af120465515724e7c21" translate="yes" xml:space="preserve">
          <source>Equivalent to np.std</source>
          <target state="translated">Equivalente a np.std</target>
        </trans-unit>
        <trans-unit id="e54f8c7f961fc750868c04b530028b12df8cfd2d" translate="yes" xml:space="preserve">
          <source>Equivalent to np.sum apart the fact that numpy upcast uint8 and int32 to int64 while tensorflow returns the same dtype as the input.</source>
          <target state="translated">Equivalente a np.sumar aparte el hecho de que numpy upcast uint8 e int32 a int64 mientras que tensorflow devuelve el mismo dtype que la entrada.</target>
        </trans-unit>
        <trans-unit id="f94035d29b7b5f5ef4935b41748906c6edd0f44a" translate="yes" xml:space="preserve">
          <source>Equivalent to np.unravel_index</source>
          <target state="translated">Equivalente a np.unravel_index</target>
        </trans-unit>
        <trans-unit id="3d8d4f70c2a6dcee6138e42da4ea9d8d57941bcf" translate="yes" xml:space="preserve">
          <source>Equivalent to np.var</source>
          <target state="translated">Equivalente a np.var</target>
        </trans-unit>
        <trans-unit id="f4cc023d491adabad2e8a109c3d3dd4a8e975fd0" translate="yes" xml:space="preserve">
          <source>Equivalent to numpy.fft.fftshift. &lt;a href=&quot;https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.fftshift.html&quot;&gt;https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.fftshift.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3937688953cfcbcfe89823523f42d4889fd2130" translate="yes" xml:space="preserve">
          <source>Equivalent to numpy.fft.fftshift. https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.fftshift.html</source>
          <target state="translated">Equivalente a numpy.fft.fftshift.https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.fftshift.html</target>
        </trans-unit>
        <trans-unit id="9d205f3c81ff628d0981811f199086832aed22b6" translate="yes" xml:space="preserve">
          <source>Equivalent to numpy.fft.ifftshift. &lt;a href=&quot;https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.ifftshift.html&quot;&gt;https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.ifftshift.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dd2b0117f7b7eb348201a45c446fbae4c04b64d" translate="yes" xml:space="preserve">
          <source>Equivalent to numpy.fft.ifftshift. https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.ifftshift.html</source>
          <target state="translated">Equivalente a numpy.fft.ifftshift.https://docs.scipy.org/doc/numpy/reference/generated/numpy.fft.ifftshift.html</target>
        </trans-unit>
        <trans-unit id="cd3c10ac298fc83779d7180b62df3acfd2028ba1" translate="yes" xml:space="preserve">
          <source>Equivalent to numpy.linalg.slogdet, although no sign is returned since only hermitian positive definite matrices are supported.</source>
          <target state="translated">Equivalente a numpy.linalg.slogdet,aunque no se devuelve ningún signo ya que sólo se admiten matrices definitivas hermitianas positivas.</target>
        </trans-unit>
        <trans-unit id="f5e3349b347b523ccfe7d2d36cdf4f830d6d6768" translate="yes" xml:space="preserve">
          <source>Equivalent to numpy.polyval.</source>
          <target state="translated">Equivalente a numpy.polyval.</target>
        </trans-unit>
        <trans-unit id="9ab93c1fc5b434981966382e2d02f35fad157362" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.linalg.expm</source>
          <target state="translated">Equivalente a scipy.linalg.expm</target>
        </trans-unit>
        <trans-unit id="449cff5debc79a532910321ef441b805ab2c2ee5" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.linalg.solve_triangular</source>
          <target state="translated">Equivalente a scipy.linalg.solve_triangular</target>
        </trans-unit>
        <trans-unit id="fe91403d74c0b4a8f14baf895508059d0ee6e0b2" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.dawsn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d7d555473271127b617bb6e0ade0e8b28687028" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.expi</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb5717fd66f59e41b5a46912c32daefbc3aef0ab" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.expit</source>
          <target state="translated">Equivalente a scipy.special.expit</target>
        </trans-unit>
        <trans-unit id="1f4e9e13934cb20ad789e608907c04597e256190" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.fresnel first output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1560270df46b23a7f166b9f0f265cbfa7d38e327" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.fresnel second output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03aaa9170e1859f7e5b84e4283ea1ae7b31ff453" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.i0</source>
          <target state="translated">Equivalente a scipy.special.i0</target>
        </trans-unit>
        <trans-unit id="8e266498a6b1a7a26b01def5d42f8b17286ec637" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.i0e</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9289834302ab9464efb15c64a7277f13e51e14fa" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.i1</source>
          <target state="translated">Equivalente a scipy.special.i1</target>
        </trans-unit>
        <trans-unit id="438a970c0f9806ade1fdb0e1c5141f68e49632ce" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.i1e</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="494880ed4da70e8cfa70d15ee89749ccea4c6720" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.j0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="035c3a0e0f560151d55ab605438e7e17fd213d98" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.j1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d2afadabad61f66baa5f4e52785c46bbc5dee7f" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.k0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d24bf216a788d22e20029dc3dc2a7ec04d083aec" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.k0e</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46ab4d1dcd8a5d9d1528325d657c6dc21676a889" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.k1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b31f0dd433c9919cbad7d6f1998b2dd1a2d3e774" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.k1e</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f26e00b296f0c73d0fd01066823b1180b1d56a0" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.spence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9071e64e40768cc1326e55f1845c4512bbceb773" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.xlog1py</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b978115a57aecee7065e75844d526e492214b88" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.y0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3045f4419de2fe174d86f22c5c3d8795b8bc929" translate="yes" xml:space="preserve">
          <source>Equivalent to scipy.special.y1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3648248d37cad618c8d49524831902e774028989" translate="yes" xml:space="preserve">
          <source>Equivalent to the &lt;code&gt;hooks&lt;/code&gt; arg to &lt;code&gt;estimator.evaluate&lt;/code&gt;. List of &lt;code&gt;SessionRunHook&lt;/code&gt; subclass instances. Used for callbacks inside the evaluation call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6da4b8d9829fada9fb24e19ea2b809e3ff4ce77" translate="yes" xml:space="preserve">
          <source>Equivalent to the &lt;code&gt;input_fn&lt;/code&gt; arg to &lt;code&gt;estimator.evaluate&lt;/code&gt;. A function that constructs the input data for evaluation. See &lt;a href=&quot;https://tensorflow.org/guide/premade_estimators#create_input_functions&quot;&gt;Creating input functions&lt;/a&gt; for more information. The function should construct and return one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe107e95b7bba5c1aea496cd05695a842cb323d" translate="yes" xml:space="preserve">
          <source>Equivalent to the &lt;code&gt;name&lt;/code&gt; arg to &lt;code&gt;estimator.evaluate&lt;/code&gt;. Name of the evaluation if user needs to run multiple evaluations on different data sets, such as on training data vs test data. Metrics for different evaluations are saved in separate folders, and appear separately in tensorboard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="046f1d41c872592c322db28767dd41f18f6ee0e0" translate="yes" xml:space="preserve">
          <source>Equivalent to the &lt;code&gt;steps&lt;/code&gt; arg to &lt;code&gt;estimator.evaluate&lt;/code&gt;. Number of steps for which to evaluate model. If &lt;code&gt;None&lt;/code&gt;, evaluates until &lt;code&gt;input_fn&lt;/code&gt; raises an end-of-input exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d371f28bfea1e852f448381bb4f0bdfccaa7149e" translate="yes" xml:space="preserve">
          <source>Equivalent to:</source>
          <target state="translated">Equivalente a:</target>
        </trans-unit>
        <trans-unit id="1a8be36ef006e5ae5869b06fb4ce1ec0f4902254" translate="yes" xml:space="preserve">
          <source>Equivalent to: &lt;code&gt;from_row_splits(values, concat([0, row_limits]))&lt;/code&gt;.</source>
          <target state="translated">Equivalente a: &lt;code&gt;from_row_splits(values, concat([0, row_limits]))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f934428c26b01d7bcf82028a03b831fb56280136" translate="yes" xml:space="preserve">
          <source>Equivalent to: &lt;code&gt;from_row_splits(values, concat([row_starts, nvals]))&lt;/code&gt;.</source>
          <target state="translated">Equivalente a: &lt;code&gt;from_row_splits(values, concat([row_starts, nvals]))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eb531627cb5378a0c7f2b5b0b593f0afe538fe70" translate="yes" xml:space="preserve">
          <source>Equivalently, you could call &lt;code&gt;tf.transpose(x, perm=[1, 0])&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54f2ad31f01046014353ecaf907869188111f8c7" translate="yes" xml:space="preserve">
          <source>Erf</source>
          <target state="translated">Erf</target>
        </trans-unit>
        <trans-unit id="b69ca406dc79373ba0bcba41524f4bd1cd044d3c" translate="yes" xml:space="preserve">
          <source>Erfc</source>
          <target state="translated">Erfc</target>
        </trans-unit>
        <trans-unit id="51ea53a72345d158f82636a88a9b303a31fcacbc" translate="yes" xml:space="preserve">
          <source>Erfinv</source>
          <target state="translated">Erfinv</target>
        </trans-unit>
        <trans-unit id="a645773837690910bfe191d893e21cd8eb8555ea" translate="yes" xml:space="preserve">
          <source>Essentially, any &quot;input&quot; into this pseudo op is fed into an identity, and attributes are added to that input before being used by the constituent ops that make up the pseudo op. A similar process is done to any output that is to be exported from the current op.</source>
          <target state="translated">Esencialmente,cualquier &quot;entrada&quot; en esta pseudo-op se introduce en una identidad,y se añaden atributos a esa entrada antes de ser utilizada por las operaciones constitutivas que componen la pseudo-op.Se realiza un proceso similar a cualquier salida que se vaya a exportar de la operación actual.</target>
        </trans-unit>
        <trans-unit id="be113f49d343fbf9bdb54f8a121ec96a1956f264" translate="yes" xml:space="preserve">
          <source>Estimator class to train and evaluate TensorFlow models.</source>
          <target state="translated">Clase de estimulación para entrenar y evaluar los modelos de TensorFlow.</target>
        </trans-unit>
        <trans-unit id="416cc25603177f39e318971f80a871d50a7f3f1c" translate="yes" xml:space="preserve">
          <source>Estimator with TPU support.</source>
          <target state="translated">Estimador con soporte de TPU.</target>
        </trans-unit>
        <trans-unit id="d4f26dbdb3530b0db4729beb33b45379d57ce337" translate="yes" xml:space="preserve">
          <source>Estimator's &lt;code&gt;ModeKeys&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ebfc8db92bef1788c1d79262f904742e51adf04" translate="yes" xml:space="preserve">
          <source>Estimator's &lt;code&gt;ModeKeys&lt;/code&gt;. In most cases, this arg is not used and can be removed in the method implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdd220bca4f3a5773a7be9a01c838bdbaadd598f" translate="yes" xml:space="preserve">
          <source>Estimator's &lt;code&gt;ModeKeys&lt;/code&gt;. To be used in case loss calculation is different in Train and Eval mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1cd78140c026ea638f4d4fa08182ce0b8bf624a" translate="yes" xml:space="preserve">
          <source>Estimator.</source>
          <target state="translated">Estimator.</target>
        </trans-unit>
        <trans-unit id="af787345575f0fd2e39357b726f019e445fae069" translate="yes" xml:space="preserve">
          <source>Estimator: High level tools for working with models.</source>
          <target state="translated">Estimador:Herramientas de alto nivel para trabajar con modelos.</target>
        </trans-unit>
        <trans-unit id="d52f4d3825efd220d2de6a981b23c8e26fcde5ab" translate="yes" xml:space="preserve">
          <source>Estimators</source>
          <target state="translated">Estimators</target>
        </trans-unit>
        <trans-unit id="af9670f7a09c493acafa589d4a49f01a2c26b1e8" translate="yes" xml:space="preserve">
          <source>Estimators are not compatible with eager execution.</source>
          <target state="translated">Los estimadores no son compatibles con una ejecución ansiosa.</target>
        </trans-unit>
        <trans-unit id="c80aba17df6ad98b90215b78b10de509262f4ee8" translate="yes" xml:space="preserve">
          <source>Estimators can be used while eager execution is enabled. Note that &lt;code&gt;input_fn&lt;/code&gt; and all hooks are executed inside a graph context, so they have to be written to be compatible with graph mode. Note that &lt;code&gt;input_fn&lt;/code&gt; code using &lt;a href=&quot;../../../data&quot;&gt;&lt;code&gt;tf.data&lt;/code&gt;&lt;/a&gt; generally works in both graph and eager modes.</source>
          <target state="translated">Los estimadores se pueden usar mientras la ejecuci&amp;oacute;n &amp;aacute;vida est&amp;aacute; habilitada. Tenga en cuenta que &lt;code&gt;input_fn&lt;/code&gt; y todos los ganchos se ejecutan dentro de un contexto de gr&amp;aacute;fico, por lo que deben escribirse para que sean compatibles con el modo de gr&amp;aacute;fico. Tenga en cuenta que el c&amp;oacute;digo &lt;code&gt;input_fn&lt;/code&gt; que usa &lt;a href=&quot;../../../data&quot;&gt; &lt;code&gt;tf.data&lt;/code&gt; &lt;/a&gt; generalmente funciona tanto en modo gr&amp;aacute;fico como en modo ansioso.</target>
        </trans-unit>
        <trans-unit id="bb20f6b000f74c9b8993c6209840216e01db70f6" translate="yes" xml:space="preserve">
          <source>Estimators can be used while eager execution is enabled. Note that &lt;code&gt;input_fn&lt;/code&gt; and all hooks are executed inside a graph context, so they have to be written to be compatible with graph mode. Note that &lt;code&gt;input_fn&lt;/code&gt; code using &lt;a href=&quot;../data&quot;&gt;&lt;code&gt;tf.data&lt;/code&gt;&lt;/a&gt; generally works in both graph and eager modes.</source>
          <target state="translated">Los estimadores se pueden usar mientras la ejecuci&amp;oacute;n &amp;aacute;vida est&amp;aacute; habilitada. Tenga en cuenta que &lt;code&gt;input_fn&lt;/code&gt; y todos los ganchos se ejecutan dentro de un contexto de gr&amp;aacute;fico, por lo que deben escribirse para que sean compatibles con el modo de gr&amp;aacute;fico. Tenga en cuenta que el c&amp;oacute;digo &lt;code&gt;input_fn&lt;/code&gt; que usa &lt;a href=&quot;../data&quot;&gt; &lt;code&gt;tf.data&lt;/code&gt; &lt;/a&gt; generalmente funciona tanto en modo gr&amp;aacute;fico como en modo ansioso.</target>
        </trans-unit>
        <trans-unit id="3f86a08c52f7a8629e290b2e0fdcf1c0e4e98581" translate="yes" xml:space="preserve">
          <source>Estimators returned by &lt;code&gt;model_to_estimator&lt;/code&gt; are configured so that they can handle sample weights (similar to &lt;code&gt;keras_model.fit(x, y, sample_weights)&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04cdeeb6347a7147da63530f5a217391c98f7d8c" translate="yes" xml:space="preserve">
          <source>EuclideanNorm</source>
          <target state="translated">EuclideanNorm</target>
        </trans-unit>
        <trans-unit id="55c8f7aec13ca9beaa33e9ffb481df7f5c134062" translate="yes" xml:space="preserve">
          <source>Evaluated values of &lt;code&gt;predictions&lt;/code&gt; tensors.</source>
          <target state="translated">Valores evaluados de &lt;code&gt;predictions&lt;/code&gt; tensores.</target>
        </trans-unit>
        <trans-unit id="1b03b079690ef84f55b17ebc43b48b934b906b85" translate="yes" xml:space="preserve">
          <source>Evaluated values of &lt;code&gt;predictions&lt;/code&gt; tensors. The &lt;code&gt;predictions&lt;/code&gt; tensors will contain at least two keys 'dfc' and 'bias' for model explanations. The &lt;code&gt;dfc&lt;/code&gt; value corresponds to the contribution of each feature to the overall prediction for this instance (positive indicating that the feature makes it more likely to select class 1 and negative less likely). The &lt;code&gt;dfc&lt;/code&gt; is an OrderedDict, where the keys are the feature column names and the values are the contributions. It is sorted by the absolute value of the contribution (e.g OrderedDict([('age', -0.54), ('gender', 0.4), ('fare', 0.21)])). The 'bias' value will be the same across all the instances, corresponding to the probability (classification) or prediction (regression) of the training data distribution.</source>
          <target state="translated">Valores evaluados de &lt;code&gt;predictions&lt;/code&gt; tensores. Los tensores de &lt;code&gt;predictions&lt;/code&gt; contendr&amp;aacute;n al menos dos claves 'dfc' y 'sesgo' para las explicaciones del modelo. El valor &lt;code&gt;dfc&lt;/code&gt; corresponde a la contribuci&amp;oacute;n de cada caracter&amp;iacute;stica a la predicci&amp;oacute;n general para esta instancia (lo positivo indica que la caracter&amp;iacute;stica hace que sea m&amp;aacute;s probable seleccionar la clase 1 y lo negativo es menos probable). El &lt;code&gt;dfc&lt;/code&gt; es un OrderedDict, donde las claves son los nombres de las columnas de caracter&amp;iacute;sticas y los valores son las contribuciones. Est&amp;aacute; ordenado por el valor absoluto de la contribuci&amp;oacute;n (por ejemplo, OrderedDict ([('edad', -0.54), ('g&amp;eacute;nero', 0.4), ('tarifa', 0.21)])). El valor de 'sesgo' ser&amp;aacute; el mismo en todas las instancias, correspondiente a la probabilidad (clasificaci&amp;oacute;n) o predicci&amp;oacute;n (regresi&amp;oacute;n) de la distribuci&amp;oacute;n de datos de entrenamiento.</target>
        </trans-unit>
        <trans-unit id="76038f0588757b840cdc5f204dab1364cf8043c3" translate="yes" xml:space="preserve">
          <source>Evaluates tensors and returns numpy values.</source>
          <target state="translated">Evalúa los tensores y devuelve valores numéricos.</target>
        </trans-unit>
        <trans-unit id="57f3d0259235141125775431f66c96eedebbbfdb" translate="yes" xml:space="preserve">
          <source>Evaluates the model given evaluation data &lt;code&gt;input_fn&lt;/code&gt;.</source>
          <target state="translated">Eval&amp;uacute;a el modelo dado los datos de evaluaci&amp;oacute;n &lt;code&gt;input_fn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ef0884484aa688ed75f2c6150bd98f64412bc0f" translate="yes" xml:space="preserve">
          <source>Evaluates the model on a data generator. (deprecated)</source>
          <target state="translated">Evalúa el modelo en un generador de datos.(desaprobado)</target>
        </trans-unit>
        <trans-unit id="19439d681060998c65fa8a49375cbf14d7f1b6d2" translate="yes" xml:space="preserve">
          <source>Evaluates the value of a variable.</source>
          <target state="translated">Evalúa el valor de una variable.</target>
        </trans-unit>
        <trans-unit id="462093d87b1e51760b2f9cc1fc346faa48a26ec8" translate="yes" xml:space="preserve">
          <source>Evaluates this sparse tensor in a &lt;code&gt;Session&lt;/code&gt;.</source>
          <target state="translated">Eval&amp;uacute;a este tensor disperso en una &lt;code&gt;Session&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b58bb64bee2dee0e3524de394e209a784dcb0f34" translate="yes" xml:space="preserve">
          <source>Evaluates this tensor in a &lt;code&gt;Session&lt;/code&gt;.</source>
          <target state="translated">Eval&amp;uacute;a este tensor en una &lt;code&gt;Session&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff7513853508e7c6e3aa07908df2a450a026eb88" translate="yes" xml:space="preserve">
          <source>Evaluation</source>
          <target state="translated">Evaluation</target>
        </trans-unit>
        <trans-unit id="0cd35e83aa25817cd1618d052bf5cc8037dc8e37" translate="yes" xml:space="preserve">
          <source>Evaluation-related metrics.</source>
          <target state="translated">Métricas relacionadas con la evaluación.</target>
        </trans-unit>
        <trans-unit id="ba2134478429a6124d3817e9431c37bcebf0953c" translate="yes" xml:space="preserve">
          <source>Event shape describes the shape of a single draw from the distribution; it may be dependent across dimensions. For scalar distributions, the event shape is &lt;code&gt;[]&lt;/code&gt;. For a 5-dimensional MultivariateNormal, the event shape is &lt;code&gt;[5]&lt;/code&gt;.</source>
          <target state="translated">La forma del evento describe la forma de un solo dibujo de la distribuci&amp;oacute;n; puede depender de las dimensiones. Para distribuciones escalares, la forma del evento es &lt;code&gt;[]&lt;/code&gt; . Para un MultivariateNormal de 5 dimensiones, la forma del evento es &lt;code&gt;[5]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="25be266b05af077a0ad8cad7a0ec10e539d9e8c6" translate="yes" xml:space="preserve">
          <source>Every &lt;code&gt;Iterator&lt;/code&gt; must implement the &lt;code&gt;_get_batches_of_transformed_samples&lt;/code&gt; method.</source>
          <target state="translated">Cada &lt;code&gt;Iterator&lt;/code&gt; debe implementar el m&amp;eacute;todo &lt;code&gt;_get_batches_of_transformed_samples&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fe8b10297f23cdaa6155e6a8f85d988c3f770227" translate="yes" xml:space="preserve">
          <source>Every &lt;code&gt;RNNCell&lt;/code&gt; must have the properties below and implement &lt;code&gt;call&lt;/code&gt; with the signature &lt;code&gt;(output, next_state) = call(input, state)&lt;/code&gt;.</source>
          <target state="translated">Cada &lt;code&gt;RNNCell&lt;/code&gt; debe tener las propiedades a continuaci&amp;oacute;n e implementar la &lt;code&gt;call&lt;/code&gt; con la firma &lt;code&gt;(output, next_state) = call(input, state)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ad1161061553cd086534b164c366eee7799627f7" translate="yes" xml:space="preserve">
          <source>Every &lt;code&gt;RNNCell&lt;/code&gt; must have the properties below and implement &lt;code&gt;call&lt;/code&gt; with the signature &lt;code&gt;(output, next_state) = call(input, state)&lt;/code&gt;. The optional third input argument, &lt;code&gt;scope&lt;/code&gt;, is allowed for backwards compatibility purposes; but should be left off for new subclasses.</source>
          <target state="translated">Cada &lt;code&gt;RNNCell&lt;/code&gt; debe tener las propiedades a continuaci&amp;oacute;n e implementar la &lt;code&gt;call&lt;/code&gt; con la firma &lt;code&gt;(output, next_state) = call(input, state)&lt;/code&gt; . El tercer argumento de entrada opcional, &lt;code&gt;scope&lt;/code&gt; , est&amp;aacute; permitido por motivos de compatibilidad con versiones anteriores; pero debe dejarse para las nuevas subclases.</target>
        </trans-unit>
        <trans-unit id="299d42e26abca2a31082df354b4ce65b46c0fca9" translate="yes" xml:space="preserve">
          <source>Every &lt;code&gt;Sequence&lt;/code&gt; must implement the &lt;code&gt;__getitem__&lt;/code&gt; and the &lt;code&gt;__len__&lt;/code&gt; methods. If you want to modify your dataset between epochs you may implement &lt;code&gt;on_epoch_end&lt;/code&gt;. The method &lt;code&gt;__getitem__&lt;/code&gt; should return a complete batch.</source>
          <target state="translated">Cada &lt;code&gt;Sequence&lt;/code&gt; debe implementar los m&amp;eacute;todos &lt;code&gt;__getitem__&lt;/code&gt; y &lt;code&gt;__len__&lt;/code&gt; . Si desea modificar su conjunto de datos entre &amp;eacute;pocas, puede implementar &lt;code&gt;on_epoch_end&lt;/code&gt; . El m&amp;eacute;todo &lt;code&gt;__getitem__&lt;/code&gt; deber&amp;iacute;a devolver un lote completo.</target>
        </trans-unit>
        <trans-unit id="ba703b38e62df0a565a8b36051f1b5465409c88f" translate="yes" xml:space="preserve">
          <source>Every layer should expose (if appropriate) an &lt;code&gt;input_spec&lt;/code&gt; attribute: a list of instances of InputSpec (one per input tensor).</source>
          <target state="translated">Cada capa debe exponer (si corresponde) un atributo &lt;code&gt;input_spec&lt;/code&gt; : una lista de instancias de InputSpec (una por tensor de entrada).</target>
        </trans-unit>
        <trans-unit id="8bd051443b2507e1e127e99b553cf6ecedbd48b0" translate="yes" xml:space="preserve">
          <source>Everything else is converted to string an passed as such.</source>
          <target state="translated">Todo lo demás se convierte en una cuerda y pasa como tal.</target>
        </trans-unit>
        <trans-unit id="a560e4a67aad7f7189f87087c7d35159f5129b69" translate="yes" xml:space="preserve">
          <source>Exactly like the 'fetches' argument to Session.Run(). Can be a single tensor or op, a list of 'fetches' or a dictionary of fetches. For example: fetches = global_step_tensor fetches = [train_op, summary_op, global_step_tensor] fetches = {'step': global_step_tensor, 'summ': summary_op} Note that this can recurse as expected: fetches = {'step': global_step_tensor, 'ops': [train_op, check_nan_op]}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8e1a86a05a4d56f6d81c0b00a84c07add962695" translate="yes" xml:space="preserve">
          <source>Exactly like the &lt;code&gt;feed_dict&lt;/code&gt; argument to &lt;code&gt;Session.Run()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8859bb982bd6bcc2cef25780b2635ee30bc1cef5" translate="yes" xml:space="preserve">
          <source>Exactly like the &lt;code&gt;options&lt;/code&gt; argument to &lt;code&gt;Session.run()&lt;/code&gt;, i.e., a config_pb2.RunOptions proto.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66c10cd9cb9743620899024d1b7a59c133ba2b6d" translate="yes" xml:space="preserve">
          <source>Exactly one of scaffold or summary_op should be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="02d0824b069aa373c4cf4ddcd2dd958338db515f" translate="yes" xml:space="preserve">
          <source>Example (Basic):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15c2d66e4ea637a4a0137be3b06206da397b182f" translate="yes" xml:space="preserve">
          <source>Example (FarmHash64) with list of inputs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be129b9effca85fd73cedf877225d7fd3be08b1f" translate="yes" xml:space="preserve">
          <source>Example (FarmHash64):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6077956451fe769ecd79ba197242b337aa56e97" translate="yes" xml:space="preserve">
          <source>Example (MNIST):</source>
          <target state="translated">Ejemplo (MNIST):</target>
        </trans-unit>
        <trans-unit id="59dbc1f0ab80dda2191ea75d024e449751be97e7" translate="yes" xml:space="preserve">
          <source>Example (Profile):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7138ac77df2473be41d42b8461f4176e7177837a" translate="yes" xml:space="preserve">
          <source>Example (SipHash64):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace0e0f9d53f65c4ba8752cde26fc5d8ed59a8b9" translate="yes" xml:space="preserve">
          <source>Example (Siphash64 with a single integer, same as &lt;code&gt;salt=[133, 133]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef2e1210c47909b18d1b60b9c30a0116c39a246" translate="yes" xml:space="preserve">
          <source>Example 1:</source>
          <target state="translated">Ejemplo 1:</target>
        </trans-unit>
        <trans-unit id="da5ccd8cab037ca820324afb7dcac63b912e00e1" translate="yes" xml:space="preserve">
          <source>Example 1: Dump tensor data from only MatMul and Relu ops &lt;code&gt;op_regex=&quot;^(MatMul|Relu)$&quot;&lt;/code&gt;.</source>
          <target state="translated">Ejemplo 1: volcar datos de tensor de solo MatMul y Relu ops &lt;code&gt;op_regex=&quot;^(MatMul|Relu)$&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="00f2824ef36718d7b7d0ce5ea9877431abcb6311" translate="yes" xml:space="preserve">
          <source>Example 1: Plain reading and writing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54793e4dba84f7eb76a0c7f033fb712c51563cbd" translate="yes" xml:space="preserve">
          <source>Example 1: Training models with weights merge on CPU</source>
          <target state="translated">Ejemplo 1:Los modelos de entrenamiento con pesas se fusionan en la CPU</target>
        </trans-unit>
        <trans-unit id="5d3ce3e08ccb49fe9b24c378131cf033db05e0d0" translate="yes" xml:space="preserve">
          <source>Example 1: When &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are matrices (order 2), the case &lt;code&gt;axes = 1&lt;/code&gt; is equivalent to matrix multiplication.</source>
          <target state="translated">Ejemplo 1: Cuando &lt;code&gt;a&lt;/code&gt; y &lt;code&gt;b&lt;/code&gt; son matrices (orden 2), el caso de &lt;code&gt;axes = 1&lt;/code&gt; es equivalente a la multiplicaci&amp;oacute;n de matrices.</target>
        </trans-unit>
        <trans-unit id="44aa2a3d8bb3df8026afff479956490d45243b1b" translate="yes" xml:space="preserve">
          <source>Example 1: calling &lt;code&gt;clear_session()&lt;/code&gt; when creating models in a loop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8576e377acadb06ae63ce3356fa61a5f7c100a8d" translate="yes" xml:space="preserve">
          <source>Example 1: plain reading and writing.</source>
          <target state="translated">Ejemplo 1:lectura y escritura sencillas.</target>
        </trans-unit>
        <trans-unit id="e11895e8b0e4fd9700bfd1eef21691b78b345f1b" translate="yes" xml:space="preserve">
          <source>Example 2:</source>
          <target state="translated">Ejemplo 2:</target>
        </trans-unit>
        <trans-unit id="a0072322bb33224e627486eea8196e2cef187111" translate="yes" xml:space="preserve">
          <source>Example 2: Dump tensors from all ops &lt;em&gt;except&lt;/em&gt; Relu: &lt;code&gt;op_regex=&quot;(?!^Relu$)&quot;&lt;/code&gt;. This filter operates in a logical AND relation with &lt;code&gt;tensor_dtypes&lt;/code&gt;.</source>
          <target state="translated">Ejemplo 2: Volcar tensores de todas las operaciones &lt;em&gt;excepto&lt;/em&gt; Relu: &lt;code&gt;op_regex=&quot;(?!^Relu$)&quot;&lt;/code&gt; . Este filtro opera en una relaci&amp;oacute;n l&amp;oacute;gica AND con &lt;code&gt;tensor_dtypes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa5225a972efb4ae38389305cf614f741f3d1a81" translate="yes" xml:space="preserve">
          <source>Example 2: Fibonacci sequence algorithm that writes in a loop then returns.</source>
          <target state="translated">Ejemplo 2:Algoritmo de secuencia de Fibonacci que escribe en un bucle y luego regresa.</target>
        </trans-unit>
        <trans-unit id="515816f78c8886d90b64cb87784a0e52b994e92b" translate="yes" xml:space="preserve">
          <source>Example 2: Training models with weights merge on CPU using cpu_relocation</source>
          <target state="translated">Ejemplo 2:Los modelos de entrenamiento con pesos se fusionan en la CPU usando cpu_relocation</target>
        </trans-unit>
        <trans-unit id="00f4b73ff4f42e9b3ac7b8892c354d447dfc1b6e" translate="yes" xml:space="preserve">
          <source>Example 2: When &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are matrices (order 2), the case &lt;code&gt;axes = [[1], [0]]&lt;/code&gt; is equivalent to matrix multiplication.</source>
          <target state="translated">Ejemplo 2: Cuando &lt;code&gt;a&lt;/code&gt; y &lt;code&gt;b&lt;/code&gt; son matrices (orden 2), el caso de &lt;code&gt;axes = [[1], [0]]&lt;/code&gt; es equivalente a la multiplicaci&amp;oacute;n de matrices.</target>
        </trans-unit>
        <trans-unit id="48f04df33e3c0cd0666c729b322b6e7bf863b56e" translate="yes" xml:space="preserve">
          <source>Example 2: resetting the layer name generation counter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05cc9414d73f94556c9a7ce298c76f13bcc30b6c" translate="yes" xml:space="preserve">
          <source>Example 2: temporal regression. Consider an array &lt;code&gt;data&lt;/code&gt; of scalar values, of shape &lt;code&gt;(steps,)&lt;/code&gt;. To generate a dataset that uses the past 10 timesteps to predict the next timestep, you would use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d4166bf97179d81c42dccef3ab9d1594a5dec5d" translate="yes" xml:space="preserve">
          <source>Example 3:</source>
          <target state="translated">Ejemplo 3:</target>
        </trans-unit>
        <trans-unit id="73c9fd171924cd42c9e1951075109ba86ba1baf9" translate="yes" xml:space="preserve">
          <source>Example 3: A simple loop interacting with a &lt;a href=&quot;variable&quot;&gt;&lt;code&gt;tf.Variable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a96c081d4f4394bb3b52f2f3107ea003ee80610" translate="yes" xml:space="preserve">
          <source>Example 3: A simple loop interacting with a tf.Variable.</source>
          <target state="translated">Ejemplo 3:Un simple bucle que interactúa con una variable tf.</target>
        </trans-unit>
        <trans-unit id="518a9d9961987c5c80745f1ee48711b13ff01f7d" translate="yes" xml:space="preserve">
          <source>Example 3: Training models with weights merge on GPU (recommended for NV-link)</source>
          <target state="translated">Ejemplo 3:Los modelos de entrenamiento con pesas se fusionan en la GPU (recomendado para NV-link)</target>
        </trans-unit>
        <trans-unit id="8bc402b2102c57373c5203d5cf2a384bbae75dfc" translate="yes" xml:space="preserve">
          <source>Example 3: When &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are matrices (order 2), the case &lt;code&gt;axes=0&lt;/code&gt; gives the outer product, a tensor of order 4.</source>
          <target state="translated">Ejemplo 3: Cuando &lt;code&gt;a&lt;/code&gt; y &lt;code&gt;b&lt;/code&gt; son matrices (orden 2), el caso de &lt;code&gt;axes=0&lt;/code&gt; da el producto exterior, un tensor de orden 4.</target>
        </trans-unit>
        <trans-unit id="9f56d8c4e40812933a18ec960fa550620bea44e5" translate="yes" xml:space="preserve">
          <source>Example 4: Suppose that \(a_{ijk}\) and \(b_{lmn}\) represent two tensors of order 3. Then, &lt;code&gt;contract(a, b, [[0], [2]])&lt;/code&gt; is the order 4 tensor \(c_{jklm}\) whose entry corresponding to the indices \((j,k,l,m)\) is given by:</source>
          <target state="translated">Ejemplo 4: Suponga que \ (a_ {ijk} \) y \ (b_ {lmn} \) representan dos tensores de orden 3. Entonces, &lt;code&gt;contract(a, b, [[0], [2]])&lt;/code&gt; es el orden 4 tensor \ (c_ {jklm} \) cuya entrada correspondiente a los &amp;iacute;ndices \ ((j, k, l, m) \) viene dada por:</target>
        </trans-unit>
        <trans-unit id="30d9e9e6f4ce5ea49de6402830c224a348be7a83" translate="yes" xml:space="preserve">
          <source>Example Usage:</source>
          <target state="translated">Ejemplo de uso:</target>
        </trans-unit>
        <trans-unit id="72c9431a353d348bf8c4106eea5b09e0b7f2778c" translate="yes" xml:space="preserve">
          <source>Example Use with canned &lt;a href=&quot;dnnestimator&quot;&gt;&lt;code&gt;tf.estimator.DNNEstimator&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Ejemplo de uso con &lt;a href=&quot;dnnestimator&quot;&gt; &lt;code&gt;tf.estimator.DNNEstimator&lt;/code&gt; &lt;/a&gt; enlatado :</target>
        </trans-unit>
        <trans-unit id="a12ac3226f96243d920a907c8a0e054170d6de2a" translate="yes" xml:space="preserve">
          <source>Example docstring for subclasses.</source>
          <target state="translated">Ejemplo de cadena documental para subclases.</target>
        </trans-unit>
        <trans-unit id="3296a393ddb54725a2f31cf8e8df73eebb8bf7a1" translate="yes" xml:space="preserve">
          <source>Example for the basic usage that &lt;code&gt;inputs&lt;/code&gt; has static shape:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="428a9c1753100388a07947adc9c9b9cad373af77" translate="yes" xml:space="preserve">
          <source>Example in overridden &lt;a href=&quot;../model#train_step&quot;&gt;&lt;code&gt;Model.train_step&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2470add2c6a58385f524faf02b9f161d2b9bc41e" translate="yes" xml:space="preserve">
          <source>Example of &lt;code&gt;TF_CONFIG&lt;/code&gt; for chief training worker (must have one and only one):</source>
          <target state="translated">Ejemplo de &lt;code&gt;TF_CONFIG&lt;/code&gt; para jefe de formaci&amp;oacute;n (debe tener uno y solo uno):</target>
        </trans-unit>
        <trans-unit id="e4cae7f2cb3eaf2c3f14687c6350d50e604ce166" translate="yes" xml:space="preserve">
          <source>Example of &lt;code&gt;TF_CONFIG&lt;/code&gt; for evaluator task. Evaluator is a special task that is not part of the training cluster. There could be only one. It is used for model evaluation.</source>
          <target state="translated">Ejemplo de &lt;code&gt;TF_CONFIG&lt;/code&gt; para tarea de evaluador. El evaluador es una tarea especial que no forma parte del grupo de capacitaci&amp;oacute;n. Solo puede haber uno. Se utiliza para la evaluaci&amp;oacute;n de modelos.</target>
        </trans-unit>
        <trans-unit id="ef2f1dc4fba9e75335a84bfba753831e0da2c4a4" translate="yes" xml:space="preserve">
          <source>Example of &lt;code&gt;TF_CONFIG&lt;/code&gt; for non-chief training worker (optional, could be multiple):</source>
          <target state="translated">Ejemplo de &lt;code&gt;TF_CONFIG&lt;/code&gt; para trabajador de formaci&amp;oacute;n no jefe (opcional, podr&amp;iacute;a ser m&amp;uacute;ltiple):</target>
        </trans-unit>
        <trans-unit id="ded11bc3e41cf55332a58d41ca020fcd2188cd47" translate="yes" xml:space="preserve">
          <source>Example of &lt;code&gt;TF_CONFIG&lt;/code&gt; for parameter server, aka ps (could be multiple):</source>
          <target state="translated">Ejemplo de &lt;code&gt;TF_CONFIG&lt;/code&gt; para el servidor de par&amp;aacute;metros, tambi&amp;eacute;n conocido como ps (podr&amp;iacute;a ser m&amp;uacute;ltiple):</target>
        </trans-unit>
        <trans-unit id="abc3473fe9e86406df846110504f296764db37be" translate="yes" xml:space="preserve">
          <source>Example of &lt;code&gt;separate_compiled_gradients&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="379a2f6a98c8e26698ce4b95cb603e6934140326" translate="yes" xml:space="preserve">
          <source>Example of Hermitian spectrum</source>
          <target state="translated">Ejemplo de espectro Hermitiano</target>
        </trans-unit>
        <trans-unit id="410ba918bf6ec843555f4b7293b763b00b8cc2ef" translate="yes" xml:space="preserve">
          <source>Example of a Toeplitz operator.</source>
          <target state="translated">Ejemplo de un operador de Toeplitz.</target>
        </trans-unit>
        <trans-unit id="85f83dfee4e4a7f3dc6a9fe829210faa673ca277" translate="yes" xml:space="preserve">
          <source>Example of a self-adjoint positive definite operator</source>
          <target state="translated">Ejemplo de un operador definitivo positivo auto-ajustado</target>
        </trans-unit>
        <trans-unit id="bd71b08b62b75e20a6fe472c0485a74694a90a9a" translate="yes" xml:space="preserve">
          <source>Example of adding a dependency to an operation:</source>
          <target state="translated">Ejemplo de añadir una dependencia a una operación:</target>
        </trans-unit>
        <trans-unit id="19b1020ef2b58eb6f4263d8e0a075a3c4bb220fe" translate="yes" xml:space="preserve">
          <source>Example of checkpointing the training pipeline:</source>
          <target state="translated">Ejemplo de verificación de la tubería de entrenamiento:</target>
        </trans-unit>
        <trans-unit id="e58777718a24aefbe5a8f18566dd1948a1ccda1d" translate="yes" xml:space="preserve">
          <source>Example of chief node:</source>
          <target state="translated">Ejemplo de nodo principal:</target>
        </trans-unit>
        <trans-unit id="598ad303ca20efc27a6504a95d01c0ebffb9a01c" translate="yes" xml:space="preserve">
          <source>Example of creating a BestExporter for training and evaluation:</source>
          <target state="translated">Ejemplo de creación de un BestExporter para la formación y la evaluación:</target>
        </trans-unit>
        <trans-unit id="c12f0c5dc38b2d562905eaf2ecae6ab52735894e" translate="yes" xml:space="preserve">
          <source>Example of defining in terms of a real convolution kernel</source>
          <target state="translated">Ejemplo de definición en términos de un núcleo de convolución real</target>
        </trans-unit>
        <trans-unit id="a787a1cecc5ed812272f0d7761614b0f57551910" translate="yes" xml:space="preserve">
          <source>Example of defining in terms of a real convolution kernel,</source>
          <target state="translated">Ejemplo de definición en términos de un núcleo de convolución real,</target>
        </trans-unit>
        <trans-unit id="0d1833ce48bd953f7fd46604bc9bce116e25b3c1" translate="yes" xml:space="preserve">
          <source>Example of distributed training:</source>
          <target state="translated">Ejemplo de entrenamiento distribuido:</target>
        </trans-unit>
        <trans-unit id="ecde918e06456ccf3e309b6af50e5db3b7c87f0a" translate="yes" xml:space="preserve">
          <source>Example of evaluator node (evaluator is not part of training cluster):</source>
          <target state="translated">Ejemplo de nodo evaluador (el evaluador no forma parte del grupo de capacitación):</target>
        </trans-unit>
        <trans-unit id="daaacb4ed6b5ae6e3e41fcd268463fb2ccc0f877" translate="yes" xml:space="preserve">
          <source>Example of forcing real &lt;code&gt;dtype&lt;/code&gt; when spectrum is Hermitian</source>
          <target state="translated">Ejemplo de forzar &lt;code&gt;dtype&lt;/code&gt; real cuando el espectro es hermitiano</target>
        </trans-unit>
        <trans-unit id="918b8c1d76391d7274c5d707b3918475217ced2f" translate="yes" xml:space="preserve">
          <source>Example of local (non-distributed) training:</source>
          <target state="translated">Ejemplo de entrenamiento local (no distribuido):</target>
        </trans-unit>
        <trans-unit id="e010de83f03e8242af1897d4347b3a81d8ac97e5" translate="yes" xml:space="preserve">
          <source>Example of non-chief node:</source>
          <target state="translated">Ejemplo de nodo no jefe:</target>
        </trans-unit>
        <trans-unit id="d0e3466008dace46e07f808a1f06c480bbbb79c1" translate="yes" xml:space="preserve">
          <source>Example of overriding the generated code for an Op.</source>
          <target state="translated">Ejemplo de anulación del código generado para un Op.</target>
        </trans-unit>
        <trans-unit id="f6cf4690fc42df9a6f19c4ccafdd420bd4e92fac" translate="yes" xml:space="preserve">
          <source>Example of restoring the shadow variable values:</source>
          <target state="translated">Ejemplo de restauración de los valores de las variables de sombra:</target>
        </trans-unit>
        <trans-unit id="f8e92e4b9c782e54338b631c928bc19d13a6a181" translate="yes" xml:space="preserve">
          <source>Example of separate_compiled_gradients: # In the example below, the computations for f, g and h will all be compiled # in separate scopes. with tf.xla.experimental.jit_scope( separate_compiled_gradients=True): f = tf.matmul(a, b) g = tf.gradients([f], [a, b], name='mygrads1') h = tf.gradients([f], [a, b], name='mygrads2')</source>
          <target state="translated">Ejemplo de gradientes_compilados_separados:#En el siguiente ejemplo,los cálculos para f,g y h serán compilados en ámbitos separados.con tf.xla.experimental.jit_scope(separate_compiled_gradients=True):f=tf.matmul(a,b)g=tf.gradients([f],[a,b],name='mygrads1')h=tf.gradients([f],[a,b],name='mygrads2')</target>
        </trans-unit>
        <trans-unit id="7bea3d481c7a2794a987da82b4e5f8d462a88cb7" translate="yes" xml:space="preserve">
          <source>Example of transforming images and masks together.</source>
          <target state="translated">Ejemplo de transformación de imágenes y máscaras juntas.</target>
        </trans-unit>
        <trans-unit id="ec1136270e452edec85ece96cdcd819465f02495" translate="yes" xml:space="preserve">
          <source>Example of usage:</source>
          <target state="translated">Ejemplo de uso:</target>
        </trans-unit>
        <trans-unit id="c0322b2251169a4535d936bc1bccd14d484afce5" translate="yes" xml:space="preserve">
          <source>Example of using &lt;code&gt;.flow(x, y)&lt;/code&gt;:</source>
          <target state="translated">Ejemplo de uso de &lt;code&gt;.flow(x, y)&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c0865312d276fd0319aad510a1030d3d4f8c75ff" translate="yes" xml:space="preserve">
          <source>Example of using &lt;code&gt;.flow_from_directory(directory)&lt;/code&gt;:</source>
          <target state="translated">Ejemplo de uso de &lt;code&gt;.flow_from_directory(directory)&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="17ee9c7dc231b0022d7e16e963e816d3352760d2" translate="yes" xml:space="preserve">
          <source>Example output of parsing spec:</source>
          <target state="translated">Ejemplo de salida del análisis de las especificaciones:</target>
        </trans-unit>
        <trans-unit id="fc7841c33080ffba2d1a0ca228445d0e2ddf4147" translate="yes" xml:space="preserve">
          <source>Example subclass implementation:</source>
          <target state="translated">Ejemplo de implementación de una subclase:</target>
        </trans-unit>
        <trans-unit id="23a6730f497d34a35c741cd2b9796963be0ff9b6" translate="yes" xml:space="preserve">
          <source>Example that generates a new set of random values every time:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c24c06aaebac8148ec7e01e32b14230d85a014e6" translate="yes" xml:space="preserve">
          <source>Example that outputs a reproducible result:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="763eb5d5b2e48beaa61334211d57a0c9e577b80f" translate="yes" xml:space="preserve">
          <source>Example usage (CPU/GPU):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4fc0aed6d9786af922825e910e0abddb6daeae3" translate="yes" xml:space="preserve">
          <source>Example usage of custom metric which uses features:</source>
          <target state="translated">Ejemplo de uso de la métrica personalizada que utiliza características:</target>
        </trans-unit>
        <trans-unit id="527331abb9a52bf41a6b1416d788e85f6a63201e" translate="yes" xml:space="preserve">
          <source>Example usage when creating a training model:</source>
          <target state="translated">Ejemplo de uso al crear un modelo de entrenamiento:</target>
        </trans-unit>
        <trans-unit id="50bc38165379f784619be50f96100e5733f89c78" translate="yes" xml:space="preserve">
          <source>Example usage when graph building:</source>
          <target state="translated">Ejemplo de uso en la construcción de gráficos:</target>
        </trans-unit>
        <trans-unit id="d491a17cd1bf3dfee0c39d0be6f0237a61eac0da" translate="yes" xml:space="preserve">
          <source>Example usage with &lt;a href=&quot;function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt; graph execution:</source>
          <target state="translated">Ejemplo de uso con la ejecuci&amp;oacute;n del gr&amp;aacute;fico &lt;a href=&quot;function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="3d925e2167606d6281c7a1f9f1e3722e50282b90" translate="yes" xml:space="preserve">
          <source>Example usage with a classifier:</source>
          <target state="translated">Ejemplo de uso con un clasificador:</target>
        </trans-unit>
        <trans-unit id="3dd8e2ddb23eb53f7b94afc131020ea44347eb1d" translate="yes" xml:space="preserve">
          <source>Example usage with a regressor:</source>
          <target state="translated">Ejemplo de uso con un regresor:</target>
        </trans-unit>
        <trans-unit id="e115860bfdc04344656cefb82bb56606592684c7" translate="yes" xml:space="preserve">
          <source>Example usage with eager execution enabled:</source>
          <target state="translated">Ejemplo de uso con la ejecución ansiosa activada:</target>
        </trans-unit>
        <trans-unit id="8f636fd517a7e7db44a40549cdde033c8ec480ba" translate="yes" xml:space="preserve">
          <source>Example usage with eager execution, the default in TF 2.0:</source>
          <target state="translated">Ejemplo de uso con ejecución ávida,el predeterminado en TF 2.0:</target>
        </trans-unit>
        <trans-unit id="cc4b7b9efd8878f1980dc8448f032a1237ad9ca9" translate="yes" xml:space="preserve">
          <source>Example usage with legacy TF 1.x graph execution:</source>
          <target state="translated">Ejemplo de uso con la ejecución del gráfico TF 1.x heredado:</target>
        </trans-unit>
        <trans-unit id="5ab7721397827b925456d2a147cb5704105a62a7" translate="yes" xml:space="preserve">
          <source>Example usage:</source>
          <target state="translated">Ejemplo de uso:</target>
        </trans-unit>
        <trans-unit id="83c760bcfee1aeea54f4dc68746006988fa4120c" translate="yes" xml:space="preserve">
          <source>Example usage: ```python tf.profiler.experimental.server.start('6009') # do your training here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23f9d603e16f8ef16b61cb7dd71733745d6dc774" translate="yes" xml:space="preserve">
          <source>Example use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45bdc51ed832749b92021e3dd981f9c56dedbdf5" translate="yes" xml:space="preserve">
          <source>Example using shape_invariants:</source>
          <target state="translated">Ejemplo usando las variantes_de_forma:</target>
        </trans-unit>
        <trans-unit id="56f2357642c5f96165493821d43a89ed35fbd56e" translate="yes" xml:space="preserve">
          <source>Example which demonstrates non-strict semantics: In the following example, the final value of the counter &lt;code&gt;i&lt;/code&gt; does not depend on &lt;code&gt;x&lt;/code&gt;. So the &lt;code&gt;while_loop&lt;/code&gt; can increment the counter parallel to updates of &lt;code&gt;x&lt;/code&gt;. However, because the loop counter at one loop iteration depends on the value at the previous iteration, the loop counter itself cannot be incremented in parallel. Hence if we just want the final value of the counter (which we print on the line &lt;code&gt;print(sess.run(i))&lt;/code&gt;), then &lt;code&gt;x&lt;/code&gt; will never be incremented, but the counter will be updated on a single thread. Conversely, if we want the value of the output (which we print on the line &lt;code&gt;print(sess.run(out).shape)&lt;/code&gt;), then the counter may be incremented on its own thread, while &lt;code&gt;x&lt;/code&gt; can be incremented in parallel on a separate thread. In the extreme case, it is conceivable that the thread incrementing the counter runs until completion before &lt;code&gt;x&lt;/code&gt; is incremented even a single time. The only thing that can never happen is that the thread updating &lt;code&gt;x&lt;/code&gt; can never get ahead of the counter thread because the thread incrementing &lt;code&gt;x&lt;/code&gt; depends on the value of the counter.</source>
          <target state="translated">Ejemplo que demuestra sem&amp;aacute;ntica no estricta: En el siguiente ejemplo, el valor final del contador &lt;code&gt;i&lt;/code&gt; no depende de &lt;code&gt;x&lt;/code&gt; . Por tanto, &lt;code&gt;while_loop&lt;/code&gt; puede incrementar el contador en paralelo a las actualizaciones de &lt;code&gt;x&lt;/code&gt; . Sin embargo, debido a que el contador de bucle en una iteraci&amp;oacute;n de bucle depende del valor en la iteraci&amp;oacute;n anterior, el contador de bucle en s&amp;iacute; no se puede incrementar en paralelo. Por lo tanto, si solo queremos el valor final del contador (que imprimimos en la l&amp;iacute;nea &lt;code&gt;print(sess.run(i))&lt;/code&gt; ), entonces &lt;code&gt;x&lt;/code&gt; nunca se incrementar&amp;aacute;, pero el contador se actualizar&amp;aacute; en un solo hilo. Por el contrario, si queremos el valor de la salida (que imprimimos en la l&amp;iacute;nea &lt;code&gt;print(sess.run(out).shape)&lt;/code&gt; ), entonces el contador puede incrementarse en su propio hilo, mientras que &lt;code&gt;x&lt;/code&gt; puede incrementarse en paralelo en un hilo separado. En el caso extremo, es concebible que el subproceso que incrementa el contador se ejecuta hasta completarse antes de que &lt;code&gt;x&lt;/code&gt; se incremente incluso una sola vez. Lo &amp;uacute;nico que nunca puede suceder es que el hilo que actualiza &lt;code&gt;x&lt;/code&gt; nunca puede adelantarse al hilo del contador porque el hilo que incrementa &lt;code&gt;x&lt;/code&gt; depende del valor del contador.</target>
        </trans-unit>
        <trans-unit id="4a3b161e7903a377f4897fa329d44f597e09c69b" translate="yes" xml:space="preserve">
          <source>Example with &lt;code&gt;default_value&lt;/code&gt;: File '/us/states.txt' contains 51 lines - the first line is 'XX', and the other 50 each have a 2-character U.S. state abbreviation. Both a literal 'XX' in input, and other values missing from the file, will be assigned ID 0. All others are assigned the corresponding line number 1-50.</source>
          <target state="translated">Ejemplo con &lt;code&gt;default_value&lt;/code&gt; : El archivo '/us/states.txt' contiene 51 l&amp;iacute;neas; la primera l&amp;iacute;nea es 'XX' y las otras 50 tienen cada una una abreviatura de estado de EE. UU. De 2 caracteres. Tanto un literal 'XX' en la entrada, como otros valores que faltan en el archivo, se les asignar&amp;aacute; el ID 0. A todos los dem&amp;aacute;s se les asigna el n&amp;uacute;mero de l&amp;iacute;nea correspondiente 1-50.</target>
        </trans-unit>
        <trans-unit id="3692e468e65c6e00dbcc913dca39948c41e9a2c8" translate="yes" xml:space="preserve">
          <source>Example with &lt;code&gt;default_value&lt;/code&gt;: File &lt;code&gt;'/us/states.txt'&lt;/code&gt; contains 51 lines - the first line is &lt;code&gt;'XX'&lt;/code&gt;, and the other 50 each have a 2-character U.S. state abbreviation. Both a literal &lt;code&gt;'XX'&lt;/code&gt; in input, and other values missing from the file, will be assigned ID 0. All others are assigned the corresponding line number 1-50.</source>
          <target state="translated">Ejemplo con &lt;code&gt;default_value&lt;/code&gt; : El archivo &lt;code&gt;'/us/states.txt'&lt;/code&gt; contiene 51 l&amp;iacute;neas; la primera l&amp;iacute;nea es &lt;code&gt;'XX'&lt;/code&gt; y las otras 50 tienen cada una una abreviatura de estado de EE. UU. De 2 caracteres. Tanto un literal &lt;code&gt;'XX'&lt;/code&gt; en la entrada, como otros valores que faltan en el archivo, se les asignar&amp;aacute; el ID 0. A todos los dem&amp;aacute;s se les asigna el n&amp;uacute;mero de l&amp;iacute;nea correspondiente 1-50.</target>
        </trans-unit>
        <trans-unit id="0bcd2321ebb901af6f07ff3194e39b45e4583569" translate="yes" xml:space="preserve">
          <source>Example with &lt;code&gt;default_value&lt;/code&gt;: In the following example, each input in &lt;code&gt;vocabulary_list&lt;/code&gt; is assigned an ID 0-4 corresponding to its index (e.g., input 'B' produces output 3). All other inputs are assigned &lt;code&gt;default_value&lt;/code&gt; 0.</source>
          <target state="translated">Ejemplo con &lt;code&gt;default_value&lt;/code&gt; : En el siguiente ejemplo, a cada entrada en &lt;code&gt;vocabulary_list&lt;/code&gt; se le asigna un ID 0-4 correspondiente a su &amp;iacute;ndice (por ejemplo, la entrada 'B' produce la salida 3). A todas las dem&amp;aacute;s entradas se les asigna &lt;code&gt;default_value&lt;/code&gt; 0.</target>
        </trans-unit>
        <trans-unit id="041df3298d747f84dc836614f9a8d0706b82bb0c" translate="yes" xml:space="preserve">
          <source>Example with &lt;code&gt;num_oov_buckets&lt;/code&gt;: File '/us/states.txt' contains 50 lines, each with a 2-character U.S. state abbreviation. All inputs with values in that file are assigned an ID 0-49, corresponding to its line number. All other values are hashed and assigned an ID 50-54.</source>
          <target state="translated">Ejemplo con &lt;code&gt;num_oov_buckets&lt;/code&gt; : El archivo '/us/states.txt' contiene 50 l&amp;iacute;neas, cada una con una abreviatura de estado de EE. UU. De 2 caracteres. A todas las entradas con valores en ese archivo se les asigna un ID 0-49, correspondiente a su n&amp;uacute;mero de l&amp;iacute;nea. Todos los dem&amp;aacute;s valores tienen hash y se les asigna un ID 50-54.</target>
        </trans-unit>
        <trans-unit id="93f561d6bc93f5cf5b940311eba631bc8eebd85e" translate="yes" xml:space="preserve">
          <source>Example with &lt;code&gt;num_oov_buckets&lt;/code&gt;: File &lt;code&gt;'/us/states.txt'&lt;/code&gt; contains 50 lines, each with a 2-character U.S. state abbreviation. All inputs with values in that file are assigned an ID 0-49, corresponding to its line number. All other values are hashed and assigned an ID 50-54.</source>
          <target state="translated">Ejemplo con &lt;code&gt;num_oov_buckets&lt;/code&gt; : El archivo &lt;code&gt;'/us/states.txt'&lt;/code&gt; contiene 50 l&amp;iacute;neas, cada una con una abreviatura de estado de EE. UU. De 2 caracteres. A todas las entradas con valores en ese archivo se les asigna un ID 0-49, correspondiente a su n&amp;uacute;mero de l&amp;iacute;nea. Todos los dem&amp;aacute;s valores tienen hash y se les asigna un ID 50-54.</target>
        </trans-unit>
        <trans-unit id="8dba832f3b5e04108a0e19946d3c85263dad3f49" translate="yes" xml:space="preserve">
          <source>Example with &lt;code&gt;num_oov_buckets&lt;/code&gt;: In the following example, each input in &lt;code&gt;vocabulary_list&lt;/code&gt; is assigned an ID 0-3 corresponding to its index (e.g., input 'B' produces output 2). All other inputs are hashed and assigned an ID 4-5.</source>
          <target state="translated">Ejemplo con &lt;code&gt;num_oov_buckets&lt;/code&gt; : En el siguiente ejemplo, a cada entrada en &lt;code&gt;vocabulary_list&lt;/code&gt; se le asigna un ID 0-3 correspondiente a su &amp;iacute;ndice (por ejemplo, la entrada 'B' produce la salida 2). Todas las dem&amp;aacute;s entradas tienen hash y se les asigna un ID 4-5.</target>
        </trans-unit>
        <trans-unit id="d23061b7cd392ab5eb922c8ff6543c34bdcb5a2d" translate="yes" xml:space="preserve">
          <source>Example with nesting and a namedtuple:</source>
          <target state="translated">Ejemplo con el anidamiento y un nórdico:</target>
        </trans-unit>
        <trans-unit id="a72363b38997b4f64381ddc4dee5e0c9078d4238" translate="yes" xml:space="preserve">
          <source>Example with two replicas: Replica 0 &lt;code&gt;value&lt;/code&gt;: {'a': 1, 'b': [40, 1]} Replica 1 &lt;code&gt;value&lt;/code&gt;: {'a': 3, 'b': [ 2, 98]}</source>
          <target state="translated">Ejemplo con dos r&amp;eacute;plicas: &lt;code&gt;value&lt;/code&gt; r&amp;eacute;plica 0 : {'a': 1, 'b': [40, 1]} &lt;code&gt;value&lt;/code&gt; r&amp;eacute;plica 1 : {'a': 3, 'b': [2, 98]}</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="c507dcbf8c6dab62a26b1aeddf57994497c904a7" translate="yes" xml:space="preserve">
          <source>Example: (&lt;code&gt;depth&lt;/code&gt; is a tuple/list of integers) With the same input above, and if &lt;code&gt;depth&lt;/code&gt;=(2, 3) the output will be a list of 4 string tensors: &lt;code&gt;[[b'1_X_2'], [b'4_X_5']]&lt;/code&gt;, &lt;code&gt;[[b'2_X_3'], [b'5_X_6']]&lt;/code&gt;, &lt;code&gt;[[b'3_X_1'], [b'6_X_4']]&lt;/code&gt;, &lt;code&gt;[[b'1_X_2_X_3'], [b'4_X_5_X_6']]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8658bae51974acc059803a94aa98b93309fee6d8" translate="yes" xml:space="preserve">
          <source>Example: (&lt;code&gt;depth&lt;/code&gt; is an integer) With the same input above, and if &lt;code&gt;depth&lt;/code&gt;=2, the output will be a list of 6 string tensors: &lt;code&gt;[[b'1'], [b'4']]&lt;/code&gt;&lt;code&gt;[[b'2'], [b'5']]&lt;/code&gt;&lt;code&gt;[[b'3'], [b'6']]&lt;/code&gt;&lt;code&gt;[[b'1_X_2'], [b'4_X_5']]&lt;/code&gt;, &lt;code&gt;[[b'2_X_3'], [b'5_X_6']]&lt;/code&gt;, &lt;code&gt;[[b'3_X_1'], [b'6_X_4']]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f932f20a3593b81060616a973ebd451c6b19358b" translate="yes" xml:space="preserve">
          <source>Example: (&lt;code&gt;depth&lt;/code&gt;=None) If the layer receives three inputs: &lt;code&gt;a=[[1], [4]]&lt;/code&gt;, &lt;code&gt;b=[[2], [5]]&lt;/code&gt;, &lt;code&gt;c=[[3], [6]]&lt;/code&gt; the output will be a string tensor: &lt;code&gt;[[b'1_X_2_X_3'], [b'4_X_5_X_6']]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="567d171adb2f3af5c831c8014d6d2644694164d6" translate="yes" xml:space="preserve">
          <source>Example: - [0, 1, 1] and [1, 0, 1] compare equal. - [0, 0, 1] and [0, 1] compare unequal.</source>
          <target state="translated">Ejemplo:-[0,1,1]y [1,0,1]comparan igual.-[0,0,1]y [0,1]comparan desigual.</target>
        </trans-unit>
        <trans-unit id="c9f9b94d080f139845f4dafcda33f41b366ff378" translate="yes" xml:space="preserve">
          <source>Example: Create summaries manually every 100 steps in the chief.</source>
          <target state="translated">Ejemplo:Crear resúmenes manualmente cada 100 pasos en el jefe.</target>
        </trans-unit>
        <trans-unit id="173aca822521be5b122b73f49f1871722c08366e" translate="yes" xml:space="preserve">
          <source>Example: Print selected summary values.</source>
          <target state="translated">Ejemplo:Imprimir los valores de resumen seleccionados.</target>
        </trans-unit>
        <trans-unit id="a784b5743567dd18b16e6d3b489c110a8d1c990b" translate="yes" xml:space="preserve">
          <source>Example: Print the contents of an events file.</source>
          <target state="translated">Ejemplo:Imprimir el contenido de un archivo de eventos.</target>
        </trans-unit>
        <trans-unit id="ce3ba84d0b17d8bc4d409ce764e426e1c5492185" translate="yes" xml:space="preserve">
          <source>Example: Run IO ops on &quot;localhost&quot; while saving a checkpoint:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95e6fc1b2b82b717f6610ef6179737c68ecbc81b" translate="yes" xml:space="preserve">
          <source>Example: Start a thread to print losses. We want this thread to run every 60 seconds, so we launch it with &lt;code&gt;sv.loop()&lt;/code&gt;.</source>
          <target state="translated">Ejemplo: Inicie un hilo para imprimir p&amp;eacute;rdidas. Queremos que este hilo se ejecute cada 60 segundos, as&amp;iacute; que lo &lt;code&gt;sv.loop()&lt;/code&gt; con sv.loop () .</target>
        </trans-unit>
        <trans-unit id="94f6ca6939c144eae87aaf899e625c5d04303ebc" translate="yes" xml:space="preserve">
          <source>Example: The following ragged tensors are equivalent, and all represent the nested list &lt;code&gt;[[3, 1, 4, 1], [], [5, 9, 2], [6], []]&lt;/code&gt;.</source>
          <target state="translated">Ejemplo: Los siguientes tensores irregulares son equivalentes y todos representan la lista anidada &lt;code&gt;[[3, 1, 4, 1], [], [5, 9, 2], [6], []]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6000fe791e40d6738b7d6b145a5c4796da7c9eff" translate="yes" xml:space="preserve">
          <source>Example: The sparse tensor</source>
          <target state="translated">Ejemplo:El tensor escaso</target>
        </trans-unit>
        <trans-unit id="4831dd77f2817a6c577b6208057931f2ede2496f" translate="yes" xml:space="preserve">
          <source>Example: decay 1/t with a rate of 0.5:</source>
          <target state="translated">Ejemplo:decadencia 1/t con una tasa de 0,5:</target>
        </trans-unit>
        <trans-unit id="5be7d9a2564ff822574226c3c6979bdbd88cd6e4" translate="yes" xml:space="preserve">
          <source>Example: decay every 100000 steps with a base of 0.96:</source>
          <target state="translated">Ejemplo:decaimiento cada 100000 pasos con una base de 0,96:</target>
        </trans-unit>
        <trans-unit id="ace5a52f8a2edfc2fb79b4c37c4790b5eb41eee8" translate="yes" xml:space="preserve">
          <source>Example: decay exponentially with a base of 0.96:</source>
          <target state="translated">Ejemplo:decadencia exponencial con una base de 0,96:</target>
        </trans-unit>
        <trans-unit id="ce11d63dc1b31ac81a1b58ec71985d1a67e4f9f8" translate="yes" xml:space="preserve">
          <source>Example: decay from 0.1 to 0.01 in 10000 steps using sqrt (i.e. power=0.5):</source>
          <target state="translated">Ejemplo:decadencia de 0,1 a 0,01 en 10000 pasos usando sqrt (es decir,potencia=0,5):</target>
        </trans-unit>
        <trans-unit id="793c28fc14e5a01f7866d225e6c0168a3353b837" translate="yes" xml:space="preserve">
          <source>Example: use a learning rate that's 1.0 for the first 100001 steps, 0.5 for the next 10000 steps, and 0.1 for any additional steps.</source>
          <target state="translated">Ejemplo:usa una tasa de aprendizaje que es 1.0 para los primeros 100001 pasos,0.5 para los siguientes 10000 pasos,y 0.1 para cualquier paso adicional.</target>
        </trans-unit>
        <trans-unit id="6104a08ed7eb335488d3ea3f93c6210a1cc4746c" translate="yes" xml:space="preserve">
          <source>Example::</source>
          <target state="translated">Example::</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="87dd337717aa93a3e1f625c5009322053b08b819" translate="yes" xml:space="preserve">
          <source>Examples of initialization of one or a batch of distributions.</source>
          <target state="translated">Ejemplos de inicialización de una o un lote de distribuciones.</target>
        </trans-unit>
        <trans-unit id="0d99cda6b7a8a98bf3b0ce2b08deac42570d99ca" translate="yes" xml:space="preserve">
          <source>Examples with batched 'params' and 'indices':</source>
          <target state="translated">Ejemplos con &quot;params&quot; e &quot;índices&quot; agrupados:</target>
        </trans-unit>
        <trans-unit id="96a999e4ee43ac4a3bdacd6c1add9ad5873a7a08" translate="yes" xml:space="preserve">
          <source>Examples with weighted inputs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="bd4014a1dc07ec31c81fa13596a60e308e956f83" translate="yes" xml:space="preserve">
          <source>Except as otherwise noted, the content of this page is licensed under the &lt;a href=&quot;https://creativecommons.org/licenses/by/4.0/&quot;&gt;Creative Commons Attribution 4.0 License&lt;/a&gt;, and code samples are licensed under the &lt;a href=&quot;https://www.apache.org/licenses/LICENSE-2.0&quot;&gt;Apache 2.0 License&lt;/a&gt;. For details, see the &lt;a href=&quot;https://developers.google.com/site-policies&quot;&gt;Google Developers Site Policies&lt;/a&gt;. Java is a registered trademark of Oracle and/or its affiliates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1c51ae4b24c4cbf9a6a7c14ecfe48987ef8f41f" translate="yes" xml:space="preserve">
          <source>Exception class expected to be raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7db926df5edbb2e0244efc4cb72d768c859bda52" translate="yes" xml:space="preserve">
          <source>Exception handling:</source>
          <target state="translated">Manejo de excepciones:</target>
        </trans-unit>
        <trans-unit id="6e1fd6ee78dd93cc7393132c2166292f654b771e" translate="yes" xml:space="preserve">
          <source>Exception types for TensorFlow errors.</source>
          <target state="translated">Tipos de excepción para los errores de TensorFlow.</target>
        </trans-unit>
        <trans-unit id="977efc1e7b7b4e10da4b7bbfee5ff5338ebbf975" translate="yes" xml:space="preserve">
          <source>Exceptions include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce152fd2a50b95401ab6996a9060742977853fe6" translate="yes" xml:space="preserve">
          <source>Exceptions include: 1) None output: a NoOp would be returned which control-depends on computation. 2) Single value output: A tuple containing the value would be returned. 3) Operation-only outputs: a NoOp would be returned which control-depends on computation. TODO(b/121383831): Investigate into removing these special cases.</source>
          <target state="translated">Las excepciones incluyen:1)Ninguna salida:se devolvería un NoOp cuyo control depende de la computación.2)Salida de un solo valor:Se devolvería una tupla que contenga el valor.3)Salidas de sólo operación:se devolvería un NoOp cuyo control depende del cálculo.TODO(b/121383831):Investigar para eliminar estos casos especiales.</target>
        </trans-unit>
        <trans-unit id="a435b066a07d346a649075f82061604178c943e1" translate="yes" xml:space="preserve">
          <source>Exceptions raised but not handled by the &lt;code&gt;QueueRunner&lt;/code&gt; threads.</source>
          <target state="translated">Excepciones &lt;code&gt;QueueRunner&lt;/code&gt; pero no manejadas por los subprocesos QueueRunner .</target>
        </trans-unit>
        <trans-unit id="5c0668261fe61ad5e97be94ab196c8aaabcd82c1" translate="yes" xml:space="preserve">
          <source>Exceptions raised in queue runner threads are handled in one of two ways depending on whether or not a &lt;code&gt;Coordinator&lt;/code&gt; was passed to &lt;code&gt;create_threads()&lt;/code&gt;:</source>
          <target state="translated">Las excepciones &lt;code&gt;create_threads()&lt;/code&gt; en subprocesos de ejecuci&amp;oacute;n de cola se manejan de una de dos formas dependiendo de si se pas&amp;oacute; un &lt;code&gt;Coordinator&lt;/code&gt; a create_threads () :</target>
        </trans-unit>
        <trans-unit id="c7a50ad2d338624f150d3e12c3d98da4eca3b2fd" translate="yes" xml:space="preserve">
          <source>Exceptions that indicate that the training inputs have been exhausted, &lt;a href=&quot;../../../errors/outofrangeerror&quot;&gt;&lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt;&lt;/a&gt;, also cause &lt;code&gt;sv.should_stop()&lt;/code&gt; to return &lt;code&gt;True&lt;/code&gt; but are not re-raised from the &lt;code&gt;with&lt;/code&gt; block: they indicate a normal termination.</source>
          <target state="translated">Las excepciones que indican que las entradas de entrenamiento se han agotado, &lt;a href=&quot;../../../errors/outofrangeerror&quot;&gt; &lt;code&gt;tf.errors.OutOfRangeError&lt;/code&gt; &lt;/a&gt; , tambi&amp;eacute;n hacen que &lt;code&gt;sv.should_stop()&lt;/code&gt; devuelva &lt;code&gt;True&lt;/code&gt; pero no se vuelven a generar desde el bloque &lt;code&gt;with&lt;/code&gt; : indican una terminaci&amp;oacute;n normal.</target>
        </trans-unit>
        <trans-unit id="5f3013605a5648326257001d4f2130af330c7e64" translate="yes" xml:space="preserve">
          <source>Execute all cleanup functions. Normally called for you after tearDown.</source>
          <target state="translated">Ejecutar todas las funciones de limpieza.Normalmente te llaman después del derribo.</target>
        </trans-unit>
        <trans-unit id="11e375cf08a633917df1df912958f4d60e2eee13" translate="yes" xml:space="preserve">
          <source>Execute function &lt;code&gt;fn()&lt;/code&gt; inside the critical section.</source>
          <target state="translated">Ejecute la funci&amp;oacute;n &lt;code&gt;fn()&lt;/code&gt; dentro de la secci&amp;oacute;n cr&amp;iacute;tica.</target>
        </trans-unit>
        <trans-unit id="7dbdd16c5192dee3ed26ddf33bb3da6a11b3d34c" translate="yes" xml:space="preserve">
          <source>Executes ops specified by &lt;code&gt;fn&lt;/code&gt; on each replica. If &lt;code&gt;args&lt;/code&gt; or &lt;code&gt;kwargs&lt;/code&gt; have &quot;per-replica&quot; values, such as those produced by a &quot;distributed &lt;code&gt;Dataset&lt;/code&gt;&quot;, when &lt;code&gt;fn&lt;/code&gt; is executed on a particular replica, it will be executed with the component of those &quot;per-replica&quot; values that correspond to that replica.</source>
          <target state="translated">Ejecuta operaciones especificadas por &lt;code&gt;fn&lt;/code&gt; en cada r&amp;eacute;plica. Si &lt;code&gt;args&lt;/code&gt; o &lt;code&gt;kwargs&lt;/code&gt; tienen valores &quot;por r&amp;eacute;plica&quot;, como los producidos por un &quot; &lt;code&gt;Dataset&lt;/code&gt; distribuido &quot;, cuando &lt;code&gt;fn&lt;/code&gt; se ejecuta en una r&amp;eacute;plica en particular, se ejecutar&amp;aacute; con el componente de esos valores &quot;por r&amp;eacute;plica&quot; que corresponden a esa r&amp;eacute;plica.</target>
        </trans-unit>
        <trans-unit id="5841423de68ab109a1435156854cbf378aa60aee" translate="yes" xml:space="preserve">
          <source>Executes ops specified by &lt;code&gt;fn&lt;/code&gt; on each replica. If &lt;code&gt;args&lt;/code&gt; or &lt;code&gt;kwargs&lt;/code&gt; have &lt;a href=&quot;../../../../distribute/distributedvalues&quot;&gt;&lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt;&lt;/a&gt;, such as those produced by a &lt;a href=&quot;../../../../distribute/distributeddataset&quot;&gt;&lt;code&gt;tf.distribute.DistributedDataset&lt;/code&gt;&lt;/a&gt; from &lt;a href=&quot;../../../../distribute/strategy#experimental_distribute_dataset&quot;&gt;&lt;code&gt;tf.distribute.Strategy.experimental_distribute_dataset&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../../distribute/strategy#experimental_distribute_datasets_from_function&quot;&gt;&lt;code&gt;tf.distribute.Strategy.experimental_distribute_datasets_from_function&lt;/code&gt;&lt;/a&gt;, when &lt;code&gt;fn&lt;/code&gt; is executed on a particular replica, it will be executed with the component of &lt;a href=&quot;../../../../distribute/distributedvalues&quot;&gt;&lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt;&lt;/a&gt; that correspond to that replica.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="793811098469d54083ca269e98c267afe8d60bb8" translate="yes" xml:space="preserve">
          <source>Executes ops specified by &lt;code&gt;fn&lt;/code&gt; on each replica. If &lt;code&gt;args&lt;/code&gt; or &lt;code&gt;kwargs&lt;/code&gt; have &lt;a href=&quot;../../../distribute/distributedvalues&quot;&gt;&lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt;&lt;/a&gt;, such as those produced by a &lt;a href=&quot;../../../distribute/distributeddataset&quot;&gt;&lt;code&gt;tf.distribute.DistributedDataset&lt;/code&gt;&lt;/a&gt; from &lt;a href=&quot;../../../distribute/strategy#experimental_distribute_dataset&quot;&gt;&lt;code&gt;tf.distribute.Strategy.experimental_distribute_dataset&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../distribute/strategy#experimental_distribute_datasets_from_function&quot;&gt;&lt;code&gt;tf.distribute.Strategy.experimental_distribute_datasets_from_function&lt;/code&gt;&lt;/a&gt;, when &lt;code&gt;fn&lt;/code&gt; is executed on a particular replica, it will be executed with the component of &lt;a href=&quot;../../../distribute/distributedvalues&quot;&gt;&lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt;&lt;/a&gt; that correspond to that replica.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5343586f8c3bd6ef69d152c018d8d765f2f6d4f6" translate="yes" xml:space="preserve">
          <source>Executes ops specified by &lt;code&gt;fn&lt;/code&gt; on each replica. If &lt;code&gt;args&lt;/code&gt; or &lt;code&gt;kwargs&lt;/code&gt; have &lt;a href=&quot;../distributedvalues&quot;&gt;&lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt;&lt;/a&gt;, such as those produced by a &lt;a href=&quot;../distributeddataset&quot;&gt;&lt;code&gt;tf.distribute.DistributedDataset&lt;/code&gt;&lt;/a&gt; from &lt;a href=&quot;../strategy#experimental_distribute_dataset&quot;&gt;&lt;code&gt;tf.distribute.Strategy.experimental_distribute_dataset&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../strategy#experimental_distribute_datasets_from_function&quot;&gt;&lt;code&gt;tf.distribute.Strategy.experimental_distribute_datasets_from_function&lt;/code&gt;&lt;/a&gt;, when &lt;code&gt;fn&lt;/code&gt; is executed on a particular replica, it will be executed with the component of &lt;a href=&quot;../distributedvalues&quot;&gt;&lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt;&lt;/a&gt; that correspond to that replica.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fabacb7ccca613c5884ce0618be4bfb1a6d7c455" translate="yes" xml:space="preserve">
          <source>Executes ops specified by &lt;code&gt;fn&lt;/code&gt; on each replica. If &lt;code&gt;args&lt;/code&gt; or &lt;code&gt;kwargs&lt;/code&gt; have &lt;a href=&quot;distributedvalues&quot;&gt;&lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt;&lt;/a&gt;, such as those produced by a &lt;a href=&quot;distributeddataset&quot;&gt;&lt;code&gt;tf.distribute.DistributedDataset&lt;/code&gt;&lt;/a&gt; from &lt;a href=&quot;strategy#experimental_distribute_dataset&quot;&gt;&lt;code&gt;tf.distribute.Strategy.experimental_distribute_dataset&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;strategy#experimental_distribute_datasets_from_function&quot;&gt;&lt;code&gt;tf.distribute.Strategy.experimental_distribute_datasets_from_function&lt;/code&gt;&lt;/a&gt;, when &lt;code&gt;fn&lt;/code&gt; is executed on a particular replica, it will be executed with the component of &lt;a href=&quot;distributedvalues&quot;&gt;&lt;code&gt;tf.distribute.DistributedValues&lt;/code&gt;&lt;/a&gt; that correspond to that replica.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a75d59c79f71a41f7d05e765e21135e40ec896e" translate="yes" xml:space="preserve">
          <source>Executing inside &lt;a href=&quot;../../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;, unless under &lt;a href=&quot;../../init_scope&quot;&gt;&lt;code&gt;tf.init_scope&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../config/experimental_run_functions_eagerly&quot;&gt;&lt;code&gt;tf.config.experimental_run_functions_eagerly(True)&lt;/code&gt;&lt;/a&gt; is previously called.</source>
          <target state="translated">Ejecutando dentro de &lt;a href=&quot;../../function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; , a menos que bajo &lt;a href=&quot;../../init_scope&quot;&gt; &lt;code&gt;tf.init_scope&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;../../config/experimental_run_functions_eagerly&quot;&gt; &lt;code&gt;tf.config.experimental_run_functions_eagerly(True)&lt;/code&gt; &lt;/a&gt; se haya llamado previamente.</target>
        </trans-unit>
        <trans-unit id="4cfe9cbddad329689e0b90de125001daf8c95885" translate="yes" xml:space="preserve">
          <source>Executing inside &lt;a href=&quot;../../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;, unless under &lt;a href=&quot;../../init_scope&quot;&gt;&lt;code&gt;tf.init_scope&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../config/run_functions_eagerly&quot;&gt;&lt;code&gt;tf.config.run_functions_eagerly(True)&lt;/code&gt;&lt;/a&gt; is previously called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a10bab3a1306869bb43217c1e5e4cddf7e6bfae" translate="yes" xml:space="preserve">
          <source>Executing inside &lt;a href=&quot;function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;, unless under &lt;a href=&quot;init_scope&quot;&gt;&lt;code&gt;tf.init_scope&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;config/experimental_run_functions_eagerly&quot;&gt;&lt;code&gt;tf.config.experimental_run_functions_eagerly(True)&lt;/code&gt;&lt;/a&gt; is previously called.</source>
          <target state="translated">Ejecutando dentro de &lt;a href=&quot;function&quot;&gt; &lt;code&gt;tf.function&lt;/code&gt; &lt;/a&gt; , a menos que bajo &lt;a href=&quot;init_scope&quot;&gt; &lt;code&gt;tf.init_scope&lt;/code&gt; &lt;/a&gt; o &lt;a href=&quot;config/experimental_run_functions_eagerly&quot;&gt; &lt;code&gt;tf.config.experimental_run_functions_eagerly(True)&lt;/code&gt; &lt;/a&gt; se haya llamado previamente.</target>
        </trans-unit>
        <trans-unit id="955fdac0a2d1875b5b0361db0e7a3df47df9aae7" translate="yes" xml:space="preserve">
          <source>Executing inside &lt;a href=&quot;function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;, unless under &lt;a href=&quot;init_scope&quot;&gt;&lt;code&gt;tf.init_scope&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;config/run_functions_eagerly&quot;&gt;&lt;code&gt;tf.config.run_functions_eagerly(True)&lt;/code&gt;&lt;/a&gt; is previously called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ae6f15527ec34c1543d31bebd784257e5cbaf2" translate="yes" xml:space="preserve">
          <source>Executing inside a transformation function for &lt;code&gt;tf.dataset&lt;/code&gt;.</source>
          <target state="translated">Ejecutando dentro de una funci&amp;oacute;n de transformaci&amp;oacute;n para &lt;code&gt;tf.dataset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="afc09c3890cde7a5439e81dd8b697e05a081e2fa" translate="yes" xml:space="preserve">
          <source>Execution of TensorFlow operations (ops) and Functions and their stack traces, op types, names (if available) and contexts. In addition, depending on the value of the &lt;code&gt;tensor_debug_mode&lt;/code&gt; argument (see Args section below), the value(s) of the output tensors or more concise summaries of the tensor values will be dumped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f83b6fe3aebf13744e866019556d9129cd7a55be" translate="yes" xml:space="preserve">
          <source>Exit</source>
          <target state="translated">Exit</target>
        </trans-unit>
        <trans-unit id="5f0f9a8e624edb47e9fd7dbb2e16409d83c4e71d" translate="yes" xml:space="preserve">
          <source>Exit a &lt;code&gt;with&lt;/code&gt; block, closing the file.</source>
          <target state="translated">Salga de un bloque &lt;code&gt;with&lt;/code&gt; , cerrando el archivo.</target>
        </trans-unit>
        <trans-unit id="7597ba2e0b5e39e1679b27fd60557a68be49930a" translate="yes" xml:space="preserve">
          <source>Exit makes its input &lt;code&gt;data&lt;/code&gt; available to the parent frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53d33b74e48885a60aeaefa61848809d032af067" translate="yes" xml:space="preserve">
          <source>Exit the training loop by causing &lt;code&gt;should_stop()&lt;/code&gt; to return &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">Salga del ciclo de entrenamiento haciendo que &lt;code&gt;should_stop()&lt;/code&gt; devuelva &lt;code&gt;True&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0b741870e6731ad0d91e1fee0b121c9f3b3a9d19" translate="yes" xml:space="preserve">
          <source>Exit: At the &lt;code&gt;close()&lt;/code&gt;, the hooked session does following things in order:</source>
          <target state="translated">Salir: Al &lt;code&gt;close()&lt;/code&gt; , la sesi&amp;oacute;n enganchada hace las siguientes cosas en orden:</target>
        </trans-unit>
        <trans-unit id="59b327accbcb0a5b8afa0c7176dd223df7684025" translate="yes" xml:space="preserve">
          <source>Exit: At the &lt;code&gt;close()&lt;/code&gt;, the monitored session does following things in order:</source>
          <target state="translated">Salir: Al &lt;code&gt;close()&lt;/code&gt; , la sesi&amp;oacute;n monitoreada hace lo siguiente en orden:</target>
        </trans-unit>
        <trans-unit id="0a2899914246f5edc88765d0b9e6fab5ce9088ec" translate="yes" xml:space="preserve">
          <source>Exits the current frame to its parent frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba5215e7ca7db8397a68e271056050a9a72b04b5" translate="yes" xml:space="preserve">
          <source>Exits the recording context, no further operations are traced.</source>
          <target state="translated">Al salir del contexto de la grabación,no se rastrean más operaciones.</target>
        </trans-unit>
        <trans-unit id="5871b8d86fba0af13c05dc83a5e5933bb7903327" translate="yes" xml:space="preserve">
          <source>Exp</source>
          <target state="translated">Exp</target>
        </trans-unit>
        <trans-unit id="d02ced268437285031df31496017840406816fe9" translate="yes" xml:space="preserve">
          <source>ExpandDims</source>
          <target state="translated">ExpandDims</target>
        </trans-unit>
        <trans-unit id="66a9c909a6870e627a057373b51b024e1e234caa" translate="yes" xml:space="preserve">
          <source>Expands &lt;code&gt;signal&lt;/code&gt;'s &lt;code&gt;axis&lt;/code&gt; dimension into frames of &lt;code&gt;frame_length&lt;/code&gt;.</source>
          <target state="translated">Expande &lt;code&gt;signal&lt;/code&gt; 's &lt;code&gt;axis&lt;/code&gt; dimensi&amp;oacute;n en tramas de &lt;code&gt;frame_length&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="07ec8fb3c2f9a83f1212c818198eb18be20fc96d" translate="yes" xml:space="preserve">
          <source>Expect that this operator acts like square [batch] matrices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed78d9c68766d3f7974883e79c3c2ee397fb39eb" translate="yes" xml:space="preserve">
          <source>Expect that this operator acts like square [batch] matrices. This is autoset to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2e84cf5e41c690d15bf04dd53eb3e1940d7efd1" translate="yes" xml:space="preserve">
          <source>Expect that this operator acts like square [batch] matrices. This is true by default, and will raise a &lt;code&gt;ValueError&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a70987b15a924000fa4f03cb6e44741dda41cd7" translate="yes" xml:space="preserve">
          <source>Expect that this operator acts like square [batch] matrices. This will raise a &lt;code&gt;ValueError&lt;/code&gt; if set to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e87e18362504eb493f757e889ff7557b3cdc2e" translate="yes" xml:space="preserve">
          <source>Expect that this operator is equal to its hermitian transpose.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9c504faeac42d016045a3082d97b557d41aee06" translate="yes" xml:space="preserve">
          <source>Expect that this operator is equal to its hermitian transpose. Default is &lt;code&gt;None&lt;/code&gt;, unless &lt;code&gt;base_operator&lt;/code&gt; is self-adjoint and &lt;code&gt;v = None&lt;/code&gt; (meaning &lt;code&gt;u=v&lt;/code&gt;), in which case this defaults to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ff80b6e2ad8b0833e96612b403a04151f29ed1a" translate="yes" xml:space="preserve">
          <source>Expect that this operator is equal to its hermitian transpose. If &lt;code&gt;diag.dtype&lt;/code&gt; is real, this is auto-set to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77cc2479f628e5648a10b370823417e9c1b39fdf" translate="yes" xml:space="preserve">
          <source>Expect that this operator is equal to its hermitian transpose. If &lt;code&gt;dtype&lt;/code&gt; is real, this is equivalent to being symmetric.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34dd6410b060182728c189e0e384ff137722e537" translate="yes" xml:space="preserve">
          <source>Expect that this operator is equal to its hermitian transpose. If &lt;code&gt;spectrum&lt;/code&gt; is real, this will always be true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d7e4f427b394af81c6c4755816e52af211febd" translate="yes" xml:space="preserve">
          <source>Expect that this operator is equal to its hermitian transpose. This is autoset to true</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b7bef5599ae0ea17823b7a05c81525bc12ac32b" translate="yes" xml:space="preserve">
          <source>Expect that this operator is equal to its hermitian transpose. This operator is self-adjoint only if it is diagonal with real-valued diagonal entries. In this case it is advised to use &lt;code&gt;LinearOperatorDiag&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dc1778998960a4510dd14f56469a3c7e0b4e606" translate="yes" xml:space="preserve">
          <source>Expect that this operator is non-singular.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="989ac1b9782932aecb9a84d1e7a4a8d73c97ad85" translate="yes" xml:space="preserve">
          <source>Expect that this operator is non-singular. Default is &lt;code&gt;None&lt;/code&gt;, unless &lt;code&gt;is_positive_definite&lt;/code&gt; is auto-set to be &lt;code&gt;True&lt;/code&gt; (see below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f38e8c0840dd780167a952867f95db2acf2d0996" translate="yes" xml:space="preserve">
          <source>Expect that this operator is non-singular. This operator is non-singular if and only if its diagonal elements are all non-zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0cccae7dfe0cda76f54ba64adc4914faea09d18" translate="yes" xml:space="preserve">
          <source>Expect that this operator is positive definite, meaning the quadratic form &lt;code&gt;x^H A x&lt;/code&gt; has positive real part for all nonzero &lt;code&gt;x&lt;/code&gt;. Note that we do not require the operator to be self-adjoint to be positive-definite. See: &lt;a href=&quot;https://en.wikipedia.org/wiki/Positive-definite_matrix&quot;&gt;https://en.wikipedia.org/wiki/Positive-definite_matrix&lt;/a&gt;\</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccf3e819c295b6f44464b217eea5321c5b58880b" translate="yes" xml:space="preserve">
          <source>Expect that this operator is positive definite, meaning the quadratic form &lt;code&gt;x^H A x&lt;/code&gt; has positive real part for all nonzero &lt;code&gt;x&lt;/code&gt;. Note that we do not require the operator to be self-adjoint to be positive-definite. See: &lt;a href=&quot;https://en.wikipedia.org/wiki/Positive-definite_matrix#Extension_for_non-symmetric_matrices&quot;&gt;https://en.wikipedia.org/wiki/Positive-definite_matrix#Extension_for_non-symmetric_matrices&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33d6af70faf7a9dc007318b94b3635220360dc9c" translate="yes" xml:space="preserve">
          <source>Expect that this operator is positive definite, meaning the quadratic form &lt;code&gt;x^H A x&lt;/code&gt; has positive real part for all nonzero &lt;code&gt;x&lt;/code&gt;. Note that we do not require the operator to be self-adjoint to be positive-definite. See: &lt;a href=&quot;https://en.wikipedia.org/wiki/Positive-definite_matrix#Extension_for_non-symmetric_matrices&quot;&gt;https://en.wikipedia.org/wiki/Positive-definite_matrix#Extension_for_non-symmetric_matrices&lt;/a&gt; This is autoset to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2db543c8e1b7a95823f6a52b9906c10ae273b2a" translate="yes" xml:space="preserve">
          <source>Expect that this operator is positive definite, meaning the quadratic form &lt;code&gt;x^H A x&lt;/code&gt; has positive real part for all nonzero &lt;code&gt;x&lt;/code&gt;. Note that we do not require the operator to be self-adjoint to be positive-definite. See: https://en.wikipedia.org/wiki/Positive-definite_matrix#Extension_for_non-symmetric_matrices This is autoset to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfff00bc8b663b09d5424f0d8864089f62157862" translate="yes" xml:space="preserve">
          <source>Expect that this operator is positive definite, meaning the real part of all eigenvalues is positive. We do not require the operator to be self-adjoint to be positive-definite. See: &lt;a href=&quot;https://en.wikipedia.org/wiki/Positive-definite_matrix&quot;&gt;https://en.wikipedia.org/wiki/Positive-definite_matrix&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bfa6b06c71067ca9ea4c135d41086622cfc642f" translate="yes" xml:space="preserve">
          <source>Expect that this operator is positive definite. Default is &lt;code&gt;None&lt;/code&gt;, unless &lt;code&gt;base_operator&lt;/code&gt; is positive-definite &lt;code&gt;v = None&lt;/code&gt; (meaning &lt;code&gt;u=v&lt;/code&gt;), and &lt;code&gt;is_diag_update_positive&lt;/code&gt;, in which case this defaults to &lt;code&gt;True&lt;/code&gt;. Note that we say an operator is positive definite when the quadratic form &lt;code&gt;x^H A x&lt;/code&gt; has positive real part for all nonzero &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="139da9d95153e25dba3f850415efd887fc0ca747" translate="yes" xml:space="preserve">
          <source>Expected DataType of the input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ae81d71558cec8f56b66dc632a87a59164ece86" translate="yes" xml:space="preserve">
          <source>Expected data type of &lt;code&gt;inputs&lt;/code&gt; (optional). A value of &lt;code&gt;None&lt;/code&gt; means &quot;infer the input dtype from &lt;code&gt;inputs[0]&lt;/code&gt;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a72255293a9f42dbeb2fc3b382c3fcfbdc4543a" translate="yes" xml:space="preserve">
          <source>Expected data type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9da1e174718b4d7c76cc0fc29691b94431b714b9" translate="yes" xml:space="preserve">
          <source>Expected output shape from function. This argument can be inferred if not explicitly provided. Can be a tuple or function. If a tuple, it only specifies the first dimension onward; sample dimension is assumed either the same as the input: &lt;code&gt;output_shape = (input_shape[0], ) + output_shape&lt;/code&gt; or, the input is &lt;code&gt;None&lt;/code&gt; and the sample dimension is also &lt;code&gt;None&lt;/code&gt;: &lt;code&gt;output_shape = (None, ) + output_shape&lt;/code&gt; If a function, it specifies the entire shape as a function of the input shape: &lt;code&gt;output_shape = f(input_shape)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="706c65c0918b3142862741c4abde68fb16d9eaf4" translate="yes" xml:space="preserve">
          <source>Expected shape of elements of &lt;code&gt;inputs&lt;/code&gt; (optional). Also controls the output shape of this op, which may affect type inference in other ops. A value of &lt;code&gt;None&lt;/code&gt; means &quot;infer the input shape from the shapes in &lt;code&gt;inputs&lt;/code&gt;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa55c83a32144678a956c6c55f5dece7f72317d3" translate="yes" xml:space="preserve">
          <source>Expected type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2ad79af0021ac4858d9226489ac9c04faf0e6f5" translate="yes" xml:space="preserve">
          <source>Experimental API for building input pipelines.</source>
          <target state="translated">API experimental para construir tuberías de entrada.</target>
        </trans-unit>
        <trans-unit id="3d922543e8a08722d92b6501b870ec822f4dcd58" translate="yes" xml:space="preserve">
          <source>Experimental API for using the tf.data service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1ff10b66d8731358ac8244e1c00f640e01f684c" translate="yes" xml:space="preserve">
          <source>Experimental Distribution Strategy library.</source>
          <target state="translated">Biblioteca de Estrategia de Distribución Experimental.</target>
        </trans-unit>
        <trans-unit id="c121ce5da3d3b76d2d947821ab9df93eb5477aa7" translate="yes" xml:space="preserve">
          <source>Experimental context manager for use when defining a custom summary op.</source>
          <target state="translated">Gestor de contexto experimental para su uso en la definición de una operación de resumen personalizada.</target>
        </trans-unit>
        <trans-unit id="7a6421eb20a45fe885418ff8f23d4fdab4324bf1" translate="yes" xml:space="preserve">
          <source>Experimental flag, subject to change. A list of optimizations to apply when converting the model. E.g. &lt;code&gt;[Optimize.DEFAULT]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33059df1673928f219a82fc5c8e21a650d6696a0" translate="yes" xml:space="preserve">
          <source>Experimental flag, subject to change. Enables MLIR-based conversion instead of TOCO conversion. (default True)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="399ecdd35ea931bb278f134ef1957739d468702b" translate="yes" xml:space="preserve">
          <source>Experimental flag, subject to change. Set of OpsSet options supported by the device. (default set([OpsSet.TFLITE_BUILTINS]))</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="599e7a942acaca60cbb896ff7ac216dbee02a59b" translate="yes" xml:space="preserve">
          <source>Experimental flag, subject to change. Specification of target device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a18834879a6b44f43ff0c592756de68465d8408" translate="yes" xml:space="preserve">
          <source>Experimental. Subject to change. List of &lt;a href=&quot;https://www.tensorflow.org/lite/performance/delegates&quot;&gt;TfLiteDelegate&lt;/a&gt; objects returned by lite.load_delegate().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="926762eb23930f8e3ae64c0d83b8664da2e042b6" translate="yes" xml:space="preserve">
          <source>Experimental: this exists to support the usage of V1-style manual summary writing (via the construction of a &lt;a href=&quot;../../compat/v1/summary&quot;&gt;&lt;code&gt;tf.compat.v1.Summary&lt;/code&gt;&lt;/a&gt; protocol buffer) with the V2 summary writing API.</source>
          <target state="translated">Experimental: existe para admitir el uso de la escritura de resumen manual de estilo V1 (mediante la construcci&amp;oacute;n de un &lt;a href=&quot;../../compat/v1/summary&quot;&gt; &lt;code&gt;tf.compat.v1.Summary&lt;/code&gt; &lt;/a&gt; protocolo tf.compat.v1.Summary ) con la API de escritura de resumen V2.</target>
        </trans-unit>
        <trans-unit id="f7e30aa22d9814c16511469aa8ccea8e0ceb1682" translate="yes" xml:space="preserve">
          <source>ExperimentalAssertNextDataset</source>
          <target state="translated">ExperimentalAssertNextDataset</target>
        </trans-unit>
        <trans-unit id="65a9eaa214c2a4a7283e27ec54d2f74b5ae2773e" translate="yes" xml:space="preserve">
          <source>ExperimentalAutoShardDataset</source>
          <target state="translated">ExperimentalAutoShardDataset</target>
        </trans-unit>
        <trans-unit id="1155741c4e50830e9866f67930ced6ece2a730dd" translate="yes" xml:space="preserve">
          <source>ExperimentalBytesProducedStatsDataset</source>
          <target state="translated">ExperimentalBytesProducedStatsDataset</target>
        </trans-unit>
        <trans-unit id="cbb67531ef0b8de9c7ab10906728997a5cbc980d" translate="yes" xml:space="preserve">
          <source>ExperimentalCSVDataset</source>
          <target state="translated">ExperimentalCSVDataset</target>
        </trans-unit>
        <trans-unit id="8bee6db1545035b8173d88fdc5b803b34673e6c9" translate="yes" xml:space="preserve">
          <source>ExperimentalChooseFastestDataset</source>
          <target state="translated">ExperimentalChooseFastestDataset</target>
        </trans-unit>
        <trans-unit id="9747e2520b851d2c9cdcc2a7d37822bc8ce67a1a" translate="yes" xml:space="preserve">
          <source>ExperimentalDatasetCardinality</source>
          <target state="translated">ExperimentalDatasetCardinality</target>
        </trans-unit>
        <trans-unit id="744fc8c282f05b7d196dd0c52340ab3eb80696c3" translate="yes" xml:space="preserve">
          <source>ExperimentalDatasetToTFRecord</source>
          <target state="translated">ExperimentalDatasetToTFRecord</target>
        </trans-unit>
        <trans-unit id="7d42bec61bd63539cde98d948c54ac2dec9f4699" translate="yes" xml:space="preserve">
          <source>ExperimentalDenseToSparseBatchDataset</source>
          <target state="translated">ExperimentalDenseToSparseBatchDataset</target>
        </trans-unit>
        <trans-unit id="082cfaae261616a23f42f235c5504196cfa1ccb6" translate="yes" xml:space="preserve">
          <source>ExperimentalDirectedInterleaveDataset</source>
          <target state="translated">ExperimentalDirectedInterleaveDataset</target>
        </trans-unit>
        <trans-unit id="cde31577a692b8f70044f3f8b993b9353e33ccee" translate="yes" xml:space="preserve">
          <source>ExperimentalGroupByReducerDataset</source>
          <target state="translated">ExperimentalGroupByReducerDataset</target>
        </trans-unit>
        <trans-unit id="b20d0e98014287b37df084a390ad2964a66cdec5" translate="yes" xml:space="preserve">
          <source>ExperimentalGroupByWindowDataset</source>
          <target state="translated">ExperimentalGroupByWindowDataset</target>
        </trans-unit>
        <trans-unit id="cd226a753993460716068aab4ac098440988b719" translate="yes" xml:space="preserve">
          <source>ExperimentalIgnoreErrorsDataset</source>
          <target state="translated">ExperimentalIgnoreErrorsDataset</target>
        </trans-unit>
        <trans-unit id="0f8ed95ca666d8abc80de6bea158a14f751c9e1d" translate="yes" xml:space="preserve">
          <source>ExperimentalIteratorGetDevice</source>
          <target state="translated">ExperimentalIteratorGetDevice</target>
        </trans-unit>
        <trans-unit id="74317fb26b51f75d9003946ff00db597c1d45889" translate="yes" xml:space="preserve">
          <source>ExperimentalLMDBDataset</source>
          <target state="translated">ExperimentalLMDBDataset</target>
        </trans-unit>
        <trans-unit id="6588329804a91e0d3359b84129bf1790a12ee937" translate="yes" xml:space="preserve">
          <source>ExperimentalLatencyStatsDataset</source>
          <target state="translated">ExperimentalLatencyStatsDataset</target>
        </trans-unit>
        <trans-unit id="c06ab95c37522d990f18a0d3291b5f3ab69cff66" translate="yes" xml:space="preserve">
          <source>ExperimentalMapAndBatchDataset</source>
          <target state="translated">ExperimentalMapAndBatchDataset</target>
        </trans-unit>
        <trans-unit id="3d23d6b39dbdaeef53034bab2667a9f1cc87a494" translate="yes" xml:space="preserve">
          <source>ExperimentalMapDataset</source>
          <target state="translated">ExperimentalMapDataset</target>
        </trans-unit>
        <trans-unit id="15b03882b59c1a98ce2908f2d444d9121425ac1f" translate="yes" xml:space="preserve">
          <source>ExperimentalMatchingFilesDataset</source>
          <target state="translated">ExperimentalMatchingFilesDataset</target>
        </trans-unit>
        <trans-unit id="4b833f982f61c3bd6fafd895bae1d8fb00c87a74" translate="yes" xml:space="preserve">
          <source>ExperimentalMaxIntraOpParallelismDataset</source>
          <target state="translated">ExperimentalMaxIntraOpParallelismDataset</target>
        </trans-unit>
        <trans-unit id="68e8ae2163663736bb0add1d59999d9242e6b1f3" translate="yes" xml:space="preserve">
          <source>ExperimentalNonSerializableDataset</source>
          <target state="translated">ExperimentalNonSerializableDataset</target>
        </trans-unit>
        <trans-unit id="f60719db25db93a181e6f986dde77f319ba249aa" translate="yes" xml:space="preserve">
          <source>ExperimentalParallelInterleaveDataset</source>
          <target state="translated">ExperimentalParallelInterleaveDataset</target>
        </trans-unit>
        <trans-unit id="0aea8d666c6a10cfbf8edf68dcca7aec781c1ea4" translate="yes" xml:space="preserve">
          <source>ExperimentalParseExampleDataset</source>
          <target state="translated">ExperimentalParseExampleDataset</target>
        </trans-unit>
        <trans-unit id="099b044748453a100e44dc683a0f72d509004a8f" translate="yes" xml:space="preserve">
          <source>ExperimentalPrivateThreadPoolDataset</source>
          <target state="translated">ExperimentalPrivateThreadPoolDataset</target>
        </trans-unit>
        <trans-unit id="18b8df73deafffd3934e6d88caf12b2921e3f1fd" translate="yes" xml:space="preserve">
          <source>ExperimentalRandomDataset</source>
          <target state="translated">ExperimentalRandomDataset</target>
        </trans-unit>
        <trans-unit id="00573977acb262636f3acf86f1ec2199d26fc97d" translate="yes" xml:space="preserve">
          <source>ExperimentalRebatchDataset</source>
          <target state="translated">ExperimentalRebatchDataset</target>
        </trans-unit>
        <trans-unit id="16fa967c2653dada3e2c8d637963a97b43e6bf79" translate="yes" xml:space="preserve">
          <source>ExperimentalScanDataset</source>
          <target state="translated">ExperimentalScanDataset</target>
        </trans-unit>
        <trans-unit id="f9ef41dff7ba49a65cfb578f0b833503d1b71e5d" translate="yes" xml:space="preserve">
          <source>ExperimentalSetStatsAggregatorDataset</source>
          <target state="translated">ExperimentalSetStatsAggregatorDataset</target>
        </trans-unit>
        <trans-unit id="2c3105da1590b28b73544964faca6a841c448407" translate="yes" xml:space="preserve">
          <source>ExperimentalSleepDataset</source>
          <target state="translated">ExperimentalSleepDataset</target>
        </trans-unit>
        <trans-unit id="8dd787031e43dcee025e349d118489e793e09010" translate="yes" xml:space="preserve">
          <source>ExperimentalSlidingWindowDataset</source>
          <target state="translated">ExperimentalSlidingWindowDataset</target>
        </trans-unit>
        <trans-unit id="ffb62879f1f7865bbeb865a48812c4855e98f60b" translate="yes" xml:space="preserve">
          <source>ExperimentalSqlDataset</source>
          <target state="translated">ExperimentalSqlDataset</target>
        </trans-unit>
        <trans-unit id="ddde7bd97ceccc95a18ec3c2cd39a701d7cc909d" translate="yes" xml:space="preserve">
          <source>ExperimentalStatsAggregatorHandle</source>
          <target state="translated">ExperimentalStatsAggregatorHandle</target>
        </trans-unit>
        <trans-unit id="b498a5ab1740eb4b388270e116912049f504a754" translate="yes" xml:space="preserve">
          <source>ExperimentalStatsAggregatorSummary</source>
          <target state="translated">ExperimentalStatsAggregatorSummary</target>
        </trans-unit>
        <trans-unit id="a5025a95ecf320f6f166894f4c2fd55374b60430" translate="yes" xml:space="preserve">
          <source>ExperimentalTakeWhileDataset</source>
          <target state="translated">ExperimentalTakeWhileDataset</target>
        </trans-unit>
        <trans-unit id="ba249b389273fdcaa2dab5dca9593102149edae1" translate="yes" xml:space="preserve">
          <source>ExperimentalThreadPoolDataset</source>
          <target state="translated">ExperimentalThreadPoolDataset</target>
        </trans-unit>
        <trans-unit id="244b028889d39bd37099f6970ba90c68b81a1315" translate="yes" xml:space="preserve">
          <source>ExperimentalThreadPoolHandle</source>
          <target state="translated">ExperimentalThreadPoolHandle</target>
        </trans-unit>
        <trans-unit id="62eda0fa3c2336159806f0983c6c70960ec181e5" translate="yes" xml:space="preserve">
          <source>ExperimentalUnbatchDataset</source>
          <target state="translated">ExperimentalUnbatchDataset</target>
        </trans-unit>
        <trans-unit id="417f165202c1a73d9e2d67b8e71845b115a74022" translate="yes" xml:space="preserve">
          <source>ExperimentalUniqueDataset</source>
          <target state="translated">ExperimentalUniqueDataset</target>
        </trans-unit>
        <trans-unit id="4c7acad73b567cdcac462ff81f82e54fc6e9259c" translate="yes" xml:space="preserve">
          <source>Expint</source>
          <target state="translated">Expint</target>
        </trans-unit>
        <trans-unit id="60523673d27da2d9be21c4afc99bbda53781fda4" translate="yes" xml:space="preserve">
          <source>Explicit &lt;code&gt;int64&lt;/code&gt;-castable monotonic step value for this summary. If omitted, this defaults to &lt;a href=&quot;experimental/get_step&quot;&gt;&lt;code&gt;tf.summary.experimental.get_step()&lt;/code&gt;&lt;/a&gt;, which must not be None.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd544f84e957b227c02bc3cf27684a28e62d4091" translate="yes" xml:space="preserve">
          <source>Explicit &lt;code&gt;int64&lt;/code&gt;-castable monotonic step value for this summary. If omitted, this defaults to &lt;a href=&quot;get_step&quot;&gt;&lt;code&gt;tf.summary.experimental.get_step()&lt;/code&gt;&lt;/a&gt;, which must not be None.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42a785ca84d56b6101e1f706382fe3e7b06ddbd6" translate="yes" xml:space="preserve">
          <source>Explicitly marks flags as parsed.</source>
          <target state="translated">Explícitamente marca las banderas como analizadas.</target>
        </trans-unit>
        <trans-unit id="ecb86881f951179445ed42ff4652a7bc2018af23" translate="yes" xml:space="preserve">
          <source>Expm1</source>
          <target state="translated">Expm1</target>
        </trans-unit>
        <trans-unit id="ffc0eb352d4fd554ec47ef13b09615fbcdd6b7f9" translate="yes" xml:space="preserve">
          <source>Exponential Linear Unit.</source>
          <target state="translated">Unidad lineal exponencial.</target>
        </trans-unit>
        <trans-unit id="bb5f4f32cc189b6f4dd670fd7b30f74c670b7228" translate="yes" xml:space="preserve">
          <source>Exponential activation function.</source>
          <target state="translated">Función de activación exponencial.</target>
        </trans-unit>
        <trans-unit id="0e03e02cd515bba42965eafc38e09638d1ba2c6f" translate="yes" xml:space="preserve">
          <source>Exponential distribution.</source>
          <target state="translated">Distribución exponencial.</target>
        </trans-unit>
        <trans-unit id="9101b4b871e5e17bd87173bc3ae8137c9a7080f0" translate="yes" xml:space="preserve">
          <source>Exponential linear unit.</source>
          <target state="translated">Unidad lineal exponencial.</target>
        </trans-unit>
        <trans-unit id="f7d014f81f67852159a641e23ea7c906c62bb828" translate="yes" xml:space="preserve">
          <source>Exponentially scaled modified Bessel function of order 0 defined as &lt;code&gt;bessel_i0e(x) = exp(-abs(x)) bessel_i0(x)&lt;/code&gt;.</source>
          <target state="translated">Funci&amp;oacute;n de Bessel modificada a escala exponencial de orden 0 definida como &lt;code&gt;bessel_i0e(x) = exp(-abs(x)) bessel_i0(x)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a77d30ccae12ce68a067ccfe3da843d3e6bcf076" translate="yes" xml:space="preserve">
          <source>Exponentially scaled modified Bessel function of order 0 defined as &lt;code&gt;bessel_i1e(x) = exp(-abs(x)) bessel_i1(x)&lt;/code&gt;.</source>
          <target state="translated">Funci&amp;oacute;n de Bessel modificada a escala exponencial de orden 0 definida como &lt;code&gt;bessel_i1e(x) = exp(-abs(x)) bessel_i1(x)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d9eafc8668c9f38493ae76076b35f34c2fd52217" translate="yes" xml:space="preserve">
          <source>Export output defaults to &lt;code&gt;RegressionOutput&lt;/code&gt;, whereas &lt;code&gt;BinaryClassHead&lt;/code&gt; defaults to &lt;code&gt;PredictOutput&lt;/code&gt;.</source>
          <target state="translated">Exportar salida tiene como valor predeterminado &lt;code&gt;RegressionOutput&lt;/code&gt; , mientras que &lt;code&gt;BinaryClassHead&lt;/code&gt; tiene como valor predeterminado &lt;code&gt;PredictOutput&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c37343fbc2a734ed5d2673a49ae41a53a7d7f024" translate="yes" xml:space="preserve">
          <source>Exporting</source>
          <target state="translated">Exporting</target>
        </trans-unit>
        <trans-unit id="c2c3e4d4e94806a23552dd6d4ca1e15b82a0cf12" translate="yes" xml:space="preserve">
          <source>Exporting from a function without a fixed signature:</source>
          <target state="translated">Exportar desde una función sin una firma fija:</target>
        </trans-unit>
        <trans-unit id="c9270ad488e74dac5b3f8cf66707fb174a4a97cc" translate="yes" xml:space="preserve">
          <source>Exporting/importing meta graphs is not supported unless both &lt;code&gt;graph_def&lt;/code&gt; and &lt;code&gt;graph&lt;/code&gt; are provided. No graph exists when eager execution is enabled.</source>
          <target state="translated">No se admite la exportaci&amp;oacute;n / importaci&amp;oacute;n de &lt;code&gt;graph_def&lt;/code&gt; menos &lt;code&gt;graph&lt;/code&gt; se proporcionen tanto graph_def como graph . No existe ning&amp;uacute;n gr&amp;aacute;fico cuando la ejecuci&amp;oacute;n ansiosa est&amp;aacute; habilitada.</target>
        </trans-unit>
        <trans-unit id="972bac7a70608bcda85786ab7a37bc49e2557b73" translate="yes" xml:space="preserve">
          <source>Exporting/importing meta graphs is not supported. No graph exists when eager execution is enabled.</source>
          <target state="translated">La exportación/importación de metagrafías no está soportada.No existe ningún gráfico cuando se activa la ejecución ansiosa.</target>
        </trans-unit>
        <trans-unit id="85ec1e4960a7b50429456e650b9743c6b77af376" translate="yes" xml:space="preserve">
          <source>Exports a &lt;a href=&quot;../../../../keras/model&quot;&gt;&lt;code&gt;tf.keras.Model&lt;/code&gt;&lt;/a&gt; as a Tensorflow SavedModel. (deprecated)</source>
          <target state="translated">Exporta un &lt;a href=&quot;../../../../keras/model&quot;&gt; &lt;code&gt;tf.keras.Model&lt;/code&gt; &lt;/a&gt; como modelo guardado de Tensorflow. (obsoleto)</target>
        </trans-unit>
        <trans-unit id="037b7cc0a3b1a8fa8456d461b271816999bb63f2" translate="yes" xml:space="preserve">
          <source>Exports a &lt;code&gt;SavedModel&lt;/code&gt; with &lt;code&gt;tf.MetaGraphDefs&lt;/code&gt; for each requested mode.</source>
          <target state="translated">Exporta un &lt;code&gt;SavedModel&lt;/code&gt; con &lt;code&gt;tf.MetaGraphDefs&lt;/code&gt; para cada modo solicitado.</target>
        </trans-unit>
        <trans-unit id="178c80ffa7dd8fc1feabbbefe3b4b843e40d326c" translate="yes" xml:space="preserve">
          <source>Exports inference graph as a &lt;code&gt;SavedModel&lt;/code&gt; into the given dir.</source>
          <target state="translated">Exporta el gr&amp;aacute;fico de inferencia como un &lt;code&gt;SavedModel&lt;/code&gt; en el directorio dado.</target>
        </trans-unit>
        <trans-unit id="18db89eda532930544f1808335bc755809b1d792" translate="yes" xml:space="preserve">
          <source>Exports inference graph as a &lt;code&gt;SavedModel&lt;/code&gt; into the given dir. (deprecated)</source>
          <target state="translated">Exporta el gr&amp;aacute;fico de inferencia como un &lt;code&gt;SavedModel&lt;/code&gt; en el directorio dado. (obsoleto)</target>
        </trans-unit>
        <trans-unit id="d9fa3e5e307c033249da957003469524b5f0592b" translate="yes" xml:space="preserve">
          <source>Exports the Trackable object &lt;code&gt;obj&lt;/code&gt; to &lt;a href=&quot;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/saved_model/README.md&quot;&gt;SavedModel format&lt;/a&gt;.</source>
          <target state="translated">Exporta el objeto rastreable &lt;code&gt;obj&lt;/code&gt; al &lt;a href=&quot;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/saved_model/README.md&quot;&gt;formato SavedModel&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e1098ed652cfc03241430f4e8dedb771d99c6430" translate="yes" xml:space="preserve">
          <source>Exports the given &lt;code&gt;Estimator&lt;/code&gt; to a specific format.</source>
          <target state="translated">Exporta el &lt;code&gt;Estimator&lt;/code&gt; dado a un formato espec&amp;iacute;fico.</target>
        </trans-unit>
        <trans-unit id="8cdb15936b0cda5e7bcdd95275d1bcfe21a8a851" translate="yes" xml:space="preserve">
          <source>Exposes custom classes/functions to Keras deserialization internals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7149496d9a4839c6fb3b5c02bc8d74740f250834" translate="yes" xml:space="preserve">
          <source>Expressions:</source>
          <target state="translated">Expressions:</target>
        </trans-unit>
        <trans-unit id="9292a42dc8a204a53ed967ecd444f32d375aa5ed" translate="yes" xml:space="preserve">
          <source>Extend the list by appending all the items in the given list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a734e674b16dcd29acb5b6a787730554e875a6ad" translate="yes" xml:space="preserve">
          <source>Extension_for_non_symmetric_matrices</source>
          <target state="translated">Extension_for_non_symmetric_matrices</target>
        </trans-unit>
        <trans-unit id="df4b823b15b51a230d5a933752ab9b61e72a53d7" translate="yes" xml:space="preserve">
          <source>Extra args.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="164ea69930ab8df3bb4d3ee0410b1d6bda0c2a6c" translate="yes" xml:space="preserve">
          <source>Extra assets may be written into the &lt;code&gt;SavedModel&lt;/code&gt; via the &lt;code&gt;assets_extra&lt;/code&gt; argument. This should be a dict, where each key gives a destination path (including the filename) relative to the assets.extra directory. The corresponding value gives the full path of the source file to be copied. For example, the simple case of copying a single file without renaming it is specified as &lt;code&gt;{'my_asset_file.txt': '/path/to/my_asset_file.txt'}&lt;/code&gt;.</source>
          <target state="translated">Los activos adicionales se pueden escribir en el &lt;code&gt;SavedModel&lt;/code&gt; mediante el argumento &lt;code&gt;assets_extra&lt;/code&gt; . Esto deber&amp;iacute;a ser un dict, donde cada clave proporciona una ruta de destino (incluido el nombre del archivo) en relaci&amp;oacute;n con el directorio assets.extra. El valor correspondiente proporciona la ruta completa del archivo fuente que se va a copiar. Por ejemplo, el caso simple de copiar un solo archivo sin cambiarle el nombre se especifica como &lt;code&gt;{'my_asset_file.txt': '/path/to/my_asset_file.txt'}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="211ecd9ad94e025432cb8149b1285e365c03b78a" translate="yes" xml:space="preserve">
          <source>Extra kwargs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="492bdefca5e8d605f4b78c8b4ffdeb101c4ed050" translate="yes" xml:space="preserve">
          <source>Extract &lt;code&gt;patches&lt;/code&gt; from &lt;code&gt;images&lt;/code&gt; and put them in the &quot;depth&quot; output dimension.</source>
          <target state="translated">Extraiga &lt;code&gt;patches&lt;/code&gt; de las &lt;code&gt;images&lt;/code&gt; y col&amp;oacute;quelos en la dimensi&amp;oacute;n de salida de &quot;profundidad&quot;.</target>
        </trans-unit>
        <trans-unit id="f7fef71d1e5d8b73071d4f157fbc1a59a9a9a893" translate="yes" xml:space="preserve">
          <source>Extract &lt;code&gt;patches&lt;/code&gt; from &lt;code&gt;images&lt;/code&gt;.</source>
          <target state="translated">Extrae &lt;code&gt;patches&lt;/code&gt; de &lt;code&gt;images&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="584d91d7ab384adf62f6fecbe1176e042c71db3c" translate="yes" xml:space="preserve">
          <source>Extract &lt;code&gt;patches&lt;/code&gt; from &lt;code&gt;input&lt;/code&gt; and put them in the &quot;depth&quot; output dimension. 3D extension of &lt;code&gt;extract_image_patches&lt;/code&gt;.</source>
          <target state="translated">Extraiga &lt;code&gt;patches&lt;/code&gt; de la &lt;code&gt;input&lt;/code&gt; y col&amp;oacute;quelos en la dimensi&amp;oacute;n de salida de &quot;profundidad&quot;. Extensi&amp;oacute;n 3D de &lt;code&gt;extract_image_patches&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="69af2d30e21c558a02bea7b213da79207f5bd726" translate="yes" xml:space="preserve">
          <source>Extract the shape information of a JPEG-encoded image.</source>
          <target state="translated">Extraer la información de la forma de una imagen codificada en JPEG.</target>
        </trans-unit>
        <trans-unit id="538a777bb1a01feffc2ac87710b68583d6d20265" translate="yes" xml:space="preserve">
          <source>Extract the subgraph that can reach any of the nodes in 'dest_nodes'. (deprecated)</source>
          <target state="translated">Extraer la subgrafia que puede llegar a cualquiera de los nodos en 'dest_nodes'.(desaprobado)</target>
        </trans-unit>
        <trans-unit id="1c6ba3898062d75db279ace7c913306852b9ce0a" translate="yes" xml:space="preserve">
          <source>ExtractGlimpse</source>
          <target state="translated">ExtractGlimpse</target>
        </trans-unit>
        <trans-unit id="7871302e2e4d89c45db94e39de3d4b0f5eb46393" translate="yes" xml:space="preserve">
          <source>ExtractGlimpseV2</source>
          <target state="translated">ExtractGlimpseV2</target>
        </trans-unit>
        <trans-unit id="73c5ac1e11985b5070e973bb22c95e12b69bb5a0" translate="yes" xml:space="preserve">
          <source>ExtractImagePatches</source>
          <target state="translated">ExtractImagePatches</target>
        </trans-unit>
        <trans-unit id="50e443aa3db1214e9d2db1699a6ecfbeb4227bcc" translate="yes" xml:space="preserve">
          <source>ExtractJpegShape</source>
          <target state="translated">ExtractJpegShape</target>
        </trans-unit>
        <trans-unit id="7b9c5c5beec37d55a7d01b0acf6dc6eee7d44202" translate="yes" xml:space="preserve">
          <source>ExtractVolumePatches</source>
          <target state="translated">ExtractVolumePatches</target>
        </trans-unit>
        <trans-unit id="62cea78f9cb3874209e78f283267d217fe6be5d3" translate="yes" xml:space="preserve">
          <source>Extraction of the average gradient is blocked until the required number of gradients has been accumulated.</source>
          <target state="translated">La extracción del gradiente medio se bloquea hasta que se haya acumulado el número requerido de gradientes.</target>
        </trans-unit>
        <trans-unit id="eafc900bb37fc83073f4ab7e2220e6aa0f85ad74" translate="yes" xml:space="preserve">
          <source>Extracts a glimpse from the input tensor.</source>
          <target state="translated">Extrae un vistazo del tensor de entrada.</target>
        </trans-unit>
        <trans-unit id="1a34851a4628f1022c20a689edabaafb13781ffb" translate="yes" xml:space="preserve">
          <source>Extracts a slice from a tensor.</source>
          <target state="translated">Extrae un trozo de un tensor.</target>
        </trans-unit>
        <trans-unit id="a97f13695905e343228e8d4f2e7b8debcf2167f3" translate="yes" xml:space="preserve">
          <source>Extracts a strided slice of a tensor (generalized Python array indexing).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c645ed0f344783927bb0e282ac98e2846942b8fa" translate="yes" xml:space="preserve">
          <source>Extracts a strided slice of a tensor (generalized python array indexing).</source>
          <target state="translated">Extrae una rebanada de un tensor (indexación generalizada de la matriz de pitones).</target>
        </trans-unit>
        <trans-unit id="9e84628410abbba57634c26ee47624e6fb5c5296" translate="yes" xml:space="preserve">
          <source>Extracts crops from the input image tensor and resizes them using bilinear sampling or nearest neighbor sampling (possibly with aspect ratio change) to a common output size specified by &lt;code&gt;crop_size&lt;/code&gt;. This is more general than the &lt;code&gt;crop_to_bounding_box&lt;/code&gt; op which extracts a fixed size slice from the input image and does not allow resizing or aspect ratio change.</source>
          <target state="translated">Extrae cultivos del tensor de imagen de entrada y los redimensiona mediante muestreo bilineal o muestreo de vecino m&amp;aacute;s cercano (posiblemente con cambio de relaci&amp;oacute;n de aspecto) a un tama&amp;ntilde;o de salida com&amp;uacute;n especificado por &lt;code&gt;crop_size&lt;/code&gt; . Esto es m&amp;aacute;s general que la &lt;code&gt;crop_to_bounding_box&lt;/code&gt; que extrae un corte de tama&amp;ntilde;o fijo de la imagen de entrada y no permite cambiar el tama&amp;ntilde;o o la relaci&amp;oacute;n de aspecto.</target>
        </trans-unit>
        <trans-unit id="962f25f0a4474fb874998be05b54cc637211919e" translate="yes" xml:space="preserve">
          <source>Extracts crops from the input image tensor and resizes them.</source>
          <target state="translated">Extrae los cultivos del tensor de imagen de entrada y los redimensiona.</target>
        </trans-unit>
        <trans-unit id="fef180b7f701790513171158add127c2106f4b90" translate="yes" xml:space="preserve">
          <source>Extracts image patches from the input tensor to form a &lt;em&gt;virtual&lt;/em&gt; tensor of shape &lt;code&gt;[batch, out_height, out_width, filter_height * filter_width * in_channels]&lt;/code&gt;.</source>
          <target state="translated">Extrae parches de imagen del tensor de entrada para formar un tensor &lt;em&gt;virtual&lt;/em&gt; de forma &lt;code&gt;[batch, out_height, out_width, filter_height * filter_width * in_channels]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="07cd688c87891e471e62de3b6577eae0f97141a7" translate="yes" xml:space="preserve">
          <source>Extracts the average gradient in the given ConditionalAccumulator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ba27b40ca140da982edd658693287a156367197" translate="yes" xml:space="preserve">
          <source>Extracts the average sparse gradient in a SparseConditionalAccumulator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf8300dc1be4d8761c3816eeb71051b6b621dd6e" translate="yes" xml:space="preserve">
          <source>FFT</source>
          <target state="translated">FFT</target>
        </trans-unit>
        <trans-unit id="701d26b9ad9ca0c72e3cdc8a462873f5d778a499" translate="yes" xml:space="preserve">
          <source>FFT2D</source>
          <target state="translated">FFT2D</target>
        </trans-unit>
        <trans-unit id="eb09b8cfd6bd03a6f6997bd421aa03a67c598f30" translate="yes" xml:space="preserve">
          <source>FFT3D</source>
          <target state="translated">FFT3D</target>
        </trans-unit>
        <trans-unit id="0a33510e3c5de82084404c96929039a466c01517" translate="yes" xml:space="preserve">
          <source>FIFOQueue</source>
          <target state="translated">FIFOQueue</target>
        </trans-unit>
        <trans-unit id="ed5def1a4d6839767b84256f0e902a49fe1a15e9" translate="yes" xml:space="preserve">
          <source>FIFOQueueV2</source>
          <target state="translated">FIFOQueueV2</target>
        </trans-unit>
        <trans-unit id="fa59b7e25f71438c8e4f2fdd9767a47ee015c4d1" translate="yes" xml:space="preserve">
          <source>FILL THIS IN</source>
          <target state="translated">LLENAR ESTO EN</target>
        </trans-unit>
        <trans-unit id="c5b64b5401b853d517a09f93af33024aa358f75b" translate="yes" xml:space="preserve">
          <source>FP32/FP16 precision</source>
          <target state="translated">Precisión del FP32/FP16</target>
        </trans-unit>
        <trans-unit id="e68c9f5ad44202d7785d32aa64913fc9806abe58" translate="yes" xml:space="preserve">
          <source>FP32/FP16 precision with pre-built engines</source>
          <target state="translated">FP32/FP16 precisión con motores pre-construidos</target>
        </trans-unit>
        <trans-unit id="e0930077f2b148812df888941f2d13cf6e9ddce0" translate="yes" xml:space="preserve">
          <source>Fact</source>
          <target state="translated">Fact</target>
        </trans-unit>
        <trans-unit id="cf05de317e8bffe740353b81c2056ee7a780f56c" translate="yes" xml:space="preserve">
          <source>Fail if the two objects are equal as determined by the '!=' operator.</source>
          <target state="translated">Falla si los dos objetos son iguales según lo determinado por el operador '!='.</target>
        </trans-unit>
        <trans-unit id="d688f47ff119167da8f40aca7cf48da60d0e1d3c" translate="yes" xml:space="preserve">
          <source>Fail if the two objects are equal as determined by their difference rounded to the given number of decimal places (default 7) and comparing to zero, or by comparing that the difference between the two objects is less than the given delta.</source>
          <target state="translated">Fracasa si los dos objetos son iguales según lo determinado por su diferencia redondeada al número dado de lugares decimales (por defecto 7)y comparando con cero,o comparando que la diferencia entre los dos objetos es menor que el delta dado.</target>
        </trans-unit>
        <trans-unit id="ac6d0b1d84f00848578493c90ccdd59e68b9978d" translate="yes" xml:space="preserve">
          <source>Fail if the two objects are unequal as determined by the '==' operator.</source>
          <target state="translated">Falla si los dos objetos son desiguales según lo determinado por el operador &quot;==&quot;.</target>
        </trans-unit>
        <trans-unit id="9e1cddafab3d11ebc7f9b67baa9212b85f01704a" translate="yes" xml:space="preserve">
          <source>Fail if the two objects are unequal as determined by their difference rounded to the given number of decimal places (default 7) and comparing to zero, or by comparing that the difference between the two objects is more than the given delta.</source>
          <target state="translated">Fracasa si los dos objetos son desiguales según lo determinado por su diferencia redondeada al número dado de lugares decimales (por defecto 7)y comparando con cero,o comparando que la diferencia entre los dos objetos es más que el delta dado.</target>
        </trans-unit>
        <trans-unit id="b90c05535c1484beaa10b9e343151d2dda2df269" translate="yes" xml:space="preserve">
          <source>Fail if the two sequences are unequal as determined by their value differences rounded to the given number of decimal places (default 7) and comparing to zero, or by comparing that the difference between each value in the two sequences is more than the given delta.</source>
          <target state="translated">Fracasa si las dos secuencias son desiguales según lo determinado por sus diferencias de valor redondeadas al número dado de decimales (por defecto 7)y comparadas con cero,o por comparar que la diferencia entre cada valor de las dos secuencias es mayor que el delta dado.</target>
        </trans-unit>
        <trans-unit id="6b09491a2e091e0d4883b90c183a399ea8883f86" translate="yes" xml:space="preserve">
          <source>Fail immediately with the given message, optionally prefixed.</source>
          <target state="translated">Falla inmediatamente con el mensaje dado,opcionalmente prefijado.</target>
        </trans-unit>
        <trans-unit id="a54388df2306db1f46868df1364def0f8214cbb4" translate="yes" xml:space="preserve">
          <source>Fail the test if the text matches the regular expression.</source>
          <target state="translated">Falla la prueba si el texto coincide con la expresión regular.</target>
        </trans-unit>
        <trans-unit id="18174045d242bd42e10c3c0a79548ccc7b04f8e1" translate="yes" xml:space="preserve">
          <source>Fail the test unless the text matches the regular expression.</source>
          <target state="translated">Falla la prueba a menos que el texto coincida con la expresión regular.</target>
        </trans-unit>
        <trans-unit id="317a53187e390a71514cd2ea9224a8dd8fd2c2cb" translate="yes" xml:space="preserve">
          <source>Fail unless a log message of level &lt;em&gt;level&lt;/em&gt; or higher is emitted on &lt;em&gt;logger_name&lt;/em&gt; or its children. If omitted, &lt;em&gt;level&lt;/em&gt; defaults to INFO and &lt;em&gt;logger&lt;/em&gt; defaults to the root logger.</source>
          <target state="translated">Fallar&amp;aacute; a menos que se emita un mensaje de registro de nivel de &lt;em&gt;nivel&lt;/em&gt; o superior en &lt;em&gt;logger_name&lt;/em&gt; o sus hijos. Si se omite, el &lt;em&gt;nivel&lt;/em&gt; predeterminado es INFO y el &lt;em&gt;registrador&lt;/em&gt; predeterminado es el registrador ra&amp;iacute;z.</target>
        </trans-unit>
        <trans-unit id="224a729bea443ca313463dee8480aee3bf36395c" translate="yes" xml:space="preserve">
          <source>Fail unless a warning of class warnClass is triggered by the callable when invoked with specified positional and keyword arguments. If a different type of warning is triggered, it will not be handled: depending on the other warning filtering rules in effect, it might be silenced, printed out, or raised as an exception.</source>
          <target state="translated">Falla a menos que una advertencia de clase warnClass sea activada por el llamable cuando se invoca con argumentos posicionales y de palabra clave especificados.Si se dispara un tipo diferente de advertencia,no se manejará:dependiendo de las otras reglas de filtrado de advertencias en vigor,podría ser silenciada,impresa o levantada como una excepción.</target>
        </trans-unit>
        <trans-unit id="794fe5fe43f2b133d3282805e5b8fcb9248b06f4" translate="yes" xml:space="preserve">
          <source>Fail unless an exception of class expected_exception is raised by the callable when invoked with specified positional and keyword arguments. If a different type of exception is raised, it will not be caught, and the test case will be deemed to have suffered an error, exactly as for an unexpected exception.</source>
          <target state="translated">Falla a menos que una excepción de la clase expected_exception sea planteada por el llamable cuando se invoca con los argumentos de posición y de palabra clave especificados.Si se plantea un tipo diferente de excepción,no será capturada,y se considerará que el caso de prueba ha sufrido un error,exactamente igual que en el caso de una excepción inesperada.</target>
        </trans-unit>
        <trans-unit id="65f7df05d2464c13cd5f0bbde6f45d941d8961b4" translate="yes" xml:space="preserve">
          <source>Fails if the list is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe9444367645842529e9a3b57a826433c9c9f6b6" translate="yes" xml:space="preserve">
          <source>Fake-quantize the 'inputs' tensor of type float and one of the shapes: &lt;code&gt;[d]&lt;/code&gt;,</source>
          <target state="translated">Cuantizar falso el tensor de 'entradas' de tipo float y una de las formas: &lt;code&gt;[d]&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="bbedf832b83cf67d1d445ceada9805aa72173218" translate="yes" xml:space="preserve">
          <source>Fake-quantize the 'inputs' tensor of type float via global float scalars</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9ef99c6b8428d09f63e4a7d97f3a72400b7c4f6" translate="yes" xml:space="preserve">
          <source>Fake-quantize the 'inputs' tensor of type float via global float scalars &lt;code&gt;min&lt;/code&gt;</source>
          <target state="translated">Cuantizar falso el tensor de 'entradas' de tipo float a trav&amp;eacute;s de escalares flotantes globales &lt;code&gt;min&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe600ba02649a81014bb25f5be55edb94bb2afd8" translate="yes" xml:space="preserve">
          <source>Fake-quantize the 'inputs' tensor of type float via per-channel floats</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f52fe643923782ecf2f3d6c9b84b44b2ba6f1284" translate="yes" xml:space="preserve">
          <source>Fake-quantize the 'inputs' tensor, type float to 'outputs' tensor of same type.</source>
          <target state="translated">Falsificar-cuantificar el tensor de &quot;entradas&quot;,tipo flotar a tensor de &quot;salidas&quot; del mismo tipo.</target>
        </trans-unit>
        <trans-unit id="c29ef0a243829482ef6b6023cbd2d09d0e889021" translate="yes" xml:space="preserve">
          <source>Fake-quantize the &lt;code&gt;inputs&lt;/code&gt; tensor of type float per-channel and one of the shapes: &lt;code&gt;[d]&lt;/code&gt;, &lt;code&gt;[b, d]&lt;/code&gt;&lt;code&gt;[b, h, w, d]&lt;/code&gt; via per-channel floats &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt; of shape &lt;code&gt;[d]&lt;/code&gt; to &lt;code&gt;outputs&lt;/code&gt; tensor of same shape as &lt;code&gt;inputs&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="727b1207b79f2486a519a9319dd200c9ea9de4c3" translate="yes" xml:space="preserve">
          <source>Fake-quantize the &lt;code&gt;inputs&lt;/code&gt; tensor of type float via global float scalars &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt; to &lt;code&gt;outputs&lt;/code&gt; tensor of same shape as &lt;code&gt;inputs&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e46f348cd8b7889203cb448d1da505704d10fcb" translate="yes" xml:space="preserve">
          <source>FakeParam</source>
          <target state="translated">FakeParam</target>
        </trans-unit>
        <trans-unit id="f0defc54e271554782715e9167383c6b2d53151f" translate="yes" xml:space="preserve">
          <source>FakeQuantWithMinMaxArgs</source>
          <target state="translated">FakeQuantWithMinMaxArgs</target>
        </trans-unit>
        <trans-unit id="59c4408930e4b26ad854a59cd35ceee3cd12a936" translate="yes" xml:space="preserve">
          <source>FakeQuantWithMinMaxArgsGradient</source>
          <target state="translated">FakeQuantWithMinMaxArgsGradient</target>
        </trans-unit>
        <trans-unit id="9516add6c09133d08b61494ba8b5e16f3a1b95ee" translate="yes" xml:space="preserve">
          <source>FakeQuantWithMinMaxVars</source>
          <target state="translated">FakeQuantWithMinMaxVars</target>
        </trans-unit>
        <trans-unit id="47f90df5afb9d7d45bf8ddfa20626b2abefbf0aa" translate="yes" xml:space="preserve">
          <source>FakeQuantWithMinMaxVarsGradient</source>
          <target state="translated">FakeQuantWithMinMaxVarsGradient</target>
        </trans-unit>
        <trans-unit id="ce35d79dfb2d1f0c87514e8314f60eda45600d4e" translate="yes" xml:space="preserve">
          <source>FakeQuantWithMinMaxVarsPerChannel</source>
          <target state="translated">FakeQuantWithMinMaxVarsPerChannel</target>
        </trans-unit>
        <trans-unit id="7918bf198a7672ba7efcb25b3f8fbdd65d1206df" translate="yes" xml:space="preserve">
          <source>FakeQuantWithMinMaxVarsPerChannelGradient</source>
          <target state="translated">FakeQuantWithMinMaxVarsPerChannelGradient</target>
        </trans-unit>
        <trans-unit id="fc2a938c669af601e0e2b74ec4df166952f52ab4" translate="yes" xml:space="preserve">
          <source>FakeQueue</source>
          <target state="translated">FakeQueue</target>
        </trans-unit>
        <trans-unit id="f29ff2d48a6268f2adc2ad839d270aea14973b8a" translate="yes" xml:space="preserve">
          <source>False (inference): Mean must be a &lt;code&gt;Tensor&lt;/code&gt; of the same shape as scale containing the estimated population mean computed during training. is_training</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f6466b40658f50255a966ff6bc949e1eaf7f324" translate="yes" xml:space="preserve">
          <source>False: executes each operation asynchronously.</source>
          <target state="translated">Falso:ejecuta cada operación asincrónicamente.</target>
        </trans-unit>
        <trans-unit id="92bacbc01b8e8d65a81b7a577564a2ad70746d23" translate="yes" xml:space="preserve">
          <source>Fashion-MNIST dataset.</source>
          <target state="translated">Conjunto de datos del Fashion-MNIST.</target>
        </trans-unit>
        <trans-unit id="6fe9878782b0da78594267486a5626a0be461e0b" translate="yes" xml:space="preserve">
          <source>Fast Fourier transform.</source>
          <target state="translated">Transformación rápida de Fourier.</target>
        </trans-unit>
        <trans-unit id="360d68ba6f807c157ba9ba7b70550e6c9f3ffa4d" translate="yes" xml:space="preserve">
          <source>Fast GRU implementation backed by cuDNN.</source>
          <target state="translated">Implementación rápida de la GRU respaldada por el cuDNN.</target>
        </trans-unit>
        <trans-unit id="8e8bb42b9fb0290de9166de7c16619501a1feb12" translate="yes" xml:space="preserve">
          <source>Fast LSTM implementation backed by cuDNN.</source>
          <target state="translated">Implementación rápida de LSTM respaldada por cuDNN.</target>
        </trans-unit>
        <trans-unit id="4245fa3f7cbed5285f7a0350256c3ba269ba7d00" translate="yes" xml:space="preserve">
          <source>Fast and Accurate Deep Network Learning by Exponential Linear Units (ELUs)</source>
          <target state="translated">Aprendizaje profundo rápido y preciso en red mediante unidades lineales exponenciales (ELU)</target>
        </trans-unit>
        <trans-unit id="d8237bbce750fd0f52af835e027a65a99328e838" translate="yes" xml:space="preserve">
          <source>Fast and Accurate Deep Network Learning by Exponential Linear Units (ELUs) (Clevert et al, 2016)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b1c1fc16a871c94652815a12e26ab11263cad5" translate="yes" xml:space="preserve">
          <source>Faster than sigmoid. Returns &lt;code&gt;0.&lt;/code&gt; if &lt;code&gt;x &amp;lt; -2.5&lt;/code&gt;, &lt;code&gt;1.&lt;/code&gt; if &lt;code&gt;x &amp;gt; 2.5&lt;/code&gt;. In &lt;code&gt;-2.5 &amp;lt;= x &amp;lt;= 2.5&lt;/code&gt;, returns &lt;code&gt;0.2 * x + 0.5&lt;/code&gt;.</source>
          <target state="translated">M&amp;aacute;s r&amp;aacute;pido que sigmoide. Devuelve &lt;code&gt;0.&lt;/code&gt; si &lt;code&gt;x &amp;lt; -2.5&lt;/code&gt; , &lt;code&gt;1.&lt;/code&gt; si &lt;code&gt;x &amp;gt; 2.5&lt;/code&gt; . En &lt;code&gt;-2.5 &amp;lt;= x &amp;lt;= 2.5&lt;/code&gt; , devuelve &lt;code&gt;0.2 * x + 0.5&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b6c1e072633d22e2aade44664891ba9a15e50cd9" translate="yes" xml:space="preserve">
          <source>Faster to compute than sigmoid activation.</source>
          <target state="translated">Más rápido de computar que la activación del sigmoide.</target>
        </trans-unit>
        <trans-unit id="34bfe60cc099d90bd06ed304ed295cf858476330" translate="yes" xml:space="preserve">
          <source>Feature columns are of type V2.</source>
          <target state="translated">Las columnas de características son del tipo V2.</target>
        </trans-unit>
        <trans-unit id="070e6dab4ad4acc3df2f022293102d5f296b468a" translate="yes" xml:space="preserve">
          <source>Feature-wise normalization of the data.</source>
          <target state="translated">Normalización de los datos en función de las características.</target>
        </trans-unit>
        <trans-unit id="c8df39e24b85a777de03f489c7d7b28c6ce75e8b" translate="yes" xml:space="preserve">
          <source>Features to pass to &lt;code&gt;Model&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18562ca43bb61eaf2ba3b85a644d004ea8dbd2c0" translate="yes" xml:space="preserve">
          <source>Feeds multiple Tensor values into the computation as an XLA tuple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0393f05a48a53b0acc3a57a2c1f23aefef05410" translate="yes" xml:space="preserve">
          <source>Felix Gers, Jurgen Schmidhuber, and Fred Cummins. &quot;Learning to forget: Continual prediction with LSTM.&quot; IET, 850-855, 1999.</source>
          <target state="translated">Félix Gers,Jurgen Schmidhuber y Fred Cummins.&quot;Aprendiendo a olvidar:Predicción continua con el LSTM&quot;.IET,850-855,1999.</target>
        </trans-unit>
        <trans-unit id="cef781e4eba5fab9683184738bf500b8295f2bfa" translate="yes" xml:space="preserve">
          <source>Fetch the current asset path.</source>
          <target state="translated">Busca la trayectoria actual de los activos.</target>
        </trans-unit>
        <trans-unit id="7db8b651e30c06e23e32a46b09058541af7a5658" translate="yes" xml:space="preserve">
          <source>Fetches a list of optimizer variables in the default graph.</source>
          <target state="translated">Busca una lista de variables optimizadoras en el gráfico predeterminado.</target>
        </trans-unit>
        <trans-unit id="bff8257ab5af6c57135d5ef7ab020a8747f72ac0" translate="yes" xml:space="preserve">
          <source>Fetches multiple values from infeed as an XLA tuple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="208b0c51cfaca2d2db585f2665561398e6f952bf" translate="yes" xml:space="preserve">
          <source>Fetches the Jacobian-vector product computed for &lt;code&gt;primals&lt;/code&gt;.</source>
          <target state="translated">Obtiene el producto de vector jacobiano calculado para &lt;code&gt;primals&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="37a293b575bf1d5a103c6e0e28889a74b7565cee" translate="yes" xml:space="preserve">
          <source>Fields:</source>
          <target state="translated">Fields:</target>
        </trans-unit>
        <trans-unit id="6c74664d5467bedeeec61d6de90b295aefeb2531" translate="yes" xml:space="preserve">
          <source>Figure illustrates the interaction of these components. &quot;/job:worker/task:0&quot; and &quot;/job:ps/task:0&quot; are both tasks with worker services.</source>
          <target state="translated">La figura ilustra la interacción de estos componentes.&quot;/job:worker/task:0&quot; y &quot;/job:ps/task:0&quot; son ambas tareas con los servicios de los trabajadores.</target>
        </trans-unit>
        <trans-unit id="159e9d467070447df6944016c6ee0bba81137641" translate="yes" xml:space="preserve">
          <source>File I/O wrappers without thread locking.</source>
          <target state="translated">Archivar las envolturas de E/S sin bloqueo de rosca.</target>
        </trans-unit>
        <trans-unit id="584ee58755e2076e25264007123aa2d2050b00ff" translate="yes" xml:space="preserve">
          <source>File name of the plot image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9f961ad24d1f79d5639b56b5b84eebf670b4873" translate="yes" xml:space="preserve">
          <source>File not found. Unable to parse input file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="661f27230645d7517555d35a4f8d6aebea7127b6" translate="yes" xml:space="preserve">
          <source>File object we write to. Default None means sys.stdout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c2587e69f02d48d802800b9b142e0a026de4abb" translate="yes" xml:space="preserve">
          <source>FileStatistics struct that contains information about the path</source>
          <target state="translated">La estructura de FileStatistics que contiene información sobre el camino</target>
        </trans-unit>
        <trans-unit id="527e8517195d6b5d4287766fb96efe43836a8f10" translate="yes" xml:space="preserve">
          <source>Filename for the graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76400426742eb499ed7b34ca39d25c0a420914e8" translate="yes" xml:space="preserve">
          <source>Filename of the CSV file, e.g. &lt;code&gt;'run/log.csv'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47805197178266d81d15ed833d217302d0468cd7" translate="yes" xml:space="preserve">
          <source>Files in tar, tar.gz, tar.bz, and zip formats can also be extracted. Passing a hash will verify the file after download. The command line programs &lt;code&gt;shasum&lt;/code&gt; and &lt;code&gt;sha256sum&lt;/code&gt; can compute the hash.</source>
          <target state="translated">Tambi&amp;eacute;n se pueden extraer archivos en formatos tar, tar.gz, tar.bz y zip. Pasar un hash verificar&amp;aacute; el archivo despu&amp;eacute;s de la descarga. Los programas de l&amp;iacute;nea de comando &lt;code&gt;shasum&lt;/code&gt; y &lt;code&gt;sha256sum&lt;/code&gt; pueden calcular el hash.</target>
        </trans-unit>
        <trans-unit id="7adb6736cf2c9ae017b128f98738ffbae0e58655" translate="yes" xml:space="preserve">
          <source>Fill</source>
          <target state="translated">Fill</target>
        </trans-unit>
        <trans-unit id="1ed5236bdaf974f37a0f419a92c7732085d21554" translate="yes" xml:space="preserve">
          <source>Fills empty rows in the input 2-D &lt;code&gt;SparseTensor&lt;/code&gt; with a default value.</source>
          <target state="translated">Rellena filas vac&amp;iacute;as en el 2-D &lt;code&gt;SparseTensor&lt;/code&gt; de entrada con un valor predeterminado.</target>
        </trans-unit>
        <trans-unit id="5e3594f61821d7256db224b8240957470bce4c5d" translate="yes" xml:space="preserve">
          <source>FilterByLastComponentDataset</source>
          <target state="translated">FilterByLastComponentDataset</target>
        </trans-unit>
        <trans-unit id="dfd7871a81a156bd17377802a56cf380df48a360" translate="yes" xml:space="preserve">
          <source>FilterDataset</source>
          <target state="translated">FilterDataset</target>
        </trans-unit>
        <trans-unit id="191ef391edf179c62838570c65fd5d59b43d8a96" translate="yes" xml:space="preserve">
          <source>Filters &lt;code&gt;sk_params&lt;/code&gt; and returns those in &lt;code&gt;fn&lt;/code&gt;'s arguments.</source>
          <target state="translated">Filtra &lt;code&gt;sk_params&lt;/code&gt; y devuelve los de los argumentos de &lt;code&gt;fn&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d7f85fe5e0eb5829649fc74501c2797e0a5749f7" translate="yes" xml:space="preserve">
          <source>Filters stack frames from the module where this is used (best effort).</source>
          <target state="translated">Los filtros apilan los marcos del módulo donde se utiliza esto (mejor esfuerzo).</target>
        </trans-unit>
        <trans-unit id="f73b921eb11bf8c6c7c26ac1f940650c83b38724" translate="yes" xml:space="preserve">
          <source>Filters this dataset according to &lt;code&gt;predicate&lt;/code&gt;.</source>
          <target state="translated">Filtra este conjunto de datos seg&amp;uacute;n el &lt;code&gt;predicate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f09cc083d67b76042568ffa75f3802f349b3495d" translate="yes" xml:space="preserve">
          <source>Filters this dataset according to &lt;code&gt;predicate&lt;/code&gt;. (deprecated)</source>
          <target state="translated">Filtra este conjunto de datos seg&amp;uacute;n el &lt;code&gt;predicate&lt;/code&gt; . (obsoleto)</target>
        </trans-unit>
        <trans-unit id="c903b1bc45a8ada25a60850da0b09b84ebcde19f" translate="yes" xml:space="preserve">
          <source>Finalizes this graph, making it read-only.</source>
          <target state="translated">Termina este gráfico,haciéndolo de sólo lectura.</target>
        </trans-unit>
        <trans-unit id="ecfa9d80e6f64745e132d951f00acbf9be7b6485" translate="yes" xml:space="preserve">
          <source>Finally use a method (such as &lt;a href=&quot;strategy#reduce&quot;&gt;&lt;code&gt;tf.distribute.Strategy.reduce&lt;/code&gt;&lt;/a&gt;) to convert the resulting &quot;per-replica&quot; values into ordinary &lt;code&gt;Tensor&lt;/code&gt;s.</source>
          <target state="translated">Por &amp;uacute;ltimo, utilice un m&amp;eacute;todo (como &lt;a href=&quot;strategy#reduce&quot;&gt; &lt;code&gt;tf.distribute.Strategy.reduce&lt;/code&gt; &lt;/a&gt; ) para convertir los valores &quot;por r&amp;eacute;plica&quot; resultantes en &lt;code&gt;Tensor&lt;/code&gt; normales .</target>
        </trans-unit>
        <trans-unit id="3acf3bc9d828b2ec13c9c22f9d93cb8857e33537" translate="yes" xml:space="preserve">
          <source>Finds the filename of latest saved checkpoint file.</source>
          <target state="translated">Encuentra el nombre del último archivo del puesto de control guardado.</target>
        </trans-unit>
        <trans-unit id="f5714c745bc465ce920adeb9148ea0e19c01510a" translate="yes" xml:space="preserve">
          <source>Finds the filename of the latest saved checkpoint file in &lt;code&gt;model_dir&lt;/code&gt;.</source>
          <target state="translated">Busca el nombre de archivo del &amp;uacute;ltimo archivo de punto de control guardado en &lt;code&gt;model_dir&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c497ed1562ad942752e69be962a205e29a0fa402" translate="yes" xml:space="preserve">
          <source>Finds the index of the closest cluster center to each input point.</source>
          <target state="translated">Encuentra el índice del centro del cúmulo más cercano a cada punto de entrada.</target>
        </trans-unit>
        <trans-unit id="8da15b6736177a4d172880d414ea982c2a73af6b" translate="yes" xml:space="preserve">
          <source>Finds unique elements along an axis of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="801ce4a21b2fba42ff49470d900e55ccd05344b0" translate="yes" xml:space="preserve">
          <source>Finds unique elements in a 1-D tensor.</source>
          <target state="translated">Encuentra elementos únicos en un tensor 1-D.</target>
        </trans-unit>
        <trans-unit id="ce1610505bb23ec2475caec959a3d3e9dcaa8b92" translate="yes" xml:space="preserve">
          <source>Finds values and indices of the &lt;code&gt;k&lt;/code&gt; largest elements for the last dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b67864305a840562104d7b5e16db9cc161966329" translate="yes" xml:space="preserve">
          <source>Finds values and indices of the &lt;code&gt;k&lt;/code&gt; largest entries for the last dimension.</source>
          <target state="translated">Encuentra valores e &amp;iacute;ndices de las &lt;code&gt;k&lt;/code&gt; entradas m&amp;aacute;s grandes para la &amp;uacute;ltima dimensi&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="d869f52ff41ab5eeded0e9e726302f4621f7c537" translate="yes" xml:space="preserve">
          <source>Finds values of the &lt;code&gt;n&lt;/code&gt;-th order statistic for the last dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fed4c9053d8c85c9d95957c6e01431c7805f793d" translate="yes" xml:space="preserve">
          <source>Fingerprint</source>
          <target state="translated">Fingerprint</target>
        </trans-unit>
        <trans-unit id="af30be9d790e1e119e17560066c8c66fb8f37088" translate="yes" xml:space="preserve">
          <source>Fingerprint op considers the first dimension of &lt;code&gt;data&lt;/code&gt; as the batch dimension, and &lt;code&gt;output[i]&lt;/code&gt; contains the fingerprint value generated from contents in &lt;code&gt;data[i, ...]&lt;/code&gt; for all &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">La operaci&amp;oacute;n de huellas dactilares considera la primera dimensi&amp;oacute;n de los &lt;code&gt;data&lt;/code&gt; como la dimensi&amp;oacute;n del lote, y la &lt;code&gt;output[i]&lt;/code&gt; contiene el valor de la huella dactilar generado a partir del contenido de los &lt;code&gt;data[i, ...]&lt;/code&gt; para todo &lt;code&gt;i&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="76c15bbb59710f1b314ab98c78d26b50b325ff21" translate="yes" xml:space="preserve">
          <source>Fingerprint op writes fingerprint values as byte arrays. For example, the default method &lt;code&gt;farmhash64&lt;/code&gt; generates a 64-bit fingerprint value at a time. This 8-byte value is written out as an &lt;a href=&quot;../tf#uint8&quot;&gt;&lt;code&gt;tf.uint8&lt;/code&gt;&lt;/a&gt; array of size 8, in little-endian order.</source>
          <target state="translated">La operaci&amp;oacute;n de huellas dactilares escribe valores de huellas dactilares como matrices de bytes. Por ejemplo, el m&amp;eacute;todo predeterminado &lt;code&gt;farmhash64&lt;/code&gt; genera un valor de huella digital de 64 bits a la vez. Este valor de 8 bytes se escribe como una matriz &lt;a href=&quot;../tf#uint8&quot;&gt; &lt;code&gt;tf.uint8&lt;/code&gt; &lt;/a&gt; de tama&amp;ntilde;o 8, en orden little-endian.</target>
        </trans-unit>
        <trans-unit id="24ae78f56927f08bdbc48d3e1281bff3edb20d8e" translate="yes" xml:space="preserve">
          <source>Fingerprint op writes fingerprint values as byte arrays. For example, the default method &lt;code&gt;farmhash64&lt;/code&gt; generates a 64-bit fingerprint value at a time. This 8-byte value is written out as an &lt;code&gt;uint8&lt;/code&gt; array of size 8, in little-endian order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a242c8a885f83aee8a0830dee3aaf16d961a5a01" translate="yes" xml:space="preserve">
          <source>First image batch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1713f72b3872acdb411943d79c34f5f92844d757" translate="yes" xml:space="preserve">
          <source>First lets look at the &lt;code&gt;TPUStrategy&lt;/code&gt; mode. Initial setup looks like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88825dd2c9ca761b4e4082e799e362eccb087d5f" translate="yes" xml:space="preserve">
          <source>First set of images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0294ba11a5be64d665b2772cb87eba1fb22ce5ec" translate="yes" xml:space="preserve">
          <source>First we define the following:</source>
          <target state="translated">Primero definimos lo siguiente:</target>
        </trans-unit>
        <trans-unit id="8f4e055f26792fc37dc0795930fb9e3effd084cc" translate="yes" xml:space="preserve">
          <source>Fits the data generator to some sample data.</source>
          <target state="translated">Adapta el generador de datos a algunos datos de muestra.</target>
        </trans-unit>
        <trans-unit id="c0b7fa426d96a8c15b52923880d79992cbbd900d" translate="yes" xml:space="preserve">
          <source>Fits the model on data yielded batch-by-batch by a Python generator. (deprecated)</source>
          <target state="translated">Se ajusta al modelo con los datos obtenidos lote por lote por un generador de Python.(desaprobado)</target>
        </trans-unit>
        <trans-unit id="12d2a04ec34e8795ff7f5f33aa56f7a77c8bcc78" translate="yes" xml:space="preserve">
          <source>Fits the state of the preprocessing layer to the data being passed.</source>
          <target state="translated">Ajusta el estado de la capa de preprocesamiento a los datos que se están pasando.</target>
        </trans-unit>
        <trans-unit id="6f150a50fe544ef1c90226d7313155896658e69c" translate="yes" xml:space="preserve">
          <source>Fits the state of the preprocessing layer to the dataset.</source>
          <target state="translated">Ajusta el estado de la capa de preprocesamiento al conjunto de datos.</target>
        </trans-unit>
        <trans-unit id="b4c93ad759588e5315cfabd75c2a83720a3e7ed5" translate="yes" xml:space="preserve">
          <source>FixedLengthRecordDataset</source>
          <target state="translated">FixedLengthRecordDataset</target>
        </trans-unit>
        <trans-unit id="3574a34e4d48af24eeac301a412e2a8ed6606857" translate="yes" xml:space="preserve">
          <source>FixedLengthRecordDatasetV2</source>
          <target state="translated">FixedLengthRecordDatasetV2</target>
        </trans-unit>
        <trans-unit id="35a112ec36d191800f440593ed2f721eccf12a2a" translate="yes" xml:space="preserve">
          <source>FixedLengthRecordReader</source>
          <target state="translated">FixedLengthRecordReader</target>
        </trans-unit>
        <trans-unit id="b90915625e692ba60987cbe78c6dfc6ac20d16f4" translate="yes" xml:space="preserve">
          <source>FixedLengthRecordReaderV2</source>
          <target state="translated">FixedLengthRecordReaderV2</target>
        </trans-unit>
        <trans-unit id="e8090f0ecfbc570479326449b41013d25258ad70" translate="yes" xml:space="preserve">
          <source>FixedUnigramCandidateSampler</source>
          <target state="translated">FixedUnigramCandidateSampler</target>
        </trans-unit>
        <trans-unit id="bd43985b6e84e310537bfc5ce6baae18de89f97d" translate="yes" xml:space="preserve">
          <source>Flag, a flag that is key to the module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa2e1f778c6645f96905666b9789656bb26fed63" translate="yes" xml:space="preserve">
          <source>Flag, the Flag instance that is key to the module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4094b5a2e81c815e8e34bcf4cd3b25eee8b9a58" translate="yes" xml:space="preserve">
          <source>FlagValues, if it is not None, it should be the FlagValues object where the second definition of flagname occurs. If it is None, we assume that we're being called when attempting to create the flag a second time, and we use the module calling this one as the source of the second definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05ad94b7ab5cfa3bb49b5cf66ed68ef4cc88f05d" translate="yes" xml:space="preserve">
          <source>FlagValues, the FlagValues instance containing flags to remove.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e66158fb7032c7330f941e05310a8365855a84e2" translate="yes" xml:space="preserve">
          <source>FlagValues, the FlagValues instance containing the first definition of flagname.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de3a1b2efacdb9266fcf824696665571c3cb5e29" translate="yes" xml:space="preserve">
          <source>FlagValues, the FlagValues instance from which to copy flags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a98d203a5932a60d1d21ad86dfe32d7b596174" translate="yes" xml:space="preserve">
          <source>FlagValues, the FlagValues instance in which the flag will be declared as a key flag. This should almost never need to be overridden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="523577cd08a5dadf1fa8ca51be720cf50ea970e8" translate="yes" xml:space="preserve">
          <source>FlagValues, the FlagValues instance in which the flags will be declared as key flags. This should almost never need to be overridden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b9e34c5bedd5799d70c5be2dc016736bd7f599c" translate="yes" xml:space="preserve">
          <source>FlagValues, the FlagValues instance with which the flag will be registered. This should almost never need to be overridden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec9aa474a9d19af988bc2752388fc3ad87fabba8" translate="yes" xml:space="preserve">
          <source>FlatMapDataset</source>
          <target state="translated">FlatMapDataset</target>
        </trans-unit>
        <trans-unit id="be7c20b6836a1a8e925b2cd5cc10ae1834fe3d78" translate="yes" xml:space="preserve">
          <source>Flatten a tensor.</source>
          <target state="translated">Aplastar un tensor.</target>
        </trans-unit>
        <trans-unit id="b3f67378d5dfd2e28a398854dac316c760ad7f67" translate="yes" xml:space="preserve">
          <source>Flattening a 3D tensor to 2D by collapsing the last dimension.</source>
          <target state="translated">Aplanar un tensor 3D a 2D colapsando la última dimensión.</target>
        </trans-unit>
        <trans-unit id="98d6725dbcd4174b52a67ca8012a9fe8d4866758" translate="yes" xml:space="preserve">
          <source>Flattens an input tensor while preserving the batch axis (axis 0).</source>
          <target state="translated">Aplana un tensor de entrada mientras preserva el eje del lote (eje 0).</target>
        </trans-unit>
        <trans-unit id="56b885e27e87eca4ac7366c4be1d9b94ad78c3ef" translate="yes" xml:space="preserve">
          <source>Flattens the filter to a 2-D matrix with shape &lt;code&gt;[filter_height * filter_width * in_channels, output_channels]&lt;/code&gt;.</source>
          <target state="translated">Aplana el filtro a una matriz 2-D con forma &lt;code&gt;[filter_height * filter_width * in_channels, output_channels]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d2a63b5612a9d61a1bb9f06334c61eebfd78ea2" translate="yes" xml:space="preserve">
          <source>Flattens the input. Does not affect the batch size.</source>
          <target state="translated">Aplana la entrada.No afecta al tamaño del lote.</target>
        </trans-unit>
        <trans-unit id="604fa3f4b0a02d70b991c191d54820a41775d62a" translate="yes" xml:space="preserve">
          <source>Flip an image horizontally (left to right).</source>
          <target state="translated">Voltear una imagen horizontalmente (de izquierda a derecha).</target>
        </trans-unit>
        <trans-unit id="94b52601c861ca2ab292144c650c85f55273f72f" translate="yes" xml:space="preserve">
          <source>Flip an image vertically (upside down).</source>
          <target state="translated">Voltear una imagen verticalmente (al revés).</target>
        </trans-unit>
        <trans-unit id="3d3f317cb7fee65325f7052ae8fe630967b8fe4c" translate="yes" xml:space="preserve">
          <source>Flip each bit of supported types. For example, type &lt;code&gt;int8&lt;/code&gt; (decimal 2) binary 00000010 becomes (decimal -3) binary 11111101. This operation is performed on each element of the tensor argument &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">Da la vuelta a cada bit de los tipos admitidos. Por ejemplo, escriba &lt;code&gt;int8&lt;/code&gt; (decimal 2) binary 00000010 se convierte en (decimal -3) binary 11111101. Esta operaci&amp;oacute;n se realiza en cada elemento del argumento tensorial &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dcda6c98cb9e0a0755cc58255d1c2b6975073159" translate="yes" xml:space="preserve">
          <source>Flipping, Rotating and Transposing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68474eaa2dfbf245adcb7772e577a27e89ca992f" translate="yes" xml:space="preserve">
          <source>Float &amp;gt;= 0. Maximum activation value. Default to None, which means unlimited.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45c02bc3f6133f11fb75ea8a03fc5d60230f9825" translate="yes" xml:space="preserve">
          <source>Float &amp;gt;= 0. Negative slope coefficient. Default to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7d12594d8171788bee6da84ae17e9e6935dd960" translate="yes" xml:space="preserve">
          <source>Float &amp;gt;= 0. Negative slope coefficient. Default to 0.3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9be19122321c8821714126391793d30f54fefef8" translate="yes" xml:space="preserve">
          <source>Float &amp;gt;= 0. Threshold location of activation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f86fc1cf0e82078e671d21863798aa25b378e8" translate="yes" xml:space="preserve">
          <source>Float &lt;code&gt;Tensor&lt;/code&gt; with shape [D1, ... DN, num_classes] where N &amp;gt;= 1. Commonly, N=1 and &lt;code&gt;predictions&lt;/code&gt; has shape [batch size, num_classes]. The final dimension contains the logit values for each class. [D1, ... DN] must match &lt;code&gt;labels&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6943d4a865cbffca174e2885620f7eb9333c71a0" translate="yes" xml:space="preserve">
          <source>Float &lt;code&gt;Tensor&lt;/code&gt; with shape [D1, ... DN, num_classes] where N &amp;gt;= 1. Commonly, N=1 and predictions has shape [batch size, num_classes]. The final dimension contains the logit values for each class. [D1, ... DN] must match &lt;code&gt;labels&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfee5d04425b55ed3c9e7a09590913fec4ce70f2" translate="yes" xml:space="preserve">
          <source>Float &lt;code&gt;[batch_size, num_classes]&lt;/code&gt; logits outputs of the network.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="517d085479f5cda5431638e7e5e8ca05dd220945" translate="yes" xml:space="preserve">
          <source>Float between 0 and 1. Fraction of the dataset to be used as test data. Defaults to 0.2, meaning 20% of the dataset is used as test data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9c8249e6941260faf8265f241d81626aeb48987" translate="yes" xml:space="preserve">
          <source>Float between 0 and 1. Fraction of the input units to drop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f17f81d04b5a69e3312a3e85057813edf15cf7" translate="yes" xml:space="preserve">
          <source>Float between 0 and 1. Fraction of the training data to be used as validation data. The model will set apart this fraction of the training data, will not train on it, and will evaluate the loss and any model metrics on this data at the end of each epoch. The validation data is selected from the last samples in the &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; data provided, before shuffling. This argument is not supported when &lt;code&gt;x&lt;/code&gt; is a dataset, generator or &lt;a href=&quot;../utils/sequence&quot;&gt;&lt;code&gt;keras.utils.Sequence&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a03838e31ae32dff4cbddc4baeaf2074d2453dd" translate="yes" xml:space="preserve">
          <source>Float between 0 and 1. Fraction of the training data to be used as validation data. The model will set apart this fraction of the training data, will not train on it, and will evaluate the loss and any model metrics on this data at the end of each epoch. The validation data is selected from the last samples in the &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; data provided, before shuffling. This argument is not supported when &lt;code&gt;x&lt;/code&gt; is a dataset, generator or &lt;a href=&quot;utils/sequence&quot;&gt;&lt;code&gt;keras.utils.Sequence&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb694ad9da36e4c6e6511fda4c64089561c3b567" translate="yes" xml:space="preserve">
          <source>Float between 0 and 1. Fraction of the units to drop for the attention scores.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d744e34143b64f1c95f03f4eeb55dcb4b1b9b7e" translate="yes" xml:space="preserve">
          <source>Float between 0 and 1. Fraction of the units to drop for the linear transformation of the inputs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a9a9fde9c898e8df4e03950cdd4bfe7e409334b" translate="yes" xml:space="preserve">
          <source>Float between 0 and 1. Fraction of the units to drop for the linear transformation of the inputs. Default: 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6120061a59f7fa93691e8f9a7f7d69c6882fe17e" translate="yes" xml:space="preserve">
          <source>Float between 0 and 1. Fraction of the units to drop for the linear transformation of the recurrent state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd1b02c175939fbac4ba1a3690a49b6760ce6db4" translate="yes" xml:space="preserve">
          <source>Float between 0 and 1. Fraction of the units to drop for the linear transformation of the recurrent state. Default: 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06bab07d87f67062be43b4853d5ba6a86f11c1fa" translate="yes" xml:space="preserve">
          <source>Float between 0 and 1. controls the width of the network. This is known as the width multiplier in the MobileNetV2 paper, but the name is kept for consistency with &lt;code&gt;applications.MobileNetV1&lt;/code&gt; model in Keras.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c31711227ec413764215a5f8420434d3a2e3ab01" translate="yes" xml:space="preserve">
          <source>Float in [0, 1]. If &amp;gt; &lt;code&gt;0&lt;/code&gt; then smooth the labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65ed0dffee2ad958b3c7a5730581f019bcdfee82" translate="yes" xml:space="preserve">
          <source>Float in [0, 1]. When &amp;gt; 0, label values are smoothed, meaning the confidence on label values are relaxed. e.g. &lt;code&gt;label_smoothing=0.2&lt;/code&gt; means that we will use a value of &lt;code&gt;0.1&lt;/code&gt; for label &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;0.9&lt;/code&gt; for label &lt;code&gt;1&lt;/code&gt;&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="542ca9d0b8111373cb343d51c4f7653bd67ac923" translate="yes" xml:space="preserve">
          <source>Float in [0, 1]. When 0, no smoothing occurs. When &amp;gt; 0, we compute the loss between the predicted labels and a smoothed version of the true labels, where the smoothing squeezes the labels towards 0.5. Larger values of &lt;code&gt;label_smoothing&lt;/code&gt; correspond to heavier smoothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="571a944629b74395deeef2dd46c89375833ef1ec" translate="yes" xml:space="preserve">
          <source>Float or Int. Value used for points outside the boundaries when &lt;code&gt;fill_mode = &quot;constant&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23c7373c4d600371c8388f4ec8d1368219eb307f" translate="yes" xml:space="preserve">
          <source>Float or String, padding value. (Optional, defaults to 0.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db15264d2f77064978f496269f734646754696a9" translate="yes" xml:space="preserve">
          <source>Float or [lower, upper]. Range for random zoom. If a float, &lt;code&gt;[lower, upper] = [1-zoom_range, 1+zoom_range]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="657b826a18a5ab0724c4bee3029a6fe179a224d6" translate="yes" xml:space="preserve">
          <source>Float or complex &lt;code&gt;Tensor&lt;/code&gt;, same &lt;code&gt;dtype&lt;/code&gt; as, and broadcastable to, &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cc356951b1ebf8bcf6c4f33900eda3669d369c2" translate="yes" xml:space="preserve">
          <source>Float or complex &lt;code&gt;Tensor&lt;/code&gt;, same dtype as and broadcastable to &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be97356e0e6bb617cad32df5f2dc24252713dbdb" translate="yes" xml:space="preserve">
          <source>Float or complex &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab97103686ce99291d77e40e99e85c96e3e49b99" translate="yes" xml:space="preserve">
          <source>Float, 1-D array-like or int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05fc673ce09e5453387e297c70756854196ead55" translate="yes" xml:space="preserve">
          <source>Float, drop probability (as with &lt;code&gt;Dropout&lt;/code&gt;). The multiplicative noise will have standard deviation &lt;code&gt;sqrt(rate / (1 - rate))&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6af1b96050d537498291ec624ed09409794a092" translate="yes" xml:space="preserve">
          <source>Float, lower boundary of the output interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d83467c093496629270603f2b93822a26ada466a" translate="yes" xml:space="preserve">
          <source>Float, mean of the normal distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c353aa659bac6e7ec221e19db500b9e130d4c927" translate="yes" xml:space="preserve">
          <source>Float, standard deviation of the noise distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dbe8b05653a4a49ffc6852b7a7a22396cc5412d" translate="yes" xml:space="preserve">
          <source>Float, standard deviation of the normal distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f896efb7c89a8ed25cdd8ebd048ab467a6e6181" translate="yes" xml:space="preserve">
          <source>Float, the offset to apply to the inputs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d45b04048fc2269b71a6ac7ead70ebc4bcdfaeb" translate="yes" xml:space="preserve">
          <source>Float, the scale to apply to the inputs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beaaae9f08955516005c76ecbc47953c81affd96" translate="yes" xml:space="preserve">
          <source>Float, upper boundary of the output interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e86ccaab14de4c58d861390f0e0692236672fba5" translate="yes" xml:space="preserve">
          <source>Float. A multiplicative factor by which the values will be scaled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="084fa1e5102b2fd03b8229b23e59b95fcc0e480c" translate="yes" xml:space="preserve">
          <source>Float. Fraction of images reserved for validation (strictly between 0 and 1).</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
