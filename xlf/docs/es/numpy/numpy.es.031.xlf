<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="numpy">
    <body>
      <group id="numpy">
        <trans-unit id="a2f6820d5cb96b0307ce998df19fe87a189c2651" translate="yes" xml:space="preserve">
          <source>numpy.testing.assert_almost_equal()</source>
          <target state="translated">numpy.testing.assert_almost_equal()</target>
        </trans-unit>
        <trans-unit id="72aced582eed661156acdc534c3df04ec21c6005" translate="yes" xml:space="preserve">
          <source>numpy.testing.assert_approx_equal</source>
          <target state="translated">numpy.testing.assert_approx_equal</target>
        </trans-unit>
        <trans-unit id="8a6b85a9cc137f13404e2aeb22e907a8ae7be2c8" translate="yes" xml:space="preserve">
          <source>numpy.testing.assert_approx_equal()</source>
          <target state="translated">numpy.testing.assert_approx_equal()</target>
        </trans-unit>
        <trans-unit id="4f801d46eb667a0d30bb171614bd1895d8f70bbe" translate="yes" xml:space="preserve">
          <source>numpy.testing.assert_array_almost_equal</source>
          <target state="translated">numpy.testing.assert_array_almost_equal</target>
        </trans-unit>
        <trans-unit id="51e9afedbd11ff004dbcdf51c39b60ee10d9387f" translate="yes" xml:space="preserve">
          <source>numpy.testing.assert_array_almost_equal()</source>
          <target state="translated">numpy.testing.assert_array_almost_equal()</target>
        </trans-unit>
        <trans-unit id="21fc8462f40ee66c2f94d58507025828f26727a0" translate="yes" xml:space="preserve">
          <source>numpy.testing.assert_array_almost_equal_nulp</source>
          <target state="translated">numpy.testing.assert_array_almost_equal_nulp</target>
        </trans-unit>
        <trans-unit id="0014f4601664d7b7fa48b0108a65667e875145b3" translate="yes" xml:space="preserve">
          <source>numpy.testing.assert_array_almost_equal_nulp()</source>
          <target state="translated">numpy.testing.assert_array_almost_equal_nulp()</target>
        </trans-unit>
        <trans-unit id="7ff60e663a573a6b81383f1f75806d14dc135201" translate="yes" xml:space="preserve">
          <source>numpy.testing.assert_array_equal</source>
          <target state="translated">numpy.testing.assert_array_equal</target>
        </trans-unit>
        <trans-unit id="920db0545651ef42f1186e77c52e42e9b84e9876" translate="yes" xml:space="preserve">
          <source>numpy.testing.assert_array_equal()</source>
          <target state="translated">numpy.testing.assert_array_equal()</target>
        </trans-unit>
        <trans-unit id="4cc16f17b4e79536e5209a43fd2a39f488288664" translate="yes" xml:space="preserve">
          <source>numpy.testing.assert_array_less</source>
          <target state="translated">numpy.testing.assert_array_less</target>
        </trans-unit>
        <trans-unit id="5e853a13933f26afdf4da8c0ac87b65424471269" translate="yes" xml:space="preserve">
          <source>numpy.testing.assert_array_less()</source>
          <target state="translated">numpy.testing.assert_array_less()</target>
        </trans-unit>
        <trans-unit id="5b54883898288ac48bbfc91c783b6528814da88e" translate="yes" xml:space="preserve">
          <source>numpy.testing.assert_array_max_ulp</source>
          <target state="translated">numpy.testing.assert_array_max_ulp</target>
        </trans-unit>
        <trans-unit id="4511ad8c6921378a018e67a36cf75dcd18aa3c56" translate="yes" xml:space="preserve">
          <source>numpy.testing.assert_array_max_ulp()</source>
          <target state="translated">numpy.testing.assert_array_max_ulp()</target>
        </trans-unit>
        <trans-unit id="73b7aa4b5e8ad7d2fcbee7eac612c326ceacbf8d" translate="yes" xml:space="preserve">
          <source>numpy.testing.assert_equal</source>
          <target state="translated">numpy.testing.assert_equal</target>
        </trans-unit>
        <trans-unit id="8d5bdabfe9148d665ffb4d7a65b11140b1a7056e" translate="yes" xml:space="preserve">
          <source>numpy.testing.assert_equal()</source>
          <target state="translated">numpy.testing.assert_equal()</target>
        </trans-unit>
        <trans-unit id="387b27b3f40c174da38fef4819176f27a51dc6f0" translate="yes" xml:space="preserve">
          <source>numpy.testing.assert_raises</source>
          <target state="translated">numpy.testing.assert_raises</target>
        </trans-unit>
        <trans-unit id="639bc58f54ab64e60a9efdafa859c89f1728073a" translate="yes" xml:space="preserve">
          <source>numpy.testing.assert_raises()</source>
          <target state="translated">numpy.testing.assert_raises()</target>
        </trans-unit>
        <trans-unit id="d28ab343478394e1b8b8d2229c89cc1f5a1a3a00" translate="yes" xml:space="preserve">
          <source>numpy.testing.assert_raises_regex</source>
          <target state="translated">numpy.testing.assert_raises_regex</target>
        </trans-unit>
        <trans-unit id="b52b34e011814279f68b42599823bb16e8c4869c" translate="yes" xml:space="preserve">
          <source>numpy.testing.assert_raises_regex()</source>
          <target state="translated">numpy.testing.assert_raises_regex()</target>
        </trans-unit>
        <trans-unit id="e38befb42c315fead9ac446de37f664f6f98e6bf" translate="yes" xml:space="preserve">
          <source>numpy.testing.assert_string_equal</source>
          <target state="translated">numpy.testing.assert_string_equal</target>
        </trans-unit>
        <trans-unit id="2964fd4d258c10656f19595af2a52d5408637974" translate="yes" xml:space="preserve">
          <source>numpy.testing.assert_string_equal()</source>
          <target state="translated">numpy.testing.assert_string_equal()</target>
        </trans-unit>
        <trans-unit id="eeba276a16e42e7773885cf89622a9ddf2c26926" translate="yes" xml:space="preserve">
          <source>numpy.testing.assert_warns</source>
          <target state="translated">numpy.testing.assert_warns</target>
        </trans-unit>
        <trans-unit id="5b7733256c345206cee03df1ca2ffa572e292733" translate="yes" xml:space="preserve">
          <source>numpy.testing.assert_warns()</source>
          <target state="translated">numpy.testing.assert_warns()</target>
        </trans-unit>
        <trans-unit id="6d0e5544f77273f80c18e28570195dc39fa1c4f0" translate="yes" xml:space="preserve">
          <source>numpy.testing.dec.deprecated</source>
          <target state="translated">numpy.testing.dec.deprecated</target>
        </trans-unit>
        <trans-unit id="7b69c3a6896f4930b89718bfbd6519265b2399b0" translate="yes" xml:space="preserve">
          <source>numpy.testing.dec.knownfailureif</source>
          <target state="translated">numpy.testing.dec.knownfailureif</target>
        </trans-unit>
        <trans-unit id="5ce005b13ed4d1529669fa5a78ac1e850b98664a" translate="yes" xml:space="preserve">
          <source>numpy.testing.dec.setastest</source>
          <target state="translated">numpy.testing.dec.setastest</target>
        </trans-unit>
        <trans-unit id="2a9ed6cd155eb43bb5ef61d1ec5552953e2393b3" translate="yes" xml:space="preserve">
          <source>numpy.testing.dec.skipif</source>
          <target state="translated">numpy.testing.dec.skipif</target>
        </trans-unit>
        <trans-unit id="3a0e6914434eb8f5c387262f284aa544750e5e30" translate="yes" xml:space="preserve">
          <source>numpy.testing.dec.slow</source>
          <target state="translated">numpy.testing.dec.slow</target>
        </trans-unit>
        <trans-unit id="0542ff0e9875665188a28fec2784fc6452933547" translate="yes" xml:space="preserve">
          <source>numpy.testing.decorate_methods</source>
          <target state="translated">numpy.testing.decorate_methods</target>
        </trans-unit>
        <trans-unit id="2333c0be6a581561e67b2722ea824d65cb155891" translate="yes" xml:space="preserve">
          <source>numpy.testing.decorate_methods()</source>
          <target state="translated">numpy.testing.decorate_methods()</target>
        </trans-unit>
        <trans-unit id="946b43ee103de3a38f92d0ad685eb100ef1a23fd" translate="yes" xml:space="preserve">
          <source>numpy.testing.decorators.deprecated</source>
          <target state="translated">numpy.testing.decorators.deprecated</target>
        </trans-unit>
        <trans-unit id="d4b62f9a68f49578e85fef15373c38dc6fb0946c" translate="yes" xml:space="preserve">
          <source>numpy.testing.decorators.deprecated()</source>
          <target state="translated">numpy.testing.decorators.deprecated()</target>
        </trans-unit>
        <trans-unit id="a3195e03c6cd09bd3411af637c8763e3ef8e0d39" translate="yes" xml:space="preserve">
          <source>numpy.testing.decorators.knownfailureif</source>
          <target state="translated">numpy.testing.decorators.knownfailureif</target>
        </trans-unit>
        <trans-unit id="c16e4f1e83ff5b57c755d5b4e2b2e21b475b9f75" translate="yes" xml:space="preserve">
          <source>numpy.testing.decorators.knownfailureif()</source>
          <target state="translated">numpy.testing.decorators.knownfailureif()</target>
        </trans-unit>
        <trans-unit id="3c2324e4f578e18995af5c193083af622e87fc9f" translate="yes" xml:space="preserve">
          <source>numpy.testing.decorators.setastest</source>
          <target state="translated">numpy.testing.decorators.setastest</target>
        </trans-unit>
        <trans-unit id="093df2d4d0c28a8ebd5f0881a21940cced5936b5" translate="yes" xml:space="preserve">
          <source>numpy.testing.decorators.setastest()</source>
          <target state="translated">numpy.testing.decorators.setastest()</target>
        </trans-unit>
        <trans-unit id="a1172ad9d2f8504a835e6fc9308fee8a9ffb4410" translate="yes" xml:space="preserve">
          <source>numpy.testing.decorators.skipif</source>
          <target state="translated">numpy.testing.decorators.skipif</target>
        </trans-unit>
        <trans-unit id="feb08b9fe481cca2a0387e17cba67af6bf8d2d39" translate="yes" xml:space="preserve">
          <source>numpy.testing.decorators.skipif()</source>
          <target state="translated">numpy.testing.decorators.skipif()</target>
        </trans-unit>
        <trans-unit id="aedd04bbebd0abc30878396f62c0093fc449040b" translate="yes" xml:space="preserve">
          <source>numpy.testing.decorators.slow</source>
          <target state="translated">numpy.testing.decorators.slow</target>
        </trans-unit>
        <trans-unit id="0a3f8f6e312761729e29889117df70a82cb6f774" translate="yes" xml:space="preserve">
          <source>numpy.testing.decorators.slow()</source>
          <target state="translated">numpy.testing.decorators.slow()</target>
        </trans-unit>
        <trans-unit id="97cc0e8cebe7d70eb16bbf7f532ea1d15092d6aa" translate="yes" xml:space="preserve">
          <source>numpy.testing.run_module_suite</source>
          <target state="translated">numpy.testing.run_module_suite</target>
        </trans-unit>
        <trans-unit id="5a9402edf243da2bd45ec6264418798891cb7a03" translate="yes" xml:space="preserve">
          <source>numpy.testing.run_module_suite()</source>
          <target state="translated">numpy.testing.run_module_suite()</target>
        </trans-unit>
        <trans-unit id="12a4e1ebf50a3698399e78f236083ac2c41d4351" translate="yes" xml:space="preserve">
          <source>numpy.testing.rundocs</source>
          <target state="translated">numpy.testing.rundocs</target>
        </trans-unit>
        <trans-unit id="27b1f4fa495b2676e487d7a2cd8f1f491984b3c8" translate="yes" xml:space="preserve">
          <source>numpy.testing.rundocs()</source>
          <target state="translated">numpy.testing.rundocs()</target>
        </trans-unit>
        <trans-unit id="1f56d12b61a82dc5893b75ba88eaadbb4186f68b" translate="yes" xml:space="preserve">
          <source>numpy.testing.suppress_warnings</source>
          <target state="translated">numpy.testing.suppress_warnings</target>
        </trans-unit>
        <trans-unit id="93ef906f44130fb50da6a1a8b42420cbb746173e" translate="yes" xml:space="preserve">
          <source>numpy.testing.suppress_warnings()</source>
          <target state="translated">numpy.testing.suppress_warnings()</target>
        </trans-unit>
        <trans-unit id="13ae86f89a74117cd20f19034679387ef899c04c" translate="yes" xml:space="preserve">
          <source>numpy.testing.suppress_warnings.__call__</source>
          <target state="translated">numpy.testing.suppress_warnings.__call__</target>
        </trans-unit>
        <trans-unit id="d4bbcdfafa77ebc257411c88c74541c34f334cb1" translate="yes" xml:space="preserve">
          <source>numpy.testing.suppress_warnings.filter</source>
          <target state="translated">numpy.testing.suppress_warnings.filter</target>
        </trans-unit>
        <trans-unit id="3c955abca03a70faebde0e54ade51a3b78f76059" translate="yes" xml:space="preserve">
          <source>numpy.testing.suppress_warnings.record</source>
          <target state="translated">numpy.testing.suppress_warnings.record</target>
        </trans-unit>
        <trans-unit id="ab5088ada52f116b380a25b599f4acb70bdc4187" translate="yes" xml:space="preserve">
          <source>numpy.tile</source>
          <target state="translated">numpy.tile</target>
        </trans-unit>
        <trans-unit id="4f1df72aece4aedb77101a06e0d386fb1f210883" translate="yes" xml:space="preserve">
          <source>numpy.tile()</source>
          <target state="translated">numpy.tile()</target>
        </trans-unit>
        <trans-unit id="d7505d231e2a973670b0b92a7b35e30a08927b84" translate="yes" xml:space="preserve">
          <source>numpy.trace</source>
          <target state="translated">numpy.trace</target>
        </trans-unit>
        <trans-unit id="5cb6adcfa166e0196c13ad2b50d4829d787670d2" translate="yes" xml:space="preserve">
          <source>numpy.trace()</source>
          <target state="translated">numpy.trace()</target>
        </trans-unit>
        <trans-unit id="e944c71db032079bfdfad9d63cf81a49074cb422" translate="yes" xml:space="preserve">
          <source>numpy.transpose</source>
          <target state="translated">numpy.transpose</target>
        </trans-unit>
        <trans-unit id="21effb7bd45c66aa5b8c14f6ee35a602260a3189" translate="yes" xml:space="preserve">
          <source>numpy.transpose()</source>
          <target state="translated">numpy.transpose()</target>
        </trans-unit>
        <trans-unit id="c5a8a6a6095c9a529a079b5e18a0e0866a1a8b32" translate="yes" xml:space="preserve">
          <source>numpy.trapz</source>
          <target state="translated">numpy.trapz</target>
        </trans-unit>
        <trans-unit id="ae9020cce0808150cedf72bf4732c98e2ae08b71" translate="yes" xml:space="preserve">
          <source>numpy.trapz()</source>
          <target state="translated">numpy.trapz()</target>
        </trans-unit>
        <trans-unit id="381b29986c460ac8b14abc07a68e7b7cf415b9f6" translate="yes" xml:space="preserve">
          <source>numpy.tri</source>
          <target state="translated">numpy.tri</target>
        </trans-unit>
        <trans-unit id="ced5781b292ecbc430536d2f56dce9b1719e3d8d" translate="yes" xml:space="preserve">
          <source>numpy.tri()</source>
          <target state="translated">numpy.tri()</target>
        </trans-unit>
        <trans-unit id="226303509226590f3c041643e35e15eae8ef3a6e" translate="yes" xml:space="preserve">
          <source>numpy.tril</source>
          <target state="translated">numpy.tril</target>
        </trans-unit>
        <trans-unit id="3210541e1e89827bacd90db447e4d43ffb7a9d22" translate="yes" xml:space="preserve">
          <source>numpy.tril()</source>
          <target state="translated">numpy.tril()</target>
        </trans-unit>
        <trans-unit id="c6893f7c2e8f15568ceba648fea96f90ba4cd92e" translate="yes" xml:space="preserve">
          <source>numpy.tril_indices</source>
          <target state="translated">numpy.tril_indices</target>
        </trans-unit>
        <trans-unit id="cedb1706365e553cca1d2c7f7e7b8648d89b15e4" translate="yes" xml:space="preserve">
          <source>numpy.tril_indices()</source>
          <target state="translated">numpy.tril_indices()</target>
        </trans-unit>
        <trans-unit id="555837793da5a99f14c780f0055a8943aa6960cb" translate="yes" xml:space="preserve">
          <source>numpy.tril_indices_from</source>
          <target state="translated">numpy.tril_indices_from</target>
        </trans-unit>
        <trans-unit id="2bbfd74c2a5846cb1363f05c8013d3996e397625" translate="yes" xml:space="preserve">
          <source>numpy.tril_indices_from()</source>
          <target state="translated">numpy.tril_indices_from()</target>
        </trans-unit>
        <trans-unit id="46db413115d006eb58d3966c1a72454a93f127ed" translate="yes" xml:space="preserve">
          <source>numpy.trim_zeros</source>
          <target state="translated">numpy.trim_zeros</target>
        </trans-unit>
        <trans-unit id="bc99cc5db846f85e58b44b5eb1a9701da3c453cc" translate="yes" xml:space="preserve">
          <source>numpy.trim_zeros()</source>
          <target state="translated">numpy.trim_zeros()</target>
        </trans-unit>
        <trans-unit id="9c89cd04759abfb9e216dea16fbdfd2342bc196b" translate="yes" xml:space="preserve">
          <source>numpy.triu</source>
          <target state="translated">numpy.triu</target>
        </trans-unit>
        <trans-unit id="71a6f2fc82eec552c0a364ff78ef646066c1b083" translate="yes" xml:space="preserve">
          <source>numpy.triu()</source>
          <target state="translated">numpy.triu()</target>
        </trans-unit>
        <trans-unit id="9221f4879f664888b576b6ad5985cc48f997983c" translate="yes" xml:space="preserve">
          <source>numpy.triu_indices</source>
          <target state="translated">numpy.triu_indices</target>
        </trans-unit>
        <trans-unit id="37446f9446a83a8f365adc8f703dfdd1525249d7" translate="yes" xml:space="preserve">
          <source>numpy.triu_indices()</source>
          <target state="translated">numpy.triu_indices()</target>
        </trans-unit>
        <trans-unit id="98f352196e059f1052445723c6d91c2fc0e2c661" translate="yes" xml:space="preserve">
          <source>numpy.triu_indices_from</source>
          <target state="translated">numpy.triu_indices_from</target>
        </trans-unit>
        <trans-unit id="9ba2861480394d28b4fb6158bb5e1eb86da517a0" translate="yes" xml:space="preserve">
          <source>numpy.triu_indices_from()</source>
          <target state="translated">numpy.triu_indices_from()</target>
        </trans-unit>
        <trans-unit id="8884f74523102cd9e7c64aea08533516c821dbec" translate="yes" xml:space="preserve">
          <source>numpy.true_divide</source>
          <target state="translated">numpy.true_divide</target>
        </trans-unit>
        <trans-unit id="b979fea71ac1b15158ac91cc08c3d51adcbb72be" translate="yes" xml:space="preserve">
          <source>numpy.true_divide()</source>
          <target state="translated">numpy.true_divide()</target>
        </trans-unit>
        <trans-unit id="5b1ba82a3f4b07e810cd36eac474c4843ed4dc96" translate="yes" xml:space="preserve">
          <source>numpy.trunc</source>
          <target state="translated">numpy.trunc</target>
        </trans-unit>
        <trans-unit id="70b3987d1032cb19220f4fc433accc42c459e9d8" translate="yes" xml:space="preserve">
          <source>numpy.trunc()</source>
          <target state="translated">numpy.trunc()</target>
        </trans-unit>
        <trans-unit id="fc891b7828fe089d9559b64c3c93cd96ebe5afce" translate="yes" xml:space="preserve">
          <source>numpy.typename</source>
          <target state="translated">numpy.typename</target>
        </trans-unit>
        <trans-unit id="fbd8c48955b653d67f10f52bf18fc3fd51149715" translate="yes" xml:space="preserve">
          <source>numpy.typename()</source>
          <target state="translated">numpy.typename()</target>
        </trans-unit>
        <trans-unit id="7f5a734463c496e9350f1f5c1adeb4b10e1de438" translate="yes" xml:space="preserve">
          <source>numpy.ufunc</source>
          <target state="translated">numpy.ufunc</target>
        </trans-unit>
        <trans-unit id="e48a7e69e8e71d9314cb0735d0f1518be7bdb381" translate="yes" xml:space="preserve">
          <source>numpy.ufunc.__call__</source>
          <target state="translated">numpy.ufunc.__call__</target>
        </trans-unit>
        <trans-unit id="421f87edd005ac420428092dede2d85a9a0ba042" translate="yes" xml:space="preserve">
          <source>numpy.ufunc.accumulate</source>
          <target state="translated">numpy.ufunc.accumulate</target>
        </trans-unit>
        <trans-unit id="cb8b4acc0068b927de2cd3ebe3a0225ba830bec0" translate="yes" xml:space="preserve">
          <source>numpy.ufunc.at</source>
          <target state="translated">numpy.ufunc.at</target>
        </trans-unit>
        <trans-unit id="c6561b0a6a84a61b88034cfec9fa399c8a7db283" translate="yes" xml:space="preserve">
          <source>numpy.ufunc.identity</source>
          <target state="translated">numpy.ufunc.identity</target>
        </trans-unit>
        <trans-unit id="13a81667f6c6ccf36f3de00469e0cf3eca8c3a44" translate="yes" xml:space="preserve">
          <source>numpy.ufunc.nargs</source>
          <target state="translated">numpy.ufunc.nargs</target>
        </trans-unit>
        <trans-unit id="df5f9253e2b7030c2d3a50dfdd52a8afb484af4a" translate="yes" xml:space="preserve">
          <source>numpy.ufunc.nin</source>
          <target state="translated">numpy.ufunc.nin</target>
        </trans-unit>
        <trans-unit id="0313ced3d6a2f59e82a5df510022b7456e78a695" translate="yes" xml:space="preserve">
          <source>numpy.ufunc.nout</source>
          <target state="translated">numpy.ufunc.nout</target>
        </trans-unit>
        <trans-unit id="b19a96947f384c938dffa18e9d82f7b6238181c5" translate="yes" xml:space="preserve">
          <source>numpy.ufunc.ntypes</source>
          <target state="translated">numpy.ufunc.ntypes</target>
        </trans-unit>
        <trans-unit id="175c44284d80f7a6029b9eadad26c65cd60381b7" translate="yes" xml:space="preserve">
          <source>numpy.ufunc.outer</source>
          <target state="translated">numpy.ufunc.outer</target>
        </trans-unit>
        <trans-unit id="a247d2fcf1430e4da15bc4b84ea3130bb7dcdfe8" translate="yes" xml:space="preserve">
          <source>numpy.ufunc.reduce</source>
          <target state="translated">numpy.ufunc.reduce</target>
        </trans-unit>
        <trans-unit id="e41b0fa4be5fb46b9c56bb4cf210f8379247ca67" translate="yes" xml:space="preserve">
          <source>numpy.ufunc.reduceat</source>
          <target state="translated">numpy.ufunc.reduceat</target>
        </trans-unit>
        <trans-unit id="68b2975f67b0b029fed307607e99266ed4c1735c" translate="yes" xml:space="preserve">
          <source>numpy.ufunc.signature</source>
          <target state="translated">numpy.ufunc.signature</target>
        </trans-unit>
        <trans-unit id="42d4e06b67f327d869abe57882f21186e13da3ae" translate="yes" xml:space="preserve">
          <source>numpy.ufunc.types</source>
          <target state="translated">numpy.ufunc.types</target>
        </trans-unit>
        <trans-unit id="d59103b9db7f14447e096450a5ffb6b284b188dd" translate="yes" xml:space="preserve">
          <source>numpy.union1d</source>
          <target state="translated">numpy.union1d</target>
        </trans-unit>
        <trans-unit id="124c4e675faa1d15c32f60736baf1acc4cfa10af" translate="yes" xml:space="preserve">
          <source>numpy.union1d()</source>
          <target state="translated">numpy.union1d()</target>
        </trans-unit>
        <trans-unit id="819c2ad5df65b1c96ceb38529f7c332986474eaf" translate="yes" xml:space="preserve">
          <source>numpy.unique</source>
          <target state="translated">numpy.unique</target>
        </trans-unit>
        <trans-unit id="c13550498c2e3f3cec24dfdab373f88f4a03e5fd" translate="yes" xml:space="preserve">
          <source>numpy.unique()</source>
          <target state="translated">numpy.unique()</target>
        </trans-unit>
        <trans-unit id="5f90f3d13f8574f34b2df4ce9d9b52b8846722d7" translate="yes" xml:space="preserve">
          <source>numpy.unpackbits</source>
          <target state="translated">numpy.unpackbits</target>
        </trans-unit>
        <trans-unit id="deb58a6e4c6668b80cfeda08a6572e35ce4e53b5" translate="yes" xml:space="preserve">
          <source>numpy.unpackbits()</source>
          <target state="translated">numpy.unpackbits()</target>
        </trans-unit>
        <trans-unit id="5cd7bf0617b674e62da30e12fb35bdf60ca2193b" translate="yes" xml:space="preserve">
          <source>numpy.unravel_index</source>
          <target state="translated">numpy.unravel_index</target>
        </trans-unit>
        <trans-unit id="a83078bc142539ca22c2d232a6560b219b9c56a8" translate="yes" xml:space="preserve">
          <source>numpy.unravel_index()</source>
          <target state="translated">numpy.unravel_index()</target>
        </trans-unit>
        <trans-unit id="163ee2cbc42c1dc9fec22069e9b846663f494d89" translate="yes" xml:space="preserve">
          <source>numpy.unwrap</source>
          <target state="translated">numpy.unwrap</target>
        </trans-unit>
        <trans-unit id="91b509acb524a5e72a4026dba932d9ab608af9b4" translate="yes" xml:space="preserve">
          <source>numpy.unwrap()</source>
          <target state="translated">numpy.unwrap()</target>
        </trans-unit>
        <trans-unit id="27983d9ad46904a5a749800e64c84bdcd81da2b1" translate="yes" xml:space="preserve">
          <source>numpy.vander</source>
          <target state="translated">numpy.vander</target>
        </trans-unit>
        <trans-unit id="4b451d13b041e8c58f5a76dbcff0d76a8ccaaed3" translate="yes" xml:space="preserve">
          <source>numpy.vander()</source>
          <target state="translated">numpy.vander()</target>
        </trans-unit>
        <trans-unit id="cf9003fcf2dcd4ebb4ce5666b3b1a0d3ba4d2685" translate="yes" xml:space="preserve">
          <source>numpy.var</source>
          <target state="translated">numpy.var</target>
        </trans-unit>
        <trans-unit id="f64903e7c3ec16133d2a8195ae795823f26cd02b" translate="yes" xml:space="preserve">
          <source>numpy.var()</source>
          <target state="translated">numpy.var()</target>
        </trans-unit>
        <trans-unit id="05b11304f755844147800f974d7e1241a43c8c5a" translate="yes" xml:space="preserve">
          <source>numpy.vdot</source>
          <target state="translated">numpy.vdot</target>
        </trans-unit>
        <trans-unit id="445eabe676dd3eb204997120fe68393a77dab9e4" translate="yes" xml:space="preserve">
          <source>numpy.vdot()</source>
          <target state="translated">numpy.vdot()</target>
        </trans-unit>
        <trans-unit id="9340e25330028b075e9d1a200fbda2b672c356f9" translate="yes" xml:space="preserve">
          <source>numpy.vectorize</source>
          <target state="translated">numpy.vectorize</target>
        </trans-unit>
        <trans-unit id="d110f8670db0e9159f3c2f4a8075ec901d0b575e" translate="yes" xml:space="preserve">
          <source>numpy.vectorize()</source>
          <target state="translated">numpy.vectorize()</target>
        </trans-unit>
        <trans-unit id="b86de75de7f18320d1d484c1c3cb9163031aa022" translate="yes" xml:space="preserve">
          <source>numpy.vectorize.__call__</source>
          <target state="translated">numpy.vectorize.__call__</target>
        </trans-unit>
        <trans-unit id="9b8a7faefa9958ca8b321b3946cadf82f7a89e96" translate="yes" xml:space="preserve">
          <source>numpy.vsplit</source>
          <target state="translated">numpy.vsplit</target>
        </trans-unit>
        <trans-unit id="9fd6a32df0967bf266cd65b51e56c1c8ea2ca3ca" translate="yes" xml:space="preserve">
          <source>numpy.vsplit()</source>
          <target state="translated">numpy.vsplit()</target>
        </trans-unit>
        <trans-unit id="8bccb98e46b1d0f136c875046c282447542980a1" translate="yes" xml:space="preserve">
          <source>numpy.vstack</source>
          <target state="translated">numpy.vstack</target>
        </trans-unit>
        <trans-unit id="7c9ea9e8340b5f11f02d7584a5df65ac0079b4e7" translate="yes" xml:space="preserve">
          <source>numpy.vstack()</source>
          <target state="translated">numpy.vstack()</target>
        </trans-unit>
        <trans-unit id="083060aa10a19051131750f6f57453deb24b046d" translate="yes" xml:space="preserve">
          <source>numpy.where</source>
          <target state="translated">numpy.where</target>
        </trans-unit>
        <trans-unit id="366bb7177e923cbaa4b1f3aa1f6ea57e223859b8" translate="yes" xml:space="preserve">
          <source>numpy.where()</source>
          <target state="translated">numpy.where()</target>
        </trans-unit>
        <trans-unit id="28de065d44317a34e2f6fd4abe0cc4c6e432bbab" translate="yes" xml:space="preserve">
          <source>numpy.who</source>
          <target state="translated">numpy.who</target>
        </trans-unit>
        <trans-unit id="684c5de471b48280baba7abc3fde04b5a6b1facb" translate="yes" xml:space="preserve">
          <source>numpy.zeros</source>
          <target state="translated">numpy.zeros</target>
        </trans-unit>
        <trans-unit id="bfe92df428abbe8125e04270bc2ae19bc5624d0e" translate="yes" xml:space="preserve">
          <source>numpy.zeros()</source>
          <target state="translated">numpy.zeros()</target>
        </trans-unit>
        <trans-unit id="652b5d165c9ab95f18986a473899f9a8ecc3bd3e" translate="yes" xml:space="preserve">
          <source>numpy.zeros_like</source>
          <target state="translated">numpy.zeros_like</target>
        </trans-unit>
        <trans-unit id="e8f8be87f4257101f3883fa0d563c4c9f8478a69" translate="yes" xml:space="preserve">
          <source>numpy.zeros_like()</source>
          <target state="translated">numpy.zeros_like()</target>
        </trans-unit>
        <trans-unit id="abb71ce364e25725e8b4834710303ea454c988a9" translate="yes" xml:space="preserve">
          <source>numpy/core/code_generators/cversions.txt</source>
          <target state="translated">numpy/core/code_generators/cversions.txt</target>
        </trans-unit>
        <trans-unit id="4cce4f8bdc286203595d70679922b6a01a1f982f" translate="yes" xml:space="preserve">
          <source>numpy/core/include/numpy/numpyconfig.h</source>
          <target state="translated">numpy/core/include/numpy/numpyconfig.h</target>
        </trans-unit>
        <trans-unit id="f6acfc0cb730969942c5b591a10576da3d528fe8" translate="yes" xml:space="preserve">
          <source>numpy/core/setup_common.py</source>
          <target state="translated">numpy/core/setup_common.py</target>
        </trans-unit>
        <trans-unit id="2bf28ea2b643088f0b48771453fb1ff5eb17a0b5" translate="yes" xml:space="preserve">
          <source>numpydoc (pip)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ed23391e9778e9bb1c6584936e01779b8c94d82" translate="yes" xml:space="preserve">
          <source>numpydoc docstring guide</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34d185facfcc43e189f406294624d613153687f0" translate="yes" xml:space="preserve">
          <source>numpydoc on GitHub</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3bd4df04daac2c4da130545efc39da3793aa0b7" translate="yes" xml:space="preserve">
          <source>numpydoc on PyPI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3582690c2b2f60371529e3ed28535da29b7f5c97" translate="yes" xml:space="preserve">
          <source>o() (numpy.poly1d property)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f8c49999da1305394853cde06301b628107b6d8" translate="yes" xml:space="preserve">
          <source>obj2sctype() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1615307cc4523f183e777df67f168c86908e8007" translate="yes" xml:space="preserve">
          <source>object</source>
          <target state="translated">object</target>
        </trans-unit>
        <trans-unit id="091979d6f895e69062dc7c70c564db434543fa96" translate="yes" xml:space="preserve">
          <source>object dtype detection for old-style classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8112be634c57c7551c4b2d17158af8769a9bff6" translate="yes" xml:space="preserve">
          <source>objects as inputs and returns an iterator that returns tuples providing each of the input sequence elements in the broadcasted result.</source>
          <target state="translated">objetos como entradas y devuelve un iterador que devuelve tuplas que proporcionan cada uno de los elementos de la secuencia de entrada en el resultado emitido.</target>
        </trans-unit>
        <trans-unit id="0ddf40d62e609815585c1bc87a1a4c4aa8c71824" translate="yes" xml:space="preserve">
          <source>odd: &lt;code&gt;ihfft(hfft(a, 2*len(a) - 1) == a&lt;/code&gt;, within roundoff error.</source>
          <target state="translated">impar: &lt;code&gt;ihfft(hfft(a, 2*len(a) - 1) == a&lt;/code&gt; , dentro del error de redondeo.</target>
        </trans-unit>
        <trans-unit id="7f986e20222ce35d0a10b616cc5b81e1795eca47" translate="yes" xml:space="preserve">
          <source>odd: &lt;code&gt;ihfft(hfft(a, 2*len(a) - 1)) == a&lt;/code&gt;, within roundoff error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8df1b931b6b96156eae7fe0618127986d76b7363" translate="yes" xml:space="preserve">
          <source>of &lt;code&gt;P&lt;/code&gt; so that</source>
          <target state="translated">de &lt;code&gt;P&lt;/code&gt; para que</target>
        </trans-unit>
        <trans-unit id="3f1d70a46fbc0cf010cfdfb53a8ed316b477c465" translate="yes" xml:space="preserve">
          <source>of &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt; where</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ce0b8aa5532766e83fadc14078b033fa720ed23" translate="yes" xml:space="preserve">
          <source>of &lt;code&gt;a&lt;/code&gt;, where</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c5bd10e0734f7814a5b445d7ccb4063f401eacc" translate="yes" xml:space="preserve">
          <source>of a Dirichlet-distributed random vector</source>
          <target state="translated">de un vector aleatorio distribuido por Dirichlet</target>
        </trans-unit>
        <trans-unit id="53a610e925bbc0a175e365d31241ae75aeead651" translate="yes" xml:space="preserve">
          <source>offset</source>
          <target state="translated">offset</target>
        </trans-unit>
        <trans-unit id="56be1bac55f90a0e639307ec18899937d43e6102" translate="yes" xml:space="preserve">
          <source>ogrid (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c5b83b1fe438ecd1bee3663c7a9df34f2aad1ac" translate="yes" xml:space="preserve">
          <source>one of them is 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="412dfba5e726155b6e77f013057ac0df359b0488" translate="yes" xml:space="preserve">
          <source>ones (in module numpy.ma)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="983f3bd6fa7e9248f8ab975be13e62832e95d6af" translate="yes" xml:space="preserve">
          <source>ones() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b31cdeedacbc97a6d7f108aba4b4b6976047b44" translate="yes" xml:space="preserve">
          <source>ones(shape) will create an array filled with 1 values. It is identical to zeros in all other respects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908ef5f2763f1f9d5bd47a0cd9ed49834d4945ba" translate="yes" xml:space="preserve">
          <source>ones_like() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36a81b5190a227c48e077fc904c7b658bdc6e4e8" translate="yes" xml:space="preserve">
          <source>open() (numpy.DataSource method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68ea7f38a38fa2f82cca918a413c1fe1a6fa23dc" translate="yes" xml:space="preserve">
          <source>operands (numpy.nditer attribute)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf71383f1ee410f928e7e9c4ced411ff6de04559" translate="yes" xml:space="preserve">
          <source>operands[&lt;code&gt;Slice&lt;/code&gt;]</source>
          <target state="translated">operands[&lt;code&gt;Slice&lt;/code&gt;]</target>
        </trans-unit>
        <trans-unit id="3392eac0f6d72273452e6da9cc8a1f254196f5f4" translate="yes" xml:space="preserve">
          <source>optional output arrays</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e34115f1cd6acd6cb70d78baf65a59b3c4909e6" translate="yes" xml:space="preserve">
          <source>optional pickle version. If omitted defaults to 0.</source>
          <target state="translated">versión opcional de pepinillos.Si se omite,el valor por defecto es 0.</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="410feaa9846788c4f22f830d84915c72ce56db39" translate="yes" xml:space="preserve">
          <source>or an array of the right size:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ea0a4c0acd517ca4a3b1608bb21eeacc2f9ce22" translate="yes" xml:space="preserve">
          <source>or by demonstrative (or real, if the signature file is a real Fortran code) call in the &lt;code&gt;&amp;lt;other statements&amp;gt;&lt;/code&gt; block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="149a7262c48324f7e915322f254419ccc4b1545e" translate="yes" xml:space="preserve">
          <source>or checking the type of data in the array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84de320f9be5bed8580190b54236016984c3c8b7" translate="yes" xml:space="preserve">
          <source>or controlled for individual polynomial instances with string formatting:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3dbff14cf3edef592aadd7535b66cc40d6e6d68" translate="yes" xml:space="preserve">
          <source>or explicitly type the array like object as &lt;a href=&quot;https://docs.python.org/dev/library/typing.html#typing.Any&quot;&gt;&lt;code&gt;Any&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c4bb3ef2a3ea651bcfcd72ac3adea7bad2501b7" translate="yes" xml:space="preserve">
          <source>or explicitly:</source>
          <target state="translated">o explícitamente:</target>
        </trans-unit>
        <trans-unit id="0c9156fb9792e2268dd69fbcc549b0bd4b68da8b" translate="yes" xml:space="preserve">
          <source>or from the command line:</source>
          <target state="translated">o desde la línea de mando:</target>
        </trans-unit>
        <trans-unit id="25f94139bf5360b1777a3a97c4dba32ae0413a4e" translate="yes" xml:space="preserve">
          <source>or less over the interval</source>
          <target state="translated">o menos en el intervalo</target>
        </trans-unit>
        <trans-unit id="f11b1f6af0504dbc7d473c8f62aaa4dd9547c375" translate="yes" xml:space="preserve">
          <source>or older version: &lt;code&gt;random.rand((3, 4))&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0f43d85ceb838a461b9d02c350fd11affdaf9b1" translate="yes" xml:space="preserve">
          <source>or setting it to &lt;code&gt;1&lt;/code&gt; to always enable it. When not set, the default is to use madvise on Kernels 4.6 and newer. These kernels presumably experience a large speedup with hugepage support. This flag is checked at import time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cf62cd556bd7bacb62c28131a36f7dd50cc58c8" translate="yes" xml:space="preserve">
          <source>or that everybody is happy or agrees with every decision.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9714366c724bdfd7f435338b1d6653d96334bd6" translate="yes" xml:space="preserve">
          <source>or views which move by multiple elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5af45ef290d212a0189e819947ecbb04d3e50cde" translate="yes" xml:space="preserve">
          <source>or, when &lt;code&gt;rate = 0&lt;/code&gt;:</source>
          <target state="translated">o, cuando &lt;code&gt;rate = 0&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0ffeb31b4a9110d7ce0df6aedc89c4e63bf6f4b9" translate="yes" xml:space="preserve">
          <source>or, when &lt;code&gt;rate == 0&lt;/code&gt;:</source>
          <target state="translated">o, cuando &lt;code&gt;rate == 0&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="1d9ad0addee82809659247e9008e6f9e82aa9000" translate="yes" xml:space="preserve">
          <source>or:</source>
          <target state="translated">or:</target>
        </trans-unit>
        <trans-unit id="39368e12dca7c23b36b1cda458325a542f4a6a26" translate="yes" xml:space="preserve">
          <source>ord</source>
          <target state="translated">ord</target>
        </trans-unit>
        <trans-unit id="cce55e4309a753985bdd21919395fdc17daa11e4" translate="yes" xml:space="preserve">
          <source>order</source>
          <target state="translated">order</target>
        </trans-unit>
        <trans-unit id="423048cd6b6a27a615dda5cd31e3635531709e65" translate="yes" xml:space="preserve">
          <source>order of bins</source>
          <target state="translated">orden de los contenedores</target>
        </trans-unit>
        <trans-unit id="bef0ea82bf16161f6763b13b8011cd6a1d96de91" translate="yes" xml:space="preserve">
          <source>order() (numpy.poly1d property)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32313a5dcfa986d8cd520e5c13ce292afb67b607" translate="yes" xml:space="preserve">
          <source>os.name</source>
          <target state="translated">os.name</target>
        </trans-unit>
        <trans-unit id="d0941e68da8f38151ff86a61fc59f7c5cf9fcaa2" translate="yes" xml:space="preserve">
          <source>other</source>
          <target state="translated">other</target>
        </trans-unit>
        <trans-unit id="e939afc93a00cebc3854d6aa71cbe25cd49de0b1" translate="yes" xml:space="preserve">
          <source>other builtin objects, like &lt;a href=&quot;https://docs.python.org/dev/library/pathlib.html#pathlib.Path&quot;&gt;&lt;code&gt;pathlib.Path&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;Exception&lt;/code&gt;, the result of &lt;a href=&quot;https://docs.python.org/dev/library/re.html#re.compile&quot;&gt;&lt;code&gt;re.compile&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">otros objetos &lt;a href=&quot;https://docs.python.org/dev/library/pathlib.html#pathlib.Path&quot;&gt; &lt;code&gt;pathlib.Path&lt;/code&gt; &lt;/a&gt; , como pathlib.Path , &lt;code&gt;Exception&lt;/code&gt; , el resultado de &lt;a href=&quot;https://docs.python.org/dev/library/re.html#re.compile&quot;&gt; &lt;code&gt;re.compile&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cc046bac1ac1d00e6fc5edab27e9c7591bcd3144" translate="yes" xml:space="preserve">
          <source>other numpy arrays</source>
          <target state="translated">otros conjuntos numéricos</target>
        </trans-unit>
        <trans-unit id="ad8c9760e0e36a022ff28c964ddd557213e5a862" translate="yes" xml:space="preserve">
          <source>out: ndarray (Ni&amp;hellip;, J, Nk&amp;hellip;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b13fb0f97c7e878b0e8186d839d273fd95fb62b7" translate="yes" xml:space="preserve">
          <source>outer() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3432c8c9dccdb0c617be5042b8ce7413984d8369" translate="yes" xml:space="preserve">
          <source>outer_inner</source>
          <target state="translated">outer_inner</target>
        </trans-unit>
        <trans-unit id="7735e8eda1c4a8e934b8f81d0fa3d65dbc77d389" translate="yes" xml:space="preserve">
          <source>outerproduct() (in module numpy.ma)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d3d123145a82cd019b39cb3493d2c403804ae34" translate="yes" xml:space="preserve">
          <source>outlook for the near future</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="991bbec0205b135a6172a2d6860bf540a6ad05f2" translate="yes" xml:space="preserve">
          <source>outputs by wrapping basic 1-D loops that work element-by-element into full easy-to use functions that seamlessly implement broadcasting, type-checking and buffered coercion, and output-argument handling. New universal functions are normally created in C, although there is a mechanism for creating ufuncs from Python functions (&lt;a href=&quot;generated/numpy.frompyfunc#numpy.frompyfunc&quot;&gt;&lt;code&gt;frompyfunc&lt;/code&gt;&lt;/a&gt;). The user must supply a 1-D loop that implements the basic function taking the input scalar values and placing the resulting scalars into the appropriate output slots as explained in implementation.</source>
          <target state="translated">salidas mediante la envoltura de bucles 1-D b&amp;aacute;sicos que funcionan elemento por elemento en funciones completas f&amp;aacute;ciles de usar que implementan sin problemas la transmisi&amp;oacute;n, la verificaci&amp;oacute;n de tipos y la coerci&amp;oacute;n en b&amp;uacute;fer, y el manejo de argumentos de salida. Las nuevas funciones universales se crean normalmente en C, aunque existe un mecanismo para crear ufuncs a partir de funciones de Python ( &lt;a href=&quot;generated/numpy.frompyfunc#numpy.frompyfunc&quot;&gt; &lt;code&gt;frompyfunc&lt;/code&gt; &lt;/a&gt; ). El usuario debe suministrar un bucle 1-D que implemente la funci&amp;oacute;n b&amp;aacute;sica tomando los valores escalares de entrada y colocando los escalares resultantes en las ranuras de salida apropiadas como se explica en la implementaci&amp;oacute;n.</target>
        </trans-unit>
        <trans-unit id="5a1558de5ca58ff2171d01c78c354621cc00f880" translate="yes" xml:space="preserve">
          <source>overflow : floating point overflows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="516b9783fca517eecbd1d064da2d165310b19759" translate="yes" xml:space="preserve">
          <source>p</source>
          <target state="translated">p</target>
        </trans-unit>
        <trans-unit id="533f9d6018a6dcc07479d51822e0442f1174def2" translate="yes" xml:space="preserve">
          <source>packbits() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0b998b08bae3e79041342c60dbb38ea666b8c5a" translate="yes" xml:space="preserve">
          <source>pad() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cc76a13acd3bfaad4927a43d9226bff14a991a0" translate="yes" xml:space="preserve">
          <source>pandoc &lt;a href=&quot;https://www.pandoc.org&quot;&gt;pandoc.org&lt;/a&gt; or linux distro.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b01b4c02050cd03223ac57fc6ece08610f358d1" translate="yes" xml:space="preserve">
          <source>pareto() (in module numpy.random)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f2e50c9d77674b5e89e7215bd03d5017cf93139" translate="yes" xml:space="preserve">
          <source>part of Python standard library</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="addb6f0edb371734cd5cb8386388be9a35509bd6" translate="yes" xml:space="preserve">
          <source>partition() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb4388f0c9289e2b4f30e814d8a501c5c7a2d66c" translate="yes" xml:space="preserve">
          <source>path to data directory where python datadir suffix defaults to package dir.</source>
          <target state="translated">ruta al directorio de datos donde el sufijo de python datadir es por defecto el directorio del paquete.</target>
        </trans-unit>
        <trans-unit id="59105c2d33985e344e09f4debd7c3a79f225d586" translate="yes" xml:space="preserve">
          <source>path(s) to header file(s) where python includedir suffix will default to package name.</source>
          <target state="translated">ruta(s)al archivo(s)de cabecera donde python incluyó su sufijo por defecto en el nombre del paquete.</target>
        </trans-unit>
        <trans-unit id="c5108c2b6ab8eae4c2f7b470e1b8a108e2e907ab" translate="yes" xml:space="preserve">
          <source>paths to data files where python datadir prefix defaults to package dir.</source>
          <target state="translated">rutas a los archivos de datos donde el prefijo del datadir de Python por defecto es el dir del paquete.</target>
        </trans-unit>
        <trans-unit id="7c4ef7a8e826e496d197fec97d5fe46032d0eeda" translate="yes" xml:space="preserve">
          <source>paths()</source>
          <target state="translated">paths()</target>
        </trans-unit>
        <trans-unit id="19ed9488c7fe4964a851b66378dfa74e2f6388b3" translate="yes" xml:space="preserve">
          <source>paths() (numpy.distutils.misc_util.Configuration method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dceea2123163f2aad24d3a48ad0f0ea09b1e21af" translate="yes" xml:space="preserve">
          <source>pavement.py</source>
          <target state="translated">pavement.py</target>
        </trans-unit>
        <trans-unit id="e8b4f6410001cae33c03296e237f0926942a7c6d" translate="yes" xml:space="preserve">
          <source>pep8.py</source>
          <target state="translated">pep8.py</target>
        </trans-unit>
        <trans-unit id="2b594f7819f300601daef7ec347fa434ab675400" translate="yes" xml:space="preserve">
          <source>percentile() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3564a2c02a9e8a562419df90dc84dc3500ed7f37" translate="yes" xml:space="preserve">
          <source>perform a linear regression of the form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="005fcb61ed1192625c005b64bb11eeb94b81f563" translate="yes" xml:space="preserve">
          <source>permutation</source>
          <target state="translated">permutation</target>
        </trans-unit>
        <trans-unit id="a10f90c882a40ce1959c367eecc355ea846b7224" translate="yes" xml:space="preserve">
          <source>permutation() (in module numpy.random)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8260b349d32a295bccd1ff479f66e14b738218c1" translate="yes" xml:space="preserve">
          <source>permuted</source>
          <target state="translated">permuted</target>
        </trans-unit>
        <trans-unit id="fce9f5a70f004880d373a41cbfddfaaf6cbf06f8" translate="yes" xml:space="preserve">
          <source>pi (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5301ac74c7320df98011f9844bcbb346aaf907c" translate="yes" xml:space="preserve">
          <source>picosecond</source>
          <target state="translated">picosecond</target>
        </trans-unit>
        <trans-unit id="0a49cbb429c90b7b3eb21b165d0d7c6e0f858a95" translate="yes" xml:space="preserve">
          <source>piecewise() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da6ce389ee6fb2bfd27ff913236e1a6c10f9d03a" translate="yes" xml:space="preserve">
          <source>pinv() (in module numpy.linalg)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee8131e9dc0506b300eae5413535c6d850c31465" translate="yes" xml:space="preserve">
          <source>pkgload, PackageLoader</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c34ad6464d54b0cb0fb4cd7265ef3c5ccb23399f" translate="yes" xml:space="preserve">
          <source>place() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35948639a7e68a4b083d8e2f6773aa6e7447a4bc" translate="yes" xml:space="preserve">
          <source>pmt() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ec8f664c24d8cf6443f40ac906cf53ac4eef64" translate="yes" xml:space="preserve">
          <source>pointer to start of data</source>
          <target state="translated">puntero al inicio de los datos</target>
        </trans-unit>
        <trans-unit id="1c13872facef49b646e6ea76e901b0c5f2020f4c" translate="yes" xml:space="preserve">
          <source>pointers to functions that actually implement the underlying (element-by-element) function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99b49371590f797305765746f95b9117cfe4cfad" translate="yes" xml:space="preserve">
          <source>poisson() (in module numpy.random)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dbe1b384f3dabb44705e54dd0be5816b4a29498" translate="yes" xml:space="preserve">
          <source>poly() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ee43bcbb195d158df94b294cdaef7713e9669d2" translate="yes" xml:space="preserve">
          <source>poly1d (class in numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53f09278710dbcb9e2fe8c546a1aa310591a666f" translate="yes" xml:space="preserve">
          <source>poly1d respects the dtype of all-zero argument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcf970a2232ed9352fcb7e8206176547d7a1a897" translate="yes" xml:space="preserve">
          <source>poly1d.__call__()</source>
          <target state="translated">poly1d.__call__()</target>
        </trans-unit>
        <trans-unit id="8fd912a396e6a15f7556d589f11ff5cbf0273306" translate="yes" xml:space="preserve">
          <source>poly1d.c</source>
          <target state="translated">poly1d.c</target>
        </trans-unit>
        <trans-unit id="f05d785705b56dded7c023f2af03e633881232da" translate="yes" xml:space="preserve">
          <source>poly1d.coef</source>
          <target state="translated">poly1d.coef</target>
        </trans-unit>
        <trans-unit id="1542784533df5e6acc100ac4b6f1292a4eb06691" translate="yes" xml:space="preserve">
          <source>poly1d.coefficients</source>
          <target state="translated">poly1d.coefficients</target>
        </trans-unit>
        <trans-unit id="2098017bb630a30965cc4029ebd6ddc156203199" translate="yes" xml:space="preserve">
          <source>poly1d.coeffs</source>
          <target state="translated">poly1d.coeffs</target>
        </trans-unit>
        <trans-unit id="d2eb3b3bee1e5f44f9cf293d0faa37bee36a05a6" translate="yes" xml:space="preserve">
          <source>poly1d.deriv()</source>
          <target state="translated">poly1d.deriv()</target>
        </trans-unit>
        <trans-unit id="9375b253029c27b0aef9492797910f28901fb3d2" translate="yes" xml:space="preserve">
          <source>poly1d.integ()</source>
          <target state="translated">poly1d.integ()</target>
        </trans-unit>
        <trans-unit id="a786f60f6725c1af52b9ead7a3b9f26b97b05683" translate="yes" xml:space="preserve">
          <source>poly1d.o</source>
          <target state="translated">poly1d.o</target>
        </trans-unit>
        <trans-unit id="465b4f20059205571b70ec904c32fff8fd1d3019" translate="yes" xml:space="preserve">
          <source>poly1d.order</source>
          <target state="translated">poly1d.order</target>
        </trans-unit>
        <trans-unit id="b63ecb192a899bb3875ec17f3dc707ce183cb7bb" translate="yes" xml:space="preserve">
          <source>poly1d.r</source>
          <target state="translated">poly1d.r</target>
        </trans-unit>
        <trans-unit id="a76ca6b47bd5a1ebf15ae2880a3cf8a77a963214" translate="yes" xml:space="preserve">
          <source>poly1d.variable</source>
          <target state="translated">poly1d.variable</target>
        </trans-unit>
        <trans-unit id="d155669f4218bf36f3203a58a7adb54e3ce55dd5" translate="yes" xml:space="preserve">
          <source>poly2cheb() (in module numpy.polynomial.chebyshev)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="601708970059f36440f2634699cea6858ecc1a36" translate="yes" xml:space="preserve">
          <source>poly2herm() (in module numpy.polynomial.hermite)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5ee95cceb3092bf1a6e8f1c073a3af61510c572" translate="yes" xml:space="preserve">
          <source>poly2herme() (in module numpy.polynomial.hermite_e)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e4207255d78fa2fd76fb7c03639443a0e1e9392" translate="yes" xml:space="preserve">
          <source>poly2lag() (in module numpy.polynomial.laguerre)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55646c40929804daad4756b518b2dbc4a3db076f" translate="yes" xml:space="preserve">
          <source>poly2leg() (in module numpy.polynomial.legendre)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e06ee539711ccd6ed55a2679ec3e16bbbc7fcb97" translate="yes" xml:space="preserve">
          <source>polyadd() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ce657c15c60f1d365e5e83edd2713ff6f1e8c71" translate="yes" xml:space="preserve">
          <source>polycompanion() (in module numpy.polynomial.polynomial)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1a21ecde186da07692fc2b95a8de97d6ac4ac35" translate="yes" xml:space="preserve">
          <source>polyder() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89635f38fb34ec0aa79196708d48db9e60d2ec3c" translate="yes" xml:space="preserve">
          <source>polydiv() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc35700197d25b02f6bb267c5472e4615d357708" translate="yes" xml:space="preserve">
          <source>polydomain (in module numpy.polynomial.polynomial)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d372b148823912c2aaa2cbe1fa9f4d1c1d9b225" translate="yes" xml:space="preserve">
          <source>polyfit() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af0add84106a3829cfc2c8e6a916bb8510a2dba" translate="yes" xml:space="preserve">
          <source>polyfromroots() (in module numpy.polynomial.polynomial)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c00e0b230ce031e4392df400e6aaa6398c7c18b" translate="yes" xml:space="preserve">
          <source>polygrid2d() (in module numpy.polynomial.polynomial)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e18390451338ae840f617848d7e9675eaa904df9" translate="yes" xml:space="preserve">
          <source>polygrid3d() (in module numpy.polynomial.polynomial)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9433b9ebe94c73da914a40968f9a2bdca09499c6" translate="yes" xml:space="preserve">
          <source>polyint() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c573348456daaf6732a105378d14e11f530ab0" translate="yes" xml:space="preserve">
          <source>polyline() (in module numpy.polynomial.polynomial)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="543b51d191d7ca9b7357d606e51027e0fc9d6241" translate="yes" xml:space="preserve">
          <source>polymul() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47d09746ba8aa92c661ebe86e04a4840c2a7982d" translate="yes" xml:space="preserve">
          <source>polymulx() (in module numpy.polynomial.polynomial)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5e841c634fc36a2ee2271564eeb811a926eb8db" translate="yes" xml:space="preserve">
          <source>polynomial fit changes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eabcd1f0603b96aad3e56d3d0218dc66b5e5c990" translate="yes" xml:space="preserve">
          <source>polynomial.chebyshev</source>
          <target state="translated">polynomial.chebyshev</target>
        </trans-unit>
        <trans-unit id="cc7024406c296d876e81faa0d2ed33cdfc36e103" translate="yes" xml:space="preserve">
          <source>polynomial.polynomial</source>
          <target state="translated">polynomial.polynomial</target>
        </trans-unit>
        <trans-unit id="c6fac4d3ccb95f52a8b42eddabe6012967aece2b" translate="yes" xml:space="preserve">
          <source>polyone (in module numpy.polynomial.polynomial)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc8a9409edf9d755877f1a3006cd62084b458fd2" translate="yes" xml:space="preserve">
          <source>polypow() (in module numpy.polynomial.polynomial)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35be0a97ea6d218a83bf627fd7d047d8cac2b062" translate="yes" xml:space="preserve">
          <source>polyroots() (in module numpy.polynomial.polynomial)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f63e54e52fd8ed7010fa393e7ad1d7d346a1e6ed" translate="yes" xml:space="preserve">
          <source>polysub() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4630635ee1e79fb78ba9b1b61590e95c624391cf" translate="yes" xml:space="preserve">
          <source>polytrim() (in module numpy.polynomial.polynomial)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53dc29bba7f7cf4f85f30d2f0eaa2dddb085a08d" translate="yes" xml:space="preserve">
          <source>polyval() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab8dfd52405de9dfac39b35478f571d5d6013d91" translate="yes" xml:space="preserve">
          <source>polyval2d() (in module numpy.polynomial.polynomial)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="869057b32da2492e66ae2dc3f7b9b9fcb0b5c9e0" translate="yes" xml:space="preserve">
          <source>polyval3d() (in module numpy.polynomial.polynomial)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8740b2eb2384078cffca812a7a1b75c86820d70" translate="yes" xml:space="preserve">
          <source>polyvalfromroots() (in module numpy.polynomial.polynomial)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b0608750733ae47a33e12ece8cf8d1b4d3e1039" translate="yes" xml:space="preserve">
          <source>polyvander() (in module numpy.polynomial.polynomial)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e759f7ae29b0a8ef10eb0c49fa4607e767c7eb7d" translate="yes" xml:space="preserve">
          <source>polyvander2d() (in module numpy.polynomial.polynomial)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8515258dc83b7faff2189a428f1b82d96e542fde" translate="yes" xml:space="preserve">
          <source>polyvander3d() (in module numpy.polynomial.polynomial)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d88bb7f896f9fa05eb76163d1fd7c534002da86" translate="yes" xml:space="preserve">
          <source>polyx (in module numpy.polynomial.polynomial)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aa210e245f5510443991e5049939e03588e11fc" translate="yes" xml:space="preserve">
          <source>polyzero (in module numpy.polynomial.polynomial)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed009ce0368ee1efc6f5237ed9a10f79785651c8" translate="yes" xml:space="preserve">
          <source>pool (numpy.random.SeedSequence attribute)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f18a7850ceedac8b63e04869ab6ea9102c016340" translate="yes" xml:space="preserve">
          <source>pool_size (numpy.random.SeedSequence attribute)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc9baa281b05e63058264d5ecb316b22f412b68b" translate="yes" xml:space="preserve">
          <source>populating the &lt;a href=&quot;https://docs.python.org/dev/c-api/type.html#c.PyTypeObject&quot;&gt;&lt;code&gt;PyTypeObject&lt;/code&gt;&lt;/a&gt; table (pointed to by the ob_type member of the &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt;&lt;code&gt;PyObject&lt;/code&gt;&lt;/a&gt; structure) with pointers to functions that implement the desired behavior for the type.</source>
          <target state="translated">poblar el &lt;a href=&quot;https://docs.python.org/dev/c-api/type.html#c.PyTypeObject&quot;&gt; &lt;code&gt;PyTypeObject&lt;/code&gt; &lt;/a&gt; mesa (apuntado por el miembro ob_type de la &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt; &lt;code&gt;PyObject&lt;/code&gt; &lt;/a&gt; estructura) con punteros a las funciones que implementan el comportamiento deseado para el tipo.</target>
        </trans-unit>
        <trans-unit id="efa706bcc6adedc05bf5ed6a91a2dabd29fa0ae2" translate="yes" xml:space="preserve">
          <source>positive (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfdba57c2ea525d68cd766e6ddc87ae634e2c0ff" translate="yes" xml:space="preserve">
          <source>posix</source>
          <target state="translated">posix</target>
        </trans-unit>
        <trans-unit id="a9f1acaa8eeee2815ec62a070da557645c59c87f" translate="yes" xml:space="preserve">
          <source>power (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04a81d62865f701bc4e0efd0b55805a281d1c4da" translate="yes" xml:space="preserve">
          <source>power function that preserves type</source>
          <target state="translated">función de potencia que preserva el tipo</target>
        </trans-unit>
        <trans-unit id="c8f21aab09b09fafdb743129c1ec8e8aa9ef9162" translate="yes" xml:space="preserve">
          <source>power function that promotes integers to float</source>
          <target state="translated">función de poder que promueve que los números enteros floten</target>
        </trans-unit>
        <trans-unit id="07dafc0d6ccddd88df9fec9a3135799654db4e90" translate="yes" xml:space="preserve">
          <source>power() (in module numpy.ma)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8adc7640312fecff654a84a8d2b4ab23b3774ad" translate="yes" xml:space="preserve">
          <source>ppmt() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36e80c11e2c9b0aeea1a13db6377dbdae8a024fc" translate="yes" xml:space="preserve">
          <source>pprint() (numpy.record method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f10c50a3f37c9c3bab71be82ae2f3e833666a9a" translate="yes" xml:space="preserve">
          <source>precision : int</source>
          <target state="translated">precisión:int</target>
        </trans-unit>
        <trans-unit id="3684fb7aa2c534d15714a912113f4578a02e4408" translate="yes" xml:space="preserve">
          <source>precision:</source>
          <target state="translated">precision:</target>
        </trans-unit>
        <trans-unit id="8dad13d023f57a9a59ad145e9faa4545d06705a8" translate="yes" xml:space="preserve">
          <source>prepare_test_args() (numpy.testing.Tester method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bce910e928e47173c29501b61b2a3d0398e8db7f" translate="yes" xml:space="preserve">
          <source>print source for &lt;em&gt;func&lt;/em&gt; (if not a native function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95ff78c0173c8ac75c765f6629b28007080942d4" translate="yes" xml:space="preserve">
          <source>print: Print a warning directly to &lt;code&gt;stdout&lt;/code&gt;.</source>
          <target state="translated">imprimir: Imprime una advertencia directamente en &lt;code&gt;stdout&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="92ff4656c1fd3424547ccfca1c547a86e8d47066" translate="yes" xml:space="preserve">
          <source>printing style for &lt;code&gt;void&lt;/code&gt; datatypes is now independently customizable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a684823673f937c30ed9a756613a9e7af07b10" translate="yes" xml:space="preserve">
          <source>printoptions() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44fe3be9c1b42d77c9850b3296ef57b50dc82bc6" translate="yes" xml:space="preserve">
          <source>probability density function, distribution or cumulative density function, etc.</source>
          <target state="translated">función de densidad de probabilidad,función de densidad de distribución o acumulativa,etc.</target>
        </trans-unit>
        <trans-unit id="ab67ff3a3d1b5e5c3004b10d8261ff077202738b" translate="yes" xml:space="preserve">
          <source>probability density function, distribution, cumulative density function, etc.</source>
          <target state="translated">función de densidad de probabilidad,distribución,función de densidad acumulativa,etc.</target>
        </trans-unit>
        <trans-unit id="d64930f5fbdc5f770a37d38a56eb8ce810bda370" translate="yes" xml:space="preserve">
          <source>probability density function, distribution, or cumulative density function, etc.</source>
          <target state="translated">función de densidad de probabilidad,distribución o función de densidad acumulativa,etc.</target>
        </trans-unit>
        <trans-unit id="67e0287cf654963f69c52c092d1bbdb411f4c466" translate="yes" xml:space="preserve">
          <source>prod (in module numpy.ma)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca10fcbb2d92e29fcb97f03cf6ce6f14ac795434" translate="yes" xml:space="preserve">
          <source>prod() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="259fcf81a1ad1ff8d8c2ef72b4e7d5af93743461" translate="yes" xml:space="preserve">
          <source>product() (numpy.ma.masked_array method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d95ecc2874d5c60af6cd967e9d51b9cbbb34119" translate="yes" xml:space="preserve">
          <source>promote_types() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="269fe3733d17108a2c6f28ff0aaeaf65f4705adc" translate="yes" xml:space="preserve">
          <source>property</source>
          <target state="translated">property</target>
        </trans-unit>
        <trans-unit id="6e9b4af64b7aeed1decfa7a974b96ef6f9e40d9b" translate="yes" xml:space="preserve">
          <source>protocol</source>
          <target state="translated">protocol</target>
        </trans-unit>
        <trans-unit id="c67f1ee17880030ce11821dcc9be7af90b863d9b" translate="yes" xml:space="preserve">
          <source>ps</source>
          <target state="translated">ps</target>
        </trans-unit>
        <trans-unit id="ce2cdd20ad0082dc4f045622de22c4bd68a15114" translate="yes" xml:space="preserve">
          <source>pseudo Vandermonde matrix of Hermite series.</source>
          <target state="translated">pseudo matriz de Vandermonde o serie de Hermite.</target>
        </trans-unit>
        <trans-unit id="d56b57ce650b7a504643f4d8270d22bed10ed3da" translate="yes" xml:space="preserve">
          <source>pseudo Vandermonde matrix of Laguerre series.</source>
          <target state="translated">pseudo-matriz de Vandermonde o serie de Laguerre.</target>
        </trans-unit>
        <trans-unit id="64c3067a907c820981aa57ca88c578bf8e413b36" translate="yes" xml:space="preserve">
          <source>pseudo-inverse of 2D array &lt;code&gt;a&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68973f25d54dc1fa3801632955a0ba1ac4144ec0" translate="yes" xml:space="preserve">
          <source>pseudo-inverse of matrix &lt;code&gt;a&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a93f1c60532eeb9f401c74f5133caa7c6608157f" translate="yes" xml:space="preserve">
          <source>ptp() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a0f666ac1c38ab9351af6b86698639ac8d14ed" translate="yes" xml:space="preserve">
          <source>put() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b8424fc0d453a309750245549faf5abb9c9246e" translate="yes" xml:space="preserve">
          <source>put_along_axis() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fc5ec1ebe6faec887e0851936a60b0a90996d3e" translate="yes" xml:space="preserve">
          <source>putmask() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fcc8bdc876f8b0885d993091fa0d8f85834fcc9" translate="yes" xml:space="preserve">
          <source>pv() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9eb870376c4ca2442f9039c85b1949d8bae37dd" translate="yes" xml:space="preserve">
          <source>pyflakes</source>
          <target state="translated">pyflakes</target>
        </trans-unit>
        <trans-unit id="1ab73517f59728de772e3da128b3516ffad1ee5c" translate="yes" xml:space="preserve">
          <source>pygithub (pip)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e15f8789b9d62fe90d1f1b0b6a7e32f13b99b19" translate="yes" xml:space="preserve">
          <source>pylint</source>
          <target state="translated">pylint</target>
        </trans-unit>
        <trans-unit id="737c7647dfa3f9306364c7678b2d37ab7456cd3e" translate="yes" xml:space="preserve">
          <source>qr() (in module numpy.linalg)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="789bd05e45adeae6859512293303d7496b167909" translate="yes" xml:space="preserve">
          <source>quantile() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="851460e9e03149e060d0c8429357b4950d11562e" translate="yes" xml:space="preserve">
          <source>quicksort has been changed to &lt;a href=&quot;https://en.wikipedia.org/wiki/Introsort&quot;&gt;introsort&lt;/a&gt;. When sorting does not make enough progress it switches to &lt;a href=&quot;https://en.wikipedia.org/wiki/Heapsort&quot;&gt;heapsort&lt;/a&gt;. This implementation makes quicksort O(n*log(n)) in the worst case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1097d4c097334c7f42b24e54d595b5ae4e838cec" translate="yes" xml:space="preserve">
          <source>quicksort has been changed to an introsort</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e427cc8f857bce7cac8071268e6f64a73281ccf9" translate="yes" xml:space="preserve">
          <source>quicksort has been changed to an introsort which will switch heapsort when it does not make enough progress. This makes its worst case O(n*log(n)).</source>
          <target state="translated">quicksort se ha cambiado a un introsort que cambiará a heapsort cuando no haga suficientes progresos.Esto hace que su peor caso sea O(n*log(n)).</target>
        </trans-unit>
        <trans-unit id="cd2e4aea92be938b1d23b43fd2a161b4e07106b1" translate="yes" xml:space="preserve">
          <source>quote_args() (in module numpy.distutils.misc_util)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b8d871ebc73574617e93575f7422c42aa8e873" translate="yes" xml:space="preserve">
          <source>r() (numpy.poly1d property)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d3c55b16be5785cb01af834442716ede6403b02" translate="yes" xml:space="preserve">
          <source>r=fromrecords([(2,3.,&amp;rsquo;abc&amp;rsquo;)]*100000)</source>
          <target state="translated">r=fromrecords([(2,3.,&amp;rsquo;abc&amp;rsquo;)]*100000)</target>
        </trans-unit>
        <trans-unit id="80f7a20572cb32b48c84d50f783019ffd89a3c96" translate="yes" xml:space="preserve">
          <source>r_ (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b22467c1bbf71efcc6951b63eaf9fcd56613f31c" translate="yes" xml:space="preserve">
          <source>rad equals 360 degrees).</source>
          <target state="translated">rad es igual a 360 grados).</target>
        </trans-unit>
        <trans-unit id="43cb249f8b5598d9b26d8f96fd0889bc0eb3fb56" translate="yes" xml:space="preserve">
          <source>rad2deg (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eb467ad9fcf20160e5cbb7e27b935ef8102fae7" translate="yes" xml:space="preserve">
          <source>rad2deg(x) is &lt;code&gt;180 * x / pi&lt;/code&gt;.</source>
          <target state="translated">rad2deg (x) es &lt;code&gt;180 * x / pi&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5337d331b3ded824ac96072dbcc94df514f6f878" translate="yes" xml:space="preserve">
          <source>radians (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c07ba0e4ce8be80cc70291aac962a8a09dcee7c7" translate="yes" xml:space="preserve">
          <source>raise &lt;code&gt;AxisError&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5d9b96b90000d218e73ccd23d55f0a04c741e2f" translate="yes" xml:space="preserve">
          <source>raise a ValueError;</source>
          <target state="translated">...y aumentar un error de valor;</target>
        </trans-unit>
        <trans-unit id="b86e653ba83b2b05b90ab5d2abde975332977067" translate="yes" xml:space="preserve">
          <source>raise: Raise a &lt;code&gt;FloatingPointError&lt;/code&gt;.</source>
          <target state="translated">subir: genera un &lt;code&gt;FloatingPointError&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="32dd3dd7c1f8a31883331f6ced91a5545f63e77c" translate="yes" xml:space="preserve">
          <source>rand() (in module numpy.matlib)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dd4d9d672aef82af42ff0c039b2e9713ba33b1b" translate="yes" xml:space="preserve">
          <source>randint() (in module numpy.random)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58c2ea9b514acd2a860b4f9ae3c99095a1e55cd7" translate="yes" xml:space="preserve">
          <source>randn() (in module numpy.matlib)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="730644be985be0da4940349b148248a7b35d6e5c" translate="yes" xml:space="preserve">
          <source>random 3x4 matrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="661739a9e538705ae270d895ebcbf5b4d38cbbbe" translate="yes" xml:space="preserve">
          <source>random numbers have been generated (&lt;a href=&quot;#r312276d80bfa-1&quot; id=&quot;id2&quot;&gt;[1]&lt;/a&gt;, &lt;a href=&quot;#r312276d80bfa-2&quot; id=&quot;id3&quot;&gt;[2]&lt;/a&gt;). This allows the original sequence to be split so that distinct segments can be used in each worker process. All generators should be chained to ensure that the segments come from the same sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6207c4f79c1e02944517d78dd6e86b10aa433c5" translate="yes" xml:space="preserve">
          <source>random numbers have been generated (&lt;a href=&quot;#ra5b7335575d7-1&quot; id=&quot;id2&quot;&gt;[1]&lt;/a&gt;, &lt;a href=&quot;#ra5b7335575d7-2&quot; id=&quot;id3&quot;&gt;[2]&lt;/a&gt;). This allows the original sequence to be split so that distinct segments can be used in each worker process. All generators should be chained to ensure that the segments come from the same sequence.</source>
          <target state="translated">Se han generado n&amp;uacute;meros aleatorios ( &lt;a href=&quot;#ra5b7335575d7-1&quot; id=&quot;id2&quot;&gt;[1]&lt;/a&gt; , &lt;a href=&quot;#ra5b7335575d7-2&quot; id=&quot;id3&quot;&gt;[2]&lt;/a&gt; ). Esto permite dividir la secuencia original para que se puedan utilizar distintos segmentos en cada proceso de trabajo. Todos los generadores deben estar encadenados para asegurar que los segmentos provengan de la misma secuencia.</target>
        </trans-unit>
        <trans-unit id="5f3444a59aca3003f5567b381b688cf7df6f965a" translate="yes" xml:space="preserve">
          <source>random numbers have been generated. Alternatively, &lt;code&gt;advance&lt;/code&gt; can be used to advance the counter for any positive step in [0, 2**256). When using &lt;code&gt;jumped&lt;/code&gt;, all generators should be chained to ensure that the segments come from the same sequence.</source>
          <target state="translated">Se han generado n&amp;uacute;meros aleatorios. Alternativamente, el &lt;code&gt;advance&lt;/code&gt; se puede usar para avanzar el contador para cualquier paso positivo en [0, 2 ** 256). Al usar &lt;code&gt;jumped&lt;/code&gt; , todos los generadores deben estar encadenados para garantizar que los segmentos provengan de la misma secuencia.</target>
        </trans-unit>
        <trans-unit id="d638f0d3440f5534f3edc27cdcb4098e8308b3e4" translate="yes" xml:space="preserve">
          <source>random() (in module numpy.random)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e641ea632dd47456fbe43cced8853c5af65c1ed3" translate="yes" xml:space="preserve">
          <source>random_beta (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da7d7d496af489677b47e9d56a5bc62825ba62e4" translate="yes" xml:space="preserve">
          <source>random_binomial (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe803ff78dcc2cbf1ec5cf5bb0265d59ef52d14" translate="yes" xml:space="preserve">
          <source>random_bounded_uint64 (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1204c81cf894d4603edfe7d9be4eeda01c040dc9" translate="yes" xml:space="preserve">
          <source>random_chisquare (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b3f96888c39286b22b09729e31372cc1f7a8289" translate="yes" xml:space="preserve">
          <source>random_exponential (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd66c01caa7b1f3b8361532d646e8f999a9f8f0f" translate="yes" xml:space="preserve">
          <source>random_f (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cae8c7ffddad004ccac66fe0cb636156b96fc6cb" translate="yes" xml:space="preserve">
          <source>random_gamma (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c6d28718c1d1e1ab1c25077d01f246e5eab7031" translate="yes" xml:space="preserve">
          <source>random_gamma_f (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c46bd251a0929a2444677dbdf07c01c0797ab08" translate="yes" xml:space="preserve">
          <source>random_geometric (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5505aa8d6f988eaa8a11c985b27d3be7ec8e4609" translate="yes" xml:space="preserve">
          <source>random_geometric_inversion (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d6f336add704a28cd584586e9f040c21462f94d" translate="yes" xml:space="preserve">
          <source>random_geometric_search (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb9eef589a7289455b7c8e696d994c11d8cdb8d0" translate="yes" xml:space="preserve">
          <source>random_gumbel (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91b934dee2a124b518e563094d83c65a714327f2" translate="yes" xml:space="preserve">
          <source>random_hypergeometric (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="633bb3a630894a9afc66cc6afd93a3101228db79" translate="yes" xml:space="preserve">
          <source>random_integers() (in module numpy.random)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="553bb77fa20eb2c806b1836f8671423753559d2b" translate="yes" xml:space="preserve">
          <source>random_interval (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fbd888988e8774b24bad2903938d8a5cbf737e8" translate="yes" xml:space="preserve">
          <source>random_laplace (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b98b268f007b33a11b7551d01b64bc7a04fd162c" translate="yes" xml:space="preserve">
          <source>random_logistic (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e47522f356eb4b1b89155e75e2feacb378c3ebce" translate="yes" xml:space="preserve">
          <source>random_lognormal (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c61a8a59553e5e9ad88070aae553d3a01ebec595" translate="yes" xml:space="preserve">
          <source>random_logseries (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fdf0bb0f421985b7375e5e943259bd0e4ebe12f" translate="yes" xml:space="preserve">
          <source>random_multinomial (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9765b5eec51f9ed1bdfc89d9c73a23f3b11b1008" translate="yes" xml:space="preserve">
          <source>random_multivariate_hypergeometric_count (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca0c1fe2936d152b8c0eb951a37c24cfce4d8f7e" translate="yes" xml:space="preserve">
          <source>random_multivariate_hypergeometric_marginals (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f8ca939e88706b97f7ff51a2e6367da88cc1756" translate="yes" xml:space="preserve">
          <source>random_negative_binomial (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cb73e68cd1f2ad280c8e13b2485b44aecf466ff" translate="yes" xml:space="preserve">
          <source>random_noncentral_chisquare (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06c2a069e97c46752678ae082ae19795fb32fdc1" translate="yes" xml:space="preserve">
          <source>random_noncentral_f (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02a4dfbdd1aeb0b68dd80ae64e94dfd320126db1" translate="yes" xml:space="preserve">
          <source>random_normal (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb447df20787c6a9a9a4085fbd5b81e849283081" translate="yes" xml:space="preserve">
          <source>random_pareto (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d949f9b9d2a19a81a78ca87a4b92152c29b656d" translate="yes" xml:space="preserve">
          <source>random_poisson (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e759881459d901b3131584d21c50a31ab593d9b3" translate="yes" xml:space="preserve">
          <source>random_positive_int (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32f4a781248c255de7cdcd7a01b9f4ce85c9ef2a" translate="yes" xml:space="preserve">
          <source>random_positive_int32 (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecaacbfd5aab2bb7b7a211a74a251108e0fe30ea" translate="yes" xml:space="preserve">
          <source>random_positive_int64 (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0afe6af3f0bb2edbe0f2e99ff7310fcc9c4bf2e" translate="yes" xml:space="preserve">
          <source>random_power (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bcceaf65c47d9ee3a90bb0bfa1beafe703414f4" translate="yes" xml:space="preserve">
          <source>random_raw() (numpy.random.BitGenerator method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b26ab14a54a2a2c6905d28946fd1e21aafdc5b12" translate="yes" xml:space="preserve">
          <source>random_rayleigh (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8efeb4e3499667dce5f44edbd09396f7aa31fa94" translate="yes" xml:space="preserve">
          <source>random_sample() (in module numpy.random)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b95125893d74f886b72ac19d43d6426736a0c0d" translate="yes" xml:space="preserve">
          <source>random_standard_cauchy (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="915a1741a49e35bae15e064ebc7781ca3828cabf" translate="yes" xml:space="preserve">
          <source>random_standard_exponential (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbf032ba045a39ba4f992fc976135a849ffdc6d5" translate="yes" xml:space="preserve">
          <source>random_standard_exponential_f (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49a5f04ac40be9b790f8659c253ede3e7b6a43bf" translate="yes" xml:space="preserve">
          <source>random_standard_exponential_fill (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b50e7773bd4b94183eff9979af20b0926313151" translate="yes" xml:space="preserve">
          <source>random_standard_exponential_fill_f (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bfa93bdb822b67ea4a611cb1c6df987ce7768bf" translate="yes" xml:space="preserve">
          <source>random_standard_gamma (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ba973a06da012ed1672dfd3f92ca7544734a077" translate="yes" xml:space="preserve">
          <source>random_standard_gamma_f (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4121d02ce3b39765d11f6cbb6c2cd7afab30a49c" translate="yes" xml:space="preserve">
          <source>random_standard_normal (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6ae456177edda58992c714a5fec33b8889048d" translate="yes" xml:space="preserve">
          <source>random_standard_normal_f (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="775b812433fce5d79a27dd951b4c069c6c3dc395" translate="yes" xml:space="preserve">
          <source>random_standard_normal_fill (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf4ca00c2da15d6d0b1e8886834c7bdc385e3a32" translate="yes" xml:space="preserve">
          <source>random_standard_normal_fill_f (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9432f737d1b046772c223c7056317604d3863488" translate="yes" xml:space="preserve">
          <source>random_standard_t (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="601c51a58f61436c8e20717f5b4f7296de6daf8d" translate="yes" xml:space="preserve">
          <source>random_standard_uniform (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95f3083165f90da188bc20fd714e131f4ee63862" translate="yes" xml:space="preserve">
          <source>random_standard_uniform_f (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9c476e7cde3ad7b193de5233acedec7dfc3c30d" translate="yes" xml:space="preserve">
          <source>random_standard_uniform_fill (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a2b50e0e61e8426282b049191275df31e919363" translate="yes" xml:space="preserve">
          <source>random_standard_uniform_fill_f (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbf34921ad63840e5a6fa861df9548c84cd4db1d" translate="yes" xml:space="preserve">
          <source>random_triangular (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4d812ec0e3c33b478effe1e679839ddbe7e6214" translate="yes" xml:space="preserve">
          <source>random_uint (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bb9c31759e396a78dbc4f4c05e653e94437cfcd" translate="yes" xml:space="preserve">
          <source>random_uniform (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d2a19b4b603d60574fbafb9195cdf0ad6950612" translate="yes" xml:space="preserve">
          <source>random_vonmises (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d103ac06e3769c2bf242fb29f4292d194a08fe" translate="yes" xml:space="preserve">
          <source>random_wald (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d06d954cb3eea69ff89b1c57bf38ea7bf5ed4df9" translate="yes" xml:space="preserve">
          <source>random_weibull (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb6dcc8d526c64647120ad8e4aef7a73336bac26" translate="yes" xml:space="preserve">
          <source>random_zipf (C function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bdd99ca7b4bc5ce7b9b7cb1381808fbb8f90c10" translate="yes" xml:space="preserve">
          <source>ranf() (in module numpy.random)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="323d045ef169ad5b0339e65498f0795ea4431d0c" translate="yes" xml:space="preserve">
          <source>rate() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76a57ced8cee965052b9c1c77677e960cee7ca46" translate="yes" xml:space="preserve">
          <source>ravel (in module numpy.ma)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f400a77720eb55327dfe80f95bc995ee3f946e2" translate="yes" xml:space="preserve">
          <source>ravel() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="537c17b755aad189ca2151458e4955f97e17a1e7" translate="yes" xml:space="preserve">
          <source>ravel_multi_index() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8a11aa73963cdc6c37aaea4be8030b790a73118" translate="yes" xml:space="preserve">
          <source>raw data (&lt;a href=&quot;arrays.scalars#numpy.void&quot;&gt;&lt;code&gt;void&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d955375cf85d7178d0cf30ccdb7add5582ab859" translate="yes" xml:space="preserve">
          <source>raw data (&lt;code&gt;void&lt;/code&gt;)</source>
          <target state="translated">datos brutos ( &lt;code&gt;void&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="6f8faa0ed1c6feec33b2ca6880396823443d861e" translate="yes" xml:space="preserve">
          <source>rayleigh() (in module numpy.random)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f062bedc2613eb7f3f2a5660dd905e57913f729" translate="yes" xml:space="preserve">
          <source>reads MATLAB data files</source>
          <target state="translated">lee los archivos de datos de MATLAB</target>
        </trans-unit>
        <trans-unit id="2836d219475b4e74f06dcfcf01b58ca5876756b2" translate="yes" xml:space="preserve">
          <source>real (numpy.char.chararray attribute)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="256308fc00810623077a950258b870c9c0b6660f" translate="yes" xml:space="preserve">
          <source>real part of scalar</source>
          <target state="translated">parte real del escalar</target>
        </trans-unit>
        <trans-unit id="6b35a0faf9188ea5230e9d425a22ea4673ba66c2" translate="yes" xml:space="preserve">
          <source>real() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d4a2927bf96ddebb267bc730039690d0446452e" translate="yes" xml:space="preserve">
          <source>real_if_close() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42b8605def3b066614ba60667dad538b8128da41" translate="yes" xml:space="preserve">
          <source>reasonable discussion/feedback</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f130af6fe045de279f22f9d0e7a7130d75301ebf" translate="yes" xml:space="preserve">
          <source>rec_append_fields() (in module numpy.lib.recfunctions)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd0fd0166c26fece15ed9b87791a14027538e84" translate="yes" xml:space="preserve">
          <source>rec_drop_fields() (in module numpy.lib.recfunctions)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae96985fdf8f4290aee51e4efc9d0e58f2921fd8" translate="yes" xml:space="preserve">
          <source>rec_join() (in module numpy.lib.recfunctions)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c13abe58bf0f6a5a36238184bb63bc6a4f8d6c7b" translate="yes" xml:space="preserve">
          <source>recarray (class in numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dde47c02114db365151522d6c8e283f1d43bf8a3" translate="yes" xml:space="preserve">
          <source>recarray field return types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51b70603e64301673a68f37c21c2fe97878585b7" translate="yes" xml:space="preserve">
          <source>recarray views</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe3c4f09bacf3f8f93bea76ac6c71296aa9e5d13" translate="yes" xml:space="preserve">
          <source>recarray.T</source>
          <target state="translated">recarray.T</target>
        </trans-unit>
        <trans-unit id="bc0ad8797b2ac62864d5a7652662328357b823ca" translate="yes" xml:space="preserve">
          <source>recarray.all()</source>
          <target state="translated">recarray.all()</target>
        </trans-unit>
        <trans-unit id="1a34a0b41b0e0017a96f4f31fdc46b7504c84648" translate="yes" xml:space="preserve">
          <source>recarray.any()</source>
          <target state="translated">recarray.any()</target>
        </trans-unit>
        <trans-unit id="817fc071704753ed92f74a7609c827270277df73" translate="yes" xml:space="preserve">
          <source>recarray.argmax()</source>
          <target state="translated">recarray.argmax()</target>
        </trans-unit>
        <trans-unit id="4d684d8ea80af50f7821d4eda1b7810270be765c" translate="yes" xml:space="preserve">
          <source>recarray.argmin()</source>
          <target state="translated">recarray.argmin()</target>
        </trans-unit>
        <trans-unit id="a506d404eec4e7af0c08e9ef97d275c14da610d8" translate="yes" xml:space="preserve">
          <source>recarray.argpartition()</source>
          <target state="translated">recarray.argpartition()</target>
        </trans-unit>
        <trans-unit id="972caf0f9da5ac121b1f68a1d8373243fcb9c99a" translate="yes" xml:space="preserve">
          <source>recarray.argsort()</source>
          <target state="translated">recarray.argsort()</target>
        </trans-unit>
        <trans-unit id="2f66e38205727fcdf6deae872bc32dac6b378b18" translate="yes" xml:space="preserve">
          <source>recarray.astype()</source>
          <target state="translated">recarray.astype()</target>
        </trans-unit>
        <trans-unit id="5c14490e059c3a6c638acf075d84cca614955a40" translate="yes" xml:space="preserve">
          <source>recarray.base</source>
          <target state="translated">recarray.base</target>
        </trans-unit>
        <trans-unit id="ee079b5caeb4cc70cd7a60149345acccb3e8f58f" translate="yes" xml:space="preserve">
          <source>recarray.byteswap()</source>
          <target state="translated">recarray.byteswap()</target>
        </trans-unit>
        <trans-unit id="6de2ea34f974a1729b62b407df9c3e8c95e98da2" translate="yes" xml:space="preserve">
          <source>recarray.choose()</source>
          <target state="translated">recarray.choose()</target>
        </trans-unit>
        <trans-unit id="02685c0bc064221f9344fadf1d3f92f9b8f0f4cf" translate="yes" xml:space="preserve">
          <source>recarray.clip()</source>
          <target state="translated">recarray.clip()</target>
        </trans-unit>
        <trans-unit id="7c97c6ffdcf83bb7a2cfc9e557caae94c58722fb" translate="yes" xml:space="preserve">
          <source>recarray.compress()</source>
          <target state="translated">recarray.compress()</target>
        </trans-unit>
        <trans-unit id="f0ea50a3cc1b85d241c386d3c10a3e64b7d69d48" translate="yes" xml:space="preserve">
          <source>recarray.conj()</source>
          <target state="translated">recarray.conj()</target>
        </trans-unit>
        <trans-unit id="40ff41e85d55a314ec3ba314e7b42d53b8f62fbc" translate="yes" xml:space="preserve">
          <source>recarray.conjugate()</source>
          <target state="translated">recarray.conjugate()</target>
        </trans-unit>
        <trans-unit id="6fc0b8fe2f7316b686945d0b696d3a1c96872b1d" translate="yes" xml:space="preserve">
          <source>recarray.copy()</source>
          <target state="translated">recarray.copy()</target>
        </trans-unit>
        <trans-unit id="9502e9783adc5b71d90d575218f6adfa8f64956c" translate="yes" xml:space="preserve">
          <source>recarray.ctypes</source>
          <target state="translated">recarray.ctypes</target>
        </trans-unit>
        <trans-unit id="cb3e4508258c4124b88044e22b0b80aa62c92732" translate="yes" xml:space="preserve">
          <source>recarray.cumprod()</source>
          <target state="translated">recarray.cumprod()</target>
        </trans-unit>
        <trans-unit id="166c3a14c4234c8af6770a849503f82a5d4144ff" translate="yes" xml:space="preserve">
          <source>recarray.cumsum()</source>
          <target state="translated">recarray.cumsum()</target>
        </trans-unit>
        <trans-unit id="5172e6a77522295261428e9e7bb572a94828ab0e" translate="yes" xml:space="preserve">
          <source>recarray.data</source>
          <target state="translated">recarray.data</target>
        </trans-unit>
        <trans-unit id="e21276794f09d5ab1314c274c6981939df5bca70" translate="yes" xml:space="preserve">
          <source>recarray.diagonal()</source>
          <target state="translated">recarray.diagonal()</target>
        </trans-unit>
        <trans-unit id="4aed5e629e736c2343b968788d4a3383857feab0" translate="yes" xml:space="preserve">
          <source>recarray.dot()</source>
          <target state="translated">recarray.dot()</target>
        </trans-unit>
        <trans-unit id="c88f6632c6a82e0a337b51c58fcc9e3457f41590" translate="yes" xml:space="preserve">
          <source>recarray.dump()</source>
          <target state="translated">recarray.dump()</target>
        </trans-unit>
        <trans-unit id="e80bf4271e1c3443066a0fef77ae2af896b4acb3" translate="yes" xml:space="preserve">
          <source>recarray.dumps()</source>
          <target state="translated">recarray.dumps()</target>
        </trans-unit>
        <trans-unit id="8a33df3ea79dc40cd544df77f27f3ec0c21fd314" translate="yes" xml:space="preserve">
          <source>recarray.fill()</source>
          <target state="translated">recarray.fill()</target>
        </trans-unit>
        <trans-unit id="0fb74cdc98005f737147e5a6a82a4d40a19aeeb6" translate="yes" xml:space="preserve">
          <source>recarray.flags</source>
          <target state="translated">recarray.flags</target>
        </trans-unit>
        <trans-unit id="187970b6c390fe710c533bb3c6a1f8fce39388f3" translate="yes" xml:space="preserve">
          <source>recarray.flat</source>
          <target state="translated">recarray.flat</target>
        </trans-unit>
        <trans-unit id="06759acfe42ba7fc6e8ed836749e25d3ec9eb455" translate="yes" xml:space="preserve">
          <source>recarray.flatten()</source>
          <target state="translated">recarray.flatten()</target>
        </trans-unit>
        <trans-unit id="387a52bd5739375ff69410475d1cdc1548742654" translate="yes" xml:space="preserve">
          <source>recarray.getfield()</source>
          <target state="translated">recarray.getfield()</target>
        </trans-unit>
        <trans-unit id="cf3547d735e583428e100174ca9919550e4ff5bd" translate="yes" xml:space="preserve">
          <source>recarray.item()</source>
          <target state="translated">recarray.item()</target>
        </trans-unit>
        <trans-unit id="d08143d0d2413655e60176a0f97335e469b10784" translate="yes" xml:space="preserve">
          <source>recarray.itemset()</source>
          <target state="translated">recarray.itemset()</target>
        </trans-unit>
        <trans-unit id="126a5055637835b6733f1195dd7be1e207e73c8f" translate="yes" xml:space="preserve">
          <source>recarray.itemsize</source>
          <target state="translated">recarray.itemsize</target>
        </trans-unit>
        <trans-unit id="1ded15e5bcb2bc622bf2d7c6e0677f624fa7d859" translate="yes" xml:space="preserve">
          <source>recarray.max()</source>
          <target state="translated">recarray.max()</target>
        </trans-unit>
        <trans-unit id="b3f820733ec17bb88ec39bc187a21304bed6853b" translate="yes" xml:space="preserve">
          <source>recarray.mean()</source>
          <target state="translated">recarray.mean()</target>
        </trans-unit>
        <trans-unit id="29b81d767eed35ac7391b343ebe232315574a495" translate="yes" xml:space="preserve">
          <source>recarray.min()</source>
          <target state="translated">recarray.min()</target>
        </trans-unit>
        <trans-unit id="30514f2ebdf062102b5dc9129cf963f310ba7834" translate="yes" xml:space="preserve">
          <source>recarray.nbytes</source>
          <target state="translated">recarray.nbytes</target>
        </trans-unit>
        <trans-unit id="36c5b53401f64fa4bfc6dc082cda633d82ff477a" translate="yes" xml:space="preserve">
          <source>recarray.ndim</source>
          <target state="translated">recarray.ndim</target>
        </trans-unit>
        <trans-unit id="7d6e7c12446a9b4eaec02c16252e58b535a540ae" translate="yes" xml:space="preserve">
          <source>recarray.newbyteorder()</source>
          <target state="translated">recarray.newbyteorder()</target>
        </trans-unit>
        <trans-unit id="1321a3bf4578319e600df174909ff7410ae2258c" translate="yes" xml:space="preserve">
          <source>recarray.nonzero()</source>
          <target state="translated">recarray.nonzero()</target>
        </trans-unit>
        <trans-unit id="07ee5dddde506b940702c9b4ec736ea49ba2f31f" translate="yes" xml:space="preserve">
          <source>recarray.partition()</source>
          <target state="translated">recarray.partition()</target>
        </trans-unit>
        <trans-unit id="6e12215e285fc469be53068b52c894849b2cdcef" translate="yes" xml:space="preserve">
          <source>recarray.prod()</source>
          <target state="translated">recarray.prod()</target>
        </trans-unit>
        <trans-unit id="4e9e5ebf25517b1b4e8249cf494a2700e5ecbf0f" translate="yes" xml:space="preserve">
          <source>recarray.ptp()</source>
          <target state="translated">recarray.ptp()</target>
        </trans-unit>
        <trans-unit id="8107ee5a9e2c683f66dac5f05d7afcb231fdaed5" translate="yes" xml:space="preserve">
          <source>recarray.put()</source>
          <target state="translated">recarray.put()</target>
        </trans-unit>
        <trans-unit id="e17f8f7c5e174d240d18b1b64a6b4aefc5d0690b" translate="yes" xml:space="preserve">
          <source>recarray.ravel()</source>
          <target state="translated">recarray.ravel()</target>
        </trans-unit>
        <trans-unit id="87b891ee00badaf69972adb5b38191491f7ee408" translate="yes" xml:space="preserve">
          <source>recarray.repeat()</source>
          <target state="translated">recarray.repeat()</target>
        </trans-unit>
        <trans-unit id="6a500d7649e72460dc1f98f924cef8814676e204" translate="yes" xml:space="preserve">
          <source>recarray.reshape()</source>
          <target state="translated">recarray.reshape()</target>
        </trans-unit>
        <trans-unit id="b05d313bed66fce0edae8a072f542d82937f5496" translate="yes" xml:space="preserve">
          <source>recarray.resize()</source>
          <target state="translated">recarray.resize()</target>
        </trans-unit>
        <trans-unit id="cd95cf2f2ab67a03c52577f5ee17cbf076e61673" translate="yes" xml:space="preserve">
          <source>recarray.round()</source>
          <target state="translated">recarray.round()</target>
        </trans-unit>
        <trans-unit id="45445481e94c7dba21313a686d0c759018bb1af8" translate="yes" xml:space="preserve">
          <source>recarray.searchsorted()</source>
          <target state="translated">recarray.searchsorted()</target>
        </trans-unit>
        <trans-unit id="fd78124fac975a0f6452f00db21e82a30d015a76" translate="yes" xml:space="preserve">
          <source>recarray.setfield()</source>
          <target state="translated">recarray.setfield()</target>
        </trans-unit>
        <trans-unit id="fe1cf20869ea89104f14f6e204876c69012cf269" translate="yes" xml:space="preserve">
          <source>recarray.setflags()</source>
          <target state="translated">recarray.setflags()</target>
        </trans-unit>
        <trans-unit id="9567f49c65f3af3c162230ca67aeaef342a1fbec" translate="yes" xml:space="preserve">
          <source>recarray.shape</source>
          <target state="translated">recarray.shape</target>
        </trans-unit>
        <trans-unit id="cccb1a07140289d006e00f14a6fe100906ec37b1" translate="yes" xml:space="preserve">
          <source>recarray.size</source>
          <target state="translated">recarray.size</target>
        </trans-unit>
        <trans-unit id="fd1badf5451b8fd129c125ea892cf95471e3ff55" translate="yes" xml:space="preserve">
          <source>recarray.sort()</source>
          <target state="translated">recarray.sort()</target>
        </trans-unit>
        <trans-unit id="216d398e875e973fca5a5b94859a92ff412d6b16" translate="yes" xml:space="preserve">
          <source>recarray.squeeze()</source>
          <target state="translated">recarray.squeeze()</target>
        </trans-unit>
        <trans-unit id="91f6f52ee4eb4d71983c226e1611605c8eb5d15d" translate="yes" xml:space="preserve">
          <source>recarray.std()</source>
          <target state="translated">recarray.std()</target>
        </trans-unit>
        <trans-unit id="09f4b33979bb06051aff3b2074218a3dc1f98326" translate="yes" xml:space="preserve">
          <source>recarray.strides</source>
          <target state="translated">recarray.strides</target>
        </trans-unit>
        <trans-unit id="11ea87ff9d34b4d7ff9d6c7bc7b92b5f103fe1c1" translate="yes" xml:space="preserve">
          <source>recarray.sum()</source>
          <target state="translated">recarray.sum()</target>
        </trans-unit>
        <trans-unit id="671e136724d0b8a0f45590e11cfe744237e41da0" translate="yes" xml:space="preserve">
          <source>recarray.swapaxes()</source>
          <target state="translated">recarray.swapaxes()</target>
        </trans-unit>
        <trans-unit id="ea62242711c751677d7c13dce4c19ec14f90f62c" translate="yes" xml:space="preserve">
          <source>recarray.take()</source>
          <target state="translated">recarray.take()</target>
        </trans-unit>
        <trans-unit id="9dcb9ab366fd2d204df337930eefe4688370cf5e" translate="yes" xml:space="preserve">
          <source>recarray.tobytes()</source>
          <target state="translated">recarray.tobytes()</target>
        </trans-unit>
        <trans-unit id="eb7c1c14484cf06cb90fb9737eb94191f78b7bd8" translate="yes" xml:space="preserve">
          <source>recarray.tofile()</source>
          <target state="translated">recarray.tofile()</target>
        </trans-unit>
        <trans-unit id="92c80766ad1ccb9f2c2a734833056ae1c4b596c8" translate="yes" xml:space="preserve">
          <source>recarray.tolist()</source>
          <target state="translated">recarray.tolist()</target>
        </trans-unit>
        <trans-unit id="41f9bec055568c8e7843f9f578e783860288ae95" translate="yes" xml:space="preserve">
          <source>recarray.tostring()</source>
          <target state="translated">recarray.tostring()</target>
        </trans-unit>
        <trans-unit id="f903b56eee611ef6aae07f7d0523ae40a3e527a9" translate="yes" xml:space="preserve">
          <source>recarray.trace()</source>
          <target state="translated">recarray.trace()</target>
        </trans-unit>
        <trans-unit id="15bc0f9fc11d7d2fa2e2461e92147f7bc4df3e6b" translate="yes" xml:space="preserve">
          <source>recarray.transpose()</source>
          <target state="translated">recarray.transpose()</target>
        </trans-unit>
        <trans-unit id="e8e90fb4d3c7aa54631a1363d1b6df4abfc572d1" translate="yes" xml:space="preserve">
          <source>recarray.var()</source>
          <target state="translated">recarray.var()</target>
        </trans-unit>
        <trans-unit id="e707098daf25444993f56931c8d5ad53db8de049" translate="yes" xml:space="preserve">
          <source>recarray.view()</source>
          <target state="translated">recarray.view()</target>
        </trans-unit>
        <trans-unit id="ece99492203df6922a6586a7fc2b5e9bfcbf1a48" translate="yes" xml:space="preserve">
          <source>reciprocal (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d6472749eb315a0560587ca8be593bd3a3ba8f" translate="yes" xml:space="preserve">
          <source>record (class in numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f48efeed6ae57099d91bfc90f9c4393058368891" translate="yes" xml:space="preserve">
          <source>record array consisting of data enclosed in file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e71135e90da549eac8c65768e48de054b213ea1a" translate="yes" xml:space="preserve">
          <source>record array consisting of given recList rows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaa03ca01494f9b61936cefd03cf6377c7c2f1a4" translate="yes" xml:space="preserve">
          <source>record() (numpy.testing.suppress_warnings method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9963c1d6b10a1c4a6a135516dcd27a5c6601bcda" translate="yes" xml:space="preserve">
          <source>record.T</source>
          <target state="translated">record.T</target>
        </trans-unit>
        <trans-unit id="304fac10fc7dc82748210ff1edf7cebfeafdfb45" translate="yes" xml:space="preserve">
          <source>record.all()</source>
          <target state="translated">record.all()</target>
        </trans-unit>
        <trans-unit id="8216dd5a5d1b8b0ab932c8bee1c532384c736113" translate="yes" xml:space="preserve">
          <source>record.any()</source>
          <target state="translated">record.any()</target>
        </trans-unit>
        <trans-unit id="bc48df9fd5e37923823832f94497c126c363d8ed" translate="yes" xml:space="preserve">
          <source>record.argmax()</source>
          <target state="translated">record.argmax()</target>
        </trans-unit>
        <trans-unit id="1b7e33c11cb631eb03a5a3ace03ac8f06bead145" translate="yes" xml:space="preserve">
          <source>record.argmin()</source>
          <target state="translated">record.argmin()</target>
        </trans-unit>
        <trans-unit id="83b776fce8d929907fbf98672b3a1ca69d134bf8" translate="yes" xml:space="preserve">
          <source>record.argsort()</source>
          <target state="translated">record.argsort()</target>
        </trans-unit>
        <trans-unit id="f609f84dd3963497ccc442ef00dc6201e0b746e4" translate="yes" xml:space="preserve">
          <source>record.astype()</source>
          <target state="translated">record.astype()</target>
        </trans-unit>
        <trans-unit id="e021a4b2567af7c038bafd8517c10162cdf672e7" translate="yes" xml:space="preserve">
          <source>record.base</source>
          <target state="translated">record.base</target>
        </trans-unit>
        <trans-unit id="d3aba5e0f33904b0e7782d11f9ca78e6e27839f2" translate="yes" xml:space="preserve">
          <source>record.byteswap()</source>
          <target state="translated">record.byteswap()</target>
        </trans-unit>
        <trans-unit id="8b3b5f12221ad676f78c8a5a44c8c782de0be92c" translate="yes" xml:space="preserve">
          <source>record.choose()</source>
          <target state="translated">record.choose()</target>
        </trans-unit>
        <trans-unit id="ea446bd7b1b9dd3f19a76d5ba9c1da644ca1cb41" translate="yes" xml:space="preserve">
          <source>record.clip()</source>
          <target state="translated">record.clip()</target>
        </trans-unit>
        <trans-unit id="19b6496844304a8b83abec1828b55e578def28de" translate="yes" xml:space="preserve">
          <source>record.compress()</source>
          <target state="translated">record.compress()</target>
        </trans-unit>
        <trans-unit id="5070d000686c2a8c94b678cc242fd84b9df6fb79" translate="yes" xml:space="preserve">
          <source>record.conjugate()</source>
          <target state="translated">record.conjugate()</target>
        </trans-unit>
        <trans-unit id="c64c7064584f9f509926c627d282e91783ebaad6" translate="yes" xml:space="preserve">
          <source>record.copy()</source>
          <target state="translated">record.copy()</target>
        </trans-unit>
        <trans-unit id="ffb0dd37a758720c44048a56edc0bd3c862031f6" translate="yes" xml:space="preserve">
          <source>record.cumprod()</source>
          <target state="translated">record.cumprod()</target>
        </trans-unit>
        <trans-unit id="eb5fc6172875ac34edcdc4df3e416633a5ea402b" translate="yes" xml:space="preserve">
          <source>record.cumsum()</source>
          <target state="translated">record.cumsum()</target>
        </trans-unit>
        <trans-unit id="4ab3fe99372f2f0dd8a41ef7317d131bef900b2b" translate="yes" xml:space="preserve">
          <source>record.data</source>
          <target state="translated">record.data</target>
        </trans-unit>
        <trans-unit id="06572d17fac75c0f5b16dbd1dcf80193156825aa" translate="yes" xml:space="preserve">
          <source>record.diagonal()</source>
          <target state="translated">record.diagonal()</target>
        </trans-unit>
        <trans-unit id="5a05f5de4a8ee5ea1758b00807780ab914891b6d" translate="yes" xml:space="preserve">
          <source>record.dump()</source>
          <target state="translated">record.dump()</target>
        </trans-unit>
        <trans-unit id="d8fa350a43b02ebe17746712491e359936f31278" translate="yes" xml:space="preserve">
          <source>record.dumps()</source>
          <target state="translated">record.dumps()</target>
        </trans-unit>
        <trans-unit id="6589102da53c472fb9865dd6e7709f70432037a2" translate="yes" xml:space="preserve">
          <source>record.fill()</source>
          <target state="translated">record.fill()</target>
        </trans-unit>
        <trans-unit id="efa7be54b1c4f001958b6cbcbea40f54bd6c707c" translate="yes" xml:space="preserve">
          <source>record.flags</source>
          <target state="translated">record.flags</target>
        </trans-unit>
        <trans-unit id="d8431075821e0eb1680808966445e7812429b112" translate="yes" xml:space="preserve">
          <source>record.flat</source>
          <target state="translated">record.flat</target>
        </trans-unit>
        <trans-unit id="ac25b8b87fa3491d2653c458b415c942e4f38e5a" translate="yes" xml:space="preserve">
          <source>record.flatten()</source>
          <target state="translated">record.flatten()</target>
        </trans-unit>
        <trans-unit id="ef93ed448eedc30d5a8fd97a4086b93aac0d6e57" translate="yes" xml:space="preserve">
          <source>record.getfield()</source>
          <target state="translated">record.getfield()</target>
        </trans-unit>
        <trans-unit id="813ff827514b7104ac6d16940acf32e0bb129854" translate="yes" xml:space="preserve">
          <source>record.item()</source>
          <target state="translated">record.item()</target>
        </trans-unit>
        <trans-unit id="7935d9e3d4796f1e84e98ebbbad8a79936285c73" translate="yes" xml:space="preserve">
          <source>record.itemset()</source>
          <target state="translated">record.itemset()</target>
        </trans-unit>
        <trans-unit id="ba505bffbe92153b6d2e1a751db5539387542d7b" translate="yes" xml:space="preserve">
          <source>record.itemsize</source>
          <target state="translated">record.itemsize</target>
        </trans-unit>
        <trans-unit id="d4d95697b2085196b920f5021c6e2e6c43057477" translate="yes" xml:space="preserve">
          <source>record.max()</source>
          <target state="translated">record.max()</target>
        </trans-unit>
        <trans-unit id="d7b077a186bc38a2eebb5f50e808c339f36e33db" translate="yes" xml:space="preserve">
          <source>record.mean()</source>
          <target state="translated">record.mean()</target>
        </trans-unit>
        <trans-unit id="885b7295cb34ab06214cbabd09c873f24cc4e61b" translate="yes" xml:space="preserve">
          <source>record.min()</source>
          <target state="translated">record.min()</target>
        </trans-unit>
        <trans-unit id="1eb46d9a05906208b3b5a2cdc83dd845bfd06d92" translate="yes" xml:space="preserve">
          <source>record.nbytes</source>
          <target state="translated">record.nbytes</target>
        </trans-unit>
        <trans-unit id="b1a4021c53df92c5824abb2c8b759fcae623a984" translate="yes" xml:space="preserve">
          <source>record.ndim</source>
          <target state="translated">record.ndim</target>
        </trans-unit>
        <trans-unit id="d45238a7ee4c6093759d45d7c73a7822b5723e68" translate="yes" xml:space="preserve">
          <source>record.newbyteorder()</source>
          <target state="translated">record.newbyteorder()</target>
        </trans-unit>
        <trans-unit id="9e74a6681f7ce40f8830b4930bacf2b927526449" translate="yes" xml:space="preserve">
          <source>record.nonzero()</source>
          <target state="translated">record.nonzero()</target>
        </trans-unit>
        <trans-unit id="9f3ba8ac641c013621aaafa2c3bc34b90f462ac9" translate="yes" xml:space="preserve">
          <source>record.pprint()</source>
          <target state="translated">record.pprint()</target>
        </trans-unit>
        <trans-unit id="7cf9f3452c88c49cb16d6b2442c6a88ee370f6d6" translate="yes" xml:space="preserve">
          <source>record.prod()</source>
          <target state="translated">record.prod()</target>
        </trans-unit>
        <trans-unit id="b843e0912ebc803b73cb615388acc31a4eb115ab" translate="yes" xml:space="preserve">
          <source>record.ptp()</source>
          <target state="translated">record.ptp()</target>
        </trans-unit>
        <trans-unit id="abaf290fcb4119e192983acd25b46211077b73b0" translate="yes" xml:space="preserve">
          <source>record.put()</source>
          <target state="translated">record.put()</target>
        </trans-unit>
        <trans-unit id="6232e4e75feab8e8861fe3f6b1636e3831013b1c" translate="yes" xml:space="preserve">
          <source>record.ravel()</source>
          <target state="translated">record.ravel()</target>
        </trans-unit>
        <trans-unit id="2cd414962681fa1e7ce5cd910bfea73c5ef08868" translate="yes" xml:space="preserve">
          <source>record.repeat()</source>
          <target state="translated">record.repeat()</target>
        </trans-unit>
        <trans-unit id="b2f7522621282f465b1bc6738206f0aa94290f8b" translate="yes" xml:space="preserve">
          <source>record.reshape()</source>
          <target state="translated">record.reshape()</target>
        </trans-unit>
        <trans-unit id="dbd6ff48dd4a6c24f5e11176139ce0376159e35d" translate="yes" xml:space="preserve">
          <source>record.resize()</source>
          <target state="translated">record.resize()</target>
        </trans-unit>
        <trans-unit id="5d8c182c29d48b70612978b6aa17e2f110b42025" translate="yes" xml:space="preserve">
          <source>record.round()</source>
          <target state="translated">record.round()</target>
        </trans-unit>
        <trans-unit id="73ebfb7d7293510732f871d0d1df080f9d081a9d" translate="yes" xml:space="preserve">
          <source>record.searchsorted()</source>
          <target state="translated">record.searchsorted()</target>
        </trans-unit>
        <trans-unit id="ff4e04826b95f8bdfc22142b172a6cbafb0e524e" translate="yes" xml:space="preserve">
          <source>record.setfield()</source>
          <target state="translated">record.setfield()</target>
        </trans-unit>
        <trans-unit id="ca8690ebadecea4a5efc64bafb5d407cb8f8b096" translate="yes" xml:space="preserve">
          <source>record.setflags()</source>
          <target state="translated">record.setflags()</target>
        </trans-unit>
        <trans-unit id="dfe9741dae9f6771d69357e29d47d4f95e3d56f6" translate="yes" xml:space="preserve">
          <source>record.shape</source>
          <target state="translated">record.shape</target>
        </trans-unit>
        <trans-unit id="a5d32dd0ed62a1488f4eebe357332d04c24c344f" translate="yes" xml:space="preserve">
          <source>record.size</source>
          <target state="translated">record.size</target>
        </trans-unit>
        <trans-unit id="308a5612636641bca9c6ff6e027c25f6694b593b" translate="yes" xml:space="preserve">
          <source>record.sort()</source>
          <target state="translated">record.sort()</target>
        </trans-unit>
        <trans-unit id="ed632417eaaaadbf8ccd698d8be60395fbc4b440" translate="yes" xml:space="preserve">
          <source>record.squeeze()</source>
          <target state="translated">record.squeeze()</target>
        </trans-unit>
        <trans-unit id="fb782455d06f4efac8a83d173970e32c74ec39cc" translate="yes" xml:space="preserve">
          <source>record.std()</source>
          <target state="translated">record.std()</target>
        </trans-unit>
        <trans-unit id="6a33c714cd57fb4032b73da0b5fca530291118d3" translate="yes" xml:space="preserve">
          <source>record.strides</source>
          <target state="translated">record.strides</target>
        </trans-unit>
        <trans-unit id="c0e867cef42a74427ba4cb897bff6ef01a3c808e" translate="yes" xml:space="preserve">
          <source>record.sum()</source>
          <target state="translated">record.sum()</target>
        </trans-unit>
        <trans-unit id="05e54d23d3758e2cdfd530142cdb0f83f2166571" translate="yes" xml:space="preserve">
          <source>record.swapaxes()</source>
          <target state="translated">record.swapaxes()</target>
        </trans-unit>
        <trans-unit id="0f1f7a75e479f23eba4e601277eb136973c3c3af" translate="yes" xml:space="preserve">
          <source>record.take()</source>
          <target state="translated">record.take()</target>
        </trans-unit>
        <trans-unit id="f0a8d74c77a1892c64ae32f1a5d6b96d5c08a7a9" translate="yes" xml:space="preserve">
          <source>record.tofile()</source>
          <target state="translated">record.tofile()</target>
        </trans-unit>
        <trans-unit id="9f279b8d3fc0dcce91fd6f2e5b582fb46afba7ca" translate="yes" xml:space="preserve">
          <source>record.tolist()</source>
          <target state="translated">record.tolist()</target>
        </trans-unit>
        <trans-unit id="dd94e83032abaf701fda64ad1d78f697372cf066" translate="yes" xml:space="preserve">
          <source>record.tostring()</source>
          <target state="translated">record.tostring()</target>
        </trans-unit>
        <trans-unit id="0127676c5120623812dd19f427ee46e99b70fb35" translate="yes" xml:space="preserve">
          <source>record.trace()</source>
          <target state="translated">record.trace()</target>
        </trans-unit>
        <trans-unit id="dbb4d708c7bbfd9bb66970a4fcb8985b81463260" translate="yes" xml:space="preserve">
          <source>record.transpose()</source>
          <target state="translated">record.transpose()</target>
        </trans-unit>
        <trans-unit id="8fa13935c11a14848d60200fe9b7213c4e1c4cda" translate="yes" xml:space="preserve">
          <source>record.var()</source>
          <target state="translated">record.var()</target>
        </trans-unit>
        <trans-unit id="1e985e9d4a41be2045479cf92af9e159649ce53c" translate="yes" xml:space="preserve">
          <source>record.view()</source>
          <target state="translated">record.view()</target>
        </trans-unit>
        <trans-unit id="3896abd1b46b6187bb279fddb23617be6e23ec03" translate="yes" xml:space="preserve">
          <source>recordmask (numpy.ma.MaskedArray attribute)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5befaecf174687d16d813cf17badca70c8fcf072" translate="yes" xml:space="preserve">
          <source>recordmask() (numpy.ma.masked_array property)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed6d17e8b8a5ac7de1c2b3517a4a9cdf52f869d0" translate="yes" xml:space="preserve">
          <source>recursive_fill_fields() (in module numpy.lib.recfunctions)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="204c2aadb42c2711706be8056da3fe7cc7a3ddc8" translate="yes" xml:space="preserve">
          <source>red_text() (in module numpy.distutils.misc_util)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c3689f6dd5e9e952f925b7ebebf64d7c43fc56" translate="yes" xml:space="preserve">
          <source>reduce</source>
          <target state="translated">reduce</target>
        </trans-unit>
        <trans-unit id="e36efc89fac9e513314b66d4bbe53e3d57d81487" translate="yes" xml:space="preserve">
          <source>reduce() (numpy.ufunc method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88e4958e4b6dafda6dea277f7be0fd301347f017" translate="yes" xml:space="preserve">
          <source>reduce, ufunc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="220784a8ba17cb28b63f174b37f6b4814fbf5486" translate="yes" xml:space="preserve">
          <source>reduceat</source>
          <target state="translated">reduceat</target>
        </trans-unit>
        <trans-unit id="339b2c5b29da8589367e504910954da6248b95eb" translate="yes" xml:space="preserve">
          <source>reduceat() (numpy.ufunc method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9df16230c1c459b518ea701142ae2068f5d9cf50" translate="yes" xml:space="preserve">
          <source>reduceat, ufunc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b43cc86e502f0f6a904094ed8ada96fa8fb20d80" translate="yes" xml:space="preserve">
          <source>reduction</source>
          <target state="translated">reduction</target>
        </trans-unit>
        <trans-unit id="2bf412eafa42bf48a10f024b57e3ac2fd65082ae" translate="yes" xml:space="preserve">
          <source>related function</source>
          <target state="translated">función relacionada</target>
        </trans-unit>
        <trans-unit id="5b20e48fd3266b7f322a99ee5f26264bc44c0761" translate="yes" xml:space="preserve">
          <source>related function which returns an ndarray</source>
          <target state="translated">función relacionada que devuelve un ndarray</target>
        </trans-unit>
        <trans-unit id="348310e72786b96da2a051486c86ed688ef9d679" translate="yes" xml:space="preserve">
          <source>relationship (optional)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cea3b564584fe7e4748721c38bd713db3bb7421c" translate="yes" xml:space="preserve">
          <source>relaxed stride checking</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dee5c4430f3aa3a43132ee80817c8d207bada8d9" translate="yes" xml:space="preserve">
          <source>release.sh</source>
          <target state="translated">release.sh</target>
        </trans-unit>
        <trans-unit id="f7eed07fb1d264e530c8449434e3a476308d4941" translate="yes" xml:space="preserve">
          <source>remainder (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffecfd90e60732434f52ca91eafb724e2f9e894c" translate="yes" xml:space="preserve">
          <source>remove singleton dimensions of array &lt;code&gt;a&lt;/code&gt;. Note that MATLAB will always return arrays of 2D or higher while NumPy will return arrays of 0D or higher</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bac7926454f355fe80ab8a6a7236f2306904715" translate="yes" xml:space="preserve">
          <source>remove_axis() (numpy.nditer method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="838c9af3bc13dc1aaba7624c8e0f595ba91febff" translate="yes" xml:space="preserve">
          <source>remove_multi_index() (numpy.nditer method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69992f1747443a7ccd623ae5b1b7169fdeb09a01" translate="yes" xml:space="preserve">
          <source>removed</source>
          <target state="translated">removed</target>
        </trans-unit>
        <trans-unit id="20c772b882817c5d1481c5017ff2082fa00b6611" translate="yes" xml:space="preserve">
          <source>rename_fields() (in module numpy.lib.recfunctions)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbc380e257627e12b33781dc0d926fb6a1dc1a9d" translate="yes" xml:space="preserve">
          <source>reorder fields to be sorted by offset</source>
          <target state="translated">reordenar los campos para que se ordenen por compensación</target>
        </trans-unit>
        <trans-unit id="6314f71ad580535129e49390d8a72246ff2ce973" translate="yes" xml:space="preserve">
          <source>repack_fields() (in module numpy.lib.recfunctions)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a76c2ff9a1fa914dacb231e4eb19843e816605f" translate="yes" xml:space="preserve">
          <source>repeat() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36a015cb248e08ebd1b87e5b21bb3104d3948171" translate="yes" xml:space="preserve">
          <source>replace() (in module numpy.char)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e6cfa953ed570aa7cc25abf2544cfeee4a3bee3" translate="yes" xml:space="preserve">
          <source>repmat() (in module numpy.matlib)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ea1430f382a64a3b72b2cf580c506513899611" translate="yes" xml:space="preserve">
          <source>require() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f542a26cf20ce89311d4e79458a9428d8159345f" translate="yes" xml:space="preserve">
          <source>require_fields() (in module numpy.lib.recfunctions)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="441c30e17619014b4fbfb95eeb2c847e7060310f" translate="yes" xml:space="preserve">
          <source>reset() (numpy.broadcast method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62ab13dc1841d5751ea082a18dce220841ff7327" translate="yes" xml:space="preserve">
          <source>reshape an array.</source>
          <target state="translated">...remodelar una matriz.</target>
        </trans-unit>
        <trans-unit id="248e152c514fcff49aeac3b81d9aa3fca733f45c" translate="yes" xml:space="preserve">
          <source>reshape() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc209ec256da204375a0b02ea2ed143f9fcd4476" translate="yes" xml:space="preserve">
          <source>resid &amp;ndash; sum of squared residuals of the least squares fit rank &amp;ndash; the numerical rank of the scaled Vandermonde matrix sv &amp;ndash; singular values of the scaled Vandermonde matrix rcond &amp;ndash; value of &lt;code&gt;rcond&lt;/code&gt;.</source>
          <target state="translated">resid - suma de residuos cuadrados del rango de ajuste de m&amp;iacute;nimos cuadrados - el rango num&amp;eacute;rico de la matriz de Vandermonde escalada sv - valores singulares de la matriz de Vandermonde escalada rcond - valor de &lt;code&gt;rcond&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="673aee8830001b9f62bf65e01df77cfeb4b11c1f" translate="yes" xml:space="preserve">
          <source>residuals, rank, singular_values, rcond</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a912153f32215a36d96b60b634e45502f8c866a" translate="yes" xml:space="preserve">
          <source>resize an array in-place.</source>
          <target state="translated">cambiar el tamaño de una matriz en el lugar.</target>
        </trans-unit>
        <trans-unit id="77918a3b5c2a0617a12b3851cc545c1e978cb963" translate="yes" xml:space="preserve">
          <source>resize() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c98b1d556cf9142af76fa037087a559a8a0820b" translate="yes" xml:space="preserve">
          <source>result_type() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5251f8c1c5a2291311c7f7545ccbfe3f0852672c" translate="yes" xml:space="preserve">
          <source>results in a &lt;code&gt;ValueError&lt;/code&gt;. This happens because having a one-dimensional array for &lt;code&gt;s&lt;/code&gt;, in this case, is much more economic in practice than building a diagonal matrix with the same data. To reconstruct the original matrix, we can rebuild the diagonal matrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c79c4eb3d2f797ac2cdf3d2f0a00da903ab6bf6" translate="yes" xml:space="preserve">
          <source>return a &lt;a href=&quot;../reference/maskedarray.generic#maskedarray-generic&quot;&gt;masked array&lt;/a&gt;&lt;strong&gt;masking out missing values&lt;/strong&gt; (if &lt;code&gt;usemask=True&lt;/code&gt;), or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d5d61658de68ee56f8c093accd3702cda4f2218" translate="yes" xml:space="preserve">
          <source>returned index &lt;code&gt;i&lt;/code&gt; satisfies</source>
          <target state="translated">&amp;iacute;ndice devuelto &lt;code&gt;i&lt;/code&gt; satisface</target>
        </trans-unit>
        <trans-unit id="6853a51d6f335425fd26d133c5c43ad5baae9af5" translate="yes" xml:space="preserve">
          <source>returns a similar output matrix but always a copy</source>
          <target state="translated">devuelve una matriz de salida similar pero siempre una copia</target>
        </trans-unit>
        <trans-unit id="47460f5fe5ad1f9d6619ef3f12ad40773fc889f5" translate="yes" xml:space="preserve">
          <source>returns a square diagonal matrix whose nonzero values are the elements of vector, &lt;code&gt;v&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b249fffc383b991a3a856e6a2b53558522ed8d3" translate="yes" xml:space="preserve">
          <source>returns a vector of the diagonal elements of 2D array, &lt;code&gt;a&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e707c065f6f345f7f2dd8ea2eb6ad895da28014" translate="yes" xml:space="preserve">
          <source>rfft() (in module numpy.fft)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ce066a9916e300ed4f82ae173f53192e35c5e67" translate="yes" xml:space="preserve">
          <source>rfft2() (in module numpy.fft)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="095f019e5d225d27f02a2c085f8b2d3883d3f215" translate="yes" xml:space="preserve">
          <source>rfftfreq() (in module numpy.fft)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="567dc5851fe589a873fe169b68ab89e366530df9" translate="yes" xml:space="preserve">
          <source>rfftn() (in module numpy.fft)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="253bc40cf46c9d189f6d91a95b8ae88c554d3208" translate="yes" xml:space="preserve">
          <source>rfind() (in module numpy.char)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d27a1f11771200949714b1af99f048a416f5d6f4" translate="yes" xml:space="preserve">
          <source>right</source>
          <target state="translated">right</target>
        </trans-unit>
        <trans-unit id="9aac6dde24e2b1274d866dc1ae2c1e52a74d10cb" translate="yes" xml:space="preserve">
          <source>right_shift (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cb1dab6c6f4fd3bc8bc0ec9ca0a66cfc0cb2ae6" translate="yes" xml:space="preserve">
          <source>rindex() (in module numpy.char)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6845d10619304c835c161951bc957543998240cd" translate="yes" xml:space="preserve">
          <source>rint (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65d09d5ad9b1c709cc8789d7c3483cb26bb778c1" translate="yes" xml:space="preserve">
          <source>rjust() (in module numpy.char)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908b602dac09fa1366ce3423d441af88738c0b14" translate="yes" xml:space="preserve">
          <source>roll() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d15b4993c6d6f27476c803d83139adeca4f34236" translate="yes" xml:space="preserve">
          <source>rollaxis and swapaxes always return a view</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6688b2d622c40a6e5b7dbd5f1823f66b3b54a46c" translate="yes" xml:space="preserve">
          <source>rollaxis() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5687cd32cebe564dda91bca0303df55f93b32fc2" translate="yes" xml:space="preserve">
          <source>roots() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af402924008364b16a741acd1d15d2bca2d3d0c" translate="yes" xml:space="preserve">
          <source>rot90() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41360858bf415474d24cd5e552077a3edb1e25b3" translate="yes" xml:space="preserve">
          <source>rot90(m, k=1, axes=(1,0)) is the reverse of rot90(m, k=1, axes=(0,1)) rot90(m, k=1, axes=(1,0)) is equivalent to rot90(m, k=-1, axes=(0,1))</source>
          <target state="translated">rot90(m,k=1,axes=(1,0))es el reverso de rot90(m,k=1,axes=(0,1))rot90(m,k=1,axes=(1,0))es equivalente a rot90(m,k=-1,axes=(0,1))</target>
        </trans-unit>
        <trans-unit id="92ef1c6f41d2cfddc32b9c8421e044a87ccd7671" translate="yes" xml:space="preserve">
          <source>round() (in module numpy.ma)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53cdb4e700a47974ed6b8fa57bffc8a381fd5dd1" translate="yes" xml:space="preserve">
          <source>round_() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="160b82a15e12725b5462490d8f65407bd4b197d4" translate="yes" xml:space="preserve">
          <source>row_stack (in module numpy.ma)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec2aa1b1214b2c10118194c8289d9cec2a5d3a59" translate="yes" xml:space="preserve">
          <source>rows 2,4 and 5 and columns 1 and 3. This allows the matrix to be modified, and doesn&amp;rsquo;t require a regular slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="089eb60545f3852c79f283406b4ab3e7649b4c2a" translate="yes" xml:space="preserve">
          <source>rows one to three and columns five to nine of &lt;code&gt;a&lt;/code&gt;. This gives read-only access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfc6572e357e3de2fd48e0cd4aba6b47eb866dad" translate="yes" xml:space="preserve">
          <source>rpartition() (in module numpy.char)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb1cfe47995f6188e03ae1e09be114fea87a750" translate="yes" xml:space="preserve">
          <source>rsplit() (in module numpy.char)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccc6f8dcfa28c80af2439f9057debd9288992bcb" translate="yes" xml:space="preserve">
          <source>rstrip() (in module numpy.char)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df6ad19037c97987c4ff9792810c0e145356717c" translate="yes" xml:space="preserve">
          <source>run</source>
          <target state="translated">run</target>
        </trans-unit>
        <trans-unit id="4c09165f81e19437a7ed2b6b544cdbc0ecca6c5c" translate="yes" xml:space="preserve">
          <source>run_main() (in module numpy.f2py)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6a27ebee1692aa0dc000f66a844dccd60796dff" translate="yes" xml:space="preserve">
          <source>run_module_suite() (in module numpy.testing)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31ac385a5713e9b073afc98adddc127250951fbb" translate="yes" xml:space="preserve">
          <source>rundocs() (in module numpy.testing)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="134df2695bf2f3d9aa3a4904d2899fb61196cdfa" translate="yes" xml:space="preserve">
          <source>runtests.py</source>
          <target state="translated">runtests.py</target>
        </trans-unit>
        <trans-unit id="a0f1490a20d0211c997b44bc357e1972deab8ae3" translate="yes" xml:space="preserve">
          <source>s</source>
          <target state="translated">s</target>
        </trans-unit>
        <trans-unit id="a4ee364c82c48a9b7fc25ce96e63aa57540b980e" translate="yes" xml:space="preserve">
          <source>s_ (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12dda0faaa0459935cae70197391a130aa80ad62" translate="yes" xml:space="preserve">
          <source>same as nanquantile, but with q in the range [0, 100].</source>
          <target state="translated">igual que el nanocuantilo,pero con q en el rango [0,100].</target>
        </trans-unit>
        <trans-unit id="d756e3ed32e8eb9e8d5dc83fdbcc1200a59d92a0" translate="yes" xml:space="preserve">
          <source>same thing, only for the upper triangle</source>
          <target state="translated">lo mismo,sólo que para el triángulo superior</target>
        </trans-unit>
        <trans-unit id="2bc96130bfe5164be56528411714eb7f9197138f" translate="yes" xml:space="preserve">
          <source>sample() (in module numpy.random)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cd29e0b402e27872f4912a75c97e803cc5f48d9" translate="yes" xml:space="preserve">
          <source>save the array &lt;code&gt;a&lt;/code&gt; as array &lt;code&gt;b&lt;/code&gt; with rows sorted by the first column</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef05aac0301b1bbdc7af5adc4fb21247307c7823" translate="yes" xml:space="preserve">
          <source>save() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed73a2c44de521a5c4b7b2ee5416d99bbbb4f074" translate="yes" xml:space="preserve">
          <source>savetxt() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd6526c85c8550832f54f03413b8f805ef609696" translate="yes" xml:space="preserve">
          <source>savez() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a04294d471ff05eb7dc388ae6fef1960ef3e828b" translate="yes" xml:space="preserve">
          <source>savez_compressed() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f87e80b1caee37fd7a4890be8ef9fac408e29056" translate="yes" xml:space="preserve">
          <source>sc.__array__(dtype) return 0-dim array from scalar with specified dtype</source>
          <target state="translated">sc.__array__(dtype)return 0-dim array from scalar with specified dtype</target>
        </trans-unit>
        <trans-unit id="81edf8a4be5a99c648636d74a1196566b2e09db6" translate="yes" xml:space="preserve">
          <source>sc.__array_wrap__(obj) return scalar from array</source>
          <target state="translated">sc.__array_wrap__(obj)return scalar from array</target>
        </trans-unit>
        <trans-unit id="87e93c3619f1baabaeceb2e4bfc8d49a6c318538" translate="yes" xml:space="preserve">
          <source>scalar</source>
          <target state="translated">scalar</target>
        </trans-unit>
        <trans-unit id="a6adfd68da9e12d04f9dacd2719da4b536547421" translate="yes" xml:space="preserve">
          <source>scalarkind()</source>
          <target state="translated">scalarkind()</target>
        </trans-unit>
        <trans-unit id="5ecf92eea3514c4adc7469f9dda075f47ecd0c31" translate="yes" xml:space="preserve">
          <source>scanfunc()</source>
          <target state="translated">scanfunc()</target>
        </trans-unit>
        <trans-unit id="100e2e52e0ecd4cc77198bb5409577615ebfb2b4" translate="yes" xml:space="preserve">
          <source>scipy.org website</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cf05f894035e1a2a48bbd4f59893b7696297b1a" translate="yes" xml:space="preserve">
          <source>scipy.weave</source>
          <target state="translated">scipy.weave</target>
        </trans-unit>
        <trans-unit id="976db26594f6a1fe04aaf9afdfcf20d642edca4f" translate="yes" xml:space="preserve">
          <source>sctype2char() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="545b1d755b34cb043200b00f90d12070e0255787" translate="yes" xml:space="preserve">
          <source>searchsorted() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="352f7829a2384b001cc12b0c2613c756454a1f6a" translate="yes" xml:space="preserve">
          <source>second</source>
          <target state="translated">second</target>
        </trans-unit>
        <trans-unit id="b8ccd06b30f8065e01961494da99b64b742faca0" translate="yes" xml:space="preserve">
          <source>see note HELP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0ccd1ece0ea58a3550a5881c2b927fffdbcf5ce" translate="yes" xml:space="preserve">
          <source>seed() (in module numpy.random)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaefbcd2ed0b32da17c9bd3e21fbaf78fe8b8ed9" translate="yes" xml:space="preserve">
          <source>select() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="724b93083e1f9c2a6d271505656944fd951c4162" translate="yes" xml:space="preserve">
          <source>self != 0</source>
          <target state="translated">¡yo mismo!=0</target>
        </trans-unit>
        <trans-unit id="b49930dd2e9db121167d8dc469a30527da0fc397" translate="yes" xml:space="preserve">
          <source>self.typeStr</source>
          <target state="translated">self.typeStr</target>
        </trans-unit>
        <trans-unit id="2626da0316c3313c5155d3067bb57c11c30df154" translate="yes" xml:space="preserve">
          <source>send an email to the &lt;a href=&quot;https://scipy.org/scipylib/mailing-lists.html&quot;&gt;NumPy mailing list&lt;/a&gt; with a link to your PR along with a description of and a motivation for your changes. This may generate changes and feedback. It might be prudent to start with this step if your change may be controversial.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc687afbed3dda4f9c9a62af562a023da862089b" translate="yes" xml:space="preserve">
          <source>separate cycles determined by the seed in addition to the position in the</source>
          <target state="translated">ciclos separados determinados por la semilla además de la posición en el</target>
        </trans-unit>
        <trans-unit id="c7278da530dfdfa9497b926056a3637861f49132" translate="yes" xml:space="preserve">
          <source>set all values to the same scalar value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2139a7fcf86dc4d3a0385cab561af2883cf12b6c" translate="yes" xml:space="preserve">
          <source>set_fill_value() (in module numpy.ma)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d9169df9a127ced4193b6a258eb760738260289" translate="yes" xml:space="preserve">
          <source>set_printoptions() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9184a51c2028298919bf6263300e3026d38e6ef6" translate="yes" xml:space="preserve">
          <source>set_state() (in module numpy.random)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ec7aa42f33e58533b9768c4856cc6186d528914" translate="yes" xml:space="preserve">
          <source>set_string_function() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b94cb68785f07fd360395533fb933672e7e5e70" translate="yes" xml:space="preserve">
          <source>set_verbosity() (in module numpy.distutils.log)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c4593cb6955f55f53f5d8fe0de587c9821c4bc4" translate="yes" xml:space="preserve">
          <source>setastest() (in module numpy.testing.dec)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1748cde2f4d658c920a82bef666867893528841" translate="yes" xml:space="preserve">
          <source>setbufsize() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b536e6ae26f687e998956cfd7864129c58aa25e" translate="yes" xml:space="preserve">
          <source>setdiff1d() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2e65db04c4386df43ad1278a42a93afea4520c4" translate="yes" xml:space="preserve">
          <source>seterr() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f6635f475d0d535fef5f97bb8c2f4a070578cec" translate="yes" xml:space="preserve">
          <source>seterrcall() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e460e97c177d485fbf01aa4796bf4faa597742e8" translate="yes" xml:space="preserve">
          <source>seterrobj() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f479df97b3a1df4147b6f03ace74e1d1c1a90df7" translate="yes" xml:space="preserve">
          <source>setfield() (numpy.char.chararray method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fd2596554ad07d51c9675e0e689de7dd5b9a0bf" translate="yes" xml:space="preserve">
          <source>setflags() (numpy.char.chararray method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8687dea1340e0545f3abff3713f7ccd3be60d75c" translate="yes" xml:space="preserve">
          <source>setitem</source>
          <target state="translated">setitem</target>
        </trans-unit>
        <trans-unit id="9a084b3ea6337422f088fa0258f2a078bd148d7e" translate="yes" xml:space="preserve">
          <source>setitem()</source>
          <target state="translated">setitem()</target>
        </trans-unit>
        <trans-unit id="a5a874344d32d22869dc127495901644d0c78ff1" translate="yes" xml:space="preserve">
          <source>setitem, ndarray</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e2edce0d507e1297474f25c00cae94258db38d8" translate="yes" xml:space="preserve">
          <source>setup.py</source>
          <target state="translated">setup.py</target>
        </trans-unit>
        <trans-unit id="202ce400e924445105388de089584e1383a66f89" translate="yes" xml:space="preserve">
          <source>setxor1d() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f556761761315ac446ec33366dce7217b1b3beb" translate="yes" xml:space="preserve">
          <source>shape (numpy.broadcast attribute)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="976c013212cc6c945b9a44ea582e5428b22e7a5a" translate="yes" xml:space="preserve">
          <source>shape of each array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb4e8792796e6d8f5b07e6e901d170a1e9cca710" translate="yes" xml:space="preserve">
          <source>shape() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="101d175a72ba49b58f0e4c2df7befa6a1c7f43ba" translate="yes" xml:space="preserve">
          <source>sharedmask (numpy.ma.MaskedArray attribute)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88435c3d80c7a9cd04eb2d926dc0e1b5d2a8ab28" translate="yes" xml:space="preserve">
          <source>sharedmask() (numpy.ma.masked_array property)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bde9de0386897cd3071a0c56f668a5411ee15b0a" translate="yes" xml:space="preserve">
          <source>shares_memory() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0f4ea7d91495df92bbac2e2149dfb850fe81396" translate="yes" xml:space="preserve">
          <source>short</source>
          <target state="translated">short</target>
        </trans-unit>
        <trans-unit id="726658ee765464f9c525ba3ddca662f3e79e3a5b" translate="yes" xml:space="preserve">
          <source>short-circuiting logical AND operator (&lt;a href=&quot;https://docs.python.org/dev/library/stdtypes.html#boolean&quot;&gt;Python native operator&lt;/a&gt;); scalar arguments only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bd757c31d4f3ca64f8f583b5a04972c9cb761b7" translate="yes" xml:space="preserve">
          <source>short-circuiting logical AND operator (Python native operator); scalar arguments only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="266a958e02fd6f135174fe483ec6591c70dd8a4e" translate="yes" xml:space="preserve">
          <source>short-circuiting logical OR operator (&lt;a href=&quot;https://docs.python.org/dev/library/stdtypes.html#boolean&quot;&gt;Python native operator&lt;/a&gt;); scalar arguments only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc728d37651685c65c3006834ceb61bcd2504f78" translate="yes" xml:space="preserve">
          <source>short-circuiting logical OR operator (Python native operator); scalar arguments only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a73551f538a27b3560683d23bfe68f1c196079da" translate="yes" xml:space="preserve">
          <source>should be 768x1024 since &lt;code&gt;U&lt;/code&gt; is 768x768 and &lt;code&gt;Vt&lt;/code&gt; is 1024x1024.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f1d1fcbab9ef6a0d0854d7e54cbbc70bc556052" translate="yes" xml:space="preserve">
          <source>should give you an image indistinguishable from the original one (although we may introduce floating point errors for this reconstruction). In fact, you might see a warning message saying &lt;code&gt;&amp;ldquo;Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).&amp;rdquo;&lt;/code&gt; This is expected from the manipulation we just did on the original image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="827305a6369afdabc8373facb370817c92c346e3" translate="yes" xml:space="preserve">
          <source>should shield you from changes to Python C api</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2166ec63115d720a9998cb2eee402e0c9733fbf6" translate="yes" xml:space="preserve">
          <source>show_config() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d007dc3dd9030bc93745ea9a2b06f9be4f12d3c1" translate="yes" xml:space="preserve">
          <source>shrink_mask() (numpy.ma.masked_array method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="187dc5704ade702282b5b98eb42eca8f784f7977" translate="yes" xml:space="preserve">
          <source>shuffle</source>
          <target state="translated">shuffle</target>
        </trans-unit>
        <trans-unit id="6a2a09a1b3e842b29c021a2495bbb533261535f1" translate="yes" xml:space="preserve">
          <source>shuffle() (in module numpy.random)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4eec307fab9b49c3ec215c54b6ceda069334e69" translate="yes" xml:space="preserve">
          <source>sign (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e47ff80f60d0ba7dce5096966167ef5e8f23a08d" translate="yes" xml:space="preserve">
          <source>sign : str</source>
          <target state="translated">signo:str</target>
        </trans-unit>
        <trans-unit id="fab5f62863cdedc5143552c9d37d6679e3304f7a" translate="yes" xml:space="preserve">
          <source>signature</source>
          <target state="translated">signature</target>
        </trans-unit>
        <trans-unit id="a2e0271155bc7ef2e3aed20f1a6c36bfe9d693ff" translate="yes" xml:space="preserve">
          <source>signature (numpy.ufunc attribute)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="367f02fe243e787b2e64e791c4e7b67f073c41f6" translate="yes" xml:space="preserve">
          <source>signbit (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54b6ee3c2dbb3f3abe84363629b2529c455f02c8" translate="yes" xml:space="preserve">
          <source>signed integer</source>
          <target state="translated">entero firmado</target>
        </trans-unit>
        <trans-unit id="aacfbfe66efb2e10499ed4c1776bd95616131d37" translate="yes" xml:space="preserve">
          <source>similar function</source>
          <target state="translated">función similar</target>
        </trans-unit>
        <trans-unit id="221a8e3b6db7568cd78e3164306ab799e80923e8" translate="yes" xml:space="preserve">
          <source>similar function, for lower-triangular.</source>
          <target state="translated">función similar,para el triángulo inferior.</target>
        </trans-unit>
        <trans-unit id="1ad9b34bcbd2926f18bcf94a3b90721363a6bbc0" translate="yes" xml:space="preserve">
          <source>similar function, for upper-triangular.</source>
          <target state="translated">función similar,para el triángulo superior.</target>
        </trans-unit>
        <trans-unit id="6b28af57c60cd6570e64c36ca09b796252c507f0" translate="yes" xml:space="preserve">
          <source>similar instance method</source>
          <target state="translated">método de instancia similar</target>
        </trans-unit>
        <trans-unit id="5edf9c637e4b19a16fe0efb7d49d868f6c45af0d" translate="yes" xml:space="preserve">
          <source>similar method</source>
          <target state="translated">método similar...</target>
        </trans-unit>
        <trans-unit id="7ea7fa1d1716c31010dfa1417a48b18f2fcbae40" translate="yes" xml:space="preserve">
          <source>similar to &lt;a href=&quot;#numpy.random.RandomState.randint&quot;&gt;&lt;code&gt;randint&lt;/code&gt;&lt;/a&gt;, only for the closed interval [&lt;code&gt;low&lt;/code&gt;, &lt;code&gt;high&lt;/code&gt;], and 1 is the lowest value if &lt;code&gt;high&lt;/code&gt; is omitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="381fa03d57678b1ea81055be101ff8a5400609bd" translate="yes" xml:space="preserve">
          <source>similar to &lt;a href=&quot;#numpy.random.mtrand.RandomState.randint&quot;&gt;&lt;code&gt;randint&lt;/code&gt;&lt;/a&gt;, only for the closed interval [&lt;code&gt;low&lt;/code&gt;, &lt;code&gt;high&lt;/code&gt;], and 1 is the lowest value if &lt;code&gt;high&lt;/code&gt; is omitted.</source>
          <target state="translated">similar a &lt;a href=&quot;#numpy.random.mtrand.RandomState.randint&quot;&gt; &lt;code&gt;randint&lt;/code&gt; &lt;/a&gt; , solo para el intervalo cerrado [ &lt;code&gt;low&lt;/code&gt; , &lt;code&gt;high&lt;/code&gt; ], y 1 es el valor m&amp;aacute;s bajo si se omite &lt;code&gt;high&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aae711dbba06966f8e2fea7f9c342cb8270b7c73" translate="yes" xml:space="preserve">
          <source>similar to &lt;a href=&quot;#numpy.random.randint&quot;&gt;&lt;code&gt;randint&lt;/code&gt;&lt;/a&gt;, only for the closed interval [&lt;code&gt;low&lt;/code&gt;, &lt;code&gt;high&lt;/code&gt;], and 1 is the lowest value if &lt;code&gt;high&lt;/code&gt; is omitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a529d28d04efaf71c01989b8d64f6bd5f6f9ed7f" translate="yes" xml:space="preserve">
          <source>similar to &lt;a href=&quot;numpy.random.randint#numpy.random.randint&quot;&gt;&lt;code&gt;randint&lt;/code&gt;&lt;/a&gt;, only for the closed interval [&lt;code&gt;low&lt;/code&gt;, &lt;code&gt;high&lt;/code&gt;], and 1 is the lowest value if &lt;code&gt;high&lt;/code&gt; is omitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54d3bfe735bbeed63833684ca532bd20033e5b0c" translate="yes" xml:space="preserve">
          <source>similar verbose interface is provided by &lt;a href=&quot;https://github.com/arogozhnikov/einops&quot;&gt;einops&lt;/a&gt; package to cover additional operations: transpose, reshape/flatten, repeat/tile, squeeze/unsqueeze and reductions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22e337e6e1cb3ecfda45b9940600eabc31754560" translate="yes" xml:space="preserve">
          <source>sin (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c724cce335249f71b15c28b0979c594bf62eb83b" translate="yes" xml:space="preserve">
          <source>sinc() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebc6b434089777437c3f4e045c853588224035f0" translate="yes" xml:space="preserve">
          <source>single scalar to specify a sample distance for all dimensions.</source>
          <target state="translated">un solo escalar para especificar una distancia de muestra para todas las dimensiones.</target>
        </trans-unit>
        <trans-unit id="17f640192516ebb6ffcb41861c8a91f4bc80970c" translate="yes" xml:space="preserve">
          <source>single-segment</source>
          <target state="translated">single-segment</target>
        </trans-unit>
        <trans-unit id="84a00004366377779d63d0bb28036d951370a345" translate="yes" xml:space="preserve">
          <source>singular value decomposition of &lt;code&gt;a&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67c3017cba4937419b004758f0a9e630dfe40d13" translate="yes" xml:space="preserve">
          <source>sinh (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09fe397d08ed58b71d54f2284cf656763f1a6fa0" translate="yes" xml:space="preserve">
          <source>size (numpy.broadcast attribute)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f2392bea9380ebcc1a9888b70b44b7af1d7b80f" translate="yes" xml:space="preserve">
          <source>size() (in module numpy.ma)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea555f3f78eef6c1b16306a29ce98e0346672a2c" translate="yes" xml:space="preserve">
          <source>sizeof(double)</source>
          <target state="translated">sizeof(double)</target>
        </trans-unit>
        <trans-unit id="2b872e266187468e351085203525d6b2aab0723e" translate="yes" xml:space="preserve">
          <source>sizeof(float)</source>
          <target state="translated">sizeof(float)</target>
        </trans-unit>
        <trans-unit id="9c7b1af95835947eef00d21bd1a9339a7e5b0869" translate="yes" xml:space="preserve">
          <source>sizeof(int)</source>
          <target state="translated">sizeof(int)</target>
        </trans-unit>
        <trans-unit id="19508e8b8d2777ca65125e6447208a10818f9c86" translate="yes" xml:space="preserve">
          <source>sizeof(long)</source>
          <target state="translated">sizeof(long)</target>
        </trans-unit>
        <trans-unit id="3fae7e9d5c25cea554bfa3dd35085703096250fe" translate="yes" xml:space="preserve">
          <source>sizeof(longdouble)</source>
          <target state="translated">sizeof(longdouble)</target>
        </trans-unit>
        <trans-unit id="f1876000f7c1990a8e58f84759b4c5737526bb66" translate="yes" xml:space="preserve">
          <source>sizeof(longdouble) (A macro defines &lt;strong&gt;NPY_SIZEOF_LONGDOUBLE&lt;/strong&gt; as well.)</source>
          <target state="translated">sizeof (longdouble) (Una macro tambi&amp;eacute;n define &lt;strong&gt;NPY_SIZEOF_LONGDOUBLE&lt;/strong&gt; ).</target>
        </trans-unit>
        <trans-unit id="480cb51518441c7e4c29bd6df78e645877033e22" translate="yes" xml:space="preserve">
          <source>sizeof(longlong) where longlong is defined appropriately on the platform.</source>
          <target state="translated">tamaño de (longlong)donde longlong se define apropiadamente en la plataforma.</target>
        </trans-unit>
        <trans-unit id="ed72d742ffa09b52b8fc89063e0858b07d46fa04" translate="yes" xml:space="preserve">
          <source>sizeof(short)</source>
          <target state="translated">sizeof(short)</target>
        </trans-unit>
        <trans-unit id="2a76b7f1bd3097a424626eee74118f165a34eb79" translate="yes" xml:space="preserve">
          <source>skipif() (in module numpy.testing.dec)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a5228e66df38e2f27ca61b901edf86f7ef97fb8" translate="yes" xml:space="preserve">
          <source>slice</source>
          <target state="translated">slice</target>
        </trans-unit>
        <trans-unit id="f2326490a44ede89c03648e43aaf6e34312af6af" translate="yes" xml:space="preserve">
          <source>slicing</source>
          <target state="translated">slicing</target>
        </trans-unit>
        <trans-unit id="5febe9e99b08298751c8e2bc5f728039d3b544b3" translate="yes" xml:space="preserve">
          <source>slogdet() (in module numpy.linalg)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e2e32ab8ad49a6b64c34eef4a690b10b01ba033" translate="yes" xml:space="preserve">
          <source>slow() (in module numpy.testing.dec)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf58169456a6f2708f5d2500a398408530153a4" translate="yes" xml:space="preserve">
          <source>smallest singular value</source>
          <target state="translated">el valor singular más pequeño</target>
        </trans-unit>
        <trans-unit id="aaadbc2ab077d2c99212ecfd378453858e6859c5" translate="yes" xml:space="preserve">
          <source>so we need to permutate the axis on this array to get a shape like &lt;code&gt;(3, 768, 1024)&lt;/code&gt;. Fortunately, the &lt;a href=&quot;../reference/generated/numpy.transpose#numpy.transpose&quot;&gt;&lt;code&gt;numpy.transpose&lt;/code&gt;&lt;/a&gt; function can do that for us:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd47c8aaa2d15c7a8e74e79915738d98401b8da5" translate="yes" xml:space="preserve">
          <source>soften_mask (in module numpy.ma)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="433fa72d24cdf01bf249f352c14dce94296c6ffd" translate="yes" xml:space="preserve">
          <source>soften_mask() (numpy.ma.masked_array method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="103c6dabf06a8b4c5739019ac396cc351d848a1a" translate="yes" xml:space="preserve">
          <source>solution of a x = b for x</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="025a1e4d1e87c8975a15b6255e07a936fe3e0627" translate="yes" xml:space="preserve">
          <source>solution of x a = b for x</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dae09f7fdeec9c970bf313d2fe041a34ae20a9e" translate="yes" xml:space="preserve">
          <source>solve() (in module numpy.linalg)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf572b62563a634cbed4a8d77638c90dccde17b" translate="yes" xml:space="preserve">
          <source>sophisticated &lt;a href=&quot;reference/random/index#numpyrandom&quot;&gt;random number capabilities&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="321f2cc53bafa88cf3a12d27118a4b155c13846f" translate="yes" xml:space="preserve">
          <source>sophisticated &lt;a href=&quot;reference/ufuncs#ufuncs&quot;&gt;(broadcasting) functions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="969a95cb0bbb95b55ad04f99bdfba45e91e0879a" translate="yes" xml:space="preserve">
          <source>sort each column of a 2D array, &lt;code&gt;a&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c9c6b6fefcc9cc81cf504e15082c973fa773b70" translate="yes" xml:space="preserve">
          <source>sort the each row of 2D array, &lt;code&gt;a&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1007e3aefcf485c6611365caa2c84180bb31310" translate="yes" xml:space="preserve">
          <source>sort the matrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="007b9274e987f96f6033e81635430df3b6562826" translate="yes" xml:space="preserve">
          <source>sort the rows of the matrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f4edb36a18b9689517e0482c28c688b02b27095" translate="yes" xml:space="preserve">
          <source>sort()</source>
          <target state="translated">sort()</target>
        </trans-unit>
        <trans-unit id="75810ed793f2fd6ea55cba7b12727fd38285bb54" translate="yes" xml:space="preserve">
          <source>sort() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="017d03bcc986bbee768dce697b3e20d8a87341aa" translate="yes" xml:space="preserve">
          <source>sort_complex() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e75f65e1c2950090a1ec4631328d72f0568548b4" translate="yes" xml:space="preserve">
          <source>source() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="982dbe40c38e207ca9499386fbfe5a3e306bf17f" translate="yes" xml:space="preserve">
          <source>sources=[&amp;hellip;], config_fc={&amp;lsquo;noopt&amp;rsquo;:(__file__,1)})</source>
          <target state="translated">fuentes = [&amp;hellip;], config_fc = {'noopt': (__ archivo __, 1)})</target>
        </trans-unit>
        <trans-unit id="1318b0a1562cfd12e8800d4cdbb3e96841e64093" translate="yes" xml:space="preserve">
          <source>spacing (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e483e194a7215aa28143ee97fbaf77057d376214" translate="yes" xml:space="preserve">
          <source>spawn() (numpy.random.SeedSequence method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbec4ac7a249b41861fc0343ca8ecc90702179c1" translate="yes" xml:space="preserve">
          <source>spawn_key (numpy.random.SeedSequence attribute)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ba0e470bfdd7886c1b5c0a9bed7101f448e0e27" translate="yes" xml:space="preserve">
          <source>special methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06845c1fe8da6b6eed1033abaabbe8994938e060" translate="yes" xml:space="preserve">
          <source>special methods getitem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31467fb84ef4576f6bbaa0cf3dc225a3c605d992" translate="yes" xml:space="preserve">
          <source>special methods setitem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df1588b7ccf516a4cc3eb8e4e1ca96c690c98265" translate="yes" xml:space="preserve">
          <source>special-casing Object arrays so that reference counts are properly handled when copies and/or casts are necessary.</source>
          <target state="translated">de objetos de estuche especial para que los recuentos de referencia se manejen adecuadamente cuando se necesiten copias y/o moldes.</target>
        </trans-unit>
        <trans-unit id="c6757d731761759278176b3aed3b85ee9b3deba3" translate="yes" xml:space="preserve">
          <source>specifiers:</source>
          <target state="translated">specifiers:</target>
        </trans-unit>
        <trans-unit id="92b6320812d86abe48e76fbfbbe8bde7170bf036" translate="yes" xml:space="preserve">
          <source>speed</source>
          <target state="translated">speed</target>
        </trans-unit>
        <trans-unit id="4c7b1c264928da052361705f3c087f64af2d9fd7" translate="yes" xml:space="preserve">
          <source>split multiarray and umath source code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd16549787ee09f5a533be7160f26c20b0c80f57" translate="yes" xml:space="preserve">
          <source>split() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57ae5a107320ebc6832d20b1bf0eb446f9dbec10" translate="yes" xml:space="preserve">
          <source>splitlines() (in module numpy.char)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="270a5eddec75e2d73acbc84420e707e184752521" translate="yes" xml:space="preserve">
          <source>sqrt (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93a4df43ade3a0850e547dea47665b72865fc342" translate="yes" xml:space="preserve">
          <source>square (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bb23f1667b9695bdc671d974c4370ee537ca72f" translate="yes" xml:space="preserve">
          <source>square diagonal matrix whose nonzero values are the elements of &lt;code&gt;a&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddaee8b75b2f40c5626073febff1199ace2d1b10" translate="yes" xml:space="preserve">
          <source>squeeze() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fbacc2fa0ffdbb11bf1ad6925b886ebd08dd15f" translate="yes" xml:space="preserve">
          <source>stable</source>
          <target state="translated">stable</target>
        </trans-unit>
        <trans-unit id="95841359fbf27ad340c9c7e1df1b0c08569f0316" translate="yes" xml:space="preserve">
          <source>stack (in module numpy.ma)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60fc53139c3c61da3c7664ec386cfdb453737150" translate="yes" xml:space="preserve">
          <source>stack() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="317c188ff89eb183d01e7164891e668efce0a046" translate="yes" xml:space="preserve">
          <source>stack_arrays() (in module numpy.lib.recfunctions)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17a65927929bdc7ab77c94e1b8e9eec5b8eb6695" translate="yes" xml:space="preserve">
          <source>stacklevel of warnings increased</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81328ff3fa21dfc639fd1b1ff1ccdc3feb54c1fe" translate="yes" xml:space="preserve">
          <source>standard C constructs;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88237bb82cb9dc5098d5a74223d039b22ea76653" translate="yes" xml:space="preserve">
          <source>standard_cauchy() (in module numpy.random)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dd61eea0d58406a0d542e817cc09e07a0de55e3" translate="yes" xml:space="preserve">
          <source>standard_exponential() (in module numpy.random)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6eab4abfa215aced2765832d243ee69866340fa" translate="yes" xml:space="preserve">
          <source>standard_gamma() (in module numpy.random)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4112a71090264f8ecb5af4d8f13326c536ad23dd" translate="yes" xml:space="preserve">
          <source>standard_normal() (in module numpy.random)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d48d453fa0cf1d4583eb5fd823dfec79a8b1a27b" translate="yes" xml:space="preserve">
          <source>standard_t() (in module numpy.random)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2230dca4d2e4cb9a1c348325b215bdb8f871ab5" translate="yes" xml:space="preserve">
          <source>startswith() (in module numpy.char)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5db5bf1e369b3251211962b87abdd970565d276" translate="yes" xml:space="preserve">
          <source>state (numpy.random.BitGenerator attribute)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d58a7ec60042e90fdbb4f9bac542371320229ef" translate="yes" xml:space="preserve">
          <source>state - pointer to the state struct</source>
          <target state="translated">estado-puntero a la estructura del estado</target>
        </trans-unit>
        <trans-unit id="fde13f99ff9e30434f2265f62888fa278ea6db5d" translate="yes" xml:space="preserve">
          <source>state_address - Memory address of the state struct</source>
          <target state="translated">state_address-Dirección de memoria de la estructura estatal</target>
        </trans-unit>
        <trans-unit id="cca95853f53c4a81ae20799c4c4f186b7aa91bb1" translate="yes" xml:space="preserve">
          <source>static MaskedArray.__new__()</source>
          <target state="translated">estático MaskedArray.__nuevo__()</target>
        </trans-unit>
        <trans-unit id="29489856c263dc7f1fec184661a2c351dccf518c" translate="yes" xml:space="preserve">
          <source>std (in module numpy.ma)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22014f0de93a6daca302dc58950e621c745d66f6" translate="yes" xml:space="preserve">
          <source>std() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cf7eea82cdd0872bf9095c90f7b1ccd44d246b7" translate="yes" xml:space="preserve">
          <source>str (numpy.dtype attribute)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32b152a7c0d0bd86ca990cbb1dd1560fc894db36" translate="yes" xml:space="preserve">
          <source>str_len() (in module numpy.char)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdf02fb3271b7ecf94ed45c249c456286918033a" translate="yes" xml:space="preserve">
          <source>streams. The specific member of the PCG family that we use is PCG XSL RR 128/64 as described in the paper (&lt;a href=&quot;#r4523891264fe-2&quot; id=&quot;id3&quot;&gt;[2]&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c468d044b5d8a1f1f09f73b61c85bed062d25818" translate="yes" xml:space="preserve">
          <source>streams. The specific member of the PCG family that we use is PCG XSL RR 128/64 as described in the paper (&lt;a href=&quot;#r7c40bac0730f-2&quot; id=&quot;id3&quot;&gt;[2]&lt;/a&gt;).</source>
          <target state="translated">arroyos. El miembro espec&amp;iacute;fico de la familia PCG que utilizamos es PCG XSL RR 128/64, como se describe en el documento ( &lt;a href=&quot;#r7c40bac0730f-2&quot; id=&quot;id3&quot;&gt;[2]&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="72096d460a7115efce5eac6b52d925f2a593a10f" translate="yes" xml:space="preserve">
          <source>stricter check of gufunc signature compliance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dc89f85b619068818f6ffc8b793a74773a52f83" translate="yes" xml:space="preserve">
          <source>stride</source>
          <target state="translated">stride</target>
        </trans-unit>
        <trans-unit id="0d3c38cd192d37c8fc58e9e38533a0e54c38d086" translate="yes" xml:space="preserve">
          <source>strides (numpy.char.chararray attribute)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecb252044b5ea0f679ee78ec1a12904739e2904d" translate="yes" xml:space="preserve">
          <source>string</source>
          <target state="translated">string</target>
        </trans-unit>
        <trans-unit id="2f85cadce8676aafabb53eb5dbfeb32e38f6576f" translate="yes" xml:space="preserve">
          <source>strip() (in module numpy.char)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cf484ccd447797aab3893bdb2b8592bcac4a6ad" translate="yes" xml:space="preserve">
          <source>structured_to_unstructured() (in module numpy.lib.recfunctions)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7394da1bf96324e8a6032f62ee66313f7abd210e" translate="yes" xml:space="preserve">
          <source>sub-array</source>
          <target state="translated">sub-array</target>
        </trans-unit>
        <trans-unit id="0d325042e4a5f1d6991f04b42574c150f4b89abf" translate="yes" xml:space="preserve">
          <source>subdtype (numpy.dtype attribute)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a37d04d784809a5a3e7cc73ec9ce074e5de538d" translate="yes" xml:space="preserve">
          <source>subtract (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d243014e4a286e33677c392d89875092640f5204" translate="yes" xml:space="preserve">
          <source>subtyping</source>
          <target state="translated">subtyping</target>
        </trans-unit>
        <trans-unit id="679a10238e3d361d1c18c79d97bbbc272fa93a6a" translate="yes" xml:space="preserve">
          <source>sum (in module numpy.ma)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b9ab5045ea17a0e6f0734a264064d50ab1e8cd" translate="yes" xml:space="preserve">
          <source>sum() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e673747ffe5b66e828d72320fae0a4f7f8ef3ffa" translate="yes" xml:space="preserve">
          <source>sum(abs(x)**ord)**(1./ord)</source>
          <target state="translated">sum(abs(x)**ord)**(1./ord)</target>
        </trans-unit>
        <trans-unit id="22fd9fffa5f75a2c95eea2b939edd0c242e2b28f" translate="yes" xml:space="preserve">
          <source>sum(x != 0)</source>
          <target state="translated">suma(x !=0)</target>
        </trans-unit>
        <trans-unit id="59197c294b7e47ec5dbd783959aed64eff2bee13" translate="yes" xml:space="preserve">
          <source>sum1d</source>
          <target state="translated">sum1d</target>
        </trans-unit>
        <trans-unit id="87e34a83fde48d2503b699ca4a1f31df945ac30a" translate="yes" xml:space="preserve">
          <source>sunos5</source>
          <target state="translated">sunos5</target>
        </trans-unit>
        <trans-unit id="8c10b057ec2c29e5215f43ecbcf94af98dc361e2" translate="yes" xml:space="preserve">
          <source>supported Python versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fde2b4157af3b80020fadafd57cf0e89dea9890c" translate="yes" xml:space="preserve">
          <source>suppress : bool</source>
          <target state="translated">suprimir:bool</target>
        </trans-unit>
        <trans-unit id="067df0c4334dd01da4719cfb76d0b5e2cc92621a" translate="yes" xml:space="preserve">
          <source>suppress_warnings (class in numpy.testing)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b89ef09ff52c3e2737120fb7cb7b0e25626245f8" translate="yes" xml:space="preserve">
          <source>suppress_warnings.__call__()</source>
          <target state="translated">suppress_warnings.__call__()</target>
        </trans-unit>
        <trans-unit id="babb61f609501571b2bb5a18639dac49ab1d8731" translate="yes" xml:space="preserve">
          <source>suppress_warnings.filter()</source>
          <target state="translated">suppress_warnings.filter()</target>
        </trans-unit>
        <trans-unit id="b3d2c7bdf224bcf286b49963a0a8ab40eb026321" translate="yes" xml:space="preserve">
          <source>suppress_warnings.record()</source>
          <target state="translated">suppress_warnings.record()</target>
        </trans-unit>
        <trans-unit id="e21b16191f82fcc4a3fa0d558a127b29c43f9ac0" translate="yes" xml:space="preserve">
          <source>svd() (in module numpy.linalg)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6882990fd8cfa0c8db0f97fbc0087b9e8e80b5e" translate="yes" xml:space="preserve">
          <source>swapaxes (in module numpy.ma)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f37cbdf359810d8e0ab1041f966a543c7ffa1fb" translate="yes" xml:space="preserve">
          <source>swapaxes() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db9c2e10e1895dd3cc57eceb6fc781f35f08fff3" translate="yes" xml:space="preserve">
          <source>swapcase() (in module numpy.char)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2375338c9572e43f119d1b4e0a64588d94184591" translate="yes" xml:space="preserve">
          <source>swig</source>
          <target state="translated">swig</target>
        </trans-unit>
        <trans-unit id="242a079762b697ac0549ccf69af94136d2769602" translate="yes" xml:space="preserve">
          <source>sys.platform</source>
          <target state="translated">sys.platform</target>
        </trans-unit>
        <trans-unit id="43a7fdf9010c6f42240efcb3a5f56f6d955cfa7b" translate="yes" xml:space="preserve">
          <source>take() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7489fcf06c3acceea4867761fe99a5ad320fea58" translate="yes" xml:space="preserve">
          <source>take_along_axis() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07b28fecc28aa59d9cb47fe8478efb82a4890137" translate="yes" xml:space="preserve">
          <source>tan (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="714d85d620a19532c5ff8d5f53eb70ca4c34dcdb" translate="yes" xml:space="preserve">
          <source>tanh (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3b16e0f2480d0f53eacccd3fd82cdc0d124c529" translate="yes" xml:space="preserve">
          <source>tensordot() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="758b4250a6b0e3668b0a217796ece59b3720d5b6" translate="yes" xml:space="preserve">
          <source>tensorinv() (in module numpy.linalg)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd8c8b647e3846f75d7c4e24092017d0eb8ea9b" translate="yes" xml:space="preserve">
          <source>tensorsolve() (in module numpy.linalg)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb2bbe3640c3987cf0dced6bf932fd000fc915e1" translate="yes" xml:space="preserve">
          <source>terminal_has_colors() (in module numpy.distutils.misc_util)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="244cd732c099f06eb83e85e31faf19d8bf928b31" translate="yes" xml:space="preserve">
          <source>terryfy &lt;a href=&quot;https://github.com/MacPython/terryfy&quot;&gt;https://github.com/MacPython/terryfy&lt;/a&gt; (clone).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4db8608d9bc0ee1a68741761e42d45702e8b7b54" translate="yes" xml:space="preserve">
          <source>test objects for equality up to precision</source>
          <target state="translated">probar los objetos para la igualdad hasta la precisión</target>
        </trans-unit>
        <trans-unit id="e7b7abb8ae3381ca19caaef2505d24534d2bd6e3" translate="yes" xml:space="preserve">
          <source>test() (numpy.testing.Tester method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d3f0d88da6522a0d74c0e24731e66414731abdf" translate="yes" xml:space="preserve">
          <source>tests objects for equality</source>
          <target state="translated">prueba los objetos para la igualdad</target>
        </trans-unit>
        <trans-unit id="4edd7d8e557695d44877be4de2ac060e7bd3fdd9" translate="yes" xml:space="preserve">
          <source>that &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; would not match the typemap signature given above with the argument list for &lt;code&gt;rms&lt;/code&gt;. Fortunately, &lt;code&gt;numpy.i&lt;/code&gt; has a set of typemaps with the data pointer given last:</source>
          <target state="translated">que &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; no coincidir&amp;iacute;a con la firma del mapa de tipos dada anteriormente con la lista de argumentos para &lt;code&gt;rms&lt;/code&gt; . Afortunadamente, &lt;code&gt;numpy.i&lt;/code&gt; tiene un conjunto de mapas de tipos con el puntero de datos dado al final:</target>
        </trans-unit>
        <trans-unit id="030d90c6342f406e1ce97b9157dfdea01cc446e8" translate="yes" xml:space="preserve">
          <source>that can be invoked for appropriate &lt;code&gt;(DATA_TYPE, DATA_TYPECODE,
DIM_TYPE)&lt;/code&gt; triplets. For example:</source>
          <target state="translated">que se pueden invocar para los &lt;code&gt;(DATA_TYPE, DATA_TYPECODE, DIM_TYPE)&lt;/code&gt; apropiados (DATA_TYPE, DATA_TYPECODE, DIM_TYPE) . Por ejemplo:</target>
        </trans-unit>
        <trans-unit id="24ff8c038660f6c46f52753b63612731471787d5" translate="yes" xml:space="preserve">
          <source>that contain prototypes and code for a variety of functions that have one-dimensional arrays as function arguments. The file:</source>
          <target state="translated">que contienen prototipos y código para una variedad de funciones que tienen matrices unidimensionales como argumentos de función.El archivo:</target>
        </trans-unit>
        <trans-unit id="a41eaf9774c588358f189b37da673a9c120a5089" translate="yes" xml:space="preserve">
          <source>that defines mapping between Fortran type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9dede6eeb4a79c0deecf7f1163117cef2ce19ca" translate="yes" xml:space="preserve">
          <source>that fulfil the conditions</source>
          <target state="translated">que cumplen las condiciones</target>
        </trans-unit>
        <trans-unit id="c0651bd00c43077fc7d604c26806753856c5c3d0" translate="yes" xml:space="preserve">
          <source>that is more common in mathematics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69822e5ac8f7b370ee1a997fb889fe976d9edc11" translate="yes" xml:space="preserve">
          <source>that uses the standard Python library module &lt;code&gt;unittest&lt;/code&gt;, which performs several tests of each function defined in &lt;code&gt;Vector.h&lt;/code&gt; for each data type supported.</source>
          <target state="translated">que usa el m&amp;oacute;dulo de biblioteca est&amp;aacute;ndar de Python &lt;code&gt;unittest&lt;/code&gt; , que realiza varias pruebas de cada funci&amp;oacute;n definida en &lt;code&gt;Vector.h&lt;/code&gt; para cada tipo de datos admitido.</target>
        </trans-unit>
        <trans-unit id="91618605954fff4c8fa2080baf622dbad19f3bfd" translate="yes" xml:space="preserve">
          <source>that we ever hold a vote on anything,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fbd1e113b36d62f9f5969abc84f6b1db9ea8ff9" translate="yes" xml:space="preserve">
          <source>that we wait to solicit everybody&amp;rsquo;s opinion on every change,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43f143b0aa3f0ebd6ad72790b6d7ec976437c7e7" translate="yes" xml:space="preserve">
          <source>the (fixed) periodic payment.</source>
          <target state="translated">el pago periódico (fijo).</target>
        </trans-unit>
        <trans-unit id="008a6adb3f8685be6ceb0e8bc31fd6dcaaa94b7f" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;_data&lt;/code&gt; field stores the &lt;code&gt;_data&lt;/code&gt; part of the array.</source>
          <target state="translated">el campo &lt;code&gt;_data&lt;/code&gt; almacena la parte &lt;code&gt;_data&lt;/code&gt; de la matriz.</target>
        </trans-unit>
        <trans-unit id="466d5e22a37a2ee9f4d8abe2158af32e97232bb1" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;_mask&lt;/code&gt; field stores the &lt;code&gt;_mask&lt;/code&gt; part of the array.</source>
          <target state="translated">el campo &lt;code&gt;_mask&lt;/code&gt; almacena la parte &lt;code&gt;_mask&lt;/code&gt; de la matriz.</target>
        </trans-unit>
        <trans-unit id="cc365dcc0c9319f2f506aceec24fed9ff96212f9" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;master&lt;/code&gt; branch from your fork on GitHub, which git named &lt;code&gt;origin&lt;/code&gt; by default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceed7bc9e179cab051c7490924aa71ba19564a63" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;master&lt;/code&gt; branch on the the main NumPy repo, which you named &lt;code&gt;upstream&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6292058da61ff401cac13603c84e9e86efef95ed" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;master&lt;/code&gt; branch you just cloned on your own machine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f46a8c9523ccb2e42574619b1869754a7dc29bc8" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;nonzero&lt;/code&gt; equivalence for Boolean arrays does not hold for zero dimensional boolean arrays.</source>
          <target state="translated">la equivalencia &lt;code&gt;nonzero&lt;/code&gt; para matrices booleanas no es v&amp;aacute;lida para matrices booleanas de dimensi&amp;oacute;n cero.</target>
        </trans-unit>
        <trans-unit id="9d98d16fc31bbde4a7ed4a9aced4ee06a3098aef" translate="yes" xml:space="preserve">
          <source>the Poisson distribution</source>
          <target state="translated">la distribución de Poisson</target>
        </trans-unit>
        <trans-unit id="8a6c489f749059c8bf5c98965f80fa7ea6e5a8d8" translate="yes" xml:space="preserve">
          <source>the behavior of &lt;code&gt;maximum(a, b)&lt;/code&gt; is different than that of &lt;code&gt;max(a, b)&lt;/code&gt;. As a ufunc, &lt;code&gt;maximum(a, b)&lt;/code&gt; performs an element-by-element comparison of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; and chooses each element of the result according to which element in the two arrays is larger. In contrast, &lt;code&gt;max(a, b)&lt;/code&gt; treats the objects &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; as a whole, looks at the (total) truth value of &lt;code&gt;a &amp;gt; b&lt;/code&gt; and uses it to return either &lt;code&gt;a&lt;/code&gt; or &lt;code&gt;b&lt;/code&gt; (as a whole). A similar difference exists between &lt;code&gt;minimum(a, b)&lt;/code&gt; and &lt;code&gt;min(a, b)&lt;/code&gt;.</source>
          <target state="translated">el comportamiento de &lt;code&gt;maximum(a, b)&lt;/code&gt; es diferente al de &lt;code&gt;max(a, b)&lt;/code&gt; . Como ufunc, &lt;code&gt;maximum(a, b)&lt;/code&gt; realiza una comparaci&amp;oacute;n elemento por elemento de &lt;code&gt;a&lt;/code&gt; y &lt;code&gt;b&lt;/code&gt; y elige cada elemento del resultado seg&amp;uacute;n el cual elemento en las dos matrices es m&amp;aacute;s grande. Por el contrario, &lt;code&gt;max(a, b)&lt;/code&gt; trata a los objetos &lt;code&gt;a&lt;/code&gt; y &lt;code&gt;b&lt;/code&gt; en su conjunto, se ve en el valor (total) de verdad &lt;code&gt;a &amp;gt; b&lt;/code&gt; y lo utiliza para devuelven &lt;code&gt;a&lt;/code&gt; o &lt;code&gt;b&lt;/code&gt; (en su conjunto). Existe una diferencia similar entre &lt;code&gt;minimum(a, b)&lt;/code&gt; y &lt;code&gt;min(a, b)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8150b8f30492cc68483a2c4334a596ad8dabb9a6" translate="yes" xml:space="preserve">
          <source>the best way to eval functions on a grid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="864340e31e9738ca2548bf502999b36a9aa9b20d" translate="yes" xml:space="preserve">
          <source>the buffer containing the actual elements of the array. Normally, we won&amp;rsquo;t need to use this attribute because we will access the elements in an array using indexing facilities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="028039baf0a2b980338abbb0ef59c2946ca97e2c" translate="yes" xml:space="preserve">
          <source>the code more closely resembles standard mathematical notation (making it easier, typically, to correctly code mathematical constructs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37853a7a1448f19f077abcac3e09da57761a37ca" translate="yes" xml:space="preserve">
          <source>the default is float32; for arrays of float types it is the same as the array type.</source>
          <target state="translated">el valor por defecto es flotante32;para los conjuntos de tipos de flotante es el mismo que el tipo de conjunto.</target>
        </trans-unit>
        <trans-unit id="c256ad71cf46b7af30713adb00225b1606a5ead3" translate="yes" xml:space="preserve">
          <source>the dimensions of the array. This is a tuple of integers indicating the size of the array in each dimension. For a matrix with &lt;em&gt;n&lt;/em&gt; rows and &lt;em&gt;m&lt;/em&gt; columns, &lt;code&gt;shape&lt;/code&gt; will be &lt;code&gt;(n,m)&lt;/code&gt;. The length of the &lt;code&gt;shape&lt;/code&gt; tuple is therefore the number of axes, &lt;code&gt;ndim&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="386854cb373a7a8341fab0c5a69fd79b8aa53c43" translate="yes" xml:space="preserve">
          <source>the dispersion, and</source>
          <target state="translated">la dispersión,y</target>
        </trans-unit>
        <trans-unit id="1003c30ba5c0fb39ccb50c6b722708e3c05c2a77" translate="yes" xml:space="preserve">
          <source>the dtypes are available as &lt;code&gt;np.bool_&lt;/code&gt;, &lt;code&gt;np.float32&lt;/code&gt;, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3f7040c957d9f34dcd06b059a9df241549e83cf" translate="yes" xml:space="preserve">
          <source>the evaluated condition that raises the exception is</source>
          <target state="translated">la condición evaluada que plantea la excepción es</target>
        </trans-unit>
        <trans-unit id="e6710ebd0d6334a3c7e9a0748f24e4f718444748" translate="yes" xml:space="preserve">
          <source>the first assert does not raise an exception</source>
          <target state="translated">la primera afirmación no plantea una excepción</target>
        </trans-unit>
        <trans-unit id="42e60363392644d71a68f0cb3b50a079e06142b9" translate="yes" xml:space="preserve">
          <source>the first five rows of &lt;code&gt;a&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="022f2b2feb199446cf04dda3e5cf777e9ecc931d" translate="yes" xml:space="preserve">
          <source>the following CPP macros:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f1b2080c308104435edfaaca899e506042a788b" translate="yes" xml:space="preserve">
          <source>the following call-back signatures:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="119ccc9fc3673917ac722ec0054d4725a8fa3c72" translate="yes" xml:space="preserve">
          <source>the indices of the input array that give the unique values</source>
          <target state="translated">los índices de la matriz de entrada que dan los valores únicos</target>
        </trans-unit>
        <trans-unit id="d97b725ec0e0431c53d459a255d5f28038ce01b3" translate="yes" xml:space="preserve">
          <source>the indices of the unique array that reconstruct the input array</source>
          <target state="translated">los índices del conjunto único que reconstruye el conjunto de entrada</target>
        </trans-unit>
        <trans-unit id="1a7345e4f831f919ee5fefb4b5e5c4d2da0fe041" translate="yes" xml:space="preserve">
          <source>the integer 2 as a sanity check.</source>
          <target state="translated">el número entero 2 como un control de cordura.</target>
        </trans-unit>
        <trans-unit id="a615bf0991700a5809627c83d03dff3859f939d4" translate="yes" xml:space="preserve">
          <source>the last axis is printed from left to right,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="341f0e2c6f70a4cc9742feb4966a9478486124cf" translate="yes" xml:space="preserve">
          <source>the last five rows of &lt;code&gt;a&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="877f191461c43488e8673b2041e28b03cf37ebe4" translate="yes" xml:space="preserve">
          <source>the non-masked &lt;a href=&quot;#numpy.ma.allclose&quot;&gt;&lt;code&gt;allclose&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">los no enmascarados &lt;a href=&quot;#numpy.ma.allclose&quot;&gt; &lt;code&gt;allclose&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c4ab424cfa5e3d521583d3c039d9a4a02678ec42" translate="yes" xml:space="preserve">
          <source>the non-masked &lt;a href=&quot;numpy.allclose#numpy.allclose&quot;&gt;&lt;code&gt;allclose&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a765212b567259897f46b111c45f8c0cdf740504" translate="yes" xml:space="preserve">
          <source>the number of axes (dimensions) of the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0921e2312613723c070744de48126ede8060f3e" translate="yes" xml:space="preserve">
          <source>the number of dimensions in the array.</source>
          <target state="translated">el número de dimensiones de la matriz.</target>
        </trans-unit>
        <trans-unit id="daeb9adbfb25b75a21d4a853a1f60f248e1c0643" translate="yes" xml:space="preserve">
          <source>the number of times each unique value comes up in the input array</source>
          <target state="translated">el número de veces que cada valor único aparece en la matriz de entrada</target>
        </trans-unit>
        <trans-unit id="9776a86e31cd456e5d2e49d6fb7c020def0a8811" translate="yes" xml:space="preserve">
          <source>the object returned by this function should be safe to use as a normal iterator</source>
          <target state="translated">el objeto devuelto por esta función debería ser seguro de usar como un iterador normal</target>
        </trans-unit>
        <trans-unit id="9bb8b02cf5ba76cfa87fe40674e8774b38f473f2" translate="yes" xml:space="preserve">
          <source>the rest are also printed from top to bottom, with each slice separated from the next by an empty line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7992e822f5c928095cc88d608fcf2681126c7f7b" translate="yes" xml:space="preserve">
          <source>the scale, and</source>
          <target state="translated">la escala,y</target>
        </trans-unit>
        <trans-unit id="559ee459f8cdca2ba382d669a096ba3af1e634a5" translate="yes" xml:space="preserve">
          <source>the scale.</source>
          <target state="translated">la escala.</target>
        </trans-unit>
        <trans-unit id="b541ef081359460bffc9d945dd149d5c121079fb" translate="yes" xml:space="preserve">
          <source>the second-to-last is printed from top to bottom,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01b08d4f6728dc5edfc11479ca9fed7c90b92692" translate="yes" xml:space="preserve">
          <source>the size in bytes of each element of the array. For example, an array of elements of type &lt;code&gt;float64&lt;/code&gt; has &lt;code&gt;itemsize&lt;/code&gt; 8 (=64/8), while one of type &lt;code&gt;complex32&lt;/code&gt; has &lt;code&gt;itemsize&lt;/code&gt; 4 (=32/8). It is equivalent to &lt;code&gt;ndarray.dtype.itemsize&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="728a3d016ba6312c948dbc003b45237331be5400" translate="yes" xml:space="preserve">
          <source>the special value &lt;code&gt;None&lt;/code&gt;. In that case, the type of the columns will be determined from the data itself (see below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3119cfee97d21e122e4e4b95639b7de34b8e55a4" translate="yes" xml:space="preserve">
          <source>the standard deviation. The square of the standard deviation,</source>
          <target state="translated">la desviación estándar.El cuadrado de la desviación estándar,</target>
        </trans-unit>
        <trans-unit id="769a5422011db4b5a479a4cb28d142861e9d09c7" translate="yes" xml:space="preserve">
          <source>the string &amp;lsquo;MT19937&amp;rsquo;, specifying the Mersenne Twister algorithm.</source>
          <target state="translated">la cadena 'MT19937', que especifica el algoritmo Mersenne Twister.</target>
        </trans-unit>
        <trans-unit id="55a386450b04871560b787f77b9312b3c6fdac20" translate="yes" xml:space="preserve">
          <source>the string &amp;lsquo;MT19937&amp;rsquo;.</source>
          <target state="translated">la cadena 'MT19937'.</target>
        </trans-unit>
        <trans-unit id="e2af0ad0e24aba05f09bd9ad029ed36487661005" translate="yes" xml:space="preserve">
          <source>the total number of elements of the array. This is equal to the product of the elements of &lt;code&gt;shape&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9bfa1b4f6a4e9baf333ba77714dcdeec66be06a" translate="yes" xml:space="preserve">
          <source>the value at the end of the &lt;a href=&quot;numpy.nper#numpy.nper&quot;&gt;&lt;code&gt;nper&lt;/code&gt;&lt;/a&gt; periods</source>
          <target state="translated">el valor al final de los &lt;a href=&quot;numpy.nper#numpy.nper&quot;&gt; &lt;code&gt;nper&lt;/code&gt; &lt;/a&gt; per&amp;iacute;odos</target>
        </trans-unit>
        <trans-unit id="109615ad28bd23389721e88f91d9c3e59d766f63" translate="yes" xml:space="preserve">
          <source>the value now</source>
          <target state="translated">el valor ahora</target>
        </trans-unit>
        <trans-unit id="48ba841dce6244e8c0af1ac1be6d202816f3569a" translate="yes" xml:space="preserve">
          <source>then create a mapping file containing a Python dictionary:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8abf1ea87fc40f3eff5c96e75a9c90f812d27593" translate="yes" xml:space="preserve">
          <source>then the first bin is &lt;code&gt;[1, 2)&lt;/code&gt; (including 1, but excluding 2) and the second &lt;code&gt;[2, 3)&lt;/code&gt;. The last bin, however, is &lt;code&gt;[3, 4]&lt;/code&gt;, which &lt;em&gt;includes&lt;/em&gt; 4.</source>
          <target state="translated">entonces el primer intervalo es &lt;code&gt;[1, 2)&lt;/code&gt; (incluido 1, pero excluyendo 2) y el segundo &lt;code&gt;[2, 3)&lt;/code&gt; . El &amp;uacute;ltimo bin, sin embargo, es &lt;code&gt;[3, 4]&lt;/code&gt; , que &lt;em&gt;incluye&lt;/em&gt; 4.</target>
        </trans-unit>
        <trans-unit id="2eb3357dff293a25faf9346bddeec38f6f1dd86e" translate="yes" xml:space="preserve">
          <source>then the unicode setting of the output array will be automatically determined.</source>
          <target state="translated">entonces el ajuste unicode de la matriz de salida se determinará automáticamente.</target>
        </trans-unit>
        <trans-unit id="80e903ddec1d7ba763fd90c205528cfd81127f49" translate="yes" xml:space="preserve">
          <source>they are equal, or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="930e6d247a210bce1a24083f40db3d04a0101d9c" translate="yes" xml:space="preserve">
          <source>third-party objects like &lt;a href=&quot;https://matplotlib.org/api/_as_gen/matplotlib.figure.Figure.html#matplotlib.figure.Figure&quot;&gt;&lt;code&gt;matplotlib.figure.Figure&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">objetos de terceros como &lt;a href=&quot;https://matplotlib.org/api/_as_gen/matplotlib.figure.Figure.html#matplotlib.figure.Figure&quot;&gt; &lt;code&gt;matplotlib.figure.Figure&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2177bb6e0b7654723b6bdd5cccb4dea5c2bcfdb6" translate="yes" xml:space="preserve">
          <source>threshold : int</source>
          <target state="translated">umbral:int</target>
        </trans-unit>
        <trans-unit id="ad017a445a58ce46bbb902b5736a4e9bfc3dbce7" translate="yes" xml:space="preserve">
          <source>through the &lt;a href=&quot;generated/numpy.ma.maskedarray.__array__#numpy.ma.MaskedArray.__array__&quot;&gt;&lt;code&gt;__array__&lt;/code&gt;&lt;/a&gt; method. The output is then a &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;numpy.ndarray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">a trav&amp;eacute;s del m&amp;eacute;todo &lt;a href=&quot;generated/numpy.ma.maskedarray.__array__#numpy.ma.MaskedArray.__array__&quot;&gt; &lt;code&gt;__array__&lt;/code&gt; &lt;/a&gt; . La salida es un &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;numpy.ndarray&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1813750323d0cadd8026ae1175c2e5800c0325b2" translate="yes" xml:space="preserve">
          <source>through the &lt;a href=&quot;maskedarray.baseclass#numpy.ma.MaskedArray.data&quot;&gt;&lt;code&gt;data&lt;/code&gt;&lt;/a&gt; attribute. The output is a view of the array as a &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;numpy.ndarray&lt;/code&gt;&lt;/a&gt; or one of its subclasses, depending on the type of the underlying data at the masked array creation.</source>
          <target state="translated">a trav&amp;eacute;s del atributo de &lt;a href=&quot;maskedarray.baseclass#numpy.ma.MaskedArray.data&quot;&gt; &lt;code&gt;data&lt;/code&gt; &lt;/a&gt; . La salida es una vista de la matriz como un &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;numpy.ndarray&lt;/code&gt; &lt;/a&gt; o una de sus subclases, dependiendo del tipo de datos subyacentes en la creaci&amp;oacute;n de la matriz enmascarada.</target>
        </trans-unit>
        <trans-unit id="8a50e312818911128cc0bd365208fbf87d17f998" translate="yes" xml:space="preserve">
          <source>tile() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74962d37bf1cb045da5386cecce96f2b7b6bc2e6" translate="yes" xml:space="preserve">
          <source>timedelta</source>
          <target state="translated">timedelta</target>
        </trans-unit>
        <trans-unit id="7a146b8f93fbed802dabd0003bbe1b2b778b70fe" translate="yes" xml:space="preserve">
          <source>times with the following signature:</source>
          <target state="translated">veces con la siguiente firma:</target>
        </trans-unit>
        <trans-unit id="2c5a81d335a2a68ee6066dc7c62c6d429d0ea6c3" translate="yes" xml:space="preserve">
          <source>times. Extra-data may be passed in that may be used during the calculation. This feature allows some general functions to be used as these basic looping functions. The general function has all the code needed to point variables to the right place and set up a function call. The general function assumes that the actual function to call is passed in as the extra data and calls it with the correct values. All of these functions are suitable for placing directly in the array of functions stored in the functions member of the PyUFuncObject structure.</source>
          <target state="translated">veces.Se pueden pasar datos adicionales que se pueden utilizar durante el cálculo.Esta característica permite utilizar algunas funciones generales como estas funciones básicas de bucle.La función general tiene todo el código necesario para apuntar las variables al lugar correcto y establecer una llamada a la función.La función general asume que la función real a llamar se pasa como los datos extra y la llama con los valores correctos.Todas estas funciones son adecuadas para colocarlas directamente en el conjunto de funciones almacenadas en el miembro de funciones de la estructura PyUFuncObject.</target>
        </trans-unit>
        <trans-unit id="d072b0ce7dc75d873ab48a7cee62ba0a58043fae" translate="yes" xml:space="preserve">
          <source>title() (in module numpy.char)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4374aaee247fb237ce6c97d5c8d64bbe474d16de" translate="yes" xml:space="preserve">
          <source>to</source>
          <target state="translated">to</target>
        </trans-unit>
        <trans-unit id="9b1fda8ace6e89d25e3a8cbabcfb78e28c9ddeb0" translate="yes" xml:space="preserve">
          <source>to +1 for</source>
          <target state="translated">a +1 para</target>
        </trans-unit>
        <trans-unit id="b366c8c16130b83ca9528db77e60c6becb299116" translate="yes" xml:space="preserve">
          <source>to access Fortran 77 &lt;code&gt;COMMON&lt;/code&gt; blocks and Fortran 90/95 module data, including allocatable arrays</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="595aba9b88098513d156cf6996e210c021dbb9ce" translate="yes" xml:space="preserve">
          <source>to call Fortran 77/90/95 external subroutines and Fortran 90/95 module subroutines as well as C functions;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dec158e63d221ea3965ad7f125362e887117aeb" translate="yes" xml:space="preserve">
          <source>to change Fortran compiler options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c0048caef95e547ebcfead6f47efb7586b55050" translate="yes" xml:space="preserve">
          <source>to check that the documentation is in a buildable state. Then, after tagging, create an archive of the documentation in the numpy/doc repo:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31a3b28ef81e7fea19d53af1c28fd851707a77fb" translate="yes" xml:space="preserve">
          <source>to construct Fortran wrapper extension modules, among many other things.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16e306ad4de2ed181679e6ab7fcaaee69ea6e7e1" translate="yes" xml:space="preserve">
          <source>to fix the data length problem, and &lt;a href=&quot;#input-arrays&quot;&gt;Input Arrays&lt;/a&gt; will work fine, but &lt;a href=&quot;#in-place-arrays&quot;&gt;In-Place Arrays&lt;/a&gt; might fail type-checking.</source>
          <target state="translated">para solucionar el problema de la longitud de los datos, y las &lt;a href=&quot;#input-arrays&quot;&gt;matrices de entrada&lt;/a&gt; funcionar&amp;aacute;n bien, pero &lt;a href=&quot;#in-place-arrays&quot;&gt;las matrices in situ&lt;/a&gt; pueden fallar en la verificaci&amp;oacute;n de tipos.</target>
        </trans-unit>
        <trans-unit id="3c1a8abeac71b59a13661794fcb6ce7e5d85153e" translate="yes" xml:space="preserve">
          <source>to install the missing libraries expected by the self-compiled NumPy (ATLAS is a possible provider of linear algebra).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95ae7b35dde44fa5c9d357b7f07fa08e3cb46013" translate="yes" xml:space="preserve">
          <source>to represent each value uniquely. Different elements may have a different number of digits. The value of the &lt;code&gt;precision&lt;/code&gt; option is ignored.</source>
          <target state="translated">para representar cada valor de forma &amp;uacute;nica. Los diferentes elementos pueden tener un n&amp;uacute;mero diferente de d&amp;iacute;gitos. El valor de la opci&amp;oacute;n de &lt;code&gt;precision&lt;/code&gt; se ignora.</target>
        </trans-unit>
        <trans-unit id="6a3ea912db864ed64ede9cbd8a45f0e3e76e3935" translate="yes" xml:space="preserve">
          <source>to see available options for these commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dd8cb2bcd4a9b931952c41222fa43febd3bb03f" translate="yes" xml:space="preserve">
          <source>to the working build directory for you project, and this problem will be fixed. It is suggested that you do this anyway, as it only increases the capabilities of your Python interface.</source>
          <target state="translated">al directorio de construcción de trabajo para tu proyecto,y este problema será arreglado.Se sugiere que lo hagas de todos modos,ya que sólo aumenta las capacidades de tu interfaz de Python.</target>
        </trans-unit>
        <trans-unit id="237c06a10d49c6dd135eddaa13796e3f1a0561e3" translate="yes" xml:space="preserve">
          <source>tobytes() (numpy.char.chararray method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d510de36b0f247f7e4d492a6dcbf3e6eb21f90e" translate="yes" xml:space="preserve">
          <source>todict() (numpy.distutils.misc_util.Configuration method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62cb3fa0534a5ae93b0ceff4e40f987580ef25d6" translate="yes" xml:space="preserve">
          <source>tofile() (numpy.char.chararray method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54c1a58579d48a873eab0e5db1e31fc5190ca9e5" translate="yes" xml:space="preserve">
          <source>toflex() (numpy.ma.masked_array method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec8314006a02643f06a16c9ec2b496894ef80fda" translate="yes" xml:space="preserve">
          <source>tolist() (numpy.char.chararray method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af6e4a52d2d4bfdb4753f12879e0e532e8508d8" translate="yes" xml:space="preserve">
          <source>tools for integrating C/C++ code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ef331f10ed1b3bda92ef989c46dc601383b3db3" translate="yes" xml:space="preserve">
          <source>tools for integrating Fortran code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9cc9d687d74e4347682eb06510f85bc54dcc70c" translate="yes" xml:space="preserve">
          <source>torecords() (numpy.ma.masked_array method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78227a09164db06a456c83f2a0d997d711edefa6" translate="yes" xml:space="preserve">
          <source>tostring() (numpy.char.chararray method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95c1b289cf4c3a85a77127a74708ce60b34815c3" translate="yes" xml:space="preserve">
          <source>towncrier &amp;ndash;version &amp;ldquo;&amp;lt;version&amp;gt;&amp;rdquo; git commit -m&amp;rdquo;Create release note&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aed4115e7494d253622c91eef4d03c6df9bddc4" translate="yes" xml:space="preserve">
          <source>trace (in module numpy.ma)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d1bbc2ab3d513cae1d04fd604bfd8bbba59e0e4" translate="yes" xml:space="preserve">
          <source>trace() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0533e56da67ff821b63cd2eea6a995cd06a3b852" translate="yes" xml:space="preserve">
          <source>translate() (in module numpy.char)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0379d428ea0f0836a773a332a60958d79cf24b5a" translate="yes" xml:space="preserve">
          <source>transpose</source>
          <target state="translated">transpose</target>
        </trans-unit>
        <trans-unit id="0a4b8d2208863598216445e82f68ff61f8a23e52" translate="yes" xml:space="preserve">
          <source>transpose of &lt;code&gt;a&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb1345809526ac7c0510ed7164bb5ab2ab0715a1" translate="yes" xml:space="preserve">
          <source>transpose() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ce499b15bc53abd50889b2a5e5e033be17c6cc7" translate="yes" xml:space="preserve">
          <source>trapz() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64dfda636942d4cfaf523696efda923a0c3fd777" translate="yes" xml:space="preserve">
          <source>tri() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eba7a3aa7b4ec4591f374d61ee61aa243c73c6dc" translate="yes" xml:space="preserve">
          <source>triangular() (in module numpy.random)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c73364037f4b96a4ef92dc079f4990c225fbb1b" translate="yes" xml:space="preserve">
          <source>tril() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5fe46530896f964076f1174aff212f5dc6aaeed" translate="yes" xml:space="preserve">
          <source>tril_indices() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0f12a424a32926a3f7b30e23a4ac00f34a18de5" translate="yes" xml:space="preserve">
          <source>tril_indices_from() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e77fc49ba78d4306af12b1d47a7aec542e69540c" translate="yes" xml:space="preserve">
          <source>trim() (numpy.polynomial.chebyshev.Chebyshev method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc2dec26bf901f595b463f6fc86a7a13f3046a20" translate="yes" xml:space="preserve">
          <source>trim_zeros() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="544a719596a59699f139960f3ebb1c71f4996f6a" translate="yes" xml:space="preserve">
          <source>trimcoef() (in module numpy.polynomial.polyutils)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42bdd748acbbb37b84d0a5ed27d26d6a3450d573" translate="yes" xml:space="preserve">
          <source>trimseq() (in module numpy.polynomial.polyutils)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e1d1cd15a9b6b44d8e8fcb147f2d6c857043b96" translate="yes" xml:space="preserve">
          <source>triu() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab35dbd5e40081fbe712efdf87eb79ac02dc8e20" translate="yes" xml:space="preserve">
          <source>triu_indices() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b4189fc7b0e64c65b446a8c19cf11ca7fc0efbb" translate="yes" xml:space="preserve">
          <source>triu_indices_from() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9e547515482a7d38379182b5f1e6942a1525f03" translate="yes" xml:space="preserve">
          <source>true_divide (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="980208faaa1d54e3413adb31a4064655c04de846" translate="yes" xml:space="preserve">
          <source>trunc (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5c850172f6a3b0252071661876d423212b0e2e5" translate="yes" xml:space="preserve">
          <source>truncate() (numpy.polynomial.chebyshev.Chebyshev method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49f80ea5aacfb5a957337dc906635fccbde446fc" translate="yes" xml:space="preserve">
          <source>tuple</source>
          <target state="translated">tuple</target>
        </trans-unit>
        <trans-unit id="5f946e1ced44070d1839f34b41052d7bd12f3944" translate="yes" xml:space="preserve">
          <source>tuple of array dimensions</source>
          <target state="translated">tupla de dimensiones de la matriz</target>
        </trans-unit>
        <trans-unit id="695101fbec8a1b13644c179a7dd1f7522255d005" translate="yes" xml:space="preserve">
          <source>tuple of bytes steps in each dimension</source>
          <target state="translated">tupla de pasos de bytes en cada dimensión</target>
        </trans-unit>
        <trans-unit id="e4446d1731f587461a48f513954e125002636bb7" translate="yes" xml:space="preserve">
          <source>tuple of int_types: functions as does a single int_type argument, except that the argument is interpreted as an nd-index into the array.</source>
          <target state="translated">tupla de int_types:funciona como un único argumento de int_type,excepto que el argumento se interpreta como un nd-index en la matriz.</target>
        </trans-unit>
        <trans-unit id="0e46bf3f7ea41c027482ef49f372e0e7d17dcfc2" translate="yes" xml:space="preserve">
          <source>tuple of ints: &lt;code&gt;i&lt;/code&gt; in the &lt;code&gt;j&lt;/code&gt;-th place in the tuple means &lt;code&gt;a&lt;/code&gt;&amp;rsquo;s &lt;code&gt;i&lt;/code&gt;-th axis becomes &lt;code&gt;a.transpose()&lt;/code&gt;&amp;rsquo;s &lt;code&gt;j&lt;/code&gt;-th axis.</source>
          <target state="translated">tupla de enteros: &lt;code&gt;i&lt;/code&gt; en el &lt;code&gt;j&lt;/code&gt; lugar-&amp;eacute;simo en la tupla significa &lt;code&gt;a&lt;/code&gt; &amp;lsquo;s &lt;code&gt;i&lt;/code&gt; -&amp;eacute;simo eje convierte &lt;code&gt;a.transpose()&lt;/code&gt; 's &lt;code&gt;j&lt;/code&gt; eje-&amp;eacute;simo.</target>
        </trans-unit>
        <trans-unit id="d28c5d1a070327205b30fe8531773766ea947a03" translate="yes" xml:space="preserve">
          <source>tuple of iterators along &lt;code&gt;self&lt;/code&gt;&amp;rsquo;s &amp;ldquo;components.&amp;rdquo;</source>
          <target state="translated">tupla de iteradores a lo largo de los &quot;componentes&quot; de &lt;code&gt;self&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8f218097aa23c2613fb744f6e7718e868eab1e86" translate="yes" xml:space="preserve">
          <source>turn array into vector (note that this forces a copy). To obtain the same data ordering as in MATLAB, use &lt;code&gt;x.flatten('F')&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f1c4c1835c113eb39ec16014624bb7640cb87c1" translate="yes" xml:space="preserve">
          <source>turn array into vector (note that this forces a copy). To obtain the same data ordering as in Matlab, use &lt;code&gt;x.flatten('F')&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af90d78973d80bc0081116eb97908fd827a145f4" translate="yes" xml:space="preserve">
          <source>twine (pip)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb8ce8fa84c719c1bbcf894bbe004f41bdb9ca06" translate="yes" xml:space="preserve">
          <source>two 128-bit floats, platform?</source>
          <target state="translated">dos flotadores de 128 bits,plataforma?</target>
        </trans-unit>
        <trans-unit id="6fe1337fb6124dc1c6a817572d7f982ad98b1857" translate="yes" xml:space="preserve">
          <source>two 2D arrays: one of x values, the other of y values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a273fc5b4b2f1ccd2810a037fdece1201f24956" translate="yes" xml:space="preserve">
          <source>two 32-bit floats</source>
          <target state="translated">dos flotadores de 32 bits</target>
        </trans-unit>
        <trans-unit id="3137ebae0faac986aa18ecd2cf17247e93cf8551" translate="yes" xml:space="preserve">
          <source>two 64-bit floats</source>
          <target state="translated">dos flotadores de 64 bits</target>
        </trans-unit>
        <trans-unit id="d1d4a988d03f6a10ddf77712e9a2326afd520a52" translate="yes" xml:space="preserve">
          <source>two 96-bit floats, platform?</source>
          <target state="translated">dos flotadores de 96 bits,plataforma?</target>
        </trans-unit>
        <trans-unit id="83827f96c1125d3cf018d09792e43b49df2a16b5" translate="yes" xml:space="preserve">
          <source>type (numpy.dtype attribute)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a5897f760bfe33582974401700f5f1fc39fc027" translate="yes" xml:space="preserve">
          <source>typename() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="236214813a9b1587e9c7f1426301d05679e84a91" translate="yes" xml:space="preserve">
          <source>types (numpy.ufunc attribute)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51e69892ab49df85c6230ccc57f8e1d1606caccc" translate="yes" xml:space="preserve">
          <source>u</source>
          <target state="translated">u</target>
        </trans-unit>
        <trans-unit id="81e6ea8e41bbcfb7d06b999873007413e7502ed7" translate="yes" xml:space="preserve">
          <source>ufunc</source>
          <target state="translated">ufunc</target>
        </trans-unit>
        <trans-unit id="a2f8bf599b04c402d9777aff2b22cbc42d660480" translate="yes" xml:space="preserve">
          <source>ufunc methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f176e851b7e196ef0d57ceb9e9c0d534373fab76" translate="yes" xml:space="preserve">
          <source>ufunc.accumulate()</source>
          <target state="translated">ufunc.accumulate()</target>
        </trans-unit>
        <trans-unit id="3afb2f2c14b058d406a7d011ba9e9fcb61cb4d5b" translate="yes" xml:space="preserve">
          <source>ufunc.at()</source>
          <target state="translated">ufunc.at()</target>
        </trans-unit>
        <trans-unit id="b2203289069bb97ba80f99e40ed94c691de1e5d3" translate="yes" xml:space="preserve">
          <source>ufunc.identity</source>
          <target state="translated">ufunc.identity</target>
        </trans-unit>
        <trans-unit id="7f555ddeb7c7ab8bb8e00ea4525da52b4aa57d26" translate="yes" xml:space="preserve">
          <source>ufunc.nargs</source>
          <target state="translated">ufunc.nargs</target>
        </trans-unit>
        <trans-unit id="11242754eba2d4a40a968da3622059ecc44c27bc" translate="yes" xml:space="preserve">
          <source>ufunc.nin</source>
          <target state="translated">ufunc.nin</target>
        </trans-unit>
        <trans-unit id="6f73343cc6915896eef6f0fc25b8f995ccdd30a6" translate="yes" xml:space="preserve">
          <source>ufunc.nout</source>
          <target state="translated">ufunc.nout</target>
        </trans-unit>
        <trans-unit id="243b3229b9bbd3c76f87557d62d03aaae946243b" translate="yes" xml:space="preserve">
          <source>ufunc.ntypes</source>
          <target state="translated">ufunc.ntypes</target>
        </trans-unit>
        <trans-unit id="0ca5a5c1905a8786fd349c797dbd655dce528380" translate="yes" xml:space="preserve">
          <source>ufunc.outer()</source>
          <target state="translated">ufunc.outer()</target>
        </trans-unit>
        <trans-unit id="740194df52956c6a322db7bcdcab2b25c5a1eb8d" translate="yes" xml:space="preserve">
          <source>ufunc.reduce()</source>
          <target state="translated">ufunc.reduce()</target>
        </trans-unit>
        <trans-unit id="055c89ccb210644ad33e5681a3a32b73719c2341" translate="yes" xml:space="preserve">
          <source>ufunc.reduceat()</source>
          <target state="translated">ufunc.reduceat()</target>
        </trans-unit>
        <trans-unit id="466a95f51c8cc8d8d5e429f560cb744517f8b29b" translate="yes" xml:space="preserve">
          <source>ufunc.signature</source>
          <target state="translated">ufunc.signature</target>
        </trans-unit>
        <trans-unit id="3ffc066183d2e5c8b2ed6e5dbd4492deded40174" translate="yes" xml:space="preserve">
          <source>ufunc.types</source>
          <target state="translated">ufunc.types</target>
        </trans-unit>
        <trans-unit id="5a6003eb8067f205bda40a144a334f7e1884b42b" translate="yes" xml:space="preserve">
          <source>umath refactor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8012ff51a005eaa8ed8f4c08ccdce580f462fff6" translate="yes" xml:space="preserve">
          <source>unchanged</source>
          <target state="translated">unchanged</target>
        </trans-unit>
        <trans-unit id="cdf1567980ae10ebc0342cb075710fb748c4e756" translate="yes" xml:space="preserve">
          <source>underflow : floating point underflows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72144e70960d6892275099d071bfb6616088a023" translate="yes" xml:space="preserve">
          <source>uniform() (in module numpy.random)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3f5b9bf828acfb607f1b1ec317231c4c29ccf4c" translate="yes" xml:space="preserve">
          <source>union1d() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="677307808ba38760fdbbec225d89da898477107f" translate="yes" xml:space="preserve">
          <source>unique() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1218b763c02887701720c1cd96984d4eaa3a90c5" translate="yes" xml:space="preserve">
          <source>unpackbits() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c862181aeb6a00bc06e05edeca07c9e6c66853a1" translate="yes" xml:space="preserve">
          <source>unravel_index() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50248e34c70feccca27b7d65b925f19d118ab803" translate="yes" xml:space="preserve">
          <source>unshare_mask() (numpy.ma.masked_array method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a69d7d1c031266d6f1c7384fcd34f9b338ab59" translate="yes" xml:space="preserve">
          <source>unsigned Py_intptr_t (an integer that is the size of a pointer on the platform).</source>
          <target state="translated">sin signo Py_intptr_t (un entero que es del tamaño de un puntero en la plataforma).</target>
        </trans-unit>
        <trans-unit id="fdc18dcd473df56e24394a603bf719736a1efe79" translate="yes" xml:space="preserve">
          <source>unsigned byte</source>
          <target state="translated">byte no firmado</target>
        </trans-unit>
        <trans-unit id="1d8508cb1aea954103651bf08436e13dd74d7a11" translate="yes" xml:space="preserve">
          <source>unsigned char; The constants &lt;a href=&quot;array#c.NPY_FALSE&quot;&gt;&lt;code&gt;NPY_FALSE&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;array#c.NPY_TRUE&quot;&gt;&lt;code&gt;NPY_TRUE&lt;/code&gt;&lt;/a&gt; are also defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31d916941b2254a2d922c096a6c0813816f84bdb" translate="yes" xml:space="preserve">
          <source>unsigned char; The constants &lt;a href=&quot;c-api.array#c.NPY_FALSE&quot;&gt;&lt;code&gt;NPY_FALSE&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;c-api.array#c.NPY_TRUE&quot;&gt;&lt;code&gt;NPY_TRUE&lt;/code&gt;&lt;/a&gt; are also defined.</source>
          <target state="translated">char sin firmar; Tambi&amp;eacute;n se &lt;a href=&quot;c-api.array#c.NPY_FALSE&quot;&gt; &lt;code&gt;NPY_FALSE&lt;/code&gt; &lt;/a&gt; constantes NPY_FALSE y &lt;a href=&quot;c-api.array#c.NPY_TRUE&quot;&gt; &lt;code&gt;NPY_TRUE&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2626ac7a48f1f07a409dbf9acb1e5814c8a9defa" translate="yes" xml:space="preserve">
          <source>unsigned int</source>
          <target state="translated">sin firmar int</target>
        </trans-unit>
        <trans-unit id="d0808dbcd7aef8dc0ee223e4d84cd8a2ddafdc83" translate="yes" xml:space="preserve">
          <source>unsigned integer</source>
          <target state="translated">entero sin firmar</target>
        </trans-unit>
        <trans-unit id="995d911a51805fb95053a05be72eb2908963d90c" translate="yes" xml:space="preserve">
          <source>unsigned short</source>
          <target state="translated">corto sin firmar</target>
        </trans-unit>
        <trans-unit id="c4054334ea99c572d7a2e5a511fcc844fd2391aa" translate="yes" xml:space="preserve">
          <source>unstructured void array&amp;rsquo;s &lt;code&gt;.item&lt;/code&gt; method now returns a bytes object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3edc92499eae7b21aa1a61b2bd12c1f4420e96d" translate="yes" xml:space="preserve">
          <source>unstructured_to_structured() (in module numpy.lib.recfunctions)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94079da393999725d6eef70cfd1294c5e1e13899" translate="yes" xml:space="preserve">
          <source>unwrap() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dac7ed34b67a6c06cb84c11f541a8e1ae479307a" translate="yes" xml:space="preserve">
          <source>update local copy from time to time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50f8607e9347cfee2685da18f878e226dc108245" translate="yes" xml:space="preserve">
          <source>upper() (in module numpy.char)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da2b128800d4e129def769b7ec5decc00517fa8b" translate="yes" xml:space="preserve">
          <source>us</source>
          <target state="translated">us</target>
        </trans-unit>
        <trans-unit id="9209280b6c430b6623cea1dc3535c3abc51c1462" translate="yes" xml:space="preserve">
          <source>us / &amp;mu;s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f7414325529e036c7ced6805b51f7f464bced7e" translate="yes" xml:space="preserve">
          <source>use a for-loop to print the numbers 1, 2, and 3 using &lt;a href=&quot;https://docs.python.org/dev/library/stdtypes.html#range&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb5dbce7c7fc91e42137b7ed0b685952e8d18f3b" translate="yes" xml:space="preserve">
          <source>used the nditer as a context manager using the &lt;code&gt;with&lt;/code&gt; statement, and the temporary data will be written back when the context is exited.</source>
          <target state="translated">us&amp;oacute; nditer como administrador de contexto usando la instrucci&amp;oacute;n &lt;code&gt;with&lt;/code&gt; , y los datos temporales se volver&amp;aacute;n a escribir cuando se salga del contexto.</target>
        </trans-unit>
        <trans-unit id="b6b0728f2044ec714109a641bc1709e9eca20e24" translate="yes" xml:space="preserve">
          <source>user.name and user.email</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3db09f1a90466b88dac74dd59f2a6eb61d35072" translate="yes" xml:space="preserve">
          <source>user_array</source>
          <target state="translated">user_array</target>
        </trans-unit>
        <trans-unit id="d74520069fce52360378e30897730ce7aaae5ee3" translate="yes" xml:space="preserve">
          <source>userfriendly and safe function for the creation of sliding window views.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d3fc5fc4e8cea212318f899489490a6ae670e39" translate="yes" xml:space="preserve">
          <source>valid dtype for all arrays</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc8432dc6ed2b59395a9ba2cc3713ad5fc36b285" translate="yes" xml:space="preserve">
          <source>value (numpy.nditer attribute)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d8b8731ae45d0b6f7734d6c02fc8c99ebc80ed3" translate="yes" xml:space="preserve">
          <source>values automatically have whitespace removed from the end when indexed</source>
          <target state="translated">los valores automáticamente tienen los espacios en blanco eliminados del final cuando se indexan</target>
        </trans-unit>
        <trans-unit id="5baec5c424b72a798ed9e6ad67fb93a926716bd8" translate="yes" xml:space="preserve">
          <source>values to insert at those indices. Its shape and dimension are broadcast to match that of &lt;a href=&quot;numpy.indices#numpy.indices&quot;&gt;&lt;code&gt;indices&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">valores para insertar en esos &amp;iacute;ndices. Su forma y dimensi&amp;oacute;n se transmiten para que coincidan con las de los &lt;a href=&quot;numpy.indices#numpy.indices&quot;&gt; &lt;code&gt;indices&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9c543cf10c47a68ab67ef2a85462b35ec3f92600" translate="yes" xml:space="preserve">
          <source>vander() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b7ffe55a6f7a451ea982c7a5ac4a8a98a6003aa" translate="yes" xml:space="preserve">
          <source>var (in module numpy.ma)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2e74c7e537837e995688305e142095cc1ab9582" translate="yes" xml:space="preserve">
          <source>var() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4de50d502d1b349419ea8b503c480391588e6829" translate="yes" xml:space="preserve">
          <source>variable PATH. Equivalent to posix &lt;code&gt;which&lt;/code&gt; command.</source>
          <target state="translated">PATH variable. Equivalente a posix &lt;code&gt;which&lt;/code&gt; comando.</target>
        </trans-unit>
        <trans-unit id="1654cea6e6ea48d8f49e690d58ff87912c867177" translate="yes" xml:space="preserve">
          <source>variable() (numpy.poly1d property)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cba7c75a203f0c47c976ebe4b8003de33eb900b1" translate="yes" xml:space="preserve">
          <source>variables from the argument list, presumably initialized before according to given dependence relations;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="055a1972fffbc358edccccdd0ba45101a20e461a" translate="yes" xml:space="preserve">
          <source>vdot() (in module numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e09f1aceeed50982588504b15839a69838e80256" translate="yes" xml:space="preserve">
          <source>vecmat</source>
          <target state="translated">vecmat</target>
        </trans-unit>
        <trans-unit id="0aedc399dde7e2c7ade059bf039ea4e71612a406" translate="yes" xml:space="preserve">
          <source>vector of diagonal elements of &lt;code&gt;a&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bc50cca69cebe36a27161a0fa8f357300da80cd" translate="yes" xml:space="preserve">
          <source>vector-matrix multiplication</source>
          <target state="translated">multiplicación de la matriz vectorial</target>
        </trans-unit>
        <trans-unit id="c7e235514259ccc281233d75d56bc01af9e085dd" translate="yes" xml:space="preserve">
          <source>vector-vector multiplication</source>
          <target state="translated">multiplicación vectorial</target>
        </trans-unit>
        <trans-unit id="e2959516647ed09a27f0f5bbd3d6da6f37c3afcf" translate="yes" xml:space="preserve">
          <source>vectorization results in more &amp;ldquo;Pythonic&amp;rdquo; code. Without vectorization, our code would be littered with inefficient and difficult to read &lt;code&gt;for&lt;/code&gt; loops.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e965c639cf869958450a54c68584ad3686f023a" translate="yes" xml:space="preserve">
          <source>vectorize (class in numpy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e26fc16e498359404951f7d38e364302a88ad14" translate="yes" xml:space="preserve">
          <source>vectorize.__call__()</source>
          <target state="translated">vectorize.__call__()</target>
        </trans-unit>
        <trans-unit id="5c81ce7b7ff13788024b303b50d074ca631432b8" translate="yes" xml:space="preserve">
          <source>vectorized code is more concise and easier to read</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cc01b051dd6dec5eea1a4e19411445c0132f766" translate="yes" xml:space="preserve">
          <source>vectorized string operations are provided as methods (e.g. &lt;a href=&quot;https://docs.python.org/dev/library/stdtypes.html#str.endswith&quot;&gt;&lt;code&gt;str.endswith&lt;/code&gt;&lt;/a&gt;) and infix operators (e.g. &lt;code&gt;+, *, %&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="776d9eda152711c15b1ef5d4bf6c2102d3aca5fc" translate="yes" xml:space="preserve">
          <source>vectorized string operations are provided as methods (e.g. &lt;a href=&quot;https://docs.python.org/dev/library/stdtypes.html#str.endswith&quot;&gt;&lt;code&gt;str.endswith&lt;/code&gt;&lt;/a&gt;) and infix operators (e.g. &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;,``%``)</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
